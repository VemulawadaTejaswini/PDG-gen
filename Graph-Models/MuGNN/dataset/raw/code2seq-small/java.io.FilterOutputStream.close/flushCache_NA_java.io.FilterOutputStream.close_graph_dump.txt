Line_2 $$ public static void flushCache(@Nullable Integer finishedFile) -->Line_29 $$ if (finishedFile == null)[ FD ]
Line_16 $$ if (timestamp.isDirty()) -->Line_19 $$ timestamp.writeToStream(sink)[ CD ]
Line_6 $$ List<Integer> files = new ArrayList<Integer>(ourFinishedFiles.size())-->Line_7 $$ ourFinishedFiles.drainTo(files)[ FD ]
Line_5 $$ while (finishedFile == null || !ourFinishedFiles.offer(finishedFile)) -->Line_7 $$ ourFinishedFiles.drainTo(files)[ CD ]
Line_10 $$ Lock writeLock = getStripedLock(file).writeLock()-->Line_25 $$ writeLock.unlock()[ FD ]
Line_6 $$ List<Integer> files = new ArrayList<Integer>(ourFinishedFiles.size())-->Line_8 $$ if (!files.isEmpty()) [ FD ]
Line_13 $$ Timestamps timestamp = myTimestampsCache.remove(file)-->Line_19 $$ timestamp.writeToStream(sink)[ FD ]
Line_18 $$ final DataOutputStream sink = FSRecords.writeAttribute(file, Timestamps.PERSISTENCE)-->Line_20 $$ sink.close()[ FD ]
Line_16 $$ if (timestamp.isDirty()) -->Line_20 $$ sink.close()[ CD ]
Line_5 $$ while (finishedFile == null || !ourFinishedFiles.offer(finishedFile)) -->Line_29 $$ if (finishedFile == null)[ CD ]
Line_2 $$ public static void flushCache(@Nullable Integer finishedFile) -->Line_5 $$ while (finishedFile == null || !ourFinishedFiles.offer(finishedFile)) [ CD ]
Line_9 $$ for (Integer file : files) -->Line_10 $$ Lock writeLock = getStripedLock(file).writeLock()[ FD ]
Line_18 $$ final DataOutputStream sink = FSRecords.writeAttribute(file, Timestamps.PERSISTENCE)-->Line_19 $$ timestamp.writeToStream(sink)[ FD ]
Line_13 $$ Timestamps timestamp = myTimestampsCache.remove(file)-->Line_16 $$ if (timestamp.isDirty()) [ FD ]
Line_16 $$ if (timestamp.isDirty()) -->Line_18 $$ final DataOutputStream sink = FSRecords.writeAttribute(file, Timestamps.PERSISTENCE)[ CD ]
Line_2 $$ public static void flushCache(@Nullable Integer finishedFile) -->Line_3 $$ if (finishedFile != null && finishedFile == INVALID_FILE_ID)[ CD ]
Line_10 $$ Lock writeLock = getStripedLock(file).writeLock()-->Line_11 $$ writeLock.lock()[ FD ]
Line_2 $$ public static void flushCache(@Nullable Integer finishedFile) -->Line_5 $$ while (finishedFile == null || !ourFinishedFiles.offer(finishedFile)) [ FD ]
Line_9 $$ for (Integer file : files) -->Line_18 $$ final DataOutputStream sink = FSRecords.writeAttribute(file, Timestamps.PERSISTENCE)[ FD ]
Line_5 $$ while (finishedFile == null || !ourFinishedFiles.offer(finishedFile)) -->Line_8 $$ if (!files.isEmpty()) [ CD ]
Line_5 $$ while (finishedFile == null || !ourFinishedFiles.offer(finishedFile)) -->Line_6 $$ List<Integer> files = new ArrayList<Integer>(ourFinishedFiles.size())[ CD ]
Line_13 $$ Timestamps timestamp = myTimestampsCache.remove(file)-->Line_14 $$ if (timestamp == null)[ FD ]
Line_9 $$ for (Integer file : files) -->Line_13 $$ Timestamps timestamp = myTimestampsCache.remove(file)[ FD ]
