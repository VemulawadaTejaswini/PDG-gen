Line_2 $$ private void writeAsyncMethodNotification(final ChannelAssociation channelAssociation, final short invocationId) throws IOException -->Line_3 $$ final DataOutputStream outputStream[ CD ]
Line_4 $$ final MessageOutputStream messageOutputStream-->Line_6 $$ messageOutputStream = channelAssociation.acquireChannelMessageOutputStream()[ FD ]
Line_2 $$ private void writeAsyncMethodNotification(final ChannelAssociation channelAssociation, final short invocationId) throws IOException -->Line_15 $$ channelAssociation.releaseChannelMessageOutputStream(messageOutputStream)[ FD ]
Line_4 $$ final MessageOutputStream messageOutputStream-->Line_15 $$ channelAssociation.releaseChannelMessageOutputStream(messageOutputStream)[ FD ]
Line_6 $$ messageOutputStream = channelAssociation.acquireChannelMessageOutputStream()-->Line_15 $$ channelAssociation.releaseChannelMessageOutputStream(messageOutputStream)[ FD ]
Line_3 $$ final DataOutputStream outputStream-->Line_16 $$ outputStream.close()[ FD ]
Line_2 $$ private void writeAsyncMethodNotification(final ChannelAssociation channelAssociation, final short invocationId) throws IOException -->Line_10 $$ outputStream = new DataOutputStream(messageOutputStream)[ CD ]
Line_10 $$ outputStream = new DataOutputStream(messageOutputStream)-->Line_12 $$ outputStream.write(HEADER_ASYNC_METHOD_NOTIFICATION)[ FD ]
Line_2 $$ private void writeAsyncMethodNotification(final ChannelAssociation channelAssociation, final short invocationId) throws IOException -->Line_13 $$ outputStream.writeShort(invocationId)[ FD ]
Line_10 $$ outputStream = new DataOutputStream(messageOutputStream)-->Line_16 $$ outputStream.close()[ FD ]
Line_2 $$ private void writeAsyncMethodNotification(final ChannelAssociation channelAssociation, final short invocationId) throws IOException -->Line_4 $$ final MessageOutputStream messageOutputStream[ CD ]
Line_3 $$ final DataOutputStream outputStream-->Line_12 $$ outputStream.write(HEADER_ASYNC_METHOD_NOTIFICATION)[ FD ]
Line_3 $$ final DataOutputStream outputStream-->Line_13 $$ outputStream.writeShort(invocationId)[ FD ]
Line_10 $$ outputStream = new DataOutputStream(messageOutputStream)-->Line_13 $$ outputStream.writeShort(invocationId)[ FD ]
Line_2 $$ private void writeAsyncMethodNotification(final ChannelAssociation channelAssociation, final short invocationId) throws IOException -->Line_6 $$ messageOutputStream = channelAssociation.acquireChannelMessageOutputStream()[ FD ]
Line_3 $$ final DataOutputStream outputStream-->Line_10 $$ outputStream = new DataOutputStream(messageOutputStream)[ FD ]
