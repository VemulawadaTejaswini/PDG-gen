Line_17 $$ page = -page-->Line_21 $$ if (page == 0 || contentStorage.getRefCount(page) > 1) [ FD ]
Line_27 $$ if (useSnappyForCompression) -->Line_28 $$ BufferExposingByteArrayOutputStream out = new BufferExposingByteArrayOutputStream()[ CD ]
Line_10 $$ if (weHaveContentHashes) -->Line_18 $$ fixedSize = true[ CD ]
Line_2 $$ public void writeBytes(ByteSequence bytes) throws IOException -->Line_31 $$ if (bytes.getOffset() != 0) [ FD ]
Line_31 $$ if (bytes.getOffset() != 0) -->Line_32 $$ rawBytes = new byte[bytes.getLength()][ CD ]
Line_2 $$ public void writeBytes(ByteSequence bytes) throws IOException -->Line_11 $$ page = findOrCreateContentRecord(bytes.getBytes(), bytes.getOffset(), bytes.getLength())[ FD ]
Line_22 $$ page = contentStorage.acquireNewRecord()-->Line_23 $$ setContentRecordId(myFileId, page)[ FD ]
Line_18 $$ fixedSize = true-->Line_39 $$ contentStorage.writeBytes(page, bytes, fixedSize)[ FD ]
Line_11 $$ page = findOrCreateContentRecord(bytes.getBytes(), bytes.getOffset(), bytes.getLength())-->Line_21 $$ if (page == 0 || contentStorage.getRefCount(page) > 1) [ FD ]
Line_20 $$ page = getContentRecordId(myFileId)-->Line_21 $$ if (page == 0 || contentStorage.getRefCount(page) > 1) [ FD ]
Line_11 $$ page = findOrCreateContentRecord(bytes.getBytes(), bytes.getOffset(), bytes.getLength())-->Line_39 $$ contentStorage.writeBytes(page, bytes, fixedSize)[ FD ]
Line_3 $$ int page-->Line_21 $$ if (page == 0 || contentStorage.getRefCount(page) > 1) [ FD ]
Line_4 $$ RefCountingStorage contentStorage = getContentStorage()-->Line_21 $$ if (page == 0 || contentStorage.getRefCount(page) > 1) [ FD ]
Line_22 $$ page = contentStorage.acquireNewRecord()-->Line_39 $$ contentStorage.writeBytes(page, bytes, fixedSize)[ FD ]
Line_3 $$ int page-->Line_11 $$ page = findOrCreateContentRecord(bytes.getBytes(), bytes.getOffset(), bytes.getLength())[ FD ]
Line_2 $$ public void writeBytes(ByteSequence bytes) throws IOException -->Line_33 $$ System.arraycopy(bytes.getBytes(), bytes.getOffset(), rawBytes, 0, bytes.getLength())[ FD ]
Line_2 $$ public void writeBytes(ByteSequence bytes) throws IOException -->Line_5 $$ final boolean fixedSize[ CD ]
Line_25 $$ fixedSize = myFixedSize-->Line_39 $$ contentStorage.writeBytes(page, bytes, fixedSize)[ FD ]
Line_17 $$ page = -page-->Line_22 $$ page = contentStorage.acquireNewRecord()[ FD ]
Line_10 $$ if (weHaveContentHashes) -->Line_21 $$ if (page == 0 || contentStorage.getRefCount(page) > 1) [ CD ]
Line_10 $$ if (weHaveContentHashes) -->Line_11 $$ page = findOrCreateContentRecord(bytes.getBytes(), bytes.getOffset(), bytes.getLength())[ CD ]
Line_11 $$ page = findOrCreateContentRecord(bytes.getBytes(), bytes.getOffset(), bytes.getLength())-->Line_20 $$ page = getContentRecordId(myFileId)[ FD ]
Line_30 $$ byte[] rawBytes = bytes.getBytes()-->Line_35 $$ CompressionUtil.writeCompressed(outputStream, rawBytes, bytes.getLength())[ FD ]
Line_2 $$ public void writeBytes(ByteSequence bytes) throws IOException -->Line_4 $$ RefCountingStorage contentStorage = getContentStorage()[ CD ]
Line_10 $$ if (weHaveContentHashes) -->Line_12 $$ incModCount(myFileId)[ CD ]
Line_11 $$ page = findOrCreateContentRecord(bytes.getBytes(), bytes.getOffset(), bytes.getLength())-->Line_23 $$ setContentRecordId(myFileId, page)[ FD ]
Line_17 $$ page = -page-->Line_23 $$ setContentRecordId(myFileId, page)[ FD ]
Line_3 $$ int page-->Line_15 $$ if (page > 0)[ FD ]
Line_2 $$ public void writeBytes(ByteSequence bytes) throws IOException -->Line_32 $$ rawBytes = new byte[bytes.getLength()][ FD ]
Line_17 $$ page = -page-->Line_20 $$ page = getContentRecordId(myFileId)[ FD ]
Line_32 $$ rawBytes = new byte[bytes.getLength()]-->Line_35 $$ CompressionUtil.writeCompressed(outputStream, rawBytes, bytes.getLength())[ FD ]
Line_5 $$ final boolean fixedSize-->Line_25 $$ fixedSize = myFixedSize[ FD ]
Line_3 $$ int page-->Line_20 $$ page = getContentRecordId(myFileId)[ FD ]
Line_20 $$ page = getContentRecordId(myFileId)-->Line_39 $$ contentStorage.writeBytes(page, bytes, fixedSize)[ FD ]
Line_32 $$ rawBytes = new byte[bytes.getLength()]-->Line_33 $$ System.arraycopy(bytes.getBytes(), bytes.getOffset(), rawBytes, 0, bytes.getLength())[ FD ]
Line_31 $$ if (bytes.getOffset() != 0) -->Line_33 $$ System.arraycopy(bytes.getBytes(), bytes.getOffset(), rawBytes, 0, bytes.getLength())[ CD ]
Line_2 $$ public void writeBytes(ByteSequence bytes) throws IOException -->Line_35 $$ CompressionUtil.writeCompressed(outputStream, rawBytes, bytes.getLength())[ FD ]
Line_28 $$ BufferExposingByteArrayOutputStream out = new BufferExposingByteArrayOutputStream()-->Line_37 $$ bytes = new ByteSequence(out.getInternalBuffer(), 0, out.size())[ FD ]
Line_20 $$ page = getContentRecordId(myFileId)-->Line_23 $$ setContentRecordId(myFileId, page)[ FD ]
Line_5 $$ final boolean fixedSize-->Line_18 $$ fixedSize = true[ FD ]
Line_10 $$ if (weHaveContentHashes) -->Line_17 $$ page = -page[ CD ]
Line_30 $$ byte[] rawBytes = bytes.getBytes()-->Line_33 $$ System.arraycopy(bytes.getBytes(), bytes.getOffset(), rawBytes, 0, bytes.getLength())[ FD ]
Line_27 $$ if (useSnappyForCompression) -->Line_35 $$ CompressionUtil.writeCompressed(outputStream, rawBytes, bytes.getLength())[ CD ]
Line_11 $$ page = findOrCreateContentRecord(bytes.getBytes(), bytes.getOffset(), bytes.getLength())-->Line_15 $$ if (page > 0)[ FD ]
Line_10 $$ if (weHaveContentHashes) -->Line_13 $$ checkFileIsValid(myFileId)[ CD ]
Line_4 $$ RefCountingStorage contentStorage = getContentStorage()-->Line_22 $$ page = contentStorage.acquireNewRecord()[ FD ]
Line_29 $$ DataOutputStream outputStream = new DataOutputStream(out)-->Line_35 $$ CompressionUtil.writeCompressed(outputStream, rawBytes, bytes.getLength())[ FD ]
Line_4 $$ RefCountingStorage contentStorage = getContentStorage()-->Line_39 $$ contentStorage.writeBytes(page, bytes, fixedSize)[ FD ]
Line_3 $$ int page-->Line_17 $$ page = -page[ FD ]
Line_3 $$ int page-->Line_39 $$ contentStorage.writeBytes(page, bytes, fixedSize)[ FD ]
Line_29 $$ DataOutputStream outputStream = new DataOutputStream(out)-->Line_36 $$ outputStream.close()[ FD ]
Line_17 $$ page = -page-->Line_39 $$ contentStorage.writeBytes(page, bytes, fixedSize)[ FD ]
Line_3 $$ int page-->Line_22 $$ page = contentStorage.acquireNewRecord()[ FD ]
Line_37 $$ bytes = new ByteSequence(out.getInternalBuffer(), 0, out.size())-->Line_39 $$ contentStorage.writeBytes(page, bytes, fixedSize)[ FD ]
Line_10 $$ if (weHaveContentHashes) -->Line_20 $$ page = getContentRecordId(myFileId)[ CD ]
Line_10 $$ if (weHaveContentHashes) -->Line_25 $$ fixedSize = myFixedSize[ CD ]
Line_27 $$ if (useSnappyForCompression) -->Line_29 $$ DataOutputStream outputStream = new DataOutputStream(out)[ CD ]
Line_20 $$ page = getContentRecordId(myFileId)-->Line_22 $$ page = contentStorage.acquireNewRecord()[ FD ]
Line_18 $$ fixedSize = true-->Line_25 $$ fixedSize = myFixedSize[ FD ]
Line_11 $$ page = findOrCreateContentRecord(bytes.getBytes(), bytes.getOffset(), bytes.getLength())-->Line_14 $$ setContentRecordId(myFileId, page > 0 ? page : -page)[ FD ]
Line_21 $$ if (page == 0 || contentStorage.getRefCount(page) > 1) -->Line_22 $$ page = contentStorage.acquireNewRecord()[ CD ]
Line_2 $$ public void writeBytes(ByteSequence bytes) throws IOException -->Line_30 $$ byte[] rawBytes = bytes.getBytes()[ FD ]
Line_27 $$ if (useSnappyForCompression) -->Line_31 $$ if (bytes.getOffset() != 0) [ CD ]
Line_15 $$ if (page > 0)-->Line_16 $$ return[ CD ]
Line_21 $$ if (page == 0 || contentStorage.getRefCount(page) > 1) -->Line_23 $$ setContentRecordId(myFileId, page)[ CD ]
Line_11 $$ page = findOrCreateContentRecord(bytes.getBytes(), bytes.getOffset(), bytes.getLength())-->Line_17 $$ page = -page[ FD ]
Line_2 $$ public void writeBytes(ByteSequence bytes) throws IOException -->Line_3 $$ int page[ CD ]
Line_30 $$ byte[] rawBytes = bytes.getBytes()-->Line_32 $$ rawBytes = new byte[bytes.getLength()][ FD ]
Line_27 $$ if (useSnappyForCompression) -->Line_37 $$ bytes = new ByteSequence(out.getInternalBuffer(), 0, out.size())[ CD ]
Line_10 $$ if (weHaveContentHashes) -->Line_15 $$ if (page > 0)[ CD ]
Line_27 $$ if (useSnappyForCompression) -->Line_30 $$ byte[] rawBytes = bytes.getBytes()[ CD ]
Line_3 $$ int page-->Line_23 $$ setContentRecordId(myFileId, page)[ FD ]
Line_5 $$ final boolean fixedSize-->Line_39 $$ contentStorage.writeBytes(page, bytes, fixedSize)[ FD ]
Line_27 $$ if (useSnappyForCompression) -->Line_36 $$ outputStream.close()[ CD ]
Line_2 $$ public void writeBytes(ByteSequence bytes) throws IOException -->Line_39 $$ contentStorage.writeBytes(page, bytes, fixedSize)[ FD ]
Line_2 $$ public void writeBytes(ByteSequence bytes) throws IOException -->Line_6 $$ w.lock()[ CD ]
Line_2 $$ public void writeBytes(ByteSequence bytes) throws IOException -->Line_37 $$ bytes = new ByteSequence(out.getInternalBuffer(), 0, out.size())[ FD ]
Line_11 $$ page = findOrCreateContentRecord(bytes.getBytes(), bytes.getOffset(), bytes.getLength())-->Line_22 $$ page = contentStorage.acquireNewRecord()[ FD ]
Line_10 $$ if (weHaveContentHashes) -->Line_14 $$ setContentRecordId(myFileId, page > 0 ? page : -page)[ CD ]
Line_3 $$ int page-->Line_14 $$ setContentRecordId(myFileId, page > 0 ? page : -page)[ FD ]
