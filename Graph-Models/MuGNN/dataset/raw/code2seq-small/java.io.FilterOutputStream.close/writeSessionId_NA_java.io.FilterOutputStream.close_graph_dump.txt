Line_11 $$ dataOutputStream = new DataOutputStream(messageOutputStream)-->Line_22 $$ dataOutputStream.close()[ FD ]
Line_4 $$ final DataOutputStream dataOutputStream-->Line_17 $$ final Marshaller marshaller = this.prepareForMarshalling(this.marshallerFactory, dataOutputStream)[ FD ]
Line_17 $$ final Marshaller marshaller = this.prepareForMarshalling(this.marshallerFactory, dataOutputStream)-->Line_19 $$ marshaller.finish()[ FD ]
Line_11 $$ dataOutputStream = new DataOutputStream(messageOutputStream)-->Line_17 $$ final Marshaller marshaller = this.prepareForMarshalling(this.marshallerFactory, dataOutputStream)[ FD ]
Line_7 $$ messageOutputStream = channelAssociation.acquireChannelMessageOutputStream()-->Line_21 $$ channelAssociation.releaseChannelMessageOutputStream(messageOutputStream)[ FD ]
Line_2 $$ private void writeSessionId(final ChannelAssociation channelAssociation, final short invocationId, final SessionID sessionID, final Affinity hardAffinity) throws IOException -->Line_18 $$ marshaller.writeObject(hardAffinity)[ FD ]
Line_11 $$ dataOutputStream = new DataOutputStream(messageOutputStream)-->Line_16 $$ dataOutputStream.write(sessionIdBytes)[ FD ]
Line_4 $$ final DataOutputStream dataOutputStream-->Line_15 $$ PackedInteger.writePackedInteger(dataOutputStream, sessionIdBytes.length)[ FD ]
Line_5 $$ final MessageOutputStream messageOutputStream-->Line_7 $$ messageOutputStream = channelAssociation.acquireChannelMessageOutputStream()[ FD ]
Line_3 $$ final byte[] sessionIdBytes = sessionID.getEncodedForm()-->Line_16 $$ dataOutputStream.write(sessionIdBytes)[ FD ]
Line_2 $$ private void writeSessionId(final ChannelAssociation channelAssociation, final short invocationId, final SessionID sessionID, final Affinity hardAffinity) throws IOException -->Line_3 $$ final byte[] sessionIdBytes = sessionID.getEncodedForm()[ CD ]
Line_4 $$ final DataOutputStream dataOutputStream-->Line_16 $$ dataOutputStream.write(sessionIdBytes)[ FD ]
Line_4 $$ final DataOutputStream dataOutputStream-->Line_13 $$ dataOutputStream.writeByte(HEADER_SESSION_OPEN_RESPONSE)[ FD ]
Line_11 $$ dataOutputStream = new DataOutputStream(messageOutputStream)-->Line_15 $$ PackedInteger.writePackedInteger(dataOutputStream, sessionIdBytes.length)[ FD ]
Line_5 $$ final MessageOutputStream messageOutputStream-->Line_21 $$ channelAssociation.releaseChannelMessageOutputStream(messageOutputStream)[ FD ]
Line_4 $$ final DataOutputStream dataOutputStream-->Line_14 $$ dataOutputStream.writeShort(invocationId)[ FD ]
Line_17 $$ final Marshaller marshaller = this.prepareForMarshalling(this.marshallerFactory, dataOutputStream)-->Line_18 $$ marshaller.writeObject(hardAffinity)[ FD ]
Line_11 $$ dataOutputStream = new DataOutputStream(messageOutputStream)-->Line_13 $$ dataOutputStream.writeByte(HEADER_SESSION_OPEN_RESPONSE)[ FD ]
Line_4 $$ final DataOutputStream dataOutputStream-->Line_11 $$ dataOutputStream = new DataOutputStream(messageOutputStream)[ FD ]
Line_2 $$ private void writeSessionId(final ChannelAssociation channelAssociation, final short invocationId, final SessionID sessionID, final Affinity hardAffinity) throws IOException -->Line_7 $$ messageOutputStream = channelAssociation.acquireChannelMessageOutputStream()[ FD ]
Line_2 $$ private void writeSessionId(final ChannelAssociation channelAssociation, final short invocationId, final SessionID sessionID, final Affinity hardAffinity) throws IOException -->Line_4 $$ final DataOutputStream dataOutputStream[ CD ]
Line_11 $$ dataOutputStream = new DataOutputStream(messageOutputStream)-->Line_14 $$ dataOutputStream.writeShort(invocationId)[ FD ]
Line_2 $$ private void writeSessionId(final ChannelAssociation channelAssociation, final short invocationId, final SessionID sessionID, final Affinity hardAffinity) throws IOException -->Line_3 $$ final byte[] sessionIdBytes = sessionID.getEncodedForm()[ FD ]
Line_2 $$ private void writeSessionId(final ChannelAssociation channelAssociation, final short invocationId, final SessionID sessionID, final Affinity hardAffinity) throws IOException -->Line_5 $$ final MessageOutputStream messageOutputStream[ CD ]
Line_2 $$ private void writeSessionId(final ChannelAssociation channelAssociation, final short invocationId, final SessionID sessionID, final Affinity hardAffinity) throws IOException -->Line_11 $$ dataOutputStream = new DataOutputStream(messageOutputStream)[ CD ]
Line_4 $$ final DataOutputStream dataOutputStream-->Line_22 $$ dataOutputStream.close()[ FD ]
Line_2 $$ private void writeSessionId(final ChannelAssociation channelAssociation, final short invocationId, final SessionID sessionID, final Affinity hardAffinity) throws IOException -->Line_21 $$ channelAssociation.releaseChannelMessageOutputStream(messageOutputStream)[ FD ]
Line_2 $$ private void writeSessionId(final ChannelAssociation channelAssociation, final short invocationId, final SessionID sessionID, final Affinity hardAffinity) throws IOException -->Line_14 $$ dataOutputStream.writeShort(invocationId)[ FD ]
