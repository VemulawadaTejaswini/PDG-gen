Line_11 $$ for (long i = 0; i < NENTRY; ++i) -->Line_41 $$ assertEquals(buildValue(i), new String(value.getBytes(), 0, value.getLength()))[ FD ]
Line_38 $$ BytesWritable value = new BytesWritable()-->Line_41 $$ assertEquals(buildValue(i), new String(value.getBytes(), 0, value.getLength()))[ FD ]
Line_4 $$ Path path = new Path(ROOT, name)-->Line_34 $$ TFile.Reader reader = new TFile.Reader(in, fs.getFileStatus(path).getLen(), conf)[ FD ]
Line_36 $$ TFile.Reader.Scanner scanner = reader.createScanner()-->Line_39 $$ for (; !scanner.atEnd(); scanner.advance()) [ FD ]
Line_39 $$ for (; !scanner.atEnd(); scanner.advance()) -->Line_40 $$ scanner.entry().getValue(value)[ CD ]
Line_10 $$ LongWritable key = new LongWritable(0)-->Line_12 $$ key.set(cube(i - NENTRY / 2))[ FD ]
Line_2 $$ public void testSortedLongWritable() throws IOException -->Line_32 $$ FSDataInputStream in = fs.open(path)[ CD ]
Line_6 $$ FSDataOutputStream out = fs.create(path)-->Line_30 $$ out.close()[ FD ]
Line_5 $$ FileSystem fs = path.getFileSystem(conf)-->Line_34 $$ TFile.Reader reader = new TFile.Reader(in, fs.getFileStatus(path).getLen(), conf)[ FD ]
Line_2 $$ public void testSortedLongWritable() throws IOException -->Line_6 $$ FSDataOutputStream out = fs.create(path)[ CD ]
Line_5 $$ FileSystem fs = path.getFileSystem(conf)-->Line_32 $$ FSDataInputStream in = fs.open(path)[ FD ]
Line_34 $$ TFile.Reader reader = new TFile.Reader(in, fs.getFileStatus(path).getLen(), conf)-->Line_36 $$ TFile.Reader.Scanner scanner = reader.createScanner()[ FD ]
Line_13 $$ DataOutputStream dos = writer.prepareAppendKey(-1)-->Line_23 $$ dos.close()[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_5 $$ FileSystem fs = path.getFileSystem(conf)[ FD ]
Line_13 $$ DataOutputStream dos = writer.prepareAppendKey(-1)-->Line_15 $$ key.write(dos)[ FD ]
Line_19 $$ dos = writer.prepareAppendValue(-1)-->Line_21 $$ dos.write(buildValue(i).getBytes())[ FD ]
Line_19 $$ dos = writer.prepareAppendValue(-1)-->Line_15 $$ key.write(dos)[ FD ]
Line_8 $$ TFile.Writer writer = new Writer(out, BLOCK_SIZE, "gz", jClassLongWritableComparator, conf)-->Line_19 $$ dos = writer.prepareAppendValue(-1)[ FD ]
Line_2 $$ public void testSortedLongWritable() throws IOException -->Line_4 $$ Path path = new Path(ROOT, name)[ CD ]
Line_39 $$ for (; !scanner.atEnd(); scanner.advance()) -->Line_41 $$ assertEquals(buildValue(i), new String(value.getBytes(), 0, value.getLength()))[ CD ]
Line_4 $$ Path path = new Path(ROOT, name)-->Line_32 $$ FSDataInputStream in = fs.open(path)[ FD ]
Line_4 $$ Path path = new Path(ROOT, name)-->Line_6 $$ FSDataOutputStream out = fs.create(path)[ FD ]
Line_11 $$ for (long i = 0; i < NENTRY; ++i) -->Line_13 $$ DataOutputStream dos = writer.prepareAppendKey(-1)[ CD ]
Line_36 $$ TFile.Reader.Scanner scanner = reader.createScanner()-->Line_40 $$ scanner.entry().getValue(value)[ FD ]
Line_38 $$ BytesWritable value = new BytesWritable()-->Line_40 $$ scanner.entry().getValue(value)[ FD ]
Line_13 $$ DataOutputStream dos = writer.prepareAppendKey(-1)-->Line_17 $$ dos.close()[ FD ]
Line_32 $$ FSDataInputStream in = fs.open(path)-->Line_48 $$ in.close()[ FD ]
Line_8 $$ TFile.Writer writer = new Writer(out, BLOCK_SIZE, "gz", jClassLongWritableComparator, conf)-->Line_27 $$ writer.close()[ FD ]
Line_19 $$ dos = writer.prepareAppendValue(-1)-->Line_17 $$ dos.close()[ FD ]
Line_37 $$ long i = 0-->Line_42 $$ ++i[ FD ]
Line_13 $$ DataOutputStream dos = writer.prepareAppendKey(-1)-->Line_21 $$ dos.write(buildValue(i).getBytes())[ FD ]
Line_19 $$ dos = writer.prepareAppendValue(-1)-->Line_23 $$ dos.close()[ FD ]
Line_11 $$ for (long i = 0; i < NENTRY; ++i) -->Line_42 $$ ++i[ FD ]
Line_13 $$ DataOutputStream dos = writer.prepareAppendKey(-1)-->Line_19 $$ dos = writer.prepareAppendValue(-1)[ FD ]
Line_2 $$ public void testSortedLongWritable() throws IOException -->Line_3 $$ Configuration conf = new Configuration()[ CD ]
Line_34 $$ TFile.Reader reader = new TFile.Reader(in, fs.getFileStatus(path).getLen(), conf)-->Line_45 $$ reader.close()[ FD ]
Line_2 $$ public void testSortedLongWritable() throws IOException -->Line_5 $$ FileSystem fs = path.getFileSystem(conf)[ CD ]
Line_5 $$ FileSystem fs = path.getFileSystem(conf)-->Line_6 $$ FSDataOutputStream out = fs.create(path)[ FD ]
Line_4 $$ Path path = new Path(ROOT, name)-->Line_5 $$ FileSystem fs = path.getFileSystem(conf)[ FD ]
Line_11 $$ for (long i = 0; i < NENTRY; ++i) -->Line_19 $$ dos = writer.prepareAppendValue(-1)[ CD ]
Line_8 $$ TFile.Writer writer = new Writer(out, BLOCK_SIZE, "gz", jClassLongWritableComparator, conf)-->Line_13 $$ DataOutputStream dos = writer.prepareAppendKey(-1)[ FD ]
Line_11 $$ for (long i = 0; i < NENTRY; ++i) -->Line_21 $$ dos.write(buildValue(i).getBytes())[ FD ]
Line_37 $$ long i = 0-->Line_41 $$ assertEquals(buildValue(i), new String(value.getBytes(), 0, value.getLength()))[ FD ]
Line_10 $$ LongWritable key = new LongWritable(0)-->Line_15 $$ key.write(dos)[ FD ]
Line_39 $$ for (; !scanner.atEnd(); scanner.advance()) -->Line_42 $$ ++i[ CD ]
Line_11 $$ for (long i = 0; i < NENTRY; ++i) -->Line_12 $$ key.set(cube(i - NENTRY / 2))[ CD ]
