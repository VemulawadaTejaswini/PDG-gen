Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_47 $$ assertFalse(fs.rename(new Path("/a/b"), new Path("/a/b/")))[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_7 $$ assertTrue(fs.mkdirs(dir))[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_50 $$ fs.delete(dir, true)[ FD ]
Line_32 $$ Path dst = new Path("/a/b/c")-->Line_35 $$ assertFalse(fs.rename(src.getParent(), dst.getParent()))[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_18 $$ fs.rename(a, b)[ FD ]
Line_2 $$ public void testRename() throws Exception -->Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()[ CD ]
Line_14 $$ DataOutputStream aa_out = fs.create(aa)-->Line_20 $$ aa_out.writeBytes(" more")[ FD ]
Line_9 $$ Path a = new Path(dir, "a")-->Line_12 $$ createFile(fs, a)[ FD ]
Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_13 $$ assertEquals(0, countLease(cluster))[ FD ]
Line_32 $$ Path dst = new Path("/a/b/c")-->Line_34 $$ assertFalse(fs.rename(src, dst))[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_17 $$ list(fs, "rename0")[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_12 $$ createFile(fs, a)[ FD ]
Line_31 $$ Path src = new Path("/a/b")-->Line_45 $$ createFile(fs, src)[ FD ]
Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_52 $$ if (cluster != null) [ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_34 $$ assertFalse(fs.rename(src, dst))[ FD ]
Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_53 $$ cluster.shutdown()[ FD ]
Line_26 $$ Path dstPath = new Path("/c/d")-->Line_28 $$ assertFalse(fs.rename(dir, dstPath))[ FD ]
Line_10 $$ Path aa = new Path(dir, "aa")-->Line_14 $$ DataOutputStream aa_out = fs.create(aa)[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_14 $$ DataOutputStream aa_out = fs.create(aa)[ FD ]
Line_31 $$ Path src = new Path("/a/b")-->Line_48 $$ assertTrue(fs.rename(src, new Path("/a/b/c/")))[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_45 $$ createFile(fs, src)[ FD ]
Line_14 $$ DataOutputStream aa_out = fs.create(aa)-->Line_21 $$ aa_out.close()[ FD ]
Line_11 $$ Path b = new Path(dir, "b")-->Line_18 $$ fs.rename(a, b)[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_46 $$ assertTrue(fs.rename(src, src))[ FD ]
Line_2 $$ public void testRename() throws Exception -->Line_3 $$ Configuration conf = new HdfsConfiguration()[ CD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_48 $$ assertTrue(fs.rename(src, new Path("/a/b/c/")))[ FD ]
Line_31 $$ Path src = new Path("/a/b")-->Line_35 $$ assertFalse(fs.rename(src.getParent(), dst.getParent()))[ FD ]
Line_14 $$ DataOutputStream aa_out = fs.create(aa)-->Line_15 $$ aa_out.writeBytes("something")[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_28 $$ assertFalse(fs.rename(dir, dstPath))[ FD ]
Line_9 $$ Path a = new Path(dir, "a")-->Line_18 $$ fs.rename(a, b)[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_22 $$ list(fs, "rename2")[ FD ]
Line_31 $$ Path src = new Path("/a/b")-->Line_40 $$ createFile(fs, src)[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_41 $$ assertTrue(fs.rename(src, dst))[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_35 $$ assertFalse(fs.rename(src.getParent(), dst.getParent()))[ FD ]
Line_31 $$ Path src = new Path("/a/b")-->Line_46 $$ assertTrue(fs.rename(src, src))[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_33 $$ createFile(fs, new Path(src, "foo"))[ FD ]
Line_26 $$ Path dstPath = new Path("/c/d")-->Line_27 $$ assertFalse(fs.exists(dstPath))[ FD ]
Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_6 $$ FileSystem fs = cluster.getFileSystem()[ FD ]
Line_31 $$ Path src = new Path("/a/b")-->Line_34 $$ assertFalse(fs.rename(src, dst))[ FD ]
Line_52 $$ if (cluster != null) -->Line_53 $$ cluster.shutdown()[ CD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_27 $$ assertFalse(fs.exists(dstPath))[ FD ]
Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_23 $$ assertEquals(0, countLease(cluster))[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_19 $$ list(fs, "rename1")[ FD ]
Line_6 $$ FileSystem fs = cluster.getFileSystem()-->Line_40 $$ createFile(fs, src)[ FD ]
Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_16 $$ assertEquals(1, countLease(cluster))[ FD ]
Line_31 $$ Path src = new Path("/a/b")-->Line_41 $$ assertTrue(fs.rename(src, dst))[ FD ]
Line_32 $$ Path dst = new Path("/a/b/c")-->Line_41 $$ assertTrue(fs.rename(src, dst))[ FD ]
