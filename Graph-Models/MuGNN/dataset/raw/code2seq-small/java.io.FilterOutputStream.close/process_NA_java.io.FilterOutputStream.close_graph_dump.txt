Line_2 $$ public void process(@Nullable InputStream inputStream, @NotNull String relativePath, ZipEntry entry) throws IOException -->Line_3 $$ final String fullOutputPath = JpsArtifactPathUtil.appendToPath(outputPath, relativePath)[ CD ]
Line_2 $$ public void process(@Nullable InputStream inputStream, @NotNull String relativePath, ZipEntry entry) throws IOException -->Line_5 $$ FileUtil.createParentDirs(outputFile)[ CD ]
Line_6 $$ if (inputStream == null) -->Line_20 $$ outSrcMapping.appendData(fullOutputPath, rootIndex, filePath)[ CD ]
Line_10 $$ final BufferedInputStream from = new BufferedInputStream(inputStream)-->Line_13 $$ FileUtil.copy(from, to)[ FD ]
Line_9 $$ if (outSrcMapping.getState(fullOutputPath) == null) -->Line_18 $$ outputConsumer.registerOutputFile(outputFile, Collections.singletonList(filePath))[ CD ]
Line_6 $$ if (inputStream == null) -->Line_9 $$ if (outSrcMapping.getState(fullOutputPath) == null) [ CD ]
Line_11 $$ final BufferedOutputStream to = new BufferedOutputStream(new FileOutputStream(outputFile))-->Line_16 $$ to.close()[ FD ]
Line_6 $$ if (inputStream == null) -->Line_7 $$ outputFile.mkdir()[ CD ]
Line_4 $$ final File outputFile = new File(fullOutputPath)-->Line_5 $$ FileUtil.createParentDirs(outputFile)[ FD ]
Line_2 $$ public void process(@Nullable InputStream inputStream, @NotNull String relativePath, ZipEntry entry) throws IOException -->Line_4 $$ final File outputFile = new File(fullOutputPath)[ CD ]
Line_4 $$ final File outputFile = new File(fullOutputPath)-->Line_7 $$ outputFile.mkdir()[ FD ]
Line_2 $$ public void process(@Nullable InputStream inputStream, @NotNull String relativePath, ZipEntry entry) throws IOException -->Line_6 $$ if (inputStream == null) [ CD ]
Line_3 $$ final String fullOutputPath = JpsArtifactPathUtil.appendToPath(outputPath, relativePath)-->Line_9 $$ if (outSrcMapping.getState(fullOutputPath) == null) [ FD ]
Line_4 $$ final File outputFile = new File(fullOutputPath)-->Line_18 $$ outputConsumer.registerOutputFile(outputFile, Collections.singletonList(filePath))[ FD ]
Line_10 $$ final BufferedInputStream from = new BufferedInputStream(inputStream)-->Line_15 $$ from.close()[ FD ]
Line_11 $$ final BufferedOutputStream to = new BufferedOutputStream(new FileOutputStream(outputFile))-->Line_13 $$ FileUtil.copy(from, to)[ FD ]
Line_9 $$ if (outSrcMapping.getState(fullOutputPath) == null) -->Line_10 $$ final BufferedInputStream from = new BufferedInputStream(inputStream)[ CD ]
Line_2 $$ public void process(@Nullable InputStream inputStream, @NotNull String relativePath, ZipEntry entry) throws IOException -->Line_3 $$ final String fullOutputPath = JpsArtifactPathUtil.appendToPath(outputPath, relativePath)[ FD ]
Line_9 $$ if (outSrcMapping.getState(fullOutputPath) == null) -->Line_11 $$ final BufferedOutputStream to = new BufferedOutputStream(new FileOutputStream(outputFile))[ CD ]
Line_2 $$ public void process(@Nullable InputStream inputStream, @NotNull String relativePath, ZipEntry entry) throws IOException -->Line_6 $$ if (inputStream == null) [ FD ]
Line_3 $$ final String fullOutputPath = JpsArtifactPathUtil.appendToPath(outputPath, relativePath)-->Line_20 $$ outSrcMapping.appendData(fullOutputPath, rootIndex, filePath)[ FD ]
