Line_3 $$ final int r = myStorage.createNewRecord()-->Line_8 $$ myStorage.readStream(r)[ FD ]
Line_15 $$ for (int i = 0; i < 10000; i++) -->Line_16 $$ assertEquals(i, in.readInt())[ CD ]
Line_10 $$ out = new DataOutputStream(myStorage.appendStream(r))-->Line_9 $$ out.close()[ FD ]
Line_5 $$ for (int i = 0; i < 10000; i++) -->Line_7 $$ if (i % 100 == 0) [ CD ]
Line_7 $$ if (i % 100 == 0) -->Line_9 $$ out.close()[ CD ]
Line_4 $$ DataOutputStream out = new DataOutputStream(myStorage.appendStream(r))-->Line_6 $$ out.writeInt(i)[ FD ]
Line_2 $$ public void testAppender() throws Exception -->Line_4 $$ DataOutputStream out = new DataOutputStream(myStorage.appendStream(r))[ CD ]
Line_2 $$ public void testAppender() throws Exception -->Line_3 $$ final int r = myStorage.createNewRecord()[ CD ]
Line_2 $$ public void testAppender() throws Exception -->Line_15 $$ for (int i = 0; i < 10000; i++) [ CD ]
Line_3 $$ final int r = myStorage.createNewRecord()-->Line_4 $$ DataOutputStream out = new DataOutputStream(myStorage.appendStream(r))[ FD ]
Line_5 $$ for (int i = 0; i < 10000; i++) -->Line_16 $$ assertEquals(i, in.readInt())[ FD ]
Line_4 $$ DataOutputStream out = new DataOutputStream(myStorage.appendStream(r))-->Line_13 $$ out.close()[ FD ]
Line_7 $$ if (i % 100 == 0) -->Line_10 $$ out = new DataOutputStream(myStorage.appendStream(r))[ CD ]
Line_10 $$ out = new DataOutputStream(myStorage.appendStream(r))-->Line_6 $$ out.writeInt(i)[ FD ]
Line_15 $$ for (int i = 0; i < 10000; i++) -->Line_16 $$ assertEquals(i, in.readInt())[ FD ]
Line_3 $$ final int r = myStorage.createNewRecord()-->Line_10 $$ out = new DataOutputStream(myStorage.appendStream(r))[ FD ]
Line_14 $$ DataInputStream in = new DataInputStream(myStorage.readStream(r))-->Line_18 $$ in.close()[ FD ]
Line_5 $$ for (int i = 0; i < 10000; i++) -->Line_6 $$ out.writeInt(i)[ FD ]
Line_3 $$ final int r = myStorage.createNewRecord()-->Line_14 $$ DataInputStream in = new DataInputStream(myStorage.readStream(r))[ FD ]
Line_7 $$ if (i % 100 == 0) -->Line_8 $$ myStorage.readStream(r)[ CD ]
Line_4 $$ DataOutputStream out = new DataOutputStream(myStorage.appendStream(r))-->Line_9 $$ out.close()[ FD ]
Line_2 $$ public void testAppender() throws Exception -->Line_5 $$ for (int i = 0; i < 10000; i++) [ CD ]
Line_5 $$ for (int i = 0; i < 10000; i++) -->Line_15 $$ for (int i = 0; i < 10000; i++) [ FD ]
Line_5 $$ for (int i = 0; i < 10000; i++) -->Line_6 $$ out.writeInt(i)[ CD ]
Line_2 $$ public void testAppender() throws Exception -->Line_14 $$ DataInputStream in = new DataInputStream(myStorage.readStream(r))[ CD ]
Line_2 $$ public void testAppender() throws Exception -->Line_18 $$ in.close()[ CD ]
Line_2 $$ public void testAppender() throws Exception -->Line_13 $$ out.close()[ CD ]
Line_10 $$ out = new DataOutputStream(myStorage.appendStream(r))-->Line_13 $$ out.close()[ FD ]
Line_4 $$ DataOutputStream out = new DataOutputStream(myStorage.appendStream(r))-->Line_10 $$ out = new DataOutputStream(myStorage.appendStream(r))[ FD ]
Line_14 $$ DataInputStream in = new DataInputStream(myStorage.readStream(r))-->Line_16 $$ assertEquals(i, in.readInt())[ FD ]
