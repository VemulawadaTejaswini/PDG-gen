Line_2 $$ public ListenableFuture<?> processFor(Duration duration) throws Exception -->Line_8 $$ return Futures.immediateFuture(null)[ CD ]
Line_2 $$ public ListenableFuture<?> processFor(Duration duration) throws Exception -->Line_7 $$ completedPhases.getAndIncrement()[ CD ]
Line_2 $$ public ListenableFuture<?> processFor(Duration duration) throws Exception -->Line_3 $$ int phase = awaitWorkers.arriveAndAwaitAdvance()[ CD ]
Line_3 $$ int phase = awaitWorkers.arriveAndAwaitAdvance()-->Line_5 $$ lastPhase.set(phase)[ FD ]
Line_2 $$ public ListenableFuture<?> processFor(Duration duration) throws Exception -->Line_4 $$ firstPhase.compareAndSet(-1, phase - 1)[ CD ]
Line_2 $$ public ListenableFuture<?> processFor(Duration duration) throws Exception -->Line_5 $$ lastPhase.set(phase)[ CD ]
Line_2 $$ public ListenableFuture<?> processFor(Duration duration) throws Exception -->Line_6 $$ awaitVerifiers.arriveAndAwaitAdvance()[ CD ]
