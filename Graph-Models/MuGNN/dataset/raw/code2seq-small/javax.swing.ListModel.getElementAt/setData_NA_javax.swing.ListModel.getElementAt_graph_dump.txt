Line_12 $$ final VirtualFile virtualFile = ((DirectoryChooser.ItemWrapper) element).getDirectory().getVirtualFile()-->Line_13 $$ final Module module = ModuleUtil.findModuleForFile(virtualFile, project)[ FD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_40 $$ VirtualFile root = MoveClassesOrPackagesUtil.chooseSourceRoot(new PackageWrapper(PsiManager.getInstance(project), getTargetPackage()), mySourceRoots, initialTargetDirectory)[ FD ]
Line_22 $$ getComboBox().setRenderer(new ListCellRendererWrapper<DirectoryChooser.ItemWrapper>() -->Line_26 $$ if (itemWrapper != NULL_WRAPPER && itemWrapper != null) [ CD ]
Line_5 $$ new ComboboxSpeedSearch(getComboBox()) -->Line_18 $$ return super.getElementText(element)[ FD ]
Line_72 $$ PsiDirectory directory = ((DirectoryChooser.ItemWrapper) selectedItem).getDirectory()-->Line_73 $$ if (directory != null) [ FD ]
Line_36 $$ addActionListener(new ActionListener() -->Line_52 $$ setComboboxModel(getComboBox(), root, root, fileIndex, mySourceRoots, project, true, errorMessageUpdater)[ CD ]
Line_11 $$ if (element instanceof DirectoryChooser.ItemWrapper) -->Line_13 $$ final Module module = ModuleUtil.findModuleForFile(virtualFile, project)[ CD ]
Line_43 $$ final ComboBoxModel model = getComboBox().getModel()-->Line_44 $$ for (int i = 0; i < model.getSize(); i++) [ FD ]
Line_69 $$ Object selectedItem = getComboBox().getSelectedItem()-->Line_70 $$ updateErrorMessage(errorMessageUpdater, fileIndex, selectedItem)[ FD ]
Line_13 $$ final Module module = ModuleUtil.findModuleForFile(virtualFile, project)-->Line_15 $$ return module.getName()[ FD ]
Line_36 $$ addActionListener(new ActionListener() -->Line_41 $$ if (root == null)[ CD ]
Line_5 $$ new ComboboxSpeedSearch(getComboBox()) -->Line_9 $$ if (element == NULL_WRAPPER)[ CD ]
Line_41 $$ if (root == null)-->Line_42 $$ return[ CD ]
Line_36 $$ addActionListener(new ActionListener() -->Line_44 $$ for (int i = 0; i < model.getSize(); i++) [ CD ]
Line_13 $$ final Module module = ModuleUtil.findModuleForFile(virtualFile, project)-->Line_14 $$ if (module != null) [ FD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_22 $$ getComboBox().setRenderer(new ListCellRendererWrapper<DirectoryChooser.ItemWrapper>() [ CD ]
Line_60 $$ DirectoryChooser.ItemWrapper selectedItem = (DirectoryChooser.ItemWrapper) comboBox.getSelectedItem()-->Line_61 $$ setComboboxModel(comboBox, selectedItem != null && selectedItem != NULL_WRAPPER ? fileIndex.getSourceRootForFile(selectedItem.getDirectory().getVirtualFile()) : initialSourceRoot, selection[0], fileIndex, mySourceRoots, project, false, errorMessageUpdater)[ FD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_4 $$ mySourceRoots = JavaProjectRootsUtil.getSuitableDestinationSourceRoots(project)[ CD ]
Line_55 $$ editorComboBox.addDocumentListener(new DocumentAdapter() -->Line_60 $$ DirectoryChooser.ItemWrapper selectedItem = (DirectoryChooser.ItemWrapper) comboBox.getSelectedItem()[ CD ]
Line_71 $$ if (selectedItem instanceof DirectoryChooser.ItemWrapper && selectedItem != NULL_WRAPPER) -->Line_73 $$ if (directory != null) [ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_55 $$ editorComboBox.addDocumentListener(new DocumentAdapter() [ CD ]
Line_59 $$ JComboBox comboBox = getComboBox()-->Line_61 $$ setComboboxModel(comboBox, selectedItem != null && selectedItem != NULL_WRAPPER ? fileIndex.getSourceRootForFile(selectedItem.getDirectory().getVirtualFile()) : initialSourceRoot, selection[0], fileIndex, mySourceRoots, project, false, errorMessageUpdater)[ FD ]
Line_73 $$ if (directory != null) -->Line_74 $$ selection[0] = fileIndex.getSourceRootForFile(directory.getVirtualFile())[ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_21 $$ final ProjectFileIndex fileIndex = ProjectRootManager.getInstance(project).getFileIndex()[ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_21 $$ final ProjectFileIndex fileIndex = ProjectRootManager.getInstance(project).getFileIndex()[ FD ]
Line_44 $$ for (int i = 0; i < model.getSize(); i++) -->Line_45 $$ DirectoryChooser.ItemWrapper item = (DirectoryChooser.ItemWrapper) model.getElementAt(i)[ FD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_34 $$ final VirtualFile initialSourceRoot = initialTargetDirectory != null ? fileIndex.getSourceRootForFile(initialTargetDirectory.getVirtualFile()) : null[ FD ]
Line_5 $$ new ComboboxSpeedSearch(getComboBox()) -->Line_9 $$ if (element == NULL_WRAPPER)[ FD ]
Line_65 $$ getComboBox().addActionListener(new ActionListener() -->Line_71 $$ if (selectedItem instanceof DirectoryChooser.ItemWrapper && selectedItem != NULL_WRAPPER) [ CD ]
Line_26 $$ if (itemWrapper != NULL_WRAPPER && itemWrapper != null) -->Line_28 $$ setText(itemWrapper.getRelativeToProjectPath())[ CD ]
Line_14 $$ if (module != null) -->Line_15 $$ return module.getName()[ CD ]
Line_9 $$ if (element == NULL_WRAPPER)-->Line_10 $$ return LEAVE_IN_SAME_SOURCE_ROOT[ CD ]
Line_46 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) -->Line_47 $$ getComboBox().setSelectedItem(item)[ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_70 $$ updateErrorMessage(errorMessageUpdater, fileIndex, selectedItem)[ FD ]
Line_60 $$ DirectoryChooser.ItemWrapper selectedItem = (DirectoryChooser.ItemWrapper) comboBox.getSelectedItem()-->Line_70 $$ updateErrorMessage(errorMessageUpdater, fileIndex, selectedItem)[ FD ]
Line_26 $$ if (itemWrapper != NULL_WRAPPER && itemWrapper != null) -->Line_30 $$ setText(LEAVE_IN_SAME_SOURCE_ROOT)[ CD ]
Line_11 $$ if (element instanceof DirectoryChooser.ItemWrapper) -->Line_12 $$ final VirtualFile virtualFile = ((DirectoryChooser.ItemWrapper) element).getDirectory().getVirtualFile()[ CD ]
Line_46 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) -->Line_49 $$ return[ CD ]
Line_44 $$ for (int i = 0; i < model.getSize(); i++) -->Line_46 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) [ CD ]
Line_65 $$ getComboBox().addActionListener(new ActionListener() -->Line_70 $$ updateErrorMessage(errorMessageUpdater, fileIndex, selectedItem)[ CD ]
Line_26 $$ if (itemWrapper != NULL_WRAPPER && itemWrapper != null) -->Line_27 $$ setIcon(itemWrapper.getIcon(fileIndex))[ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_65 $$ getComboBox().addActionListener(new ActionListener() [ CD ]
Line_72 $$ PsiDirectory directory = ((DirectoryChooser.ItemWrapper) selectedItem).getDirectory()-->Line_74 $$ selection[0] = fileIndex.getSourceRootForFile(directory.getVirtualFile())[ FD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_13 $$ final Module module = ModuleUtil.findModuleForFile(virtualFile, project)[ FD ]
Line_40 $$ VirtualFile root = MoveClassesOrPackagesUtil.chooseSourceRoot(new PackageWrapper(PsiManager.getInstance(project), getTargetPackage()), mySourceRoots, initialTargetDirectory)-->Line_52 $$ setComboboxModel(getComboBox(), root, root, fileIndex, mySourceRoots, project, true, errorMessageUpdater)[ FD ]
Line_22 $$ getComboBox().setRenderer(new ListCellRendererWrapper<DirectoryChooser.ItemWrapper>() -->Line_27 $$ setIcon(itemWrapper.getIcon(fileIndex))[ FD ]
Line_40 $$ VirtualFile root = MoveClassesOrPackagesUtil.chooseSourceRoot(new PackageWrapper(PsiManager.getInstance(project), getTargetPackage()), mySourceRoots, initialTargetDirectory)-->Line_46 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) [ FD ]
Line_45 $$ DirectoryChooser.ItemWrapper item = (DirectoryChooser.ItemWrapper) model.getElementAt(i)-->Line_47 $$ getComboBox().setSelectedItem(item)[ FD ]
Line_5 $$ new ComboboxSpeedSearch(getComboBox()) -->Line_11 $$ if (element instanceof DirectoryChooser.ItemWrapper) [ CD ]
Line_45 $$ DirectoryChooser.ItemWrapper item = (DirectoryChooser.ItemWrapper) model.getElementAt(i)-->Line_46 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) [ FD ]
Line_55 $$ editorComboBox.addDocumentListener(new DocumentAdapter() -->Line_61 $$ setComboboxModel(comboBox, selectedItem != null && selectedItem != NULL_WRAPPER ? fileIndex.getSourceRootForFile(selectedItem.getDirectory().getVirtualFile()) : initialSourceRoot, selection[0], fileIndex, mySourceRoots, project, false, errorMessageUpdater)[ CD ]
Line_40 $$ VirtualFile root = MoveClassesOrPackagesUtil.chooseSourceRoot(new PackageWrapper(PsiManager.getInstance(project), getTargetPackage()), mySourceRoots, initialTargetDirectory)-->Line_41 $$ if (root == null)[ FD ]
Line_36 $$ addActionListener(new ActionListener() -->Line_43 $$ final ComboBoxModel model = getComboBox().getModel()[ CD ]
Line_5 $$ new ComboboxSpeedSearch(getComboBox()) -->Line_11 $$ if (element instanceof DirectoryChooser.ItemWrapper) [ FD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_64 $$ setComboboxModel(getComboBox(), initialSourceRoot, selection[0], fileIndex, mySourceRoots, project, false, errorMessageUpdater)[ FD ]
Line_36 $$ addActionListener(new ActionListener() -->Line_40 $$ VirtualFile root = MoveClassesOrPackagesUtil.chooseSourceRoot(new PackageWrapper(PsiManager.getInstance(project), getTargetPackage()), mySourceRoots, initialTargetDirectory)[ CD ]
Line_5 $$ new ComboboxSpeedSearch(getComboBox()) -->Line_18 $$ return super.getElementText(element)[ CD ]
Line_43 $$ final ComboBoxModel model = getComboBox().getModel()-->Line_45 $$ DirectoryChooser.ItemWrapper item = (DirectoryChooser.ItemWrapper) model.getElementAt(i)[ FD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_55 $$ editorComboBox.addDocumentListener(new DocumentAdapter() [ FD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_4 $$ mySourceRoots = JavaProjectRootsUtil.getSuitableDestinationSourceRoots(project)[ FD ]
Line_44 $$ for (int i = 0; i < model.getSize(); i++) -->Line_45 $$ DirectoryChooser.ItemWrapper item = (DirectoryChooser.ItemWrapper) model.getElementAt(i)[ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_52 $$ setComboboxModel(getComboBox(), root, root, fileIndex, mySourceRoots, project, true, errorMessageUpdater)[ FD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_61 $$ setComboboxModel(comboBox, selectedItem != null && selectedItem != NULL_WRAPPER ? fileIndex.getSourceRootForFile(selectedItem.getDirectory().getVirtualFile()) : initialSourceRoot, selection[0], fileIndex, mySourceRoots, project, false, errorMessageUpdater)[ FD ]
Line_59 $$ JComboBox comboBox = getComboBox()-->Line_60 $$ DirectoryChooser.ItemWrapper selectedItem = (DirectoryChooser.ItemWrapper) comboBox.getSelectedItem()[ FD ]
Line_22 $$ getComboBox().setRenderer(new ListCellRendererWrapper<DirectoryChooser.ItemWrapper>() -->Line_28 $$ setText(itemWrapper.getRelativeToProjectPath())[ FD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_36 $$ addActionListener(new ActionListener() [ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_64 $$ setComboboxModel(getComboBox(), initialSourceRoot, selection[0], fileIndex, mySourceRoots, project, false, errorMessageUpdater)[ CD ]
Line_71 $$ if (selectedItem instanceof DirectoryChooser.ItemWrapper && selectedItem != NULL_WRAPPER) -->Line_72 $$ PsiDirectory directory = ((DirectoryChooser.ItemWrapper) selectedItem).getDirectory()[ CD ]
Line_55 $$ editorComboBox.addDocumentListener(new DocumentAdapter() -->Line_59 $$ JComboBox comboBox = getComboBox()[ CD ]
Line_46 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) -->Line_48 $$ getComboBox().repaint()[ CD ]
Line_65 $$ getComboBox().addActionListener(new ActionListener() -->Line_69 $$ Object selectedItem = getComboBox().getSelectedItem()[ CD ]
Line_11 $$ if (element instanceof DirectoryChooser.ItemWrapper) -->Line_14 $$ if (module != null) [ CD ]
