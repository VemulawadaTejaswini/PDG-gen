Line_20 $$ getComboBox().setRenderer(new ListCellRendererWrapper<DirectoryChooser.ItemWrapper>() -->Line_24 $$ setText(itemWrapper.getRelativeToProjectPath())[ FD ]
Line_49 $$ editorComboBox.addDocumentListener(new DocumentAdapter() -->Line_53 $$ setComboboxModel(comboBox, selectedItem != null && selectedItem != NULL_WRAPPER ? fileIndex.getSourceRootForFile(selectedItem.getDirectory().getVirtualFile()) : initialSourceRoot, selection[0], fileIndex, mySourceRoots, project, false, errorMessageUpdater)[ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_20 $$ getComboBox().setRenderer(new ListCellRendererWrapper<DirectoryChooser.ItemWrapper>() [ CD ]
Line_38 $$ for (int i = 0; i < model.getSize(); i++) -->Line_39 $$ DirectoryChooser.ItemWrapper item = (DirectoryChooser.ItemWrapper) model.getElementAt(i)[ CD ]
Line_35 $$ if (root == null)-->Line_36 $$ return[ CD ]
Line_39 $$ DirectoryChooser.ItemWrapper item = (DirectoryChooser.ItemWrapper) model.getElementAt(i)-->Line_41 $$ getComboBox().setSelectedItem(item)[ FD ]
Line_49 $$ editorComboBox.addDocumentListener(new DocumentAdapter() -->Line_52 $$ DirectoryChooser.ItemWrapper selectedItem = (DirectoryChooser.ItemWrapper) comboBox.getSelectedItem()[ CD ]
Line_62 $$ PsiDirectory directory = ((DirectoryChooser.ItemWrapper) selectedItem).getDirectory()-->Line_64 $$ selection[0] = fileIndex.getSourceRootForFile(directory.getVirtualFile())[ FD ]
Line_49 $$ editorComboBox.addDocumentListener(new DocumentAdapter() -->Line_51 $$ JComboBox comboBox = getComboBox()[ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_57 $$ getComboBox().addActionListener(new ActionListener() [ CD ]
Line_5 $$ new ComboboxSpeedSearch(getComboBox()) -->Line_7 $$ if (element == NULL_WRAPPER)[ FD ]
Line_51 $$ JComboBox comboBox = getComboBox()-->Line_53 $$ setComboboxModel(comboBox, selectedItem != null && selectedItem != NULL_WRAPPER ? fileIndex.getSourceRootForFile(selectedItem.getDirectory().getVirtualFile()) : initialSourceRoot, selection[0], fileIndex, mySourceRoots, project, false, errorMessageUpdater)[ FD ]
Line_32 $$ addActionListener(new ActionListener() -->Line_37 $$ final ComboBoxModel model = getComboBox().getModel()[ CD ]
Line_57 $$ getComboBox().addActionListener(new ActionListener() -->Line_61 $$ if (selectedItem instanceof DirectoryChooser.ItemWrapper && selectedItem != NULL_WRAPPER) [ CD ]
Line_40 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) -->Line_43 $$ return[ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_53 $$ setComboboxModel(comboBox, selectedItem != null && selectedItem != NULL_WRAPPER ? fileIndex.getSourceRootForFile(selectedItem.getDirectory().getVirtualFile()) : initialSourceRoot, selection[0], fileIndex, mySourceRoots, project, false, errorMessageUpdater)[ FD ]
Line_40 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) -->Line_41 $$ getComboBox().setSelectedItem(item)[ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_60 $$ updateErrorMessage(errorMessageUpdater, fileIndex, selectedItem)[ FD ]
Line_61 $$ if (selectedItem instanceof DirectoryChooser.ItemWrapper && selectedItem != NULL_WRAPPER) -->Line_62 $$ PsiDirectory directory = ((DirectoryChooser.ItemWrapper) selectedItem).getDirectory()[ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_4 $$ mySourceRoots = JavaProjectRootsUtil.getSuitableDestinationSourceRoots(project)[ FD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_32 $$ addActionListener(new ActionListener() [ CD ]
Line_22 $$ if (itemWrapper != NULL_WRAPPER && itemWrapper != null) -->Line_24 $$ setText(itemWrapper.getRelativeToProjectPath())[ CD ]
Line_59 $$ Object selectedItem = getComboBox().getSelectedItem()-->Line_60 $$ updateErrorMessage(errorMessageUpdater, fileIndex, selectedItem)[ FD ]
Line_9 $$ if (element instanceof DirectoryChooser.ItemWrapper) -->Line_10 $$ final VirtualFile virtualFile = ((DirectoryChooser.ItemWrapper) element).getDirectory().getVirtualFile()[ CD ]
Line_52 $$ DirectoryChooser.ItemWrapper selectedItem = (DirectoryChooser.ItemWrapper) comboBox.getSelectedItem()-->Line_53 $$ setComboboxModel(comboBox, selectedItem != null && selectedItem != NULL_WRAPPER ? fileIndex.getSourceRootForFile(selectedItem.getDirectory().getVirtualFile()) : initialSourceRoot, selection[0], fileIndex, mySourceRoots, project, false, errorMessageUpdater)[ FD ]
Line_37 $$ final ComboBoxModel model = getComboBox().getModel()-->Line_38 $$ for (int i = 0; i < model.getSize(); i++) [ FD ]
Line_38 $$ for (int i = 0; i < model.getSize(); i++) -->Line_40 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) [ CD ]
Line_32 $$ addActionListener(new ActionListener() -->Line_38 $$ for (int i = 0; i < model.getSize(); i++) [ CD ]
Line_5 $$ new ComboboxSpeedSearch(getComboBox()) -->Line_16 $$ return super.getElementText(element)[ CD ]
Line_5 $$ new ComboboxSpeedSearch(getComboBox()) -->Line_16 $$ return super.getElementText(element)[ FD ]
Line_5 $$ new ComboboxSpeedSearch(getComboBox()) -->Line_9 $$ if (element instanceof DirectoryChooser.ItemWrapper) [ FD ]
Line_22 $$ if (itemWrapper != NULL_WRAPPER && itemWrapper != null) -->Line_26 $$ setText(LEAVE_IN_SAME_SOURCE_ROOT)[ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_49 $$ editorComboBox.addDocumentListener(new DocumentAdapter() [ FD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_56 $$ setComboboxModel(getComboBox(), initialSourceRoot, selection[0], fileIndex, mySourceRoots, project, false, errorMessageUpdater)[ FD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_49 $$ editorComboBox.addDocumentListener(new DocumentAdapter() [ CD ]
Line_9 $$ if (element instanceof DirectoryChooser.ItemWrapper) -->Line_11 $$ final Module module = ModuleUtil.findModuleForFile(virtualFile, project)[ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_30 $$ final VirtualFile initialSourceRoot = initialTargetDirectory != null ? fileIndex.getSourceRootForFile(initialTargetDirectory.getVirtualFile()) : null[ FD ]
Line_32 $$ addActionListener(new ActionListener() -->Line_35 $$ if (root == null)[ CD ]
Line_63 $$ if (directory != null) -->Line_64 $$ selection[0] = fileIndex.getSourceRootForFile(directory.getVirtualFile())[ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_34 $$ VirtualFile root = MoveClassesOrPackagesUtil.chooseSourceRoot(new PackageWrapper(PsiManager.getInstance(project), getTargetPackage()), mySourceRoots, initialTargetDirectory)[ FD ]
Line_57 $$ getComboBox().addActionListener(new ActionListener() -->Line_59 $$ Object selectedItem = getComboBox().getSelectedItem()[ CD ]
Line_34 $$ VirtualFile root = MoveClassesOrPackagesUtil.chooseSourceRoot(new PackageWrapper(PsiManager.getInstance(project), getTargetPackage()), mySourceRoots, initialTargetDirectory)-->Line_35 $$ if (root == null)[ FD ]
Line_34 $$ VirtualFile root = MoveClassesOrPackagesUtil.chooseSourceRoot(new PackageWrapper(PsiManager.getInstance(project), getTargetPackage()), mySourceRoots, initialTargetDirectory)-->Line_46 $$ setComboboxModel(getComboBox(), root, root, fileIndex, mySourceRoots, project, true, errorMessageUpdater)[ FD ]
Line_22 $$ if (itemWrapper != NULL_WRAPPER && itemWrapper != null) -->Line_23 $$ setIcon(itemWrapper.getIcon(fileIndex))[ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_4 $$ mySourceRoots = JavaProjectRootsUtil.getSuitableDestinationSourceRoots(project)[ CD ]
Line_10 $$ final VirtualFile virtualFile = ((DirectoryChooser.ItemWrapper) element).getDirectory().getVirtualFile()-->Line_11 $$ final Module module = ModuleUtil.findModuleForFile(virtualFile, project)[ FD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_11 $$ final Module module = ModuleUtil.findModuleForFile(virtualFile, project)[ FD ]
Line_11 $$ final Module module = ModuleUtil.findModuleForFile(virtualFile, project)-->Line_13 $$ return module.getName()[ FD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_19 $$ final ProjectFileIndex fileIndex = ProjectRootManager.getInstance(project).getFileIndex()[ CD ]
Line_5 $$ new ComboboxSpeedSearch(getComboBox()) -->Line_7 $$ if (element == NULL_WRAPPER)[ CD ]
Line_61 $$ if (selectedItem instanceof DirectoryChooser.ItemWrapper && selectedItem != NULL_WRAPPER) -->Line_63 $$ if (directory != null) [ CD ]
Line_37 $$ final ComboBoxModel model = getComboBox().getModel()-->Line_39 $$ DirectoryChooser.ItemWrapper item = (DirectoryChooser.ItemWrapper) model.getElementAt(i)[ FD ]
Line_9 $$ if (element instanceof DirectoryChooser.ItemWrapper) -->Line_12 $$ if (module != null) [ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_56 $$ setComboboxModel(getComboBox(), initialSourceRoot, selection[0], fileIndex, mySourceRoots, project, false, errorMessageUpdater)[ CD ]
Line_20 $$ getComboBox().setRenderer(new ListCellRendererWrapper<DirectoryChooser.ItemWrapper>() -->Line_22 $$ if (itemWrapper != NULL_WRAPPER && itemWrapper != null) [ CD ]
Line_12 $$ if (module != null) -->Line_13 $$ return module.getName()[ CD ]
Line_32 $$ addActionListener(new ActionListener() -->Line_34 $$ VirtualFile root = MoveClassesOrPackagesUtil.chooseSourceRoot(new PackageWrapper(PsiManager.getInstance(project), getTargetPackage()), mySourceRoots, initialTargetDirectory)[ CD ]
Line_34 $$ VirtualFile root = MoveClassesOrPackagesUtil.chooseSourceRoot(new PackageWrapper(PsiManager.getInstance(project), getTargetPackage()), mySourceRoots, initialTargetDirectory)-->Line_40 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) [ FD ]
Line_38 $$ for (int i = 0; i < model.getSize(); i++) -->Line_39 $$ DirectoryChooser.ItemWrapper item = (DirectoryChooser.ItemWrapper) model.getElementAt(i)[ FD ]
Line_20 $$ getComboBox().setRenderer(new ListCellRendererWrapper<DirectoryChooser.ItemWrapper>() -->Line_23 $$ setIcon(itemWrapper.getIcon(fileIndex))[ FD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_46 $$ setComboboxModel(getComboBox(), root, root, fileIndex, mySourceRoots, project, true, errorMessageUpdater)[ FD ]
Line_5 $$ new ComboboxSpeedSearch(getComboBox()) -->Line_9 $$ if (element instanceof DirectoryChooser.ItemWrapper) [ CD ]
Line_51 $$ JComboBox comboBox = getComboBox()-->Line_52 $$ DirectoryChooser.ItemWrapper selectedItem = (DirectoryChooser.ItemWrapper) comboBox.getSelectedItem()[ FD ]
Line_57 $$ getComboBox().addActionListener(new ActionListener() -->Line_60 $$ updateErrorMessage(errorMessageUpdater, fileIndex, selectedItem)[ CD ]
Line_62 $$ PsiDirectory directory = ((DirectoryChooser.ItemWrapper) selectedItem).getDirectory()-->Line_63 $$ if (directory != null) [ FD ]
Line_7 $$ if (element == NULL_WRAPPER)-->Line_8 $$ return LEAVE_IN_SAME_SOURCE_ROOT[ CD ]
Line_2 $$ public void setData(final Project project, final PsiDirectory initialTargetDirectory, final Pass<String> errorMessageUpdater, final EditorComboBox editorComboBox) -->Line_19 $$ final ProjectFileIndex fileIndex = ProjectRootManager.getInstance(project).getFileIndex()[ FD ]
Line_40 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) -->Line_42 $$ getComboBox().repaint()[ CD ]
Line_52 $$ DirectoryChooser.ItemWrapper selectedItem = (DirectoryChooser.ItemWrapper) comboBox.getSelectedItem()-->Line_60 $$ updateErrorMessage(errorMessageUpdater, fileIndex, selectedItem)[ FD ]
Line_39 $$ DirectoryChooser.ItemWrapper item = (DirectoryChooser.ItemWrapper) model.getElementAt(i)-->Line_40 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) [ FD ]
Line_11 $$ final Module module = ModuleUtil.findModuleForFile(virtualFile, project)-->Line_12 $$ if (module != null) [ FD ]
Line_32 $$ addActionListener(new ActionListener() -->Line_46 $$ setComboboxModel(getComboBox(), root, root, fileIndex, mySourceRoots, project, true, errorMessageUpdater)[ CD ]
