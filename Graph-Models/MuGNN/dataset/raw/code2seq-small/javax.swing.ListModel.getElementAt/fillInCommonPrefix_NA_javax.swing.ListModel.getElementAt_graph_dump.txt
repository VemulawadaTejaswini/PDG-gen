Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_52 $$ myOffsets.setInitialPrefix(presentPrefix, explicitlyInvoked)[ FD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_21 $$ String commonPrefix = getCaseCorrectedLookupString(firstItem)[ CD ]
Line_15 $$ final LookupElement firstItem = (LookupElement) listModel.getElementAt(0)-->Line_18 $$ final PrefixMatcher firstItemMatcher = itemMatcher(firstItem)[ FD ]
Line_22 $$ for (int i = 1; i < listModel.getSize(); i++) -->Line_29 $$ final int length = Math.min(commonPrefix.length(), lookupString.length())[ CD ]
Line_6 $$ if (explicitlyInvoked && myCalculating)-->Line_7 $$ return false[ CD ]
Line_11 $$ if (listModel.getSize() <= 1)-->Line_12 $$ return false[ CD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_19 $$ final String oldPrefix = firstItemMatcher.getPrefix()[ CD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_18 $$ final PrefixMatcher firstItemMatcher = itemMatcher(firstItem)[ CD ]
Line_8 $$ if (!explicitlyInvoked && mySelectionTouched)-->Line_9 $$ return false[ CD ]
Line_35 $$ commonPrefix = lookupString.substring(0, j)-->Line_34 $$ if (commonPrefix.charAt(j) != lookupString.charAt(j)) [ FD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_20 $$ final String presentPrefix = oldPrefix + getAdditionalPrefix()[ CD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_54 $$ return true[ CD ]
Line_33 $$ for (int j = 0; j < length; j++) -->Line_34 $$ if (commonPrefix.charAt(j) != lookupString.charAt(j)) [ CD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_6 $$ if (explicitlyInvoked && myCalculating)[ FD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_10 $$ ListModel listModel = getListModel()[ CD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_13 $$ if (listModel.getSize() == 0)[ CD ]
Line_19 $$ final String oldPrefix = firstItemMatcher.getPrefix()-->Line_26 $$ if (!oldPrefix.equals(itemMatcher(item).getPrefix()))[ FD ]
Line_20 $$ final String presentPrefix = oldPrefix + getAdditionalPrefix()-->Line_53 $$ replacePrefix(presentPrefix, commonPrefix)[ FD ]
Line_33 $$ for (int j = 0; j < length; j++) -->Line_34 $$ if (commonPrefix.charAt(j) != lookupString.charAt(j)) [ FD ]
Line_35 $$ commonPrefix = lookupString.substring(0, j)-->Line_39 $$ if (commonPrefix.length() == 0 || commonPrefix.length() < presentPrefix.length()) [ FD ]
Line_28 $$ final String lookupString = getCaseCorrectedLookupString(item)-->Line_35 $$ commonPrefix = lookupString.substring(0, j)[ FD ]
Line_16 $$ if (listModel.getSize() == 1 && firstItem instanceof EmptyLookupItem)-->Line_17 $$ return false[ CD ]
Line_22 $$ for (int i = 1; i < listModel.getSize(); i++) -->Line_23 $$ LookupElement item = (LookupElement) listModel.getElementAt(i)[ CD ]
Line_46 $$ for (int i = 0; i < listModel.getSize(); i++) -->Line_47 $$ LookupElement item = (LookupElement) listModel.getElementAt(i)[ CD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_6 $$ if (explicitlyInvoked && myCalculating)[ CD ]
Line_22 $$ for (int i = 1; i < listModel.getSize(); i++) -->Line_46 $$ for (int i = 0; i < listModel.getSize(); i++) [ FD ]
Line_13 $$ if (listModel.getSize() == 0)-->Line_14 $$ return false[ CD ]
Line_15 $$ final LookupElement firstItem = (LookupElement) listModel.getElementAt(0)-->Line_21 $$ String commonPrefix = getCaseCorrectedLookupString(firstItem)[ FD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_52 $$ myOffsets.setInitialPrefix(presentPrefix, explicitlyInvoked)[ CD ]
Line_22 $$ for (int i = 1; i < listModel.getSize(); i++) -->Line_26 $$ if (!oldPrefix.equals(itemMatcher(item).getPrefix()))[ CD ]
Line_10 $$ ListModel listModel = getListModel()-->Line_47 $$ LookupElement item = (LookupElement) listModel.getElementAt(i)[ FD ]
Line_31 $$ commonPrefix = commonPrefix.substring(0, length)-->Line_35 $$ commonPrefix = lookupString.substring(0, j)[ FD ]
Line_22 $$ for (int i = 1; i < listModel.getSize(); i++) -->Line_24 $$ if (item instanceof EmptyLookupItem)[ CD ]
Line_21 $$ String commonPrefix = getCaseCorrectedLookupString(firstItem)-->Line_48 $$ if (!itemMatcher(item).cloneWithPrefix(commonPrefix).prefixMatches(item)) [ FD ]
Line_22 $$ for (int i = 1; i < listModel.getSize(); i++) -->Line_33 $$ for (int j = 0; j < length; j++) [ CD ]
Line_29 $$ final int length = Math.min(commonPrefix.length(), lookupString.length())-->Line_31 $$ commonPrefix = commonPrefix.substring(0, length)[ FD ]
Line_24 $$ if (item instanceof EmptyLookupItem)-->Line_25 $$ return false[ CD ]
Line_22 $$ for (int i = 1; i < listModel.getSize(); i++) -->Line_39 $$ if (commonPrefix.length() == 0 || commonPrefix.length() < presentPrefix.length()) [ CD ]
Line_10 $$ ListModel listModel = getListModel()-->Line_16 $$ if (listModel.getSize() == 1 && firstItem instanceof EmptyLookupItem)[ FD ]
Line_10 $$ ListModel listModel = getListModel()-->Line_15 $$ final LookupElement firstItem = (LookupElement) listModel.getElementAt(0)[ FD ]
Line_22 $$ for (int i = 1; i < listModel.getSize(); i++) -->Line_23 $$ LookupElement item = (LookupElement) listModel.getElementAt(i)[ FD ]
Line_43 $$ if (commonPrefix.equals(presentPrefix)) -->Line_44 $$ return false[ CD ]
Line_21 $$ String commonPrefix = getCaseCorrectedLookupString(firstItem)-->Line_30 $$ if (length < commonPrefix.length()) [ FD ]
Line_31 $$ commonPrefix = commonPrefix.substring(0, length)-->Line_30 $$ if (length < commonPrefix.length()) [ FD ]
Line_35 $$ commonPrefix = lookupString.substring(0, j)-->Line_48 $$ if (!itemMatcher(item).cloneWithPrefix(commonPrefix).prefixMatches(item)) [ FD ]
Line_46 $$ for (int i = 0; i < listModel.getSize(); i++) -->Line_48 $$ if (!itemMatcher(item).cloneWithPrefix(commonPrefix).prefixMatches(item)) [ CD ]
Line_23 $$ LookupElement item = (LookupElement) listModel.getElementAt(i)-->Line_24 $$ if (item instanceof EmptyLookupItem)[ FD ]
Line_3 $$ if (explicitlyInvoked) -->Line_4 $$ setFocusDegree(FocusDegree.FOCUSED)[ CD ]
Line_28 $$ final String lookupString = getCaseCorrectedLookupString(item)-->Line_29 $$ final int length = Math.min(commonPrefix.length(), lookupString.length())[ FD ]
Line_31 $$ commonPrefix = commonPrefix.substring(0, length)-->Line_43 $$ if (commonPrefix.equals(presentPrefix)) [ FD ]
Line_31 $$ commonPrefix = commonPrefix.substring(0, length)-->Line_48 $$ if (!itemMatcher(item).cloneWithPrefix(commonPrefix).prefixMatches(item)) [ FD ]
Line_23 $$ LookupElement item = (LookupElement) listModel.getElementAt(i)-->Line_26 $$ if (!oldPrefix.equals(itemMatcher(item).getPrefix()))[ FD ]
Line_18 $$ final PrefixMatcher firstItemMatcher = itemMatcher(firstItem)-->Line_19 $$ final String oldPrefix = firstItemMatcher.getPrefix()[ FD ]
Line_21 $$ String commonPrefix = getCaseCorrectedLookupString(firstItem)-->Line_39 $$ if (commonPrefix.length() == 0 || commonPrefix.length() < presentPrefix.length()) [ FD ]
Line_21 $$ String commonPrefix = getCaseCorrectedLookupString(firstItem)-->Line_53 $$ replacePrefix(presentPrefix, commonPrefix)[ FD ]
Line_31 $$ commonPrefix = commonPrefix.substring(0, length)-->Line_39 $$ if (commonPrefix.length() == 0 || commonPrefix.length() < presentPrefix.length()) [ FD ]
Line_21 $$ String commonPrefix = getCaseCorrectedLookupString(firstItem)-->Line_35 $$ commonPrefix = lookupString.substring(0, j)[ FD ]
Line_22 $$ for (int i = 1; i < listModel.getSize(); i++) -->Line_28 $$ final String lookupString = getCaseCorrectedLookupString(item)[ CD ]
Line_10 $$ ListModel listModel = getListModel()-->Line_11 $$ if (listModel.getSize() <= 1)[ FD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_8 $$ if (!explicitlyInvoked && mySelectionTouched)[ CD ]
Line_35 $$ commonPrefix = lookupString.substring(0, j)-->Line_43 $$ if (commonPrefix.equals(presentPrefix)) [ FD ]
Line_23 $$ LookupElement item = (LookupElement) listModel.getElementAt(i)-->Line_48 $$ if (!itemMatcher(item).cloneWithPrefix(commonPrefix).prefixMatches(item)) [ FD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_22 $$ for (int i = 1; i < listModel.getSize(); i++) [ CD ]
Line_31 $$ commonPrefix = commonPrefix.substring(0, length)-->Line_53 $$ replacePrefix(presentPrefix, commonPrefix)[ FD ]
Line_22 $$ for (int i = 1; i < listModel.getSize(); i++) -->Line_47 $$ LookupElement item = (LookupElement) listModel.getElementAt(i)[ FD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_46 $$ for (int i = 0; i < listModel.getSize(); i++) [ CD ]
Line_46 $$ for (int i = 0; i < listModel.getSize(); i++) -->Line_47 $$ LookupElement item = (LookupElement) listModel.getElementAt(i)[ FD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_15 $$ final LookupElement firstItem = (LookupElement) listModel.getElementAt(0)[ CD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_11 $$ if (listModel.getSize() <= 1)[ CD ]
Line_21 $$ String commonPrefix = getCaseCorrectedLookupString(firstItem)-->Line_31 $$ commonPrefix = commonPrefix.substring(0, length)[ FD ]
Line_21 $$ String commonPrefix = getCaseCorrectedLookupString(firstItem)-->Line_43 $$ if (commonPrefix.equals(presentPrefix)) [ FD ]
Line_23 $$ LookupElement item = (LookupElement) listModel.getElementAt(i)-->Line_28 $$ final String lookupString = getCaseCorrectedLookupString(item)[ FD ]
Line_29 $$ final int length = Math.min(commonPrefix.length(), lookupString.length())-->Line_33 $$ for (int j = 0; j < length; j++) [ FD ]
Line_20 $$ final String presentPrefix = oldPrefix + getAdditionalPrefix()-->Line_52 $$ myOffsets.setInitialPrefix(presentPrefix, explicitlyInvoked)[ FD ]
Line_34 $$ if (commonPrefix.charAt(j) != lookupString.charAt(j)) -->Line_35 $$ commonPrefix = lookupString.substring(0, j)[ CD ]
Line_20 $$ final String presentPrefix = oldPrefix + getAdditionalPrefix()-->Line_39 $$ if (commonPrefix.length() == 0 || commonPrefix.length() < presentPrefix.length()) [ FD ]
Line_22 $$ for (int i = 1; i < listModel.getSize(); i++) -->Line_30 $$ if (length < commonPrefix.length()) [ CD ]
Line_30 $$ if (length < commonPrefix.length()) -->Line_31 $$ commonPrefix = commonPrefix.substring(0, length)[ CD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_16 $$ if (listModel.getSize() == 1 && firstItem instanceof EmptyLookupItem)[ CD ]
Line_21 $$ String commonPrefix = getCaseCorrectedLookupString(firstItem)-->Line_29 $$ final int length = Math.min(commonPrefix.length(), lookupString.length())[ FD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_43 $$ if (commonPrefix.equals(presentPrefix)) [ CD ]
Line_26 $$ if (!oldPrefix.equals(itemMatcher(item).getPrefix()))-->Line_27 $$ return false[ CD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_53 $$ replacePrefix(presentPrefix, commonPrefix)[ CD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_3 $$ if (explicitlyInvoked) [ CD ]
Line_2 $$ public boolean fillInCommonPrefix(boolean explicitlyInvoked) -->Line_8 $$ if (!explicitlyInvoked && mySelectionTouched)[ FD ]
Line_21 $$ String commonPrefix = getCaseCorrectedLookupString(firstItem)-->Line_34 $$ if (commonPrefix.charAt(j) != lookupString.charAt(j)) [ FD ]
Line_48 $$ if (!itemMatcher(item).cloneWithPrefix(commonPrefix).prefixMatches(item)) -->Line_49 $$ return false[ CD ]
Line_10 $$ ListModel listModel = getListModel()-->Line_13 $$ if (listModel.getSize() == 0)[ FD ]
Line_35 $$ commonPrefix = lookupString.substring(0, j)-->Line_53 $$ replacePrefix(presentPrefix, commonPrefix)[ FD ]
Line_39 $$ if (commonPrefix.length() == 0 || commonPrefix.length() < presentPrefix.length()) -->Line_40 $$ return false[ CD ]
Line_47 $$ LookupElement item = (LookupElement) listModel.getElementAt(i)-->Line_48 $$ if (!itemMatcher(item).cloneWithPrefix(commonPrefix).prefixMatches(item)) [ FD ]
Line_10 $$ ListModel listModel = getListModel()-->Line_23 $$ LookupElement item = (LookupElement) listModel.getElementAt(i)[ FD ]
Line_10 $$ ListModel listModel = getListModel()-->Line_22 $$ for (int i = 1; i < listModel.getSize(); i++) [ FD ]
Line_28 $$ final String lookupString = getCaseCorrectedLookupString(item)-->Line_34 $$ if (commonPrefix.charAt(j) != lookupString.charAt(j)) [ FD ]
Line_33 $$ for (int j = 0; j < length; j++) -->Line_35 $$ commonPrefix = lookupString.substring(0, j)[ FD ]
Line_29 $$ final int length = Math.min(commonPrefix.length(), lookupString.length())-->Line_30 $$ if (length < commonPrefix.length()) [ FD ]
Line_31 $$ commonPrefix = commonPrefix.substring(0, length)-->Line_34 $$ if (commonPrefix.charAt(j) != lookupString.charAt(j)) [ FD ]
Line_31 $$ commonPrefix = commonPrefix.substring(0, length)-->Line_29 $$ final int length = Math.min(commonPrefix.length(), lookupString.length())[ FD ]
Line_10 $$ ListModel listModel = getListModel()-->Line_46 $$ for (int i = 0; i < listModel.getSize(); i++) [ FD ]
Line_20 $$ final String presentPrefix = oldPrefix + getAdditionalPrefix()-->Line_43 $$ if (commonPrefix.equals(presentPrefix)) [ FD ]
