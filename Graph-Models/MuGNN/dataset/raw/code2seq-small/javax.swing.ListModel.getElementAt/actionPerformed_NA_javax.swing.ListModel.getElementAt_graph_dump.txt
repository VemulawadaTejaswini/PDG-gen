Line_4 $$ VirtualFile root = MoveClassesOrPackagesUtil.chooseSourceRoot(new PackageWrapper(PsiManager.getInstance(project), getTargetPackage()), mySourceRoots, initialTargetDirectory)-->Line_16 $$ setComboboxModel(getComboBox(), root, root, fileIndex, mySourceRoots, project, true, errorMessageUpdater)[ FD ]
Line_8 $$ for (int i = 0; i < model.getSize(); i++) -->Line_10 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) [ CD ]
Line_4 $$ VirtualFile root = MoveClassesOrPackagesUtil.chooseSourceRoot(new PackageWrapper(PsiManager.getInstance(project), getTargetPackage()), mySourceRoots, initialTargetDirectory)-->Line_5 $$ if (root == null)[ FD ]
Line_9 $$ DirectoryChooser.ItemWrapper item = (DirectoryChooser.ItemWrapper) model.getElementAt(i)-->Line_10 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) [ FD ]
Line_7 $$ final ComboBoxModel model = getComboBox().getModel()-->Line_8 $$ for (int i = 0; i < model.getSize(); i++) [ FD ]
Line_9 $$ DirectoryChooser.ItemWrapper item = (DirectoryChooser.ItemWrapper) model.getElementAt(i)-->Line_11 $$ getComboBox().setSelectedItem(item)[ FD ]
Line_8 $$ for (int i = 0; i < model.getSize(); i++) -->Line_9 $$ DirectoryChooser.ItemWrapper item = (DirectoryChooser.ItemWrapper) model.getElementAt(i)[ CD ]
Line_10 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) -->Line_11 $$ getComboBox().setSelectedItem(item)[ CD ]
Line_10 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) -->Line_12 $$ getComboBox().repaint()[ CD ]
Line_7 $$ final ComboBoxModel model = getComboBox().getModel()-->Line_9 $$ DirectoryChooser.ItemWrapper item = (DirectoryChooser.ItemWrapper) model.getElementAt(i)[ FD ]
Line_10 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) -->Line_13 $$ return[ CD ]
Line_8 $$ for (int i = 0; i < model.getSize(); i++) -->Line_9 $$ DirectoryChooser.ItemWrapper item = (DirectoryChooser.ItemWrapper) model.getElementAt(i)[ FD ]
Line_5 $$ if (root == null)-->Line_6 $$ return[ CD ]
Line_4 $$ VirtualFile root = MoveClassesOrPackagesUtil.chooseSourceRoot(new PackageWrapper(PsiManager.getInstance(project), getTargetPackage()), mySourceRoots, initialTargetDirectory)-->Line_10 $$ if (item != NULL_WRAPPER && Comparing.equal(fileIndex.getSourceRootForFile(item.getDirectory().getVirtualFile()), root)) [ FD ]
