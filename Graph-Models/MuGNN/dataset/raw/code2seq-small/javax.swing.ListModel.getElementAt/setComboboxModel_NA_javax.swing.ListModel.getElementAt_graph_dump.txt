Line_25 $$ final DirectoryChooser.ItemWrapper selection = chooseSelection(initialTargetDirectorySourceRoot, fileIndex, items, initial, oldOne)-->Line_45 $$ updateErrorMessage(updateErrorMessage, fileIndex, selection)[ FD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_56 $$ final Component root = SwingUtilities.getRoot(comboBox)[ FD ]
Line_48 $$ if (o1 == NULL_WRAPPER)-->Line_49 $$ return -1[ CD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_18 $$ if (Comparing.equal(sourceRootForFile, oldSelection)) [ FD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_11 $$ DirectoryChooser.ItemWrapper oldOne = null[ CD ]
Line_18 $$ if (Comparing.equal(sourceRootForFile, oldSelection)) -->Line_19 $$ oldOne = itemWrapper[ CD ]
Line_33 $$ if (!areItemsEquivalent(oldItem, itemWrapper)) -->Line_34 $$ sameModel = false[ CD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_15 $$ final VirtualFile sourceRootForFile = fileIndex.getSourceRootForFile(targetDirectory.getVirtualFile())[ FD ]
Line_29 $$ if (sameModel) -->Line_30 $$ for (int i = 0; i < items.size(); i++) [ CD ]
Line_9 $$ final ArrayList<DirectoryChooser.ItemWrapper> items = new ArrayList<DirectoryChooser.ItemWrapper>()-->Line_30 $$ for (int i = 0; i < items.size(); i++) [ FD ]
Line_59 $$ if (preferredSize.getWidth() > root.getSize().getWidth()) -->Line_60 $$ root.setSize(preferredSize)[ CD ]
Line_15 $$ final VirtualFile sourceRootForFile = fileIndex.getSourceRootForFile(targetDirectory.getVirtualFile())-->Line_16 $$ if (Comparing.equal(sourceRootForFile, initialTargetDirectorySourceRoot)) [ FD ]
Line_32 $$ final DirectoryChooser.ItemWrapper itemWrapper = items.get(i)-->Line_33 $$ if (!areItemsEquivalent(oldItem, itemWrapper)) [ FD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_45 $$ updateErrorMessage(updateErrorMessage, fileIndex, selection)[ CD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_57 $$ if (root instanceof Window) [ CD ]
Line_19 $$ oldOne = itemWrapper-->Line_25 $$ final DirectoryChooser.ItemWrapper selection = chooseSelection(initialTargetDirectorySourceRoot, fileIndex, items, initial, oldOne)[ FD ]
Line_26 $$ final ComboBoxModel model = comboBox.getModel()-->Line_31 $$ final DirectoryChooser.ItemWrapper oldItem = (DirectoryChooser.ItemWrapper) model.getElementAt(i)[ FD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_55 $$ comboBox.setModel(new CollectionComboBoxModel(items, selection))[ FD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_9 $$ final ArrayList<DirectoryChooser.ItemWrapper> items = new ArrayList<DirectoryChooser.ItemWrapper>()[ CD ]
Line_57 $$ if (root instanceof Window) -->Line_58 $$ final Dimension preferredSize = root.getPreferredSize()[ CD ]
Line_30 $$ for (int i = 0; i < items.size(); i++) -->Line_33 $$ if (!areItemsEquivalent(oldItem, itemWrapper)) [ CD ]
Line_39 $$ if (sameModel) -->Line_40 $$ if (areItemsEquivalent((DirectoryChooser.ItemWrapper) comboBox.getSelectedItem(), selection)) [ CD ]
Line_12 $$ for (PsiDirectory targetDirectory : targetDirectories) -->Line_13 $$ DirectoryChooser.ItemWrapper itemWrapper = new DirectoryChooser.ItemWrapper(targetDirectory, pathsToCreate.get(targetDirectory))[ FD ]
Line_13 $$ DirectoryChooser.ItemWrapper itemWrapper = new DirectoryChooser.ItemWrapper(targetDirectory, pathsToCreate.get(targetDirectory))-->Line_19 $$ oldOne = itemWrapper[ FD ]
Line_25 $$ final DirectoryChooser.ItemWrapper selection = chooseSelection(initialTargetDirectorySourceRoot, fileIndex, items, initial, oldOne)-->Line_40 $$ if (areItemsEquivalent((DirectoryChooser.ItemWrapper) comboBox.getSelectedItem(), selection)) [ FD ]
Line_11 $$ DirectoryChooser.ItemWrapper oldOne = null-->Line_25 $$ final DirectoryChooser.ItemWrapper selection = chooseSelection(initialTargetDirectorySourceRoot, fileIndex, items, initial, oldOne)[ FD ]
Line_9 $$ final ArrayList<DirectoryChooser.ItemWrapper> items = new ArrayList<DirectoryChooser.ItemWrapper>()-->Line_14 $$ items.add(itemWrapper)[ FD ]
Line_16 $$ if (Comparing.equal(sourceRootForFile, initialTargetDirectorySourceRoot)) -->Line_17 $$ initial = itemWrapper[ CD ]
Line_9 $$ final ArrayList<DirectoryChooser.ItemWrapper> items = new ArrayList<DirectoryChooser.ItemWrapper>()-->Line_32 $$ final DirectoryChooser.ItemWrapper itemWrapper = items.get(i)[ FD ]
Line_4 $$ final HashMap<PsiDirectory, String> pathsToCreate = new HashMap<PsiDirectory, String>()-->Line_6 $$ if (!forceIncludeAll && targetDirectories.size() > pathsToCreate.size()) [ FD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_22 $$ if (oldSelection == null || !fileIndex.isInLibrarySource(oldSelection)) [ FD ]
Line_46 $$ Collections.sort(items, new Comparator<DirectoryChooser.ItemWrapper>() -->Line_52 $$ return o1.getRelativeToProjectPath().compareToIgnoreCase(o2.getRelativeToProjectPath())[ CD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_26 $$ final ComboBoxModel model = comboBox.getModel()[ CD ]
Line_50 $$ if (o2 == NULL_WRAPPER)-->Line_51 $$ return 1[ CD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_26 $$ final ComboBoxModel model = comboBox.getModel()[ FD ]
Line_46 $$ Collections.sort(items, new Comparator<DirectoryChooser.ItemWrapper>() -->Line_52 $$ return o1.getRelativeToProjectPath().compareToIgnoreCase(o2.getRelativeToProjectPath())[ FD ]
Line_30 $$ for (int i = 0; i < items.size(); i++) -->Line_31 $$ final DirectoryChooser.ItemWrapper oldItem = (DirectoryChooser.ItemWrapper) model.getElementAt(i)[ FD ]
Line_30 $$ for (int i = 0; i < items.size(); i++) -->Line_32 $$ final DirectoryChooser.ItemWrapper itemWrapper = items.get(i)[ CD ]
Line_11 $$ DirectoryChooser.ItemWrapper oldOne = null-->Line_19 $$ oldOne = itemWrapper[ FD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_4 $$ final HashMap<PsiDirectory, String> pathsToCreate = new HashMap<PsiDirectory, String>()[ CD ]
Line_9 $$ final ArrayList<DirectoryChooser.ItemWrapper> items = new ArrayList<DirectoryChooser.ItemWrapper>()-->Line_25 $$ final DirectoryChooser.ItemWrapper selection = chooseSelection(initialTargetDirectorySourceRoot, fileIndex, items, initial, oldOne)[ FD ]
Line_30 $$ for (int i = 0; i < items.size(); i++) -->Line_32 $$ final DirectoryChooser.ItemWrapper itemWrapper = items.get(i)[ FD ]
Line_46 $$ Collections.sort(items, new Comparator<DirectoryChooser.ItemWrapper>() -->Line_48 $$ if (o1 == NULL_WRAPPER)[ FD ]
Line_57 $$ if (root instanceof Window) -->Line_59 $$ if (preferredSize.getWidth() > root.getSize().getWidth()) [ CD ]
Line_9 $$ final ArrayList<DirectoryChooser.ItemWrapper> items = new ArrayList<DirectoryChooser.ItemWrapper>()-->Line_28 $$ boolean sameModel = model.getSize() == items.size()[ FD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_22 $$ if (oldSelection == null || !fileIndex.isInLibrarySource(oldSelection)) [ CD ]
Line_10 $$ DirectoryChooser.ItemWrapper initial = null-->Line_17 $$ initial = itemWrapper[ FD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_55 $$ comboBox.setModel(new CollectionComboBoxModel(items, selection))[ CD ]
Line_31 $$ final DirectoryChooser.ItemWrapper oldItem = (DirectoryChooser.ItemWrapper) model.getElementAt(i)-->Line_33 $$ if (!areItemsEquivalent(oldItem, itemWrapper)) [ FD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_5 $$ MoveClassesOrPackagesUtil.buildDirectoryList(new PackageWrapper(PsiManager.getInstance(project), getTargetPackage()), sourceRoots, targetDirectories, pathsToCreate)[ FD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_6 $$ if (!forceIncludeAll && targetDirectories.size() > pathsToCreate.size()) [ FD ]
Line_17 $$ initial = itemWrapper-->Line_25 $$ final DirectoryChooser.ItemWrapper selection = chooseSelection(initialTargetDirectorySourceRoot, fileIndex, items, initial, oldOne)[ FD ]
Line_13 $$ DirectoryChooser.ItemWrapper itemWrapper = new DirectoryChooser.ItemWrapper(targetDirectory, pathsToCreate.get(targetDirectory))-->Line_14 $$ items.add(itemWrapper)[ FD ]
Line_22 $$ if (oldSelection == null || !fileIndex.isInLibrarySource(oldSelection)) -->Line_23 $$ items.add(NULL_WRAPPER)[ CD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_5 $$ MoveClassesOrPackagesUtil.buildDirectoryList(new PackageWrapper(PsiManager.getInstance(project), getTargetPackage()), sourceRoots, targetDirectories, pathsToCreate)[ CD ]
Line_4 $$ final HashMap<PsiDirectory, String> pathsToCreate = new HashMap<PsiDirectory, String>()-->Line_7 $$ targetDirectories.removeAll(pathsToCreate.keySet())[ FD ]
Line_3 $$ final LinkedHashSet<PsiDirectory> targetDirectories = new LinkedHashSet<PsiDirectory>()-->Line_7 $$ targetDirectories.removeAll(pathsToCreate.keySet())[ FD ]
Line_4 $$ final HashMap<PsiDirectory, String> pathsToCreate = new HashMap<PsiDirectory, String>()-->Line_5 $$ MoveClassesOrPackagesUtil.buildDirectoryList(new PackageWrapper(PsiManager.getInstance(project), getTargetPackage()), sourceRoots, targetDirectories, pathsToCreate)[ FD ]
Line_16 $$ if (Comparing.equal(sourceRootForFile, initialTargetDirectorySourceRoot)) -->Line_18 $$ if (Comparing.equal(sourceRootForFile, oldSelection)) [ CD ]
Line_3 $$ final LinkedHashSet<PsiDirectory> targetDirectories = new LinkedHashSet<PsiDirectory>()-->Line_6 $$ if (!forceIncludeAll && targetDirectories.size() > pathsToCreate.size()) [ FD ]
Line_4 $$ final HashMap<PsiDirectory, String> pathsToCreate = new HashMap<PsiDirectory, String>()-->Line_13 $$ DirectoryChooser.ItemWrapper itemWrapper = new DirectoryChooser.ItemWrapper(targetDirectory, pathsToCreate.get(targetDirectory))[ FD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_25 $$ final DirectoryChooser.ItemWrapper selection = chooseSelection(initialTargetDirectorySourceRoot, fileIndex, items, initial, oldOne)[ CD ]
Line_27 $$ if (model instanceof CollectionComboBoxModel) -->Line_29 $$ if (sameModel) [ CD ]
Line_46 $$ Collections.sort(items, new Comparator<DirectoryChooser.ItemWrapper>() -->Line_50 $$ if (o2 == NULL_WRAPPER)[ FD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_45 $$ updateErrorMessage(updateErrorMessage, fileIndex, selection)[ FD ]
Line_46 $$ Collections.sort(items, new Comparator<DirectoryChooser.ItemWrapper>() -->Line_48 $$ if (o1 == NULL_WRAPPER)[ CD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_40 $$ if (areItemsEquivalent((DirectoryChooser.ItemWrapper) comboBox.getSelectedItem(), selection)) [ FD ]
Line_9 $$ final ArrayList<DirectoryChooser.ItemWrapper> items = new ArrayList<DirectoryChooser.ItemWrapper>()-->Line_46 $$ Collections.sort(items, new Comparator<DirectoryChooser.ItemWrapper>() [ FD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_6 $$ if (!forceIncludeAll && targetDirectories.size() > pathsToCreate.size()) [ CD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_10 $$ DirectoryChooser.ItemWrapper initial = null[ CD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_25 $$ final DirectoryChooser.ItemWrapper selection = chooseSelection(initialTargetDirectorySourceRoot, fileIndex, items, initial, oldOne)[ FD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_27 $$ if (model instanceof CollectionComboBoxModel) [ CD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_46 $$ Collections.sort(items, new Comparator<DirectoryChooser.ItemWrapper>() [ CD ]
Line_9 $$ final ArrayList<DirectoryChooser.ItemWrapper> items = new ArrayList<DirectoryChooser.ItemWrapper>()-->Line_23 $$ items.add(NULL_WRAPPER)[ FD ]
Line_13 $$ DirectoryChooser.ItemWrapper itemWrapper = new DirectoryChooser.ItemWrapper(targetDirectory, pathsToCreate.get(targetDirectory))-->Line_33 $$ if (!areItemsEquivalent(oldItem, itemWrapper)) [ FD ]
Line_27 $$ if (model instanceof CollectionComboBoxModel) -->Line_28 $$ boolean sameModel = model.getSize() == items.size()[ CD ]
Line_3 $$ final LinkedHashSet<PsiDirectory> targetDirectories = new LinkedHashSet<PsiDirectory>()-->Line_5 $$ MoveClassesOrPackagesUtil.buildDirectoryList(new PackageWrapper(PsiManager.getInstance(project), getTargetPackage()), sourceRoots, targetDirectories, pathsToCreate)[ FD ]
Line_13 $$ DirectoryChooser.ItemWrapper itemWrapper = new DirectoryChooser.ItemWrapper(targetDirectory, pathsToCreate.get(targetDirectory))-->Line_17 $$ initial = itemWrapper[ FD ]
Line_46 $$ Collections.sort(items, new Comparator<DirectoryChooser.ItemWrapper>() -->Line_50 $$ if (o2 == NULL_WRAPPER)[ CD ]
Line_28 $$ boolean sameModel = model.getSize() == items.size()-->Line_34 $$ sameModel = false[ FD ]
Line_15 $$ final VirtualFile sourceRootForFile = fileIndex.getSourceRootForFile(targetDirectory.getVirtualFile())-->Line_18 $$ if (Comparing.equal(sourceRootForFile, oldSelection)) [ FD ]
Line_26 $$ final ComboBoxModel model = comboBox.getModel()-->Line_27 $$ if (model instanceof CollectionComboBoxModel) [ FD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_3 $$ final LinkedHashSet<PsiDirectory> targetDirectories = new LinkedHashSet<PsiDirectory>()[ CD ]
Line_30 $$ for (int i = 0; i < items.size(); i++) -->Line_31 $$ final DirectoryChooser.ItemWrapper oldItem = (DirectoryChooser.ItemWrapper) model.getElementAt(i)[ CD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_56 $$ final Component root = SwingUtilities.getRoot(comboBox)[ CD ]
Line_6 $$ if (!forceIncludeAll && targetDirectories.size() > pathsToCreate.size()) -->Line_7 $$ targetDirectories.removeAll(pathsToCreate.keySet())[ CD ]
Line_40 $$ if (areItemsEquivalent((DirectoryChooser.ItemWrapper) comboBox.getSelectedItem(), selection)) -->Line_41 $$ return[ CD ]
Line_26 $$ final ComboBoxModel model = comboBox.getModel()-->Line_28 $$ boolean sameModel = model.getSize() == items.size()[ FD ]
Line_10 $$ DirectoryChooser.ItemWrapper initial = null-->Line_25 $$ final DirectoryChooser.ItemWrapper selection = chooseSelection(initialTargetDirectorySourceRoot, fileIndex, items, initial, oldOne)[ FD ]
Line_27 $$ if (model instanceof CollectionComboBoxModel) -->Line_39 $$ if (sameModel) [ CD ]
Line_2 $$ private void setComboboxModel(final JComboBox comboBox, final VirtualFile initialTargetDirectorySourceRoot, final VirtualFile oldSelection, final ProjectFileIndex fileIndex, final List<VirtualFile> sourceRoots, final Project project, final boolean forceIncludeAll, final Pass<String> updateErrorMessage) -->Line_16 $$ if (Comparing.equal(sourceRootForFile, initialTargetDirectorySourceRoot)) [ FD ]
Line_12 $$ for (PsiDirectory targetDirectory : targetDirectories) -->Line_15 $$ final VirtualFile sourceRootForFile = fileIndex.getSourceRootForFile(targetDirectory.getVirtualFile())[ FD ]
