Line_18 $$ ChangesBrowserNode changeNode = (ChangesBrowserNode) node-->Line_19 $$ if (changeNode.isLeaf()) [ FD ]
Line_3 $$ if (myShowFlatten) -->Line_14 $$ TreeUtil.traverseDepth((ChangesBrowserNode) myTree.getModel().getRoot(), new TreeUtil.Traverse() [ CD ]
Line_14 $$ TreeUtil.traverseDepth((ChangesBrowserNode) myTree.getModel().getRoot(), new TreeUtil.Traverse() -->Line_19 $$ if (changeNode.isLeaf()) [ CD ]
Line_4 $$ ListModel m = myList.getModel()-->Line_5 $$ int size = m.getSize()[ FD ]
Line_3 $$ if (myShowFlatten) -->Line_7 $$ for (int i = 0; i < size; i++) [ CD ]
Line_5 $$ int size = m.getSize()-->Line_7 $$ for (int i = 0; i < size; i++) [ FD ]
Line_14 $$ TreeUtil.traverseDepth((ChangesBrowserNode) myTree.getModel().getRoot(), new TreeUtil.Traverse() -->Line_23 $$ return true[ CD ]
Line_3 $$ if (myShowFlatten) -->Line_4 $$ ListModel m = myList.getModel()[ CD ]
Line_14 $$ TreeUtil.traverseDepth((ChangesBrowserNode) myTree.getModel().getRoot(), new TreeUtil.Traverse() -->Line_18 $$ ChangesBrowserNode changeNode = (ChangesBrowserNode) node[ CD ]
Line_3 $$ if (myShowFlatten) -->Line_26 $$ return new ArrayList<T>(result)[ CD ]
Line_3 $$ if (myShowFlatten) -->Line_11 $$ return result[ CD ]
Line_3 $$ if (myShowFlatten) -->Line_5 $$ int size = m.getSize()[ CD ]
Line_2 $$ public List<T> getChanges() -->Line_3 $$ if (myShowFlatten) [ CD ]
Line_3 $$ if (myShowFlatten) -->Line_6 $$ List<T> result = new ArrayList<T>(size)[ CD ]
