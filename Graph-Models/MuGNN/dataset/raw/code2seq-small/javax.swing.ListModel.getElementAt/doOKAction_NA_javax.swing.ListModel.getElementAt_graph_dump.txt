Line_9 $$ SeverityBasedTextAttributes info = (SeverityBasedTextAttributes) listModel.getElementAt(i)-->Line_30 $$ mySeverityRegistrar.unregisterSeverity(info.getSeverity())[ FD ]
Line_15 $$ if (exists) -->Line_21 $$ defaultAttributes.setErrorStripeColor(stripeColor)[ CD ]
Line_15 $$ if (exists) -->Line_19 $$ TextAttributesKey key = type.getAttributesKey()[ CD ]
Line_24 $$ info = new SeverityBasedTextAttributes(info.getAttributes(), type)-->Line_16 $$ info.getType().getAttributesKey().getDefaultAttributes().setErrorStripeColor(stripeColor)[ FD ]
Line_19 $$ TextAttributesKey key = type.getAttributesKey()-->Line_22 $$ key = TextAttributesKey.createTextAttributesKey(key.getExternalName(), defaultAttributes)[ FD ]
Line_15 $$ if (exists) -->Line_22 $$ key = TextAttributesKey.createTextAttributesKey(key.getExternalName(), defaultAttributes)[ CD ]
Line_15 $$ if (exists) -->Line_16 $$ info.getType().getAttributesKey().getDefaultAttributes().setErrorStripeColor(stripeColor)[ CD ]
Line_8 $$ for (int i = listModel.getSize() - 1; i >= 0; i--) -->Line_11 $$ if (!mySeverityRegistrar.isDefaultSeverity(info.getSeverity())) [ CD ]
Line_6 $$ final ListModel listModel = myOptionsList.getModel()-->Line_8 $$ for (int i = listModel.getSize() - 1; i >= 0; i--) [ FD ]
Line_22 $$ key = TextAttributesKey.createTextAttributesKey(key.getExternalName(), defaultAttributes)-->Line_20 $$ final TextAttributes defaultAttributes = key.getDefaultAttributes().clone()[ FD ]
Line_9 $$ SeverityBasedTextAttributes info = (SeverityBasedTextAttributes) listModel.getElementAt(i)-->Line_18 $$ HighlightInfoType.HighlightInfoTypeImpl type = info.getType()[ FD ]
Line_24 $$ info = new SeverityBasedTextAttributes(info.getAttributes(), type)-->Line_11 $$ if (!mySeverityRegistrar.isDefaultSeverity(info.getSeverity())) [ FD ]
Line_24 $$ info = new SeverityBasedTextAttributes(info.getAttributes(), type)-->Line_13 $$ final Color stripeColor = info.getAttributes().getErrorStripeColor()[ FD ]
Line_24 $$ info = new SeverityBasedTextAttributes(info.getAttributes(), type)-->Line_12 $$ infoTypes.remove(info)[ FD ]
Line_24 $$ info = new SeverityBasedTextAttributes(info.getAttributes(), type)-->Line_10 $$ order.add(info.getSeverity())[ FD ]
Line_29 $$ for (SeverityBasedTextAttributes info : infoTypes) -->Line_30 $$ mySeverityRegistrar.unregisterSeverity(info.getSeverity())[ FD ]
Line_13 $$ final Color stripeColor = info.getAttributes().getErrorStripeColor()-->Line_16 $$ info.getType().getAttributesKey().getDefaultAttributes().setErrorStripeColor(stripeColor)[ FD ]
Line_5 $$ final Collection<SeverityBasedTextAttributes> infoTypes = new HashSet<SeverityBasedTextAttributes>(SeverityUtil.getRegisteredHighlightingInfoTypes(mySeverityRegistrar))-->Line_12 $$ infoTypes.remove(info)[ FD ]
Line_15 $$ if (exists) -->Line_24 $$ info = new SeverityBasedTextAttributes(info.getAttributes(), type)[ CD ]
Line_24 $$ info = new SeverityBasedTextAttributes(info.getAttributes(), type)-->Line_30 $$ mySeverityRegistrar.unregisterSeverity(info.getSeverity())[ FD ]
Line_20 $$ final TextAttributes defaultAttributes = key.getDefaultAttributes().clone()-->Line_22 $$ key = TextAttributesKey.createTextAttributesKey(key.getExternalName(), defaultAttributes)[ FD ]
Line_11 $$ if (!mySeverityRegistrar.isDefaultSeverity(info.getSeverity())) -->Line_13 $$ final Color stripeColor = info.getAttributes().getErrorStripeColor()[ CD ]
Line_23 $$ type = new HighlightInfoType.HighlightInfoTypeImpl(type.getSeverity(null), key)-->Line_19 $$ TextAttributesKey key = type.getAttributesKey()[ FD ]
Line_9 $$ SeverityBasedTextAttributes info = (SeverityBasedTextAttributes) listModel.getElementAt(i)-->Line_11 $$ if (!mySeverityRegistrar.isDefaultSeverity(info.getSeverity())) [ FD ]
Line_8 $$ for (int i = listModel.getSize() - 1; i >= 0; i--) -->Line_9 $$ SeverityBasedTextAttributes info = (SeverityBasedTextAttributes) listModel.getElementAt(i)[ FD ]
Line_9 $$ SeverityBasedTextAttributes info = (SeverityBasedTextAttributes) listModel.getElementAt(i)-->Line_26 $$ mySeverityRegistrar.registerSeverity(info, stripeColor != null ? stripeColor : LightColors.YELLOW)[ FD ]
Line_9 $$ SeverityBasedTextAttributes info = (SeverityBasedTextAttributes) listModel.getElementAt(i)-->Line_12 $$ infoTypes.remove(info)[ FD ]
Line_19 $$ TextAttributesKey key = type.getAttributesKey()-->Line_20 $$ final TextAttributes defaultAttributes = key.getDefaultAttributes().clone()[ FD ]
Line_11 $$ if (!mySeverityRegistrar.isDefaultSeverity(info.getSeverity())) -->Line_26 $$ mySeverityRegistrar.registerSeverity(info, stripeColor != null ? stripeColor : LightColors.YELLOW)[ CD ]
Line_6 $$ final ListModel listModel = myOptionsList.getModel()-->Line_9 $$ SeverityBasedTextAttributes info = (SeverityBasedTextAttributes) listModel.getElementAt(i)[ FD ]
Line_15 $$ if (exists) -->Line_18 $$ HighlightInfoType.HighlightInfoTypeImpl type = info.getType()[ CD ]
Line_9 $$ SeverityBasedTextAttributes info = (SeverityBasedTextAttributes) listModel.getElementAt(i)-->Line_16 $$ info.getType().getAttributesKey().getDefaultAttributes().setErrorStripeColor(stripeColor)[ FD ]
Line_24 $$ info = new SeverityBasedTextAttributes(info.getAttributes(), type)-->Line_26 $$ mySeverityRegistrar.registerSeverity(info, stripeColor != null ? stripeColor : LightColors.YELLOW)[ FD ]
Line_11 $$ if (!mySeverityRegistrar.isDefaultSeverity(info.getSeverity())) -->Line_12 $$ infoTypes.remove(info)[ CD ]
Line_9 $$ SeverityBasedTextAttributes info = (SeverityBasedTextAttributes) listModel.getElementAt(i)-->Line_14 $$ final boolean exists = mySeverityRegistrar.getSeverity(info.getSeverity().getName()) != null[ FD ]
Line_7 $$ final List<HighlightSeverity> order = new ArrayList<HighlightSeverity>()-->Line_32 $$ mySeverityRegistrar.setOrder(order)[ FD ]
Line_18 $$ HighlightInfoType.HighlightInfoTypeImpl type = info.getType()-->Line_19 $$ TextAttributesKey key = type.getAttributesKey()[ FD ]
Line_13 $$ final Color stripeColor = info.getAttributes().getErrorStripeColor()-->Line_21 $$ defaultAttributes.setErrorStripeColor(stripeColor)[ FD ]
Line_15 $$ if (exists) -->Line_23 $$ type = new HighlightInfoType.HighlightInfoTypeImpl(type.getSeverity(null), key)[ CD ]
Line_7 $$ final List<HighlightSeverity> order = new ArrayList<HighlightSeverity>()-->Line_10 $$ order.add(info.getSeverity())[ FD ]
Line_24 $$ info = new SeverityBasedTextAttributes(info.getAttributes(), type)-->Line_14 $$ final boolean exists = mySeverityRegistrar.getSeverity(info.getSeverity().getName()) != null[ FD ]
Line_11 $$ if (!mySeverityRegistrar.isDefaultSeverity(info.getSeverity())) -->Line_15 $$ if (exists) [ CD ]
Line_8 $$ for (int i = listModel.getSize() - 1; i >= 0; i--) -->Line_9 $$ SeverityBasedTextAttributes info = (SeverityBasedTextAttributes) listModel.getElementAt(i)[ CD ]
Line_9 $$ SeverityBasedTextAttributes info = (SeverityBasedTextAttributes) listModel.getElementAt(i)-->Line_24 $$ info = new SeverityBasedTextAttributes(info.getAttributes(), type)[ FD ]
Line_24 $$ info = new SeverityBasedTextAttributes(info.getAttributes(), type)-->Line_18 $$ HighlightInfoType.HighlightInfoTypeImpl type = info.getType()[ FD ]
Line_8 $$ for (int i = listModel.getSize() - 1; i >= 0; i--) -->Line_10 $$ order.add(info.getSeverity())[ CD ]
Line_20 $$ final TextAttributes defaultAttributes = key.getDefaultAttributes().clone()-->Line_21 $$ defaultAttributes.setErrorStripeColor(stripeColor)[ FD ]
Line_18 $$ HighlightInfoType.HighlightInfoTypeImpl type = info.getType()-->Line_23 $$ type = new HighlightInfoType.HighlightInfoTypeImpl(type.getSeverity(null), key)[ FD ]
Line_9 $$ SeverityBasedTextAttributes info = (SeverityBasedTextAttributes) listModel.getElementAt(i)-->Line_10 $$ order.add(info.getSeverity())[ FD ]
Line_15 $$ if (exists) -->Line_20 $$ final TextAttributes defaultAttributes = key.getDefaultAttributes().clone()[ CD ]
Line_11 $$ if (!mySeverityRegistrar.isDefaultSeverity(info.getSeverity())) -->Line_14 $$ final boolean exists = mySeverityRegistrar.getSeverity(info.getSeverity().getName()) != null[ CD ]
Line_9 $$ SeverityBasedTextAttributes info = (SeverityBasedTextAttributes) listModel.getElementAt(i)-->Line_13 $$ final Color stripeColor = info.getAttributes().getErrorStripeColor()[ FD ]
