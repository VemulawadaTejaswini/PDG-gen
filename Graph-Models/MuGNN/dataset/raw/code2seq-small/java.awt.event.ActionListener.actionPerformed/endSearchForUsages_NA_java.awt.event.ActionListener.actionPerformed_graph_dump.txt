Line_16 $$ List<String> lines = new ArrayList<String>()-->Line_54 $$ lines.add(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf))[ FD ]
Line_2 $$ private void endSearchForUsages(@NotNull final AtomicBoolean findStartedBalloonShown) -->Line_4 $$ int usageCount = myUsageCountWithoutDefinition.get()[ CD ]
Line_16 $$ List<String> lines = new ArrayList<String>()-->Line_73 $$ lines = Arrays.asList(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf), createSearchInProjectHtml())[ FD ]
Line_57 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING-->Line_80 $$ notifyByFindBalloon(hyperlinkListener, type, myProcessPresentation, myProject, lines)[ FD ]
Line_51 $$ List<String> lines = new ArrayList<String>()-->Line_58 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ FD ]
Line_69 $$ if (myOutOfScopeUsages.get() == 0 || getPsiElement(mySearchFor) == null) -->Line_73 $$ lines = Arrays.asList(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf), createSearchInProjectHtml())[ CD ]
Line_2 $$ private void endSearchForUsages(@NotNull final AtomicBoolean findStartedBalloonShown) -->Line_85 $$ if (myListener != null) [ CD ]
Line_28 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)-->Line_36 $$ int option = Messages.showDialog(myProject, message, UsageViewBundle.message("dialog.title.information"), ArrayUtil.toStringArray(titles), 0, Messages.getInformationIcon())[ FD ]
Line_79 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING-->Line_80 $$ notifyByFindBalloon(hyperlinkListener, type, myProcessPresentation, myProject, lines)[ FD ]
Line_77 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_80 $$ notifyByFindBalloon(hyperlinkListener, type, myProcessPresentation, myProject, lines)[ CD ]
Line_51 $$ List<String> lines = new ArrayList<String>()-->Line_56 $$ lines.add(createOptionsHtml(mySearchFor))[ FD ]
Line_77 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_79 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING[ CD ]
Line_15 $$ if (notFoundActions.isEmpty()) -->Line_17 $$ lines.add(StringUtil.escapeXml(message))[ CD ]
Line_15 $$ if (notFoundActions.isEmpty()) -->Line_26 $$ findStartedBalloonShown.set(false)[ CD ]
Line_13 $$ final List<Action> notFoundActions = myProcessPresentation.getNotFoundActions()-->Line_15 $$ if (notFoundActions.isEmpty()) [ FD ]
Line_63 $$ if (usageView != null) -->Line_65 $$ usageView.setSearchInProgress(false)[ CD ]
Line_44 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_51 $$ List<String> lines = new ArrayList<String>()[ CD ]
Line_44 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_47 $$ if (usage.canNavigate()) [ CD ]
Line_63 $$ if (usageView != null) -->Line_64 $$ usageView.drainQueuedUsageNodes()[ CD ]
Line_6 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_14 $$ final String message = UsageViewBundle.message("dialog.no.usages.found.in", StringUtil.decapitalize(myPresentation.getUsagesString()), myPresentation.getScopeText(), myPresentation.getContextText())[ CD ]
Line_43 $$ if (usageCount == 1 && !myProcessPresentation.isShowPanelIfOnlyOneUsage()) -->Line_62 $$ final UsageViewImpl usageView = myUsageViewRef.get()[ CD ]
Line_31 $$ Object value = action.getValue(FindUsagesProcessPresentation.NAME_WITH_MNEMONIC_KEY)-->Line_32 $$ if (value == null)[ FD ]
Line_15 $$ if (notFoundActions.isEmpty()) -->Line_36 $$ int option = Messages.showDialog(myProject, message, UsageViewBundle.message("dialog.title.information"), ArrayUtil.toStringArray(titles), 0, Messages.getInformationIcon())[ CD ]
Line_24 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING-->Line_80 $$ notifyByFindBalloon(hyperlinkListener, type, myProcessPresentation, myProject, lines)[ FD ]
Line_70 $$ lines = Collections.emptyList()-->Line_80 $$ notifyByFindBalloon(hyperlinkListener, type, myProcessPresentation, myProject, lines)[ FD ]
Line_6 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_8 $$ if (myProcessPresentation.isCanceled()) [ CD ]
Line_51 $$ List<String> lines = new ArrayList<String>()-->Line_52 $$ lines.add("Only one usage found.")[ FD ]
Line_16 $$ List<String> lines = new ArrayList<String>()-->Line_22 $$ lines.add(createOptionsHtml(mySearchFor))[ FD ]
Line_8 $$ if (myProcessPresentation.isCanceled()) -->Line_11 $$ return[ CD ]
Line_43 $$ if (usageCount == 1 && !myProcessPresentation.isShowPanelIfOnlyOneUsage()) -->Line_76 $$ if (!myProcessPresentation.getLargeFiles().isEmpty() || myOutOfScopeUsages.get() != 0 || myProcessPresentation.searchIncludingProjectFileUsages() != null) [ CD ]
Line_15 $$ if (notFoundActions.isEmpty()) -->Line_28 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)[ CD ]
Line_13 $$ final List<Action> notFoundActions = myProcessPresentation.getNotFoundActions()-->Line_38 $$ notFoundActions.get(option - 1).actionPerformed(new ActionEvent(this, 0, titles.get(option)))[ FD ]
Line_51 $$ List<String> lines = new ArrayList<String>()-->Line_70 $$ lines = Collections.emptyList()[ FD ]
Line_13 $$ final List<Action> notFoundActions = myProcessPresentation.getNotFoundActions()-->Line_28 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)[ FD ]
Line_46 $$ Usage usage = myFirstUsage.get()-->Line_47 $$ if (usage.canNavigate()) [ FD ]
Line_14 $$ final String message = UsageViewBundle.message("dialog.no.usages.found.in", StringUtil.decapitalize(myPresentation.getUsagesString()), myPresentation.getScopeText(), myPresentation.getContextText())-->Line_17 $$ lines.add(StringUtil.escapeXml(message))[ FD ]
Line_73 $$ lines = Arrays.asList(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf), createSearchInProjectHtml())-->Line_80 $$ notifyByFindBalloon(hyperlinkListener, type, myProcessPresentation, myProject, lines)[ FD ]
Line_21 $$ if (myProcessPresentation.isShowFindOptionsPrompt()) -->Line_22 $$ lines.add(createOptionsHtml(mySearchFor))[ CD ]
Line_15 $$ if (notFoundActions.isEmpty()) -->Line_24 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING[ CD ]
Line_36 $$ int option = Messages.showDialog(myProject, message, UsageViewBundle.message("dialog.title.information"), ArrayUtil.toStringArray(titles), 0, Messages.getInformationIcon())-->Line_38 $$ notFoundActions.get(option - 1).actionPerformed(new ActionEvent(this, 0, titles.get(option)))[ FD ]
Line_44 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_53 $$ if (myOutOfScopeUsages.get() != 0) [ CD ]
Line_6 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_13 $$ final List<Action> notFoundActions = myProcessPresentation.getNotFoundActions()[ CD ]
Line_44 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_57 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING[ CD ]
Line_24 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING-->Line_58 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ FD ]
Line_53 $$ if (myOutOfScopeUsages.get() != 0) -->Line_54 $$ lines.add(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf))[ CD ]
Line_15 $$ if (notFoundActions.isEmpty()) -->Line_29 $$ titles.add(UsageViewBundle.message("dialog.button.ok"))[ CD ]
Line_14 $$ final String message = UsageViewBundle.message("dialog.no.usages.found.in", StringUtil.decapitalize(myPresentation.getUsagesString()), myPresentation.getScopeText(), myPresentation.getContextText())-->Line_36 $$ int option = Messages.showDialog(myProject, message, UsageViewBundle.message("dialog.title.information"), ArrayUtil.toStringArray(titles), 0, Messages.getInformationIcon())[ FD ]
Line_57 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING-->Line_58 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ FD ]
Line_69 $$ if (myOutOfScopeUsages.get() == 0 || getPsiElement(mySearchFor) == null) -->Line_74 $$ hyperlinkListener = createSearchInProjectListener()[ CD ]
Line_43 $$ if (usageCount == 1 && !myProcessPresentation.isShowPanelIfOnlyOneUsage()) -->Line_63 $$ if (usageView != null) [ CD ]
Line_46 $$ Usage usage = myFirstUsage.get()-->Line_49 $$ flashUsageScriptaculously(usage)[ FD ]
Line_46 $$ Usage usage = myFirstUsage.get()-->Line_48 $$ usage.navigate(true)[ FD ]
Line_5 $$ if (usageCount == 0 && myProcessPresentation.isShowNotFoundMessage()) -->Line_6 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ CD ]
Line_16 $$ List<String> lines = new ArrayList<String>()-->Line_56 $$ lines.add(createOptionsHtml(mySearchFor))[ FD ]
Line_16 $$ List<String> lines = new ArrayList<String>()-->Line_25 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ FD ]
Line_51 $$ List<String> lines = new ArrayList<String>()-->Line_80 $$ notifyByFindBalloon(hyperlinkListener, type, myProcessPresentation, myProject, lines)[ FD ]
Line_2 $$ private void endSearchForUsages(@NotNull final AtomicBoolean findStartedBalloonShown) -->Line_5 $$ if (usageCount == 0 && myProcessPresentation.isShowNotFoundMessage()) [ CD ]
Line_18 $$ if (myOutOfScopeUsages.get() != 0) -->Line_19 $$ lines.add(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf))[ CD ]
Line_43 $$ if (usageCount == 1 && !myProcessPresentation.isShowPanelIfOnlyOneUsage()) -->Line_44 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ CD ]
Line_76 $$ if (!myProcessPresentation.getLargeFiles().isEmpty() || myOutOfScopeUsages.get() != 0 || myProcessPresentation.searchIncludingProjectFileUsages() != null) -->Line_77 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ CD ]
Line_32 $$ if (value == null)-->Line_33 $$ value = action.getValue(Action.NAME)[ CD ]
Line_8 $$ if (myProcessPresentation.isCanceled()) -->Line_10 $$ findStartedBalloonShown.set(false)[ CD ]
Line_15 $$ if (notFoundActions.isEmpty()) -->Line_18 $$ if (myOutOfScopeUsages.get() != 0) [ CD ]
Line_16 $$ List<String> lines = new ArrayList<String>()-->Line_17 $$ lines.add(StringUtil.escapeXml(message))[ FD ]
Line_15 $$ if (notFoundActions.isEmpty()) -->Line_25 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ CD ]
Line_47 $$ if (usage.canNavigate()) -->Line_48 $$ usage.navigate(true)[ CD ]
Line_44 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_58 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ CD ]
Line_70 $$ lines = Collections.emptyList()-->Line_73 $$ lines = Arrays.asList(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf), createSearchInProjectHtml())[ FD ]
Line_37 $$ if (option > 0) -->Line_38 $$ notFoundActions.get(option - 1).actionPerformed(new ActionEvent(this, 0, titles.get(option)))[ CD ]
Line_30 $$ for (Action action : notFoundActions) -->Line_33 $$ value = action.getValue(Action.NAME)[ FD ]
Line_51 $$ List<String> lines = new ArrayList<String>()-->Line_54 $$ lines.add(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf))[ FD ]
Line_28 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)-->Line_29 $$ titles.add(UsageViewBundle.message("dialog.button.ok"))[ FD ]
Line_8 $$ if (myProcessPresentation.isCanceled()) -->Line_9 $$ notifyByFindBalloon(null, MessageType.WARNING, myProcessPresentation, myProject, Arrays.asList("Usage search was canceled"))[ CD ]
Line_28 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)-->Line_34 $$ titles.add((String) value)[ FD ]
Line_85 $$ if (myListener != null) -->Line_86 $$ myListener.findingUsagesFinished(myUsageViewRef.get())[ CD ]
Line_6 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_15 $$ if (notFoundActions.isEmpty()) [ CD ]
Line_16 $$ List<String> lines = new ArrayList<String>()-->Line_70 $$ lines = Collections.emptyList()[ FD ]
Line_43 $$ if (usageCount == 1 && !myProcessPresentation.isShowPanelIfOnlyOneUsage()) -->Line_69 $$ if (myOutOfScopeUsages.get() == 0 || getPsiElement(mySearchFor) == null) [ CD ]
Line_44 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_56 $$ lines.add(createOptionsHtml(mySearchFor))[ CD ]
Line_16 $$ List<String> lines = new ArrayList<String>()-->Line_58 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ FD ]
Line_16 $$ List<String> lines = new ArrayList<String>()-->Line_19 $$ lines.add(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf))[ FD ]
Line_31 $$ Object value = action.getValue(FindUsagesProcessPresentation.NAME_WITH_MNEMONIC_KEY)-->Line_33 $$ value = action.getValue(Action.NAME)[ FD ]
Line_24 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING-->Line_25 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ FD ]
Line_2 $$ private void endSearchForUsages(@NotNull final AtomicBoolean findStartedBalloonShown) -->Line_26 $$ findStartedBalloonShown.set(false)[ FD ]
Line_16 $$ List<String> lines = new ArrayList<String>()-->Line_52 $$ lines.add("Only one usage found.")[ FD ]
Line_44 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_52 $$ lines.add("Only one usage found.")[ CD ]
Line_16 $$ List<String> lines = new ArrayList<String>()-->Line_80 $$ notifyByFindBalloon(hyperlinkListener, type, myProcessPresentation, myProject, lines)[ FD ]
Line_28 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)-->Line_38 $$ notFoundActions.get(option - 1).actionPerformed(new ActionEvent(this, 0, titles.get(option)))[ FD ]
Line_30 $$ for (Action action : notFoundActions) -->Line_31 $$ Object value = action.getValue(FindUsagesProcessPresentation.NAME_WITH_MNEMONIC_KEY)[ FD ]
Line_51 $$ List<String> lines = new ArrayList<String>()-->Line_73 $$ lines = Arrays.asList(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf), createSearchInProjectHtml())[ FD ]
Line_2 $$ private void endSearchForUsages(@NotNull final AtomicBoolean findStartedBalloonShown) -->Line_10 $$ findStartedBalloonShown.set(false)[ FD ]
Line_36 $$ int option = Messages.showDialog(myProject, message, UsageViewBundle.message("dialog.title.information"), ArrayUtil.toStringArray(titles), 0, Messages.getInformationIcon())-->Line_37 $$ if (option > 0) [ FD ]
Line_15 $$ if (notFoundActions.isEmpty()) -->Line_16 $$ List<String> lines = new ArrayList<String>()[ CD ]
Line_5 $$ if (usageCount == 0 && myProcessPresentation.isShowNotFoundMessage()) -->Line_43 $$ if (usageCount == 1 && !myProcessPresentation.isShowPanelIfOnlyOneUsage()) [ CD ]
Line_69 $$ if (myOutOfScopeUsages.get() == 0 || getPsiElement(mySearchFor) == null) -->Line_70 $$ lines = Collections.emptyList()[ CD ]
Line_47 $$ if (usage.canNavigate()) -->Line_49 $$ flashUsageScriptaculously(usage)[ CD ]
Line_15 $$ if (notFoundActions.isEmpty()) -->Line_37 $$ if (option > 0) [ CD ]
Line_44 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_46 $$ Usage usage = myFirstUsage.get()[ CD ]
Line_15 $$ if (notFoundActions.isEmpty()) -->Line_21 $$ if (myProcessPresentation.isShowFindOptionsPrompt()) [ CD ]
