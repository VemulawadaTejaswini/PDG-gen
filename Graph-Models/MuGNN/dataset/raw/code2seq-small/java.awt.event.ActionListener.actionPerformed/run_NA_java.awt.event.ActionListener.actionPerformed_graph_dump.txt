Line_3 $$ if (myProcessPresentation.isCanceled()) -->Line_6 $$ return[ CD ]
Line_27 $$ if (value == null)-->Line_28 $$ value = action.getValue(Action.NAME)[ CD ]
Line_10 $$ if (notFoundActions.isEmpty()) -->Line_21 $$ findStartedBalloonShown.set(false)[ CD ]
Line_23 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)-->Line_33 $$ notFoundActions.get(option - 1).actionPerformed(new ActionEvent(this, 0, titles.get(option)))[ FD ]
Line_32 $$ if (option > 0) -->Line_33 $$ notFoundActions.get(option - 1).actionPerformed(new ActionEvent(this, 0, titles.get(option)))[ CD ]
Line_2 $$ public void run() -->Line_8 $$ final List<Action> notFoundActions = myProcessPresentation.getNotFoundActions()[ CD ]
Line_10 $$ if (notFoundActions.isEmpty()) -->Line_19 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING[ CD ]
Line_16 $$ if (myProcessPresentation.isShowFindOptionsPrompt()) -->Line_17 $$ lines.add(createOptionsHtml(mySearchFor))[ CD ]
Line_11 $$ List<String> lines = new ArrayList<String>()-->Line_12 $$ lines.add(StringUtil.escapeXml(message))[ FD ]
Line_10 $$ if (notFoundActions.isEmpty()) -->Line_31 $$ int option = Messages.showDialog(myProject, message, UsageViewBundle.message("dialog.title.information"), ArrayUtil.toStringArray(titles), 0, Messages.getInformationIcon())[ CD ]
Line_25 $$ for (Action action : notFoundActions) -->Line_26 $$ Object value = action.getValue(FindUsagesProcessPresentation.NAME_WITH_MNEMONIC_KEY)[ FD ]
Line_26 $$ Object value = action.getValue(FindUsagesProcessPresentation.NAME_WITH_MNEMONIC_KEY)-->Line_27 $$ if (value == null)[ FD ]
Line_19 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING-->Line_20 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ FD ]
Line_13 $$ if (myOutOfScopeUsages.get() != 0) -->Line_14 $$ lines.add(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf))[ CD ]
Line_10 $$ if (notFoundActions.isEmpty()) -->Line_20 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ CD ]
Line_10 $$ if (notFoundActions.isEmpty()) -->Line_13 $$ if (myOutOfScopeUsages.get() != 0) [ CD ]
Line_10 $$ if (notFoundActions.isEmpty()) -->Line_23 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)[ CD ]
Line_8 $$ final List<Action> notFoundActions = myProcessPresentation.getNotFoundActions()-->Line_23 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)[ FD ]
Line_9 $$ final String message = UsageViewBundle.message("dialog.no.usages.found.in", StringUtil.decapitalize(myPresentation.getUsagesString()), myPresentation.getScopeText(), myPresentation.getContextText())-->Line_12 $$ lines.add(StringUtil.escapeXml(message))[ FD ]
Line_23 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)-->Line_24 $$ titles.add(UsageViewBundle.message("dialog.button.ok"))[ FD ]
Line_23 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)-->Line_31 $$ int option = Messages.showDialog(myProject, message, UsageViewBundle.message("dialog.title.information"), ArrayUtil.toStringArray(titles), 0, Messages.getInformationIcon())[ FD ]
Line_26 $$ Object value = action.getValue(FindUsagesProcessPresentation.NAME_WITH_MNEMONIC_KEY)-->Line_28 $$ value = action.getValue(Action.NAME)[ FD ]
Line_9 $$ final String message = UsageViewBundle.message("dialog.no.usages.found.in", StringUtil.decapitalize(myPresentation.getUsagesString()), myPresentation.getScopeText(), myPresentation.getContextText())-->Line_31 $$ int option = Messages.showDialog(myProject, message, UsageViewBundle.message("dialog.title.information"), ArrayUtil.toStringArray(titles), 0, Messages.getInformationIcon())[ FD ]
Line_3 $$ if (myProcessPresentation.isCanceled()) -->Line_4 $$ notifyByFindBalloon(null, MessageType.WARNING, myProcessPresentation, myProject, Arrays.asList("Usage search was canceled"))[ CD ]
Line_11 $$ List<String> lines = new ArrayList<String>()-->Line_20 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ FD ]
Line_23 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)-->Line_29 $$ titles.add((String) value)[ FD ]
Line_31 $$ int option = Messages.showDialog(myProject, message, UsageViewBundle.message("dialog.title.information"), ArrayUtil.toStringArray(titles), 0, Messages.getInformationIcon())-->Line_32 $$ if (option > 0) [ FD ]
Line_10 $$ if (notFoundActions.isEmpty()) -->Line_24 $$ titles.add(UsageViewBundle.message("dialog.button.ok"))[ CD ]
Line_10 $$ if (notFoundActions.isEmpty()) -->Line_32 $$ if (option > 0) [ CD ]
Line_2 $$ public void run() -->Line_9 $$ final String message = UsageViewBundle.message("dialog.no.usages.found.in", StringUtil.decapitalize(myPresentation.getUsagesString()), myPresentation.getScopeText(), myPresentation.getContextText())[ CD ]
Line_10 $$ if (notFoundActions.isEmpty()) -->Line_11 $$ List<String> lines = new ArrayList<String>()[ CD ]
Line_3 $$ if (myProcessPresentation.isCanceled()) -->Line_5 $$ findStartedBalloonShown.set(false)[ CD ]
Line_2 $$ public void run() -->Line_10 $$ if (notFoundActions.isEmpty()) [ CD ]
Line_8 $$ final List<Action> notFoundActions = myProcessPresentation.getNotFoundActions()-->Line_33 $$ notFoundActions.get(option - 1).actionPerformed(new ActionEvent(this, 0, titles.get(option)))[ FD ]
Line_8 $$ final List<Action> notFoundActions = myProcessPresentation.getNotFoundActions()-->Line_10 $$ if (notFoundActions.isEmpty()) [ FD ]
Line_10 $$ if (notFoundActions.isEmpty()) -->Line_12 $$ lines.add(StringUtil.escapeXml(message))[ CD ]
Line_25 $$ for (Action action : notFoundActions) -->Line_28 $$ value = action.getValue(Action.NAME)[ FD ]
Line_11 $$ List<String> lines = new ArrayList<String>()-->Line_14 $$ lines.add(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf))[ FD ]
Line_2 $$ public void run() -->Line_3 $$ if (myProcessPresentation.isCanceled()) [ CD ]
Line_10 $$ if (notFoundActions.isEmpty()) -->Line_16 $$ if (myProcessPresentation.isShowFindOptionsPrompt()) [ CD ]
Line_31 $$ int option = Messages.showDialog(myProject, message, UsageViewBundle.message("dialog.title.information"), ArrayUtil.toStringArray(titles), 0, Messages.getInformationIcon())-->Line_33 $$ notFoundActions.get(option - 1).actionPerformed(new ActionEvent(this, 0, titles.get(option)))[ FD ]
Line_11 $$ List<String> lines = new ArrayList<String>()-->Line_17 $$ lines.add(createOptionsHtml(mySearchFor))[ FD ]
