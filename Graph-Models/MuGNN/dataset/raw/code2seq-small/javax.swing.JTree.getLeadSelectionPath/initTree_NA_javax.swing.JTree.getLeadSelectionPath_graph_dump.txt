Line_36 $$ TreePath path = event.getPath()-->Line_37 $$ Object component = path.getLastPathComponent()[ FD ]
Line_2 $$ private void initTree() -->Line_8 $$ myTree.addKeyListener(new KeyAdapter() [ CD ]
Line_17 $$ if (node instanceof UsageNode) -->Line_19 $$ usage.navigate(false)[ CD ]
Line_2 $$ private void initTree() -->Line_5 $$ SmartExpander.installOn(myTree)[ CD ]
Line_2 $$ private void initTree() -->Line_3 $$ myTree.setRootVisible(false)[ CD ]
Line_54 $$ Object value = o.getLastPathComponent()-->Line_60 $$ return value == null ? null : value.toString()[ FD ]
Line_54 $$ Object value = o.getLastPathComponent()-->Line_58 $$ return coloredRenderer.getPlainTextForNode(value)[ FD ]
Line_8 $$ myTree.addKeyListener(new KeyAdapter() -->Line_12 $$ if (KeyEvent.VK_ENTER == e.getKeyCode()) [ FD ]
Line_36 $$ TreePath path = event.getPath()-->Line_42 $$ checkNodeValidity(node, path)[ FD ]
Line_16 $$ DefaultMutableTreeNode node = (DefaultMutableTreeNode) leadSelectionPath.getLastPathComponent()-->Line_41 $$ if (!expandingAll && node.needsUpdate()) [ FD ]
Line_50 $$ TreeUIHelper.getInstance().installTreeSpeedSearch(myTree, new Convertor<TreePath, String>() -->Line_60 $$ return value == null ? null : value.toString()[ CD ]
Line_22 $$ Navigatable navigatable = getNavigatableForNode(node)-->Line_24 $$ navigatable.navigate(false)[ FD ]
Line_41 $$ if (!expandingAll && node.needsUpdate()) -->Line_42 $$ checkNodeValidity(node, path)[ CD ]
Line_14 $$ if (leadSelectionPath == null)-->Line_15 $$ return[ CD ]
Line_18 $$ final Usage usage = ((UsageNode) node).getUsage()-->Line_19 $$ usage.navigate(false)[ FD ]
Line_2 $$ private void initTree() -->Line_6 $$ TreeUtil.installActions(myTree)[ CD ]
Line_2 $$ private void initTree() -->Line_50 $$ TreeUIHelper.getInstance().installTreeSpeedSearch(myTree, new Convertor<TreePath, String>() [ CD ]
Line_50 $$ TreeUIHelper.getInstance().installTreeSpeedSearch(myTree, new Convertor<TreePath, String>() -->Line_54 $$ Object value = o.getLastPathComponent()[ FD ]
Line_17 $$ if (node instanceof UsageNode) -->Line_21 $$ if (node.isLeaf()) [ CD ]
Line_18 $$ final Usage usage = ((UsageNode) node).getUsage()-->Line_20 $$ usage.highlightInEditor()[ FD ]
Line_8 $$ myTree.addKeyListener(new KeyAdapter() -->Line_12 $$ if (KeyEvent.VK_ENTER == e.getKeyCode()) [ CD ]
Line_21 $$ if (node.isLeaf()) -->Line_23 $$ if (navigatable != null && navigatable.canNavigate()) [ CD ]
Line_32 $$ myTree.addTreeExpansionListener(new TreeExpansionListener() -->Line_36 $$ TreePath path = event.getPath()[ FD ]
Line_40 $$ Node node = (Node) component-->Line_41 $$ if (!expandingAll && node.needsUpdate()) [ FD ]
Line_32 $$ myTree.addTreeExpansionListener(new TreeExpansionListener() -->Line_40 $$ Node node = (Node) component[ CD ]
Line_16 $$ DefaultMutableTreeNode node = (DefaultMutableTreeNode) leadSelectionPath.getLastPathComponent()-->Line_42 $$ checkNodeValidity(node, path)[ FD ]
Line_50 $$ TreeUIHelper.getInstance().installTreeSpeedSearch(myTree, new Convertor<TreePath, String>() -->Line_55 $$ TreeCellRenderer renderer = myTree.getCellRenderer()[ CD ]
Line_2 $$ private void initTree() -->Line_30 $$ TreeUtil.selectFirstNode(myTree)[ CD ]
Line_32 $$ myTree.addTreeExpansionListener(new TreeExpansionListener() -->Line_41 $$ if (!expandingAll && node.needsUpdate()) [ CD ]
Line_22 $$ Navigatable navigatable = getNavigatableForNode(node)-->Line_23 $$ if (navigatable != null && navigatable.canNavigate()) [ FD ]
Line_2 $$ private void initTree() -->Line_7 $$ EditSourceOnDoubleClickHandler.install(myTree)[ CD ]
Line_57 $$ UsageViewTreeCellRenderer coloredRenderer = (UsageViewTreeCellRenderer) renderer-->Line_58 $$ return coloredRenderer.getPlainTextForNode(value)[ FD ]
Line_40 $$ Node node = (Node) component-->Line_42 $$ checkNodeValidity(node, path)[ FD ]
Line_56 $$ if (renderer instanceof UsageViewTreeCellRenderer) -->Line_58 $$ return coloredRenderer.getPlainTextForNode(value)[ CD ]
Line_2 $$ private void initTree() -->Line_4 $$ myTree.setShowsRootHandles(true)[ CD ]
Line_16 $$ DefaultMutableTreeNode node = (DefaultMutableTreeNode) leadSelectionPath.getLastPathComponent()-->Line_22 $$ Navigatable navigatable = getNavigatableForNode(node)[ FD ]
Line_12 $$ if (KeyEvent.VK_ENTER == e.getKeyCode()) -->Line_17 $$ if (node instanceof UsageNode) [ CD ]
Line_13 $$ TreePath leadSelectionPath = myTree.getLeadSelectionPath()-->Line_16 $$ DefaultMutableTreeNode node = (DefaultMutableTreeNode) leadSelectionPath.getLastPathComponent()[ FD ]
Line_12 $$ if (KeyEvent.VK_ENTER == e.getKeyCode()) -->Line_14 $$ if (leadSelectionPath == null)[ CD ]
Line_32 $$ myTree.addTreeExpansionListener(new TreeExpansionListener() -->Line_36 $$ TreePath path = event.getPath()[ CD ]
Line_38 $$ if (!(component instanceof Node))-->Line_39 $$ return[ CD ]
Line_55 $$ TreeCellRenderer renderer = myTree.getCellRenderer()-->Line_56 $$ if (renderer instanceof UsageViewTreeCellRenderer) [ FD ]
Line_21 $$ if (node.isLeaf()) -->Line_22 $$ Navigatable navigatable = getNavigatableForNode(node)[ CD ]
Line_23 $$ if (navigatable != null && navigatable.canNavigate()) -->Line_24 $$ navigatable.navigate(false)[ CD ]
Line_17 $$ if (node instanceof UsageNode) -->Line_18 $$ final Usage usage = ((UsageNode) node).getUsage()[ CD ]
Line_50 $$ TreeUIHelper.getInstance().installTreeSpeedSearch(myTree, new Convertor<TreePath, String>() -->Line_54 $$ Object value = o.getLastPathComponent()[ CD ]
Line_13 $$ TreePath leadSelectionPath = myTree.getLeadSelectionPath()-->Line_14 $$ if (leadSelectionPath == null)[ FD ]
Line_12 $$ if (KeyEvent.VK_ENTER == e.getKeyCode()) -->Line_16 $$ DefaultMutableTreeNode node = (DefaultMutableTreeNode) leadSelectionPath.getLastPathComponent()[ CD ]
Line_2 $$ private void initTree() -->Line_31 $$ PopupHandler.installPopupHandler(myTree, IdeActions.GROUP_USAGE_VIEW_POPUP, ActionPlaces.USAGE_VIEW_POPUP)[ CD ]
Line_17 $$ if (node instanceof UsageNode) -->Line_20 $$ usage.highlightInEditor()[ CD ]
Line_2 $$ private void initTree() -->Line_32 $$ myTree.addTreeExpansionListener(new TreeExpansionListener() [ CD ]
Line_32 $$ myTree.addTreeExpansionListener(new TreeExpansionListener() -->Line_37 $$ Object component = path.getLastPathComponent()[ CD ]
Line_12 $$ if (KeyEvent.VK_ENTER == e.getKeyCode()) -->Line_13 $$ TreePath leadSelectionPath = myTree.getLeadSelectionPath()[ CD ]
Line_16 $$ DefaultMutableTreeNode node = (DefaultMutableTreeNode) leadSelectionPath.getLastPathComponent()-->Line_17 $$ if (node instanceof UsageNode) [ FD ]
Line_50 $$ TreeUIHelper.getInstance().installTreeSpeedSearch(myTree, new Convertor<TreePath, String>() -->Line_56 $$ if (renderer instanceof UsageViewTreeCellRenderer) [ CD ]
Line_16 $$ DefaultMutableTreeNode node = (DefaultMutableTreeNode) leadSelectionPath.getLastPathComponent()-->Line_21 $$ if (node.isLeaf()) [ FD ]
Line_56 $$ if (renderer instanceof UsageViewTreeCellRenderer) -->Line_57 $$ UsageViewTreeCellRenderer coloredRenderer = (UsageViewTreeCellRenderer) renderer[ CD ]
Line_32 $$ myTree.addTreeExpansionListener(new TreeExpansionListener() -->Line_38 $$ if (!(component instanceof Node))[ CD ]
