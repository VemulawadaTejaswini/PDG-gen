Line_9 $$ for (String config : getModelHintsConfigs()) -->Line_10 $$ if (config.startsWith("classpath*:")) [ FD ]
Line_33 $$ try (InputStream curInputStream = inputStream) -->Line_34 $$ read(classLoader, config, curInputStream)[ FD ]
Line_12 $$ Enumeration<URL> enu = classLoader.getResources(name)-->Line_16 $$ while (enu.hasMoreElements()) [ FD ]
Line_26 $$ if (inputStream == null) -->Line_31 $$ inputStream = new FileInputStream(file)[ CD ]
Line_17 $$ URL url = enu.nextElement()-->Line_21 $$ InputStream inputStream = url.openStream()[ FD ]
Line_10 $$ if (config.startsWith("classpath*:")) -->Line_16 $$ while (enu.hasMoreElements()) [ CD ]
Line_8 $$ ClassLoader classLoader = getClass().getClassLoader()-->Line_22 $$ read(classLoader, url.toString(), inputStream)[ FD ]
Line_9 $$ for (String config : getModelHintsConfigs()) -->Line_11 $$ String name = config.substring("classpath*:".length())[ FD ]
Line_8 $$ ClassLoader classLoader = getClass().getClassLoader()-->Line_12 $$ Enumeration<URL> enu = classLoader.getResources(name)[ FD ]
Line_8 $$ ClassLoader classLoader = getClass().getClassLoader()-->Line_34 $$ read(classLoader, config, curInputStream)[ FD ]
Line_9 $$ for (String config : getModelHintsConfigs()) -->Line_25 $$ InputStream inputStream = classLoader.getResourceAsStream(config)[ FD ]
Line_16 $$ while (enu.hasMoreElements()) -->Line_22 $$ read(classLoader, url.toString(), inputStream)[ CD ]
Line_21 $$ InputStream inputStream = url.openStream()-->Line_22 $$ read(classLoader, url.toString(), inputStream)[ FD ]
Line_10 $$ if (config.startsWith("classpath*:")) -->Line_11 $$ String name = config.substring("classpath*:".length())[ CD ]
Line_18 $$ if (_log.isDebugEnabled()) -->Line_19 $$ _log.debug("Loading " + name + " from " + url)[ CD ]
Line_10 $$ if (config.startsWith("classpath*:")) -->Line_13 $$ if (_log.isDebugEnabled() && !enu.hasMoreElements()) [ CD ]
Line_16 $$ while (enu.hasMoreElements()) -->Line_21 $$ InputStream inputStream = url.openStream()[ CD ]
Line_12 $$ Enumeration<URL> enu = classLoader.getResources(name)-->Line_17 $$ URL url = enu.nextElement()[ FD ]
Line_12 $$ Enumeration<URL> enu = classLoader.getResources(name)-->Line_13 $$ if (_log.isDebugEnabled() && !enu.hasMoreElements()) [ FD ]
Line_9 $$ for (String config : getModelHintsConfigs()) -->Line_34 $$ read(classLoader, config, curInputStream)[ FD ]
Line_25 $$ InputStream inputStream = classLoader.getResourceAsStream(config)-->Line_31 $$ inputStream = new FileInputStream(file)[ FD ]
Line_10 $$ if (config.startsWith("classpath*:")) -->Line_12 $$ Enumeration<URL> enu = classLoader.getResources(name)[ CD ]
Line_26 $$ if (inputStream == null) -->Line_28 $$ if (!file.exists()) [ CD ]
Line_17 $$ URL url = enu.nextElement()-->Line_22 $$ read(classLoader, url.toString(), inputStream)[ FD ]
Line_8 $$ ClassLoader classLoader = getClass().getClassLoader()-->Line_25 $$ InputStream inputStream = classLoader.getResourceAsStream(config)[ FD ]
Line_25 $$ InputStream inputStream = classLoader.getResourceAsStream(config)-->Line_26 $$ if (inputStream == null) [ FD ]
Line_21 $$ InputStream inputStream = url.openStream()-->Line_31 $$ inputStream = new FileInputStream(file)[ FD ]
Line_26 $$ if (inputStream == null) -->Line_27 $$ File file = new File(config)[ CD ]
Line_16 $$ while (enu.hasMoreElements()) -->Line_17 $$ URL url = enu.nextElement()[ CD ]
Line_13 $$ if (_log.isDebugEnabled() && !enu.hasMoreElements()) -->Line_14 $$ _log.debug("No resources found for " + name)[ CD ]
Line_10 $$ if (config.startsWith("classpath*:")) -->Line_25 $$ InputStream inputStream = classLoader.getResourceAsStream(config)[ CD ]
Line_16 $$ while (enu.hasMoreElements()) -->Line_18 $$ if (_log.isDebugEnabled()) [ CD ]
Line_21 $$ InputStream inputStream = url.openStream()-->Line_26 $$ if (inputStream == null) [ FD ]
Line_27 $$ File file = new File(config)-->Line_28 $$ if (!file.exists()) [ FD ]
Line_11 $$ String name = config.substring("classpath*:".length())-->Line_12 $$ Enumeration<URL> enu = classLoader.getResources(name)[ FD ]
Line_10 $$ if (config.startsWith("classpath*:")) -->Line_26 $$ if (inputStream == null) [ CD ]
