Line_26 $$ if (destination.length() == 0) -->Line_28 $$ return[ CD ]
Line_30 $$ final String sdkLocation = ui.form.sdkLocationText.getText().trim()-->Line_31 $$ if (sdkLocation.length() == 0 && modules.contains(ProjectType.ANDROID)) [ FD ]
Line_62 $$ if (incompatList.size() == 0) -->Line_69 $$ JPanel panel = new JPanel()[ CD ]
Line_9 $$ if (pack.length() == 0) -->Line_11 $$ return[ CD ]
Line_15 $$ boolean matches = matcher.matches()-->Line_16 $$ if (!matches) [ FD ]
Line_100 $$ if (value != 0) -->Line_101 $$ return[ CD ]
Line_115 $$ new GdxSetup().build(builder, destination, name, pack, clazz, sdkLocation, new CharCallback() -->Line_119 $$ log(c)[ CD ]
Line_62 $$ if (incompatList.size() == 0) -->Line_100 $$ if (value != 0) [ CD ]
Line_80 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_84 $$ if (e.getEventType().equals(HyperlinkEvent.EventType.ACTIVATED))[ CD ]
Line_2 $$ void generate() -->Line_14 $$ Matcher matcher = pattern.matcher(pack)[ CD ]
Line_8 $$ final String pack = ui.form.packageText.getText().trim()-->Line_115 $$ new GdxSetup().build(builder, destination, name, pack, clazz, sdkLocation, new CharCallback() [ FD ]
Line_2 $$ void generate() -->Line_16 $$ if (!matches) [ CD ]
Line_4 $$ if (name.length() == 0) -->Line_6 $$ return[ CD ]
Line_123 $$ if (ui.settings.getGradleArgs().contains("eclipse") || ui.settings.getGradleArgs().contains("idea")) -->Line_125 $$ log("To import to Intellij IDEA: File -> Open -> YourProject.ipr")[ CD ]
Line_80 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_86 $$ Desktop.getDesktop().browse(new URI(e.getURL().toString()))[ FD ]
Line_79 $$ JEditorPane pane = new JEditorPane("text/html", "<a href=\"https://github.com/libgdx/libgdx/wiki/Dependency-management-with-Gradle\">Dependency Management</a>")-->Line_80 $$ pane.addHyperlinkListener(new HyperlinkListener() [ FD ]
Line_56 $$ int value = JOptionPane.showConfirmDialog(this, "The destination is not empty, do you want to overwrite?", "Warning!", JOptionPane.YES_NO_OPTION)-->Line_57 $$ if (value != 0) [ FD ]
Line_57 $$ if (value != 0) -->Line_58 $$ return[ CD ]
Line_69 $$ JPanel panel = new JPanel()-->Line_78 $$ panel.add(infoLabel)[ FD ]
Line_30 $$ final String sdkLocation = ui.form.sdkLocationText.getText().trim()-->Line_115 $$ new GdxSetup().build(builder, destination, name, pack, clazz, sdkLocation, new CharCallback() [ FD ]
Line_111 $$ new Thread() -->Line_114 $$ log("Generating app in " + destination)[ CD ]
Line_62 $$ if (incompatList.size() == 0) -->Line_77 $$ infoLabel.setAlignmentX(Component.CENTER_ALIGNMENT)[ CD ]
Line_14 $$ Matcher matcher = pattern.matcher(pack)-->Line_15 $$ boolean matches = matcher.matches()[ FD ]
Line_56 $$ int value = JOptionPane.showConfirmDialog(this, "The destination is not empty, do you want to overwrite?", "Warning!", JOptionPane.YES_NO_OPTION)-->Line_100 $$ if (value != 0) [ FD ]
Line_16 $$ if (!matches) -->Line_18 $$ return[ CD ]
Line_2 $$ void generate() -->Line_8 $$ final String pack = ui.form.packageText.getText().trim()[ CD ]
Line_2 $$ void generate() -->Line_20 $$ final String clazz = ui.form.gameClassText.getText().trim()[ CD ]
Line_39 $$ if (modules.contains(ProjectType.ANDROID)) -->Line_40 $$ if (!GdxSetup.isSdkUpToDate(sdkLocation)) [ CD ]
Line_123 $$ if (ui.settings.getGradleArgs().contains("eclipse") || ui.settings.getGradleArgs().contains("idea")) -->Line_127 $$ log("To import in Eclipse: File -> Import -> Gradle -> Gradle Project")[ CD ]
Line_115 $$ new GdxSetup().build(builder, destination, name, pack, clazz, sdkLocation, new CharCallback() -->Line_119 $$ log(c)[ FD ]
Line_25 $$ final String destination = ui.form.destinationText.getText().trim()-->Line_26 $$ if (destination.length() == 0) [ FD ]
Line_62 $$ if (incompatList.size() == 0) -->Line_78 $$ panel.add(infoLabel)[ CD ]
Line_69 $$ JPanel panel = new JPanel()-->Line_74 $$ panel.add(label)[ FD ]
Line_62 $$ if (incompatList.size() == 0) -->Line_95 $$ pane.setOpaque(false)[ CD ]
Line_61 $$ List<String> incompatList = builder.buildProject(modules, dependencies)-->Line_62 $$ if (incompatList.size() == 0) [ FD ]
Line_2 $$ void generate() -->Line_21 $$ if (clazz.length() == 0) [ CD ]
Line_79 $$ JEditorPane pane = new JEditorPane("text/html", "<a href=\"https://github.com/libgdx/libgdx/wiki/Dependency-management-with-Gradle\">Dependency Management</a>")-->Line_97 $$ panel.add(pane)[ FD ]
Line_69 $$ JPanel panel = new JPanel()-->Line_99 $$ int value = JOptionPane.showOptionDialog(null, panel, "Extension Incompatibilities", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, null)[ FD ]
Line_2 $$ void generate() -->Line_13 $$ Pattern pattern = Pattern.compile("[a-z][a-z0-9_]*(\\.[a-z0-9_]+)+[0-9a-z_]")[ CD ]
Line_111 $$ new Thread() -->Line_131 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_80 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_106 $$ e.printStackTrace()[ FD ]
Line_123 $$ if (ui.settings.getGradleArgs().contains("eclipse") || ui.settings.getGradleArgs().contains("idea")) -->Line_128 $$ log("To import to Intellij IDEA: File -> Open -> build.gradle")[ CD ]
Line_76 $$ JLabel infoLabel = new JLabel("<html><br><br>The project can be generated, but you wont be able to use these extensions in the respective sub modules<br>Please see the link to learn about extensions</html>")-->Line_77 $$ infoLabel.setAlignmentX(Component.CENTER_ALIGNMENT)[ FD ]
Line_2 $$ void generate() -->Line_31 $$ if (sdkLocation.length() == 0 && modules.contains(ProjectType.ANDROID)) [ CD ]
Line_2 $$ void generate() -->Line_39 $$ if (modules.contains(ProjectType.ANDROID)) [ CD ]
Line_2 $$ void generate() -->Line_111 $$ new Thread() [ CD ]
Line_123 $$ if (ui.settings.getGradleArgs().contains("eclipse") || ui.settings.getGradleArgs().contains("idea")) -->Line_129 $$ log("To import to NetBeans: File -> Open Project...")[ CD ]
Line_76 $$ JLabel infoLabel = new JLabel("<html><br><br>The project can be generated, but you wont be able to use these extensions in the respective sub modules<br>Please see the link to learn about extensions</html>")-->Line_78 $$ panel.add(infoLabel)[ FD ]
Line_111 $$ new Thread() -->Line_115 $$ new GdxSetup().build(builder, destination, name, pack, clazz, sdkLocation, new CharCallback() [ CD ]
Line_72 $$ JLabel label = new JLabel(subIncompat)-->Line_73 $$ label.setAlignmentX(Component.CENTER_ALIGNMENT)[ FD ]
Line_55 $$ if (!GdxSetup.isEmptyDirectory(destination)) -->Line_57 $$ if (value != 0) [ CD ]
Line_2 $$ void generate() -->Line_25 $$ final String destination = ui.form.destinationText.getText().trim()[ CD ]
Line_8 $$ final String pack = ui.form.packageText.getText().trim()-->Line_9 $$ if (pack.length() == 0) [ FD ]
Line_4 $$ if (name.length() == 0) -->Line_5 $$ JOptionPane.showMessageDialog(this, "Please enter a project name.")[ CD ]
Line_69 $$ JPanel panel = new JPanel()-->Line_97 $$ panel.add(pane)[ FD ]
Line_2 $$ void generate() -->Line_4 $$ if (name.length() == 0) [ CD ]
Line_2 $$ void generate() -->Line_15 $$ boolean matches = matcher.matches()[ CD ]
Line_21 $$ if (clazz.length() == 0) -->Line_22 $$ JOptionPane.showMessageDialog(this, "Please enter a game class name.")[ CD ]
Line_2 $$ void generate() -->Line_110 $$ ui.generateButton.setEnabled(false)[ CD ]
Line_25 $$ final String destination = ui.form.destinationText.getText().trim()-->Line_115 $$ new GdxSetup().build(builder, destination, name, pack, clazz, sdkLocation, new CharCallback() [ FD ]
Line_30 $$ final String sdkLocation = ui.form.sdkLocationText.getText().trim()-->Line_35 $$ if (!GdxSetup.isSdkLocationValid(sdkLocation) && modules.contains(ProjectType.ANDROID)) [ FD ]
Line_3 $$ final String name = ui.form.nameText.getText().trim()-->Line_4 $$ if (name.length() == 0) [ FD ]
Line_62 $$ if (incompatList.size() == 0) -->Line_94 $$ pane.setEditable(false)[ CD ]
Line_62 $$ if (incompatList.size() == 0) -->Line_99 $$ int value = JOptionPane.showOptionDialog(null, panel, "Extension Incompatibilities", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, null)[ CD ]
Line_55 $$ if (!GdxSetup.isEmptyDirectory(destination)) -->Line_56 $$ int value = JOptionPane.showConfirmDialog(this, "The destination is not empty, do you want to overwrite?", "Warning!", JOptionPane.YES_NO_OPTION)[ CD ]
Line_31 $$ if (sdkLocation.length() == 0 && modules.contains(ProjectType.ANDROID)) -->Line_33 $$ return[ CD ]
Line_79 $$ JEditorPane pane = new JEditorPane("text/html", "<a href=\"https://github.com/libgdx/libgdx/wiki/Dependency-management-with-Gradle\">Dependency Management</a>")-->Line_95 $$ pane.setOpaque(false)[ FD ]
Line_21 $$ if (clazz.length() == 0) -->Line_23 $$ return[ CD ]
Line_35 $$ if (!GdxSetup.isSdkLocationValid(sdkLocation) && modules.contains(ProjectType.ANDROID)) -->Line_36 $$ JOptionPane.showMessageDialog(this, "Your Android SDK path doesn't contain an SDK! Please install the Android SDK, including all platforms and build tools!")[ CD ]
Line_79 $$ JEditorPane pane = new JEditorPane("text/html", "<a href=\"https://github.com/libgdx/libgdx/wiki/Dependency-management-with-Gradle\">Dependency Management</a>")-->Line_94 $$ pane.setEditable(false)[ FD ]
Line_69 $$ JPanel panel = new JPanel()-->Line_70 $$ panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS))[ FD ]
Line_131 $$ SwingUtilities.invokeLater(new Runnable() -->Line_135 $$ ui.generateButton.setEnabled(true)[ CD ]
Line_111 $$ new Thread() -->Line_123 $$ if (ui.settings.getGradleArgs().contains("eclipse") || ui.settings.getGradleArgs().contains("idea")) [ CD ]
Line_20 $$ final String clazz = ui.form.gameClassText.getText().trim()-->Line_21 $$ if (clazz.length() == 0) [ FD ]
Line_35 $$ if (!GdxSetup.isSdkLocationValid(sdkLocation) && modules.contains(ProjectType.ANDROID)) -->Line_37 $$ return[ CD ]
Line_80 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_84 $$ if (e.getEventType().equals(HyperlinkEvent.EventType.ACTIVATED))[ FD ]
Line_62 $$ if (incompatList.size() == 0) -->Line_97 $$ panel.add(pane)[ CD ]
Line_111 $$ new Thread() -->Line_122 $$ log("Done!")[ CD ]
Line_62 $$ if (incompatList.size() == 0) -->Line_96 $$ pane.setAlignmentX(Component.CENTER_ALIGNMENT)[ CD ]
Line_30 $$ final String sdkLocation = ui.form.sdkLocationText.getText().trim()-->Line_44 $$ String replaced = sdkLocation.replace("\\", "\\\\")[ FD ]
Line_30 $$ final String sdkLocation = ui.form.sdkLocationText.getText().trim()-->Line_40 $$ if (!GdxSetup.isSdkUpToDate(sdkLocation)) [ FD ]
Line_13 $$ Pattern pattern = Pattern.compile("[a-z][a-z0-9_]*(\\.[a-z0-9_]+)+[0-9a-z_]")-->Line_14 $$ Matcher matcher = pattern.matcher(pack)[ FD ]
Line_20 $$ final String clazz = ui.form.gameClassText.getText().trim()-->Line_115 $$ new GdxSetup().build(builder, destination, name, pack, clazz, sdkLocation, new CharCallback() [ FD ]
Line_123 $$ if (ui.settings.getGradleArgs().contains("eclipse") || ui.settings.getGradleArgs().contains("idea")) -->Line_124 $$ log("To import in Eclipse: File -> Import -> General -> Existing Projects into Workspace")[ CD ]
Line_62 $$ if (incompatList.size() == 0) -->Line_70 $$ panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS))[ CD ]
Line_2 $$ void generate() -->Line_62 $$ if (incompatList.size() == 0) [ CD ]
Line_9 $$ if (pack.length() == 0) -->Line_10 $$ JOptionPane.showMessageDialog(this, "Please enter a package name.")[ CD ]
Line_2 $$ void generate() -->Line_3 $$ final String name = ui.form.nameText.getText().trim()[ CD ]
Line_2 $$ void generate() -->Line_26 $$ if (destination.length() == 0) [ CD ]
Line_3 $$ final String name = ui.form.nameText.getText().trim()-->Line_115 $$ new GdxSetup().build(builder, destination, name, pack, clazz, sdkLocation, new CharCallback() [ FD ]
Line_31 $$ if (sdkLocation.length() == 0 && modules.contains(ProjectType.ANDROID)) -->Line_32 $$ JOptionPane.showMessageDialog(this, "Please enter your Android SDK's path")[ CD ]
Line_2 $$ void generate() -->Line_35 $$ if (!GdxSetup.isSdkLocationValid(sdkLocation) && modules.contains(ProjectType.ANDROID)) [ CD ]
Line_72 $$ JLabel label = new JLabel(subIncompat)-->Line_74 $$ panel.add(label)[ FD ]
Line_79 $$ JEditorPane pane = new JEditorPane("text/html", "<a href=\"https://github.com/libgdx/libgdx/wiki/Dependency-management-with-Gradle\">Dependency Management</a>")-->Line_96 $$ pane.setAlignmentX(Component.CENTER_ALIGNMENT)[ FD ]
Line_8 $$ final String pack = ui.form.packageText.getText().trim()-->Line_14 $$ Matcher matcher = pattern.matcher(pack)[ FD ]
Line_62 $$ if (incompatList.size() == 0) -->Line_79 $$ JEditorPane pane = new JEditorPane("text/html", "<a href=\"https://github.com/libgdx/libgdx/wiki/Dependency-management-with-Gradle\">Dependency Management</a>")[ CD ]
Line_2 $$ void generate() -->Line_55 $$ if (!GdxSetup.isEmptyDirectory(destination)) [ CD ]
Line_2 $$ void generate() -->Line_9 $$ if (pack.length() == 0) [ CD ]
Line_62 $$ if (incompatList.size() == 0) -->Line_76 $$ JLabel infoLabel = new JLabel("<html><br><br>The project can be generated, but you wont be able to use these extensions in the respective sub modules<br>Please see the link to learn about extensions</html>")[ CD ]
Line_16 $$ if (!matches) -->Line_17 $$ JOptionPane.showMessageDialog(this, "Invalid package name")[ CD ]
Line_2 $$ void generate() -->Line_30 $$ final String sdkLocation = ui.form.sdkLocationText.getText().trim()[ CD ]
Line_40 $$ if (!GdxSetup.isSdkUpToDate(sdkLocation)) -->Line_52 $$ return[ CD ]
Line_62 $$ if (incompatList.size() == 0) -->Line_80 $$ pane.addHyperlinkListener(new HyperlinkListener() [ CD ]
Line_25 $$ final String destination = ui.form.destinationText.getText().trim()-->Line_55 $$ if (!GdxSetup.isEmptyDirectory(destination)) [ FD ]
Line_2 $$ void generate() -->Line_61 $$ List<String> incompatList = builder.buildProject(modules, dependencies)[ CD ]
Line_26 $$ if (destination.length() == 0) -->Line_27 $$ JOptionPane.showMessageDialog(this, "Please enter a destination directory.")[ CD ]
