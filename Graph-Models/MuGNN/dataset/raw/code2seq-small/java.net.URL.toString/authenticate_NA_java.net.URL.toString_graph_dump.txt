Line_27 $$ conn = connConfigurator.configure(conn)-->Line_30 $$ conn.connect()[ FD ]
Line_27 $$ conn = connConfigurator.configure(conn)-->Line_31 $$ AuthenticatedURL.extractToken(conn, token)[ FD ]
Line_25 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_29 $$ conn.setRequestMethod("OPTIONS")[ FD ]
Line_25 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_27 $$ conn = connConfigurator.configure(conn)[ FD ]
Line_25 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_30 $$ conn.connect()[ FD ]
Line_27 $$ conn = connConfigurator.configure(conn)-->Line_29 $$ conn.setRequestMethod("OPTIONS")[ FD ]
Line_26 $$ if (connConfigurator != null) -->Line_27 $$ conn = connConfigurator.configure(conn)[ CD ]
Line_21 $$ String strUrl = url.toString()-->Line_23 $$ strUrl += paramSeparator + USER_NAME_EQ + getUserName()[ FD ]
Line_25 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_31 $$ AuthenticatedURL.extractToken(conn, token)[ FD ]
Line_24 $$ url = new URL(strUrl)-->Line_25 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_21 $$ String strUrl = url.toString()-->Line_22 $$ String paramSeparator = (strUrl.contains("?")) ? "&" : "?"[ FD ]
