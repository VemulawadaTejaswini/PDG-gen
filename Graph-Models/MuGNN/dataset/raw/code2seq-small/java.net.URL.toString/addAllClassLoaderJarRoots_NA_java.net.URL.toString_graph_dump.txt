Line_8 $$ UrlResource jarResource = new UrlResource(ResourceUtils.JAR_URL_PREFIX + url.toString() + ResourceUtils.JAR_URL_SEPARATOR)-->Line_9 $$ if (jarResource.exists()) [ FD ]
Line_5 $$ for (URL url : ((URLClassLoader) classLoader).getURLs()) -->Line_6 $$ if (ResourceUtils.isJarFileURL(url)) [ FD ]
Line_2 $$ protected void addAllClassLoaderJarRoots(ClassLoader classLoader, Set<Resource> result) -->Line_25 $$ if (classLoader == ClassLoader.getSystemClassLoader()) [ FD ]
Line_2 $$ protected void addAllClassLoaderJarRoots(ClassLoader classLoader, Set<Resource> result) -->Line_10 $$ result.add(jarResource)[ FD ]
Line_2 $$ protected void addAllClassLoaderJarRoots(ClassLoader classLoader, Set<Resource> result) -->Line_28 $$ if (classLoader != null) [ CD ]
Line_13 $$ if (logger.isDebugEnabled()) -->Line_14 $$ logger.debug("Cannot search for matching files underneath [" + url + "] because it cannot be converted to a valid 'jar:' URL: " + ex.getMessage())[ CD ]
Line_2 $$ protected void addAllClassLoaderJarRoots(ClassLoader classLoader, Set<Resource> result) -->Line_26 $$ addClassPathManifestEntries(result)[ FD ]
Line_2 $$ protected void addAllClassLoaderJarRoots(ClassLoader classLoader, Set<Resource> result) -->Line_3 $$ if (classLoader instanceof URLClassLoader) [ CD ]
Line_25 $$ if (classLoader == ClassLoader.getSystemClassLoader()) -->Line_26 $$ addClassPathManifestEntries(result)[ CD ]
Line_2 $$ protected void addAllClassLoaderJarRoots(ClassLoader classLoader, Set<Resource> result) -->Line_30 $$ addAllClassLoaderJarRoots(classLoader.getParent(), result)[ FD ]
Line_2 $$ protected void addAllClassLoaderJarRoots(ClassLoader classLoader, Set<Resource> result) -->Line_28 $$ if (classLoader != null) [ FD ]
Line_2 $$ protected void addAllClassLoaderJarRoots(ClassLoader classLoader, Set<Resource> result) -->Line_25 $$ if (classLoader == ClassLoader.getSystemClassLoader()) [ CD ]
Line_20 $$ if (logger.isDebugEnabled()) -->Line_21 $$ logger.debug("Cannot introspect jar files since ClassLoader [" + classLoader + "] does not support 'getURLs()': " + ex)[ CD ]
Line_32 $$ if (logger.isDebugEnabled()) -->Line_33 $$ logger.debug("Cannot introspect jar files in parent ClassLoader since [" + classLoader + "] does not support 'getParent()': " + ex)[ CD ]
Line_9 $$ if (jarResource.exists()) -->Line_10 $$ result.add(jarResource)[ CD ]
Line_8 $$ UrlResource jarResource = new UrlResource(ResourceUtils.JAR_URL_PREFIX + url.toString() + ResourceUtils.JAR_URL_SEPARATOR)-->Line_10 $$ result.add(jarResource)[ FD ]
Line_5 $$ for (URL url : ((URLClassLoader) classLoader).getURLs()) -->Line_8 $$ UrlResource jarResource = new UrlResource(ResourceUtils.JAR_URL_PREFIX + url.toString() + ResourceUtils.JAR_URL_SEPARATOR)[ FD ]
Line_2 $$ protected void addAllClassLoaderJarRoots(ClassLoader classLoader, Set<Resource> result) -->Line_3 $$ if (classLoader instanceof URLClassLoader) [ FD ]
