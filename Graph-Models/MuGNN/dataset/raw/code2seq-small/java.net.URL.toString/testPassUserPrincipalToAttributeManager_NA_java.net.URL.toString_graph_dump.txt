Line_13 $$ String response = PicketLinkTestBase.makeCallWithKerberosAuthn(spUrl.toURI(), httpClient, "jduke", "theduke", 200)-->Line_14 $$ assertEquals("SP index page was not reached", SP_RESPONSE_BODY, response)[ FD ]
Line_13 $$ String response = PicketLinkTestBase.makeCallWithKerberosAuthn(spUrl.toURI(), httpClient, "jduke", "theduke", 200)-->Line_15 $$ response = PicketLinkTestBase.makeCall(new URL(spUrl.toString() + PrintAttributeServlet.SERVLET_PATH.substring(1)), httpClient, 200)[ FD ]
Line_15 $$ response = PicketLinkTestBase.makeCall(new URL(spUrl.toString() + PrintAttributeServlet.SERVLET_PATH.substring(1)), httpClient, 200)-->Line_16 $$ assertEquals("cn attribute not stored", "Java Duke", response)[ FD ]
Line_10 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_13 $$ String response = PicketLinkTestBase.makeCallWithKerberosAuthn(spUrl.toURI(), httpClient, "jduke", "theduke", 200)[ FD ]
Line_10 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_11 $$ httpClient.setRedirectStrategy(Utils.REDIRECT_STRATEGY)[ FD ]
Line_13 $$ String response = PicketLinkTestBase.makeCallWithKerberosAuthn(spUrl.toURI(), httpClient, "jduke", "theduke", 200)-->Line_16 $$ assertEquals("cn attribute not stored", "Java Duke", response)[ FD ]
Line_10 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_18 $$ httpClient.getConnectionManager().shutdown()[ FD ]
Line_10 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_15 $$ response = PicketLinkTestBase.makeCall(new URL(spUrl.toString() + PrintAttributeServlet.SERVLET_PATH.substring(1)), httpClient, 200)[ FD ]
