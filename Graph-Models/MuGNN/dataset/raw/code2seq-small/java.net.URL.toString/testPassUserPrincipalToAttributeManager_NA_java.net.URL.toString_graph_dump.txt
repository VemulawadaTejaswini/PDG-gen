Line_6 $$ String response = PicketLinkTestBase.makeCallWithKerberosAuthn(spUrl.toURI(), httpClient, "jduke", "theduke", 200)-->Line_7 $$ assertEquals("SP index page was not reached", SP_RESPONSE_BODY, response)[ FD ]
Line_2 $$ public void testPassUserPrincipalToAttributeManager() throws Exception -->Line_4 $$ httpClient.setRedirectStrategy(Utils.REDIRECT_STRATEGY)[ CD ]
Line_6 $$ String response = PicketLinkTestBase.makeCallWithKerberosAuthn(spUrl.toURI(), httpClient, "jduke", "theduke", 200)-->Line_8 $$ response = PicketLinkTestBase.makeCall(new URL(spUrl.toString() + PrintAttributeServlet.SERVLET_PATH.substring(1)), httpClient, 200)[ FD ]
Line_2 $$ public void testPassUserPrincipalToAttributeManager() throws Exception -->Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()[ CD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_4 $$ httpClient.setRedirectStrategy(Utils.REDIRECT_STRATEGY)[ FD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_8 $$ response = PicketLinkTestBase.makeCall(new URL(spUrl.toString() + PrintAttributeServlet.SERVLET_PATH.substring(1)), httpClient, 200)[ FD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_6 $$ String response = PicketLinkTestBase.makeCallWithKerberosAuthn(spUrl.toURI(), httpClient, "jduke", "theduke", 200)[ FD ]
Line_6 $$ String response = PicketLinkTestBase.makeCallWithKerberosAuthn(spUrl.toURI(), httpClient, "jduke", "theduke", 200)-->Line_9 $$ assertEquals("cn attribute not stored", "Java Duke", response)[ FD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_11 $$ httpClient.getConnectionManager().shutdown()[ FD ]
Line_8 $$ response = PicketLinkTestBase.makeCall(new URL(spUrl.toString() + PrintAttributeServlet.SERVLET_PATH.substring(1)), httpClient, 200)-->Line_9 $$ assertEquals("cn attribute not stored", "Java Duke", response)[ FD ]
