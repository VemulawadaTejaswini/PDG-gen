Line_10 $$ final QName serviceName = new QName("http://www.jboss.org/jbossws/ws-extensions/wssecuritypolicy", "SecurityService")-->Line_12 $$ Service service = Service.create(wsdlURL, serviceName)[ FD ]
Line_14 $$ final QName stsServiceName = new QName("urn:picketlink:identity-federation:sts", "PicketLinkSTS")-->Line_17 $$ WSTrustTestUtils.setupWsseAndSTSClient(proxy, bus, stsURL.toString(), stsServiceName, stsPortName)[ FD ]
Line_11 $$ final URL wsdlURL = new URL(serviceURL + "SecurityService?wsdl")-->Line_12 $$ Service service = Service.create(wsdlURL, serviceName)[ FD ]
Line_7 $$ Bus bus = BusFactory.newInstance().createBus()-->Line_9 $$ BusFactory.setThreadDefaultBus(bus)[ FD ]
Line_7 $$ Bus bus = BusFactory.newInstance().createBus()-->Line_17 $$ WSTrustTestUtils.setupWsseAndSTSClient(proxy, bus, stsURL.toString(), stsServiceName, stsPortName)[ FD ]
Line_13 $$ ServiceIface proxy = (ServiceIface) service.getPort(ServiceIface.class)-->Line_19 $$ assertEquals("WS-Trust Hello World!", proxy.sayHello())[ FD ]
Line_7 $$ Bus bus = BusFactory.newInstance().createBus()-->Line_24 $$ bus.shutdown(true)[ FD ]
Line_13 $$ ServiceIface proxy = (ServiceIface) service.getPort(ServiceIface.class)-->Line_17 $$ WSTrustTestUtils.setupWsseAndSTSClient(proxy, bus, stsURL.toString(), stsServiceName, stsPortName)[ FD ]
Line_15 $$ final QName stsPortName = new QName("urn:picketlink:identity-federation:sts", "PicketLinkSTSPort")-->Line_17 $$ WSTrustTestUtils.setupWsseAndSTSClient(proxy, bus, stsURL.toString(), stsServiceName, stsPortName)[ FD ]
Line_16 $$ final URL stsURL = new URL(serviceURL.getProtocol(), serviceURL.getHost(), serviceURL.getPort(), "/jaxws-samples-wsse-policy-trustPicketLink-sts/PicketLinkSTS?wsdl")-->Line_17 $$ WSTrustTestUtils.setupWsseAndSTSClient(proxy, bus, stsURL.toString(), stsServiceName, stsPortName)[ FD ]
Line_12 $$ Service service = Service.create(wsdlURL, serviceName)-->Line_13 $$ ServiceIface proxy = (ServiceIface) service.getPort(ServiceIface.class)[ FD ]
