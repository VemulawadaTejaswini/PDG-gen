Line_2 $$ public void addRemoveVirtualServer(@ArquillianResource Deployer deployer) throws Exception -->Line_8 $$ deployer.deploy("vsdeployment")[ CD ]
Line_3 $$ if (!resolveHosts()) -->Line_4 $$ log.info("Unable to resolve alternate server host name.")[ CD ]
Line_13 $$ boolean failed = false-->Line_17 $$ failed = true[ FD ]
Line_2 $$ public void addRemoveVirtualServer(@ArquillianResource Deployer deployer) throws Exception -->Line_7 $$ addVirtualServer()[ CD ]
Line_2 $$ public void addRemoveVirtualServer(@ArquillianResource Deployer deployer) throws Exception -->Line_21 $$ removeVirtualServer()[ CD ]
Line_9 $$ URL vURL = new URL(url.getProtocol(), virtualHost, url.getPort(), "/vsDeployment/index.html")-->Line_10 $$ String response = HttpRequest.get(vURL.toString(), 10, TimeUnit.SECONDS)[ FD ]
Line_2 $$ public void addRemoveVirtualServer(@ArquillianResource Deployer deployer) throws Exception -->Line_11 $$ assertTrue("Invalid response: " + response, response.indexOf("Virtual Server Deployment") >= 0)[ CD ]
Line_2 $$ public void addRemoveVirtualServer(@ArquillianResource Deployer deployer) throws Exception -->Line_13 $$ boolean failed = false[ CD ]
Line_17 $$ failed = true-->Line_19 $$ assertTrue("Deployment also on default server. ", failed)[ FD ]
Line_2 $$ public void addRemoveVirtualServer(@ArquillianResource Deployer deployer) throws Exception -->Line_8 $$ deployer.deploy("vsdeployment")[ FD ]
Line_10 $$ String response = HttpRequest.get(vURL.toString(), 10, TimeUnit.SECONDS)-->Line_11 $$ assertTrue("Invalid response: " + response, response.indexOf("Virtual Server Deployment") >= 0)[ FD ]
Line_3 $$ if (!resolveHosts()) -->Line_5 $$ return[ CD ]
Line_12 $$ URL dURL = new URL(url.getProtocol(), defaultHost, url.getPort(), "/vsDeployment/index.html")-->Line_15 $$ response = HttpRequest.get(dURL.toString(), 10, TimeUnit.SECONDS)[ FD ]
Line_2 $$ public void addRemoveVirtualServer(@ArquillianResource Deployer deployer) throws Exception -->Line_9 $$ URL vURL = new URL(url.getProtocol(), virtualHost, url.getPort(), "/vsDeployment/index.html")[ CD ]
Line_2 $$ public void addRemoveVirtualServer(@ArquillianResource Deployer deployer) throws Exception -->Line_20 $$ deployer.undeploy("vsdeployment")[ CD ]
Line_2 $$ public void addRemoveVirtualServer(@ArquillianResource Deployer deployer) throws Exception -->Line_12 $$ URL dURL = new URL(url.getProtocol(), defaultHost, url.getPort(), "/vsDeployment/index.html")[ CD ]
Line_2 $$ public void addRemoveVirtualServer(@ArquillianResource Deployer deployer) throws Exception -->Line_3 $$ if (!resolveHosts()) [ CD ]
Line_2 $$ public void addRemoveVirtualServer(@ArquillianResource Deployer deployer) throws Exception -->Line_19 $$ assertTrue("Deployment also on default server. ", failed)[ CD ]
Line_10 $$ String response = HttpRequest.get(vURL.toString(), 10, TimeUnit.SECONDS)-->Line_15 $$ response = HttpRequest.get(dURL.toString(), 10, TimeUnit.SECONDS)[ FD ]
Line_2 $$ public void addRemoveVirtualServer(@ArquillianResource Deployer deployer) throws Exception -->Line_10 $$ String response = HttpRequest.get(vURL.toString(), 10, TimeUnit.SECONDS)[ CD ]
Line_2 $$ public void addRemoveVirtualServer(@ArquillianResource Deployer deployer) throws Exception -->Line_20 $$ deployer.undeploy("vsdeployment")[ FD ]
Line_13 $$ boolean failed = false-->Line_19 $$ assertTrue("Deployment also on default server. ", failed)[ FD ]
