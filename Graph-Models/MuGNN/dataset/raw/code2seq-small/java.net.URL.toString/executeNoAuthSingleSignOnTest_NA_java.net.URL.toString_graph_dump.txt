Line_2 $$ public static void executeNoAuthSingleSignOnTest(URL serverA, URL serverB, Logger log) throws Exception -->Line_8 $$ HttpClient httpclient = TestHttpClientUtils.promiscuousCookieHttpClientBuilder().setDefaultCookieStore(store).build()[ CD ]
Line_2 $$ public static void executeNoAuthSingleSignOnTest(URL serverA, URL serverB, Logger log) throws Exception -->Line_15 $$ log.debug("Saw JSESSIONIDSSO=" + ssoID)[ FD ]
Line_2 $$ public static void executeNoAuthSingleSignOnTest(URL serverA, URL serverB, Logger log) throws Exception -->Line_5 $$ URL warB6 = new URL(serverB + "/war6/")[ CD ]
Line_2 $$ public static void executeNoAuthSingleSignOnTest(URL serverA, URL serverB, Logger log) throws Exception -->Line_4 $$ URL warB2 = new URL(serverB + "/war2/")[ CD ]
Line_2 $$ public static void executeNoAuthSingleSignOnTest(URL serverA, URL serverB, Logger log) throws Exception -->Line_14 $$ String ssoID = processSSOCookie(store, serverA.toString(), serverB.toString())[ FD ]
Line_8 $$ HttpClient httpclient = TestHttpClientUtils.promiscuousCookieHttpClientBuilder().setDefaultCookieStore(store).build()-->Line_27 $$ HttpClientUtils.closeQuietly(httpclient)[ FD ]
Line_2 $$ public static void executeNoAuthSingleSignOnTest(URL serverA, URL serverB, Logger log) throws Exception -->Line_11 $$ log.debug("Saw JSESSIONID=" + getSessionIdValueFromState(store))[ FD ]
Line_8 $$ HttpClient httpclient = TestHttpClientUtils.promiscuousCookieHttpClientBuilder().setDefaultCookieStore(store).build()-->Line_10 $$ checkAccessDenied(httpclient, warA1 + "index.html")[ FD ]
Line_8 $$ HttpClient httpclient = TestHttpClientUtils.promiscuousCookieHttpClientBuilder().setDefaultCookieStore(store).build()-->Line_18 $$ checkAccessAllowed(httpclient, warB2 + "index.html")[ FD ]
Line_8 $$ HttpClient httpclient = TestHttpClientUtils.promiscuousCookieHttpClientBuilder().setDefaultCookieStore(store).build()-->Line_25 $$ checkAccessAllowed(httpclient, warB2 + "EJBServlet")[ FD ]
Line_2 $$ public static void executeNoAuthSingleSignOnTest(URL serverA, URL serverB, Logger log) throws Exception -->Line_3 $$ URL warA1 = new URL(serverA, "/war1/")[ CD ]
