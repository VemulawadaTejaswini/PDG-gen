Line_20 $$ String repoUrl = invalidRepoPath.toAbsolutePath().toUri().toURL().toString()-->Line_21 $$ String unsupportedUrl = repoUrl.replace("file:/", "netdoc:/")[ FD ]
Line_21 $$ String unsupportedUrl = repoUrl.replace("file:/", "netdoc:/")-->Line_24 $$ client().admin().cluster().preparePutRepository("test-repo").setType("url").setSettings(Settings.settingsBuilder().put("url", unsupportedUrl)).get()[ FD ]
Line_12 $$ Path invalidRepoPath = createTempDir().toAbsolutePath()-->Line_31 $$ client().admin().cluster().preparePutRepository("test-repo").setType("url").setSettings(Settings.settingsBuilder().put("url", invalidRepoPath.toUri().toURL())).get()[ FD ]
Line_2 $$ public void testMisconfiguredRepository() throws Exception -->Line_21 $$ String unsupportedUrl = repoUrl.replace("file:/", "netdoc:/")[ CD ]
Line_2 $$ public void testMisconfiguredRepository() throws Exception -->Line_13 $$ String location = invalidRepoPath.toString()[ CD ]
Line_2 $$ public void testMisconfiguredRepository() throws Exception -->Line_12 $$ Path invalidRepoPath = createTempDir().toAbsolutePath()[ CD ]
Line_2 $$ public void testMisconfiguredRepository() throws Exception -->Line_3 $$ Client client = client()[ CD ]
Line_13 $$ String location = invalidRepoPath.toString()-->Line_15 $$ client().admin().cluster().preparePutRepository("test-repo").setType("fs").setSettings(Settings.settingsBuilder().put("location", location)).get()[ FD ]
Line_12 $$ Path invalidRepoPath = createTempDir().toAbsolutePath()-->Line_20 $$ String repoUrl = invalidRepoPath.toAbsolutePath().toUri().toURL().toString()[ FD ]
Line_12 $$ Path invalidRepoPath = createTempDir().toAbsolutePath()-->Line_13 $$ String location = invalidRepoPath.toString()[ FD ]
Line_2 $$ public void testMisconfiguredRepository() throws Exception -->Line_20 $$ String repoUrl = invalidRepoPath.toAbsolutePath().toUri().toURL().toString()[ CD ]
Line_3 $$ Client client = client()-->Line_6 $$ client.admin().cluster().preparePutRepository("test-repo").setType("fs").get()[ FD ]
