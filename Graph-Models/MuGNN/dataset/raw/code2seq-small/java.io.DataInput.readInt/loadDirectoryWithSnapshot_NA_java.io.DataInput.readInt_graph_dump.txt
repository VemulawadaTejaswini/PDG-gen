Line_6 $$ if (!toLoadSubtree) -->Line_7 $$ return[ CD ]
Line_2 $$ private void loadDirectoryWithSnapshot(DataInput in, Counter counter) throws IOException -->Line_17 $$ SnapshotFSImageFormat.loadDirectoryDiffList(parent, in, this)[ CD ]
Line_4 $$ final INodeDirectory parent = this.namesystem.dir.getInode(inodeId).asDirectory()-->Line_13 $$ this.namesystem.getSnapshotManager().addSnapshottable(parent)[ FD ]
Line_4 $$ final INodeDirectory parent = this.namesystem.dir.getInode(inodeId).asDirectory()-->Line_17 $$ SnapshotFSImageFormat.loadDirectoryDiffList(parent, in, this)[ FD ]
Line_4 $$ final INodeDirectory parent = this.namesystem.dir.getInode(inodeId).asDirectory()-->Line_12 $$ if (parent.getDirectorySnapshottableFeature().getSnapshotQuota() > 0) [ FD ]
Line_2 $$ private void loadDirectoryWithSnapshot(DataInput in, Counter counter) throws IOException -->Line_5 $$ boolean toLoadSubtree = referenceMap.toProcessSubtree(parent.getId())[ CD ]
Line_2 $$ private void loadDirectoryWithSnapshot(DataInput in, Counter counter) throws IOException -->Line_9 $$ int numSnapshots = in.readInt()[ CD ]
Line_2 $$ private void loadDirectoryWithSnapshot(DataInput in, Counter counter) throws IOException -->Line_3 $$ long inodeId = in.readLong()[ CD ]
Line_4 $$ final INodeDirectory parent = this.namesystem.dir.getInode(inodeId).asDirectory()-->Line_5 $$ boolean toLoadSubtree = referenceMap.toProcessSubtree(parent.getId())[ FD ]
Line_2 $$ private void loadDirectoryWithSnapshot(DataInput in, Counter counter) throws IOException -->Line_10 $$ if (numSnapshots >= 0) [ CD ]
Line_2 $$ private void loadDirectoryWithSnapshot(DataInput in, Counter counter) throws IOException -->Line_11 $$ SnapshotFSImageFormat.loadSnapshotList(parent, numSnapshots, in, this)[ FD ]
Line_2 $$ private void loadDirectoryWithSnapshot(DataInput in, Counter counter) throws IOException -->Line_4 $$ final INodeDirectory parent = this.namesystem.dir.getInode(inodeId).asDirectory()[ CD ]
Line_18 $$ int numSubTree = in.readInt()-->Line_19 $$ for (int i = 0; i < numSubTree; i++) [ FD ]
Line_2 $$ private void loadDirectoryWithSnapshot(DataInput in, Counter counter) throws IOException -->Line_9 $$ int numSnapshots = in.readInt()[ FD ]
Line_3 $$ long inodeId = in.readLong()-->Line_4 $$ final INodeDirectory parent = this.namesystem.dir.getInode(inodeId).asDirectory()[ FD ]
Line_4 $$ final INodeDirectory parent = this.namesystem.dir.getInode(inodeId).asDirectory()-->Line_16 $$ loadChildren(parent, in, counter)[ FD ]
Line_2 $$ private void loadDirectoryWithSnapshot(DataInput in, Counter counter) throws IOException -->Line_3 $$ long inodeId = in.readLong()[ FD ]
Line_2 $$ private void loadDirectoryWithSnapshot(DataInput in, Counter counter) throws IOException -->Line_6 $$ if (!toLoadSubtree) [ CD ]
Line_12 $$ if (parent.getDirectorySnapshottableFeature().getSnapshotQuota() > 0) -->Line_13 $$ this.namesystem.getSnapshotManager().addSnapshottable(parent)[ CD ]
Line_4 $$ final INodeDirectory parent = this.namesystem.dir.getInode(inodeId).asDirectory()-->Line_11 $$ SnapshotFSImageFormat.loadSnapshotList(parent, numSnapshots, in, this)[ FD ]
Line_2 $$ private void loadDirectoryWithSnapshot(DataInput in, Counter counter) throws IOException -->Line_16 $$ loadChildren(parent, in, counter)[ CD ]
Line_9 $$ int numSnapshots = in.readInt()-->Line_10 $$ if (numSnapshots >= 0) [ FD ]
Line_2 $$ private void loadDirectoryWithSnapshot(DataInput in, Counter counter) throws IOException -->Line_19 $$ for (int i = 0; i < numSubTree; i++) [ CD ]
Line_10 $$ if (numSnapshots >= 0) -->Line_11 $$ SnapshotFSImageFormat.loadSnapshotList(parent, numSnapshots, in, this)[ CD ]
Line_9 $$ int numSnapshots = in.readInt()-->Line_11 $$ SnapshotFSImageFormat.loadSnapshotList(parent, numSnapshots, in, this)[ FD ]
Line_19 $$ for (int i = 0; i < numSubTree; i++) -->Line_20 $$ loadDirectoryWithSnapshot(in, counter)[ CD ]
Line_2 $$ private void loadDirectoryWithSnapshot(DataInput in, Counter counter) throws IOException -->Line_17 $$ SnapshotFSImageFormat.loadDirectoryDiffList(parent, in, this)[ FD ]
Line_2 $$ private void loadDirectoryWithSnapshot(DataInput in, Counter counter) throws IOException -->Line_20 $$ loadDirectoryWithSnapshot(in, counter)[ FD ]
Line_2 $$ private void loadDirectoryWithSnapshot(DataInput in, Counter counter) throws IOException -->Line_18 $$ int numSubTree = in.readInt()[ CD ]
Line_2 $$ private void loadDirectoryWithSnapshot(DataInput in, Counter counter) throws IOException -->Line_16 $$ loadChildren(parent, in, counter)[ FD ]
Line_5 $$ boolean toLoadSubtree = referenceMap.toProcessSubtree(parent.getId())-->Line_6 $$ if (!toLoadSubtree) [ FD ]
Line_2 $$ private void loadDirectoryWithSnapshot(DataInput in, Counter counter) throws IOException -->Line_18 $$ int numSubTree = in.readInt()[ FD ]
Line_10 $$ if (numSnapshots >= 0) -->Line_12 $$ if (parent.getDirectorySnapshottableFeature().getSnapshotQuota() > 0) [ CD ]
