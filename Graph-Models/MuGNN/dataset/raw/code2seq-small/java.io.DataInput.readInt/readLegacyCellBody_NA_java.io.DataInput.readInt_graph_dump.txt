Line_2 $$ public static LegacyCell readLegacyCellBody(CFMetaData metadata, DataInput in, ByteBuffer cellname, int mask, SerializationHelper.Flag flag, boolean readAllAsDynamic) throws IOException, UnknownColumnException -->Line_13 $$ long ts = in.readLong()[ FD ]
Line_10 $$ if ((mask & EXPIRATION_MASK) != 0) -->Line_19 $$ LegacyCellName name = decodeCellName(metadata, cellname, readAllAsDynamic)[ CD ]
Line_2 $$ public static LegacyCell readLegacyCellBody(CFMetaData metadata, DataInput in, ByteBuffer cellname, int mask, SerializationHelper.Flag flag, boolean readAllAsDynamic) throws IOException, UnknownColumnException -->Line_17 $$ long ts = in.readLong()[ FD ]
Line_10 $$ if ((mask & EXPIRATION_MASK) != 0) -->Line_20 $$ return (mask & COUNTER_UPDATE_MASK) != 0 ? new LegacyCell(LegacyCell.Kind.COUNTER, name, CounterContext.instance().createLocal(ByteBufferUtil.toLong(value)), ts, Cell.NO_DELETION_TIME, Cell.NO_TTL) : ((mask & DELETION_MASK) == 0 ? new LegacyCell(LegacyCell.Kind.REGULAR, name, value, ts, Cell.NO_DELETION_TIME, Cell.NO_TTL) : new LegacyCell(LegacyCell.Kind.DELETED, name, ByteBufferUtil.EMPTY_BYTE_BUFFER, ts, ByteBufferUtil.toInt(value), Cell.NO_TTL))[ CD ]
Line_2 $$ public static LegacyCell readLegacyCellBody(CFMetaData metadata, DataInput in, ByteBuffer cellname, int mask, SerializationHelper.Flag flag, boolean readAllAsDynamic) throws IOException, UnknownColumnException -->Line_6 $$ ByteBuffer value = ByteBufferUtil.readWithLength(in)[ FD ]
Line_10 $$ if ((mask & EXPIRATION_MASK) != 0) -->Line_11 $$ int ttl = in.readInt()[ CD ]
Line_10 $$ if ((mask & EXPIRATION_MASK) != 0) -->Line_13 $$ long ts = in.readLong()[ CD ]
Line_3 $$ if ((mask & COUNTER_MASK) != 0) -->Line_10 $$ if ((mask & EXPIRATION_MASK) != 0) [ CD ]
Line_2 $$ public static LegacyCell readLegacyCellBody(CFMetaData metadata, DataInput in, ByteBuffer cellname, int mask, SerializationHelper.Flag flag, boolean readAllAsDynamic) throws IOException, UnknownColumnException -->Line_11 $$ int ttl = in.readInt()[ FD ]
Line_2 $$ public static LegacyCell readLegacyCellBody(CFMetaData metadata, DataInput in, ByteBuffer cellname, int mask, SerializationHelper.Flag flag, boolean readAllAsDynamic) throws IOException, UnknownColumnException -->Line_5 $$ long ts = in.readLong()[ FD ]
Line_2 $$ public static LegacyCell readLegacyCellBody(CFMetaData metadata, DataInput in, ByteBuffer cellname, int mask, SerializationHelper.Flag flag, boolean readAllAsDynamic) throws IOException, UnknownColumnException -->Line_4 $$ in.readLong()[ FD ]
Line_10 $$ if ((mask & EXPIRATION_MASK) != 0) -->Line_17 $$ long ts = in.readLong()[ CD ]
Line_3 $$ if ((mask & COUNTER_MASK) != 0) -->Line_9 $$ return new LegacyCell(LegacyCell.Kind.COUNTER, decodeCellName(metadata, cellname, readAllAsDynamic), value, ts, Cell.NO_DELETION_TIME, Cell.NO_TTL)[ CD ]
Line_10 $$ if ((mask & EXPIRATION_MASK) != 0) -->Line_15 $$ return new LegacyCell(LegacyCell.Kind.EXPIRING, decodeCellName(metadata, cellname, readAllAsDynamic), value, ts, expiration, ttl)[ CD ]
Line_2 $$ public static LegacyCell readLegacyCellBody(CFMetaData metadata, DataInput in, ByteBuffer cellname, int mask, SerializationHelper.Flag flag, boolean readAllAsDynamic) throws IOException, UnknownColumnException -->Line_19 $$ LegacyCellName name = decodeCellName(metadata, cellname, readAllAsDynamic)[ FD ]
Line_6 $$ ByteBuffer value = ByteBufferUtil.readWithLength(in)-->Line_7 $$ if (flag == SerializationHelper.Flag.FROM_REMOTE || (flag == SerializationHelper.Flag.LOCAL && CounterContext.instance().shouldClearLocal(value)))[ FD ]
Line_10 $$ if ((mask & EXPIRATION_MASK) != 0) -->Line_14 $$ ByteBuffer value = ByteBufferUtil.readWithLength(in)[ CD ]
Line_2 $$ public static LegacyCell readLegacyCellBody(CFMetaData metadata, DataInput in, ByteBuffer cellname, int mask, SerializationHelper.Flag flag, boolean readAllAsDynamic) throws IOException, UnknownColumnException -->Line_18 $$ ByteBuffer value = ByteBufferUtil.readWithLength(in)[ FD ]
Line_7 $$ if (flag == SerializationHelper.Flag.FROM_REMOTE || (flag == SerializationHelper.Flag.LOCAL && CounterContext.instance().shouldClearLocal(value)))-->Line_8 $$ value = CounterContext.instance().clearAllLocal(value)[ CD ]
Line_3 $$ if ((mask & COUNTER_MASK) != 0) -->Line_4 $$ in.readLong()[ CD ]
Line_2 $$ public static LegacyCell readLegacyCellBody(CFMetaData metadata, DataInput in, ByteBuffer cellname, int mask, SerializationHelper.Flag flag, boolean readAllAsDynamic) throws IOException, UnknownColumnException -->Line_3 $$ if ((mask & COUNTER_MASK) != 0) [ CD ]
Line_6 $$ ByteBuffer value = ByteBufferUtil.readWithLength(in)-->Line_8 $$ value = CounterContext.instance().clearAllLocal(value)[ FD ]
Line_10 $$ if ((mask & EXPIRATION_MASK) != 0) -->Line_12 $$ int expiration = in.readInt()[ CD ]
Line_2 $$ public static LegacyCell readLegacyCellBody(CFMetaData metadata, DataInput in, ByteBuffer cellname, int mask, SerializationHelper.Flag flag, boolean readAllAsDynamic) throws IOException, UnknownColumnException -->Line_12 $$ int expiration = in.readInt()[ FD ]
Line_6 $$ ByteBuffer value = ByteBufferUtil.readWithLength(in)-->Line_20 $$ return (mask & COUNTER_UPDATE_MASK) != 0 ? new LegacyCell(LegacyCell.Kind.COUNTER, name, CounterContext.instance().createLocal(ByteBufferUtil.toLong(value)), ts, Cell.NO_DELETION_TIME, Cell.NO_TTL) : ((mask & DELETION_MASK) == 0 ? new LegacyCell(LegacyCell.Kind.REGULAR, name, value, ts, Cell.NO_DELETION_TIME, Cell.NO_TTL) : new LegacyCell(LegacyCell.Kind.DELETED, name, ByteBufferUtil.EMPTY_BYTE_BUFFER, ts, ByteBufferUtil.toInt(value), Cell.NO_TTL))[ FD ]
Line_3 $$ if ((mask & COUNTER_MASK) != 0) -->Line_7 $$ if (flag == SerializationHelper.Flag.FROM_REMOTE || (flag == SerializationHelper.Flag.LOCAL && CounterContext.instance().shouldClearLocal(value)))[ CD ]
Line_3 $$ if ((mask & COUNTER_MASK) != 0) -->Line_5 $$ long ts = in.readLong()[ CD ]
Line_2 $$ public static LegacyCell readLegacyCellBody(CFMetaData metadata, DataInput in, ByteBuffer cellname, int mask, SerializationHelper.Flag flag, boolean readAllAsDynamic) throws IOException, UnknownColumnException -->Line_14 $$ ByteBuffer value = ByteBufferUtil.readWithLength(in)[ FD ]
Line_8 $$ value = CounterContext.instance().clearAllLocal(value)-->Line_20 $$ return (mask & COUNTER_UPDATE_MASK) != 0 ? new LegacyCell(LegacyCell.Kind.COUNTER, name, CounterContext.instance().createLocal(ByteBufferUtil.toLong(value)), ts, Cell.NO_DELETION_TIME, Cell.NO_TTL) : ((mask & DELETION_MASK) == 0 ? new LegacyCell(LegacyCell.Kind.REGULAR, name, value, ts, Cell.NO_DELETION_TIME, Cell.NO_TTL) : new LegacyCell(LegacyCell.Kind.DELETED, name, ByteBufferUtil.EMPTY_BYTE_BUFFER, ts, ByteBufferUtil.toInt(value), Cell.NO_TTL))[ FD ]
Line_10 $$ if ((mask & EXPIRATION_MASK) != 0) -->Line_18 $$ ByteBuffer value = ByteBufferUtil.readWithLength(in)[ CD ]
Line_2 $$ public static LegacyCell readLegacyCellBody(CFMetaData metadata, DataInput in, ByteBuffer cellname, int mask, SerializationHelper.Flag flag, boolean readAllAsDynamic) throws IOException, UnknownColumnException -->Line_9 $$ return new LegacyCell(LegacyCell.Kind.COUNTER, decodeCellName(metadata, cellname, readAllAsDynamic), value, ts, Cell.NO_DELETION_TIME, Cell.NO_TTL)[ FD ]
Line_2 $$ public static LegacyCell readLegacyCellBody(CFMetaData metadata, DataInput in, ByteBuffer cellname, int mask, SerializationHelper.Flag flag, boolean readAllAsDynamic) throws IOException, UnknownColumnException -->Line_15 $$ return new LegacyCell(LegacyCell.Kind.EXPIRING, decodeCellName(metadata, cellname, readAllAsDynamic), value, ts, expiration, ttl)[ FD ]
Line_3 $$ if ((mask & COUNTER_MASK) != 0) -->Line_6 $$ ByteBuffer value = ByteBufferUtil.readWithLength(in)[ CD ]
