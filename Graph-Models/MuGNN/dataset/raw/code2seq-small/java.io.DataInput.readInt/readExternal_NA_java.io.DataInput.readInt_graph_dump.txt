Line_2 $$ public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException -->Line_8 $$ E e = (E) in.readObject()[ FD ]
Line_2 $$ public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException -->Line_12 $$ final int numberOfQuerySpaces = in.readInt()[ FD ]
Line_13 $$ if (numberOfQuerySpaces < 0) -->Line_17 $$ for (int i = 0; i < numberOfQuerySpaces; i++) [ CD ]
Line_6 $$ if (numberOfExecutables > 0) -->Line_7 $$ for (int i = 0; i < numberOfExecutables; i++) [ CD ]
Line_2 $$ public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException -->Line_5 $$ executables.ensureCapacity(numberOfExecutables)[ CD ]
Line_2 $$ public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException -->Line_3 $$ sorted = in.readBoolean()[ FD ]
Line_7 $$ for (int i = 0; i < numberOfExecutables; i++) -->Line_8 $$ E e = (E) in.readObject()[ CD ]
Line_2 $$ public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException -->Line_4 $$ final int numberOfExecutables = in.readInt()[ FD ]
Line_2 $$ public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException -->Line_18 $$ querySpaces.add(in.readUTF())[ FD ]
Line_2 $$ public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException -->Line_13 $$ if (numberOfQuerySpaces < 0) [ CD ]
Line_13 $$ if (numberOfQuerySpaces < 0) -->Line_14 $$ this.querySpaces = null[ CD ]
Line_12 $$ final int numberOfQuerySpaces = in.readInt()-->Line_17 $$ for (int i = 0; i < numberOfQuerySpaces; i++) [ FD ]
Line_8 $$ E e = (E) in.readObject()-->Line_9 $$ executables.add(e)[ FD ]
Line_12 $$ final int numberOfQuerySpaces = in.readInt()-->Line_13 $$ if (numberOfQuerySpaces < 0) [ FD ]
Line_4 $$ final int numberOfExecutables = in.readInt()-->Line_7 $$ for (int i = 0; i < numberOfExecutables; i++) [ FD ]
Line_2 $$ public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException -->Line_3 $$ sorted = in.readBoolean()[ CD ]
Line_2 $$ public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException -->Line_12 $$ final int numberOfQuerySpaces = in.readInt()[ CD ]
Line_7 $$ for (int i = 0; i < numberOfExecutables; i++) -->Line_17 $$ for (int i = 0; i < numberOfQuerySpaces; i++) [ FD ]
Line_4 $$ final int numberOfExecutables = in.readInt()-->Line_5 $$ executables.ensureCapacity(numberOfExecutables)[ FD ]
Line_17 $$ for (int i = 0; i < numberOfQuerySpaces; i++) -->Line_18 $$ querySpaces.add(in.readUTF())[ CD ]
Line_4 $$ final int numberOfExecutables = in.readInt()-->Line_6 $$ if (numberOfExecutables > 0) [ FD ]
Line_7 $$ for (int i = 0; i < numberOfExecutables; i++) -->Line_9 $$ executables.add(e)[ CD ]
Line_2 $$ public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException -->Line_6 $$ if (numberOfExecutables > 0) [ CD ]
Line_12 $$ final int numberOfQuerySpaces = in.readInt()-->Line_16 $$ querySpaces = new HashSet<Serializable>(CollectionHelper.determineProperSizing(numberOfQuerySpaces))[ FD ]
Line_2 $$ public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException -->Line_4 $$ final int numberOfExecutables = in.readInt()[ CD ]
