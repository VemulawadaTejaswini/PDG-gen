Line_2 $$ private IndexTree.ClassDecl readClassDecl(DataInput in) throws IOException -->Line_14 $$ for (int i = 0; i < decls.length; i++) [ CD ]
Line_2 $$ private IndexTree.ClassDecl readClassDecl(DataInput in) throws IOException -->Line_9 $$ String[] supers = new String[DataInputOutputUtil.readINT(in)][ CD ]
Line_6 $$ if (name.isEmpty()) -->Line_7 $$ name = null[ CD ]
Line_2 $$ private IndexTree.ClassDecl readClassDecl(DataInput in) throws IOException -->Line_4 $$ int mods = DataInputOutputUtil.readINT(in)[ CD ]
Line_2 $$ private IndexTree.ClassDecl readClassDecl(DataInput in) throws IOException -->Line_3 $$ int stubId = in.readInt()[ CD ]
Line_2 $$ private IndexTree.ClassDecl readClassDecl(DataInput in) throws IOException -->Line_3 $$ int stubId = in.readInt()[ FD ]
Line_2 $$ private IndexTree.ClassDecl readClassDecl(DataInput in) throws IOException -->Line_9 $$ String[] supers = new String[DataInputOutputUtil.readINT(in)][ FD ]
Line_2 $$ private IndexTree.ClassDecl readClassDecl(DataInput in) throws IOException -->Line_10 $$ for (int i = 0; i < supers.length; i++) [ CD ]
Line_2 $$ private IndexTree.ClassDecl readClassDecl(DataInput in) throws IOException -->Line_11 $$ supers[i] = in.readUTF()[ FD ]
Line_2 $$ private IndexTree.ClassDecl readClassDecl(DataInput in) throws IOException -->Line_13 $$ IndexTree.Decl[] decls = new IndexTree.Decl[DataInputOutputUtil.readINT(in)][ FD ]
Line_2 $$ private IndexTree.ClassDecl readClassDecl(DataInput in) throws IOException -->Line_6 $$ if (name.isEmpty()) [ CD ]
Line_10 $$ for (int i = 0; i < supers.length; i++) -->Line_11 $$ supers[i] = in.readUTF()[ CD ]
Line_5 $$ String name = in.readUTF()-->Line_7 $$ name = null[ FD ]
Line_2 $$ private IndexTree.ClassDecl readClassDecl(DataInput in) throws IOException -->Line_5 $$ String name = in.readUTF()[ FD ]
Line_14 $$ for (int i = 0; i < decls.length; i++) -->Line_15 $$ decls[i] = readDecl(in)[ CD ]
Line_10 $$ for (int i = 0; i < supers.length; i++) -->Line_14 $$ for (int i = 0; i < decls.length; i++) [ FD ]
Line_2 $$ private IndexTree.ClassDecl readClassDecl(DataInput in) throws IOException -->Line_17 $$ return new IndexTree.ClassDecl(stubId, mods, name, supers, decls)[ CD ]
Line_5 $$ String name = in.readUTF()-->Line_6 $$ if (name.isEmpty()) [ FD ]
Line_2 $$ private IndexTree.ClassDecl readClassDecl(DataInput in) throws IOException -->Line_4 $$ int mods = DataInputOutputUtil.readINT(in)[ FD ]
Line_2 $$ private IndexTree.ClassDecl readClassDecl(DataInput in) throws IOException -->Line_15 $$ decls[i] = readDecl(in)[ FD ]
Line_2 $$ private IndexTree.ClassDecl readClassDecl(DataInput in) throws IOException -->Line_13 $$ IndexTree.Decl[] decls = new IndexTree.Decl[DataInputOutputUtil.readINT(in)][ CD ]
Line_2 $$ private IndexTree.ClassDecl readClassDecl(DataInput in) throws IOException -->Line_5 $$ String name = in.readUTF()[ CD ]
