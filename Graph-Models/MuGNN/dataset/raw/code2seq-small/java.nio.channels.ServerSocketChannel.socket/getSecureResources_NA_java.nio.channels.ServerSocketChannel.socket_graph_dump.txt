Line_18 $$ listener = HttpServer2.createDefaultChannelConnector()-->Line_21 $$ listener.setPort(infoSocAddr.getPort())[ FD ]
Line_7 $$ ServerSocket ss = (socketWriteTimeout > 0) ? ServerSocketChannel.open().socket() : new ServerSocket()-->Line_9 $$ if (ss.getLocalPort() != streamingAddr.getPort()) [ FD ]
Line_16 $$ Connector listener = null-->Line_23 $$ if (listener.getPort() != infoSocAddr.getPort()) [ FD ]
Line_19 $$ InetSocketAddress infoSocAddr = DataNode.getInfoAddr(conf)-->Line_20 $$ listener.setHost(infoSocAddr.getHostName())[ FD ]
Line_17 $$ if (policy.isHttpEnabled()) -->Line_21 $$ listener.setPort(infoSocAddr.getPort())[ CD ]
Line_2 $$ public static SecureResources getSecureResources(Configuration conf) throws Exception -->Line_17 $$ if (policy.isHttpEnabled()) [ CD ]
Line_5 $$ InetSocketAddress streamingAddr = DataNode.getStreamingAddr(conf)-->Line_9 $$ if (ss.getLocalPort() != streamingAddr.getPort()) [ FD ]
Line_2 $$ public static SecureResources getSecureResources(Configuration conf) throws Exception -->Line_19 $$ InetSocketAddress infoSocAddr = DataNode.getInfoAddr(conf)[ FD ]
Line_5 $$ InetSocketAddress streamingAddr = DataNode.getStreamingAddr(conf)-->Line_24 $$ throw new RuntimeException("Unable to bind on specified info port in secure " + "context. Needed " + streamingAddr.getPort() + ", got " + ss.getLocalPort())[ FD ]
Line_7 $$ ServerSocket ss = (socketWriteTimeout > 0) ? ServerSocketChannel.open().socket() : new ServerSocket()-->Line_8 $$ ss.bind(streamingAddr, 0)[ FD ]
Line_4 $$ boolean isSecure = UserGroupInformation.isSecurityEnabled()-->Line_27 $$ if (listener.getPort() > 1023 && isSecure) [ FD ]
Line_17 $$ if (policy.isHttpEnabled()) -->Line_30 $$ System.err.println("Opened info server at " + infoSocAddr)[ CD ]
Line_16 $$ Connector listener = null-->Line_21 $$ listener.setPort(infoSocAddr.getPort())[ FD ]
Line_4 $$ boolean isSecure = UserGroupInformation.isSecurityEnabled()-->Line_12 $$ if (ss.getLocalPort() > 1023 && isSecure) [ FD ]
Line_2 $$ public static SecureResources getSecureResources(Configuration conf) throws Exception -->Line_5 $$ InetSocketAddress streamingAddr = DataNode.getStreamingAddr(conf)[ FD ]
Line_16 $$ Connector listener = null-->Line_27 $$ if (listener.getPort() > 1023 && isSecure) [ FD ]
Line_7 $$ ServerSocket ss = (socketWriteTimeout > 0) ? ServerSocketChannel.open().socket() : new ServerSocket()-->Line_10 $$ throw new RuntimeException("Unable to bind on specified streaming port in secure " + "context. Needed " + streamingAddr.getPort() + ", got " + ss.getLocalPort())[ FD ]
Line_16 $$ Connector listener = null-->Line_22 $$ listener.open()[ FD ]
Line_16 $$ Connector listener = null-->Line_20 $$ listener.setHost(infoSocAddr.getHostName())[ FD ]
Line_17 $$ if (policy.isHttpEnabled()) -->Line_22 $$ listener.open()[ CD ]
Line_19 $$ InetSocketAddress infoSocAddr = DataNode.getInfoAddr(conf)-->Line_23 $$ if (listener.getPort() != infoSocAddr.getPort()) [ FD ]
Line_5 $$ InetSocketAddress streamingAddr = DataNode.getStreamingAddr(conf)-->Line_10 $$ throw new RuntimeException("Unable to bind on specified streaming port in secure " + "context. Needed " + streamingAddr.getPort() + ", got " + ss.getLocalPort())[ FD ]
Line_2 $$ public static SecureResources getSecureResources(Configuration conf) throws Exception -->Line_5 $$ InetSocketAddress streamingAddr = DataNode.getStreamingAddr(conf)[ CD ]
Line_17 $$ if (policy.isHttpEnabled()) -->Line_19 $$ InetSocketAddress infoSocAddr = DataNode.getInfoAddr(conf)[ CD ]
Line_2 $$ public static SecureResources getSecureResources(Configuration conf) throws Exception -->Line_32 $$ return new SecureResources(ss, listener)[ CD ]
Line_3 $$ HttpConfig.Policy policy = DFSUtil.getHttpPolicy(conf)-->Line_17 $$ if (policy.isHttpEnabled()) [ FD ]
Line_2 $$ public static SecureResources getSecureResources(Configuration conf) throws Exception -->Line_6 $$ int socketWriteTimeout = conf.getInt(DFSConfigKeys.DFS_DATANODE_SOCKET_WRITE_TIMEOUT_KEY, HdfsServerConstants.WRITE_TIMEOUT)[ CD ]
Line_2 $$ public static SecureResources getSecureResources(Configuration conf) throws Exception -->Line_9 $$ if (ss.getLocalPort() != streamingAddr.getPort()) [ CD ]
Line_18 $$ listener = HttpServer2.createDefaultChannelConnector()-->Line_26 $$ System.err.println("Successfully obtained privileged resources (streaming port = " + ss + " ) (http listener port = " + listener.getConnection() + ")")[ FD ]
Line_2 $$ public static SecureResources getSecureResources(Configuration conf) throws Exception -->Line_6 $$ int socketWriteTimeout = conf.getInt(DFSConfigKeys.DFS_DATANODE_SOCKET_WRITE_TIMEOUT_KEY, HdfsServerConstants.WRITE_TIMEOUT)[ FD ]
Line_16 $$ Connector listener = null-->Line_18 $$ listener = HttpServer2.createDefaultChannelConnector()[ FD ]
Line_17 $$ if (policy.isHttpEnabled()) -->Line_26 $$ System.err.println("Successfully obtained privileged resources (streaming port = " + ss + " ) (http listener port = " + listener.getConnection() + ")")[ CD ]
Line_17 $$ if (policy.isHttpEnabled()) -->Line_18 $$ listener = HttpServer2.createDefaultChannelConnector()[ CD ]
Line_18 $$ listener = HttpServer2.createDefaultChannelConnector()-->Line_23 $$ if (listener.getPort() != infoSocAddr.getPort()) [ FD ]
Line_18 $$ listener = HttpServer2.createDefaultChannelConnector()-->Line_22 $$ listener.open()[ FD ]
Line_17 $$ if (policy.isHttpEnabled()) -->Line_27 $$ if (listener.getPort() > 1023 && isSecure) [ CD ]
Line_5 $$ InetSocketAddress streamingAddr = DataNode.getStreamingAddr(conf)-->Line_8 $$ ss.bind(streamingAddr, 0)[ FD ]
Line_18 $$ listener = HttpServer2.createDefaultChannelConnector()-->Line_20 $$ listener.setHost(infoSocAddr.getHostName())[ FD ]
Line_19 $$ InetSocketAddress infoSocAddr = DataNode.getInfoAddr(conf)-->Line_21 $$ listener.setPort(infoSocAddr.getPort())[ FD ]
Line_2 $$ public static SecureResources getSecureResources(Configuration conf) throws Exception -->Line_16 $$ Connector listener = null[ CD ]
Line_2 $$ public static SecureResources getSecureResources(Configuration conf) throws Exception -->Line_3 $$ HttpConfig.Policy policy = DFSUtil.getHttpPolicy(conf)[ FD ]
Line_17 $$ if (policy.isHttpEnabled()) -->Line_20 $$ listener.setHost(infoSocAddr.getHostName())[ CD ]
Line_2 $$ public static SecureResources getSecureResources(Configuration conf) throws Exception -->Line_12 $$ if (ss.getLocalPort() > 1023 && isSecure) [ CD ]
Line_7 $$ ServerSocket ss = (socketWriteTimeout > 0) ? ServerSocketChannel.open().socket() : new ServerSocket()-->Line_24 $$ throw new RuntimeException("Unable to bind on specified info port in secure " + "context. Needed " + streamingAddr.getPort() + ", got " + ss.getLocalPort())[ FD ]
Line_16 $$ Connector listener = null-->Line_26 $$ System.err.println("Successfully obtained privileged resources (streaming port = " + ss + " ) (http listener port = " + listener.getConnection() + ")")[ FD ]
Line_2 $$ public static SecureResources getSecureResources(Configuration conf) throws Exception -->Line_3 $$ HttpConfig.Policy policy = DFSUtil.getHttpPolicy(conf)[ CD ]
Line_17 $$ if (policy.isHttpEnabled()) -->Line_23 $$ if (listener.getPort() != infoSocAddr.getPort()) [ CD ]
Line_2 $$ public static SecureResources getSecureResources(Configuration conf) throws Exception -->Line_7 $$ ServerSocket ss = (socketWriteTimeout > 0) ? ServerSocketChannel.open().socket() : new ServerSocket()[ CD ]
Line_18 $$ listener = HttpServer2.createDefaultChannelConnector()-->Line_27 $$ if (listener.getPort() > 1023 && isSecure) [ FD ]
Line_7 $$ ServerSocket ss = (socketWriteTimeout > 0) ? ServerSocketChannel.open().socket() : new ServerSocket()-->Line_12 $$ if (ss.getLocalPort() > 1023 && isSecure) [ FD ]
Line_2 $$ public static SecureResources getSecureResources(Configuration conf) throws Exception -->Line_8 $$ ss.bind(streamingAddr, 0)[ CD ]
Line_2 $$ public static SecureResources getSecureResources(Configuration conf) throws Exception -->Line_4 $$ boolean isSecure = UserGroupInformation.isSecurityEnabled()[ CD ]
Line_2 $$ public static SecureResources getSecureResources(Configuration conf) throws Exception -->Line_15 $$ System.err.println("Opened streaming server at " + streamingAddr)[ CD ]
