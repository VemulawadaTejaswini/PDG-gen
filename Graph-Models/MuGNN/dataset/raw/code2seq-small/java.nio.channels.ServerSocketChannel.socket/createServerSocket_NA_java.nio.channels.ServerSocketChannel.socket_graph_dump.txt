Line_2 $$ public ServerSocket createServerSocket(String type, InetSocketAddress inetSocketAddress) throws IOException -->Line_16 $$ return serverSocket[ CD ]
Line_2 $$ public ServerSocket createServerSocket(String type, InetSocketAddress inetSocketAddress) throws IOException -->Line_5 $$ if (type.equals(Constants.SSL_SOCKET_TYPE)) [ CD ]
Line_4 $$ ServerSocket serverSocket = null-->Line_14 $$ serverSocket.bind(inetSocketAddress)[ FD ]
Line_2 $$ public ServerSocket createServerSocket(String type, InetSocketAddress inetSocketAddress) throws IOException -->Line_13 $$ if (!type.equals(Constants.SSL_SOCKET_TYPE)) [ FD ]
Line_6 $$ serverSocket = createSSLServerSocket(inetSocketAddress.getPort(), 1000, InetAddress.getByName(inetSocketAddress.getHostName()))-->Line_14 $$ serverSocket.bind(inetSocketAddress)[ FD ]
Line_9 $$ serverSocket = serverSocketChannel.socket()-->Line_14 $$ serverSocket.bind(inetSocketAddress)[ FD ]
Line_13 $$ if (!type.equals(Constants.SSL_SOCKET_TYPE)) -->Line_14 $$ serverSocket.bind(inetSocketAddress)[ CD ]
Line_7 $$ if (orb.getORBData().acceptorSocketType().equals(ORBConstants.SOCKETCHANNEL)) -->Line_8 $$ serverSocketChannel = ServerSocketChannel.open()[ CD ]
Line_2 $$ public ServerSocket createServerSocket(String type, InetSocketAddress inetSocketAddress) throws IOException -->Line_14 $$ serverSocket.bind(inetSocketAddress)[ FD ]
Line_8 $$ serverSocketChannel = ServerSocketChannel.open()-->Line_9 $$ serverSocket = serverSocketChannel.socket()[ FD ]
Line_7 $$ if (orb.getORBData().acceptorSocketType().equals(ORBConstants.SOCKETCHANNEL)) -->Line_11 $$ serverSocket = new ServerSocket()[ CD ]
Line_4 $$ ServerSocket serverSocket = null-->Line_9 $$ serverSocket = serverSocketChannel.socket()[ FD ]
Line_4 $$ ServerSocket serverSocket = null-->Line_11 $$ serverSocket = new ServerSocket()[ FD ]
Line_6 $$ serverSocket = createSSLServerSocket(inetSocketAddress.getPort(), 1000, InetAddress.getByName(inetSocketAddress.getHostName()))-->Line_11 $$ serverSocket = new ServerSocket()[ FD ]
Line_6 $$ serverSocket = createSSLServerSocket(inetSocketAddress.getPort(), 1000, InetAddress.getByName(inetSocketAddress.getHostName()))-->Line_9 $$ serverSocket = serverSocketChannel.socket()[ FD ]
Line_9 $$ serverSocket = serverSocketChannel.socket()-->Line_11 $$ serverSocket = new ServerSocket()[ FD ]
Line_5 $$ if (type.equals(Constants.SSL_SOCKET_TYPE)) -->Line_6 $$ serverSocket = createSSLServerSocket(inetSocketAddress.getPort(), 1000, InetAddress.getByName(inetSocketAddress.getHostName()))[ CD ]
Line_11 $$ serverSocket = new ServerSocket()-->Line_14 $$ serverSocket.bind(inetSocketAddress)[ FD ]
Line_3 $$ ServerSocketChannel serverSocketChannel = null-->Line_8 $$ serverSocketChannel = ServerSocketChannel.open()[ FD ]
Line_2 $$ public ServerSocket createServerSocket(String type, InetSocketAddress inetSocketAddress) throws IOException -->Line_3 $$ ServerSocketChannel serverSocketChannel = null[ CD ]
Line_5 $$ if (type.equals(Constants.SSL_SOCKET_TYPE)) -->Line_7 $$ if (orb.getORBData().acceptorSocketType().equals(ORBConstants.SOCKETCHANNEL)) [ CD ]
Line_2 $$ public ServerSocket createServerSocket(String type, InetSocketAddress inetSocketAddress) throws IOException -->Line_13 $$ if (!type.equals(Constants.SSL_SOCKET_TYPE)) [ CD ]
Line_2 $$ public ServerSocket createServerSocket(String type, InetSocketAddress inetSocketAddress) throws IOException -->Line_6 $$ serverSocket = createSSLServerSocket(inetSocketAddress.getPort(), 1000, InetAddress.getByName(inetSocketAddress.getHostName()))[ FD ]
Line_7 $$ if (orb.getORBData().acceptorSocketType().equals(ORBConstants.SOCKETCHANNEL)) -->Line_9 $$ serverSocket = serverSocketChannel.socket()[ CD ]
Line_4 $$ ServerSocket serverSocket = null-->Line_6 $$ serverSocket = createSSLServerSocket(inetSocketAddress.getPort(), 1000, InetAddress.getByName(inetSocketAddress.getHostName()))[ FD ]
Line_3 $$ ServerSocketChannel serverSocketChannel = null-->Line_9 $$ serverSocket = serverSocketChannel.socket()[ FD ]
Line_2 $$ public ServerSocket createServerSocket(String type, InetSocketAddress inetSocketAddress) throws IOException -->Line_4 $$ ServerSocket serverSocket = null[ CD ]
Line_2 $$ public ServerSocket createServerSocket(String type, InetSocketAddress inetSocketAddress) throws IOException -->Line_5 $$ if (type.equals(Constants.SSL_SOCKET_TYPE)) [ FD ]
