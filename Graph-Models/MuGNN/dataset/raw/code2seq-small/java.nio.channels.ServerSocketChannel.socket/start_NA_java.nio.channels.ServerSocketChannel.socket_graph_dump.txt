Line_10 $$ executor.execute(new Runnable() -->Line_70 $$ System.out.println("Sending response to client")[ CD ]
Line_39 $$ if (connected) -->Line_40 $$ System.out.println("Received unexpected connection.")[ CD ]
Line_39 $$ if (connected) -->Line_42 $$ return[ CD ]
Line_61 $$ if (stopped) -->Line_64 $$ return[ CD ]
Line_49 $$ long delay = expiry - monotonicClockMillis()-->Line_50 $$ if (delay <= 0) [ FD ]
Line_17 $$ connection = serverSocket.accept()-->Line_24 $$ OutputStream outputStream = Channels.newOutputStream(connection)[ FD ]
Line_15 $$ SocketChannel connection-->Line_17 $$ connection = serverSocket.accept()[ FD ]
Line_61 $$ if (stopped) -->Line_62 $$ System.out.println("Releasing client on stop.")[ CD ]
Line_61 $$ if (stopped) -->Line_63 $$ outputStream.write("HTTP/1.1 500 Server stopped.\r\nConnection: close\r\nContent-length: 0\r\n\r\n".getBytes())[ CD ]
Line_10 $$ executor.execute(new Runnable() -->Line_71 $$ outputStream.write("HTTP/1.1 200 Ok.\r\nConnection: close\r\nContent-length: 0\r\n\r\n".getBytes())[ FD ]
Line_24 $$ OutputStream outputStream = Channels.newOutputStream(connection)-->Line_26 $$ handleConnection(outputStream)[ FD ]
Line_49 $$ long delay = expiry - monotonicClockMillis()-->Line_56 $$ lock.wait(delay)[ FD ]
Line_2 $$ void start() -->Line_9 $$ executor = Executors.newCachedThreadPool()[ CD ]
Line_10 $$ executor.execute(new Runnable() -->Line_12 $$ int i = 0[ CD ]
Line_24 $$ OutputStream outputStream = Channels.newOutputStream(connection)-->Line_27 $$ outputStream.flush()[ FD ]
Line_10 $$ executor.execute(new Runnable() -->Line_13 $$ while (true) [ CD ]
Line_39 $$ if (connected) -->Line_41 $$ outputStream.write("HTTP/1.1 500 Received an unexpected connection.\r\nConnection: close\r\nContent-length: 0\r\n\r\n".getBytes())[ CD ]
Line_24 $$ OutputStream outputStream = Channels.newOutputStream(connection)-->Line_41 $$ outputStream.write("HTTP/1.1 500 Received an unexpected connection.\r\nConnection: close\r\nContent-length: 0\r\n\r\n".getBytes())[ FD ]
Line_24 $$ OutputStream outputStream = Channels.newOutputStream(connection)-->Line_52 $$ outputStream.write("HTTP/1.1 500 Timeout waiting for client to be released.\r\nConnection: close\r\nContent-length: 0\r\n\r\n".getBytes())[ FD ]
Line_50 $$ if (delay <= 0) -->Line_53 $$ return[ CD ]
Line_24 $$ OutputStream outputStream = Channels.newOutputStream(connection)-->Line_71 $$ outputStream.write("HTTP/1.1 200 Ok.\r\nConnection: close\r\nContent-length: 0\r\n\r\n".getBytes())[ FD ]
Line_15 $$ SocketChannel connection-->Line_24 $$ OutputStream outputStream = Channels.newOutputStream(connection)[ FD ]
Line_10 $$ executor.execute(new Runnable() -->Line_63 $$ outputStream.write("HTTP/1.1 500 Server stopped.\r\nConnection: close\r\nContent-length: 0\r\n\r\n".getBytes())[ FD ]
Line_48 $$ while (!released && !stopped) -->Line_49 $$ long delay = expiry - monotonicClockMillis()[ CD ]
Line_50 $$ if (delay <= 0) -->Line_52 $$ outputStream.write("HTTP/1.1 500 Timeout waiting for client to be released.\r\nConnection: close\r\nContent-length: 0\r\n\r\n".getBytes())[ CD ]
Line_12 $$ int i = 0-->Line_25 $$ System.out.println("Handle connection request no." + (++i))[ FD ]
Line_10 $$ executor.execute(new Runnable() -->Line_71 $$ outputStream.write("HTTP/1.1 200 Ok.\r\nConnection: close\r\nContent-length: 0\r\n\r\n".getBytes())[ CD ]
Line_10 $$ executor.execute(new Runnable() -->Line_41 $$ outputStream.write("HTTP/1.1 500 Received an unexpected connection.\r\nConnection: close\r\nContent-length: 0\r\n\r\n".getBytes())[ FD ]
Line_50 $$ if (delay <= 0) -->Line_51 $$ System.out.println("Timeout waiting for client to be released.")[ CD ]
Line_2 $$ void start() -->Line_10 $$ executor.execute(new Runnable() [ CD ]
Line_48 $$ while (!released && !stopped) -->Line_50 $$ if (delay <= 0) [ CD ]
Line_17 $$ connection = serverSocket.accept()-->Line_29 $$ connection.close()[ FD ]
Line_10 $$ executor.execute(new Runnable() -->Line_37 $$ System.out.println("Handling HTTP request")[ CD ]
Line_24 $$ OutputStream outputStream = Channels.newOutputStream(connection)-->Line_63 $$ outputStream.write("HTTP/1.1 500 Server stopped.\r\nConnection: close\r\nContent-length: 0\r\n\r\n".getBytes())[ FD ]
Line_10 $$ executor.execute(new Runnable() -->Line_52 $$ outputStream.write("HTTP/1.1 500 Timeout waiting for client to be released.\r\nConnection: close\r\nContent-length: 0\r\n\r\n".getBytes())[ FD ]
Line_15 $$ SocketChannel connection-->Line_29 $$ connection.close()[ FD ]
