Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_33 $$ Assert.assertNull(containerLauncher.foundErrors)[ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_3 $$ ApplicationId appId = ApplicationId.newInstance(12345, 67)[ CD ]
Line_6 $$ TaskId taskId = MRBuilderUtils.newTaskId(jobId, 9, TaskType.MAP)-->Line_7 $$ TaskAttemptId taskAttemptId = MRBuilderUtils.newTaskAttemptId(taskId, 0)[ FD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_17 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_5 $$ JobId jobId = MRBuilderUtils.newJobId(appId, 8)[ CD ]
Line_17 $$ for (int i = 0; i < 10; i++) -->Line_18 $$ containerLauncher.handle(new ContainerLauncherEvent(taskAttemptId, containerId, "host" + i + ":1234", null, ContainerLauncher.EventType.CONTAINER_REMOTE_LAUNCH))[ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_21 $$ Assert.assertEquals(10, threadPool.getPoolSize())[ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_16 $$ containerLauncher.expectedCorePoolSize = ContainerLauncherImpl.INITIAL_POOL_SIZE[ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_29 $$ Assert.assertNull(containerLauncher.foundErrors)[ CD ]
Line_10 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_25 $$ containerLauncher.handle(new ContainerLauncherEvent(taskAttemptId, containerId, "host1" + i + ":1234", null, ContainerLauncher.EventType.CONTAINER_REMOTE_LAUNCH))[ FD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_24 $$ for (int i = 1; i <= 4; i++) [ CD ]
Line_15 $$ ThreadPoolExecutor threadPool = containerLauncher.getThreadPool()-->Line_28 $$ Assert.assertEquals(12, threadPool.getPoolSize())[ FD ]
Line_15 $$ ThreadPoolExecutor threadPool = containerLauncher.getThreadPool()-->Line_32 $$ Assert.assertEquals(12, threadPool.getPoolSize())[ FD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_28 $$ Assert.assertEquals(12, threadPool.getPoolSize())[ CD ]
Line_24 $$ for (int i = 1; i <= 4; i++) -->Line_25 $$ containerLauncher.handle(new ContainerLauncherEvent(taskAttemptId, containerId, "host1" + i + ":1234", null, ContainerLauncher.EventType.CONTAINER_REMOTE_LAUNCH))[ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_34 $$ containerLauncher.stop()[ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_31 $$ waitForEvents(containerLauncher, 14)[ CD ]
Line_10 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_20 $$ waitForEvents(containerLauncher, 10)[ FD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 3)-->Line_8 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, 10)[ FD ]
Line_10 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_27 $$ waitForEvents(containerLauncher, 12)[ FD ]
Line_10 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_34 $$ containerLauncher.stop()[ FD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 3)[ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_32 $$ Assert.assertEquals(12, threadPool.getPoolSize())[ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_22 $$ Assert.assertNull(containerLauncher.foundErrors)[ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_30 $$ containerLauncher.finishEventHandling = true[ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_15 $$ ThreadPoolExecutor threadPool = containerLauncher.getThreadPool()[ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_23 $$ containerLauncher.expectedCorePoolSize = 12[ CD ]
Line_5 $$ JobId jobId = MRBuilderUtils.newJobId(appId, 8)-->Line_6 $$ TaskId taskId = MRBuilderUtils.newTaskId(jobId, 9, TaskType.MAP)[ FD ]
Line_10 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_14 $$ containerLauncher.start()[ FD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_13 $$ containerLauncher.init(conf)[ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_14 $$ containerLauncher.start()[ CD ]
Line_11 $$ Configuration conf = new Configuration()-->Line_13 $$ containerLauncher.init(conf)[ FD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_6 $$ TaskId taskId = MRBuilderUtils.newTaskId(jobId, 9, TaskType.MAP)[ CD ]
Line_3 $$ ApplicationId appId = ApplicationId.newInstance(12345, 67)-->Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 3)[ FD ]
Line_11 $$ Configuration conf = new Configuration()-->Line_12 $$ conf.setInt(MRJobConfig.MR_AM_CONTAINERLAUNCHER_THREAD_COUNT_LIMIT, 12)[ FD ]
Line_10 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_13 $$ containerLauncher.init(conf)[ FD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_7 $$ TaskAttemptId taskAttemptId = MRBuilderUtils.newTaskAttemptId(taskId, 0)[ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_8 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, 10)[ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_9 $$ AppContext context = mock(AppContext.class)[ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_20 $$ waitForEvents(containerLauncher, 10)[ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_10 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)[ CD ]
Line_10 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_18 $$ containerLauncher.handle(new ContainerLauncherEvent(taskAttemptId, containerId, "host" + i + ":1234", null, ContainerLauncher.EventType.CONTAINER_REMOTE_LAUNCH))[ FD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_27 $$ waitForEvents(containerLauncher, 12)[ CD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_11 $$ Configuration conf = new Configuration()[ CD ]
Line_10 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_31 $$ waitForEvents(containerLauncher, 14)[ FD ]
Line_17 $$ for (int i = 0; i < 10; i++) -->Line_24 $$ for (int i = 1; i <= 4; i++) [ FD ]
Line_15 $$ ThreadPoolExecutor threadPool = containerLauncher.getThreadPool()-->Line_21 $$ Assert.assertEquals(10, threadPool.getPoolSize())[ FD ]
Line_10 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_15 $$ ThreadPoolExecutor threadPool = containerLauncher.getThreadPool()[ FD ]
Line_3 $$ ApplicationId appId = ApplicationId.newInstance(12345, 67)-->Line_5 $$ JobId jobId = MRBuilderUtils.newJobId(appId, 8)[ FD ]
Line_2 $$ public void testPoolLimits() throws InterruptedException -->Line_12 $$ conf.setInt(MRJobConfig.MR_AM_CONTAINERLAUNCHER_THREAD_COUNT_LIMIT, 12)[ CD ]
