Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 3)-->Line_42 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, 21)[ FD ]
Line_11 $$ ThreadPoolExecutor threadPool = containerLauncher.getThreadPool()-->Line_13 $$ Assert.assertEquals(ContainerLauncherImpl.INITIAL_POOL_SIZE, threadPool.getCorePoolSize())[ FD ]
Line_11 $$ ThreadPoolExecutor threadPool = containerLauncher.getThreadPool()-->Line_22 $$ Assert.assertEquals(10, threadPool.getPoolSize())[ FD ]
Line_11 $$ ThreadPoolExecutor threadPool = containerLauncher.getThreadPool()-->Line_46 $$ Assert.assertEquals(11, threadPool.getPoolSize())[ FD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_11 $$ ThreadPoolExecutor threadPool = containerLauncher.getThreadPool()[ CD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 3)-->Line_17 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, i)[ FD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_41 $$ containerLauncher.finishEventHandling = false[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_9 $$ containerLauncher.init(new Configuration())[ CD ]
Line_16 $$ for (int i = 0; i < 10; i++) -->Line_18 $$ TaskAttemptId taskAttemptId = MRBuilderUtils.newTaskAttemptId(taskId, i)[ FD ]
Line_8 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_21 $$ waitForEvents(containerLauncher, 10)[ FD ]
Line_16 $$ for (int i = 0; i < 10; i++) -->Line_19 $$ containerLauncher.handle(new ContainerLauncherEvent(taskAttemptId, containerId, "host" + i + ":1234", null, ContainerLauncher.EventType.CONTAINER_REMOTE_LAUNCH))[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_30 $$ Assert.assertEquals(10, containerLauncher.numEventsProcessed.get())[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 3)[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_26 $$ while (containerLauncher.numEventsProcessed.get() < 10 && timeOut++ < 200) [ CD ]
Line_32 $$ for (int i = 0; i < 10; i++) -->Line_34 $$ TaskAttemptId taskAttemptId = MRBuilderUtils.newTaskAttemptId(taskId, i + 10)[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_5 $$ JobId jobId = MRBuilderUtils.newJobId(appId, 8)[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_12 $$ Assert.assertEquals(0, threadPool.getPoolSize())[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_3 $$ ApplicationId appId = ApplicationId.newInstance(12345, 67)[ CD ]
Line_16 $$ for (int i = 0; i < 10; i++) -->Line_32 $$ for (int i = 0; i < 10; i++) [ FD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_13 $$ Assert.assertEquals(ContainerLauncherImpl.INITIAL_POOL_SIZE, threadPool.getCorePoolSize())[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_22 $$ Assert.assertEquals(10, threadPool.getPoolSize())[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_39 $$ Assert.assertNull(containerLauncher.foundErrors)[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_46 $$ Assert.assertEquals(11, threadPool.getPoolSize())[ CD ]
Line_8 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_48 $$ containerLauncher.stop()[ FD ]
Line_6 $$ TaskId taskId = MRBuilderUtils.newTaskId(jobId, 9, TaskType.MAP)-->Line_18 $$ TaskAttemptId taskAttemptId = MRBuilderUtils.newTaskAttemptId(taskId, i)[ FD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_6 $$ TaskId taskId = MRBuilderUtils.newTaskId(jobId, 9, TaskType.MAP)[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_38 $$ Assert.assertEquals(10, threadPool.getPoolSize())[ CD ]
Line_16 $$ for (int i = 0; i < 10; i++) -->Line_18 $$ TaskAttemptId taskAttemptId = MRBuilderUtils.newTaskAttemptId(taskId, i)[ CD ]
Line_26 $$ while (containerLauncher.numEventsProcessed.get() < 10 && timeOut++ < 200) -->Line_27 $$ LOG.info("Waiting for number of events processed to become " + 10 + ". It is now " + containerLauncher.numEventsProcessed.get() + ". Timeout is " + timeOut)[ CD ]
Line_8 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_35 $$ containerLauncher.handle(new ContainerLauncherEvent(taskAttemptId, containerId, "host" + i + ":1234", null, ContainerLauncher.EventType.CONTAINER_REMOTE_LAUNCH))[ FD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_47 $$ Assert.assertNull(containerLauncher.foundErrors)[ CD ]
Line_8 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_37 $$ waitForEvents(containerLauncher, 20)[ FD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_23 $$ Assert.assertNull(containerLauncher.foundErrors)[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_8 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)[ CD ]
Line_8 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_11 $$ ThreadPoolExecutor threadPool = containerLauncher.getThreadPool()[ FD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_31 $$ containerLauncher.finishEventHandling = false[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_21 $$ waitForEvents(containerLauncher, 10)[ CD ]
Line_26 $$ while (containerLauncher.numEventsProcessed.get() < 10 && timeOut++ < 200) -->Line_28 $$ Thread.sleep(1000)[ CD ]
Line_8 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_19 $$ containerLauncher.handle(new ContainerLauncherEvent(taskAttemptId, containerId, "host" + i + ":1234", null, ContainerLauncher.EventType.CONTAINER_REMOTE_LAUNCH))[ FD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_32 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_5 $$ JobId jobId = MRBuilderUtils.newJobId(appId, 8)-->Line_6 $$ TaskId taskId = MRBuilderUtils.newTaskId(jobId, 9, TaskType.MAP)[ FD ]
Line_6 $$ TaskId taskId = MRBuilderUtils.newTaskId(jobId, 9, TaskType.MAP)-->Line_34 $$ TaskAttemptId taskAttemptId = MRBuilderUtils.newTaskAttemptId(taskId, i + 10)[ FD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_37 $$ waitForEvents(containerLauncher, 20)[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_45 $$ waitForEvents(containerLauncher, 21)[ CD ]
Line_16 $$ for (int i = 0; i < 10; i++) -->Line_17 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, i)[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_42 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, 21)[ CD ]
Line_32 $$ for (int i = 0; i < 10; i++) -->Line_35 $$ containerLauncher.handle(new ContainerLauncherEvent(taskAttemptId, containerId, "host" + i + ":1234", null, ContainerLauncher.EventType.CONTAINER_REMOTE_LAUNCH))[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_15 $$ containerLauncher.expectedCorePoolSize = ContainerLauncherImpl.INITIAL_POOL_SIZE[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_7 $$ AppContext context = mock(AppContext.class)[ CD ]
Line_3 $$ ApplicationId appId = ApplicationId.newInstance(12345, 67)-->Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 3)[ FD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_16 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_24 $$ containerLauncher.finishEventHandling = true[ CD ]
Line_11 $$ ThreadPoolExecutor threadPool = containerLauncher.getThreadPool()-->Line_12 $$ Assert.assertEquals(0, threadPool.getPoolSize())[ FD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_25 $$ int timeOut = 0[ CD ]
Line_32 $$ for (int i = 0; i < 10; i++) -->Line_33 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, i + 10)[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_10 $$ containerLauncher.start()[ CD ]
Line_8 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_10 $$ containerLauncher.start()[ FD ]
Line_11 $$ ThreadPoolExecutor threadPool = containerLauncher.getThreadPool()-->Line_38 $$ Assert.assertEquals(10, threadPool.getPoolSize())[ FD ]
Line_8 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_45 $$ waitForEvents(containerLauncher, 21)[ FD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_48 $$ containerLauncher.stop()[ CD ]
Line_16 $$ for (int i = 0; i < 10; i++) -->Line_17 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, i)[ FD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_43 $$ TaskAttemptId taskAttemptId = MRBuilderUtils.newTaskAttemptId(taskId, 21)[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_40 $$ containerLauncher.expectedCorePoolSize = 11 + ContainerLauncherImpl.INITIAL_POOL_SIZE[ CD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 3)-->Line_33 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, i + 10)[ FD ]
Line_6 $$ TaskId taskId = MRBuilderUtils.newTaskId(jobId, 9, TaskType.MAP)-->Line_43 $$ TaskAttemptId taskAttemptId = MRBuilderUtils.newTaskAttemptId(taskId, 21)[ FD ]
Line_8 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_9 $$ containerLauncher.init(new Configuration())[ FD ]
Line_8 $$ CustomContainerLauncher containerLauncher = new CustomContainerLauncher(context)-->Line_44 $$ containerLauncher.handle(new ContainerLauncherEvent(taskAttemptId, containerId, "host11:1234", null, ContainerLauncher.EventType.CONTAINER_REMOTE_LAUNCH))[ FD ]
Line_25 $$ int timeOut = 0-->Line_26 $$ while (containerLauncher.numEventsProcessed.get() < 10 && timeOut++ < 200) [ FD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_44 $$ containerLauncher.handle(new ContainerLauncherEvent(taskAttemptId, containerId, "host11:1234", null, ContainerLauncher.EventType.CONTAINER_REMOTE_LAUNCH))[ CD ]
Line_2 $$ public void testPoolSize() throws InterruptedException -->Line_14 $$ Assert.assertNull(containerLauncher.foundErrors)[ CD ]
Line_3 $$ ApplicationId appId = ApplicationId.newInstance(12345, 67)-->Line_5 $$ JobId jobId = MRBuilderUtils.newJobId(appId, 8)[ FD ]
