Line_2 $$ public void testCannotAddIntroductionAdviceToIntroduceClass() throws Throwable -->Line_13 $$ assertEquals(target.getAge(), proxied.getAge())[ CD ]
Line_2 $$ public void testCannotAddIntroductionAdviceToIntroduceClass() throws Throwable -->Line_4 $$ target.setAge(21)[ CD ]
Line_5 $$ ProxyFactory pc = new ProxyFactory(target)-->Line_7 $$ pc.addAdvisor(0, new DefaultIntroductionAdvisor(new TimestampIntroductionInterceptor(), TestBean.class))[ FD ]
Line_3 $$ TestBean target = new TestBean()-->Line_13 $$ assertEquals(target.getAge(), proxied.getAge())[ FD ]
Line_2 $$ public void testCannotAddIntroductionAdviceToIntroduceClass() throws Throwable -->Line_5 $$ ProxyFactory pc = new ProxyFactory(target)[ CD ]
Line_2 $$ public void testCannotAddIntroductionAdviceToIntroduceClass() throws Throwable -->Line_12 $$ ITestBean proxied = (ITestBean) createProxy(pc)[ CD ]
Line_12 $$ ITestBean proxied = (ITestBean) createProxy(pc)-->Line_13 $$ assertEquals(target.getAge(), proxied.getAge())[ FD ]
Line_3 $$ TestBean target = new TestBean()-->Line_4 $$ target.setAge(21)[ FD ]
Line_2 $$ public void testCannotAddIntroductionAdviceToIntroduceClass() throws Throwable -->Line_3 $$ TestBean target = new TestBean()[ CD ]
Line_5 $$ ProxyFactory pc = new ProxyFactory(target)-->Line_12 $$ ITestBean proxied = (ITestBean) createProxy(pc)[ FD ]
