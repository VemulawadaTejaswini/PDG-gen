Line_5 $$ String dump = FileCopyUtils.copyToString(new InputStreamReader(new ByteArrayInputStream(baos.toByteArray())))-->Line_7 $$ assertTrue(dump.contains("useCodeAsDefaultMessage"))[ FD ]
Line_2 $$ private void checkExceptionFromInvalidValueType(Throwable ex) throws IOException -->Line_3 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_2 $$ private void checkExceptionFromInvalidValueType(Throwable ex) throws IOException -->Line_4 $$ ex.printStackTrace(new PrintStream(baos))[ CD ]
Line_5 $$ String dump = FileCopyUtils.copyToString(new InputStreamReader(new ByteArrayInputStream(baos.toByteArray())))-->Line_6 $$ assertTrue(dump.contains("someMessageSource"))[ FD ]
Line_2 $$ private void checkExceptionFromInvalidValueType(Throwable ex) throws IOException -->Line_5 $$ String dump = FileCopyUtils.copyToString(new InputStreamReader(new ByteArrayInputStream(baos.toByteArray())))[ CD ]
Line_3 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_5 $$ String dump = FileCopyUtils.copyToString(new InputStreamReader(new ByteArrayInputStream(baos.toByteArray())))[ FD ]
Line_2 $$ private void checkExceptionFromInvalidValueType(Throwable ex) throws IOException -->Line_7 $$ assertTrue(dump.contains("useCodeAsDefaultMessage"))[ CD ]
Line_2 $$ private void checkExceptionFromInvalidValueType(Throwable ex) throws IOException -->Line_6 $$ assertTrue(dump.contains("someMessageSource"))[ CD ]
Line_2 $$ private void checkExceptionFromInvalidValueType(Throwable ex) throws IOException -->Line_4 $$ ex.printStackTrace(new PrintStream(baos))[ FD ]
