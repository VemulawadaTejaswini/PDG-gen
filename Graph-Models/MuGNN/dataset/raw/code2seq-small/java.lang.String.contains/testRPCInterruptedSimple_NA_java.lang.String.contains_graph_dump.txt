Line_8 $$ final TestProtocol proxy = RPC.getProxy(TestProtocol.class, TestProtocol.versionID, addr, conf)-->Line_9 $$ proxy.ping()[ FD ]
Line_7 $$ InetSocketAddress addr = NetUtils.getConnectAddress(server)-->Line_8 $$ final TestProtocol proxy = RPC.getProxy(TestProtocol.class, TestProtocol.versionID, addr, conf)[ FD ]
Line_4 $$ Server server = new RPC.Builder(conf).setProtocol(TestProtocol.class).setInstance(new TestImpl()).setBindAddress(ADDRESS).setPort(0).setNumHandlers(5).setVerbose(true).setSecretManager(null).build()-->Line_5 $$ server.start()[ FD ]
Line_4 $$ Server server = new RPC.Builder(conf).setProtocol(TestProtocol.class).setInstance(new TestImpl()).setBindAddress(ADDRESS).setPort(0).setNumHandlers(5).setVerbose(true).setSecretManager(null).build()-->Line_21 $$ server.stop()[ FD ]
Line_3 $$ final Configuration conf = new Configuration()-->Line_8 $$ final TestProtocol proxy = RPC.getProxy(TestProtocol.class, TestProtocol.versionID, addr, conf)[ FD ]
Line_8 $$ final TestProtocol proxy = RPC.getProxy(TestProtocol.class, TestProtocol.versionID, addr, conf)-->Line_12 $$ proxy.ping()[ FD ]
Line_2 $$ public void testRPCInterruptedSimple() throws IOException -->Line_3 $$ final Configuration conf = new Configuration()[ CD ]
Line_4 $$ Server server = new RPC.Builder(conf).setProtocol(TestProtocol.class).setInstance(new TestImpl()).setBindAddress(ADDRESS).setPort(0).setNumHandlers(5).setVerbose(true).setSecretManager(null).build()-->Line_7 $$ InetSocketAddress addr = NetUtils.getConnectAddress(server)[ FD ]
Line_2 $$ public void testRPCInterruptedSimple() throws IOException -->Line_5 $$ server.start()[ CD ]
Line_2 $$ public void testRPCInterruptedSimple() throws IOException -->Line_4 $$ Server server = new RPC.Builder(conf).setProtocol(TestProtocol.class).setInstance(new TestImpl()).setBindAddress(ADDRESS).setPort(0).setNumHandlers(5).setVerbose(true).setSecretManager(null).build()[ CD ]
