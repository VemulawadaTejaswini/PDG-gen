Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_139 $$ throw ParseUtils.unexpectedElement(reader)[ FD ]
Line_6 $$ String jndiName = null-->Line_21 $$ JNDINAME.parseAndSetParameter(jndiName, connectionDefinitionNode, reader)[ FD ]
Line_8 $$ boolean poolDefined = Boolean.FALSE-->Line_130 $$ poolDefined = true[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_46 $$ ENLISTMENT.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_73 $$ if (Activation.Tag.forName(reader.getLocalName()) == Activation.Tag.CONNECTION_DEFINITION) [ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_36 $$ USE_CCM.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_20 $$ jndiName = value[ FD ]
Line_9 $$ for (int i = 0; i < attributeSize; i++) -->Line_10 $$ ConnectionDefinition.Attribute attribute = ConnectionDefinition.Attribute.forName(reader.getAttributeLocalName(i))[ CD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_58 $$ if (poolName == null || poolName.trim().equals("")) [ CD ]
Line_63 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)-->Line_91 $$ parseConfigProperties(reader, configMap.get(poolName))[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_101 $$ parseTimeOut(reader, isXa, connectionDefinitionNode)[ FD ]
Line_26 $$ poolName = value-->Line_61 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_8 $$ boolean poolDefined = Boolean.FALSE[ CD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_85 $$ switch(ConnectionDefinition.Tag.forName(reader.getLocalName())) [ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_15 $$ ENABLED.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_31 $$ USE_JAVA_CONTEXT.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_20 $$ jndiName = value-->Line_59 $$ if (jndiName != null && jndiName.trim().length() != 0) [ FD ]
Line_20 $$ jndiName = value-->Line_63 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ FD ]
Line_9 $$ for (int i = 0; i < attributeSize; i++) -->Line_11 $$ String value = reader.getAttributeValue(i)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_106 $$ parseValidation(reader, connectionDefinitionNode)[ FD ]
Line_20 $$ jndiName = value-->Line_60 $$ if (jndiName.contains("/")) [ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_117 $$ parseXaPool(reader, connectionDefinitionNode)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_7 $$ int attributeSize = reader.getAttributeCount()[ CD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_124 $$ throw ParseUtils.unexpectedElement(reader)[ FD ]
Line_63 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)-->Line_88 $$ if (!configMap.containsKey(poolName)) [ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_31 $$ USE_JAVA_CONTEXT.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_46 $$ ENLISTMENT.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_7 $$ int attributeSize = reader.getAttributeCount()-->Line_9 $$ for (int i = 0; i < attributeSize; i++) [ FD ]
Line_5 $$ String poolName = null-->Line_63 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ FD ]
Line_5 $$ String poolName = null-->Line_26 $$ poolName = value[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_55 $$ throw ParseUtils.unexpectedAttribute(reader, i)[ FD ]
Line_61 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)-->Line_74 $$ map.put(poolName, connectionDefinitionNode)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()[ CD ]
Line_26 $$ poolName = value-->Line_74 $$ map.put(poolName, connectionDefinitionNode)[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_96 $$ parseSecuritySettings(reader, connectionDefinitionNode)[ FD ]
Line_20 $$ jndiName = value-->Line_21 $$ JNDINAME.parseAndSetParameter(jndiName, connectionDefinitionNode, reader)[ FD ]
Line_73 $$ if (Activation.Tag.forName(reader.getLocalName()) == Activation.Tag.CONNECTION_DEFINITION) -->Line_75 $$ return[ CD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_117 $$ parseXaPool(reader, connectionDefinitionNode)[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_74 $$ map.put(poolName, connectionDefinitionNode)[ FD ]
Line_8 $$ boolean poolDefined = Boolean.FALSE-->Line_118 $$ poolDefined = true[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_6 $$ String jndiName = null[ CD ]
Line_9 $$ for (int i = 0; i < attributeSize; i++) -->Line_55 $$ throw ParseUtils.unexpectedAttribute(reader, i)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_70 $$ switch(reader.nextTag()) [ FD ]
Line_26 $$ poolName = value-->Line_88 $$ if (!configMap.containsKey(poolName)) [ FD ]
Line_60 $$ if (jndiName.contains("/")) -->Line_61 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)[ CD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_135 $$ parseRecovery(reader, connectionDefinitionNode)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_15 $$ ENABLED.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_9 $$ for (int i = 0; i < attributeSize; i++) -->Line_10 $$ ConnectionDefinition.Attribute attribute = ConnectionDefinition.Attribute.forName(reader.getAttributeLocalName(i))[ FD ]
Line_26 $$ poolName = value-->Line_91 $$ parseConfigProperties(reader, configMap.get(poolName))[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_135 $$ parseRecovery(reader, connectionDefinitionNode)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_129 $$ parsePool(reader, connectionDefinitionNode)[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_106 $$ parseValidation(reader, connectionDefinitionNode)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_41 $$ SHARABLE.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_5 $$ String poolName = null-->Line_74 $$ map.put(poolName, connectionDefinitionNode)[ FD ]
Line_6 $$ String jndiName = null-->Line_60 $$ if (jndiName.contains("/")) [ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_69 $$ while (reader.hasNext()) [ CD ]
Line_61 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)-->Line_89 $$ configMap.put(poolName, new HashMap<String, ModelNode>(0))[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_91 $$ parseConfigProperties(reader, configMap.get(poolName))[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_46 $$ ENLISTMENT.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_66 $$ throw ParseUtils.missingRequired(reader, EnumSet.of(ConnectionDefinition.Attribute.JNDI_NAME))[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_51 $$ CLASS_NAME.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_4 $$ connectionDefinitionNode.get(OP).set(ADD)[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_36 $$ USE_CCM.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_26 $$ poolName = value[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_101 $$ parseTimeOut(reader, isXa, connectionDefinitionNode)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_145 $$ throw ParseUtils.unexpectedEndElement(reader)[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_129 $$ parsePool(reader, connectionDefinitionNode)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_5 $$ String poolName = null[ CD ]
Line_61 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)-->Line_63 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_78 $$ throw ParseUtils.unexpectedEndElement(reader)[ FD ]
Line_5 $$ String poolName = null-->Line_91 $$ parseConfigProperties(reader, configMap.get(poolName))[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_7 $$ int attributeSize = reader.getAttributeCount()[ FD ]
Line_5 $$ String poolName = null-->Line_61 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)[ FD ]
Line_26 $$ poolName = value-->Line_58 $$ if (poolName == null || poolName.trim().equals("")) [ FD ]
Line_6 $$ String jndiName = null-->Line_20 $$ jndiName = value[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_96 $$ parseSecuritySettings(reader, connectionDefinitionNode)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_4 $$ connectionDefinitionNode.get(OP).set(ADD)[ CD ]
Line_63 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)-->Line_89 $$ configMap.put(poolName, new HashMap<String, ModelNode>(0))[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_69 $$ while (reader.hasNext()) [ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_41 $$ SHARABLE.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_88 $$ if (!configMap.containsKey(poolName)) -->Line_89 $$ configMap.put(poolName, new HashMap<String, ModelNode>(0))[ CD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_51 $$ CLASS_NAME.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_5 $$ String poolName = null-->Line_89 $$ configMap.put(poolName, new HashMap<String, ModelNode>(0))[ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_51 $$ CLASS_NAME.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_9 $$ for (int i = 0; i < attributeSize; i++) [ CD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_41 $$ SHARABLE.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_74 $$ map.put(poolName, connectionDefinitionNode)[ FD ]
Line_26 $$ poolName = value-->Line_89 $$ configMap.put(poolName, new HashMap<String, ModelNode>(0))[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_36 $$ USE_CCM.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_20 $$ jndiName = value-->Line_61 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)[ FD ]
Line_73 $$ if (Activation.Tag.forName(reader.getLocalName()) == Activation.Tag.CONNECTION_DEFINITION) -->Line_74 $$ map.put(poolName, connectionDefinitionNode)[ CD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_112 $$ throw ParseUtils.unexpectedElement(reader)[ FD ]
Line_6 $$ String jndiName = null-->Line_61 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_89 $$ configMap.put(poolName, new HashMap<String, ModelNode>(0))[ FD ]
Line_6 $$ String jndiName = null-->Line_59 $$ if (jndiName != null && jndiName.trim().length() != 0) [ FD ]
Line_63 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)-->Line_74 $$ map.put(poolName, connectionDefinitionNode)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_11 $$ String value = reader.getAttributeValue(i)[ FD ]
Line_9 $$ for (int i = 0; i < attributeSize; i++) -->Line_11 $$ String value = reader.getAttributeValue(i)[ CD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_15 $$ ENABLED.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_73 $$ if (Activation.Tag.forName(reader.getLocalName()) == Activation.Tag.CONNECTION_DEFINITION) -->Line_77 $$ if (ConnectionDefinition.Tag.forName(reader.getLocalName()) == ConnectionDefinition.Tag.UNKNOWN) [ CD ]
Line_5 $$ String poolName = null-->Line_88 $$ if (!configMap.containsKey(poolName)) [ FD ]
Line_60 $$ if (jndiName.contains("/")) -->Line_63 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ CD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_111 $$ if (!isXa) [ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_21 $$ JNDINAME.parseAndSetParameter(jndiName, connectionDefinitionNode, reader)[ FD ]
Line_61 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)-->Line_88 $$ if (!configMap.containsKey(poolName)) [ FD ]
Line_58 $$ if (poolName == null || poolName.trim().equals("")) -->Line_59 $$ if (jndiName != null && jndiName.trim().length() != 0) [ CD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_88 $$ if (!configMap.containsKey(poolName)) [ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_10 $$ ConnectionDefinition.Attribute attribute = ConnectionDefinition.Attribute.forName(reader.getAttributeLocalName(i))[ FD ]
Line_59 $$ if (jndiName != null && jndiName.trim().length() != 0) -->Line_60 $$ if (jndiName.contains("/")) [ CD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_77 $$ if (ConnectionDefinition.Tag.forName(reader.getLocalName()) == ConnectionDefinition.Tag.UNKNOWN) [ FD ]
Line_2 $$ protected void parseConnectionDefinitions_1_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_21 $$ JNDINAME.parseAndSetParameter(jndiName, connectionDefinitionNode, reader)[ FD ]
Line_61 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)-->Line_91 $$ parseConfigProperties(reader, configMap.get(poolName))[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_31 $$ USE_JAVA_CONTEXT.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_5 $$ String poolName = null-->Line_58 $$ if (poolName == null || poolName.trim().equals("")) [ FD ]
Line_6 $$ String jndiName = null-->Line_63 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ FD ]
Line_26 $$ poolName = value-->Line_63 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ FD ]
Line_118 $$ poolDefined = true-->Line_130 $$ poolDefined = true[ FD ]
