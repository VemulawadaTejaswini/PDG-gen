Line_12 $$ if ((pos == -1) && !line.contains("StringUtil.equalsIgnoreCase(")) -->Line_14 $$ pos = line.indexOf(".equalsIgnoreCase(")[ CD ]
Line_6 $$ String methodName = "toLowerCase"-->Line_9 $$ methodName = "toUpperCase"[ FD ]
Line_14 $$ pos = line.indexOf(".equalsIgnoreCase(")-->Line_16 $$ if (pos != -1) [ FD ]
Line_3 $$ if (isExcludedPath(getRunOutsidePortalExclusionPaths(), absolutePath) || fileName.endsWith("GetterUtil.java")) -->Line_4 $$ return[ CD ]
Line_2 $$ protected void checkInefficientStringMethods(String line, String fileName, String absolutePath, int lineCount) -->Line_12 $$ if ((pos == -1) && !line.contains("StringUtil.equalsIgnoreCase(")) [ CD ]
Line_12 $$ if ((pos == -1) && !line.contains("StringUtil.equalsIgnoreCase(")) -->Line_13 $$ methodName = "equalsIgnoreCase"[ CD ]
Line_10 $$ pos = line.indexOf(".toUpperCase()")-->Line_14 $$ pos = line.indexOf(".equalsIgnoreCase(")[ FD ]
Line_8 $$ if (pos == -1) -->Line_9 $$ methodName = "toUpperCase"[ CD ]
Line_2 $$ protected void checkInefficientStringMethods(String line, String fileName, String absolutePath, int lineCount) -->Line_7 $$ int pos = line.indexOf(".toLowerCase()")[ FD ]
Line_2 $$ protected void checkInefficientStringMethods(String line, String fileName, String absolutePath, int lineCount) -->Line_7 $$ int pos = line.indexOf(".toLowerCase()")[ CD ]
Line_7 $$ int pos = line.indexOf(".toLowerCase()")-->Line_14 $$ pos = line.indexOf(".equalsIgnoreCase(")[ FD ]
Line_2 $$ protected void checkInefficientStringMethods(String line, String fileName, String absolutePath, int lineCount) -->Line_6 $$ String methodName = "toLowerCase"[ CD ]
Line_7 $$ int pos = line.indexOf(".toLowerCase()")-->Line_10 $$ pos = line.indexOf(".toUpperCase()")[ FD ]
Line_2 $$ protected void checkInefficientStringMethods(String line, String fileName, String absolutePath, int lineCount) -->Line_3 $$ if (isExcludedPath(getRunOutsidePortalExclusionPaths(), absolutePath) || fileName.endsWith("GetterUtil.java")) [ CD ]
Line_2 $$ protected void checkInefficientStringMethods(String line, String fileName, String absolutePath, int lineCount) -->Line_3 $$ if (isExcludedPath(getRunOutsidePortalExclusionPaths(), absolutePath) || fileName.endsWith("GetterUtil.java")) [ FD ]
Line_9 $$ methodName = "toUpperCase"-->Line_13 $$ methodName = "equalsIgnoreCase"[ FD ]
Line_10 $$ pos = line.indexOf(".toUpperCase()")-->Line_16 $$ if (pos != -1) [ FD ]
Line_2 $$ protected void checkInefficientStringMethods(String line, String fileName, String absolutePath, int lineCount) -->Line_17 $$ processErrorMessage(fileName, "Use StringUtil." + methodName + ": " + fileName + " " + lineCount)[ FD ]
Line_2 $$ protected void checkInefficientStringMethods(String line, String fileName, String absolutePath, int lineCount) -->Line_14 $$ pos = line.indexOf(".equalsIgnoreCase(")[ FD ]
Line_2 $$ protected void checkInefficientStringMethods(String line, String fileName, String absolutePath, int lineCount) -->Line_16 $$ if (pos != -1) [ CD ]
Line_7 $$ int pos = line.indexOf(".toLowerCase()")-->Line_16 $$ if (pos != -1) [ FD ]
Line_2 $$ protected void checkInefficientStringMethods(String line, String fileName, String absolutePath, int lineCount) -->Line_10 $$ pos = line.indexOf(".toUpperCase()")[ FD ]
Line_2 $$ protected void checkInefficientStringMethods(String line, String fileName, String absolutePath, int lineCount) -->Line_8 $$ if (pos == -1) [ CD ]
Line_7 $$ int pos = line.indexOf(".toLowerCase()")-->Line_8 $$ if (pos == -1) [ FD ]
Line_2 $$ protected void checkInefficientStringMethods(String line, String fileName, String absolutePath, int lineCount) -->Line_12 $$ if ((pos == -1) && !line.contains("StringUtil.equalsIgnoreCase(")) [ FD ]
Line_16 $$ if (pos != -1) -->Line_17 $$ processErrorMessage(fileName, "Use StringUtil." + methodName + ": " + fileName + " " + lineCount)[ CD ]
Line_8 $$ if (pos == -1) -->Line_10 $$ pos = line.indexOf(".toUpperCase()")[ CD ]
Line_6 $$ String methodName = "toLowerCase"-->Line_13 $$ methodName = "equalsIgnoreCase"[ FD ]
