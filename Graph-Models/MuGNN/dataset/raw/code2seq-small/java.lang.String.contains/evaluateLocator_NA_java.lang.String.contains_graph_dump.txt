Line_2 $$ public static String evaluateLocator(String locator, Map<String, String> context) throws Exception -->Line_17 $$ return locatorValue[ CD ]
Line_6 $$ Pattern pattern = Pattern.compile(regex)-->Line_7 $$ Matcher matcher = pattern.matcher(locatorValue)[ FD ]
Line_3 $$ String locatorValue = locator-->Line_7 $$ Matcher matcher = pattern.matcher(locatorValue)[ FD ]
Line_7 $$ Matcher matcher = pattern.matcher(locatorValue)-->Line_8 $$ while (matcher.find()) [ FD ]
Line_4 $$ if (locatorValue.contains("$-->Line_5 $$ String regex = "\\$\\[ CD ]
Line_9 $$ String variableKey = matcher.group(1)-->Line_10 $$ if (context.containsKey(variableKey)) [ FD ]
Line_2 $$ public static String evaluateLocator(String locator, Map<String, String> context) throws Exception -->Line_3 $$ String locatorValue = locator[ CD ]
Line_4 $$ if (locatorValue.contains("$-->Line_7 $$ Matcher matcher = pattern.matcher(locatorValue)[ CD ]
Line_2 $$ public static String evaluateLocator(String locator, Map<String, String> context) throws Exception -->Line_11 $$ locatorValue = locatorValue.replaceFirst(regex, context.get(variableKey))[ FD ]
Line_5 $$ String regex = "\\$\\-->Line_6 $$ Pattern pattern = Pattern.compile(regex)[ FD ]
Line_4 $$ if (locatorValue.contains("$-->Line_8 $$ while (matcher.find()) [ CD ]
Line_8 $$ while (matcher.find()) -->Line_10 $$ if (context.containsKey(variableKey)) [ CD ]
Line_5 $$ String regex = "\\$\\-->Line_11 $$ locatorValue = locatorValue.replaceFirst(regex, context.get(variableKey))[ FD ]
Line_9 $$ String variableKey = matcher.group(1)-->Line_11 $$ locatorValue = locatorValue.replaceFirst(regex, context.get(variableKey))[ FD ]
Line_8 $$ while (matcher.find()) -->Line_9 $$ String variableKey = matcher.group(1)[ CD ]
Line_4 $$ if (locatorValue.contains("$-->Line_6 $$ Pattern pattern = Pattern.compile(regex)[ CD ]
Line_3 $$ String locatorValue = locator-->Line_4 $$ if (locatorValue.contains("$[ FD ]
Line_2 $$ public static String evaluateLocator(String locator, Map<String, String> context) throws Exception -->Line_10 $$ if (context.containsKey(variableKey)) [ FD ]
Line_7 $$ Matcher matcher = pattern.matcher(locatorValue)-->Line_9 $$ String variableKey = matcher.group(1)[ FD ]
Line_3 $$ String locatorValue = locator-->Line_11 $$ locatorValue = locatorValue.replaceFirst(regex, context.get(variableKey))[ FD ]
Line_2 $$ public static String evaluateLocator(String locator, Map<String, String> context) throws Exception -->Line_4 $$ if (locatorValue.contains("$[ CD ]
Line_10 $$ if (context.containsKey(variableKey)) -->Line_11 $$ locatorValue = locatorValue.replaceFirst(regex, context.get(variableKey))[ CD ]
