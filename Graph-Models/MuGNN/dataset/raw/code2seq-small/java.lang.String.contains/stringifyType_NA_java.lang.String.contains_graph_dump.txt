Line_11 $$ String s = type.toString()-->Line_13 $$ LOG.assertTrue(!s.contains("?extends"), s)[ FD ]
Line_2 $$ private static String stringifyType(Object type) -->Line_7 $$ if (type instanceof Map)[ CD ]
Line_11 $$ String s = type.toString()-->Line_15 $$ LOG.assertTrue(!s.startsWith("null."), s)[ FD ]
Line_2 $$ private static String stringifyType(Object type) -->Line_12 $$ LOG.assertTrue(!s.startsWith("? extends"), s)[ CD ]
Line_2 $$ private static String stringifyType(Object type) -->Line_5 $$ if (type instanceof Closure)[ CD ]
Line_2 $$ private static String stringifyType(Object type) -->Line_14 $$ LOG.assertTrue(!s.contains("<null."), s)[ CD ]
Line_2 $$ private static String stringifyType(Object type) -->Line_3 $$ if (type == null)[ CD ]
Line_11 $$ String s = type.toString()-->Line_16 $$ LOG.assertTrue(!(s.contains(",") && !s.contains("<")), s)[ FD ]
Line_9 $$ if (type instanceof Class)-->Line_10 $$ return ((Class) type).getName()[ CD ]
Line_2 $$ private static String stringifyType(Object type) -->Line_3 $$ if (type == null)[ FD ]
Line_2 $$ private static String stringifyType(Object type) -->Line_9 $$ if (type instanceof Class)[ CD ]
Line_2 $$ private static String stringifyType(Object type) -->Line_11 $$ String s = type.toString()[ FD ]
Line_2 $$ private static String stringifyType(Object type) -->Line_11 $$ String s = type.toString()[ CD ]
Line_2 $$ private static String stringifyType(Object type) -->Line_15 $$ LOG.assertTrue(!s.startsWith("null."), s)[ CD ]
Line_11 $$ String s = type.toString()-->Line_14 $$ LOG.assertTrue(!s.contains("<null."), s)[ FD ]
Line_2 $$ private static String stringifyType(Object type) -->Line_7 $$ if (type instanceof Map)[ FD ]
Line_2 $$ private static String stringifyType(Object type) -->Line_16 $$ LOG.assertTrue(!(s.contains(",") && !s.contains("<")), s)[ CD ]
Line_5 $$ if (type instanceof Closure)-->Line_6 $$ return GroovyCommonClassNames.GROOVY_LANG_CLOSURE[ CD ]
Line_11 $$ String s = type.toString()-->Line_12 $$ LOG.assertTrue(!s.startsWith("? extends"), s)[ FD ]
Line_2 $$ private static String stringifyType(Object type) -->Line_17 $$ return s[ CD ]
Line_2 $$ private static String stringifyType(Object type) -->Line_5 $$ if (type instanceof Closure)[ FD ]
Line_3 $$ if (type == null)-->Line_4 $$ return CommonClassNames.JAVA_LANG_OBJECT[ CD ]
Line_7 $$ if (type instanceof Map)-->Line_8 $$ return CommonClassNames.JAVA_UTIL_MAP[ CD ]
Line_2 $$ private static String stringifyType(Object type) -->Line_13 $$ LOG.assertTrue(!s.contains("?extends"), s)[ CD ]
Line_2 $$ private static String stringifyType(Object type) -->Line_9 $$ if (type instanceof Class)[ FD ]
