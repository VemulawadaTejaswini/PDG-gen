Line_2 $$ public String getGeneratedName(final JavaRunConfigurationModule configurationModule) -->Line_31 $$ return className[ CD ]
Line_5 $$ final String packageName = TEST_PACKAGE.equals(TEST_OBJECT) ? getPackageName() : StringUtil.getShortName(getDirName(), '/')-->Line_6 $$ if (packageName.length() == 0) [ FD ]
Line_6 $$ if (packageName.length() == 0) -->Line_10 $$ return DEFAULT_PACKAGE_NAME[ CD ]
Line_17 $$ if (TEST_PATTERN.equals(TEST_OBJECT)) -->Line_18 $$ final int size = myPattern.size()[ CD ]
Line_2 $$ public String getGeneratedName(final JavaRunConfigurationModule configurationModule) -->Line_28 $$ if (TEST_METHOD.equals(TEST_OBJECT)) [ CD ]
Line_3 $$ if (TEST_PACKAGE.equals(TEST_OBJECT) || TEST_DIRECTORY.equals(TEST_OBJECT)) -->Line_6 $$ if (packageName.length() == 0) [ CD ]
Line_18 $$ final int size = myPattern.size()-->Line_19 $$ if (size == 0)[ FD ]
Line_24 $$ if (TEST_CATEGORY.equals(TEST_OBJECT)) -->Line_25 $$ return "@Category(" + (StringUtil.isEmpty(CATEGORY_NAME) ? "Invalid" : CATEGORY_NAME) + ")"[ CD ]
Line_6 $$ if (packageName.length() == 0) -->Line_7 $$ if (moduleName.length() > 0) [ CD ]
Line_19 $$ if (size == 0)-->Line_20 $$ return "Temp suite"[ CD ]
Line_2 $$ public String getGeneratedName(final JavaRunConfigurationModule configurationModule) -->Line_24 $$ if (TEST_CATEGORY.equals(TEST_OBJECT)) [ CD ]
Line_4 $$ final String moduleName = TEST_SEARCH_SCOPE.getScope() == TestSearchScope.WHOLE_PROJECT ? "" : configurationModule.getModuleName()-->Line_8 $$ return ExecutionBundle.message("default.junit.config.name.all.in.module", moduleName)[ FD ]
Line_4 $$ final String moduleName = TEST_SEARCH_SCOPE.getScope() == TestSearchScope.WHOLE_PROJECT ? "" : configurationModule.getModuleName()-->Line_12 $$ if (moduleName.length() > 0) [ FD ]
Line_5 $$ final String packageName = TEST_PACKAGE.equals(TEST_OBJECT) ? getPackageName() : StringUtil.getShortName(getDirName(), '/')-->Line_13 $$ return ExecutionBundle.message("default.junit.config.name.all.in.package.in.module", packageName, moduleName)[ FD ]
Line_17 $$ if (TEST_PATTERN.equals(TEST_OBJECT)) -->Line_21 $$ final String fqName = myPattern.iterator().next()[ CD ]
Line_28 $$ if (TEST_METHOD.equals(TEST_OBJECT)) -->Line_29 $$ return className + '.' + getMethodName()[ CD ]
Line_7 $$ if (moduleName.length() > 0) -->Line_8 $$ return ExecutionBundle.message("default.junit.config.name.all.in.module", moduleName)[ CD ]
Line_17 $$ if (TEST_PATTERN.equals(TEST_OBJECT)) -->Line_19 $$ if (size == 0)[ CD ]
Line_21 $$ final String fqName = myPattern.iterator().next()-->Line_22 $$ return (fqName.contains("*") ? fqName : StringUtil.getShortName(fqName)) + (size > 1 ? " and " + (size - 1) + " more" : "")[ FD ]
Line_3 $$ if (TEST_PACKAGE.equals(TEST_OBJECT) || TEST_DIRECTORY.equals(TEST_OBJECT)) -->Line_15 $$ return packageName[ CD ]
Line_2 $$ public String getGeneratedName(final JavaRunConfigurationModule configurationModule) -->Line_17 $$ if (TEST_PATTERN.equals(TEST_OBJECT)) [ CD ]
Line_12 $$ if (moduleName.length() > 0) -->Line_13 $$ return ExecutionBundle.message("default.junit.config.name.all.in.package.in.module", packageName, moduleName)[ CD ]
Line_2 $$ public String getGeneratedName(final JavaRunConfigurationModule configurationModule) -->Line_27 $$ final String className = JavaExecutionUtil.getPresentableClassName(getMainClassName())[ CD ]
Line_4 $$ final String moduleName = TEST_SEARCH_SCOPE.getScope() == TestSearchScope.WHOLE_PROJECT ? "" : configurationModule.getModuleName()-->Line_7 $$ if (moduleName.length() > 0) [ FD ]
Line_2 $$ public String getGeneratedName(final JavaRunConfigurationModule configurationModule) -->Line_3 $$ if (TEST_PACKAGE.equals(TEST_OBJECT) || TEST_DIRECTORY.equals(TEST_OBJECT)) [ CD ]
Line_3 $$ if (TEST_PACKAGE.equals(TEST_OBJECT) || TEST_DIRECTORY.equals(TEST_OBJECT)) -->Line_4 $$ final String moduleName = TEST_SEARCH_SCOPE.getScope() == TestSearchScope.WHOLE_PROJECT ? "" : configurationModule.getModuleName()[ CD ]
Line_17 $$ if (TEST_PATTERN.equals(TEST_OBJECT)) -->Line_22 $$ return (fqName.contains("*") ? fqName : StringUtil.getShortName(fqName)) + (size > 1 ? " and " + (size - 1) + " more" : "")[ CD ]
Line_2 $$ public String getGeneratedName(final JavaRunConfigurationModule configurationModule) -->Line_4 $$ final String moduleName = TEST_SEARCH_SCOPE.getScope() == TestSearchScope.WHOLE_PROJECT ? "" : configurationModule.getModuleName()[ FD ]
Line_3 $$ if (TEST_PACKAGE.equals(TEST_OBJECT) || TEST_DIRECTORY.equals(TEST_OBJECT)) -->Line_5 $$ final String packageName = TEST_PACKAGE.equals(TEST_OBJECT) ? getPackageName() : StringUtil.getShortName(getDirName(), '/')[ CD ]
Line_4 $$ final String moduleName = TEST_SEARCH_SCOPE.getScope() == TestSearchScope.WHOLE_PROJECT ? "" : configurationModule.getModuleName()-->Line_13 $$ return ExecutionBundle.message("default.junit.config.name.all.in.package.in.module", packageName, moduleName)[ FD ]
Line_3 $$ if (TEST_PACKAGE.equals(TEST_OBJECT) || TEST_DIRECTORY.equals(TEST_OBJECT)) -->Line_12 $$ if (moduleName.length() > 0) [ CD ]
