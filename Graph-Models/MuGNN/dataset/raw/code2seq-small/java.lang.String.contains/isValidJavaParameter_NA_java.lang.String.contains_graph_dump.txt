Line_3 $$ if (javaParameter.contains(" implements ") || javaParameter.contains(" throws ")) -->Line_4 $$ return false[ CD ]
Line_7 $$ if ((quoteCount % 2) == 1) -->Line_8 $$ return false[ CD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_10 $$ javaParameter = stripQuotes(javaParameter, CharPool.QUOTE)[ FD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_11 $$ int openParenthesisCount = StringUtil.count(javaParameter, StringPool.OPEN_PARENTHESIS)[ FD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_7 $$ if ((quoteCount % 2) == 1) [ CD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_14 $$ int greaterThanCount = StringUtil.count(javaParameter, StringPool.GREATER_THAN)[ CD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_12 $$ int closeParenthesisCount = StringUtil.count(javaParameter, StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_13 $$ int lessThanCount = StringUtil.count(javaParameter, StringPool.LESS_THAN)[ FD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_6 $$ int quoteCount = StringUtil.count(javaParameter, StringPool.QUOTE)[ FD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_16 $$ int closeCurlyBraceCount = StringUtil.count(javaParameter, StringPool.CLOSE_CURLY_BRACE)[ FD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_12 $$ int closeParenthesisCount = StringUtil.count(javaParameter, StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_3 $$ if (javaParameter.contains(" implements ") || javaParameter.contains(" throws ")) [ FD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_15 $$ int openCurlyBraceCount = StringUtil.count(javaParameter, StringPool.OPEN_CURLY_BRACE)[ CD ]
Line_10 $$ javaParameter = stripQuotes(javaParameter, CharPool.QUOTE)-->Line_14 $$ int greaterThanCount = StringUtil.count(javaParameter, StringPool.GREATER_THAN)[ FD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_11 $$ int openParenthesisCount = StringUtil.count(javaParameter, StringPool.OPEN_PARENTHESIS)[ CD ]
Line_10 $$ javaParameter = stripQuotes(javaParameter, CharPool.QUOTE)-->Line_13 $$ int lessThanCount = StringUtil.count(javaParameter, StringPool.LESS_THAN)[ FD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_14 $$ int greaterThanCount = StringUtil.count(javaParameter, StringPool.GREATER_THAN)[ FD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_3 $$ if (javaParameter.contains(" implements ") || javaParameter.contains(" throws ")) [ CD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_10 $$ javaParameter = stripQuotes(javaParameter, CharPool.QUOTE)[ CD ]
Line_17 $$ if ((openParenthesisCount == closeParenthesisCount) && (lessThanCount == greaterThanCount) && (openCurlyBraceCount == closeCurlyBraceCount)) -->Line_18 $$ return true[ CD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_16 $$ int closeCurlyBraceCount = StringUtil.count(javaParameter, StringPool.CLOSE_CURLY_BRACE)[ CD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_6 $$ int quoteCount = StringUtil.count(javaParameter, StringPool.QUOTE)[ CD ]
Line_10 $$ javaParameter = stripQuotes(javaParameter, CharPool.QUOTE)-->Line_12 $$ int closeParenthesisCount = StringUtil.count(javaParameter, StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_10 $$ javaParameter = stripQuotes(javaParameter, CharPool.QUOTE)-->Line_16 $$ int closeCurlyBraceCount = StringUtil.count(javaParameter, StringPool.CLOSE_CURLY_BRACE)[ FD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_17 $$ if ((openParenthesisCount == closeParenthesisCount) && (lessThanCount == greaterThanCount) && (openCurlyBraceCount == closeCurlyBraceCount)) [ CD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_13 $$ int lessThanCount = StringUtil.count(javaParameter, StringPool.LESS_THAN)[ CD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_20 $$ return false[ CD ]
Line_10 $$ javaParameter = stripQuotes(javaParameter, CharPool.QUOTE)-->Line_11 $$ int openParenthesisCount = StringUtil.count(javaParameter, StringPool.OPEN_PARENTHESIS)[ FD ]
Line_10 $$ javaParameter = stripQuotes(javaParameter, CharPool.QUOTE)-->Line_15 $$ int openCurlyBraceCount = StringUtil.count(javaParameter, StringPool.OPEN_CURLY_BRACE)[ FD ]
Line_2 $$ protected boolean isValidJavaParameter(String javaParameter) -->Line_15 $$ int openCurlyBraceCount = StringUtil.count(javaParameter, StringPool.OPEN_CURLY_BRACE)[ FD ]
