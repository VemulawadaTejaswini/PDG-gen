Line_3 $$ int rc-->Line_44 $$ assertEquals(1, rc)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_9 $$ assertTrue(outContent.toString().contains("keyattr1 has been " + "successfully created"))[ CD ]
Line_7 $$ rc = ks.run(args1)-->Line_19 $$ rc = ks.run(args2)[ FD ]
Line_4 $$ KeyShell ks = new KeyShell()-->Line_19 $$ rc = ks.run(args2)[ FD ]
Line_10 $$ String listOut = listKeys(ks, true)-->Line_38 $$ assertTrue(listOut.contains("[foo=bar]"))[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_22 $$ args2[5] = "="[ CD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_24 $$ assertEquals(1, rc)[ CD ]
Line_3 $$ int rc-->Line_16 $$ assertEquals(1, rc)[ FD ]
Line_27 $$ rc = ks.run(args2)-->Line_28 $$ assertEquals(0, rc)[ FD ]
Line_29 $$ listOut = listKeys(ks, true)-->Line_30 $$ assertTrue(listOut.contains("keyattr2"))[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_31 $$ assertTrue(listOut.contains("attributes: [a=b=c]"))[ CD ]
Line_4 $$ KeyShell ks = new KeyShell()-->Line_7 $$ rc = ks.run(args1)[ FD ]
Line_36 $$ listOut = listKeys(ks, true)-->Line_39 $$ assertTrue(listOut.contains("[glarch=baz]"))[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_30 $$ assertTrue(listOut.contains("keyattr2"))[ CD ]
Line_15 $$ rc = ks.run(args2)-->Line_24 $$ assertEquals(1, rc)[ FD ]
Line_29 $$ listOut = listKeys(ks, true)-->Line_37 $$ assertTrue(listOut.contains("keyattr3"))[ FD ]
Line_4 $$ KeyShell ks = new KeyShell()-->Line_10 $$ String listOut = listKeys(ks, true)[ FD ]
Line_34 $$ rc = ks.run(args3)-->Line_35 $$ assertEquals(0, rc)[ FD ]
Line_14 $$ final String[] args2 = -->Line_15 $$ rc = ks.run(args2)[ FD ]
Line_3 $$ int rc-->Line_27 $$ rc = ks.run(args2)[ FD ]
Line_4 $$ KeyShell ks = new KeyShell()-->Line_27 $$ rc = ks.run(args2)[ FD ]
Line_23 $$ rc = ks.run(args2)-->Line_43 $$ rc = ks.run(args4)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_46 $$ deleteKey(ks, "keyattr2")[ CD ]
Line_23 $$ rc = ks.run(args2)-->Line_24 $$ assertEquals(1, rc)[ FD ]
Line_7 $$ rc = ks.run(args1)-->Line_44 $$ assertEquals(1, rc)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_28 $$ assertEquals(0, rc)[ CD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_41 $$ outContent.reset()[ CD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_8 $$ assertEquals(0, rc)[ CD ]
Line_4 $$ KeyShell ks = new KeyShell()-->Line_5 $$ ks.setConf(new Configuration())[ FD ]
Line_7 $$ rc = ks.run(args1)-->Line_15 $$ rc = ks.run(args2)[ FD ]
Line_36 $$ listOut = listKeys(ks, true)-->Line_37 $$ assertTrue(listOut.contains("keyattr3"))[ FD ]
Line_7 $$ rc = ks.run(args1)-->Line_24 $$ assertEquals(1, rc)[ FD ]
Line_19 $$ rc = ks.run(args2)-->Line_20 $$ assertEquals(1, rc)[ FD ]
Line_4 $$ KeyShell ks = new KeyShell()-->Line_47 $$ deleteKey(ks, "keyattr3")[ FD ]
Line_4 $$ KeyShell ks = new KeyShell()-->Line_15 $$ rc = ks.run(args2)[ FD ]
Line_4 $$ KeyShell ks = new KeyShell()-->Line_29 $$ listOut = listKeys(ks, true)[ FD ]
Line_10 $$ String listOut = listKeys(ks, true)-->Line_39 $$ assertTrue(listOut.contains("[glarch=baz]"))[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_21 $$ outContent.reset()[ CD ]
Line_23 $$ rc = ks.run(args2)-->Line_44 $$ assertEquals(1, rc)[ FD ]
Line_15 $$ rc = ks.run(args2)-->Line_19 $$ rc = ks.run(args2)[ FD ]
Line_19 $$ rc = ks.run(args2)-->Line_23 $$ rc = ks.run(args2)[ FD ]
Line_3 $$ int rc-->Line_19 $$ rc = ks.run(args2)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_26 $$ args2[5] = "a=b=c"[ CD ]
Line_15 $$ rc = ks.run(args2)-->Line_28 $$ assertEquals(0, rc)[ FD ]
Line_15 $$ rc = ks.run(args2)-->Line_20 $$ assertEquals(1, rc)[ FD ]
Line_7 $$ rc = ks.run(args1)-->Line_34 $$ rc = ks.run(args3)[ FD ]
Line_3 $$ int rc-->Line_20 $$ assertEquals(1, rc)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_20 $$ assertEquals(1, rc)[ CD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_19 $$ rc = ks.run(args2)[ CD ]
Line_15 $$ rc = ks.run(args2)-->Line_27 $$ rc = ks.run(args2)[ FD ]
Line_43 $$ rc = ks.run(args4)-->Line_44 $$ assertEquals(1, rc)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_36 $$ listOut = listKeys(ks, true)[ CD ]
Line_15 $$ rc = ks.run(args2)-->Line_34 $$ rc = ks.run(args3)[ FD ]
Line_23 $$ rc = ks.run(args2)-->Line_27 $$ rc = ks.run(args2)[ FD ]
Line_27 $$ rc = ks.run(args2)-->Line_43 $$ rc = ks.run(args4)[ FD ]
Line_15 $$ rc = ks.run(args2)-->Line_44 $$ assertEquals(1, rc)[ FD ]
Line_27 $$ rc = ks.run(args2)-->Line_35 $$ assertEquals(0, rc)[ FD ]
Line_29 $$ listOut = listKeys(ks, true)-->Line_39 $$ assertTrue(listOut.contains("[glarch=baz]"))[ FD ]
Line_19 $$ rc = ks.run(args2)-->Line_34 $$ rc = ks.run(args3)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_13 $$ outContent.reset()[ CD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_44 $$ assertEquals(1, rc)[ CD ]
Line_14 $$ final String[] args2 = -->Line_27 $$ rc = ks.run(args2)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_35 $$ assertEquals(0, rc)[ CD ]
Line_23 $$ rc = ks.run(args2)-->Line_28 $$ assertEquals(0, rc)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_42 $$ final String[] args4 = [ CD ]
Line_4 $$ KeyShell ks = new KeyShell()-->Line_23 $$ rc = ks.run(args2)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_37 $$ assertTrue(listOut.contains("keyattr3"))[ CD ]
Line_14 $$ final String[] args2 = -->Line_19 $$ rc = ks.run(args2)[ FD ]
Line_15 $$ rc = ks.run(args2)-->Line_43 $$ rc = ks.run(args4)[ FD ]
Line_7 $$ rc = ks.run(args1)-->Line_28 $$ assertEquals(0, rc)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_16 $$ assertEquals(1, rc)[ CD ]
Line_23 $$ rc = ks.run(args2)-->Line_35 $$ assertEquals(0, rc)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_34 $$ rc = ks.run(args3)[ CD ]
Line_4 $$ KeyShell ks = new KeyShell()-->Line_46 $$ deleteKey(ks, "keyattr2")[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_25 $$ outContent.reset()[ CD ]
Line_10 $$ String listOut = listKeys(ks, true)-->Line_31 $$ assertTrue(listOut.contains("attributes: [a=b=c]"))[ FD ]
Line_3 $$ int rc-->Line_24 $$ assertEquals(1, rc)[ FD ]
Line_3 $$ int rc-->Line_7 $$ rc = ks.run(args1)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_10 $$ String listOut = listKeys(ks, true)[ CD ]
Line_19 $$ rc = ks.run(args2)-->Line_44 $$ assertEquals(1, rc)[ FD ]
Line_3 $$ int rc-->Line_8 $$ assertEquals(0, rc)[ FD ]
Line_33 $$ final String[] args3 = -->Line_34 $$ rc = ks.run(args3)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_32 $$ outContent.reset()[ CD ]
Line_42 $$ final String[] args4 = -->Line_43 $$ rc = ks.run(args4)[ FD ]
Line_34 $$ rc = ks.run(args3)-->Line_44 $$ assertEquals(1, rc)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_47 $$ deleteKey(ks, "keyattr3")[ CD ]
Line_27 $$ rc = ks.run(args2)-->Line_34 $$ rc = ks.run(args3)[ FD ]
Line_3 $$ int rc-->Line_23 $$ rc = ks.run(args2)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_33 $$ final String[] args3 = [ CD ]
Line_15 $$ rc = ks.run(args2)-->Line_23 $$ rc = ks.run(args2)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_39 $$ assertTrue(listOut.contains("[glarch=baz]"))[ CD ]
Line_4 $$ KeyShell ks = new KeyShell()-->Line_34 $$ rc = ks.run(args3)[ FD ]
Line_15 $$ rc = ks.run(args2)-->Line_16 $$ assertEquals(1, rc)[ FD ]
Line_29 $$ listOut = listKeys(ks, true)-->Line_31 $$ assertTrue(listOut.contains("attributes: [a=b=c]"))[ FD ]
Line_4 $$ KeyShell ks = new KeyShell()-->Line_43 $$ rc = ks.run(args4)[ FD ]
Line_19 $$ rc = ks.run(args2)-->Line_28 $$ assertEquals(0, rc)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_29 $$ listOut = listKeys(ks, true)[ CD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_7 $$ rc = ks.run(args1)[ CD ]
Line_36 $$ listOut = listKeys(ks, true)-->Line_38 $$ assertTrue(listOut.contains("[foo=bar]"))[ FD ]
Line_10 $$ String listOut = listKeys(ks, true)-->Line_30 $$ assertTrue(listOut.contains("keyattr2"))[ FD ]
Line_7 $$ rc = ks.run(args1)-->Line_35 $$ assertEquals(0, rc)[ FD ]
Line_10 $$ String listOut = listKeys(ks, true)-->Line_36 $$ listOut = listKeys(ks, true)[ FD ]
Line_10 $$ String listOut = listKeys(ks, true)-->Line_37 $$ assertTrue(listOut.contains("keyattr3"))[ FD ]
Line_7 $$ rc = ks.run(args1)-->Line_20 $$ assertEquals(1, rc)[ FD ]
Line_3 $$ int rc-->Line_43 $$ rc = ks.run(args4)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_6 $$ final String[] args1 = [ CD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_43 $$ rc = ks.run(args4)[ CD ]
Line_29 $$ listOut = listKeys(ks, true)-->Line_40 $$ assertTrue(listOut.contains("[abc=def]"))[ FD ]
Line_19 $$ rc = ks.run(args2)-->Line_43 $$ rc = ks.run(args4)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_12 $$ assertTrue(listOut.contains("attributes: [foo=bar]"))[ CD ]
Line_6 $$ final String[] args1 = -->Line_7 $$ rc = ks.run(args1)[ FD ]
Line_19 $$ rc = ks.run(args2)-->Line_24 $$ assertEquals(1, rc)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_38 $$ assertTrue(listOut.contains("[foo=bar]"))[ CD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_27 $$ rc = ks.run(args2)[ CD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_17 $$ outContent.reset()[ CD ]
Line_34 $$ rc = ks.run(args3)-->Line_43 $$ rc = ks.run(args4)[ FD ]
Line_29 $$ listOut = listKeys(ks, true)-->Line_38 $$ assertTrue(listOut.contains("[foo=bar]"))[ FD ]
Line_19 $$ rc = ks.run(args2)-->Line_27 $$ rc = ks.run(args2)[ FD ]
Line_19 $$ rc = ks.run(args2)-->Line_35 $$ assertEquals(0, rc)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_40 $$ assertTrue(listOut.contains("[abc=def]"))[ CD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_18 $$ args2[5] = "foo"[ CD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_23 $$ rc = ks.run(args2)[ CD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_15 $$ rc = ks.run(args2)[ CD ]
Line_7 $$ rc = ks.run(args1)-->Line_23 $$ rc = ks.run(args2)[ FD ]
Line_10 $$ String listOut = listKeys(ks, true)-->Line_29 $$ listOut = listKeys(ks, true)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_14 $$ final String[] args2 = [ CD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_45 $$ deleteKey(ks, "keyattr1")[ CD ]
Line_3 $$ int rc-->Line_34 $$ rc = ks.run(args3)[ FD ]
Line_4 $$ KeyShell ks = new KeyShell()-->Line_36 $$ listOut = listKeys(ks, true)[ FD ]
Line_4 $$ KeyShell ks = new KeyShell()-->Line_45 $$ deleteKey(ks, "keyattr1")[ FD ]
Line_7 $$ rc = ks.run(args1)-->Line_27 $$ rc = ks.run(args2)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_5 $$ ks.setConf(new Configuration())[ CD ]
Line_23 $$ rc = ks.run(args2)-->Line_34 $$ rc = ks.run(args3)[ FD ]
Line_27 $$ rc = ks.run(args2)-->Line_44 $$ assertEquals(1, rc)[ FD ]
Line_14 $$ final String[] args2 = -->Line_23 $$ rc = ks.run(args2)[ FD ]
Line_10 $$ String listOut = listKeys(ks, true)-->Line_40 $$ assertTrue(listOut.contains("[abc=def]"))[ FD ]
Line_3 $$ int rc-->Line_15 $$ rc = ks.run(args2)[ FD ]
Line_10 $$ String listOut = listKeys(ks, true)-->Line_12 $$ assertTrue(listOut.contains("attributes: [foo=bar]"))[ FD ]
Line_15 $$ rc = ks.run(args2)-->Line_35 $$ assertEquals(0, rc)[ FD ]
Line_3 $$ int rc-->Line_35 $$ assertEquals(0, rc)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_4 $$ KeyShell ks = new KeyShell()[ CD ]
Line_7 $$ rc = ks.run(args1)-->Line_43 $$ rc = ks.run(args4)[ FD ]
Line_10 $$ String listOut = listKeys(ks, true)-->Line_11 $$ assertTrue(listOut.contains("keyattr1"))[ FD ]
Line_29 $$ listOut = listKeys(ks, true)-->Line_36 $$ listOut = listKeys(ks, true)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_3 $$ int rc[ CD ]
Line_7 $$ rc = ks.run(args1)-->Line_8 $$ assertEquals(0, rc)[ FD ]
Line_2 $$ public void testAttributes() throws Exception -->Line_11 $$ assertTrue(listOut.contains("keyattr1"))[ CD ]
Line_3 $$ int rc-->Line_28 $$ assertEquals(0, rc)[ FD ]
Line_7 $$ rc = ks.run(args1)-->Line_16 $$ assertEquals(1, rc)[ FD ]
Line_36 $$ listOut = listKeys(ks, true)-->Line_40 $$ assertTrue(listOut.contains("[abc=def]"))[ FD ]
