Line_8 $$ StringBundler sb = new StringBundler(5)-->Line_13 $$ sb.append("Use SecureXMLBuilderUtil.newDocumentBuilderFactory")[ FD ]
Line_2 $$ protected void checkXMLSecurity(String fileName, String content, boolean isRunOutsidePortalExclusion) -->Line_3 $$ String[] xmlVulnerabitilies = new String[] [ CD ]
Line_9 $$ if (isRunOutsidePortalExclusion) -->Line_11 $$ sb.append("vulnerablity using ")[ CD ]
Line_9 $$ if (isRunOutsidePortalExclusion) -->Line_14 $$ sb.append(" instead of ")[ CD ]
Line_8 $$ StringBundler sb = new StringBundler(5)-->Line_16 $$ sb.append(xmlVulnerabitily)[ FD ]
Line_8 $$ StringBundler sb = new StringBundler(5)-->Line_17 $$ sb.append(": ")[ FD ]
Line_2 $$ protected void checkXMLSecurity(String fileName, String content, boolean isRunOutsidePortalExclusion) -->Line_18 $$ sb.append(fileName)[ FD ]
Line_2 $$ protected void checkXMLSecurity(String fileName, String content, boolean isRunOutsidePortalExclusion) -->Line_5 $$ if (!content.contains(xmlVulnerabitily)) [ FD ]
Line_8 $$ StringBundler sb = new StringBundler(5)-->Line_14 $$ sb.append(" instead of ")[ FD ]
Line_2 $$ protected void checkXMLSecurity(String fileName, String content, boolean isRunOutsidePortalExclusion) -->Line_19 $$ processErrorMessage(fileName, sb.toString())[ FD ]
Line_8 $$ StringBundler sb = new StringBundler(5)-->Line_11 $$ sb.append("vulnerablity using ")[ FD ]
Line_8 $$ StringBundler sb = new StringBundler(5)-->Line_18 $$ sb.append(fileName)[ FD ]
Line_9 $$ if (isRunOutsidePortalExclusion) -->Line_10 $$ sb.append("Possible XXE or Quadratic Blowup security ")[ CD ]
Line_8 $$ StringBundler sb = new StringBundler(5)-->Line_10 $$ sb.append("Possible XXE or Quadratic Blowup security ")[ FD ]
Line_4 $$ for (String xmlVulnerabitily : xmlVulnerabitilies) -->Line_16 $$ sb.append(xmlVulnerabitily)[ FD ]
Line_4 $$ for (String xmlVulnerabitily : xmlVulnerabitilies) -->Line_5 $$ if (!content.contains(xmlVulnerabitily)) [ FD ]
Line_9 $$ if (isRunOutsidePortalExclusion) -->Line_13 $$ sb.append("Use SecureXMLBuilderUtil.newDocumentBuilderFactory")[ CD ]
Line_8 $$ StringBundler sb = new StringBundler(5)-->Line_19 $$ processErrorMessage(fileName, sb.toString())[ FD ]
