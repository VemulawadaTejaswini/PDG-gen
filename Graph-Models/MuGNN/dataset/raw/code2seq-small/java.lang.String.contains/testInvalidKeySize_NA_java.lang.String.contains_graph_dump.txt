Line_4 $$ int rc = 0-->Line_8 $$ assertEquals(1, rc)[ FD ]
Line_2 $$ public void testInvalidKeySize() throws Exception -->Line_8 $$ assertEquals(1, rc)[ CD ]
Line_2 $$ public void testInvalidKeySize() throws Exception -->Line_4 $$ int rc = 0[ CD ]
Line_2 $$ public void testInvalidKeySize() throws Exception -->Line_3 $$ final String[] args1 = [ CD ]
Line_5 $$ KeyShell ks = new KeyShell()-->Line_6 $$ ks.setConf(new Configuration())[ FD ]
Line_7 $$ rc = ks.run(args1)-->Line_8 $$ assertEquals(1, rc)[ FD ]
Line_2 $$ public void testInvalidKeySize() throws Exception -->Line_9 $$ assertTrue(outContent.toString().contains("key1 has not been created."))[ CD ]
Line_5 $$ KeyShell ks = new KeyShell()-->Line_7 $$ rc = ks.run(args1)[ FD ]
Line_2 $$ public void testInvalidKeySize() throws Exception -->Line_5 $$ KeyShell ks = new KeyShell()[ CD ]
Line_2 $$ public void testInvalidKeySize() throws Exception -->Line_7 $$ rc = ks.run(args1)[ CD ]
Line_2 $$ public void testInvalidKeySize() throws Exception -->Line_6 $$ ks.setConf(new Configuration())[ CD ]
Line_3 $$ final String[] args1 = -->Line_7 $$ rc = ks.run(args1)[ FD ]
Line_4 $$ int rc = 0-->Line_7 $$ rc = ks.run(args1)[ FD ]
