Line_2 $$ public void testJarParameter() throws CantRunException -->Line_6 $$ String commandLineString = CommandLineBuilder.createFromJavaParameters(javaParameters).getCommandLineString()[ CD ]
Line_2 $$ public void testJarParameter() throws CantRunException -->Line_3 $$ JavaParameters javaParameters = new JavaParameters()[ CD ]
Line_2 $$ public void testJarParameter() throws CantRunException -->Line_5 $$ javaParameters.setJarPath("my-jar-file.jar")[ CD ]
Line_2 $$ public void testJarParameter() throws CantRunException -->Line_4 $$ javaParameters.setJdk(getProjectJDK())[ CD ]
Line_3 $$ JavaParameters javaParameters = new JavaParameters()-->Line_6 $$ String commandLineString = CommandLineBuilder.createFromJavaParameters(javaParameters).getCommandLineString()[ FD ]
Line_3 $$ JavaParameters javaParameters = new JavaParameters()-->Line_5 $$ javaParameters.setJarPath("my-jar-file.jar")[ FD ]
Line_2 $$ public void testJarParameter() throws CantRunException -->Line_7 $$ assertTrue(commandLineString, commandLineString.contains("-jar my-jar-file.jar"))[ CD ]
Line_6 $$ String commandLineString = CommandLineBuilder.createFromJavaParameters(javaParameters).getCommandLineString()-->Line_7 $$ assertTrue(commandLineString, commandLineString.contains("-jar my-jar-file.jar"))[ FD ]
Line_3 $$ JavaParameters javaParameters = new JavaParameters()-->Line_4 $$ javaParameters.setJdk(getProjectJDK())[ FD ]
