Line_5 $$ MapperService mapperService = createIndex("test", Settings.settingsBuilder().build()).mapperService()-->Line_10 $$ mapperService.merge("type2", new CompressedXContent(update.string()), false, false)[ FD ]
Line_5 $$ MapperService mapperService = createIndex("test", Settings.settingsBuilder().build()).mapperService()-->Line_7 $$ mapperService.merge("type2", new CompressedXContent(mapping2.string()), false, false)[ FD ]
Line_2 $$ public void testConflictNewTypeUpdate() throws Exception -->Line_21 $$ assertTrue(mapperService.documentMapper("type1").mapping().root().getMapper("foo") instanceof LongFieldMapper)[ CD ]
Line_2 $$ public void testConflictNewTypeUpdate() throws Exception -->Line_7 $$ mapperService.merge("type2", new CompressedXContent(mapping2.string()), false, false)[ CD ]
Line_2 $$ public void testConflictNewTypeUpdate() throws Exception -->Line_6 $$ mapperService.merge("type1", new CompressedXContent(mapping1.string()), false, false)[ CD ]
Line_2 $$ public void testConflictNewTypeUpdate() throws Exception -->Line_3 $$ XContentBuilder mapping1 = XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("foo").field("type", "long").endObject().endObject().endObject().endObject()[ CD ]
Line_4 $$ XContentBuilder mapping2 = XContentFactory.jsonBuilder().startObject().startObject("type2").endObject().endObject()-->Line_7 $$ mapperService.merge("type2", new CompressedXContent(mapping2.string()), false, false)[ FD ]
Line_5 $$ MapperService mapperService = createIndex("test", Settings.settingsBuilder().build()).mapperService()-->Line_21 $$ assertTrue(mapperService.documentMapper("type1").mapping().root().getMapper("foo") instanceof LongFieldMapper)[ FD ]
Line_5 $$ MapperService mapperService = createIndex("test", Settings.settingsBuilder().build()).mapperService()-->Line_23 $$ assertNull(mapperService.documentMapper("type2").mapping().root().getMapper("foo"))[ FD ]
Line_2 $$ public void testConflictNewTypeUpdate() throws Exception -->Line_23 $$ assertNull(mapperService.documentMapper("type2").mapping().root().getMapper("foo"))[ CD ]
Line_5 $$ MapperService mapperService = createIndex("test", Settings.settingsBuilder().build()).mapperService()-->Line_22 $$ assertNotNull(mapperService.documentMapper("type2"))[ FD ]
Line_2 $$ public void testConflictNewTypeUpdate() throws Exception -->Line_5 $$ MapperService mapperService = createIndex("test", Settings.settingsBuilder().build()).mapperService()[ CD ]
Line_5 $$ MapperService mapperService = createIndex("test", Settings.settingsBuilder().build()).mapperService()-->Line_6 $$ mapperService.merge("type1", new CompressedXContent(mapping1.string()), false, false)[ FD ]
Line_2 $$ public void testConflictNewTypeUpdate() throws Exception -->Line_8 $$ XContentBuilder update = XContentFactory.jsonBuilder().startObject().startObject("type2").startObject("properties").startObject("foo").field("type", "double").endObject().endObject().endObject().endObject()[ CD ]
Line_2 $$ public void testConflictNewTypeUpdate() throws Exception -->Line_4 $$ XContentBuilder mapping2 = XContentFactory.jsonBuilder().startObject().startObject("type2").endObject().endObject()[ CD ]
Line_2 $$ public void testConflictNewTypeUpdate() throws Exception -->Line_22 $$ assertNotNull(mapperService.documentMapper("type2"))[ CD ]
Line_3 $$ XContentBuilder mapping1 = XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("foo").field("type", "long").endObject().endObject().endObject().endObject()-->Line_6 $$ mapperService.merge("type1", new CompressedXContent(mapping1.string()), false, false)[ FD ]
Line_8 $$ XContentBuilder update = XContentFactory.jsonBuilder().startObject().startObject("type2").startObject("properties").startObject("foo").field("type", "double").endObject().endObject().endObject().endObject()-->Line_10 $$ mapperService.merge("type2", new CompressedXContent(update.string()), false, false)[ FD ]
Line_8 $$ XContentBuilder update = XContentFactory.jsonBuilder().startObject().startObject("type2").startObject("properties").startObject("foo").field("type", "double").endObject().endObject().endObject().endObject()-->Line_16 $$ mapperService.merge("type2", new CompressedXContent(update.string()), false, false)[ FD ]
Line_5 $$ MapperService mapperService = createIndex("test", Settings.settingsBuilder().build()).mapperService()-->Line_16 $$ mapperService.merge("type2", new CompressedXContent(update.string()), false, false)[ FD ]
