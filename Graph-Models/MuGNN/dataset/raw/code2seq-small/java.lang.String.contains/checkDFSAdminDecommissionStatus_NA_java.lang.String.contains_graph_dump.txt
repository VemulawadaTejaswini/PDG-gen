Line_24 $$ List<DatanodeInfo> decomming = new ArrayList<DatanodeInfo>(Arrays.asList(dfs.getDataNodeStats(DatanodeReportType.DECOMMISSIONING)))-->Line_27 $$ assertTrue("Did not find expected decomming DN " + id, decomming.contains(id))[ FD ]
Line_11 $$ int count = 0-->Line_23 $$ assertEquals("Unexpected number of decomming DNs", expectedDecomm.size(), count)[ FD ]
Line_2 $$ private void checkDFSAdminDecommissionStatus(List<DatanodeDescriptor> expectedDecomm, DistributedFileSystem dfs, DFSAdmin admin) throws IOException -->Line_3 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_15 $$ num = Integer.parseInt((String) temp.subSequence(1, temp.length() - 2))-->Line_22 $$ assertEquals("Unexpected number of decomming DNs", expectedDecomm.size(), num.intValue())[ FD ]
Line_4 $$ PrintStream ps = new PrintStream(baos)-->Line_6 $$ System.setOut(ps)[ FD ]
Line_2 $$ private void checkDFSAdminDecommissionStatus(List<DatanodeDescriptor> expectedDecomm, DistributedFileSystem dfs, DFSAdmin admin) throws IOException -->Line_25 $$ assertEquals("Unexpected number of decomming DNs", expectedDecomm.size(), decomming.size())[ FD ]
Line_5 $$ PrintStream oldOut = System.out-->Line_30 $$ System.setOut(oldOut)[ FD ]
Line_26 $$ for (DatanodeID id : expectedDecomm) -->Line_27 $$ assertTrue("Did not find expected decomming DN " + id, decomming.contains(id))[ FD ]
Line_3 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_9 $$ String[] lines = baos.toString().split("\n")[ FD ]
Line_2 $$ private void checkDFSAdminDecommissionStatus(List<DatanodeDescriptor> expectedDecomm, DistributedFileSystem dfs, DFSAdmin admin) throws IOException -->Line_4 $$ PrintStream ps = new PrintStream(baos)[ CD ]
Line_13 $$ if (line.startsWith("Decommissioning datanodes")) -->Line_14 $$ String temp = line.split(" ")[2][ CD ]
Line_13 $$ if (line.startsWith("Decommissioning datanodes")) -->Line_15 $$ num = Integer.parseInt((String) temp.subSequence(1, temp.length() - 2))[ CD ]
Line_2 $$ private void checkDFSAdminDecommissionStatus(List<DatanodeDescriptor> expectedDecomm, DistributedFileSystem dfs, DFSAdmin admin) throws IOException -->Line_8 $$ admin.report(new String[] [ FD ]
Line_2 $$ private void checkDFSAdminDecommissionStatus(List<DatanodeDescriptor> expectedDecomm, DistributedFileSystem dfs, DFSAdmin admin) throws IOException -->Line_23 $$ assertEquals("Unexpected number of decomming DNs", expectedDecomm.size(), count)[ FD ]
Line_17 $$ if (line.contains("Decommission in progress")) -->Line_18 $$ count++[ CD ]
Line_12 $$ for (String line : lines) -->Line_14 $$ String temp = line.split(" ")[2][ FD ]
Line_2 $$ private void checkDFSAdminDecommissionStatus(List<DatanodeDescriptor> expectedDecomm, DistributedFileSystem dfs, DFSAdmin admin) throws IOException -->Line_5 $$ PrintStream oldOut = System.out[ CD ]
Line_10 $$ Integer num = null-->Line_22 $$ assertEquals("Unexpected number of decomming DNs", expectedDecomm.size(), num.intValue())[ FD ]
Line_2 $$ private void checkDFSAdminDecommissionStatus(List<DatanodeDescriptor> expectedDecomm, DistributedFileSystem dfs, DFSAdmin admin) throws IOException -->Line_22 $$ assertEquals("Unexpected number of decomming DNs", expectedDecomm.size(), num.intValue())[ FD ]
Line_12 $$ for (String line : lines) -->Line_17 $$ if (line.contains("Decommission in progress")) [ FD ]
Line_10 $$ Integer num = null-->Line_15 $$ num = Integer.parseInt((String) temp.subSequence(1, temp.length() - 2))[ FD ]
Line_11 $$ int count = 0-->Line_18 $$ count++[ FD ]
Line_2 $$ private void checkDFSAdminDecommissionStatus(List<DatanodeDescriptor> expectedDecomm, DistributedFileSystem dfs, DFSAdmin admin) throws IOException -->Line_24 $$ List<DatanodeInfo> decomming = new ArrayList<DatanodeInfo>(Arrays.asList(dfs.getDataNodeStats(DatanodeReportType.DECOMMISSIONING)))[ FD ]
Line_14 $$ String temp = line.split(" ")[2]-->Line_15 $$ num = Integer.parseInt((String) temp.subSequence(1, temp.length() - 2))[ FD ]
Line_24 $$ List<DatanodeInfo> decomming = new ArrayList<DatanodeInfo>(Arrays.asList(dfs.getDataNodeStats(DatanodeReportType.DECOMMISSIONING)))-->Line_25 $$ assertEquals("Unexpected number of decomming DNs", expectedDecomm.size(), decomming.size())[ FD ]
Line_2 $$ private void checkDFSAdminDecommissionStatus(List<DatanodeDescriptor> expectedDecomm, DistributedFileSystem dfs, DFSAdmin admin) throws IOException -->Line_6 $$ System.setOut(ps)[ CD ]
Line_12 $$ for (String line : lines) -->Line_13 $$ if (line.startsWith("Decommissioning datanodes")) [ FD ]
