Line_7 $$ if (!whiteSpaceText.contains("\n")) -->Line_9 $$ while (next instanceof PsiWhiteSpace && whiteSpaceText.contains("\\")) [ CD ]
Line_2 $$ private static PsiElement getNextElement(@NotNull final PsiElement expression) -->Line_15 $$ RemoveUnnecessaryBackslashQuickFix.removeBackSlash(next)[ CD ]
Line_4 $$ PsiElement next = null-->Line_15 $$ RemoveUnnecessaryBackslashQuickFix.removeBackSlash(next)[ FD ]
Line_10 $$ next = next.getNextSibling()-->Line_14 $$ next = whiteSpace[ FD ]
Line_3 $$ final PsiElement whiteSpace = expression.getContainingFile().findElementAt(expression.getTextOffset() + expression.getTextLength())-->Line_6 $$ final String whiteSpaceText = whiteSpace.getText()[ FD ]
Line_8 $$ next = whiteSpace.getNextSibling()-->Line_14 $$ next = whiteSpace[ FD ]
Line_6 $$ final String whiteSpaceText = whiteSpace.getText()-->Line_9 $$ while (next instanceof PsiWhiteSpace && whiteSpaceText.contains("\\")) [ FD ]
Line_9 $$ while (next instanceof PsiWhiteSpace && whiteSpaceText.contains("\\")) -->Line_10 $$ next = next.getNextSibling()[ CD ]
Line_2 $$ private static PsiElement getNextElement(@NotNull final PsiElement expression) -->Line_16 $$ if (whiteSpace != null)[ CD ]
Line_2 $$ private static PsiElement getNextElement(@NotNull final PsiElement expression) -->Line_4 $$ PsiElement next = null[ CD ]
Line_5 $$ if (whiteSpace instanceof PsiWhiteSpace) -->Line_6 $$ final String whiteSpaceText = whiteSpace.getText()[ CD ]
Line_7 $$ if (!whiteSpaceText.contains("\n")) -->Line_8 $$ next = whiteSpace.getNextSibling()[ CD ]
Line_3 $$ final PsiElement whiteSpace = expression.getContainingFile().findElementAt(expression.getTextOffset() + expression.getTextLength())-->Line_5 $$ if (whiteSpace instanceof PsiWhiteSpace) [ FD ]
Line_4 $$ PsiElement next = null-->Line_8 $$ next = whiteSpace.getNextSibling()[ FD ]
Line_2 $$ private static PsiElement getNextElement(@NotNull final PsiElement expression) -->Line_3 $$ final PsiElement whiteSpace = expression.getContainingFile().findElementAt(expression.getTextOffset() + expression.getTextLength())[ CD ]
Line_14 $$ next = whiteSpace-->Line_15 $$ RemoveUnnecessaryBackslashQuickFix.removeBackSlash(next)[ FD ]
Line_2 $$ private static PsiElement getNextElement(@NotNull final PsiElement expression) -->Line_5 $$ if (whiteSpace instanceof PsiWhiteSpace) [ CD ]
Line_4 $$ PsiElement next = null-->Line_14 $$ next = whiteSpace[ FD ]
Line_16 $$ if (whiteSpace != null)-->Line_17 $$ whiteSpace.delete()[ CD ]
Line_8 $$ next = whiteSpace.getNextSibling()-->Line_10 $$ next = next.getNextSibling()[ FD ]
Line_3 $$ final PsiElement whiteSpace = expression.getContainingFile().findElementAt(expression.getTextOffset() + expression.getTextLength())-->Line_16 $$ if (whiteSpace != null)[ FD ]
Line_5 $$ if (whiteSpace instanceof PsiWhiteSpace) -->Line_14 $$ next = whiteSpace[ CD ]
Line_2 $$ private static PsiElement getNextElement(@NotNull final PsiElement expression) -->Line_18 $$ return next[ CD ]
Line_8 $$ next = whiteSpace.getNextSibling()-->Line_15 $$ RemoveUnnecessaryBackslashQuickFix.removeBackSlash(next)[ FD ]
Line_6 $$ final String whiteSpaceText = whiteSpace.getText()-->Line_7 $$ if (!whiteSpaceText.contains("\n")) [ FD ]
Line_2 $$ private static PsiElement getNextElement(@NotNull final PsiElement expression) -->Line_3 $$ final PsiElement whiteSpace = expression.getContainingFile().findElementAt(expression.getTextOffset() + expression.getTextLength())[ FD ]
Line_4 $$ PsiElement next = null-->Line_10 $$ next = next.getNextSibling()[ FD ]
Line_10 $$ next = next.getNextSibling()-->Line_15 $$ RemoveUnnecessaryBackslashQuickFix.removeBackSlash(next)[ FD ]
Line_3 $$ final PsiElement whiteSpace = expression.getContainingFile().findElementAt(expression.getTextOffset() + expression.getTextLength())-->Line_14 $$ next = whiteSpace[ FD ]
Line_3 $$ final PsiElement whiteSpace = expression.getContainingFile().findElementAt(expression.getTextOffset() + expression.getTextLength())-->Line_8 $$ next = whiteSpace.getNextSibling()[ FD ]
Line_5 $$ if (whiteSpace instanceof PsiWhiteSpace) -->Line_7 $$ if (!whiteSpaceText.contains("\n")) [ CD ]
Line_3 $$ final PsiElement whiteSpace = expression.getContainingFile().findElementAt(expression.getTextOffset() + expression.getTextLength())-->Line_17 $$ whiteSpace.delete()[ FD ]
