Line_2 $$ public void testUpgradeFromCorruptRel22Image() throws IOException -->Line_6 $$ FSImageTestUtil.corruptVersionFile(new File(baseDir, "name2/current/VERSION"), "imageMD5Digest", "22222222222222222222222222222222")[ CD ]
Line_8 $$ final Logger logger = Logger.getRootLogger()-->Line_9 $$ logger.addAppender(appender)[ FD ]
Line_2 $$ public void testUpgradeFromCorruptRel22Image() throws IOException -->Line_4 $$ File baseDir = new File(MiniDFSCluster.getBaseDirectory())[ CD ]
Line_2 $$ public void testUpgradeFromCorruptRel22Image() throws IOException -->Line_3 $$ unpackStorage(HADOOP22_IMAGE, HADOOP_DFS_DIR_TXT)[ CD ]
Line_14 $$ String msg = StringUtils.stringifyException(ioe)-->Line_15 $$ if (!msg.contains("Failed to load an FSImage file")) [ FD ]
Line_7 $$ final LogVerificationAppender appender = new LogVerificationAppender()-->Line_18 $$ int md5failures = appender.countExceptionsWithMessage(" is corrupt with MD5 checksum of ")[ FD ]
Line_18 $$ int md5failures = appender.countExceptionsWithMessage(" is corrupt with MD5 checksum of ")-->Line_19 $$ assertEquals("Upgrade did not fail with bad MD5", 1, md5failures)[ FD ]
Line_2 $$ public void testUpgradeFromCorruptRel22Image() throws IOException -->Line_7 $$ final LogVerificationAppender appender = new LogVerificationAppender()[ CD ]
Line_2 $$ public void testUpgradeFromCorruptRel22Image() throws IOException -->Line_5 $$ FSImageTestUtil.corruptVersionFile(new File(baseDir, "name1/current/VERSION"), "imageMD5Digest", "22222222222222222222222222222222")[ CD ]
Line_2 $$ public void testUpgradeFromCorruptRel22Image() throws IOException -->Line_8 $$ final Logger logger = Logger.getRootLogger()[ CD ]
Line_2 $$ public void testUpgradeFromCorruptRel22Image() throws IOException -->Line_9 $$ logger.addAppender(appender)[ CD ]
Line_7 $$ final LogVerificationAppender appender = new LogVerificationAppender()-->Line_9 $$ logger.addAppender(appender)[ FD ]
