Line_2 $$ private int[] getRange(String field, int min, int max) -->Line_9 $$ if (!field.contains("-")) [ CD ]
Line_2 $$ private int[] getRange(String field, int min, int max) -->Line_6 $$ result[1] = max - 1[ FD ]
Line_2 $$ private int[] getRange(String field, int min, int max) -->Line_25 $$ return result[ CD ]
Line_2 $$ private int[] getRange(String field, int min, int max) -->Line_19 $$ if (result[0] >= max || result[1] >= max) [ CD ]
Line_2 $$ private int[] getRange(String field, int min, int max) -->Line_10 $$ result[0] = result[1] = Integer.valueOf(field)[ FD ]
Line_4 $$ if (field.contains("*")) -->Line_5 $$ result[0] = min[ CD ]
Line_9 $$ if (!field.contains("-")) -->Line_13 $$ if (split.length > 2) [ CD ]
Line_4 $$ if (field.contains("*")) -->Line_7 $$ return result[ CD ]
Line_2 $$ private int[] getRange(String field, int min, int max) -->Line_4 $$ if (field.contains("*")) [ FD ]
Line_2 $$ private int[] getRange(String field, int min, int max) -->Line_12 $$ String[] split = StringUtils.delimitedListToStringArray(field, "-")[ FD ]
Line_2 $$ private int[] getRange(String field, int min, int max) -->Line_22 $$ if (result[0] < min || result[1] < min) [ CD ]
Line_2 $$ private int[] getRange(String field, int min, int max) -->Line_9 $$ if (!field.contains("-")) [ FD ]
Line_9 $$ if (!field.contains("-")) -->Line_17 $$ result[1] = Integer.valueOf(split[1])[ CD ]
Line_9 $$ if (!field.contains("-")) -->Line_12 $$ String[] split = StringUtils.delimitedListToStringArray(field, "-")[ CD ]
Line_2 $$ private int[] getRange(String field, int min, int max) -->Line_4 $$ if (field.contains("*")) [ CD ]
Line_9 $$ if (!field.contains("-")) -->Line_10 $$ result[0] = result[1] = Integer.valueOf(field)[ CD ]
Line_4 $$ if (field.contains("*")) -->Line_6 $$ result[1] = max - 1[ CD ]
Line_2 $$ private int[] getRange(String field, int min, int max) -->Line_5 $$ result[0] = min[ FD ]
Line_2 $$ private int[] getRange(String field, int min, int max) -->Line_3 $$ int[] result = new int[2][ CD ]
Line_9 $$ if (!field.contains("-")) -->Line_16 $$ result[0] = Integer.valueOf(split[0])[ CD ]
