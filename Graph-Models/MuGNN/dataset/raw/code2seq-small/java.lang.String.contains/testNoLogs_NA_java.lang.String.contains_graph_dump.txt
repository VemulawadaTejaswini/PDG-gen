Line_10 $$ AggregatedLogsBlockForTest aggregatedBlock = getAggregatedLogsBlockForTest(configuration, "admin", "container_0_0001_01_000001")-->Line_15 $$ aggregatedBlock.render(block)[ FD ]
Line_14 $$ HtmlBlock.Block block = new BlockForTest(html, printWriter, 10, false)-->Line_16 $$ block.getWriter().flush()[ FD ]
Line_2 $$ public void testNoLogs() throws Exception -->Line_5 $$ File f = new File("target/logs/logs/application_0_0001/container_0_0001_01_000001")[ CD ]
Line_2 $$ public void testNoLogs() throws Exception -->Line_12 $$ PrintWriter printWriter = new PrintWriter(data)[ CD ]
Line_2 $$ public void testNoLogs() throws Exception -->Line_14 $$ HtmlBlock.Block block = new BlockForTest(html, printWriter, 10, false)[ CD ]
Line_2 $$ public void testNoLogs() throws Exception -->Line_16 $$ block.getWriter().flush()[ CD ]
Line_2 $$ public void testNoLogs() throws Exception -->Line_13 $$ HtmlBlock html = new HtmlBlockForTest()[ CD ]
Line_4 $$ Configuration configuration = getConfiguration()-->Line_10 $$ AggregatedLogsBlockForTest aggregatedBlock = getAggregatedLogsBlockForTest(configuration, "admin", "container_0_0001_01_000001")[ FD ]
Line_5 $$ File f = new File("target/logs/logs/application_0_0001/container_0_0001_01_000001")-->Line_6 $$ if (!f.exists()) [ FD ]
Line_2 $$ public void testNoLogs() throws Exception -->Line_3 $$ FileUtil.fullyDelete(new File("target/logs"))[ CD ]
Line_2 $$ public void testNoLogs() throws Exception -->Line_18 $$ assertTrue(out.contains("No logs available for container container_0_0001_01_000001"))[ CD ]
Line_2 $$ public void testNoLogs() throws Exception -->Line_11 $$ ByteArrayOutputStream data = new ByteArrayOutputStream()[ CD ]
Line_4 $$ Configuration configuration = getConfiguration()-->Line_9 $$ writeLog(configuration, "admin")[ FD ]
Line_2 $$ public void testNoLogs() throws Exception -->Line_9 $$ writeLog(configuration, "admin")[ CD ]
Line_17 $$ String out = data.toString()-->Line_18 $$ assertTrue(out.contains("No logs available for container container_0_0001_01_000001"))[ FD ]
Line_5 $$ File f = new File("target/logs/logs/application_0_0001/container_0_0001_01_000001")-->Line_7 $$ assertTrue(f.mkdirs())[ FD ]
Line_6 $$ if (!f.exists()) -->Line_7 $$ assertTrue(f.mkdirs())[ CD ]
Line_2 $$ public void testNoLogs() throws Exception -->Line_15 $$ aggregatedBlock.render(block)[ CD ]
Line_11 $$ ByteArrayOutputStream data = new ByteArrayOutputStream()-->Line_17 $$ String out = data.toString()[ FD ]
Line_2 $$ public void testNoLogs() throws Exception -->Line_4 $$ Configuration configuration = getConfiguration()[ CD ]
Line_2 $$ public void testNoLogs() throws Exception -->Line_10 $$ AggregatedLogsBlockForTest aggregatedBlock = getAggregatedLogsBlockForTest(configuration, "admin", "container_0_0001_01_000001")[ CD ]
Line_2 $$ public void testNoLogs() throws Exception -->Line_6 $$ if (!f.exists()) [ CD ]
Line_2 $$ public void testNoLogs() throws Exception -->Line_17 $$ String out = data.toString()[ CD ]
Line_14 $$ HtmlBlock.Block block = new BlockForTest(html, printWriter, 10, false)-->Line_15 $$ aggregatedBlock.render(block)[ FD ]
