Line_2 $$ public XMLInputSource resolveEntity(XMLResourceIdentifier xmlResourceIdentifier) throws XNIException, IOException -->Line_14 $$ PsiFile psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId)[ FD ]
Line_22 $$ if (publicId != null && publicId.contains(":/")) -->Line_27 $$ final XMLInputSource source = new XMLInputSource(xmlResourceIdentifier)[ CD ]
Line_36 $$ VirtualFile virtualFile = psiFile.getVirtualFile()-->Line_38 $$ final String url = VfsUtilCore.fixIDEAUrl(virtualFile.getUrl())[ FD ]
Line_21 $$ if (psiFile == null) -->Line_22 $$ if (publicId != null && publicId.contains(":/")) [ CD ]
Line_3 $$ String publicId = xmlResourceIdentifier.getLiteralSystemId() != null ? xmlResourceIdentifier.getLiteralSystemId() : xmlResourceIdentifier.getNamespace()-->Line_24 $$ myErrorReporter.processError(new SAXParseException(XmlErrorMessages.message("xml.validate.external.resource.is.not.registered", publicId), publicId, null, 0, 0), ValidateXmlActionHandler.ProblemType.ERROR)[ FD ]
Line_22 $$ if (publicId != null && publicId.contains(":/")) -->Line_28 $$ source.setPublicId(publicId)[ CD ]
Line_2 $$ public XMLInputSource resolveEntity(XMLResourceIdentifier xmlResourceIdentifier) throws XNIException, IOException -->Line_14 $$ PsiFile psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId)[ CD ]
Line_2 $$ public XMLInputSource resolveEntity(XMLResourceIdentifier xmlResourceIdentifier) throws XNIException, IOException -->Line_3 $$ String publicId = xmlResourceIdentifier.getLiteralSystemId() != null ? xmlResourceIdentifier.getLiteralSystemId() : xmlResourceIdentifier.getNamespace()[ FD ]
Line_19 $$ psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId = xmlResourceIdentifier.getNamespace())-->Line_22 $$ if (publicId != null && publicId.contains(":/")) [ FD ]
Line_2 $$ public XMLInputSource resolveEntity(XMLResourceIdentifier xmlResourceIdentifier) throws XNIException, IOException -->Line_3 $$ String publicId = xmlResourceIdentifier.getLiteralSystemId() != null ? xmlResourceIdentifier.getLiteralSystemId() : xmlResourceIdentifier.getNamespace()[ CD ]
Line_2 $$ public XMLInputSource resolveEntity(XMLResourceIdentifier xmlResourceIdentifier) throws XNIException, IOException -->Line_18 $$ if (psiFile == null && xmlResourceIdentifier.getLiteralSystemId() != null && xmlResourceIdentifier.getNamespace() != null) [ CD ]
Line_7 $$ String publicIdPath = new URI(publicId).getPath()-->Line_8 $$ if (publicIdPath.startsWith(userDir)) [ FD ]
Line_19 $$ psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId = xmlResourceIdentifier.getNamespace())-->Line_28 $$ source.setPublicId(publicId)[ FD ]
Line_2 $$ public XMLInputSource resolveEntity(XMLResourceIdentifier xmlResourceIdentifier) throws XNIException, IOException -->Line_19 $$ psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId = xmlResourceIdentifier.getNamespace())[ FD ]
Line_27 $$ final XMLInputSource source = new XMLInputSource(xmlResourceIdentifier)-->Line_29 $$ source.setCharacterStream(new StringReader(""))[ FD ]
Line_14 $$ PsiFile psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId)-->Line_36 $$ VirtualFile virtualFile = psiFile.getVirtualFile()[ FD ]
Line_37 $$ if (virtualFile != null) -->Line_38 $$ final String url = VfsUtilCore.fixIDEAUrl(virtualFile.getUrl())[ CD ]
Line_27 $$ final XMLInputSource source = new XMLInputSource(xmlResourceIdentifier)-->Line_43 $$ source.setPublicId(publicId)[ FD ]
Line_14 $$ PsiFile psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId)-->Line_44 $$ source.setCharacterStream(new StringReader(psiFile.getText()))[ FD ]
Line_7 $$ String publicIdPath = new URI(publicId).getPath()-->Line_9 $$ publicId = publicIdPath.substring(publicIdPath.indexOf(userDir) + userDir.length())[ FD ]
Line_2 $$ public XMLInputSource resolveEntity(XMLResourceIdentifier xmlResourceIdentifier) throws XNIException, IOException -->Line_18 $$ if (psiFile == null && xmlResourceIdentifier.getLiteralSystemId() != null && xmlResourceIdentifier.getNamespace() != null) [ FD ]
Line_22 $$ if (publicId != null && publicId.contains(":/")) -->Line_30 $$ return source[ CD ]
Line_6 $$ String userDir = new File(System.getProperty("user.dir")).toURI().getPath()-->Line_9 $$ publicId = publicIdPath.substring(publicIdPath.indexOf(userDir) + userDir.length())[ FD ]
Line_2 $$ public XMLInputSource resolveEntity(XMLResourceIdentifier xmlResourceIdentifier) throws XNIException, IOException -->Line_4 $$ if (publicId != null) [ CD ]
Line_37 $$ if (virtualFile != null) -->Line_39 $$ source.setBaseSystemId(url)[ CD ]
Line_2 $$ public XMLInputSource resolveEntity(XMLResourceIdentifier xmlResourceIdentifier) throws XNIException, IOException -->Line_43 $$ source.setPublicId(publicId)[ CD ]
Line_16 $$ psiFile = ExternalResourceManager.getInstance().getResourceLocation(xmlResourceIdentifier.getBaseSystemId(), myFile, null)-->Line_19 $$ psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId = xmlResourceIdentifier.getNamespace())[ FD ]
Line_3 $$ String publicId = xmlResourceIdentifier.getLiteralSystemId() != null ? xmlResourceIdentifier.getLiteralSystemId() : xmlResourceIdentifier.getNamespace()-->Line_9 $$ publicId = publicIdPath.substring(publicIdPath.indexOf(userDir) + userDir.length())[ FD ]
Line_9 $$ publicId = publicIdPath.substring(publicIdPath.indexOf(userDir) + userDir.length())-->Line_43 $$ source.setPublicId(publicId)[ FD ]
Line_14 $$ PsiFile psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId)-->Line_16 $$ psiFile = ExternalResourceManager.getInstance().getResourceLocation(xmlResourceIdentifier.getBaseSystemId(), myFile, null)[ FD ]
Line_3 $$ String publicId = xmlResourceIdentifier.getLiteralSystemId() != null ? xmlResourceIdentifier.getLiteralSystemId() : xmlResourceIdentifier.getNamespace()-->Line_22 $$ if (publicId != null && publicId.contains(":/")) [ FD ]
Line_2 $$ public XMLInputSource resolveEntity(XMLResourceIdentifier xmlResourceIdentifier) throws XNIException, IOException -->Line_44 $$ source.setCharacterStream(new StringReader(psiFile.getText()))[ CD ]
Line_9 $$ publicId = publicIdPath.substring(publicIdPath.indexOf(userDir) + userDir.length())-->Line_22 $$ if (publicId != null && publicId.contains(":/")) [ FD ]
Line_2 $$ public XMLInputSource resolveEntity(XMLResourceIdentifier xmlResourceIdentifier) throws XNIException, IOException -->Line_21 $$ if (psiFile == null) [ CD ]
Line_16 $$ psiFile = ExternalResourceManager.getInstance().getResourceLocation(xmlResourceIdentifier.getBaseSystemId(), myFile, null)-->Line_21 $$ if (psiFile == null) [ FD ]
Line_19 $$ psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId = xmlResourceIdentifier.getNamespace())-->Line_24 $$ myErrorReporter.processError(new SAXParseException(XmlErrorMessages.message("xml.validate.external.resource.is.not.registered", publicId), publicId, null, 0, 0), ValidateXmlActionHandler.ProblemType.ERROR)[ FD ]
Line_37 $$ if (virtualFile != null) -->Line_40 $$ source.setSystemId(url)[ CD ]
Line_22 $$ if (publicId != null && publicId.contains(":/")) -->Line_29 $$ source.setCharacterStream(new StringReader(""))[ CD ]
Line_16 $$ psiFile = ExternalResourceManager.getInstance().getResourceLocation(xmlResourceIdentifier.getBaseSystemId(), myFile, null)-->Line_44 $$ source.setCharacterStream(new StringReader(psiFile.getText()))[ FD ]
Line_35 $$ if (xmlResourceIdentifier.getLiteralSystemId() == null) -->Line_36 $$ VirtualFile virtualFile = psiFile.getVirtualFile()[ CD ]
Line_27 $$ final XMLInputSource source = new XMLInputSource(xmlResourceIdentifier)-->Line_39 $$ source.setBaseSystemId(url)[ FD ]
Line_2 $$ public XMLInputSource resolveEntity(XMLResourceIdentifier xmlResourceIdentifier) throws XNIException, IOException -->Line_35 $$ if (xmlResourceIdentifier.getLiteralSystemId() == null) [ CD ]
Line_3 $$ String publicId = xmlResourceIdentifier.getLiteralSystemId() != null ? xmlResourceIdentifier.getLiteralSystemId() : xmlResourceIdentifier.getNamespace()-->Line_43 $$ source.setPublicId(publicId)[ FD ]
Line_8 $$ if (publicIdPath.startsWith(userDir)) -->Line_9 $$ publicId = publicIdPath.substring(publicIdPath.indexOf(userDir) + userDir.length())[ CD ]
Line_19 $$ psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId = xmlResourceIdentifier.getNamespace())-->Line_43 $$ source.setPublicId(publicId)[ FD ]
Line_16 $$ psiFile = ExternalResourceManager.getInstance().getResourceLocation(xmlResourceIdentifier.getBaseSystemId(), myFile, null)-->Line_36 $$ VirtualFile virtualFile = psiFile.getVirtualFile()[ FD ]
Line_19 $$ psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId = xmlResourceIdentifier.getNamespace())-->Line_21 $$ if (psiFile == null) [ FD ]
Line_2 $$ public XMLInputSource resolveEntity(XMLResourceIdentifier xmlResourceIdentifier) throws XNIException, IOException -->Line_15 $$ if (psiFile == null && xmlResourceIdentifier.getBaseSystemId() != null) [ CD ]
Line_6 $$ String userDir = new File(System.getProperty("user.dir")).toURI().getPath()-->Line_8 $$ if (publicIdPath.startsWith(userDir)) [ FD ]
Line_27 $$ final XMLInputSource source = new XMLInputSource(xmlResourceIdentifier)-->Line_44 $$ source.setCharacterStream(new StringReader(psiFile.getText()))[ FD ]
Line_2 $$ public XMLInputSource resolveEntity(XMLResourceIdentifier xmlResourceIdentifier) throws XNIException, IOException -->Line_15 $$ if (psiFile == null && xmlResourceIdentifier.getBaseSystemId() != null) [ FD ]
Line_3 $$ String publicId = xmlResourceIdentifier.getLiteralSystemId() != null ? xmlResourceIdentifier.getLiteralSystemId() : xmlResourceIdentifier.getNamespace()-->Line_14 $$ PsiFile psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId)[ FD ]
Line_9 $$ publicId = publicIdPath.substring(publicIdPath.indexOf(userDir) + userDir.length())-->Line_24 $$ myErrorReporter.processError(new SAXParseException(XmlErrorMessages.message("xml.validate.external.resource.is.not.registered", publicId), publicId, null, 0, 0), ValidateXmlActionHandler.ProblemType.ERROR)[ FD ]
Line_3 $$ String publicId = xmlResourceIdentifier.getLiteralSystemId() != null ? xmlResourceIdentifier.getLiteralSystemId() : xmlResourceIdentifier.getNamespace()-->Line_4 $$ if (publicId != null) [ FD ]
Line_15 $$ if (psiFile == null && xmlResourceIdentifier.getBaseSystemId() != null) -->Line_16 $$ psiFile = ExternalResourceManager.getInstance().getResourceLocation(xmlResourceIdentifier.getBaseSystemId(), myFile, null)[ CD ]
Line_27 $$ final XMLInputSource source = new XMLInputSource(xmlResourceIdentifier)-->Line_28 $$ source.setPublicId(publicId)[ FD ]
Line_9 $$ publicId = publicIdPath.substring(publicIdPath.indexOf(userDir) + userDir.length())-->Line_28 $$ source.setPublicId(publicId)[ FD ]
Line_3 $$ String publicId = xmlResourceIdentifier.getLiteralSystemId() != null ? xmlResourceIdentifier.getLiteralSystemId() : xmlResourceIdentifier.getNamespace()-->Line_28 $$ source.setPublicId(publicId)[ FD ]
Line_14 $$ PsiFile psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId)-->Line_21 $$ if (psiFile == null) [ FD ]
Line_2 $$ public XMLInputSource resolveEntity(XMLResourceIdentifier xmlResourceIdentifier) throws XNIException, IOException -->Line_35 $$ if (xmlResourceIdentifier.getLiteralSystemId() == null) [ FD ]
Line_2 $$ public XMLInputSource resolveEntity(XMLResourceIdentifier xmlResourceIdentifier) throws XNIException, IOException -->Line_45 $$ return source[ CD ]
Line_38 $$ final String url = VfsUtilCore.fixIDEAUrl(virtualFile.getUrl())-->Line_40 $$ source.setSystemId(url)[ FD ]
Line_18 $$ if (psiFile == null && xmlResourceIdentifier.getLiteralSystemId() != null && xmlResourceIdentifier.getNamespace() != null) -->Line_19 $$ psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId = xmlResourceIdentifier.getNamespace())[ CD ]
Line_14 $$ PsiFile psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId)-->Line_19 $$ psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId = xmlResourceIdentifier.getNamespace())[ FD ]
Line_9 $$ publicId = publicIdPath.substring(publicIdPath.indexOf(userDir) + userDir.length())-->Line_14 $$ PsiFile psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId)[ FD ]
Line_3 $$ String publicId = xmlResourceIdentifier.getLiteralSystemId() != null ? xmlResourceIdentifier.getLiteralSystemId() : xmlResourceIdentifier.getNamespace()-->Line_19 $$ psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId = xmlResourceIdentifier.getNamespace())[ FD ]
Line_35 $$ if (xmlResourceIdentifier.getLiteralSystemId() == null) -->Line_37 $$ if (virtualFile != null) [ CD ]
Line_27 $$ final XMLInputSource source = new XMLInputSource(xmlResourceIdentifier)-->Line_40 $$ source.setSystemId(url)[ FD ]
Line_38 $$ final String url = VfsUtilCore.fixIDEAUrl(virtualFile.getUrl())-->Line_39 $$ source.setBaseSystemId(url)[ FD ]
Line_21 $$ if (psiFile == null) -->Line_32 $$ return null[ CD ]
Line_9 $$ publicId = publicIdPath.substring(publicIdPath.indexOf(userDir) + userDir.length())-->Line_19 $$ psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId = xmlResourceIdentifier.getNamespace())[ FD ]
Line_19 $$ psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId = xmlResourceIdentifier.getNamespace())-->Line_36 $$ VirtualFile virtualFile = psiFile.getVirtualFile()[ FD ]
Line_2 $$ public XMLInputSource resolveEntity(XMLResourceIdentifier xmlResourceIdentifier) throws XNIException, IOException -->Line_16 $$ psiFile = ExternalResourceManager.getInstance().getResourceLocation(xmlResourceIdentifier.getBaseSystemId(), myFile, null)[ FD ]
Line_36 $$ VirtualFile virtualFile = psiFile.getVirtualFile()-->Line_37 $$ if (virtualFile != null) [ FD ]
Line_19 $$ psiFile = resolve(xmlResourceIdentifier.getBaseSystemId(), publicId = xmlResourceIdentifier.getNamespace())-->Line_44 $$ source.setCharacterStream(new StringReader(psiFile.getText()))[ FD ]
