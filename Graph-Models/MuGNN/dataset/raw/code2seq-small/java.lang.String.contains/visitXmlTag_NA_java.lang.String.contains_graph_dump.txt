Line_13 $$ final String s = attribute.getName()-->Line_14 $$ if (!"xmlns".equals(s) && !s.startsWith("xmlns:")) [ FD ]
Line_10 $$ final Attributes2Impl atts = new Attributes2Impl()-->Line_22 $$ myHandler.startElement(namespace, localName, name, atts)[ FD ]
Line_2 $$ public void visitXmlTag(XmlTag tag) -->Line_20 $$ final String localName = tag.getLocalName()[ FD ]
Line_5 $$ final Map<String, String> map = tag.getLocalNamespaceDeclarations()-->Line_6 $$ final String[] prefixes = map.keySet().toArray(new String[map.size()])[ FD ]
Line_12 $$ for (XmlAttribute attribute : xmlAttributes) -->Line_13 $$ final String s = attribute.getName()[ FD ]
Line_20 $$ final String localName = tag.getLocalName()-->Line_22 $$ myHandler.startElement(namespace, localName, name, atts)[ FD ]
Line_24 $$ while (child != null) -->Line_26 $$ child = child.getNextSibling()[ CD ]
Line_14 $$ if (!"xmlns".equals(s) && !s.startsWith("xmlns:")) -->Line_15 $$ final String uri = attribute.getNamespace()[ CD ]
Line_30 $$ String prefix = prefixes[i]-->Line_31 $$ myHandler.endPrefixMapping(prefix)[ FD ]
Line_2 $$ public void visitXmlTag(XmlTag tag) -->Line_11 $$ final XmlAttribute[] xmlAttributes = tag.getAttributes()[ FD ]
Line_23 $$ PsiElement child = tag.getFirstChild()-->Line_24 $$ while (child != null) [ FD ]
Line_23 $$ PsiElement child = tag.getFirstChild()-->Line_25 $$ child.accept(this)[ FD ]
Line_20 $$ final String localName = tag.getLocalName()-->Line_28 $$ myHandler.endElement(namespace, localName, name)[ FD ]
Line_7 $$ for (String prefix : prefixes) -->Line_8 $$ myHandler.startPrefixMapping(prefix, map.get(prefix))[ FD ]
Line_29 $$ for (int i = prefixes.length - 1; i >= 0; i--) -->Line_30 $$ String prefix = prefixes[i][ CD ]
Line_29 $$ for (int i = prefixes.length - 1; i >= 0; i--) -->Line_31 $$ myHandler.endPrefixMapping(prefix)[ CD ]
Line_12 $$ for (XmlAttribute attribute : xmlAttributes) -->Line_15 $$ final String uri = attribute.getNamespace()[ FD ]
Line_7 $$ for (String prefix : prefixes) -->Line_31 $$ myHandler.endPrefixMapping(prefix)[ FD ]
Line_2 $$ public void visitXmlTag(XmlTag tag) -->Line_4 $$ setLocation(tag)[ FD ]
Line_2 $$ public void visitXmlTag(XmlTag tag) -->Line_5 $$ final Map<String, String> map = tag.getLocalNamespaceDeclarations()[ FD ]
Line_10 $$ final Attributes2Impl atts = new Attributes2Impl()-->Line_16 $$ atts.addAttribute(s.contains(":") ? uri : "", attribute.getLocalName(), s, "PCDATA", attribute.getValue())[ FD ]
Line_14 $$ if (!"xmlns".equals(s) && !s.startsWith("xmlns:")) -->Line_16 $$ atts.addAttribute(s.contains(":") ? uri : "", attribute.getLocalName(), s, "PCDATA", attribute.getValue())[ CD ]
Line_19 $$ final String namespace = tag.getNamespace()-->Line_22 $$ myHandler.startElement(namespace, localName, name, atts)[ FD ]
Line_26 $$ child = child.getNextSibling()-->Line_25 $$ child.accept(this)[ FD ]
Line_23 $$ PsiElement child = tag.getFirstChild()-->Line_26 $$ child = child.getNextSibling()[ FD ]
Line_2 $$ public void visitXmlTag(XmlTag tag) -->Line_19 $$ final String namespace = tag.getNamespace()[ FD ]
Line_24 $$ while (child != null) -->Line_25 $$ child.accept(this)[ CD ]
Line_21 $$ final String name = tag.getName()-->Line_28 $$ myHandler.endElement(namespace, localName, name)[ FD ]
Line_26 $$ child = child.getNextSibling()-->Line_24 $$ while (child != null) [ FD ]
Line_12 $$ for (XmlAttribute attribute : xmlAttributes) -->Line_16 $$ atts.addAttribute(s.contains(":") ? uri : "", attribute.getLocalName(), s, "PCDATA", attribute.getValue())[ FD ]
Line_21 $$ final String name = tag.getName()-->Line_22 $$ myHandler.startElement(namespace, localName, name, atts)[ FD ]
Line_2 $$ public void visitXmlTag(XmlTag tag) -->Line_21 $$ final String name = tag.getName()[ FD ]
Line_19 $$ final String namespace = tag.getNamespace()-->Line_28 $$ myHandler.endElement(namespace, localName, name)[ FD ]
Line_13 $$ final String s = attribute.getName()-->Line_16 $$ atts.addAttribute(s.contains(":") ? uri : "", attribute.getLocalName(), s, "PCDATA", attribute.getValue())[ FD ]
Line_5 $$ final Map<String, String> map = tag.getLocalNamespaceDeclarations()-->Line_8 $$ myHandler.startPrefixMapping(prefix, map.get(prefix))[ FD ]
Line_2 $$ public void visitXmlTag(XmlTag tag) -->Line_23 $$ PsiElement child = tag.getFirstChild()[ FD ]
