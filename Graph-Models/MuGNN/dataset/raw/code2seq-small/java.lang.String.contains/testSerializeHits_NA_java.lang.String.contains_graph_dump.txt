Line_5 $$ String json = jsonSerializer.serialize(hits)-->Line_10 $$ Assert.assertTrue(json.contains("\"scores\":"))[ FD ]
Line_6 $$ json = json.replace(StringPool.SPACE, StringPool.BLANK)-->Line_12 $$ Assert.assertTrue(json.contains("\"start\":\"0\""))[ FD ]
Line_4 $$ Hits hits = new HitsImpl()-->Line_5 $$ String json = jsonSerializer.serialize(hits)[ FD ]
Line_5 $$ String json = jsonSerializer.serialize(hits)-->Line_11 $$ Assert.assertTrue(json.contains("\"snippets\":["))[ FD ]
Line_6 $$ json = json.replace(StringPool.SPACE, StringPool.BLANK)-->Line_13 $$ Assert.assertTrue(json.contains("\"length\":0"))[ FD ]
Line_2 $$ public void testSerializeHits() -->Line_13 $$ Assert.assertTrue(json.contains("\"length\":0"))[ CD ]
Line_3 $$ JSONSerializer jsonSerializer = JSONFactoryUtil.createJSONSerializer()-->Line_5 $$ String json = jsonSerializer.serialize(hits)[ FD ]
Line_2 $$ public void testSerializeHits() -->Line_12 $$ Assert.assertTrue(json.contains("\"start\":\"0\""))[ CD ]
Line_2 $$ public void testSerializeHits() -->Line_8 $$ Assert.assertFalse(json.contains("\"query\""))[ CD ]
Line_2 $$ public void testSerializeHits() -->Line_4 $$ Hits hits = new HitsImpl()[ CD ]
Line_6 $$ json = json.replace(StringPool.SPACE, StringPool.BLANK)-->Line_11 $$ Assert.assertTrue(json.contains("\"snippets\":["))[ FD ]
Line_6 $$ json = json.replace(StringPool.SPACE, StringPool.BLANK)-->Line_9 $$ Assert.assertTrue(json.contains("\"queryTerms\":null"))[ FD ]
Line_5 $$ String json = jsonSerializer.serialize(hits)-->Line_12 $$ Assert.assertTrue(json.contains("\"start\":\"0\""))[ FD ]
Line_2 $$ public void testSerializeHits() -->Line_6 $$ json = json.replace(StringPool.SPACE, StringPool.BLANK)[ CD ]
Line_6 $$ json = json.replace(StringPool.SPACE, StringPool.BLANK)-->Line_10 $$ Assert.assertTrue(json.contains("\"scores\":"))[ FD ]
Line_2 $$ public void testSerializeHits() -->Line_3 $$ JSONSerializer jsonSerializer = JSONFactoryUtil.createJSONSerializer()[ CD ]
Line_5 $$ String json = jsonSerializer.serialize(hits)-->Line_13 $$ Assert.assertTrue(json.contains("\"length\":0"))[ FD ]
Line_2 $$ public void testSerializeHits() -->Line_5 $$ String json = jsonSerializer.serialize(hits)[ CD ]
Line_2 $$ public void testSerializeHits() -->Line_10 $$ Assert.assertTrue(json.contains("\"scores\":"))[ CD ]
Line_5 $$ String json = jsonSerializer.serialize(hits)-->Line_7 $$ Assert.assertTrue(json.contains("\"docs\":null"))[ FD ]
Line_2 $$ public void testSerializeHits() -->Line_11 $$ Assert.assertTrue(json.contains("\"snippets\":["))[ CD ]
Line_2 $$ public void testSerializeHits() -->Line_7 $$ Assert.assertTrue(json.contains("\"docs\":null"))[ CD ]
Line_6 $$ json = json.replace(StringPool.SPACE, StringPool.BLANK)-->Line_8 $$ Assert.assertFalse(json.contains("\"query\""))[ FD ]
Line_5 $$ String json = jsonSerializer.serialize(hits)-->Line_8 $$ Assert.assertFalse(json.contains("\"query\""))[ FD ]
Line_5 $$ String json = jsonSerializer.serialize(hits)-->Line_6 $$ json = json.replace(StringPool.SPACE, StringPool.BLANK)[ FD ]
Line_5 $$ String json = jsonSerializer.serialize(hits)-->Line_9 $$ Assert.assertTrue(json.contains("\"queryTerms\":null"))[ FD ]
Line_2 $$ public void testSerializeHits() -->Line_9 $$ Assert.assertTrue(json.contains("\"queryTerms\":null"))[ CD ]
Line_6 $$ json = json.replace(StringPool.SPACE, StringPool.BLANK)-->Line_7 $$ Assert.assertTrue(json.contains("\"docs\":null"))[ FD ]
