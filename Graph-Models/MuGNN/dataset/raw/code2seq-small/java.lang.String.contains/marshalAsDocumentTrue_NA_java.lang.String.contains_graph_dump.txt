Line_2 $$ public void marshalAsDocumentTrue() throws Exception -->Line_5 $$ assertXMLEqual("Marshaller wrote invalid result", DOCUMENT_EXPECTED_STRING, result)[ CD ]
Line_2 $$ public void marshalAsDocumentTrue() throws Exception -->Line_6 $$ assertTrue("Result doesn't contain xml declaration.", result.contains("<?xml version=\"1.0\" encoding=\"UTF-8\"?>"))[ CD ]
Line_4 $$ String result = marshalFlights()-->Line_6 $$ assertTrue("Result doesn't contain xml declaration.", result.contains("<?xml version=\"1.0\" encoding=\"UTF-8\"?>"))[ FD ]
Line_2 $$ public void marshalAsDocumentTrue() throws Exception -->Line_3 $$ marshaller.setMarshalAsDocument(true)[ CD ]
Line_4 $$ String result = marshalFlights()-->Line_5 $$ assertXMLEqual("Marshaller wrote invalid result", DOCUMENT_EXPECTED_STRING, result)[ FD ]
Line_2 $$ public void marshalAsDocumentTrue() throws Exception -->Line_4 $$ String result = marshalFlights()[ CD ]
