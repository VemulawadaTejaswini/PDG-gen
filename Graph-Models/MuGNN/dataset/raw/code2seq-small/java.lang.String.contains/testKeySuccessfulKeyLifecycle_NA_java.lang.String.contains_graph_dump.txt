Line_3 $$ int rc = 0-->Line_10 $$ assertEquals(0, rc)[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_17 $$ assertTrue(listOut.contains("created"))[ CD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_19 $$ final String[] args2 = [ CD ]
Line_9 $$ rc = ks.run(args1)-->Line_21 $$ assertEquals(0, rc)[ FD ]
Line_4 $$ String keyName = "key1"-->Line_25 $$ assertFalse(listOut, listOut.contains(keyName))[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_8 $$ final String[] args1 = [ CD ]
Line_4 $$ String keyName = "key1"-->Line_13 $$ assertTrue(listOut.contains(keyName))[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_4 $$ String keyName = "key1"[ CD ]
Line_12 $$ String listOut = listKeys(ks, false)-->Line_14 $$ listOut = listKeys(ks, true)[ FD ]
Line_12 $$ String listOut = listKeys(ks, false)-->Line_25 $$ assertFalse(listOut, listOut.contains(keyName))[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_10 $$ assertEquals(0, rc)[ CD ]
Line_12 $$ String listOut = listKeys(ks, false)-->Line_17 $$ assertTrue(listOut.contains("created"))[ FD ]
Line_5 $$ KeyShell ks = new KeyShell()-->Line_14 $$ listOut = listKeys(ks, true)[ FD ]
Line_14 $$ listOut = listKeys(ks, true)-->Line_17 $$ assertTrue(listOut.contains("created"))[ FD ]
Line_12 $$ String listOut = listKeys(ks, false)-->Line_24 $$ listOut = listKeys(ks, false)[ FD ]
Line_12 $$ String listOut = listKeys(ks, false)-->Line_16 $$ assertTrue(listOut.contains("description"))[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_25 $$ assertFalse(listOut, listOut.contains(keyName))[ CD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_7 $$ outContent.reset()[ CD ]
Line_14 $$ listOut = listKeys(ks, true)-->Line_25 $$ assertFalse(listOut, listOut.contains(keyName))[ FD ]
Line_19 $$ final String[] args2 = -->Line_20 $$ rc = ks.run(args2)[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_11 $$ assertTrue(outContent.toString().contains(keyName + " has been " + "successfully created"))[ CD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_6 $$ ks.setConf(new Configuration())[ CD ]
Line_8 $$ final String[] args1 = -->Line_9 $$ rc = ks.run(args1)[ FD ]
Line_5 $$ KeyShell ks = new KeyShell()-->Line_12 $$ String listOut = listKeys(ks, false)[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_3 $$ int rc = 0[ CD ]
Line_3 $$ int rc = 0-->Line_20 $$ rc = ks.run(args2)[ FD ]
Line_5 $$ KeyShell ks = new KeyShell()-->Line_23 $$ deleteKey(ks, keyName)[ FD ]
Line_14 $$ listOut = listKeys(ks, true)-->Line_24 $$ listOut = listKeys(ks, false)[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_20 $$ rc = ks.run(args2)[ CD ]
Line_24 $$ listOut = listKeys(ks, false)-->Line_25 $$ assertFalse(listOut, listOut.contains(keyName))[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_16 $$ assertTrue(listOut.contains("description"))[ CD ]
Line_9 $$ rc = ks.run(args1)-->Line_20 $$ rc = ks.run(args2)[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_22 $$ assertTrue(outContent.toString().contains("key1 has been successfully " + "rolled."))[ CD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_23 $$ deleteKey(ks, keyName)[ CD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_9 $$ rc = ks.run(args1)[ CD ]
Line_3 $$ int rc = 0-->Line_21 $$ assertEquals(0, rc)[ FD ]
Line_14 $$ listOut = listKeys(ks, true)-->Line_16 $$ assertTrue(listOut.contains("description"))[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_13 $$ assertTrue(listOut.contains(keyName))[ CD ]
Line_20 $$ rc = ks.run(args2)-->Line_21 $$ assertEquals(0, rc)[ FD ]
Line_4 $$ String keyName = "key1"-->Line_23 $$ deleteKey(ks, keyName)[ FD ]
Line_12 $$ String listOut = listKeys(ks, false)-->Line_13 $$ assertTrue(listOut.contains(keyName))[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_21 $$ assertEquals(0, rc)[ CD ]
Line_12 $$ String listOut = listKeys(ks, false)-->Line_15 $$ assertTrue(listOut.contains(keyName))[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_18 $$ outContent.reset()[ CD ]
Line_5 $$ KeyShell ks = new KeyShell()-->Line_6 $$ ks.setConf(new Configuration())[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_14 $$ listOut = listKeys(ks, true)[ CD ]
Line_9 $$ rc = ks.run(args1)-->Line_10 $$ assertEquals(0, rc)[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_24 $$ listOut = listKeys(ks, false)[ CD ]
Line_5 $$ KeyShell ks = new KeyShell()-->Line_9 $$ rc = ks.run(args1)[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_15 $$ assertTrue(listOut.contains(keyName))[ CD ]
Line_5 $$ KeyShell ks = new KeyShell()-->Line_24 $$ listOut = listKeys(ks, false)[ FD ]
Line_4 $$ String keyName = "key1"-->Line_15 $$ assertTrue(listOut.contains(keyName))[ FD ]
Line_14 $$ listOut = listKeys(ks, true)-->Line_15 $$ assertTrue(listOut.contains(keyName))[ FD ]
Line_3 $$ int rc = 0-->Line_9 $$ rc = ks.run(args1)[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_5 $$ KeyShell ks = new KeyShell()[ CD ]
Line_5 $$ KeyShell ks = new KeyShell()-->Line_20 $$ rc = ks.run(args2)[ FD ]
Line_2 $$ public void testKeySuccessfulKeyLifecycle() throws Exception -->Line_12 $$ String listOut = listKeys(ks, false)[ CD ]
