Line_4 $$ if (!project.equals(ProjectType.CORE)) -->Line_5 $$ write(wr, "compile project(\":" + ProjectType.CORE.getName() + "\")")[ CD ]
Line_2 $$ private static void addDependencies(ProjectType project, List<Dependency> dependencyList, BufferedWriter wr) throws IOException -->Line_13 $$ if (project.equals(ProjectType.ANDROID) && moduleDependency.contains("native")) [ FD ]
Line_2 $$ private static void addDependencies(ProjectType project, List<Dependency> dependencyList, BufferedWriter wr) throws IOException -->Line_14 $$ write(wr, "natives \"" + moduleDependency + "\"")[ FD ]
Line_2 $$ private static void addDependencies(ProjectType project, List<Dependency> dependencyList, BufferedWriter wr) throws IOException -->Line_20 $$ write(wr, "}")[ FD ]
Line_10 $$ for (String moduleDependency : dep.getDependencies(project)) -->Line_13 $$ if (project.equals(ProjectType.ANDROID) && moduleDependency.contains("native")) [ FD ]
Line_2 $$ private static void addDependencies(ProjectType project, List<Dependency> dependencyList, BufferedWriter wr) throws IOException -->Line_10 $$ for (String moduleDependency : dep.getDependencies(project)) [ FD ]
Line_2 $$ private static void addDependencies(ProjectType project, List<Dependency> dependencyList, BufferedWriter wr) throws IOException -->Line_3 $$ write(wr, "dependencies [ FD ]
Line_2 $$ private static void addDependencies(ProjectType project, List<Dependency> dependencyList, BufferedWriter wr) throws IOException -->Line_8 $$ if (dep.getDependencies(project) == null)[ FD ]
Line_2 $$ private static void addDependencies(ProjectType project, List<Dependency> dependencyList, BufferedWriter wr) throws IOException -->Line_4 $$ if (!project.equals(ProjectType.CORE)) [ FD ]
Line_2 $$ private static void addDependencies(ProjectType project, List<Dependency> dependencyList, BufferedWriter wr) throws IOException -->Line_20 $$ write(wr, "}")[ CD ]
Line_13 $$ if (project.equals(ProjectType.ANDROID) && moduleDependency.contains("native")) -->Line_14 $$ write(wr, "natives \"" + moduleDependency + "\"")[ CD ]
Line_2 $$ private static void addDependencies(ProjectType project, List<Dependency> dependencyList, BufferedWriter wr) throws IOException -->Line_5 $$ write(wr, "compile project(\":" + ProjectType.CORE.getName() + "\")")[ FD ]
Line_7 $$ for (Dependency dep : dependencyList) -->Line_8 $$ if (dep.getDependencies(project) == null)[ FD ]
Line_13 $$ if (project.equals(ProjectType.ANDROID) && moduleDependency.contains("native")) -->Line_16 $$ write(wr, "compile \"" + moduleDependency + "\"")[ CD ]
Line_7 $$ for (Dependency dep : dependencyList) -->Line_10 $$ for (String moduleDependency : dep.getDependencies(project)) [ FD ]
Line_2 $$ private static void addDependencies(ProjectType project, List<Dependency> dependencyList, BufferedWriter wr) throws IOException -->Line_16 $$ write(wr, "compile \"" + moduleDependency + "\"")[ FD ]
Line_2 $$ private static void addDependencies(ProjectType project, List<Dependency> dependencyList, BufferedWriter wr) throws IOException -->Line_3 $$ write(wr, "dependencies [ CD ]
Line_10 $$ for (String moduleDependency : dep.getDependencies(project)) -->Line_11 $$ if (moduleDependency == null)[ FD ]
Line_2 $$ private static void addDependencies(ProjectType project, List<Dependency> dependencyList, BufferedWriter wr) throws IOException -->Line_4 $$ if (!project.equals(ProjectType.CORE)) [ CD ]
