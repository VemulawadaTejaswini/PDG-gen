Line_13 $$ StringBundler sb = new StringBundler(3)-->Line_17 $$ availableLocalesAttribute.setValue(sb.toString())[ FD ]
Line_12 $$ if (!availableLocalesAttributeValue.contains(contentNewDefaultLanguageId)) -->Line_15 $$ sb.append(StringPool.COMMA)[ CD ]
Line_2 $$ public String updateXMLDefaultLocale(String xml, Locale contentDefaultLocale, Locale contentNewDefaultLocale) -->Line_7 $$ Document document = SAXReaderUtil.read(xml)[ FD ]
Line_12 $$ if (!availableLocalesAttributeValue.contains(contentNewDefaultLanguageId)) -->Line_17 $$ availableLocalesAttribute.setValue(sb.toString())[ CD ]
Line_12 $$ if (!availableLocalesAttributeValue.contains(contentNewDefaultLanguageId)) -->Line_16 $$ sb.append(contentNewDefaultLanguageId)[ CD ]
Line_9 $$ Attribute availableLocalesAttribute = rootElement.attribute(_AVAILABLE_LOCALES)-->Line_11 $$ String availableLocalesAttributeValue = availableLocalesAttribute.getValue()[ FD ]
Line_12 $$ if (!availableLocalesAttributeValue.contains(contentNewDefaultLanguageId)) -->Line_14 $$ sb.append(availableLocalesAttribute.getValue())[ CD ]
Line_8 $$ Element rootElement = document.getRootElement()-->Line_19 $$ Attribute defaultLocaleAttribute = rootElement.attribute(_DEFAULT_LOCALE)[ FD ]
Line_8 $$ Element rootElement = document.getRootElement()-->Line_21 $$ fixElementsDefaultLocale(rootElement, contentDefaultLocale, contentNewDefaultLocale)[ FD ]
Line_13 $$ StringBundler sb = new StringBundler(3)-->Line_14 $$ sb.append(availableLocalesAttribute.getValue())[ FD ]
Line_10 $$ String contentNewDefaultLanguageId = LocaleUtil.toLanguageId(contentNewDefaultLocale)-->Line_16 $$ sb.append(contentNewDefaultLanguageId)[ FD ]
Line_8 $$ Element rootElement = document.getRootElement()-->Line_9 $$ Attribute availableLocalesAttribute = rootElement.attribute(_AVAILABLE_LOCALES)[ FD ]
Line_9 $$ Attribute availableLocalesAttribute = rootElement.attribute(_AVAILABLE_LOCALES)-->Line_14 $$ sb.append(availableLocalesAttribute.getValue())[ FD ]
Line_2 $$ public String updateXMLDefaultLocale(String xml, Locale contentDefaultLocale, Locale contentNewDefaultLocale) -->Line_4 $$ if (LocaleUtil.equals(contentDefaultLocale, contentNewDefaultLocale)) [ FD ]
Line_7 $$ Document document = SAXReaderUtil.read(xml)-->Line_8 $$ Element rootElement = document.getRootElement()[ FD ]
Line_11 $$ String availableLocalesAttributeValue = availableLocalesAttribute.getValue()-->Line_12 $$ if (!availableLocalesAttributeValue.contains(contentNewDefaultLanguageId)) [ FD ]
Line_4 $$ if (LocaleUtil.equals(contentDefaultLocale, contentNewDefaultLocale)) -->Line_5 $$ return xml[ CD ]
Line_2 $$ public String updateXMLDefaultLocale(String xml, Locale contentDefaultLocale, Locale contentNewDefaultLocale) -->Line_21 $$ fixElementsDefaultLocale(rootElement, contentDefaultLocale, contentNewDefaultLocale)[ FD ]
Line_7 $$ Document document = SAXReaderUtil.read(xml)-->Line_22 $$ return document.formattedString()[ FD ]
Line_10 $$ String contentNewDefaultLanguageId = LocaleUtil.toLanguageId(contentNewDefaultLocale)-->Line_20 $$ defaultLocaleAttribute.setValue(contentNewDefaultLanguageId)[ FD ]
Line_10 $$ String contentNewDefaultLanguageId = LocaleUtil.toLanguageId(contentNewDefaultLocale)-->Line_12 $$ if (!availableLocalesAttributeValue.contains(contentNewDefaultLanguageId)) [ FD ]
Line_2 $$ public String updateXMLDefaultLocale(String xml, Locale contentDefaultLocale, Locale contentNewDefaultLocale) -->Line_10 $$ String contentNewDefaultLanguageId = LocaleUtil.toLanguageId(contentNewDefaultLocale)[ FD ]
Line_13 $$ StringBundler sb = new StringBundler(3)-->Line_16 $$ sb.append(contentNewDefaultLanguageId)[ FD ]
Line_19 $$ Attribute defaultLocaleAttribute = rootElement.attribute(_DEFAULT_LOCALE)-->Line_20 $$ defaultLocaleAttribute.setValue(contentNewDefaultLanguageId)[ FD ]
Line_9 $$ Attribute availableLocalesAttribute = rootElement.attribute(_AVAILABLE_LOCALES)-->Line_17 $$ availableLocalesAttribute.setValue(sb.toString())[ FD ]
Line_12 $$ if (!availableLocalesAttributeValue.contains(contentNewDefaultLanguageId)) -->Line_13 $$ StringBundler sb = new StringBundler(3)[ CD ]
Line_13 $$ StringBundler sb = new StringBundler(3)-->Line_15 $$ sb.append(StringPool.COMMA)[ FD ]
