Line_8 $$ Map<String, String> env = new HashMap<String, String>()-->Line_10 $$ MRApps.setClasspath(env, conf)[ FD ]
Line_8 $$ Map<String, String> env = new HashMap<String, String>()-->Line_22 $$ env.clear()[ FD ]
Line_2 $$ public void testSetClasspathWithFramework() throws IOException -->Line_7 $$ conf.set(MRJobConfig.MAPREDUCE_APPLICATION_FRAMEWORK_PATH, FRAMEWORK_PATH)[ CD ]
Line_5 $$ Configuration conf = new Configuration()-->Line_17 $$ conf.set(MRJobConfig.MAPREDUCE_APPLICATION_CLASSPATH, FRAMEWORK_CLASSPATH)[ FD ]
Line_2 $$ public void testSetClasspathWithFramework() throws IOException -->Line_3 $$ final String FRAMEWORK_NAME = "some-framework-name"[ CD ]
Line_8 $$ Map<String, String> env = new HashMap<String, String>()-->Line_26 $$ assertEquals("Incorrect classpath with framework and user precedence", expectedClasspath, env.get("CLASSPATH"))[ FD ]
Line_2 $$ public void testSetClasspathWithFramework() throws IOException -->Line_4 $$ final String FRAMEWORK_PATH = "some-framework-path#" + FRAMEWORK_NAME[ CD ]
Line_2 $$ public void testSetClasspathWithFramework() throws IOException -->Line_26 $$ assertEquals("Incorrect classpath with framework and user precedence", expectedClasspath, env.get("CLASSPATH"))[ CD ]
Line_16 $$ final String FRAMEWORK_CLASSPATH = FRAMEWORK_NAME + "/*.jar"-->Line_17 $$ conf.set(MRJobConfig.MAPREDUCE_APPLICATION_CLASSPATH, FRAMEWORK_CLASSPATH)[ FD ]
Line_5 $$ Configuration conf = new Configuration()-->Line_23 $$ conf.setBoolean(MRJobConfig.MAPREDUCE_JOB_USER_CLASSPATH_FIRST, true)[ FD ]
Line_2 $$ public void testSetClasspathWithFramework() throws IOException -->Line_8 $$ Map<String, String> env = new HashMap<String, String>()[ CD ]
Line_2 $$ public void testSetClasspathWithFramework() throws IOException -->Line_21 $$ assertEquals("Incorrect classpath with framework and no user precedence", expectedClasspath, env.get("CLASSPATH"))[ CD ]
Line_8 $$ Map<String, String> env = new HashMap<String, String>()-->Line_24 $$ MRApps.setClasspath(env, conf)[ FD ]
Line_8 $$ Map<String, String> env = new HashMap<String, String>()-->Line_15 $$ env.clear()[ FD ]
Line_2 $$ public void testSetClasspathWithFramework() throws IOException -->Line_15 $$ env.clear()[ CD ]
Line_2 $$ public void testSetClasspathWithFramework() throws IOException -->Line_5 $$ Configuration conf = new Configuration()[ CD ]
Line_5 $$ Configuration conf = new Configuration()-->Line_7 $$ conf.set(MRJobConfig.MAPREDUCE_APPLICATION_FRAMEWORK_PATH, FRAMEWORK_PATH)[ FD ]
Line_5 $$ Configuration conf = new Configuration()-->Line_18 $$ MRApps.setClasspath(env, conf)[ FD ]
Line_4 $$ final String FRAMEWORK_PATH = "some-framework-path#" + FRAMEWORK_NAME-->Line_7 $$ conf.set(MRJobConfig.MAPREDUCE_APPLICATION_FRAMEWORK_PATH, FRAMEWORK_PATH)[ FD ]
Line_5 $$ Configuration conf = new Configuration()-->Line_6 $$ conf.setBoolean(MRConfig.MAPREDUCE_APP_SUBMISSION_CROSS_PLATFORM, true)[ FD ]
Line_8 $$ Map<String, String> env = new HashMap<String, String>()-->Line_18 $$ MRApps.setClasspath(env, conf)[ FD ]
Line_2 $$ public void testSetClasspathWithFramework() throws IOException -->Line_6 $$ conf.setBoolean(MRConfig.MAPREDUCE_APP_SUBMISSION_CROSS_PLATFORM, true)[ CD ]
Line_2 $$ public void testSetClasspathWithFramework() throws IOException -->Line_22 $$ env.clear()[ CD ]
Line_2 $$ public void testSetClasspathWithFramework() throws IOException -->Line_24 $$ MRApps.setClasspath(env, conf)[ CD ]
Line_2 $$ public void testSetClasspathWithFramework() throws IOException -->Line_17 $$ conf.set(MRJobConfig.MAPREDUCE_APPLICATION_CLASSPATH, FRAMEWORK_CLASSPATH)[ CD ]
Line_2 $$ public void testSetClasspathWithFramework() throws IOException -->Line_23 $$ conf.setBoolean(MRJobConfig.MAPREDUCE_JOB_USER_CLASSPATH_FIRST, true)[ CD ]
Line_5 $$ Configuration conf = new Configuration()-->Line_24 $$ MRApps.setClasspath(env, conf)[ FD ]
Line_5 $$ Configuration conf = new Configuration()-->Line_10 $$ MRApps.setClasspath(env, conf)[ FD ]
Line_2 $$ public void testSetClasspathWithFramework() throws IOException -->Line_18 $$ MRApps.setClasspath(env, conf)[ CD ]
Line_2 $$ public void testSetClasspathWithFramework() throws IOException -->Line_16 $$ final String FRAMEWORK_CLASSPATH = FRAMEWORK_NAME + "/*.jar"[ CD ]
Line_8 $$ Map<String, String> env = new HashMap<String, String>()-->Line_21 $$ assertEquals("Incorrect classpath with framework and no user precedence", expectedClasspath, env.get("CLASSPATH"))[ FD ]
