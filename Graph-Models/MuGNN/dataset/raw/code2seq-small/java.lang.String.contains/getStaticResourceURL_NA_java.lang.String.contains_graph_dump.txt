Line_31 $$ if ((parameterMap == null) || !parameterMap.containsKey("minifierType")) -->Line_32 $$ String minifierType = StringPool.BLANK[ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_55 $$ if (((parameterMap == null) || !parameterMap.containsKey("t")) && !(timestamp < 0)) [ CD ]
Line_63 $$ timestamp = PortalWebResourcesUtil.getLastModified(PortalWebResourcesUtil.getPathResourceType(path))-->Line_65 $$ timestamp = theme.getTimestamp()[ FD ]
Line_19 $$ if ((parameterMap == null) || !parameterMap.containsKey("browserId")) -->Line_21 $$ sb.append(BrowserSnifferUtil.getBrowserId(request))[ CD ]
Line_3 $$ if (uri.indexOf(CharPool.QUESTION) != -1) -->Line_4 $$ return uri[ CD ]
Line_14 $$ parameterMap = HttpUtil.getParameterMap(queryString)-->Line_27 $$ if (uri.endsWith(".jsp") && ((parameterMap == null) || !parameterMap.containsKey("colorSchemeId"))) [ FD ]
Line_65 $$ timestamp = theme.getTimestamp()-->Line_69 $$ sb.append(timestamp)[ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_57 $$ String portalURL = getPortalURL(request)[ FD ]
Line_10 $$ Theme theme = themeDisplay.getTheme()-->Line_65 $$ timestamp = theme.getTimestamp()[ FD ]
Line_63 $$ timestamp = PortalWebResourcesUtil.getLastModified(PortalWebResourcesUtil.getPathResourceType(path))-->Line_69 $$ sb.append(timestamp)[ FD ]
Line_46 $$ if (!queryString.startsWith(StringPool.AMPERSAND)) -->Line_47 $$ sb.append(StringPool.AMPERSAND)[ CD ]
Line_14 $$ parameterMap = HttpUtil.getParameterMap(queryString)-->Line_55 $$ if (((parameterMap == null) || !parameterMap.containsKey("t")) && !(timestamp < 0)) [ FD ]
Line_61 $$ timestamp = ServletContextUtil.getLastModified(servletContext, path, true)-->Line_65 $$ timestamp = theme.getTimestamp()[ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_17 $$ sb.append(uri)[ FD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_41 $$ sb.append("&minifierType=")[ FD ]
Line_37 $$ if (themeDisplay.isThemeJsFastLoad()) -->Line_38 $$ minifierType = "js"[ CD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_42 $$ sb.append(minifierType)[ FD ]
Line_12 $$ Map<String, String[]> parameterMap = null-->Line_14 $$ parameterMap = HttpUtil.getParameterMap(queryString)[ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_27 $$ if (uri.endsWith(".jsp") && ((parameterMap == null) || !parameterMap.containsKey("colorSchemeId"))) [ FD ]
Line_35 $$ minifierType = "css"-->Line_42 $$ sb.append(minifierType)[ FD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_20 $$ sb.append("&browserId=")[ FD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_29 $$ sb.append(HttpUtil.encodeURL(colorScheme.getColorSchemeId()))[ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_52 $$ sb.append(themeDisplay.getLanguageId())[ CD ]
Line_33 $$ if (uri.endsWith(".css") || uri.endsWith("css.jsp") || (uri.endsWith(".jsp") && uri.contains("/css/"))) -->Line_34 $$ if (themeDisplay.isThemeCssFastLoad()) [ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_54 $$ sb.append(ReleaseInfo.getBuildNumber())[ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_53 $$ sb.append("&b=")[ CD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_21 $$ sb.append(BrowserSnifferUtil.getBrowserId(request))[ FD ]
Line_59 $$ if (path.startsWith(StrutsUtil.TEXT_HTML_DIR)) -->Line_60 $$ ServletContext servletContext = (ServletContext) request.getAttribute(WebKeys.CTX)[ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_23 $$ if ((uri.endsWith(".css") || uri.endsWith(".jsp")) && ((parameterMap == null) || !parameterMap.containsKey("themeId"))) [ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_61 $$ timestamp = ServletContextUtil.getLastModified(servletContext, path, true)[ FD ]
Line_59 $$ if (path.startsWith(StrutsUtil.TEXT_HTML_DIR)) -->Line_62 $$ if (PortalWebResourcesUtil.hasContextPath(path)) [ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_9 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_16 $$ StringBundler sb = new StringBundler(18)[ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_46 $$ if (!queryString.startsWith(StringPool.AMPERSAND)) [ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_3 $$ if (uri.indexOf(CharPool.QUESTION) != -1) [ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_21 $$ sb.append(BrowserSnifferUtil.getBrowserId(request))[ FD ]
Line_60 $$ ServletContext servletContext = (ServletContext) request.getAttribute(WebKeys.CTX)-->Line_61 $$ timestamp = ServletContextUtil.getLastModified(servletContext, path, true)[ FD ]
Line_23 $$ if ((uri.endsWith(".css") || uri.endsWith(".jsp")) && ((parameterMap == null) || !parameterMap.containsKey("themeId"))) -->Line_25 $$ sb.append(HttpUtil.encodeURL(theme.getThemeId()))[ CD ]
Line_58 $$ String path = StringUtil.replace(uri, portalURL, StringPool.BLANK)-->Line_63 $$ timestamp = PortalWebResourcesUtil.getLastModified(PortalWebResourcesUtil.getPathResourceType(path))[ FD ]
Line_62 $$ if (PortalWebResourcesUtil.hasContextPath(path)) -->Line_65 $$ timestamp = theme.getTimestamp()[ CD ]
Line_62 $$ if (PortalWebResourcesUtil.hasContextPath(path)) -->Line_63 $$ timestamp = PortalWebResourcesUtil.getLastModified(PortalWebResourcesUtil.getPathResourceType(path))[ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_18 $$ sb.append(StringPool.QUESTION)[ CD ]
Line_32 $$ String minifierType = StringPool.BLANK-->Line_35 $$ minifierType = "css"[ FD ]
Line_11 $$ ColorScheme colorScheme = themeDisplay.getColorScheme()-->Line_29 $$ sb.append(HttpUtil.encodeURL(colorScheme.getColorSchemeId()))[ FD ]
Line_7 $$ uri = uri.substring(1)-->Line_17 $$ sb.append(uri)[ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_51 $$ sb.append("&languageId=")[ CD ]
Line_7 $$ uri = uri.substring(1)-->Line_23 $$ if ((uri.endsWith(".css") || uri.endsWith(".jsp")) && ((parameterMap == null) || !parameterMap.containsKey("themeId"))) [ FD ]
Line_59 $$ if (path.startsWith(StrutsUtil.TEXT_HTML_DIR)) -->Line_61 $$ timestamp = ServletContextUtil.getLastModified(servletContext, path, true)[ CD ]
Line_14 $$ parameterMap = HttpUtil.getParameterMap(queryString)-->Line_31 $$ if ((parameterMap == null) || !parameterMap.containsKey("minifierType")) [ FD ]
Line_7 $$ uri = uri.substring(1)-->Line_27 $$ if (uri.endsWith(".jsp") && ((parameterMap == null) || !parameterMap.containsKey("colorSchemeId"))) [ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_33 $$ if (uri.endsWith(".css") || uri.endsWith("css.jsp") || (uri.endsWith(".jsp") && uri.contains("/css/"))) [ FD ]
Line_31 $$ if ((parameterMap == null) || !parameterMap.containsKey("minifierType")) -->Line_40 $$ if (Validator.isNotNull(minifierType)) [ CD ]
Line_31 $$ if ((parameterMap == null) || !parameterMap.containsKey("minifierType")) -->Line_33 $$ if (uri.endsWith(".css") || uri.endsWith("css.jsp") || (uri.endsWith(".jsp") && uri.contains("/css/"))) [ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_3 $$ if (uri.indexOf(CharPool.QUESTION) != -1) [ FD ]
Line_61 $$ timestamp = ServletContextUtil.getLastModified(servletContext, path, true)-->Line_63 $$ timestamp = PortalWebResourcesUtil.getLastModified(PortalWebResourcesUtil.getPathResourceType(path))[ FD ]
Line_13 $$ if (Validator.isNotNull(queryString)) -->Line_14 $$ parameterMap = HttpUtil.getParameterMap(queryString)[ CD ]
Line_27 $$ if (uri.endsWith(".jsp") && ((parameterMap == null) || !parameterMap.containsKey("colorSchemeId"))) -->Line_28 $$ sb.append("&colorSchemeId=")[ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_6 $$ if (uri.startsWith(StringPool.DOUBLE_SLASH)) [ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_49 $$ sb.append(queryString)[ FD ]
Line_12 $$ Map<String, String[]> parameterMap = null-->Line_27 $$ if (uri.endsWith(".jsp") && ((parameterMap == null) || !parameterMap.containsKey("colorSchemeId"))) [ FD ]
Line_7 $$ uri = uri.substring(1)-->Line_58 $$ String path = StringUtil.replace(uri, portalURL, StringPool.BLANK)[ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_69 $$ sb.append(timestamp)[ FD ]
Line_12 $$ Map<String, String[]> parameterMap = null-->Line_19 $$ if ((parameterMap == null) || !parameterMap.containsKey("browserId")) [ FD ]
Line_58 $$ String path = StringUtil.replace(uri, portalURL, StringPool.BLANK)-->Line_61 $$ timestamp = ServletContextUtil.getLastModified(servletContext, path, true)[ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_13 $$ if (Validator.isNotNull(queryString)) [ CD ]
Line_45 $$ if (Validator.isNotNull(queryString)) -->Line_49 $$ sb.append(queryString)[ CD ]
Line_61 $$ timestamp = ServletContextUtil.getLastModified(servletContext, path, true)-->Line_69 $$ sb.append(timestamp)[ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_73 $$ return url[ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_27 $$ if (uri.endsWith(".jsp") && ((parameterMap == null) || !parameterMap.containsKey("colorSchemeId"))) [ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_17 $$ sb.append(uri)[ CD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_51 $$ sb.append("&languageId=")[ FD ]
Line_7 $$ uri = uri.substring(1)-->Line_33 $$ if (uri.endsWith(".css") || uri.endsWith("css.jsp") || (uri.endsWith(".jsp") && uri.contains("/css/"))) [ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_9 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_17 $$ sb.append(uri)[ FD ]
Line_32 $$ String minifierType = StringPool.BLANK-->Line_42 $$ sb.append(minifierType)[ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_13 $$ if (Validator.isNotNull(queryString)) [ FD ]
Line_56 $$ if (timestamp == 0) -->Line_58 $$ String path = StringUtil.replace(uri, portalURL, StringPool.BLANK)[ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_11 $$ ColorScheme colorScheme = themeDisplay.getColorScheme()[ CD ]
Line_9 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_11 $$ ColorScheme colorScheme = themeDisplay.getColorScheme()[ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_72 $$ url = StringUtil.replace(url, "?&", StringPool.QUESTION)[ CD ]
Line_38 $$ minifierType = "js"-->Line_42 $$ sb.append(minifierType)[ FD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_49 $$ sb.append(queryString)[ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_60 $$ ServletContext servletContext = (ServletContext) request.getAttribute(WebKeys.CTX)[ FD ]
Line_19 $$ if ((parameterMap == null) || !parameterMap.containsKey("browserId")) -->Line_20 $$ sb.append("&browserId=")[ CD ]
Line_14 $$ parameterMap = HttpUtil.getParameterMap(queryString)-->Line_23 $$ if ((uri.endsWith(".css") || uri.endsWith(".jsp")) && ((parameterMap == null) || !parameterMap.containsKey("themeId"))) [ FD ]
Line_58 $$ String path = StringUtil.replace(uri, portalURL, StringPool.BLANK)-->Line_62 $$ if (PortalWebResourcesUtil.hasContextPath(path)) [ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_23 $$ if ((uri.endsWith(".css") || uri.endsWith(".jsp")) && ((parameterMap == null) || !parameterMap.containsKey("themeId"))) [ FD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_54 $$ sb.append(ReleaseInfo.getBuildNumber())[ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_31 $$ if ((parameterMap == null) || !parameterMap.containsKey("minifierType")) [ CD ]
Line_40 $$ if (Validator.isNotNull(minifierType)) -->Line_42 $$ sb.append(minifierType)[ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_56 $$ if (timestamp == 0) [ FD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_25 $$ sb.append(HttpUtil.encodeURL(theme.getThemeId()))[ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_10 $$ Theme theme = themeDisplay.getTheme()[ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_63 $$ timestamp = PortalWebResourcesUtil.getLastModified(PortalWebResourcesUtil.getPathResourceType(path))[ FD ]
Line_57 $$ String portalURL = getPortalURL(request)-->Line_58 $$ String path = StringUtil.replace(uri, portalURL, StringPool.BLANK)[ FD ]
Line_55 $$ if (((parameterMap == null) || !parameterMap.containsKey("t")) && !(timestamp < 0)) -->Line_68 $$ sb.append("&t=")[ CD ]
Line_9 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_34 $$ if (themeDisplay.isThemeCssFastLoad()) [ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_14 $$ parameterMap = HttpUtil.getParameterMap(queryString)[ FD ]
Line_38 $$ minifierType = "js"-->Line_40 $$ if (Validator.isNotNull(minifierType)) [ FD ]
Line_32 $$ String minifierType = StringPool.BLANK-->Line_38 $$ minifierType = "js"[ FD ]
Line_9 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_37 $$ if (themeDisplay.isThemeJsFastLoad()) [ FD ]
Line_35 $$ minifierType = "css"-->Line_40 $$ if (Validator.isNotNull(minifierType)) [ FD ]
Line_35 $$ minifierType = "css"-->Line_38 $$ minifierType = "js"[ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_7 $$ uri = uri.substring(1)[ FD ]
Line_23 $$ if ((uri.endsWith(".css") || uri.endsWith(".jsp")) && ((parameterMap == null) || !parameterMap.containsKey("themeId"))) -->Line_24 $$ sb.append("&themeId=")[ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_71 $$ String url = sb.toString()[ CD ]
Line_27 $$ if (uri.endsWith(".jsp") && ((parameterMap == null) || !parameterMap.containsKey("colorSchemeId"))) -->Line_29 $$ sb.append(HttpUtil.encodeURL(colorScheme.getColorSchemeId()))[ CD ]
Line_71 $$ String url = sb.toString()-->Line_72 $$ url = StringUtil.replace(url, "?&", StringPool.QUESTION)[ FD ]
Line_12 $$ Map<String, String[]> parameterMap = null-->Line_55 $$ if (((parameterMap == null) || !parameterMap.containsKey("t")) && !(timestamp < 0)) [ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_58 $$ String path = StringUtil.replace(uri, portalURL, StringPool.BLANK)[ FD ]
Line_45 $$ if (Validator.isNotNull(queryString)) -->Line_46 $$ if (!queryString.startsWith(StringPool.AMPERSAND)) [ CD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_52 $$ sb.append(themeDisplay.getLanguageId())[ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_45 $$ if (Validator.isNotNull(queryString)) [ CD ]
Line_56 $$ if (timestamp == 0) -->Line_57 $$ String portalURL = getPortalURL(request)[ CD ]
Line_58 $$ String path = StringUtil.replace(uri, portalURL, StringPool.BLANK)-->Line_59 $$ if (path.startsWith(StrutsUtil.TEXT_HTML_DIR)) [ FD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_68 $$ sb.append("&t=")[ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_65 $$ timestamp = theme.getTimestamp()[ FD ]
Line_14 $$ parameterMap = HttpUtil.getParameterMap(queryString)-->Line_19 $$ if ((parameterMap == null) || !parameterMap.containsKey("browserId")) [ FD ]
Line_32 $$ String minifierType = StringPool.BLANK-->Line_40 $$ if (Validator.isNotNull(minifierType)) [ FD ]
Line_12 $$ Map<String, String[]> parameterMap = null-->Line_23 $$ if ((uri.endsWith(".css") || uri.endsWith(".jsp")) && ((parameterMap == null) || !parameterMap.containsKey("themeId"))) [ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_6 $$ if (uri.startsWith(StringPool.DOUBLE_SLASH)) [ CD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_18 $$ sb.append(StringPool.QUESTION)[ FD ]
Line_9 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_52 $$ sb.append(themeDisplay.getLanguageId())[ FD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_19 $$ if ((parameterMap == null) || !parameterMap.containsKey("browserId")) [ CD ]
Line_9 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_10 $$ Theme theme = themeDisplay.getTheme()[ FD ]
Line_12 $$ Map<String, String[]> parameterMap = null-->Line_31 $$ if ((parameterMap == null) || !parameterMap.containsKey("minifierType")) [ FD ]
Line_55 $$ if (((parameterMap == null) || !parameterMap.containsKey("t")) && !(timestamp < 0)) -->Line_56 $$ if (timestamp == 0) [ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_45 $$ if (Validator.isNotNull(queryString)) [ FD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_71 $$ String url = sb.toString()[ FD ]
Line_40 $$ if (Validator.isNotNull(minifierType)) -->Line_41 $$ sb.append("&minifierType=")[ CD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_47 $$ sb.append(StringPool.AMPERSAND)[ FD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_28 $$ sb.append("&colorSchemeId=")[ FD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_24 $$ sb.append("&themeId=")[ FD ]
Line_34 $$ if (themeDisplay.isThemeCssFastLoad()) -->Line_35 $$ minifierType = "css"[ CD ]
Line_56 $$ if (timestamp == 0) -->Line_59 $$ if (path.startsWith(StrutsUtil.TEXT_HTML_DIR)) [ CD ]
Line_2 $$ public String getStaticResourceURL(HttpServletRequest request, String uri, String queryString, long timestamp) -->Line_12 $$ Map<String, String[]> parameterMap = null[ CD ]
Line_55 $$ if (((parameterMap == null) || !parameterMap.containsKey("t")) && !(timestamp < 0)) -->Line_69 $$ sb.append(timestamp)[ CD ]
Line_6 $$ if (uri.startsWith(StringPool.DOUBLE_SLASH)) -->Line_7 $$ uri = uri.substring(1)[ CD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_53 $$ sb.append("&b=")[ FD ]
Line_16 $$ StringBundler sb = new StringBundler(18)-->Line_69 $$ sb.append(timestamp)[ FD ]
Line_10 $$ Theme theme = themeDisplay.getTheme()-->Line_25 $$ sb.append(HttpUtil.encodeURL(theme.getThemeId()))[ FD ]
Line_33 $$ if (uri.endsWith(".css") || uri.endsWith("css.jsp") || (uri.endsWith(".jsp") && uri.contains("/css/"))) -->Line_37 $$ if (themeDisplay.isThemeJsFastLoad()) [ CD ]
