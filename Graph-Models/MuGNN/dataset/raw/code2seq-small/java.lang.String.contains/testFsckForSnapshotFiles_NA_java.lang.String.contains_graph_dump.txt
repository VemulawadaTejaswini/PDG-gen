Line_3 $$ final Configuration conf = new HdfsConfiguration()-->Line_16 $$ runFsck = runFsck(conf, 0, true, "/", "-files")[ FD ]
Line_14 $$ runFsck = runFsck(conf, 0, true, "/", "-includeSnapshots", "-files")-->Line_15 $$ assertTrue(runFsck.contains("/.snapshot/mySnapShot/srcdat"))[ FD ]
Line_2 $$ public void testFsckForSnapshotFiles() throws Exception -->Line_3 $$ final Configuration conf = new HdfsConfiguration()[ CD ]
Line_6 $$ String runFsck = runFsck(conf, 0, true, "/", "-includeSnapshots", "-files")-->Line_14 $$ runFsck = runFsck(conf, 0, true, "/", "-includeSnapshots", "-files")[ FD ]
Line_14 $$ runFsck = runFsck(conf, 0, true, "/", "-includeSnapshots", "-files")-->Line_17 $$ assertFalse(runFsck.contains("mySnapShot"))[ FD ]
Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_19 $$ cluster.shutdown()[ FD ]
Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_9 $$ DistributedFileSystem hdfs = cluster.getFileSystem()[ FD ]
Line_10 $$ Path file1 = new Path(fileName)-->Line_11 $$ DFSTestUtil.createFile(hdfs, file1, 1024, (short) 1, 1000L)[ FD ]
Line_6 $$ String runFsck = runFsck(conf, 0, true, "/", "-includeSnapshots", "-files")-->Line_15 $$ assertTrue(runFsck.contains("/.snapshot/mySnapShot/srcdat"))[ FD ]
Line_16 $$ runFsck = runFsck(conf, 0, true, "/", "-files")-->Line_17 $$ assertFalse(runFsck.contains("mySnapShot"))[ FD ]
Line_9 $$ DistributedFileSystem hdfs = cluster.getFileSystem()-->Line_13 $$ hdfs.createSnapshot(new Path("/"), "mySnapShot")[ FD ]
Line_9 $$ DistributedFileSystem hdfs = cluster.getFileSystem()-->Line_12 $$ hdfs.allowSnapshot(new Path("/"))[ FD ]
Line_6 $$ String runFsck = runFsck(conf, 0, true, "/", "-includeSnapshots", "-files")-->Line_7 $$ assertTrue(runFsck.contains("HEALTHY"))[ FD ]
Line_3 $$ final Configuration conf = new HdfsConfiguration()-->Line_14 $$ runFsck = runFsck(conf, 0, true, "/", "-includeSnapshots", "-files")[ FD ]
Line_6 $$ String runFsck = runFsck(conf, 0, true, "/", "-includeSnapshots", "-files")-->Line_17 $$ assertFalse(runFsck.contains("mySnapShot"))[ FD ]
Line_9 $$ DistributedFileSystem hdfs = cluster.getFileSystem()-->Line_11 $$ DFSTestUtil.createFile(hdfs, file1, 1024, (short) 1, 1000L)[ FD ]
Line_6 $$ String runFsck = runFsck(conf, 0, true, "/", "-includeSnapshots", "-files")-->Line_16 $$ runFsck = runFsck(conf, 0, true, "/", "-files")[ FD ]
Line_2 $$ public void testFsckForSnapshotFiles() throws Exception -->Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()[ CD ]
Line_3 $$ final Configuration conf = new HdfsConfiguration()-->Line_6 $$ String runFsck = runFsck(conf, 0, true, "/", "-includeSnapshots", "-files")[ FD ]
Line_14 $$ runFsck = runFsck(conf, 0, true, "/", "-includeSnapshots", "-files")-->Line_16 $$ runFsck = runFsck(conf, 0, true, "/", "-files")[ FD ]
