Line_2 $$ private void addCommentsBefore(PsiElement anchor, StringBuilder out) -->Line_18 $$ out.append(prev.getText())[ FD ]
Line_22 $$ if (next instanceof PsiWhiteSpace) -->Line_27 $$ out.append(text)[ CD ]
Line_12 $$ final PsiComment comment = (PsiComment) element-->Line_21 $$ final PsiElement next = comment.getNextSibling()[ FD ]
Line_12 $$ final PsiComment comment = (PsiComment) element-->Line_16 $$ final PsiElement prev = comment.getPrevSibling()[ FD ]
Line_6 $$ for (final Iterator<PsiElement> iterator = commentsAndWhitespace.iterator(); iterator.hasNext(); ) -->Line_8 $$ if (element.getTextOffset() >= offset) [ CD ]
Line_2 $$ private void addCommentsBefore(PsiElement anchor, StringBuilder out) -->Line_6 $$ for (final Iterator<PsiElement> iterator = commentsAndWhitespace.iterator(); iterator.hasNext(); ) [ CD ]
Line_16 $$ final PsiElement prev = comment.getPrevSibling()-->Line_18 $$ out.append(prev.getText())[ FD ]
Line_4 $$ boolean newlineAdded = false-->Line_38 $$ if (newlineEncountered && !newlineAdded && out.length() != 0) [ FD ]
Line_23 $$ final String text = next.getText()-->Line_24 $$ if (text.contains("\n")) [ FD ]
Line_5 $$ boolean newlineEncountered = false-->Line_33 $$ newlineEncountered = true[ FD ]
Line_11 $$ if (element instanceof PsiComment) -->Line_30 $$ if (element instanceof PsiWhiteSpace) [ CD ]
Line_12 $$ final PsiComment comment = (PsiComment) element-->Line_14 $$ leadingComments.add(comment)[ FD ]
Line_16 $$ final PsiElement prev = comment.getPrevSibling()-->Line_17 $$ if (prev instanceof PsiWhiteSpace) [ FD ]
Line_2 $$ private void addCommentsBefore(PsiElement anchor, StringBuilder out) -->Line_20 $$ out.append(comment.getText())[ FD ]
Line_2 $$ private void addCommentsBefore(PsiElement anchor, StringBuilder out) -->Line_38 $$ if (newlineEncountered && !newlineAdded && out.length() != 0) [ FD ]
Line_30 $$ if (element instanceof PsiWhiteSpace) -->Line_32 $$ if (text.contains("\n")) [ CD ]
Line_17 $$ if (prev instanceof PsiWhiteSpace) -->Line_18 $$ out.append(prev.getText())[ CD ]
Line_21 $$ final PsiElement next = comment.getNextSibling()-->Line_22 $$ if (next instanceof PsiWhiteSpace) [ FD ]
Line_2 $$ private void addCommentsBefore(PsiElement anchor, StringBuilder out) -->Line_5 $$ boolean newlineEncountered = false[ CD ]
Line_13 $$ if (out.length() == 0) -->Line_21 $$ final PsiElement next = comment.getNextSibling()[ CD ]
Line_7 $$ final PsiElement element = iterator.next()-->Line_11 $$ if (element instanceof PsiComment) [ FD ]
Line_2 $$ private void addCommentsBefore(PsiElement anchor, StringBuilder out) -->Line_27 $$ out.append(text)[ FD ]
Line_3 $$ final int offset = anchor.getTextOffset()-->Line_8 $$ if (element.getTextOffset() >= offset) [ FD ]
Line_25 $$ newlineAdded = true-->Line_38 $$ if (newlineEncountered && !newlineAdded && out.length() != 0) [ FD ]
Line_23 $$ final String text = next.getText()-->Line_27 $$ out.append(text)[ FD ]
Line_2 $$ private void addCommentsBefore(PsiElement anchor, StringBuilder out) -->Line_39 $$ out.append("\n")[ FD ]
Line_13 $$ if (out.length() == 0) -->Line_17 $$ if (prev instanceof PsiWhiteSpace) [ CD ]
Line_6 $$ for (final Iterator<PsiElement> iterator = commentsAndWhitespace.iterator(); iterator.hasNext(); ) -->Line_36 $$ iterator.remove()[ CD ]
Line_6 $$ for (final Iterator<PsiElement> iterator = commentsAndWhitespace.iterator(); iterator.hasNext(); ) -->Line_7 $$ final PsiElement element = iterator.next()[ FD ]
Line_6 $$ for (final Iterator<PsiElement> iterator = commentsAndWhitespace.iterator(); iterator.hasNext(); ) -->Line_11 $$ if (element instanceof PsiComment) [ CD ]
Line_7 $$ final PsiElement element = iterator.next()-->Line_31 $$ final String text = element.getText()[ FD ]
Line_2 $$ private void addCommentsBefore(PsiElement anchor, StringBuilder out) -->Line_38 $$ if (newlineEncountered && !newlineAdded && out.length() != 0) [ CD ]
Line_7 $$ final PsiElement element = iterator.next()-->Line_8 $$ if (element.getTextOffset() >= offset) [ FD ]
Line_32 $$ if (text.contains("\n")) -->Line_33 $$ newlineEncountered = true[ CD ]
Line_13 $$ if (out.length() == 0) -->Line_16 $$ final PsiElement prev = comment.getPrevSibling()[ CD ]
Line_11 $$ if (element instanceof PsiComment) -->Line_12 $$ final PsiComment comment = (PsiComment) element[ CD ]
Line_6 $$ for (final Iterator<PsiElement> iterator = commentsAndWhitespace.iterator(); iterator.hasNext(); ) -->Line_36 $$ iterator.remove()[ FD ]
Line_13 $$ if (out.length() == 0) -->Line_14 $$ leadingComments.add(comment)[ CD ]
Line_24 $$ if (text.contains("\n")) -->Line_25 $$ newlineAdded = true[ CD ]
Line_22 $$ if (next instanceof PsiWhiteSpace) -->Line_23 $$ final String text = next.getText()[ CD ]
Line_30 $$ if (element instanceof PsiWhiteSpace) -->Line_31 $$ final String text = element.getText()[ CD ]
Line_2 $$ private void addCommentsBefore(PsiElement anchor, StringBuilder out) -->Line_13 $$ if (out.length() == 0) [ FD ]
Line_2 $$ private void addCommentsBefore(PsiElement anchor, StringBuilder out) -->Line_3 $$ final int offset = anchor.getTextOffset()[ CD ]
Line_12 $$ final PsiComment comment = (PsiComment) element-->Line_20 $$ out.append(comment.getText())[ FD ]
Line_13 $$ if (out.length() == 0) -->Line_22 $$ if (next instanceof PsiWhiteSpace) [ CD ]
Line_21 $$ final PsiElement next = comment.getNextSibling()-->Line_23 $$ final String text = next.getText()[ FD ]
Line_23 $$ final String text = next.getText()-->Line_32 $$ if (text.contains("\n")) [ FD ]
Line_38 $$ if (newlineEncountered && !newlineAdded && out.length() != 0) -->Line_39 $$ out.append("\n")[ CD ]
Line_22 $$ if (next instanceof PsiWhiteSpace) -->Line_24 $$ if (text.contains("\n")) [ CD ]
Line_2 $$ private void addCommentsBefore(PsiElement anchor, StringBuilder out) -->Line_4 $$ boolean newlineAdded = false[ CD ]
Line_2 $$ private void addCommentsBefore(PsiElement anchor, StringBuilder out) -->Line_3 $$ final int offset = anchor.getTextOffset()[ FD ]
Line_6 $$ for (final Iterator<PsiElement> iterator = commentsAndWhitespace.iterator(); iterator.hasNext(); ) -->Line_7 $$ final PsiElement element = iterator.next()[ CD ]
Line_7 $$ final PsiElement element = iterator.next()-->Line_30 $$ if (element instanceof PsiWhiteSpace) [ FD ]
Line_11 $$ if (element instanceof PsiComment) -->Line_13 $$ if (out.length() == 0) [ CD ]
Line_13 $$ if (out.length() == 0) -->Line_20 $$ out.append(comment.getText())[ CD ]
Line_4 $$ boolean newlineAdded = false-->Line_25 $$ newlineAdded = true[ FD ]
