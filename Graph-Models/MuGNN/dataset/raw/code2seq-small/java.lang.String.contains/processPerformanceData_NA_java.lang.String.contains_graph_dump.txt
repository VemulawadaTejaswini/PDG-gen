Line_3 $$ JSONObject jsonObject = null-->Line_16 $$ jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/api/json"), false)[ FD ]
Line_4 $$ if (url.contains("-source")) -->Line_6 $$ _results.add(new Result(jobName, jsonObject))[ CD ]
Line_2 $$ public static void processPerformanceData(String jobName, String url, int size) throws Exception -->Line_21 $$ _results.addAll(_getSlowestResults(jobName, jsonObject, size))[ FD ]
Line_4 $$ if (url.contains("-source")) -->Line_5 $$ jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/api/json"), false)[ CD ]
Line_2 $$ public static void processPerformanceData(String jobName, String url, int size) throws Exception -->Line_37 $$ Collections.sort(_results)[ CD ]
Line_5 $$ jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/api/json"), false)-->Line_16 $$ jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/api/json"), false)[ FD ]
Line_3 $$ JSONObject jsonObject = null-->Line_21 $$ _results.addAll(_getSlowestResults(jobName, jsonObject, size))[ FD ]
Line_5 $$ jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/api/json"), false)-->Line_14 $$ jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/testReport/api/json"), false)[ FD ]
Line_14 $$ jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/testReport/api/json"), false)-->Line_16 $$ jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/api/json"), false)[ FD ]
Line_14 $$ jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/testReport/api/json"), false)-->Line_21 $$ _results.addAll(_getSlowestResults(jobName, jsonObject, size))[ FD ]
Line_2 $$ public static void processPerformanceData(String jobName, String url, int size) throws Exception -->Line_8 $$ _truncate(_results, size)[ FD ]
Line_2 $$ public static void processPerformanceData(String jobName, String url, int size) throws Exception -->Line_3 $$ JSONObject jsonObject = null[ CD ]
Line_5 $$ jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/api/json"), false)-->Line_21 $$ _results.addAll(_getSlowestResults(jobName, jsonObject, size))[ FD ]
Line_11 $$ int retryCount = 0-->Line_28 $$ retryCount++[ FD ]
Line_29 $$ if (retryCount > 5) -->Line_30 $$ System.out.println("Exceeded max retries")[ CD ]
Line_3 $$ JSONObject jsonObject = null-->Line_5 $$ jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/api/json"), false)[ FD ]
Line_4 $$ if (url.contains("-source")) -->Line_7 $$ Collections.sort(_results)[ CD ]
Line_2 $$ public static void processPerformanceData(String jobName, String url, int size) throws Exception -->Line_4 $$ if (url.contains("-source")) [ CD ]
Line_16 $$ jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/api/json"), false)-->Line_21 $$ _results.addAll(_getSlowestResults(jobName, jsonObject, size))[ FD ]
Line_24 $$ String message = iae.getMessage()-->Line_25 $$ if (!message.contains("Result is not available for ")) [ FD ]
Line_4 $$ if (url.contains("-source")) -->Line_8 $$ _truncate(_results, size)[ CD ]
Line_4 $$ if (url.contains("-source")) -->Line_9 $$ return[ CD ]
Line_3 $$ JSONObject jsonObject = null-->Line_14 $$ jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(url + "/testReport/api/json"), false)[ FD ]
Line_2 $$ public static void processPerformanceData(String jobName, String url, int size) throws Exception -->Line_38 $$ _truncate(_results, size)[ FD ]
Line_2 $$ public static void processPerformanceData(String jobName, String url, int size) throws Exception -->Line_38 $$ _truncate(_results, size)[ CD ]
Line_2 $$ public static void processPerformanceData(String jobName, String url, int size) throws Exception -->Line_4 $$ if (url.contains("-source")) [ FD ]
Line_11 $$ int retryCount = 0-->Line_29 $$ if (retryCount > 5) [ FD ]
Line_2 $$ public static void processPerformanceData(String jobName, String url, int size) throws Exception -->Line_12 $$ while (true) [ CD ]
Line_2 $$ public static void processPerformanceData(String jobName, String url, int size) throws Exception -->Line_11 $$ int retryCount = 0[ CD ]
