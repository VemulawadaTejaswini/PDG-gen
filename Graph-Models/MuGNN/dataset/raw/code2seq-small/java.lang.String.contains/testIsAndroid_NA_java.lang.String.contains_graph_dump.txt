Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_8 $$ if (line.isEmpty()) [ FD ]
Line_5 $$ String line = null-->Line_8 $$ if (line.isEmpty()) [ FD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_7 $$ line = line.trim()[ CD ]
Line_4 $$ boolean android = false-->Line_12 $$ android = true[ FD ]
Line_7 $$ line = line.trim()-->Line_20 $$ mockHttpServletRequest.addHeader(HttpHeaders.USER_AGENT, line)[ FD ]
Line_2 $$ public void testIsAndroid() throws IOException -->Line_25 $$ mockHttpServletRequest.addHeader(HttpHeaders.USER_AGENT, "Safari 6, 6.0, 536.26, mozilla/5.0 (ipad; cpu os 6_0 like mac os" + " x) applewebkit/536.26 (khtml, like gecko) version/6.0" + " mobile/10a5355d safari/8536.25")[ CD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_15 $$ if (android && (line.charAt(0) == CharPool.POUND)) [ FD ]
Line_7 $$ line = line.trim()-->Line_15 $$ if (android && (line.charAt(0) == CharPool.POUND)) [ FD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_8 $$ if (line.isEmpty()) [ CD ]
Line_12 $$ android = true-->Line_15 $$ if (android && (line.charAt(0) == CharPool.POUND)) [ FD ]
Line_7 $$ line = line.trim()-->Line_11 $$ if (line.contains("Android")) [ FD ]
Line_18 $$ if (android) -->Line_19 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()[ CD ]
Line_2 $$ public void testIsAndroid() throws IOException -->Line_4 $$ boolean android = false[ CD ]
Line_18 $$ if (android) -->Line_20 $$ mockHttpServletRequest.addHeader(HttpHeaders.USER_AGENT, line)[ CD ]
Line_5 $$ String line = null-->Line_7 $$ line = line.trim()[ FD ]
Line_7 $$ line = line.trim()-->Line_8 $$ if (line.isEmpty()) [ FD ]
Line_2 $$ public void testIsAndroid() throws IOException -->Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) [ CD ]
Line_18 $$ if (android) -->Line_21 $$ Assert.assertTrue(_browserSnifferImpl.isAndroid(mockHttpServletRequest))[ CD ]
Line_5 $$ String line = null-->Line_20 $$ mockHttpServletRequest.addHeader(HttpHeaders.USER_AGENT, line)[ FD ]
Line_5 $$ String line = null-->Line_11 $$ if (line.contains("Android")) [ FD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_7 $$ line = line.trim()[ FD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_11 $$ if (line.contains("Android")) [ FD ]
Line_19 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_20 $$ mockHttpServletRequest.addHeader(HttpHeaders.USER_AGENT, line)[ FD ]
Line_2 $$ public void testIsAndroid() throws IOException -->Line_3 $$ UnsyncBufferedReader unsyncBufferedReader = getResourceAsUnsyncBufferedReader("dependencies/user_agents.csv")[ CD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_20 $$ mockHttpServletRequest.addHeader(HttpHeaders.USER_AGENT, line)[ FD ]
Line_2 $$ public void testIsAndroid() throws IOException -->Line_24 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()[ CD ]
Line_11 $$ if (line.contains("Android")) -->Line_12 $$ android = true[ CD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_18 $$ if (android) [ CD ]
Line_3 $$ UnsyncBufferedReader unsyncBufferedReader = getResourceAsUnsyncBufferedReader("dependencies/user_agents.csv")-->Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) [ FD ]
Line_2 $$ public void testIsAndroid() throws IOException -->Line_5 $$ String line = null[ CD ]
Line_19 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_26 $$ Assert.assertFalse(_browserSnifferImpl.isAndroid(mockHttpServletRequest))[ FD ]
Line_5 $$ String line = null-->Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) [ FD ]
Line_2 $$ public void testIsAndroid() throws IOException -->Line_26 $$ Assert.assertFalse(_browserSnifferImpl.isAndroid(mockHttpServletRequest))[ CD ]
Line_5 $$ String line = null-->Line_15 $$ if (android && (line.charAt(0) == CharPool.POUND)) [ FD ]
Line_4 $$ boolean android = false-->Line_15 $$ if (android && (line.charAt(0) == CharPool.POUND)) [ FD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_11 $$ if (line.contains("Android")) [ CD ]
Line_19 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_25 $$ mockHttpServletRequest.addHeader(HttpHeaders.USER_AGENT, "Safari 6, 6.0, 536.26, mozilla/5.0 (ipad; cpu os 6_0 like mac os" + " x) applewebkit/536.26 (khtml, like gecko) version/6.0" + " mobile/10a5355d safari/8536.25")[ FD ]
Line_19 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_21 $$ Assert.assertTrue(_browserSnifferImpl.isAndroid(mockHttpServletRequest))[ FD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_15 $$ if (android && (line.charAt(0) == CharPool.POUND)) [ CD ]
Line_24 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_25 $$ mockHttpServletRequest.addHeader(HttpHeaders.USER_AGENT, "Safari 6, 6.0, 536.26, mozilla/5.0 (ipad; cpu os 6_0 like mac os" + " x) applewebkit/536.26 (khtml, like gecko) version/6.0" + " mobile/10a5355d safari/8536.25")[ FD ]
Line_24 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_26 $$ Assert.assertFalse(_browserSnifferImpl.isAndroid(mockHttpServletRequest))[ FD ]
