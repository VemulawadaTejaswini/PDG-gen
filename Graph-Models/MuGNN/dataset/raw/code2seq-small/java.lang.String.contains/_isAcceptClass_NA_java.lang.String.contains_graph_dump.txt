Line_4 $$ targetClassName = StringUtil.toLowerCase(targetClassName)-->Line_8 $$ if (targetClassName.startsWith("org.eclipse.osgi.")) [ FD ]
Line_14 $$ if (targetClassName.contains("log")) -->Line_15 $$ return false[ CD ]
Line_2 $$ private boolean _isAcceptClass(Class<?> targetClass) -->Line_37 $$ _incrementUsageCount(_typeDatasets, targetClass.getName())[ FD ]
Line_3 $$ String targetClassName = targetClass.getName()-->Line_11 $$ if (targetClassName.startsWith("sun.misc.")) [ FD ]
Line_4 $$ targetClassName = StringUtil.toLowerCase(targetClassName)-->Line_11 $$ if (targetClassName.startsWith("sun.misc.")) [ FD ]
Line_2 $$ private boolean _isAcceptClass(Class<?> targetClass) -->Line_17 $$ if (_excludedClassNames != null) [ CD ]
Line_24 $$ if (_includedClassNames != null) -->Line_25 $$ boolean accept = false[ CD ]
Line_25 $$ boolean accept = false-->Line_32 $$ if (!accept) [ FD ]
Line_4 $$ targetClassName = StringUtil.toLowerCase(targetClassName)-->Line_27 $$ if (targetClassName.contains(includedClassName)) [ FD ]
Line_18 $$ for (String excludedClassName : _excludedClassNames) -->Line_19 $$ if (targetClassName.contains(excludedClassName)) [ FD ]
Line_11 $$ if (targetClassName.startsWith("sun.misc.")) -->Line_12 $$ return false[ CD ]
Line_24 $$ if (_includedClassNames != null) -->Line_32 $$ if (!accept) [ CD ]
Line_4 $$ targetClassName = StringUtil.toLowerCase(targetClassName)-->Line_14 $$ if (targetClassName.contains("log")) [ FD ]
Line_3 $$ String targetClassName = targetClass.getName()-->Line_8 $$ if (targetClassName.startsWith("org.eclipse.osgi.")) [ FD ]
Line_2 $$ private boolean _isAcceptClass(Class<?> targetClass) -->Line_24 $$ if (_includedClassNames != null) [ CD ]
Line_3 $$ String targetClassName = targetClass.getName()-->Line_4 $$ targetClassName = StringUtil.toLowerCase(targetClassName)[ FD ]
Line_36 $$ if (_trackUsageCount) -->Line_37 $$ _incrementUsageCount(_typeDatasets, targetClass.getName())[ CD ]
Line_3 $$ String targetClassName = targetClass.getName()-->Line_27 $$ if (targetClassName.contains(includedClassName)) [ FD ]
Line_28 $$ accept = true-->Line_32 $$ if (!accept) [ FD ]
Line_3 $$ String targetClassName = targetClass.getName()-->Line_19 $$ if (targetClassName.contains(excludedClassName)) [ FD ]
Line_2 $$ private boolean _isAcceptClass(Class<?> targetClass) -->Line_39 $$ return true[ CD ]
Line_2 $$ private boolean _isAcceptClass(Class<?> targetClass) -->Line_3 $$ String targetClassName = targetClass.getName()[ FD ]
Line_2 $$ private boolean _isAcceptClass(Class<?> targetClass) -->Line_5 $$ if (targetClassName.startsWith("java.")) [ CD ]
Line_26 $$ for (String includedClassName : _includedClassNames) -->Line_27 $$ if (targetClassName.contains(includedClassName)) [ FD ]
Line_19 $$ if (targetClassName.contains(excludedClassName)) -->Line_20 $$ return false[ CD ]
Line_2 $$ private boolean _isAcceptClass(Class<?> targetClass) -->Line_36 $$ if (_trackUsageCount) [ CD ]
Line_8 $$ if (targetClassName.startsWith("org.eclipse.osgi.")) -->Line_9 $$ return false[ CD ]
Line_25 $$ boolean accept = false-->Line_28 $$ accept = true[ FD ]
Line_2 $$ private boolean _isAcceptClass(Class<?> targetClass) -->Line_14 $$ if (targetClassName.contains("log")) [ CD ]
Line_2 $$ private boolean _isAcceptClass(Class<?> targetClass) -->Line_11 $$ if (targetClassName.startsWith("sun.misc.")) [ CD ]
Line_2 $$ private boolean _isAcceptClass(Class<?> targetClass) -->Line_4 $$ targetClassName = StringUtil.toLowerCase(targetClassName)[ CD ]
Line_2 $$ private boolean _isAcceptClass(Class<?> targetClass) -->Line_8 $$ if (targetClassName.startsWith("org.eclipse.osgi.")) [ CD ]
Line_4 $$ targetClassName = StringUtil.toLowerCase(targetClassName)-->Line_5 $$ if (targetClassName.startsWith("java.")) [ FD ]
Line_27 $$ if (targetClassName.contains(includedClassName)) -->Line_28 $$ accept = true[ CD ]
Line_3 $$ String targetClassName = targetClass.getName()-->Line_14 $$ if (targetClassName.contains("log")) [ FD ]
Line_4 $$ targetClassName = StringUtil.toLowerCase(targetClassName)-->Line_19 $$ if (targetClassName.contains(excludedClassName)) [ FD ]
Line_2 $$ private boolean _isAcceptClass(Class<?> targetClass) -->Line_3 $$ String targetClassName = targetClass.getName()[ CD ]
Line_3 $$ String targetClassName = targetClass.getName()-->Line_5 $$ if (targetClassName.startsWith("java.")) [ FD ]
Line_32 $$ if (!accept) -->Line_33 $$ return false[ CD ]
Line_5 $$ if (targetClassName.startsWith("java.")) -->Line_6 $$ return false[ CD ]
