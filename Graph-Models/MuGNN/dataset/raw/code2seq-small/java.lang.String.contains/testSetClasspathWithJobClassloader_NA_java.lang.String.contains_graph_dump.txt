Line_8 $$ String cp = env.get("CLASSPATH")-->Line_10 $$ assertFalse("MAPREDUCE_JOB_CLASSLOADER true, but job.jar is in the" + " classpath!", cp.contains("jar" + ApplicationConstants.CLASS_PATH_SEPARATOR + "job"))[ FD ]
Line_2 $$ public void testSetClasspathWithJobClassloader() throws IOException -->Line_13 $$ assertEquals("MAPREDUCE_JOB_CLASSLOADER true, but job.jar is not in the app" + " classpath!", expectedAppClasspath, appCp)[ CD ]
Line_2 $$ public void testSetClasspathWithJobClassloader() throws IOException -->Line_11 $$ assertFalse("MAPREDUCE_JOB_CLASSLOADER true, but PWD is in the classpath!", cp.contains("PWD"))[ CD ]
Line_9 $$ String appCp = env.get("APP_CLASSPATH")-->Line_13 $$ assertEquals("MAPREDUCE_JOB_CLASSLOADER true, but job.jar is not in the app" + " classpath!", expectedAppClasspath, appCp)[ FD ]
Line_6 $$ Map<String, String> env = new HashMap<String, String>()-->Line_7 $$ MRApps.setClasspath(env, conf)[ FD ]
Line_6 $$ Map<String, String> env = new HashMap<String, String>()-->Line_8 $$ String cp = env.get("CLASSPATH")[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_5 $$ conf.setBoolean(MRJobConfig.MAPREDUCE_JOB_CLASSLOADER, true)[ FD ]
Line_2 $$ public void testSetClasspathWithJobClassloader() throws IOException -->Line_9 $$ String appCp = env.get("APP_CLASSPATH")[ CD ]
Line_2 $$ public void testSetClasspathWithJobClassloader() throws IOException -->Line_8 $$ String cp = env.get("CLASSPATH")[ CD ]
Line_6 $$ Map<String, String> env = new HashMap<String, String>()-->Line_9 $$ String appCp = env.get("APP_CLASSPATH")[ FD ]
Line_2 $$ public void testSetClasspathWithJobClassloader() throws IOException -->Line_4 $$ conf.setBoolean(MRConfig.MAPREDUCE_APP_SUBMISSION_CROSS_PLATFORM, true)[ CD ]
Line_2 $$ public void testSetClasspathWithJobClassloader() throws IOException -->Line_7 $$ MRApps.setClasspath(env, conf)[ CD ]
Line_2 $$ public void testSetClasspathWithJobClassloader() throws IOException -->Line_6 $$ Map<String, String> env = new HashMap<String, String>()[ CD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_4 $$ conf.setBoolean(MRConfig.MAPREDUCE_APP_SUBMISSION_CROSS_PLATFORM, true)[ FD ]
Line_2 $$ public void testSetClasspathWithJobClassloader() throws IOException -->Line_5 $$ conf.setBoolean(MRJobConfig.MAPREDUCE_JOB_CLASSLOADER, true)[ CD ]
Line_2 $$ public void testSetClasspathWithJobClassloader() throws IOException -->Line_3 $$ Configuration conf = new Configuration()[ CD ]
Line_2 $$ public void testSetClasspathWithJobClassloader() throws IOException -->Line_10 $$ assertFalse("MAPREDUCE_JOB_CLASSLOADER true, but job.jar is in the" + " classpath!", cp.contains("jar" + ApplicationConstants.CLASS_PATH_SEPARATOR + "job"))[ CD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_7 $$ MRApps.setClasspath(env, conf)[ FD ]
Line_8 $$ String cp = env.get("CLASSPATH")-->Line_11 $$ assertFalse("MAPREDUCE_JOB_CLASSLOADER true, but PWD is in the classpath!", cp.contains("PWD"))[ FD ]
