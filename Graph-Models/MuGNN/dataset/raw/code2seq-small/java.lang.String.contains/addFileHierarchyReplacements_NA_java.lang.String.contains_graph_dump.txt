Line_2 $$ protected static void addFileHierarchyReplacements(ReplacePathToMacroMap result, String macroName, @Nullable String path, @Nullable String stopAt) -->Line_3 $$ if (path == null) [ FD ]
Line_6 $$ String macro = '$' + macroName + '$'-->Line_14 $$ macro += "/.."[ FD ]
Line_2 $$ protected static void addFileHierarchyReplacements(ReplacePathToMacroMap result, String macroName, @Nullable String path, @Nullable String stopAt) -->Line_7 $$ path = StringUtil.trimEnd(FileUtil.toSystemIndependentName(path), "/")[ CD ]
Line_9 $$ while (StringUtil.isNotEmpty(path) && path.contains("/")) -->Line_11 $$ if (path.equals(stopAt)) [ CD ]
Line_9 $$ while (StringUtil.isNotEmpty(path) && path.contains("/")) -->Line_10 $$ result.addReplacement(path, macro, overwrite)[ CD ]
Line_2 $$ protected static void addFileHierarchyReplacements(ReplacePathToMacroMap result, String macroName, @Nullable String path, @Nullable String stopAt) -->Line_8 $$ boolean overwrite = true[ CD ]
Line_2 $$ protected static void addFileHierarchyReplacements(ReplacePathToMacroMap result, String macroName, @Nullable String path, @Nullable String stopAt) -->Line_6 $$ String macro = '$' + macroName + '$'[ CD ]
Line_2 $$ protected static void addFileHierarchyReplacements(ReplacePathToMacroMap result, String macroName, @Nullable String path, @Nullable String stopAt) -->Line_9 $$ while (StringUtil.isNotEmpty(path) && path.contains("/")) [ CD ]
Line_8 $$ boolean overwrite = true-->Line_15 $$ overwrite = false[ FD ]
Line_2 $$ protected static void addFileHierarchyReplacements(ReplacePathToMacroMap result, String macroName, @Nullable String path, @Nullable String stopAt) -->Line_16 $$ path = StringUtil.getPackageName(path, '/')[ FD ]
Line_9 $$ while (StringUtil.isNotEmpty(path) && path.contains("/")) -->Line_15 $$ overwrite = false[ CD ]
Line_2 $$ protected static void addFileHierarchyReplacements(ReplacePathToMacroMap result, String macroName, @Nullable String path, @Nullable String stopAt) -->Line_10 $$ result.addReplacement(path, macro, overwrite)[ FD ]
Line_6 $$ String macro = '$' + macroName + '$'-->Line_10 $$ result.addReplacement(path, macro, overwrite)[ FD ]
Line_2 $$ protected static void addFileHierarchyReplacements(ReplacePathToMacroMap result, String macroName, @Nullable String path, @Nullable String stopAt) -->Line_9 $$ while (StringUtil.isNotEmpty(path) && path.contains("/")) [ FD ]
Line_3 $$ if (path == null) -->Line_4 $$ return[ CD ]
Line_2 $$ protected static void addFileHierarchyReplacements(ReplacePathToMacroMap result, String macroName, @Nullable String path, @Nullable String stopAt) -->Line_3 $$ if (path == null) [ CD ]
Line_9 $$ while (StringUtil.isNotEmpty(path) && path.contains("/")) -->Line_14 $$ macro += "/.."[ CD ]
Line_15 $$ overwrite = false-->Line_10 $$ result.addReplacement(path, macro, overwrite)[ FD ]
Line_9 $$ while (StringUtil.isNotEmpty(path) && path.contains("/")) -->Line_16 $$ path = StringUtil.getPackageName(path, '/')[ CD ]
Line_8 $$ boolean overwrite = true-->Line_10 $$ result.addReplacement(path, macro, overwrite)[ FD ]
Line_2 $$ protected static void addFileHierarchyReplacements(ReplacePathToMacroMap result, String macroName, @Nullable String path, @Nullable String stopAt) -->Line_11 $$ if (path.equals(stopAt)) [ FD ]
Line_14 $$ macro += "/.."-->Line_10 $$ result.addReplacement(path, macro, overwrite)[ FD ]
Line_2 $$ protected static void addFileHierarchyReplacements(ReplacePathToMacroMap result, String macroName, @Nullable String path, @Nullable String stopAt) -->Line_7 $$ path = StringUtil.trimEnd(FileUtil.toSystemIndependentName(path), "/")[ FD ]
