Line_16 $$ while (tokenizer.hasMoreTokens()) -->Line_17 $$ final String token = tokenizer.nextToken()[ CD ]
Line_4 $$ if (userObject instanceof ItemElement) -->Line_24 $$ return super.isMatchingElement(element, pattern)[ CD ]
Line_4 $$ if (userObject instanceof ItemElement) -->Line_15 $$ final StringTokenizer tokenizer = new StringTokenizer(str, File.separator)[ CD ]
Line_2 $$ public boolean isMatchingElement(Object element, String pattern) -->Line_9 $$ if (!hasCapitals(pattern)) [ FD ]
Line_10 $$ str = str.toLowerCase()-->Line_13 $$ return compare(str, pattern)[ FD ]
Line_9 $$ if (!hasCapitals(pattern)) -->Line_10 $$ str = str.toLowerCase()[ CD ]
Line_4 $$ if (userObject instanceof ItemElement) -->Line_5 $$ String str = getElementText(element)[ CD ]
Line_4 $$ if (userObject instanceof ItemElement) -->Line_22 $$ return false[ CD ]
Line_5 $$ String str = getElementText(element)-->Line_13 $$ return compare(str, pattern)[ FD ]
Line_6 $$ if (str == null) -->Line_7 $$ return false[ CD ]
Line_2 $$ public boolean isMatchingElement(Object element, String pattern) -->Line_13 $$ return compare(str, pattern)[ FD ]
Line_5 $$ String str = getElementText(element)-->Line_6 $$ if (str == null) [ FD ]
Line_16 $$ while (tokenizer.hasMoreTokens()) -->Line_18 $$ if (compare(token, pattern)) [ CD ]
Line_2 $$ public boolean isMatchingElement(Object element, String pattern) -->Line_4 $$ if (userObject instanceof ItemElement) [ CD ]
Line_2 $$ public boolean isMatchingElement(Object element, String pattern) -->Line_18 $$ if (compare(token, pattern)) [ FD ]
Line_17 $$ final String token = tokenizer.nextToken()-->Line_18 $$ if (compare(token, pattern)) [ FD ]
Line_2 $$ public boolean isMatchingElement(Object element, String pattern) -->Line_5 $$ String str = getElementText(element)[ FD ]
Line_18 $$ if (compare(token, pattern)) -->Line_19 $$ return true[ CD ]
Line_4 $$ if (userObject instanceof ItemElement) -->Line_12 $$ if (pattern.contains(File.separator)) [ CD ]
Line_5 $$ String str = getElementText(element)-->Line_10 $$ str = str.toLowerCase()[ FD ]
Line_3 $$ Object userObject = ((DefaultMutableTreeNode) ((TreePath) element).getLastPathComponent()).getUserObject()-->Line_4 $$ if (userObject instanceof ItemElement) [ FD ]
Line_15 $$ final StringTokenizer tokenizer = new StringTokenizer(str, File.separator)-->Line_16 $$ while (tokenizer.hasMoreTokens()) [ FD ]
Line_2 $$ public boolean isMatchingElement(Object element, String pattern) -->Line_12 $$ if (pattern.contains(File.separator)) [ FD ]
Line_2 $$ public boolean isMatchingElement(Object element, String pattern) -->Line_24 $$ return super.isMatchingElement(element, pattern)[ FD ]
Line_15 $$ final StringTokenizer tokenizer = new StringTokenizer(str, File.separator)-->Line_17 $$ final String token = tokenizer.nextToken()[ FD ]
Line_4 $$ if (userObject instanceof ItemElement) -->Line_6 $$ if (str == null) [ CD ]
Line_12 $$ if (pattern.contains(File.separator)) -->Line_13 $$ return compare(str, pattern)[ CD ]
Line_4 $$ if (userObject instanceof ItemElement) -->Line_16 $$ while (tokenizer.hasMoreTokens()) [ CD ]
Line_4 $$ if (userObject instanceof ItemElement) -->Line_9 $$ if (!hasCapitals(pattern)) [ CD ]
Line_2 $$ public boolean isMatchingElement(Object element, String pattern) -->Line_3 $$ Object userObject = ((DefaultMutableTreeNode) ((TreePath) element).getLastPathComponent()).getUserObject()[ CD ]
