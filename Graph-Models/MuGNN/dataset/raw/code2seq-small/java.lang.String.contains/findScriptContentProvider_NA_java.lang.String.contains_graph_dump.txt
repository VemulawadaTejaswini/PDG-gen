Line_12 $$ if (scriptContentProvider != null) -->Line_13 $$ return scriptContentProvider[ CD ]
Line_2 $$ protected static HtmlScriptContentProvider findScriptContentProvider(@Nullable String mimeType) -->Line_7 $$ if (instancesByMimeType.isEmpty() && mimeType.contains("template")) [ FD ]
Line_2 $$ protected static HtmlScriptContentProvider findScriptContentProvider(@Nullable String mimeType) -->Line_16 $$ return null[ CD ]
Line_3 $$ if (StringUtil.isEmpty(mimeType)) -->Line_4 $$ return ourDefaultLanguage != null ? LanguageHtmlScriptContentProvider.getScriptContentProvider(ourDefaultLanguage) : null[ CD ]
Line_6 $$ Collection<Language> instancesByMimeType = Language.findInstancesByMimeType(mimeType.trim())-->Line_7 $$ if (instancesByMimeType.isEmpty() && mimeType.contains("template")) [ FD ]
Line_6 $$ Collection<Language> instancesByMimeType = Language.findInstancesByMimeType(mimeType.trim())-->Line_8 $$ instancesByMimeType = Collections.<Language>singletonList(HTMLLanguage.INSTANCE)[ FD ]
Line_11 $$ HtmlScriptContentProvider scriptContentProvider = LanguageHtmlScriptContentProvider.getScriptContentProvider(language)-->Line_12 $$ if (scriptContentProvider != null) [ FD ]
Line_2 $$ protected static HtmlScriptContentProvider findScriptContentProvider(@Nullable String mimeType) -->Line_7 $$ if (instancesByMimeType.isEmpty() && mimeType.contains("template")) [ CD ]
Line_2 $$ protected static HtmlScriptContentProvider findScriptContentProvider(@Nullable String mimeType) -->Line_3 $$ if (StringUtil.isEmpty(mimeType)) [ FD ]
Line_2 $$ protected static HtmlScriptContentProvider findScriptContentProvider(@Nullable String mimeType) -->Line_6 $$ Collection<Language> instancesByMimeType = Language.findInstancesByMimeType(mimeType.trim())[ FD ]
Line_10 $$ for (Language language : instancesByMimeType) -->Line_11 $$ HtmlScriptContentProvider scriptContentProvider = LanguageHtmlScriptContentProvider.getScriptContentProvider(language)[ FD ]
Line_2 $$ protected static HtmlScriptContentProvider findScriptContentProvider(@Nullable String mimeType) -->Line_6 $$ Collection<Language> instancesByMimeType = Language.findInstancesByMimeType(mimeType.trim())[ CD ]
Line_7 $$ if (instancesByMimeType.isEmpty() && mimeType.contains("template")) -->Line_8 $$ instancesByMimeType = Collections.<Language>singletonList(HTMLLanguage.INSTANCE)[ CD ]
Line_2 $$ protected static HtmlScriptContentProvider findScriptContentProvider(@Nullable String mimeType) -->Line_3 $$ if (StringUtil.isEmpty(mimeType)) [ CD ]
