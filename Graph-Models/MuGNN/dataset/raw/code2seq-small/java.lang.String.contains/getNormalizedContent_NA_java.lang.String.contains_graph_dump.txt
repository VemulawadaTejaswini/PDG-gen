Line_20 $$ StringBundler sb = new StringBundler()-->Line_37 $$ content = sb.toString()[ FD ]
Line_20 $$ StringBundler sb = new StringBundler()-->Line_34 $$ sb.append(line)[ FD ]
Line_3 $$ String content = readFile(fileName)-->Line_6 $$ int y = content.indexOf("</tbody>")[ FD ]
Line_24 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_29 $$ line = StringUtil.replace(line, matcher.group(), matcher.group() + " line-number=\"" + lineNumber + "\"")[ FD ]
Line_2 $$ public String getNormalizedContent(String fileName) throws Exception -->Line_8 $$ throwValidationException(1002, fileName, "tbody")[ FD ]
Line_40 $$ content = StringUtil.replace(content, "\n", "")-->Line_41 $$ content = StringUtil.replace(content, "\r\n", "")[ FD ]
Line_16 $$ content = newContent-->Line_38 $$ if (content != null) [ FD ]
Line_39 $$ content = content.trim()-->Line_43 $$ content = content.replaceAll(" +", " ")[ FD ]
Line_14 $$ String newContent = processTemplate("path_xml.ftl", context)-->Line_15 $$ if (!content.equals(newContent)) [ FD ]
Line_4 $$ if (fileName.endsWith(".path")) -->Line_12 $$ context.put("pathName", getName(fileName))[ CD ]
Line_37 $$ content = sb.toString()-->Line_42 $$ content = StringUtil.replace(content, "\t", " ")[ FD ]
Line_2 $$ public String getNormalizedContent(String fileName) throws Exception -->Line_12 $$ context.put("pathName", getName(fileName))[ FD ]
Line_24 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_25 $$ Matcher matcher = _tagPattern.matcher(line)[ FD ]
Line_11 $$ Map<String, Object> context = new HashMap()-->Line_13 $$ context.put("pathTbody", pathTbody)[ FD ]
Line_37 $$ content = sb.toString()-->Line_43 $$ content = content.replaceAll(" +", " ")[ FD ]
Line_15 $$ if (!content.equals(newContent)) -->Line_17 $$ writeFile(getBaseDirName(), fileName, newContent, false)[ CD ]
Line_25 $$ Matcher matcher = _tagPattern.matcher(line)-->Line_26 $$ if (matcher.find()) [ FD ]
Line_41 $$ content = StringUtil.replace(content, "\r\n", "")-->Line_43 $$ content = content.replaceAll(" +", " ")[ FD ]
Line_29 $$ line = StringUtil.replace(line, matcher.group(), matcher.group() + " line-number=\"" + lineNumber + "\"")-->Line_28 $$ if (line.contains("<" + reservedTag)) [ FD ]
Line_24 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_35 $$ lineNumber++[ CD ]
Line_23 $$ String line = null-->Line_34 $$ sb.append(line)[ FD ]
Line_37 $$ content = sb.toString()-->Line_39 $$ content = content.trim()[ FD ]
Line_2 $$ public String getNormalizedContent(String fileName) throws Exception -->Line_17 $$ writeFile(getBaseDirName(), fileName, newContent, false)[ FD ]
Line_4 $$ if (fileName.endsWith(".path")) -->Line_14 $$ String newContent = processTemplate("path_xml.ftl", context)[ CD ]
Line_16 $$ content = newContent-->Line_37 $$ content = sb.toString()[ FD ]
Line_11 $$ Map<String, Object> context = new HashMap()-->Line_12 $$ context.put("pathName", getName(fileName))[ FD ]
Line_24 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_26 $$ if (matcher.find()) [ CD ]
Line_4 $$ if (fileName.endsWith(".path")) -->Line_10 $$ String pathTbody = content.substring(x, y + 8)[ CD ]
Line_38 $$ if (content != null) -->Line_39 $$ content = content.trim()[ CD ]
Line_7 $$ if ((x == -1) || (y == -1)) -->Line_8 $$ throwValidationException(1002, fileName, "tbody")[ CD ]
Line_4 $$ if (fileName.endsWith(".path")) -->Line_15 $$ if (!content.equals(newContent)) [ CD ]
Line_16 $$ content = newContent-->Line_42 $$ content = StringUtil.replace(content, "\t", " ")[ FD ]
Line_39 $$ content = content.trim()-->Line_42 $$ content = StringUtil.replace(content, "\t", " ")[ FD ]
Line_2 $$ public String getNormalizedContent(String fileName) throws Exception -->Line_22 $$ UnsyncBufferedReader unsyncBufferedReader = new UnsyncBufferedReader(new UnsyncStringReader(content))[ CD ]
Line_15 $$ if (!content.equals(newContent)) -->Line_16 $$ content = newContent[ CD ]
Line_14 $$ String newContent = processTemplate("path_xml.ftl", context)-->Line_17 $$ writeFile(getBaseDirName(), fileName, newContent, false)[ FD ]
Line_4 $$ if (fileName.endsWith(".path")) -->Line_11 $$ Map<String, Object> context = new HashMap()[ CD ]
Line_2 $$ public String getNormalizedContent(String fileName) throws Exception -->Line_24 $$ while ((line = unsyncBufferedReader.readLine()) != null) [ CD ]
Line_2 $$ public String getNormalizedContent(String fileName) throws Exception -->Line_45 $$ return content[ CD ]
Line_2 $$ public String getNormalizedContent(String fileName) throws Exception -->Line_23 $$ String line = null[ CD ]
Line_16 $$ content = newContent-->Line_41 $$ content = StringUtil.replace(content, "\r\n", "")[ FD ]
Line_2 $$ public String getNormalizedContent(String fileName) throws Exception -->Line_4 $$ if (fileName.endsWith(".path")) [ FD ]
Line_2 $$ public String getNormalizedContent(String fileName) throws Exception -->Line_38 $$ if (content != null) [ CD ]
Line_3 $$ String content = readFile(fileName)-->Line_10 $$ String pathTbody = content.substring(x, y + 8)[ FD ]
Line_40 $$ content = StringUtil.replace(content, "\n", "")-->Line_42 $$ content = StringUtil.replace(content, "\t", " ")[ FD ]
Line_3 $$ String content = readFile(fileName)-->Line_37 $$ content = sb.toString()[ FD ]
Line_37 $$ content = sb.toString()-->Line_41 $$ content = StringUtil.replace(content, "\r\n", "")[ FD ]
Line_3 $$ String content = readFile(fileName)-->Line_40 $$ content = StringUtil.replace(content, "\n", "")[ FD ]
Line_38 $$ if (content != null) -->Line_40 $$ content = StringUtil.replace(content, "\n", "")[ CD ]
Line_3 $$ String content = readFile(fileName)-->Line_42 $$ content = StringUtil.replace(content, "\t", " ")[ FD ]
Line_24 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_28 $$ if (line.contains("<" + reservedTag)) [ FD ]
Line_2 $$ public String getNormalizedContent(String fileName) throws Exception -->Line_4 $$ if (fileName.endsWith(".path")) [ CD ]
Line_5 $$ int x = content.indexOf("<tbody>")-->Line_10 $$ String pathTbody = content.substring(x, y + 8)[ FD ]
Line_3 $$ String content = readFile(fileName)-->Line_39 $$ content = content.trim()[ FD ]
Line_4 $$ if (fileName.endsWith(".path")) -->Line_7 $$ if ((x == -1) || (y == -1)) [ CD ]
Line_3 $$ String content = readFile(fileName)-->Line_38 $$ if (content != null) [ FD ]
Line_14 $$ String newContent = processTemplate("path_xml.ftl", context)-->Line_16 $$ content = newContent[ FD ]
Line_2 $$ public String getNormalizedContent(String fileName) throws Exception -->Line_3 $$ String content = readFile(fileName)[ FD ]
Line_40 $$ content = StringUtil.replace(content, "\n", "")-->Line_43 $$ content = content.replaceAll(" +", " ")[ FD ]
Line_38 $$ if (content != null) -->Line_41 $$ content = StringUtil.replace(content, "\r\n", "")[ CD ]
Line_24 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_34 $$ sb.append(line)[ CD ]
Line_41 $$ content = StringUtil.replace(content, "\r\n", "")-->Line_42 $$ content = StringUtil.replace(content, "\t", " ")[ FD ]
Line_38 $$ if (content != null) -->Line_42 $$ content = StringUtil.replace(content, "\t", " ")[ CD ]
Line_3 $$ String content = readFile(fileName)-->Line_16 $$ content = newContent[ FD ]
Line_16 $$ content = newContent-->Line_39 $$ content = content.trim()[ FD ]
Line_39 $$ content = content.trim()-->Line_41 $$ content = StringUtil.replace(content, "\r\n", "")[ FD ]
Line_11 $$ Map<String, Object> context = new HashMap()-->Line_14 $$ String newContent = processTemplate("path_xml.ftl", context)[ FD ]
Line_24 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_25 $$ Matcher matcher = _tagPattern.matcher(line)[ CD ]
Line_16 $$ content = newContent-->Line_40 $$ content = StringUtil.replace(content, "\n", "")[ FD ]
Line_37 $$ content = sb.toString()-->Line_38 $$ if (content != null) [ FD ]
Line_16 $$ content = newContent-->Line_43 $$ content = content.replaceAll(" +", " ")[ FD ]
Line_22 $$ UnsyncBufferedReader unsyncBufferedReader = new UnsyncBufferedReader(new UnsyncStringReader(content))-->Line_24 $$ while ((line = unsyncBufferedReader.readLine()) != null) [ FD ]
Line_3 $$ String content = readFile(fileName)-->Line_43 $$ content = content.replaceAll(" +", " ")[ FD ]
Line_25 $$ Matcher matcher = _tagPattern.matcher(line)-->Line_29 $$ line = StringUtil.replace(line, matcher.group(), matcher.group() + " line-number=\"" + lineNumber + "\"")[ FD ]
Line_24 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_34 $$ sb.append(line)[ FD ]
Line_2 $$ public String getNormalizedContent(String fileName) throws Exception -->Line_37 $$ content = sb.toString()[ CD ]
Line_37 $$ content = sb.toString()-->Line_40 $$ content = StringUtil.replace(content, "\n", "")[ FD ]
Line_39 $$ content = content.trim()-->Line_40 $$ content = StringUtil.replace(content, "\n", "")[ FD ]
Line_21 $$ int lineNumber = 1-->Line_35 $$ lineNumber++[ FD ]
Line_4 $$ if (fileName.endsWith(".path")) -->Line_6 $$ int y = content.indexOf("</tbody>")[ CD ]
Line_2 $$ public String getNormalizedContent(String fileName) throws Exception -->Line_21 $$ int lineNumber = 1[ CD ]
Line_4 $$ if (fileName.endsWith(".path")) -->Line_13 $$ context.put("pathTbody", pathTbody)[ CD ]
Line_23 $$ String line = null-->Line_28 $$ if (line.contains("<" + reservedTag)) [ FD ]
Line_23 $$ String line = null-->Line_29 $$ line = StringUtil.replace(line, matcher.group(), matcher.group() + " line-number=\"" + lineNumber + "\"")[ FD ]
Line_3 $$ String content = readFile(fileName)-->Line_15 $$ if (!content.equals(newContent)) [ FD ]
Line_3 $$ String content = readFile(fileName)-->Line_41 $$ content = StringUtil.replace(content, "\r\n", "")[ FD ]
Line_23 $$ String line = null-->Line_25 $$ Matcher matcher = _tagPattern.matcher(line)[ FD ]
Line_4 $$ if (fileName.endsWith(".path")) -->Line_5 $$ int x = content.indexOf("<tbody>")[ CD ]
Line_38 $$ if (content != null) -->Line_43 $$ content = content.replaceAll(" +", " ")[ CD ]
Line_3 $$ String content = readFile(fileName)-->Line_5 $$ int x = content.indexOf("<tbody>")[ FD ]
Line_42 $$ content = StringUtil.replace(content, "\t", " ")-->Line_43 $$ content = content.replaceAll(" +", " ")[ FD ]
Line_10 $$ String pathTbody = content.substring(x, y + 8)-->Line_13 $$ context.put("pathTbody", pathTbody)[ FD ]
Line_28 $$ if (line.contains("<" + reservedTag)) -->Line_29 $$ line = StringUtil.replace(line, matcher.group(), matcher.group() + " line-number=\"" + lineNumber + "\"")[ CD ]
Line_2 $$ public String getNormalizedContent(String fileName) throws Exception -->Line_3 $$ String content = readFile(fileName)[ CD ]
Line_29 $$ line = StringUtil.replace(line, matcher.group(), matcher.group() + " line-number=\"" + lineNumber + "\"")-->Line_34 $$ sb.append(line)[ FD ]
Line_23 $$ String line = null-->Line_24 $$ while ((line = unsyncBufferedReader.readLine()) != null) [ FD ]
Line_29 $$ line = StringUtil.replace(line, matcher.group(), matcher.group() + " line-number=\"" + lineNumber + "\"")-->Line_25 $$ Matcher matcher = _tagPattern.matcher(line)[ FD ]
Line_2 $$ public String getNormalizedContent(String fileName) throws Exception -->Line_20 $$ StringBundler sb = new StringBundler()[ CD ]
