Line_10 $$ redirectLocation = PicketLinkTestBase.makeCallWithoutRedirect(redirectLocation, httpClient)-->Line_11 $$ redirectLocation = PicketLinkTestBase.makeCallWithoutRedirect(redirectLocation, httpClient)[ FD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_6 $$ httpClient.getCredentialsProvider().setCredentials(new AuthScope(null, idpUrl.getPort()), credentials)[ FD ]
Line_11 $$ redirectLocation = PicketLinkTestBase.makeCallWithoutRedirect(redirectLocation, httpClient)-->Line_12 $$ response = PicketLinkTestBase.makeCall(redirectLocation, httpClient, 200)[ FD ]
Line_5 $$ final UsernamePasswordCredentials credentials = new UsernamePasswordCredentials(PicketLinkTestBase.ANIL, PicketLinkTestBase.ANIL)-->Line_6 $$ httpClient.getCredentialsProvider().setCredentials(new AuthScope(null, idpUrl.getPort()), credentials)[ FD ]
Line_9 $$ URL redirectLocation = PicketLinkTestBase.makeCallWithoutRedirect(sp2Url, httpClient)-->Line_11 $$ redirectLocation = PicketLinkTestBase.makeCallWithoutRedirect(redirectLocation, httpClient)[ FD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_12 $$ response = PicketLinkTestBase.makeCall(redirectLocation, httpClient, 200)[ FD ]
Line_2 $$ public void testRedirectSP() throws Exception -->Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()[ CD ]
Line_9 $$ URL redirectLocation = PicketLinkTestBase.makeCallWithoutRedirect(sp2Url, httpClient)-->Line_10 $$ redirectLocation = PicketLinkTestBase.makeCallWithoutRedirect(redirectLocation, httpClient)[ FD ]
Line_7 $$ String response = PicketLinkTestBase.makeCall(idpUrl, httpClient, 200)-->Line_12 $$ response = PicketLinkTestBase.makeCall(redirectLocation, httpClient, 200)[ FD ]
Line_7 $$ String response = PicketLinkTestBase.makeCall(idpUrl, httpClient, 200)-->Line_8 $$ assertTrue("IdP index page was not reached", response.contains("Welcome to IdP"))[ FD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_15 $$ httpClient.getConnectionManager().shutdown()[ FD ]
Line_12 $$ response = PicketLinkTestBase.makeCall(redirectLocation, httpClient, 200)-->Line_13 $$ assertTrue("SP2 index page was not reached", response.contains("Welcome to SP2"))[ FD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_10 $$ redirectLocation = PicketLinkTestBase.makeCallWithoutRedirect(redirectLocation, httpClient)[ FD ]
Line_9 $$ URL redirectLocation = PicketLinkTestBase.makeCallWithoutRedirect(sp2Url, httpClient)-->Line_12 $$ response = PicketLinkTestBase.makeCall(redirectLocation, httpClient, 200)[ FD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_7 $$ String response = PicketLinkTestBase.makeCall(idpUrl, httpClient, 200)[ FD ]
Line_7 $$ String response = PicketLinkTestBase.makeCall(idpUrl, httpClient, 200)-->Line_13 $$ assertTrue("SP2 index page was not reached", response.contains("Welcome to SP2"))[ FD ]
Line_10 $$ redirectLocation = PicketLinkTestBase.makeCallWithoutRedirect(redirectLocation, httpClient)-->Line_12 $$ response = PicketLinkTestBase.makeCall(redirectLocation, httpClient, 200)[ FD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_9 $$ URL redirectLocation = PicketLinkTestBase.makeCallWithoutRedirect(sp2Url, httpClient)[ FD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_11 $$ redirectLocation = PicketLinkTestBase.makeCallWithoutRedirect(redirectLocation, httpClient)[ FD ]
