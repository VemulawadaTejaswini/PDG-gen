Line_2 $$ public void testMutativeOperationsWithAutoHaEnabled() throws Exception -->Line_4 $$ HdfsConfiguration conf = getHAConf()[ CD ]
Line_2 $$ public void testMutativeOperationsWithAutoHaEnabled() throws Exception -->Line_10 $$ assertEquals(-1, runTool("-transitionToStandby", "nn1"))[ CD ]
Line_20 $$ for (StateChangeRequestInfo ri : reqInfoCaptor.getAllValues()) -->Line_21 $$ assertEquals(RequestSource.REQUEST_BY_USER_FORCED, ri.getSource())[ FD ]
Line_2 $$ public void testMutativeOperationsWithAutoHaEnabled() throws Exception -->Line_17 $$ assertEquals(0, runTool("-transitionToStandby", "-forcemanual", "nn1"))[ CD ]
Line_2 $$ public void testMutativeOperationsWithAutoHaEnabled() throws Exception -->Line_3 $$ Mockito.doReturn(STANDBY_READY_RESULT).when(mockProtocol).getServiceStatus()[ CD ]
Line_4 $$ HdfsConfiguration conf = getHAConf()-->Line_7 $$ tool.setConf(conf)[ FD ]
Line_2 $$ public void testMutativeOperationsWithAutoHaEnabled() throws Exception -->Line_11 $$ assertTrue(errOutput.contains("Refusing to manually manage"))[ CD ]
Line_4 $$ HdfsConfiguration conf = getHAConf()-->Line_6 $$ conf.set(DFSConfigKeys.DFS_HA_FENCE_METHODS_KEY, getFencerTrueCommand())[ FD ]
Line_2 $$ public void testMutativeOperationsWithAutoHaEnabled() throws Exception -->Line_19 $$ Mockito.verify(mockProtocol, Mockito.times(1)).transitionToStandby(reqInfoCaptor.capture())[ CD ]
Line_2 $$ public void testMutativeOperationsWithAutoHaEnabled() throws Exception -->Line_6 $$ conf.set(DFSConfigKeys.DFS_HA_FENCE_METHODS_KEY, getFencerTrueCommand())[ CD ]
Line_2 $$ public void testMutativeOperationsWithAutoHaEnabled() throws Exception -->Line_14 $$ setupConfirmationOnSystemIn()[ CD ]
Line_2 $$ public void testMutativeOperationsWithAutoHaEnabled() throws Exception -->Line_9 $$ assertTrue(errOutput.contains("Refusing to manually manage"))[ CD ]
Line_2 $$ public void testMutativeOperationsWithAutoHaEnabled() throws Exception -->Line_13 $$ Mockito.verify(mockProtocol, Mockito.never()).transitionToStandby(anyReqInfo())[ CD ]
Line_2 $$ public void testMutativeOperationsWithAutoHaEnabled() throws Exception -->Line_15 $$ assertEquals(0, runTool("-transitionToActive", "-forcemanual", "nn1"))[ CD ]
Line_2 $$ public void testMutativeOperationsWithAutoHaEnabled() throws Exception -->Line_12 $$ Mockito.verify(mockProtocol, Mockito.never()).transitionToActive(anyReqInfo())[ CD ]
Line_2 $$ public void testMutativeOperationsWithAutoHaEnabled() throws Exception -->Line_7 $$ tool.setConf(conf)[ CD ]
Line_2 $$ public void testMutativeOperationsWithAutoHaEnabled() throws Exception -->Line_18 $$ Mockito.verify(mockProtocol, Mockito.times(1)).transitionToActive(reqInfoCaptor.capture())[ CD ]
Line_4 $$ HdfsConfiguration conf = getHAConf()-->Line_5 $$ conf.setBoolean(DFSConfigKeys.DFS_HA_AUTO_FAILOVER_ENABLED_KEY, true)[ FD ]
Line_2 $$ public void testMutativeOperationsWithAutoHaEnabled() throws Exception -->Line_8 $$ assertEquals(-1, runTool("-transitionToActive", "nn1"))[ CD ]
Line_2 $$ public void testMutativeOperationsWithAutoHaEnabled() throws Exception -->Line_5 $$ conf.setBoolean(DFSConfigKeys.DFS_HA_AUTO_FAILOVER_ENABLED_KEY, true)[ CD ]
Line_2 $$ public void testMutativeOperationsWithAutoHaEnabled() throws Exception -->Line_16 $$ setupConfirmationOnSystemIn()[ CD ]
