Line_17 $$ foundFrameworkInClasspath = c.contains(frameworkName)-->Line_20 $$ if (!foundFrameworkInClasspath) [ FD ]
Line_2 $$ private static void setMRFrameworkClasspath(Map<String, String> environment, Configuration conf) throws IOException -->Line_3 $$ if (conf.getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false)) [ FD ]
Line_13 $$ boolean foundFrameworkInClasspath = (frameworkName == null)-->Line_16 $$ if (!foundFrameworkInClasspath) [ FD ]
Line_2 $$ private static void setMRFrameworkClasspath(Map<String, String> environment, Configuration conf) throws IOException -->Line_20 $$ if (!foundFrameworkInClasspath) [ CD ]
Line_7 $$ String frameworkName = getMRFrameworkName(conf)-->Line_8 $$ if (frameworkName == null) [ FD ]
Line_3 $$ if (conf.getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false)) -->Line_4 $$ MRApps.addToEnvironment(environment, Environment.CLASSPATH.name(), System.getProperty("java.class.path"), conf)[ CD ]
Line_9 $$ for (String c : conf.getStrings(YarnConfiguration.YARN_APPLICATION_CLASSPATH, crossPlatform ? YarnConfiguration.DEFAULT_YARN_CROSS_PLATFORM_APPLICATION_CLASSPATH : YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH)) -->Line_15 $$ MRApps.addToEnvironment(environment, Environment.CLASSPATH.name(), c.trim(), conf)[ FD ]
Line_2 $$ private static void setMRFrameworkClasspath(Map<String, String> environment, Configuration conf) throws IOException -->Line_7 $$ String frameworkName = getMRFrameworkName(conf)[ CD ]
Line_2 $$ private static void setMRFrameworkClasspath(Map<String, String> environment, Configuration conf) throws IOException -->Line_9 $$ for (String c : conf.getStrings(YarnConfiguration.YARN_APPLICATION_CLASSPATH, crossPlatform ? YarnConfiguration.DEFAULT_YARN_CROSS_PLATFORM_APPLICATION_CLASSPATH : YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH)) [ FD ]
Line_2 $$ private static void setMRFrameworkClasspath(Map<String, String> environment, Configuration conf) throws IOException -->Line_4 $$ MRApps.addToEnvironment(environment, Environment.CLASSPATH.name(), System.getProperty("java.class.path"), conf)[ FD ]
Line_7 $$ String frameworkName = getMRFrameworkName(conf)-->Line_17 $$ foundFrameworkInClasspath = c.contains(frameworkName)[ FD ]
Line_9 $$ for (String c : conf.getStrings(YarnConfiguration.YARN_APPLICATION_CLASSPATH, crossPlatform ? YarnConfiguration.DEFAULT_YARN_CROSS_PLATFORM_APPLICATION_CLASSPATH : YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH)) -->Line_17 $$ foundFrameworkInClasspath = c.contains(frameworkName)[ FD ]
Line_2 $$ private static void setMRFrameworkClasspath(Map<String, String> environment, Configuration conf) throws IOException -->Line_8 $$ if (frameworkName == null) [ CD ]
Line_2 $$ private static void setMRFrameworkClasspath(Map<String, String> environment, Configuration conf) throws IOException -->Line_7 $$ String frameworkName = getMRFrameworkName(conf)[ FD ]
Line_13 $$ boolean foundFrameworkInClasspath = (frameworkName == null)-->Line_17 $$ foundFrameworkInClasspath = c.contains(frameworkName)[ FD ]
Line_2 $$ private static void setMRFrameworkClasspath(Map<String, String> environment, Configuration conf) throws IOException -->Line_6 $$ boolean crossPlatform = conf.getBoolean(MRConfig.MAPREDUCE_APP_SUBMISSION_CROSS_PLATFORM, MRConfig.DEFAULT_MAPREDUCE_APP_SUBMISSION_CROSS_PLATFORM)[ FD ]
Line_2 $$ private static void setMRFrameworkClasspath(Map<String, String> environment, Configuration conf) throws IOException -->Line_10 $$ MRApps.addToEnvironment(environment, Environment.CLASSPATH.name(), c.trim(), conf)[ FD ]
Line_2 $$ private static void setMRFrameworkClasspath(Map<String, String> environment, Configuration conf) throws IOException -->Line_15 $$ MRApps.addToEnvironment(environment, Environment.CLASSPATH.name(), c.trim(), conf)[ FD ]
Line_2 $$ private static void setMRFrameworkClasspath(Map<String, String> environment, Configuration conf) throws IOException -->Line_6 $$ boolean crossPlatform = conf.getBoolean(MRConfig.MAPREDUCE_APP_SUBMISSION_CROSS_PLATFORM, MRConfig.DEFAULT_MAPREDUCE_APP_SUBMISSION_CROSS_PLATFORM)[ CD ]
Line_2 $$ private static void setMRFrameworkClasspath(Map<String, String> environment, Configuration conf) throws IOException -->Line_13 $$ boolean foundFrameworkInClasspath = (frameworkName == null)[ CD ]
Line_9 $$ for (String c : conf.getStrings(YarnConfiguration.YARN_APPLICATION_CLASSPATH, crossPlatform ? YarnConfiguration.DEFAULT_YARN_CROSS_PLATFORM_APPLICATION_CLASSPATH : YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH)) -->Line_10 $$ MRApps.addToEnvironment(environment, Environment.CLASSPATH.name(), c.trim(), conf)[ FD ]
Line_2 $$ private static void setMRFrameworkClasspath(Map<String, String> environment, Configuration conf) throws IOException -->Line_14 $$ for (String c : conf.getStrings(MRJobConfig.MAPREDUCE_APPLICATION_CLASSPATH, crossPlatform ? StringUtils.getStrings(MRJobConfig.DEFAULT_MAPREDUCE_CROSS_PLATFORM_APPLICATION_CLASSPATH) : StringUtils.getStrings(MRJobConfig.DEFAULT_MAPREDUCE_APPLICATION_CLASSPATH))) [ FD ]
Line_2 $$ private static void setMRFrameworkClasspath(Map<String, String> environment, Configuration conf) throws IOException -->Line_3 $$ if (conf.getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false)) [ CD ]
Line_13 $$ boolean foundFrameworkInClasspath = (frameworkName == null)-->Line_20 $$ if (!foundFrameworkInClasspath) [ FD ]
Line_16 $$ if (!foundFrameworkInClasspath) -->Line_17 $$ foundFrameworkInClasspath = c.contains(frameworkName)[ CD ]
