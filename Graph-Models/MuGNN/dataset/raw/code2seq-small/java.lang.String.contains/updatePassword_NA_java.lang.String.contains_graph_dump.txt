Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_12 $$ if (user.hasCompanyMx()) [ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_15 $$ user.setPassword(newEncPwd)[ CD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)[ CD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_46 $$ return user[ CD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_44 $$ sendPasswordNotification(user, user.getCompanyId(), password1, null, null, null, null, null, ServiceContextThreadLocal.getServiceContext())[ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)[ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_19 $$ if (!silentUpdate || (user.getPasswordModifiedDate() == null)) [ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_17 $$ user.setPasswordEncrypted(true)[ CD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_13 $$ mailService.updatePassword(user.getCompanyId(), userId, password1)[ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_7 $$ String oldEncPwd = user.getPassword()[ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_16 $$ user.setPasswordUnencrypted(password1)[ CD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_16 $$ user.setPasswordUnencrypted(password1)[ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_20 $$ user.setPasswordModifiedDate(new Date())[ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_23 $$ user.setGraceLoginCount(0)[ CD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_24 $$ if (!silentUpdate) [ CD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_28 $$ userPersistence.update(user)[ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_7 $$ String oldEncPwd = user.getPassword()[ CD ]
Line_39 $$ if (!silentUpdate) -->Line_41 $$ passwordTrackerLocalService.trackPassword(userId, oldEncPwd)[ CD ]
Line_7 $$ String oldEncPwd = user.getPassword()-->Line_41 $$ passwordTrackerLocalService.trackPassword(userId, oldEncPwd)[ FD ]
Line_30 $$ String msg = GetterUtil.getString(mle.getCause().getMessage())-->Line_33 $$ if (msg.contains(errorPasswordHistory)) [ FD ]
Line_7 $$ String oldEncPwd = user.getPassword()-->Line_9 $$ oldEncPwd = PasswordEncryptorUtil.encrypt(user.getPassword())[ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_22 $$ user.setDigest(StringPool.BLANK)[ CD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_24 $$ if (!silentUpdate) [ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_44 $$ sendPasswordNotification(user, user.getCompanyId(), password1, null, null, null, null, null, ServiceContextThreadLocal.getServiceContext())[ FD ]
Line_31 $$ if (LDAPSettingsUtil.isPasswordPolicyEnabled(user.getCompanyId())) -->Line_33 $$ if (msg.contains(errorPasswordHistory)) [ CD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_11 $$ String newEncPwd = PasswordEncryptorUtil.encrypt(password1)[ CD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_39 $$ if (!silentUpdate) [ CD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_15 $$ user.setPassword(newEncPwd)[ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_18 $$ user.setPasswordReset(passwordReset)[ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_22 $$ user.setDigest(StringPool.BLANK)[ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_4 $$ if (!silentUpdate) [ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_9 $$ oldEncPwd = PasswordEncryptorUtil.encrypt(user.getPassword())[ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_5 $$ validatePassword(user.getCompanyId(), userId, password1, password2)[ FD ]
Line_4 $$ if (!silentUpdate) -->Line_5 $$ validatePassword(user.getCompanyId(), userId, password1, password2)[ CD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_41 $$ passwordTrackerLocalService.trackPassword(userId, oldEncPwd)[ FD ]
Line_9 $$ oldEncPwd = PasswordEncryptorUtil.encrypt(user.getPassword())-->Line_41 $$ passwordTrackerLocalService.trackPassword(userId, oldEncPwd)[ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_8 $$ if (!user.isPasswordEncrypted()) [ FD ]
Line_31 $$ if (LDAPSettingsUtil.isPasswordPolicyEnabled(user.getCompanyId())) -->Line_32 $$ String errorPasswordHistory = LDAPSettingsUtil.getErrorPasswordHistory(user.getCompanyId())[ CD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_19 $$ if (!silentUpdate || (user.getPasswordModifiedDate() == null)) [ CD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_19 $$ if (!silentUpdate || (user.getPasswordModifiedDate() == null)) [ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_25 $$ user.setPasswordModified(true)[ FD ]
Line_43 $$ if (!silentUpdate && (PrincipalThreadLocal.getUserId() != userId)) -->Line_44 $$ sendPasswordNotification(user, user.getCompanyId(), password1, null, null, null, null, null, ServiceContextThreadLocal.getServiceContext())[ CD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_5 $$ validatePassword(user.getCompanyId(), userId, password1, password2)[ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_17 $$ user.setPasswordEncrypted(true)[ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_39 $$ if (!silentUpdate) [ FD ]
Line_39 $$ if (!silentUpdate) -->Line_40 $$ user.setPasswordModified(false)[ CD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_32 $$ String errorPasswordHistory = LDAPSettingsUtil.getErrorPasswordHistory(user.getCompanyId())[ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_18 $$ user.setPasswordReset(passwordReset)[ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_43 $$ if (!silentUpdate && (PrincipalThreadLocal.getUserId() != userId)) [ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_18 $$ user.setPasswordReset(passwordReset)[ CD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_4 $$ if (!silentUpdate) [ CD ]
Line_19 $$ if (!silentUpdate || (user.getPasswordModifiedDate() == null)) -->Line_20 $$ user.setPasswordModifiedDate(new Date())[ CD ]
Line_12 $$ if (user.hasCompanyMx()) -->Line_13 $$ mailService.updatePassword(user.getCompanyId(), userId, password1)[ CD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_12 $$ if (user.hasCompanyMx()) [ CD ]
Line_8 $$ if (!user.isPasswordEncrypted()) -->Line_9 $$ oldEncPwd = PasswordEncryptorUtil.encrypt(user.getPassword())[ CD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_31 $$ if (LDAPSettingsUtil.isPasswordPolicyEnabled(user.getCompanyId())) [ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_16 $$ user.setPasswordUnencrypted(password1)[ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_13 $$ mailService.updatePassword(user.getCompanyId(), userId, password1)[ FD ]
Line_24 $$ if (!silentUpdate) -->Line_25 $$ user.setPasswordModified(true)[ CD ]
Line_32 $$ String errorPasswordHistory = LDAPSettingsUtil.getErrorPasswordHistory(user.getCompanyId())-->Line_33 $$ if (msg.contains(errorPasswordHistory)) [ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_11 $$ String newEncPwd = PasswordEncryptorUtil.encrypt(password1)[ FD ]
Line_11 $$ String newEncPwd = PasswordEncryptorUtil.encrypt(password1)-->Line_15 $$ user.setPassword(newEncPwd)[ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_43 $$ if (!silentUpdate && (PrincipalThreadLocal.getUserId() != userId)) [ CD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_23 $$ user.setGraceLoginCount(0)[ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_40 $$ user.setPasswordModified(false)[ FD ]
Line_2 $$ public User updatePassword(long userId, String password1, String password2, boolean passwordReset, boolean silentUpdate) throws PortalException -->Line_8 $$ if (!user.isPasswordEncrypted()) [ CD ]
