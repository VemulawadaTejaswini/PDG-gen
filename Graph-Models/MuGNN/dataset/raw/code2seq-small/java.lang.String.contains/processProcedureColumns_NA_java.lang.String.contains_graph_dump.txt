Line_3 $$ String metaDataCatalogName = metaDataCatalogNameToUse(catalogName)-->Line_20 $$ if (metaDataProcedureName.contains(".") && !StringUtils.hasText(metaDataCatalogName)) [ FD ]
Line_49 $$ if (procs != null) -->Line_50 $$ procs.close()[ CD ]
Line_12 $$ List<String> found = new ArrayList<String>()-->Line_17 $$ if (found.size() > 1) [ FD ]
Line_11 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_27 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)[ FD ]
Line_5 $$ String metaDataProcedureName = procedureNameToUse(procedureName)-->Line_27 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)[ FD ]
Line_31 $$ if (columnName == null && (columnType == DatabaseMetaData.procedureColumnIn || columnType == DatabaseMetaData.procedureColumnInOut || columnType == DatabaseMetaData.procedureColumnOut)) -->Line_37 $$ this.callParameterMetaData.add(meta)[ CD ]
Line_12 $$ List<String> found = new ArrayList<String>()-->Line_14 $$ found.add(procs.getString("PROCEDURE_CAT") + "." + procs.getString("PROCEDURE_SCHEM") + "." + procs.getString("PROCEDURE_NAME"))[ FD ]
Line_9 $$ ResultSet procs = null-->Line_36 $$ CallParameterMetaData meta = new CallParameterMetaData(columnName, columnType, procs.getInt("DATA_TYPE"), procs.getString("TYPE_NAME"), procs.getBoolean("NULLABLE"))[ FD ]
Line_27 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)-->Line_29 $$ String columnName = procs.getString("COLUMN_NAME")[ FD ]
Line_9 $$ ResultSet procs = null-->Line_27 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)[ FD ]
Line_2 $$ private void processProcedureColumns(DatabaseMetaData databaseMetaData, String catalogName, String schemaName, String procedureName) -->Line_3 $$ String metaDataCatalogName = metaDataCatalogNameToUse(catalogName)[ FD ]
Line_2 $$ private void processProcedureColumns(DatabaseMetaData databaseMetaData, String catalogName, String schemaName, String procedureName) -->Line_3 $$ String metaDataCatalogName = metaDataCatalogNameToUse(catalogName)[ CD ]
Line_9 $$ ResultSet procs = null-->Line_16 $$ procs.close()[ FD ]
Line_11 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_30 $$ int columnType = procs.getInt("COLUMN_TYPE")[ FD ]
Line_31 $$ if (columnName == null && (columnType == DatabaseMetaData.procedureColumnIn || columnType == DatabaseMetaData.procedureColumnInOut || columnType == DatabaseMetaData.procedureColumnOut)) -->Line_32 $$ if (logger.isDebugEnabled()) [ CD ]
Line_9 $$ ResultSet procs = null-->Line_50 $$ procs.close()[ FD ]
Line_5 $$ String metaDataProcedureName = procedureNameToUse(procedureName)-->Line_20 $$ if (metaDataProcedureName.contains(".") && !StringUtils.hasText(metaDataCatalogName)) [ FD ]
Line_31 $$ if (columnName == null && (columnType == DatabaseMetaData.procedureColumnIn || columnType == DatabaseMetaData.procedureColumnInOut || columnType == DatabaseMetaData.procedureColumnOut)) -->Line_36 $$ CallParameterMetaData meta = new CallParameterMetaData(columnName, columnType, procs.getInt("DATA_TYPE"), procs.getString("TYPE_NAME"), procs.getBoolean("NULLABLE"))[ CD ]
Line_11 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_33 $$ logger.debug("Skipping metadata for: " + columnType + " " + procs.getInt("DATA_TYPE") + " " + procs.getString("TYPE_NAME") + " " + procs.getBoolean("NULLABLE") + " (probably a member of a collection)")[ FD ]
Line_11 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_50 $$ procs.close()[ FD ]
Line_9 $$ ResultSet procs = null-->Line_29 $$ String columnName = procs.getString("COLUMN_NAME")[ FD ]
Line_11 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_16 $$ procs.close()[ FD ]
Line_28 $$ while (procs.next()) -->Line_31 $$ if (columnName == null && (columnType == DatabaseMetaData.procedureColumnIn || columnType == DatabaseMetaData.procedureColumnInOut || columnType == DatabaseMetaData.procedureColumnOut)) [ CD ]
Line_53 $$ if (logger.isWarnEnabled()) -->Line_54 $$ logger.warn("Problem closing ResultSet for procedure column metadata: " + ex)[ CD ]
Line_4 $$ String metaDataSchemaName = metaDataSchemaNameToUse(schemaName)-->Line_27 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)[ FD ]
Line_5 $$ String metaDataProcedureName = procedureNameToUse(procedureName)-->Line_11 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)[ FD ]
Line_44 $$ if (logger.isWarnEnabled()) -->Line_45 $$ logger.warn("Error while retrieving metadata for procedure columns: " + ex)[ CD ]
Line_27 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)-->Line_49 $$ if (procs != null) [ FD ]
Line_11 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_13 $$ while (procs.next()) [ FD ]
Line_36 $$ CallParameterMetaData meta = new CallParameterMetaData(columnName, columnType, procs.getInt("DATA_TYPE"), procs.getString("TYPE_NAME"), procs.getBoolean("NULLABLE"))-->Line_37 $$ this.callParameterMetaData.add(meta)[ FD ]
Line_27 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)-->Line_50 $$ procs.close()[ FD ]
Line_32 $$ if (logger.isDebugEnabled()) -->Line_33 $$ logger.debug("Skipping metadata for: " + columnType + " " + procs.getInt("DATA_TYPE") + " " + procs.getString("TYPE_NAME") + " " + procs.getBoolean("NULLABLE") + " (probably a member of a collection)")[ CD ]
Line_17 $$ if (found.size() > 1) -->Line_19 $$ if (found.isEmpty()) [ CD ]
Line_5 $$ String metaDataProcedureName = procedureNameToUse(procedureName)-->Line_21 $$ String packageName = metaDataProcedureName.substring(0, metaDataProcedureName.indexOf("."))[ FD ]
Line_3 $$ String metaDataCatalogName = metaDataCatalogNameToUse(catalogName)-->Line_27 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)[ FD ]
Line_9 $$ ResultSet procs = null-->Line_33 $$ logger.debug("Skipping metadata for: " + columnType + " " + procs.getInt("DATA_TYPE") + " " + procs.getString("TYPE_NAME") + " " + procs.getBoolean("NULLABLE") + " (probably a member of a collection)")[ FD ]
Line_2 $$ private void processProcedureColumns(DatabaseMetaData databaseMetaData, String catalogName, String schemaName, String procedureName) -->Line_5 $$ String metaDataProcedureName = procedureNameToUse(procedureName)[ FD ]
Line_3 $$ String metaDataCatalogName = metaDataCatalogNameToUse(catalogName)-->Line_11 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)[ FD ]
Line_27 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)-->Line_36 $$ CallParameterMetaData meta = new CallParameterMetaData(columnName, columnType, procs.getInt("DATA_TYPE"), procs.getString("TYPE_NAME"), procs.getBoolean("NULLABLE"))[ FD ]
Line_9 $$ ResultSet procs = null-->Line_49 $$ if (procs != null) [ FD ]
Line_27 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)-->Line_33 $$ logger.debug("Skipping metadata for: " + columnType + " " + procs.getInt("DATA_TYPE") + " " + procs.getString("TYPE_NAME") + " " + procs.getBoolean("NULLABLE") + " (probably a member of a collection)")[ FD ]
Line_31 $$ if (columnName == null && (columnType == DatabaseMetaData.procedureColumnIn || columnType == DatabaseMetaData.procedureColumnInOut || columnType == DatabaseMetaData.procedureColumnOut)) -->Line_38 $$ if (logger.isDebugEnabled()) [ CD ]
Line_28 $$ while (procs.next()) -->Line_29 $$ String columnName = procs.getString("COLUMN_NAME")[ CD ]
Line_11 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_29 $$ String columnName = procs.getString("COLUMN_NAME")[ FD ]
Line_2 $$ private void processProcedureColumns(DatabaseMetaData databaseMetaData, String catalogName, String schemaName, String procedureName) -->Line_11 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)[ FD ]
Line_2 $$ private void processProcedureColumns(DatabaseMetaData databaseMetaData, String catalogName, String schemaName, String procedureName) -->Line_9 $$ ResultSet procs = null[ CD ]
Line_9 $$ ResultSet procs = null-->Line_28 $$ while (procs.next()) [ FD ]
Line_27 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)-->Line_28 $$ while (procs.next()) [ FD ]
Line_20 $$ if (metaDataProcedureName.contains(".") && !StringUtils.hasText(metaDataCatalogName)) -->Line_21 $$ String packageName = metaDataProcedureName.substring(0, metaDataProcedureName.indexOf("."))[ CD ]
Line_11 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_49 $$ if (procs != null) [ FD ]
Line_2 $$ private void processProcedureColumns(DatabaseMetaData databaseMetaData, String catalogName, String schemaName, String procedureName) -->Line_4 $$ String metaDataSchemaName = metaDataSchemaNameToUse(schemaName)[ FD ]
Line_38 $$ if (logger.isDebugEnabled()) -->Line_39 $$ logger.debug("Retrieved metadata: " + meta.getParameterName() + " " + meta.getParameterType() + " " + meta.getSqlType() + " " + meta.getTypeName() + " " + meta.isNullable())[ CD ]
Line_9 $$ ResultSet procs = null-->Line_11 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)[ FD ]
Line_36 $$ CallParameterMetaData meta = new CallParameterMetaData(columnName, columnType, procs.getInt("DATA_TYPE"), procs.getString("TYPE_NAME"), procs.getBoolean("NULLABLE"))-->Line_39 $$ logger.debug("Retrieved metadata: " + meta.getParameterName() + " " + meta.getParameterType() + " " + meta.getSqlType() + " " + meta.getTypeName() + " " + meta.isNullable())[ FD ]
Line_9 $$ ResultSet procs = null-->Line_14 $$ found.add(procs.getString("PROCEDURE_CAT") + "." + procs.getString("PROCEDURE_SCHEM") + "." + procs.getString("PROCEDURE_NAME"))[ FD ]
Line_9 $$ ResultSet procs = null-->Line_13 $$ while (procs.next()) [ FD ]
Line_19 $$ if (found.isEmpty()) -->Line_20 $$ if (metaDataProcedureName.contains(".") && !StringUtils.hasText(metaDataCatalogName)) [ CD ]
Line_2 $$ private void processProcedureColumns(DatabaseMetaData databaseMetaData, String catalogName, String schemaName, String procedureName) -->Line_4 $$ String metaDataSchemaName = metaDataSchemaNameToUse(schemaName)[ CD ]
Line_2 $$ private void processProcedureColumns(DatabaseMetaData databaseMetaData, String catalogName, String schemaName, String procedureName) -->Line_5 $$ String metaDataProcedureName = procedureNameToUse(procedureName)[ CD ]
Line_6 $$ if (logger.isDebugEnabled()) -->Line_7 $$ logger.debug("Retrieving metadata for " + metaDataCatalogName + "/" + metaDataSchemaName + "/" + metaDataProcedureName)[ CD ]
Line_13 $$ while (procs.next()) -->Line_14 $$ found.add(procs.getString("PROCEDURE_CAT") + "." + procs.getString("PROCEDURE_SCHEM") + "." + procs.getString("PROCEDURE_NAME"))[ CD ]
Line_11 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_14 $$ found.add(procs.getString("PROCEDURE_CAT") + "." + procs.getString("PROCEDURE_SCHEM") + "." + procs.getString("PROCEDURE_NAME"))[ FD ]
Line_27 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)-->Line_30 $$ int columnType = procs.getInt("COLUMN_TYPE")[ FD ]
Line_2 $$ private void processProcedureColumns(DatabaseMetaData databaseMetaData, String catalogName, String schemaName, String procedureName) -->Line_6 $$ if (logger.isDebugEnabled()) [ CD ]
Line_2 $$ private void processProcedureColumns(DatabaseMetaData databaseMetaData, String catalogName, String schemaName, String procedureName) -->Line_27 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)[ FD ]
Line_4 $$ String metaDataSchemaName = metaDataSchemaNameToUse(schemaName)-->Line_11 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)[ FD ]
Line_28 $$ while (procs.next()) -->Line_30 $$ int columnType = procs.getInt("COLUMN_TYPE")[ CD ]
Line_11 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_36 $$ CallParameterMetaData meta = new CallParameterMetaData(columnName, columnType, procs.getInt("DATA_TYPE"), procs.getString("TYPE_NAME"), procs.getBoolean("NULLABLE"))[ FD ]
Line_11 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_28 $$ while (procs.next()) [ FD ]
Line_12 $$ List<String> found = new ArrayList<String>()-->Line_19 $$ if (found.isEmpty()) [ FD ]
Line_9 $$ ResultSet procs = null-->Line_30 $$ int columnType = procs.getInt("COLUMN_TYPE")[ FD ]
