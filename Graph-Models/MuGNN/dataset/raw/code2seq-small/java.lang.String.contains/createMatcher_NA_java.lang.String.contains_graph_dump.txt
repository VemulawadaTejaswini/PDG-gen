Line_2 $$ public FileNameMatcher createMatcher(@NotNull String pattern) -->Line_6 $$ if (pattern.contains("*") || pattern.contains("?")) [ CD ]
Line_6 $$ if (pattern.contains("*") || pattern.contains("?")) -->Line_7 $$ return new WildcardFileNameMatcher(pattern)[ CD ]
Line_2 $$ public FileNameMatcher createMatcher(@NotNull String pattern) -->Line_3 $$ if (pattern.startsWith("*.") && pattern.indexOf('*', 2) < 0 && pattern.indexOf('.', 2) < 0 && pattern.indexOf('?', 2) < 0) [ CD ]
Line_2 $$ public FileNameMatcher createMatcher(@NotNull String pattern) -->Line_3 $$ if (pattern.startsWith("*.") && pattern.indexOf('*', 2) < 0 && pattern.indexOf('.', 2) < 0 && pattern.indexOf('?', 2) < 0) [ FD ]
Line_2 $$ public FileNameMatcher createMatcher(@NotNull String pattern) -->Line_9 $$ return new ExactFileNameMatcher(pattern)[ CD ]
Line_2 $$ public FileNameMatcher createMatcher(@NotNull String pattern) -->Line_4 $$ return new ExtensionFileNameMatcher(pattern.substring(2).toLowerCase())[ FD ]
Line_2 $$ public FileNameMatcher createMatcher(@NotNull String pattern) -->Line_6 $$ if (pattern.contains("*") || pattern.contains("?")) [ FD ]
Line_3 $$ if (pattern.startsWith("*.") && pattern.indexOf('*', 2) < 0 && pattern.indexOf('.', 2) < 0 && pattern.indexOf('?', 2) < 0) -->Line_4 $$ return new ExtensionFileNameMatcher(pattern.substring(2).toLowerCase())[ CD ]
