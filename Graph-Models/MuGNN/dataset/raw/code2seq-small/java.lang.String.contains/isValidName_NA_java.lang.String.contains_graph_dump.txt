Line_19 $$ String nameWithoutExtension = FileUtil.stripExtension(name)-->Line_21 $$ if (StringUtil.equalsIgnoreCase(nameWithoutExtension, blacklistName)) [ FD ]
Line_11 $$ for (String blacklistLastChar : PropsValues.DL_CHAR_LAST_BLACKLIST) -->Line_15 $$ if (name.endsWith(blacklistLastChar)) [ FD ]
Line_21 $$ if (StringUtil.equalsIgnoreCase(nameWithoutExtension, blacklistName)) -->Line_22 $$ return false[ CD ]
Line_3 $$ if (Validator.isNull(name)) -->Line_4 $$ return false[ CD ]
Line_2 $$ public boolean isValidName(String name) -->Line_3 $$ if (Validator.isNull(name)) [ FD ]
Line_15 $$ if (name.endsWith(blacklistLastChar)) -->Line_16 $$ return false[ CD ]
Line_2 $$ public boolean isValidName(String name) -->Line_7 $$ if (name.contains(blacklistChar)) [ FD ]
Line_2 $$ public boolean isValidName(String name) -->Line_25 $$ return true[ CD ]
Line_2 $$ public boolean isValidName(String name) -->Line_19 $$ String nameWithoutExtension = FileUtil.stripExtension(name)[ FD ]
Line_11 $$ for (String blacklistLastChar : PropsValues.DL_CHAR_LAST_BLACKLIST) -->Line_13 $$ blacklistLastChar = UnicodeFormatter.parseString(blacklistLastChar)[ FD ]
Line_20 $$ for (String blacklistName : PropsValues.DL_NAME_BLACKLIST) -->Line_21 $$ if (StringUtil.equalsIgnoreCase(nameWithoutExtension, blacklistName)) [ FD ]
Line_2 $$ public boolean isValidName(String name) -->Line_19 $$ String nameWithoutExtension = FileUtil.stripExtension(name)[ CD ]
Line_11 $$ for (String blacklistLastChar : PropsValues.DL_CHAR_LAST_BLACKLIST) -->Line_12 $$ if (blacklistLastChar.startsWith(UnicodeFormatter.UNICODE_PREFIX)) [ FD ]
Line_2 $$ public boolean isValidName(String name) -->Line_15 $$ if (name.endsWith(blacklistLastChar)) [ FD ]
Line_12 $$ if (blacklistLastChar.startsWith(UnicodeFormatter.UNICODE_PREFIX)) -->Line_13 $$ blacklistLastChar = UnicodeFormatter.parseString(blacklistLastChar)[ CD ]
Line_13 $$ blacklistLastChar = UnicodeFormatter.parseString(blacklistLastChar)-->Line_15 $$ if (name.endsWith(blacklistLastChar)) [ FD ]
Line_7 $$ if (name.contains(blacklistChar)) -->Line_8 $$ return false[ CD ]
Line_6 $$ for (String blacklistChar : PropsValues.DL_CHAR_BLACKLIST) -->Line_7 $$ if (name.contains(blacklistChar)) [ FD ]
Line_2 $$ public boolean isValidName(String name) -->Line_3 $$ if (Validator.isNull(name)) [ CD ]
