Line_2 $$ public void testEmptyInprogressNode() throws Exception -->Line_7 $$ EditLogOutputStream out = bkjm.startLogSegment(1, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)[ CD ]
Line_16 $$ out = bkjm.startLogSegment(101, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_17 $$ out.close()[ FD ]
Line_5 $$ BookKeeperJournalManager bkjm = new BookKeeperJournalManager(conf, uri, nsi)-->Line_7 $$ EditLogOutputStream out = bkjm.startLogSegment(1, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)[ FD ]
Line_21 $$ bkjm = new BookKeeperJournalManager(conf, uri, nsi)-->Line_28 $$ bkjm.close()[ FD ]
Line_2 $$ public void testEmptyInprogressNode() throws Exception -->Line_5 $$ BookKeeperJournalManager bkjm = new BookKeeperJournalManager(conf, uri, nsi)[ CD ]
Line_2 $$ public void testEmptyInprogressNode() throws Exception -->Line_6 $$ bkjm.format(nsi)[ CD ]
Line_5 $$ BookKeeperJournalManager bkjm = new BookKeeperJournalManager(conf, uri, nsi)-->Line_21 $$ bkjm = new BookKeeperJournalManager(conf, uri, nsi)[ FD ]
Line_2 $$ public void testEmptyInprogressNode() throws Exception -->Line_15 $$ bkjm.finalizeLogSegment(1, 100)[ CD ]
Line_2 $$ public void testEmptyInprogressNode() throws Exception -->Line_9 $$ for (long i = 1; i <= 100; i++) [ CD ]
Line_10 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()-->Line_12 $$ out.write(op)[ FD ]
Line_2 $$ public void testEmptyInprogressNode() throws Exception -->Line_20 $$ zkc.setData(inprogressZNode, new byte[0], -1)[ CD ]
Line_7 $$ EditLogOutputStream out = bkjm.startLogSegment(1, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_17 $$ out.close()[ FD ]
Line_5 $$ BookKeeperJournalManager bkjm = new BookKeeperJournalManager(conf, uri, nsi)-->Line_18 $$ bkjm.close()[ FD ]
Line_2 $$ public void testEmptyInprogressNode() throws Exception -->Line_4 $$ NamespaceInfo nsi = newNSInfo()[ CD ]
Line_2 $$ public void testEmptyInprogressNode() throws Exception -->Line_19 $$ String inprogressZNode = bkjm.inprogressZNode(101)[ CD ]
Line_7 $$ EditLogOutputStream out = bkjm.startLogSegment(1, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_12 $$ out.write(op)[ FD ]
Line_5 $$ BookKeeperJournalManager bkjm = new BookKeeperJournalManager(conf, uri, nsi)-->Line_28 $$ bkjm.close()[ FD ]
Line_10 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()-->Line_11 $$ op.setTransactionId(i)[ FD ]
Line_19 $$ String inprogressZNode = bkjm.inprogressZNode(101)-->Line_20 $$ zkc.setData(inprogressZNode, new byte[0], -1)[ FD ]
Line_9 $$ for (long i = 1; i <= 100; i++) -->Line_12 $$ out.write(op)[ CD ]
Line_2 $$ public void testEmptyInprogressNode() throws Exception -->Line_14 $$ out.close()[ CD ]
Line_5 $$ BookKeeperJournalManager bkjm = new BookKeeperJournalManager(conf, uri, nsi)-->Line_23 $$ bkjm.recoverUnfinalizedSegments()[ FD ]
Line_9 $$ for (long i = 1; i <= 100; i++) -->Line_10 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()[ CD ]
Line_21 $$ bkjm = new BookKeeperJournalManager(conf, uri, nsi)-->Line_23 $$ bkjm.recoverUnfinalizedSegments()[ FD ]
Line_9 $$ for (long i = 1; i <= 100; i++) -->Line_11 $$ op.setTransactionId(i)[ FD ]
Line_2 $$ public void testEmptyInprogressNode() throws Exception -->Line_17 $$ out.close()[ CD ]
Line_5 $$ BookKeeperJournalManager bkjm = new BookKeeperJournalManager(conf, uri, nsi)-->Line_15 $$ bkjm.finalizeLogSegment(1, 100)[ FD ]
Line_2 $$ public void testEmptyInprogressNode() throws Exception -->Line_3 $$ URI uri = BKJMUtil.createJournalURI("/hdfsjournal-emptyInprogress")[ CD ]
Line_4 $$ NamespaceInfo nsi = newNSInfo()-->Line_6 $$ bkjm.format(nsi)[ FD ]
Line_2 $$ public void testEmptyInprogressNode() throws Exception -->Line_16 $$ out = bkjm.startLogSegment(101, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)[ CD ]
Line_7 $$ EditLogOutputStream out = bkjm.startLogSegment(1, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_16 $$ out = bkjm.startLogSegment(101, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)[ FD ]
Line_2 $$ public void testEmptyInprogressNode() throws Exception -->Line_21 $$ bkjm = new BookKeeperJournalManager(conf, uri, nsi)[ CD ]
Line_7 $$ EditLogOutputStream out = bkjm.startLogSegment(1, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_14 $$ out.close()[ FD ]
Line_5 $$ BookKeeperJournalManager bkjm = new BookKeeperJournalManager(conf, uri, nsi)-->Line_6 $$ bkjm.format(nsi)[ FD ]
Line_9 $$ for (long i = 1; i <= 100; i++) -->Line_11 $$ op.setTransactionId(i)[ CD ]
Line_2 $$ public void testEmptyInprogressNode() throws Exception -->Line_18 $$ bkjm.close()[ CD ]
Line_5 $$ BookKeeperJournalManager bkjm = new BookKeeperJournalManager(conf, uri, nsi)-->Line_19 $$ String inprogressZNode = bkjm.inprogressZNode(101)[ FD ]
Line_5 $$ BookKeeperJournalManager bkjm = new BookKeeperJournalManager(conf, uri, nsi)-->Line_16 $$ out = bkjm.startLogSegment(101, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)[ FD ]
