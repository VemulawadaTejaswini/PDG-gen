Line_2 $$ public void testWarnCommandOpts() throws Exception -->Line_11 $$ YARNRunner yarnRunner = new YARNRunner(jobConf)[ CD ]
Line_2 $$ public void testWarnCommandOpts() throws Exception -->Line_4 $$ ByteArrayOutputStream bout = new ByteArrayOutputStream()[ CD ]
Line_4 $$ ByteArrayOutputStream bout = new ByteArrayOutputStream()-->Line_13 $$ String logMsg = bout.toString()[ FD ]
Line_3 $$ Logger logger = Logger.getLogger(YARNRunner.class)-->Line_7 $$ logger.addAppender(appender)[ FD ]
Line_2 $$ public void testWarnCommandOpts() throws Exception -->Line_10 $$ jobConf.set(MRJobConfig.MR_AM_COMMAND_OPTS, "-Xmx1024m -Djava.library.path=bar")[ CD ]
Line_13 $$ String logMsg = bout.toString()-->Line_15 $$ assertTrue(logMsg.contains("WARN - Usage of -Djava.library.path in " + "yarn.app.mapreduce.am.command-opts can cause programs to no longer " + "function if hadoop native libraries are used. These values should " + "be set as part of the LD_LIBRARY_PATH in the app master JVM env " + "using yarn.app.mapreduce.am.env config settings."))[ FD ]
Line_13 $$ String logMsg = bout.toString()-->Line_14 $$ assertTrue(logMsg.contains("WARN - Usage of -Djava.library.path in " + "yarn.app.mapreduce.am.admin-command-opts can cause programs to no " + "longer function if hadoop native libraries are used. These values " + "should be set as part of the LD_LIBRARY_PATH in the app master JVM " + "env using yarn.app.mapreduce.am.admin.user.env config settings."))[ FD ]
Line_2 $$ public void testWarnCommandOpts() throws Exception -->Line_7 $$ logger.addAppender(appender)[ CD ]
Line_2 $$ public void testWarnCommandOpts() throws Exception -->Line_14 $$ assertTrue(logMsg.contains("WARN - Usage of -Djava.library.path in " + "yarn.app.mapreduce.am.admin-command-opts can cause programs to no " + "longer function if hadoop native libraries are used. These values " + "should be set as part of the LD_LIBRARY_PATH in the app master JVM " + "env using yarn.app.mapreduce.am.admin.user.env config settings."))[ CD ]
Line_2 $$ public void testWarnCommandOpts() throws Exception -->Line_6 $$ Appender appender = new WriterAppender(layout, bout)[ CD ]
Line_11 $$ YARNRunner yarnRunner = new YARNRunner(jobConf)-->Line_12 $$ ApplicationSubmissionContext submissionContext = buildSubmitContext(yarnRunner, jobConf)[ FD ]
Line_8 $$ JobConf jobConf = new JobConf()-->Line_10 $$ jobConf.set(MRJobConfig.MR_AM_COMMAND_OPTS, "-Xmx1024m -Djava.library.path=bar")[ FD ]
Line_2 $$ public void testWarnCommandOpts() throws Exception -->Line_15 $$ assertTrue(logMsg.contains("WARN - Usage of -Djava.library.path in " + "yarn.app.mapreduce.am.command-opts can cause programs to no longer " + "function if hadoop native libraries are used. These values should " + "be set as part of the LD_LIBRARY_PATH in the app master JVM env " + "using yarn.app.mapreduce.am.env config settings."))[ CD ]
Line_2 $$ public void testWarnCommandOpts() throws Exception -->Line_13 $$ String logMsg = bout.toString()[ CD ]
Line_2 $$ public void testWarnCommandOpts() throws Exception -->Line_5 $$ Layout layout = new SimpleLayout()[ CD ]
Line_2 $$ public void testWarnCommandOpts() throws Exception -->Line_9 $$ jobConf.set(MRJobConfig.MR_AM_ADMIN_COMMAND_OPTS, "-Djava.net.preferIPv4Stack=true -Djava.library.path=foo")[ CD ]
Line_2 $$ public void testWarnCommandOpts() throws Exception -->Line_12 $$ ApplicationSubmissionContext submissionContext = buildSubmitContext(yarnRunner, jobConf)[ CD ]
Line_8 $$ JobConf jobConf = new JobConf()-->Line_12 $$ ApplicationSubmissionContext submissionContext = buildSubmitContext(yarnRunner, jobConf)[ FD ]
Line_6 $$ Appender appender = new WriterAppender(layout, bout)-->Line_7 $$ logger.addAppender(appender)[ FD ]
Line_2 $$ public void testWarnCommandOpts() throws Exception -->Line_3 $$ Logger logger = Logger.getLogger(YARNRunner.class)[ CD ]
Line_8 $$ JobConf jobConf = new JobConf()-->Line_9 $$ jobConf.set(MRJobConfig.MR_AM_ADMIN_COMMAND_OPTS, "-Djava.net.preferIPv4Stack=true -Djava.library.path=foo")[ FD ]
Line_2 $$ public void testWarnCommandOpts() throws Exception -->Line_8 $$ JobConf jobConf = new JobConf()[ CD ]
