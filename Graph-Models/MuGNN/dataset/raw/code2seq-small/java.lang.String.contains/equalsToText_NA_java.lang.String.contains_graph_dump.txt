Line_2 $$ public boolean equalsToText(@NotNull String text) -->Line_6 $$ if (text.equals(getCanonicalText(false)))[ CD ]
Line_11 $$ patternType = factory.createTypeFromText(text, myClass)-->Line_15 $$ return equals(patternType)[ FD ]
Line_2 $$ public boolean equalsToText(@NotNull String text) -->Line_8 $$ PsiElementFactory factory = JavaPsiFacade.getInstance(myManager.getProject()).getElementFactory()[ CD ]
Line_2 $$ public boolean equalsToText(@NotNull String text) -->Line_3 $$ String name = myClass.getName()[ CD ]
Line_3 $$ String name = myClass.getName()-->Line_4 $$ if (name == null || !text.contains(name))[ FD ]
Line_4 $$ if (name == null || !text.contains(name))-->Line_5 $$ return false[ CD ]
Line_9 $$ final PsiType patternType-->Line_11 $$ patternType = factory.createTypeFromText(text, myClass)[ FD ]
Line_2 $$ public boolean equalsToText(@NotNull String text) -->Line_9 $$ final PsiType patternType[ CD ]
Line_8 $$ PsiElementFactory factory = JavaPsiFacade.getInstance(myManager.getProject()).getElementFactory()-->Line_11 $$ patternType = factory.createTypeFromText(text, myClass)[ FD ]
Line_2 $$ public boolean equalsToText(@NotNull String text) -->Line_6 $$ if (text.equals(getCanonicalText(false)))[ FD ]
Line_6 $$ if (text.equals(getCanonicalText(false)))-->Line_7 $$ return true[ CD ]
Line_2 $$ public boolean equalsToText(@NotNull String text) -->Line_4 $$ if (name == null || !text.contains(name))[ FD ]
Line_2 $$ public boolean equalsToText(@NotNull String text) -->Line_4 $$ if (name == null || !text.contains(name))[ CD ]
Line_2 $$ public boolean equalsToText(@NotNull String text) -->Line_11 $$ patternType = factory.createTypeFromText(text, myClass)[ FD ]
Line_9 $$ final PsiType patternType-->Line_15 $$ return equals(patternType)[ FD ]
Line_2 $$ public boolean equalsToText(@NotNull String text) -->Line_15 $$ return equals(patternType)[ CD ]
