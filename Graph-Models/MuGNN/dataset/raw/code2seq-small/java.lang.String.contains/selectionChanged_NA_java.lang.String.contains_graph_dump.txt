Line_7 $$ if (!StringUtil.isEmpty(text) && !(text.contains("exec(") || text.contains("++") || text.contains("--") || text.contains("="))) -->Line_19 $$ new XValueHint(myProject, myEditor, point, ValueHintType.MOUSE_OVER_HINT, info, evaluator, session).invokeHint()[ CD ]
Line_6 $$ final String text = myEditor.getDocument().getText(e.getNewRange())-->Line_7 $$ if (!StringUtil.isEmpty(text) && !(text.contains("exec(") || text.contains("++") || text.contains("--") || text.contains("="))) [ FD ]
Line_7 $$ if (!StringUtil.isEmpty(text) && !(text.contains("exec(") || text.contains("++") || text.contains("--") || text.contains("="))) -->Line_18 $$ Point point = myEditor.logicalPositionToXY(pos)[ CD ]
Line_8 $$ final XDebugSession session = getSession(getTree())-->Line_9 $$ if (session == null)[ FD ]
Line_12 $$ if (evaluator == null)-->Line_13 $$ return[ CD ]
Line_9 $$ if (session == null)-->Line_10 $$ return[ CD ]
Line_3 $$ if (!Registry.is("debugger.valueTooltipAutoShowOnSelection") || myEditor.getCaretModel().getCaretCount() > 1) -->Line_4 $$ return[ CD ]
Line_2 $$ public void selectionChanged(final SelectionEvent e) -->Line_6 $$ final String text = myEditor.getDocument().getText(e.getNewRange())[ CD ]
Line_16 $$ int offset = range.getStartOffset()-->Line_17 $$ LogicalPosition pos = myEditor.offsetToLogicalPosition(offset)[ FD ]
Line_7 $$ if (!StringUtil.isEmpty(text) && !(text.contains("exec(") || text.contains("++") || text.contains("--") || text.contains("="))) -->Line_15 $$ ExpressionInfo info = new ExpressionInfo(range)[ CD ]
Line_17 $$ LogicalPosition pos = myEditor.offsetToLogicalPosition(offset)-->Line_18 $$ Point point = myEditor.logicalPositionToXY(pos)[ FD ]
Line_7 $$ if (!StringUtil.isEmpty(text) && !(text.contains("exec(") || text.contains("++") || text.contains("--") || text.contains("="))) -->Line_14 $$ TextRange range = e.getNewRange()[ CD ]
Line_2 $$ public void selectionChanged(final SelectionEvent e) -->Line_6 $$ final String text = myEditor.getDocument().getText(e.getNewRange())[ FD ]
Line_7 $$ if (!StringUtil.isEmpty(text) && !(text.contains("exec(") || text.contains("++") || text.contains("--") || text.contains("="))) -->Line_12 $$ if (evaluator == null)[ CD ]
Line_7 $$ if (!StringUtil.isEmpty(text) && !(text.contains("exec(") || text.contains("++") || text.contains("--") || text.contains("="))) -->Line_17 $$ LogicalPosition pos = myEditor.offsetToLogicalPosition(offset)[ CD ]
Line_7 $$ if (!StringUtil.isEmpty(text) && !(text.contains("exec(") || text.contains("++") || text.contains("--") || text.contains("="))) -->Line_16 $$ int offset = range.getStartOffset()[ CD ]
Line_2 $$ public void selectionChanged(final SelectionEvent e) -->Line_3 $$ if (!Registry.is("debugger.valueTooltipAutoShowOnSelection") || myEditor.getCaretModel().getCaretCount() > 1) [ CD ]
Line_7 $$ if (!StringUtil.isEmpty(text) && !(text.contains("exec(") || text.contains("++") || text.contains("--") || text.contains("="))) -->Line_9 $$ if (session == null)[ CD ]
Line_7 $$ if (!StringUtil.isEmpty(text) && !(text.contains("exec(") || text.contains("++") || text.contains("--") || text.contains("="))) -->Line_11 $$ XDebuggerEvaluator evaluator = myStackFrame.getEvaluator()[ CD ]
Line_14 $$ TextRange range = e.getNewRange()-->Line_16 $$ int offset = range.getStartOffset()[ FD ]
Line_2 $$ public void selectionChanged(final SelectionEvent e) -->Line_14 $$ TextRange range = e.getNewRange()[ FD ]
Line_7 $$ if (!StringUtil.isEmpty(text) && !(text.contains("exec(") || text.contains("++") || text.contains("--") || text.contains("="))) -->Line_8 $$ final XDebugSession session = getSession(getTree())[ CD ]
Line_2 $$ public void selectionChanged(final SelectionEvent e) -->Line_7 $$ if (!StringUtil.isEmpty(text) && !(text.contains("exec(") || text.contains("++") || text.contains("--") || text.contains("="))) [ CD ]
Line_11 $$ XDebuggerEvaluator evaluator = myStackFrame.getEvaluator()-->Line_12 $$ if (evaluator == null)[ FD ]
