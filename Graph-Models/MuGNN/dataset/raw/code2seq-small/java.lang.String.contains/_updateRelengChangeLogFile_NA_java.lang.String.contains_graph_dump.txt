Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_5 $$ int moduleIncrementalVersion = GetterUtil.getInteger(pluginPackageProperties.getProperty("module-incremental-version"))[ CD ]
Line_26 $$ File webInfDir = relengChangeLogFile.getParentFile()-->Line_27 $$ File docrootDir = webInfDir.getParentFile()[ FD ]
Line_10 $$ List<String> relengChangeLogEntries = new ArrayList()-->Line_39 $$ if (range.endsWith("^.." + _latestHASH) && ticketIds.isEmpty() && (relengChangeLogEntries.size() > 1)) [ FD ]
Line_27 $$ File docrootDir = webInfDir.getParentFile()-->Line_28 $$ File pluginDir = docrootDir.getParentFile()[ FD ]
Line_42 $$ if (ticketIds.isEmpty()) -->Line_43 $$ System.out.println(pluginDir + " does not have changes for range " + range)[ CD ]
Line_46 $$ for (String dependentApp : dependentApps) -->Line_48 $$ if (dependentApp.equals("resources-impoter-web")) [ FD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_26 $$ File webInfDir = relengChangeLogFile.getParentFile()[ CD ]
Line_38 $$ Set<String> ticketIds = _extractTicketIds(pluginDir, range)-->Line_67 $$ ticketIds.addAll(_extractTicketIds(dependentAppDir, range))[ FD ]
Line_54 $$ if (dependentApp.endsWith("-layouttpl")) -->Line_56 $$ if (dependentApp.endsWith("-portlet")) [ CD ]
Line_32 $$ String range = relengChangeLogEntryParts[0]-->Line_67 $$ ticketIds.addAll(_extractTicketIds(dependentAppDir, range))[ FD ]
Line_12 $$ for (int i = 0; i < relengChangeLogEntriesArray.length; i++) -->Line_18 $$ if (((i + 1) == relengChangeLogEntriesArray.length) && !relengChangeLogEntry.contains("HEAD=") && !relengChangeLogEntry.contains("TEMP=") && !relengChangeLogEntry.contains(_latestHASH) && !relengChangeLogEntries.isEmpty()) [ CD ]
Line_57 $$ dependentAppDirName = "portlets"-->Line_59 $$ dependentAppDirName = "themes"[ FD ]
Line_21 $$ String range = relengChangeLogEntry.substring(x + 2, y) + "^.." + _latestHASH-->Line_67 $$ ticketIds.addAll(_extractTicketIds(dependentAppDir, range))[ FD ]
Line_19 $$ int x = relengChangeLogEntry.indexOf("..")-->Line_20 $$ int y = relengChangeLogEntry.indexOf("=", x)[ FD ]
Line_29 $$ for (int i = 0; i < relengChangeLogEntries.size(); i++) -->Line_70 $$ changeLogVersion++[ CD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_74 $$ String pluginPackagePropertiesContent = FileUtil.read(pluginPackagePropertiesFile)[ CD ]
Line_18 $$ if (((i + 1) == relengChangeLogEntriesArray.length) && !relengChangeLogEntry.contains("HEAD=") && !relengChangeLogEntry.contains("TEMP=") && !relengChangeLogEntry.contains(_latestHASH) && !relengChangeLogEntries.isEmpty()) -->Line_19 $$ int x = relengChangeLogEntry.indexOf("..")[ CD ]
Line_58 $$ if (dependentApp.endsWith("-theme")) -->Line_60 $$ if (dependentApp.endsWith("-web")) [ CD ]
Line_53 $$ dependentAppDirName = "hooks"-->Line_55 $$ dependentAppDirName = "layouttpl"[ FD ]
Line_9 $$ String relengChangeLogContent = FileUtil.read(relengChangeLogFile)-->Line_11 $$ String[] relengChangeLogEntriesArray = StringUtil.split(relengChangeLogContent, "\n")[ FD ]
Line_29 $$ for (int i = 0; i < relengChangeLogEntries.size(); i++) -->Line_32 $$ String range = relengChangeLogEntryParts[0][ CD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_9 $$ String relengChangeLogContent = FileUtil.read(relengChangeLogFile)[ CD ]
Line_74 $$ String pluginPackagePropertiesContent = FileUtil.read(pluginPackagePropertiesFile)-->Line_76 $$ int x = pluginPackagePropertiesContent.indexOf("change-log=")[ FD ]
Line_18 $$ if (((i + 1) == relengChangeLogEntriesArray.length) && !relengChangeLogEntry.contains("HEAD=") && !relengChangeLogEntry.contains("TEMP=") && !relengChangeLogEntry.contains(_latestHASH) && !relengChangeLogEntries.isEmpty()) -->Line_22 $$ relengChangeLogEntries.add(range)[ CD ]
Line_32 $$ String range = relengChangeLogEntryParts[0]-->Line_38 $$ Set<String> ticketIds = _extractTicketIds(pluginDir, range)[ FD ]
Line_57 $$ dependentAppDirName = "portlets"-->Line_61 $$ dependentAppDirName = "webs"[ FD ]
Line_74 $$ String pluginPackagePropertiesContent = FileUtil.read(pluginPackagePropertiesFile)-->Line_75 $$ if (!pluginPackagePropertiesContent.contains("long-description")) [ FD ]
Line_13 $$ String relengChangeLogEntry = relengChangeLogEntriesArray[i]-->Line_21 $$ String range = relengChangeLogEntry.substring(x + 2, y) + "^.." + _latestHASH[ FD ]
Line_55 $$ dependentAppDirName = "layouttpl"-->Line_61 $$ dependentAppDirName = "webs"[ FD ]
Line_10 $$ List<String> relengChangeLogEntries = new ArrayList()-->Line_22 $$ relengChangeLogEntries.add(range)[ FD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_3 $$ StringBundler sb = new StringBundler()[ CD ]
Line_6 $$ if (!relengChangeLogFile.exists()) -->Line_7 $$ FileUtil.write(relengChangeLogFile, "TEMP=")[ CD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_11 $$ String[] relengChangeLogEntriesArray = StringUtil.split(relengChangeLogContent, "\n")[ CD ]
Line_38 $$ Set<String> ticketIds = _extractTicketIds(pluginDir, range)-->Line_69 $$ String ticketIdsString = StringUtil.merge(ticketIds.toArray(new String[ticketIds.size()]), " ")[ FD ]
Line_46 $$ for (String dependentApp : dependentApps) -->Line_54 $$ if (dependentApp.endsWith("-layouttpl")) [ FD ]
Line_33 $$ if (range.equals("TEMP")) -->Line_35 $$ sb.append(_getChangeLogEntry(changeLogVersion, range, StringPool.BLANK))[ CD ]
Line_10 $$ List<String> relengChangeLogEntries = new ArrayList()-->Line_18 $$ if (((i + 1) == relengChangeLogEntriesArray.length) && !relengChangeLogEntry.contains("HEAD=") && !relengChangeLogEntry.contains("TEMP=") && !relengChangeLogEntry.contains(_latestHASH) && !relengChangeLogEntries.isEmpty()) [ FD ]
Line_21 $$ String range = relengChangeLogEntry.substring(x + 2, y) + "^.." + _latestHASH-->Line_38 $$ Set<String> ticketIds = _extractTicketIds(pluginDir, range)[ FD ]
Line_51 $$ String dependentAppDirName = null-->Line_59 $$ dependentAppDirName = "themes"[ FD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_7 $$ FileUtil.write(relengChangeLogFile, "TEMP=")[ FD ]
Line_58 $$ if (dependentApp.endsWith("-theme")) -->Line_59 $$ dependentAppDirName = "themes"[ CD ]
Line_74 $$ String pluginPackagePropertiesContent = FileUtil.read(pluginPackagePropertiesFile)-->Line_80 $$ pluginPackagePropertiesContent = StringUtil.replace(pluginPackagePropertiesContent, "module-incremental-version=" + moduleIncrementalVersion, "module-incremental-version=" + changeLogVersion)[ FD ]
Line_29 $$ for (int i = 0; i < relengChangeLogEntries.size(); i++) -->Line_33 $$ if (range.equals("TEMP")) [ CD ]
Line_30 $$ String relengChangeLogEntry = relengChangeLogEntries.get(i)-->Line_31 $$ String[] relengChangeLogEntryParts = StringUtil.split(relengChangeLogEntry, "=")[ FD ]
Line_32 $$ String range = relengChangeLogEntryParts[0]-->Line_71 $$ sb.append(_getChangeLogEntry(changeLogVersion, range, ticketIdsString))[ FD ]
Line_21 $$ String range = relengChangeLogEntry.substring(x + 2, y) + "^.." + _latestHASH-->Line_33 $$ if (range.equals("TEMP")) [ FD ]
Line_75 $$ if (!pluginPackagePropertiesContent.contains("long-description")) -->Line_77 $$ pluginPackagePropertiesContent = pluginPackagePropertiesContent.substring(0, x) + "long-description=\n" + pluginPackagePropertiesContent.substring(x)[ CD ]
Line_33 $$ if (range.equals("TEMP")) -->Line_34 $$ changeLogVersion++[ CD ]
Line_13 $$ String relengChangeLogEntry = relengChangeLogEntriesArray[i]-->Line_14 $$ if (Validator.isNull(relengChangeLogEntry) || relengChangeLogEntry.startsWith("#")) [ FD ]
Line_47 $$ dependentApp = dependentApp.trim()-->Line_54 $$ if (dependentApp.endsWith("-layouttpl")) [ FD ]
Line_13 $$ String relengChangeLogEntry = relengChangeLogEntriesArray[i]-->Line_19 $$ int x = relengChangeLogEntry.indexOf("..")[ FD ]
Line_77 $$ pluginPackagePropertiesContent = pluginPackagePropertiesContent.substring(0, x) + "long-description=\n" + pluginPackagePropertiesContent.substring(x)-->Line_80 $$ pluginPackagePropertiesContent = StringUtil.replace(pluginPackagePropertiesContent, "module-incremental-version=" + moduleIncrementalVersion, "module-incremental-version=" + changeLogVersion)[ FD ]
Line_84 $$ File relengChangeLogMD5File = new File(webInfDir, "liferay-releng.changelog.md5")-->Line_86 $$ FileUtil.write(relengChangeLogMD5File, md5Checksum)[ FD ]
Line_47 $$ dependentApp = dependentApp.trim()-->Line_58 $$ if (dependentApp.endsWith("-theme")) [ FD ]
Line_51 $$ String dependentAppDirName = null-->Line_53 $$ dependentAppDirName = "hooks"[ FD ]
Line_53 $$ dependentAppDirName = "hooks"-->Line_59 $$ dependentAppDirName = "themes"[ FD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_4 $$ int changeLogVersion = 0[ CD ]
Line_53 $$ dependentAppDirName = "hooks"-->Line_57 $$ dependentAppDirName = "portlets"[ FD ]
Line_55 $$ dependentAppDirName = "layouttpl"-->Line_59 $$ dependentAppDirName = "themes"[ FD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_85 $$ String md5Checksum = FileUtil.getMD5Checksum(relengChangeLogFile)[ CD ]
Line_51 $$ String dependentAppDirName = null-->Line_57 $$ dependentAppDirName = "portlets"[ FD ]
Line_4 $$ int changeLogVersion = 0-->Line_79 $$ if (moduleIncrementalVersion != changeLogVersion) [ FD ]
Line_79 $$ if (moduleIncrementalVersion != changeLogVersion) -->Line_80 $$ pluginPackagePropertiesContent = StringUtil.replace(pluginPackagePropertiesContent, "module-incremental-version=" + moduleIncrementalVersion, "module-incremental-version=" + changeLogVersion)[ CD ]
Line_77 $$ pluginPackagePropertiesContent = pluginPackagePropertiesContent.substring(0, x) + "long-description=\n" + pluginPackagePropertiesContent.substring(x)-->Line_82 $$ FileUtil.write(pluginPackagePropertiesFile, pluginPackagePropertiesContent)[ FD ]
Line_20 $$ int y = relengChangeLogEntry.indexOf("=", x)-->Line_21 $$ String range = relengChangeLogEntry.substring(x + 2, y) + "^.." + _latestHASH[ FD ]
Line_46 $$ for (String dependentApp : dependentApps) -->Line_60 $$ if (dependentApp.endsWith("-web")) [ FD ]
Line_32 $$ String range = relengChangeLogEntryParts[0]-->Line_35 $$ sb.append(_getChangeLogEntry(changeLogVersion, range, StringPool.BLANK))[ FD ]
Line_46 $$ for (String dependentApp : dependentApps) -->Line_56 $$ if (dependentApp.endsWith("-portlet")) [ FD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_29 $$ for (int i = 0; i < relengChangeLogEntries.size(); i++) [ CD ]
Line_29 $$ for (int i = 0; i < relengChangeLogEntries.size(); i++) -->Line_31 $$ String[] relengChangeLogEntryParts = StringUtil.split(relengChangeLogEntry, "=")[ CD ]
Line_73 $$ File pluginPackagePropertiesFile = new File(webInfDir, "liferay-plugin-package.properties")-->Line_74 $$ String pluginPackagePropertiesContent = FileUtil.read(pluginPackagePropertiesFile)[ FD ]
Line_74 $$ String pluginPackagePropertiesContent = FileUtil.read(pluginPackagePropertiesFile)-->Line_77 $$ pluginPackagePropertiesContent = pluginPackagePropertiesContent.substring(0, x) + "long-description=\n" + pluginPackagePropertiesContent.substring(x)[ FD ]
Line_56 $$ if (dependentApp.endsWith("-portlet")) -->Line_57 $$ dependentAppDirName = "portlets"[ CD ]
Line_52 $$ if (dependentApp.endsWith("-hook")) -->Line_54 $$ if (dependentApp.endsWith("-layouttpl")) [ CD ]
Line_4 $$ int changeLogVersion = 0-->Line_35 $$ sb.append(_getChangeLogEntry(changeLogVersion, range, StringPool.BLANK))[ FD ]
Line_56 $$ if (dependentApp.endsWith("-portlet")) -->Line_58 $$ if (dependentApp.endsWith("-theme")) [ CD ]
Line_54 $$ if (dependentApp.endsWith("-layouttpl")) -->Line_55 $$ dependentAppDirName = "layouttpl"[ CD ]
Line_63 $$ File dependentAppDir = new File(_pluginsDir, dependentAppDirName + "/" + dependentApp)-->Line_67 $$ ticketIds.addAll(_extractTicketIds(dependentAppDir, range))[ FD ]
Line_47 $$ dependentApp = dependentApp.trim()-->Line_52 $$ if (dependentApp.endsWith("-hook")) [ FD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_75 $$ if (!pluginPackagePropertiesContent.contains("long-description")) [ CD ]
Line_18 $$ if (((i + 1) == relengChangeLogEntriesArray.length) && !relengChangeLogEntry.contains("HEAD=") && !relengChangeLogEntry.contains("TEMP=") && !relengChangeLogEntry.contains(_latestHASH) && !relengChangeLogEntries.isEmpty()) -->Line_21 $$ String range = relengChangeLogEntry.substring(x + 2, y) + "^.." + _latestHASH[ CD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_83 $$ FileUtil.write(relengChangeLogFile, sb.toString())[ CD ]
Line_29 $$ for (int i = 0; i < relengChangeLogEntries.size(); i++) -->Line_45 $$ String[] dependentApps = StringUtil.split(relengProperties.getProperty("dependent-apps"))[ CD ]
Line_10 $$ List<String> relengChangeLogEntries = new ArrayList()-->Line_29 $$ for (int i = 0; i < relengChangeLogEntries.size(); i++) [ FD ]
Line_51 $$ String dependentAppDirName = null-->Line_55 $$ dependentAppDirName = "layouttpl"[ FD ]
Line_21 $$ String range = relengChangeLogEntry.substring(x + 2, y) + "^.." + _latestHASH-->Line_22 $$ relengChangeLogEntries.add(range)[ FD ]
Line_32 $$ String range = relengChangeLogEntryParts[0]-->Line_33 $$ if (range.equals("TEMP")) [ FD ]
Line_12 $$ for (int i = 0; i < relengChangeLogEntriesArray.length; i++) -->Line_30 $$ String relengChangeLogEntry = relengChangeLogEntries.get(i)[ FD ]
Line_12 $$ for (int i = 0; i < relengChangeLogEntriesArray.length; i++) -->Line_14 $$ if (Validator.isNull(relengChangeLogEntry) || relengChangeLogEntry.startsWith("#")) [ CD ]
Line_29 $$ for (int i = 0; i < relengChangeLogEntries.size(); i++) -->Line_71 $$ sb.append(_getChangeLogEntry(changeLogVersion, range, ticketIdsString))[ CD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_82 $$ FileUtil.write(pluginPackagePropertiesFile, pluginPackagePropertiesContent)[ CD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_5 $$ int moduleIncrementalVersion = GetterUtil.getInteger(pluginPackageProperties.getProperty("module-incremental-version"))[ FD ]
Line_55 $$ dependentAppDirName = "layouttpl"-->Line_57 $$ dependentAppDirName = "portlets"[ FD ]
Line_59 $$ dependentAppDirName = "themes"-->Line_61 $$ dependentAppDirName = "webs"[ FD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_85 $$ String md5Checksum = FileUtil.getMD5Checksum(relengChangeLogFile)[ FD ]
Line_38 $$ Set<String> ticketIds = _extractTicketIds(pluginDir, range)-->Line_42 $$ if (ticketIds.isEmpty()) [ FD ]
Line_12 $$ for (int i = 0; i < relengChangeLogEntriesArray.length; i++) -->Line_17 $$ relengChangeLogEntries.add(relengChangeLogEntry)[ CD ]
Line_5 $$ int moduleIncrementalVersion = GetterUtil.getInteger(pluginPackageProperties.getProperty("module-incremental-version"))-->Line_79 $$ if (moduleIncrementalVersion != changeLogVersion) [ FD ]
Line_46 $$ for (String dependentApp : dependentApps) -->Line_52 $$ if (dependentApp.endsWith("-hook")) [ FD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_83 $$ FileUtil.write(relengChangeLogFile, sb.toString())[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_35 $$ sb.append(_getChangeLogEntry(changeLogVersion, range, StringPool.BLANK))[ FD ]
Line_29 $$ for (int i = 0; i < relengChangeLogEntries.size(); i++) -->Line_30 $$ String relengChangeLogEntry = relengChangeLogEntries.get(i)[ CD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_9 $$ String relengChangeLogContent = FileUtil.read(relengChangeLogFile)[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_83 $$ FileUtil.write(relengChangeLogFile, sb.toString())[ FD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_12 $$ for (int i = 0; i < relengChangeLogEntriesArray.length; i++) [ CD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_84 $$ File relengChangeLogMD5File = new File(webInfDir, "liferay-releng.changelog.md5")[ CD ]
Line_10 $$ List<String> relengChangeLogEntries = new ArrayList()-->Line_30 $$ String relengChangeLogEntry = relengChangeLogEntries.get(i)[ FD ]
Line_29 $$ for (int i = 0; i < relengChangeLogEntries.size(); i++) -->Line_39 $$ if (range.endsWith("^.." + _latestHASH) && ticketIds.isEmpty() && (relengChangeLogEntries.size() > 1)) [ CD ]
Line_21 $$ String range = relengChangeLogEntry.substring(x + 2, y) + "^.." + _latestHASH-->Line_35 $$ sb.append(_getChangeLogEntry(changeLogVersion, range, StringPool.BLANK))[ FD ]
Line_28 $$ File pluginDir = docrootDir.getParentFile()-->Line_38 $$ Set<String> ticketIds = _extractTicketIds(pluginDir, range)[ FD ]
Line_19 $$ int x = relengChangeLogEntry.indexOf("..")-->Line_77 $$ pluginPackagePropertiesContent = pluginPackagePropertiesContent.substring(0, x) + "long-description=\n" + pluginPackagePropertiesContent.substring(x)[ FD ]
Line_69 $$ String ticketIdsString = StringUtil.merge(ticketIds.toArray(new String[ticketIds.size()]), " ")-->Line_71 $$ sb.append(_getChangeLogEntry(changeLogVersion, range, ticketIdsString))[ FD ]
Line_21 $$ String range = relengChangeLogEntry.substring(x + 2, y) + "^.." + _latestHASH-->Line_39 $$ if (range.endsWith("^.." + _latestHASH) && ticketIds.isEmpty() && (relengChangeLogEntries.size() > 1)) [ FD ]
Line_29 $$ for (int i = 0; i < relengChangeLogEntries.size(); i++) -->Line_38 $$ Set<String> ticketIds = _extractTicketIds(pluginDir, range)[ CD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_10 $$ List<String> relengChangeLogEntries = new ArrayList()[ CD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_28 $$ File pluginDir = docrootDir.getParentFile()[ CD ]
Line_60 $$ if (dependentApp.endsWith("-web")) -->Line_61 $$ dependentAppDirName = "webs"[ CD ]
Line_10 $$ List<String> relengChangeLogEntries = new ArrayList()-->Line_17 $$ relengChangeLogEntries.add(relengChangeLogEntry)[ FD ]
Line_29 $$ for (int i = 0; i < relengChangeLogEntries.size(); i++) -->Line_69 $$ String ticketIdsString = StringUtil.merge(ticketIds.toArray(new String[ticketIds.size()]), " ")[ CD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_71 $$ sb.append(_getChangeLogEntry(changeLogVersion, range, ticketIdsString))[ FD ]
Line_12 $$ for (int i = 0; i < relengChangeLogEntriesArray.length; i++) -->Line_29 $$ for (int i = 0; i < relengChangeLogEntries.size(); i++) [ FD ]
Line_13 $$ String relengChangeLogEntry = relengChangeLogEntriesArray[i]-->Line_17 $$ relengChangeLogEntries.add(relengChangeLogEntry)[ FD ]
Line_74 $$ String pluginPackagePropertiesContent = FileUtil.read(pluginPackagePropertiesFile)-->Line_82 $$ FileUtil.write(pluginPackagePropertiesFile, pluginPackagePropertiesContent)[ FD ]
Line_53 $$ dependentAppDirName = "hooks"-->Line_61 $$ dependentAppDirName = "webs"[ FD ]
Line_63 $$ File dependentAppDir = new File(_pluginsDir, dependentAppDirName + "/" + dependentApp)-->Line_64 $$ if (!dependentAppDir.exists()) [ FD ]
Line_75 $$ if (!pluginPackagePropertiesContent.contains("long-description")) -->Line_76 $$ int x = pluginPackagePropertiesContent.indexOf("change-log=")[ CD ]
Line_13 $$ String relengChangeLogEntry = relengChangeLogEntriesArray[i]-->Line_18 $$ if (((i + 1) == relengChangeLogEntriesArray.length) && !relengChangeLogEntry.contains("HEAD=") && !relengChangeLogEntry.contains("TEMP=") && !relengChangeLogEntry.contains(_latestHASH) && !relengChangeLogEntries.isEmpty()) [ FD ]
Line_29 $$ for (int i = 0; i < relengChangeLogEntries.size(); i++) -->Line_42 $$ if (ticketIds.isEmpty()) [ CD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_6 $$ if (!relengChangeLogFile.exists()) [ FD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_73 $$ File pluginPackagePropertiesFile = new File(webInfDir, "liferay-plugin-package.properties")[ CD ]
Line_4 $$ int changeLogVersion = 0-->Line_34 $$ changeLogVersion++[ FD ]
Line_85 $$ String md5Checksum = FileUtil.getMD5Checksum(relengChangeLogFile)-->Line_86 $$ FileUtil.write(relengChangeLogMD5File, md5Checksum)[ FD ]
Line_47 $$ dependentApp = dependentApp.trim()-->Line_56 $$ if (dependentApp.endsWith("-portlet")) [ FD ]
Line_21 $$ String range = relengChangeLogEntry.substring(x + 2, y) + "^.." + _latestHASH-->Line_71 $$ sb.append(_getChangeLogEntry(changeLogVersion, range, ticketIdsString))[ FD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_79 $$ if (moduleIncrementalVersion != changeLogVersion) [ CD ]
Line_76 $$ int x = pluginPackagePropertiesContent.indexOf("change-log=")-->Line_77 $$ pluginPackagePropertiesContent = pluginPackagePropertiesContent.substring(0, x) + "long-description=\n" + pluginPackagePropertiesContent.substring(x)[ FD ]
Line_73 $$ File pluginPackagePropertiesFile = new File(webInfDir, "liferay-plugin-package.properties")-->Line_82 $$ FileUtil.write(pluginPackagePropertiesFile, pluginPackagePropertiesContent)[ FD ]
Line_32 $$ String range = relengChangeLogEntryParts[0]-->Line_39 $$ if (range.endsWith("^.." + _latestHASH) && ticketIds.isEmpty() && (relengChangeLogEntries.size() > 1)) [ FD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_6 $$ if (!relengChangeLogFile.exists()) [ CD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_86 $$ FileUtil.write(relengChangeLogMD5File, md5Checksum)[ CD ]
Line_46 $$ for (String dependentApp : dependentApps) -->Line_58 $$ if (dependentApp.endsWith("-theme")) [ FD ]
Line_4 $$ int changeLogVersion = 0-->Line_71 $$ sb.append(_getChangeLogEntry(changeLogVersion, range, ticketIdsString))[ FD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_27 $$ File docrootDir = webInfDir.getParentFile()[ CD ]
Line_47 $$ dependentApp = dependentApp.trim()-->Line_60 $$ if (dependentApp.endsWith("-web")) [ FD ]
Line_4 $$ int changeLogVersion = 0-->Line_70 $$ changeLogVersion++[ FD ]
Line_51 $$ String dependentAppDirName = null-->Line_61 $$ dependentAppDirName = "webs"[ FD ]
Line_13 $$ String relengChangeLogEntry = relengChangeLogEntriesArray[i]-->Line_20 $$ int y = relengChangeLogEntry.indexOf("=", x)[ FD ]
Line_12 $$ for (int i = 0; i < relengChangeLogEntriesArray.length; i++) -->Line_13 $$ String relengChangeLogEntry = relengChangeLogEntriesArray[i][ CD ]
Line_18 $$ if (((i + 1) == relengChangeLogEntriesArray.length) && !relengChangeLogEntry.contains("HEAD=") && !relengChangeLogEntry.contains("TEMP=") && !relengChangeLogEntry.contains(_latestHASH) && !relengChangeLogEntries.isEmpty()) -->Line_20 $$ int y = relengChangeLogEntry.indexOf("=", x)[ CD ]
Line_46 $$ for (String dependentApp : dependentApps) -->Line_47 $$ dependentApp = dependentApp.trim()[ FD ]
Line_47 $$ dependentApp = dependentApp.trim()-->Line_48 $$ if (dependentApp.equals("resources-impoter-web")) [ FD ]
Line_13 $$ String relengChangeLogEntry = relengChangeLogEntriesArray[i]-->Line_31 $$ String[] relengChangeLogEntryParts = StringUtil.split(relengChangeLogEntry, "=")[ FD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_26 $$ File webInfDir = relengChangeLogFile.getParentFile()[ FD ]
Line_80 $$ pluginPackagePropertiesContent = StringUtil.replace(pluginPackagePropertiesContent, "module-incremental-version=" + moduleIncrementalVersion, "module-incremental-version=" + changeLogVersion)-->Line_82 $$ FileUtil.write(pluginPackagePropertiesFile, pluginPackagePropertiesContent)[ FD ]
Line_38 $$ Set<String> ticketIds = _extractTicketIds(pluginDir, range)-->Line_39 $$ if (range.endsWith("^.." + _latestHASH) && ticketIds.isEmpty() && (relengChangeLogEntries.size() > 1)) [ FD ]
Line_52 $$ if (dependentApp.endsWith("-hook")) -->Line_53 $$ dependentAppDirName = "hooks"[ CD ]
Line_29 $$ for (int i = 0; i < relengChangeLogEntries.size(); i++) -->Line_30 $$ String relengChangeLogEntry = relengChangeLogEntries.get(i)[ FD ]
Line_2 $$ private void _updateRelengChangeLogFile(Properties pluginPackageProperties, File relengChangeLogFile, Properties relengProperties) throws Exception -->Line_45 $$ String[] dependentApps = StringUtil.split(relengProperties.getProperty("dependent-apps"))[ FD ]
