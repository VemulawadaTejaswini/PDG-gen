Line_2 $$ protected void checkStringBundler(String line, String fileName, int lineCount) -->Line_7 $$ line = line.substring(pos + 8, line.length() - 2)[ FD ]
Line_2 $$ protected void checkStringBundler(String line, String fileName, int lineCount) -->Line_6 $$ int pos = line.indexOf(".append(")[ FD ]
Line_2 $$ protected void checkStringBundler(String line, String fileName, int lineCount) -->Line_3 $$ if ((!line.startsWith("sb.append(") && !line.contains("SB.append(")) || !line.endsWith(");")) [ FD ]
Line_13 $$ for (String linePart : lineParts) -->Line_15 $$ int openParenthesesCount = StringUtil.count(linePart, StringPool.OPEN_PARENTHESIS)[ FD ]
Line_2 $$ protected void checkStringBundler(String line, String fileName, int lineCount) -->Line_12 $$ String[] lineParts = StringUtil.split(line, " + ")[ CD ]
Line_13 $$ for (String linePart : lineParts) -->Line_19 $$ if (Validator.isNumber(linePart)) [ FD ]
Line_2 $$ protected void checkStringBundler(String line, String fileName, int lineCount) -->Line_23 $$ processErrorMessage(fileName, "plus: " + fileName + " " + lineCount)[ CD ]
Line_2 $$ protected void checkStringBundler(String line, String fileName, int lineCount) -->Line_9 $$ if (!line.contains(" + ")) [ FD ]
Line_8 $$ line = stripQuotes(line, CharPool.QUOTE)-->Line_9 $$ if (!line.contains(" + ")) [ FD ]
Line_7 $$ line = line.substring(pos + 8, line.length() - 2)-->Line_8 $$ line = stripQuotes(line, CharPool.QUOTE)[ FD ]
Line_19 $$ if (Validator.isNumber(linePart)) -->Line_20 $$ return[ CD ]
Line_2 $$ protected void checkStringBundler(String line, String fileName, int lineCount) -->Line_12 $$ String[] lineParts = StringUtil.split(line, " + ")[ FD ]
Line_2 $$ protected void checkStringBundler(String line, String fileName, int lineCount) -->Line_9 $$ if (!line.contains(" + ")) [ CD ]
Line_2 $$ protected void checkStringBundler(String line, String fileName, int lineCount) -->Line_3 $$ if ((!line.startsWith("sb.append(") && !line.contains("SB.append(")) || !line.endsWith(");")) [ CD ]
Line_7 $$ line = line.substring(pos + 8, line.length() - 2)-->Line_12 $$ String[] lineParts = StringUtil.split(line, " + ")[ FD ]
Line_2 $$ protected void checkStringBundler(String line, String fileName, int lineCount) -->Line_23 $$ processErrorMessage(fileName, "plus: " + fileName + " " + lineCount)[ FD ]
Line_2 $$ protected void checkStringBundler(String line, String fileName, int lineCount) -->Line_6 $$ int pos = line.indexOf(".append(")[ CD ]
Line_2 $$ protected void checkStringBundler(String line, String fileName, int lineCount) -->Line_7 $$ line = line.substring(pos + 8, line.length() - 2)[ CD ]
Line_9 $$ if (!line.contains(" + ")) -->Line_10 $$ return[ CD ]
Line_8 $$ line = stripQuotes(line, CharPool.QUOTE)-->Line_12 $$ String[] lineParts = StringUtil.split(line, " + ")[ FD ]
Line_3 $$ if ((!line.startsWith("sb.append(") && !line.contains("SB.append(")) || !line.endsWith(");")) -->Line_4 $$ return[ CD ]
Line_15 $$ int openParenthesesCount = StringUtil.count(linePart, StringPool.OPEN_PARENTHESIS)-->Line_16 $$ if (closeParenthesesCount != openParenthesesCount) [ FD ]
Line_16 $$ if (closeParenthesesCount != openParenthesesCount) -->Line_17 $$ return[ CD ]
Line_7 $$ line = line.substring(pos + 8, line.length() - 2)-->Line_9 $$ if (!line.contains(" + ")) [ FD ]
Line_13 $$ for (String linePart : lineParts) -->Line_14 $$ int closeParenthesesCount = StringUtil.count(linePart, StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_2 $$ protected void checkStringBundler(String line, String fileName, int lineCount) -->Line_8 $$ line = stripQuotes(line, CharPool.QUOTE)[ FD ]
Line_14 $$ int closeParenthesesCount = StringUtil.count(linePart, StringPool.CLOSE_PARENTHESIS)-->Line_16 $$ if (closeParenthesesCount != openParenthesesCount) [ FD ]
Line_2 $$ protected void checkStringBundler(String line, String fileName, int lineCount) -->Line_8 $$ line = stripQuotes(line, CharPool.QUOTE)[ CD ]
