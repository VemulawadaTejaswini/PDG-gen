Line_2 $$ public void testSchemaCreationSQLCommandIsGeneratedWithTheCorrectColumnSizeValues() throws Exception -->Line_3 $$ final StandardServiceRegistry ssr = new StandardServiceRegistryBuilder().build()[ CD ]
Line_8 $$ for (String command : commands) -->Line_11 $$ final String[] columnsDefinition = getColumnsDefinition(command)[ FD ]
Line_10 $$ if (command.toLowerCase().contains("create table employee")) -->Line_15 $$ createTableEmployeeFound = true[ CD ]
Line_10 $$ if (command.toLowerCase().contains("create table employee")) -->Line_12 $$ for (int i = 0; i < columnsDefinition.length; i++) [ CD ]
Line_15 $$ createTableEmployeeFound = true-->Line_18 $$ assertTrue("Expected create table command for Employee entity not found", createTableEmployeeFound)[ FD ]
Line_12 $$ for (int i = 0; i < columnsDefinition.length; i++) -->Line_13 $$ checkColumnSize(columnsDefinition[i])[ CD ]
Line_6 $$ boolean createTableEmployeeFound = false-->Line_18 $$ assertTrue("Expected create table command for Employee entity not found", createTableEmployeeFound)[ FD ]
Line_8 $$ for (String command : commands) -->Line_10 $$ if (command.toLowerCase().contains("create table employee")) [ FD ]
Line_5 $$ final org.hibernate.boot.Metadata metadata = new MetadataSources(ssr).addAnnotatedClass(Employee.class).buildMetadata()-->Line_7 $$ final List<String> commands = new SchemaCreatorImpl().generateCreationCommands(metadata, false)[ FD ]
Line_3 $$ final StandardServiceRegistry ssr = new StandardServiceRegistryBuilder().build()-->Line_20 $$ StandardServiceRegistryBuilder.destroy(ssr)[ FD ]
Line_8 $$ for (String command : commands) -->Line_9 $$ LOGGER.info(command)[ FD ]
Line_10 $$ if (command.toLowerCase().contains("create table employee")) -->Line_11 $$ final String[] columnsDefinition = getColumnsDefinition(command)[ CD ]
Line_6 $$ boolean createTableEmployeeFound = false-->Line_15 $$ createTableEmployeeFound = true[ FD ]
