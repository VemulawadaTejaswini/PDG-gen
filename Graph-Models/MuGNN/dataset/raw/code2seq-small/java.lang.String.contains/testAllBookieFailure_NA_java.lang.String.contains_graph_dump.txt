Line_4 $$ BookieServer replacementBookie = null-->Line_54 $$ replacementBookie.shutdown()[ FD ]
Line_16 $$ for (long i = 1; i <= 3; i++) -->Line_17 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()[ CD ]
Line_6 $$ int ensembleSize = numBookies + 1-->Line_9 $$ conf.setInt(BookKeeperJournalManager.BKJM_BOOKKEEPER_ENSEMBLE_SIZE, ensembleSize)[ FD ]
Line_17 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()-->Line_44 $$ op.setTransactionId(txid++)[ FD ]
Line_8 $$ Configuration conf = new Configuration()-->Line_9 $$ conf.setInt(BookKeeperJournalManager.BKJM_BOOKKEEPER_ENSEMBLE_SIZE, ensembleSize)[ FD ]
Line_27 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()-->Line_44 $$ op.setTransactionId(txid++)[ FD ]
Line_3 $$ BookieServer bookieToFail = bkutil.newBookie()-->Line_23 $$ bookieToFail.shutdown()[ FD ]
Line_4 $$ BookieServer replacementBookie = null-->Line_38 $$ replacementBookie = bkutil.newBookie()[ FD ]
Line_11 $$ long txid = 1-->Line_41 $$ out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)[ FD ]
Line_38 $$ replacementBookie = bkutil.newBookie()-->Line_54 $$ replacementBookie.shutdown()[ FD ]
Line_8 $$ Configuration conf = new Configuration()-->Line_10 $$ conf.setInt(BookKeeperJournalManager.BKJM_BOOKKEEPER_QUORUM_SIZE, ensembleSize)[ FD ]
Line_15 $$ EditLogOutputStream out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_45 $$ out.write(op)[ FD ]
Line_12 $$ NamespaceInfo nsi = newNSInfo()-->Line_14 $$ bkjm.format(nsi)[ FD ]
Line_17 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()-->Line_19 $$ out.write(op)[ FD ]
Line_15 $$ EditLogOutputStream out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_22 $$ out.flush()[ FD ]
Line_13 $$ BookKeeperJournalManager bkjm = new BookKeeperJournalManager(conf, BKJMUtil.createJournalURI("/hdfsjournal-allbookiefailure"), nsi)-->Line_40 $$ bkjm.recoverUnfinalizedSegments()[ FD ]
Line_16 $$ for (long i = 1; i <= 3; i++) -->Line_19 $$ out.write(op)[ CD ]
Line_27 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()-->Line_45 $$ out.write(op)[ FD ]
Line_15 $$ EditLogOutputStream out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_48 $$ out.flush()[ FD ]
Line_3 $$ BookieServer bookieToFail = bkutil.newBookie()-->Line_56 $$ bookieToFail.shutdown()[ FD ]
Line_27 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()-->Line_29 $$ out.write(op)[ FD ]
Line_16 $$ for (long i = 1; i <= 3; i++) -->Line_42 $$ for (long i = 1; i <= 3; i++) [ FD ]
Line_11 $$ long txid = 1-->Line_18 $$ op.setTransactionId(txid++)[ FD ]
Line_42 $$ for (long i = 1; i <= 3; i++) -->Line_44 $$ op.setTransactionId(txid++)[ CD ]
Line_26 $$ for (long i = 1; i <= 3; i++) -->Line_29 $$ out.write(op)[ CD ]
Line_26 $$ for (long i = 1; i <= 3; i++) -->Line_42 $$ for (long i = 1; i <= 3; i++) [ FD ]
Line_42 $$ for (long i = 1; i <= 3; i++) -->Line_45 $$ out.write(op)[ CD ]
Line_38 $$ replacementBookie = bkutil.newBookie()-->Line_53 $$ if (replacementBookie != null) [ FD ]
Line_15 $$ EditLogOutputStream out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_32 $$ out.flush()[ FD ]
Line_17 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()-->Line_29 $$ out.write(op)[ FD ]
Line_41 $$ out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_48 $$ out.flush()[ FD ]
Line_15 $$ EditLogOutputStream out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_21 $$ out.setReadyToFlush()[ FD ]
Line_15 $$ EditLogOutputStream out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_29 $$ out.write(op)[ FD ]
Line_16 $$ for (long i = 1; i <= 3; i++) -->Line_18 $$ op.setTransactionId(txid++)[ CD ]
Line_2 $$ public void testAllBookieFailure() throws Exception -->Line_3 $$ BookieServer bookieToFail = bkutil.newBookie()[ CD ]
Line_17 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()-->Line_45 $$ out.write(op)[ FD ]
Line_13 $$ BookKeeperJournalManager bkjm = new BookKeeperJournalManager(conf, BKJMUtil.createJournalURI("/hdfsjournal-allbookiefailure"), nsi)-->Line_15 $$ EditLogOutputStream out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)[ FD ]
Line_2 $$ public void testAllBookieFailure() throws Exception -->Line_4 $$ BookieServer replacementBookie = null[ CD ]
Line_26 $$ for (long i = 1; i <= 3; i++) -->Line_28 $$ op.setTransactionId(txid++)[ CD ]
Line_42 $$ for (long i = 1; i <= 3; i++) -->Line_43 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()[ CD ]
Line_11 $$ long txid = 1-->Line_44 $$ op.setTransactionId(txid++)[ FD ]
Line_43 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()-->Line_45 $$ out.write(op)[ FD ]
Line_13 $$ BookKeeperJournalManager bkjm = new BookKeeperJournalManager(conf, BKJMUtil.createJournalURI("/hdfsjournal-allbookiefailure"), nsi)-->Line_14 $$ bkjm.format(nsi)[ FD ]
Line_17 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()-->Line_28 $$ op.setTransactionId(txid++)[ FD ]
Line_16 $$ for (long i = 1; i <= 3; i++) -->Line_26 $$ for (long i = 1; i <= 3; i++) [ FD ]
Line_11 $$ long txid = 1-->Line_15 $$ EditLogOutputStream out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)[ FD ]
Line_15 $$ EditLogOutputStream out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_47 $$ out.setReadyToFlush()[ FD ]
Line_6 $$ int ensembleSize = numBookies + 1-->Line_10 $$ conf.setInt(BookKeeperJournalManager.BKJM_BOOKKEEPER_QUORUM_SIZE, ensembleSize)[ FD ]
Line_41 $$ out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_47 $$ out.setReadyToFlush()[ FD ]
Line_41 $$ out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_45 $$ out.write(op)[ FD ]
Line_4 $$ BookieServer replacementBookie = null-->Line_53 $$ if (replacementBookie != null) [ FD ]
Line_15 $$ EditLogOutputStream out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_41 $$ out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)[ FD ]
Line_53 $$ if (replacementBookie != null) -->Line_54 $$ replacementBookie.shutdown()[ CD ]
Line_57 $$ if (bkutil.checkBookiesUp(numBookies, 30) != numBookies) -->Line_58 $$ LOG.warn("Not all bookies from this test shut down, expect errors")[ CD ]
Line_26 $$ for (long i = 1; i <= 3; i++) -->Line_27 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()[ CD ]
Line_15 $$ EditLogOutputStream out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_31 $$ out.setReadyToFlush()[ FD ]
Line_15 $$ EditLogOutputStream out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)-->Line_19 $$ out.write(op)[ FD ]
Line_17 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()-->Line_18 $$ op.setTransactionId(txid++)[ FD ]
Line_11 $$ long txid = 1-->Line_28 $$ op.setTransactionId(txid++)[ FD ]
Line_27 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()-->Line_28 $$ op.setTransactionId(txid++)[ FD ]
Line_43 $$ FSEditLogOp op = FSEditLogTestUtil.getNoOpInstance()-->Line_44 $$ op.setTransactionId(txid++)[ FD ]
Line_13 $$ BookKeeperJournalManager bkjm = new BookKeeperJournalManager(conf, BKJMUtil.createJournalURI("/hdfsjournal-allbookiefailure"), nsi)-->Line_41 $$ out = bkjm.startLogSegment(txid, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)[ FD ]
Line_6 $$ int ensembleSize = numBookies + 1-->Line_7 $$ assertEquals("New bookie didn't start", ensembleSize, bkutil.checkBookiesUp(ensembleSize, 10))[ FD ]
