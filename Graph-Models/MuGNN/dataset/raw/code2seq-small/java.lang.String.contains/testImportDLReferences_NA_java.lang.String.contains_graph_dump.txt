Line_2 $$ public void testImportDLReferences() throws Exception -->Line_3 $$ Element referrerStagedModelElement = _portletDataContextExport.getExportDataElement(_referrerStagedModel)[ CD ]
Line_6 $$ String content = replaceParameters(getContent("dl_references.txt"), _fileEntry)-->Line_7 $$ content = ExportImportHelperUtil.replaceExportContentReferences(_portletDataContextExport, _referrerStagedModel, content, true)[ FD ]
Line_2 $$ public void testImportDLReferences() throws Exception -->Line_6 $$ String content = replaceParameters(getContent("dl_references.txt"), _fileEntry)[ CD ]
Line_2 $$ public void testImportDLReferences() throws Exception -->Line_5 $$ referrerStagedModelElement.addAttribute("path", referrerStagedModelPath)[ CD ]
Line_2 $$ public void testImportDLReferences() throws Exception -->Line_8 $$ _portletDataContextImport.setScopeGroupId(_fileEntry.getGroupId())[ CD ]
Line_7 $$ content = ExportImportHelperUtil.replaceExportContentReferences(_portletDataContextExport, _referrerStagedModel, content, true)-->Line_9 $$ content = ExportImportHelperUtil.replaceImportContentReferences(_portletDataContextImport, _referrerStagedModel, content)[ FD ]
Line_2 $$ public void testImportDLReferences() throws Exception -->Line_4 $$ String referrerStagedModelPath = ExportImportPathUtil.getModelPath(_referrerStagedModel)[ CD ]
Line_2 $$ public void testImportDLReferences() throws Exception -->Line_10 $$ Assert.assertFalse(content.contains("[$dl-reference="))[ CD ]
Line_2 $$ public void testImportDLReferences() throws Exception -->Line_9 $$ content = ExportImportHelperUtil.replaceImportContentReferences(_portletDataContextImport, _referrerStagedModel, content)[ CD ]
Line_6 $$ String content = replaceParameters(getContent("dl_references.txt"), _fileEntry)-->Line_9 $$ content = ExportImportHelperUtil.replaceImportContentReferences(_portletDataContextImport, _referrerStagedModel, content)[ FD ]
Line_6 $$ String content = replaceParameters(getContent("dl_references.txt"), _fileEntry)-->Line_10 $$ Assert.assertFalse(content.contains("[$dl-reference="))[ FD ]
Line_3 $$ Element referrerStagedModelElement = _portletDataContextExport.getExportDataElement(_referrerStagedModel)-->Line_5 $$ referrerStagedModelElement.addAttribute("path", referrerStagedModelPath)[ FD ]
Line_2 $$ public void testImportDLReferences() throws Exception -->Line_7 $$ content = ExportImportHelperUtil.replaceExportContentReferences(_portletDataContextExport, _referrerStagedModel, content, true)[ CD ]
Line_9 $$ content = ExportImportHelperUtil.replaceImportContentReferences(_portletDataContextImport, _referrerStagedModel, content)-->Line_10 $$ Assert.assertFalse(content.contains("[$dl-reference="))[ FD ]
Line_4 $$ String referrerStagedModelPath = ExportImportPathUtil.getModelPath(_referrerStagedModel)-->Line_5 $$ referrerStagedModelElement.addAttribute("path", referrerStagedModelPath)[ FD ]
Line_7 $$ content = ExportImportHelperUtil.replaceExportContentReferences(_portletDataContextExport, _referrerStagedModel, content, true)-->Line_10 $$ Assert.assertFalse(content.contains("[$dl-reference="))[ FD ]
