Line_7 $$ NamenodeProtocols spyNN = spy(preSpyNN)-->Line_9 $$ doAnswer(delayer).when(spyNN).complete(anyString(), anyString(), (ExtendedBlock) anyObject(), anyLong())[ FD ]
Line_12 $$ final OutputStream stm = client.create("/testCompleteOtherLease", true)-->Line_18 $$ stm.close()[ FD ]
Line_14 $$ final AtomicReference<Throwable> err = new AtomicReference<Throwable>()-->Line_20 $$ err.set(t)[ FD ]
Line_8 $$ GenericTestUtils.DelayAnswer delayer = new GenericTestUtils.DelayAnswer(LOG)-->Line_38 $$ delayer.proceed()[ FD ]
Line_15 $$ Thread t = new Thread() -->Line_40 $$ t.join()[ FD ]
Line_15 $$ Thread t = new Thread() -->Line_20 $$ err.set(t)[ FD ]
Line_2 $$ public void testCompleteOtherLeaseHoldersFile() throws Throwable -->Line_3 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(5).build()[ CD ]
Line_8 $$ GenericTestUtils.DelayAnswer delayer = new GenericTestUtils.DelayAnswer(LOG)-->Line_9 $$ doAnswer(delayer).when(spyNN).complete(anyString(), anyString(), (ExtendedBlock) anyObject(), anyLong())[ FD ]
Line_12 $$ final OutputStream stm = client.create("/testCompleteOtherLease", true)-->Line_13 $$ AppendTestUtil.write(stm, 0, 4096)[ FD ]
Line_15 $$ Thread t = new Thread() -->Line_24 $$ t.start()[ FD ]
Line_8 $$ GenericTestUtils.DelayAnswer delayer = new GenericTestUtils.DelayAnswer(LOG)-->Line_26 $$ delayer.waitForCall()[ FD ]
Line_10 $$ DFSClient client = new DFSClient(null, spyNN, conf, null)-->Line_12 $$ final OutputStream stm = client.create("/testCompleteOtherLease", true)[ FD ]
Line_10 $$ DFSClient client = new DFSClient(null, spyNN, conf, null)-->Line_28 $$ client.getLeaseRenewer().interruptAndJoin()[ FD ]
Line_14 $$ final AtomicReference<Throwable> err = new AtomicReference<Throwable>()-->Line_42 $$ Throwable thrownByClose = err.get()[ FD ]
Line_6 $$ NamenodeProtocols preSpyNN = cluster.getNameNodeRpc()-->Line_7 $$ NamenodeProtocols spyNN = spy(preSpyNN)[ FD ]
