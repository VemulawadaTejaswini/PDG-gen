Line_2 $$ private static boolean checkPrintAllValues(JMXGet jmx) throws Exception -->Line_9 $$ jmx.printAllValues()[ CD ]
Line_2 $$ private static boolean checkPrintAllValues(JMXGet jmx) throws Exception -->Line_10 $$ if ((size = pipeIn.available()) != 0) [ CD ]
Line_2 $$ private static boolean checkPrintAllValues(JMXGet jmx) throws Exception -->Line_7 $$ PipedInputStream pipeIn = new PipedInputStream(pipeOut)[ CD ]
Line_7 $$ PipedInputStream pipeIn = new PipedInputStream(pipeOut)-->Line_12 $$ pipeIn.read(bytes, 0, bytes.length)[ FD ]
Line_2 $$ private static boolean checkPrintAllValues(JMXGet jmx) throws Exception -->Line_3 $$ int size = 0[ CD ]
Line_10 $$ if ((size = pipeIn.available()) != 0) -->Line_11 $$ bytes = new byte[size][ CD ]
Line_10 $$ if ((size = pipeIn.available()) != 0) -->Line_12 $$ pipeIn.read(bytes, 0, bytes.length)[ CD ]
Line_7 $$ PipedInputStream pipeIn = new PipedInputStream(pipeOut)-->Line_10 $$ if ((size = pipeIn.available()) != 0) [ FD ]
Line_2 $$ private static boolean checkPrintAllValues(JMXGet jmx) throws Exception -->Line_8 $$ System.setErr(new PrintStream(pipeOut))[ CD ]
Line_3 $$ int size = 0-->Line_10 $$ if ((size = pipeIn.available()) != 0) [ FD ]
Line_2 $$ private static boolean checkPrintAllValues(JMXGet jmx) throws Exception -->Line_16 $$ return bytes != null ? new String(bytes).contains(pattern) : false[ CD ]
Line_5 $$ String pattern = "List of all the available keys:"-->Line_16 $$ return bytes != null ? new String(bytes).contains(pattern) : false[ FD ]
Line_4 $$ byte[] bytes = null-->Line_11 $$ bytes = new byte[size][ FD ]
Line_11 $$ bytes = new byte[size]-->Line_12 $$ pipeIn.read(bytes, 0, bytes.length)[ FD ]
Line_2 $$ private static boolean checkPrintAllValues(JMXGet jmx) throws Exception -->Line_15 $$ pipeIn.close()[ CD ]
Line_2 $$ private static boolean checkPrintAllValues(JMXGet jmx) throws Exception -->Line_14 $$ pipeOut.close()[ CD ]
Line_4 $$ byte[] bytes = null-->Line_12 $$ pipeIn.read(bytes, 0, bytes.length)[ FD ]
Line_7 $$ PipedInputStream pipeIn = new PipedInputStream(pipeOut)-->Line_15 $$ pipeIn.close()[ FD ]
Line_2 $$ private static boolean checkPrintAllValues(JMXGet jmx) throws Exception -->Line_5 $$ String pattern = "List of all the available keys:"[ CD ]
Line_2 $$ private static boolean checkPrintAllValues(JMXGet jmx) throws Exception -->Line_4 $$ byte[] bytes = null[ CD ]
Line_6 $$ PipedOutputStream pipeOut = new PipedOutputStream()-->Line_14 $$ pipeOut.close()[ FD ]
Line_2 $$ private static boolean checkPrintAllValues(JMXGet jmx) throws Exception -->Line_6 $$ PipedOutputStream pipeOut = new PipedOutputStream()[ CD ]
Line_2 $$ private static boolean checkPrintAllValues(JMXGet jmx) throws Exception -->Line_9 $$ jmx.printAllValues()[ FD ]
