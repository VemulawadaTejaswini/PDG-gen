Line_13 $$ if (badRecords.size() > 2 && line.contains(badRecords.get(2))) -->Line_14 $$ LOG.warn("Encountered BAD record")[ CD ]
Line_2 $$ protected void processLine(String line) throws Exception -->Line_7 $$ if (badRecords.size() > 0 && line.contains(badRecords.get(0))) [ FD ]
Line_3 $$ List<String> badRecords = MAPPER_BAD_RECORDS-->Line_13 $$ if (badRecords.size() > 2 && line.contains(badRecords.get(2))) [ FD ]
Line_5 $$ badRecords = REDUCER_BAD_RECORDS-->Line_10 $$ if (badRecords.size() > 1 && line.contains(badRecords.get(1))) [ FD ]
Line_3 $$ List<String> badRecords = MAPPER_BAD_RECORDS-->Line_7 $$ if (badRecords.size() > 0 && line.contains(badRecords.get(0))) [ FD ]
Line_2 $$ protected void processLine(String line) throws Exception -->Line_13 $$ if (badRecords.size() > 2 && line.contains(badRecords.get(2))) [ FD ]
Line_2 $$ protected void processLine(String line) throws Exception -->Line_3 $$ List<String> badRecords = MAPPER_BAD_RECORDS[ CD ]
Line_13 $$ if (badRecords.size() > 2 && line.contains(badRecords.get(2))) -->Line_15 $$ System.exit(-1)[ CD ]
Line_2 $$ protected void processLine(String line) throws Exception -->Line_4 $$ if (isReducer) [ CD ]
Line_5 $$ badRecords = REDUCER_BAD_RECORDS-->Line_13 $$ if (badRecords.size() > 2 && line.contains(badRecords.get(2))) [ FD ]
Line_3 $$ List<String> badRecords = MAPPER_BAD_RECORDS-->Line_5 $$ badRecords = REDUCER_BAD_RECORDS[ FD ]
Line_4 $$ if (isReducer) -->Line_5 $$ badRecords = REDUCER_BAD_RECORDS[ CD ]
Line_7 $$ if (badRecords.size() > 0 && line.contains(badRecords.get(0))) -->Line_9 $$ System.exit(-1)[ CD ]
Line_2 $$ protected void processLine(String line) throws Exception -->Line_17 $$ super.processLine(line)[ CD ]
Line_7 $$ if (badRecords.size() > 0 && line.contains(badRecords.get(0))) -->Line_8 $$ LOG.warn("Encountered BAD record")[ CD ]
Line_5 $$ badRecords = REDUCER_BAD_RECORDS-->Line_7 $$ if (badRecords.size() > 0 && line.contains(badRecords.get(0))) [ FD ]
Line_7 $$ if (badRecords.size() > 0 && line.contains(badRecords.get(0))) -->Line_10 $$ if (badRecords.size() > 1 && line.contains(badRecords.get(1))) [ CD ]
Line_2 $$ protected void processLine(String line) throws Exception -->Line_10 $$ if (badRecords.size() > 1 && line.contains(badRecords.get(1))) [ FD ]
Line_2 $$ protected void processLine(String line) throws Exception -->Line_17 $$ super.processLine(line)[ FD ]
Line_2 $$ protected void processLine(String line) throws Exception -->Line_7 $$ if (badRecords.size() > 0 && line.contains(badRecords.get(0))) [ CD ]
Line_3 $$ List<String> badRecords = MAPPER_BAD_RECORDS-->Line_10 $$ if (badRecords.size() > 1 && line.contains(badRecords.get(1))) [ FD ]
Line_10 $$ if (badRecords.size() > 1 && line.contains(badRecords.get(1))) -->Line_13 $$ if (badRecords.size() > 2 && line.contains(badRecords.get(2))) [ CD ]
Line_10 $$ if (badRecords.size() > 1 && line.contains(badRecords.get(1))) -->Line_11 $$ LOG.warn("Encountered BAD record")[ CD ]
