Line_33 $$ property = property.substring(property.indexOf("set") + 3, property.length() - 1)-->Line_36 $$ setters.add(property)[ FD ]
Line_14 $$ if (found) -->Line_15 $$ String property = matcher.group()[ CD ]
Line_22 $$ property = Introspector.decapitalize(property)-->Line_23 $$ getters.add(property)[ FD ]
Line_2 $$ private List<String> _getTransients(Entity entity, boolean parent) throws Exception -->Line_5 $$ modelFile = new File(_outputPath + "/model/impl/" + entity.getName() + "ModelImpl.java")[ FD ]
Line_31 $$ if (found) -->Line_32 $$ String property = matcher.group()[ CD ]
Line_11 $$ Set<String> getters = new HashSet()-->Line_23 $$ getters.add(property)[ FD ]
Line_28 $$ Set<String> setters = new HashSet()-->Line_40 $$ getters.retainAll(setters)[ FD ]
Line_2 $$ private List<String> _getTransients(Entity entity, boolean parent) throws Exception -->Line_40 $$ getters.retainAll(setters)[ CD ]
Line_35 $$ property = Introspector.decapitalize(property)-->Line_34 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) [ FD ]
Line_2 $$ private List<String> _getTransients(Entity entity, boolean parent) throws Exception -->Line_29 $$ while (!matcher.hitEnd()) [ CD ]
Line_2 $$ private List<String> _getTransients(Entity entity, boolean parent) throws Exception -->Line_34 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) [ FD ]
Line_17 $$ property = property.substring(property.indexOf("get") + 3, property.length() - 1)-->Line_21 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) [ FD ]
Line_15 $$ String property = matcher.group()-->Line_36 $$ setters.add(property)[ FD ]
Line_22 $$ property = Introspector.decapitalize(property)-->Line_16 $$ if (property.contains("get")) [ FD ]
Line_35 $$ property = Introspector.decapitalize(property)-->Line_33 $$ property = property.substring(property.indexOf("set") + 3, property.length() - 1)[ FD ]
Line_2 $$ private List<String> _getTransients(Entity entity, boolean parent) throws Exception -->Line_42 $$ Collections.sort(transients)[ CD ]
Line_34 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) -->Line_36 $$ setters.add(property)[ CD ]
Line_19 $$ property = property.substring(property.indexOf("is") + 2, property.length() - 1)-->Line_34 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) [ FD ]
Line_9 $$ String content = _read(modelFile)-->Line_10 $$ Matcher matcher = _getterPattern.matcher(content)[ FD ]
Line_27 $$ matcher = _setterPattern.matcher(content)-->Line_32 $$ String property = matcher.group()[ FD ]
Line_15 $$ String property = matcher.group()-->Line_34 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) [ FD ]
Line_22 $$ property = Introspector.decapitalize(property)-->Line_36 $$ setters.add(property)[ FD ]
Line_21 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) -->Line_23 $$ getters.add(property)[ CD ]
Line_2 $$ private List<String> _getTransients(Entity entity, boolean parent) throws Exception -->Line_7 $$ modelFile = new File(_outputPath + "/model/impl/" + entity.getName() + "Impl.java")[ FD ]
Line_15 $$ String property = matcher.group()-->Line_17 $$ property = property.substring(property.indexOf("get") + 3, property.length() - 1)[ FD ]
Line_14 $$ if (found) -->Line_21 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) [ CD ]
Line_19 $$ property = property.substring(property.indexOf("is") + 2, property.length() - 1)-->Line_23 $$ getters.add(property)[ FD ]
Line_9 $$ String content = _read(modelFile)-->Line_27 $$ matcher = _setterPattern.matcher(content)[ FD ]
Line_33 $$ property = property.substring(property.indexOf("set") + 3, property.length() - 1)-->Line_34 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) [ FD ]
Line_34 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) -->Line_35 $$ property = Introspector.decapitalize(property)[ CD ]
Line_32 $$ String property = matcher.group()-->Line_33 $$ property = property.substring(property.indexOf("set") + 3, property.length() - 1)[ FD ]
Line_7 $$ modelFile = new File(_outputPath + "/model/impl/" + entity.getName() + "Impl.java")-->Line_9 $$ String content = _read(modelFile)[ FD ]
Line_2 $$ private List<String> _getTransients(Entity entity, boolean parent) throws Exception -->Line_3 $$ File modelFile = null[ CD ]
Line_17 $$ property = property.substring(property.indexOf("get") + 3, property.length() - 1)-->Line_35 $$ property = Introspector.decapitalize(property)[ FD ]
Line_29 $$ while (!matcher.hitEnd()) -->Line_30 $$ boolean found = matcher.find()[ CD ]
Line_2 $$ private List<String> _getTransients(Entity entity, boolean parent) throws Exception -->Line_43 $$ return transients[ CD ]
Line_10 $$ Matcher matcher = _getterPattern.matcher(content)-->Line_30 $$ boolean found = matcher.find()[ FD ]
Line_15 $$ String property = matcher.group()-->Line_22 $$ property = Introspector.decapitalize(property)[ FD ]
Line_17 $$ property = property.substring(property.indexOf("get") + 3, property.length() - 1)-->Line_33 $$ property = property.substring(property.indexOf("set") + 3, property.length() - 1)[ FD ]
Line_2 $$ private List<String> _getTransients(Entity entity, boolean parent) throws Exception -->Line_11 $$ Set<String> getters = new HashSet()[ CD ]
Line_11 $$ Set<String> getters = new HashSet()-->Line_40 $$ getters.retainAll(setters)[ FD ]
Line_22 $$ property = Introspector.decapitalize(property)-->Line_19 $$ property = property.substring(property.indexOf("is") + 2, property.length() - 1)[ FD ]
Line_28 $$ Set<String> setters = new HashSet()-->Line_36 $$ setters.add(property)[ FD ]
Line_2 $$ private List<String> _getTransients(Entity entity, boolean parent) throws Exception -->Line_41 $$ List<String> transients = new ArrayList(getters)[ CD ]
Line_3 $$ File modelFile = null-->Line_5 $$ modelFile = new File(_outputPath + "/model/impl/" + entity.getName() + "ModelImpl.java")[ FD ]
Line_15 $$ String property = matcher.group()-->Line_16 $$ if (property.contains("get")) [ FD ]
Line_31 $$ if (found) -->Line_33 $$ property = property.substring(property.indexOf("set") + 3, property.length() - 1)[ CD ]
Line_19 $$ property = property.substring(property.indexOf("is") + 2, property.length() - 1)-->Line_22 $$ property = Introspector.decapitalize(property)[ FD ]
Line_15 $$ String property = matcher.group()-->Line_35 $$ property = Introspector.decapitalize(property)[ FD ]
Line_4 $$ if (parent) -->Line_5 $$ modelFile = new File(_outputPath + "/model/impl/" + entity.getName() + "ModelImpl.java")[ CD ]
Line_2 $$ private List<String> _getTransients(Entity entity, boolean parent) throws Exception -->Line_12 $$ while (!matcher.hitEnd()) [ CD ]
Line_15 $$ String property = matcher.group()-->Line_33 $$ property = property.substring(property.indexOf("set") + 3, property.length() - 1)[ FD ]
Line_10 $$ Matcher matcher = _getterPattern.matcher(content)-->Line_27 $$ matcher = _setterPattern.matcher(content)[ FD ]
Line_19 $$ property = property.substring(property.indexOf("is") + 2, property.length() - 1)-->Line_17 $$ property = property.substring(property.indexOf("get") + 3, property.length() - 1)[ FD ]
Line_27 $$ matcher = _setterPattern.matcher(content)-->Line_29 $$ while (!matcher.hitEnd()) [ FD ]
Line_19 $$ property = property.substring(property.indexOf("is") + 2, property.length() - 1)-->Line_35 $$ property = Introspector.decapitalize(property)[ FD ]
Line_41 $$ List<String> transients = new ArrayList(getters)-->Line_42 $$ Collections.sort(transients)[ FD ]
Line_2 $$ private List<String> _getTransients(Entity entity, boolean parent) throws Exception -->Line_28 $$ Set<String> setters = new HashSet()[ CD ]
Line_15 $$ String property = matcher.group()-->Line_19 $$ property = property.substring(property.indexOf("is") + 2, property.length() - 1)[ FD ]
Line_3 $$ File modelFile = null-->Line_9 $$ String content = _read(modelFile)[ FD ]
Line_19 $$ property = property.substring(property.indexOf("is") + 2, property.length() - 1)-->Line_33 $$ property = property.substring(property.indexOf("set") + 3, property.length() - 1)[ FD ]
Line_15 $$ String property = matcher.group()-->Line_21 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) [ FD ]
Line_10 $$ Matcher matcher = _getterPattern.matcher(content)-->Line_13 $$ boolean found = matcher.find()[ FD ]
Line_17 $$ property = property.substring(property.indexOf("get") + 3, property.length() - 1)-->Line_19 $$ property = property.substring(property.indexOf("is") + 2, property.length() - 1)[ FD ]
Line_17 $$ property = property.substring(property.indexOf("get") + 3, property.length() - 1)-->Line_23 $$ getters.add(property)[ FD ]
Line_16 $$ if (property.contains("get")) -->Line_17 $$ property = property.substring(property.indexOf("get") + 3, property.length() - 1)[ CD ]
Line_22 $$ property = Introspector.decapitalize(property)-->Line_33 $$ property = property.substring(property.indexOf("set") + 3, property.length() - 1)[ FD ]
Line_4 $$ if (parent) -->Line_7 $$ modelFile = new File(_outputPath + "/model/impl/" + entity.getName() + "Impl.java")[ CD ]
Line_32 $$ String property = matcher.group()-->Line_35 $$ property = Introspector.decapitalize(property)[ FD ]
Line_3 $$ File modelFile = null-->Line_7 $$ modelFile = new File(_outputPath + "/model/impl/" + entity.getName() + "Impl.java")[ FD ]
Line_17 $$ property = property.substring(property.indexOf("get") + 3, property.length() - 1)-->Line_34 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) [ FD ]
Line_32 $$ String property = matcher.group()-->Line_34 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) [ FD ]
Line_10 $$ Matcher matcher = _getterPattern.matcher(content)-->Line_12 $$ while (!matcher.hitEnd()) [ FD ]
Line_10 $$ Matcher matcher = _getterPattern.matcher(content)-->Line_32 $$ String property = matcher.group()[ FD ]
Line_2 $$ private List<String> _getTransients(Entity entity, boolean parent) throws Exception -->Line_9 $$ String content = _read(modelFile)[ CD ]
Line_33 $$ property = property.substring(property.indexOf("set") + 3, property.length() - 1)-->Line_35 $$ property = Introspector.decapitalize(property)[ FD ]
Line_27 $$ matcher = _setterPattern.matcher(content)-->Line_30 $$ boolean found = matcher.find()[ FD ]
Line_12 $$ while (!matcher.hitEnd()) -->Line_13 $$ boolean found = matcher.find()[ CD ]
Line_12 $$ while (!matcher.hitEnd()) -->Line_14 $$ if (found) [ CD ]
Line_35 $$ property = Introspector.decapitalize(property)-->Line_36 $$ setters.add(property)[ FD ]
Line_22 $$ property = Introspector.decapitalize(property)-->Line_35 $$ property = Introspector.decapitalize(property)[ FD ]
Line_21 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) -->Line_22 $$ property = Introspector.decapitalize(property)[ CD ]
Line_5 $$ modelFile = new File(_outputPath + "/model/impl/" + entity.getName() + "ModelImpl.java")-->Line_9 $$ String content = _read(modelFile)[ FD ]
Line_14 $$ if (found) -->Line_16 $$ if (property.contains("get")) [ CD ]
Line_2 $$ private List<String> _getTransients(Entity entity, boolean parent) throws Exception -->Line_10 $$ Matcher matcher = _getterPattern.matcher(content)[ CD ]
Line_22 $$ property = Introspector.decapitalize(property)-->Line_21 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) [ FD ]
Line_17 $$ property = property.substring(property.indexOf("get") + 3, property.length() - 1)-->Line_16 $$ if (property.contains("get")) [ FD ]
Line_19 $$ property = property.substring(property.indexOf("is") + 2, property.length() - 1)-->Line_21 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) [ FD ]
Line_19 $$ property = property.substring(property.indexOf("is") + 2, property.length() - 1)-->Line_36 $$ setters.add(property)[ FD ]
Line_29 $$ while (!matcher.hitEnd()) -->Line_31 $$ if (found) [ CD ]
Line_17 $$ property = property.substring(property.indexOf("get") + 3, property.length() - 1)-->Line_36 $$ setters.add(property)[ FD ]
Line_5 $$ modelFile = new File(_outputPath + "/model/impl/" + entity.getName() + "ModelImpl.java")-->Line_7 $$ modelFile = new File(_outputPath + "/model/impl/" + entity.getName() + "Impl.java")[ FD ]
Line_31 $$ if (found) -->Line_34 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) [ CD ]
Line_2 $$ private List<String> _getTransients(Entity entity, boolean parent) throws Exception -->Line_21 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) [ FD ]
Line_15 $$ String property = matcher.group()-->Line_23 $$ getters.add(property)[ FD ]
Line_17 $$ property = property.substring(property.indexOf("get") + 3, property.length() - 1)-->Line_22 $$ property = Introspector.decapitalize(property)[ FD ]
Line_2 $$ private List<String> _getTransients(Entity entity, boolean parent) throws Exception -->Line_27 $$ matcher = _setterPattern.matcher(content)[ CD ]
Line_16 $$ if (property.contains("get")) -->Line_19 $$ property = property.substring(property.indexOf("is") + 2, property.length() - 1)[ CD ]
Line_2 $$ private List<String> _getTransients(Entity entity, boolean parent) throws Exception -->Line_4 $$ if (parent) [ CD ]
Line_19 $$ property = property.substring(property.indexOf("is") + 2, property.length() - 1)-->Line_16 $$ if (property.contains("get")) [ FD ]
Line_10 $$ Matcher matcher = _getterPattern.matcher(content)-->Line_29 $$ while (!matcher.hitEnd()) [ FD ]
Line_10 $$ Matcher matcher = _getterPattern.matcher(content)-->Line_15 $$ String property = matcher.group()[ FD ]
Line_22 $$ property = Introspector.decapitalize(property)-->Line_17 $$ property = property.substring(property.indexOf("get") + 3, property.length() - 1)[ FD ]
Line_22 $$ property = Introspector.decapitalize(property)-->Line_34 $$ if (!entity.hasColumn(property) && !entity.hasColumn(Introspector.decapitalize(property))) [ FD ]
Line_32 $$ String property = matcher.group()-->Line_36 $$ setters.add(property)[ FD ]
