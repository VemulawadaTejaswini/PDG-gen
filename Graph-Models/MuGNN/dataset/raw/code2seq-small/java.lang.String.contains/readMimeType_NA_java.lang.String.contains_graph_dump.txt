Line_2 $$ protected void readMimeType(Element element) -->Line_3 $$ Set<String> mimeTypes = new HashSet()[ CD ]
Line_17 $$ if (GLOB_TAG.equals(childElement.getTagName())) -->Line_27 $$ if (!extension.contains("*") && !extension.contains("?") && !extension.contains("[")) [ CD ]
Line_2 $$ protected void readMimeType(Element element) -->Line_5 $$ String name = element.getAttribute(MIME_TYPE_TYPE_ATTR)[ CD ]
Line_4 $$ Set<String> extensions = new HashSet()-->Line_28 $$ extensions.add(extension)[ FD ]
Line_2 $$ protected void readMimeType(Element element) -->Line_8 $$ for (int i = 0; i < nodeList.getLength(); i++) [ CD ]
Line_8 $$ for (int i = 0; i < nodeList.getLength(); i++) -->Line_9 $$ Node node = nodeList.item(i)[ CD ]
Line_2 $$ protected void readMimeType(Element element) -->Line_7 $$ NodeList nodeList = element.getChildNodes()[ CD ]
Line_15 $$ String alias = childElement.getAttribute(ALIAS_TYPE_ATTR)-->Line_16 $$ mimeTypes.add(alias)[ FD ]
Line_14 $$ if (ALIAS_TAG.equals(childElement.getTagName())) -->Line_15 $$ String alias = childElement.getAttribute(ALIAS_TYPE_ATTR)[ CD ]
Line_17 $$ if (GLOB_TAG.equals(childElement.getTagName())) -->Line_19 $$ if (isRegex) [ CD ]
Line_22 $$ String pattern = childElement.getAttribute(PATTERN_ATTR)-->Line_26 $$ String extension = pattern.substring(1)[ FD ]
Line_26 $$ String extension = pattern.substring(1)-->Line_27 $$ if (!extension.contains("*") && !extension.contains("?") && !extension.contains("[")) [ FD ]
Line_26 $$ String extension = pattern.substring(1)-->Line_28 $$ extensions.add(extension)[ FD ]
Line_8 $$ for (int i = 0; i < nodeList.getLength(); i++) -->Line_13 $$ Element childElement = (Element) node[ CD ]
Line_13 $$ Element childElement = (Element) node-->Line_22 $$ String pattern = childElement.getAttribute(PATTERN_ATTR)[ FD ]
Line_27 $$ if (!extension.contains("*") && !extension.contains("?") && !extension.contains("[")) -->Line_28 $$ extensions.add(extension)[ CD ]
Line_22 $$ String pattern = childElement.getAttribute(PATTERN_ATTR)-->Line_23 $$ if (!pattern.startsWith("*")) [ FD ]
Line_13 $$ Element childElement = (Element) node-->Line_14 $$ if (ALIAS_TAG.equals(childElement.getTagName())) [ FD ]
Line_2 $$ protected void readMimeType(Element element) -->Line_5 $$ String name = element.getAttribute(MIME_TYPE_TYPE_ATTR)[ FD ]
Line_17 $$ if (GLOB_TAG.equals(childElement.getTagName())) -->Line_26 $$ String extension = pattern.substring(1)[ CD ]
Line_7 $$ NodeList nodeList = element.getChildNodes()-->Line_9 $$ Node node = nodeList.item(i)[ FD ]
Line_9 $$ Node node = nodeList.item(i)-->Line_10 $$ if (node.getNodeType() != Node.ELEMENT_NODE) [ FD ]
Line_17 $$ if (GLOB_TAG.equals(childElement.getTagName())) -->Line_18 $$ boolean isRegex = GetterUtil.getBoolean(childElement.getAttribute(ISREGEX_ATTR))[ CD ]
Line_7 $$ NodeList nodeList = element.getChildNodes()-->Line_8 $$ for (int i = 0; i < nodeList.getLength(); i++) [ FD ]
Line_2 $$ protected void readMimeType(Element element) -->Line_7 $$ NodeList nodeList = element.getChildNodes()[ FD ]
Line_8 $$ for (int i = 0; i < nodeList.getLength(); i++) -->Line_9 $$ Node node = nodeList.item(i)[ FD ]
Line_17 $$ if (GLOB_TAG.equals(childElement.getTagName())) -->Line_22 $$ String pattern = childElement.getAttribute(PATTERN_ATTR)[ CD ]
Line_8 $$ for (int i = 0; i < nodeList.getLength(); i++) -->Line_10 $$ if (node.getNodeType() != Node.ELEMENT_NODE) [ CD ]
Line_14 $$ if (ALIAS_TAG.equals(childElement.getTagName())) -->Line_16 $$ mimeTypes.add(alias)[ CD ]
Line_2 $$ protected void readMimeType(Element element) -->Line_4 $$ Set<String> extensions = new HashSet()[ CD ]
Line_32 $$ for (String mimeType : mimeTypes) -->Line_33 $$ _extensionsMap.put(mimeType, extensions)[ FD ]
Line_13 $$ Element childElement = (Element) node-->Line_17 $$ if (GLOB_TAG.equals(childElement.getTagName())) [ FD ]
Line_13 $$ Element childElement = (Element) node-->Line_18 $$ boolean isRegex = GetterUtil.getBoolean(childElement.getAttribute(ISREGEX_ATTR))[ FD ]
Line_17 $$ if (GLOB_TAG.equals(childElement.getTagName())) -->Line_23 $$ if (!pattern.startsWith("*")) [ CD ]
Line_4 $$ Set<String> extensions = new HashSet()-->Line_33 $$ _extensionsMap.put(mimeType, extensions)[ FD ]
Line_2 $$ protected void readMimeType(Element element) -->Line_6 $$ mimeTypes.add(name)[ CD ]
Line_5 $$ String name = element.getAttribute(MIME_TYPE_TYPE_ATTR)-->Line_6 $$ mimeTypes.add(name)[ FD ]
Line_3 $$ Set<String> mimeTypes = new HashSet()-->Line_6 $$ mimeTypes.add(name)[ FD ]
Line_3 $$ Set<String> mimeTypes = new HashSet()-->Line_16 $$ mimeTypes.add(alias)[ FD ]
Line_14 $$ if (ALIAS_TAG.equals(childElement.getTagName())) -->Line_17 $$ if (GLOB_TAG.equals(childElement.getTagName())) [ CD ]
Line_8 $$ for (int i = 0; i < nodeList.getLength(); i++) -->Line_14 $$ if (ALIAS_TAG.equals(childElement.getTagName())) [ CD ]
Line_13 $$ Element childElement = (Element) node-->Line_15 $$ String alias = childElement.getAttribute(ALIAS_TYPE_ATTR)[ FD ]
