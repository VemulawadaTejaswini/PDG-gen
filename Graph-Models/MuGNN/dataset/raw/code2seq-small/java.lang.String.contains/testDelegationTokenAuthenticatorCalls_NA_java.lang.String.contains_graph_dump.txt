Line_12 $$ URL authURL = new URL(getJettyURL() + "/foo/bar?authenticated=foo")-->Line_41 $$ aUrl.getDelegationToken(authURL, token, FOO_USER)[ FD ]
Line_12 $$ URL authURL = new URL(getJettyURL() + "/foo/bar?authenticated=foo")-->Line_40 $$ aUrl.cancelDelegationToken(authURL, token)[ FD ]
Line_4 $$ Context context = new Context()-->Line_5 $$ context.setContextPath("/foo")[ FD ]
Line_14 $$ DelegationTokenAuthenticatedURL.Token token = new DelegationTokenAuthenticatedURL.Token()-->Line_45 $$ aUrl.renewDelegationToken(nonAuthURL, token)[ FD ]
Line_15 $$ DelegationTokenAuthenticatedURL aUrl = new DelegationTokenAuthenticatedURL()-->Line_34 $$ aUrl.renewDelegationToken(authURL2, token)[ FD ]
Line_14 $$ DelegationTokenAuthenticatedURL.Token token = new DelegationTokenAuthenticatedURL.Token()-->Line_39 $$ aUrl.getDelegationToken(authURL, token, FOO_USER)[ FD ]
Line_15 $$ DelegationTokenAuthenticatedURL aUrl = new DelegationTokenAuthenticatedURL()-->Line_17 $$ aUrl.getDelegationToken(nonAuthURL, token, FOO_USER)[ FD ]
Line_2 $$ public void testDelegationTokenAuthenticatorCalls() throws Exception -->Line_4 $$ Context context = new Context()[ CD ]
Line_14 $$ DelegationTokenAuthenticatedURL.Token token = new DelegationTokenAuthenticatedURL.Token()-->Line_25 $$ aUrl.renewDelegationToken(authURL, token)[ FD ]
Line_14 $$ DelegationTokenAuthenticatedURL.Token token = new DelegationTokenAuthenticatedURL.Token()-->Line_32 $$ aUrl.getDelegationToken(authURL, token, FOO_USER)[ FD ]
Line_14 $$ DelegationTokenAuthenticatedURL.Token token = new DelegationTokenAuthenticatedURL.Token()-->Line_34 $$ aUrl.renewDelegationToken(authURL2, token)[ FD ]
Line_14 $$ DelegationTokenAuthenticatedURL.Token token = new DelegationTokenAuthenticatedURL.Token()-->Line_40 $$ aUrl.cancelDelegationToken(authURL, token)[ FD ]
Line_2 $$ public void testDelegationTokenAuthenticatorCalls() throws Exception -->Line_7 $$ context.addFilter(new FilterHolder(AFilter.class), "/*", 0)[ CD ]
Line_14 $$ DelegationTokenAuthenticatedURL.Token token = new DelegationTokenAuthenticatedURL.Token()-->Line_43 $$ aUrl.getDelegationToken(authURL, token, FOO_USER)[ FD ]
Line_4 $$ Context context = new Context()-->Line_8 $$ context.addServlet(new ServletHolder(PingServlet.class), "/bar")[ FD ]
Line_15 $$ DelegationTokenAuthenticatedURL aUrl = new DelegationTokenAuthenticatedURL()-->Line_25 $$ aUrl.renewDelegationToken(authURL, token)[ FD ]
Line_15 $$ DelegationTokenAuthenticatedURL aUrl = new DelegationTokenAuthenticatedURL()-->Line_32 $$ aUrl.getDelegationToken(authURL, token, FOO_USER)[ FD ]
Line_2 $$ public void testDelegationTokenAuthenticatorCalls() throws Exception -->Line_6 $$ jetty.setHandler(context)[ CD ]
Line_15 $$ DelegationTokenAuthenticatedURL aUrl = new DelegationTokenAuthenticatedURL()-->Line_40 $$ aUrl.cancelDelegationToken(authURL, token)[ FD ]
Line_2 $$ public void testDelegationTokenAuthenticatorCalls() throws Exception -->Line_3 $$ final Server jetty = createJettyServer()[ CD ]
Line_15 $$ DelegationTokenAuthenticatedURL aUrl = new DelegationTokenAuthenticatedURL()-->Line_42 $$ aUrl.cancelDelegationToken(nonAuthURL, token)[ FD ]
Line_14 $$ DelegationTokenAuthenticatedURL.Token token = new DelegationTokenAuthenticatedURL.Token()-->Line_17 $$ aUrl.getDelegationToken(nonAuthURL, token, FOO_USER)[ FD ]
Line_3 $$ final Server jetty = createJettyServer()-->Line_50 $$ jetty.stop()[ FD ]
Line_13 $$ URL authURL2 = new URL(getJettyURL() + "/foo/bar?authenticated=bar")-->Line_34 $$ aUrl.renewDelegationToken(authURL2, token)[ FD ]
Line_11 $$ URL nonAuthURL = new URL(getJettyURL() + "/foo/bar")-->Line_17 $$ aUrl.getDelegationToken(nonAuthURL, token, FOO_USER)[ FD ]
Line_14 $$ DelegationTokenAuthenticatedURL.Token token = new DelegationTokenAuthenticatedURL.Token()-->Line_23 $$ Assert.assertNotNull(token.getDelegationToken())[ FD ]
Line_14 $$ DelegationTokenAuthenticatedURL.Token token = new DelegationTokenAuthenticatedURL.Token()-->Line_24 $$ Assert.assertEquals(new Text("token-kind"), token.getDelegationToken().getKind())[ FD ]
Line_15 $$ DelegationTokenAuthenticatedURL aUrl = new DelegationTokenAuthenticatedURL()-->Line_27 $$ aUrl.renewDelegationToken(nonAuthURL, token)[ FD ]
Line_4 $$ Context context = new Context()-->Line_7 $$ context.addFilter(new FilterHolder(AFilter.class), "/*", 0)[ FD ]
Line_11 $$ URL nonAuthURL = new URL(getJettyURL() + "/foo/bar")-->Line_42 $$ aUrl.cancelDelegationToken(nonAuthURL, token)[ FD ]
Line_12 $$ URL authURL = new URL(getJettyURL() + "/foo/bar?authenticated=foo")-->Line_22 $$ aUrl.getDelegationToken(authURL, token, FOO_USER)[ FD ]
Line_14 $$ DelegationTokenAuthenticatedURL.Token token = new DelegationTokenAuthenticatedURL.Token()-->Line_41 $$ aUrl.getDelegationToken(authURL, token, FOO_USER)[ FD ]
Line_11 $$ URL nonAuthURL = new URL(getJettyURL() + "/foo/bar")-->Line_45 $$ aUrl.renewDelegationToken(nonAuthURL, token)[ FD ]
Line_15 $$ DelegationTokenAuthenticatedURL aUrl = new DelegationTokenAuthenticatedURL()-->Line_45 $$ aUrl.renewDelegationToken(nonAuthURL, token)[ FD ]
Line_15 $$ DelegationTokenAuthenticatedURL aUrl = new DelegationTokenAuthenticatedURL()-->Line_43 $$ aUrl.getDelegationToken(authURL, token, FOO_USER)[ FD ]
Line_12 $$ URL authURL = new URL(getJettyURL() + "/foo/bar?authenticated=foo")-->Line_25 $$ aUrl.renewDelegationToken(authURL, token)[ FD ]
Line_12 $$ URL authURL = new URL(getJettyURL() + "/foo/bar?authenticated=foo")-->Line_32 $$ aUrl.getDelegationToken(authURL, token, FOO_USER)[ FD ]
Line_12 $$ URL authURL = new URL(getJettyURL() + "/foo/bar?authenticated=foo")-->Line_39 $$ aUrl.getDelegationToken(authURL, token, FOO_USER)[ FD ]
Line_4 $$ Context context = new Context()-->Line_6 $$ jetty.setHandler(context)[ FD ]
Line_14 $$ DelegationTokenAuthenticatedURL.Token token = new DelegationTokenAuthenticatedURL.Token()-->Line_22 $$ aUrl.getDelegationToken(authURL, token, FOO_USER)[ FD ]
Line_11 $$ URL nonAuthURL = new URL(getJettyURL() + "/foo/bar")-->Line_27 $$ aUrl.renewDelegationToken(nonAuthURL, token)[ FD ]
Line_3 $$ final Server jetty = createJettyServer()-->Line_10 $$ jetty.start()[ FD ]
Line_12 $$ URL authURL = new URL(getJettyURL() + "/foo/bar?authenticated=foo")-->Line_43 $$ aUrl.getDelegationToken(authURL, token, FOO_USER)[ FD ]
Line_15 $$ DelegationTokenAuthenticatedURL aUrl = new DelegationTokenAuthenticatedURL()-->Line_22 $$ aUrl.getDelegationToken(authURL, token, FOO_USER)[ FD ]
Line_14 $$ DelegationTokenAuthenticatedURL.Token token = new DelegationTokenAuthenticatedURL.Token()-->Line_27 $$ aUrl.renewDelegationToken(nonAuthURL, token)[ FD ]
Line_15 $$ DelegationTokenAuthenticatedURL aUrl = new DelegationTokenAuthenticatedURL()-->Line_39 $$ aUrl.getDelegationToken(authURL, token, FOO_USER)[ FD ]
Line_14 $$ DelegationTokenAuthenticatedURL.Token token = new DelegationTokenAuthenticatedURL.Token()-->Line_42 $$ aUrl.cancelDelegationToken(nonAuthURL, token)[ FD ]
Line_2 $$ public void testDelegationTokenAuthenticatorCalls() throws Exception -->Line_8 $$ context.addServlet(new ServletHolder(PingServlet.class), "/bar")[ CD ]
Line_2 $$ public void testDelegationTokenAuthenticatorCalls() throws Exception -->Line_5 $$ context.setContextPath("/foo")[ CD ]
Line_3 $$ final Server jetty = createJettyServer()-->Line_6 $$ jetty.setHandler(context)[ FD ]
Line_15 $$ DelegationTokenAuthenticatedURL aUrl = new DelegationTokenAuthenticatedURL()-->Line_41 $$ aUrl.getDelegationToken(authURL, token, FOO_USER)[ FD ]
