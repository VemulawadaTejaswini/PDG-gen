Line_2 $$ private void doProcessorTest(final String className, final String expectedError, final String... memberNames) throws Exception -->Line_18 $$ assertTrue(e.getMessage(), e.getMessage().contains(expectedError))[ FD ]
Line_2 $$ private void doProcessorTest(final String className, final String expectedError, final String... memberNames) throws Exception -->Line_9 $$ final PyElement member = findMember(className, memberName)[ FD ]
Line_8 $$ for (String memberName : memberNames) -->Line_9 $$ final PyElement member = findMember(className, memberName)[ FD ]
Line_6 $$ final PyClass clazz = findClass(className)-->Line_10 $$ members.add(MembersManager.findMember(clazz, member))[ FD ]
Line_12 $$ final PyPushDownProcessor processor = new PyPushDownProcessor(myFixture.getProject(), members, clazz)-->Line_13 $$ moveViaProcessor(myFixture.getProject(), processor)[ FD ]
Line_2 $$ private void doProcessorTest(final String className, final String expectedError, final String... memberNames) throws Exception -->Line_6 $$ final PyClass clazz = findClass(className)[ FD ]
Line_2 $$ private void doProcessorTest(final String className, final String expectedError, final String... memberNames) throws Exception -->Line_16 $$ if (expectedError == null)[ FD ]
Line_7 $$ final List<PyMemberInfo<PyElement>> members = new ArrayList<PyMemberInfo<PyElement>>()-->Line_10 $$ members.add(MembersManager.findMember(clazz, member))[ FD ]
Line_9 $$ final PyElement member = findMember(className, memberName)-->Line_10 $$ members.add(MembersManager.findMember(clazz, member))[ FD ]
