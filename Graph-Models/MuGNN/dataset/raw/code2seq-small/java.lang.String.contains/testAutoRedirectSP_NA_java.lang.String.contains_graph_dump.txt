Line_6 $$ final UsernamePasswordCredentials credentials = new UsernamePasswordCredentials(PicketLinkTestBase.ANIL, PicketLinkTestBase.ANIL)-->Line_7 $$ httpClient.getCredentialsProvider().setCredentials(new AuthScope(null, idpUrl.getPort()), credentials)[ FD ]
Line_8 $$ String response = PicketLinkTestBase.makeCall(sp2Url, httpClient, 200)-->Line_9 $$ assertTrue("SP2 index page was not reached", response.contains("Welcome to SP2"))[ FD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_7 $$ httpClient.getCredentialsProvider().setCredentials(new AuthScope(null, idpUrl.getPort()), credentials)[ FD ]
Line_2 $$ public void testAutoRedirectSP() throws Exception -->Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()[ CD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_4 $$ httpClient.setRedirectStrategy(Utils.REDIRECT_STRATEGY)[ FD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_8 $$ String response = PicketLinkTestBase.makeCall(sp2Url, httpClient, 200)[ FD ]
Line_3 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_11 $$ httpClient.getConnectionManager().shutdown()[ FD ]
Line_2 $$ public void testAutoRedirectSP() throws Exception -->Line_4 $$ httpClient.setRedirectStrategy(Utils.REDIRECT_STRATEGY)[ CD ]
