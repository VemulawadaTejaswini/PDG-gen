Line_2 $$ public void testProjectWithUnresolvedDependency() throws Exception -->Line_10 $$ final List<LibraryOrderEntry> unresolvableDep = getModuleLibDeps("project_main", "Gradle: some:unresolvable-lib:0.1")[ CD ]
Line_10 $$ final List<LibraryOrderEntry> unresolvableDep = getModuleLibDeps("project_main", "Gradle: some:unresolvable-lib:0.1")-->Line_11 $$ assertEquals(1, unresolvableDep.size())[ FD ]
Line_2 $$ public void testProjectWithUnresolvedDependency() throws Exception -->Line_15 $$ final String[] unresolvableEntryUrls = unresolvableEntry.getUrls(OrderRootType.CLASSES)[ CD ]
Line_10 $$ final List<LibraryOrderEntry> unresolvableDep = getModuleLibDeps("project_main", "Gradle: some:unresolvable-lib:0.1")-->Line_12 $$ final LibraryOrderEntry unresolvableEntry = unresolvableDep.iterator().next()[ FD ]
Line_2 $$ public void testProjectWithUnresolvedDependency() throws Exception -->Line_19 $$ assertModuleLibDepScope("project_test", depName, DependencyScope.COMPILE)[ CD ]
Line_2 $$ public void testProjectWithUnresolvedDependency() throws Exception -->Line_9 $$ assertModuleLibDepScope("project_main", "Gradle: some:unresolvable-lib:0.1", DependencyScope.COMPILE)[ CD ]
Line_2 $$ public void testProjectWithUnresolvedDependency() throws Exception -->Line_5 $$ assertModules("project", "project_main", "project_test")[ CD ]
Line_2 $$ public void testProjectWithUnresolvedDependency() throws Exception -->Line_14 $$ assertEquals(DependencyScope.COMPILE, unresolvableEntry.getScope())[ CD ]
Line_3 $$ final VirtualFile depJar = createProjectJarSubFile("lib/dep/dep/1.0/dep-1.0.jar")-->Line_18 $$ assertModuleLibDep("project_test", depName, depJar.getUrl())[ FD ]
Line_6 $$ final String depName = "Gradle: dep:dep:1.0"-->Line_7 $$ assertModuleLibDep("project_main", depName, depJar.getUrl())[ FD ]
Line_6 $$ final String depName = "Gradle: dep:dep:1.0"-->Line_18 $$ assertModuleLibDep("project_test", depName, depJar.getUrl())[ FD ]
Line_6 $$ final String depName = "Gradle: dep:dep:1.0"-->Line_8 $$ assertModuleLibDepScope("project_main", depName, DependencyScope.COMPILE)[ FD ]
Line_2 $$ public void testProjectWithUnresolvedDependency() throws Exception -->Line_18 $$ assertModuleLibDep("project_test", depName, depJar.getUrl())[ CD ]
Line_3 $$ final VirtualFile depJar = createProjectJarSubFile("lib/dep/dep/1.0/dep-1.0.jar")-->Line_7 $$ assertModuleLibDep("project_main", depName, depJar.getUrl())[ FD ]
Line_2 $$ public void testProjectWithUnresolvedDependency() throws Exception -->Line_3 $$ final VirtualFile depJar = createProjectJarSubFile("lib/dep/dep/1.0/dep-1.0.jar")[ CD ]
Line_2 $$ public void testProjectWithUnresolvedDependency() throws Exception -->Line_11 $$ assertEquals(1, unresolvableDep.size())[ CD ]
Line_2 $$ public void testProjectWithUnresolvedDependency() throws Exception -->Line_16 $$ assertEquals(1, unresolvableEntryUrls.length)[ CD ]
Line_2 $$ public void testProjectWithUnresolvedDependency() throws Exception -->Line_4 $$ importProject("apply plugin: 'java'\n" + "\n" + "repositories [ CD ]
Line_2 $$ public void testProjectWithUnresolvedDependency() throws Exception -->Line_8 $$ assertModuleLibDepScope("project_main", depName, DependencyScope.COMPILE)[ CD ]
Line_2 $$ public void testProjectWithUnresolvedDependency() throws Exception -->Line_12 $$ final LibraryOrderEntry unresolvableEntry = unresolvableDep.iterator().next()[ CD ]
Line_6 $$ final String depName = "Gradle: dep:dep:1.0"-->Line_19 $$ assertModuleLibDepScope("project_test", depName, DependencyScope.COMPILE)[ FD ]
Line_12 $$ final LibraryOrderEntry unresolvableEntry = unresolvableDep.iterator().next()-->Line_14 $$ assertEquals(DependencyScope.COMPILE, unresolvableEntry.getScope())[ FD ]
Line_12 $$ final LibraryOrderEntry unresolvableEntry = unresolvableDep.iterator().next()-->Line_15 $$ final String[] unresolvableEntryUrls = unresolvableEntry.getUrls(OrderRootType.CLASSES)[ FD ]
Line_2 $$ public void testProjectWithUnresolvedDependency() throws Exception -->Line_13 $$ assertFalse(unresolvableEntry.isModuleLevel())[ CD ]
Line_2 $$ public void testProjectWithUnresolvedDependency() throws Exception -->Line_6 $$ final String depName = "Gradle: dep:dep:1.0"[ CD ]
Line_2 $$ public void testProjectWithUnresolvedDependency() throws Exception -->Line_17 $$ assertTrue(unresolvableEntryUrls[0].contains("Could not find some:unresolvable-lib:0.1"))[ CD ]
Line_2 $$ public void testProjectWithUnresolvedDependency() throws Exception -->Line_7 $$ assertModuleLibDep("project_main", depName, depJar.getUrl())[ CD ]
Line_12 $$ final LibraryOrderEntry unresolvableEntry = unresolvableDep.iterator().next()-->Line_13 $$ assertFalse(unresolvableEntry.isModuleLevel())[ FD ]
