Line_29 $$ path = themeDisplay.getI18nPath()-->Line_31 $$ return virtualHostname.concat(_pathContext).concat(path)[ FD ]
Line_18 $$ String virtualHostname = getVirtualHostname(layoutSet)-->Line_42 $$ if (Validator.isNull(virtualHostname) || StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ FD ]
Line_5 $$ String portalURL = themeDisplay.getPortalURL()-->Line_19 $$ String portalDomain = HttpUtil.getDomain(portalURL)[ FD ]
Line_53 $$ String friendlyURL = null-->Line_72 $$ sb.append(friendlyURL)[ FD ]
Line_21 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)-->Line_39 $$ virtualHostname = curLayoutSet.getVirtualHostname()[ FD ]
Line_18 $$ String virtualHostname = getVirtualHostname(layoutSet)-->Line_47 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)[ FD ]
Line_3 $$ Group group = layoutSet.getGroup()-->Line_13 $$ if ((refererLayout != null) && ((refererLayout.getGroupId() != group.getGroupId()) || (refererLayout.isPrivateLayout() != privateLayoutSet))) [ FD ]
Line_53 $$ String friendlyURL = null-->Line_61 $$ friendlyURL = _PUBLIC_GROUP_SERVLET_MAPPING[ FD ]
Line_42 $$ if (Validator.isNull(virtualHostname) || StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) -->Line_43 $$ Company company = themeDisplay.getCompany()[ CD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_67 $$ sb.append(themeDisplay.getI18nPath())[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_10 $$ long refererPlid = themeDisplay.getRefererPlid()[ FD ]
Line_22 $$ virtualHostname = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())-->Line_39 $$ virtualHostname = curLayoutSet.getVirtualHostname()[ FD ]
Line_55 $$ if (group.isUser()) -->Line_56 $$ friendlyURL = _PRIVATE_USER_SERVLET_MAPPING[ CD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_4 $$ boolean privateLayoutSet = layoutSet.getPrivateLayout()[ CD ]
Line_54 $$ if (privateLayoutSet) -->Line_61 $$ friendlyURL = _PUBLIC_GROUP_SERVLET_MAPPING[ CD ]
Line_63 $$ StringBundler sb = new StringBundler(6)-->Line_73 $$ sb.append(group.getFriendlyURL())[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_5 $$ String portalURL = themeDisplay.getPortalURL()[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_48 $$ portalURL = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())[ FD ]
Line_20 $$ if (Validator.isNotNull(virtualHostname) && (canonicalURL || !StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST))) -->Line_35 $$ if (canonicalURL || ((layoutSet.getLayoutSetId() != curLayoutSet.getLayoutSetId()) && (group.getClassPK() != themeDisplay.getUserId()))) [ CD ]
Line_34 $$ LayoutSet curLayoutSet = LayoutSetLocalServiceUtil.getLayoutSet(themeDisplay.getSiteGroupId(), privateLayoutSet)-->Line_39 $$ virtualHostname = curLayoutSet.getVirtualHostname()[ FD ]
Line_37 $$ virtualHostname = themeDisplay.getServerName()-->Line_38 $$ if (Validator.isNull(virtualHostname) || StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_18 $$ String virtualHostname = getVirtualHostname(layoutSet)[ FD ]
Line_7 $$ if (canonicalURL || !StringUtil.equalsIgnoreCase(themeDisplay.getServerName(), _LOCALHOST)) -->Line_8 $$ useGroupVirtualHostName = true[ CD ]
Line_22 $$ virtualHostname = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())-->Line_38 $$ if (Validator.isNull(virtualHostname) || StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ FD ]
Line_22 $$ virtualHostname = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())-->Line_37 $$ virtualHostname = themeDisplay.getServerName()[ FD ]
Line_39 $$ virtualHostname = curLayoutSet.getVirtualHostname()-->Line_47 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)[ FD ]
Line_21 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)-->Line_31 $$ return virtualHostname.concat(_pathContext).concat(path)[ FD ]
Line_56 $$ friendlyURL = _PRIVATE_USER_SERVLET_MAPPING-->Line_61 $$ friendlyURL = _PUBLIC_GROUP_SERVLET_MAPPING[ FD ]
Line_26 $$ path = PropsValues.WIDGET_SERVLET_MAPPING-->Line_29 $$ path = themeDisplay.getI18nPath()[ FD ]
Line_17 $$ if (useGroupVirtualHostName) -->Line_19 $$ String portalDomain = HttpUtil.getDomain(portalURL)[ CD ]
Line_21 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)-->Line_37 $$ virtualHostname = themeDisplay.getServerName()[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_10 $$ long refererPlid = themeDisplay.getRefererPlid()[ CD ]
Line_38 $$ if (Validator.isNull(virtualHostname) || StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) -->Line_39 $$ virtualHostname = curLayoutSet.getVirtualHostname()[ CD ]
Line_3 $$ Group group = layoutSet.getGroup()-->Line_35 $$ if (canonicalURL || ((layoutSet.getLayoutSetId() != curLayoutSet.getLayoutSetId()) && (group.getClassPK() != themeDisplay.getUserId()))) [ FD ]
Line_58 $$ friendlyURL = _PRIVATE_GROUP_SERVLET_MAPPING-->Line_61 $$ friendlyURL = _PUBLIC_GROUP_SERVLET_MAPPING[ FD ]
Line_12 $$ Layout refererLayout = LayoutLocalServiceUtil.fetchLayout(refererPlid)-->Line_13 $$ if ((refererLayout != null) && ((refererLayout.getGroupId() != group.getGroupId()) || (refererLayout.isPrivateLayout() != privateLayoutSet))) [ FD ]
Line_21 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)-->Line_22 $$ virtualHostname = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())[ FD ]
Line_39 $$ virtualHostname = curLayoutSet.getVirtualHostname()-->Line_44 $$ virtualHostname = company.getVirtualHostname()[ FD ]
Line_17 $$ if (useGroupVirtualHostName) -->Line_20 $$ if (Validator.isNotNull(virtualHostname) && (canonicalURL || !StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST))) [ CD ]
Line_46 $$ if (canonicalURL || !StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) -->Line_48 $$ portalURL = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())[ CD ]
Line_24 $$ String path = StringPool.BLANK-->Line_29 $$ path = themeDisplay.getI18nPath()[ FD ]
Line_8 $$ useGroupVirtualHostName = true-->Line_14 $$ useGroupVirtualHostName = false[ FD ]
Line_35 $$ if (canonicalURL || ((layoutSet.getLayoutSetId() != curLayoutSet.getLayoutSetId()) && (group.getClassPK() != themeDisplay.getUserId()))) -->Line_36 $$ if (group.isControlPanel()) [ CD ]
Line_20 $$ if (Validator.isNotNull(virtualHostname) && (canonicalURL || !StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST))) -->Line_23 $$ if (canonicalURL || virtualHostname.contains(portalDomain)) [ CD ]
Line_18 $$ String virtualHostname = getVirtualHostname(layoutSet)-->Line_39 $$ virtualHostname = curLayoutSet.getVirtualHostname()[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_53 $$ String friendlyURL = null[ CD ]
Line_23 $$ if (canonicalURL || virtualHostname.contains(portalDomain)) -->Line_28 $$ if (themeDisplay.isI18n() && !canonicalURL) [ CD ]
Line_44 $$ virtualHostname = company.getVirtualHostname()-->Line_47 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)[ FD ]
Line_37 $$ virtualHostname = themeDisplay.getServerName()-->Line_42 $$ if (Validator.isNull(virtualHostname) || StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ FD ]
Line_36 $$ if (group.isControlPanel()) -->Line_38 $$ if (Validator.isNull(virtualHostname) || StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ CD ]
Line_63 $$ StringBundler sb = new StringBundler(6)-->Line_65 $$ sb.append(_pathContext)[ FD ]
Line_63 $$ StringBundler sb = new StringBundler(6)-->Line_64 $$ sb.append(portalURL)[ FD ]
Line_18 $$ String virtualHostname = getVirtualHostname(layoutSet)-->Line_31 $$ return virtualHostname.concat(_pathContext).concat(path)[ FD ]
Line_44 $$ virtualHostname = company.getVirtualHostname()-->Line_46 $$ if (canonicalURL || !StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_28 $$ if (themeDisplay.isI18n() && !canonicalURL) [ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_66 $$ if (themeDisplay.isI18n() && !canonicalURL) [ CD ]
Line_22 $$ virtualHostname = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())-->Line_48 $$ portalURL = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())[ FD ]
Line_28 $$ if (themeDisplay.isI18n() && !canonicalURL) -->Line_29 $$ path = themeDisplay.getI18nPath()[ CD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_69 $$ if (themeDisplay.isWidget()) [ FD ]
Line_56 $$ friendlyURL = _PRIVATE_USER_SERVLET_MAPPING-->Line_58 $$ friendlyURL = _PRIVATE_GROUP_SERVLET_MAPPING[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_4 $$ boolean privateLayoutSet = layoutSet.getPrivateLayout()[ FD ]
Line_53 $$ String friendlyURL = null-->Line_58 $$ friendlyURL = _PRIVATE_GROUP_SERVLET_MAPPING[ FD ]
Line_22 $$ virtualHostname = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())-->Line_31 $$ return virtualHostname.concat(_pathContext).concat(path)[ FD ]
Line_39 $$ virtualHostname = curLayoutSet.getVirtualHostname()-->Line_42 $$ if (Validator.isNull(virtualHostname) || StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ FD ]
Line_19 $$ String portalDomain = HttpUtil.getDomain(portalURL)-->Line_47 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_35 $$ if (canonicalURL || ((layoutSet.getLayoutSetId() != curLayoutSet.getLayoutSetId()) && (group.getClassPK() != themeDisplay.getUserId()))) [ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_72 $$ sb.append(friendlyURL)[ CD ]
Line_18 $$ String virtualHostname = getVirtualHostname(layoutSet)-->Line_38 $$ if (Validator.isNull(virtualHostname) || StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ FD ]
Line_6 $$ boolean useGroupVirtualHostName = false-->Line_14 $$ useGroupVirtualHostName = false[ FD ]
Line_18 $$ String virtualHostname = getVirtualHostname(layoutSet)-->Line_44 $$ virtualHostname = company.getVirtualHostname()[ FD ]
Line_17 $$ if (useGroupVirtualHostName) -->Line_18 $$ String virtualHostname = getVirtualHostname(layoutSet)[ CD ]
Line_36 $$ if (group.isControlPanel()) -->Line_37 $$ virtualHostname = themeDisplay.getServerName()[ CD ]
Line_18 $$ String virtualHostname = getVirtualHostname(layoutSet)-->Line_46 $$ if (canonicalURL || !StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ FD ]
Line_10 $$ long refererPlid = themeDisplay.getRefererPlid()-->Line_12 $$ Layout refererLayout = LayoutLocalServiceUtil.fetchLayout(refererPlid)[ FD ]
Line_63 $$ StringBundler sb = new StringBundler(6)-->Line_72 $$ sb.append(friendlyURL)[ FD ]
Line_39 $$ virtualHostname = curLayoutSet.getVirtualHostname()-->Line_48 $$ portalURL = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_23 $$ if (canonicalURL || virtualHostname.contains(portalDomain)) [ FD ]
Line_37 $$ virtualHostname = themeDisplay.getServerName()-->Line_47 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)[ FD ]
Line_58 $$ friendlyURL = _PRIVATE_GROUP_SERVLET_MAPPING-->Line_72 $$ sb.append(friendlyURL)[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_66 $$ if (themeDisplay.isI18n() && !canonicalURL) [ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_37 $$ virtualHostname = themeDisplay.getServerName()[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_54 $$ if (privateLayoutSet) [ CD ]
Line_20 $$ if (Validator.isNotNull(virtualHostname) && (canonicalURL || !StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST))) -->Line_22 $$ virtualHostname = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())[ CD ]
Line_19 $$ String portalDomain = HttpUtil.getDomain(portalURL)-->Line_23 $$ if (canonicalURL || virtualHostname.contains(portalDomain)) [ FD ]
Line_21 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)-->Line_42 $$ if (Validator.isNull(virtualHostname) || StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ FD ]
Line_5 $$ String portalURL = themeDisplay.getPortalURL()-->Line_48 $$ portalURL = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())[ FD ]
Line_4 $$ boolean privateLayoutSet = layoutSet.getPrivateLayout()-->Line_34 $$ LayoutSet curLayoutSet = LayoutSetLocalServiceUtil.getLayoutSet(themeDisplay.getSiteGroupId(), privateLayoutSet)[ FD ]
Line_37 $$ virtualHostname = themeDisplay.getServerName()-->Line_46 $$ if (canonicalURL || !StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ FD ]
Line_35 $$ if (canonicalURL || ((layoutSet.getLayoutSetId() != curLayoutSet.getLayoutSetId()) && (group.getClassPK() != themeDisplay.getUserId()))) -->Line_42 $$ if (Validator.isNull(virtualHostname) || StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ CD ]
Line_18 $$ String virtualHostname = getVirtualHostname(layoutSet)-->Line_22 $$ virtualHostname = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())[ FD ]
Line_18 $$ String virtualHostname = getVirtualHostname(layoutSet)-->Line_48 $$ portalURL = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_7 $$ if (canonicalURL || !StringUtil.equalsIgnoreCase(themeDisplay.getServerName(), _LOCALHOST)) [ CD ]
Line_18 $$ String virtualHostname = getVirtualHostname(layoutSet)-->Line_21 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)[ FD ]
Line_48 $$ portalURL = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())-->Line_64 $$ sb.append(portalURL)[ FD ]
Line_3 $$ Group group = layoutSet.getGroup()-->Line_36 $$ if (group.isControlPanel()) [ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_3 $$ Group group = layoutSet.getGroup()[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_5 $$ String portalURL = themeDisplay.getPortalURL()[ CD ]
Line_5 $$ String portalURL = themeDisplay.getPortalURL()-->Line_64 $$ sb.append(portalURL)[ FD ]
Line_37 $$ virtualHostname = themeDisplay.getServerName()-->Line_44 $$ virtualHostname = company.getVirtualHostname()[ FD ]
Line_37 $$ virtualHostname = themeDisplay.getServerName()-->Line_48 $$ portalURL = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())[ FD ]
Line_34 $$ LayoutSet curLayoutSet = LayoutSetLocalServiceUtil.getLayoutSet(themeDisplay.getSiteGroupId(), privateLayoutSet)-->Line_35 $$ if (canonicalURL || ((layoutSet.getLayoutSetId() != curLayoutSet.getLayoutSetId()) && (group.getClassPK() != themeDisplay.getUserId()))) [ FD ]
Line_21 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)-->Line_46 $$ if (canonicalURL || !StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ FD ]
Line_21 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)-->Line_23 $$ if (canonicalURL || virtualHostname.contains(portalDomain)) [ FD ]
Line_61 $$ friendlyURL = _PUBLIC_GROUP_SERVLET_MAPPING-->Line_72 $$ sb.append(friendlyURL)[ FD ]
Line_21 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)-->Line_44 $$ virtualHostname = company.getVirtualHostname()[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_63 $$ StringBundler sb = new StringBundler(6)[ CD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_64 $$ sb.append(portalURL)[ CD ]
Line_43 $$ Company company = themeDisplay.getCompany()-->Line_44 $$ virtualHostname = company.getVirtualHostname()[ FD ]
Line_25 $$ if (themeDisplay.isWidget()) -->Line_26 $$ path = PropsValues.WIDGET_SERVLET_MAPPING[ CD ]
Line_63 $$ StringBundler sb = new StringBundler(6)-->Line_67 $$ sb.append(themeDisplay.getI18nPath())[ FD ]
Line_23 $$ if (canonicalURL || virtualHostname.contains(portalDomain)) -->Line_25 $$ if (themeDisplay.isWidget()) [ CD ]
Line_63 $$ StringBundler sb = new StringBundler(6)-->Line_74 $$ return sb.toString()[ FD ]
Line_22 $$ virtualHostname = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())-->Line_44 $$ virtualHostname = company.getVirtualHostname()[ FD ]
Line_19 $$ String portalDomain = HttpUtil.getDomain(portalURL)-->Line_21 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)[ FD ]
Line_42 $$ if (Validator.isNull(virtualHostname) || StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) -->Line_44 $$ virtualHostname = company.getVirtualHostname()[ CD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_34 $$ LayoutSet curLayoutSet = LayoutSetLocalServiceUtil.getLayoutSet(themeDisplay.getSiteGroupId(), privateLayoutSet)[ FD ]
Line_66 $$ if (themeDisplay.isI18n() && !canonicalURL) -->Line_67 $$ sb.append(themeDisplay.getI18nPath())[ CD ]
Line_69 $$ if (themeDisplay.isWidget()) -->Line_70 $$ sb.append(PropsValues.WIDGET_SERVLET_MAPPING)[ CD ]
Line_24 $$ String path = StringPool.BLANK-->Line_26 $$ path = PropsValues.WIDGET_SERVLET_MAPPING[ FD ]
Line_47 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)-->Line_48 $$ portalURL = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())[ FD ]
Line_63 $$ StringBundler sb = new StringBundler(6)-->Line_70 $$ sb.append(PropsValues.WIDGET_SERVLET_MAPPING)[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_7 $$ if (canonicalURL || !StringUtil.equalsIgnoreCase(themeDisplay.getServerName(), _LOCALHOST)) [ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_25 $$ if (themeDisplay.isWidget()) [ FD ]
Line_21 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)-->Line_47 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_69 $$ if (themeDisplay.isWidget()) [ CD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_73 $$ sb.append(group.getFriendlyURL())[ CD ]
Line_55 $$ if (group.isUser()) -->Line_58 $$ friendlyURL = _PRIVATE_GROUP_SERVLET_MAPPING[ CD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_65 $$ sb.append(_pathContext)[ CD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_43 $$ Company company = themeDisplay.getCompany()[ FD ]
Line_22 $$ virtualHostname = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())-->Line_42 $$ if (Validator.isNull(virtualHostname) || StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ FD ]
Line_26 $$ path = PropsValues.WIDGET_SERVLET_MAPPING-->Line_31 $$ return virtualHostname.concat(_pathContext).concat(path)[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_11 $$ if (refererPlid > 0) [ CD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_17 $$ if (useGroupVirtualHostName) [ CD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_46 $$ if (canonicalURL || !StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ FD ]
Line_24 $$ String path = StringPool.BLANK-->Line_31 $$ return virtualHostname.concat(_pathContext).concat(path)[ FD ]
Line_11 $$ if (refererPlid > 0) -->Line_13 $$ if ((refererLayout != null) && ((refererLayout.getGroupId() != group.getGroupId()) || (refererLayout.isPrivateLayout() != privateLayoutSet))) [ CD ]
Line_18 $$ String virtualHostname = getVirtualHostname(layoutSet)-->Line_20 $$ if (Validator.isNotNull(virtualHostname) && (canonicalURL || !StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST))) [ FD ]
Line_23 $$ if (canonicalURL || virtualHostname.contains(portalDomain)) -->Line_31 $$ return virtualHostname.concat(_pathContext).concat(path)[ CD ]
Line_18 $$ String virtualHostname = getVirtualHostname(layoutSet)-->Line_37 $$ virtualHostname = themeDisplay.getServerName()[ FD ]
Line_22 $$ virtualHostname = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())-->Line_47 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)[ FD ]
Line_54 $$ if (privateLayoutSet) -->Line_55 $$ if (group.isUser()) [ CD ]
Line_21 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)-->Line_38 $$ if (Validator.isNull(virtualHostname) || StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_6 $$ boolean useGroupVirtualHostName = false[ CD ]
Line_6 $$ boolean useGroupVirtualHostName = false-->Line_8 $$ useGroupVirtualHostName = true[ FD ]
Line_46 $$ if (canonicalURL || !StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) -->Line_47 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)[ CD ]
Line_39 $$ virtualHostname = curLayoutSet.getVirtualHostname()-->Line_46 $$ if (canonicalURL || !StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ FD ]
Line_44 $$ virtualHostname = company.getVirtualHostname()-->Line_48 $$ portalURL = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())[ FD ]
Line_20 $$ if (Validator.isNotNull(virtualHostname) && (canonicalURL || !StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST))) -->Line_21 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)[ CD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_22 $$ virtualHostname = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())[ FD ]
Line_35 $$ if (canonicalURL || ((layoutSet.getLayoutSetId() != curLayoutSet.getLayoutSetId()) && (group.getClassPK() != themeDisplay.getUserId()))) -->Line_46 $$ if (canonicalURL || !StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ CD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_74 $$ return sb.toString()[ CD ]
Line_20 $$ if (Validator.isNotNull(virtualHostname) && (canonicalURL || !StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST))) -->Line_34 $$ LayoutSet curLayoutSet = LayoutSetLocalServiceUtil.getLayoutSet(themeDisplay.getSiteGroupId(), privateLayoutSet)[ CD ]
Line_13 $$ if ((refererLayout != null) && ((refererLayout.getGroupId() != group.getGroupId()) || (refererLayout.isPrivateLayout() != privateLayoutSet))) -->Line_14 $$ useGroupVirtualHostName = false[ CD ]
Line_53 $$ String friendlyURL = null-->Line_56 $$ friendlyURL = _PRIVATE_USER_SERVLET_MAPPING[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_3 $$ Group group = layoutSet.getGroup()[ CD ]
Line_56 $$ friendlyURL = _PRIVATE_USER_SERVLET_MAPPING-->Line_72 $$ sb.append(friendlyURL)[ FD ]
Line_11 $$ if (refererPlid > 0) -->Line_12 $$ Layout refererLayout = LayoutLocalServiceUtil.fetchLayout(refererPlid)[ CD ]
Line_23 $$ if (canonicalURL || virtualHostname.contains(portalDomain)) -->Line_24 $$ String path = StringPool.BLANK[ CD ]
Line_10 $$ long refererPlid = themeDisplay.getRefererPlid()-->Line_11 $$ if (refererPlid > 0) [ FD ]
Line_18 $$ String virtualHostname = getVirtualHostname(layoutSet)-->Line_23 $$ if (canonicalURL || virtualHostname.contains(portalDomain)) [ FD ]
Line_37 $$ virtualHostname = themeDisplay.getServerName()-->Line_39 $$ virtualHostname = curLayoutSet.getVirtualHostname()[ FD ]
Line_21 $$ virtualHostname = getCanonicalDomain(virtualHostname, portalDomain)-->Line_48 $$ portalURL = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())[ FD ]
Line_22 $$ virtualHostname = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())-->Line_23 $$ if (canonicalURL || virtualHostname.contains(portalDomain)) [ FD ]
Line_3 $$ Group group = layoutSet.getGroup()-->Line_55 $$ if (group.isUser()) [ FD ]
Line_3 $$ Group group = layoutSet.getGroup()-->Line_73 $$ sb.append(group.getFriendlyURL())[ FD ]
Line_2 $$ protected String getGroupFriendlyURL(LayoutSet layoutSet, ThemeDisplay themeDisplay, boolean canonicalURL) throws PortalException -->Line_29 $$ path = themeDisplay.getI18nPath()[ FD ]
Line_22 $$ virtualHostname = getPortalURL(virtualHostname, themeDisplay.getServerPort(), themeDisplay.isSecure())-->Line_46 $$ if (canonicalURL || !StringUtil.equalsIgnoreCase(virtualHostname, _LOCALHOST)) [ FD ]
