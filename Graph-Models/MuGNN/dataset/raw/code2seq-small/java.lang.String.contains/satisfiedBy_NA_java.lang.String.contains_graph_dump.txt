Line_17 $$ if (!text.contains(".") && text.startsWith("0")) -->Line_18 $$ return false[ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_17 $$ if (!text.contains(".") && text.startsWith("0")) [ CD ]
Line_6 $$ final PsiLiteralExpression expression = (PsiLiteralExpression) element-->Line_7 $$ final PsiType type = expression.getType()[ FD ]
Line_7 $$ final PsiType type = expression.getType()-->Line_8 $$ if (!PsiType.DOUBLE.equals(type) && !PsiType.FLOAT.equals(type)) [ FD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_7 $$ final PsiType type = expression.getType()[ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_6 $$ final PsiLiteralExpression expression = (PsiLiteralExpression) element[ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_11 $$ String text = expression.getText()[ CD ]
Line_11 $$ String text = expression.getText()-->Line_20 $$ return !text.contains("e")[ FD ]
Line_8 $$ if (!PsiType.DOUBLE.equals(type) && !PsiType.FLOAT.equals(type)) -->Line_9 $$ return false[ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_20 $$ return !text.contains("e")[ CD ]
Line_15 $$ text = text.toLowerCase()-->Line_16 $$ text = StringUtil.trimStart(text, "-")[ FD ]
Line_11 $$ String text = expression.getText()-->Line_16 $$ text = StringUtil.trimStart(text, "-")[ FD ]
Line_6 $$ final PsiLiteralExpression expression = (PsiLiteralExpression) element-->Line_11 $$ String text = expression.getText()[ FD ]
Line_3 $$ if (!(element instanceof PsiLiteralExpression)) -->Line_4 $$ return false[ CD ]
Line_12 $$ if (text == null) -->Line_13 $$ return false[ CD ]
Line_15 $$ text = text.toLowerCase()-->Line_20 $$ return !text.contains("e")[ FD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_8 $$ if (!PsiType.DOUBLE.equals(type) && !PsiType.FLOAT.equals(type)) [ CD ]
Line_16 $$ text = StringUtil.trimStart(text, "-")-->Line_17 $$ if (!text.contains(".") && text.startsWith("0")) [ FD ]
Line_11 $$ String text = expression.getText()-->Line_17 $$ if (!text.contains(".") && text.startsWith("0")) [ FD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_3 $$ if (!(element instanceof PsiLiteralExpression)) [ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_15 $$ text = text.toLowerCase()[ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_16 $$ text = StringUtil.trimStart(text, "-")[ CD ]
Line_16 $$ text = StringUtil.trimStart(text, "-")-->Line_20 $$ return !text.contains("e")[ FD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_12 $$ if (text == null) [ CD ]
Line_15 $$ text = text.toLowerCase()-->Line_17 $$ if (!text.contains(".") && text.startsWith("0")) [ FD ]
Line_11 $$ String text = expression.getText()-->Line_15 $$ text = text.toLowerCase()[ FD ]
Line_11 $$ String text = expression.getText()-->Line_12 $$ if (text == null) [ FD ]
