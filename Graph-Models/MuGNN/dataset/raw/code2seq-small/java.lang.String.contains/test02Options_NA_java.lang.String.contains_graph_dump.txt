Line_2 $$ public void test02Options() -->Line_4 $$ assertCode(HttpServletResponse.SC_OK, tuple)[ CD ]
Line_2 $$ public void test02Options() -->Line_5 $$ Map<String, String> headers = getHeaders(tuple)[ CD ]
Line_2 $$ public void test02Options() -->Line_6 $$ String allowMethodNames = headers.get("Allow")[ CD ]
Line_5 $$ Map<String, String> headers = getHeaders(tuple)-->Line_6 $$ String allowMethodNames = headers.get("Allow")[ FD ]
Line_2 $$ public void test02Options() -->Line_3 $$ Tuple tuple = service(Method.OPTIONS, StringPool.BLANK, null, null)[ CD ]
Line_7 $$ for (String methodName : Method.SUPPORTED_METHOD_NAMES) -->Line_8 $$ Assert.assertTrue("Does not allow " + methodName, allowMethodNames.contains(methodName))[ FD ]
Line_6 $$ String allowMethodNames = headers.get("Allow")-->Line_8 $$ Assert.assertTrue("Does not allow " + methodName, allowMethodNames.contains(methodName))[ FD ]
Line_3 $$ Tuple tuple = service(Method.OPTIONS, StringPool.BLANK, null, null)-->Line_5 $$ Map<String, String> headers = getHeaders(tuple)[ FD ]
Line_3 $$ Tuple tuple = service(Method.OPTIONS, StringPool.BLANK, null, null)-->Line_4 $$ assertCode(HttpServletResponse.SC_OK, tuple)[ FD ]
