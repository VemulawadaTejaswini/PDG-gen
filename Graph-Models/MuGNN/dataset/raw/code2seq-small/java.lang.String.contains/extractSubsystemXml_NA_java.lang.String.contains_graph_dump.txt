Line_21 $$ line = reader.readLine()-->Line_17 $$ sb.append(line.substring(0, line.indexOf(SUBSYSTEM_CLOSE) + SUBSYSTEM_CLOSE.length()))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_17 $$ sb.append(line.substring(0, line.indexOf(SUBSYSTEM_CLOSE) + SUBSYSTEM_CLOSE.length()))[ FD ]
Line_2 $$ private String extractSubsystemXml(File file) throws IOException -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_5 $$ String line = reader.readLine()-->Line_11 $$ sb.append(line.substring(line.indexOf(SUBSYSTEM_OPEN)))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ sb.append(line)[ FD ]
Line_10 $$ inSusbsystem = true-->Line_8 $$ if (!inSusbsystem) [ FD ]
Line_6 $$ boolean inSusbsystem = false-->Line_10 $$ inSusbsystem = true[ FD ]
Line_2 $$ private String extractSubsystemXml(File file) throws IOException -->Line_5 $$ String line = reader.readLine()[ CD ]
Line_5 $$ String line = reader.readLine()-->Line_9 $$ if (line.contains(SUBSYSTEM_OPEN)) [ FD ]
Line_2 $$ private String extractSubsystemXml(File file) throws IOException -->Line_4 $$ BufferedReader reader = new BufferedReader(new FileReader(file))[ CD ]
Line_9 $$ if (line.contains(SUBSYSTEM_OPEN)) -->Line_10 $$ inSusbsystem = true[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.append(line.substring(line.indexOf(SUBSYSTEM_OPEN)))[ FD ]
Line_9 $$ if (line.contains(SUBSYSTEM_OPEN)) -->Line_11 $$ sb.append(line.substring(line.indexOf(SUBSYSTEM_OPEN)))[ CD ]
Line_5 $$ String line = reader.readLine()-->Line_15 $$ sb.append(line)[ FD ]
Line_14 $$ if (!line.contains(SUBSYSTEM_CLOSE)) -->Line_15 $$ sb.append(line)[ CD ]
Line_7 $$ while (line != null) -->Line_21 $$ line = reader.readLine()[ CD ]
Line_2 $$ private String extractSubsystemXml(File file) throws IOException -->Line_23 $$ return sb.toString()[ CD ]
Line_2 $$ private String extractSubsystemXml(File file) throws IOException -->Line_7 $$ while (line != null) [ CD ]
Line_8 $$ if (!inSusbsystem) -->Line_14 $$ if (!line.contains(SUBSYSTEM_CLOSE)) [ CD ]
Line_21 $$ line = reader.readLine()-->Line_14 $$ if (!line.contains(SUBSYSTEM_CLOSE)) [ FD ]
Line_8 $$ if (!inSusbsystem) -->Line_9 $$ if (line.contains(SUBSYSTEM_OPEN)) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_23 $$ return sb.toString()[ FD ]
Line_4 $$ BufferedReader reader = new BufferedReader(new FileReader(file))-->Line_5 $$ String line = reader.readLine()[ FD ]
Line_4 $$ BufferedReader reader = new BufferedReader(new FileReader(file))-->Line_21 $$ line = reader.readLine()[ FD ]
Line_5 $$ String line = reader.readLine()-->Line_17 $$ sb.append(line.substring(0, line.indexOf(SUBSYSTEM_CLOSE) + SUBSYSTEM_CLOSE.length()))[ FD ]
Line_21 $$ line = reader.readLine()-->Line_9 $$ if (line.contains(SUBSYSTEM_OPEN)) [ FD ]
Line_6 $$ boolean inSusbsystem = false-->Line_8 $$ if (!inSusbsystem) [ FD ]
Line_7 $$ while (line != null) -->Line_8 $$ if (!inSusbsystem) [ CD ]
Line_14 $$ if (!line.contains(SUBSYSTEM_CLOSE)) -->Line_17 $$ sb.append(line.substring(0, line.indexOf(SUBSYSTEM_CLOSE) + SUBSYSTEM_CLOSE.length()))[ CD ]
Line_2 $$ private String extractSubsystemXml(File file) throws IOException -->Line_6 $$ boolean inSusbsystem = false[ CD ]
Line_5 $$ String line = reader.readLine()-->Line_14 $$ if (!line.contains(SUBSYSTEM_CLOSE)) [ FD ]
Line_21 $$ line = reader.readLine()-->Line_15 $$ sb.append(line)[ FD ]
Line_21 $$ line = reader.readLine()-->Line_11 $$ sb.append(line.substring(line.indexOf(SUBSYSTEM_OPEN)))[ FD ]
Line_5 $$ String line = reader.readLine()-->Line_7 $$ while (line != null) [ FD ]
Line_5 $$ String line = reader.readLine()-->Line_21 $$ line = reader.readLine()[ FD ]
Line_21 $$ line = reader.readLine()-->Line_7 $$ while (line != null) [ FD ]
