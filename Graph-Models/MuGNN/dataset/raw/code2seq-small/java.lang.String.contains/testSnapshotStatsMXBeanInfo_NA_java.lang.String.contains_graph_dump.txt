Line_10 $$ SnapshotManager sm = cluster.getNamesystem().getSnapshotManager()-->Line_19 $$ assertEquals(sm.getNumSnapshottableDirs(), numDirectories)[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_9 $$ cluster.waitActive()[ FD ]
Line_15 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_17 $$ CompositeData[] directories = (CompositeData[]) mbs.getAttribute(mxbeanName, "SnapshottableDirectories")[ FD ]
Line_6 $$ Path path = new Path(pathName)-->Line_13 $$ dfs.allowSnapshot(path)[ FD ]
Line_24 $$ CompositeData s = (CompositeData) Array.get(snapshots, 0)-->Line_26 $$ assertTrue(((String) s.get("snapshotDirectory")).contains(pathName))[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_10 $$ SnapshotManager sm = cluster.getNamesystem().getSnapshotManager()[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).build()[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).build()-->Line_29 $$ cluster.shutdown()[ FD ]
Line_16 $$ ObjectName mxbeanName = new ObjectName("Hadoop:service=NameNode,name=SnapshotInfo")-->Line_17 $$ CompositeData[] directories = (CompositeData[]) mbs.getAttribute(mxbeanName, "SnapshottableDirectories")[ FD ]
Line_16 $$ ObjectName mxbeanName = new ObjectName("Hadoop:service=NameNode,name=SnapshotInfo")-->Line_20 $$ CompositeData[] snapshots = (CompositeData[]) mbs.getAttribute(mxbeanName, "Snapshots")[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_11 $$ DistributedFileSystem dfs = (DistributedFileSystem) cluster.getFileSystem()[ FD ]
Line_17 $$ CompositeData[] directories = (CompositeData[]) mbs.getAttribute(mxbeanName, "SnapshottableDirectories")-->Line_23 $$ CompositeData d = (CompositeData) Array.get(directories, 0)[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_28 $$ if (cluster != null) [ FD ]
Line_23 $$ CompositeData d = (CompositeData) Array.get(directories, 0)-->Line_25 $$ assertTrue(((String) d.get("path")).contains(pathName))[ FD ]
Line_18 $$ int numDirectories = Array.getLength(directories)-->Line_19 $$ assertEquals(sm.getNumSnapshottableDirs(), numDirectories)[ FD ]
Line_11 $$ DistributedFileSystem dfs = (DistributedFileSystem) cluster.getFileSystem()-->Line_12 $$ dfs.mkdirs(path)[ FD ]
Line_11 $$ DistributedFileSystem dfs = (DistributedFileSystem) cluster.getFileSystem()-->Line_14 $$ dfs.createSnapshot(path)[ FD ]
Line_21 $$ int numSnapshots = Array.getLength(snapshots)-->Line_22 $$ assertEquals(sm.getNumSnapshots(), numSnapshots)[ FD ]
Line_20 $$ CompositeData[] snapshots = (CompositeData[]) mbs.getAttribute(mxbeanName, "Snapshots")-->Line_24 $$ CompositeData s = (CompositeData) Array.get(snapshots, 0)[ FD ]
Line_28 $$ if (cluster != null) -->Line_29 $$ cluster.shutdown()[ CD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_29 $$ cluster.shutdown()[ FD ]
Line_5 $$ String pathName = "/snapshot"-->Line_26 $$ assertTrue(((String) s.get("snapshotDirectory")).contains(pathName))[ FD ]
Line_11 $$ DistributedFileSystem dfs = (DistributedFileSystem) cluster.getFileSystem()-->Line_13 $$ dfs.allowSnapshot(path)[ FD ]
Line_15 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_20 $$ CompositeData[] snapshots = (CompositeData[]) mbs.getAttribute(mxbeanName, "Snapshots")[ FD ]
Line_2 $$ public void testSnapshotStatsMXBeanInfo() throws Exception -->Line_3 $$ Configuration conf = new Configuration()[ CD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).build()-->Line_10 $$ SnapshotManager sm = cluster.getNamesystem().getSnapshotManager()[ FD ]
Line_20 $$ CompositeData[] snapshots = (CompositeData[]) mbs.getAttribute(mxbeanName, "Snapshots")-->Line_21 $$ int numSnapshots = Array.getLength(snapshots)[ FD ]
Line_5 $$ String pathName = "/snapshot"-->Line_25 $$ assertTrue(((String) d.get("path")).contains(pathName))[ FD ]
Line_17 $$ CompositeData[] directories = (CompositeData[]) mbs.getAttribute(mxbeanName, "SnapshottableDirectories")-->Line_18 $$ int numDirectories = Array.getLength(directories)[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).build()-->Line_28 $$ if (cluster != null) [ FD ]
Line_2 $$ public void testSnapshotStatsMXBeanInfo() throws Exception -->Line_5 $$ String pathName = "/snapshot"[ CD ]
Line_6 $$ Path path = new Path(pathName)-->Line_12 $$ dfs.mkdirs(path)[ FD ]
Line_10 $$ SnapshotManager sm = cluster.getNamesystem().getSnapshotManager()-->Line_22 $$ assertEquals(sm.getNumSnapshots(), numSnapshots)[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).build()-->Line_9 $$ cluster.waitActive()[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).build()-->Line_11 $$ DistributedFileSystem dfs = (DistributedFileSystem) cluster.getFileSystem()[ FD ]
Line_2 $$ public void testSnapshotStatsMXBeanInfo() throws Exception -->Line_6 $$ Path path = new Path(pathName)[ CD ]
Line_6 $$ Path path = new Path(pathName)-->Line_14 $$ dfs.createSnapshot(path)[ FD ]
Line_2 $$ public void testSnapshotStatsMXBeanInfo() throws Exception -->Line_4 $$ MiniDFSCluster cluster = null[ CD ]
