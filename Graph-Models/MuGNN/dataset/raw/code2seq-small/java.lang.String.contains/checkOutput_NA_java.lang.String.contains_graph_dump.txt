Line_5 $$ PipedOutputStream pipeOut = new PipedOutputStream()-->Line_19 $$ pipeOut.close()[ FD ]
Line_2 $$ private void checkOutput(String[] args, String pattern, PrintStream out, Class<?> clazz) -->Line_13 $$ expectDelegationTokenFetcherExit(args)[ FD ]
Line_16 $$ if (clazz == DFSAdmin.class) -->Line_17 $$ expectDfsAdminPrint(args)[ CD ]
Line_7 $$ if (out == System.out) -->Line_9 $$ if (out == System.err) [ CD ]
Line_2 $$ private void checkOutput(String[] args, String pattern, PrintStream out, Class<?> clazz) -->Line_17 $$ expectDfsAdminPrint(args)[ FD ]
Line_14 $$ if (clazz == JMXGet.class) -->Line_15 $$ expectJMXGetExit(args)[ CD ]
Line_2 $$ private void checkOutput(String[] args, String pattern, PrintStream out, Class<?> clazz) -->Line_14 $$ if (clazz == JMXGet.class) [ FD ]
Line_9 $$ if (out == System.err) -->Line_10 $$ System.setErr(new PrintStream(pipeOut))[ CD ]
Line_14 $$ if (clazz == JMXGet.class) -->Line_16 $$ if (clazz == DFSAdmin.class) [ CD ]
Line_6 $$ PipedInputStream pipeIn = new PipedInputStream(pipeOut, PIPE_BUFFER_SIZE)-->Line_21 $$ pipeIn.close()[ FD ]
Line_2 $$ private void checkOutput(String[] args, String pattern, PrintStream out, Class<?> clazz) -->Line_16 $$ if (clazz == DFSAdmin.class) [ FD ]
Line_3 $$ ByteArrayOutputStream outBytes = new ByteArrayOutputStream()-->Line_20 $$ ByteStreams.copy(pipeIn, outBytes)[ FD ]
Line_6 $$ PipedInputStream pipeIn = new PipedInputStream(pipeOut, PIPE_BUFFER_SIZE)-->Line_20 $$ ByteStreams.copy(pipeIn, outBytes)[ FD ]
Line_2 $$ private void checkOutput(String[] args, String pattern, PrintStream out, Class<?> clazz) -->Line_7 $$ if (out == System.out) [ FD ]
Line_2 $$ private void checkOutput(String[] args, String pattern, PrintStream out, Class<?> clazz) -->Line_22 $$ assertTrue(new String(outBytes.toByteArray()).contains(pattern))[ FD ]
Line_2 $$ private void checkOutput(String[] args, String pattern, PrintStream out, Class<?> clazz) -->Line_12 $$ if (clazz == DelegationTokenFetcher.class) [ FD ]
Line_12 $$ if (clazz == DelegationTokenFetcher.class) -->Line_13 $$ expectDelegationTokenFetcherExit(args)[ CD ]
Line_3 $$ ByteArrayOutputStream outBytes = new ByteArrayOutputStream()-->Line_22 $$ assertTrue(new String(outBytes.toByteArray()).contains(pattern))[ FD ]
Line_2 $$ private void checkOutput(String[] args, String pattern, PrintStream out, Class<?> clazz) -->Line_9 $$ if (out == System.err) [ FD ]
Line_7 $$ if (out == System.out) -->Line_8 $$ System.setOut(new PrintStream(pipeOut))[ CD ]
Line_2 $$ private void checkOutput(String[] args, String pattern, PrintStream out, Class<?> clazz) -->Line_3 $$ ByteArrayOutputStream outBytes = new ByteArrayOutputStream()[ CD ]
Line_2 $$ private void checkOutput(String[] args, String pattern, PrintStream out, Class<?> clazz) -->Line_15 $$ expectJMXGetExit(args)[ FD ]
Line_12 $$ if (clazz == DelegationTokenFetcher.class) -->Line_14 $$ if (clazz == JMXGet.class) [ CD ]
