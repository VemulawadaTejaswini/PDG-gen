Line_5 $$ Cache localNaturalIdCache = localManager.getCache(Citizen.class.getName() + "##NaturalId")-->Line_7 $$ localNaturalIdCache.addListener(localListener)[ FD ]
Line_6 $$ MyListener localListener = new MyListener("local")-->Line_28 $$ assertLoadedFromCache(localListener, "1234")[ FD ]
Line_10 $$ MyListener remoteListener = new MyListener("remote")-->Line_32 $$ remoteListener.clear()[ FD ]
Line_2 $$ public void testAll() throws Exception -->Line_5 $$ Cache localNaturalIdCache = localManager.getCache(Citizen.class.getName() + "##NaturalId")[ CD ]
Line_2 $$ public void testAll() throws Exception -->Line_11 $$ remoteNaturalIdCache.addListener(remoteListener)[ CD ]
Line_4 $$ CacheContainer localManager = ClusterAwareRegionFactory.getCacheManager(DualNodeTest.LOCAL)-->Line_5 $$ Cache localNaturalIdCache = localManager.getCache(Citizen.class.getName() + "##NaturalId")[ FD ]
Line_10 $$ MyListener remoteListener = new MyListener("remote")-->Line_35 $$ assertLoadedFromCache(remoteListener, "1234")[ FD ]
Line_9 $$ Cache remoteNaturalIdCache = remoteManager.getCache(Citizen.class.getName() + "##NaturalId")-->Line_11 $$ remoteNaturalIdCache.addListener(remoteListener)[ FD ]
Line_13 $$ SessionFactory remoteFactory = secondNodeEnvironment().getSessionFactory()-->Line_33 $$ getCitizenWithCriteria(remoteFactory)[ FD ]
Line_12 $$ SessionFactory localFactory = sessionFactory()-->Line_17 $$ saveSomeCitizens(localFactory)[ FD ]
Line_39 $$ Set localKeys = localNaturalIdCache.keySet()-->Line_40 $$ assertEquals(1, localKeys.size())[ FD ]
Line_13 $$ SessionFactory remoteFactory = secondNodeEnvironment().getSessionFactory()-->Line_37 $$ deleteCitizenWithCriteria(remoteFactory)[ FD ]
Line_2 $$ public void testAll() throws Exception -->Line_3 $$ log.info("*** testAll()")[ CD ]
Line_10 $$ MyListener remoteListener = new MyListener("remote")-->Line_36 $$ remoteListener.clear()[ FD ]
Line_2 $$ public void testAll() throws Exception -->Line_9 $$ Cache remoteNaturalIdCache = remoteManager.getCache(Citizen.class.getName() + "##NaturalId")[ CD ]
Line_12 $$ SessionFactory localFactory = sessionFactory()-->Line_22 $$ getCitizenWithCriteria(localFactory)[ FD ]
Line_12 $$ SessionFactory localFactory = sessionFactory()-->Line_46 $$ withTxSession(localFactory,  s -> [ FD ]
Line_13 $$ SessionFactory remoteFactory = secondNodeEnvironment().getSessionFactory()-->Line_30 $$ getCitizenWithCriteria(remoteFactory)[ FD ]
Line_6 $$ MyListener localListener = new MyListener("local")-->Line_16 $$ assertTrue(localListener.isEmpty())[ FD ]
Line_2 $$ public void testAll() throws Exception -->Line_8 $$ CacheContainer remoteManager = ClusterAwareRegionFactory.getCacheManager(DualNodeTest.REMOTE)[ CD ]
Line_6 $$ MyListener localListener = new MyListener("local")-->Line_19 $$ assertTrue(localListener.isEmpty())[ FD ]
Line_6 $$ MyListener localListener = new MyListener("local")-->Line_25 $$ localListener.clear()[ FD ]
Line_2 $$ public void testAll() throws Exception -->Line_4 $$ CacheContainer localManager = ClusterAwareRegionFactory.getCacheManager(DualNodeTest.LOCAL)[ CD ]
Line_2 $$ public void testAll() throws Exception -->Line_10 $$ MyListener remoteListener = new MyListener("remote")[ CD ]
Line_6 $$ MyListener localListener = new MyListener("local")-->Line_7 $$ localNaturalIdCache.addListener(localListener)[ FD ]
Line_8 $$ CacheContainer remoteManager = ClusterAwareRegionFactory.getCacheManager(DualNodeTest.REMOTE)-->Line_9 $$ Cache remoteNaturalIdCache = remoteManager.getCache(Citizen.class.getName() + "##NaturalId")[ FD ]
Line_2 $$ public void testAll() throws Exception -->Line_6 $$ MyListener localListener = new MyListener("local")[ CD ]
Line_2 $$ public void testAll() throws Exception -->Line_7 $$ localNaturalIdCache.addListener(localListener)[ CD ]
Line_5 $$ Cache localNaturalIdCache = localManager.getCache(Citizen.class.getName() + "##NaturalId")-->Line_39 $$ Set localKeys = localNaturalIdCache.keySet()[ FD ]
Line_10 $$ MyListener remoteListener = new MyListener("remote")-->Line_18 $$ assertTrue(remoteListener.isEmpty())[ FD ]
Line_2 $$ public void testAll() throws Exception -->Line_13 $$ SessionFactory remoteFactory = secondNodeEnvironment().getSessionFactory()[ CD ]
Line_10 $$ MyListener remoteListener = new MyListener("remote")-->Line_11 $$ remoteNaturalIdCache.addListener(remoteListener)[ FD ]
Line_10 $$ MyListener remoteListener = new MyListener("remote")-->Line_15 $$ assertTrue(remoteListener.isEmpty())[ FD ]
Line_2 $$ public void testAll() throws Exception -->Line_12 $$ SessionFactory localFactory = sessionFactory()[ CD ]
Line_12 $$ SessionFactory localFactory = sessionFactory()-->Line_26 $$ getCitizenWithCriteria(localFactory)[ FD ]
Line_39 $$ Set localKeys = localNaturalIdCache.keySet()-->Line_41 $$ localKeys.toString().contains("000")[ FD ]
