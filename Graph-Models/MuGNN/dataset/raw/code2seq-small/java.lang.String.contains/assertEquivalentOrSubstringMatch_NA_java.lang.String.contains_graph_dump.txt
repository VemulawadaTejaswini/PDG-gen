Line_2 $$ private static void assertEquivalentOrSubstringMatch(String query, SearchResponse plain, SearchResponse rescored) -->Line_6 $$ SearchHits rightHits = rescored.getHits()[ FD ]
Line_17 $$ if (hits[i].getScore() == hits[hits.length - 1].getScore()) -->Line_18 $$ return[ CD ]
Line_6 $$ SearchHits rightHits = rescored.getHits()-->Line_10 $$ SearchHit[] otherHits = rightHits.getHits()[ FD ]
Line_2 $$ private static void assertEquivalentOrSubstringMatch(String query, SearchResponse plain, SearchResponse rescored) -->Line_8 $$ assertThat(leftHits.getHits().length, equalTo(rightHits.getHits().length))[ CD ]
Line_11 $$ if (!hits[0].getId().equals(otherHits[0].getId())) -->Line_14 $$ Arrays.sort(hits, searchHitsComparator)[ CD ]
Line_2 $$ private static void assertEquivalentOrSubstringMatch(String query, SearchResponse plain, SearchResponse rescored) -->Line_11 $$ if (!hits[0].getId().equals(otherHits[0].getId())) [ CD ]
Line_9 $$ SearchHit[] hits = leftHits.getHits()-->Line_14 $$ Arrays.sort(hits, searchHitsComparator)[ FD ]
Line_2 $$ private static void assertEquivalentOrSubstringMatch(String query, SearchResponse plain, SearchResponse rescored) -->Line_6 $$ SearchHits rightHits = rescored.getHits()[ CD ]
Line_6 $$ SearchHits rightHits = rescored.getHits()-->Line_7 $$ assertThat(leftHits.getTotalHits(), equalTo(rightHits.getTotalHits()))[ FD ]
Line_2 $$ private static void assertEquivalentOrSubstringMatch(String query, SearchResponse plain, SearchResponse rescored) -->Line_10 $$ SearchHit[] otherHits = rightHits.getHits()[ CD ]
Line_2 $$ private static void assertEquivalentOrSubstringMatch(String query, SearchResponse plain, SearchResponse rescored) -->Line_3 $$ assertNoFailures(plain)[ CD ]
Line_2 $$ private static void assertEquivalentOrSubstringMatch(String query, SearchResponse plain, SearchResponse rescored) -->Line_7 $$ assertThat(leftHits.getTotalHits(), equalTo(rightHits.getTotalHits()))[ CD ]
Line_5 $$ SearchHits leftHits = plain.getHits()-->Line_9 $$ SearchHit[] hits = leftHits.getHits()[ FD ]
Line_16 $$ for (int i = 0; i < hits.length; i++) -->Line_20 $$ assertThat(query, hits[i].getId(), equalTo(rightHits.getHits()[i].getId()))[ CD ]
Line_2 $$ private static void assertEquivalentOrSubstringMatch(String query, SearchResponse plain, SearchResponse rescored) -->Line_4 $$ assertNoFailures(rescored)[ FD ]
Line_2 $$ private static void assertEquivalentOrSubstringMatch(String query, SearchResponse plain, SearchResponse rescored) -->Line_9 $$ SearchHit[] hits = leftHits.getHits()[ CD ]
Line_16 $$ for (int i = 0; i < hits.length; i++) -->Line_17 $$ if (hits[i].getScore() == hits[hits.length - 1].getScore()) [ CD ]
Line_10 $$ SearchHit[] otherHits = rightHits.getHits()-->Line_15 $$ Arrays.sort(otherHits, searchHitsComparator)[ FD ]
Line_2 $$ private static void assertEquivalentOrSubstringMatch(String query, SearchResponse plain, SearchResponse rescored) -->Line_12 $$ assertThat(((String) otherHits[0].sourceAsMap().get("field1")).contains(query), equalTo(true))[ FD ]
Line_11 $$ if (!hits[0].getId().equals(otherHits[0].getId())) -->Line_16 $$ for (int i = 0; i < hits.length; i++) [ CD ]
Line_2 $$ private static void assertEquivalentOrSubstringMatch(String query, SearchResponse plain, SearchResponse rescored) -->Line_4 $$ assertNoFailures(rescored)[ CD ]
Line_2 $$ private static void assertEquivalentOrSubstringMatch(String query, SearchResponse plain, SearchResponse rescored) -->Line_3 $$ assertNoFailures(plain)[ FD ]
Line_2 $$ private static void assertEquivalentOrSubstringMatch(String query, SearchResponse plain, SearchResponse rescored) -->Line_20 $$ assertThat(query, hits[i].getId(), equalTo(rightHits.getHits()[i].getId()))[ FD ]
Line_5 $$ SearchHits leftHits = plain.getHits()-->Line_8 $$ assertThat(leftHits.getHits().length, equalTo(rightHits.getHits().length))[ FD ]
Line_2 $$ private static void assertEquivalentOrSubstringMatch(String query, SearchResponse plain, SearchResponse rescored) -->Line_5 $$ SearchHits leftHits = plain.getHits()[ CD ]
Line_2 $$ private static void assertEquivalentOrSubstringMatch(String query, SearchResponse plain, SearchResponse rescored) -->Line_5 $$ SearchHits leftHits = plain.getHits()[ FD ]
Line_11 $$ if (!hits[0].getId().equals(otherHits[0].getId())) -->Line_15 $$ Arrays.sort(otherHits, searchHitsComparator)[ CD ]
Line_6 $$ SearchHits rightHits = rescored.getHits()-->Line_8 $$ assertThat(leftHits.getHits().length, equalTo(rightHits.getHits().length))[ FD ]
Line_6 $$ SearchHits rightHits = rescored.getHits()-->Line_20 $$ assertThat(query, hits[i].getId(), equalTo(rightHits.getHits()[i].getId()))[ FD ]
Line_5 $$ SearchHits leftHits = plain.getHits()-->Line_7 $$ assertThat(leftHits.getTotalHits(), equalTo(rightHits.getTotalHits()))[ FD ]
Line_11 $$ if (!hits[0].getId().equals(otherHits[0].getId())) -->Line_12 $$ assertThat(((String) otherHits[0].sourceAsMap().get("field1")).contains(query), equalTo(true))[ CD ]
