Line_2 $$ public void exec() -->Line_7 $$ ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()[ CD ]
Line_7 $$ ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()-->Line_11 $$ String output = byteArrayOutputStream.toString()[ FD ]
Line_7 $$ ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()-->Line_20 $$ byteArrayOutputStream.writeTo(taskErrorOutput)[ FD ]
Line_6 $$ OutputStream taskErrorOutput = getErrorOutput()-->Line_24 $$ setErrorOutput(taskErrorOutput)[ FD ]
Line_2 $$ public void exec() -->Line_3 $$ super.setClasspath(getClasspath())[ CD ]
Line_2 $$ public void exec() -->Line_4 $$ setArgs(getCompleteArgs())[ CD ]
Line_11 $$ String output = byteArrayOutputStream.toString()-->Line_16 $$ _logger.info(output)[ FD ]
Line_15 $$ if (_logger.isInfoEnabled()) -->Line_16 $$ _logger.info(output)[ CD ]
Line_2 $$ public void exec() -->Line_5 $$ setSystemProperties(getCompleteSystemProperties())[ CD ]
Line_12 $$ if (output.contains("JasperException")) -->Line_15 $$ if (_logger.isInfoEnabled()) [ CD ]
Line_6 $$ OutputStream taskErrorOutput = getErrorOutput()-->Line_20 $$ byteArrayOutputStream.writeTo(taskErrorOutput)[ FD ]
Line_2 $$ public void exec() -->Line_6 $$ OutputStream taskErrorOutput = getErrorOutput()[ CD ]
Line_11 $$ String output = byteArrayOutputStream.toString()-->Line_13 $$ _logger.error(output)[ FD ]
Line_11 $$ String output = byteArrayOutputStream.toString()-->Line_12 $$ if (output.contains("JasperException")) [ FD ]
Line_7 $$ ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()-->Line_9 $$ setErrorOutput(byteArrayOutputStream)[ FD ]
Line_12 $$ if (output.contains("JasperException")) -->Line_13 $$ _logger.error(output)[ CD ]
