Line_2 $$ public JavadocMethod lookupJavadocMethod(Method method) -->Line_3 $$ JavadocMethod javadocMethod = _javadocMethods.get(method)[ CD ]
Line_2 $$ public JavadocMethod lookupJavadocMethod(Method method) -->Line_13 $$ if (_log.isDebugEnabled()) [ CD ]
Line_4 $$ if (javadocMethod != null) -->Line_5 $$ return javadocMethod[ CD ]
Line_8 $$ String className = clazz.getName()-->Line_9 $$ if (!className.contains(".service.") || !className.endsWith("ServiceUtil")) [ FD ]
Line_8 $$ String className = clazz.getName()-->Line_12 $$ String implClassName = StringUtil.replace(className, new String[] [ FD ]
Line_2 $$ public JavadocMethod lookupJavadocMethod(Method method) -->Line_9 $$ if (!className.contains(".service.") || !className.endsWith("ServiceUtil")) [ CD ]
Line_2 $$ public JavadocMethod lookupJavadocMethod(Method method) -->Line_7 $$ Class<?> clazz = method.getDeclaringClass()[ CD ]
Line_2 $$ public JavadocMethod lookupJavadocMethod(Method method) -->Line_22 $$ _log.warn("Unable to load method " + method.getName() + " from class " + implClassName)[ FD ]
Line_2 $$ public JavadocMethod lookupJavadocMethod(Method method) -->Line_4 $$ if (javadocMethod != null) [ CD ]
Line_3 $$ JavadocMethod javadocMethod = _javadocMethods.get(method)-->Line_4 $$ if (javadocMethod != null) [ FD ]
Line_7 $$ Class<?> clazz = method.getDeclaringClass()-->Line_17 $$ Class<?> implClass = JavadocUtil.loadClass(clazz.getClassLoader(), implClassName)[ FD ]
Line_25 $$ if (_log.isWarnEnabled()) -->Line_26 $$ _log.warn("Unable to load implementation class " + implClassName)[ CD ]
Line_2 $$ public JavadocMethod lookupJavadocMethod(Method method) -->Line_18 $$ Method implMethod = implClass.getMethod(method.getName(), method.getParameterTypes())[ FD ]
Line_21 $$ if (_log.isWarnEnabled()) -->Line_22 $$ _log.warn("Unable to load method " + method.getName() + " from class " + implClassName)[ CD ]
Line_18 $$ Method implMethod = implClass.getMethod(method.getName(), method.getParameterTypes())-->Line_19 $$ return _javadocMethods.get(implMethod)[ FD ]
Line_2 $$ public JavadocMethod lookupJavadocMethod(Method method) -->Line_12 $$ String implClassName = StringUtil.replace(className, new String[] [ CD ]
Line_2 $$ public JavadocMethod lookupJavadocMethod(Method method) -->Line_7 $$ Class<?> clazz = method.getDeclaringClass()[ FD ]
Line_17 $$ Class<?> implClass = JavadocUtil.loadClass(clazz.getClassLoader(), implClassName)-->Line_18 $$ Method implMethod = implClass.getMethod(method.getName(), method.getParameterTypes())[ FD ]
Line_13 $$ if (_log.isDebugEnabled()) -->Line_14 $$ _log.debug("Attempting to load method from class " + implClassName + " instead of " + className)[ CD ]
Line_2 $$ public JavadocMethod lookupJavadocMethod(Method method) -->Line_3 $$ JavadocMethod javadocMethod = _javadocMethods.get(method)[ FD ]
Line_9 $$ if (!className.contains(".service.") || !className.endsWith("ServiceUtil")) -->Line_10 $$ return null[ CD ]
Line_2 $$ public JavadocMethod lookupJavadocMethod(Method method) -->Line_29 $$ return null[ CD ]
Line_2 $$ public JavadocMethod lookupJavadocMethod(Method method) -->Line_8 $$ String className = clazz.getName()[ CD ]
Line_7 $$ Class<?> clazz = method.getDeclaringClass()-->Line_8 $$ String className = clazz.getName()[ FD ]
Line_12 $$ String implClassName = StringUtil.replace(className, new String[] -->Line_17 $$ Class<?> implClass = JavadocUtil.loadClass(clazz.getClassLoader(), implClassName)[ FD ]
