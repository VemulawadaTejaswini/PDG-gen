Line_7 $$ content = content.substring(content.indexOf(CharPool.NEW_LINE) + 1)-->Line_6 $$ while (!content.startsWith(_indent + "private") && !content.startsWith(_indent + "protected") && !content.startsWith(_indent + "public")) [ FD ]
Line_10 $$ content = StringUtil.trim(content)-->Line_11 $$ if (content.endsWith(StringPool.CLOSE_CURLY_BRACE) && ((indentLinesCount == 1) || (((indentLinesCount == 2) || (indentLinesCount == 3)) && content.contains("\n" + _indent + "static [ FD ]
Line_7 $$ content = content.substring(content.indexOf(CharPool.NEW_LINE) + 1)-->Line_11 $$ if (content.endsWith(StringPool.CLOSE_CURLY_BRACE) && ((indentLinesCount == 1) || (((indentLinesCount == 2) || (indentLinesCount == 3)) && content.contains("\n" + _indent + "static [ FD ]
Line_2 $$ protected boolean isValidJavaTerm(String content) -->Line_11 $$ if (content.endsWith(StringPool.CLOSE_CURLY_BRACE) && ((indentLinesCount == 1) || (((indentLinesCount == 2) || (indentLinesCount == 3)) && content.contains("\n" + _indent + "static [ CD ]
Line_11 $$ if (content.endsWith(StringPool.CLOSE_CURLY_BRACE) && ((indentLinesCount == 1) || (((indentLinesCount == 2) || (indentLinesCount == 3)) && content.contains("\n" + _indent + "static -->Line_12 $$ return true[ CD ]
Line_2 $$ protected boolean isValidJavaTerm(String content) -->Line_7 $$ content = content.substring(content.indexOf(CharPool.NEW_LINE) + 1)[ FD ]
Line_2 $$ protected boolean isValidJavaTerm(String content) -->Line_10 $$ content = StringUtil.trim(content)[ FD ]
Line_10 $$ content = StringUtil.trim(content)-->Line_13 $$ if ((content.endsWith("};") && (indentLinesCount == 1)) || (content.endsWith(StringPool.SEMICOLON) && (indentLinesCount == 0))) [ FD ]
Line_2 $$ protected boolean isValidJavaTerm(String content) -->Line_3 $$ if (content.startsWith(_indent + "static [ CD ]
Line_6 $$ while (!content.startsWith(_indent + "private") && !content.startsWith(_indent + "protected") && !content.startsWith(_indent + "public")) -->Line_7 $$ content = content.substring(content.indexOf(CharPool.NEW_LINE) + 1)[ CD ]
Line_2 $$ protected boolean isValidJavaTerm(String content) -->Line_9 $$ int indentLinesCount = StringUtil.count(content, "\n" + _indent) - StringUtil.count(content, "\n" + _indent + StringPool.TAB)[ CD ]
Line_11 $$ if (content.endsWith(StringPool.CLOSE_CURLY_BRACE) && ((indentLinesCount == 1) || (((indentLinesCount == 2) || (indentLinesCount == 3)) && content.contains("\n" + _indent + "static -->Line_13 $$ if ((content.endsWith("};") && (indentLinesCount == 1)) || (content.endsWith(StringPool.SEMICOLON) && (indentLinesCount == 0))) [ CD ]
Line_2 $$ protected boolean isValidJavaTerm(String content) -->Line_10 $$ content = StringUtil.trim(content)[ CD ]
Line_7 $$ content = content.substring(content.indexOf(CharPool.NEW_LINE) + 1)-->Line_13 $$ if ((content.endsWith("};") && (indentLinesCount == 1)) || (content.endsWith(StringPool.SEMICOLON) && (indentLinesCount == 0))) [ FD ]
Line_2 $$ protected boolean isValidJavaTerm(String content) -->Line_6 $$ while (!content.startsWith(_indent + "private") && !content.startsWith(_indent + "protected") && !content.startsWith(_indent + "public")) [ FD ]
Line_2 $$ protected boolean isValidJavaTerm(String content) -->Line_9 $$ int indentLinesCount = StringUtil.count(content, "\n" + _indent) - StringUtil.count(content, "\n" + _indent + StringPool.TAB)[ FD ]
Line_2 $$ protected boolean isValidJavaTerm(String content) -->Line_3 $$ if (content.startsWith(_indent + "static [ FD ]
Line_13 $$ if ((content.endsWith("};") && (indentLinesCount == 1)) || (content.endsWith(StringPool.SEMICOLON) && (indentLinesCount == 0))) -->Line_14 $$ return true[ CD ]
Line_3 $$ if (content.startsWith(_indent + "static -->Line_4 $$ return true[ CD ]
Line_2 $$ protected boolean isValidJavaTerm(String content) -->Line_11 $$ if (content.endsWith(StringPool.CLOSE_CURLY_BRACE) && ((indentLinesCount == 1) || (((indentLinesCount == 2) || (indentLinesCount == 3)) && content.contains("\n" + _indent + "static [ FD ]
Line_2 $$ protected boolean isValidJavaTerm(String content) -->Line_6 $$ while (!content.startsWith(_indent + "private") && !content.startsWith(_indent + "protected") && !content.startsWith(_indent + "public")) [ CD ]
Line_7 $$ content = content.substring(content.indexOf(CharPool.NEW_LINE) + 1)-->Line_9 $$ int indentLinesCount = StringUtil.count(content, "\n" + _indent) - StringUtil.count(content, "\n" + _indent + StringPool.TAB)[ FD ]
Line_2 $$ protected boolean isValidJavaTerm(String content) -->Line_16 $$ return false[ CD ]
Line_7 $$ content = content.substring(content.indexOf(CharPool.NEW_LINE) + 1)-->Line_10 $$ content = StringUtil.trim(content)[ FD ]
Line_2 $$ protected boolean isValidJavaTerm(String content) -->Line_13 $$ if ((content.endsWith("};") && (indentLinesCount == 1)) || (content.endsWith(StringPool.SEMICOLON) && (indentLinesCount == 0))) [ FD ]
