Line_3 $$ Method wm = pd.getWriteMethod()-->Line_11 $$ return !ClassUtils.hasMethod(superclass, wm.getName(), wm.getParameterTypes())[ FD ]
Line_4 $$ if (wm == null) -->Line_5 $$ return false[ CD ]
Line_10 $$ Class<?> superclass = wm.getDeclaringClass().getSuperclass()-->Line_11 $$ return !ClassUtils.hasMethod(superclass, wm.getName(), wm.getParameterTypes())[ FD ]
Line_2 $$ public static boolean isExcludedFromDependencyCheck(PropertyDescriptor pd) -->Line_3 $$ Method wm = pd.getWriteMethod()[ FD ]
Line_2 $$ public static boolean isExcludedFromDependencyCheck(PropertyDescriptor pd) -->Line_11 $$ return !ClassUtils.hasMethod(superclass, wm.getName(), wm.getParameterTypes())[ CD ]
Line_2 $$ public static boolean isExcludedFromDependencyCheck(PropertyDescriptor pd) -->Line_3 $$ Method wm = pd.getWriteMethod()[ CD ]
Line_2 $$ public static boolean isExcludedFromDependencyCheck(PropertyDescriptor pd) -->Line_10 $$ Class<?> superclass = wm.getDeclaringClass().getSuperclass()[ CD ]
Line_3 $$ Method wm = pd.getWriteMethod()-->Line_10 $$ Class<?> superclass = wm.getDeclaringClass().getSuperclass()[ FD ]
Line_2 $$ public static boolean isExcludedFromDependencyCheck(PropertyDescriptor pd) -->Line_4 $$ if (wm == null) [ CD ]
Line_3 $$ Method wm = pd.getWriteMethod()-->Line_4 $$ if (wm == null) [ FD ]
