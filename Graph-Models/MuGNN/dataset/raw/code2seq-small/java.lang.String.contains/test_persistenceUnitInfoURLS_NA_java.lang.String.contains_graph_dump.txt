Line_5 $$ InputStream inputStream = TestPersistenceProvider.getPersistenceUnitInfo("mypc").getPersistenceUnitRootUrl().openStream()-->Line_6 $$ assertNotNull("getPersistenceUnitRootUrl().openStream() returned non-null value", inputStream)[ FD ]
Line_11 $$ while (entry != null && !entry.getName().contains("persistence.xml")) -->Line_12 $$ entry = jarInputStream.getNextEntry()[ CD ]
Line_8 $$ JarInputStream jarInputStream = (JarInputStream) inputStream-->Line_12 $$ entry = jarInputStream.getNextEntry()[ FD ]
Line_12 $$ entry = jarInputStream.getNextEntry()-->Line_14 $$ assertNotNull("didn't find persistence.xml in getPersistenceUnitRootUrl, details=" + urlOpenStreamDetails(TestPersistenceProvider.getPersistenceUnitInfo("mypc").getPersistenceUnitRootUrl().openStream()), entry)[ FD ]
Line_9 $$ ZipEntry entry = jarInputStream.getNextEntry()-->Line_10 $$ assertNotNull("got zip entry from getPersistenceUnitRootUrl", entry)[ FD ]
Line_9 $$ ZipEntry entry = jarInputStream.getNextEntry()-->Line_14 $$ assertNotNull("didn't find persistence.xml in getPersistenceUnitRootUrl, details=" + urlOpenStreamDetails(TestPersistenceProvider.getPersistenceUnitInfo("mypc").getPersistenceUnitRootUrl().openStream()), entry)[ FD ]
Line_9 $$ ZipEntry entry = jarInputStream.getNextEntry()-->Line_12 $$ entry = jarInputStream.getNextEntry()[ FD ]
Line_9 $$ ZipEntry entry = jarInputStream.getNextEntry()-->Line_11 $$ while (entry != null && !entry.getName().contains("persistence.xml")) [ FD ]
Line_12 $$ entry = jarInputStream.getNextEntry()-->Line_11 $$ while (entry != null && !entry.getName().contains("persistence.xml")) [ FD ]
Line_8 $$ JarInputStream jarInputStream = (JarInputStream) inputStream-->Line_9 $$ ZipEntry entry = jarInputStream.getNextEntry()[ FD ]
