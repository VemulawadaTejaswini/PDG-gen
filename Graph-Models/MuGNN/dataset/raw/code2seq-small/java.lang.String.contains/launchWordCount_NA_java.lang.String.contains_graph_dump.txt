Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_15 $$ conf.setInputFormat(TextInputFormat.class)[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_3 $$ FileSystem inFs = inDir.getFileSystem(conf)[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_17 $$ conf.setOutputValueClass(IntWritable.class)[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_19 $$ conf.setCombinerClass(WordCount.Reduce.class)[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_4 $$ FileSystem outFs = outDir.getFileSystem(conf)[ CD ]
Line_3 $$ FileSystem inFs = inDir.getFileSystem(conf)-->Line_6 $$ if (!inFs.mkdirs(inDir)) [ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_18 $$ conf.setMapperClass(WordCount.MapClass.class)[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_12 $$ file.close()[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_31 $$ return new TestResult(job, MapReduceTestUtil.readOutput(outDir, conf))[ CD ]
Line_4 $$ FileSystem outFs = outDir.getFileSystem(conf)-->Line_5 $$ outFs.delete(outDir, true)[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_20 $$ conf.setReducerClass(WordCount.Reduce.class)[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_15 $$ conf.setInputFormat(TextInputFormat.class)[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_14 $$ conf.setJobName("wordcount")[ CD ]
Line_3 $$ FileSystem inFs = inDir.getFileSystem(conf)-->Line_10 $$ DataOutputStream file = inFs.create(new Path(inDir, "part-0"))[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_26 $$ JobClient jobClient = new JobClient(conf)[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_30 $$ assertTrue(sysDir.contains("custom"))[ FD ]
Line_26 $$ JobClient jobClient = new JobClient(conf)-->Line_27 $$ RunningJob job = jobClient.runJob(conf)[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_22 $$ FileOutputFormat.setOutputPath(conf, outDir)[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_17 $$ conf.setOutputValueClass(IntWritable.class)[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_24 $$ conf.setNumReduceTasks(numReduces)[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_27 $$ RunningJob job = jobClient.runJob(conf)[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_23 $$ conf.setNumMapTasks(numMaps)[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_29 $$ assertFalse(sysDir.contains("/tmp/subru/mapred/system"))[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_10 $$ DataOutputStream file = inFs.create(new Path(inDir, "part-0"))[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_23 $$ conf.setNumMapTasks(numMaps)[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_19 $$ conf.setCombinerClass(WordCount.Reduce.class)[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_21 $$ FileInputFormat.setInputPaths(conf, inDir)[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_5 $$ outFs.delete(outDir, true)[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_11 $$ file.writeBytes(input)[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_27 $$ RunningJob job = jobClient.runJob(conf)[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_16 $$ conf.setOutputKeyClass(Text.class)[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_24 $$ conf.setNumReduceTasks(numReduces)[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_28 $$ assertFalse(FileSystem.get(conf).exists(new Path(conf.get(JTConfig.JT_SYSTEM_DIR))))[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_21 $$ FileInputFormat.setInputPaths(conf, inDir)[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_29 $$ assertFalse(sysDir.contains("/tmp/subru/mapred/system"))[ FD ]
Line_10 $$ DataOutputStream file = inFs.create(new Path(inDir, "part-0"))-->Line_12 $$ file.close()[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_6 $$ if (!inFs.mkdirs(inDir)) [ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_18 $$ conf.setMapperClass(WordCount.MapClass.class)[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_5 $$ outFs.delete(outDir, true)[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_7 $$ throw new IOException("Mkdirs failed to create " + inDir.toString())[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_16 $$ conf.setOutputKeyClass(Text.class)[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_31 $$ return new TestResult(job, MapReduceTestUtil.readOutput(outDir, conf))[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_14 $$ conf.setJobName("wordcount")[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_4 $$ FileSystem outFs = outDir.getFileSystem(conf)[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_11 $$ file.writeBytes(input)[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_25 $$ conf.set(JTConfig.JT_SYSTEM_DIR, "/tmp/subru/mapred/system")[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_30 $$ assertTrue(sysDir.contains("custom"))[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_28 $$ assertFalse(FileSystem.get(conf).exists(new Path(conf.get(JTConfig.JT_SYSTEM_DIR))))[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_20 $$ conf.setReducerClass(WordCount.Reduce.class)[ CD ]
Line_10 $$ DataOutputStream file = inFs.create(new Path(inDir, "part-0"))-->Line_11 $$ file.writeBytes(input)[ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_6 $$ if (!inFs.mkdirs(inDir)) [ FD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_22 $$ FileOutputFormat.setOutputPath(conf, outDir)[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_25 $$ conf.set(JTConfig.JT_SYSTEM_DIR, "/tmp/subru/mapred/system")[ CD ]
Line_2 $$ public static TestResult launchWordCount(JobConf conf, Path inDir, Path outDir, String input, int numMaps, int numReduces, String sysDir) throws IOException -->Line_3 $$ FileSystem inFs = inDir.getFileSystem(conf)[ FD ]
