Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_17 $$ final CvsMessagePattern errorMessagePattern = getErrorMessagePattern(message, ERRORS_PATTERNS)[ FD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_32 $$ if (warningMessagePattern != null) [ CD ]
Line_41 $$ if (lastMessage == MessageType.WARNING) -->Line_43 $$ if (error) [ CD ]
Line_7 $$ if (isFileMessage(message)) -->Line_9 $$ myListener.addFileMessage(message, myCvsFileSystem)[ CD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_4 $$ if (message.isEmpty()) [ CD ]
Line_18 $$ if (errorMessagePattern != null) -->Line_29 $$ return[ CD ]
Line_39 $$ if (lastMessage == MessageType.ERROR) -->Line_40 $$ myListener.addError(message, null, myCvsFileSystem, myCvsRoot, false)[ CD ]
Line_41 $$ if (lastMessage == MessageType.WARNING) -->Line_42 $$ myListener.addError(message, null, myCvsFileSystem, myCvsRoot, true)[ CD ]
Line_12 $$ if (isMessage(message)) -->Line_15 $$ return[ CD ]
Line_18 $$ if (errorMessagePattern != null) -->Line_28 $$ myListener.addError(message, relativeFileName, myCvsFileSystem, myCvsRoot, false)[ CD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_28 $$ myListener.addError(message, relativeFileName, myCvsFileSystem, myCvsRoot, false)[ FD ]
Line_31 $$ final CvsMessagePattern warningMessagePattern = getErrorMessagePattern(message, WARNINGS_PATTERNS)-->Line_32 $$ if (warningMessagePattern != null) [ FD ]
Line_32 $$ if (warningMessagePattern != null) -->Line_35 $$ return[ CD ]
Line_17 $$ final CvsMessagePattern errorMessagePattern = getErrorMessagePattern(message, ERRORS_PATTERNS)-->Line_18 $$ if (errorMessagePattern != null) [ FD ]
Line_7 $$ if (isFileMessage(message)) -->Line_10 $$ return[ CD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_40 $$ myListener.addError(message, null, myCvsFileSystem, myCvsRoot, false)[ FD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_41 $$ if (lastMessage == MessageType.WARNING) [ FD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_7 $$ if (isFileMessage(message)) [ CD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_42 $$ myListener.addError(message, null, myCvsFileSystem, myCvsRoot, true)[ FD ]
Line_19 $$ if (message.contains(CORRECT_ABOVE_ERRORS_FIRST_PREFIX)) -->Line_23 $$ myPreviousErrorMessages.clear()[ CD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_18 $$ if (errorMessagePattern != null) [ CD ]
Line_20 $$ for (String s : myPreviousErrorMessages) -->Line_21 $$ myListener.addError(s, null, myCvsFileSystem, myCvsRoot, false)[ FD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_7 $$ if (isFileMessage(message)) [ FD ]
Line_19 $$ if (message.contains(CORRECT_ABOVE_ERRORS_FIRST_PREFIX)) -->Line_24 $$ return[ CD ]
Line_12 $$ if (isMessage(message)) -->Line_14 $$ myListener.addMessage(message)[ CD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_9 $$ myListener.addFileMessage(message, myCvsFileSystem)[ FD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_37 $$ if (message.trim().isEmpty())[ FD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_39 $$ if (lastMessage == MessageType.ERROR) [ CD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_3 $$ myListener.addMessage(new MessageEvent(message, error, tagged))[ CD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_26 $$ final String relativeFileName = errorMessagePattern.getRelativeFileName(message)[ FD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_17 $$ final CvsMessagePattern errorMessagePattern = getErrorMessagePattern(message, ERRORS_PATTERNS)[ CD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_12 $$ if (isMessage(message)) [ FD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_34 $$ myListener.addError(message, warningMessagePattern.getRelativeFileName(message), myCvsFileSystem, myCvsRoot, true)[ FD ]
Line_43 $$ if (error) -->Line_44 $$ myPreviousErrorMessages.add(message)[ CD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_12 $$ if (isMessage(message)) [ CD ]
Line_31 $$ final CvsMessagePattern warningMessagePattern = getErrorMessagePattern(message, WARNINGS_PATTERNS)-->Line_34 $$ myListener.addError(message, warningMessagePattern.getRelativeFileName(message), myCvsFileSystem, myCvsRoot, true)[ FD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_37 $$ if (message.trim().isEmpty())[ CD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_19 $$ if (message.contains(CORRECT_ABOVE_ERRORS_FIRST_PREFIX)) [ FD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_14 $$ myListener.addMessage(message)[ FD ]
Line_4 $$ if (message.isEmpty()) -->Line_5 $$ return[ CD ]
Line_26 $$ final String relativeFileName = errorMessagePattern.getRelativeFileName(message)-->Line_28 $$ myListener.addError(message, relativeFileName, myCvsFileSystem, myCvsRoot, false)[ FD ]
Line_18 $$ if (errorMessagePattern != null) -->Line_19 $$ if (message.contains(CORRECT_ABOVE_ERRORS_FIRST_PREFIX)) [ CD ]
Line_37 $$ if (message.trim().isEmpty())-->Line_38 $$ return[ CD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_31 $$ final CvsMessagePattern warningMessagePattern = getErrorMessagePattern(message, WARNINGS_PATTERNS)[ FD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_4 $$ if (message.isEmpty()) [ FD ]
Line_17 $$ final CvsMessagePattern errorMessagePattern = getErrorMessagePattern(message, ERRORS_PATTERNS)-->Line_26 $$ final String relativeFileName = errorMessagePattern.getRelativeFileName(message)[ FD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_44 $$ myPreviousErrorMessages.add(message)[ FD ]
Line_32 $$ if (warningMessagePattern != null) -->Line_34 $$ myListener.addError(message, warningMessagePattern.getRelativeFileName(message), myCvsFileSystem, myCvsRoot, true)[ CD ]
Line_39 $$ if (lastMessage == MessageType.ERROR) -->Line_41 $$ if (lastMessage == MessageType.WARNING) [ CD ]
Line_18 $$ if (errorMessagePattern != null) -->Line_26 $$ final String relativeFileName = errorMessagePattern.getRelativeFileName(message)[ CD ]
Line_2 $$ public void messageSent(String message, final byte[] byteMessage, boolean error, boolean tagged) -->Line_31 $$ final CvsMessagePattern warningMessagePattern = getErrorMessagePattern(message, WARNINGS_PATTERNS)[ CD ]
