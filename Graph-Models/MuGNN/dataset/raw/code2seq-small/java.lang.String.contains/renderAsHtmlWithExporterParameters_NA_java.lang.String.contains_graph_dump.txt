Line_4 $$ Map<JRExporterParameter, Object> exporterParameters = new HashMap<JRExporterParameter, Object>()-->Line_7 $$ JasperReportsUtils.renderAsHtml(getReport(), getParameters(), getData(), writer, exporterParameters)[ FD ]
Line_5 $$ String uri = "/my/uri"-->Line_6 $$ exporterParameters.put(JRHtmlExporterParameter.IMAGES_URI, uri)[ FD ]
Line_2 $$ public void renderAsHtmlWithExporterParameters() throws Exception -->Line_5 $$ String uri = "/my/uri"[ CD ]
Line_2 $$ public void renderAsHtmlWithExporterParameters() throws Exception -->Line_9 $$ assertHtmlOutputCorrect(output)[ CD ]
Line_2 $$ public void renderAsHtmlWithExporterParameters() throws Exception -->Line_4 $$ Map<JRExporterParameter, Object> exporterParameters = new HashMap<JRExporterParameter, Object>()[ CD ]
Line_2 $$ public void renderAsHtmlWithExporterParameters() throws Exception -->Line_6 $$ exporterParameters.put(JRHtmlExporterParameter.IMAGES_URI, uri)[ CD ]
Line_3 $$ StringWriter writer = new StringWriter()-->Line_8 $$ String output = writer.getBuffer().toString()[ FD ]
Line_5 $$ String uri = "/my/uri"-->Line_10 $$ assertTrue("URI not included", output.contains(uri))[ FD ]
Line_3 $$ StringWriter writer = new StringWriter()-->Line_7 $$ JasperReportsUtils.renderAsHtml(getReport(), getParameters(), getData(), writer, exporterParameters)[ FD ]
Line_8 $$ String output = writer.getBuffer().toString()-->Line_9 $$ assertHtmlOutputCorrect(output)[ FD ]
Line_2 $$ public void renderAsHtmlWithExporterParameters() throws Exception -->Line_3 $$ StringWriter writer = new StringWriter()[ CD ]
Line_2 $$ public void renderAsHtmlWithExporterParameters() throws Exception -->Line_8 $$ String output = writer.getBuffer().toString()[ CD ]
Line_2 $$ public void renderAsHtmlWithExporterParameters() throws Exception -->Line_10 $$ assertTrue("URI not included", output.contains(uri))[ CD ]
Line_8 $$ String output = writer.getBuffer().toString()-->Line_10 $$ assertTrue("URI not included", output.contains(uri))[ FD ]
Line_4 $$ Map<JRExporterParameter, Object> exporterParameters = new HashMap<JRExporterParameter, Object>()-->Line_6 $$ exporterParameters.put(JRHtmlExporterParameter.IMAGES_URI, uri)[ FD ]
Line_2 $$ public void renderAsHtmlWithExporterParameters() throws Exception -->Line_7 $$ JasperReportsUtils.renderAsHtml(getReport(), getParameters(), getData(), writer, exporterParameters)[ CD ]
