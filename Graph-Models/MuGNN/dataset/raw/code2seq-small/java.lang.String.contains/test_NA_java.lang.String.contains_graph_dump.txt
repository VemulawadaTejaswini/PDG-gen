Line_2 $$ public void test() throws Exception -->Line_4 $$ assumeTrue("this test will not work from an IDE unless you pass tests.cluster pointing to a running instance", cluster instanceof ExternalTestCluster)[ CD ]
Line_2 $$ public void test() throws Exception -->Line_3 $$ TestCluster cluster = cluster()[ CD ]
Line_7 $$ for (InetSocketAddress address : externalCluster.httpAddresses()) -->Line_8 $$ RestResponse restResponse = new RestResponse(new HttpRequestBuilder(httpClient).host(NetworkAddress.formatAddress(address.getAddress())).port(address.getPort()).path("/_plugin/site-example/").method("GET").execute())[ FD ]
Line_10 $$ String body = restResponse.getBodyAsString()-->Line_11 $$ assertTrue("unexpected body contents: " + body, body.contains("<body>Page body</body>"))[ FD ]
Line_8 $$ RestResponse restResponse = new RestResponse(new HttpRequestBuilder(httpClient).host(NetworkAddress.formatAddress(address.getAddress())).port(address.getPort()).path("/_plugin/site-example/").method("GET").execute())-->Line_9 $$ assertEquals(200, restResponse.getStatusCode())[ FD ]
Line_8 $$ RestResponse restResponse = new RestResponse(new HttpRequestBuilder(httpClient).host(NetworkAddress.formatAddress(address.getAddress())).port(address.getPort()).path("/_plugin/site-example/").method("GET").execute())-->Line_10 $$ String body = restResponse.getBodyAsString()[ FD ]
Line_2 $$ public void test() throws Exception -->Line_5 $$ ExternalTestCluster externalCluster = (ExternalTestCluster) cluster[ CD ]
Line_5 $$ ExternalTestCluster externalCluster = (ExternalTestCluster) cluster-->Line_7 $$ for (InetSocketAddress address : externalCluster.httpAddresses()) [ FD ]
