Line_2 $$ public void patchJavaParameters(Executor executor, RunProfile configuration, JavaParameters javaParameters) -->Line_3 $$ if (!executor.getId().equals(DefaultDebugExecutor.EXECUTOR_ID)) [ CD ]
Line_2 $$ public void patchJavaParameters(Executor executor, RunProfile configuration, JavaParameters javaParameters) -->Line_16 $$ if (project == null) [ CD ]
Line_39 $$ if (!project.isDefault() && containsGroovyClasses(project)) -->Line_41 $$ if (agentPath != null) [ CD ]
Line_24 $$ if (module != null) -->Line_25 $$ final LanguageLevel level = LanguageLevelModuleExtensionImpl.getInstance(module).getLanguageLevel()[ CD ]
Line_15 $$ final Project project = ((RunConfiguration) configuration).getProject()-->Line_16 $$ if (project == null) [ FD ]
Line_3 $$ if (!executor.getId().equals(DefaultDebugExecutor.EXECUTOR_ID)) -->Line_4 $$ return[ CD ]
Line_9 $$ if (hasSpringLoadedReloader(javaParameters)) -->Line_10 $$ return[ CD ]
Line_31 $$ Sdk jdk = javaParameters.getJdk()-->Line_32 $$ if (jdk != null) [ FD ]
Line_2 $$ public void patchJavaParameters(Executor executor, RunProfile configuration, JavaParameters javaParameters) -->Line_15 $$ final Project project = ((RunConfiguration) configuration).getProject()[ CD ]
Line_33 $$ String vendor = JdkUtil.getJdkMainAttribute(jdk, Attributes.Name.IMPLEMENTATION_VENDOR)-->Line_34 $$ if (vendor != null && vendor.contains("IBM")) [ FD ]
Line_2 $$ public void patchJavaParameters(Executor executor, RunProfile configuration, JavaParameters javaParameters) -->Line_39 $$ if (!project.isDefault() && containsGroovyClasses(project)) [ CD ]
Line_15 $$ final Project project = ((RunConfiguration) configuration).getProject()-->Line_39 $$ if (!project.isDefault() && containsGroovyClasses(project)) [ FD ]
Line_2 $$ public void patchJavaParameters(Executor executor, RunProfile configuration, JavaParameters javaParameters) -->Line_12 $$ if (!(configuration instanceof RunConfiguration)) [ CD ]
Line_41 $$ if (agentPath != null) -->Line_42 $$ javaParameters.getVMParametersList().add("-javaagent:" + agentPath)[ CD ]
Line_39 $$ if (!project.isDefault() && containsGroovyClasses(project)) -->Line_40 $$ final String agentPath = handleSpacesInPath(getAgentJarPath())[ CD ]
Line_2 $$ public void patchJavaParameters(Executor executor, RunProfile configuration, JavaParameters javaParameters) -->Line_19 $$ if (!LanguageLevelProjectExtension.getInstance(project).getLanguageLevel().isAtLeast(LanguageLevel.JDK_1_5)) [ CD ]
Line_6 $$ if (!GroovyDebuggerSettings.getInstance().ENABLE_GROOVY_HOTSWAP) -->Line_7 $$ return[ CD ]
Line_2 $$ public void patchJavaParameters(Executor executor, RunProfile configuration, JavaParameters javaParameters) -->Line_6 $$ if (!GroovyDebuggerSettings.getInstance().ENABLE_GROOVY_HOTSWAP) [ CD ]
Line_2 $$ public void patchJavaParameters(Executor executor, RunProfile configuration, JavaParameters javaParameters) -->Line_9 $$ if (hasSpringLoadedReloader(javaParameters)) [ CD ]
Line_25 $$ final LanguageLevel level = LanguageLevelModuleExtensionImpl.getInstance(module).getLanguageLevel()-->Line_26 $$ if (level != null && !level.isAtLeast(LanguageLevel.JDK_1_5)) [ FD ]
Line_34 $$ if (vendor != null && vendor.contains("IBM")) -->Line_35 $$ LOG.info("Due to IBM JDK pecularities (IDEA-59070) we don't add groovy agent when running applications under it")[ CD ]
Line_2 $$ public void patchJavaParameters(Executor executor, RunProfile configuration, JavaParameters javaParameters) -->Line_22 $$ if (configuration instanceof ModuleBasedConfiguration) [ CD ]
Line_22 $$ if (configuration instanceof ModuleBasedConfiguration) -->Line_23 $$ final Module module = ((ModuleBasedConfiguration) configuration).getConfigurationModule().getModule()[ CD ]
Line_31 $$ Sdk jdk = javaParameters.getJdk()-->Line_33 $$ String vendor = JdkUtil.getJdkMainAttribute(jdk, Attributes.Name.IMPLEMENTATION_VENDOR)[ FD ]
Line_32 $$ if (jdk != null) -->Line_34 $$ if (vendor != null && vendor.contains("IBM")) [ CD ]
Line_19 $$ if (!LanguageLevelProjectExtension.getInstance(project).getLanguageLevel().isAtLeast(LanguageLevel.JDK_1_5)) -->Line_20 $$ return[ CD ]
Line_22 $$ if (configuration instanceof ModuleBasedConfiguration) -->Line_24 $$ if (module != null) [ CD ]
Line_2 $$ public void patchJavaParameters(Executor executor, RunProfile configuration, JavaParameters javaParameters) -->Line_42 $$ javaParameters.getVMParametersList().add("-javaagent:" + agentPath)[ FD ]
Line_34 $$ if (vendor != null && vendor.contains("IBM")) -->Line_36 $$ return[ CD ]
Line_2 $$ public void patchJavaParameters(Executor executor, RunProfile configuration, JavaParameters javaParameters) -->Line_3 $$ if (!executor.getId().equals(DefaultDebugExecutor.EXECUTOR_ID)) [ FD ]
Line_16 $$ if (project == null) -->Line_17 $$ return[ CD ]
Line_24 $$ if (module != null) -->Line_26 $$ if (level != null && !level.isAtLeast(LanguageLevel.JDK_1_5)) [ CD ]
Line_26 $$ if (level != null && !level.isAtLeast(LanguageLevel.JDK_1_5)) -->Line_27 $$ return[ CD ]
Line_2 $$ public void patchJavaParameters(Executor executor, RunProfile configuration, JavaParameters javaParameters) -->Line_31 $$ Sdk jdk = javaParameters.getJdk()[ CD ]
Line_2 $$ public void patchJavaParameters(Executor executor, RunProfile configuration, JavaParameters javaParameters) -->Line_9 $$ if (hasSpringLoadedReloader(javaParameters)) [ FD ]
Line_15 $$ final Project project = ((RunConfiguration) configuration).getProject()-->Line_19 $$ if (!LanguageLevelProjectExtension.getInstance(project).getLanguageLevel().isAtLeast(LanguageLevel.JDK_1_5)) [ FD ]
Line_23 $$ final Module module = ((ModuleBasedConfiguration) configuration).getConfigurationModule().getModule()-->Line_25 $$ final LanguageLevel level = LanguageLevelModuleExtensionImpl.getInstance(module).getLanguageLevel()[ FD ]
Line_2 $$ public void patchJavaParameters(Executor executor, RunProfile configuration, JavaParameters javaParameters) -->Line_31 $$ Sdk jdk = javaParameters.getJdk()[ FD ]
Line_2 $$ public void patchJavaParameters(Executor executor, RunProfile configuration, JavaParameters javaParameters) -->Line_32 $$ if (jdk != null) [ CD ]
Line_32 $$ if (jdk != null) -->Line_33 $$ String vendor = JdkUtil.getJdkMainAttribute(jdk, Attributes.Name.IMPLEMENTATION_VENDOR)[ CD ]
Line_23 $$ final Module module = ((ModuleBasedConfiguration) configuration).getConfigurationModule().getModule()-->Line_24 $$ if (module != null) [ FD ]
Line_12 $$ if (!(configuration instanceof RunConfiguration)) -->Line_13 $$ return[ CD ]
Line_40 $$ final String agentPath = handleSpacesInPath(getAgentJarPath())-->Line_41 $$ if (agentPath != null) [ FD ]
Line_2 $$ public void patchJavaParameters(Executor executor, RunProfile configuration, JavaParameters javaParameters) -->Line_22 $$ if (configuration instanceof ModuleBasedConfiguration) [ FD ]
