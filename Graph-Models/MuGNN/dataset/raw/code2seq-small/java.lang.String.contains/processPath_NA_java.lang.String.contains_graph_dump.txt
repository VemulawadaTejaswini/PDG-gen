Line_50 $$ LastPath lastPath = (LastPath) request.getAttribute(WebKeys.LAST_PATH)-->Line_54 $$ session.setAttribute(WebKeys.LAST_PATH, lastPath)[ FD ]
Line_119 $$ if (actionMapping == null) -->Line_120 $$ Action strutsAction = StrutsActionRegistryUtil.getAction(path)[ CD ]
Line_20 $$ if (Validator.isNotNull(queryString)) -->Line_23 $$ fullPath = path[ CD ]
Line_7 $$ if ((userTracker != null) && !path.equals(_PATH_C) && !path.contains(_PATH_J_SECURITY_CHECK) && !path.contains(_PATH_PORTAL_PROTECTED) && !_trackerIgnorePaths.contains(path)) -->Line_26 $$ int pos = fullPathWithoutQueryString.indexOf(StringPool.QUESTION)[ CD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_64 $$ if (((remoteUser != null) || (user != null)) && path.equals(_PATH_PORTAL_LOGOUT)) [ FD ]
Line_76 $$ if ((user != null) && !user.isActive()) -->Line_78 $$ return _PATH_PORTAL_ERROR[ CD ]
Line_105 $$ if ((user != null) && !user.isEmailAddressComplete()) -->Line_106 $$ return _PATH_PORTAL_UPDATE_EMAIL_ADDRESS[ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_6 $$ UserTracker userTracker = LiveUsers.getUserTracker(themeDisplay.getCompanyId(), session.getId())[ CD ]
Line_11 $$ fullPath = getFriendlyTrackerPath(path, themeDisplay, request)-->Line_33 $$ userTrackerPath.setPath(fullPath)[ FD ]
Line_44 $$ if (_lastPaths.contains(path) && !_trackerIgnorePaths.contains(path)) -->Line_46 $$ if (themeDisplay.isLifecycleResource() || themeDisplay.isStateExclusive() || themeDisplay.isStatePopUp() || !StringUtil.equalsIgnoreCase(request.getMethod(), HttpMethods.GET)) [ CD ]
Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_82 $$ if (!path.equals(_PATH_PORTAL_JSON_SERVICE) && !path.equals(_PATH_PORTAL_RENDER_PORTLET) && !ParamUtil.getBoolean(request, "wsrp") && !themeDisplay.isImpersonated() && !InterruptedPortletRequestWhitelistUtil.isPortletInvocationWhitelisted(companyId, portletId, PortalUtil.getStrutsAction(request))) [ FD ]
Line_82 $$ if (!path.equals(_PATH_PORTAL_JSON_SERVICE) && !path.equals(_PATH_PORTAL_RENDER_PORTLET) && !ParamUtil.getBoolean(request, "wsrp") && !themeDisplay.isImpersonated() && !InterruptedPortletRequestWhitelistUtil.isPortletInvocationWhitelisted(companyId, portletId, PortalUtil.getStrutsAction(request))) -->Line_86 $$ if ((user != null) && !user.isEmailAddressVerificationComplete()) [ CD ]
Line_131 $$ portlet = PortletLocalServiceUtil.getPortletById(companyId, portletId)-->Line_135 $$ portlet = PortletLocalServiceUtil.getPortletByStrutsPath(companyId, strutsPath)[ FD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_7 $$ if ((userTracker != null) && !path.equals(_PATH_C) && !path.contains(_PATH_J_SECURITY_CHECK) && !path.contains(_PATH_PORTAL_PROTECTED) && !_trackerIgnorePaths.contains(path)) [ FD ]
Line_49 $$ if (saveLastPath) -->Line_54 $$ session.setAttribute(WebKeys.LAST_PATH, lastPath)[ CD ]
Line_39 $$ User user = null-->Line_76 $$ if ((user != null) && !user.isActive()) [ FD ]
Line_30 $$ if (!_trackerIgnorePaths.contains(fullPathWithoutQueryString)) -->Line_31 $$ UserTrackerPath userTrackerPath = UserTrackerPathUtil.create(0)[ CD ]
Line_82 $$ if (!path.equals(_PATH_PORTAL_JSON_SERVICE) && !path.equals(_PATH_PORTAL_RENDER_PORTLET) && !ParamUtil.getBoolean(request, "wsrp") && !themeDisplay.isImpersonated() && !InterruptedPortletRequestWhitelistUtil.isPortletInvocationWhitelisted(companyId, portletId, PortalUtil.getStrutsAction(request))) -->Line_105 $$ if ((user != null) && !user.isEmailAddressComplete()) [ CD ]
Line_44 $$ if (_lastPaths.contains(path) && !_trackerIgnorePaths.contains(path)) -->Line_49 $$ if (saveLastPath) [ CD ]
Line_30 $$ if (!_trackerIgnorePaths.contains(fullPathWithoutQueryString)) -->Line_35 $$ userTracker.addPath(userTrackerPath)[ CD ]
Line_61 $$ if (path.equals(_PATH_PORTAL_SETUP_WIZARD)) -->Line_62 $$ return _PATH_PORTAL_LAYOUT[ CD ]
Line_80 $$ long companyId = PortalUtil.getCompanyId(request)-->Line_82 $$ if (!path.equals(_PATH_PORTAL_JSON_SERVICE) && !path.equals(_PATH_PORTAL_RENDER_PORTLET) && !ParamUtil.getBoolean(request, "wsrp") && !themeDisplay.isImpersonated() && !InterruptedPortletRequestWhitelistUtil.isPortletInvocationWhitelisted(companyId, portletId, PortalUtil.getStrutsAction(request))) [ FD ]
Line_125 $$ path = actionMapping.getPath()-->Line_134 $$ String strutsPath = path.substring(1, path.lastIndexOf(CharPool.SLASH))[ FD ]
Line_134 $$ String strutsPath = path.substring(1, path.lastIndexOf(CharPool.SLASH))-->Line_135 $$ portlet = PortletLocalServiceUtil.getPortletByStrutsPath(companyId, strutsPath)[ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_64 $$ if (((remoteUser != null) || (user != null)) && path.equals(_PATH_PORTAL_LOGOUT)) [ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_11 $$ fullPath = getFriendlyTrackerPath(path, themeDisplay, request)[ FD ]
Line_31 $$ UserTrackerPath userTrackerPath = UserTrackerPathUtil.create(0)-->Line_34 $$ userTrackerPath.setPathDate(new Date())[ FD ]
Line_125 $$ path = actionMapping.getPath()-->Line_127 $$ if (isPortletPath(path)) [ FD ]
Line_81 $$ String portletId = ParamUtil.getString(request, "p_p_id")-->Line_82 $$ if (!path.equals(_PATH_PORTAL_JSON_SERVICE) && !path.equals(_PATH_PORTAL_RENDER_PORTLET) && !ParamUtil.getBoolean(request, "wsrp") && !themeDisplay.isImpersonated() && !InterruptedPortletRequestWhitelistUtil.isPortletInvocationWhitelisted(companyId, portletId, PortalUtil.getStrutsAction(request))) [ FD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_67 $$ if (((remoteUser != null) || (user != null)) && (path.equals(_PATH_PORTAL_EXPIRE_SESSION) || path.equals(_PATH_PORTAL_EXTEND_SESSION))) [ FD ]
Line_41 $$ user = PortalUtil.getUser(request)-->Line_92 $$ if ((user != null) && user.isPasswordReset()) [ FD ]
Line_4 $$ HttpSession session = request.getSession()-->Line_54 $$ session.setAttribute(WebKeys.LAST_PATH, lastPath)[ FD ]
Line_119 $$ if (actionMapping == null) -->Line_125 $$ path = actionMapping.getPath()[ CD ]
Line_145 $$ if (SessionErrors.contains(request, LayoutPermissionException.class.getName())) -->Line_146 $$ return _PATH_PORTAL_ERROR[ CD ]
Line_31 $$ UserTrackerPath userTrackerPath = UserTrackerPathUtil.create(0)-->Line_33 $$ userTrackerPath.setPath(fullPath)[ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_38 $$ String remoteUser = request.getRemoteUser()[ CD ]
Line_82 $$ if (!path.equals(_PATH_PORTAL_JSON_SERVICE) && !path.equals(_PATH_PORTAL_RENDER_PORTLET) && !ParamUtil.getBoolean(request, "wsrp") && !themeDisplay.isImpersonated() && !InterruptedPortletRequestWhitelistUtil.isPortletInvocationWhitelisted(companyId, portletId, PortalUtil.getStrutsAction(request))) -->Line_108 $$ if ((user != null) && !user.isDefaultUser() && !user.isReminderQueryComplete()) [ CD ]
Line_130 $$ if (Validator.isNotNull(portletId)) -->Line_131 $$ portlet = PortletLocalServiceUtil.getPortletById(companyId, portletId)[ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_82 $$ if (!path.equals(_PATH_PORTAL_JSON_SERVICE) && !path.equals(_PATH_PORTAL_RENDER_PORTLET) && !ParamUtil.getBoolean(request, "wsrp") && !themeDisplay.isImpersonated() && !InterruptedPortletRequestWhitelistUtil.isPortletInvocationWhitelisted(companyId, portletId, PortalUtil.getStrutsAction(request))) [ CD ]
Line_17 $$ if (Validator.isNull(fullPath)) -->Line_19 $$ fullPathWithoutQueryString = path[ CD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_23 $$ fullPath = path[ FD ]
Line_39 $$ User user = null-->Line_94 $$ PasswordPolicy passwordPolicy = user.getPasswordPolicy()[ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_4 $$ HttpSession session = request.getSession()[ CD ]
Line_19 $$ fullPathWithoutQueryString = path-->Line_26 $$ int pos = fullPathWithoutQueryString.indexOf(StringPool.QUESTION)[ FD ]
Line_8 $$ String fullPath = null-->Line_17 $$ if (Validator.isNull(fullPath)) [ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_119 $$ if (actionMapping == null) [ CD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_112 $$ if (!isPublicPath(path)) [ FD ]
Line_41 $$ user = PortalUtil.getUser(request)-->Line_105 $$ if ((user != null) && !user.isEmailAddressComplete()) [ FD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_87 $$ if (path.equals(_PATH_PORTAL_UPDATE_EMAIL_ADDRESS)) [ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_76 $$ if ((user != null) && !user.isActive()) [ CD ]
Line_30 $$ if (!_trackerIgnorePaths.contains(fullPathWithoutQueryString)) -->Line_33 $$ userTrackerPath.setPath(fullPath)[ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_82 $$ if (!path.equals(_PATH_PORTAL_JSON_SERVICE) && !path.equals(_PATH_PORTAL_RENDER_PORTLET) && !ParamUtil.getBoolean(request, "wsrp") && !themeDisplay.isImpersonated() && !InterruptedPortletRequestWhitelistUtil.isPortletInvocationWhitelisted(companyId, portletId, PortalUtil.getStrutsAction(request))) [ FD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_58 $$ if (!path.equals(_PATH_PORTAL_LICENSE) && !path.equals(_PATH_PORTAL_STATUS)) [ FD ]
Line_6 $$ UserTracker userTracker = LiveUsers.getUserTracker(themeDisplay.getCompanyId(), session.getId())-->Line_35 $$ userTracker.addPath(userTrackerPath)[ FD ]
Line_8 $$ String fullPath = null-->Line_33 $$ userTrackerPath.setPath(fullPath)[ FD ]
Line_17 $$ if (Validator.isNull(fullPath)) -->Line_18 $$ String queryString = request.getQueryString()[ CD ]
Line_70 $$ if (((remoteUser != null) || (user != null)) && path.equals(_PATH_PORTAL_UPDATE_TERMS_OF_USE)) -->Line_71 $$ return path[ CD ]
Line_129 $$ Portlet portlet = null-->Line_135 $$ portlet = PortletLocalServiceUtil.getPortletByStrutsPath(companyId, strutsPath)[ FD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_19 $$ fullPathWithoutQueryString = path[ FD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_102 $$ if ((user != null) && !user.isPasswordReset() && path.equals(_PATH_PORTAL_UPDATE_PASSWORD)) [ FD ]
Line_26 $$ int pos = fullPathWithoutQueryString.indexOf(StringPool.QUESTION)-->Line_27 $$ if (pos != -1) [ FD ]
Line_50 $$ LastPath lastPath = (LastPath) request.getAttribute(WebKeys.LAST_PATH)-->Line_51 $$ if (lastPath == null) [ FD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_61 $$ if (path.equals(_PATH_PORTAL_SETUP_WIZARD)) [ FD ]
Line_31 $$ UserTrackerPath userTrackerPath = UserTrackerPathUtil.create(0)-->Line_32 $$ userTrackerPath.setUserTrackerId(userTracker.getUserTrackerId())[ FD ]
Line_50 $$ LastPath lastPath = (LastPath) request.getAttribute(WebKeys.LAST_PATH)-->Line_52 $$ lastPath = new LastPath(themeDisplay.getPathMain(), path, request.getParameterMap())[ FD ]
Line_44 $$ if (_lastPaths.contains(path) && !_trackerIgnorePaths.contains(path)) -->Line_45 $$ boolean saveLastPath = ParamUtil.getBoolean(request, "saveLastPath", true)[ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_118 $$ ActionMapping actionMapping = (ActionMapping) moduleConfig.findActionConfig(path)[ CD ]
Line_7 $$ if ((userTracker != null) && !path.equals(_PATH_C) && !path.contains(_PATH_J_SECURITY_CHECK) && !path.contains(_PATH_PORTAL_PROTECTED) && !_trackerIgnorePaths.contains(path)) -->Line_16 $$ String fullPathWithoutQueryString = fullPath[ CD ]
Line_87 $$ if (path.equals(_PATH_PORTAL_UPDATE_EMAIL_ADDRESS)) -->Line_88 $$ return _PATH_PORTAL_UPDATE_EMAIL_ADDRESS[ CD ]
Line_39 $$ User user = null-->Line_108 $$ if ((user != null) && !user.isDefaultUser() && !user.isReminderQueryComplete()) [ FD ]
Line_135 $$ portlet = PortletLocalServiceUtil.getPortletByStrutsPath(companyId, strutsPath)-->Line_138 $$ defineObjects(request, response, portlet)[ FD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_44 $$ if (_lastPaths.contains(path) && !_trackerIgnorePaths.contains(path)) [ FD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_127 $$ if (isPortletPath(path)) [ FD ]
Line_8 $$ String fullPath = null-->Line_11 $$ fullPath = getFriendlyTrackerPath(path, themeDisplay, request)[ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_141 $$ request.setAttribute(PageContext.EXCEPTION, e)[ FD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_21 $$ fullPath = path.concat(StringPool.QUESTION).concat(queryString)[ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_145 $$ if (SessionErrors.contains(request, LayoutPermissionException.class.getName())) [ CD ]
Line_82 $$ if (!path.equals(_PATH_PORTAL_JSON_SERVICE) && !path.equals(_PATH_PORTAL_RENDER_PORTLET) && !ParamUtil.getBoolean(request, "wsrp") && !themeDisplay.isImpersonated() && !InterruptedPortletRequestWhitelistUtil.isPortletInvocationWhitelisted(companyId, portletId, PortalUtil.getStrutsAction(request))) -->Line_83 $$ if ((user != null) && !user.isTermsOfUseComplete()) [ CD ]
Line_82 $$ if (!path.equals(_PATH_PORTAL_JSON_SERVICE) && !path.equals(_PATH_PORTAL_RENDER_PORTLET) && !ParamUtil.getBoolean(request, "wsrp") && !themeDisplay.isImpersonated() && !InterruptedPortletRequestWhitelistUtil.isPortletInvocationWhitelisted(companyId, portletId, PortalUtil.getStrutsAction(request))) -->Line_92 $$ if ((user != null) && user.isPasswordReset()) [ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_81 $$ String portletId = ParamUtil.getString(request, "p_p_id")[ FD ]
Line_113 $$ if (user == null) -->Line_114 $$ SessionErrors.add(request, PrincipalException.class.getName())[ CD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_120 $$ Action strutsAction = StrutsActionRegistryUtil.getAction(path)[ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_112 $$ if (!isPublicPath(path)) [ CD ]
Line_80 $$ long companyId = PortalUtil.getCompanyId(request)-->Line_131 $$ portlet = PortletLocalServiceUtil.getPortletById(companyId, portletId)[ FD ]
Line_39 $$ User user = null-->Line_102 $$ if ((user != null) && !user.isPasswordReset() && path.equals(_PATH_PORTAL_UPDATE_PASSWORD)) [ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_57 $$ if (PropsValues.SETUP_WIZARD_ENABLED) [ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))[ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_70 $$ if (((remoteUser != null) || (user != null)) && path.equals(_PATH_PORTAL_UPDATE_TERMS_OF_USE)) [ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_18 $$ String queryString = request.getQueryString()[ FD ]
Line_129 $$ Portlet portlet = null-->Line_137 $$ if ((portlet != null) && portlet.isActive()) [ FD ]
Line_41 $$ user = PortalUtil.getUser(request)-->Line_83 $$ if ((user != null) && !user.isTermsOfUseComplete()) [ FD ]
Line_94 $$ PasswordPolicy passwordPolicy = user.getPasswordPolicy()-->Line_95 $$ if ((passwordPolicy == null) || passwordPolicy.isChangeRequired()) [ FD ]
Line_73 $$ if ((remoteUser != null) && (user == null)) -->Line_74 $$ return _PATH_PORTAL_LOGOUT[ CD ]
Line_129 $$ Portlet portlet = null-->Line_133 $$ if (portlet == null) [ FD ]
Line_131 $$ portlet = PortletLocalServiceUtil.getPortletById(companyId, portletId)-->Line_133 $$ if (portlet == null) [ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_39 $$ User user = null[ CD ]
Line_58 $$ if (!path.equals(_PATH_PORTAL_LICENSE) && !path.equals(_PATH_PORTAL_STATUS)) -->Line_59 $$ return _PATH_PORTAL_SETUP_WIZARD[ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_80 $$ long companyId = PortalUtil.getCompanyId(request)[ FD ]
Line_86 $$ if ((user != null) && !user.isEmailAddressVerificationComplete()) -->Line_87 $$ if (path.equals(_PATH_PORTAL_UPDATE_EMAIL_ADDRESS)) [ CD ]
Line_49 $$ if (saveLastPath) -->Line_50 $$ LastPath lastPath = (LastPath) request.getAttribute(WebKeys.LAST_PATH)[ CD ]
Line_95 $$ if ((passwordPolicy == null) || passwordPolicy.isChangeRequired()) -->Line_96 $$ return _PATH_PORTAL_UPDATE_PASSWORD[ CD ]
Line_30 $$ if (!_trackerIgnorePaths.contains(fullPathWithoutQueryString)) -->Line_34 $$ userTrackerPath.setPathDate(new Date())[ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_50 $$ LastPath lastPath = (LastPath) request.getAttribute(WebKeys.LAST_PATH)[ FD ]
Line_135 $$ portlet = PortletLocalServiceUtil.getPortletByStrutsPath(companyId, strutsPath)-->Line_137 $$ if ((portlet != null) && portlet.isActive()) [ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_73 $$ if ((remoteUser != null) && (user == null)) [ CD ]
Line_39 $$ User user = null-->Line_105 $$ if ((user != null) && !user.isEmailAddressComplete()) [ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_41 $$ user = PortalUtil.getUser(request)[ FD ]
Line_7 $$ if ((userTracker != null) && !path.equals(_PATH_C) && !path.contains(_PATH_J_SECURITY_CHECK) && !path.contains(_PATH_PORTAL_PROTECTED) && !_trackerIgnorePaths.contains(path)) -->Line_27 $$ if (pos != -1) [ CD ]
Line_20 $$ if (Validator.isNotNull(queryString)) -->Line_21 $$ fullPath = path.concat(StringPool.QUESTION).concat(queryString)[ CD ]
Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_46 $$ if (themeDisplay.isLifecycleResource() || themeDisplay.isStateExclusive() || themeDisplay.isStatePopUp() || !StringUtil.equalsIgnoreCase(request.getMethod(), HttpMethods.GET)) [ FD ]
Line_7 $$ if ((userTracker != null) && !path.equals(_PATH_C) && !path.contains(_PATH_J_SECURITY_CHECK) && !path.contains(_PATH_PORTAL_PROTECTED) && !_trackerIgnorePaths.contains(path)) -->Line_17 $$ if (Validator.isNull(fullPath)) [ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_38 $$ String remoteUser = request.getRemoteUser()[ FD ]
Line_41 $$ user = PortalUtil.getUser(request)-->Line_113 $$ if (user == null) [ FD ]
Line_27 $$ if (pos != -1) -->Line_28 $$ fullPathWithoutQueryString = fullPathWithoutQueryString.substring(0, pos)[ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))[ CD ]
Line_119 $$ if (actionMapping == null) -->Line_121 $$ if (strutsAction == null) [ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_145 $$ if (SessionErrors.contains(request, LayoutPermissionException.class.getName())) [ FD ]
Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_11 $$ fullPath = getFriendlyTrackerPath(path, themeDisplay, request)[ FD ]
Line_92 $$ if ((user != null) && user.isPasswordReset()) -->Line_102 $$ if ((user != null) && !user.isPasswordReset() && path.equals(_PATH_PORTAL_UPDATE_PASSWORD)) [ CD ]
Line_16 $$ String fullPathWithoutQueryString = fullPath-->Line_28 $$ fullPathWithoutQueryString = fullPathWithoutQueryString.substring(0, pos)[ FD ]
Line_19 $$ fullPathWithoutQueryString = path-->Line_28 $$ fullPathWithoutQueryString = fullPathWithoutQueryString.substring(0, pos)[ FD ]
Line_16 $$ String fullPathWithoutQueryString = fullPath-->Line_19 $$ fullPathWithoutQueryString = path[ FD ]
Line_39 $$ User user = null-->Line_83 $$ if ((user != null) && !user.isTermsOfUseComplete()) [ FD ]
Line_41 $$ user = PortalUtil.getUser(request)-->Line_94 $$ PasswordPolicy passwordPolicy = user.getPasswordPolicy()[ FD ]
Line_41 $$ user = PortalUtil.getUser(request)-->Line_102 $$ if ((user != null) && !user.isPasswordReset() && path.equals(_PATH_PORTAL_UPDATE_PASSWORD)) [ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_46 $$ if (themeDisplay.isLifecycleResource() || themeDisplay.isStateExclusive() || themeDisplay.isStatePopUp() || !StringUtil.equalsIgnoreCase(request.getMethod(), HttpMethods.GET)) [ FD ]
Line_120 $$ Action strutsAction = StrutsActionRegistryUtil.getAction(path)-->Line_121 $$ if (strutsAction == null) [ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_52 $$ lastPath = new LastPath(themeDisplay.getPathMain(), path, request.getParameterMap())[ FD ]
Line_41 $$ user = PortalUtil.getUser(request)-->Line_108 $$ if ((user != null) && !user.isDefaultUser() && !user.isReminderQueryComplete()) [ FD ]
Line_11 $$ fullPath = getFriendlyTrackerPath(path, themeDisplay, request)-->Line_21 $$ fullPath = path.concat(StringPool.QUESTION).concat(queryString)[ FD ]
Line_121 $$ if (strutsAction == null) -->Line_122 $$ return null[ CD ]
Line_129 $$ Portlet portlet = null-->Line_138 $$ defineObjects(request, response, portlet)[ FD ]
Line_131 $$ portlet = PortletLocalServiceUtil.getPortletById(companyId, portletId)-->Line_138 $$ defineObjects(request, response, portlet)[ FD ]
Line_21 $$ fullPath = path.concat(StringPool.QUESTION).concat(queryString)-->Line_23 $$ fullPath = path[ FD ]
Line_39 $$ User user = null-->Line_41 $$ user = PortalUtil.getUser(request)[ FD ]
Line_133 $$ if (portlet == null) -->Line_135 $$ portlet = PortletLocalServiceUtil.getPortletByStrutsPath(companyId, strutsPath)[ CD ]
Line_17 $$ if (Validator.isNull(fullPath)) -->Line_20 $$ if (Validator.isNotNull(queryString)) [ CD ]
Line_31 $$ UserTrackerPath userTrackerPath = UserTrackerPathUtil.create(0)-->Line_35 $$ userTracker.addPath(userTrackerPath)[ FD ]
Line_81 $$ String portletId = ParamUtil.getString(request, "p_p_id")-->Line_131 $$ portlet = PortletLocalServiceUtil.getPortletById(companyId, portletId)[ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_148 $$ return path[ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_44 $$ if (_lastPaths.contains(path) && !_trackerIgnorePaths.contains(path)) [ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_82 $$ if (!path.equals(_PATH_PORTAL_JSON_SERVICE) && !path.equals(_PATH_PORTAL_RENDER_PORTLET) && !ParamUtil.getBoolean(request, "wsrp") && !themeDisplay.isImpersonated() && !InterruptedPortletRequestWhitelistUtil.isPortletInvocationWhitelisted(companyId, portletId, PortalUtil.getStrutsAction(request))) [ FD ]
Line_11 $$ fullPath = getFriendlyTrackerPath(path, themeDisplay, request)-->Line_17 $$ if (Validator.isNull(fullPath)) [ FD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_125 $$ path = actionMapping.getPath()[ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_114 $$ SessionErrors.add(request, PrincipalException.class.getName())[ FD ]
Line_118 $$ ActionMapping actionMapping = (ActionMapping) moduleConfig.findActionConfig(path)-->Line_125 $$ path = actionMapping.getPath()[ FD ]
Line_46 $$ if (themeDisplay.isLifecycleResource() || themeDisplay.isStateExclusive() || themeDisplay.isStatePopUp() || !StringUtil.equalsIgnoreCase(request.getMethod(), HttpMethods.GET)) -->Line_47 $$ saveLastPath = false[ CD ]
Line_57 $$ if (PropsValues.SETUP_WIZARD_ENABLED) -->Line_61 $$ if (path.equals(_PATH_PORTAL_SETUP_WIZARD)) [ CD ]
Line_51 $$ if (lastPath == null) -->Line_52 $$ lastPath = new LastPath(themeDisplay.getPathMain(), path, request.getParameterMap())[ CD ]
Line_39 $$ User user = null-->Line_86 $$ if ((user != null) && !user.isEmailAddressVerificationComplete()) [ FD ]
Line_113 $$ if (user == null) -->Line_115 $$ return _PATH_PORTAL_LOGIN[ CD ]
Line_45 $$ boolean saveLastPath = ParamUtil.getBoolean(request, "saveLastPath", true)-->Line_47 $$ saveLastPath = false[ FD ]
Line_131 $$ portlet = PortletLocalServiceUtil.getPortletById(companyId, portletId)-->Line_137 $$ if ((portlet != null) && portlet.isActive()) [ FD ]
Line_52 $$ lastPath = new LastPath(themeDisplay.getPathMain(), path, request.getParameterMap())-->Line_54 $$ session.setAttribute(WebKeys.LAST_PATH, lastPath)[ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_77 $$ SessionErrors.add(request, UserActiveException.class.getName())[ FD ]
Line_49 $$ if (saveLastPath) -->Line_51 $$ if (lastPath == null) [ CD ]
Line_18 $$ String queryString = request.getQueryString()-->Line_21 $$ fullPath = path.concat(StringPool.QUESTION).concat(queryString)[ FD ]
Line_23 $$ fullPath = path-->Line_33 $$ userTrackerPath.setPath(fullPath)[ FD ]
Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_6 $$ UserTracker userTracker = LiveUsers.getUserTracker(themeDisplay.getCompanyId(), session.getId())[ FD ]
Line_10 $$ if (PropsValues.SESSION_TRACKER_FRIENDLY_PATHS_ENABLED) -->Line_11 $$ fullPath = getFriendlyTrackerPath(path, themeDisplay, request)[ CD ]
Line_137 $$ if ((portlet != null) && portlet.isActive()) -->Line_138 $$ defineObjects(request, response, portlet)[ CD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_11 $$ fullPath = getFriendlyTrackerPath(path, themeDisplay, request)[ FD ]
Line_6 $$ UserTracker userTracker = LiveUsers.getUserTracker(themeDisplay.getCompanyId(), session.getId())-->Line_32 $$ userTrackerPath.setUserTrackerId(userTracker.getUserTrackerId())[ FD ]
Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_52 $$ lastPath = new LastPath(themeDisplay.getPathMain(), path, request.getParameterMap())[ FD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_134 $$ String strutsPath = path.substring(1, path.lastIndexOf(CharPool.SLASH))[ FD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_118 $$ ActionMapping actionMapping = (ActionMapping) moduleConfig.findActionConfig(path)[ FD ]
Line_86 $$ if ((user != null) && !user.isEmailAddressVerificationComplete()) -->Line_90 $$ return _PATH_PORTAL_VERIFY_EMAIL_ADDRESS[ CD ]
Line_133 $$ if (portlet == null) -->Line_134 $$ String strutsPath = path.substring(1, path.lastIndexOf(CharPool.SLASH))[ CD ]
Line_80 $$ long companyId = PortalUtil.getCompanyId(request)-->Line_135 $$ portlet = PortletLocalServiceUtil.getPortletByStrutsPath(companyId, strutsPath)[ FD ]
Line_64 $$ if (((remoteUser != null) || (user != null)) && path.equals(_PATH_PORTAL_LOGOUT)) -->Line_65 $$ return path[ CD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_142 $$ path = _PATH_COMMON_ERROR[ FD ]
Line_129 $$ Portlet portlet = null-->Line_131 $$ portlet = PortletLocalServiceUtil.getPortletById(companyId, portletId)[ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_7 $$ if ((userTracker != null) && !path.equals(_PATH_C) && !path.contains(_PATH_J_SECURITY_CHECK) && !path.contains(_PATH_PORTAL_PROTECTED) && !_trackerIgnorePaths.contains(path)) [ CD ]
Line_39 $$ User user = null-->Line_92 $$ if ((user != null) && user.isPasswordReset()) [ FD ]
Line_112 $$ if (!isPublicPath(path)) -->Line_113 $$ if (user == null) [ CD ]
Line_57 $$ if (PropsValues.SETUP_WIZARD_ENABLED) -->Line_58 $$ if (!path.equals(_PATH_PORTAL_LICENSE) && !path.equals(_PATH_PORTAL_STATUS)) [ CD ]
Line_3 $$ String path = GetterUtil.getString(super.processPath(request, response))-->Line_70 $$ if (((remoteUser != null) || (user != null)) && path.equals(_PATH_PORTAL_UPDATE_TERMS_OF_USE)) [ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_67 $$ if (((remoteUser != null) || (user != null)) && (path.equals(_PATH_PORTAL_EXPIRE_SESSION) || path.equals(_PATH_PORTAL_EXTEND_SESSION))) [ CD ]
Line_67 $$ if (((remoteUser != null) || (user != null)) && (path.equals(_PATH_PORTAL_EXPIRE_SESSION) || path.equals(_PATH_PORTAL_EXTEND_SESSION))) -->Line_68 $$ return path[ CD ]
Line_16 $$ String fullPathWithoutQueryString = fullPath-->Line_30 $$ if (!_trackerIgnorePaths.contains(fullPathWithoutQueryString)) [ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_81 $$ String portletId = ParamUtil.getString(request, "p_p_id")[ CD ]
Line_41 $$ user = PortalUtil.getUser(request)-->Line_76 $$ if ((user != null) && !user.isActive()) [ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_127 $$ if (isPortletPath(path)) [ CD ]
Line_11 $$ fullPath = getFriendlyTrackerPath(path, themeDisplay, request)-->Line_23 $$ fullPath = path[ FD ]
Line_16 $$ String fullPathWithoutQueryString = fullPath-->Line_26 $$ int pos = fullPathWithoutQueryString.indexOf(StringPool.QUESTION)[ FD ]
Line_83 $$ if ((user != null) && !user.isTermsOfUseComplete()) -->Line_84 $$ return _PATH_PORTAL_TERMS_OF_USE[ CD ]
Line_19 $$ fullPathWithoutQueryString = path-->Line_30 $$ if (!_trackerIgnorePaths.contains(fullPathWithoutQueryString)) [ FD ]
Line_8 $$ String fullPath = null-->Line_23 $$ fullPath = path[ FD ]
Line_81 $$ String portletId = ParamUtil.getString(request, "p_p_id")-->Line_130 $$ if (Validator.isNotNull(portletId)) [ FD ]
Line_8 $$ String fullPath = null-->Line_21 $$ fullPath = path.concat(StringPool.QUESTION).concat(queryString)[ FD ]
Line_26 $$ int pos = fullPathWithoutQueryString.indexOf(StringPool.QUESTION)-->Line_28 $$ fullPathWithoutQueryString = fullPathWithoutQueryString.substring(0, pos)[ FD ]
Line_108 $$ if ((user != null) && !user.isDefaultUser() && !user.isReminderQueryComplete()) -->Line_109 $$ return _PATH_PORTAL_UPDATE_REMINDER_QUERY[ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_45 $$ boolean saveLastPath = ParamUtil.getBoolean(request, "saveLastPath", true)[ FD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_4 $$ HttpSession session = request.getSession()[ FD ]
Line_18 $$ String queryString = request.getQueryString()-->Line_20 $$ if (Validator.isNotNull(queryString)) [ FD ]
Line_30 $$ if (!_trackerIgnorePaths.contains(fullPathWithoutQueryString)) -->Line_32 $$ userTrackerPath.setUserTrackerId(userTracker.getUserTrackerId())[ CD ]
Line_76 $$ if ((user != null) && !user.isActive()) -->Line_77 $$ SessionErrors.add(request, UserActiveException.class.getName())[ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_80 $$ long companyId = PortalUtil.getCompanyId(request)[ CD ]
Line_28 $$ fullPathWithoutQueryString = fullPathWithoutQueryString.substring(0, pos)-->Line_30 $$ if (!_trackerIgnorePaths.contains(fullPathWithoutQueryString)) [ FD ]
Line_39 $$ User user = null-->Line_113 $$ if (user == null) [ FD ]
Line_118 $$ ActionMapping actionMapping = (ActionMapping) moduleConfig.findActionConfig(path)-->Line_119 $$ if (actionMapping == null) [ FD ]
Line_4 $$ HttpSession session = request.getSession()-->Line_6 $$ UserTracker userTracker = LiveUsers.getUserTracker(themeDisplay.getCompanyId(), session.getId())[ FD ]
Line_21 $$ fullPath = path.concat(StringPool.QUESTION).concat(queryString)-->Line_33 $$ userTrackerPath.setPath(fullPath)[ FD ]
Line_41 $$ user = PortalUtil.getUser(request)-->Line_86 $$ if ((user != null) && !user.isEmailAddressVerificationComplete()) [ FD ]
Line_125 $$ path = actionMapping.getPath()-->Line_142 $$ path = _PATH_COMMON_ERROR[ FD ]
Line_102 $$ if ((user != null) && !user.isPasswordReset() && path.equals(_PATH_PORTAL_UPDATE_PASSWORD)) -->Line_103 $$ return null[ CD ]
Line_7 $$ if ((userTracker != null) && !path.equals(_PATH_C) && !path.contains(_PATH_J_SECURITY_CHECK) && !path.contains(_PATH_PORTAL_PROTECTED) && !_trackerIgnorePaths.contains(path)) -->Line_8 $$ String fullPath = null[ CD ]
Line_2 $$ protected String processPath(HttpServletRequest request, HttpServletResponse response) throws IOException -->Line_138 $$ defineObjects(request, response, portlet)[ FD ]
Line_7 $$ if ((userTracker != null) && !path.equals(_PATH_C) && !path.contains(_PATH_J_SECURITY_CHECK) && !path.contains(_PATH_PORTAL_PROTECTED) && !_trackerIgnorePaths.contains(path)) -->Line_30 $$ if (!_trackerIgnorePaths.contains(fullPathWithoutQueryString)) [ CD ]
