Line_3 $$ if (!modelName.contains(".model.")) -->Line_4 $$ return null[ CD ]
Line_23 $$ Throwable cause = e.getCause()-->Line_26 $$ if (cause instanceof SystemException) [ FD ]
Line_23 $$ Throwable cause = e.getCause()-->Line_24 $$ if (cause instanceof PortalException) [ FD ]
Line_12 $$ String methodName = "get" + parts[parts.length - 1]-->Line_17 $$ method = serviceUtil.getMethod(methodName, new Class[] [ FD ]
Line_16 $$ if (Validator.isNumber(primKey)) -->Line_18 $$ return (BaseModel<?>) method.invoke(null, Long.valueOf(primKey))[ CD ]
Line_24 $$ if (cause instanceof PortalException) -->Line_26 $$ if (cause instanceof SystemException) [ CD ]
Line_2 $$ public BaseModel<?> getBaseModel(String modelName, String primKey) throws PortalException -->Line_16 $$ if (Validator.isNumber(primKey)) [ FD ]
Line_15 $$ Class<?> serviceUtil = Class.forName(serviceName)-->Line_17 $$ method = serviceUtil.getMethod(methodName, new Class[] [ FD ]
Line_2 $$ public BaseModel<?> getBaseModel(String modelName, String primKey) throws PortalException -->Line_11 $$ String serviceName = StringUtil.merge(parts, StringPool.PERIOD) + "LocalServiceUtil"[ CD ]
Line_2 $$ public BaseModel<?> getBaseModel(String modelName, String primKey) throws PortalException -->Line_21 $$ return (BaseModel<?>) method.invoke(null, primKey)[ FD ]
Line_17 $$ method = serviceUtil.getMethod(methodName, new Class[] -->Line_21 $$ return (BaseModel<?>) method.invoke(null, primKey)[ FD ]
Line_17 $$ method = serviceUtil.getMethod(methodName, new Class[] -->Line_20 $$ method = serviceUtil.getMethod(methodName, new Class[] [ FD ]
Line_2 $$ public BaseModel<?> getBaseModel(String modelName, String primKey) throws PortalException -->Line_10 $$ parts[parts.length - 2] = "service"[ CD ]
Line_2 $$ public BaseModel<?> getBaseModel(String modelName, String primKey) throws PortalException -->Line_6 $$ String[] parts = StringUtil.split(modelName, CharPool.PERIOD)[ FD ]
Line_12 $$ String methodName = "get" + parts[parts.length - 1]-->Line_20 $$ method = serviceUtil.getMethod(methodName, new Class[] [ FD ]
Line_13 $$ Method method = null-->Line_18 $$ return (BaseModel<?>) method.invoke(null, Long.valueOf(primKey))[ FD ]
Line_2 $$ public BaseModel<?> getBaseModel(String modelName, String primKey) throws PortalException -->Line_6 $$ String[] parts = StringUtil.split(modelName, CharPool.PERIOD)[ CD ]
Line_2 $$ public BaseModel<?> getBaseModel(String modelName, String primKey) throws PortalException -->Line_12 $$ String methodName = "get" + parts[parts.length - 1][ CD ]
Line_15 $$ Class<?> serviceUtil = Class.forName(serviceName)-->Line_20 $$ method = serviceUtil.getMethod(methodName, new Class[] [ FD ]
Line_16 $$ if (Validator.isNumber(primKey)) -->Line_17 $$ method = serviceUtil.getMethod(methodName, new Class[] [ CD ]
Line_2 $$ public BaseModel<?> getBaseModel(String modelName, String primKey) throws PortalException -->Line_7 $$ if ((parts.length <= 2) || !parts[parts.length - 2].equals("model")) [ CD ]
Line_20 $$ method = serviceUtil.getMethod(methodName, new Class[] -->Line_21 $$ return (BaseModel<?>) method.invoke(null, primKey)[ FD ]
Line_7 $$ if ((parts.length <= 2) || !parts[parts.length - 2].equals("model")) -->Line_8 $$ return null[ CD ]
Line_2 $$ public BaseModel<?> getBaseModel(String modelName, String primKey) throws PortalException -->Line_18 $$ return (BaseModel<?>) method.invoke(null, Long.valueOf(primKey))[ FD ]
Line_11 $$ String serviceName = StringUtil.merge(parts, StringPool.PERIOD) + "LocalServiceUtil"-->Line_15 $$ Class<?> serviceUtil = Class.forName(serviceName)[ FD ]
Line_13 $$ Method method = null-->Line_21 $$ return (BaseModel<?>) method.invoke(null, primKey)[ FD ]
Line_6 $$ String[] parts = StringUtil.split(modelName, CharPool.PERIOD)-->Line_11 $$ String serviceName = StringUtil.merge(parts, StringPool.PERIOD) + "LocalServiceUtil"[ FD ]
Line_2 $$ public BaseModel<?> getBaseModel(String modelName, String primKey) throws PortalException -->Line_3 $$ if (!modelName.contains(".model.")) [ FD ]
Line_2 $$ public BaseModel<?> getBaseModel(String modelName, String primKey) throws PortalException -->Line_13 $$ Method method = null[ CD ]
Line_13 $$ Method method = null-->Line_17 $$ method = serviceUtil.getMethod(methodName, new Class[] [ FD ]
Line_17 $$ method = serviceUtil.getMethod(methodName, new Class[] -->Line_18 $$ return (BaseModel<?>) method.invoke(null, Long.valueOf(primKey))[ FD ]
Line_2 $$ public BaseModel<?> getBaseModel(String modelName, String primKey) throws PortalException -->Line_3 $$ if (!modelName.contains(".model.")) [ CD ]
Line_13 $$ Method method = null-->Line_20 $$ method = serviceUtil.getMethod(methodName, new Class[] [ FD ]
