Line_18 $$ MiniDFSCluster cluster = null-->Line_28 $$ cluster.shutdown()[ FD ]
Line_2 $$ public void testFailOnPreUpgradeImage() throws IOException -->Line_12 $$ FileOutputStream fos = new FileOutputStream(imageFile)[ CD ]
Line_2 $$ public void testFailOnPreUpgradeImage() throws IOException -->Line_8 $$ File imageDir = new File(namenodeStorage, "image")[ CD ]
Line_4 $$ File namenodeStorage = new File(TEST_ROOT_DIR, "nnimage-0.3.0")-->Line_7 $$ assertTrue("Make " + namenodeStorage, namenodeStorage.mkdirs())[ FD ]
Line_8 $$ File imageDir = new File(namenodeStorage, "image")-->Line_9 $$ assertTrue("Make " + imageDir, imageDir.mkdirs())[ FD ]
Line_12 $$ FileOutputStream fos = new FileOutputStream(imageFile)-->Line_14 $$ fos.write(imageBytes)[ FD ]
Line_2 $$ public void testFailOnPreUpgradeImage() throws IOException -->Line_10 $$ File imageFile = new File(imageDir, "fsimage")[ CD ]
Line_2 $$ public void testFailOnPreUpgradeImage() throws IOException -->Line_6 $$ FileUtil.fullyDelete(namenodeStorage)[ CD ]
Line_2 $$ public void testFailOnPreUpgradeImage() throws IOException -->Line_4 $$ File namenodeStorage = new File(TEST_ROOT_DIR, "nnimage-0.3.0")[ CD ]
Line_2 $$ public void testFailOnPreUpgradeImage() throws IOException -->Line_9 $$ assertTrue("Make " + imageDir, imageDir.mkdirs())[ CD ]
Line_2 $$ public void testFailOnPreUpgradeImage() throws IOException -->Line_3 $$ Configuration conf = new HdfsConfiguration()[ CD ]
Line_18 $$ MiniDFSCluster cluster = null-->Line_27 $$ if (cluster != null) [ FD ]
Line_18 $$ MiniDFSCluster cluster = null-->Line_20 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).format(false).manageDataDfsDirs(false).manageNameDfsDirs(false).startupOption(StartupOption.REGULAR).build()[ FD ]
Line_11 $$ byte[] imageBytes = StringUtils.hexStringToByte("fffffffee17c0d2700000000")-->Line_14 $$ fos.write(imageBytes)[ FD ]
Line_4 $$ File namenodeStorage = new File(TEST_ROOT_DIR, "nnimage-0.3.0")-->Line_6 $$ FileUtil.fullyDelete(namenodeStorage)[ FD ]
Line_2 $$ public void testFailOnPreUpgradeImage() throws IOException -->Line_5 $$ conf.set(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY, namenodeStorage.toString())[ CD ]
Line_12 $$ FileOutputStream fos = new FileOutputStream(imageFile)-->Line_16 $$ fos.close()[ FD ]
Line_20 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).format(false).manageDataDfsDirs(false).manageNameDfsDirs(false).startupOption(StartupOption.REGULAR).build()-->Line_27 $$ if (cluster != null) [ FD ]
Line_3 $$ Configuration conf = new HdfsConfiguration()-->Line_5 $$ conf.set(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY, namenodeStorage.toString())[ FD ]
Line_20 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).format(false).manageDataDfsDirs(false).manageNameDfsDirs(false).startupOption(StartupOption.REGULAR).build()-->Line_28 $$ cluster.shutdown()[ FD ]
Line_2 $$ public void testFailOnPreUpgradeImage() throws IOException -->Line_7 $$ assertTrue("Make " + namenodeStorage, namenodeStorage.mkdirs())[ CD ]
Line_27 $$ if (cluster != null) -->Line_28 $$ cluster.shutdown()[ CD ]
Line_4 $$ File namenodeStorage = new File(TEST_ROOT_DIR, "nnimage-0.3.0")-->Line_5 $$ conf.set(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY, namenodeStorage.toString())[ FD ]
Line_2 $$ public void testFailOnPreUpgradeImage() throws IOException -->Line_18 $$ MiniDFSCluster cluster = null[ CD ]
Line_2 $$ public void testFailOnPreUpgradeImage() throws IOException -->Line_11 $$ byte[] imageBytes = StringUtils.hexStringToByte("fffffffee17c0d2700000000")[ CD ]
