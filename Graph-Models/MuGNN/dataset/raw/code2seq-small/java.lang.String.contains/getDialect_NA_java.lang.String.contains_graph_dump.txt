Line_43 $$ dialect = new SQLServer2005Dialect()-->Line_45 $$ dialect = new SQLServer2008Dialect()[ FD ]
Line_47 $$ dialect = new Oracle10gDialect()-->Line_49 $$ dialect = DialectFactory.buildDialect(new Properties(), connection)[ FD ]
Line_7 $$ String dbName = databaseMetaData.getDatabaseProductName()-->Line_46 $$ if (dbName.startsWith("Oracle") && (dbMajorVersion >= 10)) [ FD ]
Line_10 $$ StringBundler sb = new StringBundler(5)-->Line_32 $$ sb.append("purposes. The database settings can be ")[ FD ]
Line_10 $$ StringBundler sb = new StringBundler(5)-->Line_31 $$ sb.append("database useful for development and demo'ing ")[ FD ]
Line_3 $$ String dialectKey = null-->Line_17 $$ dialect = _dialects.get(dialectKey)[ FD ]
Line_46 $$ if (dbName.startsWith("Oracle") && (dbMajorVersion >= 10)) -->Line_49 $$ dialect = DialectFactory.buildDialect(new Properties(), connection)[ CD ]
Line_37 $$ dialect = new SybaseASE157Dialect()-->Line_41 $$ dialect = new DB2Dialect()[ FD ]
Line_53 $$ if (msg.contains("explicitly set for database: DB2")) -->Line_59 $$ _log.error(e, e)[ CD ]
Line_17 $$ dialect = _dialects.get(dialectKey)-->Line_43 $$ dialect = new SQLServer2005Dialect()[ FD ]
Line_4 $$ Dialect dialect = null-->Line_49 $$ dialect = DialectFactory.buildDialect(new Properties(), connection)[ FD ]
Line_2 $$ public static Dialect getDialect(DataSource dataSource) -->Line_62 $$ if (dialect == null) [ CD ]
Line_37 $$ dialect = new SybaseASE157Dialect()-->Line_47 $$ dialect = new Oracle10gDialect()[ FD ]
Line_17 $$ dialect = _dialects.get(dialectKey)-->Line_62 $$ if (dialect == null) [ FD ]
Line_7 $$ String dbName = databaseMetaData.getDatabaseProductName()-->Line_42 $$ if (dbName.startsWith("Microsoft") && (dbMajorVersion == 9)) [ FD ]
Line_10 $$ StringBundler sb = new StringBundler(5)-->Line_28 $$ sb.append("Liferay is configured to use Hypersonic as ")[ FD ]
Line_17 $$ dialect = _dialects.get(dialectKey)-->Line_25 $$ dialect = new HSQLDialect()[ FD ]
Line_10 $$ StringBundler sb = new StringBundler(5)-->Line_34 $$ _log.warn(sb.toString())[ FD ]
Line_45 $$ dialect = new SQLServer2008Dialect()-->Line_68 $$ _dialects.put(dialectKey, dialect)[ FD ]
Line_17 $$ dialect = _dialects.get(dialectKey)-->Line_49 $$ dialect = DialectFactory.buildDialect(new Properties(), connection)[ FD ]
Line_52 $$ String msg = GetterUtil.getString(e.getMessage())-->Line_53 $$ if (msg.contains("explicitly set for database: DB2")) [ FD ]
Line_25 $$ dialect = new HSQLDialect()-->Line_54 $$ dialect = new DB2400Dialect()[ FD ]
Line_45 $$ dialect = new SQLServer2008Dialect()-->Line_66 $$ _log.info("Found dialect " + dialect.getClass().getName())[ FD ]
Line_41 $$ dialect = new DB2Dialect()-->Line_54 $$ dialect = new DB2400Dialect()[ FD ]
Line_43 $$ dialect = new SQLServer2005Dialect()-->Line_54 $$ dialect = new DB2400Dialect()[ FD ]
Line_10 $$ StringBundler sb = new StringBundler(5)-->Line_14 $$ sb.append(StringPool.COLON)[ FD ]
Line_25 $$ dialect = new HSQLDialect()-->Line_49 $$ dialect = DialectFactory.buildDialect(new Properties(), connection)[ FD ]
Line_9 $$ int dbMinorVersion = databaseMetaData.getDatabaseMinorVersion()-->Line_15 $$ sb.append(dbMinorVersion)[ FD ]
Line_7 $$ String dbName = databaseMetaData.getDatabaseProductName()-->Line_40 $$ if (dbName.startsWith("DB2") && (dbMajorVersion >= 9)) [ FD ]
Line_8 $$ int dbMajorVersion = databaseMetaData.getDatabaseMajorVersion()-->Line_13 $$ sb.append(dbMajorVersion)[ FD ]
Line_16 $$ dialectKey = sb.toString()-->Line_64 $$ if (dialectKey != null) [ FD ]
Line_53 $$ if (msg.contains("explicitly set for database: DB2")) -->Line_55 $$ if (_log.isWarnEnabled()) [ CD ]
Line_4 $$ Dialect dialect = null-->Line_68 $$ _dialects.put(dialectKey, dialect)[ FD ]
Line_26 $$ if (_log.isWarnEnabled()) -->Line_32 $$ sb.append("purposes. The database settings can be ")[ CD ]
Line_47 $$ dialect = new Oracle10gDialect()-->Line_66 $$ _log.info("Found dialect " + dialect.getClass().getName())[ FD ]
Line_43 $$ dialect = new SQLServer2005Dialect()-->Line_49 $$ dialect = DialectFactory.buildDialect(new Properties(), connection)[ FD ]
Line_45 $$ dialect = new SQLServer2008Dialect()-->Line_54 $$ dialect = new DB2400Dialect()[ FD ]
Line_4 $$ Dialect dialect = null-->Line_62 $$ if (dialect == null) [ FD ]
Line_25 $$ dialect = new HSQLDialect()-->Line_68 $$ _dialects.put(dialectKey, dialect)[ FD ]
Line_47 $$ dialect = new Oracle10gDialect()-->Line_62 $$ if (dialect == null) [ FD ]
Line_25 $$ dialect = new HSQLDialect()-->Line_41 $$ dialect = new DB2Dialect()[ FD ]
Line_17 $$ dialect = _dialects.get(dialectKey)-->Line_66 $$ _log.info("Found dialect " + dialect.getClass().getName())[ FD ]
Line_24 $$ if (dbName.startsWith("HSQL")) -->Line_25 $$ dialect = new HSQLDialect()[ CD ]
Line_26 $$ if (_log.isWarnEnabled()) -->Line_33 $$ sb.append("changed in portal-ext.properties.")[ CD ]
Line_62 $$ if (dialect == null) -->Line_64 $$ if (dialectKey != null) [ CD ]
Line_27 $$ sb = new StringBundler(6)-->Line_32 $$ sb.append("purposes. The database settings can be ")[ FD ]
Line_10 $$ StringBundler sb = new StringBundler(5)-->Line_29 $$ sb.append("its database. Do NOT use Hypersonic in ")[ FD ]
Line_4 $$ Dialect dialect = null-->Line_47 $$ dialect = new Oracle10gDialect()[ FD ]
Line_2 $$ public static Dialect getDialect(DataSource dataSource) -->Line_3 $$ String dialectKey = null[ CD ]
Line_7 $$ String dbName = databaseMetaData.getDatabaseProductName()-->Line_38 $$ if (dbName.equals("ASE")) [ FD ]
Line_41 $$ dialect = new DB2Dialect()-->Line_62 $$ if (dialect == null) [ FD ]
Line_24 $$ if (dbName.startsWith("HSQL")) -->Line_26 $$ if (_log.isWarnEnabled()) [ CD ]
Line_47 $$ dialect = new Oracle10gDialect()-->Line_54 $$ dialect = new DB2400Dialect()[ FD ]
Line_64 $$ if (dialectKey != null) -->Line_65 $$ if (_log.isInfoEnabled()) [ CD ]
Line_4 $$ Dialect dialect = null-->Line_43 $$ dialect = new SQLServer2005Dialect()[ FD ]
Line_45 $$ dialect = new SQLServer2008Dialect()-->Line_47 $$ dialect = new Oracle10gDialect()[ FD ]
Line_36 $$ if (dbName.equals("Adaptive Server Enterprise") && (dbMajorVersion >= 15)) -->Line_38 $$ if (dbName.equals("ASE")) [ CD ]
Line_7 $$ String dbName = databaseMetaData.getDatabaseProductName()-->Line_24 $$ if (dbName.startsWith("HSQL")) [ FD ]
Line_7 $$ String dbName = databaseMetaData.getDatabaseProductName()-->Line_36 $$ if (dbName.equals("Adaptive Server Enterprise") && (dbMajorVersion >= 15)) [ FD ]
Line_21 $$ if (_log.isInfoEnabled()) -->Line_22 $$ _log.info("Determine dialect for " + dbName + " " + dbMajorVersion + "." + dbMinorVersion)[ CD ]
Line_27 $$ sb = new StringBundler(6)-->Line_28 $$ sb.append("Liferay is configured to use Hypersonic as ")[ FD ]
Line_4 $$ Dialect dialect = null-->Line_45 $$ dialect = new SQLServer2008Dialect()[ FD ]
Line_3 $$ String dialectKey = null-->Line_64 $$ if (dialectKey != null) [ FD ]
Line_5 $$ try (Connection connection = dataSource.getConnection()) -->Line_49 $$ dialect = DialectFactory.buildDialect(new Properties(), connection)[ FD ]
Line_6 $$ DatabaseMetaData databaseMetaData = connection.getMetaData()-->Line_7 $$ String dbName = databaseMetaData.getDatabaseProductName()[ FD ]
Line_25 $$ dialect = new HSQLDialect()-->Line_66 $$ _log.info("Found dialect " + dialect.getClass().getName())[ FD ]
Line_43 $$ dialect = new SQLServer2005Dialect()-->Line_62 $$ if (dialect == null) [ FD ]
Line_7 $$ String dbName = databaseMetaData.getDatabaseProductName()-->Line_11 $$ sb.append(dbName)[ FD ]
Line_10 $$ StringBundler sb = new StringBundler(5)-->Line_27 $$ sb = new StringBundler(6)[ FD ]
Line_45 $$ dialect = new SQLServer2008Dialect()-->Line_62 $$ if (dialect == null) [ FD ]
Line_49 $$ dialect = DialectFactory.buildDialect(new Properties(), connection)-->Line_54 $$ dialect = new DB2400Dialect()[ FD ]
Line_24 $$ if (dbName.startsWith("HSQL")) -->Line_36 $$ if (dbName.equals("Adaptive Server Enterprise") && (dbMajorVersion >= 15)) [ CD ]
Line_4 $$ Dialect dialect = null-->Line_37 $$ dialect = new SybaseASE157Dialect()[ FD ]
Line_10 $$ StringBundler sb = new StringBundler(5)-->Line_15 $$ sb.append(dbMinorVersion)[ FD ]
Line_17 $$ dialect = _dialects.get(dialectKey)-->Line_68 $$ _dialects.put(dialectKey, dialect)[ FD ]
Line_26 $$ if (_log.isWarnEnabled()) -->Line_29 $$ sb.append("its database. Do NOT use Hypersonic in ")[ CD ]
Line_41 $$ dialect = new DB2Dialect()-->Line_68 $$ _dialects.put(dialectKey, dialect)[ FD ]
Line_43 $$ dialect = new SQLServer2005Dialect()-->Line_66 $$ _log.info("Found dialect " + dialect.getClass().getName())[ FD ]
Line_27 $$ sb = new StringBundler(6)-->Line_33 $$ sb.append("changed in portal-ext.properties.")[ FD ]
Line_41 $$ dialect = new DB2Dialect()-->Line_45 $$ dialect = new SQLServer2008Dialect()[ FD ]
Line_44 $$ if (dbName.startsWith("Microsoft") && (dbMajorVersion == 10)) -->Line_45 $$ dialect = new SQLServer2008Dialect()[ CD ]
Line_42 $$ if (dbName.startsWith("Microsoft") && (dbMajorVersion == 9)) -->Line_44 $$ if (dbName.startsWith("Microsoft") && (dbMajorVersion == 10)) [ CD ]
Line_41 $$ dialect = new DB2Dialect()-->Line_49 $$ dialect = DialectFactory.buildDialect(new Properties(), connection)[ FD ]
Line_54 $$ dialect = new DB2400Dialect()-->Line_62 $$ if (dialect == null) [ FD ]
Line_2 $$ public static Dialect getDialect(DataSource dataSource) -->Line_70 $$ return dialect[ CD ]
Line_16 $$ dialectKey = sb.toString()-->Line_17 $$ dialect = _dialects.get(dialectKey)[ FD ]
Line_49 $$ dialect = DialectFactory.buildDialect(new Properties(), connection)-->Line_66 $$ _log.info("Found dialect " + dialect.getClass().getName())[ FD ]
Line_44 $$ if (dbName.startsWith("Microsoft") && (dbMajorVersion == 10)) -->Line_46 $$ if (dbName.startsWith("Oracle") && (dbMajorVersion >= 10)) [ CD ]
Line_37 $$ dialect = new SybaseASE157Dialect()-->Line_49 $$ dialect = DialectFactory.buildDialect(new Properties(), connection)[ FD ]
Line_40 $$ if (dbName.startsWith("DB2") && (dbMajorVersion >= 9)) -->Line_41 $$ dialect = new DB2Dialect()[ CD ]
Line_37 $$ dialect = new SybaseASE157Dialect()-->Line_66 $$ _log.info("Found dialect " + dialect.getClass().getName())[ FD ]
Line_18 $$ if (dialect != null) -->Line_19 $$ return dialect[ CD ]
Line_10 $$ StringBundler sb = new StringBundler(5)-->Line_12 $$ sb.append(StringPool.COLON)[ FD ]
Line_6 $$ DatabaseMetaData databaseMetaData = connection.getMetaData()-->Line_8 $$ int dbMajorVersion = databaseMetaData.getDatabaseMajorVersion()[ FD ]
Line_37 $$ dialect = new SybaseASE157Dialect()-->Line_68 $$ _dialects.put(dialectKey, dialect)[ FD ]
Line_25 $$ dialect = new HSQLDialect()-->Line_47 $$ dialect = new Oracle10gDialect()[ FD ]
Line_49 $$ dialect = DialectFactory.buildDialect(new Properties(), connection)-->Line_62 $$ if (dialect == null) [ FD ]
Line_47 $$ dialect = new Oracle10gDialect()-->Line_68 $$ _dialects.put(dialectKey, dialect)[ FD ]
Line_17 $$ dialect = _dialects.get(dialectKey)-->Line_18 $$ if (dialect != null) [ FD ]
Line_4 $$ Dialect dialect = null-->Line_66 $$ _log.info("Found dialect " + dialect.getClass().getName())[ FD ]
Line_4 $$ Dialect dialect = null-->Line_41 $$ dialect = new DB2Dialect()[ FD ]
Line_26 $$ if (_log.isWarnEnabled()) -->Line_34 $$ _log.warn(sb.toString())[ CD ]
Line_37 $$ dialect = new SybaseASE157Dialect()-->Line_54 $$ dialect = new DB2400Dialect()[ FD ]
Line_65 $$ if (_log.isInfoEnabled()) -->Line_66 $$ _log.info("Found dialect " + dialect.getClass().getName())[ CD ]
Line_17 $$ dialect = _dialects.get(dialectKey)-->Line_37 $$ dialect = new SybaseASE157Dialect()[ FD ]
Line_17 $$ dialect = _dialects.get(dialectKey)-->Line_41 $$ dialect = new DB2Dialect()[ FD ]
Line_10 $$ StringBundler sb = new StringBundler(5)-->Line_30 $$ sb.append("production. Hypersonic is an embedded ")[ FD ]
Line_49 $$ dialect = DialectFactory.buildDialect(new Properties(), connection)-->Line_68 $$ _dialects.put(dialectKey, dialect)[ FD ]
Line_4 $$ Dialect dialect = null-->Line_25 $$ dialect = new HSQLDialect()[ FD ]
Line_10 $$ StringBundler sb = new StringBundler(5)-->Line_16 $$ dialectKey = sb.toString()[ FD ]
Line_40 $$ if (dbName.startsWith("DB2") && (dbMajorVersion >= 9)) -->Line_42 $$ if (dbName.startsWith("Microsoft") && (dbMajorVersion == 9)) [ CD ]
Line_3 $$ String dialectKey = null-->Line_68 $$ _dialects.put(dialectKey, dialect)[ FD ]
Line_36 $$ if (dbName.equals("Adaptive Server Enterprise") && (dbMajorVersion >= 15)) -->Line_37 $$ dialect = new SybaseASE157Dialect()[ CD ]
Line_27 $$ sb = new StringBundler(6)-->Line_31 $$ sb.append("database useful for development and demo'ing ")[ FD ]
Line_38 $$ if (dbName.equals("ASE")) -->Line_40 $$ if (dbName.startsWith("DB2") && (dbMajorVersion >= 9)) [ CD ]
Line_64 $$ if (dialectKey != null) -->Line_68 $$ _dialects.put(dialectKey, dialect)[ CD ]
Line_25 $$ dialect = new HSQLDialect()-->Line_37 $$ dialect = new SybaseASE157Dialect()[ FD ]
Line_6 $$ DatabaseMetaData databaseMetaData = connection.getMetaData()-->Line_9 $$ int dbMinorVersion = databaseMetaData.getDatabaseMinorVersion()[ FD ]
Line_17 $$ dialect = _dialects.get(dialectKey)-->Line_54 $$ dialect = new DB2400Dialect()[ FD ]
Line_55 $$ if (_log.isWarnEnabled()) -->Line_56 $$ _log.warn("DB2400Dialect was dynamically chosen as the " + "Hibernate dialect for DB2. This can be " + "overriden in portal.properties")[ CD ]
Line_16 $$ dialectKey = sb.toString()-->Line_68 $$ _dialects.put(dialectKey, dialect)[ FD ]
Line_54 $$ dialect = new DB2400Dialect()-->Line_66 $$ _log.info("Found dialect " + dialect.getClass().getName())[ FD ]
Line_25 $$ dialect = new HSQLDialect()-->Line_45 $$ dialect = new SQLServer2008Dialect()[ FD ]
Line_41 $$ dialect = new DB2Dialect()-->Line_43 $$ dialect = new SQLServer2005Dialect()[ FD ]
Line_26 $$ if (_log.isWarnEnabled()) -->Line_31 $$ sb.append("database useful for development and demo'ing ")[ CD ]
Line_37 $$ dialect = new SybaseASE157Dialect()-->Line_43 $$ dialect = new SQLServer2005Dialect()[ FD ]
Line_2 $$ public static Dialect getDialect(DataSource dataSource) -->Line_4 $$ Dialect dialect = null[ CD ]
Line_41 $$ dialect = new DB2Dialect()-->Line_47 $$ dialect = new Oracle10gDialect()[ FD ]
Line_26 $$ if (_log.isWarnEnabled()) -->Line_30 $$ sb.append("production. Hypersonic is an embedded ")[ CD ]
Line_17 $$ dialect = _dialects.get(dialectKey)-->Line_45 $$ dialect = new SQLServer2008Dialect()[ FD ]
Line_46 $$ if (dbName.startsWith("Oracle") && (dbMajorVersion >= 10)) -->Line_47 $$ dialect = new Oracle10gDialect()[ CD ]
Line_3 $$ String dialectKey = null-->Line_16 $$ dialectKey = sb.toString()[ FD ]
Line_26 $$ if (_log.isWarnEnabled()) -->Line_27 $$ sb = new StringBundler(6)[ CD ]
Line_25 $$ dialect = new HSQLDialect()-->Line_62 $$ if (dialect == null) [ FD ]
Line_17 $$ dialect = _dialects.get(dialectKey)-->Line_47 $$ dialect = new Oracle10gDialect()[ FD ]
Line_4 $$ Dialect dialect = null-->Line_17 $$ dialect = _dialects.get(dialectKey)[ FD ]
Line_27 $$ sb = new StringBundler(6)-->Line_29 $$ sb.append("its database. Do NOT use Hypersonic in ")[ FD ]
Line_41 $$ dialect = new DB2Dialect()-->Line_66 $$ _log.info("Found dialect " + dialect.getClass().getName())[ FD ]
Line_25 $$ dialect = new HSQLDialect()-->Line_43 $$ dialect = new SQLServer2005Dialect()[ FD ]
Line_54 $$ dialect = new DB2400Dialect()-->Line_68 $$ _dialects.put(dialectKey, dialect)[ FD ]
Line_53 $$ if (msg.contains("explicitly set for database: DB2")) -->Line_54 $$ dialect = new DB2400Dialect()[ CD ]
Line_43 $$ dialect = new SQLServer2005Dialect()-->Line_68 $$ _dialects.put(dialectKey, dialect)[ FD ]
Line_27 $$ sb = new StringBundler(6)-->Line_34 $$ _log.warn(sb.toString())[ FD ]
Line_37 $$ dialect = new SybaseASE157Dialect()-->Line_45 $$ dialect = new SQLServer2008Dialect()[ FD ]
Line_10 $$ StringBundler sb = new StringBundler(5)-->Line_13 $$ sb.append(dbMajorVersion)[ FD ]
Line_42 $$ if (dbName.startsWith("Microsoft") && (dbMajorVersion == 9)) -->Line_43 $$ dialect = new SQLServer2005Dialect()[ CD ]
Line_26 $$ if (_log.isWarnEnabled()) -->Line_28 $$ sb.append("Liferay is configured to use Hypersonic as ")[ CD ]
Line_7 $$ String dbName = databaseMetaData.getDatabaseProductName()-->Line_44 $$ if (dbName.startsWith("Microsoft") && (dbMajorVersion == 10)) [ FD ]
Line_4 $$ Dialect dialect = null-->Line_54 $$ dialect = new DB2400Dialect()[ FD ]
Line_2 $$ public static Dialect getDialect(DataSource dataSource) -->Line_5 $$ try (Connection connection = dataSource.getConnection()) [ FD ]
Line_45 $$ dialect = new SQLServer2008Dialect()-->Line_49 $$ dialect = DialectFactory.buildDialect(new Properties(), connection)[ FD ]
Line_37 $$ dialect = new SybaseASE157Dialect()-->Line_62 $$ if (dialect == null) [ FD ]
Line_43 $$ dialect = new SQLServer2005Dialect()-->Line_47 $$ dialect = new Oracle10gDialect()[ FD ]
Line_5 $$ try (Connection connection = dataSource.getConnection()) -->Line_6 $$ DatabaseMetaData databaseMetaData = connection.getMetaData()[ FD ]
Line_4 $$ Dialect dialect = null-->Line_18 $$ if (dialect != null) [ FD ]
Line_27 $$ sb = new StringBundler(6)-->Line_30 $$ sb.append("production. Hypersonic is an embedded ")[ FD ]
Line_10 $$ StringBundler sb = new StringBundler(5)-->Line_33 $$ sb.append("changed in portal-ext.properties.")[ FD ]
Line_10 $$ StringBundler sb = new StringBundler(5)-->Line_11 $$ sb.append(dbName)[ FD ]
