Line_27 $$ if (address.size() > 3) -->Line_30 $$ PathElement distPe = address.getElement(address.size() - 1)[ CD ]
Line_9 $$ if (attrDesc.get(ModelDescriptionConstants.DEPRECATED).isDefined()) -->Line_10 $$ return true[ CD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_12 $$ if ("default-web-module".equals(attrName)) [ FD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_22 $$ if ("subsystem".equals(subPe.getKey()) && "security".equals(subPe.getValue()) && "security-domain".equals(address.getElement(address.size() - 2).getKey())) [ FD ]
Line_6 $$ if (attrDesc.get(STORAGE).isDefined() && !attrDesc.get(STORAGE).asString().equalsIgnoreCase("configuration")) -->Line_7 $$ return true[ CD ]
Line_36 $$ if (attrName.contains("jdbc")) -->Line_38 $$ if (attrName.contains("journal")) [ CD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_38 $$ if (attrName.contains("journal")) [ FD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_39 $$ return !resourceNoDefaults.hasDefined("use-journal-store") || !resourceNoDefaults.get("use-journal-store").asBoolean()[ FD ]
Line_19 $$ if ("policy-modules".equals(attrName) || "login-modules".equals(attrName)) -->Line_26 $$ if ("virtual-nodes".equals(attrName)) [ CD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_12 $$ if ("default-web-module".equals(attrName)) [ CD ]
Line_13 $$ if (address.size() > 1) -->Line_14 $$ PathElement subPe = address.getElement(address.size() - 2)[ CD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_29 $$ PathElement containerPe = address.getElement(address.size() - 2)[ FD ]
Line_15 $$ if ("subsystem".equals(subPe.getKey()) && "web".equals(subPe.getValue()) && "virtual-server".equals(address.getLastElement().getKey())) -->Line_16 $$ return true[ CD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_37 $$ return !resourceNoDefaults.hasDefined("use-jdbc-store") || !resourceNoDefaults.get("use-jdbc-store").asBoolean()[ FD ]
Line_26 $$ if ("virtual-nodes".equals(attrName)) -->Line_27 $$ if (address.size() > 3) [ CD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_13 $$ if (address.size() > 1) [ FD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_26 $$ if ("virtual-nodes".equals(attrName)) [ FD ]
Line_27 $$ if (address.size() > 3) -->Line_31 $$ if ("subsystem".equals(subPe.getKey()) && "infinispan".equals(subPe.getValue()) && "cache-container".equals(containerPe.getKey()) && "distributed-cache".equals(distPe.getKey())) [ CD ]
Line_35 $$ if (address.size() > 0 && "transactions".equals(address.getLastElement().getValue()) && "subsystem".equals(address.getLastElement().getKey())) -->Line_36 $$ if (attrName.contains("jdbc")) [ CD ]
Line_12 $$ if ("default-web-module".equals(attrName)) -->Line_19 $$ if ("policy-modules".equals(attrName) || "login-modules".equals(attrName)) [ CD ]
Line_29 $$ PathElement containerPe = address.getElement(address.size() - 2)-->Line_31 $$ if ("subsystem".equals(subPe.getKey()) && "infinispan".equals(subPe.getValue()) && "cache-container".equals(containerPe.getKey()) && "distributed-cache".equals(distPe.getKey())) [ FD ]
Line_14 $$ PathElement subPe = address.getElement(address.size() - 2)-->Line_22 $$ if ("subsystem".equals(subPe.getKey()) && "security".equals(subPe.getValue()) && "security-domain".equals(address.getElement(address.size() - 2).getKey())) [ FD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_15 $$ if ("subsystem".equals(subPe.getKey()) && "web".equals(subPe.getValue()) && "virtual-server".equals(address.getLastElement().getKey())) [ FD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_28 $$ PathElement subPe = address.getElement(address.size() - 3)[ FD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_35 $$ if (address.size() > 0 && "transactions".equals(address.getLastElement().getValue()) && "subsystem".equals(address.getLastElement().getKey())) [ FD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_20 $$ if (address.size() > 2) [ FD ]
Line_19 $$ if ("policy-modules".equals(attrName) || "login-modules".equals(attrName)) -->Line_20 $$ if (address.size() > 2) [ CD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_6 $$ if (attrDesc.get(STORAGE).isDefined() && !attrDesc.get(STORAGE).asString().equalsIgnoreCase("configuration")) [ CD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_9 $$ if (attrDesc.get(ModelDescriptionConstants.DEPRECATED).isDefined()) [ FD ]
Line_27 $$ if (address.size() > 3) -->Line_28 $$ PathElement subPe = address.getElement(address.size() - 3)[ CD ]
Line_30 $$ PathElement distPe = address.getElement(address.size() - 1)-->Line_31 $$ if ("subsystem".equals(subPe.getKey()) && "infinispan".equals(subPe.getValue()) && "cache-container".equals(containerPe.getKey()) && "distributed-cache".equals(distPe.getKey())) [ FD ]
Line_26 $$ if ("virtual-nodes".equals(attrName)) -->Line_35 $$ if (address.size() > 0 && "transactions".equals(address.getLastElement().getValue()) && "subsystem".equals(address.getLastElement().getKey())) [ CD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_19 $$ if ("policy-modules".equals(attrName) || "login-modules".equals(attrName)) [ FD ]
Line_14 $$ PathElement subPe = address.getElement(address.size() - 2)-->Line_31 $$ if ("subsystem".equals(subPe.getKey()) && "infinispan".equals(subPe.getValue()) && "cache-container".equals(containerPe.getKey()) && "distributed-cache".equals(distPe.getKey())) [ FD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_36 $$ if (attrName.contains("jdbc")) [ FD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_3 $$ if (!attrDesc.get(ACCESS_TYPE).isDefined() || !attrDesc.get(ACCESS_TYPE).asString().equalsIgnoreCase("read-write")) [ FD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_21 $$ PathElement subPe = address.getElement(address.size() - 3)[ FD ]
Line_13 $$ if (address.size() > 1) -->Line_15 $$ if ("subsystem".equals(subPe.getKey()) && "web".equals(subPe.getValue()) && "virtual-server".equals(address.getLastElement().getKey())) [ CD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_42 $$ return false[ CD ]
Line_38 $$ if (attrName.contains("journal")) -->Line_39 $$ return !resourceNoDefaults.hasDefined("use-journal-store") || !resourceNoDefaults.get("use-journal-store").asBoolean()[ CD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_9 $$ if (attrDesc.get(ModelDescriptionConstants.DEPRECATED).isDefined()) [ CD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_6 $$ if (attrDesc.get(STORAGE).isDefined() && !attrDesc.get(STORAGE).asString().equalsIgnoreCase("configuration")) [ FD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_27 $$ if (address.size() > 3) [ FD ]
Line_12 $$ if ("default-web-module".equals(attrName)) -->Line_13 $$ if (address.size() > 1) [ CD ]
Line_36 $$ if (attrName.contains("jdbc")) -->Line_37 $$ return !resourceNoDefaults.hasDefined("use-jdbc-store") || !resourceNoDefaults.get("use-jdbc-store").asBoolean()[ CD ]
Line_3 $$ if (!attrDesc.get(ACCESS_TYPE).isDefined() || !attrDesc.get(ACCESS_TYPE).asString().equalsIgnoreCase("read-write")) -->Line_4 $$ return true[ CD ]
Line_14 $$ PathElement subPe = address.getElement(address.size() - 2)-->Line_15 $$ if ("subsystem".equals(subPe.getKey()) && "web".equals(subPe.getValue()) && "virtual-server".equals(address.getLastElement().getKey())) [ FD ]
Line_20 $$ if (address.size() > 2) -->Line_21 $$ PathElement subPe = address.getElement(address.size() - 3)[ CD ]
Line_20 $$ if (address.size() > 2) -->Line_22 $$ if ("subsystem".equals(subPe.getKey()) && "security".equals(subPe.getValue()) && "security-domain".equals(address.getElement(address.size() - 2).getKey())) [ CD ]
Line_22 $$ if ("subsystem".equals(subPe.getKey()) && "security".equals(subPe.getValue()) && "security-domain".equals(address.getElement(address.size() - 2).getKey())) -->Line_23 $$ return true[ CD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_3 $$ if (!attrDesc.get(ACCESS_TYPE).isDefined() || !attrDesc.get(ACCESS_TYPE).asString().equalsIgnoreCase("read-write")) [ CD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_14 $$ PathElement subPe = address.getElement(address.size() - 2)[ FD ]
Line_31 $$ if ("subsystem".equals(subPe.getKey()) && "infinispan".equals(subPe.getValue()) && "cache-container".equals(containerPe.getKey()) && "distributed-cache".equals(distPe.getKey())) -->Line_32 $$ return true[ CD ]
Line_2 $$ private boolean isAttributeExcluded(PathAddress address, String attrName, ModelNode attrDesc, ModelNode resourceNoDefaults) -->Line_30 $$ PathElement distPe = address.getElement(address.size() - 1)[ FD ]
Line_27 $$ if (address.size() > 3) -->Line_29 $$ PathElement containerPe = address.getElement(address.size() - 2)[ CD ]
