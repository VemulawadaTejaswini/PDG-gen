Line_2 $$ private static int countThreads(String search) -->Line_16 $$ return count[ CD ]
Line_2 $$ private static int countThreads(String search) -->Line_4 $$ int count = 0[ CD ]
Line_6 $$ for (ThreadInfo info : infos) -->Line_9 $$ for (StackTraceElement elem : info.getStackTrace()) [ FD ]
Line_2 $$ private static int countThreads(String search) -->Line_10 $$ if (elem.getClassName().contains(search)) [ FD ]
Line_2 $$ private static int countThreads(String search) -->Line_3 $$ ThreadMXBean threadBean = ManagementFactory.getThreadMXBean()[ CD ]
Line_3 $$ ThreadMXBean threadBean = ManagementFactory.getThreadMXBean()-->Line_5 $$ ThreadInfo[] infos = threadBean.getThreadInfo(threadBean.getAllThreadIds(), 20)[ FD ]
Line_6 $$ for (ThreadInfo info : infos) -->Line_7 $$ if (info == null)[ FD ]
Line_9 $$ for (StackTraceElement elem : info.getStackTrace()) -->Line_10 $$ if (elem.getClassName().contains(search)) [ FD ]
Line_4 $$ int count = 0-->Line_11 $$ count++[ FD ]
Line_10 $$ if (elem.getClassName().contains(search)) -->Line_11 $$ count++[ CD ]
Line_2 $$ private static int countThreads(String search) -->Line_5 $$ ThreadInfo[] infos = threadBean.getThreadInfo(threadBean.getAllThreadIds(), 20)[ CD ]
