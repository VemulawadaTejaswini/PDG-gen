Line_36 $$ if (destination.getMessageListenerCount() > 0) -->Line_38 $$ message.setDestinationName(destinationName)[ CD ]
Line_2 $$ public void testCustomClassLoaderDestinationConfiguration() -->Line_17 $$ pluginMessagingConfigurator.setMessageListeners(messageListeners)[ CD ]
Line_33 $$ if (destinationName.equals("liferay/plugintest1")) -->Line_34 $$ Assert.assertEquals(1, destination.getMessageListenerCount())[ CD ]
Line_2 $$ public void testCustomClassLoaderDestinationConfiguration() -->Line_4 $$ AbstractMessagingConfigurator pluginMessagingConfigurator = new AbstractMessagingConfigurator() [ CD ]
Line_4 $$ AbstractMessagingConfigurator pluginMessagingConfigurator = new AbstractMessagingConfigurator() -->Line_17 $$ pluginMessagingConfigurator.setMessageListeners(messageListeners)[ FD ]
Line_2 $$ public void testCustomClassLoaderDestinationConfiguration() -->Line_10 $$ destinationConfigurations.add(DestinationConfiguration.createSynchronousDestinationConfiguration("liferay/plugintest1"))[ CD ]
Line_4 $$ AbstractMessagingConfigurator pluginMessagingConfigurator = new AbstractMessagingConfigurator() -->Line_18 $$ pluginMessagingConfigurator.afterPropertiesSet()[ FD ]
Line_2 $$ public void testCustomClassLoaderDestinationConfiguration() -->Line_11 $$ destinationConfigurations.add(DestinationConfiguration.createParallelDestinationConfiguration("liferay/plugintest2"))[ CD ]
Line_2 $$ public void testCustomClassLoaderDestinationConfiguration() -->Line_12 $$ pluginMessagingConfigurator.setDestinationConfigurations(destinationConfigurations)[ CD ]
Line_2 $$ public void testCustomClassLoaderDestinationConfiguration() -->Line_21 $$ ServiceTracker<Destination, Destination> serviceTracker = registry.trackServices(filter)[ CD ]
Line_4 $$ AbstractMessagingConfigurator pluginMessagingConfigurator = new AbstractMessagingConfigurator() -->Line_6 $$ return testClassLoader[ CD ]
Line_2 $$ public void testCustomClassLoaderDestinationConfiguration() -->Line_18 $$ pluginMessagingConfigurator.afterPropertiesSet()[ CD ]
Line_36 $$ if (destination.getMessageListenerCount() > 0) -->Line_39 $$ destination.send(message)[ CD ]
Line_2 $$ public void testCustomClassLoaderDestinationConfiguration() -->Line_19 $$ Registry registry = RegistryUtil.getRegistry()[ CD ]
Line_2 $$ public void testCustomClassLoaderDestinationConfiguration() -->Line_16 $$ messageListenersList.add(new TestClassLoaderMessageListener(testClassLoader))[ CD ]
Line_24 $$ while (ArrayUtil.isEmpty(serviceTracker.getServices())) -->Line_25 $$ Thread.sleep(1000)[ CD ]
Line_4 $$ AbstractMessagingConfigurator pluginMessagingConfigurator = new AbstractMessagingConfigurator() -->Line_12 $$ pluginMessagingConfigurator.setDestinationConfigurations(destinationConfigurations)[ FD ]
Line_2 $$ public void testCustomClassLoaderDestinationConfiguration() -->Line_15 $$ messageListeners.put("liferay/plugintest1", messageListenersList)[ CD ]
Line_2 $$ public void testCustomClassLoaderDestinationConfiguration() -->Line_3 $$ final TestClassLoader testClassLoader = new TestClassLoader()[ CD ]
Line_2 $$ public void testCustomClassLoaderDestinationConfiguration() -->Line_22 $$ serviceTracker.open()[ CD ]
Line_2 $$ public void testCustomClassLoaderDestinationConfiguration() -->Line_20 $$ Filter filter = registry.getFilter("(&(destination.name=*plugintest*)(objectClass=com.liferay." + "portal.kernel.messaging.Destination))")[ CD ]
