Line_2 $$ public static String buildJavaClassName(String name) -->Line_5 $$ StructClass cl = DecompilerContext.getStructContext().getClass(name)[ FD ]
Line_6 $$ if (cl == null || !cl.isOwn()) -->Line_7 $$ res = res.replace('$', '.')[ CD ]
Line_2 $$ public static String buildJavaClassName(String name) -->Line_4 $$ if (res.contains("$")) [ CD ]
Line_5 $$ StructClass cl = DecompilerContext.getStructContext().getClass(name)-->Line_6 $$ if (cl == null || !cl.isOwn()) [ FD ]
Line_4 $$ if (res.contains("$")) -->Line_5 $$ StructClass cl = DecompilerContext.getStructContext().getClass(name)[ CD ]
Line_4 $$ if (res.contains("$")) -->Line_6 $$ if (cl == null || !cl.isOwn()) [ CD ]
Line_3 $$ String res = name.replace('/', '.')-->Line_4 $$ if (res.contains("$")) [ FD ]
Line_2 $$ public static String buildJavaClassName(String name) -->Line_3 $$ String res = name.replace('/', '.')[ FD ]
Line_3 $$ String res = name.replace('/', '.')-->Line_7 $$ res = res.replace('$', '.')[ FD ]
Line_2 $$ public static String buildJavaClassName(String name) -->Line_10 $$ return res[ CD ]
Line_2 $$ public static String buildJavaClassName(String name) -->Line_3 $$ String res = name.replace('/', '.')[ CD ]
