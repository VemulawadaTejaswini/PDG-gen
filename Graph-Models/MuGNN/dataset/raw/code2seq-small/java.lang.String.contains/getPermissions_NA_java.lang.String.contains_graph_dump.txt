Line_18 $$ String[] paths = StringUtil.split(value)-->Line_53 $$ addCanonicalPaths(paths, file)[ FD ]
Line_64 $$ if (pos != -1) -->Line_65 $$ fileName = fileName.substring(0, pos + 1)[ CD ]
Line_35 $$ if (servletContext != null) -->Line_41 $$ if (actions.equals(FILE_PERMISSION_ACTION_READ)) [ CD ]
Line_59 $$ if (urlConnection instanceof JarURLConnection) -->Line_62 $$ String fileName = jarFileURL.getFile()[ CD ]
Line_63 $$ int pos = fileName.lastIndexOf(File.separatorChar)-->Line_64 $$ if (pos != -1) [ FD ]
Line_6 $$ while (x >= 0) -->Line_9 $$ String propertyValue = GetterUtil.getString(System.getenv(propertyName))[ CD ]
Line_88 $$ if (_rootDir != null) -->Line_90 $$ paths.add(_rootDir + "-")[ CD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_92 $$ addDefaultReadPaths(paths, ServerDetector.getServerId())[ CD ]
Line_32 $$ if (ServerDetector.isWebLogic()) -->Line_33 $$ addPermission(_workDir + "/../-", actions)[ CD ]
Line_59 $$ if (urlConnection instanceof JarURLConnection) -->Line_79 $$ addCanonicalPath(paths, fileName)[ CD ]
Line_29 $$ if (!actions.equals(FILE_PERMISSION_ACTION_EXECUTE) && (_workDir != null)) -->Line_31 $$ addPermission(_workDir + "/-", actions)[ CD ]
Line_85 $$ if (Validator.isNotNull(_GLOBAL_SHARED_LIB_DIR)) -->Line_86 $$ paths.add(_GLOBAL_SHARED_LIB_DIR + "-")[ CD ]
Line_61 $$ URL jarFileURL = jarURLConnection.getJarFileURL()-->Line_62 $$ String fileName = jarFileURL.getFile()[ FD ]
Line_15 $$ x = value.indexOf(_ENV_PREFIX, y + 1)-->Line_6 $$ while (x >= 0) [ FD ]
Line_3 $$ String value = getProperty(key)-->Line_19 $$ if (value.contains("$[ FD ]
Line_11 $$ if (!ArrayUtil.contains(_defaultReadPathsFromArray, fullPropertyName)) -->Line_12 $$ _defaultReadPathsFromArray = ArrayUtil.append(_defaultReadPathsFromArray, fullPropertyName)[ CD ]
Line_35 $$ if (servletContext != null) -->Line_36 $$ File tempDir = (File) servletContext.getAttribute(JavaConstants.JAVAX_SERVLET_CONTEXT_TEMPDIR)[ CD ]
Line_6 $$ while (x >= 0) -->Line_8 $$ String propertyName = value.substring(x + 6, y)[ CD ]
Line_28 $$ ServletContext servletContext = ServletContextPool.get(PortalContextLoaderListener.getPortalServletContextName())-->Line_35 $$ if (servletContext != null) [ FD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_25 $$ addPermission(path, actions)[ FD ]
Line_29 $$ if (!actions.equals(FILE_PERMISSION_ACTION_EXECUTE) && (_workDir != null)) -->Line_35 $$ if (servletContext != null) [ CD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_3 $$ String value = getProperty(key)[ CD ]
Line_55 $$ Enumeration<URL> enumeration = classLoader.getResources("META-INF/MANIFEST.MF")-->Line_57 $$ URL url = enumeration.nextElement()[ FD ]
Line_73 $$ if (ServerDetector.isResin()) -->Line_74 $$ String resinHome = System.getProperty("resin.home")[ CD ]
Line_65 $$ fileName = fileName.substring(0, pos + 1)-->Line_75 $$ if (fileName.startsWith(resinHome)) [ FD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_41 $$ if (actions.equals(FILE_PERMISSION_ACTION_READ)) [ FD ]
Line_3 $$ String value = getProperty(key)-->Line_5 $$ int x = value.indexOf(_ENV_PREFIX)[ FD ]
Line_62 $$ String fileName = jarFileURL.getFile()-->Line_63 $$ int pos = fileName.lastIndexOf(File.separatorChar)[ FD ]
Line_56 $$ while (enumeration.hasMoreElements()) -->Line_58 $$ URLConnection urlConnection = url.openConnection()[ CD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_42 $$ addPermission(tempDirAbsolutePath, actions)[ FD ]
Line_5 $$ int x = value.indexOf(_ENV_PREFIX)-->Line_15 $$ x = value.indexOf(_ENV_PREFIX, y + 1)[ FD ]
Line_4 $$ if (value != null) -->Line_18 $$ String[] paths = StringUtil.split(value)[ CD ]
Line_4 $$ if (value != null) -->Line_19 $$ if (value.contains("$[ CD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_33 $$ addPermission(_workDir + "/../-", actions)[ FD ]
Line_65 $$ fileName = fileName.substring(0, pos + 1)-->Line_69 $$ if (fileName.startsWith(jettyHome)) [ FD ]
Line_54 $$ ClassLoader classLoader = ClassLoader.getSystemClassLoader()-->Line_55 $$ Enumeration<URL> enumeration = classLoader.getResources("META-INF/MANIFEST.MF")[ FD ]
Line_4 $$ if (value != null) -->Line_6 $$ while (x >= 0) [ CD ]
Line_62 $$ String fileName = jarFileURL.getFile()-->Line_79 $$ addCanonicalPath(paths, fileName)[ FD ]
Line_37 $$ String tempDirAbsolutePath = tempDir.getAbsolutePath()-->Line_42 $$ addPermission(tempDirAbsolutePath, actions)[ FD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_29 $$ if (!actions.equals(FILE_PERMISSION_ACTION_EXECUTE) && (_workDir != null)) [ FD ]
Line_59 $$ if (urlConnection instanceof JarURLConnection) -->Line_67 $$ if (ServerDetector.isJetty()) [ CD ]
Line_52 $$ File file = new File(System.getProperty("java.home") + "/lib")-->Line_53 $$ addCanonicalPaths(paths, file)[ FD ]
Line_10 $$ String fullPropertyName = _ENV_PREFIX + propertyName + StringPool.CLOSE_CURLY_BRACE-->Line_11 $$ if (!ArrayUtil.contains(_defaultReadPathsFromArray, fullPropertyName)) [ FD ]
Line_4 $$ if (value != null) -->Line_5 $$ int x = value.indexOf(_ENV_PREFIX)[ CD ]
Line_67 $$ if (ServerDetector.isJetty()) -->Line_69 $$ if (fileName.startsWith(jettyHome)) [ CD ]
Line_41 $$ if (actions.equals(FILE_PERMISSION_ACTION_READ)) -->Line_42 $$ addPermission(tempDirAbsolutePath, actions)[ CD ]
Line_3 $$ String value = getProperty(key)-->Line_8 $$ String propertyName = value.substring(x + 6, y)[ FD ]
Line_3 $$ String value = getProperty(key)-->Line_18 $$ String[] paths = StringUtil.split(value)[ FD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_94 $$ addPermission(path, actions)[ FD ]
Line_11 $$ if (!ArrayUtil.contains(_defaultReadPathsFromArray, fullPropertyName)) -->Line_13 $$ _defaultReadPathsToArray = ArrayUtil.append(_defaultReadPathsToArray, propertyValue)[ CD ]
Line_19 $$ if (value.contains("$-->Line_20 $$ for (int i = 0; i < paths.length; i++) [ CD ]
Line_6 $$ while (x >= 0) -->Line_15 $$ x = value.indexOf(_ENV_PREFIX, y + 1)[ CD ]
Line_62 $$ String fileName = jarFileURL.getFile()-->Line_65 $$ fileName = fileName.substring(0, pos + 1)[ FD ]
Line_5 $$ int x = value.indexOf(_ENV_PREFIX)-->Line_7 $$ int y = value.indexOf(StringPool.CLOSE_CURLY_BRACE, x)[ FD ]
Line_18 $$ String[] paths = StringUtil.split(value)-->Line_89 $$ paths.add(_rootDir)[ FD ]
Line_24 $$ for (String path : paths) -->Line_94 $$ addPermission(path, actions)[ FD ]
Line_36 $$ File tempDir = (File) servletContext.getAttribute(JavaConstants.JAVAX_SERVLET_CONTEXT_TEMPDIR)-->Line_37 $$ String tempDirAbsolutePath = tempDir.getAbsolutePath()[ FD ]
Line_65 $$ fileName = fileName.substring(0, pos + 1)-->Line_79 $$ addCanonicalPath(paths, fileName)[ FD ]
Line_67 $$ if (ServerDetector.isJetty()) -->Line_68 $$ String jettyHome = System.getProperty("jetty.home")[ CD ]
Line_17 $$ value = StringUtil.replace(value, _defaultReadPathsFromArray, _defaultReadPathsToArray)-->Line_18 $$ String[] paths = StringUtil.split(value)[ FD ]
Line_88 $$ if (_rootDir != null) -->Line_89 $$ paths.add(_rootDir)[ CD ]
Line_9 $$ String propertyValue = GetterUtil.getString(System.getenv(propertyName))-->Line_13 $$ _defaultReadPathsToArray = ArrayUtil.append(_defaultReadPathsToArray, propertyValue)[ FD ]
Line_6 $$ while (x >= 0) -->Line_7 $$ int y = value.indexOf(StringPool.CLOSE_CURLY_BRACE, x)[ CD ]
Line_65 $$ fileName = fileName.substring(0, pos + 1)-->Line_63 $$ int pos = fileName.lastIndexOf(File.separatorChar)[ FD ]
Line_74 $$ String resinHome = System.getProperty("resin.home")-->Line_75 $$ if (fileName.startsWith(resinHome)) [ FD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_31 $$ addPermission(_workDir + "/-", actions)[ FD ]
Line_18 $$ String[] paths = StringUtil.split(value)-->Line_79 $$ addCanonicalPath(paths, fileName)[ FD ]
Line_3 $$ String value = getProperty(key)-->Line_15 $$ x = value.indexOf(_ENV_PREFIX, y + 1)[ FD ]
Line_57 $$ URL url = enumeration.nextElement()-->Line_58 $$ URLConnection urlConnection = url.openConnection()[ FD ]
Line_68 $$ String jettyHome = System.getProperty("jetty.home")-->Line_69 $$ if (fileName.startsWith(jettyHome)) [ FD ]
Line_18 $$ String[] paths = StringUtil.split(value)-->Line_90 $$ paths.add(_rootDir + "-")[ FD ]
Line_35 $$ if (servletContext != null) -->Line_38 $$ if (_log.isDebugEnabled()) [ CD ]
Line_3 $$ String value = getProperty(key)-->Line_7 $$ int y = value.indexOf(StringPool.CLOSE_CURLY_BRACE, x)[ FD ]
Line_59 $$ if (urlConnection instanceof JarURLConnection) -->Line_64 $$ if (pos != -1) [ CD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_3 $$ String value = getProperty(key)[ FD ]
Line_3 $$ String value = getProperty(key)-->Line_17 $$ value = StringUtil.replace(value, _defaultReadPathsFromArray, _defaultReadPathsToArray)[ FD ]
Line_35 $$ if (servletContext != null) -->Line_37 $$ String tempDirAbsolutePath = tempDir.getAbsolutePath()[ CD ]
Line_29 $$ if (!actions.equals(FILE_PERMISSION_ACTION_EXECUTE) && (_workDir != null)) -->Line_30 $$ addPermission(_workDir, actions)[ CD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_85 $$ if (Validator.isNotNull(_GLOBAL_SHARED_LIB_DIR)) [ CD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_29 $$ if (!actions.equals(FILE_PERMISSION_ACTION_EXECUTE) && (_workDir != null)) [ CD ]
Line_47 $$ if (!actions.equals(FILE_PERMISSION_ACTION_READ)) -->Line_48 $$ return[ CD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_30 $$ addPermission(_workDir, actions)[ FD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_47 $$ if (!actions.equals(FILE_PERMISSION_ACTION_READ)) [ CD ]
Line_62 $$ String fileName = jarFileURL.getFile()-->Line_75 $$ if (fileName.startsWith(resinHome)) [ FD ]
Line_4 $$ if (value != null) -->Line_17 $$ value = StringUtil.replace(value, _defaultReadPathsFromArray, _defaultReadPathsToArray)[ CD ]
Line_28 $$ ServletContext servletContext = ServletContextPool.get(PortalContextLoaderListener.getPortalServletContextName())-->Line_36 $$ File tempDir = (File) servletContext.getAttribute(JavaConstants.JAVAX_SERVLET_CONTEXT_TEMPDIR)[ FD ]
Line_18 $$ String[] paths = StringUtil.split(value)-->Line_86 $$ paths.add(_GLOBAL_SHARED_LIB_DIR + "-")[ FD ]
Line_59 $$ if (urlConnection instanceof JarURLConnection) -->Line_63 $$ int pos = fileName.lastIndexOf(File.separatorChar)[ CD ]
Line_10 $$ String fullPropertyName = _ENV_PREFIX + propertyName + StringPool.CLOSE_CURLY_BRACE-->Line_12 $$ _defaultReadPathsFromArray = ArrayUtil.append(_defaultReadPathsFromArray, fullPropertyName)[ FD ]
Line_7 $$ int y = value.indexOf(StringPool.CLOSE_CURLY_BRACE, x)-->Line_8 $$ String propertyName = value.substring(x + 6, y)[ FD ]
Line_20 $$ for (int i = 0; i < paths.length; i++) -->Line_21 $$ paths[i] = StringUtil.replace(paths[i], "$[ CD ]
Line_55 $$ Enumeration<URL> enumeration = classLoader.getResources("META-INF/MANIFEST.MF")-->Line_56 $$ while (enumeration.hasMoreElements()) [ FD ]
Line_3 $$ String value = getProperty(key)-->Line_4 $$ if (value != null) [ FD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_4 $$ if (value != null) [ CD ]
Line_38 $$ if (_log.isDebugEnabled()) -->Line_39 $$ _log.debug("Temp directory " + tempDirAbsolutePath)[ CD ]
Line_56 $$ while (enumeration.hasMoreElements()) -->Line_59 $$ if (urlConnection instanceof JarURLConnection) [ CD ]
Line_8 $$ String propertyName = value.substring(x + 6, y)-->Line_9 $$ String propertyValue = GetterUtil.getString(System.getenv(propertyName))[ FD ]
Line_24 $$ for (String path : paths) -->Line_25 $$ addPermission(path, actions)[ FD ]
Line_5 $$ int x = value.indexOf(_ENV_PREFIX)-->Line_6 $$ while (x >= 0) [ FD ]
Line_57 $$ URL url = enumeration.nextElement()-->Line_60 $$ JarURLConnection jarURLConnection = (JarURLConnection) url.openConnection()[ FD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_28 $$ ServletContext servletContext = ServletContextPool.get(PortalContextLoaderListener.getPortalServletContextName())[ CD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_44 $$ addPermission(tempDirAbsolutePath + "/-", actions)[ FD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_47 $$ if (!actions.equals(FILE_PERMISSION_ACTION_READ)) [ FD ]
Line_17 $$ value = StringUtil.replace(value, _defaultReadPathsFromArray, _defaultReadPathsToArray)-->Line_19 $$ if (value.contains("$[ FD ]
Line_6 $$ while (x >= 0) -->Line_11 $$ if (!ArrayUtil.contains(_defaultReadPathsFromArray, fullPropertyName)) [ CD ]
Line_59 $$ if (urlConnection instanceof JarURLConnection) -->Line_60 $$ JarURLConnection jarURLConnection = (JarURLConnection) url.openConnection()[ CD ]
Line_6 $$ while (x >= 0) -->Line_10 $$ String fullPropertyName = _ENV_PREFIX + propertyName + StringPool.CLOSE_CURLY_BRACE[ CD ]
Line_59 $$ if (urlConnection instanceof JarURLConnection) -->Line_73 $$ if (ServerDetector.isResin()) [ CD ]
Line_60 $$ JarURLConnection jarURLConnection = (JarURLConnection) url.openConnection()-->Line_61 $$ URL jarFileURL = jarURLConnection.getJarFileURL()[ FD ]
Line_35 $$ if (servletContext != null) -->Line_44 $$ addPermission(tempDirAbsolutePath + "/-", actions)[ CD ]
Line_59 $$ if (urlConnection instanceof JarURLConnection) -->Line_61 $$ URL jarFileURL = jarURLConnection.getJarFileURL()[ CD ]
Line_18 $$ String[] paths = StringUtil.split(value)-->Line_92 $$ addDefaultReadPaths(paths, ServerDetector.getServerId())[ FD ]
Line_73 $$ if (ServerDetector.isResin()) -->Line_75 $$ if (fileName.startsWith(resinHome)) [ CD ]
Line_2 $$ protected void getPermissions(String key, String actions) -->Line_88 $$ if (_rootDir != null) [ CD ]
Line_29 $$ if (!actions.equals(FILE_PERMISSION_ACTION_EXECUTE) && (_workDir != null)) -->Line_32 $$ if (ServerDetector.isWebLogic()) [ CD ]
Line_15 $$ x = value.indexOf(_ENV_PREFIX, y + 1)-->Line_7 $$ int y = value.indexOf(StringPool.CLOSE_CURLY_BRACE, x)[ FD ]
Line_62 $$ String fileName = jarFileURL.getFile()-->Line_69 $$ if (fileName.startsWith(jettyHome)) [ FD ]
Line_58 $$ URLConnection urlConnection = url.openConnection()-->Line_59 $$ if (urlConnection instanceof JarURLConnection) [ FD ]
Line_56 $$ while (enumeration.hasMoreElements()) -->Line_57 $$ URL url = enumeration.nextElement()[ CD ]
