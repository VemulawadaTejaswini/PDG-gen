Line_2 $$ public void authenticate(URL url, AuthenticatedURL.Token token) throws IOException, AuthenticationException -->Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_6 $$ url = new URL(strUrl)-->Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public void authenticate(URL url, AuthenticatedURL.Token token) throws IOException, AuthenticationException -->Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_9 $$ conn = connConfigurator.configure(conn)-->Line_12 $$ conn.connect()[ FD ]
Line_9 $$ conn = connConfigurator.configure(conn)-->Line_11 $$ conn.setRequestMethod("OPTIONS")[ FD ]
Line_9 $$ conn = connConfigurator.configure(conn)-->Line_13 $$ AuthenticatedURL.extractToken(conn, token)[ FD ]
Line_2 $$ public void authenticate(URL url, AuthenticatedURL.Token token) throws IOException, AuthenticationException -->Line_4 $$ String paramSeparator = (strUrl.contains("?")) ? "&" : "?"[ CD ]
Line_2 $$ public void authenticate(URL url, AuthenticatedURL.Token token) throws IOException, AuthenticationException -->Line_3 $$ String strUrl = url.toString()[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_11 $$ conn.setRequestMethod("OPTIONS")[ FD ]
Line_2 $$ public void authenticate(URL url, AuthenticatedURL.Token token) throws IOException, AuthenticationException -->Line_3 $$ String strUrl = url.toString()[ FD ]
Line_2 $$ public void authenticate(URL url, AuthenticatedURL.Token token) throws IOException, AuthenticationException -->Line_13 $$ AuthenticatedURL.extractToken(conn, token)[ CD ]
Line_2 $$ public void authenticate(URL url, AuthenticatedURL.Token token) throws IOException, AuthenticationException -->Line_13 $$ AuthenticatedURL.extractToken(conn, token)[ FD ]
Line_2 $$ public void authenticate(URL url, AuthenticatedURL.Token token) throws IOException, AuthenticationException -->Line_6 $$ url = new URL(strUrl)[ FD ]
Line_2 $$ public void authenticate(URL url, AuthenticatedURL.Token token) throws IOException, AuthenticationException -->Line_11 $$ conn.setRequestMethod("OPTIONS")[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_12 $$ conn.connect()[ FD ]
Line_3 $$ String strUrl = url.toString()-->Line_5 $$ strUrl += paramSeparator + USER_NAME_EQ + getUserName()[ FD ]
Line_8 $$ if (connConfigurator != null) -->Line_9 $$ conn = connConfigurator.configure(conn)[ CD ]
Line_2 $$ public void authenticate(URL url, AuthenticatedURL.Token token) throws IOException, AuthenticationException -->Line_8 $$ if (connConfigurator != null) [ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_13 $$ AuthenticatedURL.extractToken(conn, token)[ FD ]
Line_2 $$ public void authenticate(URL url, AuthenticatedURL.Token token) throws IOException, AuthenticationException -->Line_6 $$ url = new URL(strUrl)[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ conn = connConfigurator.configure(conn)[ FD ]
Line_2 $$ public void authenticate(URL url, AuthenticatedURL.Token token) throws IOException, AuthenticationException -->Line_12 $$ conn.connect()[ CD ]
Line_3 $$ String strUrl = url.toString()-->Line_4 $$ String paramSeparator = (strUrl.contains("?")) ? "&" : "?"[ FD ]
Line_2 $$ public void authenticate(URL url, AuthenticatedURL.Token token) throws IOException, AuthenticationException -->Line_5 $$ strUrl += paramSeparator + USER_NAME_EQ + getUserName()[ CD ]
