Line_5 $$ for (String envVarName : Arrays.asList("JAVA_OPTS", "GRADLE_OPTS")) -->Line_12 $$ throw new AssertionError(String.format("Env var %s contains arg with space (%s) which is not supported by Gradle %s", envVarName, arg, getDistribution().getVersion().getVersion()))[ FD ]
Line_4 $$ Map<String, String> environmentVars = buildInvocation().environmentVars-->Line_6 $$ String envVarValue = environmentVars.get(envVarName)[ FD ]
Line_3 $$ if (!getDistribution().isSupportsSpacesInGradleAndJavaOpts()) -->Line_4 $$ Map<String, String> environmentVars = buildInvocation().environmentVars[ CD ]
Line_6 $$ String envVarValue = environmentVars.get(envVarName)-->Line_7 $$ if (envVarValue == null) [ FD ]
Line_2 $$ public void assertCanExecute() throws AssertionError -->Line_3 $$ if (!getDistribution().isSupportsSpacesInGradleAndJavaOpts()) [ CD ]
Line_10 $$ for (String arg : JvmOptions.fromString(envVarValue)) -->Line_12 $$ throw new AssertionError(String.format("Env var %s contains arg with space (%s) which is not supported by Gradle %s", envVarName, arg, getDistribution().getVersion().getVersion()))[ FD ]
Line_10 $$ for (String arg : JvmOptions.fromString(envVarValue)) -->Line_11 $$ if (arg.contains(" ")) [ FD ]
Line_5 $$ for (String envVarName : Arrays.asList("JAVA_OPTS", "GRADLE_OPTS")) -->Line_6 $$ String envVarValue = environmentVars.get(envVarName)[ FD ]
Line_6 $$ String envVarValue = environmentVars.get(envVarName)-->Line_10 $$ for (String arg : JvmOptions.fromString(envVarValue)) [ FD ]
