Line_4 $$ if (text.contains("<pre>")) -->Line_5 $$ text = _wrapText(text, indentLength, "pre")[ CD ]
Line_9 $$ text = _formatInlines(text)-->Line_10 $$ text = StringUtil.wrap(text, 80 - indentLength, "\n")[ FD ]
Line_2 $$ private String _wrapText(String text, String indent) -->Line_12 $$ text = text.replaceAll("(?m)^", indent)[ CD ]
Line_9 $$ text = _formatInlines(text)-->Line_12 $$ text = text.replaceAll("(?m)^", indent)[ FD ]
Line_6 $$ if (text.contains("<table>")) -->Line_9 $$ text = _formatInlines(text)[ CD ]
Line_5 $$ text = _wrapText(text, indentLength, "pre")-->Line_12 $$ text = text.replaceAll("(?m)^", indent)[ FD ]
Line_7 $$ text = _wrapText(text, indentLength, "table")-->Line_10 $$ text = StringUtil.wrap(text, 80 - indentLength, "\n")[ FD ]
Line_3 $$ int indentLength = _getIndentLength(indent)-->Line_7 $$ text = _wrapText(text, indentLength, "table")[ FD ]
Line_5 $$ text = _wrapText(text, indentLength, "pre")-->Line_7 $$ text = _wrapText(text, indentLength, "table")[ FD ]
Line_7 $$ text = _wrapText(text, indentLength, "table")-->Line_12 $$ text = text.replaceAll("(?m)^", indent)[ FD ]
Line_3 $$ int indentLength = _getIndentLength(indent)-->Line_5 $$ text = _wrapText(text, indentLength, "pre")[ FD ]
Line_2 $$ private String _wrapText(String text, String indent) -->Line_5 $$ text = _wrapText(text, indentLength, "pre")[ FD ]
Line_2 $$ private String _wrapText(String text, String indent) -->Line_3 $$ int indentLength = _getIndentLength(indent)[ CD ]
Line_10 $$ text = StringUtil.wrap(text, 80 - indentLength, "\n")-->Line_12 $$ text = text.replaceAll("(?m)^", indent)[ FD ]
Line_2 $$ private String _wrapText(String text, String indent) -->Line_4 $$ if (text.contains("<pre>")) [ CD ]
Line_2 $$ private String _wrapText(String text, String indent) -->Line_9 $$ text = _formatInlines(text)[ FD ]
Line_2 $$ private String _wrapText(String text, String indent) -->Line_13 $$ text = text.replaceAll("(?m) +$", StringPool.BLANK)[ FD ]
Line_6 $$ if (text.contains("<table>")) -->Line_10 $$ text = StringUtil.wrap(text, 80 - indentLength, "\n")[ CD ]
Line_10 $$ text = StringUtil.wrap(text, 80 - indentLength, "\n")-->Line_13 $$ text = text.replaceAll("(?m) +$", StringPool.BLANK)[ FD ]
Line_7 $$ text = _wrapText(text, indentLength, "table")-->Line_13 $$ text = text.replaceAll("(?m) +$", StringPool.BLANK)[ FD ]
Line_2 $$ private String _wrapText(String text, String indent) -->Line_13 $$ text = text.replaceAll("(?m) +$", StringPool.BLANK)[ CD ]
Line_2 $$ private String _wrapText(String text, String indent) -->Line_6 $$ if (text.contains("<table>")) [ FD ]
Line_4 $$ if (text.contains("<pre>")) -->Line_6 $$ if (text.contains("<table>")) [ CD ]
Line_5 $$ text = _wrapText(text, indentLength, "pre")-->Line_10 $$ text = StringUtil.wrap(text, 80 - indentLength, "\n")[ FD ]
Line_2 $$ private String _wrapText(String text, String indent) -->Line_3 $$ int indentLength = _getIndentLength(indent)[ FD ]
Line_5 $$ text = _wrapText(text, indentLength, "pre")-->Line_9 $$ text = _formatInlines(text)[ FD ]
Line_6 $$ if (text.contains("<table>")) -->Line_7 $$ text = _wrapText(text, indentLength, "table")[ CD ]
Line_2 $$ private String _wrapText(String text, String indent) -->Line_4 $$ if (text.contains("<pre>")) [ FD ]
Line_5 $$ text = _wrapText(text, indentLength, "pre")-->Line_13 $$ text = text.replaceAll("(?m) +$", StringPool.BLANK)[ FD ]
Line_5 $$ text = _wrapText(text, indentLength, "pre")-->Line_6 $$ if (text.contains("<table>")) [ FD ]
Line_2 $$ private String _wrapText(String text, String indent) -->Line_12 $$ text = text.replaceAll("(?m)^", indent)[ FD ]
Line_2 $$ private String _wrapText(String text, String indent) -->Line_10 $$ text = StringUtil.wrap(text, 80 - indentLength, "\n")[ FD ]
Line_2 $$ private String _wrapText(String text, String indent) -->Line_7 $$ text = _wrapText(text, indentLength, "table")[ FD ]
Line_12 $$ text = text.replaceAll("(?m)^", indent)-->Line_13 $$ text = text.replaceAll("(?m) +$", StringPool.BLANK)[ FD ]
Line_7 $$ text = _wrapText(text, indentLength, "table")-->Line_9 $$ text = _formatInlines(text)[ FD ]
Line_9 $$ text = _formatInlines(text)-->Line_13 $$ text = text.replaceAll("(?m) +$", StringPool.BLANK)[ FD ]
Line_2 $$ private String _wrapText(String text, String indent) -->Line_14 $$ return text[ CD ]
