Line_6 $$ for (CompilerMessage message : messages) -->Line_7 $$ final String text = message.getMessage()[ FD ]
Line_2 $$ public void finished(boolean aborted, int errors, int warnings, final CompileContext compileContext) -->Line_5 $$ CompilerMessage[] messages = compileContext.getMessages(category)[ FD ]
Line_6 $$ for (CompilerMessage message : messages) -->Line_9 $$ myMessages.add(message)[ FD ]
Line_8 $$ if (category != CompilerMessageCategory.INFORMATION || !(text.contains("Compilation completed successfully") || text.startsWith("Using javac") || text.startsWith("Using Groovy-Eclipse"))) -->Line_9 $$ myMessages.add(message)[ CD ]
Line_2 $$ public void finished(boolean aborted, int errors, int warnings, final CompileContext compileContext) -->Line_13 $$ Assert.assertFalse("Code did not compile!", aborted)[ FD ]
Line_7 $$ final String text = message.getMessage()-->Line_8 $$ if (category != CompilerMessageCategory.INFORMATION || !(text.contains("Compilation completed successfully") || text.startsWith("Using javac") || text.startsWith("Using Groovy-Eclipse"))) [ FD ]
Line_4 $$ for (CompilerMessageCategory category : CompilerMessageCategory.values()) -->Line_5 $$ CompilerMessage[] messages = compileContext.getMessages(category)[ FD ]
