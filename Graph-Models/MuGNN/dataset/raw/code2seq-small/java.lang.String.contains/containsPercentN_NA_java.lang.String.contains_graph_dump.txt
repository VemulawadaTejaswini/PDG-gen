Line_7 $$ final PsiLiteralExpression literalExpression = (PsiLiteralExpression) expression-->Line_8 $$ final String expressionText = literalExpression.getText()[ FD ]
Line_2 $$ private static boolean containsPercentN(PsiExpression expression) -->Line_6 $$ if (expression instanceof PsiLiteralExpression) [ CD ]
Line_3 $$ if (expression == null) -->Line_4 $$ return false[ CD ]
Line_11 $$ if (expression instanceof PsiPolyadicExpression) -->Line_14 $$ if (!tokenType.equals(JavaTokenType.PLUS)) [ CD ]
Line_6 $$ if (expression instanceof PsiLiteralExpression) -->Line_8 $$ final String expressionText = literalExpression.getText()[ CD ]
Line_8 $$ final String expressionText = literalExpression.getText()-->Line_9 $$ return expressionText.contains("%n")[ FD ]
Line_6 $$ if (expression instanceof PsiLiteralExpression) -->Line_9 $$ return expressionText.contains("%n")[ CD ]
Line_12 $$ final PsiPolyadicExpression polyadicExpression = (PsiPolyadicExpression) expression-->Line_17 $$ final PsiExpression[] operands = polyadicExpression.getOperands()[ FD ]
Line_2 $$ private static boolean containsPercentN(PsiExpression expression) -->Line_3 $$ if (expression == null) [ FD ]
Line_2 $$ private static boolean containsPercentN(PsiExpression expression) -->Line_11 $$ if (expression instanceof PsiPolyadicExpression) [ CD ]
Line_13 $$ final IElementType tokenType = polyadicExpression.getOperationTokenType()-->Line_14 $$ if (!tokenType.equals(JavaTokenType.PLUS)) [ FD ]
Line_19 $$ if (containsPercentN(operand)) -->Line_20 $$ return true[ CD ]
Line_6 $$ if (expression instanceof PsiLiteralExpression) -->Line_7 $$ final PsiLiteralExpression literalExpression = (PsiLiteralExpression) expression[ CD ]
Line_2 $$ private static boolean containsPercentN(PsiExpression expression) -->Line_11 $$ if (expression instanceof PsiPolyadicExpression) [ FD ]
Line_2 $$ private static boolean containsPercentN(PsiExpression expression) -->Line_3 $$ if (expression == null) [ CD ]
Line_2 $$ private static boolean containsPercentN(PsiExpression expression) -->Line_24 $$ return false[ CD ]
Line_11 $$ if (expression instanceof PsiPolyadicExpression) -->Line_13 $$ final IElementType tokenType = polyadicExpression.getOperationTokenType()[ CD ]
Line_14 $$ if (!tokenType.equals(JavaTokenType.PLUS)) -->Line_15 $$ return false[ CD ]
Line_18 $$ for (PsiExpression operand : operands) -->Line_19 $$ if (containsPercentN(operand)) [ FD ]
Line_11 $$ if (expression instanceof PsiPolyadicExpression) -->Line_12 $$ final PsiPolyadicExpression polyadicExpression = (PsiPolyadicExpression) expression[ CD ]
Line_12 $$ final PsiPolyadicExpression polyadicExpression = (PsiPolyadicExpression) expression-->Line_13 $$ final IElementType tokenType = polyadicExpression.getOperationTokenType()[ FD ]
Line_2 $$ private static boolean containsPercentN(PsiExpression expression) -->Line_6 $$ if (expression instanceof PsiLiteralExpression) [ FD ]
Line_11 $$ if (expression instanceof PsiPolyadicExpression) -->Line_17 $$ final PsiExpression[] operands = polyadicExpression.getOperands()[ CD ]
