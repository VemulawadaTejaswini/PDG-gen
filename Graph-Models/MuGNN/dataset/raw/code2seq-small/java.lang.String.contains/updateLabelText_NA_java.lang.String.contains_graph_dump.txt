Line_3 $$ String comment = myChangeList.getComment()-->Line_6 $$ comment = comment.substring(0, pos).trim() + "..."[ FD ]
Line_2 $$ private void updateLabelText(final Change c) -->Line_10 $$ final String key = c.getType() == Change.Type.DELETED ? "outdated.version.text.deleted" : (dateIsPretty ? "outdated.version.pretty.date.text" : "outdated.version.text")[ CD ]
Line_3 $$ String comment = myChangeList.getComment()-->Line_4 $$ int pos = comment.indexOf("\n")[ FD ]
Line_2 $$ private void updateLabelText(final Change c) -->Line_10 $$ final String key = c.getType() == Change.Type.DELETED ? "outdated.version.text.deleted" : (dateIsPretty ? "outdated.version.pretty.date.text" : "outdated.version.text")[ FD ]
Line_2 $$ private void updateLabelText(final Change c) -->Line_9 $$ final boolean dateIsPretty = !formattedDate.contains("/")[ CD ]
Line_2 $$ private void updateLabelText(final Change c) -->Line_4 $$ int pos = comment.indexOf("\n")[ CD ]
Line_4 $$ int pos = comment.indexOf("\n")-->Line_5 $$ if (pos >= 0) [ FD ]
Line_8 $$ final String formattedDate = DateFormatUtil.formatPrettyDateTime(myChangeList.getCommitDate())-->Line_9 $$ final boolean dateIsPretty = !formattedDate.contains("/")[ FD ]
Line_5 $$ if (pos >= 0) -->Line_6 $$ comment = comment.substring(0, pos).trim() + "..."[ CD ]
Line_8 $$ final String formattedDate = DateFormatUtil.formatPrettyDateTime(myChangeList.getCommitDate())-->Line_11 $$ myLabel.setText(VcsBundle.message(key, myChangeList.getCommitterName(), formattedDate, comment))[ FD ]
Line_2 $$ private void updateLabelText(final Change c) -->Line_5 $$ if (pos >= 0) [ CD ]
Line_2 $$ private void updateLabelText(final Change c) -->Line_8 $$ final String formattedDate = DateFormatUtil.formatPrettyDateTime(myChangeList.getCommitDate())[ CD ]
Line_2 $$ private void updateLabelText(final Change c) -->Line_11 $$ myLabel.setText(VcsBundle.message(key, myChangeList.getCommitterName(), formattedDate, comment))[ CD ]
Line_3 $$ String comment = myChangeList.getComment()-->Line_11 $$ myLabel.setText(VcsBundle.message(key, myChangeList.getCommitterName(), formattedDate, comment))[ FD ]
Line_4 $$ int pos = comment.indexOf("\n")-->Line_6 $$ comment = comment.substring(0, pos).trim() + "..."[ FD ]
Line_6 $$ comment = comment.substring(0, pos).trim() + "..."-->Line_11 $$ myLabel.setText(VcsBundle.message(key, myChangeList.getCommitterName(), formattedDate, comment))[ FD ]
Line_10 $$ final String key = c.getType() == Change.Type.DELETED ? "outdated.version.text.deleted" : (dateIsPretty ? "outdated.version.pretty.date.text" : "outdated.version.text")-->Line_11 $$ myLabel.setText(VcsBundle.message(key, myChangeList.getCommitterName(), formattedDate, comment))[ FD ]
Line_2 $$ private void updateLabelText(final Change c) -->Line_3 $$ String comment = myChangeList.getComment()[ CD ]
