Line_12 $$ endIdx = value.indexOf(",", startIdx)-->Line_15 $$ if (endIdx < 0) [ FD ]
Line_9 $$ int endIdx = 0-->Line_12 $$ endIdx = value.indexOf(",", startIdx)[ FD ]
Line_9 $$ int endIdx = 0-->Line_15 $$ if (endIdx < 0) [ FD ]
Line_7 $$ if (mySupportCommaInValue && value.contains(",")) -->Line_19 $$ return refs.toArray(new PsiReference[refs.size()])[ CD ]
Line_8 $$ int startIdx = 0-->Line_12 $$ endIdx = value.indexOf(",", startIdx)[ FD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull final PsiElement element, @NotNull ProcessingContext context) -->Line_3 $$ final String value = ((XmlAttributeValue) element).getValue()[ CD ]
Line_3 $$ final String value = ((XmlAttributeValue) element).getValue()-->Line_13 $$ Collections.addAll(refs, collectRefs(element, endIdx >= 0 ? value.substring(startIdx, endIdx) : value.substring(startIdx), startIdx + 1, myAcceptedFileTypes))[ FD ]
Line_4 $$ if (value.startsWith("@")) -->Line_7 $$ if (mySupportCommaInValue && value.contains(",")) [ CD ]
Line_7 $$ if (mySupportCommaInValue && value.contains(",")) -->Line_11 $$ while (true) [ CD ]
Line_8 $$ int startIdx = 0-->Line_14 $$ startIdx = endIdx + 1[ FD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull final PsiElement element, @NotNull ProcessingContext context) -->Line_21 $$ return collectRefs(element, value, 1, myAcceptedFileTypes)[ FD ]
Line_3 $$ final String value = ((XmlAttributeValue) element).getValue()-->Line_7 $$ if (mySupportCommaInValue && value.contains(",")) [ FD ]
Line_11 $$ while (true) -->Line_13 $$ Collections.addAll(refs, collectRefs(element, endIdx >= 0 ? value.substring(startIdx, endIdx) : value.substring(startIdx), startIdx + 1, myAcceptedFileTypes))[ CD ]
Line_14 $$ startIdx = endIdx + 1-->Line_13 $$ Collections.addAll(refs, collectRefs(element, endIdx >= 0 ? value.substring(startIdx, endIdx) : value.substring(startIdx), startIdx + 1, myAcceptedFileTypes))[ FD ]
Line_11 $$ while (true) -->Line_14 $$ startIdx = endIdx + 1[ CD ]
Line_7 $$ if (mySupportCommaInValue && value.contains(",")) -->Line_21 $$ return collectRefs(element, value, 1, myAcceptedFileTypes)[ CD ]
Line_3 $$ final String value = ((XmlAttributeValue) element).getValue()-->Line_21 $$ return collectRefs(element, value, 1, myAcceptedFileTypes)[ FD ]
Line_4 $$ if (value.startsWith("@")) -->Line_5 $$ return new FileReferenceSet(value.substring(1), element, 2, null, true).getAllReferences()[ CD ]
Line_11 $$ while (true) -->Line_12 $$ endIdx = value.indexOf(",", startIdx)[ CD ]
Line_8 $$ int startIdx = 0-->Line_13 $$ Collections.addAll(refs, collectRefs(element, endIdx >= 0 ? value.substring(startIdx, endIdx) : value.substring(startIdx), startIdx + 1, myAcceptedFileTypes))[ FD ]
Line_3 $$ final String value = ((XmlAttributeValue) element).getValue()-->Line_5 $$ return new FileReferenceSet(value.substring(1), element, 2, null, true).getAllReferences()[ FD ]
Line_12 $$ endIdx = value.indexOf(",", startIdx)-->Line_14 $$ startIdx = endIdx + 1[ FD ]
Line_7 $$ if (mySupportCommaInValue && value.contains(",")) -->Line_8 $$ int startIdx = 0[ CD ]
Line_3 $$ final String value = ((XmlAttributeValue) element).getValue()-->Line_4 $$ if (value.startsWith("@")) [ FD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull final PsiElement element, @NotNull ProcessingContext context) -->Line_13 $$ Collections.addAll(refs, collectRefs(element, endIdx >= 0 ? value.substring(startIdx, endIdx) : value.substring(startIdx), startIdx + 1, myAcceptedFileTypes))[ FD ]
Line_10 $$ List<PsiReference> refs = new ArrayList<PsiReference>()-->Line_19 $$ return refs.toArray(new PsiReference[refs.size()])[ FD ]
Line_10 $$ List<PsiReference> refs = new ArrayList<PsiReference>()-->Line_13 $$ Collections.addAll(refs, collectRefs(element, endIdx >= 0 ? value.substring(startIdx, endIdx) : value.substring(startIdx), startIdx + 1, myAcceptedFileTypes))[ FD ]
Line_9 $$ int endIdx = 0-->Line_14 $$ startIdx = endIdx + 1[ FD ]
Line_12 $$ endIdx = value.indexOf(",", startIdx)-->Line_13 $$ Collections.addAll(refs, collectRefs(element, endIdx >= 0 ? value.substring(startIdx, endIdx) : value.substring(startIdx), startIdx + 1, myAcceptedFileTypes))[ FD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull final PsiElement element, @NotNull ProcessingContext context) -->Line_4 $$ if (value.startsWith("@")) [ CD ]
Line_7 $$ if (mySupportCommaInValue && value.contains(",")) -->Line_9 $$ int endIdx = 0[ CD ]
Line_9 $$ int endIdx = 0-->Line_13 $$ Collections.addAll(refs, collectRefs(element, endIdx >= 0 ? value.substring(startIdx, endIdx) : value.substring(startIdx), startIdx + 1, myAcceptedFileTypes))[ FD ]
Line_7 $$ if (mySupportCommaInValue && value.contains(",")) -->Line_10 $$ List<PsiReference> refs = new ArrayList<PsiReference>()[ CD ]
Line_3 $$ final String value = ((XmlAttributeValue) element).getValue()-->Line_12 $$ endIdx = value.indexOf(",", startIdx)[ FD ]
Line_14 $$ startIdx = endIdx + 1-->Line_12 $$ endIdx = value.indexOf(",", startIdx)[ FD ]
Line_11 $$ while (true) -->Line_15 $$ if (endIdx < 0) [ CD ]
