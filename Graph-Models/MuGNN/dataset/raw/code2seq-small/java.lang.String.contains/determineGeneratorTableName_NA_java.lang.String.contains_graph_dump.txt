Line_2 $$ protected QualifiedName determineGeneratorTableName(Properties params, JdbcEnvironment jdbcEnvironment) -->Line_4 $$ if (tableName.contains(".")) [ CD ]
Line_4 $$ if (tableName.contains(".")) -->Line_7 $$ final Identifier catalog = jdbcEnvironment.getIdentifierHelper().toIdentifier(ConfigurationHelper.getString(CATALOG, params))[ CD ]
Line_2 $$ protected QualifiedName determineGeneratorTableName(Properties params, JdbcEnvironment jdbcEnvironment) -->Line_9 $$ return new QualifiedNameParser.NameParts(catalog, schema, jdbcEnvironment.getIdentifierHelper().toIdentifier(tableName))[ FD ]
Line_4 $$ if (tableName.contains(".")) -->Line_5 $$ return QualifiedNameParser.INSTANCE.parse(tableName)[ CD ]
Line_3 $$ final String tableName = ConfigurationHelper.getString(ID_TABLE, params, DEFAULT_TABLE)-->Line_5 $$ return QualifiedNameParser.INSTANCE.parse(tableName)[ FD ]
Line_3 $$ final String tableName = ConfigurationHelper.getString(ID_TABLE, params, DEFAULT_TABLE)-->Line_4 $$ if (tableName.contains(".")) [ FD ]
Line_2 $$ protected QualifiedName determineGeneratorTableName(Properties params, JdbcEnvironment jdbcEnvironment) -->Line_7 $$ final Identifier catalog = jdbcEnvironment.getIdentifierHelper().toIdentifier(ConfigurationHelper.getString(CATALOG, params))[ FD ]
Line_2 $$ protected QualifiedName determineGeneratorTableName(Properties params, JdbcEnvironment jdbcEnvironment) -->Line_3 $$ final String tableName = ConfigurationHelper.getString(ID_TABLE, params, DEFAULT_TABLE)[ CD ]
Line_4 $$ if (tableName.contains(".")) -->Line_8 $$ final Identifier schema = jdbcEnvironment.getIdentifierHelper().toIdentifier(ConfigurationHelper.getString(SCHEMA, params))[ CD ]
Line_3 $$ final String tableName = ConfigurationHelper.getString(ID_TABLE, params, DEFAULT_TABLE)-->Line_9 $$ return new QualifiedNameParser.NameParts(catalog, schema, jdbcEnvironment.getIdentifierHelper().toIdentifier(tableName))[ FD ]
Line_4 $$ if (tableName.contains(".")) -->Line_9 $$ return new QualifiedNameParser.NameParts(catalog, schema, jdbcEnvironment.getIdentifierHelper().toIdentifier(tableName))[ CD ]
Line_2 $$ protected QualifiedName determineGeneratorTableName(Properties params, JdbcEnvironment jdbcEnvironment) -->Line_8 $$ final Identifier schema = jdbcEnvironment.getIdentifierHelper().toIdentifier(ConfigurationHelper.getString(SCHEMA, params))[ FD ]
Line_2 $$ protected QualifiedName determineGeneratorTableName(Properties params, JdbcEnvironment jdbcEnvironment) -->Line_3 $$ final String tableName = ConfigurationHelper.getString(ID_TABLE, params, DEFAULT_TABLE)[ FD ]
