Line_2 $$ protected Sort[] getSorts(OrderByComparator<User> obc) -->Line_8 $$ Sort[] sorts = new Sort[orderByFields.length][ CD ]
Line_2 $$ protected Sort[] getSorts(OrderByComparator<User> obc) -->Line_9 $$ for (int i = 0; i < orderByFields.length; i++) [ CD ]
Line_2 $$ protected Sort[] getSorts(OrderByComparator<User> obc) -->Line_7 $$ String[] orderByFields = obc.getOrderByFields()[ FD ]
Line_2 $$ protected Sort[] getSorts(OrderByComparator<User> obc) -->Line_13 $$ return sorts[ CD ]
Line_9 $$ for (int i = 0; i < orderByFields.length; i++) -->Line_11 $$ sorts[i] = new Sort(orderByFields[i], reverse)[ CD ]
Line_2 $$ protected Sort[] getSorts(OrderByComparator<User> obc) -->Line_3 $$ if (obc == null) [ CD ]
Line_2 $$ protected Sort[] getSorts(OrderByComparator<User> obc) -->Line_3 $$ if (obc == null) [ FD ]
Line_9 $$ for (int i = 0; i < orderByFields.length; i++) -->Line_10 $$ boolean reverse = orderByClauses[i].contains("DESC")[ CD ]
Line_2 $$ protected Sort[] getSorts(OrderByComparator<User> obc) -->Line_6 $$ String[] orderByClauses = StringUtil.split(obc.getOrderBy())[ CD ]
Line_2 $$ protected Sort[] getSorts(OrderByComparator<User> obc) -->Line_6 $$ String[] orderByClauses = StringUtil.split(obc.getOrderBy())[ FD ]
Line_3 $$ if (obc == null) -->Line_4 $$ return new Sort[0][ CD ]
Line_2 $$ protected Sort[] getSorts(OrderByComparator<User> obc) -->Line_7 $$ String[] orderByFields = obc.getOrderByFields()[ CD ]
