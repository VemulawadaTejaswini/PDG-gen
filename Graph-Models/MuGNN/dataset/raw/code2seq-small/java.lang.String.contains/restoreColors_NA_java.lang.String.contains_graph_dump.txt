Line_2 $$ private void restoreColors() -->Line_3 $$ final String value = PropertiesComponent.getInstance().getValue(COLOR_CHOOSER_COLORS_KEY)[ CD ]
Line_6 $$ for (String color : colors) -->Line_8 $$ List<String> components = StringUtil.split(color, "-")[ FD ]
Line_7 $$ if (color.contains("-")) -->Line_13 $$ myRecentColors.add(new Color(Integer.parseInt(color)))[ CD ]
Line_6 $$ for (String color : colors) -->Line_13 $$ myRecentColors.add(new Color(Integer.parseInt(color)))[ FD ]
Line_9 $$ if (components.size() == 4) -->Line_10 $$ myRecentColors.add(new Color(Integer.parseInt(components.get(0)), Integer.parseInt(components.get(1)), Integer.parseInt(components.get(2)), Integer.parseInt(components.get(3))))[ CD ]
Line_7 $$ if (color.contains("-")) -->Line_8 $$ List<String> components = StringUtil.split(color, "-")[ CD ]
Line_4 $$ if (value != null) -->Line_5 $$ final List<String> colors = StringUtil.split(value, ",,,")[ CD ]
Line_6 $$ for (String color : colors) -->Line_7 $$ if (color.contains("-")) [ FD ]
Line_3 $$ final String value = PropertiesComponent.getInstance().getValue(COLOR_CHOOSER_COLORS_KEY)-->Line_4 $$ if (value != null) [ FD ]
Line_2 $$ private void restoreColors() -->Line_4 $$ if (value != null) [ CD ]
Line_8 $$ List<String> components = StringUtil.split(color, "-")-->Line_10 $$ myRecentColors.add(new Color(Integer.parseInt(components.get(0)), Integer.parseInt(components.get(1)), Integer.parseInt(components.get(2)), Integer.parseInt(components.get(3))))[ FD ]
Line_3 $$ final String value = PropertiesComponent.getInstance().getValue(COLOR_CHOOSER_COLORS_KEY)-->Line_5 $$ final List<String> colors = StringUtil.split(value, ",,,")[ FD ]
Line_8 $$ List<String> components = StringUtil.split(color, "-")-->Line_9 $$ if (components.size() == 4) [ FD ]
Line_7 $$ if (color.contains("-")) -->Line_9 $$ if (components.size() == 4) [ CD ]
