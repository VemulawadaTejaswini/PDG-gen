Line_2 $$ public void testMain() throws Exception -->Line_19 $$ String print = bytes.toString()[ CD ]
Line_3 $$ SecurityManager securityManager = System.getSecurityManager()-->Line_17 $$ System.setSecurityManager(securityManager)[ FD ]
Line_2 $$ public void testMain() throws Exception -->Line_21 $$ assertTrue(print.contains("e.g. gridmix -generate 100m foo -"))[ CD ]
Line_2 $$ public void testMain() throws Exception -->Line_6 $$ final PrintStream oldOut = System.out[ CD ]
Line_2 $$ public void testMain() throws Exception -->Line_4 $$ final ByteArrayOutputStream bytes = new ByteArrayOutputStream()[ CD ]
Line_10 $$ String[] argv = new String[0]-->Line_11 $$ DebugGridmix.main(argv)[ FD ]
Line_2 $$ public void testMain() throws Exception -->Line_3 $$ SecurityManager securityManager = System.getSecurityManager()[ CD ]
Line_6 $$ final PrintStream oldOut = System.out-->Line_16 $$ System.setErr(oldOut)[ FD ]
Line_19 $$ String print = bytes.toString()-->Line_20 $$ assertTrue(print.contains("Usage: gridmix [-generate <MiB>] [-users URI] [-Dname=value ...] <iopath> <trace>"))[ FD ]
Line_2 $$ public void testMain() throws Exception -->Line_7 $$ System.setErr(out)[ CD ]
Line_2 $$ public void testMain() throws Exception -->Line_20 $$ assertTrue(print.contains("Usage: gridmix [-generate <MiB>] [-users URI] [-Dname=value ...] <iopath> <trace>"))[ CD ]
Line_19 $$ String print = bytes.toString()-->Line_21 $$ assertTrue(print.contains("e.g. gridmix -generate 100m foo -"))[ FD ]
Line_4 $$ final ByteArrayOutputStream bytes = new ByteArrayOutputStream()-->Line_19 $$ String print = bytes.toString()[ FD ]
Line_5 $$ final PrintStream out = new PrintStream(bytes)-->Line_7 $$ System.setErr(out)[ FD ]
Line_2 $$ public void testMain() throws Exception -->Line_8 $$ ExitUtil.disableSystemExit()[ CD ]
Line_2 $$ public void testMain() throws Exception -->Line_5 $$ final PrintStream out = new PrintStream(bytes)[ CD ]
