Line_8 $$ if (source != null && scaleImages && desc.type != ImageDesc.Type.SVG) -->Line_9 $$ if (desc.path.contains("@2x"))[ CD ]
Line_6 $$ return ImageDescList.create(url.toString(), null, UIUtil.isUnderDarcula(), loadRetinaImages, allowFloatScaling).load(ImageConverterChain.create().withFilter(filter).withRetina().with(new ImageConverter() -->Line_10 $$ return scaleImage(source, scaleFactor / 2.0f)[ FD ]
Line_3 $$ final float scaleFactor = calcScaleFactor(allowFloatScaling)-->Line_12 $$ return scaleImage(source, scaleFactor)[ FD ]
Line_2 $$ public static Image loadFromUrl(@NotNull URL url, boolean allowFloatScaling, ImageFilter filter) -->Line_3 $$ final float scaleFactor = calcScaleFactor(allowFloatScaling)[ FD ]
Line_6 $$ return ImageDescList.create(url.toString(), null, UIUtil.isUnderDarcula(), loadRetinaImages, allowFloatScaling).load(ImageConverterChain.create().withFilter(filter).withRetina().with(new ImageConverter() -->Line_14 $$ return source[ CD ]
Line_2 $$ public static Image loadFromUrl(@NotNull URL url, boolean allowFloatScaling, ImageFilter filter) -->Line_4 $$ final boolean scaleImages = (scaleFactor > 1.0f) && !UIUtil.isRetina()[ CD ]
Line_9 $$ if (desc.path.contains("@2x"))-->Line_12 $$ return scaleImage(source, scaleFactor)[ CD ]
Line_2 $$ public static Image loadFromUrl(@NotNull URL url, boolean allowFloatScaling, ImageFilter filter) -->Line_6 $$ return ImageDescList.create(url.toString(), null, UIUtil.isUnderDarcula(), loadRetinaImages, allowFloatScaling).load(ImageConverterChain.create().withFilter(filter).withRetina().with(new ImageConverter() [ FD ]
Line_6 $$ return ImageDescList.create(url.toString(), null, UIUtil.isUnderDarcula(), loadRetinaImages, allowFloatScaling).load(ImageConverterChain.create().withFilter(filter).withRetina().with(new ImageConverter() -->Line_12 $$ return scaleImage(source, scaleFactor)[ FD ]
Line_5 $$ final boolean loadRetinaImages = UIUtil.isRetina() || scaleImages-->Line_6 $$ return ImageDescList.create(url.toString(), null, UIUtil.isUnderDarcula(), loadRetinaImages, allowFloatScaling).load(ImageConverterChain.create().withFilter(filter).withRetina().with(new ImageConverter() [ FD ]
Line_2 $$ public static Image loadFromUrl(@NotNull URL url, boolean allowFloatScaling, ImageFilter filter) -->Line_5 $$ final boolean loadRetinaImages = UIUtil.isRetina() || scaleImages[ CD ]
Line_2 $$ public static Image loadFromUrl(@NotNull URL url, boolean allowFloatScaling, ImageFilter filter) -->Line_6 $$ return ImageDescList.create(url.toString(), null, UIUtil.isUnderDarcula(), loadRetinaImages, allowFloatScaling).load(ImageConverterChain.create().withFilter(filter).withRetina().with(new ImageConverter() [ CD ]
Line_9 $$ if (desc.path.contains("@2x"))-->Line_10 $$ return scaleImage(source, scaleFactor / 2.0f)[ CD ]
Line_6 $$ return ImageDescList.create(url.toString(), null, UIUtil.isUnderDarcula(), loadRetinaImages, allowFloatScaling).load(ImageConverterChain.create().withFilter(filter).withRetina().with(new ImageConverter() -->Line_8 $$ if (source != null && scaleImages && desc.type != ImageDesc.Type.SVG) [ CD ]
Line_2 $$ public static Image loadFromUrl(@NotNull URL url, boolean allowFloatScaling, ImageFilter filter) -->Line_3 $$ final float scaleFactor = calcScaleFactor(allowFloatScaling)[ CD ]
