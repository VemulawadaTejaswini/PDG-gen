Line_7 $$ for (int i = 1; i < (parts.length - 1); i++) -->Line_12 $$ int closeParenthesesCount = StringUtil.count(part, StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_2 $$ protected boolean hasRedundantParentheses(String s, String operator1, String operator2) -->Line_3 $$ String[] parts = StringUtil.split(s, operator1)[ CD ]
Line_2 $$ protected boolean hasRedundantParentheses(String s, String operator1, String operator2) -->Line_3 $$ String[] parts = StringUtil.split(s, operator1)[ FD ]
Line_7 $$ for (int i = 1; i < (parts.length - 1); i++) -->Line_14 $$ if (Math.abs(closeParenthesesCount - openParenthesesCount) == 1) [ CD ]
Line_14 $$ if (Math.abs(closeParenthesesCount - openParenthesesCount) == 1) -->Line_15 $$ return true[ CD ]
Line_4 $$ if (parts.length < 3) -->Line_5 $$ return false[ CD ]
Line_7 $$ for (int i = 1; i < (parts.length - 1); i++) -->Line_8 $$ String part = parts[i][ CD ]
Line_8 $$ String part = parts[i]-->Line_13 $$ int openParenthesesCount = StringUtil.count(part, StringPool.OPEN_PARENTHESIS)[ FD ]
Line_2 $$ protected boolean hasRedundantParentheses(String s, String operator1, String operator2) -->Line_9 $$ if (part.contains(operator2) || part.contains("!(")) [ FD ]
Line_8 $$ String part = parts[i]-->Line_12 $$ int closeParenthesesCount = StringUtil.count(part, StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_2 $$ protected boolean hasRedundantParentheses(String s, String operator1, String operator2) -->Line_7 $$ for (int i = 1; i < (parts.length - 1); i++) [ CD ]
Line_7 $$ for (int i = 1; i < (parts.length - 1); i++) -->Line_13 $$ int openParenthesesCount = StringUtil.count(part, StringPool.OPEN_PARENTHESIS)[ CD ]
Line_2 $$ protected boolean hasRedundantParentheses(String s, String operator1, String operator2) -->Line_18 $$ return false[ CD ]
Line_8 $$ String part = parts[i]-->Line_9 $$ if (part.contains(operator2) || part.contains("!(")) [ FD ]
Line_7 $$ for (int i = 1; i < (parts.length - 1); i++) -->Line_9 $$ if (part.contains(operator2) || part.contains("!(")) [ CD ]
Line_2 $$ protected boolean hasRedundantParentheses(String s, String operator1, String operator2) -->Line_4 $$ if (parts.length < 3) [ CD ]
