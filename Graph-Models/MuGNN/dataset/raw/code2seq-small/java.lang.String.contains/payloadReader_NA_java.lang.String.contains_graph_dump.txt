Line_2 $$ public void payloadReader() throws Exception -->Line_4 $$ final MockHttpServletRequest request = new MockHttpServletRequest("POST", "/hotels")[ CD ]
Line_2 $$ public void payloadReader() throws Exception -->Line_7 $$ request.setContent(requestBody.getBytes("UTF-8"))[ CD ]
Line_2 $$ public void payloadReader() throws Exception -->Line_6 $$ final String requestBody = "Hello World"[ CD ]
Line_2 $$ public void payloadReader() throws Exception -->Line_8 $$ FilterChain filterChain = new FilterChain() [ CD ]
Line_6 $$ final String requestBody = "Hello World"-->Line_17 $$ assertTrue(filter.afterRequestMessage.contains(requestBody))[ FD ]
Line_8 $$ FilterChain filterChain = new FilterChain() -->Line_11 $$ String buf = FileCopyUtils.copyToString(filterRequest.getReader())[ FD ]
Line_11 $$ String buf = FileCopyUtils.copyToString(filterRequest.getReader())-->Line_12 $$ assertEquals(requestBody, buf)[ FD ]
Line_4 $$ final MockHttpServletRequest request = new MockHttpServletRequest("POST", "/hotels")-->Line_7 $$ request.setContent(requestBody.getBytes("UTF-8"))[ FD ]
Line_8 $$ FilterChain filterChain = new FilterChain() -->Line_12 $$ assertEquals(requestBody, buf)[ CD ]
Line_6 $$ final String requestBody = "Hello World"-->Line_12 $$ assertEquals(requestBody, buf)[ FD ]
Line_8 $$ FilterChain filterChain = new FilterChain() -->Line_15 $$ filter.doFilter(request, response, filterChain)[ FD ]
Line_5 $$ MockHttpServletResponse response = new MockHttpServletResponse()-->Line_15 $$ filter.doFilter(request, response, filterChain)[ FD ]
Line_2 $$ public void payloadReader() throws Exception -->Line_5 $$ MockHttpServletResponse response = new MockHttpServletResponse()[ CD ]
Line_6 $$ final String requestBody = "Hello World"-->Line_7 $$ request.setContent(requestBody.getBytes("UTF-8"))[ FD ]
Line_2 $$ public void payloadReader() throws Exception -->Line_15 $$ filter.doFilter(request, response, filterChain)[ CD ]
Line_4 $$ final MockHttpServletRequest request = new MockHttpServletRequest("POST", "/hotels")-->Line_15 $$ filter.doFilter(request, response, filterChain)[ FD ]
Line_2 $$ public void payloadReader() throws Exception -->Line_3 $$ filter.setIncludePayload(true)[ CD ]
Line_8 $$ FilterChain filterChain = new FilterChain() -->Line_10 $$ ((HttpServletResponse) filterResponse).setStatus(HttpServletResponse.SC_OK)[ CD ]
Line_2 $$ public void payloadReader() throws Exception -->Line_16 $$ assertNotNull(filter.afterRequestMessage)[ CD ]
Line_2 $$ public void payloadReader() throws Exception -->Line_17 $$ assertTrue(filter.afterRequestMessage.contains(requestBody))[ CD ]
Line_8 $$ FilterChain filterChain = new FilterChain() -->Line_11 $$ String buf = FileCopyUtils.copyToString(filterRequest.getReader())[ CD ]
