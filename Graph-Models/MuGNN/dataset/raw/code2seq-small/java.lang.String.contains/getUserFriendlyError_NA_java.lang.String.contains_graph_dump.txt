Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_35 $$ msg = msg + ": " + originalMessage[ FD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"[ FD ]
Line_64 $$ if (!msg.endsWith(".")) -->Line_65 $$ msg += "."[ CD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_40 $$ msg += "."[ FD ]
Line_40 $$ msg += "."-->Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_35 $$ msg = msg + ": " + originalMessage-->Line_67 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_22 $$ if (StringUtil.startsWith(rootCauseText, "org.gradle.api.internal.MissingMethodException")) -->Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)[ CD ]
Line_32 $$ String originalMessage = rootCause.getMessage()-->Line_35 $$ msg = msg + ": " + originalMessage[ FD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_64 $$ if (!msg.endsWith(".")) [ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_19 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_21 $$ final String rootCauseText = rootCause.toString()[ CD ]
Line_35 $$ msg = msg + ": " + originalMessage-->Line_39 $$ if (!msg.endsWith(".")) [ FD ]
Line_11 $$ Throwable rootCause = rootCauseAndLocation.getFirst()-->Line_72 $$ if (rootCause.getMessage() == null) [ FD ]
Line_72 $$ if (rootCause.getMessage() == null) -->Line_73 $$ StringWriter writer = new StringWriter()[ CD ]
Line_7 $$ if (error instanceof ProcessCanceledException) -->Line_8 $$ return new ExternalSystemException("Project import was cancelled")[ CD ]
Line_40 $$ msg += "."-->Line_64 $$ if (!msg.endsWith(".")) [ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_31 $$ if (rootCause instanceof OutOfMemoryError) [ CD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_79 $$ return createUserFriendlyError(errMessage, location)[ CD ]
Line_22 $$ if (StringUtil.startsWith(rootCauseText, "org.gradle.api.internal.MissingMethodException")) -->Line_29 $$ return createUserFriendlyError(msg, location, OpenGradleSettingsCallback.ID, ApplyGradlePluginCallback.ID, GotoSourceNotificationCallback.ID)[ CD ]
Line_61 $$ if (rootCause instanceof RuntimeException) -->Line_63 $$ if (msg != null && UNSUPPORTED_GRADLE_VERSION_ERROR_PATTERN.matcher(msg).matches()) [ CD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_37 $$ if (msg.endsWith("Java heap space")) [ FD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_40 $$ msg += "."[ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_55 $$ if (msg != null && msg.contains("timed out")) [ FD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_68 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_35 $$ msg = msg + ": " + originalMessage-->Line_55 $$ if (msg != null && msg.contains("timed out")) [ FD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_37 $$ if (msg.endsWith("Java heap space")) [ FD ]
Line_40 $$ msg += "."-->Line_47 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_31 $$ if (rootCause instanceof OutOfMemoryError) -->Line_34 $$ if (originalMessage != null && !originalMessage.isEmpty()) [ CD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_29 $$ return createUserFriendlyError(msg, location, OpenGradleSettingsCallback.ID, ApplyGradlePluginCallback.ID, GotoSourceNotificationCallback.ID)[ FD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_57 $$ msg += SET_UP_HTTP_PROXY[ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_47 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_35 $$ msg = msg + ": " + originalMessage-->Line_51 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)[ FD ]
Line_49 $$ if (rootCause instanceof UnknownHostException) -->Line_51 $$ return createUserFriendlyError(msg, null)[ CD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_67 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_65 $$ msg += "."[ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_64 $$ if (!msg.endsWith(".")) [ FD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_65 $$ msg += "."[ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_16 $$ if (rootCause instanceof UnsupportedVersionException) [ CD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_57 $$ msg += SET_UP_HTTP_PROXY[ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_35 $$ msg = msg + ": " + originalMessage[ FD ]
Line_35 $$ msg = msg + ": " + originalMessage-->Line_57 $$ msg += SET_UP_HTTP_PROXY[ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_68 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)[ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)[ FD ]
Line_56 $$ msg += msg.endsWith(".") ? " " : ". "-->Line_67 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_12 $$ String location = rootCauseAndLocation.getSecond()-->Line_14 $$ location = String.format("Build file: '%1$s'", buildFilePath)[ FD ]
Line_40 $$ msg += "."-->Line_56 $$ msg += msg.endsWith(".") ? " " : ". "[ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_64 $$ if (!msg.endsWith(".")) [ FD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_58 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_35 $$ msg = msg + ": " + originalMessage[ FD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_51 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_40 $$ msg += "."-->Line_43 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_51 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_57 $$ msg += SET_UP_HTTP_PROXY-->Line_58 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_35 $$ msg = msg + ": " + originalMessage-->Line_64 $$ if (!msg.endsWith(".")) [ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_7 $$ if (error instanceof ProcessCanceledException) [ FD ]
Line_40 $$ msg += "."-->Line_67 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_71 $$ final String errMessage[ CD ]
Line_37 $$ if (msg.endsWith("Java heap space")) -->Line_39 $$ if (!msg.endsWith(".")) [ CD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_43 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_13 $$ if (location == null && !StringUtil.isEmpty(buildFilePath)) [ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_7 $$ if (error instanceof ProcessCanceledException) [ CD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_37 $$ if (msg.endsWith("Java heap space")) [ FD ]
Line_55 $$ if (msg != null && msg.contains("timed out")) -->Line_56 $$ msg += msg.endsWith(".") ? " " : ". "[ CD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_65 $$ msg += "."[ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_61 $$ if (rootCause instanceof RuntimeException) [ CD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_35 $$ msg = msg + ": " + originalMessage[ FD ]
Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"-->Line_43 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_29 $$ return createUserFriendlyError(msg, location, OpenGradleSettingsCallback.ID, ApplyGradlePluginCallback.ID, GotoSourceNotificationCallback.ID)[ FD ]
Line_31 $$ if (rootCause instanceof OutOfMemoryError) -->Line_37 $$ if (msg.endsWith("Java heap space")) [ CD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)[ FD ]
Line_11 $$ Throwable rootCause = rootCauseAndLocation.getFirst()-->Line_46 $$ String msg = String.format("Unable to load class '%1$s'.", rootCause.getMessage()) + EMPTY_LINE + UNEXPECTED_ERROR_FILE_BUG[ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_19 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_10 $$ Pair<Throwable, String> rootCauseAndLocation = getRootCauseAndLocation(error)-->Line_12 $$ String location = rootCauseAndLocation.getSecond()[ FD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_29 $$ return createUserFriendlyError(msg, location, OpenGradleSettingsCallback.ID, ApplyGradlePluginCallback.ID, GotoSourceNotificationCallback.ID)[ FD ]
Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS-->Line_67 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_55 $$ if (msg != null && msg.contains("timed out")) [ FD ]
Line_61 $$ if (rootCause instanceof RuntimeException) -->Line_62 $$ String msg = rootCause.getMessage()[ CD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_55 $$ if (msg != null && msg.contains("timed out")) [ FD ]
Line_57 $$ msg += SET_UP_HTTP_PROXY-->Line_63 $$ if (msg != null && UNSUPPORTED_GRADLE_VERSION_ERROR_PATTERN.matcher(msg).matches()) [ FD ]
Line_45 $$ if (rootCause instanceof ClassNotFoundException) -->Line_46 $$ String msg = String.format("Unable to load class '%1$s'.", rootCause.getMessage()) + EMPTY_LINE + UNEXPECTED_ERROR_FILE_BUG[ CD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")[ FD ]
Line_12 $$ String location = rootCauseAndLocation.getSecond()-->Line_29 $$ return createUserFriendlyError(msg, location, OpenGradleSettingsCallback.ID, ApplyGradlePluginCallback.ID, GotoSourceNotificationCallback.ID)[ FD ]
Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS-->Line_51 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_37 $$ if (msg.endsWith("Java heap space")) [ FD ]
Line_57 $$ msg += SET_UP_HTTP_PROXY-->Line_64 $$ if (!msg.endsWith(".")) [ FD ]
Line_56 $$ msg += msg.endsWith(".") ? " " : ". "-->Line_68 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_6 $$ LOG.info(String.format("Failed to import Gradle project at '%1$s'", projectPath), error)[ FD ]
Line_14 $$ location = String.format("Build file: '%1$s'", buildFilePath)-->Line_79 $$ return createUserFriendlyError(errMessage, location)[ FD ]
Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS-->Line_64 $$ if (!msg.endsWith(".")) [ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_43 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"[ FD ]
Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"-->Line_57 $$ msg += SET_UP_HTTP_PROXY[ FD ]
Line_21 $$ final String rootCauseText = rootCause.toString()-->Line_23 $$ String method = parseMissingMethod(rootCauseText)[ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_68 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_68 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)[ FD ]
Line_11 $$ Throwable rootCause = rootCauseAndLocation.getFirst()-->Line_50 $$ String msg = String.format("Unknown host '%1$s'.", rootCause.getMessage()) + EMPTY_LINE + "Please ensure the host name is correct. " + SET_UP_HTTP_PROXY[ FD ]
Line_40 $$ msg += "."-->Line_55 $$ if (msg != null && msg.contains("timed out")) [ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)[ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_40 $$ msg += "."[ FD ]
Line_35 $$ msg = msg + ": " + originalMessage-->Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_11 $$ Throwable rootCause = rootCauseAndLocation.getFirst()-->Line_49 $$ if (rootCause instanceof UnknownHostException) [ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_29 $$ return createUserFriendlyError(msg, location, OpenGradleSettingsCallback.ID, ApplyGradlePluginCallback.ID, GotoSourceNotificationCallback.ID)[ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_29 $$ return createUserFriendlyError(msg, location, OpenGradleSettingsCallback.ID, ApplyGradlePluginCallback.ID, GotoSourceNotificationCallback.ID)[ FD ]
Line_35 $$ msg = msg + ": " + originalMessage-->Line_65 $$ msg += "."[ FD ]
Line_35 $$ msg = msg + ": " + originalMessage-->Line_43 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_72 $$ if (rootCause.getMessage() == null) -->Line_74 $$ rootCause.printStackTrace(new PrintWriter(writer))[ CD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"[ FD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_65 $$ msg += "."[ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_3 $$ if (error instanceof ExternalSystemException) [ FD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_56 $$ msg += msg.endsWith(".") ? " " : ". "[ FD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_57 $$ msg += SET_UP_HTTP_PROXY[ FD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_63 $$ if (msg != null && UNSUPPORTED_GRADLE_VERSION_ERROR_PATTERN.matcher(msg).matches()) [ FD ]
Line_34 $$ if (originalMessage != null && !originalMessage.isEmpty()) -->Line_35 $$ msg = msg + ": " + originalMessage[ CD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_45 $$ if (rootCause instanceof ClassNotFoundException) [ CD ]
Line_11 $$ Throwable rootCause = rootCauseAndLocation.getFirst()-->Line_62 $$ String msg = rootCause.getMessage()[ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_6 $$ LOG.info(String.format("Failed to import Gradle project at '%1$s'", projectPath), error)[ CD ]
Line_35 $$ msg = msg + ": " + originalMessage-->Line_37 $$ if (msg.endsWith("Java heap space")) [ FD ]
Line_56 $$ msg += msg.endsWith(".") ? " " : ". "-->Line_63 $$ if (msg != null && UNSUPPORTED_GRADLE_VERSION_ERROR_PATTERN.matcher(msg).matches()) [ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_68 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_63 $$ if (msg != null && UNSUPPORTED_GRADLE_VERSION_ERROR_PATTERN.matcher(msg).matches()) [ FD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_64 $$ if (!msg.endsWith(".")) [ FD ]
Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"-->Line_65 $$ msg += "."[ FD ]
Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS-->Line_68 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_72 $$ if (rootCause.getMessage() == null) -->Line_77 $$ errMessage = rootCause.getMessage()[ CD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_67 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_14 $$ location = String.format("Build file: '%1$s'", buildFilePath)[ FD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_39 $$ if (!msg.endsWith(".")) [ FD ]
Line_75 $$ errMessage = writer.toString()-->Line_79 $$ return createUserFriendlyError(errMessage, location)[ FD ]
Line_37 $$ if (msg.endsWith("Java heap space")) -->Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"[ CD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_58 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_40 $$ msg += "."[ FD ]
Line_73 $$ StringWriter writer = new StringWriter()-->Line_75 $$ errMessage = writer.toString()[ FD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_57 $$ msg += SET_UP_HTTP_PROXY[ FD ]
Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"-->Line_51 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_12 $$ String location = rootCauseAndLocation.getSecond()-->Line_79 $$ return createUserFriendlyError(errMessage, location)[ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"[ FD ]
Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"-->Line_55 $$ if (msg != null && msg.contains("timed out")) [ FD ]
Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS-->Line_63 $$ if (msg != null && UNSUPPORTED_GRADLE_VERSION_ERROR_PATTERN.matcher(msg).matches()) [ FD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_67 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_10 $$ Pair<Throwable, String> rootCauseAndLocation = getRootCauseAndLocation(error)[ CD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)[ FD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_43 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_10 $$ Pair<Throwable, String> rootCauseAndLocation = getRootCauseAndLocation(error)[ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_55 $$ if (msg != null && msg.contains("timed out")) [ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_55 $$ if (msg != null && msg.contains("timed out")) [ FD ]
Line_57 $$ msg += SET_UP_HTTP_PROXY-->Line_68 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_72 $$ if (rootCause.getMessage() == null) -->Line_75 $$ errMessage = writer.toString()[ CD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_63 $$ if (msg != null && UNSUPPORTED_GRADLE_VERSION_ERROR_PATTERN.matcher(msg).matches()) [ FD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_53 $$ if (rootCause instanceof ConnectException) -->Line_54 $$ String msg = rootCause.getMessage()[ CD ]
Line_40 $$ msg += "."-->Line_65 $$ msg += "."[ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_63 $$ if (msg != null && UNSUPPORTED_GRADLE_VERSION_ERROR_PATTERN.matcher(msg).matches()) [ FD ]
Line_56 $$ msg += msg.endsWith(".") ? " " : ". "-->Line_57 $$ msg += SET_UP_HTTP_PROXY[ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_65 $$ msg += "."[ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_39 $$ if (!msg.endsWith(".")) [ FD ]
Line_77 $$ errMessage = rootCause.getMessage()-->Line_79 $$ return createUserFriendlyError(errMessage, location)[ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_57 $$ msg += SET_UP_HTTP_PROXY[ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_35 $$ msg = msg + ": " + originalMessage[ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_39 $$ if (!msg.endsWith(".")) [ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_58 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_37 $$ if (msg.endsWith("Java heap space")) [ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_47 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_67 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_57 $$ msg += SET_UP_HTTP_PROXY-->Line_67 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_71 $$ final String errMessage-->Line_79 $$ return createUserFriendlyError(errMessage, location)[ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_56 $$ msg += msg.endsWith(".") ? " " : ". "[ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_64 $$ if (!msg.endsWith(".")) [ FD ]
Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS-->Line_55 $$ if (msg != null && msg.contains("timed out")) [ FD ]
Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"-->Line_58 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_40 $$ msg += "."-->Line_63 $$ if (msg != null && UNSUPPORTED_GRADLE_VERSION_ERROR_PATTERN.matcher(msg).matches()) [ FD ]
Line_56 $$ msg += msg.endsWith(".") ? " " : ". "-->Line_64 $$ if (!msg.endsWith(".")) [ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_39 $$ if (!msg.endsWith(".")) [ FD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_64 $$ if (!msg.endsWith(".")) [ FD ]
Line_11 $$ Throwable rootCause = rootCauseAndLocation.getFirst()-->Line_74 $$ rootCause.printStackTrace(new PrintWriter(writer))[ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_65 $$ msg += "."[ FD ]
Line_35 $$ msg = msg + ": " + originalMessage-->Line_56 $$ msg += msg.endsWith(".") ? " " : ". "[ FD ]
Line_31 $$ if (rootCause instanceof OutOfMemoryError) -->Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ CD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_51 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_3 $$ if (error instanceof ExternalSystemException) [ CD ]
Line_35 $$ msg = msg + ": " + originalMessage-->Line_40 $$ msg += "."[ FD ]
Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"-->Line_67 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS-->Line_43 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)[ FD ]
Line_67 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS-->Line_68 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_43 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_11 $$ Throwable rootCause = rootCauseAndLocation.getFirst()-->Line_77 $$ errMessage = rootCause.getMessage()[ FD ]
Line_35 $$ msg = msg + ": " + originalMessage-->Line_58 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_3 $$ if (error instanceof ExternalSystemException) -->Line_4 $$ return (ExternalSystemException) error[ CD ]
Line_40 $$ msg += "."-->Line_51 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"[ FD ]
Line_13 $$ if (location == null && !StringUtil.isEmpty(buildFilePath)) -->Line_14 $$ location = String.format("Build file: '%1$s'", buildFilePath)[ CD ]
Line_11 $$ Throwable rootCause = rootCauseAndLocation.getFirst()-->Line_31 $$ if (rootCause instanceof OutOfMemoryError) [ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_11 $$ Throwable rootCause = rootCauseAndLocation.getFirst()[ CD ]
Line_31 $$ if (rootCause instanceof OutOfMemoryError) -->Line_43 $$ return createUserFriendlyError(msg, null)[ CD ]
Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"-->Line_56 $$ msg += msg.endsWith(".") ? " " : ". "[ FD ]
Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS-->Line_56 $$ msg += msg.endsWith(".") ? " " : ". "[ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_58 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS-->Line_58 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_56 $$ msg += msg.endsWith(".") ? " " : ". "[ FD ]
Line_35 $$ msg = msg + ": " + originalMessage-->Line_63 $$ if (msg != null && UNSUPPORTED_GRADLE_VERSION_ERROR_PATTERN.matcher(msg).matches()) [ FD ]
Line_16 $$ if (rootCause instanceof UnsupportedVersionException) -->Line_17 $$ String msg = "You are using unsupported version of Gradle."[ CD ]
Line_11 $$ Throwable rootCause = rootCauseAndLocation.getFirst()-->Line_16 $$ if (rootCause instanceof UnsupportedVersionException) [ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_51 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS-->Line_57 $$ msg += SET_UP_HTTP_PROXY[ FD ]
Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS-->Line_47 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_72 $$ if (rootCause.getMessage() == null) [ CD ]
Line_16 $$ if (rootCause instanceof UnsupportedVersionException) -->Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)[ CD ]
Line_65 $$ msg += "."-->Line_67 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_68 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_49 $$ if (rootCause instanceof UnknownHostException) [ CD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)[ FD ]
Line_11 $$ Throwable rootCause = rootCauseAndLocation.getFirst()-->Line_32 $$ String originalMessage = rootCause.getMessage()[ FD ]
Line_53 $$ if (rootCause instanceof ConnectException) -->Line_55 $$ if (msg != null && msg.contains("timed out")) [ CD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)[ FD ]
Line_65 $$ msg += "."-->Line_68 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_11 $$ Throwable rootCause = rootCauseAndLocation.getFirst()-->Line_21 $$ final String rootCauseText = rootCause.toString()[ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_67 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_11 $$ Throwable rootCause = rootCauseAndLocation.getFirst()-->Line_61 $$ if (rootCause instanceof RuntimeException) [ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_22 $$ if (StringUtil.startsWith(rootCauseText, "org.gradle.api.internal.MissingMethodException")) [ CD ]
Line_55 $$ if (msg != null && msg.contains("timed out")) -->Line_57 $$ msg += SET_UP_HTTP_PROXY[ CD ]
Line_40 $$ msg += "."-->Line_57 $$ msg += SET_UP_HTTP_PROXY[ FD ]
Line_63 $$ if (msg != null && UNSUPPORTED_GRADLE_VERSION_ERROR_PATTERN.matcher(msg).matches()) -->Line_64 $$ if (!msg.endsWith(".")) [ CD ]
Line_71 $$ final String errMessage-->Line_77 $$ errMessage = rootCause.getMessage()[ FD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_40 $$ msg += "."[ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_43 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_39 $$ if (!msg.endsWith(".")) [ FD ]
Line_40 $$ msg += "."-->Line_58 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_37 $$ if (msg.endsWith("Java heap space")) [ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_58 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_14 $$ location = String.format("Build file: '%1$s'", buildFilePath)-->Line_29 $$ return createUserFriendlyError(msg, location, OpenGradleSettingsCallback.ID, ApplyGradlePluginCallback.ID, GotoSourceNotificationCallback.ID)[ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_12 $$ String location = rootCauseAndLocation.getSecond()[ CD ]
Line_63 $$ if (msg != null && UNSUPPORTED_GRADLE_VERSION_ERROR_PATTERN.matcher(msg).matches()) -->Line_67 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ CD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_39 $$ if (!msg.endsWith(".")) [ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)[ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_56 $$ msg += msg.endsWith(".") ? " " : ". "[ FD ]
Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS-->Line_65 $$ msg += "."[ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_13 $$ if (location == null && !StringUtil.isEmpty(buildFilePath)) [ CD ]
Line_22 $$ if (StringUtil.startsWith(rootCauseText, "org.gradle.api.internal.MissingMethodException")) -->Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")[ CD ]
Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"-->Line_47 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_31 $$ if (rootCause instanceof OutOfMemoryError) -->Line_32 $$ String originalMessage = rootCause.getMessage()[ CD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_51 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_63 $$ if (msg != null && UNSUPPORTED_GRADLE_VERSION_ERROR_PATTERN.matcher(msg).matches()) [ FD ]
Line_57 $$ msg += SET_UP_HTTP_PROXY-->Line_65 $$ msg += "."[ FD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_47 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_11 $$ Throwable rootCause = rootCauseAndLocation.getFirst()-->Line_54 $$ String msg = rootCause.getMessage()[ FD ]
Line_63 $$ if (msg != null && UNSUPPORTED_GRADLE_VERSION_ERROR_PATTERN.matcher(msg).matches()) -->Line_68 $$ return createUserFriendlyError(msg, null)[ CD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_71 $$ final String errMessage-->Line_75 $$ errMessage = writer.toString()[ FD ]
Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"-->Line_39 $$ if (!msg.endsWith(".")) [ FD ]
Line_2 $$ public ExternalSystemException getUserFriendlyError(@NotNull Throwable error, @NotNull String projectPath, @Nullable String buildFilePath) -->Line_53 $$ if (rootCause instanceof ConnectException) [ CD ]
Line_35 $$ msg = msg + ": " + originalMessage-->Line_47 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_22 $$ if (StringUtil.startsWith(rootCauseText, "org.gradle.api.internal.MissingMethodException")) -->Line_23 $$ String method = parseMissingMethod(rootCauseText)[ CD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)[ FD ]
Line_35 $$ msg = msg + ": " + originalMessage-->Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"[ FD ]
Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"-->Line_40 $$ msg += "."[ FD ]
Line_22 $$ if (StringUtil.startsWith(rootCauseText, "org.gradle.api.internal.MissingMethodException")) -->Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)[ CD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_29 $$ return createUserFriendlyError(msg, location, OpenGradleSettingsCallback.ID, ApplyGradlePluginCallback.ID, GotoSourceNotificationCallback.ID)[ FD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_58 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_57 $$ msg += SET_UP_HTTP_PROXY[ FD ]
Line_55 $$ if (msg != null && msg.contains("timed out")) -->Line_58 $$ return createUserFriendlyError(msg, null)[ CD ]
Line_26 $$ msg += String.format("%s  - you are using Gradle version where the method is absent (<a href=\"%s\">Fix Gradle settings</a>)", '\n', OpenGradleSettingsCallback.ID)-->Line_47 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)[ FD ]
Line_21 $$ final String rootCauseText = rootCause.toString()-->Line_22 $$ if (StringUtil.startsWith(rootCauseText, "org.gradle.api.internal.MissingMethodException")) [ FD ]
Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"-->Line_64 $$ if (!msg.endsWith(".")) [ FD ]
Line_45 $$ if (rootCause instanceof ClassNotFoundException) -->Line_47 $$ return createUserFriendlyError(msg, null)[ CD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_55 $$ if (msg != null && msg.contains("timed out")) [ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_43 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_40 $$ msg += "."[ FD ]
Line_56 $$ msg += msg.endsWith(".") ? " " : ". "-->Line_65 $$ msg += "."[ FD ]
Line_11 $$ Throwable rootCause = rootCauseAndLocation.getFirst()-->Line_53 $$ if (rootCause instanceof ConnectException) [ FD ]
Line_10 $$ Pair<Throwable, String> rootCauseAndLocation = getRootCauseAndLocation(error)-->Line_11 $$ Throwable rootCause = rootCauseAndLocation.getFirst()[ FD ]
Line_16 $$ if (rootCause instanceof UnsupportedVersionException) -->Line_19 $$ return createUserFriendlyError(msg, null)[ CD ]
Line_32 $$ String originalMessage = rootCause.getMessage()-->Line_34 $$ if (originalMessage != null && !originalMessage.isEmpty()) [ FD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_35 $$ msg = msg + ": " + originalMessage[ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")[ FD ]
Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"-->Line_42 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_63 $$ if (msg != null && UNSUPPORTED_GRADLE_VERSION_ERROR_PATTERN.matcher(msg).matches()) [ FD ]
Line_22 $$ if (StringUtil.startsWith(rootCauseText, "org.gradle.api.internal.MissingMethodException")) -->Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)[ CD ]
Line_75 $$ errMessage = writer.toString()-->Line_77 $$ errMessage = rootCause.getMessage()[ FD ]
Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"-->Line_63 $$ if (msg != null && UNSUPPORTED_GRADLE_VERSION_ERROR_PATTERN.matcher(msg).matches()) [ FD ]
Line_17 $$ String msg = "You are using unsupported version of Gradle."-->Line_56 $$ msg += msg.endsWith(".") ? " " : ". "[ FD ]
Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"-->Line_68 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_47 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_35 $$ msg = msg + ": " + originalMessage-->Line_68 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_11 $$ Throwable rootCause = rootCauseAndLocation.getFirst()-->Line_45 $$ if (rootCause instanceof ClassNotFoundException) [ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_51 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_56 $$ msg += msg.endsWith(".") ? " " : ". "-->Line_58 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_28 $$ msg += String.format("%s  - or there is a mistake in a build script (<a href=\"%s\">Goto source</a>)", '\n', GotoSourceNotificationCallback.ID)-->Line_56 $$ msg += msg.endsWith(".") ? " " : ". "[ FD ]
Line_18 $$ msg += ('\n' + FIX_GRADLE_VERSION)-->Line_47 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_25 $$ msg += (EMPTY_LINE + "Possible causes could be:  ")-->Line_38 $$ msg += ". Configure Gradle memory settings using '-Xmx' JVM option (e.g. '-Xmx2048m'.)"[ FD ]
Line_40 $$ msg += "."-->Line_68 $$ return createUserFriendlyError(msg, null)[ FD ]
Line_39 $$ if (!msg.endsWith(".")) -->Line_40 $$ msg += "."[ CD ]
Line_27 $$ msg += String.format("%s  - you didn't apply Gradle plugin which provides the method (<a href=\"%s\">Apply Gradle plugin</a>)", '\n', ApplyGradlePluginCallback.ID)-->Line_67 $$ msg += EMPTY_LINE + OPEN_GRADLE_SETTINGS[ FD ]
