Line_45 $$ if (ironJacamarXmlDescriptor != null) -->Line_46 $$ ConnectorLogger.SUBSYSTEM_RA_LOGGER.forceIJToNull()[ CD ]
Line_14 $$ Module module-->Line_17 $$ module = Module.getCallerModuleLoader().loadModule(moduleId)[ FD ]
Line_49 $$ final ServiceName deployerServiceName = ConnectorServices.RESOURCE_ADAPTER_DEPLOYER_SERVICE_PREFIX.append(connectorXmlDescriptor.getDeploymentName())-->Line_50 $$ final ServiceController<?> deployerService = context.getServiceRegistry(true).getService(deployerServiceName)[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_22 $$ Closeable closable = null[ CD ]
Line_39 $$ Map<ResourceRoot, Index> annotationIndexes = new HashMap<ResourceRoot, Index>()-->Line_43 $$ annotationIndexes.put(resourceRoot, index)[ FD ]
Line_7 $$ String slot = "main"-->Line_9 $$ slot = fullModuleName.substring(fullModuleName.indexOf(":") + 1)[ FD ]
Line_8 $$ if (fullModuleName.contains(":")) -->Line_12 $$ moduleName = fullModuleName[ CD ]
Line_55 $$ String rarName = resourceAdapter.getArchive()-->Line_56 $$ if (fullModuleName.equals(rarName)) [ FD ]
Line_36 $$ ConnectorXmlDescriptor connectorXmlDescriptor = RaDeploymentParsingProcessor.process(resolveProperties, deploymentRoot, null, name)-->Line_49 $$ final ServiceName deployerServiceName = ConnectorServices.RESOURCE_ADAPTER_DEPLOYER_SERVICE_PREFIX.append(connectorXmlDescriptor.getDeploymentName())[ FD ]
Line_6 $$ final String moduleName-->Line_10 $$ moduleName = fullModuleName.substring(0, fullModuleName.indexOf(":"))[ FD ]
Line_56 $$ if (fullModuleName.equals(rarName)) -->Line_58 $$ InactiveResourceAdapterDeploymentService service = new InactiveResourceAdapterDeploymentService(connectorXmlDescriptor, module, name, name, RAR_MODULE.append(name), null, serviceTarget, null)[ CD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_3 $$ ServiceName raServiceName = installRaServices(context, name, resourceAdapter, newControllers)[ CD ]
Line_16 $$ ModuleIdentifier moduleId = ModuleIdentifier.create(moduleName, slot)-->Line_17 $$ module = Module.getCallerModuleLoader().loadModule(moduleId)[ FD ]
Line_6 $$ final String moduleName-->Line_16 $$ ModuleIdentifier moduleId = ModuleIdentifier.create(moduleName, slot)[ FD ]
Line_4 $$ final boolean resolveProperties = true-->Line_36 $$ ConnectorXmlDescriptor connectorXmlDescriptor = RaDeploymentParsingProcessor.process(resolveProperties, deploymentRoot, null, name)[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_50 $$ final ServiceController<?> deployerService = context.getServiceRegistry(true).getService(deployerServiceName)[ FD ]
Line_39 $$ Map<ResourceRoot, Index> annotationIndexes = new HashMap<ResourceRoot, Index>()-->Line_52 $$ ServiceBuilder builder = ParsedRaDeploymentProcessor.process(connectorXmlDescriptor, ironJacamarXmlDescriptor, module.getClassLoader(), serviceTarget, annotationIndexes, RAR_MODULE.append(name), null, null)[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_57 $$ ServiceName serviceName = ConnectorServices.INACTIVE_RESOURCE_ADAPTER_SERVICE.append(name)[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_58 $$ InactiveResourceAdapterDeploymentService service = new InactiveResourceAdapterDeploymentService(connectorXmlDescriptor, module, name, name, RAR_MODULE.append(name), null, serviceTarget, null)[ FD ]
Line_28 $$ child = VFS.getChild(path.getPath().split("META-INF")[0])-->Line_29 $$ closable = VFS.mountReal(new File(path.getPath().split("META-INF")[0]), child)[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_12 $$ moduleName = fullModuleName[ FD ]
Line_6 $$ final String moduleName-->Line_26 $$ throw new OperationFailedException(ConnectorLogger.ROOT_LOGGER.compressedRarNotSupportedInModuleRA(moduleName))[ FD ]
Line_33 $$ final VirtualFile deploymentRoot = resourceRoot.getRoot()-->Line_34 $$ if (deploymentRoot == null || !deploymentRoot.exists())[ FD ]
Line_6 $$ final String moduleName-->Line_62 $$ throw new OperationFailedException(ConnectorLogger.ROOT_LOGGER.failedToLoadModuleRA(moduleName), e)[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_55 $$ String rarName = resourceAdapter.getArchive()[ FD ]
Line_24 $$ VirtualFile child-->Line_29 $$ closable = VFS.mountReal(new File(path.getPath().split("META-INF")[0]), child)[ FD ]
Line_51 $$ if (deployerService == null) -->Line_53 $$ newControllers.add(builder.addDependency(raServiceName).setInitialMode(ServiceController.Mode.ACTIVE).install())[ CD ]
Line_47 $$ ironJacamarXmlDescriptor = null-->Line_52 $$ ServiceBuilder builder = ParsedRaDeploymentProcessor.process(connectorXmlDescriptor, ironJacamarXmlDescriptor, module.getClassLoader(), serviceTarget, annotationIndexes, RAR_MODULE.append(name), null, null)[ FD ]
Line_52 $$ ServiceBuilder builder = ParsedRaDeploymentProcessor.process(connectorXmlDescriptor, ironJacamarXmlDescriptor, module.getClassLoader(), serviceTarget, annotationIndexes, RAR_MODULE.append(name), null, null)-->Line_53 $$ newControllers.add(builder.addDependency(raServiceName).setInitialMode(ServiceController.Mode.ACTIVE).install())[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_10 $$ moduleName = fullModuleName.substring(0, fullModuleName.indexOf(":"))[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_5 $$ final ServiceTarget serviceTarget = context.getServiceTarget()[ CD ]
Line_25 $$ if (path.getPath().contains("!")) -->Line_29 $$ closable = VFS.mountReal(new File(path.getPath().split("META-INF")[0]), child)[ CD ]
Line_32 $$ final ResourceRoot resourceRoot = new ResourceRoot(child, mountHandle)-->Line_33 $$ final VirtualFile deploymentRoot = resourceRoot.getRoot()[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_7 $$ String slot = "main"[ CD ]
Line_5 $$ final ServiceTarget serviceTarget = context.getServiceTarget()-->Line_52 $$ ServiceBuilder builder = ParsedRaDeploymentProcessor.process(connectorXmlDescriptor, ironJacamarXmlDescriptor, module.getClassLoader(), serviceTarget, annotationIndexes, RAR_MODULE.append(name), null, null)[ FD ]
Line_6 $$ final String moduleName-->Line_19 $$ throw new OperationFailedException(ConnectorLogger.ROOT_LOGGER.failedToLoadModuleRA(moduleName), e)[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_3 $$ ServiceName raServiceName = installRaServices(context, name, resourceAdapter, newControllers)[ FD ]
Line_4 $$ final boolean resolveProperties = true-->Line_37 $$ IronJacamarXmlDescriptor ironJacamarXmlDescriptor = IronJacamarDeploymentParsingProcessor.process(deploymentRoot, resolveProperties)[ FD ]
Line_42 $$ if (index != null) -->Line_43 $$ annotationIndexes.put(resourceRoot, index)[ CD ]
Line_50 $$ final ServiceController<?> deployerService = context.getServiceRegistry(true).getService(deployerServiceName)-->Line_51 $$ if (deployerService == null) [ FD ]
Line_17 $$ module = Module.getCallerModuleLoader().loadModule(moduleId)-->Line_21 $$ URL path = module.getExportedResource("META-INF/ra.xml")[ FD ]
Line_45 $$ if (ironJacamarXmlDescriptor != null) -->Line_47 $$ ironJacamarXmlDescriptor = null[ CD ]
Line_10 $$ moduleName = fullModuleName.substring(0, fullModuleName.indexOf(":"))-->Line_12 $$ moduleName = fullModuleName[ FD ]
Line_10 $$ moduleName = fullModuleName.substring(0, fullModuleName.indexOf(":"))-->Line_19 $$ throw new OperationFailedException(ConnectorLogger.ROOT_LOGGER.failedToLoadModuleRA(moduleName), e)[ FD ]
Line_56 $$ if (fullModuleName.equals(rarName)) -->Line_59 $$ newControllers.add(serviceTarget.addService(serviceName, service).setInitialMode(ServiceController.Mode.ACTIVE).install())[ CD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_4 $$ final boolean resolveProperties = true[ CD ]
Line_58 $$ InactiveResourceAdapterDeploymentService service = new InactiveResourceAdapterDeploymentService(connectorXmlDescriptor, module, name, name, RAR_MODULE.append(name), null, serviceTarget, null)-->Line_59 $$ newControllers.add(serviceTarget.addService(serviceName, service).setInitialMode(ServiceController.Mode.ACTIVE).install())[ FD ]
Line_24 $$ VirtualFile child-->Line_28 $$ child = VFS.getChild(path.getPath().split("META-INF")[0])[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_6 $$ final String moduleName[ CD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_8 $$ if (fullModuleName.contains(":")) [ CD ]
Line_22 $$ Closeable closable = null-->Line_29 $$ closable = VFS.mountReal(new File(path.getPath().split("META-INF")[0]), child)[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_5 $$ final ServiceTarget serviceTarget = context.getServiceTarget()[ FD ]
Line_21 $$ URL path = module.getExportedResource("META-INF/ra.xml")-->Line_29 $$ closable = VFS.mountReal(new File(path.getPath().split("META-INF")[0]), child)[ FD ]
Line_34 $$ if (deploymentRoot == null || !deploymentRoot.exists())-->Line_35 $$ return[ CD ]
Line_14 $$ Module module-->Line_52 $$ ServiceBuilder builder = ParsedRaDeploymentProcessor.process(connectorXmlDescriptor, ironJacamarXmlDescriptor, module.getClassLoader(), serviceTarget, annotationIndexes, RAR_MODULE.append(name), null, null)[ FD ]
Line_29 $$ closable = VFS.mountReal(new File(path.getPath().split("META-INF")[0]), child)-->Line_66 $$ closable.close()[ FD ]
Line_12 $$ moduleName = fullModuleName-->Line_16 $$ ModuleIdentifier moduleId = ModuleIdentifier.create(moduleName, slot)[ FD ]
Line_56 $$ if (fullModuleName.equals(rarName)) -->Line_57 $$ ServiceName serviceName = ConnectorServices.INACTIVE_RESOURCE_ADAPTER_SERVICE.append(name)[ CD ]
Line_9 $$ slot = fullModuleName.substring(fullModuleName.indexOf(":") + 1)-->Line_16 $$ ModuleIdentifier moduleId = ModuleIdentifier.create(moduleName, slot)[ FD ]
Line_10 $$ moduleName = fullModuleName.substring(0, fullModuleName.indexOf(":"))-->Line_62 $$ throw new OperationFailedException(ConnectorLogger.ROOT_LOGGER.failedToLoadModuleRA(moduleName), e)[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_56 $$ if (fullModuleName.equals(rarName)) [ FD ]
Line_37 $$ IronJacamarXmlDescriptor ironJacamarXmlDescriptor = IronJacamarDeploymentParsingProcessor.process(deploymentRoot, resolveProperties)-->Line_47 $$ ironJacamarXmlDescriptor = null[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_8 $$ if (fullModuleName.contains(":")) [ FD ]
Line_7 $$ String slot = "main"-->Line_16 $$ ModuleIdentifier moduleId = ModuleIdentifier.create(moduleName, slot)[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_9 $$ slot = fullModuleName.substring(fullModuleName.indexOf(":") + 1)[ FD ]
Line_33 $$ final VirtualFile deploymentRoot = resourceRoot.getRoot()-->Line_37 $$ IronJacamarXmlDescriptor ironJacamarXmlDescriptor = IronJacamarDeploymentParsingProcessor.process(deploymentRoot, resolveProperties)[ FD ]
Line_36 $$ ConnectorXmlDescriptor connectorXmlDescriptor = RaDeploymentParsingProcessor.process(resolveProperties, deploymentRoot, null, name)-->Line_52 $$ ServiceBuilder builder = ParsedRaDeploymentProcessor.process(connectorXmlDescriptor, ironJacamarXmlDescriptor, module.getClassLoader(), serviceTarget, annotationIndexes, RAR_MODULE.append(name), null, null)[ FD ]
Line_8 $$ if (fullModuleName.contains(":")) -->Line_10 $$ moduleName = fullModuleName.substring(0, fullModuleName.indexOf(":"))[ CD ]
Line_51 $$ if (deployerService == null) -->Line_52 $$ ServiceBuilder builder = ParsedRaDeploymentProcessor.process(connectorXmlDescriptor, ironJacamarXmlDescriptor, module.getClassLoader(), serviceTarget, annotationIndexes, RAR_MODULE.append(name), null, null)[ CD ]
Line_12 $$ moduleName = fullModuleName-->Line_19 $$ throw new OperationFailedException(ConnectorLogger.ROOT_LOGGER.failedToLoadModuleRA(moduleName), e)[ FD ]
Line_17 $$ module = Module.getCallerModuleLoader().loadModule(moduleId)-->Line_52 $$ ServiceBuilder builder = ParsedRaDeploymentProcessor.process(connectorXmlDescriptor, ironJacamarXmlDescriptor, module.getClassLoader(), serviceTarget, annotationIndexes, RAR_MODULE.append(name), null, null)[ FD ]
Line_12 $$ moduleName = fullModuleName-->Line_26 $$ throw new OperationFailedException(ConnectorLogger.ROOT_LOGGER.compressedRarNotSupportedInModuleRA(moduleName))[ FD ]
Line_22 $$ Closeable closable = null-->Line_64 $$ if (closable != null) [ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_14 $$ Module module[ CD ]
Line_32 $$ final ResourceRoot resourceRoot = new ResourceRoot(child, mountHandle)-->Line_43 $$ annotationIndexes.put(resourceRoot, index)[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_53 $$ newControllers.add(builder.addDependency(raServiceName).setInitialMode(ServiceController.Mode.ACTIVE).install())[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_52 $$ ServiceBuilder builder = ParsedRaDeploymentProcessor.process(connectorXmlDescriptor, ironJacamarXmlDescriptor, module.getClassLoader(), serviceTarget, annotationIndexes, RAR_MODULE.append(name), null, null)[ FD ]
Line_6 $$ final String moduleName-->Line_12 $$ moduleName = fullModuleName[ FD ]
Line_12 $$ moduleName = fullModuleName-->Line_62 $$ throw new OperationFailedException(ConnectorLogger.ROOT_LOGGER.failedToLoadModuleRA(moduleName), e)[ FD ]
Line_3 $$ ServiceName raServiceName = installRaServices(context, name, resourceAdapter, newControllers)-->Line_53 $$ newControllers.add(builder.addDependency(raServiceName).setInitialMode(ServiceController.Mode.ACTIVE).install())[ FD ]
Line_5 $$ final ServiceTarget serviceTarget = context.getServiceTarget()-->Line_59 $$ newControllers.add(serviceTarget.addService(serviceName, service).setInitialMode(ServiceController.Mode.ACTIVE).install())[ FD ]
Line_25 $$ if (path.getPath().contains("!")) -->Line_28 $$ child = VFS.getChild(path.getPath().split("META-INF")[0])[ CD ]
Line_37 $$ IronJacamarXmlDescriptor ironJacamarXmlDescriptor = IronJacamarDeploymentParsingProcessor.process(deploymentRoot, resolveProperties)-->Line_52 $$ ServiceBuilder builder = ParsedRaDeploymentProcessor.process(connectorXmlDescriptor, ironJacamarXmlDescriptor, module.getClassLoader(), serviceTarget, annotationIndexes, RAR_MODULE.append(name), null, null)[ FD ]
Line_41 $$ Index index = resourceRoot.getAttachment(Attachments.ANNOTATION_INDEX)-->Line_43 $$ annotationIndexes.put(resourceRoot, index)[ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_36 $$ ConnectorXmlDescriptor connectorXmlDescriptor = RaDeploymentParsingProcessor.process(resolveProperties, deploymentRoot, null, name)[ FD ]
Line_10 $$ moduleName = fullModuleName.substring(0, fullModuleName.indexOf(":"))-->Line_26 $$ throw new OperationFailedException(ConnectorLogger.ROOT_LOGGER.compressedRarNotSupportedInModuleRA(moduleName))[ FD ]
Line_8 $$ if (fullModuleName.contains(":")) -->Line_9 $$ slot = fullModuleName.substring(fullModuleName.indexOf(":") + 1)[ CD ]
Line_14 $$ Module module-->Line_21 $$ URL path = module.getExportedResource("META-INF/ra.xml")[ FD ]
Line_57 $$ ServiceName serviceName = ConnectorServices.INACTIVE_RESOURCE_ADAPTER_SERVICE.append(name)-->Line_59 $$ newControllers.add(serviceTarget.addService(serviceName, service).setInitialMode(ServiceController.Mode.ACTIVE).install())[ FD ]
Line_33 $$ final VirtualFile deploymentRoot = resourceRoot.getRoot()-->Line_38 $$ RaNativeProcessor.process(deploymentRoot)[ FD ]
Line_10 $$ moduleName = fullModuleName.substring(0, fullModuleName.indexOf(":"))-->Line_16 $$ ModuleIdentifier moduleId = ModuleIdentifier.create(moduleName, slot)[ FD ]
Line_32 $$ final ResourceRoot resourceRoot = new ResourceRoot(child, mountHandle)-->Line_40 $$ ResourceRootIndexer.indexResourceRoot(resourceRoot)[ FD ]
Line_37 $$ IronJacamarXmlDescriptor ironJacamarXmlDescriptor = IronJacamarDeploymentParsingProcessor.process(deploymentRoot, resolveProperties)-->Line_45 $$ if (ironJacamarXmlDescriptor != null) [ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_21 $$ URL path = module.getExportedResource("META-INF/ra.xml")[ CD ]
Line_32 $$ final ResourceRoot resourceRoot = new ResourceRoot(child, mountHandle)-->Line_41 $$ Index index = resourceRoot.getAttachment(Attachments.ANNOTATION_INDEX)[ FD ]
Line_21 $$ URL path = module.getExportedResource("META-INF/ra.xml")-->Line_25 $$ if (path.getPath().contains("!")) [ FD ]
Line_33 $$ final VirtualFile deploymentRoot = resourceRoot.getRoot()-->Line_36 $$ ConnectorXmlDescriptor connectorXmlDescriptor = RaDeploymentParsingProcessor.process(resolveProperties, deploymentRoot, null, name)[ FD ]
Line_22 $$ Closeable closable = null-->Line_66 $$ closable.close()[ FD ]
Line_41 $$ Index index = resourceRoot.getAttachment(Attachments.ANNOTATION_INDEX)-->Line_42 $$ if (index != null) [ FD ]
Line_2 $$ public static void installRaServicesAndDeployFromModule(OperationContext context, String name, ModifiableResourceAdapter resourceAdapter, String fullModuleName, final List<ServiceController<?>> newControllers) throws OperationFailedException -->Line_59 $$ newControllers.add(serviceTarget.addService(serviceName, service).setInitialMode(ServiceController.Mode.ACTIVE).install())[ FD ]
Line_29 $$ closable = VFS.mountReal(new File(path.getPath().split("META-INF")[0]), child)-->Line_64 $$ if (closable != null) [ FD ]
Line_21 $$ URL path = module.getExportedResource("META-INF/ra.xml")-->Line_28 $$ child = VFS.getChild(path.getPath().split("META-INF")[0])[ FD ]
