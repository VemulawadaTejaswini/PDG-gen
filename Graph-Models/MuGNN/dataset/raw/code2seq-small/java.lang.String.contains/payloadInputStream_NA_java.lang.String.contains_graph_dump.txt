Line_2 $$ public void payloadInputStream() throws Exception -->Line_3 $$ filter.setIncludePayload(true)[ CD ]
Line_2 $$ public void payloadInputStream() throws Exception -->Line_16 $$ assertNotNull(filter.afterRequestMessage)[ CD ]
Line_2 $$ public void payloadInputStream() throws Exception -->Line_17 $$ assertTrue(filter.afterRequestMessage.contains("Hello World"))[ CD ]
Line_2 $$ public void payloadInputStream() throws Exception -->Line_15 $$ filter.doFilter(request, response, filterChain)[ CD ]
Line_11 $$ byte[] buf = FileCopyUtils.copyToByteArray(filterRequest.getInputStream())-->Line_12 $$ assertArrayEquals(requestBody, buf)[ FD ]
Line_8 $$ FilterChain filterChain = new FilterChain() -->Line_12 $$ assertArrayEquals(requestBody, buf)[ CD ]
Line_6 $$ final byte[] requestBody = "Hello World".getBytes("UTF-8")-->Line_12 $$ assertArrayEquals(requestBody, buf)[ FD ]
Line_2 $$ public void payloadInputStream() throws Exception -->Line_7 $$ request.setContent(requestBody)[ CD ]
Line_8 $$ FilterChain filterChain = new FilterChain() -->Line_11 $$ byte[] buf = FileCopyUtils.copyToByteArray(filterRequest.getInputStream())[ FD ]
Line_8 $$ FilterChain filterChain = new FilterChain() -->Line_15 $$ filter.doFilter(request, response, filterChain)[ FD ]
Line_2 $$ public void payloadInputStream() throws Exception -->Line_6 $$ final byte[] requestBody = "Hello World".getBytes("UTF-8")[ CD ]
Line_2 $$ public void payloadInputStream() throws Exception -->Line_4 $$ final MockHttpServletRequest request = new MockHttpServletRequest("POST", "/hotels")[ CD ]
Line_5 $$ MockHttpServletResponse response = new MockHttpServletResponse()-->Line_15 $$ filter.doFilter(request, response, filterChain)[ FD ]
Line_2 $$ public void payloadInputStream() throws Exception -->Line_8 $$ FilterChain filterChain = new FilterChain() [ CD ]
Line_6 $$ final byte[] requestBody = "Hello World".getBytes("UTF-8")-->Line_7 $$ request.setContent(requestBody)[ FD ]
Line_4 $$ final MockHttpServletRequest request = new MockHttpServletRequest("POST", "/hotels")-->Line_15 $$ filter.doFilter(request, response, filterChain)[ FD ]
Line_4 $$ final MockHttpServletRequest request = new MockHttpServletRequest("POST", "/hotels")-->Line_7 $$ request.setContent(requestBody)[ FD ]
Line_8 $$ FilterChain filterChain = new FilterChain() -->Line_10 $$ ((HttpServletResponse) filterResponse).setStatus(HttpServletResponse.SC_OK)[ CD ]
Line_8 $$ FilterChain filterChain = new FilterChain() -->Line_11 $$ byte[] buf = FileCopyUtils.copyToByteArray(filterRequest.getInputStream())[ CD ]
Line_2 $$ public void payloadInputStream() throws Exception -->Line_5 $$ MockHttpServletResponse response = new MockHttpServletResponse()[ CD ]
