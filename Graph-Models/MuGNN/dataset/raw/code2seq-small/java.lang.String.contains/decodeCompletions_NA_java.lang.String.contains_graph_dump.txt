Line_5 $$ for (Object o : completionList) -->Line_6 $$ List comp = objectToList(o)[ FD ]
Line_6 $$ List comp = objectToList(o)-->Line_7 $$ final int type = extractInt(comp.get(3))[ FD ]
Line_3 $$ final List<PydevCompletionVariant> ret = new ArrayList<PydevCompletionVariant>()-->Line_13 $$ ret.add(new PydevCompletionVariant(name, (String) comp.get(1), args, type))[ FD ]
Line_2 $$ public static List<PydevCompletionVariant> decodeCompletions(Object fromServer, String actTok) -->Line_4 $$ List completionList = objectToList(fromServer)[ FD ]
Line_6 $$ List comp = objectToList(o)-->Line_9 $$ String name = (String) comp.get(0)[ FD ]
Line_10 $$ if (name.contains(".") && name.startsWith(actTok)) -->Line_11 $$ name = name.substring(actTok.length())[ CD ]
Line_7 $$ final int type = extractInt(comp.get(3))-->Line_8 $$ final String args = AbstractPyCodeCompletion.getArgs((String) comp.get(2), type, AbstractPyCodeCompletion.LOOKING_FOR_INSTANCED_VARIABLE)[ FD ]
Line_6 $$ List comp = objectToList(o)-->Line_8 $$ final String args = AbstractPyCodeCompletion.getArgs((String) comp.get(2), type, AbstractPyCodeCompletion.LOOKING_FOR_INSTANCED_VARIABLE)[ FD ]
Line_2 $$ public static List<PydevCompletionVariant> decodeCompletions(Object fromServer, String actTok) -->Line_11 $$ name = name.substring(actTok.length())[ FD ]
Line_6 $$ List comp = objectToList(o)-->Line_13 $$ ret.add(new PydevCompletionVariant(name, (String) comp.get(1), args, type))[ FD ]
Line_9 $$ String name = (String) comp.get(0)-->Line_11 $$ name = name.substring(actTok.length())[ FD ]
Line_2 $$ public static List<PydevCompletionVariant> decodeCompletions(Object fromServer, String actTok) -->Line_15 $$ return ret[ CD ]
Line_2 $$ public static List<PydevCompletionVariant> decodeCompletions(Object fromServer, String actTok) -->Line_4 $$ List completionList = objectToList(fromServer)[ CD ]
Line_2 $$ public static List<PydevCompletionVariant> decodeCompletions(Object fromServer, String actTok) -->Line_3 $$ final List<PydevCompletionVariant> ret = new ArrayList<PydevCompletionVariant>()[ CD ]
Line_9 $$ String name = (String) comp.get(0)-->Line_10 $$ if (name.contains(".") && name.startsWith(actTok)) [ FD ]
Line_2 $$ public static List<PydevCompletionVariant> decodeCompletions(Object fromServer, String actTok) -->Line_10 $$ if (name.contains(".") && name.startsWith(actTok)) [ FD ]
