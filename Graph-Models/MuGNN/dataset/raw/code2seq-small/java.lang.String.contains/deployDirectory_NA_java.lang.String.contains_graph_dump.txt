Line_75 $$ if (isJEEDeploymentEnabled()) -->Line_85 $$ deploymentHandler.releaseDeploymentManager()[ CD ]
Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"-->Line_98 $$ excludes += "**/WEB-INF/web.xml"[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_9 $$ copyXmls(srcFile, displayName, pluginPackage)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_100 $$ CopyTask.copyDirectory(srcFile, deployDir, "**/WEB-INF/web.xml", StringPool.BLANK, true, false)[ FD ]
Line_101 $$ if (appServerType.equals(ServerDetector.TOMCAT_ID)) -->Line_103 $$ deployWebXml.setLastModified(System.currentTimeMillis() + (Time.SECOND * 6))[ CD ]
Line_33 $$ excludes += "**/WEB-INF/lib/" + lib + ","-->Line_73 $$ excludes += "/WEB-INF/web.xml"[ FD ]
Line_11 $$ File webXml = new File(srcFile + "/WEB-INF/web.xml")-->Line_74 $$ WarTask.war(srcFile, tempDir, excludes, webXml)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_51 $$ if (properties != null) [ CD ]
Line_33 $$ excludes += "**/WEB-INF/lib/" + lib + ","-->Line_46 $$ excludes += "**/WEB-INF/lib/el-api.jar,"[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_7 $$ copyProperties(srcFile, pluginPackage)[ CD ]
Line_33 $$ excludes += "**/WEB-INF/lib/" + lib + ","-->Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"[ FD ]
Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"-->Line_98 $$ excludes += "**/WEB-INF/web.xml"[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_10 $$ copyPortalDependencies(srcFile)[ CD ]
Line_38 $$ if (content.contains(_PORTAL_CLASS_LOADER)) -->Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"[ CD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_67 $$ if (_log.isDebugEnabled()) [ CD ]
Line_70 $$ if (!unpackWar) -->Line_100 $$ CopyTask.copyDirectory(srcFile, deployDir, "**/WEB-INF/web.xml", StringPool.BLANK, true, false)[ CD ]
Line_46 $$ excludes += "**/WEB-INF/lib/el-api.jar,"-->Line_73 $$ excludes += "/WEB-INF/web.xml"[ FD ]
Line_20 $$ File portalLibDir = new File(PortalUtil.getPortalLibDir())-->Line_21 $$ CopyTask.copyDirectory(extLibPortalDir, portalLibDir, "*.jar", StringPool.BLANK, overwrite, true)[ FD ]
Line_50 $$ Properties properties = getPluginPackageProperties(srcFile)-->Line_51 $$ if (properties != null) [ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_27 $$ String excludes = StringPool.BLANK[ CD ]
Line_46 $$ excludes += "**/WEB-INF/lib/el-api.jar,"-->Line_56 $$ excludes += ","[ FD ]
Line_75 $$ if (isJEEDeploymentEnabled()) -->Line_84 $$ deploymentHandler.deploy(tempWarDir, displayName)[ CD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_13 $$ File extLibGlobalDir = new File(srcFile.getAbsolutePath() + "/WEB-INF/ext-lib/global")[ FD ]
Line_56 $$ excludes += ","-->Line_89 $$ WarTask.war(srcFile, deployDir, excludes, webXml)[ FD ]
Line_63 $$ excludes += ","-->Line_98 $$ excludes += "**/WEB-INF/web.xml"[ FD ]
Line_54 $$ excludes += deployExcludes.trim()-->Line_99 $$ CopyTask.copyDirectory(srcFile, deployDir, StringPool.BLANK, excludes, overwrite, true)[ FD ]
Line_13 $$ File extLibGlobalDir = new File(srcFile.getAbsolutePath() + "/WEB-INF/ext-lib/global")-->Line_14 $$ if (extLibGlobalDir.exists()) [ FD ]
Line_27 $$ String excludes = StringPool.BLANK-->Line_62 $$ if (!excludes.endsWith(",")) [ FD ]
Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"-->Line_56 $$ excludes += ","[ FD ]
Line_27 $$ String excludes = StringPool.BLANK-->Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"[ FD ]
Line_91 $$ if (tempDir.isDirectory()) -->Line_94 $$ tempDir.delete()[ CD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_8 $$ copyTlds(srcFile, pluginPackage)[ CD ]
Line_54 $$ excludes += deployExcludes.trim()-->Line_73 $$ excludes += "/WEB-INF/web.xml"[ FD ]
Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"-->Line_74 $$ WarTask.war(srcFile, tempDir, excludes, webXml)[ FD ]
Line_46 $$ excludes += "**/WEB-INF/lib/el-api.jar,"-->Line_74 $$ WarTask.war(srcFile, tempDir, excludes, webXml)[ FD ]
Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"-->Line_55 $$ if (!excludes.endsWith(",")) [ FD ]
Line_30 $$ if (appServerType.equals(ServerDetector.TOMCAT_ID)) -->Line_31 $$ String[] libs = FileUtil.listFiles(tomcatLibDir)[ CD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_89 $$ WarTask.war(srcFile, deployDir, excludes, webXml)[ FD ]
Line_46 $$ excludes += "**/WEB-INF/lib/el-api.jar,"-->Line_98 $$ excludes += "**/WEB-INF/web.xml"[ FD ]
Line_27 $$ String excludes = StringPool.BLANK-->Line_55 $$ if (!excludes.endsWith(",")) [ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_28 $$ if (appServerType.equals(ServerDetector.JBOSS_ID) || appServerType.equals(ServerDetector.WILDFLY_ID)) [ CD ]
Line_75 $$ if (isJEEDeploymentEnabled()) -->Line_76 $$ File tempWarDir = new File(tempDir.getParent(), deployDir.getName())[ CD ]
Line_70 $$ if (!unpackWar) -->Line_101 $$ if (appServerType.equals(ServerDetector.TOMCAT_ID)) [ CD ]
Line_38 $$ if (content.contains(_PORTAL_CLASS_LOADER)) -->Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"[ CD ]
Line_33 $$ excludes += "**/WEB-INF/lib/" + lib + ","-->Line_62 $$ if (!excludes.endsWith(",")) [ FD ]
Line_27 $$ String excludes = StringPool.BLANK-->Line_73 $$ excludes += "/WEB-INF/web.xml"[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_14 $$ if (extLibGlobalDir.exists()) [ CD ]
Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"-->Line_63 $$ excludes += ","[ FD ]
Line_15 $$ File globalLibDir = new File(PortalUtil.getGlobalLibDir())-->Line_16 $$ CopyTask.copyDirectory(extLibGlobalDir, globalLibDir, "*.jar", StringPool.BLANK, overwrite, true)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_3 $$ rewriteFiles(srcFile)[ FD ]
Line_75 $$ if (isJEEDeploymentEnabled()) -->Line_86 $$ DeleteTask.deleteDirectory(tempWarDir)[ CD ]
Line_33 $$ excludes += "**/WEB-INF/lib/" + lib + ","-->Line_89 $$ WarTask.war(srcFile, deployDir, excludes, webXml)[ FD ]
Line_76 $$ File tempWarDir = new File(tempDir.getParent(), deployDir.getName())-->Line_78 $$ tempWarDir.delete()[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_21 $$ CopyTask.copyDirectory(extLibPortalDir, portalLibDir, "*.jar", StringPool.BLANK, overwrite, true)[ FD ]
Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"-->Line_62 $$ if (!excludes.endsWith(",")) [ FD ]
Line_75 $$ if (isJEEDeploymentEnabled()) -->Line_77 $$ if (tempWarDir.exists()) [ CD ]
Line_70 $$ if (!unpackWar) -->Line_99 $$ CopyTask.copyDirectory(srcFile, deployDir, StringPool.BLANK, excludes, overwrite, true)[ CD ]
Line_73 $$ excludes += "/WEB-INF/web.xml"-->Line_98 $$ excludes += "**/WEB-INF/web.xml"[ FD ]
Line_70 $$ if (!unpackWar) -->Line_72 $$ File tempDir = tempDirPath.toFile()[ CD ]
Line_75 $$ if (isJEEDeploymentEnabled()) -->Line_91 $$ if (tempDir.isDirectory()) [ CD ]
Line_76 $$ File tempWarDir = new File(tempDir.getParent(), deployDir.getName())-->Line_84 $$ deploymentHandler.deploy(tempWarDir, displayName)[ FD ]
Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"-->Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_18 $$ File extLibPortalDir = new File(srcFile.getAbsolutePath() + "/WEB-INF/ext-lib/portal")[ CD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_4 $$ mergeDirectory(mergeDir, srcFile)[ CD ]
Line_106 $$ if (appServerType.equals(ServerDetector.JETTY_ID)) -->Line_107 $$ DeployUtil.redeployJetty(displayName)[ CD ]
Line_102 $$ File deployWebXml = new File(deployDir + "/WEB-INF/web.xml")-->Line_103 $$ deployWebXml.setLastModified(System.currentTimeMillis() + (Time.SECOND * 6))[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_12 $$ updateWebXml(webXml, srcFile, displayName, pluginPackage)[ CD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_19 $$ if (extLibPortalDir.exists()) [ CD ]
Line_27 $$ String excludes = StringPool.BLANK-->Line_98 $$ excludes += "**/WEB-INF/web.xml"[ FD ]
Line_18 $$ File extLibPortalDir = new File(srcFile.getAbsolutePath() + "/WEB-INF/ext-lib/portal")-->Line_21 $$ CopyTask.copyDirectory(extLibPortalDir, portalLibDir, "*.jar", StringPool.BLANK, overwrite, true)[ FD ]
Line_51 $$ if (properties != null) -->Line_52 $$ String deployExcludes = properties.getProperty("deploy-excludes")[ CD ]
Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"-->Line_33 $$ excludes += "**/WEB-INF/lib/" + lib + ","[ FD ]
Line_38 $$ if (content.contains(_PORTAL_CLASS_LOADER)) -->Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"[ CD ]
Line_30 $$ if (appServerType.equals(ServerDetector.TOMCAT_ID)) -->Line_36 $$ if (contextXml.exists()) [ CD ]
Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"-->Line_61 $$ excludes += deployExcludes.trim()[ FD ]
Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"-->Line_89 $$ WarTask.war(srcFile, deployDir, excludes, webXml)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_107 $$ DeployUtil.redeployJetty(displayName)[ FD ]
Line_33 $$ excludes += "**/WEB-INF/lib/" + lib + ","-->Line_55 $$ if (!excludes.endsWith(",")) [ FD ]
Line_72 $$ File tempDir = tempDirPath.toFile()-->Line_94 $$ tempDir.delete()[ FD ]
Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"-->Line_54 $$ excludes += deployExcludes.trim()[ FD ]
Line_73 $$ excludes += "/WEB-INF/web.xml"-->Line_89 $$ WarTask.war(srcFile, deployDir, excludes, webXml)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_5 $$ processPluginPackageProperties(srcFile, displayName, pluginPackage)[ CD ]
Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"-->Line_54 $$ excludes += deployExcludes.trim()[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_4 $$ mergeDirectory(mergeDir, srcFile)[ FD ]
Line_46 $$ excludes += "**/WEB-INF/lib/el-api.jar,"-->Line_89 $$ WarTask.war(srcFile, deployDir, excludes, webXml)[ FD ]
Line_52 $$ String deployExcludes = properties.getProperty("deploy-excludes")-->Line_59 $$ deployExcludes = properties.getProperty("deploy-excludes-" + appServerType)[ FD ]
Line_33 $$ excludes += "**/WEB-INF/lib/" + lib + ","-->Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_70 $$ if (!unpackWar) [ CD ]
Line_77 $$ if (tempWarDir.exists()) -->Line_78 $$ tempWarDir.delete()[ CD ]
Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"-->Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"[ FD ]
Line_14 $$ if (extLibGlobalDir.exists()) -->Line_15 $$ File globalLibDir = new File(PortalUtil.getGlobalLibDir())[ CD ]
Line_13 $$ File extLibGlobalDir = new File(srcFile.getAbsolutePath() + "/WEB-INF/ext-lib/global")-->Line_16 $$ CopyTask.copyDirectory(extLibGlobalDir, globalLibDir, "*.jar", StringPool.BLANK, overwrite, true)[ FD ]
Line_28 $$ if (appServerType.equals(ServerDetector.JBOSS_ID) || appServerType.equals(ServerDetector.WILDFLY_ID)) -->Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"[ CD ]
Line_33 $$ excludes += "**/WEB-INF/lib/" + lib + ","-->Line_56 $$ excludes += ","[ FD ]
Line_27 $$ String excludes = StringPool.BLANK-->Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"[ FD ]
Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"-->Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"[ FD ]
Line_52 $$ String deployExcludes = properties.getProperty("deploy-excludes")-->Line_60 $$ if (deployExcludes != null) [ FD ]
Line_91 $$ if (tempDir.isDirectory()) -->Line_92 $$ DeleteTask.deleteDirectory(tempDir)[ CD ]
Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"-->Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"[ FD ]
Line_54 $$ excludes += deployExcludes.trim()-->Line_56 $$ excludes += ","[ FD ]
Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"-->Line_62 $$ if (!excludes.endsWith(",")) [ FD ]
Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"-->Line_63 $$ excludes += ","[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_106 $$ if (appServerType.equals(ServerDetector.JETTY_ID)) [ CD ]
Line_63 $$ excludes += ","-->Line_99 $$ CopyTask.copyDirectory(srcFile, deployDir, StringPool.BLANK, excludes, overwrite, true)[ FD ]
Line_72 $$ File tempDir = tempDirPath.toFile()-->Line_81 $$ tempWarDir = tempDir[ FD ]
Line_52 $$ String deployExcludes = properties.getProperty("deploy-excludes")-->Line_53 $$ if (deployExcludes != null) [ FD ]
Line_52 $$ String deployExcludes = properties.getProperty("deploy-excludes")-->Line_54 $$ excludes += deployExcludes.trim()[ FD ]
Line_88 $$ if (!tempDir.renameTo(deployDir)) -->Line_89 $$ WarTask.war(srcFile, deployDir, excludes, webXml)[ CD ]
Line_51 $$ if (properties != null) -->Line_60 $$ if (deployExcludes != null) [ CD ]
Line_23 $$ if ((deployDir == null) || baseDir.equals(destDir)) -->Line_24 $$ return[ CD ]
Line_56 $$ excludes += ","-->Line_63 $$ excludes += ","[ FD ]
Line_46 $$ excludes += "**/WEB-INF/lib/el-api.jar,"-->Line_54 $$ excludes += deployExcludes.trim()[ FD ]
Line_70 $$ if (!unpackWar) -->Line_75 $$ if (isJEEDeploymentEnabled()) [ CD ]
Line_81 $$ tempWarDir = tempDir-->Line_86 $$ DeleteTask.deleteDirectory(tempWarDir)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_12 $$ updateWebXml(webXml, srcFile, displayName, pluginPackage)[ FD ]
Line_54 $$ excludes += deployExcludes.trim()-->Line_98 $$ excludes += "**/WEB-INF/web.xml"[ FD ]
Line_51 $$ if (properties != null) -->Line_59 $$ deployExcludes = properties.getProperty("deploy-excludes-" + appServerType)[ CD ]
Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"-->Line_89 $$ WarTask.war(srcFile, deployDir, excludes, webXml)[ FD ]
Line_61 $$ excludes += deployExcludes.trim()-->Line_62 $$ if (!excludes.endsWith(",")) [ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_9 $$ copyXmls(srcFile, displayName, pluginPackage)[ CD ]
Line_30 $$ if (appServerType.equals(ServerDetector.TOMCAT_ID)) -->Line_35 $$ File contextXml = new File(srcFile + "/META-INF/context.xml")[ CD ]
Line_54 $$ excludes += deployExcludes.trim()-->Line_61 $$ excludes += deployExcludes.trim()[ FD ]
Line_80 $$ if (!tempDir.renameTo(tempWarDir)) -->Line_81 $$ tempWarDir = tempDir[ CD ]
Line_35 $$ File contextXml = new File(srcFile + "/META-INF/context.xml")-->Line_36 $$ if (contextXml.exists()) [ FD ]
Line_54 $$ excludes += deployExcludes.trim()-->Line_55 $$ if (!excludes.endsWith(",")) [ FD ]
Line_70 $$ if (!unpackWar) -->Line_98 $$ excludes += "**/WEB-INF/web.xml"[ CD ]
Line_33 $$ excludes += "**/WEB-INF/lib/" + lib + ","-->Line_63 $$ excludes += ","[ FD ]
Line_33 $$ excludes += "**/WEB-INF/lib/" + lib + ","-->Line_61 $$ excludes += deployExcludes.trim()[ FD ]
Line_46 $$ excludes += "**/WEB-INF/lib/el-api.jar,"-->Line_55 $$ if (!excludes.endsWith(",")) [ FD ]
Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"-->Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"[ FD ]
Line_61 $$ excludes += deployExcludes.trim()-->Line_89 $$ WarTask.war(srcFile, deployDir, excludes, webXml)[ FD ]
Line_59 $$ deployExcludes = properties.getProperty("deploy-excludes-" + appServerType)-->Line_61 $$ excludes += deployExcludes.trim()[ FD ]
Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"-->Line_89 $$ WarTask.war(srcFile, deployDir, excludes, webXml)[ FD ]
Line_56 $$ excludes += ","-->Line_62 $$ if (!excludes.endsWith(",")) [ FD ]
Line_98 $$ excludes += "**/WEB-INF/web.xml"-->Line_99 $$ CopyTask.copyDirectory(srcFile, deployDir, StringPool.BLANK, excludes, overwrite, true)[ FD ]
Line_35 $$ File contextXml = new File(srcFile + "/META-INF/context.xml")-->Line_37 $$ String content = FileUtil.read(contextXml)[ FD ]
Line_33 $$ excludes += "**/WEB-INF/lib/" + lib + ","-->Line_98 $$ excludes += "**/WEB-INF/web.xml"[ FD ]
Line_63 $$ excludes += ","-->Line_73 $$ excludes += "/WEB-INF/web.xml"[ FD ]
Line_14 $$ if (extLibGlobalDir.exists()) -->Line_16 $$ CopyTask.copyDirectory(extLibGlobalDir, globalLibDir, "*.jar", StringPool.BLANK, overwrite, true)[ CD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_74 $$ WarTask.war(srcFile, tempDir, excludes, webXml)[ FD ]
Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"-->Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"[ FD ]
Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"-->Line_46 $$ excludes += "**/WEB-INF/lib/el-api.jar,"[ FD ]
Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"-->Line_61 $$ excludes += deployExcludes.trim()[ FD ]
Line_72 $$ File tempDir = tempDirPath.toFile()-->Line_88 $$ if (!tempDir.renameTo(deployDir)) [ FD ]
Line_56 $$ excludes += ","-->Line_73 $$ excludes += "/WEB-INF/web.xml"[ FD ]
Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"-->Line_56 $$ excludes += ","[ FD ]
Line_54 $$ excludes += deployExcludes.trim()-->Line_63 $$ excludes += ","[ FD ]
Line_46 $$ excludes += "**/WEB-INF/lib/el-api.jar,"-->Line_62 $$ if (!excludes.endsWith(",")) [ FD ]
Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"-->Line_46 $$ excludes += "**/WEB-INF/lib/el-api.jar,"[ FD ]
Line_27 $$ String excludes = StringPool.BLANK-->Line_99 $$ CopyTask.copyDirectory(srcFile, deployDir, StringPool.BLANK, excludes, overwrite, true)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_99 $$ CopyTask.copyDirectory(srcFile, deployDir, StringPool.BLANK, excludes, overwrite, true)[ FD ]
Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"-->Line_56 $$ excludes += ","[ FD ]
Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"-->Line_63 $$ excludes += ","[ FD ]
Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"-->Line_56 $$ excludes += ","[ FD ]
Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"-->Line_73 $$ excludes += "/WEB-INF/web.xml"[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_18 $$ File extLibPortalDir = new File(srcFile.getAbsolutePath() + "/WEB-INF/ext-lib/portal")[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_13 $$ File extLibGlobalDir = new File(srcFile.getAbsolutePath() + "/WEB-INF/ext-lib/global")[ CD ]
Line_63 $$ excludes += ","-->Line_74 $$ WarTask.war(srcFile, tempDir, excludes, webXml)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_7 $$ copyProperties(srcFile, pluginPackage)[ FD ]
Line_56 $$ excludes += ","-->Line_99 $$ CopyTask.copyDirectory(srcFile, deployDir, StringPool.BLANK, excludes, overwrite, true)[ FD ]
Line_72 $$ File tempDir = tempDirPath.toFile()-->Line_74 $$ WarTask.war(srcFile, tempDir, excludes, webXml)[ FD ]
Line_70 $$ if (!unpackWar) -->Line_73 $$ excludes += "/WEB-INF/web.xml"[ CD ]
Line_52 $$ String deployExcludes = properties.getProperty("deploy-excludes")-->Line_61 $$ excludes += deployExcludes.trim()[ FD ]
Line_61 $$ excludes += deployExcludes.trim()-->Line_63 $$ excludes += ","[ FD ]
Line_83 $$ DeploymentHandler deploymentHandler = getDeploymentHandler()-->Line_84 $$ deploymentHandler.deploy(tempWarDir, displayName)[ FD ]
Line_81 $$ tempWarDir = tempDir-->Line_84 $$ deploymentHandler.deploy(tempWarDir, displayName)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_76 $$ File tempWarDir = new File(tempDir.getParent(), deployDir.getName())[ FD ]
Line_53 $$ if (deployExcludes != null) -->Line_55 $$ if (!excludes.endsWith(",")) [ CD ]
Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"-->Line_46 $$ excludes += "**/WEB-INF/lib/el-api.jar,"[ FD ]
Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"-->Line_61 $$ excludes += deployExcludes.trim()[ FD ]
Line_54 $$ excludes += deployExcludes.trim()-->Line_62 $$ if (!excludes.endsWith(",")) [ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_3 $$ rewriteFiles(srcFile)[ CD ]
Line_70 $$ if (!unpackWar) -->Line_74 $$ WarTask.war(srcFile, tempDir, excludes, webXml)[ CD ]
Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"-->Line_54 $$ excludes += deployExcludes.trim()[ FD ]
Line_76 $$ File tempWarDir = new File(tempDir.getParent(), deployDir.getName())-->Line_80 $$ if (!tempDir.renameTo(tempWarDir)) [ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_16 $$ CopyTask.copyDirectory(extLibGlobalDir, globalLibDir, "*.jar", StringPool.BLANK, overwrite, true)[ FD ]
Line_56 $$ excludes += ","-->Line_98 $$ excludes += "**/WEB-INF/web.xml"[ FD ]
Line_27 $$ String excludes = StringPool.BLANK-->Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"[ FD ]
Line_73 $$ excludes += "/WEB-INF/web.xml"-->Line_74 $$ WarTask.war(srcFile, tempDir, excludes, webXml)[ FD ]
Line_55 $$ if (!excludes.endsWith(",")) -->Line_56 $$ excludes += ","[ CD ]
Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"-->Line_61 $$ excludes += deployExcludes.trim()[ FD ]
Line_28 $$ if (appServerType.equals(ServerDetector.JBOSS_ID) || appServerType.equals(ServerDetector.WILDFLY_ID)) -->Line_30 $$ if (appServerType.equals(ServerDetector.TOMCAT_ID)) [ CD ]
Line_75 $$ if (isJEEDeploymentEnabled()) -->Line_83 $$ DeploymentHandler deploymentHandler = getDeploymentHandler()[ CD ]
Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"-->Line_62 $$ if (!excludes.endsWith(",")) [ FD ]
Line_18 $$ File extLibPortalDir = new File(srcFile.getAbsolutePath() + "/WEB-INF/ext-lib/portal")-->Line_19 $$ if (extLibPortalDir.exists()) [ FD ]
Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"-->Line_98 $$ excludes += "**/WEB-INF/web.xml"[ FD ]
Line_72 $$ File tempDir = tempDirPath.toFile()-->Line_92 $$ DeleteTask.deleteDirectory(tempDir)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_8 $$ copyTlds(srcFile, pluginPackage)[ FD ]
Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"-->Line_73 $$ excludes += "/WEB-INF/web.xml"[ FD ]
Line_19 $$ if (extLibPortalDir.exists()) -->Line_20 $$ File portalLibDir = new File(PortalUtil.getPortalLibDir())[ CD ]
Line_11 $$ File webXml = new File(srcFile + "/WEB-INF/web.xml")-->Line_89 $$ WarTask.war(srcFile, deployDir, excludes, webXml)[ FD ]
Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"-->Line_98 $$ excludes += "**/WEB-INF/web.xml"[ FD ]
Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"-->Line_99 $$ CopyTask.copyDirectory(srcFile, deployDir, StringPool.BLANK, excludes, overwrite, true)[ FD ]
Line_27 $$ String excludes = StringPool.BLANK-->Line_54 $$ excludes += deployExcludes.trim()[ FD ]
Line_37 $$ String content = FileUtil.read(contextXml)-->Line_38 $$ if (content.contains(_PORTAL_CLASS_LOADER)) [ FD ]
Line_72 $$ File tempDir = tempDirPath.toFile()-->Line_76 $$ File tempWarDir = new File(tempDir.getParent(), deployDir.getName())[ FD ]
Line_67 $$ if (_log.isDebugEnabled()) -->Line_68 $$ _log.debug("Excludes " + excludes)[ CD ]
Line_33 $$ excludes += "**/WEB-INF/lib/" + lib + ","-->Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"[ FD ]
Line_59 $$ deployExcludes = properties.getProperty("deploy-excludes-" + appServerType)-->Line_60 $$ if (deployExcludes != null) [ FD ]
Line_27 $$ String excludes = StringPool.BLANK-->Line_63 $$ excludes += ","[ FD ]
Line_51 $$ if (properties != null) -->Line_53 $$ if (deployExcludes != null) [ CD ]
Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"-->Line_55 $$ if (!excludes.endsWith(",")) [ FD ]
Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"-->Line_55 $$ if (!excludes.endsWith(",")) [ FD ]
Line_33 $$ excludes += "**/WEB-INF/lib/" + lib + ","-->Line_74 $$ WarTask.war(srcFile, tempDir, excludes, webXml)[ FD ]
Line_73 $$ excludes += "/WEB-INF/web.xml"-->Line_99 $$ CopyTask.copyDirectory(srcFile, deployDir, StringPool.BLANK, excludes, overwrite, true)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_10 $$ copyPortalDependencies(srcFile)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_11 $$ File webXml = new File(srcFile + "/WEB-INF/web.xml")[ CD ]
Line_61 $$ excludes += deployExcludes.trim()-->Line_74 $$ WarTask.war(srcFile, tempDir, excludes, webXml)[ FD ]
Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"-->Line_99 $$ CopyTask.copyDirectory(srcFile, deployDir, StringPool.BLANK, excludes, overwrite, true)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_6 $$ copyJars(srcFile, pluginPackage)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_23 $$ if ((deployDir == null) || baseDir.equals(destDir)) [ CD ]
Line_76 $$ File tempWarDir = new File(tempDir.getParent(), deployDir.getName())-->Line_77 $$ if (tempWarDir.exists()) [ FD ]
Line_61 $$ excludes += deployExcludes.trim()-->Line_73 $$ excludes += "/WEB-INF/web.xml"[ FD ]
Line_54 $$ excludes += deployExcludes.trim()-->Line_89 $$ WarTask.war(srcFile, deployDir, excludes, webXml)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_26 $$ updateDeployDirectory(srcFile)[ FD ]
Line_33 $$ excludes += "**/WEB-INF/lib/" + lib + ","-->Line_99 $$ CopyTask.copyDirectory(srcFile, deployDir, StringPool.BLANK, excludes, overwrite, true)[ FD ]
Line_11 $$ File webXml = new File(srcFile + "/WEB-INF/web.xml")-->Line_12 $$ updateWebXml(webXml, srcFile, displayName, pluginPackage)[ FD ]
Line_60 $$ if (deployExcludes != null) -->Line_62 $$ if (!excludes.endsWith(",")) [ CD ]
Line_76 $$ File tempWarDir = new File(tempDir.getParent(), deployDir.getName())-->Line_81 $$ tempWarDir = tempDir[ FD ]
Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"-->Line_73 $$ excludes += "/WEB-INF/web.xml"[ FD ]
Line_71 $$ Path tempDirPath = Files.createTempDirectory(Paths.get(SystemProperties.get(SystemProperties.TMP_DIR)), null)-->Line_72 $$ File tempDir = tempDirPath.toFile()[ FD ]
Line_75 $$ if (isJEEDeploymentEnabled()) -->Line_80 $$ if (!tempDir.renameTo(tempWarDir)) [ CD ]
Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"-->Line_55 $$ if (!excludes.endsWith(",")) [ FD ]
Line_72 $$ File tempDir = tempDirPath.toFile()-->Line_91 $$ if (tempDir.isDirectory()) [ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_6 $$ copyJars(srcFile, pluginPackage)[ CD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_26 $$ updateDeployDirectory(srcFile)[ CD ]
Line_70 $$ if (!unpackWar) -->Line_71 $$ Path tempDirPath = Files.createTempDirectory(Paths.get(SystemProperties.get(SystemProperties.TMP_DIR)), null)[ CD ]
Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"-->Line_46 $$ excludes += "**/WEB-INF/lib/el-api.jar,"[ FD ]
Line_27 $$ String excludes = StringPool.BLANK-->Line_74 $$ WarTask.war(srcFile, tempDir, excludes, webXml)[ FD ]
Line_29 $$ excludes += "**/WEB-INF/lib/log4j.jar,"-->Line_74 $$ WarTask.war(srcFile, tempDir, excludes, webXml)[ FD ]
Line_36 $$ if (contextXml.exists()) -->Line_37 $$ String content = FileUtil.read(contextXml)[ CD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_50 $$ Properties properties = getPluginPackageProperties(srcFile)[ FD ]
Line_46 $$ excludes += "**/WEB-INF/lib/el-api.jar,"-->Line_61 $$ excludes += deployExcludes.trim()[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_84 $$ deploymentHandler.deploy(tempWarDir, displayName)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_88 $$ if (!tempDir.renameTo(deployDir)) [ FD ]
Line_63 $$ excludes += ","-->Line_89 $$ WarTask.war(srcFile, deployDir, excludes, webXml)[ FD ]
Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"-->Line_62 $$ if (!excludes.endsWith(",")) [ FD ]
Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"-->Line_54 $$ excludes += deployExcludes.trim()[ FD ]
Line_60 $$ if (deployExcludes != null) -->Line_61 $$ excludes += deployExcludes.trim()[ CD ]
Line_53 $$ if (deployExcludes != null) -->Line_54 $$ excludes += deployExcludes.trim()[ CD ]
Line_41 $$ excludes += "**/WEB-INF/lib/util-taglib.jar,"-->Line_74 $$ WarTask.war(srcFile, tempDir, excludes, webXml)[ FD ]
Line_27 $$ String excludes = StringPool.BLANK-->Line_89 $$ WarTask.war(srcFile, deployDir, excludes, webXml)[ FD ]
Line_101 $$ if (appServerType.equals(ServerDetector.TOMCAT_ID)) -->Line_102 $$ File deployWebXml = new File(deployDir + "/WEB-INF/web.xml")[ CD ]
Line_72 $$ File tempDir = tempDirPath.toFile()-->Line_80 $$ if (!tempDir.renameTo(tempWarDir)) [ FD ]
Line_50 $$ Properties properties = getPluginPackageProperties(srcFile)-->Line_52 $$ String deployExcludes = properties.getProperty("deploy-excludes")[ FD ]
Line_75 $$ if (isJEEDeploymentEnabled()) -->Line_88 $$ if (!tempDir.renameTo(deployDir)) [ CD ]
Line_27 $$ String excludes = StringPool.BLANK-->Line_56 $$ excludes += ","[ FD ]
Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"-->Line_89 $$ WarTask.war(srcFile, deployDir, excludes, webXml)[ FD ]
Line_36 $$ if (contextXml.exists()) -->Line_38 $$ if (content.contains(_PORTAL_CLASS_LOADER)) [ CD ]
Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"-->Line_99 $$ CopyTask.copyDirectory(srcFile, deployDir, StringPool.BLANK, excludes, overwrite, true)[ FD ]
Line_27 $$ String excludes = StringPool.BLANK-->Line_46 $$ excludes += "**/WEB-INF/lib/el-api.jar,"[ FD ]
Line_27 $$ String excludes = StringPool.BLANK-->Line_33 $$ excludes += "**/WEB-INF/lib/" + lib + ","[ FD ]
Line_27 $$ String excludes = StringPool.BLANK-->Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"[ FD ]
Line_39 $$ excludes += "**/WEB-INF/lib/util-bridges.jar,"-->Line_63 $$ excludes += ","[ FD ]
Line_83 $$ DeploymentHandler deploymentHandler = getDeploymentHandler()-->Line_85 $$ deploymentHandler.releaseDeploymentManager()[ FD ]
Line_62 $$ if (!excludes.endsWith(",")) -->Line_63 $$ excludes += ","[ CD ]
Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"-->Line_73 $$ excludes += "/WEB-INF/web.xml"[ FD ]
Line_56 $$ excludes += ","-->Line_74 $$ WarTask.war(srcFile, tempDir, excludes, webXml)[ FD ]
Line_46 $$ excludes += "**/WEB-INF/lib/el-api.jar,"-->Line_63 $$ excludes += ","[ FD ]
Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"-->Line_99 $$ CopyTask.copyDirectory(srcFile, deployDir, StringPool.BLANK, excludes, overwrite, true)[ FD ]
Line_19 $$ if (extLibPortalDir.exists()) -->Line_21 $$ CopyTask.copyDirectory(extLibPortalDir, portalLibDir, "*.jar", StringPool.BLANK, overwrite, true)[ CD ]
Line_76 $$ File tempWarDir = new File(tempDir.getParent(), deployDir.getName())-->Line_86 $$ DeleteTask.deleteDirectory(tempWarDir)[ FD ]
Line_50 $$ Properties properties = getPluginPackageProperties(srcFile)-->Line_59 $$ deployExcludes = properties.getProperty("deploy-excludes-" + appServerType)[ FD ]
Line_61 $$ excludes += deployExcludes.trim()-->Line_98 $$ excludes += "**/WEB-INF/web.xml"[ FD ]
Line_56 $$ excludes += ","-->Line_61 $$ excludes += deployExcludes.trim()[ FD ]
Line_40 $$ excludes += "**/WEB-INF/lib/util-java.jar,"-->Line_74 $$ WarTask.war(srcFile, tempDir, excludes, webXml)[ FD ]
Line_46 $$ excludes += "**/WEB-INF/lib/el-api.jar,"-->Line_99 $$ CopyTask.copyDirectory(srcFile, deployDir, StringPool.BLANK, excludes, overwrite, true)[ FD ]
Line_61 $$ excludes += deployExcludes.trim()-->Line_99 $$ CopyTask.copyDirectory(srcFile, deployDir, StringPool.BLANK, excludes, overwrite, true)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_5 $$ processPluginPackageProperties(srcFile, displayName, pluginPackage)[ FD ]
Line_33 $$ excludes += "**/WEB-INF/lib/" + lib + ","-->Line_54 $$ excludes += deployExcludes.trim()[ FD ]
Line_54 $$ excludes += deployExcludes.trim()-->Line_74 $$ WarTask.war(srcFile, tempDir, excludes, webXml)[ FD ]
Line_2 $$ public void deployDirectory(File srcFile, File mergeDir, File deployDir, String displayName, boolean overwrite, PluginPackage pluginPackage) throws Exception -->Line_50 $$ Properties properties = getPluginPackageProperties(srcFile)[ CD ]
Line_27 $$ String excludes = StringPool.BLANK-->Line_61 $$ excludes += deployExcludes.trim()[ FD ]
