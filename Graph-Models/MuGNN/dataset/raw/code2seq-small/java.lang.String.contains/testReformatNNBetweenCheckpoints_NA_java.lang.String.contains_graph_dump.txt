Line_9 $$ int origPort = cluster.getNameNodePort()-->Line_22 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).nameNodePort(origPort).nameNodeHttpPort(origHttpPort).format(true).build()[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).format(true).build()-->Line_9 $$ int origPort = cluster.getNameNodePort()[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).format(true).build()[ FD ]
Line_14 $$ secondary = startSecondaryNameNode(snnConf)-->Line_15 $$ secondary.doCheckpoint()[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_34 $$ cluster = null[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_17 $$ cluster = null[ FD ]
Line_4 $$ SecondaryNameNode secondary = null-->Line_31 $$ cleanup(secondary)[ FD ]
Line_10 $$ int origHttpPort = cluster.getNameNode().getHttpAddress().getPort()-->Line_22 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).nameNodePort(origPort).nameNodeHttpPort(origHttpPort).format(true).build()[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_9 $$ int origPort = cluster.getNameNodePort()[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).format(true).build()-->Line_16 $$ cluster.shutdown()[ FD ]
Line_11 $$ Configuration snnConf = new Configuration(conf)-->Line_14 $$ secondary = startSecondaryNameNode(snnConf)[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_33 $$ cleanup(cluster)[ FD ]
Line_5 $$ Configuration conf = new HdfsConfiguration()-->Line_6 $$ conf.setInt(CommonConfigurationKeysPublic.IPC_CLIENT_CONNECTION_MAXIDLETIME_KEY, 1)[ FD ]
Line_14 $$ secondary = startSecondaryNameNode(snnConf)-->Line_31 $$ cleanup(secondary)[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).format(true).build()-->Line_22 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).nameNodePort(origPort).nameNodeHttpPort(origHttpPort).format(true).build()[ FD ]
Line_22 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).nameNodePort(origPort).nameNodeHttpPort(origHttpPort).format(true).build()-->Line_34 $$ cluster = null[ FD ]
Line_14 $$ secondary = startSecondaryNameNode(snnConf)-->Line_24 $$ secondary.doCheckpoint()[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_16 $$ cluster.shutdown()[ FD ]
Line_22 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).nameNodePort(origPort).nameNodeHttpPort(origHttpPort).format(true).build()-->Line_33 $$ cleanup(cluster)[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).format(true).build()-->Line_34 $$ cluster = null[ FD ]
Line_4 $$ SecondaryNameNode secondary = null-->Line_15 $$ secondary.doCheckpoint()[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_10 $$ int origHttpPort = cluster.getNameNode().getHttpAddress().getPort()[ FD ]
Line_4 $$ SecondaryNameNode secondary = null-->Line_14 $$ secondary = startSecondaryNameNode(snnConf)[ FD ]
Line_17 $$ cluster = null-->Line_33 $$ cleanup(cluster)[ FD ]
Line_2 $$ public void testReformatNNBetweenCheckpoints() throws IOException -->Line_4 $$ SecondaryNameNode secondary = null[ CD ]
Line_17 $$ cluster = null-->Line_34 $$ cluster = null[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_22 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).nameNodePort(origPort).nameNodeHttpPort(origHttpPort).format(true).build()[ FD ]
Line_4 $$ SecondaryNameNode secondary = null-->Line_24 $$ secondary.doCheckpoint()[ FD ]
Line_2 $$ public void testReformatNNBetweenCheckpoints() throws IOException -->Line_3 $$ MiniDFSCluster cluster = null[ CD ]
Line_11 $$ Configuration snnConf = new Configuration(conf)-->Line_13 $$ snnConf.set(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_DIR_KEY, checkpointDir.getAbsolutePath())[ FD ]
Line_4 $$ SecondaryNameNode secondary = null-->Line_32 $$ secondary = null[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).format(true).build()-->Line_10 $$ int origHttpPort = cluster.getNameNode().getHttpAddress().getPort()[ FD ]
Line_14 $$ secondary = startSecondaryNameNode(snnConf)-->Line_32 $$ secondary = null[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).format(true).build()-->Line_17 $$ cluster = null[ FD ]
Line_2 $$ public void testReformatNNBetweenCheckpoints() throws IOException -->Line_5 $$ Configuration conf = new HdfsConfiguration()[ CD ]
Line_17 $$ cluster = null-->Line_22 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).nameNodePort(origPort).nameNodeHttpPort(origHttpPort).format(true).build()[ FD ]
Line_2 $$ public void testReformatNNBetweenCheckpoints() throws IOException -->Line_6 $$ conf.setInt(CommonConfigurationKeysPublic.IPC_CLIENT_CONNECTION_MAXIDLETIME_KEY, 1)[ CD ]
Line_12 $$ File checkpointDir = new File(MiniDFSCluster.getBaseDirectory(), "namesecondary")-->Line_13 $$ snnConf.set(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_DIR_KEY, checkpointDir.getAbsolutePath())[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(0).format(true).build()-->Line_33 $$ cleanup(cluster)[ FD ]
