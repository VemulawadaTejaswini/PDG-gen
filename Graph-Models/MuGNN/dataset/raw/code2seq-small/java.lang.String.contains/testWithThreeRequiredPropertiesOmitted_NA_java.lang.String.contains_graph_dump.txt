Line_4 $$ DefaultListableBeanFactory factory = new DefaultListableBeanFactory()-->Line_7 $$ factory.addBeanPostProcessor(new RequiredAnnotationBeanPostProcessor())[ FD ]
Line_11 $$ String message = ex.getCause().getMessage()-->Line_12 $$ assertTrue(message.contains("Properties"))[ FD ]
Line_11 $$ String message = ex.getCause().getMessage()-->Line_16 $$ assertTrue(message.contains("testBean"))[ FD ]
Line_11 $$ String message = ex.getCause().getMessage()-->Line_13 $$ assertTrue(message.contains("age"))[ FD ]
Line_5 $$ BeanDefinition beanDef = BeanDefinitionBuilder.genericBeanDefinition(RequiredTestBean.class).addPropertyValue("name", "Rob Harrop").getBeanDefinition()-->Line_6 $$ factory.registerBeanDefinition("testBean", beanDef)[ FD ]
Line_4 $$ DefaultListableBeanFactory factory = new DefaultListableBeanFactory()-->Line_6 $$ factory.registerBeanDefinition("testBean", beanDef)[ FD ]
Line_11 $$ String message = ex.getCause().getMessage()-->Line_15 $$ assertTrue(message.contains("jobTitle"))[ FD ]
Line_11 $$ String message = ex.getCause().getMessage()-->Line_14 $$ assertTrue(message.contains("favouriteColour"))[ FD ]
Line_4 $$ DefaultListableBeanFactory factory = new DefaultListableBeanFactory()-->Line_8 $$ factory.preInstantiateSingletons()[ FD ]
