Line_5 $$ if (nameWithoutExtension.endsWith(".answer") || name.contains(EduNames.WINDOWS_POSTFIX) || name.contains(".idea") || FileUtil.filesEqual(pathname, zipFile)) -->Line_6 $$ return false[ CD ]
Line_2 $$ public boolean accept(File pathname) -->Line_3 $$ String name = pathname.getName()[ FD ]
Line_2 $$ public boolean accept(File pathname) -->Line_5 $$ if (nameWithoutExtension.endsWith(".answer") || name.contains(EduNames.WINDOWS_POSTFIX) || name.contains(".idea") || FileUtil.filesEqual(pathname, zipFile)) [ FD ]
Line_2 $$ public boolean accept(File pathname) -->Line_8 $$ return manager != null && !manager.doNotPackFile(pathname)[ FD ]
Line_2 $$ public boolean accept(File pathname) -->Line_3 $$ String name = pathname.getName()[ CD ]
Line_2 $$ public boolean accept(File pathname) -->Line_8 $$ return manager != null && !manager.doNotPackFile(pathname)[ CD ]
Line_3 $$ String name = pathname.getName()-->Line_5 $$ if (nameWithoutExtension.endsWith(".answer") || name.contains(EduNames.WINDOWS_POSTFIX) || name.contains(".idea") || FileUtil.filesEqual(pathname, zipFile)) [ FD ]
Line_4 $$ String nameWithoutExtension = FileUtil.getNameWithoutExtension(pathname)-->Line_5 $$ if (nameWithoutExtension.endsWith(".answer") || name.contains(EduNames.WINDOWS_POSTFIX) || name.contains(".idea") || FileUtil.filesEqual(pathname, zipFile)) [ FD ]
Line_2 $$ public boolean accept(File pathname) -->Line_4 $$ String nameWithoutExtension = FileUtil.getNameWithoutExtension(pathname)[ CD ]
Line_2 $$ public boolean accept(File pathname) -->Line_5 $$ if (nameWithoutExtension.endsWith(".answer") || name.contains(EduNames.WINDOWS_POSTFIX) || name.contains(".idea") || FileUtil.filesEqual(pathname, zipFile)) [ CD ]
Line_2 $$ public boolean accept(File pathname) -->Line_4 $$ String nameWithoutExtension = FileUtil.getNameWithoutExtension(pathname)[ FD ]
