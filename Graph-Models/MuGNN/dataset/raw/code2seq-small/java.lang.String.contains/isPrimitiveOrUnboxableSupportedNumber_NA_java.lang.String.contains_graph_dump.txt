Line_2 $$ public static boolean isPrimitiveOrUnboxableSupportedNumber(String descriptor) -->Line_9 $$ if (descriptor.startsWith("Ljava/lang/")) [ CD ]
Line_2 $$ public static boolean isPrimitiveOrUnboxableSupportedNumber(String descriptor) -->Line_3 $$ if (descriptor == null) [ CD ]
Line_6 $$ if (descriptor.length() == 1) -->Line_7 $$ return "DFIJ".contains(descriptor)[ CD ]
Line_9 $$ if (descriptor.startsWith("Ljava/lang/")) -->Line_11 $$ if (name.equals("Double") || name.equals("Float") || name.equals("Integer") || name.equals("Long")) [ CD ]
Line_10 $$ String name = descriptor.substring("Ljava/lang/".length())-->Line_11 $$ if (name.equals("Double") || name.equals("Float") || name.equals("Integer") || name.equals("Long")) [ FD ]
Line_3 $$ if (descriptor == null) -->Line_4 $$ return false[ CD ]
Line_2 $$ public static boolean isPrimitiveOrUnboxableSupportedNumber(String descriptor) -->Line_3 $$ if (descriptor == null) [ FD ]
Line_2 $$ public static boolean isPrimitiveOrUnboxableSupportedNumber(String descriptor) -->Line_10 $$ String name = descriptor.substring("Ljava/lang/".length())[ FD ]
Line_11 $$ if (name.equals("Double") || name.equals("Float") || name.equals("Integer") || name.equals("Long")) -->Line_12 $$ return true[ CD ]
Line_2 $$ public static boolean isPrimitiveOrUnboxableSupportedNumber(String descriptor) -->Line_6 $$ if (descriptor.length() == 1) [ CD ]
Line_9 $$ if (descriptor.startsWith("Ljava/lang/")) -->Line_10 $$ String name = descriptor.substring("Ljava/lang/".length())[ CD ]
Line_2 $$ public static boolean isPrimitiveOrUnboxableSupportedNumber(String descriptor) -->Line_6 $$ if (descriptor.length() == 1) [ FD ]
Line_2 $$ public static boolean isPrimitiveOrUnboxableSupportedNumber(String descriptor) -->Line_7 $$ return "DFIJ".contains(descriptor)[ FD ]
Line_2 $$ public static boolean isPrimitiveOrUnboxableSupportedNumber(String descriptor) -->Line_15 $$ return false[ CD ]
Line_2 $$ public static boolean isPrimitiveOrUnboxableSupportedNumber(String descriptor) -->Line_9 $$ if (descriptor.startsWith("Ljava/lang/")) [ FD ]
