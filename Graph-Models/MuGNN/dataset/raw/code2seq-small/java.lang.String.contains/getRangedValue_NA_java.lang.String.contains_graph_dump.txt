Line_3 $$ if ("iuf".contains(type)) -->Line_5 $$ if ("b".equals(type)) [ CD ]
Line_2 $$ public static double getRangedValue(String value, String type, double min, double max, String complexMax, String complexMin) -->Line_4 $$ return (Double.parseDouble(value) - min) / (max - min)[ FD ]
Line_2 $$ public static double getRangedValue(String value, String type, double min, double max, String complexMax, String complexMin) -->Line_7 $$ if ("c".equals(type)) [ FD ]
Line_5 $$ if ("b".equals(type)) -->Line_6 $$ return value.equals("True") ? 1 : 0[ CD ]
Line_5 $$ if ("b".equals(type)) -->Line_7 $$ if ("c".equals(type)) [ CD ]
Line_2 $$ public static double getRangedValue(String value, String type, double min, double max, String complexMax, String complexMin) -->Line_8 $$ return getComplexRangedValue(value, complexMax, complexMin)[ FD ]
Line_3 $$ if ("iuf".contains(type)) -->Line_4 $$ return (Double.parseDouble(value) - min) / (max - min)[ CD ]
Line_2 $$ public static double getRangedValue(String value, String type, double min, double max, String complexMax, String complexMin) -->Line_3 $$ if ("iuf".contains(type)) [ FD ]
Line_2 $$ public static double getRangedValue(String value, String type, double min, double max, String complexMax, String complexMin) -->Line_5 $$ if ("b".equals(type)) [ FD ]
Line_2 $$ public static double getRangedValue(String value, String type, double min, double max, String complexMax, String complexMin) -->Line_3 $$ if ("iuf".contains(type)) [ CD ]
Line_2 $$ public static double getRangedValue(String value, String type, double min, double max, String complexMax, String complexMin) -->Line_10 $$ return 0[ CD ]
Line_7 $$ if ("c".equals(type)) -->Line_8 $$ return getComplexRangedValue(value, complexMax, complexMin)[ CD ]
Line_2 $$ public static double getRangedValue(String value, String type, double min, double max, String complexMax, String complexMin) -->Line_6 $$ return value.equals("True") ? 1 : 0[ FD ]
