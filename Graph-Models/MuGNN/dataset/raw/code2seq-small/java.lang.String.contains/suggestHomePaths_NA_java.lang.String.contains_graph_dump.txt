Line_2 $$ public Collection<String> suggestHomePaths() -->Line_16 $$ File root = parentFile != null ? parentFile.getParentFile() : null[ CD ]
Line_17 $$ String name = parentFile != null ? parentFile.getName() : ""-->Line_23 $$ anotherJavasFolder = new File(root, name.substring(0, name.length() - x86Suffix.length()))[ FD ]
Line_15 $$ File parentFile = javasFolder.getParentFile()-->Line_16 $$ File root = parentFile != null ? parentFile.getParentFile() : null[ FD ]
Line_19 $$ String x86Suffix = " (x86)"-->Line_23 $$ anotherJavasFolder = new File(root, name.substring(0, name.length() - x86Suffix.length()))[ FD ]
Line_12 $$ ArrayList<String> result = new ArrayList<String>()-->Line_14 $$ scanFolder(javasFolder, result)[ FD ]
Line_18 $$ if (name.contains("Program Files") && root != null) -->Line_22 $$ if (x86) [ CD ]
Line_18 $$ if (name.contains("Program Files") && root != null) -->Line_20 $$ boolean x86 = name.endsWith(x86Suffix) && name.length() > x86Suffix.length()[ CD ]
Line_21 $$ File anotherJavasFolder-->Line_23 $$ anotherJavasFolder = new File(root, name.substring(0, name.length() - x86Suffix.length()))[ FD ]
Line_17 $$ String name = parentFile != null ? parentFile.getName() : ""-->Line_18 $$ if (name.contains("Program Files") && root != null) [ FD ]
Line_6 $$ if (property == null)-->Line_7 $$ return Collections.emptyList()[ CD ]
Line_27 $$ if (anotherJavasFolder.isDirectory()) -->Line_28 $$ scanFolder(new File(anotherJavasFolder, javasFolder.getName()), result)[ CD ]
Line_2 $$ public Collection<String> suggestHomePaths() -->Line_3 $$ if (!SystemInfo.isWindows)[ CD ]
Line_13 $$ File javasFolder = javaHome.getParentFile()-->Line_28 $$ scanFolder(new File(anotherJavasFolder, javasFolder.getName()), result)[ FD ]
Line_25 $$ anotherJavasFolder = new File(root, name + x86Suffix)-->Line_27 $$ if (anotherJavasFolder.isDirectory()) [ FD ]
Line_21 $$ File anotherJavasFolder-->Line_25 $$ anotherJavasFolder = new File(root, name + x86Suffix)[ FD ]
Line_9 $$ if (javaHome == null || !javaHome.isDirectory() || javaHome.getParentFile() == null) -->Line_10 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public Collection<String> suggestHomePaths() -->Line_18 $$ if (name.contains("Program Files") && root != null) [ CD ]
Line_22 $$ if (x86) -->Line_23 $$ anotherJavasFolder = new File(root, name.substring(0, name.length() - x86Suffix.length()))[ CD ]
Line_12 $$ ArrayList<String> result = new ArrayList<String>()-->Line_28 $$ scanFolder(new File(anotherJavasFolder, javasFolder.getName()), result)[ FD ]
Line_2 $$ public Collection<String> suggestHomePaths() -->Line_5 $$ String property = System.getProperty("java.home")[ CD ]
Line_8 $$ File javaHome = new File(property).getParentFile()-->Line_9 $$ if (javaHome == null || !javaHome.isDirectory() || javaHome.getParentFile() == null) [ FD ]
Line_2 $$ public Collection<String> suggestHomePaths() -->Line_9 $$ if (javaHome == null || !javaHome.isDirectory() || javaHome.getParentFile() == null) [ CD ]
Line_19 $$ String x86Suffix = " (x86)"-->Line_20 $$ boolean x86 = name.endsWith(x86Suffix) && name.length() > x86Suffix.length()[ FD ]
Line_23 $$ anotherJavasFolder = new File(root, name.substring(0, name.length() - x86Suffix.length()))-->Line_25 $$ anotherJavasFolder = new File(root, name + x86Suffix)[ FD ]
Line_8 $$ File javaHome = new File(property).getParentFile()-->Line_13 $$ File javasFolder = javaHome.getParentFile()[ FD ]
Line_2 $$ public Collection<String> suggestHomePaths() -->Line_8 $$ File javaHome = new File(property).getParentFile()[ CD ]
Line_18 $$ if (name.contains("Program Files") && root != null) -->Line_21 $$ File anotherJavasFolder[ CD ]
Line_18 $$ if (name.contains("Program Files") && root != null) -->Line_27 $$ if (anotherJavasFolder.isDirectory()) [ CD ]
Line_3 $$ if (!SystemInfo.isWindows)-->Line_4 $$ return Collections.singletonList(suggestHomePath())[ CD ]
Line_5 $$ String property = System.getProperty("java.home")-->Line_6 $$ if (property == null)[ FD ]
Line_22 $$ if (x86) -->Line_25 $$ anotherJavasFolder = new File(root, name + x86Suffix)[ CD ]
Line_2 $$ public Collection<String> suggestHomePaths() -->Line_17 $$ String name = parentFile != null ? parentFile.getName() : ""[ CD ]
Line_2 $$ public Collection<String> suggestHomePaths() -->Line_14 $$ scanFolder(javasFolder, result)[ CD ]
Line_13 $$ File javasFolder = javaHome.getParentFile()-->Line_14 $$ scanFolder(javasFolder, result)[ FD ]
Line_2 $$ public Collection<String> suggestHomePaths() -->Line_6 $$ if (property == null)[ CD ]
Line_15 $$ File parentFile = javasFolder.getParentFile()-->Line_17 $$ String name = parentFile != null ? parentFile.getName() : ""[ FD ]
Line_2 $$ public Collection<String> suggestHomePaths() -->Line_13 $$ File javasFolder = javaHome.getParentFile()[ CD ]
Line_13 $$ File javasFolder = javaHome.getParentFile()-->Line_15 $$ File parentFile = javasFolder.getParentFile()[ FD ]
Line_2 $$ public Collection<String> suggestHomePaths() -->Line_12 $$ ArrayList<String> result = new ArrayList<String>()[ CD ]
Line_2 $$ public Collection<String> suggestHomePaths() -->Line_15 $$ File parentFile = javasFolder.getParentFile()[ CD ]
Line_17 $$ String name = parentFile != null ? parentFile.getName() : ""-->Line_20 $$ boolean x86 = name.endsWith(x86Suffix) && name.length() > x86Suffix.length()[ FD ]
Line_23 $$ anotherJavasFolder = new File(root, name.substring(0, name.length() - x86Suffix.length()))-->Line_27 $$ if (anotherJavasFolder.isDirectory()) [ FD ]
Line_18 $$ if (name.contains("Program Files") && root != null) -->Line_19 $$ String x86Suffix = " (x86)"[ CD ]
Line_21 $$ File anotherJavasFolder-->Line_27 $$ if (anotherJavasFolder.isDirectory()) [ FD ]
Line_2 $$ public Collection<String> suggestHomePaths() -->Line_31 $$ return result[ CD ]
