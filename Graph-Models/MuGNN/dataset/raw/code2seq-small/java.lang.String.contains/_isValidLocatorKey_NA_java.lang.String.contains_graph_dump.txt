Line_27 $$ if (containsAll) -->Line_28 $$ return true[ CD ]
Line_2 $$ private boolean _isValidLocatorKey(String actionName, String caseComparator, String locatorKey) -->Line_3 $$ Element pathRootElement = getPathRootElement(actionName)[ FD ]
Line_2 $$ private boolean _isValidLocatorKey(String actionName, String caseComparator, String locatorKey) -->Line_5 $$ String[] partialKeys = [ CD ]
Line_2 $$ private boolean _isValidLocatorKey(String actionName, String caseComparator, String locatorKey) -->Line_6 $$ if (locatorKey.contains("$[ CD ]
Line_2 $$ private boolean _isValidLocatorKey(String actionName, String caseComparator, String locatorKey) -->Line_11 $$ if (caseComparator == null) [ FD ]
Line_10 $$ for (String pathLocatorKey : pathLocatorKeys) -->Line_18 $$ if (caseComparator.equals("endsWith") && pathLocatorKey.endsWith(locatorKey)) [ FD ]
Line_2 $$ private boolean _isValidLocatorKey(String actionName, String caseComparator, String locatorKey) -->Line_6 $$ if (locatorKey.contains("$[ FD ]
Line_7 $$ caseComparator = "partial"-->Line_20 $$ if (caseComparator.equals("partial")) [ FD ]
Line_6 $$ if (locatorKey.contains("$-->Line_8 $$ partialKeys = locatorKey.split("\\$\\[ CD ]
Line_3 $$ Element pathRootElement = getPathRootElement(actionName)-->Line_4 $$ Set<String> pathLocatorKeys = getPathLocatorKeys(pathRootElement)[ FD ]
Line_6 $$ if (locatorKey.contains("$-->Line_7 $$ caseComparator = "partial"[ CD ]
Line_20 $$ if (caseComparator.equals("partial")) -->Line_27 $$ if (containsAll) [ CD ]
Line_10 $$ for (String pathLocatorKey : pathLocatorKeys) -->Line_23 $$ if (!pathLocatorKey.contains(s)) [ FD ]
Line_2 $$ private boolean _isValidLocatorKey(String actionName, String caseComparator, String locatorKey) -->Line_4 $$ Set<String> pathLocatorKeys = getPathLocatorKeys(pathRootElement)[ CD ]
Line_2 $$ private boolean _isValidLocatorKey(String actionName, String caseComparator, String locatorKey) -->Line_7 $$ caseComparator = "partial"[ FD ]
Line_30 $$ if (caseComparator.equals("startsWith") && pathLocatorKey.startsWith(locatorKey)) -->Line_31 $$ return true[ CD ]
Line_20 $$ if (caseComparator.equals("partial")) -->Line_30 $$ if (caseComparator.equals("startsWith") && pathLocatorKey.startsWith(locatorKey)) [ CD ]
Line_18 $$ if (caseComparator.equals("endsWith") && pathLocatorKey.endsWith(locatorKey)) -->Line_19 $$ return true[ CD ]
Line_2 $$ private boolean _isValidLocatorKey(String actionName, String caseComparator, String locatorKey) -->Line_3 $$ Element pathRootElement = getPathRootElement(actionName)[ CD ]
Line_7 $$ caseComparator = "partial"-->Line_16 $$ if (caseComparator.equals("contains") && pathLocatorKey.contains(locatorKey)) [ FD ]
Line_10 $$ for (String pathLocatorKey : pathLocatorKeys) -->Line_30 $$ if (caseComparator.equals("startsWith") && pathLocatorKey.startsWith(locatorKey)) [ FD ]
Line_7 $$ caseComparator = "partial"-->Line_18 $$ if (caseComparator.equals("endsWith") && pathLocatorKey.endsWith(locatorKey)) [ FD ]
Line_10 $$ for (String pathLocatorKey : pathLocatorKeys) -->Line_12 $$ if (pathLocatorKey.equals(locatorKey)) [ FD ]
Line_2 $$ private boolean _isValidLocatorKey(String actionName, String caseComparator, String locatorKey) -->Line_8 $$ partialKeys = locatorKey.split("\\$\\[ FD ]
Line_11 $$ if (caseComparator == null) -->Line_16 $$ if (caseComparator.equals("contains") && pathLocatorKey.contains(locatorKey)) [ CD ]
Line_10 $$ for (String pathLocatorKey : pathLocatorKeys) -->Line_16 $$ if (caseComparator.equals("contains") && pathLocatorKey.contains(locatorKey)) [ FD ]
Line_2 $$ private boolean _isValidLocatorKey(String actionName, String caseComparator, String locatorKey) -->Line_30 $$ if (caseComparator.equals("startsWith") && pathLocatorKey.startsWith(locatorKey)) [ FD ]
Line_2 $$ private boolean _isValidLocatorKey(String actionName, String caseComparator, String locatorKey) -->Line_35 $$ return false[ CD ]
Line_16 $$ if (caseComparator.equals("contains") && pathLocatorKey.contains(locatorKey)) -->Line_17 $$ return true[ CD ]
Line_23 $$ if (!pathLocatorKey.contains(s)) -->Line_24 $$ containsAll = false[ CD ]
Line_12 $$ if (pathLocatorKey.equals(locatorKey)) -->Line_13 $$ return true[ CD ]
Line_18 $$ if (caseComparator.equals("endsWith") && pathLocatorKey.endsWith(locatorKey)) -->Line_20 $$ if (caseComparator.equals("partial")) [ CD ]
Line_7 $$ caseComparator = "partial"-->Line_11 $$ if (caseComparator == null) [ FD ]
Line_2 $$ private boolean _isValidLocatorKey(String actionName, String caseComparator, String locatorKey) -->Line_18 $$ if (caseComparator.equals("endsWith") && pathLocatorKey.endsWith(locatorKey)) [ FD ]
Line_7 $$ caseComparator = "partial"-->Line_30 $$ if (caseComparator.equals("startsWith") && pathLocatorKey.startsWith(locatorKey)) [ FD ]
Line_5 $$ String[] partialKeys = -->Line_8 $$ partialKeys = locatorKey.split("\\$\\[ FD ]
Line_20 $$ if (caseComparator.equals("partial")) -->Line_21 $$ boolean containsAll = true[ CD ]
Line_22 $$ for (String s : partialKeys) -->Line_23 $$ if (!pathLocatorKey.contains(s)) [ FD ]
Line_2 $$ private boolean _isValidLocatorKey(String actionName, String caseComparator, String locatorKey) -->Line_16 $$ if (caseComparator.equals("contains") && pathLocatorKey.contains(locatorKey)) [ FD ]
Line_21 $$ boolean containsAll = true-->Line_24 $$ containsAll = false[ FD ]
Line_11 $$ if (caseComparator == null) -->Line_12 $$ if (pathLocatorKey.equals(locatorKey)) [ CD ]
Line_16 $$ if (caseComparator.equals("contains") && pathLocatorKey.contains(locatorKey)) -->Line_18 $$ if (caseComparator.equals("endsWith") && pathLocatorKey.endsWith(locatorKey)) [ CD ]
Line_2 $$ private boolean _isValidLocatorKey(String actionName, String caseComparator, String locatorKey) -->Line_12 $$ if (pathLocatorKey.equals(locatorKey)) [ FD ]
Line_2 $$ private boolean _isValidLocatorKey(String actionName, String caseComparator, String locatorKey) -->Line_20 $$ if (caseComparator.equals("partial")) [ FD ]
