Line_3 $$ String pluginName = "fake-plugin"-->Line_5 $$ PluginTestUtil.writeProperties(pluginDir, "description", "fake desc", "name", pluginName, "elasticsearch.version", Version.CURRENT.toString(), "java.version", "1000000.0", "classname", "FakePlugin", "version", "1.0", "jvm", "true")[ FD ]
Line_2 $$ public void testReadFromPropertiesJavaVersionIncompatible() throws Exception -->Line_5 $$ PluginTestUtil.writeProperties(pluginDir, "description", "fake desc", "name", pluginName, "elasticsearch.version", Version.CURRENT.toString(), "java.version", "1000000.0", "classname", "FakePlugin", "version", "1.0", "jvm", "true")[ CD ]
Line_4 $$ Path pluginDir = createTempDir().resolve(pluginName)-->Line_7 $$ PluginInfo.readFromProperties(pluginDir)[ FD ]
Line_2 $$ public void testReadFromPropertiesJavaVersionIncompatible() throws Exception -->Line_3 $$ String pluginName = "fake-plugin"[ CD ]
Line_2 $$ public void testReadFromPropertiesJavaVersionIncompatible() throws Exception -->Line_4 $$ Path pluginDir = createTempDir().resolve(pluginName)[ CD ]
Line_3 $$ String pluginName = "fake-plugin"-->Line_4 $$ Path pluginDir = createTempDir().resolve(pluginName)[ FD ]
Line_4 $$ Path pluginDir = createTempDir().resolve(pluginName)-->Line_5 $$ PluginTestUtil.writeProperties(pluginDir, "description", "fake desc", "name", pluginName, "elasticsearch.version", Version.CURRENT.toString(), "java.version", "1000000.0", "classname", "FakePlugin", "version", "1.0", "jvm", "true")[ FD ]
