Line_12 $$ final UserGroupInformation ugi = UserGroupInformation.getCurrentUser()-->Line_13 $$ final String tmpusername = ugi.getShortUserName() + "1"[ FD ]
Line_15 $$ String results = tmpUGI.doAs(new PrivilegedExceptionAction<String>() -->Line_20 $$ assertTrue(results.contains("zzz"))[ FD ]
Line_5 $$ DistributedFileSystem dfs = cluster.getFileSystem()-->Line_8 $$ dfs.mkdirs(new Path(root, "zzz"))[ FD ]
Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_22 $$ cluster.shutdown()[ FD ]
Line_2 $$ public void testLsr() throws Exception -->Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()[ CD ]
Line_5 $$ DistributedFileSystem dfs = cluster.getFileSystem()-->Line_7 $$ final String root = createTree(dfs, "lsr")[ FD ]
Line_7 $$ final String root = createTree(dfs, "lsr")-->Line_17 $$ return runLsr(new FsShell(conf), root, 1)[ FD ]
Line_15 $$ String results = tmpUGI.doAs(new PrivilegedExceptionAction<String>() -->Line_17 $$ return runLsr(new FsShell(conf), root, 1)[ CD ]
Line_2 $$ public void testLsr() throws Exception -->Line_3 $$ final Configuration conf = new HdfsConfiguration()[ CD ]
Line_7 $$ final String root = createTree(dfs, "lsr")-->Line_9 $$ runLsr(new FsShell(conf), root, 0)[ FD ]
Line_13 $$ final String tmpusername = ugi.getShortUserName() + "1"-->Line_14 $$ UserGroupInformation tmpUGI = UserGroupInformation.createUserForTesting(tmpusername, new String[] [ FD ]
Line_2 $$ public void testLsr() throws Exception -->Line_5 $$ DistributedFileSystem dfs = cluster.getFileSystem()[ CD ]
Line_10 $$ final Path sub = new Path(root, "sub")-->Line_11 $$ dfs.setPermission(sub, new FsPermission((short) 0))[ FD ]
Line_5 $$ DistributedFileSystem dfs = cluster.getFileSystem()-->Line_11 $$ dfs.setPermission(sub, new FsPermission((short) 0))[ FD ]
Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_5 $$ DistributedFileSystem dfs = cluster.getFileSystem()[ FD ]
Line_14 $$ UserGroupInformation tmpUGI = UserGroupInformation.createUserForTesting(tmpusername, new String[] -->Line_15 $$ String results = tmpUGI.doAs(new PrivilegedExceptionAction<String>() [ FD ]
