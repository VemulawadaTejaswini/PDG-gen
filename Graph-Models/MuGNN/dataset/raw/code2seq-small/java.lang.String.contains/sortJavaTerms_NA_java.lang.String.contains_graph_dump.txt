Line_2 $$ protected void sortJavaTerms(JavaTerm previousJavaTerm, JavaTerm javaTerm, List<String> javaTermSortExclusionFiles) -->Line_3 $$ if (previousJavaTerm == null) [ FD ]
Line_7 $$ if (BaseSourceProcessor.isExcludedFile(javaTermSortExclusionFiles, _absolutePath, -1, javaTermName)) -->Line_8 $$ return[ CD ]
Line_2 $$ protected void sortJavaTerms(JavaTerm previousJavaTerm, JavaTerm javaTerm, List<String> javaTermSortExclusionFiles) -->Line_15 $$ String previousJavaTermNameLowerCase = StringUtil.toLowerCase(previousJavaTermName)[ CD ]
Line_2 $$ protected void sortJavaTerms(JavaTerm previousJavaTerm, JavaTerm javaTerm, List<String> javaTermSortExclusionFiles) -->Line_10 $$ if (previousJavaTerm.getLineCount() <= javaTerm.getLineCount()) [ CD ]
Line_2 $$ protected void sortJavaTerms(JavaTerm previousJavaTerm, JavaTerm javaTerm, List<String> javaTermSortExclusionFiles) -->Line_19 $$ _content = StringUtil.replaceLast(_content, "\n" + previousJavaTerm.getContent(), "\n" + javaTerm.getContent())[ FD ]
Line_15 $$ String previousJavaTermNameLowerCase = StringUtil.toLowerCase(previousJavaTermName)-->Line_16 $$ if (_fileName.contains("persistence") && ((previousJavaTermName.startsWith("doCount") && javaTermName.startsWith("doCount")) || (previousJavaTermName.startsWith("doFind") && javaTermName.startsWith("doFind")) || (previousJavaTermNameLowerCase.startsWith("count") && javaTermNameLowerCase.startsWith("count")) || (previousJavaTermNameLowerCase.startsWith("filter") && javaTermNameLowerCase.startsWith("filter")) || (previousJavaTermNameLowerCase.startsWith("find") && javaTermNameLowerCase.startsWith("find")) || (previousJavaTermNameLowerCase.startsWith("join") && javaTermNameLowerCase.startsWith("join")))) [ FD ]
Line_13 $$ String previousJavaTermName = previousJavaTerm.getName()-->Line_16 $$ if (_fileName.contains("persistence") && ((previousJavaTermName.startsWith("doCount") && javaTermName.startsWith("doCount")) || (previousJavaTermName.startsWith("doFind") && javaTermName.startsWith("doFind")) || (previousJavaTermNameLowerCase.startsWith("count") && javaTermNameLowerCase.startsWith("count")) || (previousJavaTermNameLowerCase.startsWith("filter") && javaTermNameLowerCase.startsWith("filter")) || (previousJavaTermNameLowerCase.startsWith("find") && javaTermNameLowerCase.startsWith("find")) || (previousJavaTermNameLowerCase.startsWith("join") && javaTermNameLowerCase.startsWith("join")))) [ FD ]
Line_10 $$ if (previousJavaTerm.getLineCount() <= javaTerm.getLineCount()) -->Line_11 $$ return[ CD ]
Line_13 $$ String previousJavaTermName = previousJavaTerm.getName()-->Line_15 $$ String previousJavaTermNameLowerCase = StringUtil.toLowerCase(previousJavaTermName)[ FD ]
Line_2 $$ protected void sortJavaTerms(JavaTerm previousJavaTerm, JavaTerm javaTerm, List<String> javaTermSortExclusionFiles) -->Line_14 $$ String javaTermNameLowerCase = StringUtil.toLowerCase(javaTermName)[ CD ]
Line_2 $$ protected void sortJavaTerms(JavaTerm previousJavaTerm, JavaTerm javaTerm, List<String> javaTermSortExclusionFiles) -->Line_18 $$ _content = StringUtil.replaceFirst(_content, "\n" + javaTerm.getContent(), "\n" + previousJavaTerm.getContent())[ FD ]
Line_2 $$ protected void sortJavaTerms(JavaTerm previousJavaTerm, JavaTerm javaTerm, List<String> javaTermSortExclusionFiles) -->Line_13 $$ String previousJavaTermName = previousJavaTerm.getName()[ FD ]
Line_16 $$ if (_fileName.contains("persistence") && ((previousJavaTermName.startsWith("doCount") && javaTermName.startsWith("doCount")) || (previousJavaTermName.startsWith("doFind") && javaTermName.startsWith("doFind")) || (previousJavaTermNameLowerCase.startsWith("count") && javaTermNameLowerCase.startsWith("count")) || (previousJavaTermNameLowerCase.startsWith("filter") && javaTermNameLowerCase.startsWith("filter")) || (previousJavaTermNameLowerCase.startsWith("find") && javaTermNameLowerCase.startsWith("find")) || (previousJavaTermNameLowerCase.startsWith("join") && javaTermNameLowerCase.startsWith("join")))) -->Line_18 $$ _content = StringUtil.replaceFirst(_content, "\n" + javaTerm.getContent(), "\n" + previousJavaTerm.getContent())[ CD ]
Line_2 $$ protected void sortJavaTerms(JavaTerm previousJavaTerm, JavaTerm javaTerm, List<String> javaTermSortExclusionFiles) -->Line_7 $$ if (BaseSourceProcessor.isExcludedFile(javaTermSortExclusionFiles, _absolutePath, -1, javaTermName)) [ FD ]
Line_2 $$ protected void sortJavaTerms(JavaTerm previousJavaTerm, JavaTerm javaTerm, List<String> javaTermSortExclusionFiles) -->Line_3 $$ if (previousJavaTerm == null) [ CD ]
Line_3 $$ if (previousJavaTerm == null) -->Line_4 $$ return[ CD ]
Line_14 $$ String javaTermNameLowerCase = StringUtil.toLowerCase(javaTermName)-->Line_16 $$ if (_fileName.contains("persistence") && ((previousJavaTermName.startsWith("doCount") && javaTermName.startsWith("doCount")) || (previousJavaTermName.startsWith("doFind") && javaTermName.startsWith("doFind")) || (previousJavaTermNameLowerCase.startsWith("count") && javaTermNameLowerCase.startsWith("count")) || (previousJavaTermNameLowerCase.startsWith("filter") && javaTermNameLowerCase.startsWith("filter")) || (previousJavaTermNameLowerCase.startsWith("find") && javaTermNameLowerCase.startsWith("find")) || (previousJavaTermNameLowerCase.startsWith("join") && javaTermNameLowerCase.startsWith("join")))) [ FD ]
Line_2 $$ protected void sortJavaTerms(JavaTerm previousJavaTerm, JavaTerm javaTerm, List<String> javaTermSortExclusionFiles) -->Line_13 $$ String previousJavaTermName = previousJavaTerm.getName()[ CD ]
Line_2 $$ protected void sortJavaTerms(JavaTerm previousJavaTerm, JavaTerm javaTerm, List<String> javaTermSortExclusionFiles) -->Line_16 $$ if (_fileName.contains("persistence") && ((previousJavaTermName.startsWith("doCount") && javaTermName.startsWith("doCount")) || (previousJavaTermName.startsWith("doFind") && javaTermName.startsWith("doFind")) || (previousJavaTermNameLowerCase.startsWith("count") && javaTermNameLowerCase.startsWith("count")) || (previousJavaTermNameLowerCase.startsWith("filter") && javaTermNameLowerCase.startsWith("filter")) || (previousJavaTermNameLowerCase.startsWith("find") && javaTermNameLowerCase.startsWith("find")) || (previousJavaTermNameLowerCase.startsWith("join") && javaTermNameLowerCase.startsWith("join")))) [ CD ]
Line_6 $$ String javaTermName = javaTerm.getName()-->Line_16 $$ if (_fileName.contains("persistence") && ((previousJavaTermName.startsWith("doCount") && javaTermName.startsWith("doCount")) || (previousJavaTermName.startsWith("doFind") && javaTermName.startsWith("doFind")) || (previousJavaTermNameLowerCase.startsWith("count") && javaTermNameLowerCase.startsWith("count")) || (previousJavaTermNameLowerCase.startsWith("filter") && javaTermNameLowerCase.startsWith("filter")) || (previousJavaTermNameLowerCase.startsWith("find") && javaTermNameLowerCase.startsWith("find")) || (previousJavaTermNameLowerCase.startsWith("join") && javaTermNameLowerCase.startsWith("join")))) [ FD ]
Line_2 $$ protected void sortJavaTerms(JavaTerm previousJavaTerm, JavaTerm javaTerm, List<String> javaTermSortExclusionFiles) -->Line_10 $$ if (previousJavaTerm.getLineCount() <= javaTerm.getLineCount()) [ FD ]
Line_2 $$ protected void sortJavaTerms(JavaTerm previousJavaTerm, JavaTerm javaTerm, List<String> javaTermSortExclusionFiles) -->Line_6 $$ String javaTermName = javaTerm.getName()[ FD ]
Line_6 $$ String javaTermName = javaTerm.getName()-->Line_7 $$ if (BaseSourceProcessor.isExcludedFile(javaTermSortExclusionFiles, _absolutePath, -1, javaTermName)) [ FD ]
Line_6 $$ String javaTermName = javaTerm.getName()-->Line_14 $$ String javaTermNameLowerCase = StringUtil.toLowerCase(javaTermName)[ FD ]
Line_2 $$ protected void sortJavaTerms(JavaTerm previousJavaTerm, JavaTerm javaTerm, List<String> javaTermSortExclusionFiles) -->Line_6 $$ String javaTermName = javaTerm.getName()[ CD ]
Line_16 $$ if (_fileName.contains("persistence") && ((previousJavaTermName.startsWith("doCount") && javaTermName.startsWith("doCount")) || (previousJavaTermName.startsWith("doFind") && javaTermName.startsWith("doFind")) || (previousJavaTermNameLowerCase.startsWith("count") && javaTermNameLowerCase.startsWith("count")) || (previousJavaTermNameLowerCase.startsWith("filter") && javaTermNameLowerCase.startsWith("filter")) || (previousJavaTermNameLowerCase.startsWith("find") && javaTermNameLowerCase.startsWith("find")) || (previousJavaTermNameLowerCase.startsWith("join") && javaTermNameLowerCase.startsWith("join")))) -->Line_19 $$ _content = StringUtil.replaceLast(_content, "\n" + previousJavaTerm.getContent(), "\n" + javaTerm.getContent())[ CD ]
Line_2 $$ protected void sortJavaTerms(JavaTerm previousJavaTerm, JavaTerm javaTerm, List<String> javaTermSortExclusionFiles) -->Line_7 $$ if (BaseSourceProcessor.isExcludedFile(javaTermSortExclusionFiles, _absolutePath, -1, javaTermName)) [ CD ]
