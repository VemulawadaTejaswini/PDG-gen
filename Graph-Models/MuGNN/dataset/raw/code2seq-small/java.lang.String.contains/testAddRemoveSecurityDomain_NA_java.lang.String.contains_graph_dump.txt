Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_17 $$ assertTrue(failed)[ CD ]
Line_10 $$ boolean failed = false-->Line_33 $$ assertTrue(failed)[ FD ]
Line_24 $$ ModelNode op = createOpNode("subsystem=security/security-domain=test", "remove")-->Line_25 $$ op.get(OPERATION_HEADERS, ALLOW_RESOURCE_SERVICE_RESTART).set(true)[ FD ]
Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_27 $$ failed = false[ CD ]
Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_29 $$ deployer.deploy("secured-servlet")[ FD ]
Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_23 $$ deployer.undeploy("secured-servlet")[ FD ]
Line_15 $$ failed = true-->Line_33 $$ assertTrue(failed)[ FD ]
Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_9 $$ deployer.deploy("secured-servlet")[ CD ]
Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_10 $$ boolean failed = false[ CD ]
Line_5 $$ ModelNode addLoginModuleOp = createOpNode("subsystem=security/security-domain=test/authentication=classic/login-module=" + "Simple", "add")-->Line_7 $$ addLoginModuleOp.get("flag").set("required")[ FD ]
Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_25 $$ op.get(OPERATION_HEADERS, ALLOW_RESOURCE_SERVICE_RESTART).set(true)[ CD ]
Line_10 $$ boolean failed = false-->Line_31 $$ failed = true[ FD ]
Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_6 $$ addLoginModuleOp.get("code").set("Simple")[ CD ]
Line_15 $$ failed = true-->Line_31 $$ failed = true[ FD ]
Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_7 $$ addLoginModuleOp.get("flag").set("required")[ CD ]
Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_8 $$ executeOperation(ModelUtil.createCompositeNode(new ModelNode[] [ CD ]
Line_15 $$ failed = true-->Line_27 $$ failed = false[ FD ]
Line_5 $$ ModelNode addLoginModuleOp = createOpNode("subsystem=security/security-domain=test/authentication=classic/login-module=" + "Simple", "add")-->Line_6 $$ addLoginModuleOp.get("code").set("Simple")[ FD ]
Line_10 $$ boolean failed = false-->Line_27 $$ failed = false[ FD ]
Line_27 $$ failed = false-->Line_31 $$ failed = true[ FD ]
Line_10 $$ boolean failed = false-->Line_15 $$ failed = true[ FD ]
Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_26 $$ executeOperation(op)[ CD ]
Line_15 $$ failed = true-->Line_17 $$ assertTrue(failed)[ FD ]
Line_31 $$ failed = true-->Line_33 $$ assertTrue(failed)[ FD ]
Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_4 $$ ModelNode addAuthClassic = createOpNode("subsystem=security/security-domain=test/authentication=classic", "add")[ CD ]
Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_24 $$ ModelNode op = createOpNode("subsystem=security/security-domain=test", "remove")[ CD ]
Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_5 $$ ModelNode addLoginModuleOp = createOpNode("subsystem=security/security-domain=test/authentication=classic/login-module=" + "Simple", "add")[ CD ]
Line_10 $$ boolean failed = false-->Line_17 $$ assertTrue(failed)[ FD ]
Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_33 $$ assertTrue(failed)[ CD ]
Line_27 $$ failed = false-->Line_33 $$ assertTrue(failed)[ FD ]
Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_3 $$ ModelNode addOp = createOpNode("subsystem=security/security-domain=test", "add")[ CD ]
Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_23 $$ deployer.undeploy("secured-servlet")[ CD ]
Line_24 $$ ModelNode op = createOpNode("subsystem=security/security-domain=test", "remove")-->Line_26 $$ executeOperation(op)[ FD ]
Line_2 $$ public void testAddRemoveSecurityDomain(@ArquillianResource Deployer deployer) throws Exception -->Line_9 $$ deployer.deploy("secured-servlet")[ FD ]
