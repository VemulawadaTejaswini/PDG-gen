Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_4 $$ String propName = reader.getAttributeValue(null, NAME)[ FD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_3 $$ Class<? extends DeploymentAspect> deploymentAspectClass = deploymentAspect.getClass()[ CD ]
Line_4 $$ String propName = reader.getAttributeValue(null, NAME)-->Line_14 $$ Method m = selectMethod(deploymentAspectClass, propName, propClass)[ FD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_22 $$ while (reader.hasNext()) [ CD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_6 $$ throw WSLogger.ROOT_LOGGER.missingPropertyNameAttribute(deploymentAspect)[ FD ]
Line_3 $$ Class<? extends DeploymentAspect> deploymentAspectClass = deploymentAspect.getClass()-->Line_14 $$ Method m = selectMethod(deploymentAspectClass, propName, propClass)[ FD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_22 $$ while (reader.hasNext()) [ FD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_8 $$ String propClass = reader.getAttributeValue(null, CLASS)[ CD ]
Line_3 $$ Class<? extends DeploymentAspect> deploymentAspectClass = deploymentAspect.getClass()-->Line_36 $$ Method m = selectMethod(deploymentAspectClass, propName, propClass)[ FD ]
Line_8 $$ String propClass = reader.getAttributeValue(null, CLASS)-->Line_14 $$ Method m = selectMethod(deploymentAspectClass, propName, propClass)[ FD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_46 $$ m.invoke(deploymentAspect, list)[ FD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_9 $$ if (propClass == null) [ CD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_37 $$ Map map = parseMapProperty(reader, propClass, reader.getAttributeValue(null, KEY_CLASS), reader.getAttributeValue(null, VALUE_CLASS), loader)[ FD ]
Line_14 $$ Method m = selectMethod(deploymentAspectClass, propName, propClass)-->Line_46 $$ m.invoke(deploymentAspect, list)[ FD ]
Line_8 $$ String propClass = reader.getAttributeValue(null, CLASS)-->Line_13 $$ if (isSupportedPropertyClass(propClass)) [ FD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_26 $$ if (match(reader, NS, PROPERTY)) [ FD ]
Line_13 $$ if (isSupportedPropertyClass(propClass)) -->Line_15 $$ m.invoke(deploymentAspect, parseSimpleValue(reader, propClass))[ CD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_38 $$ m.invoke(deploymentAspect, map)[ FD ]
Line_3 $$ Class<? extends DeploymentAspect> deploymentAspectClass = deploymentAspect.getClass()-->Line_44 $$ Method m = selectMethod(deploymentAspectClass, propName, propClass)[ FD ]
Line_8 $$ String propClass = reader.getAttributeValue(null, CLASS)-->Line_9 $$ if (propClass == null) [ FD ]
Line_14 $$ Method m = selectMethod(deploymentAspectClass, propName, propClass)-->Line_15 $$ m.invoke(deploymentAspect, parseSimpleValue(reader, propClass))[ FD ]
Line_8 $$ String propClass = reader.getAttributeValue(null, CLASS)-->Line_36 $$ Method m = selectMethod(deploymentAspectClass, propName, propClass)[ FD ]
Line_34 $$ if (match(reader, NS, MAP)) -->Line_42 $$ if (match(reader, NS, LIST)) [ CD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_23 $$ switch(reader.nextTag()) [ FD ]
Line_45 $$ List list = parseListProperty(reader, propClass, reader.getAttributeValue(null, ELEMENT_CLASS))-->Line_46 $$ m.invoke(deploymentAspect, list)[ FD ]
Line_37 $$ Map map = parseMapProperty(reader, propClass, reader.getAttributeValue(null, KEY_CLASS), reader.getAttributeValue(null, VALUE_CLASS), loader)-->Line_38 $$ m.invoke(deploymentAspect, map)[ FD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_8 $$ String propClass = reader.getAttributeValue(null, CLASS)[ FD ]
Line_26 $$ if (match(reader, NS, PROPERTY)) -->Line_27 $$ return[ CD ]
Line_13 $$ if (isSupportedPropertyClass(propClass)) -->Line_14 $$ Method m = selectMethod(deploymentAspectClass, propName, propClass)[ CD ]
Line_8 $$ String propClass = reader.getAttributeValue(null, CLASS)-->Line_45 $$ List list = parseListProperty(reader, propClass, reader.getAttributeValue(null, ELEMENT_CLASS))[ FD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_15 $$ m.invoke(deploymentAspect, parseSimpleValue(reader, propClass))[ FD ]
Line_36 $$ Method m = selectMethod(deploymentAspectClass, propName, propClass)-->Line_38 $$ m.invoke(deploymentAspect, map)[ FD ]
Line_8 $$ String propClass = reader.getAttributeValue(null, CLASS)-->Line_15 $$ m.invoke(deploymentAspect, parseSimpleValue(reader, propClass))[ FD ]
Line_8 $$ String propClass = reader.getAttributeValue(null, CLASS)-->Line_44 $$ Method m = selectMethod(deploymentAspectClass, propName, propClass)[ FD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_4 $$ String propName = reader.getAttributeValue(null, NAME)[ CD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_42 $$ if (match(reader, NS, LIST)) [ FD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_51 $$ throw WSLogger.ROOT_LOGGER.unexpectedElement(reader.getLocalName())[ FD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_34 $$ if (match(reader, NS, MAP)) [ FD ]
Line_8 $$ String propClass = reader.getAttributeValue(null, CLASS)-->Line_37 $$ Map map = parseMapProperty(reader, propClass, reader.getAttributeValue(null, KEY_CLASS), reader.getAttributeValue(null, VALUE_CLASS), loader)[ FD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_10 $$ throw WSLogger.ROOT_LOGGER.missingPropertyClassAttribute(deploymentAspect)[ FD ]
Line_4 $$ String propName = reader.getAttributeValue(null, NAME)-->Line_36 $$ Method m = selectMethod(deploymentAspectClass, propName, propClass)[ FD ]
Line_4 $$ String propName = reader.getAttributeValue(null, NAME)-->Line_44 $$ Method m = selectMethod(deploymentAspectClass, propName, propClass)[ FD ]
Line_14 $$ Method m = selectMethod(deploymentAspectClass, propName, propClass)-->Line_38 $$ m.invoke(deploymentAspect, map)[ FD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_3 $$ Class<? extends DeploymentAspect> deploymentAspectClass = deploymentAspect.getClass()[ FD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_29 $$ throw WSLogger.ROOT_LOGGER.unexpectedEndTag(reader.getLocalName())[ FD ]
Line_36 $$ Method m = selectMethod(deploymentAspectClass, propName, propClass)-->Line_46 $$ m.invoke(deploymentAspect, list)[ FD ]
Line_13 $$ if (isSupportedPropertyClass(propClass)) -->Line_16 $$ return[ CD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_45 $$ List list = parseListProperty(reader, propClass, reader.getAttributeValue(null, ELEMENT_CLASS))[ FD ]
Line_2 $$ private static void parseProperty(XMLStreamReader reader, DeploymentAspect deploymentAspect, ClassLoader loader) throws XMLStreamException -->Line_5 $$ if (propName == null) [ CD ]
Line_4 $$ String propName = reader.getAttributeValue(null, NAME)-->Line_5 $$ if (propName == null) [ FD ]
