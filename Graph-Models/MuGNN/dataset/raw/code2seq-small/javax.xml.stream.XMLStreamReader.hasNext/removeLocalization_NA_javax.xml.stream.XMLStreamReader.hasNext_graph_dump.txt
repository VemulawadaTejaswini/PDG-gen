Line_31 $$ if ((availableLocales != null) && availableLocales.contains(requestedLanguageId)) -->Line_44 $$ xmlStreamWriter.writeEndDocument()[ CD ]
Line_3 $$ if (Validator.isNull(xml)) -->Line_4 $$ return StringPool.BLANK[ CD ]
Line_11 $$ XMLStreamReader xmlStreamReader = null-->Line_59 $$ xmlStreamReader.close()[ FD ]
Line_35 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_46 $$ xmlStreamWriter = null[ FD ]
Line_12 $$ XMLStreamWriter xmlStreamWriter = null-->Line_39 $$ xmlStreamWriter.writeAttribute(_AVAILABLE_LOCALES, availableLocales)[ FD ]
Line_26 $$ defaultLanguageId = xmlStreamReader.getAttributeValue(null, _DEFAULT_LOCALE)-->Line_28 $$ defaultLanguageId = systemDefaultLanguageId[ FD ]
Line_31 $$ if ((availableLocales != null) && availableLocales.contains(requestedLanguageId)) -->Line_37 $$ xmlStreamWriter.writeStartElement(_ROOT)[ CD ]
Line_2 $$ public String removeLocalization(String xml, String key, String requestedLanguageId, boolean cdata, boolean localized) -->Line_3 $$ if (Validator.isNull(xml)) [ FD ]
Line_25 $$ availableLocales = xmlStreamReader.getAttributeValue(null, _AVAILABLE_LOCALES)-->Line_32 $$ availableLocales = StringUtil.removeFromList(availableLocales, requestedLanguageId)[ FD ]
Line_13 $$ ClassLoader portalClassLoader = ClassLoaderUtil.getPortalClassLoader()-->Line_54 $$ if (contextClassLoader != portalClassLoader) [ FD ]
Line_2 $$ public String removeLocalization(String xml, String key, String requestedLanguageId, boolean cdata, boolean localized) -->Line_11 $$ XMLStreamReader xmlStreamReader = null[ CD ]
Line_35 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_45 $$ xmlStreamWriter.close()[ FD ]
Line_11 $$ XMLStreamReader xmlStreamReader = null-->Line_23 $$ if (xmlStreamReader.hasNext()) [ FD ]
Line_12 $$ XMLStreamWriter xmlStreamWriter = null-->Line_65 $$ xmlStreamWriter.close()[ FD ]
Line_12 $$ XMLStreamWriter xmlStreamWriter = null-->Line_35 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)[ FD ]
Line_31 $$ if ((availableLocales != null) && availableLocales.contains(requestedLanguageId)) -->Line_46 $$ xmlStreamWriter = null[ CD ]
Line_14 $$ ClassLoader contextClassLoader = ClassLoaderUtil.getContextClassLoader()-->Line_55 $$ ClassLoaderUtil.setContextClassLoader(contextClassLoader)[ FD ]
Line_35 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_42 $$ _copyNonExempt(xmlStreamReader, xmlStreamWriter, requestedLanguageId, defaultLanguageId, cdata)[ FD ]
Line_22 $$ String defaultLanguageId = StringPool.BLANK-->Line_28 $$ defaultLanguageId = systemDefaultLanguageId[ FD ]
Line_35 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_44 $$ xmlStreamWriter.writeEndDocument()[ FD ]
Line_46 $$ xmlStreamWriter = null-->Line_63 $$ if (xmlStreamWriter != null) [ FD ]
Line_35 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_65 $$ xmlStreamWriter.close()[ FD ]
Line_22 $$ String defaultLanguageId = StringPool.BLANK-->Line_40 $$ xmlStreamWriter.writeAttribute(_DEFAULT_LOCALE, defaultLanguageId)[ FD ]
Line_21 $$ String availableLocales = StringPool.BLANK-->Line_39 $$ xmlStreamWriter.writeAttribute(_AVAILABLE_LOCALES, availableLocales)[ FD ]
Line_35 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_37 $$ xmlStreamWriter.writeStartElement(_ROOT)[ FD ]
Line_23 $$ if (xmlStreamReader.hasNext()) -->Line_24 $$ xmlStreamReader.nextTag()[ CD ]
Line_21 $$ String availableLocales = StringPool.BLANK-->Line_32 $$ availableLocales = StringUtil.removeFromList(availableLocales, requestedLanguageId)[ FD ]
Line_25 $$ availableLocales = xmlStreamReader.getAttributeValue(null, _AVAILABLE_LOCALES)-->Line_39 $$ xmlStreamWriter.writeAttribute(_AVAILABLE_LOCALES, availableLocales)[ FD ]
Line_2 $$ public String removeLocalization(String xml, String key, String requestedLanguageId, boolean cdata, boolean localized) -->Line_9 $$ xml = _sanitizeXML(xml)[ CD ]
Line_11 $$ XMLStreamReader xmlStreamReader = null-->Line_57 $$ if (xmlStreamReader != null) [ FD ]
Line_2 $$ public String removeLocalization(String xml, String key, String requestedLanguageId, boolean cdata, boolean localized) -->Line_32 $$ availableLocales = StringUtil.removeFromList(availableLocales, requestedLanguageId)[ FD ]
Line_2 $$ public String removeLocalization(String xml, String key, String requestedLanguageId, boolean cdata, boolean localized) -->Line_31 $$ if ((availableLocales != null) && availableLocales.contains(requestedLanguageId)) [ FD ]
Line_31 $$ if ((availableLocales != null) && availableLocales.contains(requestedLanguageId)) -->Line_32 $$ availableLocales = StringUtil.removeFromList(availableLocales, requestedLanguageId)[ CD ]
Line_46 $$ xmlStreamWriter = null-->Line_65 $$ xmlStreamWriter.close()[ FD ]
Line_16 $$ if (contextClassLoader != portalClassLoader) -->Line_17 $$ ClassLoaderUtil.setContextClassLoader(portalClassLoader)[ CD ]
Line_22 $$ String defaultLanguageId = StringPool.BLANK-->Line_42 $$ _copyNonExempt(xmlStreamReader, xmlStreamWriter, requestedLanguageId, defaultLanguageId, cdata)[ FD ]
Line_20 $$ xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml))-->Line_57 $$ if (xmlStreamReader != null) [ FD ]
Line_11 $$ XMLStreamReader xmlStreamReader = null-->Line_26 $$ defaultLanguageId = xmlStreamReader.getAttributeValue(null, _DEFAULT_LOCALE)[ FD ]
Line_33 $$ UnsyncStringWriter unsyncStringWriter = new UnsyncStringWriter()-->Line_35 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)[ FD ]
Line_12 $$ XMLStreamWriter xmlStreamWriter = null-->Line_36 $$ xmlStreamWriter.writeStartDocument()[ FD ]
Line_31 $$ if ((availableLocales != null) && availableLocales.contains(requestedLanguageId)) -->Line_34 $$ XMLOutputFactory xmlOutputFactory = XMLOutputFactory.newInstance()[ CD ]
Line_33 $$ UnsyncStringWriter unsyncStringWriter = new UnsyncStringWriter()-->Line_47 $$ xml = unsyncStringWriter.toString()[ FD ]
Line_25 $$ availableLocales = xmlStreamReader.getAttributeValue(null, _AVAILABLE_LOCALES)-->Line_31 $$ if ((availableLocales != null) && availableLocales.contains(requestedLanguageId)) [ FD ]
Line_2 $$ public String removeLocalization(String xml, String key, String requestedLanguageId, boolean cdata, boolean localized) -->Line_9 $$ xml = _sanitizeXML(xml)[ FD ]
Line_28 $$ defaultLanguageId = systemDefaultLanguageId-->Line_42 $$ _copyNonExempt(xmlStreamReader, xmlStreamWriter, requestedLanguageId, defaultLanguageId, cdata)[ FD ]
Line_31 $$ if ((availableLocales != null) && availableLocales.contains(requestedLanguageId)) -->Line_33 $$ UnsyncStringWriter unsyncStringWriter = new UnsyncStringWriter()[ CD ]
Line_20 $$ xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml))-->Line_26 $$ defaultLanguageId = xmlStreamReader.getAttributeValue(null, _DEFAULT_LOCALE)[ FD ]
Line_19 $$ XMLInputFactory xmlInputFactory = SecureXMLFactoryProviderUtil.newXMLInputFactory()-->Line_20 $$ xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml))[ FD ]
Line_20 $$ xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml))-->Line_23 $$ if (xmlStreamReader.hasNext()) [ FD ]
Line_32 $$ availableLocales = StringUtil.removeFromList(availableLocales, requestedLanguageId)-->Line_39 $$ xmlStreamWriter.writeAttribute(_AVAILABLE_LOCALES, availableLocales)[ FD ]
Line_20 $$ xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml))-->Line_42 $$ _copyNonExempt(xmlStreamReader, xmlStreamWriter, requestedLanguageId, defaultLanguageId, cdata)[ FD ]
Line_35 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_40 $$ xmlStreamWriter.writeAttribute(_DEFAULT_LOCALE, defaultLanguageId)[ FD ]
Line_21 $$ String availableLocales = StringPool.BLANK-->Line_31 $$ if ((availableLocales != null) && availableLocales.contains(requestedLanguageId)) [ FD ]
Line_12 $$ XMLStreamWriter xmlStreamWriter = null-->Line_45 $$ xmlStreamWriter.close()[ FD ]
Line_27 $$ if (Validator.isNull(defaultLanguageId)) -->Line_28 $$ defaultLanguageId = systemDefaultLanguageId[ CD ]
Line_11 $$ XMLStreamReader xmlStreamReader = null-->Line_20 $$ xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml))[ FD ]
Line_2 $$ public String removeLocalization(String xml, String key, String requestedLanguageId, boolean cdata, boolean localized) -->Line_13 $$ ClassLoader portalClassLoader = ClassLoaderUtil.getPortalClassLoader()[ CD ]
Line_22 $$ String defaultLanguageId = StringPool.BLANK-->Line_27 $$ if (Validator.isNull(defaultLanguageId)) [ FD ]
Line_26 $$ defaultLanguageId = xmlStreamReader.getAttributeValue(null, _DEFAULT_LOCALE)-->Line_42 $$ _copyNonExempt(xmlStreamReader, xmlStreamWriter, requestedLanguageId, defaultLanguageId, cdata)[ FD ]
Line_35 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_43 $$ xmlStreamWriter.writeEndElement()[ FD ]
Line_50 $$ if (_log.isWarnEnabled()) -->Line_51 $$ _log.warn(e, e)[ CD ]
Line_12 $$ XMLStreamWriter xmlStreamWriter = null-->Line_37 $$ xmlStreamWriter.writeStartElement(_ROOT)[ FD ]
Line_20 $$ xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml))-->Line_59 $$ xmlStreamReader.close()[ FD ]
Line_31 $$ if ((availableLocales != null) && availableLocales.contains(requestedLanguageId)) -->Line_42 $$ _copyNonExempt(xmlStreamReader, xmlStreamWriter, requestedLanguageId, defaultLanguageId, cdata)[ CD ]
Line_2 $$ public String removeLocalization(String xml, String key, String requestedLanguageId, boolean cdata, boolean localized) -->Line_6 $$ if (!Validator.isXml(xml)) [ CD ]
Line_2 $$ public String removeLocalization(String xml, String key, String requestedLanguageId, boolean cdata, boolean localized) -->Line_70 $$ return xml[ CD ]
Line_28 $$ defaultLanguageId = systemDefaultLanguageId-->Line_40 $$ xmlStreamWriter.writeAttribute(_DEFAULT_LOCALE, defaultLanguageId)[ FD ]
Line_20 $$ xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml))-->Line_25 $$ availableLocales = xmlStreamReader.getAttributeValue(null, _AVAILABLE_LOCALES)[ FD ]
Line_9 $$ xml = _sanitizeXML(xml)-->Line_47 $$ xml = unsyncStringWriter.toString()[ FD ]
Line_26 $$ defaultLanguageId = xmlStreamReader.getAttributeValue(null, _DEFAULT_LOCALE)-->Line_40 $$ xmlStreamWriter.writeAttribute(_DEFAULT_LOCALE, defaultLanguageId)[ FD ]
Line_2 $$ public String removeLocalization(String xml, String key, String requestedLanguageId, boolean cdata, boolean localized) -->Line_10 $$ String systemDefaultLanguageId = LocaleUtil.toLanguageId(LocaleUtil.getSiteDefault())[ CD ]
Line_31 $$ if ((availableLocales != null) && availableLocales.contains(requestedLanguageId)) -->Line_38 $$ if (localized) [ CD ]
Line_38 $$ if (localized) -->Line_39 $$ xmlStreamWriter.writeAttribute(_AVAILABLE_LOCALES, availableLocales)[ CD ]
Line_31 $$ if ((availableLocales != null) && availableLocales.contains(requestedLanguageId)) -->Line_47 $$ xml = unsyncStringWriter.toString()[ CD ]
Line_12 $$ XMLStreamWriter xmlStreamWriter = null-->Line_46 $$ xmlStreamWriter = null[ FD ]
Line_31 $$ if ((availableLocales != null) && availableLocales.contains(requestedLanguageId)) -->Line_45 $$ xmlStreamWriter.close()[ CD ]
Line_31 $$ if ((availableLocales != null) && availableLocales.contains(requestedLanguageId)) -->Line_35 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)[ CD ]
Line_12 $$ XMLStreamWriter xmlStreamWriter = null-->Line_43 $$ xmlStreamWriter.writeEndElement()[ FD ]
Line_38 $$ if (localized) -->Line_40 $$ xmlStreamWriter.writeAttribute(_DEFAULT_LOCALE, defaultLanguageId)[ CD ]
Line_35 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_36 $$ xmlStreamWriter.writeStartDocument()[ FD ]
Line_20 $$ xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml))-->Line_24 $$ xmlStreamReader.nextTag()[ FD ]
Line_2 $$ public String removeLocalization(String xml, String key, String requestedLanguageId, boolean cdata, boolean localized) -->Line_12 $$ XMLStreamWriter xmlStreamWriter = null[ CD ]
Line_21 $$ String availableLocales = StringPool.BLANK-->Line_25 $$ availableLocales = xmlStreamReader.getAttributeValue(null, _AVAILABLE_LOCALES)[ FD ]
Line_23 $$ if (xmlStreamReader.hasNext()) -->Line_27 $$ if (Validator.isNull(defaultLanguageId)) [ CD ]
Line_14 $$ ClassLoader contextClassLoader = ClassLoaderUtil.getContextClassLoader()-->Line_16 $$ if (contextClassLoader != portalClassLoader) [ FD ]
Line_2 $$ public String removeLocalization(String xml, String key, String requestedLanguageId, boolean cdata, boolean localized) -->Line_47 $$ xml = unsyncStringWriter.toString()[ FD ]
Line_14 $$ ClassLoader contextClassLoader = ClassLoaderUtil.getContextClassLoader()-->Line_54 $$ if (contextClassLoader != portalClassLoader) [ FD ]
Line_12 $$ XMLStreamWriter xmlStreamWriter = null-->Line_63 $$ if (xmlStreamWriter != null) [ FD ]
Line_23 $$ if (xmlStreamReader.hasNext()) -->Line_26 $$ defaultLanguageId = xmlStreamReader.getAttributeValue(null, _DEFAULT_LOCALE)[ CD ]
Line_34 $$ XMLOutputFactory xmlOutputFactory = XMLOutputFactory.newInstance()-->Line_35 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)[ FD ]
Line_2 $$ public String removeLocalization(String xml, String key, String requestedLanguageId, boolean cdata, boolean localized) -->Line_3 $$ if (Validator.isNull(xml)) [ CD ]
Line_11 $$ XMLStreamReader xmlStreamReader = null-->Line_42 $$ _copyNonExempt(xmlStreamReader, xmlStreamWriter, requestedLanguageId, defaultLanguageId, cdata)[ FD ]
Line_23 $$ if (xmlStreamReader.hasNext()) -->Line_25 $$ availableLocales = xmlStreamReader.getAttributeValue(null, _AVAILABLE_LOCALES)[ CD ]
Line_6 $$ if (!Validator.isXml(xml)) -->Line_7 $$ return xml[ CD ]
Line_2 $$ public String removeLocalization(String xml, String key, String requestedLanguageId, boolean cdata, boolean localized) -->Line_14 $$ ClassLoader contextClassLoader = ClassLoaderUtil.getContextClassLoader()[ CD ]
Line_31 $$ if ((availableLocales != null) && availableLocales.contains(requestedLanguageId)) -->Line_43 $$ xmlStreamWriter.writeEndElement()[ CD ]
Line_12 $$ XMLStreamWriter xmlStreamWriter = null-->Line_44 $$ xmlStreamWriter.writeEndDocument()[ FD ]
Line_2 $$ public String removeLocalization(String xml, String key, String requestedLanguageId, boolean cdata, boolean localized) -->Line_6 $$ if (!Validator.isXml(xml)) [ FD ]
Line_35 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_63 $$ if (xmlStreamWriter != null) [ FD ]
Line_2 $$ public String removeLocalization(String xml, String key, String requestedLanguageId, boolean cdata, boolean localized) -->Line_42 $$ _copyNonExempt(xmlStreamReader, xmlStreamWriter, requestedLanguageId, defaultLanguageId, cdata)[ FD ]
Line_12 $$ XMLStreamWriter xmlStreamWriter = null-->Line_42 $$ _copyNonExempt(xmlStreamReader, xmlStreamWriter, requestedLanguageId, defaultLanguageId, cdata)[ FD ]
Line_13 $$ ClassLoader portalClassLoader = ClassLoaderUtil.getPortalClassLoader()-->Line_17 $$ ClassLoaderUtil.setContextClassLoader(portalClassLoader)[ FD ]
Line_26 $$ defaultLanguageId = xmlStreamReader.getAttributeValue(null, _DEFAULT_LOCALE)-->Line_27 $$ if (Validator.isNull(defaultLanguageId)) [ FD ]
Line_10 $$ String systemDefaultLanguageId = LocaleUtil.toLanguageId(LocaleUtil.getSiteDefault())-->Line_28 $$ defaultLanguageId = systemDefaultLanguageId[ FD ]
Line_22 $$ String defaultLanguageId = StringPool.BLANK-->Line_26 $$ defaultLanguageId = xmlStreamReader.getAttributeValue(null, _DEFAULT_LOCALE)[ FD ]
Line_31 $$ if ((availableLocales != null) && availableLocales.contains(requestedLanguageId)) -->Line_36 $$ xmlStreamWriter.writeStartDocument()[ CD ]
Line_54 $$ if (contextClassLoader != portalClassLoader) -->Line_55 $$ ClassLoaderUtil.setContextClassLoader(contextClassLoader)[ CD ]
Line_11 $$ XMLStreamReader xmlStreamReader = null-->Line_24 $$ xmlStreamReader.nextTag()[ FD ]
Line_13 $$ ClassLoader portalClassLoader = ClassLoaderUtil.getPortalClassLoader()-->Line_16 $$ if (contextClassLoader != portalClassLoader) [ FD ]
Line_12 $$ XMLStreamWriter xmlStreamWriter = null-->Line_40 $$ xmlStreamWriter.writeAttribute(_DEFAULT_LOCALE, defaultLanguageId)[ FD ]
Line_11 $$ XMLStreamReader xmlStreamReader = null-->Line_25 $$ availableLocales = xmlStreamReader.getAttributeValue(null, _AVAILABLE_LOCALES)[ FD ]
Line_35 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_39 $$ xmlStreamWriter.writeAttribute(_AVAILABLE_LOCALES, availableLocales)[ FD ]
