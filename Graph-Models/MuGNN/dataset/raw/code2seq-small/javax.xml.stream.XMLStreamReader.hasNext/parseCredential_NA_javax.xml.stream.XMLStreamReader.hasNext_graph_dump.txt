Line_2 $$ protected Credential parseCredential(XMLStreamReader reader) throws XMLStreamException, ParserException, ValidateException -->Line_14 $$ throw new ParserException(bundle.unexpectedEndTag(reader.getLocalName()))[ FD ]
Line_2 $$ protected Credential parseCredential(XMLStreamReader reader) throws XMLStreamException, ParserException, ValidateException -->Line_10 $$ if (DataSource.Tag.forName(reader.getLocalName()) == DataSource.Tag.SECURITY || Recovery.Tag.forName(reader.getLocalName()) == Recovery.Tag.RECOVER_CREDENTIAL) [ FD ]
Line_2 $$ protected Credential parseCredential(XMLStreamReader reader) throws XMLStreamException, ParserException, ValidateException -->Line_13 $$ if (Credential.Tag.forName(reader.getLocalName()) == Credential.Tag.UNKNOWN) [ FD ]
Line_2 $$ protected Credential parseCredential(XMLStreamReader reader) throws XMLStreamException, ParserException, ValidateException -->Line_34 $$ userName = elementAsString(reader)[ FD ]
Line_25 $$ if (propertyResolver != null && password != null) -->Line_26 $$ String resolvedPassword = propertyResolver.resolve(password)[ CD ]
Line_4 $$ String password = null-->Line_28 $$ password = resolvedPassword[ FD ]
Line_10 $$ if (DataSource.Tag.forName(reader.getLocalName()) == DataSource.Tag.SECURITY || Recovery.Tag.forName(reader.getLocalName()) == Recovery.Tag.RECOVER_CREDENTIAL) -->Line_13 $$ if (Credential.Tag.forName(reader.getLocalName()) == Credential.Tag.UNKNOWN) [ CD ]
Line_2 $$ protected Credential parseCredential(XMLStreamReader reader) throws XMLStreamException, ParserException, ValidateException -->Line_6 $$ while (reader.hasNext()) [ CD ]
Line_24 $$ password = elementAsString(reader)-->Line_28 $$ password = resolvedPassword[ FD ]
Line_2 $$ protected Credential parseCredential(XMLStreamReader reader) throws XMLStreamException, ParserException, ValidateException -->Line_21 $$ switch(Credential.Tag.forName(reader.getLocalName())) [ FD ]
Line_2 $$ protected Credential parseCredential(XMLStreamReader reader) throws XMLStreamException, ParserException, ValidateException -->Line_39 $$ securityDomain = elementAsString(reader)[ FD ]
Line_2 $$ protected Credential parseCredential(XMLStreamReader reader) throws XMLStreamException, ParserException, ValidateException -->Line_7 $$ switch(reader.nextTag()) [ FD ]
Line_25 $$ if (propertyResolver != null && password != null) -->Line_27 $$ if (resolvedPassword != null)[ CD ]
Line_2 $$ protected Credential parseCredential(XMLStreamReader reader) throws XMLStreamException, ParserException, ValidateException -->Line_3 $$ String userName = null[ CD ]
Line_2 $$ protected Credential parseCredential(XMLStreamReader reader) throws XMLStreamException, ParserException, ValidateException -->Line_24 $$ password = elementAsString(reader)[ FD ]
Line_2 $$ protected Credential parseCredential(XMLStreamReader reader) throws XMLStreamException, ParserException, ValidateException -->Line_6 $$ while (reader.hasNext()) [ FD ]
Line_5 $$ String securityDomain = null-->Line_39 $$ securityDomain = elementAsString(reader)[ FD ]
Line_27 $$ if (resolvedPassword != null)-->Line_28 $$ password = resolvedPassword[ CD ]
Line_2 $$ protected Credential parseCredential(XMLStreamReader reader) throws XMLStreamException, ParserException, ValidateException -->Line_43 $$ throw new ParserException(bundle.unexpectedElement(reader.getLocalName()))[ FD ]
Line_2 $$ protected Credential parseCredential(XMLStreamReader reader) throws XMLStreamException, ParserException, ValidateException -->Line_4 $$ String password = null[ CD ]
Line_24 $$ password = elementAsString(reader)-->Line_26 $$ String resolvedPassword = propertyResolver.resolve(password)[ FD ]
Line_26 $$ String resolvedPassword = propertyResolver.resolve(password)-->Line_28 $$ password = resolvedPassword[ FD ]
Line_4 $$ String password = null-->Line_24 $$ password = elementAsString(reader)[ FD ]
Line_4 $$ String password = null-->Line_26 $$ String resolvedPassword = propertyResolver.resolve(password)[ FD ]
Line_26 $$ String resolvedPassword = propertyResolver.resolve(password)-->Line_27 $$ if (resolvedPassword != null)[ FD ]
Line_10 $$ if (DataSource.Tag.forName(reader.getLocalName()) == DataSource.Tag.SECURITY || Recovery.Tag.forName(reader.getLocalName()) == Recovery.Tag.RECOVER_CREDENTIAL) -->Line_11 $$ return new CredentialImpl(userName, password, securityDomain)[ CD ]
Line_28 $$ password = resolvedPassword-->Line_26 $$ String resolvedPassword = propertyResolver.resolve(password)[ FD ]
Line_2 $$ protected Credential parseCredential(XMLStreamReader reader) throws XMLStreamException, ParserException, ValidateException -->Line_5 $$ String securityDomain = null[ CD ]
Line_3 $$ String userName = null-->Line_34 $$ userName = elementAsString(reader)[ FD ]
