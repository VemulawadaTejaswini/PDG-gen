Line_9 $$ for (int i = 0; i < count; i++) -->Line_15 $$ final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i))[ FD ]
Line_2 $$ private static void parseProperties(XMLStreamReader reader, Properties properties, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_23 $$ properties.put(name, value)[ FD ]
Line_2 $$ private static void parseProperties(XMLStreamReader reader, Properties properties, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_3 $$ while (reader.hasNext() && reader.nextTag() != END_ELEMENT) [ FD ]
Line_18 $$ name = attributeValue-->Line_25 $$ name = value = null[ FD ]
Line_9 $$ for (int i = 0; i < count; i++) -->Line_10 $$ final String attributeValue = getAttribute(reader, i, propertyReplacer)[ CD ]
Line_2 $$ private static void parseProperties(XMLStreamReader reader, Properties properties, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_15 $$ final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i))[ FD ]
Line_10 $$ final String attributeValue = getAttribute(reader, i, propertyReplacer)-->Line_21 $$ value = attributeValue[ FD ]
Line_8 $$ String name = null, value = null-->Line_25 $$ name = value = null[ FD ]
Line_2 $$ private static void parseProperties(XMLStreamReader reader, Properties properties, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_7 $$ final int count = reader.getAttributeCount()[ FD ]
Line_11 $$ final String attributeNamespace = reader.getAttributeNamespace(i)-->Line_12 $$ if (attributeNamespace != null && !attributeNamespace.isEmpty()) [ FD ]
Line_10 $$ final String attributeValue = getAttribute(reader, i, propertyReplacer)-->Line_18 $$ name = attributeValue[ FD ]
Line_18 $$ name = attributeValue-->Line_23 $$ properties.put(name, value)[ FD ]
Line_2 $$ private static void parseProperties(XMLStreamReader reader, Properties properties, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_10 $$ final String attributeValue = getAttribute(reader, i, propertyReplacer)[ FD ]
Line_25 $$ name = value = null-->Line_23 $$ properties.put(name, value)[ FD ]
Line_8 $$ String name = null, value = null-->Line_21 $$ value = attributeValue[ FD ]
Line_8 $$ String name = null, value = null-->Line_18 $$ name = attributeValue[ FD ]
Line_9 $$ for (int i = 0; i < count; i++) -->Line_11 $$ final String attributeNamespace = reader.getAttributeNamespace(i)[ CD ]
Line_7 $$ final int count = reader.getAttributeCount()-->Line_9 $$ for (int i = 0; i < count; i++) [ FD ]
Line_9 $$ for (int i = 0; i < count; i++) -->Line_11 $$ final String attributeNamespace = reader.getAttributeNamespace(i)[ FD ]
Line_9 $$ for (int i = 0; i < count; i++) -->Line_12 $$ if (attributeNamespace != null && !attributeNamespace.isEmpty()) [ CD ]
Line_2 $$ private static void parseProperties(XMLStreamReader reader, Properties properties, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_28 $$ throw unexpectedAttribute(reader, i)[ FD ]
Line_2 $$ private static void parseProperties(XMLStreamReader reader, Properties properties, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_4 $$ final Element element = Element.forName(reader.getLocalName())[ FD ]
Line_2 $$ private static void parseProperties(XMLStreamReader reader, Properties properties, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_35 $$ throw unexpectedElement(reader)[ FD ]
Line_2 $$ private static void parseProperties(XMLStreamReader reader, Properties properties, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_31 $$ if (reader.hasNext() && (reader.nextTag() != END_ELEMENT))[ FD ]
Line_9 $$ for (int i = 0; i < count; i++) -->Line_15 $$ final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i))[ CD ]
Line_9 $$ for (int i = 0; i < count; i++) -->Line_28 $$ throw unexpectedAttribute(reader, i)[ FD ]
Line_9 $$ for (int i = 0; i < count; i++) -->Line_10 $$ final String attributeValue = getAttribute(reader, i, propertyReplacer)[ FD ]
Line_21 $$ value = attributeValue-->Line_23 $$ properties.put(name, value)[ FD ]
Line_8 $$ String name = null, value = null-->Line_23 $$ properties.put(name, value)[ FD ]
Line_21 $$ value = attributeValue-->Line_25 $$ name = value = null[ FD ]
Line_2 $$ private static void parseProperties(XMLStreamReader reader, Properties properties, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_32 $$ throw unexpectedElement(reader)[ FD ]
Line_2 $$ private static void parseProperties(XMLStreamReader reader, Properties properties, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_3 $$ while (reader.hasNext() && reader.nextTag() != END_ELEMENT) [ CD ]
Line_22 $$ if (name != null && value != null) -->Line_23 $$ properties.put(name, value)[ CD ]
Line_3 $$ while (reader.hasNext() && reader.nextTag() != END_ELEMENT) -->Line_4 $$ final Element element = Element.forName(reader.getLocalName())[ CD ]
Line_2 $$ private static void parseProperties(XMLStreamReader reader, Properties properties, final PropertyReplacer propertyReplacer) throws XMLStreamException -->Line_11 $$ final String attributeNamespace = reader.getAttributeNamespace(i)[ FD ]
