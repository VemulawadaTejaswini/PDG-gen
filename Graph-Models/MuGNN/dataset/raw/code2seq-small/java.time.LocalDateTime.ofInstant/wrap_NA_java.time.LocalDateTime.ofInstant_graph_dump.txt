Line_3 $$ if (value == null) -->Line_4 $$ return null[ CD ]
Line_9 $$ if (Timestamp.class.isInstance(value)) -->Line_10 $$ final Timestamp ts = (Timestamp) value[ CD ]
Line_2 $$ public <X> LocalDate wrap(X value, WrapperOptions options) -->Line_17 $$ if (Calendar.class.isInstance(value)) [ FD ]
Line_2 $$ public <X> LocalDate wrap(X value, WrapperOptions options) -->Line_6 $$ if (LocalDate.class.isInstance(value)) [ CD ]
Line_2 $$ public <X> LocalDate wrap(X value, WrapperOptions options) -->Line_9 $$ if (Timestamp.class.isInstance(value)) [ CD ]
Line_2 $$ public <X> LocalDate wrap(X value, WrapperOptions options) -->Line_13 $$ if (Long.class.isInstance(value)) [ CD ]
Line_2 $$ public <X> LocalDate wrap(X value, WrapperOptions options) -->Line_13 $$ if (Long.class.isInstance(value)) [ FD ]
Line_17 $$ if (Calendar.class.isInstance(value)) -->Line_19 $$ return LocalDateTime.ofInstant(calendar.toInstant(), calendar.getTimeZone().toZoneId()).toLocalDate()[ CD ]
Line_22 $$ if (java.sql.Date.class.isInstance(value)) -->Line_23 $$ return ((java.sql.Date) value).toLocalDate()[ CD ]
Line_2 $$ public <X> LocalDate wrap(X value, WrapperOptions options) -->Line_17 $$ if (Calendar.class.isInstance(value)) [ CD ]
Line_18 $$ final Calendar calendar = (Calendar) value-->Line_19 $$ return LocalDateTime.ofInstant(calendar.toInstant(), calendar.getTimeZone().toZoneId()).toLocalDate()[ FD ]
Line_22 $$ if (java.sql.Date.class.isInstance(value)) -->Line_25 $$ return Instant.ofEpochMilli(((Date) value).getTime()).atZone(ZoneId.systemDefault()).toLocalDate()[ CD ]
Line_21 $$ if (Date.class.isInstance(value)) -->Line_22 $$ if (java.sql.Date.class.isInstance(value)) [ CD ]
Line_2 $$ public <X> LocalDate wrap(X value, WrapperOptions options) -->Line_28 $$ throw unknownWrap(value.getClass())[ FD ]
Line_13 $$ if (Long.class.isInstance(value)) -->Line_15 $$ return LocalDateTime.ofInstant(instant, ZoneId.systemDefault()).toLocalDate()[ CD ]
Line_2 $$ public <X> LocalDate wrap(X value, WrapperOptions options) -->Line_21 $$ if (Date.class.isInstance(value)) [ FD ]
Line_2 $$ public <X> LocalDate wrap(X value, WrapperOptions options) -->Line_9 $$ if (Timestamp.class.isInstance(value)) [ FD ]
Line_2 $$ public <X> LocalDate wrap(X value, WrapperOptions options) -->Line_6 $$ if (LocalDate.class.isInstance(value)) [ FD ]
Line_6 $$ if (LocalDate.class.isInstance(value)) -->Line_7 $$ return (LocalDate) value[ CD ]
Line_13 $$ if (Long.class.isInstance(value)) -->Line_14 $$ final Instant instant = Instant.ofEpochMilli((Long) value)[ CD ]
Line_9 $$ if (Timestamp.class.isInstance(value)) -->Line_11 $$ return LocalDateTime.ofInstant(ts.toInstant(), ZoneId.systemDefault()).toLocalDate()[ CD ]
Line_2 $$ public <X> LocalDate wrap(X value, WrapperOptions options) -->Line_3 $$ if (value == null) [ FD ]
Line_2 $$ public <X> LocalDate wrap(X value, WrapperOptions options) -->Line_3 $$ if (value == null) [ CD ]
Line_2 $$ public <X> LocalDate wrap(X value, WrapperOptions options) -->Line_22 $$ if (java.sql.Date.class.isInstance(value)) [ FD ]
Line_17 $$ if (Calendar.class.isInstance(value)) -->Line_18 $$ final Calendar calendar = (Calendar) value[ CD ]
Line_14 $$ final Instant instant = Instant.ofEpochMilli((Long) value)-->Line_15 $$ return LocalDateTime.ofInstant(instant, ZoneId.systemDefault()).toLocalDate()[ FD ]
Line_2 $$ public <X> LocalDate wrap(X value, WrapperOptions options) -->Line_21 $$ if (Date.class.isInstance(value)) [ CD ]
Line_10 $$ final Timestamp ts = (Timestamp) value-->Line_11 $$ return LocalDateTime.ofInstant(ts.toInstant(), ZoneId.systemDefault()).toLocalDate()[ FD ]
