Line_2 $$ public static Icon colorize(@NotNull final Icon source, @NotNull Color color, boolean keepGray) -->Line_10 $$ float[] hsb = new float[3][ CD ]
Line_2 $$ public static Icon colorize(@NotNull final Icon source, @NotNull Color color, boolean keepGray) -->Line_5 $$ final Graphics2D g = image.createGraphics()[ CD ]
Line_2 $$ public static Icon colorize(@NotNull final Icon source, @NotNull Color color, boolean keepGray) -->Line_8 $$ final BufferedImage img = UIUtil.createImage(source.getIconWidth(), source.getIconHeight(), Transparency.TRANSLUCENT)[ FD ]
Line_4 $$ final BufferedImage image = UIUtil.createImage(source.getIconWidth(), source.getIconHeight(), Transparency.TRANSLUCENT)-->Line_12 $$ for (int x = 0; x < image.getRaster().getWidth(); x++) [ FD ]
Line_2 $$ public static Icon colorize(@NotNull final Icon source, @NotNull Color color, boolean keepGray) -->Line_8 $$ final BufferedImage img = UIUtil.createImage(source.getIconWidth(), source.getIconHeight(), Transparency.TRANSLUCENT)[ CD ]
Line_8 $$ final BufferedImage img = UIUtil.createImage(source.getIconWidth(), source.getIconHeight(), Transparency.TRANSLUCENT)-->Line_17 $$ img.getRaster().setPixel(x, y, new int[] [ FD ]
Line_12 $$ for (int x = 0; x < image.getRaster().getWidth(); x++) -->Line_13 $$ image.getRaster().getPixel(x, y, rgba)[ CD ]
Line_14 $$ if (rgba[3] != 0) -->Line_15 $$ Color.RGBtoHSB(rgba[0], rgba[1], rgba[2], hsb)[ CD ]
Line_10 $$ float[] hsb = new float[3]-->Line_15 $$ Color.RGBtoHSB(rgba[0], rgba[1], rgba[2], hsb)[ FD ]
Line_2 $$ public static Icon colorize(@NotNull final Icon source, @NotNull Color color, boolean keepGray) -->Line_4 $$ final BufferedImage image = UIUtil.createImage(source.getIconWidth(), source.getIconHeight(), Transparency.TRANSLUCENT)[ FD ]
Line_2 $$ public static Icon colorize(@NotNull final Icon source, @NotNull Color color, boolean keepGray) -->Line_3 $$ float[] base = Color.RGBtoHSB(color.getRed(), color.getGreen(), color.getBlue(), null)[ CD ]
Line_2 $$ public static Icon colorize(@NotNull final Icon source, @NotNull Color color, boolean keepGray) -->Line_21 $$ return createImageIcon(img)[ CD ]
Line_11 $$ for (int y = 0; y < image.getRaster().getHeight(); y++) -->Line_12 $$ for (int x = 0; x < image.getRaster().getWidth(); x++) [ CD ]
Line_9 $$ int[] rgba = new int[4]-->Line_13 $$ image.getRaster().getPixel(x, y, rgba)[ FD ]
Line_14 $$ if (rgba[3] != 0) -->Line_17 $$ img.getRaster().setPixel(x, y, new int[] [ CD ]
Line_2 $$ public static Icon colorize(@NotNull final Icon source, @NotNull Color color, boolean keepGray) -->Line_4 $$ final BufferedImage image = UIUtil.createImage(source.getIconWidth(), source.getIconHeight(), Transparency.TRANSLUCENT)[ CD ]
Line_12 $$ for (int x = 0; x < image.getRaster().getWidth(); x++) -->Line_13 $$ image.getRaster().getPixel(x, y, rgba)[ FD ]
Line_11 $$ for (int y = 0; y < image.getRaster().getHeight(); y++) -->Line_17 $$ img.getRaster().setPixel(x, y, new int[] [ FD ]
Line_5 $$ final Graphics2D g = image.createGraphics()-->Line_7 $$ g.dispose()[ FD ]
Line_2 $$ public static Icon colorize(@NotNull final Icon source, @NotNull Color color, boolean keepGray) -->Line_11 $$ for (int y = 0; y < image.getRaster().getHeight(); y++) [ CD ]
Line_8 $$ final BufferedImage img = UIUtil.createImage(source.getIconWidth(), source.getIconHeight(), Transparency.TRANSLUCENT)-->Line_21 $$ return createImageIcon(img)[ FD ]
Line_12 $$ for (int x = 0; x < image.getRaster().getWidth(); x++) -->Line_14 $$ if (rgba[3] != 0) [ CD ]
Line_12 $$ for (int x = 0; x < image.getRaster().getWidth(); x++) -->Line_17 $$ img.getRaster().setPixel(x, y, new int[] [ FD ]
Line_2 $$ public static Icon colorize(@NotNull final Icon source, @NotNull Color color, boolean keepGray) -->Line_9 $$ int[] rgba = new int[4][ CD ]
Line_4 $$ final BufferedImage image = UIUtil.createImage(source.getIconWidth(), source.getIconHeight(), Transparency.TRANSLUCENT)-->Line_13 $$ image.getRaster().getPixel(x, y, rgba)[ FD ]
Line_2 $$ public static Icon colorize(@NotNull final Icon source, @NotNull Color color, boolean keepGray) -->Line_6 $$ source.paintIcon(null, g, 0, 0)[ FD ]
Line_14 $$ if (rgba[3] != 0) -->Line_16 $$ int rgb = Color.HSBtoRGB(base[0], base[1] * (keepGray ? hsb[1] : 1f), base[2] * hsb[2])[ CD ]
Line_4 $$ final BufferedImage image = UIUtil.createImage(source.getIconWidth(), source.getIconHeight(), Transparency.TRANSLUCENT)-->Line_11 $$ for (int y = 0; y < image.getRaster().getHeight(); y++) [ FD ]
Line_11 $$ for (int y = 0; y < image.getRaster().getHeight(); y++) -->Line_13 $$ image.getRaster().getPixel(x, y, rgba)[ FD ]
Line_2 $$ public static Icon colorize(@NotNull final Icon source, @NotNull Color color, boolean keepGray) -->Line_3 $$ float[] base = Color.RGBtoHSB(color.getRed(), color.getGreen(), color.getBlue(), null)[ FD ]
Line_4 $$ final BufferedImage image = UIUtil.createImage(source.getIconWidth(), source.getIconHeight(), Transparency.TRANSLUCENT)-->Line_5 $$ final Graphics2D g = image.createGraphics()[ FD ]
Line_5 $$ final Graphics2D g = image.createGraphics()-->Line_6 $$ source.paintIcon(null, g, 0, 0)[ FD ]
Line_2 $$ public static Icon colorize(@NotNull final Icon source, @NotNull Color color, boolean keepGray) -->Line_6 $$ source.paintIcon(null, g, 0, 0)[ CD ]
Line_2 $$ public static Icon colorize(@NotNull final Icon source, @NotNull Color color, boolean keepGray) -->Line_7 $$ g.dispose()[ CD ]
