Line_4 $$ ByteBuffer buffer = ByteBuffer.wrap(bytes, bomLength, bytes.length - bomLength)-->Line_6 $$ return decoder.decode(buffer).toString()[ FD ]
Line_5 $$ CharsetDecoder decoder = charset.newDecoder().onMalformedInput(CodingErrorAction.REPORT).onUnmappableCharacter(CodingErrorAction.REPORT)-->Line_6 $$ return decoder.decode(buffer).toString()[ FD ]
Line_2 $$ public static String tryDecodeString(@NotNull byte[] bytes, @NotNull final Charset charset) throws CharacterCodingException -->Line_3 $$ int bomLength = CharsetToolkit.getBOMLength(bytes, charset)[ CD ]
Line_2 $$ public static String tryDecodeString(@NotNull byte[] bytes, @NotNull final Charset charset) throws CharacterCodingException -->Line_4 $$ ByteBuffer buffer = ByteBuffer.wrap(bytes, bomLength, bytes.length - bomLength)[ CD ]
Line_2 $$ public static String tryDecodeString(@NotNull byte[] bytes, @NotNull final Charset charset) throws CharacterCodingException -->Line_6 $$ return decoder.decode(buffer).toString()[ CD ]
Line_2 $$ public static String tryDecodeString(@NotNull byte[] bytes, @NotNull final Charset charset) throws CharacterCodingException -->Line_3 $$ int bomLength = CharsetToolkit.getBOMLength(bytes, charset)[ FD ]
Line_3 $$ int bomLength = CharsetToolkit.getBOMLength(bytes, charset)-->Line_4 $$ ByteBuffer buffer = ByteBuffer.wrap(bytes, bomLength, bytes.length - bomLength)[ FD ]
Line_2 $$ public static String tryDecodeString(@NotNull byte[] bytes, @NotNull final Charset charset) throws CharacterCodingException -->Line_5 $$ CharsetDecoder decoder = charset.newDecoder().onMalformedInput(CodingErrorAction.REPORT).onUnmappableCharacter(CodingErrorAction.REPORT)[ CD ]
Line_2 $$ public static String tryDecodeString(@NotNull byte[] bytes, @NotNull final Charset charset) throws CharacterCodingException -->Line_5 $$ CharsetDecoder decoder = charset.newDecoder().onMalformedInput(CodingErrorAction.REPORT).onUnmappableCharacter(CodingErrorAction.REPORT)[ FD ]
Line_2 $$ public static String tryDecodeString(@NotNull byte[] bytes, @NotNull final Charset charset) throws CharacterCodingException -->Line_4 $$ ByteBuffer buffer = ByteBuffer.wrap(bytes, bomLength, bytes.length - bomLength)[ FD ]
