Line_4 $$ DataOutputStream out = new DataOutputStream(responseBuf)-->Line_19 $$ out.writeInt(fullLength)[ FD ]
Line_12 $$ RpcResponseHeaderProto header = headerBuilder.build()-->Line_20 $$ header.writeDelimitedTo(out)[ FD ]
Line_13 $$ final int headerLen = header.getSerializedSize()-->Line_42 $$ final int fullLength = CodedOutputStream.computeRawVarint32Size(headerLen) + headerLen[ FD ]
Line_5 $$ RpcResponseHeaderProto.Builder headerBuilder = RpcResponseHeaderProto.newBuilder()-->Line_12 $$ RpcResponseHeaderProto header = headerBuilder.build()[ FD ]
Line_5 $$ RpcResponseHeaderProto.Builder headerBuilder = RpcResponseHeaderProto.newBuilder()-->Line_6 $$ headerBuilder.setClientId(ByteString.copyFrom(call.clientId))[ FD ]
Line_12 $$ RpcResponseHeaderProto header = headerBuilder.build()-->Line_28 $$ header.writeDelimitedTo(out)[ FD ]
Line_23 $$ final DataOutputBuffer buf = new DataOutputBuffer()-->Line_29 $$ out.write(data, 0, buf.getLength())[ FD ]
Line_12 $$ RpcResponseHeaderProto header = headerBuilder.build()-->Line_41 $$ int headerLen = header.getSerializedSize()[ FD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_7 $$ headerBuilder.setCallId(call.callId)[ CD ]
Line_5 $$ RpcResponseHeaderProto.Builder headerBuilder = RpcResponseHeaderProto.newBuilder()-->Line_8 $$ headerBuilder.setRetryCount(call.retryCount)[ FD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_6 $$ headerBuilder.setClientId(ByteString.copyFrom(call.clientId))[ CD ]
Line_18 $$ fullLength += resWrapper.getLength()-->Line_43 $$ out.writeInt(fullLength)[ FD ]
Line_11 $$ if (status == RpcStatusProto.SUCCESS) -->Line_38 $$ headerBuilder.setErrorMsg(error)[ CD ]
Line_5 $$ RpcResponseHeaderProto.Builder headerBuilder = RpcResponseHeaderProto.newBuilder()-->Line_40 $$ RpcResponseHeaderProto header = headerBuilder.build()[ FD ]
Line_18 $$ fullLength += resWrapper.getLength()-->Line_27 $$ out.writeInt(fullLength)[ FD ]
Line_4 $$ DataOutputStream out = new DataOutputStream(responseBuf)-->Line_43 $$ out.writeInt(fullLength)[ FD ]
Line_5 $$ RpcResponseHeaderProto.Builder headerBuilder = RpcResponseHeaderProto.newBuilder()-->Line_37 $$ headerBuilder.setExceptionClassName(errorClass)[ FD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_21 $$ rv.write(out)[ FD ]
Line_11 $$ if (status == RpcStatusProto.SUCCESS) -->Line_43 $$ out.writeInt(fullLength)[ CD ]
Line_26 $$ fullLength += buf.getLength()-->Line_27 $$ out.writeInt(fullLength)[ FD ]
Line_11 $$ if (status == RpcStatusProto.SUCCESS) -->Line_13 $$ final int headerLen = header.getSerializedSize()[ CD ]
Line_4 $$ DataOutputStream out = new DataOutputStream(responseBuf)-->Line_44 $$ header.writeDelimitedTo(out)[ FD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_49 $$ call.setResponse(ByteBuffer.wrap(responseBuf.toByteArray()))[ CD ]
Line_11 $$ if (status == RpcStatusProto.SUCCESS) -->Line_37 $$ headerBuilder.setExceptionClassName(errorClass)[ CD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_4 $$ DataOutputStream out = new DataOutputStream(responseBuf)[ CD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_24 $$ rv.write(buf)[ FD ]
Line_4 $$ DataOutputStream out = new DataOutputStream(responseBuf)-->Line_27 $$ out.writeInt(fullLength)[ FD ]
Line_5 $$ RpcResponseHeaderProto.Builder headerBuilder = RpcResponseHeaderProto.newBuilder()-->Line_7 $$ headerBuilder.setCallId(call.callId)[ FD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_39 $$ headerBuilder.setErrorDetail(erCode)[ FD ]
Line_18 $$ fullLength += resWrapper.getLength()-->Line_19 $$ out.writeInt(fullLength)[ FD ]
Line_11 $$ if (status == RpcStatusProto.SUCCESS) -->Line_12 $$ RpcResponseHeaderProto header = headerBuilder.build()[ CD ]
Line_14 $$ int fullLength = CodedOutputStream.computeRawVarint32Size(headerLen) + headerLen-->Line_26 $$ fullLength += buf.getLength()[ FD ]
Line_23 $$ final DataOutputBuffer buf = new DataOutputBuffer()-->Line_26 $$ fullLength += buf.getLength()[ FD ]
Line_14 $$ int fullLength = CodedOutputStream.computeRawVarint32Size(headerLen) + headerLen-->Line_43 $$ out.writeInt(fullLength)[ FD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_47 $$ wrapWithSasl(responseBuf, call)[ FD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_5 $$ RpcResponseHeaderProto.Builder headerBuilder = RpcResponseHeaderProto.newBuilder()[ CD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_9 $$ headerBuilder.setStatus(status)[ CD ]
Line_16 $$ if (rv instanceof ProtobufRpcEngine.RpcWrapper) -->Line_17 $$ ProtobufRpcEngine.RpcWrapper resWrapper = (ProtobufRpcEngine.RpcWrapper) rv[ CD ]
Line_4 $$ DataOutputStream out = new DataOutputStream(responseBuf)-->Line_28 $$ header.writeDelimitedTo(out)[ FD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_16 $$ if (rv instanceof ProtobufRpcEngine.RpcWrapper) [ FD ]
Line_5 $$ RpcResponseHeaderProto.Builder headerBuilder = RpcResponseHeaderProto.newBuilder()-->Line_9 $$ headerBuilder.setStatus(status)[ FD ]
Line_14 $$ int fullLength = CodedOutputStream.computeRawVarint32Size(headerLen) + headerLen-->Line_18 $$ fullLength += resWrapper.getLength()[ FD ]
Line_16 $$ if (rv instanceof ProtobufRpcEngine.RpcWrapper) -->Line_23 $$ final DataOutputBuffer buf = new DataOutputBuffer()[ CD ]
Line_25 $$ byte[] data = buf.getData()-->Line_29 $$ out.write(data, 0, buf.getLength())[ FD ]
Line_23 $$ final DataOutputBuffer buf = new DataOutputBuffer()-->Line_24 $$ rv.write(buf)[ FD ]
Line_18 $$ fullLength += resWrapper.getLength()-->Line_26 $$ fullLength += buf.getLength()[ FD ]
Line_12 $$ RpcResponseHeaderProto header = headerBuilder.build()-->Line_44 $$ header.writeDelimitedTo(out)[ FD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_9 $$ headerBuilder.setStatus(status)[ FD ]
Line_4 $$ DataOutputStream out = new DataOutputStream(responseBuf)-->Line_29 $$ out.write(data, 0, buf.getLength())[ FD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_37 $$ headerBuilder.setExceptionClassName(errorClass)[ FD ]
Line_16 $$ if (rv instanceof ProtobufRpcEngine.RpcWrapper) -->Line_19 $$ out.writeInt(fullLength)[ CD ]
Line_14 $$ int fullLength = CodedOutputStream.computeRawVarint32Size(headerLen) + headerLen-->Line_19 $$ out.writeInt(fullLength)[ FD ]
Line_4 $$ DataOutputStream out = new DataOutputStream(responseBuf)-->Line_21 $$ rv.write(out)[ FD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_11 $$ if (status == RpcStatusProto.SUCCESS) [ FD ]
Line_16 $$ if (rv instanceof ProtobufRpcEngine.RpcWrapper) -->Line_24 $$ rv.write(buf)[ CD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_11 $$ if (status == RpcStatusProto.SUCCESS) [ CD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_38 $$ headerBuilder.setErrorMsg(error)[ FD ]
Line_16 $$ if (rv instanceof ProtobufRpcEngine.RpcWrapper) -->Line_28 $$ header.writeDelimitedTo(out)[ CD ]
Line_11 $$ if (status == RpcStatusProto.SUCCESS) -->Line_14 $$ int fullLength = CodedOutputStream.computeRawVarint32Size(headerLen) + headerLen[ CD ]
Line_16 $$ if (rv instanceof ProtobufRpcEngine.RpcWrapper) -->Line_18 $$ fullLength += resWrapper.getLength()[ CD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_33 $$ setupResponse(responseBuf, call, RpcStatusProto.ERROR, RpcErrorCodeProto.ERROR_SERIALIZING_RESPONSE, null, t.getClass().getName(), StringUtils.stringifyException(t))[ FD ]
Line_46 $$ if (call.connection.useWrap) -->Line_47 $$ wrapWithSasl(responseBuf, call)[ CD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_49 $$ call.setResponse(ByteBuffer.wrap(responseBuf.toByteArray()))[ FD ]
Line_23 $$ final DataOutputBuffer buf = new DataOutputBuffer()-->Line_25 $$ byte[] data = buf.getData()[ FD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_10 $$ headerBuilder.setServerIpcVersionNum(CURRENT_VERSION)[ CD ]
Line_5 $$ RpcResponseHeaderProto.Builder headerBuilder = RpcResponseHeaderProto.newBuilder()-->Line_10 $$ headerBuilder.setServerIpcVersionNum(CURRENT_VERSION)[ FD ]
Line_4 $$ DataOutputStream out = new DataOutputStream(responseBuf)-->Line_20 $$ header.writeDelimitedTo(out)[ FD ]
Line_11 $$ if (status == RpcStatusProto.SUCCESS) -->Line_41 $$ int headerLen = header.getSerializedSize()[ CD ]
Line_13 $$ final int headerLen = header.getSerializedSize()-->Line_14 $$ int fullLength = CodedOutputStream.computeRawVarint32Size(headerLen) + headerLen[ FD ]
Line_12 $$ RpcResponseHeaderProto header = headerBuilder.build()-->Line_13 $$ final int headerLen = header.getSerializedSize()[ FD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_3 $$ responseBuf.reset()[ CD ]
Line_16 $$ if (rv instanceof ProtobufRpcEngine.RpcWrapper) -->Line_21 $$ rv.write(out)[ CD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_3 $$ responseBuf.reset()[ FD ]
Line_14 $$ int fullLength = CodedOutputStream.computeRawVarint32Size(headerLen) + headerLen-->Line_27 $$ out.writeInt(fullLength)[ FD ]
Line_16 $$ if (rv instanceof ProtobufRpcEngine.RpcWrapper) -->Line_26 $$ fullLength += buf.getLength()[ CD ]
Line_5 $$ RpcResponseHeaderProto.Builder headerBuilder = RpcResponseHeaderProto.newBuilder()-->Line_38 $$ headerBuilder.setErrorMsg(error)[ FD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_46 $$ if (call.connection.useWrap) [ CD ]
Line_11 $$ if (status == RpcStatusProto.SUCCESS) -->Line_44 $$ header.writeDelimitedTo(out)[ CD ]
Line_26 $$ fullLength += buf.getLength()-->Line_43 $$ out.writeInt(fullLength)[ FD ]
Line_11 $$ if (status == RpcStatusProto.SUCCESS) -->Line_39 $$ headerBuilder.setErrorDetail(erCode)[ CD ]
Line_16 $$ if (rv instanceof ProtobufRpcEngine.RpcWrapper) -->Line_29 $$ out.write(data, 0, buf.getLength())[ CD ]
Line_17 $$ ProtobufRpcEngine.RpcWrapper resWrapper = (ProtobufRpcEngine.RpcWrapper) rv-->Line_18 $$ fullLength += resWrapper.getLength()[ FD ]
Line_2 $$ private void setupResponse(ByteArrayOutputStream responseBuf, Call call, RpcStatusProto status, RpcErrorCodeProto erCode, Writable rv, String errorClass, String error) throws IOException -->Line_8 $$ headerBuilder.setRetryCount(call.retryCount)[ CD ]
Line_16 $$ if (rv instanceof ProtobufRpcEngine.RpcWrapper) -->Line_20 $$ header.writeDelimitedTo(out)[ CD ]
Line_16 $$ if (rv instanceof ProtobufRpcEngine.RpcWrapper) -->Line_27 $$ out.writeInt(fullLength)[ CD ]
Line_11 $$ if (status == RpcStatusProto.SUCCESS) -->Line_40 $$ RpcResponseHeaderProto header = headerBuilder.build()[ CD ]
Line_16 $$ if (rv instanceof ProtobufRpcEngine.RpcWrapper) -->Line_25 $$ byte[] data = buf.getData()[ CD ]
Line_5 $$ RpcResponseHeaderProto.Builder headerBuilder = RpcResponseHeaderProto.newBuilder()-->Line_39 $$ headerBuilder.setErrorDetail(erCode)[ FD ]
