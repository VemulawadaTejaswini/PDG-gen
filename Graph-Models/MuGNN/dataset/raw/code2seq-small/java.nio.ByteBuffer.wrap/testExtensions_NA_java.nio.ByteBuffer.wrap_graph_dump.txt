Line_2 $$ public void testExtensions() throws IOException -->Line_6 $$ assertTrue("extensions should be empty", metadata.params.extensions.isEmpty())[ CD ]
Line_3 $$ String keyspace = "SandBox"-->Line_9 $$ updateTable(keyspace, metadata, copy)[ FD ]
Line_2 $$ public void testExtensions() throws IOException -->Line_3 $$ String keyspace = "SandBox"[ CD ]
Line_5 $$ CFMetaData metadata = Schema.instance.getCFMetaData(keyspace, "test")-->Line_10 $$ metadata = Schema.instance.getCFMetaData(keyspace, "test")[ FD ]
Line_2 $$ public void testExtensions() throws IOException -->Line_11 $$ assertEquals(extensions, metadata.params.extensions)[ CD ]
Line_3 $$ String keyspace = "SandBox"-->Line_5 $$ CFMetaData metadata = Schema.instance.getCFMetaData(keyspace, "test")[ FD ]
Line_3 $$ String keyspace = "SandBox"-->Line_4 $$ createTable(keyspace, "CREATE TABLE test (a text primary key, b int, c int)")[ FD ]
Line_2 $$ public void testExtensions() throws IOException -->Line_7 $$ ImmutableMap<String, ByteBuffer> extensions = ImmutableMap.of("From ... with Love", ByteBuffer.wrap(new byte[] [ CD ]
Line_5 $$ CFMetaData metadata = Schema.instance.getCFMetaData(keyspace, "test")-->Line_9 $$ updateTable(keyspace, metadata, copy)[ FD ]
Line_2 $$ public void testExtensions() throws IOException -->Line_10 $$ metadata = Schema.instance.getCFMetaData(keyspace, "test")[ CD ]
Line_7 $$ ImmutableMap<String, ByteBuffer> extensions = ImmutableMap.of("From ... with Love", ByteBuffer.wrap(new byte[] -->Line_8 $$ CFMetaData copy = metadata.copy().extensions(extensions)[ FD ]
Line_2 $$ public void testExtensions() throws IOException -->Line_5 $$ CFMetaData metadata = Schema.instance.getCFMetaData(keyspace, "test")[ CD ]
Line_2 $$ public void testExtensions() throws IOException -->Line_9 $$ updateTable(keyspace, metadata, copy)[ CD ]
Line_2 $$ public void testExtensions() throws IOException -->Line_4 $$ createTable(keyspace, "CREATE TABLE test (a text primary key, b int, c int)")[ CD ]
Line_5 $$ CFMetaData metadata = Schema.instance.getCFMetaData(keyspace, "test")-->Line_8 $$ CFMetaData copy = metadata.copy().extensions(extensions)[ FD ]
Line_8 $$ CFMetaData copy = metadata.copy().extensions(extensions)-->Line_9 $$ updateTable(keyspace, metadata, copy)[ FD ]
Line_7 $$ ImmutableMap<String, ByteBuffer> extensions = ImmutableMap.of("From ... with Love", ByteBuffer.wrap(new byte[] -->Line_11 $$ assertEquals(extensions, metadata.params.extensions)[ FD ]
Line_2 $$ public void testExtensions() throws IOException -->Line_8 $$ CFMetaData copy = metadata.copy().extensions(extensions)[ CD ]
Line_3 $$ String keyspace = "SandBox"-->Line_10 $$ metadata = Schema.instance.getCFMetaData(keyspace, "test")[ FD ]
