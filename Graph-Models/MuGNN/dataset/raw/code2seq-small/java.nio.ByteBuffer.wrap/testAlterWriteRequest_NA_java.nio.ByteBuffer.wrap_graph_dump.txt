Line_16 $$ ByteBuffer appendedData = writeCtx2.getData()-->Line_34 $$ Assert.assertTrue(appendedData.get(position) == (byte) 1)[ FD ]
Line_12 $$ WriteCtx writeCtx1 = new WriteCtx(request.getHandle(), request.getOffset(), request.getCount(), WriteCtx.INVALID_ORIGINAL_COUNT, request.getStableHow(), request.getData(), null, 1, false, WriteCtx.DataState.NO_DUMP)-->Line_13 $$ Assert.assertTrue(writeCtx1.getData().array().length == originalCount)[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_14 $$ OpenFileCtx.alterWriteRequest(request, 12)[ CD ]
Line_18 $$ int limit = appendedData.limit()-->Line_42 $$ limit = appendedData.limit()[ FD ]
Line_11 $$ WRITE3Request request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)-->Line_15 $$ WriteCtx writeCtx2 = new WriteCtx(request.getHandle(), request.getOffset(), request.getCount(), originalCount, request.getStableHow(), request.getData(), null, 2, false, WriteCtx.DataState.NO_DUMP)[ FD ]
Line_26 $$ request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)-->Line_27 $$ OpenFileCtx.alterWriteRequest(request, 1)[ FD ]
Line_16 $$ ByteBuffer appendedData = writeCtx2.getData()-->Line_42 $$ limit = appendedData.limit()[ FD ]
Line_26 $$ request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)-->Line_39 $$ WriteCtx writeCtx4 = new WriteCtx(request.getHandle(), request.getOffset(), request.getCount(), originalCount, request.getStableHow(), request.getData(), null, 2, false, WriteCtx.DataState.NO_DUMP)[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_36 $$ buffer.position(0)[ CD ]
Line_30 $$ position = appendedData.position()-->Line_41 $$ position = appendedData.position()[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_40 $$ appendedData = writeCtx4.getData()[ CD ]
Line_11 $$ WRITE3Request request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)-->Line_14 $$ OpenFileCtx.alterWriteRequest(request, 12)[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_20 $$ Assert.assertTrue(limit - position == 8)[ CD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_29 $$ appendedData = writeCtx3.getData()[ CD ]
Line_17 $$ int position = appendedData.position()-->Line_41 $$ position = appendedData.position()[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_9 $$ buffer.flip()[ CD ]
Line_11 $$ WRITE3Request request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)-->Line_38 $$ OpenFileCtx.alterWriteRequest(request, 19)[ FD ]
Line_30 $$ position = appendedData.position()-->Line_34 $$ Assert.assertTrue(appendedData.get(position) == (byte) 1)[ FD ]
Line_16 $$ ByteBuffer appendedData = writeCtx2.getData()-->Line_35 $$ Assert.assertTrue(appendedData.get(position + 18) == (byte) 19)[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_43 $$ Assert.assertTrue(position == 19)[ CD ]
Line_5 $$ ByteBuffer buffer = ByteBuffer.wrap(data)-->Line_10 $$ int originalCount = buffer.array().length[ FD ]
Line_18 $$ int limit = appendedData.limit()-->Line_31 $$ limit = appendedData.limit()[ FD ]
Line_16 $$ ByteBuffer appendedData = writeCtx2.getData()-->Line_18 $$ int limit = appendedData.limit()[ FD ]
Line_11 $$ WRITE3Request request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)-->Line_27 $$ OpenFileCtx.alterWriteRequest(request, 1)[ FD ]
Line_6 $$ for (int i = 0; i < len; i++) -->Line_7 $$ buffer.put((byte) i)[ CD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_4 $$ byte[] data = new byte[len][ CD ]
Line_16 $$ ByteBuffer appendedData = writeCtx2.getData()-->Line_17 $$ int position = appendedData.position()[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_12 $$ WriteCtx writeCtx1 = new WriteCtx(request.getHandle(), request.getOffset(), request.getCount(), WriteCtx.INVALID_ORIGINAL_COUNT, request.getStableHow(), request.getData(), null, 1, false, WriteCtx.DataState.NO_DUMP)[ CD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_38 $$ OpenFileCtx.alterWriteRequest(request, 19)[ CD ]
Line_37 $$ request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)-->Line_38 $$ OpenFileCtx.alterWriteRequest(request, 19)[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_19 $$ Assert.assertTrue(position == 12)[ CD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_6 $$ for (int i = 0; i < len; i++) [ CD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_21 $$ Assert.assertTrue(appendedData.get(position) == (byte) 12)[ CD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_23 $$ Assert.assertTrue(appendedData.get(position + 2) == (byte) 14)[ CD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_13 $$ Assert.assertTrue(writeCtx1.getData().array().length == originalCount)[ CD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_41 $$ position = appendedData.position()[ CD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_5 $$ ByteBuffer buffer = ByteBuffer.wrap(data)[ CD ]
Line_5 $$ ByteBuffer buffer = ByteBuffer.wrap(data)-->Line_7 $$ buffer.put((byte) i)[ FD ]
Line_16 $$ ByteBuffer appendedData = writeCtx2.getData()-->Line_40 $$ appendedData = writeCtx4.getData()[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_11 $$ WRITE3Request request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)[ CD ]
Line_29 $$ appendedData = writeCtx3.getData()-->Line_45 $$ Assert.assertTrue(appendedData.get(position) == (byte) 19)[ FD ]
Line_29 $$ appendedData = writeCtx3.getData()-->Line_34 $$ Assert.assertTrue(appendedData.get(position) == (byte) 1)[ FD ]
Line_16 $$ ByteBuffer appendedData = writeCtx2.getData()-->Line_45 $$ Assert.assertTrue(appendedData.get(position) == (byte) 19)[ FD ]
Line_17 $$ int position = appendedData.position()-->Line_30 $$ position = appendedData.position()[ FD ]
Line_26 $$ request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)-->Line_37 $$ request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)[ FD ]
Line_5 $$ ByteBuffer buffer = ByteBuffer.wrap(data)-->Line_36 $$ buffer.position(0)[ FD ]
Line_31 $$ limit = appendedData.limit()-->Line_42 $$ limit = appendedData.limit()[ FD ]
Line_41 $$ position = appendedData.position()-->Line_45 $$ Assert.assertTrue(appendedData.get(position) == (byte) 19)[ FD ]
Line_37 $$ request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)-->Line_39 $$ WriteCtx writeCtx4 = new WriteCtx(request.getHandle(), request.getOffset(), request.getCount(), originalCount, request.getStableHow(), request.getData(), null, 2, false, WriteCtx.DataState.NO_DUMP)[ FD ]
Line_29 $$ appendedData = writeCtx3.getData()-->Line_42 $$ limit = appendedData.limit()[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_39 $$ WriteCtx writeCtx4 = new WriteCtx(request.getHandle(), request.getOffset(), request.getCount(), originalCount, request.getStableHow(), request.getData(), null, 2, false, WriteCtx.DataState.NO_DUMP)[ CD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_34 $$ Assert.assertTrue(appendedData.get(position) == (byte) 1)[ CD ]
Line_11 $$ WRITE3Request request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)-->Line_37 $$ request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)[ FD ]
Line_17 $$ int position = appendedData.position()-->Line_21 $$ Assert.assertTrue(appendedData.get(position) == (byte) 12)[ FD ]
Line_16 $$ ByteBuffer appendedData = writeCtx2.getData()-->Line_21 $$ Assert.assertTrue(appendedData.get(position) == (byte) 12)[ FD ]
Line_5 $$ ByteBuffer buffer = ByteBuffer.wrap(data)-->Line_25 $$ buffer.position(0)[ FD ]
Line_40 $$ appendedData = writeCtx4.getData()-->Line_45 $$ Assert.assertTrue(appendedData.get(position) == (byte) 19)[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_10 $$ int originalCount = buffer.array().length[ CD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_26 $$ request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)[ CD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_28 $$ WriteCtx writeCtx3 = new WriteCtx(request.getHandle(), request.getOffset(), request.getCount(), originalCount, request.getStableHow(), request.getData(), null, 2, false, WriteCtx.DataState.NO_DUMP)[ CD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_15 $$ WriteCtx writeCtx2 = new WriteCtx(request.getHandle(), request.getOffset(), request.getCount(), originalCount, request.getStableHow(), request.getData(), null, 2, false, WriteCtx.DataState.NO_DUMP)[ CD ]
Line_40 $$ appendedData = writeCtx4.getData()-->Line_42 $$ limit = appendedData.limit()[ FD ]
Line_5 $$ ByteBuffer buffer = ByteBuffer.wrap(data)-->Line_9 $$ buffer.flip()[ FD ]
Line_17 $$ int position = appendedData.position()-->Line_34 $$ Assert.assertTrue(appendedData.get(position) == (byte) 1)[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_17 $$ int position = appendedData.position()[ CD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_33 $$ Assert.assertTrue(limit - position == 19)[ CD ]
Line_29 $$ appendedData = writeCtx3.getData()-->Line_41 $$ position = appendedData.position()[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_25 $$ buffer.position(0)[ CD ]
Line_15 $$ WriteCtx writeCtx2 = new WriteCtx(request.getHandle(), request.getOffset(), request.getCount(), originalCount, request.getStableHow(), request.getData(), null, 2, false, WriteCtx.DataState.NO_DUMP)-->Line_16 $$ ByteBuffer appendedData = writeCtx2.getData()[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_18 $$ int limit = appendedData.limit()[ CD ]
Line_11 $$ WRITE3Request request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)-->Line_39 $$ WriteCtx writeCtx4 = new WriteCtx(request.getHandle(), request.getOffset(), request.getCount(), originalCount, request.getStableHow(), request.getData(), null, 2, false, WriteCtx.DataState.NO_DUMP)[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_44 $$ Assert.assertTrue(limit - position == 1)[ CD ]
Line_11 $$ WRITE3Request request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)-->Line_26 $$ request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)[ FD ]
Line_16 $$ ByteBuffer appendedData = writeCtx2.getData()-->Line_22 $$ Assert.assertTrue(appendedData.get(position + 1) == (byte) 13)[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_24 $$ Assert.assertTrue(appendedData.get(position + 7) == (byte) 19)[ CD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_32 $$ Assert.assertTrue(position == 1)[ CD ]
Line_3 $$ int len = 20-->Line_6 $$ for (int i = 0; i < len; i++) [ FD ]
Line_4 $$ byte[] data = new byte[len]-->Line_5 $$ ByteBuffer buffer = ByteBuffer.wrap(data)[ FD ]
Line_16 $$ ByteBuffer appendedData = writeCtx2.getData()-->Line_31 $$ limit = appendedData.limit()[ FD ]
Line_30 $$ position = appendedData.position()-->Line_45 $$ Assert.assertTrue(appendedData.get(position) == (byte) 19)[ FD ]
Line_29 $$ appendedData = writeCtx3.getData()-->Line_40 $$ appendedData = writeCtx4.getData()[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_22 $$ Assert.assertTrue(appendedData.get(position + 1) == (byte) 13)[ CD ]
Line_11 $$ WRITE3Request request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)-->Line_12 $$ WriteCtx writeCtx1 = new WriteCtx(request.getHandle(), request.getOffset(), request.getCount(), WriteCtx.INVALID_ORIGINAL_COUNT, request.getStableHow(), request.getData(), null, 1, false, WriteCtx.DataState.NO_DUMP)[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_30 $$ position = appendedData.position()[ CD ]
Line_29 $$ appendedData = writeCtx3.getData()-->Line_30 $$ position = appendedData.position()[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_3 $$ int len = 20[ CD ]
Line_26 $$ request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)-->Line_38 $$ OpenFileCtx.alterWriteRequest(request, 19)[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_31 $$ limit = appendedData.limit()[ CD ]
Line_39 $$ WriteCtx writeCtx4 = new WriteCtx(request.getHandle(), request.getOffset(), request.getCount(), originalCount, request.getStableHow(), request.getData(), null, 2, false, WriteCtx.DataState.NO_DUMP)-->Line_40 $$ appendedData = writeCtx4.getData()[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_42 $$ limit = appendedData.limit()[ CD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_45 $$ Assert.assertTrue(appendedData.get(position) == (byte) 19)[ CD ]
Line_16 $$ ByteBuffer appendedData = writeCtx2.getData()-->Line_23 $$ Assert.assertTrue(appendedData.get(position + 2) == (byte) 14)[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_37 $$ request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)[ CD ]
Line_29 $$ appendedData = writeCtx3.getData()-->Line_31 $$ limit = appendedData.limit()[ FD ]
Line_29 $$ appendedData = writeCtx3.getData()-->Line_35 $$ Assert.assertTrue(appendedData.get(position + 18) == (byte) 19)[ FD ]
Line_16 $$ ByteBuffer appendedData = writeCtx2.getData()-->Line_41 $$ position = appendedData.position()[ FD ]
Line_40 $$ appendedData = writeCtx4.getData()-->Line_41 $$ position = appendedData.position()[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_27 $$ OpenFileCtx.alterWriteRequest(request, 1)[ CD ]
Line_16 $$ ByteBuffer appendedData = writeCtx2.getData()-->Line_30 $$ position = appendedData.position()[ FD ]
Line_16 $$ ByteBuffer appendedData = writeCtx2.getData()-->Line_24 $$ Assert.assertTrue(appendedData.get(position + 7) == (byte) 19)[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_16 $$ ByteBuffer appendedData = writeCtx2.getData()[ CD ]
Line_17 $$ int position = appendedData.position()-->Line_45 $$ Assert.assertTrue(appendedData.get(position) == (byte) 19)[ FD ]
Line_26 $$ request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)-->Line_28 $$ WriteCtx writeCtx3 = new WriteCtx(request.getHandle(), request.getOffset(), request.getCount(), originalCount, request.getStableHow(), request.getData(), null, 2, false, WriteCtx.DataState.NO_DUMP)[ FD ]
Line_11 $$ WRITE3Request request = new WRITE3Request(new FileHandle(), 0, data.length, WriteStableHow.UNSTABLE, buffer)-->Line_28 $$ WriteCtx writeCtx3 = new WriteCtx(request.getHandle(), request.getOffset(), request.getCount(), originalCount, request.getStableHow(), request.getData(), null, 2, false, WriteCtx.DataState.NO_DUMP)[ FD ]
Line_2 $$ public void testAlterWriteRequest() throws IOException -->Line_35 $$ Assert.assertTrue(appendedData.get(position + 18) == (byte) 19)[ CD ]
Line_28 $$ WriteCtx writeCtx3 = new WriteCtx(request.getHandle(), request.getOffset(), request.getCount(), originalCount, request.getStableHow(), request.getData(), null, 2, false, WriteCtx.DataState.NO_DUMP)-->Line_29 $$ appendedData = writeCtx3.getData()[ FD ]
Line_16 $$ ByteBuffer appendedData = writeCtx2.getData()-->Line_29 $$ appendedData = writeCtx3.getData()[ FD ]
