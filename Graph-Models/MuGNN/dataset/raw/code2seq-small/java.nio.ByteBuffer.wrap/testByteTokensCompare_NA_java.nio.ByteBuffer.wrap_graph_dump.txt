Line_3 $$ Token t1 = new BytesToken(ByteBuffer.wrap(new byte[] -->Line_6 $$ assert t1.compareTo(t2) == 0[ FD ]
Line_2 $$ public void testByteTokensCompare() -->Line_10 $$ Token t4 = new BytesToken(new byte[] [ CD ]
Line_3 $$ Token t1 = new BytesToken(ByteBuffer.wrap(new byte[] -->Line_14 $$ assert t1.compareTo(t4) == 0[ FD ]
Line_3 $$ Token t1 = new BytesToken(ByteBuffer.wrap(new byte[] -->Line_7 $$ assert t1.compareTo(t3) < 0[ FD ]
Line_5 $$ Token t3 = new BytesToken(ByteBuffer.wrap(new byte[] -->Line_8 $$ assert t3.compareTo(t1) > 0[ FD ]
Line_10 $$ Token t4 = new BytesToken(new byte[] -->Line_13 $$ assert t5.compareTo(t4) > 0[ FD ]
Line_10 $$ Token t4 = new BytesToken(new byte[] -->Line_14 $$ assert t1.compareTo(t4) == 0[ FD ]
Line_11 $$ Token t5 = new BytesToken(new byte[] -->Line_13 $$ assert t5.compareTo(t4) > 0[ FD ]
Line_5 $$ Token t3 = new BytesToken(ByteBuffer.wrap(new byte[] -->Line_7 $$ assert t1.compareTo(t3) < 0[ FD ]
Line_11 $$ Token t5 = new BytesToken(new byte[] -->Line_12 $$ assert t4.compareTo(t5) < 0[ FD ]
Line_3 $$ Token t1 = new BytesToken(ByteBuffer.wrap(new byte[] -->Line_9 $$ assert t1.compareTo(t1) == 0[ FD ]
Line_2 $$ public void testByteTokensCompare() -->Line_11 $$ Token t5 = new BytesToken(new byte[] [ CD ]
Line_2 $$ public void testByteTokensCompare() -->Line_4 $$ Token t2 = new BytesToken(ByteBuffer.wrap(new byte[] [ CD ]
Line_2 $$ public void testByteTokensCompare() -->Line_3 $$ Token t1 = new BytesToken(ByteBuffer.wrap(new byte[] [ CD ]
Line_3 $$ Token t1 = new BytesToken(ByteBuffer.wrap(new byte[] -->Line_8 $$ assert t3.compareTo(t1) > 0[ FD ]
Line_4 $$ Token t2 = new BytesToken(ByteBuffer.wrap(new byte[] -->Line_6 $$ assert t1.compareTo(t2) == 0[ FD ]
Line_10 $$ Token t4 = new BytesToken(new byte[] -->Line_12 $$ assert t4.compareTo(t5) < 0[ FD ]
Line_2 $$ public void testByteTokensCompare() -->Line_5 $$ Token t3 = new BytesToken(ByteBuffer.wrap(new byte[] [ CD ]
