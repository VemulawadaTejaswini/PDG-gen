Line_9 $$ byte[] bytes2 = new byte[16]-->Line_13 $$ assert new TimeUUIDType().compare(ByteBuffer.wrap(bytes1), ByteBuffer.wrap(bytes2)) != 0[ FD ]
Line_9 $$ byte[] bytes2 = new byte[16]-->Line_10 $$ ByteBuffer bb2 = ByteBuffer.wrap(bytes2)[ FD ]
Line_4 $$ byte[] bytes1 = new byte[16]-->Line_5 $$ ByteBuffer bb1 = ByteBuffer.wrap(bytes1)[ FD ]
Line_3 $$ UUID uuid1 = UUID.fromString("1077e700-c7f2-11de-86d5-f5bcc793a028")-->Line_6 $$ bb1.putLong(uuid1.getMostSignificantBits())[ FD ]
Line_2 $$ public void testTimeUUID() -->Line_11 $$ bb2.putLong(uuid2.getMostSignificantBits())[ CD ]
Line_2 $$ public void testTimeUUID() -->Line_4 $$ byte[] bytes1 = new byte[16][ CD ]
Line_4 $$ byte[] bytes1 = new byte[16]-->Line_13 $$ assert new TimeUUIDType().compare(ByteBuffer.wrap(bytes1), ByteBuffer.wrap(bytes2)) != 0[ FD ]
Line_8 $$ UUID uuid2 = UUID.fromString("1077e700-c7f2-11de-982e-6fad363d5f29")-->Line_11 $$ bb2.putLong(uuid2.getMostSignificantBits())[ FD ]
Line_5 $$ ByteBuffer bb1 = ByteBuffer.wrap(bytes1)-->Line_7 $$ bb1.putLong(uuid1.getLeastSignificantBits())[ FD ]
Line_2 $$ public void testTimeUUID() -->Line_10 $$ ByteBuffer bb2 = ByteBuffer.wrap(bytes2)[ CD ]
Line_2 $$ public void testTimeUUID() -->Line_3 $$ UUID uuid1 = UUID.fromString("1077e700-c7f2-11de-86d5-f5bcc793a028")[ CD ]
Line_3 $$ UUID uuid1 = UUID.fromString("1077e700-c7f2-11de-86d5-f5bcc793a028")-->Line_7 $$ bb1.putLong(uuid1.getLeastSignificantBits())[ FD ]
Line_2 $$ public void testTimeUUID() -->Line_12 $$ bb2.putLong(uuid2.getLeastSignificantBits())[ CD ]
Line_2 $$ public void testTimeUUID() -->Line_7 $$ bb1.putLong(uuid1.getLeastSignificantBits())[ CD ]
Line_2 $$ public void testTimeUUID() -->Line_6 $$ bb1.putLong(uuid1.getMostSignificantBits())[ CD ]
Line_10 $$ ByteBuffer bb2 = ByteBuffer.wrap(bytes2)-->Line_11 $$ bb2.putLong(uuid2.getMostSignificantBits())[ FD ]
Line_10 $$ ByteBuffer bb2 = ByteBuffer.wrap(bytes2)-->Line_12 $$ bb2.putLong(uuid2.getLeastSignificantBits())[ FD ]
Line_2 $$ public void testTimeUUID() -->Line_5 $$ ByteBuffer bb1 = ByteBuffer.wrap(bytes1)[ CD ]
Line_2 $$ public void testTimeUUID() -->Line_9 $$ byte[] bytes2 = new byte[16][ CD ]
Line_2 $$ public void testTimeUUID() -->Line_8 $$ UUID uuid2 = UUID.fromString("1077e700-c7f2-11de-982e-6fad363d5f29")[ CD ]
Line_5 $$ ByteBuffer bb1 = ByteBuffer.wrap(bytes1)-->Line_6 $$ bb1.putLong(uuid1.getMostSignificantBits())[ FD ]
Line_8 $$ UUID uuid2 = UUID.fromString("1077e700-c7f2-11de-982e-6fad363d5f29")-->Line_12 $$ bb2.putLong(uuid2.getLeastSignificantBits())[ FD ]
