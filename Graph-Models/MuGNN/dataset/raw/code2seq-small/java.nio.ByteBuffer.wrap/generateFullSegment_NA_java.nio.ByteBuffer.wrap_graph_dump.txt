Line_11 $$ ByteBuffer buf = ByteBuffer.wrap(new byte[BYTES_PER_LONG])-->Line_16 $$ allBytes.put(buf)[ FD ]
Line_10 $$ long offset = startOffset-->Line_17 $$ offset += BYTES_PER_LONG[ FD ]
Line_11 $$ ByteBuffer buf = ByteBuffer.wrap(new byte[BYTES_PER_LONG])-->Line_14 $$ buf.putLong(hasher.generate(offset))[ FD ]
Line_2 $$ private GenerateResult generateFullSegment(int byteAm, long startOffset, DataHasher hasher) -->Line_3 $$ if (byteAm <= 0) [ CD ]
Line_12 $$ for (long i = 0; i < byteAm; i += BYTES_PER_LONG) -->Line_17 $$ offset += BYTES_PER_LONG[ CD ]
Line_2 $$ private GenerateResult generateFullSegment(int byteAm, long startOffset, DataHasher hasher) -->Line_9 $$ ByteBuffer allBytes = ByteBuffer.wrap(new byte[byteAm])[ CD ]
Line_2 $$ private GenerateResult generateFullSegment(int byteAm, long startOffset, DataHasher hasher) -->Line_12 $$ for (long i = 0; i < byteAm; i += BYTES_PER_LONG) [ CD ]
Line_2 $$ private GenerateResult generateFullSegment(int byteAm, long startOffset, DataHasher hasher) -->Line_3 $$ if (byteAm <= 0) [ FD ]
Line_12 $$ for (long i = 0; i < byteAm; i += BYTES_PER_LONG) -->Line_16 $$ allBytes.put(buf)[ CD ]
Line_12 $$ for (long i = 0; i < byteAm; i += BYTES_PER_LONG) -->Line_13 $$ buf.rewind()[ CD ]
Line_12 $$ for (long i = 0; i < byteAm; i += BYTES_PER_LONG) -->Line_14 $$ buf.putLong(hasher.generate(offset))[ CD ]
Line_9 $$ ByteBuffer allBytes = ByteBuffer.wrap(new byte[byteAm])-->Line_16 $$ allBytes.put(buf)[ FD ]
Line_11 $$ ByteBuffer buf = ByteBuffer.wrap(new byte[BYTES_PER_LONG])-->Line_15 $$ buf.rewind()[ FD ]
Line_2 $$ private GenerateResult generateFullSegment(int byteAm, long startOffset, DataHasher hasher) -->Line_19 $$ allBytes.rewind()[ CD ]
Line_11 $$ ByteBuffer buf = ByteBuffer.wrap(new byte[BYTES_PER_LONG])-->Line_13 $$ buf.rewind()[ FD ]
Line_2 $$ private GenerateResult generateFullSegment(int byteAm, long startOffset, DataHasher hasher) -->Line_10 $$ long offset = startOffset[ CD ]
Line_2 $$ private GenerateResult generateFullSegment(int byteAm, long startOffset, DataHasher hasher) -->Line_6 $$ if ((byteAm % BYTES_PER_LONG) != 0) [ CD ]
Line_2 $$ private GenerateResult generateFullSegment(int byteAm, long startOffset, DataHasher hasher) -->Line_14 $$ buf.putLong(hasher.generate(offset))[ FD ]
Line_12 $$ for (long i = 0; i < byteAm; i += BYTES_PER_LONG) -->Line_15 $$ buf.rewind()[ CD ]
Line_2 $$ private GenerateResult generateFullSegment(int byteAm, long startOffset, DataHasher hasher) -->Line_11 $$ ByteBuffer buf = ByteBuffer.wrap(new byte[BYTES_PER_LONG])[ CD ]
Line_10 $$ long offset = startOffset-->Line_14 $$ buf.putLong(hasher.generate(offset))[ FD ]
Line_17 $$ offset += BYTES_PER_LONG-->Line_14 $$ buf.putLong(hasher.generate(offset))[ FD ]
Line_2 $$ private GenerateResult generateFullSegment(int byteAm, long startOffset, DataHasher hasher) -->Line_12 $$ for (long i = 0; i < byteAm; i += BYTES_PER_LONG) [ FD ]
Line_2 $$ private GenerateResult generateFullSegment(int byteAm, long startOffset, DataHasher hasher) -->Line_20 $$ return new GenerateResult(offset, allBytes)[ CD ]
Line_9 $$ ByteBuffer allBytes = ByteBuffer.wrap(new byte[byteAm])-->Line_19 $$ allBytes.rewind()[ FD ]
