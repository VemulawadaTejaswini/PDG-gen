Line_2 $$ public static BlockMetadataHeader preadHeader(FileChannel fc) throws IOException -->Line_12 $$ return new BlockMetadataHeader(version, dataChecksum)[ CD ]
Line_3 $$ byte[] arr = new byte[2 + DataChecksum.HEADER_LEN]-->Line_4 $$ ByteBuffer buf = ByteBuffer.wrap(arr)[ FD ]
Line_4 $$ ByteBuffer buf = ByteBuffer.wrap(arr)-->Line_6 $$ if (fc.read(buf, 0) <= 0) [ FD ]
Line_2 $$ public static BlockMetadataHeader preadHeader(FileChannel fc) throws IOException -->Line_5 $$ while (buf.hasRemaining()) [ CD ]
Line_2 $$ public static BlockMetadataHeader preadHeader(FileChannel fc) throws IOException -->Line_3 $$ byte[] arr = new byte[2 + DataChecksum.HEADER_LEN][ CD ]
Line_2 $$ public static BlockMetadataHeader preadHeader(FileChannel fc) throws IOException -->Line_10 $$ short version = (short) ((arr[0] << 8) | (arr[1] & 0xff))[ CD ]
Line_2 $$ public static BlockMetadataHeader preadHeader(FileChannel fc) throws IOException -->Line_6 $$ if (fc.read(buf, 0) <= 0) [ FD ]
Line_5 $$ while (buf.hasRemaining()) -->Line_6 $$ if (fc.read(buf, 0) <= 0) [ CD ]
Line_3 $$ byte[] arr = new byte[2 + DataChecksum.HEADER_LEN]-->Line_11 $$ DataChecksum dataChecksum = DataChecksum.newDataChecksum(arr, 2)[ FD ]
Line_2 $$ public static BlockMetadataHeader preadHeader(FileChannel fc) throws IOException -->Line_11 $$ DataChecksum dataChecksum = DataChecksum.newDataChecksum(arr, 2)[ CD ]
Line_2 $$ public static BlockMetadataHeader preadHeader(FileChannel fc) throws IOException -->Line_4 $$ ByteBuffer buf = ByteBuffer.wrap(arr)[ CD ]
Line_4 $$ ByteBuffer buf = ByteBuffer.wrap(arr)-->Line_5 $$ while (buf.hasRemaining()) [ FD ]
