Line_2 $$ public static void assertConnectted(final ScatteringByteChannel scatteringByteChannel, final GatheringByteChannel gatheringByteChannel) throws Exception -->Line_27 $$ readThread.start()[ CD ]
Line_17 $$ FutureTask<byte[]> readFutureTask = new FutureTask<byte[]>(new Callable<byte[]>() -->Line_20 $$ while (byteBuffer.hasRemaining()) [ CD ]
Line_8 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(data)-->Line_23 $$ return byteBuffer.array()[ FD ]
Line_19 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(data.length)-->Line_23 $$ return byteBuffer.array()[ FD ]
Line_2 $$ public static void assertConnectted(final ScatteringByteChannel scatteringByteChannel, final GatheringByteChannel gatheringByteChannel) throws Exception -->Line_16 $$ writeThread.start()[ CD ]
Line_2 $$ public static void assertConnectted(final ScatteringByteChannel scatteringByteChannel, final GatheringByteChannel gatheringByteChannel) throws Exception -->Line_21 $$ scatteringByteChannel.read(byteBuffer)[ FD ]
Line_2 $$ public static void assertConnectted(final ScatteringByteChannel scatteringByteChannel, final GatheringByteChannel gatheringByteChannel) throws Exception -->Line_5 $$ random.nextBytes(data)[ CD ]
Line_3 $$ Random random = new Random()-->Line_5 $$ random.nextBytes(data)[ FD ]
Line_6 $$ FutureTask<Void> writeFutureTask = new FutureTask<Void>(new Callable<Void>() -->Line_28 $$ writeFutureTask.get()[ FD ]
Line_4 $$ final byte[] data = new byte[1024 * 1024]-->Line_5 $$ random.nextBytes(data)[ FD ]
Line_6 $$ FutureTask<Void> writeFutureTask = new FutureTask<Void>(new Callable<Void>() -->Line_12 $$ return null[ CD ]
Line_2 $$ public static void assertConnectted(final ScatteringByteChannel scatteringByteChannel, final GatheringByteChannel gatheringByteChannel) throws Exception -->Line_28 $$ writeFutureTask.get()[ CD ]
Line_8 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(data)-->Line_20 $$ while (byteBuffer.hasRemaining()) [ FD ]
Line_2 $$ public static void assertConnectted(final ScatteringByteChannel scatteringByteChannel, final GatheringByteChannel gatheringByteChannel) throws Exception -->Line_29 $$ Assert.assertArrayEquals(data, readFutureTask.get())[ CD ]
Line_19 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(data.length)-->Line_20 $$ while (byteBuffer.hasRemaining()) [ FD ]
Line_6 $$ FutureTask<Void> writeFutureTask = new FutureTask<Void>(new Callable<Void>() -->Line_8 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(data)[ CD ]
Line_4 $$ final byte[] data = new byte[1024 * 1024]-->Line_29 $$ Assert.assertArrayEquals(data, readFutureTask.get())[ FD ]
Line_17 $$ FutureTask<byte[]> readFutureTask = new FutureTask<byte[]>(new Callable<byte[]>() -->Line_23 $$ return byteBuffer.array()[ CD ]
Line_4 $$ final byte[] data = new byte[1024 * 1024]-->Line_8 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(data)[ FD ]
Line_8 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(data)-->Line_10 $$ gatheringByteChannel.write(byteBuffer)[ FD ]
Line_17 $$ FutureTask<byte[]> readFutureTask = new FutureTask<byte[]>(new Callable<byte[]>() -->Line_19 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(data.length)[ CD ]
Line_2 $$ public static void assertConnectted(final ScatteringByteChannel scatteringByteChannel, final GatheringByteChannel gatheringByteChannel) throws Exception -->Line_10 $$ gatheringByteChannel.write(byteBuffer)[ FD ]
Line_2 $$ public static void assertConnectted(final ScatteringByteChannel scatteringByteChannel, final GatheringByteChannel gatheringByteChannel) throws Exception -->Line_4 $$ final byte[] data = new byte[1024 * 1024][ CD ]
Line_2 $$ public static void assertConnectted(final ScatteringByteChannel scatteringByteChannel, final GatheringByteChannel gatheringByteChannel) throws Exception -->Line_6 $$ FutureTask<Void> writeFutureTask = new FutureTask<Void>(new Callable<Void>() [ CD ]
Line_20 $$ while (byteBuffer.hasRemaining()) -->Line_21 $$ scatteringByteChannel.read(byteBuffer)[ CD ]
Line_19 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(data.length)-->Line_21 $$ scatteringByteChannel.read(byteBuffer)[ FD ]
Line_9 $$ while (byteBuffer.hasRemaining()) -->Line_10 $$ gatheringByteChannel.write(byteBuffer)[ CD ]
Line_2 $$ public static void assertConnectted(final ScatteringByteChannel scatteringByteChannel, final GatheringByteChannel gatheringByteChannel) throws Exception -->Line_3 $$ Random random = new Random()[ CD ]
Line_8 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(data)-->Line_21 $$ scatteringByteChannel.read(byteBuffer)[ FD ]
Line_8 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(data)-->Line_9 $$ while (byteBuffer.hasRemaining()) [ FD ]
Line_6 $$ FutureTask<Void> writeFutureTask = new FutureTask<Void>(new Callable<Void>() -->Line_9 $$ while (byteBuffer.hasRemaining()) [ CD ]
