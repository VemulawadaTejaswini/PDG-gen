Line_2 $$ public void write(byte[] bytes, int offset, int length) throws IOException -->Line_3 $$ while (_inputByteBuffer.hasRemaining()) [ CD ]
Line_2 $$ public void write(byte[] bytes, int offset, int length) throws IOException -->Line_7 $$ ByteBuffer inputByteBuffer = ByteBuffer.wrap(bytes, offset, length)[ FD ]
Line_7 $$ ByteBuffer inputByteBuffer = ByteBuffer.wrap(bytes, offset, length)-->Line_11 $$ _inputByteBuffer.put(inputByteBuffer)[ FD ]
Line_3 $$ while (_inputByteBuffer.hasRemaining()) -->Line_4 $$ write(bytes[offset++])[ CD ]
Line_9 $$ if (inputByteBuffer.hasRemaining()) -->Line_11 $$ _inputByteBuffer.put(inputByteBuffer)[ CD ]
Line_9 $$ if (inputByteBuffer.hasRemaining()) -->Line_10 $$ _inputByteBuffer.limit(inputByteBuffer.remaining())[ CD ]
Line_9 $$ if (inputByteBuffer.hasRemaining()) -->Line_12 $$ _inputByteBuffer.flip()[ CD ]
Line_2 $$ public void write(byte[] bytes, int offset, int length) throws IOException -->Line_4 $$ write(bytes[offset++])[ FD ]
Line_2 $$ public void write(byte[] bytes, int offset, int length) throws IOException -->Line_7 $$ ByteBuffer inputByteBuffer = ByteBuffer.wrap(bytes, offset, length)[ CD ]
Line_2 $$ public void write(byte[] bytes, int offset, int length) throws IOException -->Line_8 $$ _doDecode(inputByteBuffer, false)[ CD ]
Line_2 $$ public void write(byte[] bytes, int offset, int length) throws IOException -->Line_9 $$ if (inputByteBuffer.hasRemaining()) [ CD ]
Line_3 $$ while (_inputByteBuffer.hasRemaining()) -->Line_5 $$ length--[ CD ]
Line_2 $$ public void write(byte[] bytes, int offset, int length) throws IOException -->Line_5 $$ length--[ FD ]
Line_7 $$ ByteBuffer inputByteBuffer = ByteBuffer.wrap(bytes, offset, length)-->Line_9 $$ if (inputByteBuffer.hasRemaining()) [ FD ]
Line_7 $$ ByteBuffer inputByteBuffer = ByteBuffer.wrap(bytes, offset, length)-->Line_10 $$ _inputByteBuffer.limit(inputByteBuffer.remaining())[ FD ]
Line_7 $$ ByteBuffer inputByteBuffer = ByteBuffer.wrap(bytes, offset, length)-->Line_8 $$ _doDecode(inputByteBuffer, false)[ FD ]
