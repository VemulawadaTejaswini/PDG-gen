Line_3 $$ ByteBuffer nN = ByteBuffer.wrap(new byte[] -->Line_7 $$ assertSignum("NZ", -1, comparator.compare(nN, nZ))[ FD ]
Line_4 $$ ByteBuffer nZ = ByteBuffer.wrap(new byte[] -->Line_9 $$ assertSignum("PZ", 1, comparator.compare(nP, nZ))[ FD ]
Line_5 $$ ByteBuffer nP = ByteBuffer.wrap(new byte[] -->Line_9 $$ assertSignum("PZ", 1, comparator.compare(nP, nZ))[ FD ]
Line_2 $$ public void testSanity() -->Line_3 $$ ByteBuffer nN = ByteBuffer.wrap(new byte[] [ CD ]
Line_2 $$ public void testSanity() -->Line_10 $$ assertSignum("PN", 1, comparator.compare(nP, nN))[ CD ]
Line_2 $$ public void testSanity() -->Line_5 $$ ByteBuffer nP = ByteBuffer.wrap(new byte[] [ CD ]
Line_2 $$ public void testSanity() -->Line_6 $$ assertSignum("ZN", 1, comparator.compare(nZ, nN))[ CD ]
Line_2 $$ public void testSanity() -->Line_11 $$ assertSignum("NP", -1, comparator.compare(nN, nP))[ CD ]
Line_2 $$ public void testSanity() -->Line_8 $$ assertSignum("ZP", -1, comparator.compare(nZ, nP))[ CD ]
Line_5 $$ ByteBuffer nP = ByteBuffer.wrap(new byte[] -->Line_8 $$ assertSignum("ZP", -1, comparator.compare(nZ, nP))[ FD ]
Line_4 $$ ByteBuffer nZ = ByteBuffer.wrap(new byte[] -->Line_6 $$ assertSignum("ZN", 1, comparator.compare(nZ, nN))[ FD ]
Line_3 $$ ByteBuffer nN = ByteBuffer.wrap(new byte[] -->Line_10 $$ assertSignum("PN", 1, comparator.compare(nP, nN))[ FD ]
Line_2 $$ public void testSanity() -->Line_9 $$ assertSignum("PZ", 1, comparator.compare(nP, nZ))[ CD ]
Line_4 $$ ByteBuffer nZ = ByteBuffer.wrap(new byte[] -->Line_8 $$ assertSignum("ZP", -1, comparator.compare(nZ, nP))[ FD ]
Line_3 $$ ByteBuffer nN = ByteBuffer.wrap(new byte[] -->Line_6 $$ assertSignum("ZN", 1, comparator.compare(nZ, nN))[ FD ]
Line_2 $$ public void testSanity() -->Line_7 $$ assertSignum("NZ", -1, comparator.compare(nN, nZ))[ CD ]
Line_2 $$ public void testSanity() -->Line_4 $$ ByteBuffer nZ = ByteBuffer.wrap(new byte[] [ CD ]
Line_5 $$ ByteBuffer nP = ByteBuffer.wrap(new byte[] -->Line_11 $$ assertSignum("NP", -1, comparator.compare(nN, nP))[ FD ]
Line_5 $$ ByteBuffer nP = ByteBuffer.wrap(new byte[] -->Line_10 $$ assertSignum("PN", 1, comparator.compare(nP, nN))[ FD ]
Line_4 $$ ByteBuffer nZ = ByteBuffer.wrap(new byte[] -->Line_7 $$ assertSignum("NZ", -1, comparator.compare(nN, nZ))[ FD ]
Line_3 $$ ByteBuffer nN = ByteBuffer.wrap(new byte[] -->Line_11 $$ assertSignum("NP", -1, comparator.compare(nN, nP))[ FD ]
