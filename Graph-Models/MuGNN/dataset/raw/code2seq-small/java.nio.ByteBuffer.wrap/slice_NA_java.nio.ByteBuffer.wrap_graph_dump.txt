Line_2 $$ private static ByteBuffer slice(byte[] buffer, int offset, int length) -->Line_5 $$ buf.position(offset)[ FD ]
Line_4 $$ if (offset > 0 || length < buf.capacity()) -->Line_7 $$ buf = buf.slice()[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.wrap(buffer)-->Line_4 $$ if (offset > 0 || length < buf.capacity()) [ FD ]
Line_2 $$ private static ByteBuffer slice(byte[] buffer, int offset, int length) -->Line_9 $$ return buf[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.wrap(buffer)-->Line_5 $$ buf.position(offset)[ FD ]
Line_2 $$ private static ByteBuffer slice(byte[] buffer, int offset, int length) -->Line_3 $$ ByteBuffer buf = ByteBuffer.wrap(buffer)[ CD ]
Line_4 $$ if (offset > 0 || length < buf.capacity()) -->Line_6 $$ buf.limit(offset + length)[ CD ]
Line_2 $$ private static ByteBuffer slice(byte[] buffer, int offset, int length) -->Line_4 $$ if (offset > 0 || length < buf.capacity()) [ CD ]
Line_4 $$ if (offset > 0 || length < buf.capacity()) -->Line_5 $$ buf.position(offset)[ CD ]
Line_2 $$ private static ByteBuffer slice(byte[] buffer, int offset, int length) -->Line_3 $$ ByteBuffer buf = ByteBuffer.wrap(buffer)[ FD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.wrap(buffer)-->Line_6 $$ buf.limit(offset + length)[ FD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.wrap(buffer)-->Line_7 $$ buf = buf.slice()[ FD ]
