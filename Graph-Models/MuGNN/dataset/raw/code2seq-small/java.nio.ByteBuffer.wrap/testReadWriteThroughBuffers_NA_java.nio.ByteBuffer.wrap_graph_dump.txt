Line_5 $$ source = ByteBuffer.wrap(randomBytes)-->Line_11 $$ Channels.writeToChannel(source, fileChannel)[ FD ]
Line_4 $$ if (randomBoolean()) -->Line_7 $$ source = ByteBuffer.allocateDirect(randomBytes.length)[ CD ]
Line_4 $$ if (randomBoolean()) -->Line_5 $$ source = ByteBuffer.wrap(randomBytes)[ CD ]
Line_4 $$ if (randomBoolean()) -->Line_9 $$ source.flip()[ CD ]
Line_2 $$ public void testReadWriteThroughBuffers() throws IOException -->Line_22 $$ copy.get(copyBytes)[ CD ]
Line_3 $$ ByteBuffer source-->Line_11 $$ Channels.writeToChannel(source, fileChannel)[ FD ]
Line_4 $$ if (randomBoolean()) -->Line_8 $$ source.put(randomBytes)[ CD ]
Line_7 $$ source = ByteBuffer.allocateDirect(randomBytes.length)-->Line_9 $$ source.flip()[ FD ]
Line_13 $$ if (randomBoolean()) -->Line_16 $$ copy = ByteBuffer.allocateDirect(randomBytes.length)[ CD ]
Line_5 $$ source = ByteBuffer.wrap(randomBytes)-->Line_9 $$ source.flip()[ FD ]
Line_2 $$ public void testReadWriteThroughBuffers() throws IOException -->Line_13 $$ if (randomBoolean()) [ CD ]
Line_20 $$ byte[] copyBytes = new byte[read]-->Line_22 $$ copy.get(copyBytes)[ FD ]
Line_5 $$ source = ByteBuffer.wrap(randomBytes)-->Line_7 $$ source = ByteBuffer.allocateDirect(randomBytes.length)[ FD ]
Line_2 $$ public void testReadWriteThroughBuffers() throws IOException -->Line_21 $$ copy.flip()[ CD ]
Line_18 $$ int read = Channels.readFromFileChannel(fileChannel, 0, copy)-->Line_19 $$ assertThat(read, Matchers.equalTo(randomBytes.length))[ FD ]
Line_14 $$ copy = ByteBuffer.allocate(randomBytes.length)-->Line_16 $$ copy = ByteBuffer.allocateDirect(randomBytes.length)[ FD ]
Line_2 $$ public void testReadWriteThroughBuffers() throws IOException -->Line_11 $$ Channels.writeToChannel(source, fileChannel)[ CD ]
Line_12 $$ ByteBuffer copy-->Line_21 $$ copy.flip()[ FD ]
Line_2 $$ public void testReadWriteThroughBuffers() throws IOException -->Line_23 $$ assertThat("read bytes didn't match written bytes", randomBytes, Matchers.equalTo(copyBytes))[ CD ]
Line_13 $$ if (randomBoolean()) -->Line_14 $$ copy = ByteBuffer.allocate(randomBytes.length)[ CD ]
Line_12 $$ ByteBuffer copy-->Line_18 $$ int read = Channels.readFromFileChannel(fileChannel, 0, copy)[ FD ]
Line_20 $$ byte[] copyBytes = new byte[read]-->Line_23 $$ assertThat("read bytes didn't match written bytes", randomBytes, Matchers.equalTo(copyBytes))[ FD ]
Line_2 $$ public void testReadWriteThroughBuffers() throws IOException -->Line_18 $$ int read = Channels.readFromFileChannel(fileChannel, 0, copy)[ CD ]
Line_2 $$ public void testReadWriteThroughBuffers() throws IOException -->Line_4 $$ if (randomBoolean()) [ CD ]
Line_14 $$ copy = ByteBuffer.allocate(randomBytes.length)-->Line_18 $$ int read = Channels.readFromFileChannel(fileChannel, 0, copy)[ FD ]
Line_12 $$ ByteBuffer copy-->Line_16 $$ copy = ByteBuffer.allocateDirect(randomBytes.length)[ FD ]
Line_7 $$ source = ByteBuffer.allocateDirect(randomBytes.length)-->Line_11 $$ Channels.writeToChannel(source, fileChannel)[ FD ]
Line_16 $$ copy = ByteBuffer.allocateDirect(randomBytes.length)-->Line_18 $$ int read = Channels.readFromFileChannel(fileChannel, 0, copy)[ FD ]
Line_3 $$ ByteBuffer source-->Line_7 $$ source = ByteBuffer.allocateDirect(randomBytes.length)[ FD ]
Line_12 $$ ByteBuffer copy-->Line_14 $$ copy = ByteBuffer.allocate(randomBytes.length)[ FD ]
Line_14 $$ copy = ByteBuffer.allocate(randomBytes.length)-->Line_21 $$ copy.flip()[ FD ]
Line_5 $$ source = ByteBuffer.wrap(randomBytes)-->Line_8 $$ source.put(randomBytes)[ FD ]
Line_12 $$ ByteBuffer copy-->Line_22 $$ copy.get(copyBytes)[ FD ]
Line_16 $$ copy = ByteBuffer.allocateDirect(randomBytes.length)-->Line_21 $$ copy.flip()[ FD ]
Line_7 $$ source = ByteBuffer.allocateDirect(randomBytes.length)-->Line_8 $$ source.put(randomBytes)[ FD ]
Line_2 $$ public void testReadWriteThroughBuffers() throws IOException -->Line_20 $$ byte[] copyBytes = new byte[read][ CD ]
Line_16 $$ copy = ByteBuffer.allocateDirect(randomBytes.length)-->Line_22 $$ copy.get(copyBytes)[ FD ]
Line_2 $$ public void testReadWriteThroughBuffers() throws IOException -->Line_12 $$ ByteBuffer copy[ CD ]
Line_14 $$ copy = ByteBuffer.allocate(randomBytes.length)-->Line_22 $$ copy.get(copyBytes)[ FD ]
Line_2 $$ public void testReadWriteThroughBuffers() throws IOException -->Line_3 $$ ByteBuffer source[ CD ]
Line_3 $$ ByteBuffer source-->Line_8 $$ source.put(randomBytes)[ FD ]
Line_2 $$ public void testReadWriteThroughBuffers() throws IOException -->Line_19 $$ assertThat(read, Matchers.equalTo(randomBytes.length))[ CD ]
Line_3 $$ ByteBuffer source-->Line_9 $$ source.flip()[ FD ]
Line_3 $$ ByteBuffer source-->Line_5 $$ source = ByteBuffer.wrap(randomBytes)[ FD ]
