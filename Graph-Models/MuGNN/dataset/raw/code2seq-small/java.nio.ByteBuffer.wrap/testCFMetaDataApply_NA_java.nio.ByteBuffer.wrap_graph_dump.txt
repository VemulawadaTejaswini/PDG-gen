Line_3 $$ CFMetaData cfm = CFMetaData.Builder.create(KEYSPACE1, "TestApplyCFM_CF").addPartitionKey("keys", BytesType.instance).addClusteringColumn("col", BytesType.instance).build()-->Line_13 $$ ColumnDefinition removeIndexDef = ColumnDefinition.regularDef(cfm, ByteBuffer.wrap(new byte[] [ FD ]
Line_2 $$ public void testCFMetaDataApply() throws ConfigurationException -->Line_13 $$ ColumnDefinition removeIndexDef = ColumnDefinition.regularDef(cfm, ByteBuffer.wrap(new byte[] [ CD ]
Line_3 $$ CFMetaData cfm = CFMetaData.Builder.create(KEYSPACE1, "TestApplyCFM_CF").addPartitionKey("keys", BytesType.instance).addClusteringColumn("col", BytesType.instance).build()-->Line_16 $$ assertNotNull(cfm.getColumnDefinition(ByteBuffer.wrap(new byte[] [ FD ]
Line_13 $$ ColumnDefinition removeIndexDef = ColumnDefinition.regularDef(cfm, ByteBuffer.wrap(new byte[] -->Line_14 $$ assertTrue(cfNew.removeColumnDefinition(removeIndexDef))[ FD ]
Line_5 $$ ByteBuffer name = ByteBuffer.wrap(new byte[] -->Line_6 $$ cfm.addColumnDefinition(ColumnDefinition.regularDef(cfm, name, BytesType.instance))[ FD ]
Line_2 $$ public void testCFMetaDataApply() throws ConfigurationException -->Line_11 $$ ColumnDefinition addIndexDef = ColumnDefinition.regularDef(cfm, ByteBuffer.wrap(new byte[] [ CD ]
Line_2 $$ public void testCFMetaDataApply() throws ConfigurationException -->Line_12 $$ cfNew.addColumnDefinition(addIndexDef)[ CD ]
Line_4 $$ for (int i = 0; i < 5; i++) -->Line_5 $$ ByteBuffer name = ByteBuffer.wrap(new byte[] [ CD ]
Line_10 $$ CFMetaData cfNew = cfm.copy()-->Line_15 $$ cfm.apply(cfNew)[ FD ]
Line_3 $$ CFMetaData cfm = CFMetaData.Builder.create(KEYSPACE1, "TestApplyCFM_CF").addPartitionKey("keys", BytesType.instance).addClusteringColumn("col", BytesType.instance).build()-->Line_8 $$ cfm.comment("No comment").readRepairChance(0.5).gcGraceSeconds(100000).compaction(CompactionParams.scts(ImmutableMap.of("min_threshold", "500", "max_threshold", "500")))[ FD ]
Line_4 $$ for (int i = 0; i < 5; i++) -->Line_16 $$ for (int i = 1; i < cfm.allColumns().size(); i++) assertNotNull(cfm.getColumnDefinition(ByteBuffer.wrap(new byte[] [ FD ]
Line_2 $$ public void testCFMetaDataApply() throws ConfigurationException -->Line_18 $$ assertNotNull(cfm.getColumnDefinition(ByteBuffer.wrap(new byte[] [ CD ]
Line_2 $$ public void testCFMetaDataApply() throws ConfigurationException -->Line_8 $$ cfm.comment("No comment").readRepairChance(0.5).gcGraceSeconds(100000).compaction(CompactionParams.scts(ImmutableMap.of("min_threshold", "500", "max_threshold", "500")))[ CD ]
Line_2 $$ public void testCFMetaDataApply() throws ConfigurationException -->Line_9 $$ assertNull(cfm.getColumnDefinition(ByteBuffer.wrap(new byte[] [ CD ]
Line_10 $$ CFMetaData cfNew = cfm.copy()-->Line_14 $$ assertTrue(cfNew.removeColumnDefinition(removeIndexDef))[ FD ]
Line_11 $$ ColumnDefinition addIndexDef = ColumnDefinition.regularDef(cfm, ByteBuffer.wrap(new byte[] -->Line_12 $$ cfNew.addColumnDefinition(addIndexDef)[ FD ]
Line_2 $$ public void testCFMetaDataApply() throws ConfigurationException -->Line_10 $$ CFMetaData cfNew = cfm.copy()[ CD ]
Line_10 $$ CFMetaData cfNew = cfm.copy()-->Line_12 $$ cfNew.addColumnDefinition(addIndexDef)[ FD ]
Line_3 $$ CFMetaData cfm = CFMetaData.Builder.create(KEYSPACE1, "TestApplyCFM_CF").addPartitionKey("keys", BytesType.instance).addClusteringColumn("col", BytesType.instance).build()-->Line_18 $$ assertNotNull(cfm.getColumnDefinition(ByteBuffer.wrap(new byte[] [ FD ]
Line_3 $$ CFMetaData cfm = CFMetaData.Builder.create(KEYSPACE1, "TestApplyCFM_CF").addPartitionKey("keys", BytesType.instance).addClusteringColumn("col", BytesType.instance).build()-->Line_16 $$ for (int i = 1; i < cfm.allColumns().size(); i++) assertNotNull(cfm.getColumnDefinition(ByteBuffer.wrap(new byte[] [ FD ]
Line_4 $$ for (int i = 0; i < 5; i++) -->Line_6 $$ cfm.addColumnDefinition(ColumnDefinition.regularDef(cfm, name, BytesType.instance))[ CD ]
Line_2 $$ public void testCFMetaDataApply() throws ConfigurationException -->Line_16 $$ for (int i = 1; i < cfm.allColumns().size(); i++) assertNotNull(cfm.getColumnDefinition(ByteBuffer.wrap(new byte[] [ CD ]
Line_2 $$ public void testCFMetaDataApply() throws ConfigurationException -->Line_14 $$ assertTrue(cfNew.removeColumnDefinition(removeIndexDef))[ CD ]
Line_2 $$ public void testCFMetaDataApply() throws ConfigurationException -->Line_17 $$ assertNull(cfm.getColumnDefinition(ByteBuffer.wrap(new byte[] [ CD ]
Line_2 $$ public void testCFMetaDataApply() throws ConfigurationException -->Line_3 $$ CFMetaData cfm = CFMetaData.Builder.create(KEYSPACE1, "TestApplyCFM_CF").addPartitionKey("keys", BytesType.instance).addClusteringColumn("col", BytesType.instance).build()[ CD ]
Line_3 $$ CFMetaData cfm = CFMetaData.Builder.create(KEYSPACE1, "TestApplyCFM_CF").addPartitionKey("keys", BytesType.instance).addClusteringColumn("col", BytesType.instance).build()-->Line_6 $$ cfm.addColumnDefinition(ColumnDefinition.regularDef(cfm, name, BytesType.instance))[ FD ]
Line_2 $$ public void testCFMetaDataApply() throws ConfigurationException -->Line_4 $$ for (int i = 0; i < 5; i++) [ CD ]
Line_3 $$ CFMetaData cfm = CFMetaData.Builder.create(KEYSPACE1, "TestApplyCFM_CF").addPartitionKey("keys", BytesType.instance).addClusteringColumn("col", BytesType.instance).build()-->Line_10 $$ CFMetaData cfNew = cfm.copy()[ FD ]
Line_3 $$ CFMetaData cfm = CFMetaData.Builder.create(KEYSPACE1, "TestApplyCFM_CF").addPartitionKey("keys", BytesType.instance).addClusteringColumn("col", BytesType.instance).build()-->Line_9 $$ assertNull(cfm.getColumnDefinition(ByteBuffer.wrap(new byte[] [ FD ]
Line_3 $$ CFMetaData cfm = CFMetaData.Builder.create(KEYSPACE1, "TestApplyCFM_CF").addPartitionKey("keys", BytesType.instance).addClusteringColumn("col", BytesType.instance).build()-->Line_15 $$ cfm.apply(cfNew)[ FD ]
Line_2 $$ public void testCFMetaDataApply() throws ConfigurationException -->Line_15 $$ cfm.apply(cfNew)[ CD ]
Line_3 $$ CFMetaData cfm = CFMetaData.Builder.create(KEYSPACE1, "TestApplyCFM_CF").addPartitionKey("keys", BytesType.instance).addClusteringColumn("col", BytesType.instance).build()-->Line_11 $$ ColumnDefinition addIndexDef = ColumnDefinition.regularDef(cfm, ByteBuffer.wrap(new byte[] [ FD ]
Line_3 $$ CFMetaData cfm = CFMetaData.Builder.create(KEYSPACE1, "TestApplyCFM_CF").addPartitionKey("keys", BytesType.instance).addClusteringColumn("col", BytesType.instance).build()-->Line_17 $$ assertNull(cfm.getColumnDefinition(ByteBuffer.wrap(new byte[] [ FD ]
