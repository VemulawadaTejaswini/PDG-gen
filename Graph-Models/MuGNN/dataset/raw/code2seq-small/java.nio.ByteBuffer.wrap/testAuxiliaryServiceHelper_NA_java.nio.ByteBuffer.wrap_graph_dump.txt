Line_3 $$ Map<String, String> env = new HashMap<String, String>()-->Line_6 $$ AuxiliaryServiceHelper.setServiceDataIntoEnv(serviceName, bb, env)[ FD ]
Line_2 $$ public void testAuxiliaryServiceHelper() throws Exception -->Line_3 $$ Map<String, String> env = new HashMap<String, String>()[ CD ]
Line_5 $$ ByteBuffer bb = ByteBuffer.wrap("testAuxiliaryService".getBytes())-->Line_7 $$ Assert.assertEquals(bb, AuxiliaryServiceHelper.getServiceDataFromEnv(serviceName, env))[ FD ]
Line_4 $$ String serviceName = "testAuxiliaryService"-->Line_6 $$ AuxiliaryServiceHelper.setServiceDataIntoEnv(serviceName, bb, env)[ FD ]
Line_5 $$ ByteBuffer bb = ByteBuffer.wrap("testAuxiliaryService".getBytes())-->Line_6 $$ AuxiliaryServiceHelper.setServiceDataIntoEnv(serviceName, bb, env)[ FD ]
Line_4 $$ String serviceName = "testAuxiliaryService"-->Line_7 $$ Assert.assertEquals(bb, AuxiliaryServiceHelper.getServiceDataFromEnv(serviceName, env))[ FD ]
Line_2 $$ public void testAuxiliaryServiceHelper() throws Exception -->Line_6 $$ AuxiliaryServiceHelper.setServiceDataIntoEnv(serviceName, bb, env)[ CD ]
Line_2 $$ public void testAuxiliaryServiceHelper() throws Exception -->Line_5 $$ ByteBuffer bb = ByteBuffer.wrap("testAuxiliaryService".getBytes())[ CD ]
Line_2 $$ public void testAuxiliaryServiceHelper() throws Exception -->Line_4 $$ String serviceName = "testAuxiliaryService"[ CD ]
Line_2 $$ public void testAuxiliaryServiceHelper() throws Exception -->Line_7 $$ Assert.assertEquals(bb, AuxiliaryServiceHelper.getServiceDataFromEnv(serviceName, env))[ CD ]
Line_3 $$ Map<String, String> env = new HashMap<String, String>()-->Line_7 $$ Assert.assertEquals(bb, AuxiliaryServiceHelper.getServiceDataFromEnv(serviceName, env))[ FD ]
