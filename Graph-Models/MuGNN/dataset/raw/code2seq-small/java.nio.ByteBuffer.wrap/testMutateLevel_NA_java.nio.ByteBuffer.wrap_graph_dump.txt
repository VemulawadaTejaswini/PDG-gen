Line_7 $$ for (int r = 0; r < rows; r++) -->Line_9 $$ for (int c = 0; c < columns; c++) update.newRow("column" + c).add("val", value)[ CD ]
Line_8 $$ UpdateBuilder update = UpdateBuilder.create(cfs.metadata, String.valueOf(r))-->Line_10 $$ update.applyUnsafe()[ FD ]
Line_2 $$ public void testMutateLevel() throws Exception -->Line_7 $$ for (int r = 0; r < rows; r++) [ CD ]
Line_2 $$ public void testMutateLevel() throws Exception -->Line_3 $$ cfs.disableAutoCompaction()[ CD ]
Line_7 $$ for (int r = 0; r < rows; r++) -->Line_11 $$ cfs.forceBlockingFlush()[ CD ]
Line_6 $$ int columns = 20-->Line_9 $$ for (int c = 0; c < columns; c++) update.newRow("column" + c).add("val", value)[ FD ]
Line_2 $$ public void testMutateLevel() throws Exception -->Line_4 $$ ByteBuffer value = ByteBuffer.wrap(new byte[100 * 1024])[ CD ]
Line_16 $$ for (SSTableReader s : cfs.getLiveSSTables()) -->Line_23 $$ assertEquals(6, s.getSSTableLevel())[ FD ]
Line_7 $$ for (int r = 0; r < rows; r++) -->Line_8 $$ UpdateBuilder update = UpdateBuilder.create(cfs.metadata, String.valueOf(r))[ CD ]
Line_2 $$ public void testMutateLevel() throws Exception -->Line_25 $$ assertEquals(cfs.getLiveSSTables().size(), levels[6])[ CD ]
Line_2 $$ public void testMutateLevel() throws Exception -->Line_14 $$ LeveledCompactionStrategy strategy = (LeveledCompactionStrategy) (cfs.getCompactionStrategyManager()).getStrategies().get(1)[ CD ]
Line_8 $$ UpdateBuilder update = UpdateBuilder.create(cfs.metadata, String.valueOf(r))-->Line_9 $$ update.newRow("column" + c).add("val", value)[ FD ]
Line_16 $$ for (SSTableReader s : cfs.getLiveSSTables()) -->Line_18 $$ strategy.manifest.remove(s)[ FD ]
Line_16 $$ for (SSTableReader s : cfs.getLiveSSTables()) -->Line_21 $$ strategy.manifest.add(s)[ FD ]
Line_5 $$ int rows = 40-->Line_7 $$ for (int r = 0; r < rows; r++) [ FD ]
Line_4 $$ ByteBuffer value = ByteBuffer.wrap(new byte[100 * 1024])-->Line_9 $$ update.newRow("column" + c).add("val", value)[ FD ]
Line_7 $$ for (int r = 0; r < rows; r++) -->Line_8 $$ UpdateBuilder update = UpdateBuilder.create(cfs.metadata, String.valueOf(r))[ FD ]
Line_2 $$ public void testMutateLevel() throws Exception -->Line_6 $$ int columns = 20[ CD ]
Line_2 $$ public void testMutateLevel() throws Exception -->Line_24 $$ int[] levels = strategy.manifest.getAllLevelSize()[ CD ]
Line_16 $$ for (SSTableReader s : cfs.getLiveSSTables()) -->Line_20 $$ s.reloadSSTableMetadata()[ FD ]
Line_7 $$ for (int r = 0; r < rows; r++) -->Line_10 $$ update.applyUnsafe()[ CD ]
Line_2 $$ public void testMutateLevel() throws Exception -->Line_15 $$ cfs.forceMajorCompaction()[ CD ]
Line_16 $$ for (SSTableReader s : cfs.getLiveSSTables()) -->Line_17 $$ assertTrue(s.getSSTableLevel() != 6 && s.getSSTableLevel() > 0)[ FD ]
Line_2 $$ public void testMutateLevel() throws Exception -->Line_13 $$ cfs.forceBlockingFlush()[ CD ]
Line_2 $$ public void testMutateLevel() throws Exception -->Line_5 $$ int rows = 40[ CD ]
