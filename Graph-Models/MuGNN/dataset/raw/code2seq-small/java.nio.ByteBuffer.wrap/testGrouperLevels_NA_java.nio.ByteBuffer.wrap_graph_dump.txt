Line_7 $$ for (int r = 0; r < rows; r++) -->Line_9 $$ for (int c = 0; c < columns; c++) update.newRow("column" + c).add("val", value)[ CD ]
Line_2 $$ public void testGrouperLevels() throws Exception -->Line_23 $$ Collection<Collection<SSTableReader>> groupedSSTables = cfs.getCompactionStrategyManager().groupSSTablesForAntiCompaction(cfs.getLiveSSTables())[ CD ]
Line_2 $$ public void testGrouperLevels() throws Exception -->Line_6 $$ int columns = 20[ CD ]
Line_8 $$ UpdateBuilder update = UpdateBuilder.create(cfs.metadata, String.valueOf(r))-->Line_10 $$ update.applyUnsafe()[ FD ]
Line_2 $$ public void testGrouperLevels() throws Exception -->Line_16 $$ int l2Count = strategy.getSSTableCountPerLevel()[2][ CD ]
Line_3 $$ ByteBuffer value = ByteBuffer.wrap(new byte[100 * 1024])-->Line_4 $$ new Random().nextBytes(value.array())[ FD ]
Line_7 $$ for (int r = 0; r < rows; r++) -->Line_11 $$ cfs.forceBlockingFlush()[ CD ]
Line_29 $$ int tableLevel = sstable.getSSTableLevel()-->Line_31 $$ groupLevel = tableLevel[ FD ]
Line_2 $$ public void testGrouperLevels() throws Exception -->Line_5 $$ int rows = 40[ CD ]
Line_26 $$ Iterator<SSTableReader> it = sstableGroup.iterator()-->Line_28 $$ SSTableReader sstable = it.next()[ FD ]
Line_2 $$ public void testGrouperLevels() throws Exception -->Line_7 $$ for (int r = 0; r < rows; r++) [ CD ]
Line_27 $$ while (it.hasNext()) -->Line_30 $$ if (groupLevel == -1)[ CD ]
Line_6 $$ int columns = 20-->Line_9 $$ for (int c = 0; c < columns; c++) update.newRow("column" + c).add("val", value)[ FD ]
Line_14 $$ CompactionStrategyManager strategy = cfs.getCompactionStrategyManager()-->Line_16 $$ int l2Count = strategy.getSSTableCountPerLevel()[2][ FD ]
Line_17 $$ if (l1Count == 0 || l2Count == 0) -->Line_21 $$ Assert.fail()[ CD ]
Line_2 $$ public void testGrouperLevels() throws Exception -->Line_15 $$ int l1Count = strategy.getSSTableCountPerLevel()[1][ CD ]
Line_7 $$ for (int r = 0; r < rows; r++) -->Line_8 $$ UpdateBuilder update = UpdateBuilder.create(cfs.metadata, String.valueOf(r))[ CD ]
Line_8 $$ UpdateBuilder update = UpdateBuilder.create(cfs.metadata, String.valueOf(r))-->Line_9 $$ update.newRow("column" + c).add("val", value)[ FD ]
Line_27 $$ while (it.hasNext()) -->Line_29 $$ int tableLevel = sstable.getSSTableLevel()[ CD ]
Line_25 $$ int groupLevel = -1-->Line_30 $$ if (groupLevel == -1)[ FD ]
Line_5 $$ int rows = 40-->Line_7 $$ for (int r = 0; r < rows; r++) [ FD ]
Line_30 $$ if (groupLevel == -1)-->Line_31 $$ groupLevel = tableLevel[ CD ]
Line_2 $$ public void testGrouperLevels() throws Exception -->Line_3 $$ ByteBuffer value = ByteBuffer.wrap(new byte[100 * 1024])[ CD ]
Line_14 $$ CompactionStrategyManager strategy = cfs.getCompactionStrategyManager()-->Line_15 $$ int l1Count = strategy.getSSTableCountPerLevel()[1][ FD ]
Line_7 $$ for (int r = 0; r < rows; r++) -->Line_8 $$ UpdateBuilder update = UpdateBuilder.create(cfs.metadata, String.valueOf(r))[ FD ]
Line_26 $$ Iterator<SSTableReader> it = sstableGroup.iterator()-->Line_27 $$ while (it.hasNext()) [ FD ]
Line_2 $$ public void testGrouperLevels() throws Exception -->Line_13 $$ waitForLeveling(cfs)[ CD ]
Line_7 $$ for (int r = 0; r < rows; r++) -->Line_10 $$ update.applyUnsafe()[ CD ]
Line_31 $$ groupLevel = tableLevel-->Line_30 $$ if (groupLevel == -1)[ FD ]
Line_2 $$ public void testGrouperLevels() throws Exception -->Line_4 $$ new Random().nextBytes(value.array())[ CD ]
Line_3 $$ ByteBuffer value = ByteBuffer.wrap(new byte[100 * 1024])-->Line_9 $$ update.newRow("column" + c).add("val", value)[ FD ]
Line_17 $$ if (l1Count == 0 || l2Count == 0) -->Line_18 $$ logger.error("L1 or L2 has 0 sstables. Expected > 0 on both.")[ CD ]
Line_24 $$ for (Collection<SSTableReader> sstableGroup : groupedSSTables) -->Line_26 $$ Iterator<SSTableReader> it = sstableGroup.iterator()[ FD ]
Line_2 $$ public void testGrouperLevels() throws Exception -->Line_17 $$ if (l1Count == 0 || l2Count == 0) [ CD ]
Line_25 $$ int groupLevel = -1-->Line_31 $$ groupLevel = tableLevel[ FD ]
Line_2 $$ public void testGrouperLevels() throws Exception -->Line_14 $$ CompactionStrategyManager strategy = cfs.getCompactionStrategyManager()[ CD ]
Line_17 $$ if (l1Count == 0 || l2Count == 0) -->Line_19 $$ logger.error("L1: " + l1Count)[ CD ]
Line_27 $$ while (it.hasNext()) -->Line_28 $$ SSTableReader sstable = it.next()[ CD ]
Line_28 $$ SSTableReader sstable = it.next()-->Line_29 $$ int tableLevel = sstable.getSSTableLevel()[ FD ]
Line_17 $$ if (l1Count == 0 || l2Count == 0) -->Line_20 $$ logger.error("L2: " + l2Count)[ CD ]
