Line_4 $$ byte[] compressedResult = new byte[rawDataSize + 20]-->Line_12 $$ inBuf.put(compressedResult, 0, compressedSize)[ FD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_7 $$ compressor.setInput(rawData, 0, rawDataSize)[ FD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_3 $$ byte[] rawData = BytesGenerator.get(rawDataSize)[ FD ]
Line_8 $$ int compressedSize = compressor.compress(compressedResult, 0, compressedResult.length)-->Line_10 $$ ByteBuffer inBuf = ByteBuffer.allocateDirect(compressedSize)[ FD ]
Line_16 $$ while (!decompressor.finished()) -->Line_17 $$ decompressor.decompress(inBuf, outBuf)[ CD ]
Line_11 $$ ByteBuffer outBuf = ByteBuffer.allocateDirect(rawDataSize)-->Line_26 $$ outBuf.flip()[ FD ]
Line_9 $$ SnappyDirectDecompressor decompressor = new SnappyDirectDecompressor()-->Line_16 $$ while (!decompressor.finished()) [ FD ]
Line_18 $$ if (outBuf.remaining() == 0) -->Line_23 $$ outBuf.clear()[ CD ]
Line_11 $$ ByteBuffer outBuf = ByteBuffer.allocateDirect(rawDataSize)-->Line_28 $$ assertEquals(expected.get(), outBuf.get())[ FD ]
Line_11 $$ ByteBuffer outBuf = ByteBuffer.allocateDirect(rawDataSize)-->Line_17 $$ decompressor.decompress(inBuf, outBuf)[ FD ]
Line_18 $$ if (outBuf.remaining() == 0) -->Line_19 $$ outBuf.flip()[ CD ]
Line_27 $$ while (outBuf.remaining() > 0) -->Line_28 $$ assertEquals(expected.get(), outBuf.get())[ CD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_6 $$ SnappyCompressor compressor = new SnappyCompressor(directBufferSize)[ CD ]
Line_11 $$ ByteBuffer outBuf = ByteBuffer.allocateDirect(rawDataSize)-->Line_18 $$ if (outBuf.remaining() == 0) [ FD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_16 $$ while (!decompressor.finished()) [ CD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_11 $$ ByteBuffer outBuf = ByteBuffer.allocateDirect(rawDataSize)[ CD ]
Line_6 $$ SnappyCompressor compressor = new SnappyCompressor(directBufferSize)-->Line_8 $$ int compressedSize = compressor.compress(compressedResult, 0, compressedResult.length)[ FD ]
Line_11 $$ ByteBuffer outBuf = ByteBuffer.allocateDirect(rawDataSize)-->Line_15 $$ outBuf.clear()[ FD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_11 $$ ByteBuffer outBuf = ByteBuffer.allocateDirect(rawDataSize)[ FD ]
Line_8 $$ int compressedSize = compressor.compress(compressedResult, 0, compressedResult.length)-->Line_12 $$ inBuf.put(compressedResult, 0, compressedSize)[ FD ]
Line_20 $$ while (outBuf.remaining() > 0) -->Line_21 $$ assertEquals(expected.get(), outBuf.get())[ CD ]
Line_6 $$ SnappyCompressor compressor = new SnappyCompressor(directBufferSize)-->Line_7 $$ compressor.setInput(rawData, 0, rawDataSize)[ FD ]
Line_14 $$ ByteBuffer expected = ByteBuffer.wrap(rawData)-->Line_31 $$ assertEquals(0, expected.remaining())[ FD ]
Line_10 $$ ByteBuffer inBuf = ByteBuffer.allocateDirect(compressedSize)-->Line_17 $$ decompressor.decompress(inBuf, outBuf)[ FD ]
Line_11 $$ ByteBuffer outBuf = ByteBuffer.allocateDirect(rawDataSize)-->Line_30 $$ outBuf.clear()[ FD ]
Line_9 $$ SnappyDirectDecompressor decompressor = new SnappyDirectDecompressor()-->Line_17 $$ decompressor.decompress(inBuf, outBuf)[ FD ]
Line_14 $$ ByteBuffer expected = ByteBuffer.wrap(rawData)-->Line_28 $$ assertEquals(expected.get(), outBuf.get())[ FD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_4 $$ byte[] compressedResult = new byte[rawDataSize + 20][ CD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_8 $$ int compressedSize = compressor.compress(compressedResult, 0, compressedResult.length)[ CD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_12 $$ inBuf.put(compressedResult, 0, compressedSize)[ CD ]
Line_11 $$ ByteBuffer outBuf = ByteBuffer.allocateDirect(rawDataSize)-->Line_21 $$ assertEquals(expected.get(), outBuf.get())[ FD ]
Line_11 $$ ByteBuffer outBuf = ByteBuffer.allocateDirect(rawDataSize)-->Line_20 $$ while (outBuf.remaining() > 0) [ FD ]
Line_4 $$ byte[] compressedResult = new byte[rawDataSize + 20]-->Line_8 $$ int compressedSize = compressor.compress(compressedResult, 0, compressedResult.length)[ FD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_27 $$ while (outBuf.remaining() > 0) [ CD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_13 $$ inBuf.flip()[ CD ]
Line_10 $$ ByteBuffer inBuf = ByteBuffer.allocateDirect(compressedSize)-->Line_13 $$ inBuf.flip()[ FD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_10 $$ ByteBuffer inBuf = ByteBuffer.allocateDirect(compressedSize)[ CD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_7 $$ compressor.setInput(rawData, 0, rawDataSize)[ CD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_30 $$ outBuf.clear()[ CD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_9 $$ SnappyDirectDecompressor decompressor = new SnappyDirectDecompressor()[ CD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_5 $$ int directBufferSize = Math.max(rawDataSize * 2, 64 * 1024)[ CD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_15 $$ outBuf.clear()[ CD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_3 $$ byte[] rawData = BytesGenerator.get(rawDataSize)[ CD ]
Line_3 $$ byte[] rawData = BytesGenerator.get(rawDataSize)-->Line_7 $$ compressor.setInput(rawData, 0, rawDataSize)[ FD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_14 $$ ByteBuffer expected = ByteBuffer.wrap(rawData)[ CD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_31 $$ assertEquals(0, expected.remaining())[ CD ]
Line_11 $$ ByteBuffer outBuf = ByteBuffer.allocateDirect(rawDataSize)-->Line_27 $$ while (outBuf.remaining() > 0) [ FD ]
Line_11 $$ ByteBuffer outBuf = ByteBuffer.allocateDirect(rawDataSize)-->Line_23 $$ outBuf.clear()[ FD ]
Line_2 $$ private void compressDecompressLoop(int rawDataSize) throws IOException -->Line_26 $$ outBuf.flip()[ CD ]
Line_14 $$ ByteBuffer expected = ByteBuffer.wrap(rawData)-->Line_21 $$ assertEquals(expected.get(), outBuf.get())[ FD ]
Line_16 $$ while (!decompressor.finished()) -->Line_18 $$ if (outBuf.remaining() == 0) [ CD ]
Line_11 $$ ByteBuffer outBuf = ByteBuffer.allocateDirect(rawDataSize)-->Line_19 $$ outBuf.flip()[ FD ]
Line_10 $$ ByteBuffer inBuf = ByteBuffer.allocateDirect(compressedSize)-->Line_12 $$ inBuf.put(compressedResult, 0, compressedSize)[ FD ]
Line_3 $$ byte[] rawData = BytesGenerator.get(rawDataSize)-->Line_14 $$ ByteBuffer expected = ByteBuffer.wrap(rawData)[ FD ]
Line_18 $$ if (outBuf.remaining() == 0) -->Line_20 $$ while (outBuf.remaining() > 0) [ CD ]
