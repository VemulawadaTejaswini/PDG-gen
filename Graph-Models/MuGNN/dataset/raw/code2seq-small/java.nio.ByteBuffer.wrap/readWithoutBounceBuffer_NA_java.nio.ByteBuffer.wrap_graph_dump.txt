Line_2 $$ private synchronized int readWithoutBounceBuffer(byte[] arr, int off, int len) throws IOException -->Line_3 $$ freeDataBufIfExists()[ CD ]
Line_2 $$ private synchronized int readWithoutBounceBuffer(byte[] arr, int off, int len) throws IOException -->Line_5 $$ int nRead = dataIn.read(ByteBuffer.wrap(arr, off, len), dataPos)[ FD ]
Line_5 $$ int nRead = dataIn.read(ByteBuffer.wrap(arr, off, len), dataPos)-->Line_6 $$ if (nRead > 0) [ FD ]
Line_2 $$ private synchronized int readWithoutBounceBuffer(byte[] arr, int off, int len) throws IOException -->Line_5 $$ int nRead = dataIn.read(ByteBuffer.wrap(arr, off, len), dataPos)[ CD ]
Line_6 $$ if (nRead > 0) -->Line_8 $$ if ((nRead == 0) && (dataPos == dataIn.size())) [ CD ]
Line_2 $$ private synchronized int readWithoutBounceBuffer(byte[] arr, int off, int len) throws IOException -->Line_6 $$ if (nRead > 0) [ CD ]
Line_2 $$ private synchronized int readWithoutBounceBuffer(byte[] arr, int off, int len) throws IOException -->Line_4 $$ freeChecksumBufIfExists()[ CD ]
Line_2 $$ private synchronized int readWithoutBounceBuffer(byte[] arr, int off, int len) throws IOException -->Line_11 $$ return nRead[ CD ]
Line_8 $$ if ((nRead == 0) && (dataPos == dataIn.size())) -->Line_9 $$ return -1[ CD ]
