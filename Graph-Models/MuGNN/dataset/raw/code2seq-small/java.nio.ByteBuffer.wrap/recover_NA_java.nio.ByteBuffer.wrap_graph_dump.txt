Line_60 $$ int compressedLength = end - start-->Line_65 $$ reader.readFully(buffer, 0, compressedLength)[ FD ]
Line_53 $$ FileDataInput sectionReader = reader-->Line_70 $$ sectionReader = new FileSegmentInputStream(ByteBuffer.wrap(uncompressedBuffer), reader.getPath(), replayPos)[ FD ]
Line_42 $$ int replayPos = replayEnd + CommitLogSegment.SYNC_MARKER_SIZE-->Line_62 $$ logger.trace("Decompressing [ FD ]
Line_2 $$ public void recover(File file, boolean tolerateTruncation) throws IOException -->Line_3 $$ CommitLogDescriptor desc = CommitLogDescriptor.fromFileName(file.getName())[ CD ]
Line_32 $$ compressor = CompressionParams.createCompressor(desc.compression)-->Line_56 $$ if (compressor != null) [ FD ]
Line_6 $$ if (desc.version < CommitLogDescriptor.VERSION_21) -->Line_12 $$ return[ CD ]
Line_55 $$ boolean tolerateErrorsInSection = tolerateTruncation-->Line_73 $$ handleReplayError(tolerateErrorsInSection, "Unexpected exception decompressing section at %d: %s", start, e)[ FD ]
Line_45 $$ if (compressor != null) -->Line_46 $$ int uncompressedLength = reader.readInt()[ CD ]
Line_14 $$ final long segmentId = desc.id-->Line_25 $$ handleReplayError(false, "Segment id mismatch (filename %d, descriptor %d) in file %s", segmentId, desc.id, file)[ FD ]
Line_53 $$ FileDataInput sectionReader = reader-->Line_77 $$ if (!replaySyncSection(sectionReader, replayEnd, desc, errorContext, tolerateErrorsInSection))[ FD ]
Line_71 $$ errorContext = "compressed section at " + start + " in " + errorContext-->Line_77 $$ if (!replaySyncSection(sectionReader, replayEnd, desc, errorContext, tolerateErrorsInSection))[ FD ]
Line_4 $$ try (ChannelProxy channel = new ChannelProxy(file);-->Line_46 $$ int uncompressedLength = reader.readInt()[ FD ]
Line_43 $$ if (logger.isTraceEnabled())-->Line_44 $$ logger.trace("Replaying [ CD ]
Line_47 $$ replayEnd = replayPos + uncompressedLength-->Line_77 $$ if (!replaySyncSection(sectionReader, replayEnd, desc, errorContext, tolerateErrorsInSection))[ FD ]
Line_47 $$ replayEnd = replayPos + uncompressedLength-->Line_62 $$ logger.trace("Decompressing [ FD ]
Line_54 $$ String errorContext = desc.fileName()-->Line_71 $$ errorContext = "compressed section at " + start + " in " + errorContext[ FD ]
Line_2 $$ public void recover(File file, boolean tolerateTruncation) throws IOException -->Line_80 $$ logger.debug("Finished reading [ FD ]
Line_16 $$ desc = CommitLogDescriptor.readHeader(reader)-->Line_41 $$ while ((end = readSyncMarker(desc, end, reader, tolerateTruncation)) >= 0) [ FD ]
Line_3 $$ CommitLogDescriptor desc = CommitLogDescriptor.fromFileName(file.getName())-->Line_54 $$ String errorContext = desc.fileName()[ FD ]
Line_20 $$ if (desc == null) -->Line_21 $$ handleReplayError(false, "Could not read commit log descriptor in file %s", file)[ CD ]
Line_56 $$ if (compressor != null) -->Line_57 $$ tolerateErrorsInSection &= end == reader.length() || end < 0[ CD ]
Line_2 $$ public void recover(File file, boolean tolerateTruncation) throws IOException -->Line_3 $$ CommitLogDescriptor desc = CommitLogDescriptor.fromFileName(file.getName())[ FD ]
Line_3 $$ CommitLogDescriptor desc = CommitLogDescriptor.fromFileName(file.getName())-->Line_20 $$ if (desc == null) [ FD ]
Line_3 $$ CommitLogDescriptor desc = CommitLogDescriptor.fromFileName(file.getName())-->Line_77 $$ if (!replaySyncSection(sectionReader, replayEnd, desc, errorContext, tolerateErrorsInSection))[ FD ]
Line_4 $$ try (ChannelProxy channel = new ChannelProxy(file);-->Line_39 $$ int end = (int) reader.getFilePointer()[ FD ]
Line_29 $$ ICompressor compressor = null-->Line_45 $$ if (compressor != null) [ FD ]
Line_16 $$ desc = CommitLogDescriptor.readHeader(reader)-->Line_27 $$ if (logAndCheckIfShouldSkip(file, desc))[ FD ]
Line_9 $$ if (globalPosition.segment == desc.id)-->Line_10 $$ reader.seek(globalPosition.position)[ CD ]
Line_2 $$ public void recover(File file, boolean tolerateTruncation) throws IOException -->Line_25 $$ handleReplayError(false, "Segment id mismatch (filename %d, descriptor %d) in file %s", segmentId, desc.id, file)[ FD ]
Line_3 $$ CommitLogDescriptor desc = CommitLogDescriptor.fromFileName(file.getName())-->Line_11 $$ replaySyncSection(reader, (int) reader.length(), desc, desc.fileName(), tolerateTruncation)[ FD ]
Line_6 $$ if (desc.version < CommitLogDescriptor.VERSION_21) -->Line_9 $$ if (globalPosition.segment == desc.id)[ CD ]
Line_4 $$ try (ChannelProxy channel = new ChannelProxy(file);-->Line_70 $$ sectionReader = new FileSegmentInputStream(ByteBuffer.wrap(uncompressedBuffer), reader.getPath(), replayPos)[ FD ]
Line_16 $$ desc = CommitLogDescriptor.readHeader(reader)-->Line_18 $$ desc = null[ FD ]
Line_4 $$ try (ChannelProxy channel = new ChannelProxy(file);-->Line_58 $$ int start = (int) reader.getFilePointer()[ FD ]
Line_45 $$ if (compressor != null) -->Line_49 $$ replayEnd = end[ CD ]
Line_4 $$ try (ChannelProxy channel = new ChannelProxy(file);-->Line_57 $$ tolerateErrorsInSection &= end == reader.length() || end < 0[ FD ]
Line_58 $$ int start = (int) reader.getFilePointer()-->Line_73 $$ handleReplayError(tolerateErrorsInSection, "Unexpected exception decompressing section at %d: %s", start, e)[ FD ]
Line_49 $$ replayEnd = end-->Line_77 $$ if (!replaySyncSection(sectionReader, replayEnd, desc, errorContext, tolerateErrorsInSection))[ FD ]
Line_2 $$ public void recover(File file, boolean tolerateTruncation) throws IOException -->Line_44 $$ logger.trace("Replaying [ FD ]
Line_42 $$ int replayPos = replayEnd + CommitLogSegment.SYNC_MARKER_SIZE-->Line_47 $$ replayEnd = replayPos + uncompressedLength[ FD ]
Line_29 $$ ICompressor compressor = null-->Line_56 $$ if (compressor != null) [ FD ]
Line_46 $$ int uncompressedLength = reader.readInt()-->Line_67 $$ if (uncompressedLength > uncompressedBuffer.length)[ FD ]
Line_39 $$ int end = (int) reader.getFilePointer()-->Line_41 $$ while ((end = readSyncMarker(desc, end, reader, tolerateTruncation)) >= 0) [ FD ]
Line_39 $$ int end = (int) reader.getFilePointer()-->Line_44 $$ logger.trace("Replaying [ FD ]
Line_2 $$ public void recover(File file, boolean tolerateTruncation) throws IOException -->Line_11 $$ replaySyncSection(reader, (int) reader.length(), desc, desc.fileName(), tolerateTruncation)[ FD ]
Line_41 $$ while ((end = readSyncMarker(desc, end, reader, tolerateTruncation)) >= 0) -->Line_77 $$ if (!replaySyncSection(sectionReader, replayEnd, desc, errorContext, tolerateErrorsInSection))[ CD ]
Line_41 $$ while ((end = readSyncMarker(desc, end, reader, tolerateTruncation)) >= 0) -->Line_54 $$ String errorContext = desc.fileName()[ CD ]
Line_70 $$ sectionReader = new FileSegmentInputStream(ByteBuffer.wrap(uncompressedBuffer), reader.getPath(), replayPos)-->Line_77 $$ if (!replaySyncSection(sectionReader, replayEnd, desc, errorContext, tolerateErrorsInSection))[ FD ]
Line_4 $$ try (ChannelProxy channel = new ChannelProxy(file);-->Line_16 $$ desc = CommitLogDescriptor.readHeader(reader)[ FD ]
Line_24 $$ if (segmentId != desc.id) -->Line_25 $$ handleReplayError(false, "Segment id mismatch (filename %d, descriptor %d) in file %s", segmentId, desc.id, file)[ CD ]
Line_14 $$ final long segmentId = desc.id-->Line_24 $$ if (segmentId != desc.id) [ FD ]
Line_57 $$ tolerateErrorsInSection &= end == reader.length() || end < 0-->Line_73 $$ handleReplayError(tolerateErrorsInSection, "Unexpected exception decompressing section at %d: %s", start, e)[ FD ]
Line_3 $$ CommitLogDescriptor desc = CommitLogDescriptor.fromFileName(file.getName())-->Line_7 $$ if (logAndCheckIfShouldSkip(file, desc))[ FD ]
Line_61 $$ if (logger.isTraceEnabled())-->Line_62 $$ logger.trace("Decompressing [ CD ]
Line_49 $$ replayEnd = end-->Line_62 $$ logger.trace("Decompressing [ FD ]
Line_18 $$ desc = null-->Line_20 $$ if (desc == null) [ FD ]
Line_41 $$ while ((end = readSyncMarker(desc, end, reader, tolerateTruncation)) >= 0) -->Line_51 $$ if (segmentId == globalPosition.segment && replayEnd < globalPosition.position)[ CD ]
Line_18 $$ desc = null-->Line_77 $$ if (!replaySyncSection(sectionReader, replayEnd, desc, errorContext, tolerateErrorsInSection))[ FD ]
Line_27 $$ if (logAndCheckIfShouldSkip(file, desc))-->Line_28 $$ return[ CD ]
Line_40 $$ int replayEnd = end-->Line_47 $$ replayEnd = replayPos + uncompressedLength[ FD ]
Line_18 $$ desc = null-->Line_27 $$ if (logAndCheckIfShouldSkip(file, desc))[ FD ]
Line_40 $$ int replayEnd = end-->Line_62 $$ logger.trace("Decompressing [ FD ]
Line_2 $$ public void recover(File file, boolean tolerateTruncation) throws IOException -->Line_7 $$ if (logAndCheckIfShouldSkip(file, desc))[ FD ]
Line_41 $$ while ((end = readSyncMarker(desc, end, reader, tolerateTruncation)) >= 0) -->Line_42 $$ int replayPos = replayEnd + CommitLogSegment.SYNC_MARKER_SIZE[ CD ]
Line_16 $$ desc = CommitLogDescriptor.readHeader(reader)-->Line_54 $$ String errorContext = desc.fileName()[ FD ]
Line_7 $$ if (logAndCheckIfShouldSkip(file, desc))-->Line_8 $$ return[ CD ]
Line_6 $$ if (desc.version < CommitLogDescriptor.VERSION_21) -->Line_7 $$ if (logAndCheckIfShouldSkip(file, desc))[ CD ]
Line_3 $$ CommitLogDescriptor desc = CommitLogDescriptor.fromFileName(file.getName())-->Line_27 $$ if (logAndCheckIfShouldSkip(file, desc))[ FD ]
Line_18 $$ desc = null-->Line_54 $$ String errorContext = desc.fileName()[ FD ]
Line_47 $$ replayEnd = replayPos + uncompressedLength-->Line_49 $$ replayEnd = end[ FD ]
Line_41 $$ while ((end = readSyncMarker(desc, end, reader, tolerateTruncation)) >= 0) -->Line_53 $$ FileDataInput sectionReader = reader[ CD ]
Line_2 $$ public void recover(File file, boolean tolerateTruncation) throws IOException -->Line_62 $$ logger.trace("Decompressing [ FD ]
Line_39 $$ int end = (int) reader.getFilePointer()-->Line_49 $$ replayEnd = end[ FD ]
Line_41 $$ while ((end = readSyncMarker(desc, end, reader, tolerateTruncation)) >= 0) -->Line_49 $$ replayEnd = end[ FD ]
Line_4 $$ try (ChannelProxy channel = new ChannelProxy(file);-->Line_44 $$ logger.trace("Replaying [ FD ]
Line_54 $$ String errorContext = desc.fileName()-->Line_77 $$ if (!replaySyncSection(sectionReader, replayEnd, desc, errorContext, tolerateErrorsInSection))[ FD ]
Line_4 $$ try (ChannelProxy channel = new ChannelProxy(file);-->Line_41 $$ while ((end = readSyncMarker(desc, end, reader, tolerateTruncation)) >= 0) [ FD ]
Line_2 $$ public void recover(File file, boolean tolerateTruncation) throws IOException -->Line_21 $$ handleReplayError(false, "Could not read commit log descriptor in file %s", file)[ FD ]
Line_45 $$ if (compressor != null) -->Line_47 $$ replayEnd = replayPos + uncompressedLength[ CD ]
Line_32 $$ compressor = CompressionParams.createCompressor(desc.compression)-->Line_69 $$ compressor.uncompress(buffer, 0, compressedLength, uncompressedBuffer, 0)[ FD ]
Line_4 $$ try (ChannelProxy channel = new ChannelProxy(file);-->Line_10 $$ reader.seek(globalPosition.position)[ FD ]
Line_60 $$ int compressedLength = end - start-->Line_63 $$ if (compressedLength > buffer.length)[ FD ]
Line_40 $$ int replayEnd = end-->Line_77 $$ if (!replaySyncSection(sectionReader, replayEnd, desc, errorContext, tolerateErrorsInSection))[ FD ]
Line_41 $$ while ((end = readSyncMarker(desc, end, reader, tolerateTruncation)) >= 0) -->Line_43 $$ if (logger.isTraceEnabled())[ CD ]
Line_3 $$ CommitLogDescriptor desc = CommitLogDescriptor.fromFileName(file.getName())-->Line_41 $$ while ((end = readSyncMarker(desc, end, reader, tolerateTruncation)) >= 0) [ FD ]
Line_41 $$ while ((end = readSyncMarker(desc, end, reader, tolerateTruncation)) >= 0) -->Line_56 $$ if (compressor != null) [ CD ]
Line_6 $$ if (desc.version < CommitLogDescriptor.VERSION_21) -->Line_11 $$ replaySyncSection(reader, (int) reader.length(), desc, desc.fileName(), tolerateTruncation)[ CD ]
Line_32 $$ compressor = CompressionParams.createCompressor(desc.compression)-->Line_45 $$ if (compressor != null) [ FD ]
Line_29 $$ ICompressor compressor = null-->Line_69 $$ compressor.uncompress(buffer, 0, compressedLength, uncompressedBuffer, 0)[ FD ]
Line_2 $$ public void recover(File file, boolean tolerateTruncation) throws IOException -->Line_27 $$ if (logAndCheckIfShouldSkip(file, desc))[ FD ]
Line_57 $$ tolerateErrorsInSection &= end == reader.length() || end < 0-->Line_77 $$ if (!replaySyncSection(sectionReader, replayEnd, desc, errorContext, tolerateErrorsInSection))[ FD ]
Line_18 $$ desc = null-->Line_41 $$ while ((end = readSyncMarker(desc, end, reader, tolerateTruncation)) >= 0) [ FD ]
Line_41 $$ while ((end = readSyncMarker(desc, end, reader, tolerateTruncation)) >= 0) -->Line_44 $$ logger.trace("Replaying [ FD ]
Line_4 $$ try (ChannelProxy channel = new ChannelProxy(file);-->Line_11 $$ replaySyncSection(reader, (int) reader.length(), desc, desc.fileName(), tolerateTruncation)[ FD ]
Line_29 $$ ICompressor compressor = null-->Line_32 $$ compressor = CompressionParams.createCompressor(desc.compression)[ FD ]
Line_3 $$ CommitLogDescriptor desc = CommitLogDescriptor.fromFileName(file.getName())-->Line_18 $$ desc = null[ FD ]
Line_60 $$ int compressedLength = end - start-->Line_69 $$ compressor.uncompress(buffer, 0, compressedLength, uncompressedBuffer, 0)[ FD ]
Line_16 $$ desc = CommitLogDescriptor.readHeader(reader)-->Line_77 $$ if (!replaySyncSection(sectionReader, replayEnd, desc, errorContext, tolerateErrorsInSection))[ FD ]
Line_46 $$ int uncompressedLength = reader.readInt()-->Line_47 $$ replayEnd = replayPos + uncompressedLength[ FD ]
Line_3 $$ CommitLogDescriptor desc = CommitLogDescriptor.fromFileName(file.getName())-->Line_16 $$ desc = CommitLogDescriptor.readHeader(reader)[ FD ]
Line_4 $$ try (ChannelProxy channel = new ChannelProxy(file);-->Line_38 $$ assert reader.length() <= Integer.MAX_VALUE[ FD ]
Line_20 $$ if (desc == null) -->Line_22 $$ return[ CD ]
Line_2 $$ public void recover(File file, boolean tolerateTruncation) throws IOException -->Line_41 $$ while ((end = readSyncMarker(desc, end, reader, tolerateTruncation)) >= 0) [ FD ]
Line_16 $$ desc = CommitLogDescriptor.readHeader(reader)-->Line_20 $$ if (desc == null) [ FD ]
Line_41 $$ while ((end = readSyncMarker(desc, end, reader, tolerateTruncation)) >= 0) -->Line_45 $$ if (compressor != null) [ CD ]
Line_56 $$ if (compressor != null) -->Line_58 $$ int start = (int) reader.getFilePointer()[ CD ]
Line_55 $$ boolean tolerateErrorsInSection = tolerateTruncation-->Line_77 $$ if (!replaySyncSection(sectionReader, replayEnd, desc, errorContext, tolerateErrorsInSection))[ FD ]
Line_4 $$ try (ChannelProxy channel = new ChannelProxy(file);-->Line_65 $$ reader.readFully(buffer, 0, compressedLength)[ FD ]
Line_40 $$ int replayEnd = end-->Line_49 $$ replayEnd = end[ FD ]
Line_55 $$ boolean tolerateErrorsInSection = tolerateTruncation-->Line_57 $$ tolerateErrorsInSection &= end == reader.length() || end < 0[ FD ]
Line_41 $$ while ((end = readSyncMarker(desc, end, reader, tolerateTruncation)) >= 0) -->Line_55 $$ boolean tolerateErrorsInSection = tolerateTruncation[ CD ]
