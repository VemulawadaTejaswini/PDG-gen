Line_7 $$ for (int i = 0; i < 100000; i++) -->Line_12 $$ System.arraycopy(commonBytes, 0, aBytes, 0, commonLength)[ CD ]
Line_4 $$ byte[] commonBytes = new byte[10]-->Line_12 $$ System.arraycopy(commonBytes, 0, aBytes, 0, commonLength)[ FD ]
Line_7 $$ for (int i = 0; i < 100000; i++) -->Line_14 $$ int aLength = random.nextInt(commonLength, 16)[ CD ]
Line_5 $$ byte[] aBytes = new byte[16]-->Line_10 $$ random.nextBytes(aBytes)[ FD ]
Line_7 $$ for (int i = 0; i < 100000; i++) -->Line_13 $$ System.arraycopy(commonBytes, 0, bBytes, 0, commonLength)[ CD ]
Line_3 $$ ThreadLocalRandom random = ThreadLocalRandom.current()-->Line_10 $$ random.nextBytes(aBytes)[ FD ]
Line_8 $$ int commonLength = random.nextInt(0, 10)-->Line_15 $$ int bLength = random.nextInt(commonLength, 16)[ FD ]
Line_7 $$ for (int i = 0; i < 100000; i++) -->Line_8 $$ int commonLength = random.nextInt(0, 10)[ CD ]
Line_7 $$ for (int i = 0; i < 100000; i++) -->Line_15 $$ int bLength = random.nextInt(commonLength, 16)[ CD ]
Line_15 $$ int bLength = random.nextInt(commonLength, 16)-->Line_17 $$ ColumnIdentifier b = new ColumnIdentifier(ByteBuffer.wrap(bBytes, 0, bLength), BytesType.instance)[ FD ]
Line_4 $$ byte[] commonBytes = new byte[10]-->Line_13 $$ System.arraycopy(commonBytes, 0, bBytes, 0, commonLength)[ FD ]
Line_6 $$ byte[] bBytes = new byte[16]-->Line_11 $$ random.nextBytes(bBytes)[ FD ]
Line_7 $$ for (int i = 0; i < 100000; i++) -->Line_16 $$ ColumnIdentifier a = new ColumnIdentifier(ByteBuffer.wrap(aBytes, 0, aLength), BytesType.instance)[ CD ]
Line_17 $$ ColumnIdentifier b = new ColumnIdentifier(ByteBuffer.wrap(bBytes, 0, bLength), BytesType.instance)-->Line_18 $$ Assert.assertEquals("" + i, compareResult(a.compareTo(b)), compareResult(ByteBufferUtil.compareUnsigned(a.bytes, b.bytes)))[ FD ]
Line_8 $$ int commonLength = random.nextInt(0, 10)-->Line_12 $$ System.arraycopy(commonBytes, 0, aBytes, 0, commonLength)[ FD ]
Line_7 $$ for (int i = 0; i < 100000; i++) -->Line_18 $$ Assert.assertEquals("" + i, compareResult(a.compareTo(b)), compareResult(ByteBufferUtil.compareUnsigned(a.bytes, b.bytes)))[ CD ]
Line_3 $$ ThreadLocalRandom random = ThreadLocalRandom.current()-->Line_15 $$ int bLength = random.nextInt(commonLength, 16)[ FD ]
Line_2 $$ public void testComparisonMethod() -->Line_7 $$ for (int i = 0; i < 100000; i++) [ CD ]
Line_5 $$ byte[] aBytes = new byte[16]-->Line_16 $$ ColumnIdentifier a = new ColumnIdentifier(ByteBuffer.wrap(aBytes, 0, aLength), BytesType.instance)[ FD ]
Line_7 $$ for (int i = 0; i < 100000; i++) -->Line_9 $$ random.nextBytes(commonBytes)[ CD ]
Line_14 $$ int aLength = random.nextInt(commonLength, 16)-->Line_16 $$ ColumnIdentifier a = new ColumnIdentifier(ByteBuffer.wrap(aBytes, 0, aLength), BytesType.instance)[ FD ]
Line_3 $$ ThreadLocalRandom random = ThreadLocalRandom.current()-->Line_9 $$ random.nextBytes(commonBytes)[ FD ]
Line_3 $$ ThreadLocalRandom random = ThreadLocalRandom.current()-->Line_8 $$ int commonLength = random.nextInt(0, 10)[ FD ]
Line_2 $$ public void testComparisonMethod() -->Line_3 $$ ThreadLocalRandom random = ThreadLocalRandom.current()[ CD ]
Line_7 $$ for (int i = 0; i < 100000; i++) -->Line_17 $$ ColumnIdentifier b = new ColumnIdentifier(ByteBuffer.wrap(bBytes, 0, bLength), BytesType.instance)[ CD ]
Line_6 $$ byte[] bBytes = new byte[16]-->Line_13 $$ System.arraycopy(commonBytes, 0, bBytes, 0, commonLength)[ FD ]
Line_7 $$ for (int i = 0; i < 100000; i++) -->Line_11 $$ random.nextBytes(bBytes)[ CD ]
Line_3 $$ ThreadLocalRandom random = ThreadLocalRandom.current()-->Line_14 $$ int aLength = random.nextInt(commonLength, 16)[ FD ]
Line_2 $$ public void testComparisonMethod() -->Line_5 $$ byte[] aBytes = new byte[16][ CD ]
Line_6 $$ byte[] bBytes = new byte[16]-->Line_17 $$ ColumnIdentifier b = new ColumnIdentifier(ByteBuffer.wrap(bBytes, 0, bLength), BytesType.instance)[ FD ]
Line_2 $$ public void testComparisonMethod() -->Line_6 $$ byte[] bBytes = new byte[16][ CD ]
Line_8 $$ int commonLength = random.nextInt(0, 10)-->Line_13 $$ System.arraycopy(commonBytes, 0, bBytes, 0, commonLength)[ FD ]
Line_2 $$ public void testComparisonMethod() -->Line_4 $$ byte[] commonBytes = new byte[10][ CD ]
Line_4 $$ byte[] commonBytes = new byte[10]-->Line_9 $$ random.nextBytes(commonBytes)[ FD ]
Line_16 $$ ColumnIdentifier a = new ColumnIdentifier(ByteBuffer.wrap(aBytes, 0, aLength), BytesType.instance)-->Line_18 $$ Assert.assertEquals("" + i, compareResult(a.compareTo(b)), compareResult(ByteBufferUtil.compareUnsigned(a.bytes, b.bytes)))[ FD ]
Line_8 $$ int commonLength = random.nextInt(0, 10)-->Line_14 $$ int aLength = random.nextInt(commonLength, 16)[ FD ]
Line_3 $$ ThreadLocalRandom random = ThreadLocalRandom.current()-->Line_11 $$ random.nextBytes(bBytes)[ FD ]
Line_5 $$ byte[] aBytes = new byte[16]-->Line_12 $$ System.arraycopy(commonBytes, 0, aBytes, 0, commonLength)[ FD ]
Line_7 $$ for (int i = 0; i < 100000; i++) -->Line_10 $$ random.nextBytes(aBytes)[ CD ]
