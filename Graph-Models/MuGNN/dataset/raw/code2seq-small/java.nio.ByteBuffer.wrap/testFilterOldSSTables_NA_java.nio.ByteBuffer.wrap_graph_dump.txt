Line_15 $$ List<SSTableReader> sstrs = new ArrayList(cfs.getLiveSSTables())-->Line_20 $$ filtered = filterOldSSTables(sstrs, 1, 3)[ FD ]
Line_8 $$ for (int r = 0; r < numSSTables; r++) -->Line_9 $$ DecoratedKey key = Util.dk(String.valueOf(r))[ CD ]
Line_14 $$ Iterable<SSTableReader> filtered-->Line_20 $$ filtered = filterOldSSTables(sstrs, 1, 3)[ FD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_8 $$ for (int r = 0; r < numSSTables; r++) [ CD ]
Line_3 $$ Keyspace keyspace = Keyspace.open(KEYSPACE1)-->Line_4 $$ ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1)[ FD ]
Line_15 $$ List<SSTableReader> sstrs = new ArrayList(cfs.getLiveSSTables())-->Line_16 $$ filtered = filterOldSSTables(sstrs, 0, 2)[ FD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_16 $$ filtered = filterOldSSTables(sstrs, 0, 2)[ CD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_19 $$ assertEquals("only the newest 2 sstables should remain", 2, Iterables.size(filtered))[ CD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_24 $$ cfs.truncateBlocking()[ CD ]
Line_15 $$ List<SSTableReader> sstrs = new ArrayList(cfs.getLiveSSTables())-->Line_17 $$ assertEquals("when maxSSTableAge is zero, no sstables should be filtered", sstrs.size(), Iterables.size(filtered))[ FD ]
Line_4 $$ ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1)-->Line_11 $$ cfs.forceBlockingFlush()[ FD ]
Line_16 $$ filtered = filterOldSSTables(sstrs, 0, 2)-->Line_19 $$ assertEquals("only the newest 2 sstables should remain", 2, Iterables.size(filtered))[ FD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_23 $$ assertEquals("no sstables should remain when all are too old", 0, Iterables.size(filtered))[ CD ]
Line_14 $$ Iterable<SSTableReader> filtered-->Line_22 $$ filtered = filterOldSSTables(sstrs, 1, 4)[ FD ]
Line_20 $$ filtered = filterOldSSTables(sstrs, 1, 3)-->Line_23 $$ assertEquals("no sstables should remain when all are too old", 0, Iterables.size(filtered))[ FD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_18 $$ filtered = filterOldSSTables(sstrs, 1, 2)[ CD ]
Line_9 $$ DecoratedKey key = Util.dk(String.valueOf(r))-->Line_10 $$ new RowUpdateBuilder(cfs.metadata, r, key.getKey()).clustering("column").add("val", value).build().applyUnsafe()[ FD ]
Line_16 $$ filtered = filterOldSSTables(sstrs, 0, 2)-->Line_20 $$ filtered = filterOldSSTables(sstrs, 1, 3)[ FD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_21 $$ assertEquals("only the newest sstable should remain", 1, Iterables.size(filtered))[ CD ]
Line_15 $$ List<SSTableReader> sstrs = new ArrayList(cfs.getLiveSSTables())-->Line_22 $$ filtered = filterOldSSTables(sstrs, 1, 4)[ FD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_22 $$ filtered = filterOldSSTables(sstrs, 1, 4)[ CD ]
Line_18 $$ filtered = filterOldSSTables(sstrs, 1, 2)-->Line_20 $$ filtered = filterOldSSTables(sstrs, 1, 3)[ FD ]
Line_14 $$ Iterable<SSTableReader> filtered-->Line_19 $$ assertEquals("only the newest 2 sstables should remain", 2, Iterables.size(filtered))[ FD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_15 $$ List<SSTableReader> sstrs = new ArrayList(cfs.getLiveSSTables())[ CD ]
Line_14 $$ Iterable<SSTableReader> filtered-->Line_23 $$ assertEquals("no sstables should remain when all are too old", 0, Iterables.size(filtered))[ FD ]
Line_22 $$ filtered = filterOldSSTables(sstrs, 1, 4)-->Line_23 $$ assertEquals("no sstables should remain when all are too old", 0, Iterables.size(filtered))[ FD ]
Line_15 $$ List<SSTableReader> sstrs = new ArrayList(cfs.getLiveSSTables())-->Line_18 $$ filtered = filterOldSSTables(sstrs, 1, 2)[ FD ]
Line_20 $$ filtered = filterOldSSTables(sstrs, 1, 3)-->Line_22 $$ filtered = filterOldSSTables(sstrs, 1, 4)[ FD ]
Line_14 $$ Iterable<SSTableReader> filtered-->Line_16 $$ filtered = filterOldSSTables(sstrs, 0, 2)[ FD ]
Line_16 $$ filtered = filterOldSSTables(sstrs, 0, 2)-->Line_17 $$ assertEquals("when maxSSTableAge is zero, no sstables should be filtered", sstrs.size(), Iterables.size(filtered))[ FD ]
Line_18 $$ filtered = filterOldSSTables(sstrs, 1, 2)-->Line_22 $$ filtered = filterOldSSTables(sstrs, 1, 4)[ FD ]
Line_8 $$ for (int r = 0; r < numSSTables; r++) -->Line_10 $$ new RowUpdateBuilder(cfs.metadata, r, key.getKey()).clustering("column").add("val", value).build().applyUnsafe()[ CD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_14 $$ Iterable<SSTableReader> filtered[ CD ]
Line_20 $$ filtered = filterOldSSTables(sstrs, 1, 3)-->Line_21 $$ assertEquals("only the newest sstable should remain", 1, Iterables.size(filtered))[ FD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_3 $$ Keyspace keyspace = Keyspace.open(KEYSPACE1)[ CD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_7 $$ int numSSTables = 3[ CD ]
Line_8 $$ for (int r = 0; r < numSSTables; r++) -->Line_11 $$ cfs.forceBlockingFlush()[ CD ]
Line_16 $$ filtered = filterOldSSTables(sstrs, 0, 2)-->Line_21 $$ assertEquals("only the newest sstable should remain", 1, Iterables.size(filtered))[ FD ]
Line_14 $$ Iterable<SSTableReader> filtered-->Line_17 $$ assertEquals("when maxSSTableAge is zero, no sstables should be filtered", sstrs.size(), Iterables.size(filtered))[ FD ]
Line_4 $$ ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1)-->Line_24 $$ cfs.truncateBlocking()[ FD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_13 $$ cfs.forceBlockingFlush()[ CD ]
Line_16 $$ filtered = filterOldSSTables(sstrs, 0, 2)-->Line_18 $$ filtered = filterOldSSTables(sstrs, 1, 2)[ FD ]
Line_4 $$ ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1)-->Line_5 $$ cfs.disableAutoCompaction()[ FD ]
Line_14 $$ Iterable<SSTableReader> filtered-->Line_18 $$ filtered = filterOldSSTables(sstrs, 1, 2)[ FD ]
Line_6 $$ ByteBuffer value = ByteBuffer.wrap(new byte[100])-->Line_10 $$ new RowUpdateBuilder(cfs.metadata, r, key.getKey()).clustering("column").add("val", value).build().applyUnsafe()[ FD ]
Line_16 $$ filtered = filterOldSSTables(sstrs, 0, 2)-->Line_22 $$ filtered = filterOldSSTables(sstrs, 1, 4)[ FD ]
Line_16 $$ filtered = filterOldSSTables(sstrs, 0, 2)-->Line_23 $$ assertEquals("no sstables should remain when all are too old", 0, Iterables.size(filtered))[ FD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_4 $$ ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1)[ CD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_17 $$ assertEquals("when maxSSTableAge is zero, no sstables should be filtered", sstrs.size(), Iterables.size(filtered))[ CD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_5 $$ cfs.disableAutoCompaction()[ CD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_20 $$ filtered = filterOldSSTables(sstrs, 1, 3)[ CD ]
Line_8 $$ for (int r = 0; r < numSSTables; r++) -->Line_9 $$ DecoratedKey key = Util.dk(String.valueOf(r))[ FD ]
Line_4 $$ ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1)-->Line_13 $$ cfs.forceBlockingFlush()[ FD ]
Line_18 $$ filtered = filterOldSSTables(sstrs, 1, 2)-->Line_23 $$ assertEquals("no sstables should remain when all are too old", 0, Iterables.size(filtered))[ FD ]
Line_14 $$ Iterable<SSTableReader> filtered-->Line_21 $$ assertEquals("only the newest sstable should remain", 1, Iterables.size(filtered))[ FD ]
Line_2 $$ public void testFilterOldSSTables() -->Line_6 $$ ByteBuffer value = ByteBuffer.wrap(new byte[100])[ CD ]
Line_7 $$ int numSSTables = 3-->Line_8 $$ for (int r = 0; r < numSSTables; r++) [ FD ]
Line_18 $$ filtered = filterOldSSTables(sstrs, 1, 2)-->Line_19 $$ assertEquals("only the newest 2 sstables should remain", 2, Iterables.size(filtered))[ FD ]
Line_18 $$ filtered = filterOldSSTables(sstrs, 1, 2)-->Line_21 $$ assertEquals("only the newest sstable should remain", 1, Iterables.size(filtered))[ FD ]
Line_4 $$ ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1)-->Line_15 $$ List<SSTableReader> sstrs = new ArrayList(cfs.getLiveSSTables())[ FD ]
