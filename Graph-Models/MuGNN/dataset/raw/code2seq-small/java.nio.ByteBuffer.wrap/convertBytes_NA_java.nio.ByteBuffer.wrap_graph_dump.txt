Line_2 $$ private static Pair<CharSequence, String> convertBytes(@NotNull byte[] bytes, @NotNull Charset charset, final int startOffset) -->Line_4 $$ CharBuffer charBuffer[ CD ]
Line_3 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(bytes, startOffset, bytes.length - startOffset)-->Line_6 $$ charBuffer = charset.decode(byteBuffer)[ FD ]
Line_8 $$ charBuffer = CharBuffer.wrap(ArrayUtil.EMPTY_CHAR_ARRAY)-->Line_10 $$ return convertLineSeparators(charBuffer)[ FD ]
Line_4 $$ CharBuffer charBuffer-->Line_10 $$ return convertLineSeparators(charBuffer)[ FD ]
Line_4 $$ CharBuffer charBuffer-->Line_8 $$ charBuffer = CharBuffer.wrap(ArrayUtil.EMPTY_CHAR_ARRAY)[ FD ]
Line_6 $$ charBuffer = charset.decode(byteBuffer)-->Line_8 $$ charBuffer = CharBuffer.wrap(ArrayUtil.EMPTY_CHAR_ARRAY)[ FD ]
Line_2 $$ private static Pair<CharSequence, String> convertBytes(@NotNull byte[] bytes, @NotNull Charset charset, final int startOffset) -->Line_3 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(bytes, startOffset, bytes.length - startOffset)[ FD ]
Line_2 $$ private static Pair<CharSequence, String> convertBytes(@NotNull byte[] bytes, @NotNull Charset charset, final int startOffset) -->Line_6 $$ charBuffer = charset.decode(byteBuffer)[ FD ]
Line_2 $$ private static Pair<CharSequence, String> convertBytes(@NotNull byte[] bytes, @NotNull Charset charset, final int startOffset) -->Line_10 $$ return convertLineSeparators(charBuffer)[ CD ]
Line_2 $$ private static Pair<CharSequence, String> convertBytes(@NotNull byte[] bytes, @NotNull Charset charset, final int startOffset) -->Line_3 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(bytes, startOffset, bytes.length - startOffset)[ CD ]
Line_6 $$ charBuffer = charset.decode(byteBuffer)-->Line_10 $$ return convertLineSeparators(charBuffer)[ FD ]
Line_4 $$ CharBuffer charBuffer-->Line_6 $$ charBuffer = charset.decode(byteBuffer)[ FD ]
