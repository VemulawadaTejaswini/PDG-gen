Line_2 $$ public void testCompactionProgress() throws Exception -->Line_18 $$ List<ISSTableScanner> scanners = strategy.getScanners(sstables).scanners[ CD ]
Line_2 $$ public void testCompactionProgress() throws Exception -->Line_8 $$ for (int r = 0; r < rows; r++) [ CD ]
Line_2 $$ public void testCompactionProgress() throws Exception -->Line_17 $$ Collection<SSTableReader> sstables = strategy.manifest.getLevel(1)[ CD ]
Line_6 $$ int rows = 2-->Line_8 $$ for (int r = 0; r < rows; r++) [ FD ]
Line_17 $$ Collection<SSTableReader> sstables = strategy.manifest.getLevel(1)-->Line_22 $$ assertEquals(scanner.getCurrentPosition(), SSTableReader.getTotalUncompressedBytes(sstables))[ FD ]
Line_9 $$ UpdateBuilder update = UpdateBuilder.create(cfs.metadata, String.valueOf(r))-->Line_10 $$ update.newRow("column" + c).add("val", value)[ FD ]
Line_15 $$ LeveledCompactionStrategy strategy = (LeveledCompactionStrategy) (cfs.getCompactionStrategyManager()).getStrategies().get(1)-->Line_18 $$ List<ISSTableScanner> scanners = strategy.getScanners(sstables).scanners[ FD ]
Line_2 $$ public void testCompactionProgress() throws Exception -->Line_5 $$ ByteBuffer value = ByteBuffer.wrap(b)[ CD ]
Line_18 $$ List<ISSTableScanner> scanners = strategy.getScanners(sstables).scanners-->Line_20 $$ ISSTableScanner scanner = scanners.get(0)[ FD ]
Line_9 $$ UpdateBuilder update = UpdateBuilder.create(cfs.metadata, String.valueOf(r))-->Line_11 $$ update.applyUnsafe()[ FD ]
Line_5 $$ ByteBuffer value = ByteBuffer.wrap(b)-->Line_10 $$ update.newRow("column" + c).add("val", value)[ FD ]
Line_2 $$ public void testCompactionProgress() throws Exception -->Line_22 $$ assertEquals(scanner.getCurrentPosition(), SSTableReader.getTotalUncompressedBytes(sstables))[ CD ]
Line_2 $$ public void testCompactionProgress() throws Exception -->Line_7 $$ int columns = 10[ CD ]
Line_20 $$ ISSTableScanner scanner = scanners.get(0)-->Line_21 $$ while (scanner.hasNext()) scanner.next()[ FD ]
Line_2 $$ public void testCompactionProgress() throws Exception -->Line_3 $$ byte[] b = new byte[100 * 1024][ CD ]
Line_3 $$ byte[] b = new byte[100 * 1024]-->Line_5 $$ ByteBuffer value = ByteBuffer.wrap(b)[ FD ]
Line_2 $$ public void testCompactionProgress() throws Exception -->Line_21 $$ while (scanner.hasNext()) scanner.next()[ CD ]
Line_8 $$ for (int r = 0; r < rows; r++) -->Line_11 $$ update.applyUnsafe()[ CD ]
Line_2 $$ public void testCompactionProgress() throws Exception -->Line_14 $$ waitForLeveling(cfs)[ CD ]
Line_8 $$ for (int r = 0; r < rows; r++) -->Line_12 $$ cfs.forceBlockingFlush()[ CD ]
Line_15 $$ LeveledCompactionStrategy strategy = (LeveledCompactionStrategy) (cfs.getCompactionStrategyManager()).getStrategies().get(1)-->Line_16 $$ assert strategy.getLevelSize(1) > 0[ FD ]
Line_2 $$ public void testCompactionProgress() throws Exception -->Line_20 $$ ISSTableScanner scanner = scanners.get(0)[ CD ]
Line_2 $$ public void testCompactionProgress() throws Exception -->Line_4 $$ new Random().nextBytes(b)[ CD ]
Line_2 $$ public void testCompactionProgress() throws Exception -->Line_6 $$ int rows = 2[ CD ]
Line_2 $$ public void testCompactionProgress() throws Exception -->Line_19 $$ assertEquals(1, scanners.size())[ CD ]
Line_8 $$ for (int r = 0; r < rows; r++) -->Line_9 $$ UpdateBuilder update = UpdateBuilder.create(cfs.metadata, String.valueOf(r))[ CD ]
Line_20 $$ ISSTableScanner scanner = scanners.get(0)-->Line_22 $$ assertEquals(scanner.getCurrentPosition(), SSTableReader.getTotalUncompressedBytes(sstables))[ FD ]
Line_7 $$ int columns = 10-->Line_10 $$ for (int c = 0; c < columns; c++) update.newRow("column" + c).add("val", value)[ FD ]
Line_3 $$ byte[] b = new byte[100 * 1024]-->Line_4 $$ new Random().nextBytes(b)[ FD ]
Line_20 $$ ISSTableScanner scanner = scanners.get(0)-->Line_21 $$ scanner.next()[ FD ]
Line_18 $$ List<ISSTableScanner> scanners = strategy.getScanners(sstables).scanners-->Line_19 $$ assertEquals(1, scanners.size())[ FD ]
Line_8 $$ for (int r = 0; r < rows; r++) -->Line_9 $$ UpdateBuilder update = UpdateBuilder.create(cfs.metadata, String.valueOf(r))[ FD ]
Line_2 $$ public void testCompactionProgress() throws Exception -->Line_15 $$ LeveledCompactionStrategy strategy = (LeveledCompactionStrategy) (cfs.getCompactionStrategyManager()).getStrategies().get(1)[ CD ]
Line_8 $$ for (int r = 0; r < rows; r++) -->Line_10 $$ for (int c = 0; c < columns; c++) update.newRow("column" + c).add("val", value)[ CD ]
Line_17 $$ Collection<SSTableReader> sstables = strategy.manifest.getLevel(1)-->Line_18 $$ List<ISSTableScanner> scanners = strategy.getScanners(sstables).scanners[ FD ]
