Line_3 $$ T token = recordFactory.newRecordInstance(tokenClass)-->Line_5 $$ token.setKind(kind)[ FD ]
Line_3 $$ T token = recordFactory.newRecordInstance(tokenClass)-->Line_7 $$ token.setService(service)[ FD ]
Line_2 $$ public static <T extends Token> T newToken(Class<T> tokenClass, byte[] identifier, String kind, byte[] password, String service) -->Line_3 $$ T token = recordFactory.newRecordInstance(tokenClass)[ CD ]
Line_2 $$ public static <T extends Token> T newToken(Class<T> tokenClass, byte[] identifier, String kind, byte[] password, String service) -->Line_6 $$ token.setPassword(ByteBuffer.wrap(password))[ FD ]
Line_2 $$ public static <T extends Token> T newToken(Class<T> tokenClass, byte[] identifier, String kind, byte[] password, String service) -->Line_7 $$ token.setService(service)[ CD ]
Line_3 $$ T token = recordFactory.newRecordInstance(tokenClass)-->Line_6 $$ token.setPassword(ByteBuffer.wrap(password))[ FD ]
Line_2 $$ public static <T extends Token> T newToken(Class<T> tokenClass, byte[] identifier, String kind, byte[] password, String service) -->Line_6 $$ token.setPassword(ByteBuffer.wrap(password))[ CD ]
Line_2 $$ public static <T extends Token> T newToken(Class<T> tokenClass, byte[] identifier, String kind, byte[] password, String service) -->Line_7 $$ token.setService(service)[ FD ]
Line_3 $$ T token = recordFactory.newRecordInstance(tokenClass)-->Line_4 $$ token.setIdentifier(ByteBuffer.wrap(identifier))[ FD ]
Line_2 $$ public static <T extends Token> T newToken(Class<T> tokenClass, byte[] identifier, String kind, byte[] password, String service) -->Line_5 $$ token.setKind(kind)[ CD ]
Line_2 $$ public static <T extends Token> T newToken(Class<T> tokenClass, byte[] identifier, String kind, byte[] password, String service) -->Line_4 $$ token.setIdentifier(ByteBuffer.wrap(identifier))[ FD ]
Line_2 $$ public static <T extends Token> T newToken(Class<T> tokenClass, byte[] identifier, String kind, byte[] password, String service) -->Line_5 $$ token.setKind(kind)[ FD ]
Line_2 $$ public static <T extends Token> T newToken(Class<T> tokenClass, byte[] identifier, String kind, byte[] password, String service) -->Line_8 $$ return token[ CD ]
Line_2 $$ public static <T extends Token> T newToken(Class<T> tokenClass, byte[] identifier, String kind, byte[] password, String service) -->Line_4 $$ token.setIdentifier(ByteBuffer.wrap(identifier))[ CD ]
Line_2 $$ public static <T extends Token> T newToken(Class<T> tokenClass, byte[] identifier, String kind, byte[] password, String service) -->Line_3 $$ T token = recordFactory.newRecordInstance(tokenClass)[ FD ]
