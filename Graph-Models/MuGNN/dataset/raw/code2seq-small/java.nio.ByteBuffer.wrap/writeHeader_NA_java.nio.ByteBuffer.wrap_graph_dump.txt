Line_2 $$ WriteInfo writeHeader(OutputStream os, long fileSize) throws IOException -->Line_3 $$ int headerLen = getHeaderLength()[ CD ]
Line_4 $$ ByteBuffer buf = ByteBuffer.wrap(new byte[headerLen])-->Line_6 $$ buf.putLong(hash)[ FD ]
Line_2 $$ WriteInfo writeHeader(OutputStream os, long fileSize) throws IOException -->Line_14 $$ if (Constants.FLUSH_WRITES) [ CD ]
Line_2 $$ WriteInfo writeHeader(OutputStream os, long fileSize) throws IOException -->Line_5 $$ long hash = rnd.nextLong()[ CD ]
Line_4 $$ ByteBuffer buf = ByteBuffer.wrap(new byte[headerLen])-->Line_8 $$ buf.rewind()[ FD ]
Line_9 $$ byte[] headerData = buf.array()-->Line_13 $$ os.write(headerData)[ FD ]
Line_2 $$ WriteInfo writeHeader(OutputStream os, long fileSize) throws IOException -->Line_8 $$ buf.rewind()[ CD ]
Line_2 $$ WriteInfo writeHeader(OutputStream os, long fileSize) throws IOException -->Line_10 $$ long elapsed = 0[ CD ]
Line_2 $$ WriteInfo writeHeader(OutputStream os, long fileSize) throws IOException -->Line_7 $$ buf.putLong(fileSize)[ FD ]
Line_2 $$ WriteInfo writeHeader(OutputStream os, long fileSize) throws IOException -->Line_7 $$ buf.putLong(fileSize)[ CD ]
Line_2 $$ WriteInfo writeHeader(OutputStream os, long fileSize) throws IOException -->Line_17 $$ elapsed += Timer.elapsed(startTime)[ CD ]
Line_2 $$ WriteInfo writeHeader(OutputStream os, long fileSize) throws IOException -->Line_19 $$ return new WriteInfo(hash, headerLen, elapsed)[ CD ]
Line_12 $$ long startTime = Timer.now()-->Line_17 $$ elapsed += Timer.elapsed(startTime)[ FD ]
Line_2 $$ WriteInfo writeHeader(OutputStream os, long fileSize) throws IOException -->Line_9 $$ byte[] headerData = buf.array()[ CD ]
Line_5 $$ long hash = rnd.nextLong()-->Line_6 $$ buf.putLong(hash)[ FD ]
Line_2 $$ WriteInfo writeHeader(OutputStream os, long fileSize) throws IOException -->Line_13 $$ os.write(headerData)[ CD ]
Line_4 $$ ByteBuffer buf = ByteBuffer.wrap(new byte[headerLen])-->Line_7 $$ buf.putLong(fileSize)[ FD ]
Line_2 $$ WriteInfo writeHeader(OutputStream os, long fileSize) throws IOException -->Line_15 $$ os.flush()[ FD ]
Line_2 $$ WriteInfo writeHeader(OutputStream os, long fileSize) throws IOException -->Line_6 $$ buf.putLong(hash)[ CD ]
Line_14 $$ if (Constants.FLUSH_WRITES) -->Line_15 $$ os.flush()[ CD ]
Line_2 $$ WriteInfo writeHeader(OutputStream os, long fileSize) throws IOException -->Line_4 $$ ByteBuffer buf = ByteBuffer.wrap(new byte[headerLen])[ CD ]
Line_4 $$ ByteBuffer buf = ByteBuffer.wrap(new byte[headerLen])-->Line_9 $$ byte[] headerData = buf.array()[ FD ]
Line_2 $$ WriteInfo writeHeader(OutputStream os, long fileSize) throws IOException -->Line_12 $$ long startTime = Timer.now()[ CD ]
Line_2 $$ WriteInfo writeHeader(OutputStream os, long fileSize) throws IOException -->Line_13 $$ os.write(headerData)[ FD ]
Line_10 $$ long elapsed = 0-->Line_17 $$ elapsed += Timer.elapsed(startTime)[ FD ]
