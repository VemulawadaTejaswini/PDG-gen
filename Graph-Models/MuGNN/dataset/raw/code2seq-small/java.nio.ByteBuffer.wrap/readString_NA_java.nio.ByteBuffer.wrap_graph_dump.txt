Line_17 $$ CharBuffer charBuffer = byteBuffer.asCharBuffer()-->Line_18 $$ return charBuffer.toString()[ FD ]
Line_5 $$ int length = BigEndianCodec.getInt(buffer, index)-->Line_13 $$ length <<= 1[ FD ]
Line_2 $$ public String readString() -->Line_17 $$ CharBuffer charBuffer = byteBuffer.asCharBuffer()[ CD ]
Line_2 $$ public String readString() -->Line_15 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(buffer, index, length)[ CD ]
Line_7 $$ if (asciiCode) -->Line_11 $$ return s[ CD ]
Line_2 $$ public String readString() -->Line_13 $$ length <<= 1[ CD ]
Line_2 $$ public String readString() -->Line_3 $$ detectBufferUnderflow(5)[ CD ]
Line_5 $$ int length = BigEndianCodec.getInt(buffer, index)-->Line_15 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(buffer, index, length)[ FD ]
Line_7 $$ if (asciiCode) -->Line_9 $$ String s = new String(buffer, index, length)[ CD ]
Line_7 $$ if (asciiCode) -->Line_8 $$ detectBufferUnderflow(length)[ CD ]
Line_13 $$ length <<= 1-->Line_14 $$ detectBufferUnderflow(length)[ FD ]
Line_5 $$ int length = BigEndianCodec.getInt(buffer, index)-->Line_8 $$ detectBufferUnderflow(length)[ FD ]
Line_15 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(buffer, index, length)-->Line_17 $$ CharBuffer charBuffer = byteBuffer.asCharBuffer()[ FD ]
Line_2 $$ public String readString() -->Line_18 $$ return charBuffer.toString()[ CD ]
Line_2 $$ public String readString() -->Line_4 $$ boolean asciiCode = BigEndianCodec.getBoolean(buffer, index++)[ CD ]
Line_2 $$ public String readString() -->Line_14 $$ detectBufferUnderflow(length)[ CD ]
Line_2 $$ public String readString() -->Line_5 $$ int length = BigEndianCodec.getInt(buffer, index)[ CD ]
Line_13 $$ length <<= 1-->Line_15 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(buffer, index, length)[ FD ]
Line_5 $$ int length = BigEndianCodec.getInt(buffer, index)-->Line_14 $$ detectBufferUnderflow(length)[ FD ]
Line_2 $$ public String readString() -->Line_7 $$ if (asciiCode) [ CD ]
