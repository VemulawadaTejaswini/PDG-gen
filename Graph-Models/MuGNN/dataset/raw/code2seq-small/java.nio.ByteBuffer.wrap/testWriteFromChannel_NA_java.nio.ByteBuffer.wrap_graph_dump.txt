Line_2 $$ public void testWriteFromChannel() throws IOException -->Line_3 $$ int length = randomIntBetween(1, randomBytes.length / 2)[ CD ]
Line_2 $$ public void testWriteFromChannel() throws IOException -->Line_6 $$ ChannelBuffer source = new ByteBufferBackedChannelBuffer(byteBuffer)[ CD ]
Line_8 $$ BytesReference copyRef = new BytesArray(Channels.readFromFileChannel(fileChannel, 0, length))-->Line_10 $$ assertTrue("read bytes didn't match written bytes", sourceRef.equals(copyRef))[ FD ]
Line_2 $$ public void testWriteFromChannel() throws IOException -->Line_10 $$ assertTrue("read bytes didn't match written bytes", sourceRef.equals(copyRef))[ CD ]
Line_2 $$ public void testWriteFromChannel() throws IOException -->Line_8 $$ BytesReference copyRef = new BytesArray(Channels.readFromFileChannel(fileChannel, 0, length))[ CD ]
Line_2 $$ public void testWriteFromChannel() throws IOException -->Line_4 $$ int offset = randomIntBetween(0, randomBytes.length - length)[ CD ]
Line_2 $$ public void testWriteFromChannel() throws IOException -->Line_9 $$ BytesReference sourceRef = new BytesArray(randomBytes, offset, length)[ CD ]
Line_6 $$ ChannelBuffer source = new ByteBufferBackedChannelBuffer(byteBuffer)-->Line_7 $$ Channels.writeToChannel(source, offset, length, fileChannel)[ FD ]
Line_3 $$ int length = randomIntBetween(1, randomBytes.length / 2)-->Line_8 $$ BytesReference copyRef = new BytesArray(Channels.readFromFileChannel(fileChannel, 0, length))[ FD ]
Line_3 $$ int length = randomIntBetween(1, randomBytes.length / 2)-->Line_7 $$ Channels.writeToChannel(source, offset, length, fileChannel)[ FD ]
Line_4 $$ int offset = randomIntBetween(0, randomBytes.length - length)-->Line_7 $$ Channels.writeToChannel(source, offset, length, fileChannel)[ FD ]
Line_9 $$ BytesReference sourceRef = new BytesArray(randomBytes, offset, length)-->Line_10 $$ assertTrue("read bytes didn't match written bytes", sourceRef.equals(copyRef))[ FD ]
Line_2 $$ public void testWriteFromChannel() throws IOException -->Line_7 $$ Channels.writeToChannel(source, offset, length, fileChannel)[ CD ]
Line_2 $$ public void testWriteFromChannel() throws IOException -->Line_5 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(randomBytes)[ CD ]
