Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream()-->Line_11 $$ setupResponseOldVersionFatal(buffer, fakeCall, null, VersionMismatch.class.getName(), errMsg)[ FD ]
Line_6 $$ Call fakeCall = new Call(-1, RpcConstants.INVALID_RETRY_COUNT, null, this)-->Line_20 $$ fakeCall.setResponse(ByteBuffer.wrap(buffer.toByteArray()))[ FD ]
Line_2 $$ private void setupBadVersionResponse(int clientVersion) throws IOException -->Line_9 $$ if (clientVersion >= 3) [ FD ]
Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream()-->Line_20 $$ fakeCall.setResponse(ByteBuffer.wrap(buffer.toByteArray()))[ FD ]
Line_5 $$ if (clientVersion >= 9) -->Line_6 $$ Call fakeCall = new Call(-1, RpcConstants.INVALID_RETRY_COUNT, null, this)[ CD ]
Line_5 $$ if (clientVersion >= 9) -->Line_8 $$ responder.doRespond(fakeCall)[ CD ]
Line_15 $$ DataOutputStream out = new DataOutputStream(buffer)-->Line_16 $$ out.writeInt(0)[ FD ]
Line_13 $$ if (clientVersion == 2) -->Line_19 $$ WritableUtils.writeString(out, errMsg)[ CD ]
Line_3 $$ String errMsg = "Server IPC version " + CURRENT_VERSION + " cannot communicate with client version " + clientVersion-->Line_19 $$ WritableUtils.writeString(out, errMsg)[ FD ]
Line_15 $$ DataOutputStream out = new DataOutputStream(buffer)-->Line_19 $$ WritableUtils.writeString(out, errMsg)[ FD ]
Line_3 $$ String errMsg = "Server IPC version " + CURRENT_VERSION + " cannot communicate with client version " + clientVersion-->Line_7 $$ setupResponse(buffer, fakeCall, RpcStatusProto.FATAL, RpcErrorCodeProto.FATAL_VERSION_MISMATCH, null, VersionMismatch.class.getName(), errMsg)[ FD ]
Line_13 $$ if (clientVersion == 2) -->Line_16 $$ out.writeInt(0)[ CD ]
Line_5 $$ if (clientVersion >= 9) -->Line_9 $$ if (clientVersion >= 3) [ CD ]
Line_2 $$ private void setupBadVersionResponse(int clientVersion) throws IOException -->Line_5 $$ if (clientVersion >= 9) [ CD ]
Line_6 $$ Call fakeCall = new Call(-1, RpcConstants.INVALID_RETRY_COUNT, null, this)-->Line_12 $$ responder.doRespond(fakeCall)[ FD ]
Line_2 $$ private void setupBadVersionResponse(int clientVersion) throws IOException -->Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream()[ CD ]
Line_6 $$ Call fakeCall = new Call(-1, RpcConstants.INVALID_RETRY_COUNT, null, this)-->Line_8 $$ responder.doRespond(fakeCall)[ FD ]
Line_6 $$ Call fakeCall = new Call(-1, RpcConstants.INVALID_RETRY_COUNT, null, this)-->Line_21 $$ responder.doRespond(fakeCall)[ FD ]
Line_2 $$ private void setupBadVersionResponse(int clientVersion) throws IOException -->Line_13 $$ if (clientVersion == 2) [ FD ]
Line_15 $$ DataOutputStream out = new DataOutputStream(buffer)-->Line_18 $$ WritableUtils.writeString(out, VersionMismatch.class.getName())[ FD ]
Line_6 $$ Call fakeCall = new Call(-1, RpcConstants.INVALID_RETRY_COUNT, null, this)-->Line_7 $$ setupResponse(buffer, fakeCall, RpcStatusProto.FATAL, RpcErrorCodeProto.FATAL_VERSION_MISMATCH, null, VersionMismatch.class.getName(), errMsg)[ FD ]
Line_9 $$ if (clientVersion >= 3) -->Line_13 $$ if (clientVersion == 2) [ CD ]
Line_13 $$ if (clientVersion == 2) -->Line_15 $$ DataOutputStream out = new DataOutputStream(buffer)[ CD ]
Line_13 $$ if (clientVersion == 2) -->Line_20 $$ fakeCall.setResponse(ByteBuffer.wrap(buffer.toByteArray()))[ CD ]
Line_6 $$ Call fakeCall = new Call(-1, RpcConstants.INVALID_RETRY_COUNT, null, this)-->Line_11 $$ setupResponseOldVersionFatal(buffer, fakeCall, null, VersionMismatch.class.getName(), errMsg)[ FD ]
Line_13 $$ if (clientVersion == 2) -->Line_21 $$ responder.doRespond(fakeCall)[ CD ]
Line_2 $$ private void setupBadVersionResponse(int clientVersion) throws IOException -->Line_3 $$ String errMsg = "Server IPC version " + CURRENT_VERSION + " cannot communicate with client version " + clientVersion[ CD ]
Line_9 $$ if (clientVersion >= 3) -->Line_11 $$ setupResponseOldVersionFatal(buffer, fakeCall, null, VersionMismatch.class.getName(), errMsg)[ CD ]
Line_9 $$ if (clientVersion >= 3) -->Line_12 $$ responder.doRespond(fakeCall)[ CD ]
Line_13 $$ if (clientVersion == 2) -->Line_18 $$ WritableUtils.writeString(out, VersionMismatch.class.getName())[ CD ]
Line_2 $$ private void setupBadVersionResponse(int clientVersion) throws IOException -->Line_5 $$ if (clientVersion >= 9) [ FD ]
Line_4 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream()-->Line_7 $$ setupResponse(buffer, fakeCall, RpcStatusProto.FATAL, RpcErrorCodeProto.FATAL_VERSION_MISMATCH, null, VersionMismatch.class.getName(), errMsg)[ FD ]
Line_5 $$ if (clientVersion >= 9) -->Line_7 $$ setupResponse(buffer, fakeCall, RpcStatusProto.FATAL, RpcErrorCodeProto.FATAL_VERSION_MISMATCH, null, VersionMismatch.class.getName(), errMsg)[ CD ]
Line_3 $$ String errMsg = "Server IPC version " + CURRENT_VERSION + " cannot communicate with client version " + clientVersion-->Line_11 $$ setupResponseOldVersionFatal(buffer, fakeCall, null, VersionMismatch.class.getName(), errMsg)[ FD ]
Line_15 $$ DataOutputStream out = new DataOutputStream(buffer)-->Line_17 $$ out.writeBoolean(true)[ FD ]
Line_13 $$ if (clientVersion == 2) -->Line_17 $$ out.writeBoolean(true)[ CD ]
