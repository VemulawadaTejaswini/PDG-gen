Line_2 $$ public void testBasicOps() throws IOException -->Line_3 $$ String url = VirtualFileManager.constructUrl(JrtFileSystem.PROTOCOL, FileUtil.toSystemIndependentName(ourJdkHome) + JrtFileSystem.SEPARATOR)[ CD ]
Line_2 $$ public void testBasicOps() throws IOException -->Line_11 $$ byte[] bytes = object.contentsToByteArray()[ CD ]
Line_2 $$ public void testBasicOps() throws IOException -->Line_7 $$ assumeNotNull(root.findChild("java"))[ CD ]
Line_4 $$ VirtualFile root = VirtualFileManager.getInstance().findFileByUrl(url)-->Line_7 $$ assumeNotNull(root.findChild("java"))[ FD ]
Line_9 $$ VirtualFile object = root.findFileByRelativePath("java/lang/Object.class")-->Line_11 $$ byte[] bytes = object.contentsToByteArray()[ FD ]
Line_2 $$ public void testBasicOps() throws IOException -->Line_9 $$ VirtualFile object = root.findFileByRelativePath("java/lang/Object.class")[ CD ]
Line_2 $$ public void testBasicOps() throws IOException -->Line_8 $$ assumeNotNull(root.findChild("javax"))[ CD ]
Line_2 $$ public void testBasicOps() throws IOException -->Line_6 $$ assertTrue(JrtFileSystem.isRoot(root))[ CD ]
Line_4 $$ VirtualFile root = VirtualFileManager.getInstance().findFileByUrl(url)-->Line_5 $$ assertNotNull(root)[ FD ]
Line_11 $$ byte[] bytes = object.contentsToByteArray()-->Line_13 $$ assertEquals(0xCAFEBABE, ByteBuffer.wrap(bytes).getInt())[ FD ]
Line_4 $$ VirtualFile root = VirtualFileManager.getInstance().findFileByUrl(url)-->Line_8 $$ assumeNotNull(root.findChild("javax"))[ FD ]
Line_3 $$ String url = VirtualFileManager.constructUrl(JrtFileSystem.PROTOCOL, FileUtil.toSystemIndependentName(ourJdkHome) + JrtFileSystem.SEPARATOR)-->Line_4 $$ VirtualFile root = VirtualFileManager.getInstance().findFileByUrl(url)[ FD ]
Line_4 $$ VirtualFile root = VirtualFileManager.getInstance().findFileByUrl(url)-->Line_6 $$ assertTrue(JrtFileSystem.isRoot(root))[ FD ]
Line_2 $$ public void testBasicOps() throws IOException -->Line_5 $$ assertNotNull(root)[ CD ]
Line_2 $$ public void testBasicOps() throws IOException -->Line_10 $$ assertNotNull(object)[ CD ]
Line_4 $$ VirtualFile root = VirtualFileManager.getInstance().findFileByUrl(url)-->Line_9 $$ VirtualFile object = root.findFileByRelativePath("java/lang/Object.class")[ FD ]
Line_2 $$ public void testBasicOps() throws IOException -->Line_13 $$ assertEquals(0xCAFEBABE, ByteBuffer.wrap(bytes).getInt())[ CD ]
Line_2 $$ public void testBasicOps() throws IOException -->Line_4 $$ VirtualFile root = VirtualFileManager.getInstance().findFileByUrl(url)[ CD ]
Line_2 $$ public void testBasicOps() throws IOException -->Line_12 $$ assertTrue(bytes.length > 10)[ CD ]
Line_9 $$ VirtualFile object = root.findFileByRelativePath("java/lang/Object.class")-->Line_10 $$ assertNotNull(object)[ FD ]
