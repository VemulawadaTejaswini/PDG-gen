Line_2 $$ public void testRoundTrip() throws Exception -->Line_17 $$ assertArrayEquals(b, resp.getContainerTokenMasterKey().getBytes().array())[ CD ]
Line_4 $$ byte[] b = -->Line_17 $$ assertArrayEquals(b, resp.getContainerTokenMasterKey().getBytes().array())[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_22 $$ assertArrayEquals(b, respCopy.getContainerTokenMasterKey().getBytes().array())[ CD ]
Line_18 $$ RegisterNodeManagerResponse respCopy = serDe(resp)-->Line_29 $$ assertEquals(12345, respCopy.getNMTokenMasterKey().getKeyId())[ FD ]
Line_18 $$ RegisterNodeManagerResponse respCopy = serDe(resp)-->Line_20 $$ assertNotNull(respCopy.getContainerTokenMasterKey())[ FD ]
Line_5 $$ MasterKey containerTokenMK = recordFactory.newRecordInstance(MasterKey.class)-->Line_6 $$ containerTokenMK.setKeyId(54321)[ FD ]
Line_5 $$ MasterKey containerTokenMK = recordFactory.newRecordInstance(MasterKey.class)-->Line_8 $$ resp.setContainerTokenMasterKey(containerTokenMK)[ FD ]
Line_3 $$ RegisterNodeManagerResponse resp = recordFactory.newRecordInstance(RegisterNodeManagerResponse.class)-->Line_12 $$ resp.setNMTokenMasterKey(nmTokenMK)[ FD ]
Line_3 $$ RegisterNodeManagerResponse resp = recordFactory.newRecordInstance(RegisterNodeManagerResponse.class)-->Line_15 $$ assertNotNull(resp.getContainerTokenMasterKey())[ FD ]
Line_4 $$ byte[] b = -->Line_25 $$ assertArrayEquals(b, resp.getNMTokenMasterKey().getBytes().array())[ FD ]
Line_3 $$ RegisterNodeManagerResponse resp = recordFactory.newRecordInstance(RegisterNodeManagerResponse.class)-->Line_25 $$ assertArrayEquals(b, resp.getNMTokenMasterKey().getBytes().array())[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_11 $$ nmTokenMK.setBytes(ByteBuffer.wrap(b))[ CD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_3 $$ RegisterNodeManagerResponse resp = recordFactory.newRecordInstance(RegisterNodeManagerResponse.class)[ CD ]
Line_4 $$ byte[] b = -->Line_7 $$ containerTokenMK.setBytes(ByteBuffer.wrap(b))[ FD ]
Line_3 $$ RegisterNodeManagerResponse resp = recordFactory.newRecordInstance(RegisterNodeManagerResponse.class)-->Line_14 $$ assertEquals(NodeAction.NORMAL, resp.getNodeAction())[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_13 $$ resp.setNodeAction(NodeAction.NORMAL)[ CD ]
Line_18 $$ RegisterNodeManagerResponse respCopy = serDe(resp)-->Line_26 $$ respCopy = serDe(resp)[ FD ]
Line_18 $$ RegisterNodeManagerResponse respCopy = serDe(resp)-->Line_28 $$ assertNotNull(respCopy.getNMTokenMasterKey())[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_27 $$ assertEquals(NodeAction.NORMAL, respCopy.getNodeAction())[ CD ]
Line_26 $$ respCopy = serDe(resp)-->Line_30 $$ assertArrayEquals(b, respCopy.getNMTokenMasterKey().getBytes().array())[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_20 $$ assertNotNull(respCopy.getContainerTokenMasterKey())[ CD ]
Line_3 $$ RegisterNodeManagerResponse resp = recordFactory.newRecordInstance(RegisterNodeManagerResponse.class)-->Line_8 $$ resp.setContainerTokenMasterKey(containerTokenMK)[ FD ]
Line_9 $$ MasterKey nmTokenMK = recordFactory.newRecordInstance(MasterKey.class)-->Line_11 $$ nmTokenMK.setBytes(ByteBuffer.wrap(b))[ FD ]
Line_18 $$ RegisterNodeManagerResponse respCopy = serDe(resp)-->Line_21 $$ assertEquals(54321, respCopy.getContainerTokenMasterKey().getKeyId())[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_19 $$ assertEquals(NodeAction.NORMAL, respCopy.getNodeAction())[ CD ]
Line_3 $$ RegisterNodeManagerResponse resp = recordFactory.newRecordInstance(RegisterNodeManagerResponse.class)-->Line_23 $$ assertNotNull(resp.getNMTokenMasterKey())[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_8 $$ resp.setContainerTokenMasterKey(containerTokenMK)[ CD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_4 $$ byte[] b = [ CD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_12 $$ resp.setNMTokenMasterKey(nmTokenMK)[ CD ]
Line_26 $$ respCopy = serDe(resp)-->Line_27 $$ assertEquals(NodeAction.NORMAL, respCopy.getNodeAction())[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_26 $$ respCopy = serDe(resp)[ CD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_18 $$ RegisterNodeManagerResponse respCopy = serDe(resp)[ CD ]
Line_4 $$ byte[] b = -->Line_30 $$ assertArrayEquals(b, respCopy.getNMTokenMasterKey().getBytes().array())[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_29 $$ assertEquals(12345, respCopy.getNMTokenMasterKey().getKeyId())[ CD ]
Line_4 $$ byte[] b = -->Line_11 $$ nmTokenMK.setBytes(ByteBuffer.wrap(b))[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_23 $$ assertNotNull(resp.getNMTokenMasterKey())[ CD ]
Line_3 $$ RegisterNodeManagerResponse resp = recordFactory.newRecordInstance(RegisterNodeManagerResponse.class)-->Line_13 $$ resp.setNodeAction(NodeAction.NORMAL)[ FD ]
Line_18 $$ RegisterNodeManagerResponse respCopy = serDe(resp)-->Line_19 $$ assertEquals(NodeAction.NORMAL, respCopy.getNodeAction())[ FD ]
Line_18 $$ RegisterNodeManagerResponse respCopy = serDe(resp)-->Line_22 $$ assertArrayEquals(b, respCopy.getContainerTokenMasterKey().getBytes().array())[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_7 $$ containerTokenMK.setBytes(ByteBuffer.wrap(b))[ CD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_9 $$ MasterKey nmTokenMK = recordFactory.newRecordInstance(MasterKey.class)[ CD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_25 $$ assertArrayEquals(b, resp.getNMTokenMasterKey().getBytes().array())[ CD ]
Line_3 $$ RegisterNodeManagerResponse resp = recordFactory.newRecordInstance(RegisterNodeManagerResponse.class)-->Line_24 $$ assertEquals(12345, resp.getNMTokenMasterKey().getKeyId())[ FD ]
Line_9 $$ MasterKey nmTokenMK = recordFactory.newRecordInstance(MasterKey.class)-->Line_12 $$ resp.setNMTokenMasterKey(nmTokenMK)[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_24 $$ assertEquals(12345, resp.getNMTokenMasterKey().getKeyId())[ CD ]
Line_5 $$ MasterKey containerTokenMK = recordFactory.newRecordInstance(MasterKey.class)-->Line_7 $$ containerTokenMK.setBytes(ByteBuffer.wrap(b))[ FD ]
Line_3 $$ RegisterNodeManagerResponse resp = recordFactory.newRecordInstance(RegisterNodeManagerResponse.class)-->Line_26 $$ respCopy = serDe(resp)[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_5 $$ MasterKey containerTokenMK = recordFactory.newRecordInstance(MasterKey.class)[ CD ]
Line_18 $$ RegisterNodeManagerResponse respCopy = serDe(resp)-->Line_27 $$ assertEquals(NodeAction.NORMAL, respCopy.getNodeAction())[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_28 $$ assertNotNull(respCopy.getNMTokenMasterKey())[ CD ]
Line_9 $$ MasterKey nmTokenMK = recordFactory.newRecordInstance(MasterKey.class)-->Line_10 $$ nmTokenMK.setKeyId(12345)[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_21 $$ assertEquals(54321, respCopy.getContainerTokenMasterKey().getKeyId())[ CD ]
Line_18 $$ RegisterNodeManagerResponse respCopy = serDe(resp)-->Line_30 $$ assertArrayEquals(b, respCopy.getNMTokenMasterKey().getBytes().array())[ FD ]
Line_3 $$ RegisterNodeManagerResponse resp = recordFactory.newRecordInstance(RegisterNodeManagerResponse.class)-->Line_17 $$ assertArrayEquals(b, resp.getContainerTokenMasterKey().getBytes().array())[ FD ]
Line_26 $$ respCopy = serDe(resp)-->Line_28 $$ assertNotNull(respCopy.getNMTokenMasterKey())[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_15 $$ assertNotNull(resp.getContainerTokenMasterKey())[ CD ]
Line_4 $$ byte[] b = -->Line_22 $$ assertArrayEquals(b, respCopy.getContainerTokenMasterKey().getBytes().array())[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_6 $$ containerTokenMK.setKeyId(54321)[ CD ]
Line_26 $$ respCopy = serDe(resp)-->Line_29 $$ assertEquals(12345, respCopy.getNMTokenMasterKey().getKeyId())[ FD ]
Line_3 $$ RegisterNodeManagerResponse resp = recordFactory.newRecordInstance(RegisterNodeManagerResponse.class)-->Line_16 $$ assertEquals(54321, resp.getContainerTokenMasterKey().getKeyId())[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_14 $$ assertEquals(NodeAction.NORMAL, resp.getNodeAction())[ CD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_10 $$ nmTokenMK.setKeyId(12345)[ CD ]
Line_3 $$ RegisterNodeManagerResponse resp = recordFactory.newRecordInstance(RegisterNodeManagerResponse.class)-->Line_18 $$ RegisterNodeManagerResponse respCopy = serDe(resp)[ FD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_30 $$ assertArrayEquals(b, respCopy.getNMTokenMasterKey().getBytes().array())[ CD ]
Line_2 $$ public void testRoundTrip() throws Exception -->Line_16 $$ assertEquals(54321, resp.getContainerTokenMasterKey().getKeyId())[ CD ]
