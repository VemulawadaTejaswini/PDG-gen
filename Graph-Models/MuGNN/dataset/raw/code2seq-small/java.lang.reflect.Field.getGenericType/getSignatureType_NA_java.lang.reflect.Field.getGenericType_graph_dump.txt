Line_3 $$ final java.lang.reflect.Type type-->Line_11 $$ if (type instanceof Class) [ FD ]
Line_7 $$ type = ((Method) member).getGenericReturnType()-->Line_11 $$ if (type instanceof Class) [ FD ]
Line_6 $$ if (Method.class.isInstance(member)) -->Line_7 $$ type = ((Method) member).getGenericReturnType()[ CD ]
Line_2 $$ public static ParameterizedType getSignatureType(Member member) -->Line_3 $$ final java.lang.reflect.Type type[ CD ]
Line_4 $$ if (Field.class.isInstance(member)) -->Line_5 $$ type = ((Field) member).getGenericType()[ CD ]
Line_9 $$ type = ((MapMember) member).getType()-->Line_11 $$ if (type instanceof Class) [ FD ]
Line_3 $$ final java.lang.reflect.Type type-->Line_5 $$ type = ((Field) member).getGenericType()[ FD ]
Line_2 $$ public static ParameterizedType getSignatureType(Member member) -->Line_4 $$ if (Field.class.isInstance(member)) [ FD ]
Line_5 $$ type = ((Field) member).getGenericType()-->Line_9 $$ type = ((MapMember) member).getType()[ FD ]
Line_2 $$ public static ParameterizedType getSignatureType(Member member) -->Line_6 $$ if (Method.class.isInstance(member)) [ FD ]
Line_3 $$ final java.lang.reflect.Type type-->Line_9 $$ type = ((MapMember) member).getType()[ FD ]
Line_2 $$ public static ParameterizedType getSignatureType(Member member) -->Line_11 $$ if (type instanceof Class) [ CD ]
Line_11 $$ if (type instanceof Class) -->Line_12 $$ return null[ CD ]
Line_3 $$ final java.lang.reflect.Type type-->Line_7 $$ type = ((Method) member).getGenericReturnType()[ FD ]
Line_5 $$ type = ((Field) member).getGenericType()-->Line_11 $$ if (type instanceof Class) [ FD ]
Line_2 $$ public static ParameterizedType getSignatureType(Member member) -->Line_4 $$ if (Field.class.isInstance(member)) [ CD ]
Line_4 $$ if (Field.class.isInstance(member)) -->Line_6 $$ if (Method.class.isInstance(member)) [ CD ]
Line_5 $$ type = ((Field) member).getGenericType()-->Line_7 $$ type = ((Method) member).getGenericReturnType()[ FD ]
Line_6 $$ if (Method.class.isInstance(member)) -->Line_9 $$ type = ((MapMember) member).getType()[ CD ]
Line_2 $$ public static ParameterizedType getSignatureType(Member member) -->Line_14 $$ return (ParameterizedType) type[ CD ]
Line_7 $$ type = ((Method) member).getGenericReturnType()-->Line_9 $$ type = ((MapMember) member).getType()[ FD ]
