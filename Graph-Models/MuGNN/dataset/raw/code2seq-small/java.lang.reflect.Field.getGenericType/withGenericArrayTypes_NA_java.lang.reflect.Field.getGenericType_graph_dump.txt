Line_2 $$ public void withGenericArrayTypes() throws Exception -->Line_10 $$ assertTrue(TypeUtils.isAssignable(openArrayType, List[].class))[ CD ]
Line_2 $$ public void withGenericArrayTypes() throws Exception -->Line_8 $$ assertTrue(TypeUtils.isAssignable(List[].class, openArrayType))[ CD ]
Line_4 $$ Type openArrayType = getClass().getField("openArray").getGenericType()-->Line_12 $$ assertTrue(TypeUtils.isAssignable(openArrayType, openArrayType))[ FD ]
Line_2 $$ public void withGenericArrayTypes() throws Exception -->Line_13 $$ assertTrue(TypeUtils.isAssignable(openArrayType, arrayType))[ CD ]
Line_3 $$ Type arrayType = getClass().getField("array").getGenericType()-->Line_13 $$ assertTrue(TypeUtils.isAssignable(openArrayType, arrayType))[ FD ]
Line_2 $$ public void withGenericArrayTypes() throws Exception -->Line_12 $$ assertTrue(TypeUtils.isAssignable(openArrayType, openArrayType))[ CD ]
Line_3 $$ Type arrayType = getClass().getField("array").getGenericType()-->Line_11 $$ assertTrue(TypeUtils.isAssignable(arrayType, arrayType))[ FD ]
Line_4 $$ Type openArrayType = getClass().getField("openArray").getGenericType()-->Line_8 $$ assertTrue(TypeUtils.isAssignable(List[].class, openArrayType))[ FD ]
Line_2 $$ public void withGenericArrayTypes() throws Exception -->Line_7 $$ assertTrue(TypeUtils.isAssignable(List[].class, arrayType))[ CD ]
Line_3 $$ Type arrayType = getClass().getField("array").getGenericType()-->Line_7 $$ assertTrue(TypeUtils.isAssignable(List[].class, arrayType))[ FD ]
Line_2 $$ public void withGenericArrayTypes() throws Exception -->Line_6 $$ assertTrue(TypeUtils.isAssignable(Object.class, openArrayType))[ CD ]
Line_2 $$ public void withGenericArrayTypes() throws Exception -->Line_4 $$ Type openArrayType = getClass().getField("openArray").getGenericType()[ CD ]
Line_3 $$ Type arrayType = getClass().getField("array").getGenericType()-->Line_9 $$ assertTrue(TypeUtils.isAssignable(arrayType, List[].class))[ FD ]
Line_2 $$ public void withGenericArrayTypes() throws Exception -->Line_11 $$ assertTrue(TypeUtils.isAssignable(arrayType, arrayType))[ CD ]
Line_4 $$ Type openArrayType = getClass().getField("openArray").getGenericType()-->Line_13 $$ assertTrue(TypeUtils.isAssignable(openArrayType, arrayType))[ FD ]
Line_4 $$ Type openArrayType = getClass().getField("openArray").getGenericType()-->Line_10 $$ assertTrue(TypeUtils.isAssignable(openArrayType, List[].class))[ FD ]
Line_3 $$ Type arrayType = getClass().getField("array").getGenericType()-->Line_5 $$ assertTrue(TypeUtils.isAssignable(Object.class, arrayType))[ FD ]
Line_2 $$ public void withGenericArrayTypes() throws Exception -->Line_5 $$ assertTrue(TypeUtils.isAssignable(Object.class, arrayType))[ CD ]
Line_2 $$ public void withGenericArrayTypes() throws Exception -->Line_3 $$ Type arrayType = getClass().getField("array").getGenericType()[ CD ]
Line_4 $$ Type openArrayType = getClass().getField("openArray").getGenericType()-->Line_6 $$ assertTrue(TypeUtils.isAssignable(Object.class, openArrayType))[ FD ]
Line_2 $$ public void withGenericArrayTypes() throws Exception -->Line_9 $$ assertTrue(TypeUtils.isAssignable(arrayType, List[].class))[ CD ]
