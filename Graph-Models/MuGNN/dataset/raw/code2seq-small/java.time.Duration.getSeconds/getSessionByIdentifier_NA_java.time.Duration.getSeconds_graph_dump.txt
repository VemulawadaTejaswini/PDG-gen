Line_9 $$ String id = "session"-->Line_27 $$ io.undertow.server.session.Session result = this.adapter.getSession(id)[ FD ]
Line_27 $$ io.undertow.server.session.Session result = this.adapter.getSession(id)-->Line_32 $$ assertEquals(maxInactiveInterval.getSeconds(), result.getMaxInactiveInterval())[ FD ]
Line_6 $$ ImmutableSession session = mock(ImmutableSession.class)-->Line_22 $$ when(session.getMetaData()).thenReturn(metaData)[ FD ]
Line_10 $$ String name = "name"-->Line_12 $$ Set<String> names = Collections.singleton(name)[ FD ]
Line_10 $$ String name = "name"-->Line_21 $$ when(attributes.getAttribute(name)).thenReturn(value)[ FD ]
Line_8 $$ ImmutableSessionMetaData metaData = mock(ImmutableSessionMetaData.class)-->Line_23 $$ when(metaData.getCreationTime()).thenReturn(creationTime)[ FD ]
Line_9 $$ String id = "session"-->Line_29 $$ assertSame(id, result.getId())[ FD ]
Line_14 $$ Instant lastAccessedTime = Instant.now()-->Line_31 $$ assertEquals(lastAccessedTime.toEpochMilli(), result.getLastAccessedTime())[ FD ]
Line_6 $$ ImmutableSession session = mock(ImmutableSession.class)-->Line_19 $$ when(session.getAttributes()).thenReturn(attributes)[ FD ]
Line_13 $$ Instant creationTime = Instant.now()-->Line_23 $$ when(metaData.getCreationTime()).thenReturn(creationTime)[ FD ]
Line_9 $$ String id = "session"-->Line_18 $$ when(session.getId()).thenReturn(id)[ FD ]
Line_11 $$ Object value = new Object()-->Line_21 $$ when(attributes.getAttribute(name)).thenReturn(value)[ FD ]
Line_27 $$ io.undertow.server.session.Session result = this.adapter.getSession(id)-->Line_30 $$ assertEquals(creationTime.toEpochMilli(), result.getCreationTime())[ FD ]
Line_6 $$ ImmutableSession session = mock(ImmutableSession.class)-->Line_17 $$ when(this.manager.viewSession(id)).thenReturn(session)[ FD ]
Line_5 $$ Batch batch = mock(Batch.class)-->Line_35 $$ verify(batch).discard()[ FD ]
Line_9 $$ String id = "session"-->Line_17 $$ when(this.manager.viewSession(id)).thenReturn(session)[ FD ]
Line_27 $$ io.undertow.server.session.Session result = this.adapter.getSession(id)-->Line_34 $$ assertSame(value, result.getAttribute(name))[ FD ]
Line_11 $$ Object value = new Object()-->Line_34 $$ assertSame(value, result.getAttribute(name))[ FD ]
Line_8 $$ ImmutableSessionMetaData metaData = mock(ImmutableSessionMetaData.class)-->Line_25 $$ when(metaData.getMaxInactiveInterval()).thenReturn(maxInactiveInterval)[ FD ]
Line_7 $$ ImmutableSessionAttributes attributes = mock(ImmutableSessionAttributes.class)-->Line_21 $$ when(attributes.getAttribute(name)).thenReturn(value)[ FD ]
Line_12 $$ Set<String> names = Collections.singleton(name)-->Line_33 $$ assertEquals(names, result.getAttributeNames())[ FD ]
Line_7 $$ ImmutableSessionAttributes attributes = mock(ImmutableSessionAttributes.class)-->Line_20 $$ when(attributes.getAttributeNames()).thenReturn(names)[ FD ]
Line_4 $$ Batcher<Batch> batcher = mock(Batcher.class)-->Line_26 $$ when(batcher.createBatch()).thenReturn(batch)[ FD ]
Line_8 $$ ImmutableSessionMetaData metaData = mock(ImmutableSessionMetaData.class)-->Line_22 $$ when(session.getMetaData()).thenReturn(metaData)[ FD ]
Line_5 $$ Batch batch = mock(Batch.class)-->Line_26 $$ when(batcher.createBatch()).thenReturn(batch)[ FD ]
Line_4 $$ Batcher<Batch> batcher = mock(Batcher.class)-->Line_16 $$ when(this.manager.getBatcher()).thenReturn(batcher)[ FD ]
Line_15 $$ Duration maxInactiveInterval = Duration.ofMinutes(30L)-->Line_32 $$ assertEquals(maxInactiveInterval.getSeconds(), result.getMaxInactiveInterval())[ FD ]
Line_27 $$ io.undertow.server.session.Session result = this.adapter.getSession(id)-->Line_31 $$ assertEquals(lastAccessedTime.toEpochMilli(), result.getLastAccessedTime())[ FD ]
Line_7 $$ ImmutableSessionAttributes attributes = mock(ImmutableSessionAttributes.class)-->Line_19 $$ when(session.getAttributes()).thenReturn(attributes)[ FD ]
Line_10 $$ String name = "name"-->Line_34 $$ assertSame(value, result.getAttribute(name))[ FD ]
Line_6 $$ ImmutableSession session = mock(ImmutableSession.class)-->Line_18 $$ when(session.getId()).thenReturn(id)[ FD ]
Line_13 $$ Instant creationTime = Instant.now()-->Line_30 $$ assertEquals(creationTime.toEpochMilli(), result.getCreationTime())[ FD ]
Line_14 $$ Instant lastAccessedTime = Instant.now()-->Line_24 $$ when(metaData.getLastAccessedTime()).thenReturn(lastAccessedTime)[ FD ]
Line_12 $$ Set<String> names = Collections.singleton(name)-->Line_20 $$ when(attributes.getAttributeNames()).thenReturn(names)[ FD ]
Line_15 $$ Duration maxInactiveInterval = Duration.ofMinutes(30L)-->Line_25 $$ when(metaData.getMaxInactiveInterval()).thenReturn(maxInactiveInterval)[ FD ]
Line_8 $$ ImmutableSessionMetaData metaData = mock(ImmutableSessionMetaData.class)-->Line_24 $$ when(metaData.getLastAccessedTime()).thenReturn(lastAccessedTime)[ FD ]
Line_27 $$ io.undertow.server.session.Session result = this.adapter.getSession(id)-->Line_28 $$ assertSame(this.adapter, result.getSessionManager())[ FD ]
Line_27 $$ io.undertow.server.session.Session result = this.adapter.getSession(id)-->Line_29 $$ assertSame(id, result.getId())[ FD ]
Line_27 $$ io.undertow.server.session.Session result = this.adapter.getSession(id)-->Line_33 $$ assertEquals(names, result.getAttributeNames())[ FD ]
