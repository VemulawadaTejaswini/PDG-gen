Line_8 $$ Runnable task = new ExpirationTask(sessionId)-->Line_12 $$ this.expirationFutures.put(sessionId, this.executor.schedule(task, seconds, TimeUnit.SECONDS))[ FD ]
Line_9 $$ long seconds = !delay.isNegative() ? delay.getSeconds() + 1 : 0-->Line_10 $$ InfinispanWebLogger.ROOT_LOGGER.tracef("Session %s will expire in %d sec", sessionId, seconds)[ FD ]
Line_5 $$ if (!maxInactiveInterval.isZero()) -->Line_7 $$ Duration delay = Duration.between(Instant.now(), lastAccessed.plus(maxInactiveInterval))[ CD ]
Line_4 $$ Duration maxInactiveInterval = metaData.getMaxInactiveInterval()-->Line_7 $$ Duration delay = Duration.between(Instant.now(), lastAccessed.plus(maxInactiveInterval))[ FD ]
Line_4 $$ Duration maxInactiveInterval = metaData.getMaxInactiveInterval()-->Line_5 $$ if (!maxInactiveInterval.isZero()) [ FD ]
Line_6 $$ Instant lastAccessed = metaData.getLastAccessedTime()-->Line_7 $$ Duration delay = Duration.between(Instant.now(), lastAccessed.plus(maxInactiveInterval))[ FD ]
Line_5 $$ if (!maxInactiveInterval.isZero()) -->Line_9 $$ long seconds = !delay.isNegative() ? delay.getSeconds() + 1 : 0[ CD ]
Line_9 $$ long seconds = !delay.isNegative() ? delay.getSeconds() + 1 : 0-->Line_12 $$ this.expirationFutures.put(sessionId, this.executor.schedule(task, seconds, TimeUnit.SECONDS))[ FD ]
Line_5 $$ if (!maxInactiveInterval.isZero()) -->Line_10 $$ InfinispanWebLogger.ROOT_LOGGER.tracef("Session %s will expire in %d sec", sessionId, seconds)[ CD ]
Line_7 $$ Duration delay = Duration.between(Instant.now(), lastAccessed.plus(maxInactiveInterval))-->Line_9 $$ long seconds = !delay.isNegative() ? delay.getSeconds() + 1 : 0[ FD ]
Line_5 $$ if (!maxInactiveInterval.isZero()) -->Line_6 $$ Instant lastAccessed = metaData.getLastAccessedTime()[ CD ]
Line_5 $$ if (!maxInactiveInterval.isZero()) -->Line_8 $$ Runnable task = new ExpirationTask(sessionId)[ CD ]
