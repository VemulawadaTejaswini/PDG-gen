Line_3 $$ final List<FilePath> filePaths = new ArrayList<FilePath>(mySelection)-->Line_11 $$ if (Comparing.haveEqualElements(filePaths, mySelection))[ FD ]
Line_2 $$ public void valueChanged(final TreeSelectionEvent e) -->Line_3 $$ final List<FilePath> filePaths = new ArrayList<FilePath>(mySelection)[ CD ]
Line_2 $$ public void valueChanged(final TreeSelectionEvent e) -->Line_11 $$ if (Comparing.haveEqualElements(filePaths, mySelection))[ CD ]
Line_2 $$ public void valueChanged(final TreeSelectionEvent e) -->Line_5 $$ final TreePath[] selectionPaths = myStructureTree.getSelectionPaths()[ CD ]
Line_11 $$ if (Comparing.haveEqualElements(filePaths, mySelection))-->Line_12 $$ return[ CD ]
Line_5 $$ final TreePath[] selectionPaths = myStructureTree.getSelectionPaths()-->Line_6 $$ if (selectionPaths != null) [ FD ]
Line_2 $$ public void valueChanged(final TreeSelectionEvent e) -->Line_4 $$ mySelection.clear()[ CD ]
Line_2 $$ public void valueChanged(final TreeSelectionEvent e) -->Line_6 $$ if (selectionPaths != null) [ CD ]
Line_7 $$ for (TreePath selectionPath : selectionPaths) -->Line_8 $$ Collections.addAll(mySelection, ((ChangesBrowserNode) selectionPath.getLastPathComponent()).getFilePathsUnder())[ FD ]
Line_13 $$ for (ChangeListener listener : myListeners) -->Line_14 $$ listener.stateChanged(new ChangeEvent(this))[ FD ]
