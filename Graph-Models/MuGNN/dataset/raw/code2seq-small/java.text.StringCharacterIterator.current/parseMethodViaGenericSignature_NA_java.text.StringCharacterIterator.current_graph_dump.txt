Line_2 $$ public static String parseMethodViaGenericSignature(@NotNull String signature, @NotNull PsiMethodStubImpl stub, @NotNull List<String> args, @Nullable List<String> throwables) throws ClsFormatException -->Line_12 $$ if (iterator.current() != ')') [ CD ]
Line_2 $$ public static String parseMethodViaGenericSignature(@NotNull String signature, @NotNull PsiMethodStubImpl stub, @NotNull List<String> args, @Nullable List<String> throwables) throws ClsFormatException -->Line_4 $$ SignatureParsing.parseTypeParametersDeclaration(iterator, stub)[ FD ]
Line_2 $$ public static String parseMethodViaGenericSignature(@NotNull String signature, @NotNull PsiMethodStubImpl stub, @NotNull List<String> args, @Nullable List<String> throwables) throws ClsFormatException -->Line_4 $$ SignatureParsing.parseTypeParametersDeclaration(iterator, stub)[ CD ]
Line_2 $$ public static String parseMethodViaGenericSignature(@NotNull String signature, @NotNull PsiMethodStubImpl stub, @NotNull List<String> args, @Nullable List<String> throwables) throws ClsFormatException -->Line_20 $$ if (throwables != null) [ FD ]
Line_2 $$ public static String parseMethodViaGenericSignature(@NotNull String signature, @NotNull PsiMethodStubImpl stub, @NotNull List<String> args, @Nullable List<String> throwables) throws ClsFormatException -->Line_8 $$ iterator.next()[ CD ]
Line_20 $$ if (throwables != null) -->Line_21 $$ throwables.add(exType)[ CD ]
Line_3 $$ StringCharacterIterator iterator = new StringCharacterIterator(signature)-->Line_15 $$ iterator.next()[ FD ]
Line_3 $$ StringCharacterIterator iterator = new StringCharacterIterator(signature)-->Line_12 $$ if (iterator.current() != ')') [ FD ]
Line_2 $$ public static String parseMethodViaGenericSignature(@NotNull String signature, @NotNull PsiMethodStubImpl stub, @NotNull List<String> args, @Nullable List<String> throwables) throws ClsFormatException -->Line_16 $$ String returnType = SignatureParsing.parseTypeString(iterator)[ CD ]
Line_2 $$ public static String parseMethodViaGenericSignature(@NotNull String signature, @NotNull PsiMethodStubImpl stub, @NotNull List<String> args, @Nullable List<String> throwables) throws ClsFormatException -->Line_3 $$ StringCharacterIterator iterator = new StringCharacterIterator(signature)[ CD ]
Line_3 $$ StringCharacterIterator iterator = new StringCharacterIterator(signature)-->Line_16 $$ String returnType = SignatureParsing.parseTypeString(iterator)[ FD ]
Line_3 $$ StringCharacterIterator iterator = new StringCharacterIterator(signature)-->Line_19 $$ String exType = SignatureParsing.parseTypeString(iterator)[ FD ]
Line_2 $$ public static String parseMethodViaGenericSignature(@NotNull String signature, @NotNull PsiMethodStubImpl stub, @NotNull List<String> args, @Nullable List<String> throwables) throws ClsFormatException -->Line_5 $$ if (iterator.current() != '(') [ CD ]
Line_9 $$ while (iterator.current() != ')' && iterator.current() != CharacterIterator.DONE) -->Line_10 $$ args.add(SignatureParsing.parseTypeString(iterator))[ CD ]
Line_2 $$ public static String parseMethodViaGenericSignature(@NotNull String signature, @NotNull PsiMethodStubImpl stub, @NotNull List<String> args, @Nullable List<String> throwables) throws ClsFormatException -->Line_10 $$ args.add(SignatureParsing.parseTypeString(iterator))[ FD ]
Line_2 $$ public static String parseMethodViaGenericSignature(@NotNull String signature, @NotNull PsiMethodStubImpl stub, @NotNull List<String> args, @Nullable List<String> throwables) throws ClsFormatException -->Line_21 $$ throwables.add(exType)[ FD ]
Line_2 $$ public static String parseMethodViaGenericSignature(@NotNull String signature, @NotNull PsiMethodStubImpl stub, @NotNull List<String> args, @Nullable List<String> throwables) throws ClsFormatException -->Line_9 $$ while (iterator.current() != ')' && iterator.current() != CharacterIterator.DONE) [ CD ]
Line_3 $$ StringCharacterIterator iterator = new StringCharacterIterator(signature)-->Line_18 $$ iterator.next()[ FD ]
Line_17 $$ while (iterator.current() == '^') -->Line_19 $$ String exType = SignatureParsing.parseTypeString(iterator)[ CD ]
Line_19 $$ String exType = SignatureParsing.parseTypeString(iterator)-->Line_21 $$ throwables.add(exType)[ FD ]
Line_2 $$ public static String parseMethodViaGenericSignature(@NotNull String signature, @NotNull PsiMethodStubImpl stub, @NotNull List<String> args, @Nullable List<String> throwables) throws ClsFormatException -->Line_15 $$ iterator.next()[ CD ]
Line_3 $$ StringCharacterIterator iterator = new StringCharacterIterator(signature)-->Line_8 $$ iterator.next()[ FD ]
Line_3 $$ StringCharacterIterator iterator = new StringCharacterIterator(signature)-->Line_17 $$ while (iterator.current() == '^') [ FD ]
Line_2 $$ public static String parseMethodViaGenericSignature(@NotNull String signature, @NotNull PsiMethodStubImpl stub, @NotNull List<String> args, @Nullable List<String> throwables) throws ClsFormatException -->Line_24 $$ return returnType[ CD ]
Line_2 $$ public static String parseMethodViaGenericSignature(@NotNull String signature, @NotNull PsiMethodStubImpl stub, @NotNull List<String> args, @Nullable List<String> throwables) throws ClsFormatException -->Line_17 $$ while (iterator.current() == '^') [ CD ]
Line_17 $$ while (iterator.current() == '^') -->Line_20 $$ if (throwables != null) [ CD ]
Line_3 $$ StringCharacterIterator iterator = new StringCharacterIterator(signature)-->Line_5 $$ if (iterator.current() != '(') [ FD ]
Line_3 $$ StringCharacterIterator iterator = new StringCharacterIterator(signature)-->Line_9 $$ while (iterator.current() != ')' && iterator.current() != CharacterIterator.DONE) [ FD ]
Line_3 $$ StringCharacterIterator iterator = new StringCharacterIterator(signature)-->Line_4 $$ SignatureParsing.parseTypeParametersDeclaration(iterator, stub)[ FD ]
Line_17 $$ while (iterator.current() == '^') -->Line_18 $$ iterator.next()[ CD ]
Line_3 $$ StringCharacterIterator iterator = new StringCharacterIterator(signature)-->Line_10 $$ args.add(SignatureParsing.parseTypeString(iterator))[ FD ]
