Line_2 $$ public void customizeCellRenderer(@NotNull JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_37 $$ setForeground(foreground)[ CD ]
Line_5 $$ if (value instanceof HierarchyTree.ComponentNode) -->Line_6 $$ HierarchyTree.ComponentNode componentNode = (HierarchyTree.ComponentNode) value[ CD ]
Line_5 $$ if (value instanceof HierarchyTree.ComponentNode) -->Line_11 $$ if (!selected) [ CD ]
Line_5 $$ if (value instanceof HierarchyTree.ComponentNode) -->Line_10 $$ String name = component.getName()[ CD ]
Line_5 $$ if (value instanceof HierarchyTree.ComponentNode) -->Line_35 $$ setIcon(new TwoColorsIcon(11, component.getForeground(), component.getBackground()))[ CD ]
Line_5 $$ if (value instanceof HierarchyTree.ComponentNode) -->Line_31 $$ if (component.isDoubleBuffered()) [ CD ]
Line_31 $$ if (component.isDoubleBuffered()) -->Line_32 $$ append(", double-buffered", SimpleTextAttributes.GRAYED_ATTRIBUTES)[ CD ]
Line_16 $$ if (component.getPreferredSize() != null && (component.getSize().width < component.getPreferredSize().width || component.getSize().height < component.getPreferredSize().height)) -->Line_17 $$ foreground = PlatformColors.BLUE[ CD ]
Line_5 $$ if (value instanceof HierarchyTree.ComponentNode) -->Line_23 $$ append(clazz.getSimpleName())[ CD ]
Line_5 $$ if (value instanceof HierarchyTree.ComponentNode) -->Line_8 $$ Class<?> clazz0 = component.getClass()[ CD ]
Line_12 $$ if (!component.isVisible()) -->Line_14 $$ if (component.getWidth() == 0 || component.getHeight() == 0) [ CD ]
Line_15 $$ foreground = new Color(128, 10, 0)-->Line_17 $$ foreground = PlatformColors.BLUE[ FD ]
Line_3 $$ Color foreground = selected ? UIUtil.getTreeSelectionForeground() : UIUtil.getTreeForeground()-->Line_17 $$ foreground = PlatformColors.BLUE[ FD ]
Line_3 $$ Color foreground = selected ? UIUtil.getTreeSelectionForeground() : UIUtil.getTreeForeground()-->Line_37 $$ setForeground(foreground)[ FD ]
Line_2 $$ public void customizeCellRenderer(@NotNull JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_39 $$ SpeedSearchUtil.applySpeedSearchHighlighting(tree, this, false, selected)[ CD ]
Line_19 $$ if (myInitialSelection == componentNode.getComponent()) -->Line_20 $$ background = new Color(31, 128, 8, 58)[ CD ]
Line_14 $$ if (component.getWidth() == 0 || component.getHeight() == 0) -->Line_15 $$ foreground = new Color(128, 10, 0)[ CD ]
Line_15 $$ foreground = new Color(128, 10, 0)-->Line_37 $$ setForeground(foreground)[ FD ]
Line_2 $$ public void customizeCellRenderer(@NotNull JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_5 $$ if (value instanceof HierarchyTree.ComponentNode) [ CD ]
Line_5 $$ if (value instanceof HierarchyTree.ComponentNode) -->Line_34 $$ componentNode.setText(toString())[ CD ]
Line_3 $$ Color foreground = selected ? UIUtil.getTreeSelectionForeground() : UIUtil.getTreeForeground()-->Line_13 $$ foreground = JBColor.GRAY[ FD ]
Line_8 $$ Class<?> clazz0 = component.getClass()-->Line_9 $$ Class<?> clazz = clazz0.isAnonymousClass() ? clazz0.getSuperclass() : clazz0[ FD ]
Line_13 $$ foreground = JBColor.GRAY-->Line_37 $$ setForeground(foreground)[ FD ]
Line_2 $$ public void customizeCellRenderer(@NotNull JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_4 $$ Color background = selected ? UIUtil.getTreeSelectionBackground() : null[ CD ]
Line_13 $$ foreground = JBColor.GRAY-->Line_17 $$ foreground = PlatformColors.BLUE[ FD ]
Line_7 $$ Component component = componentNode.getComponent()-->Line_35 $$ setIcon(new TwoColorsIcon(11, component.getForeground(), component.getBackground()))[ FD ]
Line_4 $$ Color background = selected ? UIUtil.getTreeSelectionBackground() : null-->Line_38 $$ setBackground(background)[ FD ]
Line_11 $$ if (!selected) -->Line_12 $$ if (!component.isVisible()) [ CD ]
Line_5 $$ if (value instanceof HierarchyTree.ComponentNode) -->Line_7 $$ Component component = componentNode.getComponent()[ CD ]
Line_24 $$ if (StringUtil.isNotEmpty(name)) -->Line_25 $$ append(" \"" + name + "\"")[ CD ]
Line_2 $$ public void customizeCellRenderer(@NotNull JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_11 $$ if (!selected) [ FD ]
Line_5 $$ if (value instanceof HierarchyTree.ComponentNode) -->Line_9 $$ Class<?> clazz = clazz0.isAnonymousClass() ? clazz0.getSuperclass() : clazz0[ CD ]
Line_2 $$ public void customizeCellRenderer(@NotNull JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_3 $$ Color foreground = selected ? UIUtil.getTreeSelectionForeground() : UIUtil.getTreeForeground()[ CD ]
Line_5 $$ if (value instanceof HierarchyTree.ComponentNode) -->Line_24 $$ if (StringUtil.isNotEmpty(name)) [ CD ]
Line_2 $$ public void customizeCellRenderer(@NotNull JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_39 $$ SpeedSearchUtil.applySpeedSearchHighlighting(tree, this, false, selected)[ FD ]
Line_28 $$ if (component.isOpaque()) -->Line_29 $$ append(", opaque", SimpleTextAttributes.GRAYED_ATTRIBUTES)[ CD ]
Line_7 $$ Component component = componentNode.getComponent()-->Line_16 $$ if (component.getPreferredSize() != null && (component.getSize().width < component.getPreferredSize().width || component.getSize().height < component.getPreferredSize().height)) [ FD ]
Line_7 $$ Component component = componentNode.getComponent()-->Line_31 $$ if (component.isDoubleBuffered()) [ FD ]
Line_7 $$ Component component = componentNode.getComponent()-->Line_10 $$ String name = component.getName()[ FD ]
Line_6 $$ HierarchyTree.ComponentNode componentNode = (HierarchyTree.ComponentNode) value-->Line_7 $$ Component component = componentNode.getComponent()[ FD ]
Line_12 $$ if (!component.isVisible()) -->Line_13 $$ foreground = JBColor.GRAY[ CD ]
Line_7 $$ Component component = componentNode.getComponent()-->Line_27 $$ append(": " + RectangleRenderer.toString(component.getBounds()), SimpleTextAttributes.GRAYED_ATTRIBUTES)[ FD ]
Line_5 $$ if (value instanceof HierarchyTree.ComponentNode) -->Line_28 $$ if (component.isOpaque()) [ CD ]
Line_7 $$ Component component = componentNode.getComponent()-->Line_14 $$ if (component.getWidth() == 0 || component.getHeight() == 0) [ FD ]
Line_3 $$ Color foreground = selected ? UIUtil.getTreeSelectionForeground() : UIUtil.getTreeForeground()-->Line_15 $$ foreground = new Color(128, 10, 0)[ FD ]
Line_6 $$ HierarchyTree.ComponentNode componentNode = (HierarchyTree.ComponentNode) value-->Line_19 $$ if (myInitialSelection == componentNode.getComponent()) [ FD ]
Line_2 $$ public void customizeCellRenderer(@NotNull JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_5 $$ if (value instanceof HierarchyTree.ComponentNode) [ FD ]
Line_7 $$ Component component = componentNode.getComponent()-->Line_28 $$ if (component.isOpaque()) [ FD ]
Line_14 $$ if (component.getWidth() == 0 || component.getHeight() == 0) -->Line_16 $$ if (component.getPreferredSize() != null && (component.getSize().width < component.getPreferredSize().width || component.getSize().height < component.getPreferredSize().height)) [ CD ]
Line_10 $$ String name = component.getName()-->Line_24 $$ if (StringUtil.isNotEmpty(name)) [ FD ]
Line_11 $$ if (!selected) -->Line_19 $$ if (myInitialSelection == componentNode.getComponent()) [ CD ]
Line_9 $$ Class<?> clazz = clazz0.isAnonymousClass() ? clazz0.getSuperclass() : clazz0-->Line_23 $$ append(clazz.getSimpleName())[ FD ]
Line_7 $$ Component component = componentNode.getComponent()-->Line_12 $$ if (!component.isVisible()) [ FD ]
Line_13 $$ foreground = JBColor.GRAY-->Line_15 $$ foreground = new Color(128, 10, 0)[ FD ]
Line_6 $$ HierarchyTree.ComponentNode componentNode = (HierarchyTree.ComponentNode) value-->Line_34 $$ componentNode.setText(toString())[ FD ]
Line_4 $$ Color background = selected ? UIUtil.getTreeSelectionBackground() : null-->Line_20 $$ background = new Color(31, 128, 8, 58)[ FD ]
Line_7 $$ Component component = componentNode.getComponent()-->Line_8 $$ Class<?> clazz0 = component.getClass()[ FD ]
Line_20 $$ background = new Color(31, 128, 8, 58)-->Line_38 $$ setBackground(background)[ FD ]
Line_2 $$ public void customizeCellRenderer(@NotNull JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_38 $$ setBackground(background)[ CD ]
Line_5 $$ if (value instanceof HierarchyTree.ComponentNode) -->Line_27 $$ append(": " + RectangleRenderer.toString(component.getBounds()), SimpleTextAttributes.GRAYED_ATTRIBUTES)[ CD ]
Line_17 $$ foreground = PlatformColors.BLUE-->Line_37 $$ setForeground(foreground)[ FD ]
