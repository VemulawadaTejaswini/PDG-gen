Line_8 $$ for (int eachRow = 0; eachRow < myTree.getRowCount(); eachRow++) -->Line_9 $$ if (!myTree.isExpanded(eachRow))[ FD ]
Line_7 $$ List<TreePath> toCollapse = new ArrayList<TreePath>()-->Line_19 $$ toCollapse.add(eachVisiblePath)[ FD ]
Line_11 $$ TreePath eachVisiblePath = myTree.getPathForRow(eachRow)-->Line_14 $$ Object eachElement = myBuilder.getElementFor(eachVisiblePath.getLastPathComponent())[ FD ]
Line_8 $$ for (int eachRow = 0; eachRow < myTree.getRowCount(); eachRow++) -->Line_15 $$ if (toRestore.contains(eachElement))[ CD ]
Line_18 $$ if (!eachVisiblePath.isDescendant(eachSelected)) -->Line_19 $$ toCollapse.add(eachVisiblePath)[ CD ]
Line_11 $$ TreePath eachVisiblePath = myTree.getPathForRow(eachRow)-->Line_12 $$ if (eachVisiblePath == null)[ FD ]
Line_2 $$ private void restoreExpandedState(List<Object> toRestore) -->Line_4 $$ if (selected == null) [ CD ]
Line_2 $$ private void restoreExpandedState(List<Object> toRestore) -->Line_7 $$ List<TreePath> toCollapse = new ArrayList<TreePath>()[ CD ]
Line_8 $$ for (int eachRow = 0; eachRow < myTree.getRowCount(); eachRow++) -->Line_11 $$ TreePath eachVisiblePath = myTree.getPathForRow(eachRow)[ FD ]
Line_11 $$ TreePath eachVisiblePath = myTree.getPathForRow(eachRow)-->Line_19 $$ toCollapse.add(eachVisiblePath)[ FD ]
Line_2 $$ private void restoreExpandedState(List<Object> toRestore) -->Line_3 $$ TreePath[] selected = myTree.getSelectionPaths()[ CD ]
Line_3 $$ TreePath[] selected = myTree.getSelectionPaths()-->Line_4 $$ if (selected == null) [ FD ]
Line_4 $$ if (selected == null) -->Line_5 $$ selected = new TreePath[0][ CD ]
Line_3 $$ TreePath[] selected = myTree.getSelectionPaths()-->Line_5 $$ selected = new TreePath[0][ FD ]
Line_23 $$ for (TreePath each : toCollapse) -->Line_24 $$ myTree.collapsePath(each)[ FD ]
Line_14 $$ Object eachElement = myBuilder.getElementFor(eachVisiblePath.getLastPathComponent())-->Line_15 $$ if (toRestore.contains(eachElement))[ FD ]
Line_2 $$ private void restoreExpandedState(List<Object> toRestore) -->Line_15 $$ if (toRestore.contains(eachElement))[ FD ]
Line_8 $$ for (int eachRow = 0; eachRow < myTree.getRowCount(); eachRow++) -->Line_14 $$ Object eachElement = myBuilder.getElementFor(eachVisiblePath.getLastPathComponent())[ CD ]
Line_11 $$ TreePath eachVisiblePath = myTree.getPathForRow(eachRow)-->Line_18 $$ if (!eachVisiblePath.isDescendant(eachSelected)) [ FD ]
Line_8 $$ for (int eachRow = 0; eachRow < myTree.getRowCount(); eachRow++) -->Line_9 $$ if (!myTree.isExpanded(eachRow))[ CD ]
Line_17 $$ for (TreePath eachSelected : selected) -->Line_18 $$ if (!eachVisiblePath.isDescendant(eachSelected)) [ FD ]
Line_8 $$ for (int eachRow = 0; eachRow < myTree.getRowCount(); eachRow++) -->Line_11 $$ TreePath eachVisiblePath = myTree.getPathForRow(eachRow)[ CD ]
Line_2 $$ private void restoreExpandedState(List<Object> toRestore) -->Line_8 $$ for (int eachRow = 0; eachRow < myTree.getRowCount(); eachRow++) [ CD ]
Line_8 $$ for (int eachRow = 0; eachRow < myTree.getRowCount(); eachRow++) -->Line_12 $$ if (eachVisiblePath == null)[ CD ]
