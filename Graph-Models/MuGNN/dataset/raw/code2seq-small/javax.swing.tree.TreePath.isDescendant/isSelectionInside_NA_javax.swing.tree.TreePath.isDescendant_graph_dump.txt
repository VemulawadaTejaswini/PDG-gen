Line_2 $$ private boolean isSelectionInside(DefaultMutableTreeNode parent) -->Line_3 $$ TreePath path = new TreePath(myTreeModel.getPathToRoot(parent))[ CD ]
Line_3 $$ TreePath path = new TreePath(myTreeModel.getPathToRoot(parent))-->Line_8 $$ if (path.isDescendant(path1))[ FD ]
Line_7 $$ for (TreePath path1 : paths) -->Line_8 $$ if (path.isDescendant(path1))[ FD ]
Line_8 $$ if (path.isDescendant(path1))-->Line_9 $$ return true[ CD ]
Line_2 $$ private boolean isSelectionInside(DefaultMutableTreeNode parent) -->Line_5 $$ if (paths == null)[ CD ]
Line_2 $$ private boolean isSelectionInside(DefaultMutableTreeNode parent) -->Line_4 $$ TreePath[] paths = myTree.getSelectionPaths()[ CD ]
Line_5 $$ if (paths == null)-->Line_6 $$ return false[ CD ]
Line_4 $$ TreePath[] paths = myTree.getSelectionPaths()-->Line_5 $$ if (paths == null)[ FD ]
Line_2 $$ private boolean isSelectionInside(DefaultMutableTreeNode parent) -->Line_3 $$ TreePath path = new TreePath(myTreeModel.getPathToRoot(parent))[ FD ]
Line_2 $$ private boolean isSelectionInside(DefaultMutableTreeNode parent) -->Line_11 $$ return false[ CD ]
