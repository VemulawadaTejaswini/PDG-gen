Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_8 $$ bounds.x = i.left[ CD ]
Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_15 $$ if (visible.x + visible.width > bounds.x + bounds.width) [ CD ]
Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_3 $$ final Rectangle visible = c.getVisibleRect()[ CD ]
Line_3 $$ final Rectangle visible = c.getVisibleRect()-->Line_24 $$ c.scrollRectToVisible(visible)[ FD ]
Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_12 $$ if (visible.x < bounds.x) [ CD ]
Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_6 $$ final Rectangle bounds = c.getBounds()[ FD ]
Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_6 $$ final Rectangle bounds = c.getBounds()[ CD ]
Line_18 $$ if (visible.y < bounds.y) -->Line_19 $$ visible.y = bounds.y[ CD ]
Line_15 $$ if (visible.x + visible.width > bounds.x + bounds.width) -->Line_16 $$ visible.x = bounds.x + bounds.width - visible.width[ CD ]
Line_12 $$ if (visible.x < bounds.x) -->Line_13 $$ visible.x = bounds.x[ CD ]
Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_24 $$ c.scrollRectToVisible(visible)[ FD ]
Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_5 $$ visible.y = r.y - (visible.height - r.height) / 2[ CD ]
Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_11 $$ bounds.height -= i.top + i.bottom[ CD ]
Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_18 $$ if (visible.y < bounds.y) [ CD ]
Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_9 $$ bounds.y = i.top[ CD ]
Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_24 $$ c.scrollRectToVisible(visible)[ CD ]
Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_10 $$ bounds.width -= i.left + i.right[ CD ]
Line_21 $$ if (visible.y + visible.height > bounds.y + bounds.height) -->Line_22 $$ visible.y = bounds.y + bounds.height - visible.height[ CD ]
Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_3 $$ final Rectangle visible = c.getVisibleRect()[ FD ]
Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_21 $$ if (visible.y + visible.height > bounds.y + bounds.height) [ CD ]
Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_7 $$ final Insets i = withInsets ? new Insets(0, 0, 0, 0) : c.getInsets()[ CD ]
Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_4 $$ visible.x = r.x - (visible.width - r.width) / 2[ CD ]
Line_2 $$ public static void center(final JComponent c, final Rectangle r, final boolean withInsets) -->Line_7 $$ final Insets i = withInsets ? new Insets(0, 0, 0, 0) : c.getInsets()[ FD ]
