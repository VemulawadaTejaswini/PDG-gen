Line_2 $$ public static void scroll(JComponent c, Rectangle r, ScrollBias horizontalBias, ScrollBias verticalBias) -->Line_14 $$ if (horizontalBias == ScrollBias.LAST)[ FD ]
Line_7 $$ if (horizontalBias == ScrollBias.UNCHANGED) -->Line_8 $$ if (dest.x <= visible.x && dest.x + dest.width >= visible.x + visible.width) [ CD ]
Line_2 $$ public static void scroll(JComponent c, Rectangle r, ScrollBias horizontalBias, ScrollBias verticalBias) -->Line_4 $$ Rectangle dest = new Rectangle(r)[ CD ]
Line_8 $$ if (dest.x <= visible.x && dest.x + dest.width >= visible.x + visible.width) -->Line_9 $$ dest.width = visible.width[ CD ]
Line_7 $$ if (horizontalBias == ScrollBias.UNCHANGED) -->Line_12 $$ if (horizontalBias == ScrollBias.CENTER) [ CD ]
Line_4 $$ Rectangle dest = new Rectangle(r)-->Line_21 $$ if (!visible.contains(dest))[ FD ]
Line_4 $$ Rectangle dest = new Rectangle(r)-->Line_22 $$ c.scrollRectToVisible(dest)[ FD ]
Line_2 $$ public static void scroll(JComponent c, Rectangle r, ScrollBias horizontalBias, ScrollBias verticalBias) -->Line_12 $$ if (horizontalBias == ScrollBias.CENTER) [ FD ]
Line_2 $$ public static void scroll(JComponent c, Rectangle r, ScrollBias horizontalBias, ScrollBias verticalBias) -->Line_3 $$ Rectangle visible = c.getVisibleRect()[ FD ]
Line_12 $$ if (horizontalBias == ScrollBias.CENTER) -->Line_13 $$ dest.x += (dest.width - visible.width) / 2[ CD ]
Line_12 $$ if (horizontalBias == ScrollBias.CENTER) -->Line_14 $$ if (horizontalBias == ScrollBias.LAST)[ CD ]
Line_2 $$ public static void scroll(JComponent c, Rectangle r, ScrollBias horizontalBias, ScrollBias verticalBias) -->Line_6 $$ if (horizontalBias == ScrollBias.VIEWPORT) [ FD ]
Line_2 $$ public static void scroll(JComponent c, Rectangle r, ScrollBias horizontalBias, ScrollBias verticalBias) -->Line_3 $$ Rectangle visible = c.getVisibleRect()[ CD ]
Line_5 $$ if (dest.width > visible.width) -->Line_6 $$ if (horizontalBias == ScrollBias.VIEWPORT) [ CD ]
Line_6 $$ if (horizontalBias == ScrollBias.VIEWPORT) -->Line_7 $$ if (horizontalBias == ScrollBias.UNCHANGED) [ CD ]
Line_14 $$ if (horizontalBias == ScrollBias.LAST)-->Line_15 $$ dest.x += dest.width - visible.width[ CD ]
Line_2 $$ public static void scroll(JComponent c, Rectangle r, ScrollBias horizontalBias, ScrollBias verticalBias) -->Line_5 $$ if (dest.width > visible.width) [ CD ]
Line_2 $$ public static void scroll(JComponent c, Rectangle r, ScrollBias horizontalBias, ScrollBias verticalBias) -->Line_7 $$ if (horizontalBias == ScrollBias.UNCHANGED) [ FD ]
Line_2 $$ public static void scroll(JComponent c, Rectangle r, ScrollBias horizontalBias, ScrollBias verticalBias) -->Line_21 $$ if (!visible.contains(dest))[ CD ]
Line_2 $$ public static void scroll(JComponent c, Rectangle r, ScrollBias horizontalBias, ScrollBias verticalBias) -->Line_19 $$ if (dest.height > visible.height) [ CD ]
Line_3 $$ Rectangle visible = c.getVisibleRect()-->Line_21 $$ if (!visible.contains(dest))[ FD ]
Line_7 $$ if (horizontalBias == ScrollBias.UNCHANGED) -->Line_16 $$ dest.width = visible.width[ CD ]
Line_21 $$ if (!visible.contains(dest))-->Line_22 $$ c.scrollRectToVisible(dest)[ CD ]
Line_2 $$ public static void scroll(JComponent c, Rectangle r, ScrollBias horizontalBias, ScrollBias verticalBias) -->Line_22 $$ c.scrollRectToVisible(dest)[ FD ]
