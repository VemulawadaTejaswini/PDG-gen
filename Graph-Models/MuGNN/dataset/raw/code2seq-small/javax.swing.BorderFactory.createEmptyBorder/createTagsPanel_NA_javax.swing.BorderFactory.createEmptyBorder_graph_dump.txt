Line_10 $$ for (int i = 0; i < tags.length; i++) -->Line_12 $$ gc.gridy = i[ FD ]
Line_3 $$ JPanel panel = new JPanel(new GridBagLayout())-->Line_15 $$ panel.add(box, gc)[ FD ]
Line_2 $$ private JPanel createTagsPanel(String[] tags, Options options) -->Line_5 $$ GridBagConstraints gc = new GridBagConstraints()[ CD ]
Line_2 $$ private JPanel createTagsPanel(String[] tags, Options options) -->Line_7 $$ gc.weighty = 0[ CD ]
Line_2 $$ private JPanel createTagsPanel(String[] tags, Options options) -->Line_6 $$ gc.weightx = 1[ CD ]
Line_10 $$ for (int i = 0; i < tags.length; i++) -->Line_13 $$ if (i == tags.length - 1)[ CD ]
Line_5 $$ GridBagConstraints gc = new GridBagConstraints()-->Line_15 $$ panel.add(box, gc)[ FD ]
Line_2 $$ private JPanel createTagsPanel(String[] tags, Options options) -->Line_4 $$ panel.setBorder(BorderFactory.createCompoundBorder(IdeBorderFactory.createTitledBorder(InspectionsBundle.message("inspection.javadoc.required.tags.option.title"), true), BorderFactory.createEmptyBorder(0, 3, 3, 3)))[ CD ]
Line_2 $$ private JPanel createTagsPanel(String[] tags, Options options) -->Line_19 $$ return panel[ CD ]
Line_10 $$ for (int i = 0; i < tags.length; i++) -->Line_16 $$ box.setSelected(isTagRequired(options, tags[i]))[ CD ]
Line_10 $$ for (int i = 0; i < tags.length; i++) -->Line_12 $$ gc.gridy = i[ CD ]
Line_2 $$ private JPanel createTagsPanel(String[] tags, Options options) -->Line_16 $$ box.setSelected(isTagRequired(options, tags[i]))[ FD ]
Line_10 $$ for (int i = 0; i < tags.length; i++) -->Line_17 $$ box.addChangeListener(new MyChangeListener(box, options, tags[i]))[ CD ]
Line_10 $$ for (int i = 0; i < tags.length; i++) -->Line_15 $$ panel.add(box, gc)[ CD ]
Line_11 $$ JCheckBox box = new JCheckBox(tags[i])-->Line_15 $$ panel.add(box, gc)[ FD ]
Line_13 $$ if (i == tags.length - 1)-->Line_14 $$ gc.weighty = 1[ CD ]
Line_2 $$ private JPanel createTagsPanel(String[] tags, Options options) -->Line_8 $$ gc.fill = GridBagConstraints.HORIZONTAL[ CD ]
Line_2 $$ private JPanel createTagsPanel(String[] tags, Options options) -->Line_10 $$ for (int i = 0; i < tags.length; i++) [ CD ]
Line_2 $$ private JPanel createTagsPanel(String[] tags, Options options) -->Line_9 $$ gc.anchor = GridBagConstraints.NORTHWEST[ CD ]
Line_11 $$ JCheckBox box = new JCheckBox(tags[i])-->Line_16 $$ box.setSelected(isTagRequired(options, tags[i]))[ FD ]
Line_10 $$ for (int i = 0; i < tags.length; i++) -->Line_13 $$ if (i == tags.length - 1)[ FD ]
Line_11 $$ JCheckBox box = new JCheckBox(tags[i])-->Line_17 $$ box.addChangeListener(new MyChangeListener(box, options, tags[i]))[ FD ]
Line_3 $$ JPanel panel = new JPanel(new GridBagLayout())-->Line_4 $$ panel.setBorder(BorderFactory.createCompoundBorder(IdeBorderFactory.createTitledBorder(InspectionsBundle.message("inspection.javadoc.required.tags.option.title"), true), BorderFactory.createEmptyBorder(0, 3, 3, 3)))[ FD ]
Line_2 $$ private JPanel createTagsPanel(String[] tags, Options options) -->Line_3 $$ JPanel panel = new JPanel(new GridBagLayout())[ CD ]
Line_10 $$ for (int i = 0; i < tags.length; i++) -->Line_11 $$ JCheckBox box = new JCheckBox(tags[i])[ CD ]
