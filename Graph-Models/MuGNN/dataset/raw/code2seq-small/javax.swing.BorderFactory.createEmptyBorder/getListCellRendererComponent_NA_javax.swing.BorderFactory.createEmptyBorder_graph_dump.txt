Line_8 $$ if (value instanceof ChooseByNameItem) -->Line_17 $$ String description = item.getDescription()[ CD ]
Line_18 $$ if (description != null) -->Line_25 $$ final JLabel descriptionLabel = new JLabel(normalizedDesc)[ CD ]
Line_17 $$ String description = item.getDescription()-->Line_18 $$ if (description != null) [ FD ]
Line_3 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_16 $$ panel.add(actionLabel, BorderLayout.WEST)[ FD ]
Line_18 $$ if (description != null) -->Line_26 $$ descriptionLabel.setBackground(bg)[ CD ]
Line_17 $$ String description = item.getDescription()-->Line_21 $$ normalizedDesc = description.substring(0, MAX_DESC_LENGTH) + ELLIPSIS_SUFFIX[ FD ]
Line_17 $$ String description = item.getDescription()-->Line_23 $$ normalizedDesc = description[ FD ]
Line_19 $$ final String normalizedDesc-->Line_23 $$ normalizedDesc = description[ FD ]
Line_3 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_4 $$ panel.setOpaque(true)[ FD ]
Line_9 $$ final ChooseByNameItem item = (ChooseByNameItem) value-->Line_17 $$ String description = item.getDescription()[ FD ]
Line_18 $$ if (description != null) -->Line_27 $$ descriptionLabel.setForeground(fg)[ CD ]
Line_11 $$ final JLabel actionLabel = new JLabel(item.getName(), null, LEFT)-->Line_15 $$ actionLabel.setBorder(BorderFactory.createEmptyBorder(0, 4, 0, 0))[ FD ]
Line_3 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_29 $$ panel.add(descriptionLabel, BorderLayout.EAST)[ FD ]
Line_8 $$ if (value instanceof ChooseByNameItem) -->Line_11 $$ final JLabel actionLabel = new JLabel(item.getName(), null, LEFT)[ CD ]
Line_8 $$ if (value instanceof ChooseByNameItem) -->Line_10 $$ final Color fg = isSelected ? UIUtil.getListSelectionForeground() : UIUtil.getListForeground()[ CD ]
Line_6 $$ final Color bg = isSelected ? UIUtil.getListSelectionBackground() : UIUtil.getListBackground()-->Line_33 $$ actionLabel.setBackground(bg)[ FD ]
Line_11 $$ final JLabel actionLabel = new JLabel(item.getName(), null, LEFT)-->Line_34 $$ actionLabel.setForeground(UIUtil.getListForeground())[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) -->Line_7 $$ panel.setBackground(bg)[ CD ]
Line_8 $$ if (value instanceof ChooseByNameItem) -->Line_35 $$ actionLabel.setFont(actionLabel.getFont().deriveFont(Font.PLAIN))[ CD ]
Line_8 $$ if (value instanceof ChooseByNameItem) -->Line_9 $$ final ChooseByNameItem item = (ChooseByNameItem) value[ CD ]
Line_17 $$ String description = item.getDescription()-->Line_20 $$ if (description.length() > MAX_DESC_LENGTH) [ FD ]
Line_19 $$ final String normalizedDesc-->Line_21 $$ normalizedDesc = description.substring(0, MAX_DESC_LENGTH) + ELLIPSIS_SUFFIX[ FD ]
Line_25 $$ final JLabel descriptionLabel = new JLabel(normalizedDesc)-->Line_28 $$ descriptionLabel.setBorder(new EmptyBorder(0, 15, 0, 0))[ FD ]
Line_25 $$ final JLabel descriptionLabel = new JLabel(normalizedDesc)-->Line_29 $$ panel.add(descriptionLabel, BorderLayout.EAST)[ FD ]
Line_8 $$ if (value instanceof ChooseByNameItem) -->Line_12 $$ actionLabel.setBackground(bg)[ CD ]
Line_6 $$ final Color bg = isSelected ? UIUtil.getListSelectionBackground() : UIUtil.getListBackground()-->Line_12 $$ actionLabel.setBackground(bg)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) -->Line_8 $$ if (value instanceof ChooseByNameItem) [ CD ]
Line_18 $$ if (description != null) -->Line_20 $$ if (description.length() > MAX_DESC_LENGTH) [ CD ]
Line_3 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_37 $$ panel.add(actionLabel, BorderLayout.WEST)[ FD ]
Line_11 $$ final JLabel actionLabel = new JLabel(item.getName(), null, LEFT)-->Line_37 $$ panel.add(actionLabel, BorderLayout.WEST)[ FD ]
Line_11 $$ final JLabel actionLabel = new JLabel(item.getName(), null, LEFT)-->Line_13 $$ actionLabel.setForeground(fg)[ FD ]
Line_8 $$ if (value instanceof ChooseByNameItem) -->Line_15 $$ actionLabel.setBorder(BorderFactory.createEmptyBorder(0, 4, 0, 0))[ CD ]
Line_8 $$ if (value instanceof ChooseByNameItem) -->Line_14 $$ actionLabel.setFont(actionLabel.getFont().deriveFont(Font.BOLD))[ CD ]
Line_20 $$ if (description.length() > MAX_DESC_LENGTH) -->Line_23 $$ normalizedDesc = description[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) -->Line_8 $$ if (value instanceof ChooseByNameItem) [ FD ]
Line_11 $$ final JLabel actionLabel = new JLabel(item.getName(), null, LEFT)-->Line_12 $$ actionLabel.setBackground(bg)[ FD ]
Line_11 $$ final JLabel actionLabel = new JLabel(item.getName(), null, LEFT)-->Line_14 $$ actionLabel.setFont(actionLabel.getFont().deriveFont(Font.BOLD))[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) -->Line_3 $$ final JPanel panel = new JPanel(new BorderLayout())[ CD ]
Line_25 $$ final JLabel descriptionLabel = new JLabel(normalizedDesc)-->Line_27 $$ descriptionLabel.setForeground(fg)[ FD ]
Line_8 $$ if (value instanceof ChooseByNameItem) -->Line_36 $$ actionLabel.setBorder(BorderFactory.createEmptyBorder(0, 4, 0, 0))[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) -->Line_4 $$ panel.setOpaque(true)[ CD ]
Line_18 $$ if (description != null) -->Line_19 $$ final String normalizedDesc[ CD ]
Line_18 $$ if (description != null) -->Line_28 $$ descriptionLabel.setBorder(new EmptyBorder(0, 15, 0, 0))[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) -->Line_32 $$ final JLabel actionLabel = new JLabel(value.toString(), null, LEFT)[ FD ]
Line_8 $$ if (value instanceof ChooseByNameItem) -->Line_33 $$ actionLabel.setBackground(bg)[ CD ]
Line_8 $$ if (value instanceof ChooseByNameItem) -->Line_34 $$ actionLabel.setForeground(UIUtil.getListForeground())[ CD ]
Line_11 $$ final JLabel actionLabel = new JLabel(item.getName(), null, LEFT)-->Line_35 $$ actionLabel.setFont(actionLabel.getFont().deriveFont(Font.PLAIN))[ FD ]
Line_21 $$ normalizedDesc = description.substring(0, MAX_DESC_LENGTH) + ELLIPSIS_SUFFIX-->Line_23 $$ normalizedDesc = description[ FD ]
Line_11 $$ final JLabel actionLabel = new JLabel(item.getName(), null, LEFT)-->Line_36 $$ actionLabel.setBorder(BorderFactory.createEmptyBorder(0, 4, 0, 0))[ FD ]
Line_11 $$ final JLabel actionLabel = new JLabel(item.getName(), null, LEFT)-->Line_16 $$ panel.add(actionLabel, BorderLayout.WEST)[ FD ]
Line_10 $$ final Color fg = isSelected ? UIUtil.getListSelectionForeground() : UIUtil.getListForeground()-->Line_13 $$ actionLabel.setForeground(fg)[ FD ]
Line_20 $$ if (description.length() > MAX_DESC_LENGTH) -->Line_21 $$ normalizedDesc = description.substring(0, MAX_DESC_LENGTH) + ELLIPSIS_SUFFIX[ CD ]
Line_6 $$ final Color bg = isSelected ? UIUtil.getListSelectionBackground() : UIUtil.getListBackground()-->Line_26 $$ descriptionLabel.setBackground(bg)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) -->Line_39 $$ return panel[ CD ]
Line_3 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_5 $$ panel.setBorder(new EmptyBorder(0, 0, 0, 5))[ FD ]
Line_25 $$ final JLabel descriptionLabel = new JLabel(normalizedDesc)-->Line_26 $$ descriptionLabel.setBackground(bg)[ FD ]
Line_8 $$ if (value instanceof ChooseByNameItem) -->Line_13 $$ actionLabel.setForeground(fg)[ CD ]
Line_18 $$ if (description != null) -->Line_29 $$ panel.add(descriptionLabel, BorderLayout.EAST)[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) -->Line_6 $$ final Color bg = isSelected ? UIUtil.getListSelectionBackground() : UIUtil.getListBackground()[ CD ]
Line_11 $$ final JLabel actionLabel = new JLabel(item.getName(), null, LEFT)-->Line_33 $$ actionLabel.setBackground(bg)[ FD ]
Line_8 $$ if (value instanceof ChooseByNameItem) -->Line_16 $$ panel.add(actionLabel, BorderLayout.WEST)[ CD ]
Line_8 $$ if (value instanceof ChooseByNameItem) -->Line_18 $$ if (description != null) [ CD ]
Line_3 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_7 $$ panel.setBackground(bg)[ FD ]
Line_9 $$ final ChooseByNameItem item = (ChooseByNameItem) value-->Line_11 $$ final JLabel actionLabel = new JLabel(item.getName(), null, LEFT)[ FD ]
Line_10 $$ final Color fg = isSelected ? UIUtil.getListSelectionForeground() : UIUtil.getListForeground()-->Line_27 $$ descriptionLabel.setForeground(fg)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) -->Line_5 $$ panel.setBorder(new EmptyBorder(0, 0, 0, 5))[ CD ]
Line_8 $$ if (value instanceof ChooseByNameItem) -->Line_37 $$ panel.add(actionLabel, BorderLayout.WEST)[ CD ]
Line_6 $$ final Color bg = isSelected ? UIUtil.getListSelectionBackground() : UIUtil.getListBackground()-->Line_7 $$ panel.setBackground(bg)[ FD ]
