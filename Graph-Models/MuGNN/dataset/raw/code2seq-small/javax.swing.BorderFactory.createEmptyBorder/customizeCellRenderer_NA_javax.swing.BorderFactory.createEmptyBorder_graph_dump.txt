Line_8 $$ SimpleTextAttributes attributes = null-->Line_34 $$ attributes = new SimpleTextAttributes(Font.PLAIN, color)[ FD ]
Line_2 $$ protected void customizeCellRenderer(final JList list, final Object value, final int index, final boolean selected, final boolean hasFocus) -->Line_11 $$ if (value instanceof NodeDescriptor) [ CD ]
Line_2 $$ protected void customizeCellRenderer(final JList list, final Object value, final int index, final boolean selected, final boolean hasFocus) -->Line_11 $$ if (value instanceof NodeDescriptor) [ FD ]
Line_22 $$ final TextAttributes textAttributes = EditorColorsManager.getInstance().getGlobalScheme().getAttributes(attributesKey)-->Line_23 $$ if (textAttributes != null)[ FD ]
Line_8 $$ SimpleTextAttributes attributes = null-->Line_33 $$ if (attributes == null)[ FD ]
Line_24 $$ attributes = SimpleTextAttributes.fromTextAttributes(textAttributes)-->Line_34 $$ attributes = new SimpleTextAttributes(Font.PLAIN, color)[ FD ]
Line_14 $$ final Color elementColor = descriptor.getColor()-->Line_16 $$ color = elementColor[ FD ]
Line_8 $$ SimpleTextAttributes attributes = null-->Line_24 $$ attributes = SimpleTextAttributes.fromTextAttributes(textAttributes)[ FD ]
Line_9 $$ String locationString = null-->Line_26 $$ locationString = treeNode.getLocationString()[ FD ]
Line_18 $$ if (descriptor instanceof AbstractTreeNode) -->Line_27 $$ final PresentationData presentation = treeNode.getPresentation()[ CD ]
Line_3 $$ if (UIUtil.isUnderGTKLookAndFeel()) -->Line_4 $$ final Color background = selected ? UIUtil.getTreeSelectionBackground() : UIUtil.getTreeTextBackground()[ CD ]
Line_37 $$ JList list1 = myCommanderPanel.getList()-->Line_38 $$ if (list1 != null) [ FD ]
Line_24 $$ attributes = SimpleTextAttributes.fromTextAttributes(textAttributes)-->Line_42 $$ append(text != null ? text : "", attributes)[ FD ]
Line_2 $$ protected void customizeCellRenderer(final JList list, final Object value, final int index, final boolean selected, final boolean hasFocus) -->Line_33 $$ if (attributes == null)[ CD ]
Line_12 $$ final NodeDescriptor descriptor = (NodeDescriptor) value-->Line_13 $$ setIcon(descriptor.getIcon())[ FD ]
Line_21 $$ if (attributesKey != null) -->Line_22 $$ final TextAttributes textAttributes = EditorColorsManager.getInstance().getGlobalScheme().getAttributes(attributesKey)[ CD ]
Line_24 $$ attributes = SimpleTextAttributes.fromTextAttributes(textAttributes)-->Line_39 $$ SpeedSearchUtil.appendFragmentsForSpeedSearch(list1, text, attributes, selected, this)[ FD ]
Line_36 $$ if (myCommanderPanel.isEnableSearchHighlighting()) -->Line_37 $$ JList list1 = myCommanderPanel.getList()[ CD ]
Line_4 $$ final Color background = selected ? UIUtil.getTreeSelectionBackground() : UIUtil.getTreeTextBackground()-->Line_5 $$ UIUtil.changeBackGround(this, background)[ FD ]
Line_12 $$ final NodeDescriptor descriptor = (NodeDescriptor) value-->Line_14 $$ final Color elementColor = descriptor.getColor()[ FD ]
Line_19 $$ final AbstractTreeNode treeNode = (AbstractTreeNode) descriptor-->Line_26 $$ locationString = treeNode.getLocationString()[ FD ]
Line_19 $$ final AbstractTreeNode treeNode = (AbstractTreeNode) descriptor-->Line_27 $$ final PresentationData presentation = treeNode.getPresentation()[ FD ]
Line_24 $$ attributes = SimpleTextAttributes.fromTextAttributes(textAttributes)-->Line_33 $$ if (attributes == null)[ FD ]
Line_12 $$ final NodeDescriptor descriptor = (NodeDescriptor) value-->Line_18 $$ if (descriptor instanceof AbstractTreeNode) [ FD ]
Line_18 $$ if (descriptor instanceof AbstractTreeNode) -->Line_21 $$ if (attributesKey != null) [ CD ]
Line_2 $$ protected void customizeCellRenderer(final JList list, final Object value, final int index, final boolean selected, final boolean hasFocus) -->Line_9 $$ String locationString = null[ CD ]
Line_22 $$ final TextAttributes textAttributes = EditorColorsManager.getInstance().getGlobalScheme().getAttributes(attributesKey)-->Line_24 $$ attributes = SimpleTextAttributes.fromTextAttributes(textAttributes)[ FD ]
Line_20 $$ final TextAttributesKey attributesKey = treeNode.getAttributesKey()-->Line_21 $$ if (attributesKey != null) [ FD ]
Line_18 $$ if (descriptor instanceof AbstractTreeNode) -->Line_28 $$ if (presentation.hasSeparatorAbove() && !selected) [ CD ]
Line_3 $$ if (UIUtil.isUnderGTKLookAndFeel()) -->Line_5 $$ UIUtil.changeBackGround(this, background)[ CD ]
Line_37 $$ JList list1 = myCommanderPanel.getList()-->Line_39 $$ SpeedSearchUtil.appendFragmentsForSpeedSearch(list1, text, attributes, selected, this)[ FD ]
Line_15 $$ if (elementColor != null) -->Line_16 $$ color = elementColor[ CD ]
Line_19 $$ final AbstractTreeNode treeNode = (AbstractTreeNode) descriptor-->Line_20 $$ final TextAttributesKey attributesKey = treeNode.getAttributesKey()[ FD ]
Line_2 $$ protected void customizeCellRenderer(final JList list, final Object value, final int index, final boolean selected, final boolean hasFocus) -->Line_10 $$ setBorder(BorderFactory.createEmptyBorder(1, 0, 1, 0))[ CD ]
Line_20 $$ final TextAttributesKey attributesKey = treeNode.getAttributesKey()-->Line_22 $$ final TextAttributes textAttributes = EditorColorsManager.getInstance().getGlobalScheme().getAttributes(attributesKey)[ FD ]
Line_9 $$ String locationString = null-->Line_44 $$ if (locationString != null && locationString.length() > 0) [ FD ]
Line_34 $$ attributes = new SimpleTextAttributes(Font.PLAIN, color)-->Line_39 $$ SpeedSearchUtil.appendFragmentsForSpeedSearch(list1, text, attributes, selected, this)[ FD ]
Line_11 $$ if (value instanceof NodeDescriptor) -->Line_13 $$ setIcon(descriptor.getIcon())[ CD ]
Line_35 $$ final String text = value.toString()-->Line_39 $$ SpeedSearchUtil.appendFragmentsForSpeedSearch(list1, text, attributes, selected, this)[ FD ]
Line_18 $$ if (descriptor instanceof AbstractTreeNode) -->Line_19 $$ final AbstractTreeNode treeNode = (AbstractTreeNode) descriptor[ CD ]
Line_8 $$ SimpleTextAttributes attributes = null-->Line_39 $$ SpeedSearchUtil.appendFragmentsForSpeedSearch(list1, text, attributes, selected, this)[ FD ]
Line_2 $$ protected void customizeCellRenderer(final JList list, final Object value, final int index, final boolean selected, final boolean hasFocus) -->Line_7 $$ Color color = UIUtil.getListForeground()[ CD ]
Line_8 $$ SimpleTextAttributes attributes = null-->Line_42 $$ append(text != null ? text : "", attributes)[ FD ]
Line_2 $$ protected void customizeCellRenderer(final JList list, final Object value, final int index, final boolean selected, final boolean hasFocus) -->Line_3 $$ if (UIUtil.isUnderGTKLookAndFeel()) [ CD ]
Line_2 $$ protected void customizeCellRenderer(final JList list, final Object value, final int index, final boolean selected, final boolean hasFocus) -->Line_36 $$ if (myCommanderPanel.isEnableSearchHighlighting()) [ CD ]
Line_2 $$ protected void customizeCellRenderer(final JList list, final Object value, final int index, final boolean selected, final boolean hasFocus) -->Line_35 $$ final String text = value.toString()[ FD ]
Line_18 $$ if (descriptor instanceof AbstractTreeNode) -->Line_20 $$ final TextAttributesKey attributesKey = treeNode.getAttributesKey()[ CD ]
Line_7 $$ Color color = UIUtil.getListForeground()-->Line_16 $$ color = elementColor[ FD ]
Line_27 $$ final PresentationData presentation = treeNode.getPresentation()-->Line_28 $$ if (presentation.hasSeparatorAbove() && !selected) [ FD ]
Line_14 $$ final Color elementColor = descriptor.getColor()-->Line_15 $$ if (elementColor != null) [ FD ]
Line_2 $$ protected void customizeCellRenderer(final JList list, final Object value, final int index, final boolean selected, final boolean hasFocus) -->Line_35 $$ final String text = value.toString()[ CD ]
Line_11 $$ if (value instanceof NodeDescriptor) -->Line_18 $$ if (descriptor instanceof AbstractTreeNode) [ CD ]
Line_2 $$ protected void customizeCellRenderer(final JList list, final Object value, final int index, final boolean selected, final boolean hasFocus) -->Line_8 $$ SimpleTextAttributes attributes = null[ CD ]
Line_38 $$ if (list1 != null) -->Line_39 $$ SpeedSearchUtil.appendFragmentsForSpeedSearch(list1, text, attributes, selected, this)[ CD ]
Line_11 $$ if (value instanceof NodeDescriptor) -->Line_14 $$ final Color elementColor = descriptor.getColor()[ CD ]
Line_23 $$ if (textAttributes != null)-->Line_24 $$ attributes = SimpleTextAttributes.fromTextAttributes(textAttributes)[ CD ]
Line_44 $$ if (locationString != null && locationString.length() > 0) -->Line_45 $$ append(" (" + locationString + ")", SimpleTextAttributes.GRAY_ATTRIBUTES)[ CD ]
Line_34 $$ attributes = new SimpleTextAttributes(Font.PLAIN, color)-->Line_42 $$ append(text != null ? text : "", attributes)[ FD ]
Line_18 $$ if (descriptor instanceof AbstractTreeNode) -->Line_26 $$ locationString = treeNode.getLocationString()[ CD ]
Line_11 $$ if (value instanceof NodeDescriptor) -->Line_12 $$ final NodeDescriptor descriptor = (NodeDescriptor) value[ CD ]
Line_11 $$ if (value instanceof NodeDescriptor) -->Line_15 $$ if (elementColor != null) [ CD ]
Line_21 $$ if (attributesKey != null) -->Line_23 $$ if (textAttributes != null)[ CD ]
Line_36 $$ if (myCommanderPanel.isEnableSearchHighlighting()) -->Line_38 $$ if (list1 != null) [ CD ]
Line_33 $$ if (attributes == null)-->Line_34 $$ attributes = new SimpleTextAttributes(Font.PLAIN, color)[ CD ]
Line_36 $$ if (myCommanderPanel.isEnableSearchHighlighting()) -->Line_42 $$ append(text != null ? text : "", attributes)[ CD ]
Line_2 $$ protected void customizeCellRenderer(final JList list, final Object value, final int index, final boolean selected, final boolean hasFocus) -->Line_44 $$ if (locationString != null && locationString.length() > 0) [ CD ]
Line_2 $$ protected void customizeCellRenderer(final JList list, final Object value, final int index, final boolean selected, final boolean hasFocus) -->Line_39 $$ SpeedSearchUtil.appendFragmentsForSpeedSearch(list1, text, attributes, selected, this)[ FD ]
Line_28 $$ if (presentation.hasSeparatorAbove() && !selected) -->Line_29 $$ setBorder(BorderFactory.createCompoundBorder(BorderFactory.createMatteBorder(1, 0, 0, 0, GroupedElementsRenderer.POPUP_SEPARATOR_FOREGROUND), BorderFactory.createEmptyBorder(0, 0, 1, 0)))[ CD ]
Line_2 $$ protected void customizeCellRenderer(final JList list, final Object value, final int index, final boolean selected, final boolean hasFocus) -->Line_28 $$ if (presentation.hasSeparatorAbove() && !selected) [ FD ]
Line_26 $$ locationString = treeNode.getLocationString()-->Line_44 $$ if (locationString != null && locationString.length() > 0) [ FD ]
