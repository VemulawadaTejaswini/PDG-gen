Line_2 $$ public JPanel createComponentImpl() -->Line_3 $$ final Module module = getModule()[ CD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_44 $$ if (innerPanel != null) [ CD ]
Line_4 $$ final Project project = module.getProject()-->Line_27 $$ myRootTreeEditor = createContentEntryTreeEditor(project)[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_43 $$ final JPanel innerPanel = createBottomControl(module)[ CD ]
Line_50 $$ if (contentEntries.length > 0) -->Line_54 $$ selectContentEntry(contentEntries[0].getUrl())[ CD ]
Line_11 $$ final JPanel entriesPanel = new JPanel(new BorderLayout())-->Line_23 $$ entriesPanel.add(toolbarPanel, BorderLayout.CENTER)[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_15 $$ group.add(action)[ CD ]
Line_6 $$ final JPanel mainPanel = new JPanel(new BorderLayout())-->Line_8 $$ mainPanel.setBorder(BorderFactory.createEmptyBorder(6, 6, 6, 6))[ FD ]
Line_24 $$ final JBSplitter splitter = Registry.is("ide.new.project.settings") ? new OnePixelSplitter(false) : new JBSplitter(false)-->Line_26 $$ splitter.setHonorComponentsMinimumSize(true)[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_19 $$ final ToolbarPanel toolbarPanel = new ToolbarPanel(myScrollPane, group)[ CD ]
Line_28 $$ final JComponent component = myRootTreeEditor.createComponent()-->Line_30 $$ component.setBorder(new CustomLineBorder(1, 0, 0, 0))[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_27 $$ myRootTreeEditor = createContentEntryTreeEditor(project)[ CD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_18 $$ JScrollPane myScrollPane = ScrollPaneFactory.createScrollPane(myEditorsPanel, Registry.is("ide.new.project.settings"))[ CD ]
Line_24 $$ final JBSplitter splitter = Registry.is("ide.new.project.settings") ? new OnePixelSplitter(false) : new JBSplitter(false)-->Line_25 $$ splitter.setProportion(0.6f)[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_29 $$ if (Registry.is("ide.new.project.settings")) [ CD ]
Line_6 $$ final JPanel mainPanel = new JPanel(new BorderLayout())-->Line_14 $$ action.registerCustomShortcutSet(KeyEvent.VK_C, InputEvent.ALT_DOWN_MASK, mainPanel)[ FD ]
Line_20 $$ if (Registry.is("ide.new.project.settings")) -->Line_21 $$ toolbarPanel.setBorder(new CustomLineBorder(1, 0, 0, 0))[ CD ]
Line_24 $$ final JBSplitter splitter = Registry.is("ide.new.project.settings") ? new OnePixelSplitter(false) : new JBSplitter(false)-->Line_32 $$ splitter.setFirstComponent(component)[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_38 $$ final ActionToolbar actionToolbar = ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN, myRootTreeEditor.getEditingActionsGroup(), true)[ CD ]
Line_34 $$ JPanel contentPanel = new JPanel(new GridBagLayout())-->Line_41 $$ contentPanel.add(splitter, new GridBagConstraints(0, GridBagConstraints.RELATIVE, 2, 1, 1.0, 1.0, GridBagConstraints.WEST, GridBagConstraints.BOTH, new Insets(0, 0, 0, 0), 0, 0))[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_10 $$ addAdditionalSettingsToPanel(mainPanel)[ CD ]
Line_34 $$ JPanel contentPanel = new JPanel(new GridBagLayout())-->Line_40 $$ contentPanel.add(actionToolbar.getComponent(), new GridBagConstraints(1, 0, 1, 1, 1.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL, new Insets(0, 0, 0, 0), 0, 0))[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_7 $$ if (!Registry.is("ide.new.project.settings")) [ CD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_4 $$ final Project project = module.getProject()[ CD ]
Line_12 $$ final DefaultActionGroup group = new DefaultActionGroup()-->Line_15 $$ group.add(action)[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_25 $$ splitter.setProportion(0.6f)[ CD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_14 $$ action.registerCustomShortcutSet(KeyEvent.VK_C, InputEvent.ALT_DOWN_MASK, mainPanel)[ CD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_12 $$ final DefaultActionGroup group = new DefaultActionGroup()[ CD ]
Line_35 $$ if (!Registry.is("ide.new.project.settings")) -->Line_36 $$ contentPanel.setBorder(BorderFactory.createEtchedBorder())[ CD ]
Line_34 $$ JPanel contentPanel = new JPanel(new GridBagLayout())-->Line_42 $$ mainPanel.add(contentPanel, BorderLayout.CENTER)[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_33 $$ splitter.setSecondComponent(entriesPanel)[ CD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_47 $$ final ModifiableRootModel model = getModel()[ CD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_24 $$ final JBSplitter splitter = Registry.is("ide.new.project.settings") ? new OnePixelSplitter(false) : new JBSplitter(false)[ CD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_41 $$ contentPanel.add(splitter, new GridBagConstraints(0, GridBagConstraints.RELATIVE, 2, 1, 1.0, 1.0, GridBagConstraints.WEST, GridBagConstraints.BOTH, new Insets(0, 0, 0, 0), 0, 0))[ CD ]
Line_48 $$ if (model != null) -->Line_50 $$ if (contentEntries.length > 0) [ CD ]
Line_28 $$ final JComponent component = myRootTreeEditor.createComponent()-->Line_32 $$ splitter.setFirstComponent(component)[ FD ]
Line_13 $$ final AddContentEntryAction action = new AddContentEntryAction()-->Line_14 $$ action.registerCustomShortcutSet(KeyEvent.VK_C, InputEvent.ALT_DOWN_MASK, mainPanel)[ FD ]
Line_38 $$ final ActionToolbar actionToolbar = ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN, myRootTreeEditor.getEditingActionsGroup(), true)-->Line_40 $$ contentPanel.add(actionToolbar.getComponent(), new GridBagConstraints(1, 0, 1, 1, 1.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL, new Insets(0, 0, 0, 0), 0, 0))[ FD ]
Line_13 $$ final AddContentEntryAction action = new AddContentEntryAction()-->Line_15 $$ group.add(action)[ FD ]
Line_34 $$ JPanel contentPanel = new JPanel(new GridBagLayout())-->Line_39 $$ contentPanel.add(new JLabel("Mark as:"), new GridBagConstraints(0, 0, 1, 1, 0, 0, GridBagConstraints.WEST, 0, new Insets(0, 10, 0, 10), 0, 0))[ FD ]
Line_3 $$ final Module module = getModule()-->Line_43 $$ final JPanel innerPanel = createBottomControl(module)[ FD ]
Line_6 $$ final JPanel mainPanel = new JPanel(new BorderLayout())-->Line_45 $$ mainPanel.add(innerPanel, BorderLayout.SOUTH)[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_39 $$ contentPanel.add(new JLabel("Mark as:"), new GridBagConstraints(0, 0, 1, 1, 0, 0, GridBagConstraints.WEST, 0, new Insets(0, 10, 0, 10), 0, 0))[ CD ]
Line_19 $$ final ToolbarPanel toolbarPanel = new ToolbarPanel(myScrollPane, group)-->Line_21 $$ toolbarPanel.setBorder(new CustomLineBorder(1, 0, 0, 0))[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_26 $$ splitter.setHonorComponentsMinimumSize(true)[ CD ]
Line_11 $$ final JPanel entriesPanel = new JPanel(new BorderLayout())-->Line_33 $$ splitter.setSecondComponent(entriesPanel)[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_42 $$ mainPanel.add(contentPanel, BorderLayout.CENTER)[ CD ]
Line_7 $$ if (!Registry.is("ide.new.project.settings")) -->Line_8 $$ mainPanel.setBorder(BorderFactory.createEmptyBorder(6, 6, 6, 6))[ CD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_17 $$ myEditorsPanel.setBackground(BACKGROUND_COLOR)[ CD ]
Line_19 $$ final ToolbarPanel toolbarPanel = new ToolbarPanel(myScrollPane, group)-->Line_23 $$ entriesPanel.add(toolbarPanel, BorderLayout.CENTER)[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_28 $$ final JComponent component = myRootTreeEditor.createComponent()[ CD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_11 $$ final JPanel entriesPanel = new JPanel(new BorderLayout())[ CD ]
Line_34 $$ JPanel contentPanel = new JPanel(new GridBagLayout())-->Line_36 $$ contentPanel.setBorder(BorderFactory.createEtchedBorder())[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_57 $$ return mainPanel[ CD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_35 $$ if (!Registry.is("ide.new.project.settings")) [ CD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_6 $$ final JPanel mainPanel = new JPanel(new BorderLayout())[ CD ]
Line_6 $$ final JPanel mainPanel = new JPanel(new BorderLayout())-->Line_42 $$ mainPanel.add(contentPanel, BorderLayout.CENTER)[ FD ]
Line_29 $$ if (Registry.is("ide.new.project.settings")) -->Line_30 $$ component.setBorder(new CustomLineBorder(1, 0, 0, 0))[ CD ]
Line_24 $$ final JBSplitter splitter = Registry.is("ide.new.project.settings") ? new OnePixelSplitter(false) : new JBSplitter(false)-->Line_41 $$ contentPanel.add(splitter, new GridBagConstraints(0, GridBagConstraints.RELATIVE, 2, 1, 1.0, 1.0, GridBagConstraints.WEST, GridBagConstraints.BOTH, new Insets(0, 0, 0, 0), 0, 0))[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_23 $$ entriesPanel.add(toolbarPanel, BorderLayout.CENTER)[ CD ]
Line_3 $$ final Module module = getModule()-->Line_4 $$ final Project project = module.getProject()[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_34 $$ JPanel contentPanel = new JPanel(new GridBagLayout())[ CD ]
Line_24 $$ final JBSplitter splitter = Registry.is("ide.new.project.settings") ? new OnePixelSplitter(false) : new JBSplitter(false)-->Line_33 $$ splitter.setSecondComponent(entriesPanel)[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_40 $$ contentPanel.add(actionToolbar.getComponent(), new GridBagConstraints(1, 0, 1, 1, 1.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL, new Insets(0, 0, 0, 0), 0, 0))[ CD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_32 $$ splitter.setFirstComponent(component)[ CD ]
Line_48 $$ if (model != null) -->Line_49 $$ final ContentEntry[] contentEntries = model.getContentEntries()[ CD ]
Line_47 $$ final ModifiableRootModel model = getModel()-->Line_49 $$ final ContentEntry[] contentEntries = model.getContentEntries()[ FD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_48 $$ if (model != null) [ CD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_20 $$ if (Registry.is("ide.new.project.settings")) [ CD ]
Line_2 $$ public JPanel createComponentImpl() -->Line_13 $$ final AddContentEntryAction action = new AddContentEntryAction()[ CD ]
Line_44 $$ if (innerPanel != null) -->Line_45 $$ mainPanel.add(innerPanel, BorderLayout.SOUTH)[ CD ]
Line_43 $$ final JPanel innerPanel = createBottomControl(module)-->Line_45 $$ mainPanel.add(innerPanel, BorderLayout.SOUTH)[ FD ]
Line_47 $$ final ModifiableRootModel model = getModel()-->Line_48 $$ if (model != null) [ FD ]
Line_43 $$ final JPanel innerPanel = createBottomControl(module)-->Line_44 $$ if (innerPanel != null) [ FD ]
Line_51 $$ for (final ContentEntry contentEntry : contentEntries) -->Line_52 $$ addContentEntryPanel(contentEntry.getUrl())[ FD ]
Line_6 $$ final JPanel mainPanel = new JPanel(new BorderLayout())-->Line_10 $$ addAdditionalSettingsToPanel(mainPanel)[ FD ]
