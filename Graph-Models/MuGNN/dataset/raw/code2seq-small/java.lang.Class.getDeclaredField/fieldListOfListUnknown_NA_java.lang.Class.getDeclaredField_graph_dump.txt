Line_2 $$ public void fieldListOfListUnknown() throws Exception -->Line_7 $$ assertNull(typeDescriptor.getElementTypeDescriptor().getElementTypeDescriptor())[ CD ]
Line_3 $$ TypeDescriptor typeDescriptor = new TypeDescriptor(TypeDescriptorTests.class.getDeclaredField("listOfListOfUnknown"))-->Line_8 $$ assertEquals("java.util.List<java.util.List<?>>", typeDescriptor.toString())[ FD ]
Line_3 $$ TypeDescriptor typeDescriptor = new TypeDescriptor(TypeDescriptorTests.class.getDeclaredField("listOfListOfUnknown"))-->Line_4 $$ assertFalse(typeDescriptor.isArray())[ FD ]
Line_3 $$ TypeDescriptor typeDescriptor = new TypeDescriptor(TypeDescriptorTests.class.getDeclaredField("listOfListOfUnknown"))-->Line_5 $$ assertEquals(List.class, typeDescriptor.getType())[ FD ]
Line_2 $$ public void fieldListOfListUnknown() throws Exception -->Line_6 $$ assertEquals(List.class, typeDescriptor.getElementTypeDescriptor().getType())[ CD ]
Line_3 $$ TypeDescriptor typeDescriptor = new TypeDescriptor(TypeDescriptorTests.class.getDeclaredField("listOfListOfUnknown"))-->Line_6 $$ assertEquals(List.class, typeDescriptor.getElementTypeDescriptor().getType())[ FD ]
Line_2 $$ public void fieldListOfListUnknown() throws Exception -->Line_8 $$ assertEquals("java.util.List<java.util.List<?>>", typeDescriptor.toString())[ CD ]
Line_3 $$ TypeDescriptor typeDescriptor = new TypeDescriptor(TypeDescriptorTests.class.getDeclaredField("listOfListOfUnknown"))-->Line_7 $$ assertNull(typeDescriptor.getElementTypeDescriptor().getElementTypeDescriptor())[ FD ]
Line_2 $$ public void fieldListOfListUnknown() throws Exception -->Line_5 $$ assertEquals(List.class, typeDescriptor.getType())[ CD ]
Line_2 $$ public void fieldListOfListUnknown() throws Exception -->Line_3 $$ TypeDescriptor typeDescriptor = new TypeDescriptor(TypeDescriptorTests.class.getDeclaredField("listOfListOfUnknown"))[ CD ]
Line_2 $$ public void fieldListOfListUnknown() throws Exception -->Line_4 $$ assertFalse(typeDescriptor.isArray())[ CD ]
