Line_16 $$ value = fcs.convert(5, descriptor, TypeDescriptor.valueOf(String.class))-->Line_17 $$ assertEquals(":5", value)[ FD ]
Line_3 $$ FormattingConversionServiceFactoryBean factory = new FormattingConversionServiceFactoryBean()-->Line_9 $$ FormattingConversionService fcs = factory.getObject()[ FD ]
Line_14 $$ Object value = fcs.convert(":5", TypeDescriptor.valueOf(String.class), descriptor)-->Line_15 $$ assertEquals(5, value)[ FD ]
Line_10 $$ TestBean testBean = fcs.convert("5", TestBean.class)-->Line_11 $$ assertEquals(5, testBean.getSpecialInt())[ FD ]
Line_2 $$ public void testCustomFormatter() throws Exception -->Line_5 $$ formatters.add(new TestBeanFormatter())[ CD ]
Line_14 $$ Object value = fcs.convert(":5", TypeDescriptor.valueOf(String.class), descriptor)-->Line_16 $$ value = fcs.convert(5, descriptor, TypeDescriptor.valueOf(String.class))[ FD ]
Line_2 $$ public void testCustomFormatter() throws Exception -->Line_10 $$ TestBean testBean = fcs.convert("5", TestBean.class)[ CD ]
Line_2 $$ public void testCustomFormatter() throws Exception -->Line_6 $$ formatters.add(new SpecialIntAnnotationFormatterFactory())[ CD ]
Line_9 $$ FormattingConversionService fcs = factory.getObject()-->Line_10 $$ TestBean testBean = fcs.convert("5", TestBean.class)[ FD ]
Line_3 $$ FormattingConversionServiceFactoryBean factory = new FormattingConversionServiceFactoryBean()-->Line_8 $$ factory.afterPropertiesSet()[ FD ]
Line_2 $$ public void testCustomFormatter() throws Exception -->Line_9 $$ FormattingConversionService fcs = factory.getObject()[ CD ]
Line_4 $$ Set<Object> formatters = new HashSet<Object>()-->Line_7 $$ factory.setFormatters(formatters)[ FD ]
Line_10 $$ TestBean testBean = fcs.convert("5", TestBean.class)-->Line_12 $$ assertEquals("5", fcs.convert(testBean, String.class))[ FD ]
Line_9 $$ FormattingConversionService fcs = factory.getObject()-->Line_16 $$ value = fcs.convert(5, descriptor, TypeDescriptor.valueOf(String.class))[ FD ]
Line_13 $$ TypeDescriptor descriptor = new TypeDescriptor(TestBean.class.getDeclaredField("specialInt"))-->Line_16 $$ value = fcs.convert(5, descriptor, TypeDescriptor.valueOf(String.class))[ FD ]
Line_2 $$ public void testCustomFormatter() throws Exception -->Line_12 $$ assertEquals("5", fcs.convert(testBean, String.class))[ CD ]
Line_2 $$ public void testCustomFormatter() throws Exception -->Line_15 $$ assertEquals(5, value)[ CD ]
Line_2 $$ public void testCustomFormatter() throws Exception -->Line_11 $$ assertEquals(5, testBean.getSpecialInt())[ CD ]
Line_4 $$ Set<Object> formatters = new HashSet<Object>()-->Line_5 $$ formatters.add(new TestBeanFormatter())[ FD ]
Line_2 $$ public void testCustomFormatter() throws Exception -->Line_8 $$ factory.afterPropertiesSet()[ CD ]
Line_2 $$ public void testCustomFormatter() throws Exception -->Line_17 $$ assertEquals(":5", value)[ CD ]
Line_4 $$ Set<Object> formatters = new HashSet<Object>()-->Line_6 $$ formatters.add(new SpecialIntAnnotationFormatterFactory())[ FD ]
Line_9 $$ FormattingConversionService fcs = factory.getObject()-->Line_12 $$ assertEquals("5", fcs.convert(testBean, String.class))[ FD ]
Line_2 $$ public void testCustomFormatter() throws Exception -->Line_13 $$ TypeDescriptor descriptor = new TypeDescriptor(TestBean.class.getDeclaredField("specialInt"))[ CD ]
Line_2 $$ public void testCustomFormatter() throws Exception -->Line_16 $$ value = fcs.convert(5, descriptor, TypeDescriptor.valueOf(String.class))[ CD ]
Line_2 $$ public void testCustomFormatter() throws Exception -->Line_14 $$ Object value = fcs.convert(":5", TypeDescriptor.valueOf(String.class), descriptor)[ CD ]
Line_9 $$ FormattingConversionService fcs = factory.getObject()-->Line_14 $$ Object value = fcs.convert(":5", TypeDescriptor.valueOf(String.class), descriptor)[ FD ]
Line_14 $$ Object value = fcs.convert(":5", TypeDescriptor.valueOf(String.class), descriptor)-->Line_17 $$ assertEquals(":5", value)[ FD ]
Line_3 $$ FormattingConversionServiceFactoryBean factory = new FormattingConversionServiceFactoryBean()-->Line_7 $$ factory.setFormatters(formatters)[ FD ]
Line_2 $$ public void testCustomFormatter() throws Exception -->Line_4 $$ Set<Object> formatters = new HashSet<Object>()[ CD ]
Line_13 $$ TypeDescriptor descriptor = new TypeDescriptor(TestBean.class.getDeclaredField("specialInt"))-->Line_14 $$ Object value = fcs.convert(":5", TypeDescriptor.valueOf(String.class), descriptor)[ FD ]
Line_2 $$ public void testCustomFormatter() throws Exception -->Line_3 $$ FormattingConversionServiceFactoryBean factory = new FormattingConversionServiceFactoryBean()[ CD ]
Line_2 $$ public void testCustomFormatter() throws Exception -->Line_7 $$ factory.setFormatters(formatters)[ CD ]
