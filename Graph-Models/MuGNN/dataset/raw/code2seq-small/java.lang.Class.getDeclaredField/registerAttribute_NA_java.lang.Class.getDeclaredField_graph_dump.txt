Line_14 $$ final Field field = allowNonDeclaredFieldReference ? metamodelClass.getField(name) : metamodelClass.getDeclaredField(name)-->Line_32 $$ LOG.illegalArgumentOnStaticMetamodelFieldInjection(metamodelClass.getName(), name, attribute.getClass().getName(), field.getType().getName())[ FD ]
Line_2 $$ private <X> void registerAttribute(Class metamodelClass, Attribute<X, ?> attribute) -->Line_18 $$ field.set(null, attribute)[ FD ]
Line_2 $$ private <X> void registerAttribute(Class metamodelClass, Attribute<X, ?> attribute) -->Line_14 $$ final Field field = allowNonDeclaredFieldReference ? metamodelClass.getField(name) : metamodelClass.getDeclaredField(name)[ FD ]
Line_3 $$ final String name = attribute.getName()-->Line_35 $$ LOG.unableToLocateStaticMetamodelField(metamodelClass.getName(), name)[ FD ]
Line_2 $$ private <X> void registerAttribute(Class metamodelClass, Attribute<X, ?> attribute) -->Line_35 $$ LOG.unableToLocateStaticMetamodelField(metamodelClass.getName(), name)[ FD ]
Line_2 $$ private <X> void registerAttribute(Class metamodelClass, Attribute<X, ?> attribute) -->Line_21 $$ throw new AssertionFailure("Unable to inject static metamodel attribute : " + metamodelClass.getName() + '#' + name, e)[ FD ]
Line_3 $$ final String name = attribute.getName()-->Line_32 $$ LOG.illegalArgumentOnStaticMetamodelFieldInjection(metamodelClass.getName(), name, attribute.getClass().getName(), field.getType().getName())[ FD ]
Line_2 $$ private <X> void registerAttribute(Class metamodelClass, Attribute<X, ?> attribute) -->Line_32 $$ LOG.illegalArgumentOnStaticMetamodelFieldInjection(metamodelClass.getName(), name, attribute.getClass().getName(), field.getType().getName())[ FD ]
Line_2 $$ private <X> void registerAttribute(Class metamodelClass, Attribute<X, ?> attribute) -->Line_3 $$ final String name = attribute.getName()[ CD ]
Line_2 $$ private <X> void registerAttribute(Class metamodelClass, Attribute<X, ?> attribute) -->Line_3 $$ final String name = attribute.getName()[ FD ]
Line_3 $$ final String name = attribute.getName()-->Line_14 $$ final Field field = allowNonDeclaredFieldReference ? metamodelClass.getField(name) : metamodelClass.getDeclaredField(name)[ FD ]
Line_14 $$ final Field field = allowNonDeclaredFieldReference ? metamodelClass.getField(name) : metamodelClass.getDeclaredField(name)-->Line_18 $$ field.set(null, attribute)[ FD ]
