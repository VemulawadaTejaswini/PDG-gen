Line_2 $$ private <X> void registerAttribute(Class metamodelClass, Attribute<X, ?> attribute) -->Line_3 $$ final String name = attribute.getName()[ FD ]
Line_3 $$ final String name = attribute.getName()-->Line_6 $$ final Field field = allowNonDeclaredFieldReference ? metamodelClass.getField(name) : metamodelClass.getDeclaredField(name)[ FD ]
Line_6 $$ final Field field = allowNonDeclaredFieldReference ? metamodelClass.getField(name) : metamodelClass.getDeclaredField(name)-->Line_9 $$ field.set(null, attribute)[ FD ]
Line_2 $$ private <X> void registerAttribute(Class metamodelClass, Attribute<X, ?> attribute) -->Line_6 $$ final Field field = allowNonDeclaredFieldReference ? metamodelClass.getField(name) : metamodelClass.getDeclaredField(name)[ FD ]
Line_2 $$ private <X> void registerAttribute(Class metamodelClass, Attribute<X, ?> attribute) -->Line_11 $$ throw new AssertionFailure("Unable to inject static metamodel attribute : " + metamodelClass.getName() + '#' + name, e)[ FD ]
Line_3 $$ final String name = attribute.getName()-->Line_16 $$ LOG.unableToLocateStaticMetamodelField(metamodelClass.getName(), name)[ FD ]
Line_2 $$ private <X> void registerAttribute(Class metamodelClass, Attribute<X, ?> attribute) -->Line_9 $$ field.set(null, attribute)[ FD ]
Line_6 $$ final Field field = allowNonDeclaredFieldReference ? metamodelClass.getField(name) : metamodelClass.getDeclaredField(name)-->Line_8 $$ field.setAccessible(true)[ FD ]
Line_2 $$ private <X> void registerAttribute(Class metamodelClass, Attribute<X, ?> attribute) -->Line_16 $$ LOG.unableToLocateStaticMetamodelField(metamodelClass.getName(), name)[ FD ]
Line_2 $$ private <X> void registerAttribute(Class metamodelClass, Attribute<X, ?> attribute) -->Line_13 $$ LOG.illegalArgumentOnStaticMetamodelFieldInjection(metamodelClass.getName(), name, attribute.getClass().getName(), field.getType().getName())[ FD ]
Line_6 $$ final Field field = allowNonDeclaredFieldReference ? metamodelClass.getField(name) : metamodelClass.getDeclaredField(name)-->Line_13 $$ LOG.illegalArgumentOnStaticMetamodelFieldInjection(metamodelClass.getName(), name, attribute.getClass().getName(), field.getType().getName())[ FD ]
Line_2 $$ private <X> void registerAttribute(Class metamodelClass, Attribute<X, ?> attribute) -->Line_3 $$ final String name = attribute.getName()[ CD ]
Line_3 $$ final String name = attribute.getName()-->Line_13 $$ LOG.illegalArgumentOnStaticMetamodelFieldInjection(metamodelClass.getName(), name, attribute.getClass().getName(), field.getType().getName())[ FD ]
Line_2 $$ private <X> void registerAttribute(Class metamodelClass, Attribute<X, ?> attribute) -->Line_5 $$ final boolean allowNonDeclaredFieldReference = attribute.getPersistentAttributeType() == Attribute.PersistentAttributeType.EMBEDDED || attribute.getDeclaringType().getPersistenceType() == Type.PersistenceType.EMBEDDABLE[ FD ]
