Line_7 $$ RootBeanDefinition person = new RootBeanDefinition(Person.class, cavs, null)-->Line_10 $$ lbf.registerBeanDefinition(JUERGEN, person)[ FD ]
Line_4 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_15 $$ assertFalse(lbf.isAutowireCandidate(JUERGEN, qualifiedDescriptor))[ FD ]
Line_7 $$ RootBeanDefinition person = new RootBeanDefinition(Person.class, cavs, null)-->Line_9 $$ person.addQualifier(new AutowireCandidateQualifier(TestQualifier.class))[ FD ]
Line_4 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_13 $$ assertFalse(lbf.isAutowireCandidate(JUERGEN, null))[ FD ]
Line_4 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_14 $$ assertFalse(lbf.isAutowireCandidate(JUERGEN, nonqualifiedDescriptor))[ FD ]
Line_11 $$ DependencyDescriptor qualifiedDescriptor = new DependencyDescriptor(QualifiedTestBean.class.getDeclaredField("qualified"), false)-->Line_15 $$ assertFalse(lbf.isAutowireCandidate(JUERGEN, qualifiedDescriptor))[ FD ]
Line_7 $$ RootBeanDefinition person = new RootBeanDefinition(Person.class, cavs, null)-->Line_8 $$ person.setAutowireCandidate(false)[ FD ]
Line_12 $$ DependencyDescriptor nonqualifiedDescriptor = new DependencyDescriptor(QualifiedTestBean.class.getDeclaredField("nonqualified"), false)-->Line_14 $$ assertFalse(lbf.isAutowireCandidate(JUERGEN, nonqualifiedDescriptor))[ FD ]
Line_5 $$ ConstructorArgumentValues cavs = new ConstructorArgumentValues()-->Line_6 $$ cavs.addGenericArgumentValue(JUERGEN)[ FD ]
Line_4 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_10 $$ lbf.registerBeanDefinition(JUERGEN, person)[ FD ]
