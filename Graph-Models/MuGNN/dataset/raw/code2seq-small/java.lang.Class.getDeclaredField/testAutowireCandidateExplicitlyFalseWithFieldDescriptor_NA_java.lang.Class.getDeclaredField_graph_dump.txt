Line_10 $$ DependencyDescriptor qualifiedDescriptor = new DependencyDescriptor(QualifiedTestBean.class.getDeclaredField("qualified"), false)-->Line_14 $$ assertFalse(lbf.isAutowireCandidate(JUERGEN, qualifiedDescriptor))[ FD ]
Line_3 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_9 $$ lbf.registerBeanDefinition(JUERGEN, person)[ FD ]
Line_2 $$ public void testAutowireCandidateExplicitlyFalseWithFieldDescriptor() throws Exception -->Line_10 $$ DependencyDescriptor qualifiedDescriptor = new DependencyDescriptor(QualifiedTestBean.class.getDeclaredField("qualified"), false)[ CD ]
Line_3 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_14 $$ assertFalse(lbf.isAutowireCandidate(JUERGEN, qualifiedDescriptor))[ FD ]
Line_2 $$ public void testAutowireCandidateExplicitlyFalseWithFieldDescriptor() throws Exception -->Line_12 $$ assertFalse(lbf.isAutowireCandidate(JUERGEN, null))[ CD ]
Line_6 $$ RootBeanDefinition person = new RootBeanDefinition(Person.class, cavs, null)-->Line_9 $$ lbf.registerBeanDefinition(JUERGEN, person)[ FD ]
Line_2 $$ public void testAutowireCandidateExplicitlyFalseWithFieldDescriptor() throws Exception -->Line_14 $$ assertFalse(lbf.isAutowireCandidate(JUERGEN, qualifiedDescriptor))[ CD ]
Line_2 $$ public void testAutowireCandidateExplicitlyFalseWithFieldDescriptor() throws Exception -->Line_4 $$ ConstructorArgumentValues cavs = new ConstructorArgumentValues()[ CD ]
Line_11 $$ DependencyDescriptor nonqualifiedDescriptor = new DependencyDescriptor(QualifiedTestBean.class.getDeclaredField("nonqualified"), false)-->Line_13 $$ assertFalse(lbf.isAutowireCandidate(JUERGEN, nonqualifiedDescriptor))[ FD ]
Line_2 $$ public void testAutowireCandidateExplicitlyFalseWithFieldDescriptor() throws Exception -->Line_11 $$ DependencyDescriptor nonqualifiedDescriptor = new DependencyDescriptor(QualifiedTestBean.class.getDeclaredField("nonqualified"), false)[ CD ]
Line_2 $$ public void testAutowireCandidateExplicitlyFalseWithFieldDescriptor() throws Exception -->Line_9 $$ lbf.registerBeanDefinition(JUERGEN, person)[ CD ]
Line_3 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_13 $$ assertFalse(lbf.isAutowireCandidate(JUERGEN, nonqualifiedDescriptor))[ FD ]
Line_2 $$ public void testAutowireCandidateExplicitlyFalseWithFieldDescriptor() throws Exception -->Line_7 $$ person.setAutowireCandidate(false)[ CD ]
Line_2 $$ public void testAutowireCandidateExplicitlyFalseWithFieldDescriptor() throws Exception -->Line_6 $$ RootBeanDefinition person = new RootBeanDefinition(Person.class, cavs, null)[ CD ]
Line_6 $$ RootBeanDefinition person = new RootBeanDefinition(Person.class, cavs, null)-->Line_7 $$ person.setAutowireCandidate(false)[ FD ]
Line_2 $$ public void testAutowireCandidateExplicitlyFalseWithFieldDescriptor() throws Exception -->Line_13 $$ assertFalse(lbf.isAutowireCandidate(JUERGEN, nonqualifiedDescriptor))[ CD ]
Line_2 $$ public void testAutowireCandidateExplicitlyFalseWithFieldDescriptor() throws Exception -->Line_5 $$ cavs.addGenericArgumentValue(JUERGEN)[ CD ]
Line_2 $$ public void testAutowireCandidateExplicitlyFalseWithFieldDescriptor() throws Exception -->Line_3 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()[ CD ]
Line_4 $$ ConstructorArgumentValues cavs = new ConstructorArgumentValues()-->Line_5 $$ cavs.addGenericArgumentValue(JUERGEN)[ FD ]
Line_6 $$ RootBeanDefinition person = new RootBeanDefinition(Person.class, cavs, null)-->Line_8 $$ person.addQualifier(new AutowireCandidateQualifier(TestQualifier.class))[ FD ]
Line_2 $$ public void testAutowireCandidateExplicitlyFalseWithFieldDescriptor() throws Exception -->Line_8 $$ person.addQualifier(new AutowireCandidateQualifier(TestQualifier.class))[ CD ]
Line_3 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_12 $$ assertFalse(lbf.isAutowireCandidate(JUERGEN, null))[ FD ]
