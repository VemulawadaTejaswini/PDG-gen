Line_2 $$ private Object _resolveJavaProxy(Object target) throws IllegalAccessException, NoSuchFieldException -->Line_8 $$ target = field.get(target)[ FD ]
Line_5 $$ if ((targetSuperClass != null) && targetSuperClass.equals(Proxy.class)) -->Line_7 $$ field.setAccessible(true)[ CD ]
Line_2 $$ private Object _resolveJavaProxy(Object target) throws IllegalAccessException, NoSuchFieldException -->Line_4 $$ Class<?> targetSuperClass = targetClass.getSuperclass()[ CD ]
Line_4 $$ Class<?> targetSuperClass = targetClass.getSuperclass()-->Line_5 $$ if ((targetSuperClass != null) && targetSuperClass.equals(Proxy.class)) [ FD ]
Line_5 $$ if ((targetSuperClass != null) && targetSuperClass.equals(Proxy.class)) -->Line_6 $$ Field field = targetSuperClass.getDeclaredField("h")[ CD ]
Line_6 $$ Field field = targetSuperClass.getDeclaredField("h")-->Line_7 $$ field.setAccessible(true)[ FD ]
Line_2 $$ private Object _resolveJavaProxy(Object target) throws IllegalAccessException, NoSuchFieldException -->Line_10 $$ return target[ CD ]
Line_4 $$ Class<?> targetSuperClass = targetClass.getSuperclass()-->Line_6 $$ Field field = targetSuperClass.getDeclaredField("h")[ FD ]
Line_2 $$ private Object _resolveJavaProxy(Object target) throws IllegalAccessException, NoSuchFieldException -->Line_5 $$ if ((targetSuperClass != null) && targetSuperClass.equals(Proxy.class)) [ CD ]
Line_2 $$ private Object _resolveJavaProxy(Object target) throws IllegalAccessException, NoSuchFieldException -->Line_3 $$ Class<?> targetClass = target.getClass()[ CD ]
Line_2 $$ private Object _resolveJavaProxy(Object target) throws IllegalAccessException, NoSuchFieldException -->Line_3 $$ Class<?> targetClass = target.getClass()[ FD ]
Line_3 $$ Class<?> targetClass = target.getClass()-->Line_4 $$ Class<?> targetSuperClass = targetClass.getSuperclass()[ FD ]
Line_5 $$ if ((targetSuperClass != null) && targetSuperClass.equals(Proxy.class)) -->Line_8 $$ target = field.get(target)[ CD ]
Line_6 $$ Field field = targetSuperClass.getDeclaredField("h")-->Line_8 $$ target = field.get(target)[ FD ]
