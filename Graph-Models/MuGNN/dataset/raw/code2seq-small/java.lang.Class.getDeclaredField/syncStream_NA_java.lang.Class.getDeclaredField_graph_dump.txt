Line_9 $$ if (o instanceof OutputStream) -->Line_10 $$ stream = (OutputStream) o[ CD ]
Line_10 $$ stream = (OutputStream) o-->Line_15 $$ if (stream instanceof FileOutputStream) [ FD ]
Line_5 $$ Field outField = FilterOutputStream.class.getDeclaredField("out")-->Line_8 $$ Object o = outField.get(stream)[ FD ]
Line_2 $$ public static void syncStream(OutputStream stream) throws IOException -->Line_15 $$ if (stream instanceof FileOutputStream) [ FD ]
Line_2 $$ public static void syncStream(OutputStream stream) throws IOException -->Line_3 $$ stream.flush()[ FD ]
Line_7 $$ while (stream instanceof FilterOutputStream) -->Line_8 $$ Object o = outField.get(stream)[ CD ]
Line_2 $$ public static void syncStream(OutputStream stream) throws IOException -->Line_3 $$ stream.flush()[ CD ]
Line_2 $$ public static void syncStream(OutputStream stream) throws IOException -->Line_8 $$ Object o = outField.get(stream)[ FD ]
Line_5 $$ Field outField = FilterOutputStream.class.getDeclaredField("out")-->Line_6 $$ outField.setAccessible(true)[ FD ]
Line_8 $$ Object o = outField.get(stream)-->Line_9 $$ if (o instanceof OutputStream) [ FD ]
Line_7 $$ while (stream instanceof FilterOutputStream) -->Line_9 $$ if (o instanceof OutputStream) [ CD ]
Line_15 $$ if (stream instanceof FileOutputStream) -->Line_16 $$ ((FileOutputStream) stream).getFD().sync()[ CD ]
Line_2 $$ public static void syncStream(OutputStream stream) throws IOException -->Line_10 $$ stream = (OutputStream) o[ FD ]
Line_10 $$ stream = (OutputStream) o-->Line_8 $$ Object o = outField.get(stream)[ FD ]
