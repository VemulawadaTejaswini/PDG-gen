Line_7 $$ RootBeanDefinition rbd = new RootBeanDefinition(Person.class, cavs, null)-->Line_9 $$ lbf.registerBeanDefinition(JUERGEN, rbd)[ FD ]
Line_4 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_12 $$ assertFalse(lbf.isAutowireCandidate(JUERGEN, new DependencyDescriptor(Person.class.getDeclaredField("name"), true)))[ FD ]
Line_4 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_9 $$ lbf.registerBeanDefinition(JUERGEN, rbd)[ FD ]
Line_4 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_10 $$ assertFalse(lbf.isAutowireCandidate(JUERGEN, null))[ FD ]
Line_4 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_11 $$ assertFalse(lbf.isAutowireCandidate(JUERGEN, new DependencyDescriptor(Person.class.getDeclaredField("name"), false)))[ FD ]
Line_7 $$ RootBeanDefinition rbd = new RootBeanDefinition(Person.class, cavs, null)-->Line_8 $$ rbd.setAutowireCandidate(false)[ FD ]
Line_5 $$ ConstructorArgumentValues cavs = new ConstructorArgumentValues()-->Line_6 $$ cavs.addGenericArgumentValue(JUERGEN)[ FD ]
