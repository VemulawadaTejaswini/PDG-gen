Line_6 $$ FormattingConversionService fcs = factory.getObject()-->Line_10 $$ Object value = fcs.convert("15,00", TypeDescriptor.valueOf(String.class), descriptor)[ FD ]
Line_6 $$ FormattingConversionService fcs = factory.getObject()-->Line_12 $$ value = fcs.convert(15.0, descriptor, TypeDescriptor.valueOf(String.class))[ FD ]
Line_10 $$ Object value = fcs.convert("15,00", TypeDescriptor.valueOf(String.class), descriptor)-->Line_12 $$ value = fcs.convert(15.0, descriptor, TypeDescriptor.valueOf(String.class))[ FD ]
Line_10 $$ Object value = fcs.convert("15,00", TypeDescriptor.valueOf(String.class), descriptor)-->Line_13 $$ assertEquals("15", value)[ FD ]
Line_7 $$ TypeDescriptor descriptor = new TypeDescriptor(TestBean.class.getDeclaredField("pattern"))-->Line_12 $$ value = fcs.convert(15.0, descriptor, TypeDescriptor.valueOf(String.class))[ FD ]
Line_4 $$ FormattingConversionServiceFactoryBean factory = new FormattingConversionServiceFactoryBean()-->Line_5 $$ factory.afterPropertiesSet()[ FD ]
Line_10 $$ Object value = fcs.convert("15,00", TypeDescriptor.valueOf(String.class), descriptor)-->Line_11 $$ assertEquals(15.0, value)[ FD ]
Line_4 $$ FormattingConversionServiceFactoryBean factory = new FormattingConversionServiceFactoryBean()-->Line_6 $$ FormattingConversionService fcs = factory.getObject()[ FD ]
Line_7 $$ TypeDescriptor descriptor = new TypeDescriptor(TestBean.class.getDeclaredField("pattern"))-->Line_10 $$ Object value = fcs.convert("15,00", TypeDescriptor.valueOf(String.class), descriptor)[ FD ]
Line_12 $$ value = fcs.convert(15.0, descriptor, TypeDescriptor.valueOf(String.class))-->Line_13 $$ assertEquals("15", value)[ FD ]
