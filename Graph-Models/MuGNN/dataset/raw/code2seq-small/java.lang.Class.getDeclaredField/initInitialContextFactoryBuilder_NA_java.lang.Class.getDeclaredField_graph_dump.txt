Line_4 $$ PACLInitialContextFactoryBuilder paclInitialContextFactoryBuilder = new PACLInitialContextFactoryBuilder()-->Line_23 $$ field.set(null, paclInitialContextFactoryBuilder)[ FD ]
Line_11 $$ String fieldName = "initctx_factory_builder"-->Line_13 $$ fieldName = "icfb"[ FD ]
Line_15 $$ Field field = clazz.getDeclaredField(fieldName)-->Line_17 $$ InitialContextFactoryBuilder initialContextFactoryBuilder = (InitialContextFactoryBuilder) field.get(null)[ FD ]
Line_15 $$ Field field = clazz.getDeclaredField(fieldName)-->Line_23 $$ field.set(null, paclInitialContextFactoryBuilder)[ FD ]
Line_10 $$ Class<?> clazz = NamingManager.class-->Line_15 $$ Field field = clazz.getDeclaredField(fieldName)[ FD ]
Line_2 $$ protected void initInitialContextFactoryBuilder() throws Exception -->Line_17 $$ InitialContextFactoryBuilder initialContextFactoryBuilder = (InitialContextFactoryBuilder) field.get(null)[ CD ]
Line_2 $$ protected void initInitialContextFactoryBuilder() throws Exception -->Line_18 $$ if (initialContextFactoryBuilder instanceof PACLInitialContextFactoryBuilder) [ CD ]
Line_4 $$ PACLInitialContextFactoryBuilder paclInitialContextFactoryBuilder = new PACLInitialContextFactoryBuilder()-->Line_22 $$ paclInitialContextFactoryBuilder.setInitialContextFactoryBuilder(initialContextFactoryBuilder)[ FD ]
Line_3 $$ if (!NamingManager.hasInitialContextFactoryBuilder()) -->Line_5 $$ if (_log.isInfoEnabled()) [ CD ]
Line_5 $$ if (_log.isInfoEnabled()) -->Line_6 $$ _log.info("Overriding the initial context factory builder")[ CD ]
Line_4 $$ PACLInitialContextFactoryBuilder paclInitialContextFactoryBuilder = new PACLInitialContextFactoryBuilder()-->Line_8 $$ NamingManager.setInitialContextFactoryBuilder(paclInitialContextFactoryBuilder)[ FD ]
Line_2 $$ protected void initInitialContextFactoryBuilder() throws Exception -->Line_11 $$ String fieldName = "initctx_factory_builder"[ CD ]
Line_24 $$ if (_log.isInfoEnabled()) -->Line_25 $$ _log.info("Overriding the initial context factory builder using " + "reflection")[ CD ]
Line_11 $$ String fieldName = "initctx_factory_builder"-->Line_15 $$ Field field = clazz.getDeclaredField(fieldName)[ FD ]
Line_12 $$ if (JavaDetector.isIBM()) -->Line_13 $$ fieldName = "icfb"[ CD ]
Line_13 $$ fieldName = "icfb"-->Line_15 $$ Field field = clazz.getDeclaredField(fieldName)[ FD ]
Line_17 $$ InitialContextFactoryBuilder initialContextFactoryBuilder = (InitialContextFactoryBuilder) field.get(null)-->Line_22 $$ paclInitialContextFactoryBuilder.setInitialContextFactoryBuilder(initialContextFactoryBuilder)[ FD ]
Line_18 $$ if (initialContextFactoryBuilder instanceof PACLInitialContextFactoryBuilder) -->Line_19 $$ return[ CD ]
Line_2 $$ protected void initInitialContextFactoryBuilder() throws Exception -->Line_23 $$ field.set(null, paclInitialContextFactoryBuilder)[ CD ]
Line_3 $$ if (!NamingManager.hasInitialContextFactoryBuilder()) -->Line_8 $$ NamingManager.setInitialContextFactoryBuilder(paclInitialContextFactoryBuilder)[ CD ]
Line_2 $$ protected void initInitialContextFactoryBuilder() throws Exception -->Line_3 $$ if (!NamingManager.hasInitialContextFactoryBuilder()) [ CD ]
Line_17 $$ InitialContextFactoryBuilder initialContextFactoryBuilder = (InitialContextFactoryBuilder) field.get(null)-->Line_18 $$ if (initialContextFactoryBuilder instanceof PACLInitialContextFactoryBuilder) [ FD ]
Line_15 $$ Field field = clazz.getDeclaredField(fieldName)-->Line_16 $$ field.setAccessible(true)[ FD ]
Line_2 $$ protected void initInitialContextFactoryBuilder() throws Exception -->Line_10 $$ Class<?> clazz = NamingManager.class[ CD ]
Line_2 $$ protected void initInitialContextFactoryBuilder() throws Exception -->Line_15 $$ Field field = clazz.getDeclaredField(fieldName)[ CD ]
Line_2 $$ protected void initInitialContextFactoryBuilder() throws Exception -->Line_16 $$ field.setAccessible(true)[ CD ]
Line_2 $$ protected void initInitialContextFactoryBuilder() throws Exception -->Line_12 $$ if (JavaDetector.isIBM()) [ CD ]
Line_2 $$ protected void initInitialContextFactoryBuilder() throws Exception -->Line_24 $$ if (_log.isInfoEnabled()) [ CD ]
Line_3 $$ if (!NamingManager.hasInitialContextFactoryBuilder()) -->Line_4 $$ PACLInitialContextFactoryBuilder paclInitialContextFactoryBuilder = new PACLInitialContextFactoryBuilder()[ CD ]
Line_2 $$ protected void initInitialContextFactoryBuilder() throws Exception -->Line_22 $$ paclInitialContextFactoryBuilder.setInitialContextFactoryBuilder(initialContextFactoryBuilder)[ CD ]
