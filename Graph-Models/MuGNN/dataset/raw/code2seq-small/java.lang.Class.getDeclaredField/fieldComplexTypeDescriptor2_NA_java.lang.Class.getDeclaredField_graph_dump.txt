Line_4 $$ TypeDescriptor typeDescriptor = new TypeDescriptor(TypeDescriptorTests.class.getDeclaredField("nestedMapField"))-->Line_9 $$ assertEquals("java.util.Map<java.lang.String, java.util.List<java.lang.Integer>>", typeDescriptor.toString())[ FD ]
Line_4 $$ TypeDescriptor typeDescriptor = new TypeDescriptor(TypeDescriptorTests.class.getDeclaredField("nestedMapField"))-->Line_6 $$ assertEquals(String.class, typeDescriptor.getMapKeyTypeDescriptor().getType())[ FD ]
Line_4 $$ TypeDescriptor typeDescriptor = new TypeDescriptor(TypeDescriptorTests.class.getDeclaredField("nestedMapField"))-->Line_5 $$ assertTrue(typeDescriptor.isMap())[ FD ]
Line_4 $$ TypeDescriptor typeDescriptor = new TypeDescriptor(TypeDescriptorTests.class.getDeclaredField("nestedMapField"))-->Line_8 $$ assertEquals(Integer.class, typeDescriptor.getMapValueTypeDescriptor().getElementTypeDescriptor().getType())[ FD ]
Line_4 $$ TypeDescriptor typeDescriptor = new TypeDescriptor(TypeDescriptorTests.class.getDeclaredField("nestedMapField"))-->Line_7 $$ assertEquals(List.class, typeDescriptor.getMapValueTypeDescriptor().getType())[ FD ]
