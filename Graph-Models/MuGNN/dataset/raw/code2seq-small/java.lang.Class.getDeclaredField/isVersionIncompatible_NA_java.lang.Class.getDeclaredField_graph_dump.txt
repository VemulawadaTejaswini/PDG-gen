Line_3 $$ final String protocolClassMessageClass = TestResultMessage.class.getName()-->Line_10 $$ final Class aClass = Class.forName(protocolClassMessageClass)[ FD ]
Line_9 $$ boolean ideaHasNewJar = true-->Line_14 $$ ideaHasNewJar = false[ FD ]
Line_4 $$ final PsiClass psiProtocolClass = JavaPsiFacade.getInstance(project).findClass(protocolClassMessageClass, scope)-->Line_5 $$ if (psiProtocolClass != null) [ FD ]
Line_10 $$ final Class aClass = Class.forName(protocolClassMessageClass)-->Line_12 $$ aClass.getDeclaredField(instanceFieldName)[ FD ]
Line_2 $$ public static boolean isVersionIncompatible(Project project, GlobalSearchScope scope) -->Line_3 $$ final String protocolClassMessageClass = TestResultMessage.class.getName()[ CD ]
Line_6 $$ final String instanceFieldName = "m_instanceName"-->Line_12 $$ aClass.getDeclaredField(instanceFieldName)[ FD ]
Line_5 $$ if (psiProtocolClass != null) -->Line_6 $$ final String instanceFieldName = "m_instanceName"[ CD ]
Line_2 $$ public static boolean isVersionIncompatible(Project project, GlobalSearchScope scope) -->Line_20 $$ return false[ CD ]
Line_2 $$ public static boolean isVersionIncompatible(Project project, GlobalSearchScope scope) -->Line_4 $$ final PsiClass psiProtocolClass = JavaPsiFacade.getInstance(project).findClass(protocolClassMessageClass, scope)[ FD ]
Line_3 $$ final String protocolClassMessageClass = TestResultMessage.class.getName()-->Line_4 $$ final PsiClass psiProtocolClass = JavaPsiFacade.getInstance(project).findClass(protocolClassMessageClass, scope)[ FD ]
Line_2 $$ public static boolean isVersionIncompatible(Project project, GlobalSearchScope scope) -->Line_5 $$ if (psiProtocolClass != null) [ CD ]
Line_4 $$ final PsiClass psiProtocolClass = JavaPsiFacade.getInstance(project).findClass(protocolClassMessageClass, scope)-->Line_8 $$ final boolean userHasNewJar = psiProtocolClass.findFieldByName(instanceFieldName, false) != null[ FD ]
Line_2 $$ public static boolean isVersionIncompatible(Project project, GlobalSearchScope scope) -->Line_4 $$ final PsiClass psiProtocolClass = JavaPsiFacade.getInstance(project).findClass(protocolClassMessageClass, scope)[ CD ]
Line_6 $$ final String instanceFieldName = "m_instanceName"-->Line_8 $$ final boolean userHasNewJar = psiProtocolClass.findFieldByName(instanceFieldName, false) != null[ FD ]
