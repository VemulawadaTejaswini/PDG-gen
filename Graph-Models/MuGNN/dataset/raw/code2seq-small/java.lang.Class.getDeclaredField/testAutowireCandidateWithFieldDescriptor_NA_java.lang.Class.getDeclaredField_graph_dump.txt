Line_5 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_22 $$ assertFalse(lbf.isAutowireCandidate(MARK, qualifiedDescriptor))[ FD ]
Line_11 $$ ConstructorArgumentValues cavs2 = new ConstructorArgumentValues()-->Line_12 $$ cavs2.addGenericArgumentValue(MARK)[ FD ]
Line_8 $$ RootBeanDefinition person1 = new RootBeanDefinition(Person.class, cavs1, null)-->Line_10 $$ lbf.registerBeanDefinition(JUERGEN, person1)[ FD ]
Line_6 $$ ConstructorArgumentValues cavs1 = new ConstructorArgumentValues()-->Line_7 $$ cavs1.addGenericArgumentValue(JUERGEN)[ FD ]
Line_5 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_14 $$ lbf.registerBeanDefinition(MARK, person2)[ FD ]
Line_5 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_17 $$ assertTrue(lbf.isAutowireCandidate(JUERGEN, null))[ FD ]
Line_15 $$ DependencyDescriptor qualifiedDescriptor = new DependencyDescriptor(QualifiedTestBean.class.getDeclaredField("qualified"), false)-->Line_22 $$ assertFalse(lbf.isAutowireCandidate(MARK, qualifiedDescriptor))[ FD ]
Line_16 $$ DependencyDescriptor nonqualifiedDescriptor = new DependencyDescriptor(QualifiedTestBean.class.getDeclaredField("nonqualified"), false)-->Line_21 $$ assertTrue(lbf.isAutowireCandidate(MARK, nonqualifiedDescriptor))[ FD ]
Line_5 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_20 $$ assertTrue(lbf.isAutowireCandidate(MARK, null))[ FD ]
Line_5 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_18 $$ assertTrue(lbf.isAutowireCandidate(JUERGEN, nonqualifiedDescriptor))[ FD ]
Line_5 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_10 $$ lbf.registerBeanDefinition(JUERGEN, person1)[ FD ]
Line_5 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_21 $$ assertTrue(lbf.isAutowireCandidate(MARK, nonqualifiedDescriptor))[ FD ]
Line_16 $$ DependencyDescriptor nonqualifiedDescriptor = new DependencyDescriptor(QualifiedTestBean.class.getDeclaredField("nonqualified"), false)-->Line_18 $$ assertTrue(lbf.isAutowireCandidate(JUERGEN, nonqualifiedDescriptor))[ FD ]
Line_5 $$ DefaultListableBeanFactory lbf = new DefaultListableBeanFactory()-->Line_19 $$ assertTrue(lbf.isAutowireCandidate(JUERGEN, qualifiedDescriptor))[ FD ]
Line_8 $$ RootBeanDefinition person1 = new RootBeanDefinition(Person.class, cavs1, null)-->Line_9 $$ person1.addQualifier(new AutowireCandidateQualifier(TestQualifier.class))[ FD ]
Line_15 $$ DependencyDescriptor qualifiedDescriptor = new DependencyDescriptor(QualifiedTestBean.class.getDeclaredField("qualified"), false)-->Line_19 $$ assertTrue(lbf.isAutowireCandidate(JUERGEN, qualifiedDescriptor))[ FD ]
Line_13 $$ RootBeanDefinition person2 = new RootBeanDefinition(Person.class, cavs2, null)-->Line_14 $$ lbf.registerBeanDefinition(MARK, person2)[ FD ]
