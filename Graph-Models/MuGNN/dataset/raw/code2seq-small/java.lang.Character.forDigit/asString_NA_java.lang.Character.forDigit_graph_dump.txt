Line_2 $$ public String asString() -->Line_4 $$ byte even = myData[0][ CD ]
Line_2 $$ public String asString() -->Line_6 $$ for (int i = 1; i < myData.length; i++) [ CD ]
Line_11 $$ if (i == myData.length - 1 && even == 1) -->Line_14 $$ sb.append(c1).append(c2)[ CD ]
Line_8 $$ int k2 = (myData[i] + 128) % 16-->Line_10 $$ char c2 = Character.forDigit(k2, 16)[ FD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_17 $$ return sb.toString()[ FD ]
Line_7 $$ int k1 = (myData[i] + 128) / 16-->Line_9 $$ char c1 = Character.forDigit(k1, 16)[ FD ]
Line_10 $$ char c2 = Character.forDigit(k2, 16)-->Line_14 $$ sb.append(c1).append(c2)[ FD ]
Line_2 $$ public String asString() -->Line_5 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_10 $$ char c2 = Character.forDigit(k2, 16)-->Line_12 $$ sb.append(c2)[ FD ]
Line_6 $$ for (int i = 1; i < myData.length; i++) -->Line_9 $$ char c1 = Character.forDigit(k1, 16)[ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ sb.append(c2)[ FD ]
Line_11 $$ if (i == myData.length - 1 && even == 1) -->Line_12 $$ sb.append(c2)[ CD ]
Line_6 $$ for (int i = 1; i < myData.length; i++) -->Line_8 $$ int k2 = (myData[i] + 128) % 16[ CD ]
Line_2 $$ public String asString() -->Line_17 $$ return sb.toString()[ CD ]
Line_9 $$ char c1 = Character.forDigit(k1, 16)-->Line_14 $$ sb.append(c1).append(c2)[ FD ]
Line_6 $$ for (int i = 1; i < myData.length; i++) -->Line_10 $$ char c2 = Character.forDigit(k2, 16)[ CD ]
Line_6 $$ for (int i = 1; i < myData.length; i++) -->Line_11 $$ if (i == myData.length - 1 && even == 1) [ CD ]
Line_6 $$ for (int i = 1; i < myData.length; i++) -->Line_7 $$ int k1 = (myData[i] + 128) / 16[ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder()-->Line_14 $$ sb.append(c1).append(c2)[ FD ]
