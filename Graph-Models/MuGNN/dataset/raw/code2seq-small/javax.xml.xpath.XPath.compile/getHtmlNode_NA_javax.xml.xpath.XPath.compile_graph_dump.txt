Line_4 $$ XPathFactory xPathFactory = XPathFactory.newInstance()-->Line_5 $$ XPath xPath = xPathFactory.newXPath()[ FD ]
Line_10 $$ String htmlSource = getHtmlSource()-->Line_11 $$ htmlSource = htmlSource.substring(htmlSource.indexOf("<html"))[ FD ]
Line_2 $$ public Node getHtmlNode(String locator) -->Line_7 $$ XPathExpression xPathExpression = xPath.compile(locator)[ FD ]
Line_8 $$ DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance()-->Line_9 $$ DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder()[ FD ]
Line_6 $$ locator = StringUtil.replace(locator, "x:", "")-->Line_7 $$ XPathExpression xPathExpression = xPath.compile(locator)[ FD ]
Line_9 $$ DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder()-->Line_14 $$ Document document = documentBuilder.parse(inputSource)[ FD ]
Line_13 $$ InputSource inputSource = new InputSource(stringReader)-->Line_14 $$ Document document = documentBuilder.parse(inputSource)[ FD ]
Line_14 $$ Document document = documentBuilder.parse(inputSource)-->Line_15 $$ NodeList nodeList = (NodeList) xPathExpression.evaluate(document, XPathConstants.NODESET)[ FD ]
Line_15 $$ NodeList nodeList = (NodeList) xPathExpression.evaluate(document, XPathConstants.NODESET)-->Line_16 $$ if (nodeList.getLength() < 1) [ FD ]
Line_2 $$ public Node getHtmlNode(String locator) -->Line_23 $$ return null[ CD ]
Line_5 $$ XPath xPath = xPathFactory.newXPath()-->Line_7 $$ XPathExpression xPathExpression = xPath.compile(locator)[ FD ]
Line_15 $$ NodeList nodeList = (NodeList) xPathExpression.evaluate(document, XPathConstants.NODESET)-->Line_19 $$ return nodeList.item(0)[ FD ]
Line_7 $$ XPathExpression xPathExpression = xPath.compile(locator)-->Line_15 $$ NodeList nodeList = (NodeList) xPathExpression.evaluate(document, XPathConstants.NODESET)[ FD ]
Line_2 $$ public Node getHtmlNode(String locator) -->Line_6 $$ locator = StringUtil.replace(locator, "x:", "")[ FD ]
