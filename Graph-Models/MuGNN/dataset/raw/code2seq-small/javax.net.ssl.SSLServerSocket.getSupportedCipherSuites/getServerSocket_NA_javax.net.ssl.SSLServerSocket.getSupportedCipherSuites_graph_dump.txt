Line_2 $$ public static SSLServerSocket getServerSocket(EncryptionOptions options, InetAddress address, int port) throws IOException -->Line_7 $$ serverSocket.setEnabledCipherSuites(suits)[ CD ]
Line_2 $$ public static SSLServerSocket getServerSocket(EncryptionOptions options, InetAddress address, int port) throws IOException -->Line_6 $$ String[] suits = filterCipherSuites(serverSocket.getSupportedCipherSuites(), options.cipher_suites)[ CD ]
Line_4 $$ SSLServerSocket serverSocket = (SSLServerSocket) ctx.getServerSocketFactory().createServerSocket()-->Line_5 $$ serverSocket.setReuseAddress(true)[ FD ]
Line_4 $$ SSLServerSocket serverSocket = (SSLServerSocket) ctx.getServerSocketFactory().createServerSocket()-->Line_9 $$ serverSocket.setEnabledProtocols(ACCEPTED_PROTOCOLS)[ FD ]
Line_2 $$ public static SSLServerSocket getServerSocket(EncryptionOptions options, InetAddress address, int port) throws IOException -->Line_3 $$ SSLContext ctx = createSSLContext(options, true)[ FD ]
Line_2 $$ public static SSLServerSocket getServerSocket(EncryptionOptions options, InetAddress address, int port) throws IOException -->Line_8 $$ serverSocket.setNeedClientAuth(options.require_client_auth)[ CD ]
Line_2 $$ public static SSLServerSocket getServerSocket(EncryptionOptions options, InetAddress address, int port) throws IOException -->Line_11 $$ return serverSocket[ CD ]
Line_2 $$ public static SSLServerSocket getServerSocket(EncryptionOptions options, InetAddress address, int port) throws IOException -->Line_4 $$ SSLServerSocket serverSocket = (SSLServerSocket) ctx.getServerSocketFactory().createServerSocket()[ CD ]
Line_4 $$ SSLServerSocket serverSocket = (SSLServerSocket) ctx.getServerSocketFactory().createServerSocket()-->Line_6 $$ String[] suits = filterCipherSuites(serverSocket.getSupportedCipherSuites(), options.cipher_suites)[ FD ]
Line_2 $$ public static SSLServerSocket getServerSocket(EncryptionOptions options, InetAddress address, int port) throws IOException -->Line_9 $$ serverSocket.setEnabledProtocols(ACCEPTED_PROTOCOLS)[ CD ]
Line_6 $$ String[] suits = filterCipherSuites(serverSocket.getSupportedCipherSuites(), options.cipher_suites)-->Line_7 $$ serverSocket.setEnabledCipherSuites(suits)[ FD ]
Line_3 $$ SSLContext ctx = createSSLContext(options, true)-->Line_4 $$ SSLServerSocket serverSocket = (SSLServerSocket) ctx.getServerSocketFactory().createServerSocket()[ FD ]
Line_2 $$ public static SSLServerSocket getServerSocket(EncryptionOptions options, InetAddress address, int port) throws IOException -->Line_10 $$ serverSocket.bind(new InetSocketAddress(address, port), 500)[ CD ]
Line_4 $$ SSLServerSocket serverSocket = (SSLServerSocket) ctx.getServerSocketFactory().createServerSocket()-->Line_10 $$ serverSocket.bind(new InetSocketAddress(address, port), 500)[ FD ]
Line_4 $$ SSLServerSocket serverSocket = (SSLServerSocket) ctx.getServerSocketFactory().createServerSocket()-->Line_8 $$ serverSocket.setNeedClientAuth(options.require_client_auth)[ FD ]
Line_4 $$ SSLServerSocket serverSocket = (SSLServerSocket) ctx.getServerSocketFactory().createServerSocket()-->Line_7 $$ serverSocket.setEnabledCipherSuites(suits)[ FD ]
Line_2 $$ public static SSLServerSocket getServerSocket(EncryptionOptions options, InetAddress address, int port) throws IOException -->Line_5 $$ serverSocket.setReuseAddress(true)[ CD ]
Line_2 $$ public static SSLServerSocket getServerSocket(EncryptionOptions options, InetAddress address, int port) throws IOException -->Line_3 $$ SSLContext ctx = createSSLContext(options, true)[ CD ]
