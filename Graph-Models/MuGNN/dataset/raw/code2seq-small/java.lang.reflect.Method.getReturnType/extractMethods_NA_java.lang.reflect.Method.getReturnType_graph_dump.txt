Line_2 $$ protected static MethodsBag extractMethods(Class<?> clazz) -->Line_3 $$ List<Method> idMethods = new ArrayList()[ CD ]
Line_6 $$ for (Method method : ReflectionUtil.getVisibleMethods(clazz)) -->Line_12 $$ Class<?>[] parameterTypes = method.getParameterTypes()[ FD ]
Line_6 $$ for (Method method : ReflectionUtil.getVisibleMethods(clazz)) -->Line_19 $$ idMethods.add(method)[ FD ]
Line_6 $$ for (Method method : ReflectionUtil.getVisibleMethods(clazz)) -->Line_22 $$ Proxy proxy = method.getAnnotation(Proxy.class)[ FD ]
Line_6 $$ for (Method method : ReflectionUtil.getVisibleMethods(clazz)) -->Line_24 $$ if (Modifier.isStatic(method.getModifiers())) [ FD ]
Line_6 $$ for (Method method : ReflectionUtil.getVisibleMethods(clazz)) -->Line_16 $$ if (method.getReturnType() != String.class) [ FD ]
Line_8 $$ if (id != null) -->Line_13 $$ if (parameterTypes.length > 0) [ CD ]
Line_23 $$ if (proxy != null) -->Line_27 $$ proxyMethods.add(method)[ CD ]
Line_8 $$ if (id != null) -->Line_19 $$ idMethods.add(method)[ CD ]
Line_4 $$ List<Method> proxyMethods = new ArrayList()-->Line_27 $$ proxyMethods.add(method)[ FD ]
Line_6 $$ for (Method method : ReflectionUtil.getVisibleMethods(clazz)) -->Line_7 $$ Id id = method.getAnnotation(Id.class)[ FD ]
Line_6 $$ for (Method method : ReflectionUtil.getVisibleMethods(clazz)) -->Line_30 $$ if (Modifier.isAbstract(method.getModifiers())) [ FD ]
Line_6 $$ for (Method method : ReflectionUtil.getVisibleMethods(clazz)) -->Line_31 $$ emptyMethods.add(method)[ FD ]
Line_8 $$ if (id != null) -->Line_16 $$ if (method.getReturnType() != String.class) [ CD ]
Line_30 $$ if (Modifier.isAbstract(method.getModifiers())) -->Line_31 $$ emptyMethods.add(method)[ CD ]
Line_6 $$ for (Method method : ReflectionUtil.getVisibleMethods(clazz)) -->Line_9 $$ if (Modifier.isStatic(method.getModifiers())) [ FD ]
Line_8 $$ if (id != null) -->Line_12 $$ Class<?>[] parameterTypes = method.getParameterTypes()[ CD ]
Line_2 $$ protected static MethodsBag extractMethods(Class<?> clazz) -->Line_34 $$ return new MethodsBag(idMethods, proxyMethods, emptyMethods)[ CD ]
Line_23 $$ if (proxy != null) -->Line_24 $$ if (Modifier.isStatic(method.getModifiers())) [ CD ]
Line_8 $$ if (id != null) -->Line_9 $$ if (Modifier.isStatic(method.getModifiers())) [ CD ]
Line_2 $$ protected static MethodsBag extractMethods(Class<?> clazz) -->Line_4 $$ List<Method> proxyMethods = new ArrayList()[ CD ]
Line_6 $$ for (Method method : ReflectionUtil.getVisibleMethods(clazz)) -->Line_27 $$ proxyMethods.add(method)[ FD ]
Line_5 $$ List<Method> emptyMethods = new ArrayList()-->Line_31 $$ emptyMethods.add(method)[ FD ]
Line_2 $$ protected static MethodsBag extractMethods(Class<?> clazz) -->Line_6 $$ for (Method method : ReflectionUtil.getVisibleMethods(clazz)) [ FD ]
Line_3 $$ List<Method> idMethods = new ArrayList()-->Line_19 $$ idMethods.add(method)[ FD ]
Line_7 $$ Id id = method.getAnnotation(Id.class)-->Line_8 $$ if (id != null) [ FD ]
Line_22 $$ Proxy proxy = method.getAnnotation(Proxy.class)-->Line_23 $$ if (proxy != null) [ FD ]
Line_2 $$ protected static MethodsBag extractMethods(Class<?> clazz) -->Line_5 $$ List<Method> emptyMethods = new ArrayList()[ CD ]
