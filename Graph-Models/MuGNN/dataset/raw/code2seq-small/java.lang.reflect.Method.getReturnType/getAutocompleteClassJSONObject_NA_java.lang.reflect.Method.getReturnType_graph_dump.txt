Line_8 $$ for (Method method : clazz.getMethods()) -->Line_11 $$ Class<?>[] parameterTypes = method.getParameterTypes()[ FD ]
Line_3 $$ JSONObject typeJSONObject = JSONFactoryUtil.createJSONObject()-->Line_6 $$ typeJSONObject.put(field.getName(), fieldJSONObject)[ FD ]
Line_5 $$ JSONObject fieldJSONObject = getAutocompleteVariableJSONObject(field.getType())-->Line_6 $$ typeJSONObject.put(field.getName(), fieldJSONObject)[ FD ]
Line_2 $$ protected JSONObject getAutocompleteClassJSONObject(Class<?> clazz) -->Line_8 $$ for (Method method : clazz.getMethods()) [ FD ]
Line_2 $$ protected JSONObject getAutocompleteClassJSONObject(Class<?> clazz) -->Line_3 $$ JSONObject typeJSONObject = JSONFactoryUtil.createJSONObject()[ CD ]
Line_2 $$ protected JSONObject getAutocompleteClassJSONObject(Class<?> clazz) -->Line_4 $$ for (Field field : clazz.getFields()) [ FD ]
Line_9 $$ JSONObject methodJSONObject = JSONFactoryUtil.createJSONObject()-->Line_17 $$ methodJSONObject.put("returnType", returnTypeClass.getName())[ FD ]
Line_9 $$ JSONObject methodJSONObject = JSONFactoryUtil.createJSONObject()-->Line_15 $$ methodJSONObject.put("argumentTypes", parametersTypesArray)[ FD ]
Line_16 $$ Class<?> returnTypeClass = method.getReturnType()-->Line_17 $$ methodJSONObject.put("returnType", returnTypeClass.getName())[ FD ]
Line_9 $$ JSONObject methodJSONObject = JSONFactoryUtil.createJSONObject()-->Line_19 $$ typeJSONObject.put(method.getName(), methodJSONObject)[ FD ]
Line_12 $$ for (Class<?> parameterType : parameterTypes) -->Line_13 $$ parametersTypesArray.put(parameterType.getCanonicalName())[ FD ]
Line_8 $$ for (Method method : clazz.getMethods()) -->Line_16 $$ Class<?> returnTypeClass = method.getReturnType()[ FD ]
Line_4 $$ for (Field field : clazz.getFields()) -->Line_6 $$ typeJSONObject.put(field.getName(), fieldJSONObject)[ FD ]
Line_4 $$ for (Field field : clazz.getFields()) -->Line_5 $$ JSONObject fieldJSONObject = getAutocompleteVariableJSONObject(field.getType())[ FD ]
Line_10 $$ JSONArray parametersTypesArray = JSONFactoryUtil.createJSONArray()-->Line_15 $$ methodJSONObject.put("argumentTypes", parametersTypesArray)[ FD ]
Line_2 $$ protected JSONObject getAutocompleteClassJSONObject(Class<?> clazz) -->Line_21 $$ return typeJSONObject[ CD ]
Line_3 $$ JSONObject typeJSONObject = JSONFactoryUtil.createJSONObject()-->Line_19 $$ typeJSONObject.put(method.getName(), methodJSONObject)[ FD ]
Line_8 $$ for (Method method : clazz.getMethods()) -->Line_19 $$ typeJSONObject.put(method.getName(), methodJSONObject)[ FD ]
Line_10 $$ JSONArray parametersTypesArray = JSONFactoryUtil.createJSONArray()-->Line_13 $$ parametersTypesArray.put(parameterType.getCanonicalName())[ FD ]
Line_9 $$ JSONObject methodJSONObject = JSONFactoryUtil.createJSONObject()-->Line_18 $$ methodJSONObject.put("type", "Method")[ FD ]
