Line_2 $$ public void testWithGenericParameter() throws Exception -->Line_4 $$ Method bridgeMethod = null[ CD ]
Line_9 $$ bridgeMethod = method-->Line_17 $$ assertEquals(bridgedMethod, BridgeMethodResolver.findBridgedMethod(bridgeMethod))[ FD ]
Line_2 $$ public void testWithGenericParameter() throws Exception -->Line_17 $$ assertEquals(bridgedMethod, BridgeMethodResolver.findBridgedMethod(bridgeMethod))[ CD ]
Line_5 $$ Method bridgedMethod = null-->Line_16 $$ assertTrue(bridgedMethod != null && !bridgedMethod.isBridge())[ FD ]
Line_5 $$ Method bridgedMethod = null-->Line_17 $$ assertEquals(bridgedMethod, BridgeMethodResolver.findBridgedMethod(bridgeMethod))[ FD ]
Line_11 $$ bridgedMethod = method-->Line_17 $$ assertEquals(bridgedMethod, BridgeMethodResolver.findBridgedMethod(bridgeMethod))[ FD ]
Line_6 $$ for (Method method : methods) -->Line_7 $$ if ("getFor".equals(method.getName()) && !method.getParameterTypes()[0].equals(Integer.class)) [ FD ]
Line_6 $$ for (Method method : methods) -->Line_8 $$ if (method.getReturnType().equals(Object.class)) [ FD ]
Line_6 $$ for (Method method : methods) -->Line_11 $$ bridgedMethod = method[ FD ]
Line_2 $$ public void testWithGenericParameter() throws Exception -->Line_15 $$ assertTrue(bridgeMethod != null && bridgeMethod.isBridge())[ CD ]
Line_9 $$ bridgeMethod = method-->Line_15 $$ assertTrue(bridgeMethod != null && bridgeMethod.isBridge())[ FD ]
Line_4 $$ Method bridgeMethod = null-->Line_17 $$ assertEquals(bridgedMethod, BridgeMethodResolver.findBridgedMethod(bridgeMethod))[ FD ]
Line_2 $$ public void testWithGenericParameter() throws Exception -->Line_5 $$ Method bridgedMethod = null[ CD ]
Line_5 $$ Method bridgedMethod = null-->Line_11 $$ bridgedMethod = method[ FD ]
Line_7 $$ if ("getFor".equals(method.getName()) && !method.getParameterTypes()[0].equals(Integer.class)) -->Line_8 $$ if (method.getReturnType().equals(Object.class)) [ CD ]
Line_6 $$ for (Method method : methods) -->Line_9 $$ bridgeMethod = method[ FD ]
Line_2 $$ public void testWithGenericParameter() throws Exception -->Line_16 $$ assertTrue(bridgedMethod != null && !bridgedMethod.isBridge())[ CD ]
Line_2 $$ public void testWithGenericParameter() throws Exception -->Line_3 $$ Method[] methods = StringGenericParameter.class.getMethods()[ CD ]
Line_4 $$ Method bridgeMethod = null-->Line_9 $$ bridgeMethod = method[ FD ]
Line_8 $$ if (method.getReturnType().equals(Object.class)) -->Line_9 $$ bridgeMethod = method[ CD ]
Line_8 $$ if (method.getReturnType().equals(Object.class)) -->Line_11 $$ bridgedMethod = method[ CD ]
Line_4 $$ Method bridgeMethod = null-->Line_15 $$ assertTrue(bridgeMethod != null && bridgeMethod.isBridge())[ FD ]
Line_11 $$ bridgedMethod = method-->Line_16 $$ assertTrue(bridgedMethod != null && !bridgedMethod.isBridge())[ FD ]
