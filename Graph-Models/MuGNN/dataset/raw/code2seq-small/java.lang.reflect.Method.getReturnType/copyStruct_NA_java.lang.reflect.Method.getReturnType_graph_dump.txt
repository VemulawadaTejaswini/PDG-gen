Line_40 $$ MethodHandle setter-->Line_48 $$ setter = MethodHandles.publicLookup().in(owner.clazz).findSetter(owner.clazz, field.name, field.type.clazz)[ FD ]
Line_2 $$ public final void copyStruct(final String struct, final String... children) -->Line_7 $$ for (int count = 0; count < children.length; ++count) [ CD ]
Line_37 $$ if (owner.members.get(field.name) == null) -->Line_40 $$ MethodHandle setter[ CD ]
Line_37 $$ if (owner.members.get(field.name) == null) -->Line_39 $$ MethodHandle getter[ CD ]
Line_22 $$ MethodHandle handle-->Line_29 $$ handle = MethodHandles.publicLookup().in(owner.clazz).findVirtual(owner.clazz, method.method.getName(), MethodType.methodType(method.reflect.getReturnType(), method.reflect.getParameterTypes()))[ FD ]
Line_3 $$ final Struct owner = structs.get(struct)-->Line_4 $$ if (owner == null) [ FD ]
Line_19 $$ if (owner.methods.get(method.name) == null) -->Line_20 $$ final Class<?> clazz = object ? Object.class : owner.clazz[ CD ]
Line_2 $$ public final void copyStruct(final String struct, final String... children) -->Line_3 $$ final Struct owner = structs.get(struct)[ FD ]
Line_2 $$ public final void copyStruct(final String struct, final String... children) -->Line_9 $$ if (struct == null) [ FD ]
Line_24 $$ reflect = clazz.getMethod(method.method.getName(), method.reflect.getParameterTypes())-->Line_42 $$ reflect = owner.clazz.getField(field.reflect.getName())[ FD ]
Line_21 $$ java.lang.reflect.Method reflect-->Line_24 $$ reflect = clazz.getMethod(method.method.getName(), method.reflect.getParameterTypes())[ FD ]
Line_37 $$ if (owner.members.get(field.name) == null) -->Line_52 $$ owner.members.put(field.name, new Field(field.name, owner, field.type, field.generic, reflect, getter, setter))[ CD ]
Line_7 $$ for (int count = 0; count < children.length; ++count) -->Line_9 $$ if (struct == null) [ CD ]
Line_19 $$ if (owner.methods.get(method.name) == null) -->Line_33 $$ owner.methods.put(method.name, new Method(method.name, owner, method.rtn, method.arguments, method.method, reflect, handle))[ CD ]
Line_7 $$ for (int count = 0; count < children.length; ++count) -->Line_8 $$ final Struct child = structs.get(children[count])[ CD ]
Line_20 $$ final Class<?> clazz = object ? Object.class : owner.clazz-->Line_24 $$ reflect = clazz.getMethod(method.method.getName(), method.reflect.getParameterTypes())[ FD ]
Line_7 $$ for (int count = 0; count < children.length; ++count) -->Line_17 $$ final boolean object = child.clazz.equals(Object.class) && java.lang.reflect.Modifier.isInterface(owner.clazz.getModifiers())[ CD ]
Line_19 $$ if (owner.methods.get(method.name) == null) -->Line_22 $$ MethodHandle handle[ CD ]
Line_21 $$ java.lang.reflect.Method reflect-->Line_42 $$ reflect = owner.clazz.getField(field.reflect.getName())[ FD ]
Line_2 $$ public final void copyStruct(final String struct, final String... children) -->Line_4 $$ if (owner == null) [ CD ]
Line_19 $$ if (owner.methods.get(method.name) == null) -->Line_21 $$ java.lang.reflect.Method reflect[ CD ]
Line_2 $$ public final void copyStruct(final String struct, final String... children) -->Line_3 $$ final Struct owner = structs.get(struct)[ CD ]
Line_39 $$ MethodHandle getter-->Line_47 $$ getter = MethodHandles.publicLookup().in(owner.clazz).findGetter(owner.clazz, field.name, field.type.clazz)[ FD ]
