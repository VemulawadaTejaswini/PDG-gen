Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_23 $$ methodVisitor.visitInsn(Opcodes.DUP)[ CD ]
Line_6 $$ Type[] originalParameterTypes = CollectionUtils.collectArray(method.getParameterTypes(), Type.class, new Transformer<Type, Class>() -->Line_13 $$ System.arraycopy(originalParameterTypes, 0, closurisedParameterTypes, 0, numParams)[ FD ]
Line_3 $$ Type actionImplType = Type.getType(ClosureBackedAction.class)-->Line_26 $$ methodVisitor.visitMethodInsn(Opcodes.INVOKESPECIAL, actionImplType.getInternalName(), "<init>", constuctorDescriptor)[ FD ]
Line_5 $$ Type returnType = Type.getType(method.getReturnType())-->Line_29 $$ methodVisitor.visitInsn(returnType.getOpcode(Opcodes.IRETURN))[ FD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_5 $$ Type returnType = Type.getType(method.getReturnType())[ CD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_17 $$ methodVisitor.visitCode()[ CD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_28 $$ methodVisitor.visitMethodInsn(Opcodes.INVOKEVIRTUAL, generatedType.getInternalName(), method.getName(), methodDescriptor)[ FD ]
Line_19 $$ for (int stackVar = 1; stackVar < numParams; ++stackVar) -->Line_20 $$ methodVisitor.visitVarInsn(closurisedParameterTypes[stackVar - 1].getOpcode(Opcodes.ILOAD), stackVar)[ FD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_18 $$ methodVisitor.visitVarInsn(Opcodes.ALOAD, 0)[ CD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_24 $$ methodVisitor.visitVarInsn(Opcodes.ALOAD, numParams)[ CD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_26 $$ methodVisitor.visitMethodInsn(Opcodes.INVOKESPECIAL, actionImplType.getInternalName(), "<init>", constuctorDescriptor)[ CD ]
Line_4 $$ Type closureType = Type.getType(Closure.class)-->Line_25 $$ String constuctorDescriptor = Type.getMethodDescriptor(Type.VOID_TYPE, closureType)[ FD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_27 $$ methodDescriptor = Type.getMethodDescriptor(Type.getType(method.getReturnType()), originalParameterTypes)[ CD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_29 $$ methodVisitor.visitInsn(returnType.getOpcode(Opcodes.IRETURN))[ CD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_6 $$ Type[] originalParameterTypes = CollectionUtils.collectArray(method.getParameterTypes(), Type.class, new Transformer<Type, Class>() [ CD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_30 $$ methodVisitor.visitMaxs(0, 0)[ CD ]
Line_5 $$ Type returnType = Type.getType(method.getReturnType())-->Line_15 $$ String methodDescriptor = Type.getMethodDescriptor(returnType, closurisedParameterTypes)[ FD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_31 $$ methodVisitor.visitEnd()[ CD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_5 $$ Type returnType = Type.getType(method.getReturnType())[ FD ]
Line_6 $$ Type[] originalParameterTypes = CollectionUtils.collectArray(method.getParameterTypes(), Type.class, new Transformer<Type, Class>() -->Line_8 $$ return Type.getType(clazz)[ CD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_4 $$ Type closureType = Type.getType(Closure.class)[ CD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_6 $$ Type[] originalParameterTypes = CollectionUtils.collectArray(method.getParameterTypes(), Type.class, new Transformer<Type, Class>() [ FD ]
Line_19 $$ for (int stackVar = 1; stackVar < numParams; ++stackVar) -->Line_20 $$ methodVisitor.visitVarInsn(closurisedParameterTypes[stackVar - 1].getOpcode(Opcodes.ILOAD), stackVar)[ CD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_19 $$ for (int stackVar = 1; stackVar < numParams; ++stackVar) [ CD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_22 $$ methodVisitor.visitTypeInsn(Opcodes.NEW, actionImplType.getInternalName())[ CD ]
Line_3 $$ Type actionImplType = Type.getType(ClosureBackedAction.class)-->Line_22 $$ methodVisitor.visitTypeInsn(Opcodes.NEW, actionImplType.getInternalName())[ FD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_28 $$ methodVisitor.visitMethodInsn(Opcodes.INVOKEVIRTUAL, generatedType.getInternalName(), method.getName(), methodDescriptor)[ CD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_3 $$ Type actionImplType = Type.getType(ClosureBackedAction.class)[ CD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_13 $$ System.arraycopy(originalParameterTypes, 0, closurisedParameterTypes, 0, numParams)[ CD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_27 $$ methodDescriptor = Type.getMethodDescriptor(Type.getType(method.getReturnType()), originalParameterTypes)[ FD ]
Line_6 $$ Type[] originalParameterTypes = CollectionUtils.collectArray(method.getParameterTypes(), Type.class, new Transformer<Type, Class>() -->Line_8 $$ return Type.getType(clazz)[ FD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_15 $$ String methodDescriptor = Type.getMethodDescriptor(returnType, closurisedParameterTypes)[ CD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_16 $$ MethodVisitor methodVisitor = visitor.visitMethod(Opcodes.ACC_PUBLIC, method.getName(), methodDescriptor, null, new String[0])[ FD ]
Line_6 $$ Type[] originalParameterTypes = CollectionUtils.collectArray(method.getParameterTypes(), Type.class, new Transformer<Type, Class>() -->Line_27 $$ methodDescriptor = Type.getMethodDescriptor(Type.getType(method.getReturnType()), originalParameterTypes)[ FD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_16 $$ MethodVisitor methodVisitor = visitor.visitMethod(Opcodes.ACC_PUBLIC, method.getName(), methodDescriptor, null, new String[0])[ CD ]
Line_2 $$ public void addActionMethod(Method method) throws Exception -->Line_25 $$ String constuctorDescriptor = Type.getMethodDescriptor(Type.VOID_TYPE, closureType)[ CD ]
