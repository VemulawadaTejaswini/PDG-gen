Line_12 $$ String baseType = writeType(base, null)-->Line_13 $$ restriction.setAttribute("base", baseType)[ FD ]
Line_2 $$ public Element writeEnumType(QName qName, Class cls) throws NoSuchMethodException, IllegalAccessException, AxisFault -->Line_8 $$ Element simpleType = docHolder.createElement("simpleType")[ CD ]
Line_17 $$ int mod = field.getModifiers()-->Line_18 $$ if (Modifier.isPublic(mod) && Modifier.isStatic(mod) && Modifier.isFinal(mod) && (field.getType() == base)) [ FD ]
Line_6 $$ java.lang.reflect.Method m = cls.getMethod("getValue", null)-->Line_7 $$ Class base = m.getReturnType()[ FD ]
Line_3 $$ if (!isEnumClass(cls)) -->Line_4 $$ return null[ CD ]
Line_2 $$ public Element writeEnumType(QName qName, Class cls) throws NoSuchMethodException, IllegalAccessException, AxisFault -->Line_10 $$ Element restriction = docHolder.createElement("restriction")[ CD ]
Line_15 $$ for (int i = 0; i < fields.length; i++) -->Line_17 $$ int mod = field.getModifiers()[ CD ]
Line_8 $$ Element simpleType = docHolder.createElement("simpleType")-->Line_11 $$ simpleType.appendChild(restriction)[ FD ]
Line_18 $$ if (Modifier.isPublic(mod) && Modifier.isStatic(mod) && Modifier.isFinal(mod) && (field.getType() == base)) -->Line_19 $$ Element enumeration = docHolder.createElement("enumeration")[ CD ]
Line_2 $$ public Element writeEnumType(QName qName, Class cls) throws NoSuchMethodException, IllegalAccessException, AxisFault -->Line_3 $$ if (!isEnumClass(cls)) [ FD ]
Line_19 $$ Element enumeration = docHolder.createElement("enumeration")-->Line_20 $$ enumeration.setAttribute("value", field.get(null).toString())[ FD ]
Line_2 $$ public Element writeEnumType(QName qName, Class cls) throws NoSuchMethodException, IllegalAccessException, AxisFault -->Line_14 $$ Field[] fields = cls.getDeclaredFields()[ FD ]
Line_16 $$ Field field = fields[i]-->Line_20 $$ enumeration.setAttribute("value", field.get(null).toString())[ FD ]
Line_18 $$ if (Modifier.isPublic(mod) && Modifier.isStatic(mod) && Modifier.isFinal(mod) && (field.getType() == base)) -->Line_21 $$ restriction.appendChild(enumeration)[ CD ]
Line_18 $$ if (Modifier.isPublic(mod) && Modifier.isStatic(mod) && Modifier.isFinal(mod) && (field.getType() == base)) -->Line_20 $$ enumeration.setAttribute("value", field.get(null).toString())[ CD ]
Line_2 $$ public Element writeEnumType(QName qName, Class cls) throws NoSuchMethodException, IllegalAccessException, AxisFault -->Line_9 $$ simpleType.setAttribute("name", qName.getLocalPart())[ FD ]
Line_2 $$ public Element writeEnumType(QName qName, Class cls) throws NoSuchMethodException, IllegalAccessException, AxisFault -->Line_7 $$ Class base = m.getReturnType()[ CD ]
Line_10 $$ Element restriction = docHolder.createElement("restriction")-->Line_21 $$ restriction.appendChild(enumeration)[ FD ]
Line_10 $$ Element restriction = docHolder.createElement("restriction")-->Line_13 $$ restriction.setAttribute("base", baseType)[ FD ]
Line_2 $$ public Element writeEnumType(QName qName, Class cls) throws NoSuchMethodException, IllegalAccessException, AxisFault -->Line_3 $$ if (!isEnumClass(cls)) [ CD ]
Line_16 $$ Field field = fields[i]-->Line_17 $$ int mod = field.getModifiers()[ FD ]
Line_2 $$ public Element writeEnumType(QName qName, Class cls) throws NoSuchMethodException, IllegalAccessException, AxisFault -->Line_12 $$ String baseType = writeType(base, null)[ CD ]
Line_2 $$ public Element writeEnumType(QName qName, Class cls) throws NoSuchMethodException, IllegalAccessException, AxisFault -->Line_9 $$ simpleType.setAttribute("name", qName.getLocalPart())[ CD ]
Line_2 $$ public Element writeEnumType(QName qName, Class cls) throws NoSuchMethodException, IllegalAccessException, AxisFault -->Line_6 $$ java.lang.reflect.Method m = cls.getMethod("getValue", null)[ CD ]
Line_2 $$ public Element writeEnumType(QName qName, Class cls) throws NoSuchMethodException, IllegalAccessException, AxisFault -->Line_6 $$ java.lang.reflect.Method m = cls.getMethod("getValue", null)[ FD ]
Line_2 $$ public Element writeEnumType(QName qName, Class cls) throws NoSuchMethodException, IllegalAccessException, AxisFault -->Line_11 $$ simpleType.appendChild(restriction)[ CD ]
Line_2 $$ public Element writeEnumType(QName qName, Class cls) throws NoSuchMethodException, IllegalAccessException, AxisFault -->Line_13 $$ restriction.setAttribute("base", baseType)[ CD ]
Line_15 $$ for (int i = 0; i < fields.length; i++) -->Line_16 $$ Field field = fields[i][ CD ]
Line_16 $$ Field field = fields[i]-->Line_18 $$ if (Modifier.isPublic(mod) && Modifier.isStatic(mod) && Modifier.isFinal(mod) && (field.getType() == base)) [ FD ]
Line_19 $$ Element enumeration = docHolder.createElement("enumeration")-->Line_21 $$ restriction.appendChild(enumeration)[ FD ]
Line_2 $$ public Element writeEnumType(QName qName, Class cls) throws NoSuchMethodException, IllegalAccessException, AxisFault -->Line_14 $$ Field[] fields = cls.getDeclaredFields()[ CD ]
Line_15 $$ for (int i = 0; i < fields.length; i++) -->Line_18 $$ if (Modifier.isPublic(mod) && Modifier.isStatic(mod) && Modifier.isFinal(mod) && (field.getType() == base)) [ CD ]
Line_7 $$ Class base = m.getReturnType()-->Line_12 $$ String baseType = writeType(base, null)[ FD ]
Line_2 $$ public Element writeEnumType(QName qName, Class cls) throws NoSuchMethodException, IllegalAccessException, AxisFault -->Line_15 $$ for (int i = 0; i < fields.length; i++) [ CD ]
Line_2 $$ public Element writeEnumType(QName qName, Class cls) throws NoSuchMethodException, IllegalAccessException, AxisFault -->Line_24 $$ return simpleType[ CD ]
Line_8 $$ Element simpleType = docHolder.createElement("simpleType")-->Line_9 $$ simpleType.setAttribute("name", qName.getLocalPart())[ FD ]
Line_10 $$ Element restriction = docHolder.createElement("restriction")-->Line_11 $$ simpleType.appendChild(restriction)[ FD ]
