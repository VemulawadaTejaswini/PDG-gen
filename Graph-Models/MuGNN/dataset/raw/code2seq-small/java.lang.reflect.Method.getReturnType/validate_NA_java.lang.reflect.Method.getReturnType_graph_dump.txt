Line_2 $$ private void validate() -->Line_3 $$ if (!this.isAliasPair && !isAnnotationMetaPresent(this.sourceAnnotationType, this.aliasedAnnotationType)) [ CD ]
Line_13 $$ String mirrorAliasedAttributeName = getAliasedAttributeName(mirrorAliasFor, this.aliasedAttribute)-->Line_15 $$ String msg = String.format("Attribute [%s] in annotation [%s] must be declared as an @AliasFor [%s], not [%s].", this.aliasedAttributeName, this.sourceAnnotationType.getName(), this.sourceAttributeName, mirrorAliasedAttributeName)[ FD ]
Line_7 $$ if (this.isAliasPair) -->Line_13 $$ String mirrorAliasedAttributeName = getAliasedAttributeName(mirrorAliasFor, this.aliasedAttribute)[ CD ]
Line_2 $$ private void validate() -->Line_25 $$ if (this.isAliasPair) [ CD ]
Line_25 $$ if (this.isAliasPair) -->Line_26 $$ validateDefaultValueConfiguration(this.aliasedAttribute)[ CD ]
Line_21 $$ if (returnType != aliasedReturnType) -->Line_22 $$ String msg = String.format("Misconfigured aliases: attribute [%s] in annotation [%s] " + "and attribute [%s] in annotation [%s] must declare the same return type.", this.sourceAttributeName, this.sourceAnnotationType.getName(), this.aliasedAttributeName, this.aliasedAnnotationType.getName())[ CD ]
Line_8 $$ AliasFor mirrorAliasFor = this.aliasedAttribute.getAnnotation(AliasFor.class)-->Line_9 $$ if (mirrorAliasFor == null) [ FD ]
Line_14 $$ if (!this.sourceAttributeName.equals(mirrorAliasedAttributeName)) -->Line_15 $$ String msg = String.format("Attribute [%s] in annotation [%s] must be declared as an @AliasFor [%s], not [%s].", this.aliasedAttributeName, this.sourceAnnotationType.getName(), this.sourceAttributeName, mirrorAliasedAttributeName)[ CD ]
Line_7 $$ if (this.isAliasPair) -->Line_9 $$ if (mirrorAliasFor == null) [ CD ]
Line_19 $$ Class<?> returnType = this.sourceAttribute.getReturnType()-->Line_21 $$ if (returnType != aliasedReturnType) [ FD ]
Line_8 $$ AliasFor mirrorAliasFor = this.aliasedAttribute.getAnnotation(AliasFor.class)-->Line_13 $$ String mirrorAliasedAttributeName = getAliasedAttributeName(mirrorAliasFor, this.aliasedAttribute)[ FD ]
Line_9 $$ if (mirrorAliasFor == null) -->Line_10 $$ String msg = String.format("Attribute [%s] in annotation [%s] must be declared as an @AliasFor [%s].", this.aliasedAttributeName, this.sourceAnnotationType.getName(), this.sourceAttributeName)[ CD ]
Line_3 $$ if (!this.isAliasPair && !isAnnotationMetaPresent(this.sourceAnnotationType, this.aliasedAnnotationType)) -->Line_4 $$ String msg = String.format("@AliasFor declaration on attribute [%s] in annotation [%s] declares " + "an alias for attribute [%s] in meta-annotation [%s] which is not meta-present.", this.sourceAttributeName, this.sourceAnnotationType.getName(), this.aliasedAttributeName, this.aliasedAnnotationType.getName())[ CD ]
Line_20 $$ Class<?> aliasedReturnType = this.aliasedAttribute.getReturnType()-->Line_21 $$ if (returnType != aliasedReturnType) [ FD ]
Line_7 $$ if (this.isAliasPair) -->Line_14 $$ if (!this.sourceAttributeName.equals(mirrorAliasedAttributeName)) [ CD ]
Line_2 $$ private void validate() -->Line_19 $$ Class<?> returnType = this.sourceAttribute.getReturnType()[ CD ]
Line_2 $$ private void validate() -->Line_7 $$ if (this.isAliasPair) [ CD ]
Line_7 $$ if (this.isAliasPair) -->Line_8 $$ AliasFor mirrorAliasFor = this.aliasedAttribute.getAnnotation(AliasFor.class)[ CD ]
Line_2 $$ private void validate() -->Line_21 $$ if (returnType != aliasedReturnType) [ CD ]
Line_13 $$ String mirrorAliasedAttributeName = getAliasedAttributeName(mirrorAliasFor, this.aliasedAttribute)-->Line_14 $$ if (!this.sourceAttributeName.equals(mirrorAliasedAttributeName)) [ FD ]
Line_2 $$ private void validate() -->Line_20 $$ Class<?> aliasedReturnType = this.aliasedAttribute.getReturnType()[ CD ]
