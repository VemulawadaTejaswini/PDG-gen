Line_12 $$ for (int i = 0; i < getters.length; ++i) -->Line_16 $$ code.addIconst(i)[ FD ]
Line_2 $$ private void addGetter(ClassFile classfile, final Method[] getters) throws CannotCompileException -->Line_41 $$ getterMethodInfo.setCodeAttribute(code.toCodeAttribute())[ CD ]
Line_7 $$ final Bytecode code = new Bytecode(constPool, 6, 4)-->Line_35 $$ code.add(Opcode.AASTORE)[ FD ]
Line_2 $$ private void addGetter(ClassFile classfile, final Method[] getters) throws CannotCompileException -->Line_40 $$ code.addOpcode(Opcode.RETURN)[ CD ]
Line_8 $$ if (getters.length >= 0) -->Line_12 $$ for (int i = 0; i < getters.length; ++i) [ CD ]
Line_13 $$ if (getters[i] != null) -->Line_17 $$ final Class returnType = getter.getReturnType()[ CD ]
Line_17 $$ final Class returnType = getter.getReturnType()-->Line_19 $$ if (returnType.isPrimitive()) [ FD ]
Line_27 $$ if (this.targetBean.isInterface()) -->Line_28 $$ code.addInvokeinterface(targetBeanConstPoolIndex, getterName, getterSignature, 1)[ CD ]
Line_13 $$ if (getters[i] != null) -->Line_27 $$ if (this.targetBean.isInterface()) [ CD ]
Line_7 $$ final Bytecode code = new Bytecode(constPool, 6, 4)-->Line_15 $$ code.addAload(2)[ FD ]
Line_17 $$ final Class returnType = getter.getReturnType()-->Line_20 $$ typeIndex = FactoryHelper.typeIndex(returnType)[ FD ]
Line_7 $$ final Bytecode code = new Bytecode(constPool, 6, 4)-->Line_22 $$ code.addOpcode(Opcode.DUP)[ FD ]
Line_20 $$ typeIndex = FactoryHelper.typeIndex(returnType)-->Line_32 $$ if (typeIndex >= 0) [ FD ]
Line_8 $$ if (getters.length >= 0) -->Line_10 $$ code.addCheckcast(this.targetBean.getName())[ CD ]
Line_7 $$ final Bytecode code = new Bytecode(constPool, 6, 4)-->Line_10 $$ code.addCheckcast(this.targetBean.getName())[ FD ]
Line_26 $$ final String getterName = getter.getName()-->Line_28 $$ code.addInvokeinterface(targetBeanConstPoolIndex, getterName, getterSignature, 1)[ FD ]
Line_2 $$ private void addGetter(ClassFile classfile, final Method[] getters) throws CannotCompileException -->Line_5 $$ final String desc = GET_SETTER_DESC[ CD ]
Line_14 $$ final Method getter = getters[i]-->Line_26 $$ final String getterName = getter.getName()[ FD ]
Line_19 $$ if (returnType.isPrimitive()) -->Line_21 $$ code.addNew(FactoryHelper.wrapperTypes[typeIndex])[ CD ]
Line_14 $$ final Method getter = getters[i]-->Line_25 $$ final String getterSignature = RuntimeSupport.makeDescriptor(getter)[ FD ]
Line_25 $$ final String getterSignature = RuntimeSupport.makeDescriptor(getter)-->Line_28 $$ code.addInvokeinterface(targetBeanConstPoolIndex, getterName, getterSignature, 1)[ FD ]
Line_6 $$ final MethodInfo getterMethodInfo = new MethodInfo(constPool, GENERATED_GETTER_NAME, desc)-->Line_41 $$ getterMethodInfo.setCodeAttribute(code.toCodeAttribute())[ FD ]
Line_2 $$ private void addGetter(ClassFile classfile, final Method[] getters) throws CannotCompileException -->Line_3 $$ final ConstPool constPool = classfile.getConstPool()[ FD ]
Line_19 $$ if (returnType.isPrimitive()) -->Line_20 $$ typeIndex = FactoryHelper.typeIndex(returnType)[ CD ]
Line_13 $$ if (getters[i] != null) -->Line_25 $$ final String getterSignature = RuntimeSupport.makeDescriptor(getter)[ CD ]
Line_13 $$ if (getters[i] != null) -->Line_26 $$ final String getterName = getter.getName()[ CD ]
Line_2 $$ private void addGetter(ClassFile classfile, final Method[] getters) throws CannotCompileException -->Line_8 $$ if (getters.length >= 0) [ CD ]
Line_7 $$ final Bytecode code = new Bytecode(constPool, 6, 4)-->Line_16 $$ code.addIconst(i)[ FD ]
Line_7 $$ final Bytecode code = new Bytecode(constPool, 6, 4)-->Line_24 $$ code.addAload(3)[ FD ]
Line_7 $$ final Bytecode code = new Bytecode(constPool, 6, 4)-->Line_11 $$ code.addAstore(3)[ FD ]
Line_4 $$ final int targetBeanConstPoolIndex = constPool.addClassInfo(this.targetBean.getName())-->Line_28 $$ code.addInvokeinterface(targetBeanConstPoolIndex, getterName, getterSignature, 1)[ FD ]
Line_7 $$ final Bytecode code = new Bytecode(constPool, 6, 4)-->Line_9 $$ code.addAload(1)[ FD ]
Line_2 $$ private void addGetter(ClassFile classfile, final Method[] getters) throws CannotCompileException -->Line_4 $$ final int targetBeanConstPoolIndex = constPool.addClassInfo(this.targetBean.getName())[ CD ]
Line_7 $$ final Bytecode code = new Bytecode(constPool, 6, 4)-->Line_40 $$ code.addOpcode(Opcode.RETURN)[ FD ]
Line_8 $$ if (getters.length >= 0) -->Line_11 $$ code.addAstore(3)[ CD ]
Line_13 $$ if (getters[i] != null) -->Line_35 $$ code.add(Opcode.AASTORE)[ CD ]
Line_2 $$ private void addGetter(ClassFile classfile, final Method[] getters) throws CannotCompileException -->Line_43 $$ classfile.addMethod(getterMethodInfo)[ FD ]
Line_8 $$ if (getters.length >= 0) -->Line_9 $$ code.addAload(1)[ CD ]
Line_13 $$ if (getters[i] != null) -->Line_16 $$ code.addIconst(i)[ CD ]
Line_14 $$ final Method getter = getters[i]-->Line_17 $$ final Class returnType = getter.getReturnType()[ FD ]
Line_27 $$ if (this.targetBean.isInterface()) -->Line_30 $$ code.addInvokevirtual(targetBeanConstPoolIndex, getterName, getterSignature)[ CD ]
Line_13 $$ if (getters[i] != null) -->Line_14 $$ final Method getter = getters[i][ CD ]
Line_7 $$ final Bytecode code = new Bytecode(constPool, 6, 4)-->Line_21 $$ code.addNew(FactoryHelper.wrapperTypes[typeIndex])[ FD ]
Line_7 $$ final Bytecode code = new Bytecode(constPool, 6, 4)-->Line_36 $$ code.growStack(-3)[ FD ]
Line_2 $$ private void addGetter(ClassFile classfile, final Method[] getters) throws CannotCompileException -->Line_42 $$ getterMethodInfo.setAccessFlags(AccessFlag.PUBLIC)[ CD ]
Line_13 $$ if (getters[i] != null) -->Line_36 $$ code.growStack(-3)[ CD ]
Line_13 $$ if (getters[i] != null) -->Line_19 $$ if (returnType.isPrimitive()) [ CD ]
Line_2 $$ private void addGetter(ClassFile classfile, final Method[] getters) throws CannotCompileException -->Line_7 $$ final Bytecode code = new Bytecode(constPool, 6, 4)[ CD ]
Line_13 $$ if (getters[i] != null) -->Line_18 $$ int typeIndex = -1[ CD ]
Line_2 $$ private void addGetter(ClassFile classfile, final Method[] getters) throws CannotCompileException -->Line_6 $$ final MethodInfo getterMethodInfo = new MethodInfo(constPool, GENERATED_GETTER_NAME, desc)[ CD ]
Line_7 $$ final Bytecode code = new Bytecode(constPool, 6, 4)-->Line_41 $$ getterMethodInfo.setCodeAttribute(code.toCodeAttribute())[ FD ]
Line_26 $$ final String getterName = getter.getName()-->Line_30 $$ code.addInvokevirtual(targetBeanConstPoolIndex, getterName, getterSignature)[ FD ]
Line_6 $$ final MethodInfo getterMethodInfo = new MethodInfo(constPool, GENERATED_GETTER_NAME, desc)-->Line_43 $$ classfile.addMethod(getterMethodInfo)[ FD ]
Line_19 $$ if (returnType.isPrimitive()) -->Line_22 $$ code.addOpcode(Opcode.DUP)[ CD ]
Line_18 $$ int typeIndex = -1-->Line_20 $$ typeIndex = FactoryHelper.typeIndex(returnType)[ FD ]
Line_3 $$ final ConstPool constPool = classfile.getConstPool()-->Line_4 $$ final int targetBeanConstPoolIndex = constPool.addClassInfo(this.targetBean.getName())[ FD ]
Line_4 $$ final int targetBeanConstPoolIndex = constPool.addClassInfo(this.targetBean.getName())-->Line_30 $$ code.addInvokevirtual(targetBeanConstPoolIndex, getterName, getterSignature)[ FD ]
Line_12 $$ for (int i = 0; i < getters.length; ++i) -->Line_13 $$ if (getters[i] != null) [ CD ]
Line_25 $$ final String getterSignature = RuntimeSupport.makeDescriptor(getter)-->Line_30 $$ code.addInvokevirtual(targetBeanConstPoolIndex, getterName, getterSignature)[ FD ]
Line_13 $$ if (getters[i] != null) -->Line_32 $$ if (typeIndex >= 0) [ CD ]
Line_18 $$ int typeIndex = -1-->Line_32 $$ if (typeIndex >= 0) [ FD ]
Line_2 $$ private void addGetter(ClassFile classfile, final Method[] getters) throws CannotCompileException -->Line_3 $$ final ConstPool constPool = classfile.getConstPool()[ CD ]
Line_32 $$ if (typeIndex >= 0) -->Line_33 $$ code.addInvokespecial(FactoryHelper.wrapperTypes[typeIndex], MethodInfo.nameInit, FactoryHelper.wrapperDesc[typeIndex])[ CD ]
Line_2 $$ private void addGetter(ClassFile classfile, final Method[] getters) throws CannotCompileException -->Line_43 $$ classfile.addMethod(getterMethodInfo)[ CD ]
Line_7 $$ final Bytecode code = new Bytecode(constPool, 6, 4)-->Line_33 $$ code.addInvokespecial(FactoryHelper.wrapperTypes[typeIndex], MethodInfo.nameInit, FactoryHelper.wrapperDesc[typeIndex])[ FD ]
Line_7 $$ final Bytecode code = new Bytecode(constPool, 6, 4)-->Line_30 $$ code.addInvokevirtual(targetBeanConstPoolIndex, getterName, getterSignature)[ FD ]
Line_7 $$ final Bytecode code = new Bytecode(constPool, 6, 4)-->Line_28 $$ code.addInvokeinterface(targetBeanConstPoolIndex, getterName, getterSignature, 1)[ FD ]
Line_13 $$ if (getters[i] != null) -->Line_24 $$ code.addAload(3)[ CD ]
Line_13 $$ if (getters[i] != null) -->Line_15 $$ code.addAload(2)[ CD ]
Line_6 $$ final MethodInfo getterMethodInfo = new MethodInfo(constPool, GENERATED_GETTER_NAME, desc)-->Line_42 $$ getterMethodInfo.setAccessFlags(AccessFlag.PUBLIC)[ FD ]
