Line_15 $$ Class<?> pt = m.getReturnType()-->Line_16 $$ if (pt.isAssignableFrom(type))[ FD ]
Line_2 $$ public Method getGetter(final String propertyName, final Class<?> type) -->Line_5 $$ final Method result = lookup(new Lookup<Method>() [ CD ]
Line_7 $$ Collection<Method> methods = index.getAllMethods(name, 0)-->Line_10 $$ return methods.iterator().next()[ FD ]
Line_14 $$ for (Method m : methods) -->Line_15 $$ Class<?> pt = m.getReturnType()[ FD ]
Line_7 $$ Collection<Method> methods = index.getAllMethods(name, 0)-->Line_9 $$ if (methods.size() == 1)[ FD ]
Line_5 $$ final Method result = lookup(new Lookup<Method>() -->Line_7 $$ Collection<Method> methods = index.getAllMethods(name, 0)[ CD ]
Line_4 $$ final String name = ((isBoolean) ? "is" : "get") + Character.toUpperCase(propertyName.charAt(0)) + propertyName.substring(1)-->Line_7 $$ Collection<Method> methods = index.getAllMethods(name, 0)[ FD ]
Line_2 $$ public Method getGetter(final String propertyName, final Class<?> type) -->Line_16 $$ if (pt.isAssignableFrom(type))[ FD ]
Line_5 $$ final Method result = lookup(new Lookup<Method>() -->Line_7 $$ Collection<Method> methods = index.getAllMethods(name, 0)[ FD ]
Line_2 $$ public Method getGetter(final String propertyName, final Class<?> type) -->Line_3 $$ final boolean isBoolean = Boolean.TYPE.equals(type)[ CD ]
Line_8 $$ if (type == null) -->Line_9 $$ if (methods.size() == 1)[ CD ]
Line_9 $$ if (methods.size() == 1)-->Line_10 $$ return methods.iterator().next()[ CD ]
Line_2 $$ public Method getGetter(final String propertyName, final Class<?> type) -->Line_24 $$ return result[ CD ]
Line_2 $$ public Method getGetter(final String propertyName, final Class<?> type) -->Line_23 $$ throw PojoLogger.ROOT_LOGGER.getterNotFound(type, beanClass.getName())[ FD ]
Line_5 $$ final Method result = lookup(new Lookup<Method>() -->Line_19 $$ return null[ CD ]
Line_2 $$ public Method getGetter(final String propertyName, final Class<?> type) -->Line_22 $$ if (result == null)[ CD ]
Line_14 $$ for (Method m : methods) -->Line_16 $$ if (pt.isAssignableFrom(type))[ FD ]
Line_2 $$ public Method getGetter(final String propertyName, final Class<?> type) -->Line_8 $$ if (type == null) [ FD ]
Line_9 $$ if (methods.size() == 1)-->Line_12 $$ return null[ CD ]
Line_2 $$ public Method getGetter(final String propertyName, final Class<?> type) -->Line_3 $$ final boolean isBoolean = Boolean.TYPE.equals(type)[ FD ]
Line_16 $$ if (pt.isAssignableFrom(type))-->Line_17 $$ return m[ CD ]
Line_5 $$ final Method result = lookup(new Lookup<Method>() -->Line_22 $$ if (result == null)[ FD ]
Line_2 $$ public Method getGetter(final String propertyName, final Class<?> type) -->Line_4 $$ final String name = ((isBoolean) ? "is" : "get") + Character.toUpperCase(propertyName.charAt(0)) + propertyName.substring(1)[ CD ]
Line_5 $$ final Method result = lookup(new Lookup<Method>() -->Line_8 $$ if (type == null) [ CD ]
Line_2 $$ public Method getGetter(final String propertyName, final Class<?> type) -->Line_4 $$ final String name = ((isBoolean) ? "is" : "get") + Character.toUpperCase(propertyName.charAt(0)) + propertyName.substring(1)[ FD ]
