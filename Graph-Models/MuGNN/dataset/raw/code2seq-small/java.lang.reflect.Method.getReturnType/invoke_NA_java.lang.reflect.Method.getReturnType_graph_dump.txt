Line_4 $$ Object other = args[0]-->Line_8 $$ return this.provider.getType().equals(other)[ FD ]
Line_9 $$ if (method.getName().equals("hashCode")) -->Line_10 $$ return this.provider.getType().hashCode()[ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_24 $$ return method.invoke(this.provider.getType(), args)[ FD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_3 $$ if (method.getName().equals("equals")) [ FD ]
Line_4 $$ Object other = args[0]-->Line_6 $$ other = unwrap((Type) other)[ FD ]
Line_11 $$ if (method.getName().equals("getTypeProvider")) -->Line_12 $$ return this.provider[ CD ]
Line_16 $$ if (Type[].class == method.getReturnType() && args == null) -->Line_17 $$ Type[] result = new Type[((Type[]) method.invoke(this.provider.getType(), args)).length][ CD ]
Line_16 $$ if (Type[].class == method.getReturnType() && args == null) -->Line_18 $$ for (int i = 0; i < result.length; i++) [ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_3 $$ if (method.getName().equals("equals")) [ CD ]
Line_3 $$ if (method.getName().equals("equals")) -->Line_5 $$ if (other instanceof Type) [ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_11 $$ if (method.getName().equals("getTypeProvider")) [ FD ]
Line_16 $$ if (Type[].class == method.getReturnType() && args == null) -->Line_21 $$ return result[ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_14 $$ if (Type.class == method.getReturnType() && args == null) [ FD ]
Line_5 $$ if (other instanceof Type) -->Line_6 $$ other = unwrap((Type) other)[ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_16 $$ if (Type[].class == method.getReturnType() && args == null) [ FD ]
Line_3 $$ if (method.getName().equals("equals")) -->Line_9 $$ if (method.getName().equals("hashCode")) [ CD ]
Line_3 $$ if (method.getName().equals("equals")) -->Line_8 $$ return this.provider.getType().equals(other)[ CD ]
Line_9 $$ if (method.getName().equals("hashCode")) -->Line_11 $$ if (method.getName().equals("getTypeProvider")) [ CD ]
Line_18 $$ for (int i = 0; i < result.length; i++) -->Line_19 $$ result[i] = forTypeProvider(new MethodInvokeTypeProvider(this.provider, method, i))[ CD ]
Line_3 $$ if (method.getName().equals("equals")) -->Line_4 $$ Object other = args[0][ CD ]
Line_4 $$ Object other = args[0]-->Line_5 $$ if (other instanceof Type) [ FD ]
Line_6 $$ other = unwrap((Type) other)-->Line_8 $$ return this.provider.getType().equals(other)[ FD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_14 $$ if (Type.class == method.getReturnType() && args == null) [ CD ]
Line_14 $$ if (Type.class == method.getReturnType() && args == null) -->Line_15 $$ return forTypeProvider(new MethodInvokeTypeProvider(this.provider, method, -1))[ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_17 $$ Type[] result = new Type[((Type[]) method.invoke(this.provider.getType(), args)).length][ FD ]
Line_14 $$ if (Type.class == method.getReturnType() && args == null) -->Line_16 $$ if (Type[].class == method.getReturnType() && args == null) [ CD ]
Line_2 $$ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable -->Line_9 $$ if (method.getName().equals("hashCode")) [ FD ]
