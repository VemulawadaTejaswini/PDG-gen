Line_4 $$ PropertyAccessorExtractionContext getGetter = property.getGetGetter()-->Line_7 $$ Method getMethod = getGetter.getMostSpecificDeclaration()[ FD ]
Line_5 $$ PropertyAccessorExtractionContext isGetter = property.getIsGetter()-->Line_13 $$ if (isGetter != null) [ FD ]
Line_2 $$ private void validateProperties(ModelSchemaExtractionContext<?> context, Iterable<ModelPropertyExtractionContext> properties) -->Line_16 $$ handleInvalidGetter(context, isMethod, "getter method name must start with 'get'")[ FD ]
Line_13 $$ if (isGetter != null) -->Line_15 $$ if (isMethod.getReturnType() != boolean.class) [ CD ]
Line_8 $$ Method isMethod = isGetter.getMostSpecificDeclaration()-->Line_16 $$ handleInvalidGetter(context, isMethod, "getter method name must start with 'get'")[ FD ]
Line_8 $$ Method isMethod = isGetter.getMostSpecificDeclaration()-->Line_9 $$ if (getMethod.getReturnType() != boolean.class || isMethod.getReturnType() != boolean.class) [ FD ]
Line_3 $$ for (ModelPropertyExtractionContext property : properties) -->Line_10 $$ handleInvalidGetter(context, isMethod, String.format("property '%s' has both '%s()' and '%s()' getters, but they don't both return a boolean", property.getPropertyName(), isMethod.getName(), getMethod.getName()))[ FD ]
Line_13 $$ if (isGetter != null) -->Line_14 $$ Method isMethod = isGetter.getMostSpecificDeclaration()[ CD ]
Line_6 $$ if (getGetter != null && isGetter != null) -->Line_7 $$ Method getMethod = getGetter.getMostSpecificDeclaration()[ CD ]
Line_8 $$ Method isMethod = isGetter.getMostSpecificDeclaration()-->Line_15 $$ if (isMethod.getReturnType() != boolean.class) [ FD ]
Line_7 $$ Method getMethod = getGetter.getMostSpecificDeclaration()-->Line_10 $$ handleInvalidGetter(context, isMethod, String.format("property '%s' has both '%s()' and '%s()' getters, but they don't both return a boolean", property.getPropertyName(), isMethod.getName(), getMethod.getName()))[ FD ]
Line_8 $$ Method isMethod = isGetter.getMostSpecificDeclaration()-->Line_10 $$ handleInvalidGetter(context, isMethod, String.format("property '%s' has both '%s()' and '%s()' getters, but they don't both return a boolean", property.getPropertyName(), isMethod.getName(), getMethod.getName()))[ FD ]
Line_5 $$ PropertyAccessorExtractionContext isGetter = property.getIsGetter()-->Line_14 $$ Method isMethod = isGetter.getMostSpecificDeclaration()[ FD ]
Line_15 $$ if (isMethod.getReturnType() != boolean.class) -->Line_16 $$ handleInvalidGetter(context, isMethod, "getter method name must start with 'get'")[ CD ]
Line_9 $$ if (getMethod.getReturnType() != boolean.class || isMethod.getReturnType() != boolean.class) -->Line_10 $$ handleInvalidGetter(context, isMethod, String.format("property '%s' has both '%s()' and '%s()' getters, but they don't both return a boolean", property.getPropertyName(), isMethod.getName(), getMethod.getName()))[ CD ]
Line_5 $$ PropertyAccessorExtractionContext isGetter = property.getIsGetter()-->Line_8 $$ Method isMethod = isGetter.getMostSpecificDeclaration()[ FD ]
Line_6 $$ if (getGetter != null && isGetter != null) -->Line_9 $$ if (getMethod.getReturnType() != boolean.class || isMethod.getReturnType() != boolean.class) [ CD ]
Line_3 $$ for (ModelPropertyExtractionContext property : properties) -->Line_4 $$ PropertyAccessorExtractionContext getGetter = property.getGetGetter()[ FD ]
Line_3 $$ for (ModelPropertyExtractionContext property : properties) -->Line_19 $$ validateProperty(context, property)[ FD ]
Line_6 $$ if (getGetter != null && isGetter != null) -->Line_8 $$ Method isMethod = isGetter.getMostSpecificDeclaration()[ CD ]
Line_2 $$ private void validateProperties(ModelSchemaExtractionContext<?> context, Iterable<ModelPropertyExtractionContext> properties) -->Line_19 $$ validateProperty(context, property)[ FD ]
Line_7 $$ Method getMethod = getGetter.getMostSpecificDeclaration()-->Line_9 $$ if (getMethod.getReturnType() != boolean.class || isMethod.getReturnType() != boolean.class) [ FD ]
Line_3 $$ for (ModelPropertyExtractionContext property : properties) -->Line_5 $$ PropertyAccessorExtractionContext isGetter = property.getIsGetter()[ FD ]
Line_2 $$ private void validateProperties(ModelSchemaExtractionContext<?> context, Iterable<ModelPropertyExtractionContext> properties) -->Line_10 $$ handleInvalidGetter(context, isMethod, String.format("property '%s' has both '%s()' and '%s()' getters, but they don't both return a boolean", property.getPropertyName(), isMethod.getName(), getMethod.getName()))[ FD ]
