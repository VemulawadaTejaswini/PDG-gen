Line_10 $$ synthesizable = Boolean.TRUE-->Line_29 $$ return synthesizable.booleanValue()[ FD ]
Line_13 $$ Class<?> returnType = attribute.getReturnType()-->Line_14 $$ if (Annotation[].class.isAssignableFrom(returnType)) [ FD ]
Line_3 $$ Boolean synthesizable = synthesizableCache.get(annotationType)-->Line_17 $$ synthesizable = Boolean.TRUE[ FD ]
Line_8 $$ for (Method attribute : getAttributeMethods(annotationType)) -->Line_9 $$ if (!getAttributeAliasNames(attribute).isEmpty()) [ FD ]
Line_4 $$ if (synthesizable != null) -->Line_5 $$ return synthesizable.booleanValue()[ CD ]
Line_3 $$ Boolean synthesizable = synthesizableCache.get(annotationType)-->Line_5 $$ return synthesizable.booleanValue()[ FD ]
Line_10 $$ synthesizable = Boolean.TRUE-->Line_28 $$ synthesizableCache.put(annotationType, synthesizable)[ FD ]
Line_3 $$ Boolean synthesizable = synthesizableCache.get(annotationType)-->Line_23 $$ synthesizable = Boolean.TRUE[ FD ]
Line_17 $$ synthesizable = Boolean.TRUE-->Line_29 $$ return synthesizable.booleanValue()[ FD ]
Line_22 $$ if (isSynthesizable(nestedAnnotationType)) -->Line_23 $$ synthesizable = Boolean.TRUE[ CD ]
Line_3 $$ Boolean synthesizable = synthesizableCache.get(annotationType)-->Line_4 $$ if (synthesizable != null) [ FD ]
Line_13 $$ Class<?> returnType = attribute.getReturnType()-->Line_15 $$ Class<? extends Annotation> nestedAnnotationType = (Class<? extends Annotation>) returnType.getComponentType()[ FD ]
Line_8 $$ for (Method attribute : getAttributeMethods(annotationType)) -->Line_13 $$ Class<?> returnType = attribute.getReturnType()[ FD ]
Line_2 $$ private static boolean isSynthesizable(Class<? extends Annotation> annotationType) -->Line_3 $$ Boolean synthesizable = synthesizableCache.get(annotationType)[ CD ]
Line_7 $$ synthesizable = Boolean.FALSE-->Line_23 $$ synthesizable = Boolean.TRUE[ FD ]
Line_7 $$ synthesizable = Boolean.FALSE-->Line_29 $$ return synthesizable.booleanValue()[ FD ]
Line_3 $$ Boolean synthesizable = synthesizableCache.get(annotationType)-->Line_28 $$ synthesizableCache.put(annotationType, synthesizable)[ FD ]
Line_14 $$ if (Annotation[].class.isAssignableFrom(returnType)) -->Line_20 $$ if (Annotation.class.isAssignableFrom(returnType)) [ CD ]
Line_3 $$ Boolean synthesizable = synthesizableCache.get(annotationType)-->Line_7 $$ synthesizable = Boolean.FALSE[ FD ]
Line_7 $$ synthesizable = Boolean.FALSE-->Line_10 $$ synthesizable = Boolean.TRUE[ FD ]
Line_14 $$ if (Annotation[].class.isAssignableFrom(returnType)) -->Line_16 $$ if (isSynthesizable(nestedAnnotationType)) [ CD ]
Line_10 $$ synthesizable = Boolean.TRUE-->Line_17 $$ synthesizable = Boolean.TRUE[ FD ]
Line_16 $$ if (isSynthesizable(nestedAnnotationType)) -->Line_17 $$ synthesizable = Boolean.TRUE[ CD ]
Line_15 $$ Class<? extends Annotation> nestedAnnotationType = (Class<? extends Annotation>) returnType.getComponentType()-->Line_22 $$ if (isSynthesizable(nestedAnnotationType)) [ FD ]
Line_9 $$ if (!getAttributeAliasNames(attribute).isEmpty()) -->Line_10 $$ synthesizable = Boolean.TRUE[ CD ]
Line_15 $$ Class<? extends Annotation> nestedAnnotationType = (Class<? extends Annotation>) returnType.getComponentType()-->Line_16 $$ if (isSynthesizable(nestedAnnotationType)) [ FD ]
Line_7 $$ synthesizable = Boolean.FALSE-->Line_17 $$ synthesizable = Boolean.TRUE[ FD ]
Line_20 $$ if (Annotation.class.isAssignableFrom(returnType)) -->Line_22 $$ if (isSynthesizable(nestedAnnotationType)) [ CD ]
Line_17 $$ synthesizable = Boolean.TRUE-->Line_23 $$ synthesizable = Boolean.TRUE[ FD ]
Line_2 $$ private static boolean isSynthesizable(Class<? extends Annotation> annotationType) -->Line_4 $$ if (synthesizable != null) [ CD ]
Line_2 $$ private static boolean isSynthesizable(Class<? extends Annotation> annotationType) -->Line_28 $$ synthesizableCache.put(annotationType, synthesizable)[ FD ]
Line_17 $$ synthesizable = Boolean.TRUE-->Line_28 $$ synthesizableCache.put(annotationType, synthesizable)[ FD ]
Line_2 $$ private static boolean isSynthesizable(Class<? extends Annotation> annotationType) -->Line_8 $$ for (Method attribute : getAttributeMethods(annotationType)) [ FD ]
Line_2 $$ private static boolean isSynthesizable(Class<? extends Annotation> annotationType) -->Line_3 $$ Boolean synthesizable = synthesizableCache.get(annotationType)[ FD ]
Line_3 $$ Boolean synthesizable = synthesizableCache.get(annotationType)-->Line_10 $$ synthesizable = Boolean.TRUE[ FD ]
Line_23 $$ synthesizable = Boolean.TRUE-->Line_29 $$ return synthesizable.booleanValue()[ FD ]
Line_23 $$ synthesizable = Boolean.TRUE-->Line_28 $$ synthesizableCache.put(annotationType, synthesizable)[ FD ]
Line_7 $$ synthesizable = Boolean.FALSE-->Line_28 $$ synthesizableCache.put(annotationType, synthesizable)[ FD ]
Line_3 $$ Boolean synthesizable = synthesizableCache.get(annotationType)-->Line_29 $$ return synthesizable.booleanValue()[ FD ]
Line_2 $$ private static boolean isSynthesizable(Class<? extends Annotation> annotationType) -->Line_28 $$ synthesizableCache.put(annotationType, synthesizable)[ CD ]
Line_2 $$ private static boolean isSynthesizable(Class<? extends Annotation> annotationType) -->Line_7 $$ synthesizable = Boolean.FALSE[ CD ]
Line_14 $$ if (Annotation[].class.isAssignableFrom(returnType)) -->Line_15 $$ Class<? extends Annotation> nestedAnnotationType = (Class<? extends Annotation>) returnType.getComponentType()[ CD ]
Line_2 $$ private static boolean isSynthesizable(Class<? extends Annotation> annotationType) -->Line_29 $$ return synthesizable.booleanValue()[ CD ]
Line_10 $$ synthesizable = Boolean.TRUE-->Line_23 $$ synthesizable = Boolean.TRUE[ FD ]
Line_13 $$ Class<?> returnType = attribute.getReturnType()-->Line_20 $$ if (Annotation.class.isAssignableFrom(returnType)) [ FD ]
