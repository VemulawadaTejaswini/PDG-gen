Line_5 $$ Method method = ((ReflectiveMethodExecutor) executorToCheck.get()).getMethod()-->Line_6 $$ this.exitTypeDescriptor = CodeFlow.toDescriptor(method.getReturnType())[ FD ]
Line_2 $$ private void updateExitTypeDescriptor() -->Line_4 $$ if (executorToCheck != null && executorToCheck.get() instanceof ReflectiveMethodExecutor) [ CD ]
Line_2 $$ private void updateExitTypeDescriptor() -->Line_3 $$ CachedMethodExecutor executorToCheck = this.cachedExecutor[ CD ]
Line_3 $$ CachedMethodExecutor executorToCheck = this.cachedExecutor-->Line_5 $$ Method method = ((ReflectiveMethodExecutor) executorToCheck.get()).getMethod()[ FD ]
Line_4 $$ if (executorToCheck != null && executorToCheck.get() instanceof ReflectiveMethodExecutor) -->Line_5 $$ Method method = ((ReflectiveMethodExecutor) executorToCheck.get()).getMethod()[ CD ]
Line_3 $$ CachedMethodExecutor executorToCheck = this.cachedExecutor-->Line_4 $$ if (executorToCheck != null && executorToCheck.get() instanceof ReflectiveMethodExecutor) [ FD ]
Line_4 $$ if (executorToCheck != null && executorToCheck.get() instanceof ReflectiveMethodExecutor) -->Line_6 $$ this.exitTypeDescriptor = CodeFlow.toDescriptor(method.getReturnType())[ CD ]
