Line_2 $$ protected void handleError(Throwable ex, Method method, Object... params) throws Exception -->Line_7 $$ this.exceptionHandler.handleUncaughtException(ex, method, params)[ FD ]
Line_2 $$ protected void handleError(Throwable ex, Method method, Object... params) throws Exception -->Line_3 $$ if (Future.class.isAssignableFrom(method.getReturnType())) [ FD ]
Line_2 $$ protected void handleError(Throwable ex, Method method, Object... params) throws Exception -->Line_9 $$ logger.error("Exception handler for async method '" + method.toGenericString() + "' threw unexpected exception itself", ex2)[ FD ]
Line_2 $$ protected void handleError(Throwable ex, Method method, Object... params) throws Exception -->Line_3 $$ if (Future.class.isAssignableFrom(method.getReturnType())) [ CD ]
Line_3 $$ if (Future.class.isAssignableFrom(method.getReturnType())) -->Line_4 $$ ReflectionUtils.rethrowException(ex)[ CD ]
Line_2 $$ protected void handleError(Throwable ex, Method method, Object... params) throws Exception -->Line_4 $$ ReflectionUtils.rethrowException(ex)[ FD ]
