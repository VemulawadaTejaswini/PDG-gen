Line_3 $$ if (returnTypes.containsKey(method.getName())) -->Line_4 $$ return returnTypes.get(method.getName())[ CD ]
Line_2 $$ private Message getReturnProtoType(Method method) throws Exception -->Line_7 $$ Method newInstMethod = returnType.getMethod("getDefaultInstance")[ CD ]
Line_2 $$ private Message getReturnProtoType(Method method) throws Exception -->Line_8 $$ newInstMethod.setAccessible(true)[ CD ]
Line_7 $$ Method newInstMethod = returnType.getMethod("getDefaultInstance")-->Line_9 $$ Message prototype = (Message) newInstMethod.invoke(null, (Object[]) null)[ FD ]
Line_2 $$ private Message getReturnProtoType(Method method) throws Exception -->Line_4 $$ return returnTypes.get(method.getName())[ FD ]
Line_2 $$ private Message getReturnProtoType(Method method) throws Exception -->Line_10 $$ returnTypes.put(method.getName(), prototype)[ CD ]
Line_2 $$ private Message getReturnProtoType(Method method) throws Exception -->Line_3 $$ if (returnTypes.containsKey(method.getName())) [ CD ]
Line_2 $$ private Message getReturnProtoType(Method method) throws Exception -->Line_9 $$ Message prototype = (Message) newInstMethod.invoke(null, (Object[]) null)[ CD ]
Line_2 $$ private Message getReturnProtoType(Method method) throws Exception -->Line_11 $$ return prototype[ CD ]
Line_6 $$ Class<?> returnType = method.getReturnType()-->Line_7 $$ Method newInstMethod = returnType.getMethod("getDefaultInstance")[ FD ]
Line_7 $$ Method newInstMethod = returnType.getMethod("getDefaultInstance")-->Line_8 $$ newInstMethod.setAccessible(true)[ FD ]
Line_9 $$ Message prototype = (Message) newInstMethod.invoke(null, (Object[]) null)-->Line_10 $$ returnTypes.put(method.getName(), prototype)[ FD ]
Line_2 $$ private Message getReturnProtoType(Method method) throws Exception -->Line_10 $$ returnTypes.put(method.getName(), prototype)[ FD ]
Line_2 $$ private Message getReturnProtoType(Method method) throws Exception -->Line_3 $$ if (returnTypes.containsKey(method.getName())) [ FD ]
Line_2 $$ private Message getReturnProtoType(Method method) throws Exception -->Line_6 $$ Class<?> returnType = method.getReturnType()[ CD ]
Line_2 $$ private Message getReturnProtoType(Method method) throws Exception -->Line_6 $$ Class<?> returnType = method.getReturnType()[ FD ]
