Line_3 $$ B lastBucket = null-->Line_43 $$ lastBucket = iter.next()[ FD ]
Line_39 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_50 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_49 $$ while (key <= max) -->Line_51 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)[ CD ]
Line_16 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_23 $$ while (key < firstBucket.key) [ FD ]
Line_25 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_39 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)[ FD ]
Line_5 $$ ListIterator<B> iter = list.listIterator()-->Line_15 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_12 $$ long key = bounds.min-->Line_39 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)[ FD ]
Line_25 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_37 $$ while (key < nextBucket.key) [ FD ]
Line_12 $$ long key = bounds.min-->Line_22 $$ if (key < firstBucket.key) [ FD ]
Line_22 $$ if (key < firstBucket.key) -->Line_23 $$ while (key < firstBucket.key) [ CD ]
Line_36 $$ long key = emptyBucketInfo.rounding.nextRoundingValue(lastBucket.key)-->Line_51 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)[ FD ]
Line_36 $$ long key = emptyBucketInfo.rounding.nextRoundingValue(lastBucket.key)-->Line_37 $$ while (key < nextBucket.key) [ FD ]
Line_16 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_15 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_4 $$ ExtendedBounds bounds = emptyBucketInfo.bounds-->Line_8 $$ if (bounds != null) [ FD ]
Line_16 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_39 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)[ FD ]
Line_14 $$ while (key <= max) -->Line_16 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)[ CD ]
Line_16 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_49 $$ while (key <= max) [ FD ]
Line_16 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_51 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)[ FD ]
Line_5 $$ ListIterator<B> iter = list.listIterator()-->Line_24 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_39 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_38 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_39 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_51 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)[ FD ]
Line_51 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_49 $$ while (key <= max) [ FD ]
Line_39 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_37 $$ while (key < nextBucket.key) [ FD ]
Line_2 $$ private void addEmptyBuckets(List<B> list, ReduceContext reduceContext) -->Line_3 $$ B lastBucket = null[ CD ]
Line_25 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_24 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_12 $$ long key = bounds.min-->Line_37 $$ while (key < nextBucket.key) [ FD ]
Line_12 $$ long key = bounds.min-->Line_23 $$ while (key < firstBucket.key) [ FD ]
Line_2 $$ private void addEmptyBuckets(List<B> list, ReduceContext reduceContext) -->Line_4 $$ ExtendedBounds bounds = emptyBucketInfo.bounds[ CD ]
Line_23 $$ while (key < firstBucket.key) -->Line_25 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)[ CD ]
Line_23 $$ while (key < firstBucket.key) -->Line_24 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ CD ]
Line_36 $$ long key = emptyBucketInfo.rounding.nextRoundingValue(lastBucket.key)-->Line_50 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_25 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_23 $$ while (key < firstBucket.key) [ FD ]
Line_5 $$ ListIterator<B> iter = list.listIterator()-->Line_43 $$ lastBucket = iter.next()[ FD ]
Line_12 $$ long key = bounds.min-->Line_14 $$ while (key <= max) [ FD ]
Line_11 $$ if (bounds.min != null && bounds.max != null) -->Line_12 $$ long key = bounds.min[ CD ]
Line_2 $$ private void addEmptyBuckets(List<B> list, ReduceContext reduceContext) -->Line_8 $$ if (bounds != null) [ CD ]
Line_51 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_50 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_5 $$ ListIterator<B> iter = list.listIterator()-->Line_38 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_5 $$ ListIterator<B> iter = list.listIterator()-->Line_9 $$ B firstBucket = iter.hasNext() ? list.get(iter.nextIndex()) : null[ FD ]
Line_37 $$ while (key < nextBucket.key) -->Line_39 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)[ CD ]
Line_16 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_24 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_12 $$ long key = bounds.min-->Line_49 $$ while (key <= max) [ FD ]
Line_14 $$ while (key <= max) -->Line_15 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ CD ]
Line_10 $$ if (firstBucket == null) -->Line_11 $$ if (bounds.min != null && bounds.max != null) [ CD ]
Line_12 $$ long key = bounds.min-->Line_16 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)[ FD ]
Line_5 $$ ListIterator<B> iter = list.listIterator()-->Line_34 $$ B nextBucket = list.get(iter.nextIndex())[ FD ]
Line_12 $$ long key = bounds.min-->Line_51 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)[ FD ]
Line_5 $$ ListIterator<B> iter = list.listIterator()-->Line_50 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_2 $$ private void addEmptyBuckets(List<B> list, ReduceContext reduceContext) -->Line_5 $$ ListIterator<B> iter = list.listIterator()[ CD ]
Line_16 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_22 $$ if (key < firstBucket.key) [ FD ]
Line_11 $$ if (bounds.min != null && bounds.max != null) -->Line_14 $$ while (key <= max) [ CD ]
Line_8 $$ if (bounds != null) -->Line_9 $$ B firstBucket = iter.hasNext() ? list.get(iter.nextIndex()) : null[ CD ]
Line_3 $$ B lastBucket = null-->Line_35 $$ if (lastBucket != null) [ FD ]
Line_36 $$ long key = emptyBucketInfo.rounding.nextRoundingValue(lastBucket.key)-->Line_39 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)[ FD ]
Line_37 $$ while (key < nextBucket.key) -->Line_38 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ CD ]
Line_35 $$ if (lastBucket != null) -->Line_37 $$ while (key < nextBucket.key) [ CD ]
Line_25 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_38 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_12 $$ long key = bounds.min-->Line_38 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_36 $$ long key = emptyBucketInfo.rounding.nextRoundingValue(lastBucket.key)-->Line_38 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_12 $$ long key = bounds.min-->Line_15 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_16 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_14 $$ while (key <= max) [ FD ]
Line_12 $$ long key = bounds.min-->Line_50 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_13 $$ long max = bounds.max-->Line_49 $$ while (key <= max) [ FD ]
Line_16 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_38 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_20 $$ if (bounds.min != null) -->Line_22 $$ if (key < firstBucket.key) [ CD ]
Line_8 $$ if (bounds != null) -->Line_10 $$ if (firstBucket == null) [ CD ]
Line_10 $$ if (firstBucket == null) -->Line_20 $$ if (bounds.min != null) [ CD ]
Line_43 $$ lastBucket = iter.next()-->Line_35 $$ if (lastBucket != null) [ FD ]
Line_39 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_49 $$ while (key <= max) [ FD ]
Line_25 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_50 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_12 $$ long key = bounds.min-->Line_25 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)[ FD ]
Line_25 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_49 $$ while (key <= max) [ FD ]
Line_35 $$ if (lastBucket != null) -->Line_36 $$ long key = emptyBucketInfo.rounding.nextRoundingValue(lastBucket.key)[ CD ]
Line_16 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_25 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)[ FD ]
Line_12 $$ long key = bounds.min-->Line_24 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_11 $$ if (bounds.min != null && bounds.max != null) -->Line_13 $$ long max = bounds.max[ CD ]
Line_16 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_37 $$ while (key < nextBucket.key) [ FD ]
Line_25 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_51 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)[ FD ]
Line_36 $$ long key = emptyBucketInfo.rounding.nextRoundingValue(lastBucket.key)-->Line_49 $$ while (key <= max) [ FD ]
Line_49 $$ while (key <= max) -->Line_50 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ CD ]
Line_9 $$ B firstBucket = iter.hasNext() ? list.get(iter.nextIndex()) : null-->Line_10 $$ if (firstBucket == null) [ FD ]
Line_13 $$ long max = bounds.max-->Line_14 $$ while (key <= max) [ FD ]
Line_16 $$ key = emptyBucketInfo.rounding.nextRoundingValue(key)-->Line_50 $$ iter.add(getFactory().createBucket(key, 0, reducedEmptySubAggs, keyed, formatter))[ FD ]
Line_2 $$ private void addEmptyBuckets(List<B> list, ReduceContext reduceContext) -->Line_34 $$ B nextBucket = list.get(iter.nextIndex())[ FD ]
Line_2 $$ private void addEmptyBuckets(List<B> list, ReduceContext reduceContext) -->Line_5 $$ ListIterator<B> iter = list.listIterator()[ FD ]
Line_2 $$ private void addEmptyBuckets(List<B> list, ReduceContext reduceContext) -->Line_9 $$ B firstBucket = iter.hasNext() ? list.get(iter.nextIndex()) : null[ FD ]
