Line_41 $$ lastLine = parsePatchLine(hunkCurLine, 1, before < linesBefore || after < linesAfter)-->Line_38 $$ lastLine.setSuppressNewLine(true)[ FD ]
Line_4 $$ String curLine = null-->Line_7 $$ curLine = iterator.next()[ FD ]
Line_6 $$ while (iterator.hasNext()) -->Line_8 $$ ++numIncrements[ CD ]
Line_29 $$ final String linesAfterText = m.group(6)-->Line_30 $$ int linesAfter = linesAfterText == null ? 1 : Integer.parseInt(linesAfterText)[ FD ]
Line_21 $$ Matcher m = ourUnifiedHunkStartPattern.matcher(curLine)-->Line_29 $$ final String linesAfterText = m.group(6)[ FD ]
Line_37 $$ if (lastLine != null && hunkCurLine.startsWith(NO_NEWLINE_SIGNATURE)) -->Line_38 $$ lastLine.setSuppressNewLine(true)[ CD ]
Line_9 $$ if (curLine.startsWith("--- ")) -->Line_10 $$ for (int i = 0; i < numIncrements; i++) [ CD ]
Line_35 $$ while (iterator.hasNext()) -->Line_41 $$ lastLine = parsePatchLine(hunkCurLine, 1, before < linesBefore || after < linesAfter)[ CD ]
Line_32 $$ PatchLine lastLine = null-->Line_41 $$ lastLine = parsePatchLine(hunkCurLine, 1, before < linesBefore || after < linesAfter)[ FD ]
Line_7 $$ curLine = iterator.next()-->Line_9 $$ if (curLine.startsWith("--- ")) [ FD ]
Line_21 $$ Matcher m = ourUnifiedHunkStartPattern.matcher(curLine)-->Line_26 $$ final String linesBeforeText = m.group(3)[ FD ]
Line_35 $$ while (iterator.hasNext()) -->Line_37 $$ if (lastLine != null && hunkCurLine.startsWith(NO_NEWLINE_SIGNATURE)) [ CD ]
Line_21 $$ Matcher m = ourUnifiedHunkStartPattern.matcher(curLine)-->Line_22 $$ if (!m.matches()) [ FD ]
Line_26 $$ final String linesBeforeText = m.group(3)-->Line_27 $$ int linesBefore = linesBeforeText == null ? 1 : Integer.parseInt(linesBeforeText)[ FD ]
Line_32 $$ PatchLine lastLine = null-->Line_42 $$ if (lastLine == null) [ FD ]
Line_35 $$ while (iterator.hasNext()) -->Line_58 $$ hunk.addLine(lastLine)[ CD ]
Line_21 $$ Matcher m = ourUnifiedHunkStartPattern.matcher(curLine)-->Line_28 $$ int startLineAfter = Integer.parseInt(m.group(4))[ FD ]
Line_4 $$ String curLine = null-->Line_21 $$ Matcher m = ourUnifiedHunkStartPattern.matcher(curLine)[ FD ]
Line_19 $$ if (!iterator.hasNext())-->Line_20 $$ return null[ CD ]
Line_10 $$ for (int i = 0; i < numIncrements; i++) -->Line_11 $$ iterator.previous()[ CD ]
Line_41 $$ lastLine = parsePatchLine(hunkCurLine, 1, before < linesBefore || after < linesAfter)-->Line_58 $$ hunk.addLine(lastLine)[ FD ]
Line_4 $$ String curLine = null-->Line_9 $$ if (curLine.startsWith("--- ")) [ FD ]
Line_4 $$ String curLine = null-->Line_15 $$ if (curLine.startsWith("@@ ")) [ FD ]
Line_6 $$ while (iterator.hasNext()) -->Line_7 $$ curLine = iterator.next()[ CD ]
Line_36 $$ String hunkCurLine = iterator.next()-->Line_41 $$ lastLine = parsePatchLine(hunkCurLine, 1, before < linesBefore || after < linesAfter)[ FD ]
Line_6 $$ while (iterator.hasNext()) -->Line_15 $$ if (curLine.startsWith("@@ ")) [ CD ]
Line_21 $$ Matcher m = ourUnifiedHunkStartPattern.matcher(curLine)-->Line_25 $$ int startLineBefore = Integer.parseInt(m.group(1))[ FD ]
Line_33 $$ int before = 0-->Line_48 $$ before++[ FD ]
Line_7 $$ curLine = iterator.next()-->Line_15 $$ if (curLine.startsWith("@@ ")) [ FD ]
Line_32 $$ PatchLine lastLine = null-->Line_46 $$ switch(lastLine.getType()) [ FD ]
Line_9 $$ if (curLine.startsWith("--- ")) -->Line_13 $$ return null[ CD ]
Line_35 $$ while (iterator.hasNext()) -->Line_42 $$ if (lastLine == null) [ CD ]
Line_31 $$ PatchHunk hunk = new PatchHunk(startLineBefore - 1, startLineBefore + linesBefore - 1, startLineAfter - 1, startLineAfter + linesAfter - 1)-->Line_58 $$ hunk.addLine(lastLine)[ FD ]
Line_5 $$ int numIncrements = 0-->Line_10 $$ for (int i = 0; i < numIncrements; i++) [ FD ]
Line_42 $$ if (lastLine == null) -->Line_43 $$ iterator.previous()[ CD ]
Line_33 $$ int before = 0-->Line_55 $$ before++[ FD ]
Line_36 $$ String hunkCurLine = iterator.next()-->Line_37 $$ if (lastLine != null && hunkCurLine.startsWith(NO_NEWLINE_SIGNATURE)) [ FD ]
Line_34 $$ int after = 0-->Line_49 $$ after++[ FD ]
Line_41 $$ lastLine = parsePatchLine(hunkCurLine, 1, before < linesBefore || after < linesAfter)-->Line_46 $$ switch(lastLine.getType()) [ FD ]
Line_32 $$ PatchLine lastLine = null-->Line_58 $$ hunk.addLine(lastLine)[ FD ]
Line_6 $$ while (iterator.hasNext()) -->Line_9 $$ if (curLine.startsWith("--- ")) [ CD ]
Line_32 $$ PatchLine lastLine = null-->Line_38 $$ lastLine.setSuppressNewLine(true)[ FD ]
Line_35 $$ while (iterator.hasNext()) -->Line_36 $$ String hunkCurLine = iterator.next()[ CD ]
Line_41 $$ lastLine = parsePatchLine(hunkCurLine, 1, before < linesBefore || after < linesAfter)-->Line_42 $$ if (lastLine == null) [ FD ]
Line_7 $$ curLine = iterator.next()-->Line_21 $$ Matcher m = ourUnifiedHunkStartPattern.matcher(curLine)[ FD ]
Line_34 $$ int after = 0-->Line_52 $$ after++[ FD ]
Line_5 $$ int numIncrements = 0-->Line_8 $$ ++numIncrements[ FD ]
