Line_9 $$ String text = speedSearch.getElementText(element)-->Line_10 $$ if (text != null) [ FD ]
Line_4 $$ pattern = pattern.trim()-->Line_11 $$ elements.add(new SpeedSearchObjectWithWeight(element, speedSearch.getComparator().matchingDegree(pattern, text)))[ FD ]
Line_9 $$ String text = speedSearch.getElementText(element)-->Line_11 $$ elements.add(new SpeedSearchObjectWithWeight(element, speedSearch.getComparator().matchingDegree(pattern, text)))[ FD ]
Line_23 $$ if (i == 0) -->Line_24 $$ current.add(element)[ CD ]
Line_25 $$ if (i < 0) -->Line_26 $$ cur = element[ CD ]
Line_22 $$ final int i = element.compareWith(cur)-->Line_23 $$ if (i == 0) [ FD ]
Line_14 $$ SpeedSearchObjectWithWeight cur = null-->Line_26 $$ cur = element[ FD ]
Line_15 $$ ArrayList<SpeedSearchObjectWithWeight> current = new ArrayList<SpeedSearchObjectWithWeight>()-->Line_28 $$ current.add(cur)[ FD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_9 $$ String text = speedSearch.getElementText(element)[ FD ]
Line_7 $$ while (it.hasNext()) -->Line_9 $$ String text = speedSearch.getElementText(element)[ CD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_31 $$ return current[ CD ]
Line_8 $$ Object element = it.next()-->Line_22 $$ final int i = element.compareWith(cur)[ FD ]
Line_16 $$ for (SpeedSearchObjectWithWeight element : elements) -->Line_18 $$ cur = element[ FD ]
Line_8 $$ Object element = it.next()-->Line_18 $$ cur = element[ FD ]
Line_8 $$ Object element = it.next()-->Line_24 $$ current.add(element)[ FD ]
Line_14 $$ SpeedSearchObjectWithWeight cur = null-->Line_28 $$ current.add(cur)[ FD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_15 $$ ArrayList<SpeedSearchObjectWithWeight> current = new ArrayList<SpeedSearchObjectWithWeight>()[ CD ]
Line_8 $$ Object element = it.next()-->Line_9 $$ String text = speedSearch.getElementText(element)[ FD ]
Line_23 $$ if (i == 0) -->Line_25 $$ if (i < 0) [ CD ]
Line_15 $$ ArrayList<SpeedSearchObjectWithWeight> current = new ArrayList<SpeedSearchObjectWithWeight>()-->Line_27 $$ current.clear()[ FD ]
Line_8 $$ Object element = it.next()-->Line_26 $$ cur = element[ FD ]
Line_14 $$ SpeedSearchObjectWithWeight cur = null-->Line_22 $$ final int i = element.compareWith(cur)[ FD ]
Line_3 $$ List<SpeedSearchObjectWithWeight> elements = new ArrayList<SpeedSearchObjectWithWeight>()-->Line_11 $$ elements.add(new SpeedSearchObjectWithWeight(element, speedSearch.getComparator().matchingDegree(pattern, text)))[ FD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_4 $$ pattern = pattern.trim()[ CD ]
Line_17 $$ if (cur == null) -->Line_19 $$ current.add(cur)[ CD ]
Line_16 $$ for (SpeedSearchObjectWithWeight element : elements) -->Line_24 $$ current.add(element)[ FD ]
Line_14 $$ SpeedSearchObjectWithWeight cur = null-->Line_18 $$ cur = element[ FD ]
Line_17 $$ if (cur == null) -->Line_18 $$ cur = element[ CD ]
Line_10 $$ if (text != null) -->Line_11 $$ elements.add(new SpeedSearchObjectWithWeight(element, speedSearch.getComparator().matchingDegree(pattern, text)))[ CD ]
Line_16 $$ for (SpeedSearchObjectWithWeight element : elements) -->Line_26 $$ cur = element[ FD ]
Line_15 $$ ArrayList<SpeedSearchObjectWithWeight> current = new ArrayList<SpeedSearchObjectWithWeight>()-->Line_24 $$ current.add(element)[ FD ]
Line_14 $$ SpeedSearchObjectWithWeight cur = null-->Line_19 $$ current.add(cur)[ FD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_11 $$ elements.add(new SpeedSearchObjectWithWeight(element, speedSearch.getComparator().matchingDegree(pattern, text)))[ FD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_4 $$ pattern = pattern.trim()[ FD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_7 $$ while (it.hasNext()) [ CD ]
Line_18 $$ cur = element-->Line_19 $$ current.add(cur)[ FD ]
Line_25 $$ if (i < 0) -->Line_28 $$ current.add(cur)[ CD ]
Line_18 $$ cur = element-->Line_26 $$ cur = element[ FD ]
Line_16 $$ for (SpeedSearchObjectWithWeight element : elements) -->Line_22 $$ final int i = element.compareWith(cur)[ FD ]
Line_22 $$ final int i = element.compareWith(cur)-->Line_25 $$ if (i < 0) [ FD ]
Line_18 $$ cur = element-->Line_22 $$ final int i = element.compareWith(cur)[ FD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_14 $$ SpeedSearchObjectWithWeight cur = null[ CD ]
Line_2 $$ public static List<SpeedSearchObjectWithWeight> findElement(String pattern, SpeedSearchBase speedSearch) -->Line_3 $$ List<SpeedSearchObjectWithWeight> elements = new ArrayList<SpeedSearchObjectWithWeight>()[ CD ]
Line_7 $$ while (it.hasNext()) -->Line_10 $$ if (text != null) [ CD ]
Line_25 $$ if (i < 0) -->Line_27 $$ current.clear()[ CD ]
Line_7 $$ while (it.hasNext()) -->Line_8 $$ Object element = it.next()[ CD ]
Line_14 $$ SpeedSearchObjectWithWeight cur = null-->Line_17 $$ if (cur == null) [ FD ]
Line_26 $$ cur = element-->Line_28 $$ current.add(cur)[ FD ]
Line_18 $$ cur = element-->Line_28 $$ current.add(cur)[ FD ]
Line_15 $$ ArrayList<SpeedSearchObjectWithWeight> current = new ArrayList<SpeedSearchObjectWithWeight>()-->Line_19 $$ current.add(cur)[ FD ]
