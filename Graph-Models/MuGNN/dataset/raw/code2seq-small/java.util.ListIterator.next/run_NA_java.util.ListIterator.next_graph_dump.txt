Line_9 $$ while (run || !queue.isEmpty()) -->Line_17 $$ ListIterator<InetAddress> iter = endpoints.listIterator()[ CD ]
Line_26 $$ for (int columnPosition = 0; columnPosition < bindVariables.size(); columnPosition++) -->Line_27 $$ boundStatement.setBytesUnsafe(columnPosition, bindVariables.get(columnPosition))[ FD ]
Line_9 $$ while (run || !queue.isEmpty()) -->Line_18 $$ while (true) [ CD ]
Line_24 $$ while (bindVariables != null) -->Line_29 $$ session.execute(boundStatement)[ CD ]
Line_24 $$ while (bindVariables != null) -->Line_31 $$ if (i >= batchThreshold)[ CD ]
Line_50 $$ session = cluster.connect()-->Line_70 $$ closeSession(session)[ FD ]
Line_24 $$ while (bindVariables != null) -->Line_30 $$ i++[ CD ]
Line_26 $$ for (int columnPosition = 0; columnPosition < bindVariables.size(); columnPosition++) -->Line_27 $$ boundStatement.setBytesUnsafe(columnPosition, bindVariables.get(columnPosition))[ CD ]
Line_22 $$ int i = 0-->Line_30 $$ i++[ FD ]
Line_17 $$ ListIterator<InetAddress> iter = endpoints.listIterator()-->Line_62 $$ if ((e instanceof AuthenticationException || e instanceof InvalidQueryException) || !iter.hasNext()) [ FD ]
Line_50 $$ session = cluster.connect()-->Line_23 $$ PreparedStatement statement = preparedStatement(session)[ FD ]
Line_12 $$ bindVariables = queue.take()-->Line_26 $$ for (int columnPosition = 0; columnPosition < bindVariables.size(); columnPosition++) [ FD ]
Line_50 $$ session = cluster.connect()-->Line_49 $$ closeSession(session)[ FD ]
Line_10 $$ List<ByteBuffer> bindVariables-->Line_27 $$ boundStatement.setBytesUnsafe(columnPosition, bindVariables.get(columnPosition))[ FD ]
Line_7 $$ Session session = null-->Line_70 $$ closeSession(session)[ FD ]
Line_7 $$ Session session = null-->Line_49 $$ closeSession(session)[ FD ]
Line_7 $$ Session session = null-->Line_29 $$ session.execute(boundStatement)[ FD ]
Line_25 $$ BoundStatement boundStatement = new BoundStatement(statement)-->Line_29 $$ session.execute(boundStatement)[ FD ]
Line_24 $$ while (bindVariables != null) -->Line_25 $$ BoundStatement boundStatement = new BoundStatement(statement)[ CD ]
Line_9 $$ while (run || !queue.isEmpty()) -->Line_10 $$ List<ByteBuffer> bindVariables[ CD ]
Line_12 $$ bindVariables = queue.take()-->Line_33 $$ bindVariables = queue.poll()[ FD ]
Line_25 $$ BoundStatement boundStatement = new BoundStatement(statement)-->Line_27 $$ boundStatement.setBytesUnsafe(columnPosition, bindVariables.get(columnPosition))[ FD ]
Line_17 $$ ListIterator<InetAddress> iter = endpoints.listIterator()-->Line_38 $$ if (!iter.hasNext()) [ FD ]
Line_10 $$ List<ByteBuffer> bindVariables-->Line_26 $$ for (int columnPosition = 0; columnPosition < bindVariables.size(); columnPosition++) [ FD ]
Line_12 $$ bindVariables = queue.take()-->Line_24 $$ while (bindVariables != null) [ FD ]
Line_10 $$ List<ByteBuffer> bindVariables-->Line_33 $$ bindVariables = queue.poll()[ FD ]
Line_22 $$ int i = 0-->Line_31 $$ if (i >= batchThreshold)[ FD ]
Line_7 $$ Session session = null-->Line_23 $$ PreparedStatement statement = preparedStatement(session)[ FD ]
Line_17 $$ ListIterator<InetAddress> iter = endpoints.listIterator()-->Line_46 $$ InetAddress address = iter.next()[ FD ]
Line_17 $$ ListIterator<InetAddress> iter = endpoints.listIterator()-->Line_57 $$ iter.previous()[ FD ]
Line_7 $$ Session session = null-->Line_50 $$ session = cluster.connect()[ FD ]
Line_10 $$ List<ByteBuffer> bindVariables-->Line_12 $$ bindVariables = queue.take()[ FD ]
Line_24 $$ while (bindVariables != null) -->Line_33 $$ bindVariables = queue.poll()[ CD ]
Line_10 $$ List<ByteBuffer> bindVariables-->Line_24 $$ while (bindVariables != null) [ FD ]
Line_56 $$ if (canRetryDriverConnection(e)) -->Line_57 $$ iter.previous()[ CD ]
Line_33 $$ bindVariables = queue.poll()-->Line_24 $$ while (bindVariables != null) [ FD ]
Line_12 $$ bindVariables = queue.take()-->Line_27 $$ boundStatement.setBytesUnsafe(columnPosition, bindVariables.get(columnPosition))[ FD ]
Line_24 $$ while (bindVariables != null) -->Line_26 $$ for (int columnPosition = 0; columnPosition < bindVariables.size(); columnPosition++) [ CD ]
