Line_22 $$ final Enumeration newMacros = myMacrosModel.elements()-->Line_23 $$ while (newMacros.hasMoreElements()) [ FD ]
Line_6 $$ for (Keymap keymap : allKeymaps) -->Line_8 $$ for (Shortcut shortcut : keymap.getShortcuts(ActionMacro.MACRO_ACTION_PREFIX + pair.getFirst())) [ FD ]
Line_2 $$ public void apply() -->Line_28 $$ manager.registerActions()[ CD ]
Line_2 $$ public void apply() -->Line_16 $$ ActionMacro[] macros = manager.getAllMacros()[ CD ]
Line_15 $$ final ActionMacroManager manager = ActionMacroManager.getInstance()-->Line_21 $$ manager.removeAllMacros()[ FD ]
Line_6 $$ for (Keymap keymap : allKeymaps) -->Line_7 $$ keymap.removeAllActionShortcuts(ActionMacro.MACRO_ACTION_PREFIX + pair.getSecond())[ FD ]
Line_2 $$ public void apply() -->Line_17 $$ HashSet<String> removedIds = new HashSet<String>()[ CD ]
Line_2 $$ public void apply() -->Line_21 $$ manager.removeAllMacros()[ CD ]
Line_15 $$ final ActionMacroManager manager = ActionMacroManager.getInstance()-->Line_25 $$ manager.addMacro(macro)[ FD ]
Line_8 $$ for (Shortcut shortcut : keymap.getShortcuts(ActionMacro.MACRO_ACTION_PREFIX + pair.getFirst())) -->Line_9 $$ keymap.addShortcut(ActionMacro.MACRO_ACTION_PREFIX + pair.getSecond(), shortcut)[ FD ]
Line_2 $$ public void apply() -->Line_23 $$ while (newMacros.hasMoreElements()) [ CD ]
Line_2 $$ public void apply() -->Line_15 $$ final ActionMacroManager manager = ActionMacroManager.getInstance()[ CD ]
Line_17 $$ HashSet<String> removedIds = new HashSet<String>()-->Line_19 $$ removedIds.add(macro1.getActionId())[ FD ]
Line_6 $$ for (Keymap keymap : allKeymaps) -->Line_11 $$ keymap.removeAllActionShortcuts(ActionMacro.MACRO_ACTION_PREFIX + pair.getFirst())[ FD ]
Line_2 $$ public void apply() -->Line_22 $$ final Enumeration newMacros = myMacrosModel.elements()[ CD ]
Line_18 $$ for (ActionMacro macro1 : macros) -->Line_19 $$ removedIds.add(macro1.getActionId())[ FD ]
Line_15 $$ final ActionMacroManager manager = ActionMacroManager.getInstance()-->Line_28 $$ manager.registerActions()[ FD ]
Line_6 $$ for (Keymap keymap : allKeymaps) -->Line_32 $$ keymap.removeAllActionShortcuts(id)[ FD ]
Line_15 $$ final ActionMacroManager manager = ActionMacroManager.getInstance()-->Line_16 $$ ActionMacro[] macros = manager.getAllMacros()[ FD ]
Line_4 $$ for (Couple<String> pair : myRenamingList) -->Line_8 $$ for (Shortcut shortcut : keymap.getShortcuts(ActionMacro.MACRO_ACTION_PREFIX + pair.getFirst())) [ FD ]
Line_24 $$ ActionMacro macro = (ActionMacro) newMacros.nextElement()-->Line_26 $$ removedIds.remove(macro.getActionId())[ FD ]
Line_4 $$ for (Couple<String> pair : myRenamingList) -->Line_7 $$ keymap.removeAllActionShortcuts(ActionMacro.MACRO_ACTION_PREFIX + pair.getSecond())[ FD ]
Line_24 $$ ActionMacro macro = (ActionMacro) newMacros.nextElement()-->Line_25 $$ manager.addMacro(macro)[ FD ]
Line_23 $$ while (newMacros.hasMoreElements()) -->Line_25 $$ manager.addMacro(macro)[ CD ]
Line_23 $$ while (newMacros.hasMoreElements()) -->Line_26 $$ removedIds.remove(macro.getActionId())[ CD ]
Line_17 $$ HashSet<String> removedIds = new HashSet<String>()-->Line_26 $$ removedIds.remove(macro.getActionId())[ FD ]
Line_4 $$ for (Couple<String> pair : myRenamingList) -->Line_9 $$ keymap.addShortcut(ActionMacro.MACRO_ACTION_PREFIX + pair.getSecond(), shortcut)[ FD ]
Line_23 $$ while (newMacros.hasMoreElements()) -->Line_24 $$ ActionMacro macro = (ActionMacro) newMacros.nextElement()[ CD ]
Line_22 $$ final Enumeration newMacros = myMacrosModel.elements()-->Line_24 $$ ActionMacro macro = (ActionMacro) newMacros.nextElement()[ FD ]
Line_4 $$ for (Couple<String> pair : myRenamingList) -->Line_11 $$ keymap.removeAllActionShortcuts(ActionMacro.MACRO_ACTION_PREFIX + pair.getFirst())[ FD ]
Line_29 $$ for (String id : removedIds) -->Line_32 $$ keymap.removeAllActionShortcuts(id)[ FD ]
Line_6 $$ for (Keymap keymap : allKeymaps) -->Line_9 $$ keymap.addShortcut(ActionMacro.MACRO_ACTION_PREFIX + pair.getSecond(), shortcut)[ FD ]
Line_2 $$ public void apply() -->Line_3 $$ if (myRenamingList != null) [ CD ]
