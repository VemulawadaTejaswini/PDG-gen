Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_53 $$ if (cancelPopups(activePopup) && e.getKeyCode() == KeyEvent.VK_ESCAPE) [ FD ]
Line_8 $$ final JList list = new JBList(model)-->Line_20 $$ list.setCellRenderer(new DefaultListCellRenderer() [ FD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_31 $$ if (model.size() > 0) [ CD ]
Line_8 $$ final JList list = new JBList(model)-->Line_63 $$ if (list.getSelectedIndex() < list.getModel().getSize() - 1) [ FD ]
Line_36 $$ final OptionDescription description = ((OptionDescription) selectedValue)-->Line_37 $$ searchField.setText(description.getHit())[ FD ]
Line_8 $$ final JList list = new JBList(model)-->Line_34 $$ final Object selectedValue = list.getSelectedValue()[ FD ]
Line_3 $$ final String filter = searchField.getText()-->Line_4 $$ if (filter == null || filter.length() == 0)[ FD ]
Line_20 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_28 $$ return rendererComponent[ CD ]
Line_11 $$ final Set<String> descriptions = hints.get(groupName)-->Line_12 $$ if (descriptions != null) [ FD ]
Line_39 $$ SwingUtilities.invokeLater(new Runnable() -->Line_41 $$ showHintAlarm.cancelAllRequests()[ CD ]
Line_49 $$ list.addKeyListener(new KeyAdapter() -->Line_53 $$ if (cancelPopups(activePopup) && e.getKeyCode() == KeyEvent.VK_ESCAPE) [ FD ]
Line_53 $$ if (cancelPopups(activePopup) && e.getKeyCode() == KeyEvent.VK_ESCAPE) -->Line_54 $$ return[ CD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_4 $$ if (filter == null || filter.length() == 0)[ CD ]
Line_20 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_64 $$ list.setSelectedIndex(list.getSelectedIndex() + 1)[ FD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_37 $$ searchField.setText(description.getHit())[ FD ]
Line_20 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_63 $$ if (list.getSelectedIndex() < list.getModel().getSize() - 1) [ FD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_3 $$ final String filter = searchField.getText()[ CD ]
Line_23 $$ if (value instanceof String) -->Line_25 $$ if (value instanceof OptionDescription) [ CD ]
Line_31 $$ if (model.size() > 0) -->Line_49 $$ list.addKeyListener(new KeyAdapter() [ CD ]
Line_51 $$ if (e.getKeyCode() != KeyEvent.VK_ENTER && e.getKeyCode() != KeyEvent.VK_UP && e.getKeyCode() != KeyEvent.VK_DOWN && e.getKeyCode() != KeyEvent.VK_PAGE_UP && e.getKeyCode() != KeyEvent.VK_PAGE_DOWN) -->Line_52 $$ searchField.requestFocusInWindow()[ CD ]
Line_8 $$ final JList list = new JBList(model)-->Line_64 $$ list.setSelectedIndex(list.getSelectedIndex() + 1)[ FD ]
Line_20 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_49 $$ list.addKeyListener(new KeyAdapter() [ FD ]
Line_3 $$ final String filter = searchField.getText()-->Line_6 $$ final Map<String, Set<String>> hints = SearchableOptionsRegistrar.getInstance().findPossibleExtension(filter, project)[ FD ]
Line_9 $$ for (String groupName : hints.keySet()) -->Line_10 $$ model.addElement(groupName)[ FD ]
Line_35 $$ if (selectedValue instanceof OptionDescription) -->Line_37 $$ searchField.setText(description.getHit())[ CD ]
Line_32 $$ final Runnable onChosen = new Runnable() -->Line_34 $$ final Object selectedValue = list.getSelectedValue()[ CD ]
Line_20 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_23 $$ if (value instanceof String) [ CD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_3 $$ final String filter = searchField.getText()[ FD ]
Line_39 $$ SwingUtilities.invokeLater(new Runnable() -->Line_42 $$ selectConfigurable.consume(description.getConfigurableId())[ CD ]
Line_31 $$ if (model.size() > 0) -->Line_48 $$ final JBPopup popup = JBPopupFactory.getInstance().createListPopupBuilder(list).setItemChoosenCallback(onChosen).setRequestFocus(down != 0).createPopup()[ CD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_42 $$ selectConfigurable.consume(description.getConfigurableId())[ FD ]
Line_20 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_23 $$ if (value instanceof String) [ FD ]
Line_49 $$ list.addKeyListener(new KeyAdapter() -->Line_51 $$ if (e.getKeyCode() != KeyEvent.VK_ENTER && e.getKeyCode() != KeyEvent.VK_UP && e.getKeyCode() != KeyEvent.VK_DOWN && e.getKeyCode() != KeyEvent.VK_PAGE_UP && e.getKeyCode() != KeyEvent.VK_PAGE_DOWN) [ CD ]
Line_51 $$ if (e.getKeyCode() != KeyEvent.VK_ENTER && e.getKeyCode() != KeyEvent.VK_UP && e.getKeyCode() != KeyEvent.VK_DOWN && e.getKeyCode() != KeyEvent.VK_PAGE_UP && e.getKeyCode() != KeyEvent.VK_PAGE_DOWN) -->Line_53 $$ if (cancelPopups(activePopup) && e.getKeyCode() == KeyEvent.VK_ESCAPE) [ CD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_66 $$ if (down < 0) [ FD ]
Line_8 $$ final JList list = new JBList(model)-->Line_48 $$ final JBPopup popup = JBPopupFactory.getInstance().createListPopupBuilder(list).setItemChoosenCallback(onChosen).setRequestFocus(down != 0).createPopup()[ FD ]
Line_9 $$ for (String groupName : hints.keySet()) -->Line_11 $$ final Set<String> descriptions = hints.get(groupName)[ FD ]
Line_7 $$ final DefaultListModel model = new DefaultListModel()-->Line_16 $$ model.addElement(new OptionDescription(null, groupName, hit, null))[ FD ]
Line_56 $$ if (e.getKeyChar() != KeyEvent.CHAR_UNDEFINED) -->Line_57 $$ searchField.process(new KeyEvent(searchField, KeyEvent.KEY_TYPED, e.getWhen(), e.getModifiers(), KeyEvent.VK_UNDEFINED, e.getKeyChar()))[ CD ]
Line_25 $$ if (value instanceof OptionDescription) -->Line_26 $$ setText(((OptionDescription) value).getHit())[ CD ]
Line_35 $$ if (selectedValue instanceof OptionDescription) -->Line_38 $$ searchField.addCurrentTextToHistory()[ CD ]
Line_62 $$ if (down > 0) -->Line_63 $$ if (list.getSelectedIndex() < list.getModel().getSize() - 1) [ CD ]
Line_20 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_22 $$ final Component rendererComponent = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ CD ]
Line_20 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_25 $$ if (value instanceof OptionDescription) [ FD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_7 $$ final DefaultListModel model = new DefaultListModel()[ CD ]
Line_35 $$ if (selectedValue instanceof OptionDescription) -->Line_39 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_7 $$ final DefaultListModel model = new DefaultListModel()-->Line_10 $$ model.addElement(groupName)[ FD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_38 $$ searchField.addCurrentTextToHistory()[ FD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_8 $$ final JList list = new JBList(model)[ CD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_73 $$ return null[ CD ]
Line_23 $$ if (value instanceof String) -->Line_24 $$ setText("------ " + value + " ------")[ CD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_41 $$ showHintAlarm.cancelAllRequests()[ FD ]
Line_49 $$ list.addKeyListener(new KeyAdapter() -->Line_56 $$ if (e.getKeyChar() != KeyEvent.CHAR_UNDEFINED) [ FD ]
Line_8 $$ final JList list = new JBList(model)-->Line_49 $$ list.addKeyListener(new KeyAdapter() [ FD ]
Line_36 $$ final OptionDescription description = ((OptionDescription) selectedValue)-->Line_42 $$ selectConfigurable.consume(description.getConfigurableId())[ FD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_20 $$ list.setCellRenderer(new DefaultListCellRenderer() [ CD ]
Line_67 $$ if (list.getSelectedIndex() > 0) -->Line_68 $$ list.setSelectedIndex(list.getSelectedIndex() - 1)[ CD ]
Line_8 $$ final JList list = new JBList(model)-->Line_22 $$ final Component rendererComponent = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ FD ]
Line_6 $$ final Map<String, Set<String>> hints = SearchableOptionsRegistrar.getInstance().findPossibleExtension(filter, project)-->Line_11 $$ final Set<String> descriptions = hints.get(groupName)[ FD ]
Line_20 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_48 $$ final JBPopup popup = JBPopupFactory.getInstance().createListPopupBuilder(list).setItemChoosenCallback(onChosen).setRequestFocus(down != 0).createPopup()[ FD ]
Line_4 $$ if (filter == null || filter.length() == 0)-->Line_5 $$ return null[ CD ]
Line_7 $$ final DefaultListModel model = new DefaultListModel()-->Line_31 $$ if (model.size() > 0) [ FD ]
Line_49 $$ list.addKeyListener(new KeyAdapter() -->Line_57 $$ searchField.process(new KeyEvent(searchField, KeyEvent.KEY_TYPED, e.getWhen(), e.getModifiers(), KeyEvent.VK_UNDEFINED, e.getKeyChar()))[ FD ]
Line_31 $$ if (model.size() > 0) -->Line_71 $$ return popup[ CD ]
Line_13 $$ for (String hit : descriptions) -->Line_14 $$ if (hit == null)[ FD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_57 $$ searchField.process(new KeyEvent(searchField, KeyEvent.KEY_TYPED, e.getWhen(), e.getModifiers(), KeyEvent.VK_UNDEFINED, e.getKeyChar()))[ FD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_6 $$ final Map<String, Set<String>> hints = SearchableOptionsRegistrar.getInstance().findPossibleExtension(filter, project)[ CD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_6 $$ final Map<String, Set<String>> hints = SearchableOptionsRegistrar.getInstance().findPossibleExtension(filter, project)[ FD ]
Line_8 $$ final JList list = new JBList(model)-->Line_67 $$ if (list.getSelectedIndex() > 0) [ FD ]
Line_62 $$ if (down > 0) -->Line_66 $$ if (down < 0) [ CD ]
Line_63 $$ if (list.getSelectedIndex() < list.getModel().getSize() - 1) -->Line_64 $$ list.setSelectedIndex(list.getSelectedIndex() + 1)[ CD ]
Line_51 $$ if (e.getKeyCode() != KeyEvent.VK_ENTER && e.getKeyCode() != KeyEvent.VK_UP && e.getKeyCode() != KeyEvent.VK_DOWN && e.getKeyCode() != KeyEvent.VK_PAGE_UP && e.getKeyCode() != KeyEvent.VK_PAGE_DOWN) -->Line_56 $$ if (e.getKeyChar() != KeyEvent.CHAR_UNDEFINED) [ CD ]
Line_34 $$ final Object selectedValue = list.getSelectedValue()-->Line_35 $$ if (selectedValue instanceof OptionDescription) [ FD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_52 $$ searchField.requestFocusInWindow()[ FD ]
Line_20 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_22 $$ final Component rendererComponent = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ FD ]
Line_20 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_67 $$ if (list.getSelectedIndex() > 0) [ FD ]
Line_49 $$ list.addKeyListener(new KeyAdapter() -->Line_51 $$ if (e.getKeyCode() != KeyEvent.VK_ENTER && e.getKeyCode() != KeyEvent.VK_UP && e.getKeyCode() != KeyEvent.VK_DOWN && e.getKeyCode() != KeyEvent.VK_PAGE_UP && e.getKeyCode() != KeyEvent.VK_PAGE_DOWN) [ FD ]
Line_2 $$ private static JBPopup createPopup(final ConfigurableSearchTextField searchField, final JBPopup[] activePopup, final Alarm showHintAlarm, final Consumer<String> selectConfigurable, final Project project, final int down) -->Line_62 $$ if (down > 0) [ FD ]
Line_66 $$ if (down < 0) -->Line_67 $$ if (list.getSelectedIndex() > 0) [ CD ]
Line_20 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_34 $$ final Object selectedValue = list.getSelectedValue()[ FD ]
Line_35 $$ if (selectedValue instanceof OptionDescription) -->Line_36 $$ final OptionDescription description = ((OptionDescription) selectedValue)[ CD ]
Line_20 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_68 $$ list.setSelectedIndex(list.getSelectedIndex() - 1)[ FD ]
Line_32 $$ final Runnable onChosen = new Runnable() -->Line_35 $$ if (selectedValue instanceof OptionDescription) [ CD ]
Line_8 $$ final JList list = new JBList(model)-->Line_68 $$ list.setSelectedIndex(list.getSelectedIndex() - 1)[ FD ]
Line_31 $$ if (model.size() > 0) -->Line_62 $$ if (down > 0) [ CD ]
Line_6 $$ final Map<String, Set<String>> hints = SearchableOptionsRegistrar.getInstance().findPossibleExtension(filter, project)-->Line_9 $$ for (String groupName : hints.keySet()) [ FD ]
