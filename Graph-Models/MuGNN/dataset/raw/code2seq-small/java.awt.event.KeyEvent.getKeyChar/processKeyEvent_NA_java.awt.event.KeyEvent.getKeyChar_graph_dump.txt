Line_12 $$ if (myCurrentProcessor != null) -->Line_13 $$ myCurrentProcessor.processKeyEvent(e)[ CD ]
Line_2 $$ protected void processKeyEvent(final KeyEvent e) -->Line_3 $$ if (e.getKeyCode() == KeyEvent.VK_SHIFT) [ FD ]
Line_4 $$ if (e.getID() == KeyEvent.KEY_PRESSED) -->Line_9 $$ myEditor.setDesignTimeInsets(2)[ CD ]
Line_15 $$ final ArrayList<RadComponent> selection = FormEditingUtil.getAllSelectedComponents(myEditor)-->Line_17 $$ final RadComponent component = selection.get(0)[ FD ]
Line_2 $$ protected void processKeyEvent(final KeyEvent e) -->Line_12 $$ if (myCurrentProcessor != null) [ CD ]
Line_2 $$ protected void processKeyEvent(final KeyEvent e) -->Line_3 $$ if (e.getKeyCode() == KeyEvent.VK_SHIFT) [ CD ]
Line_2 $$ protected void processKeyEvent(final KeyEvent e) -->Line_19 $$ inplaceLayer.startInplaceEditing(component, component.getDefaultInplaceProperty(), component.getDefaultInplaceEditorBounds(), new InplaceContext(false, e.getKeyChar()))[ FD ]
Line_16 $$ if (selection.size() > 0) -->Line_20 $$ e.consume()[ CD ]
Line_4 $$ if (e.getID() == KeyEvent.KEY_PRESSED) -->Line_5 $$ if ((myCurrentProcessor != null && myCurrentProcessor.isDragActive()) || (PaletteToolWindowManager.getInstance(myEditor).getActiveItem(ComponentItem.class) != null && myCurrentProcessor != myInsertComponentProcessor)) [ CD ]
Line_2 $$ protected void processKeyEvent(final KeyEvent e) -->Line_14 $$ if (e.getID() == KeyEvent.KEY_TYPED && Character.isLetterOrDigit(e.getKeyChar()) && (e.getModifiers() & (InputEvent.ALT_MASK | InputEvent.CTRL_MASK | InputEvent.META_MASK)) == 0) [ FD ]
Line_17 $$ final RadComponent component = selection.get(0)-->Line_19 $$ inplaceLayer.startInplaceEditing(component, component.getDefaultInplaceProperty(), component.getDefaultInplaceEditorBounds(), new InplaceContext(false, e.getKeyChar()))[ FD ]
Line_2 $$ protected void processKeyEvent(final KeyEvent e) -->Line_4 $$ if (e.getID() == KeyEvent.KEY_PRESSED) [ FD ]
Line_5 $$ if ((myCurrentProcessor != null && myCurrentProcessor.isDragActive()) || (PaletteToolWindowManager.getInstance(myEditor).getActiveItem(ComponentItem.class) != null && myCurrentProcessor != myInsertComponentProcessor)) -->Line_6 $$ myEditor.setDesignTimeInsets(12)[ CD ]
Line_2 $$ protected void processKeyEvent(final KeyEvent e) -->Line_13 $$ myCurrentProcessor.processKeyEvent(e)[ FD ]
Line_12 $$ if (myCurrentProcessor != null) -->Line_14 $$ if (e.getID() == KeyEvent.KEY_TYPED && Character.isLetterOrDigit(e.getKeyChar()) && (e.getModifiers() & (InputEvent.ALT_MASK | InputEvent.CTRL_MASK | InputEvent.META_MASK)) == 0) [ CD ]
Line_16 $$ if (selection.size() > 0) -->Line_19 $$ inplaceLayer.startInplaceEditing(component, component.getDefaultInplaceProperty(), component.getDefaultInplaceEditorBounds(), new InplaceContext(false, e.getKeyChar()))[ CD ]
Line_18 $$ final InplaceEditingLayer inplaceLayer = myEditor.getInplaceEditingLayer()-->Line_19 $$ inplaceLayer.startInplaceEditing(component, component.getDefaultInplaceProperty(), component.getDefaultInplaceEditorBounds(), new InplaceContext(false, e.getKeyChar()))[ FD ]
Line_16 $$ if (selection.size() > 0) -->Line_18 $$ final InplaceEditingLayer inplaceLayer = myEditor.getInplaceEditingLayer()[ CD ]
Line_14 $$ if (e.getID() == KeyEvent.KEY_TYPED && Character.isLetterOrDigit(e.getKeyChar()) && (e.getModifiers() & (InputEvent.ALT_MASK | InputEvent.CTRL_MASK | InputEvent.META_MASK)) == 0) -->Line_16 $$ if (selection.size() > 0) [ CD ]
Line_15 $$ final ArrayList<RadComponent> selection = FormEditingUtil.getAllSelectedComponents(myEditor)-->Line_16 $$ if (selection.size() > 0) [ FD ]
Line_14 $$ if (e.getID() == KeyEvent.KEY_TYPED && Character.isLetterOrDigit(e.getKeyChar()) && (e.getModifiers() & (InputEvent.ALT_MASK | InputEvent.CTRL_MASK | InputEvent.META_MASK)) == 0) -->Line_15 $$ final ArrayList<RadComponent> selection = FormEditingUtil.getAllSelectedComponents(myEditor)[ CD ]
Line_2 $$ protected void processKeyEvent(final KeyEvent e) -->Line_20 $$ e.consume()[ FD ]
Line_3 $$ if (e.getKeyCode() == KeyEvent.VK_SHIFT) -->Line_4 $$ if (e.getID() == KeyEvent.KEY_PRESSED) [ CD ]
Line_16 $$ if (selection.size() > 0) -->Line_17 $$ final RadComponent component = selection.get(0)[ CD ]
