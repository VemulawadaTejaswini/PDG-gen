Line_2 $$ public static String signature(Method method) -->Line_3 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_2 $$ public static String signature(Method method) -->Line_4 $$ visitFormalTypeParameters(builder, method.getTypeParameters())[ FD ]
Line_2 $$ public static String signature(Method method) -->Line_8 $$ return builder.toString()[ CD ]
Line_2 $$ public static String signature(Method method) -->Line_6 $$ visitType(method.getGenericReturnType(), builder)[ CD ]
Line_2 $$ public static String signature(Method method) -->Line_5 $$ visitParameters(builder, method.getGenericParameterTypes())[ CD ]
Line_2 $$ public static String signature(Method method) -->Line_4 $$ visitFormalTypeParameters(builder, method.getTypeParameters())[ CD ]
Line_2 $$ public static String signature(Method method) -->Line_7 $$ visitExceptions(builder, method.getGenericExceptionTypes())[ CD ]
Line_2 $$ public static String signature(Method method) -->Line_5 $$ visitParameters(builder, method.getGenericParameterTypes())[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_4 $$ visitFormalTypeParameters(builder, method.getTypeParameters())[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_5 $$ visitParameters(builder, method.getGenericParameterTypes())[ FD ]
Line_2 $$ public static String signature(Method method) -->Line_6 $$ visitType(method.getGenericReturnType(), builder)[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_6 $$ visitType(method.getGenericReturnType(), builder)[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_7 $$ visitExceptions(builder, method.getGenericExceptionTypes())[ FD ]
Line_2 $$ public static String signature(Method method) -->Line_7 $$ visitExceptions(builder, method.getGenericExceptionTypes())[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_8 $$ return builder.toString()[ FD ]
