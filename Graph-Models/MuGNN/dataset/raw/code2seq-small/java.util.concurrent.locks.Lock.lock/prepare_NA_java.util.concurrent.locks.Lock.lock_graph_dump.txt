Line_9 $$ if (toPrepare.isAfter(state.promised)) -->Line_11 $$ SystemKeyspace.savePaxosPromise(toPrepare)[ CD ]
Line_2 $$ public static PrepareResponse prepare(Commit toPrepare) -->Line_9 $$ if (toPrepare.isAfter(state.promised)) [ FD ]
Line_5 $$ Lock lock = LOCKS.get(toPrepare.update.partitionKey())-->Line_6 $$ lock.lock()[ FD ]
Line_9 $$ if (toPrepare.isAfter(state.promised)) -->Line_12 $$ return new PrepareResponse(true, state.accepted, state.mostRecentCommit)[ CD ]
Line_2 $$ public static PrepareResponse prepare(Commit toPrepare) -->Line_3 $$ long start = System.nanoTime()[ CD ]
Line_9 $$ if (toPrepare.isAfter(state.promised)) -->Line_10 $$ Tracing.trace("Promising ballot [ CD ]
Line_9 $$ if (toPrepare.isAfter(state.promised)) -->Line_14 $$ Tracing.trace("Promise rejected; [ CD ]
Line_5 $$ Lock lock = LOCKS.get(toPrepare.update.partitionKey())-->Line_19 $$ lock.unlock()[ FD ]
Line_2 $$ public static PrepareResponse prepare(Commit toPrepare) -->Line_11 $$ SystemKeyspace.savePaxosPromise(toPrepare)[ FD ]
Line_2 $$ public static PrepareResponse prepare(Commit toPrepare) -->Line_14 $$ Tracing.trace("Promise rejected; [ FD ]
