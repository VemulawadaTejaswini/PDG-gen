Line_13 $$ String versionName = buildVersionName(name, nextVersion)-->Line_14 $$ return innerSetKeyVersion(name, versionName, material, meta.getCipher())[ FD ]
Line_5 $$ Metadata meta = getMetadata(name)-->Line_6 $$ if (meta == null) [ FD ]
Line_2 $$ public KeyVersion rollNewVersion(String name, byte[] material) throws IOException -->Line_3 $$ writeLock.lock()[ CD ]
Line_5 $$ Metadata meta = getMetadata(name)-->Line_14 $$ return innerSetKeyVersion(name, versionName, material, meta.getCipher())[ FD ]
Line_5 $$ Metadata meta = getMetadata(name)-->Line_9 $$ if (meta.getBitLength() != 8 * material.length) [ FD ]
Line_5 $$ Metadata meta = getMetadata(name)-->Line_12 $$ int nextVersion = meta.addVersion()[ FD ]
Line_12 $$ int nextVersion = meta.addVersion()-->Line_13 $$ String versionName = buildVersionName(name, nextVersion)[ FD ]
Line_2 $$ public KeyVersion rollNewVersion(String name, byte[] material) throws IOException -->Line_5 $$ Metadata meta = getMetadata(name)[ FD ]
Line_2 $$ public KeyVersion rollNewVersion(String name, byte[] material) throws IOException -->Line_14 $$ return innerSetKeyVersion(name, versionName, material, meta.getCipher())[ FD ]
Line_5 $$ Metadata meta = getMetadata(name)-->Line_10 $$ throw new IOException("Wrong key length. Required " + meta.getBitLength() + ", but got " + (8 * material.length))[ FD ]
Line_2 $$ public KeyVersion rollNewVersion(String name, byte[] material) throws IOException -->Line_13 $$ String versionName = buildVersionName(name, nextVersion)[ FD ]
