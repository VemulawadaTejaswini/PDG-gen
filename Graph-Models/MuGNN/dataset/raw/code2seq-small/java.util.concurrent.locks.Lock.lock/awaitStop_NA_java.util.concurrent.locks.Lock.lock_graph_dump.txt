Line_18 $$ Date waitUntil = new Date(lastActivityAt + timeoutMs)-->Line_19 $$ LOGGER.debug("[ FD ]
Line_13 $$ if (hasBeenIdleFor(timeoutMs)) -->Line_19 $$ LOGGER.debug("[ CD ]
Line_13 $$ if (hasBeenIdleFor(timeoutMs)) -->Line_16 $$ return false[ CD ]
Line_13 $$ if (hasBeenIdleFor(timeoutMs)) -->Line_20 $$ condition.awaitUntil(waitUntil)[ CD ]
Line_10 $$ if (isBusy()) -->Line_11 $$ LOGGER.debug(DaemonMessages.DAEMON_BUSY)[ CD ]
Line_2 $$ private boolean awaitStop(long timeoutMs) -->Line_3 $$ lock.lock()[ CD ]
Line_2 $$ private boolean awaitStop(long timeoutMs) -->Line_5 $$ LOGGER.debug("Idle timeout: waiting for daemon to stop or be idle for [ FD ]
Line_2 $$ private boolean awaitStop(long timeoutMs) -->Line_13 $$ if (hasBeenIdleFor(timeoutMs)) [ FD ]
Line_18 $$ Date waitUntil = new Date(lastActivityAt + timeoutMs)-->Line_20 $$ condition.awaitUntil(waitUntil)[ FD ]
Line_10 $$ if (isBusy()) -->Line_12 $$ condition.await()[ CD ]
Line_10 $$ if (isBusy()) -->Line_13 $$ if (hasBeenIdleFor(timeoutMs)) [ CD ]
Line_13 $$ if (hasBeenIdleFor(timeoutMs)) -->Line_15 $$ stopNow("idle timeout")[ CD ]
Line_13 $$ if (hasBeenIdleFor(timeoutMs)) -->Line_18 $$ Date waitUntil = new Date(lastActivityAt + timeoutMs)[ CD ]
Line_13 $$ if (hasBeenIdleFor(timeoutMs)) -->Line_14 $$ LOGGER.debug("Idle timeout: daemon has been idle for requested period. Stopping now.")[ CD ]
