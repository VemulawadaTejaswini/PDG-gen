Line_2 $$ public void afterCompletion(final int status) -->Line_3 $$ doPrivileged(new PrivilegedAction<Void>() [ CD ]
Line_3 $$ doPrivileged(new PrivilegedAction<Void>() -->Line_5 $$ if (timer == null) [ CD ]
Line_12 $$ if (timer.getState() == TimerState.CANCELED || timer.getState() == TimerState.EXPIRED) -->Line_13 $$ map.remove(timer.getId())[ CD ]
Line_10 $$ if (status == Status.STATUS_COMMITTED) -->Line_12 $$ if (timer.getState() == TimerState.CANCELED || timer.getState() == TimerState.EXPIRED) [ CD ]
Line_11 $$ final Map<String, TimerImpl> map = getTimers(timer.getTimedObjectId(), timer.getTimerService())-->Line_13 $$ map.remove(timer.getId())[ FD ]
Line_10 $$ if (status == Status.STATUS_COMMITTED) -->Line_19 $$ writeFile(timer)[ CD ]
Line_12 $$ if (timer.getState() == TimerState.CANCELED || timer.getState() == TimerState.EXPIRED) -->Line_15 $$ if (newTimer || map.containsKey(timer.getId())) [ CD ]
Line_15 $$ if (newTimer || map.containsKey(timer.getId())) -->Line_16 $$ map.put(timer.getId(), timer)[ CD ]
Line_11 $$ final Map<String, TimerImpl> map = getTimers(timer.getTimedObjectId(), timer.getTimerService())-->Line_15 $$ if (newTimer || map.containsKey(timer.getId())) [ FD ]
Line_11 $$ final Map<String, TimerImpl> map = getTimers(timer.getTimedObjectId(), timer.getTimerService())-->Line_16 $$ map.put(timer.getId(), timer)[ FD ]
Line_5 $$ if (timer == null) -->Line_6 $$ return null[ CD ]
Line_2 $$ public void afterCompletion(final int status) -->Line_10 $$ if (status == Status.STATUS_COMMITTED) [ FD ]
Line_3 $$ doPrivileged(new PrivilegedAction<Void>() -->Line_24 $$ return null[ CD ]
Line_10 $$ if (status == Status.STATUS_COMMITTED) -->Line_11 $$ final Map<String, TimerImpl> map = getTimers(timer.getTimedObjectId(), timer.getTimerService())[ CD ]
