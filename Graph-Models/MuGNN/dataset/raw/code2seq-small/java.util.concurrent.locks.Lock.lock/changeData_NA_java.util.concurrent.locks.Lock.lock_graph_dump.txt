Line_2 $$ void changeData(@NotNull T interval, int start, int end, boolean greedyToLeft, boolean greedyToRight, int layer) -->Line_9 $$ boolean nodeRemoved = node.removeInterval(interval)[ FD ]
Line_5 $$ IntervalNode<T> node = lookupNode(interval)-->Line_6 $$ if (node == null)[ FD ]
Line_2 $$ void changeData(@NotNull T interval, int start, int end, boolean greedyToLeft, boolean greedyToRight, int layer) -->Line_5 $$ IntervalNode<T> node = lookupNode(interval)[ FD ]
Line_2 $$ void changeData(@NotNull T interval, int start, int end, boolean greedyToLeft, boolean greedyToRight, int layer) -->Line_11 $$ IntervalNode<T> insertedNode = addInterval(interval, start, end, greedyToLeft, greedyToRight, layer)[ FD ]
Line_5 $$ IntervalNode<T> node = lookupNode(interval)-->Line_9 $$ boolean nodeRemoved = node.removeInterval(interval)[ FD ]
Line_2 $$ void changeData(@NotNull T interval, int start, int end, boolean greedyToLeft, boolean greedyToRight, int layer) -->Line_16 $$ checkBelongsToTheTree(interval, true)[ FD ]
Line_6 $$ if (node == null)-->Line_7 $$ return[ CD ]
