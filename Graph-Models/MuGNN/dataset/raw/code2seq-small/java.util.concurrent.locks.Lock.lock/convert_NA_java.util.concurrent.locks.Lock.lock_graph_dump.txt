Line_3 $$ SelfResolvingDependency dependency = internCache.get(notation)-->Line_12 $$ result.converted(dependency)[ FD ]
Line_2 $$ public void convert(DependencyFactory.ClassPathNotation notation, NotationConvertResult<? super SelfResolvingDependency> result) throws TypeConversionException -->Line_7 $$ dependency = maybeCreateUnderLock(notation)[ FD ]
Line_3 $$ SelfResolvingDependency dependency = internCache.get(notation)-->Line_7 $$ dependency = maybeCreateUnderLock(notation)[ FD ]
Line_7 $$ dependency = maybeCreateUnderLock(notation)-->Line_12 $$ result.converted(dependency)[ FD ]
Line_3 $$ SelfResolvingDependency dependency = internCache.get(notation)-->Line_4 $$ if (dependency == null) [ FD ]
Line_2 $$ public void convert(DependencyFactory.ClassPathNotation notation, NotationConvertResult<? super SelfResolvingDependency> result) throws TypeConversionException -->Line_3 $$ SelfResolvingDependency dependency = internCache.get(notation)[ FD ]
Line_2 $$ public void convert(DependencyFactory.ClassPathNotation notation, NotationConvertResult<? super SelfResolvingDependency> result) throws TypeConversionException -->Line_3 $$ SelfResolvingDependency dependency = internCache.get(notation)[ CD ]
Line_2 $$ public void convert(DependencyFactory.ClassPathNotation notation, NotationConvertResult<? super SelfResolvingDependency> result) throws TypeConversionException -->Line_12 $$ result.converted(dependency)[ CD ]
Line_2 $$ public void convert(DependencyFactory.ClassPathNotation notation, NotationConvertResult<? super SelfResolvingDependency> result) throws TypeConversionException -->Line_12 $$ result.converted(dependency)[ FD ]
Line_4 $$ if (dependency == null) -->Line_5 $$ internCacheWriteLock.lock()[ CD ]
Line_2 $$ public void convert(DependencyFactory.ClassPathNotation notation, NotationConvertResult<? super SelfResolvingDependency> result) throws TypeConversionException -->Line_4 $$ if (dependency == null) [ CD ]
