Line_4 $$ final byte[] newCommitId-->Line_44 $$ newCommitId = lastCommittedSegmentInfos.getId()[ FD ]
Line_35 $$ if (isClosed.get() == false) -->Line_37 $$ if (Lucene.isCorruptionException(e)) [ CD ]
Line_7 $$ if (flushLock.tryLock() == false) -->Line_16 $$ logger.trace("acquired flush lock immediately")[ CD ]
Line_2 $$ public CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException -->Line_55 $$ return new CommitId(newCommitId)[ CD ]
Line_7 $$ if (flushLock.tryLock() == false) -->Line_8 $$ if (waitIfOngoing) [ CD ]
Line_8 $$ if (waitIfOngoing) -->Line_9 $$ logger.trace("waiting for in-flight flush to finish")[ CD ]
Line_2 $$ public CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException -->Line_4 $$ final byte[] newCommitId[ CD ]
Line_8 $$ if (waitIfOngoing) -->Line_11 $$ logger.trace("acquired flush lock after blocking")[ CD ]
Line_2 $$ public CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException -->Line_52 $$ if (engineConfig.isEnableGcDeletes()) [ CD ]
Line_8 $$ if (waitIfOngoing) -->Line_10 $$ flushLock.lock()[ CD ]
Line_52 $$ if (engineConfig.isEnableGcDeletes()) -->Line_53 $$ pruneDeletedTombstones()[ CD ]
Line_35 $$ if (isClosed.get() == false) -->Line_36 $$ logger.warn("failed to read latest segment infos on flush", e)[ CD ]
Line_2 $$ public CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException -->Line_19 $$ if (indexWriter.hasUncommittedChanges() || force) [ FD ]
Line_2 $$ public CommitId flush(boolean force, boolean waitIfOngoing) throws EngineException -->Line_3 $$ ensureOpen()[ CD ]
