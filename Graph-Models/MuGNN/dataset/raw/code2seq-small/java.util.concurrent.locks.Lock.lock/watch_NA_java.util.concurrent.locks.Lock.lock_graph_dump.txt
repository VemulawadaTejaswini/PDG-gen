Line_13 $$ Files.walkFileTree(dirPath, new SimpleFileVisitor<Path>() -->Line_19 $$ watchDir(path)[ FD ]
Line_2 $$ void watch(FileSystemSubset fileSystemSubset) throws IOException -->Line_3 $$ lock.lock()[ CD ]
Line_2 $$ void watch(FileSystemSubset fileSystemSubset) throws IOException -->Line_5 $$ LOG.debug("Begin - adding watches for [ FD ]
Line_6 $$ final WatchPointsRegistry.Delta delta = watchPointsRegistry.appendFileSystemSubset(fileSystemSubset)-->Line_18 $$ if (delta.shouldWatch(path.toFile())) [ FD ]
Line_18 $$ if (delta.shouldWatch(path.toFile())) -->Line_19 $$ watchDir(path)[ CD ]
Line_13 $$ Files.walkFileTree(dirPath, new SimpleFileVisitor<Path>() -->Line_17 $$ if (!path.equals(dirPath)) [ CD ]
Line_13 $$ Files.walkFileTree(dirPath, new SimpleFileVisitor<Path>() -->Line_17 $$ if (!path.equals(dirPath)) [ FD ]
Line_13 $$ Files.walkFileTree(dirPath, new SimpleFileVisitor<Path>() -->Line_22 $$ LOG.debug("Skipping watching for [ FD ]
Line_10 $$ final Path dirPath = dir.toPath()-->Line_17 $$ if (!path.equals(dirPath)) [ FD ]
Line_17 $$ if (!path.equals(dirPath)) -->Line_18 $$ if (delta.shouldWatch(path.toFile())) [ CD ]
Line_10 $$ final Path dirPath = dir.toPath()-->Line_13 $$ Files.walkFileTree(dirPath, new SimpleFileVisitor<Path>() [ FD ]
Line_13 $$ Files.walkFileTree(dirPath, new SimpleFileVisitor<Path>() -->Line_18 $$ if (delta.shouldWatch(path.toFile())) [ FD ]
Line_18 $$ if (delta.shouldWatch(path.toFile())) -->Line_22 $$ LOG.debug("Skipping watching for [ CD ]
Line_18 $$ if (delta.shouldWatch(path.toFile())) -->Line_20 $$ return FileVisitResult.CONTINUE[ CD ]
Line_6 $$ final WatchPointsRegistry.Delta delta = watchPointsRegistry.appendFileSystemSubset(fileSystemSubset)-->Line_7 $$ Iterable<? extends File> startingWatchPoints = delta.getStartingWatchPoints()[ FD ]
Line_8 $$ for (File dir : startingWatchPoints) -->Line_31 $$ LOG.debug("End - handling starting point [ FD ]
Line_8 $$ for (File dir : startingWatchPoints) -->Line_10 $$ final Path dirPath = dir.toPath()[ FD ]
Line_10 $$ final Path dirPath = dir.toPath()-->Line_11 $$ watchDir(dirPath)[ FD ]
Line_12 $$ if (!FILE_TREE_WATCHING_SUPPORTED) -->Line_13 $$ Files.walkFileTree(dirPath, new SimpleFileVisitor<Path>() [ CD ]
Line_8 $$ for (File dir : startingWatchPoints) -->Line_9 $$ LOG.debug("Begin - handling starting point [ FD ]
Line_2 $$ void watch(FileSystemSubset fileSystemSubset) throws IOException -->Line_33 $$ LOG.debug("End - adding watches for [ FD ]
Line_18 $$ if (delta.shouldWatch(path.toFile())) -->Line_23 $$ return FileVisitResult.SKIP_SUBTREE[ CD ]
Line_2 $$ void watch(FileSystemSubset fileSystemSubset) throws IOException -->Line_6 $$ final WatchPointsRegistry.Delta delta = watchPointsRegistry.appendFileSystemSubset(fileSystemSubset)[ FD ]
Line_17 $$ if (!path.equals(dirPath)) -->Line_26 $$ return FileVisitResult.CONTINUE[ CD ]
