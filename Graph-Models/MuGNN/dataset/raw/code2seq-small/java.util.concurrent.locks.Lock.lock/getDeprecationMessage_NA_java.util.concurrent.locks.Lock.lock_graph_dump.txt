Line_8 $$ String when = String.format("Gradle %s", currentVersion.getNextMajor().getVersion())-->Line_9 $$ deprecationMessage = String.format("%s %s", messageBase, when)[ FD ]
Line_5 $$ if (deprecationMessage == null) -->Line_6 $$ String messageBase = "has been deprecated and is scheduled to be removed in"[ CD ]
Line_7 $$ GradleVersion currentVersion = GradleVersion.current()-->Line_8 $$ String when = String.format("Gradle %s", currentVersion.getNextMajor().getVersion())[ FD ]
Line_5 $$ if (deprecationMessage == null) -->Line_9 $$ deprecationMessage = String.format("%s %s", messageBase, when)[ CD ]
Line_2 $$ public static String getDeprecationMessage() -->Line_3 $$ LOCK.lock()[ CD ]
Line_6 $$ String messageBase = "has been deprecated and is scheduled to be removed in"-->Line_9 $$ deprecationMessage = String.format("%s %s", messageBase, when)[ FD ]
Line_5 $$ if (deprecationMessage == null) -->Line_7 $$ GradleVersion currentVersion = GradleVersion.current()[ CD ]
Line_5 $$ if (deprecationMessage == null) -->Line_8 $$ String when = String.format("Gradle %s", currentVersion.getNextMajor().getVersion())[ CD ]
