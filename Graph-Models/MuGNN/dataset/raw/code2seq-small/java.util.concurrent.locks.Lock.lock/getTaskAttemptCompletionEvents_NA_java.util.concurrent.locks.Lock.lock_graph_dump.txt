Line_6 $$ if (taskAttemptCompletionEvents.size() > fromEventId) -->Line_7 $$ int actualMax = Math.min(maxEvents, (taskAttemptCompletionEvents.size() - fromEventId))[ CD ]
Line_2 $$ public TaskAttemptCompletionEvent[] getTaskAttemptCompletionEvents(int fromEventId, int maxEvents) -->Line_7 $$ int actualMax = Math.min(maxEvents, (taskAttemptCompletionEvents.size() - fromEventId))[ FD ]
Line_2 $$ public TaskAttemptCompletionEvent[] getTaskAttemptCompletionEvents(int fromEventId, int maxEvents) -->Line_4 $$ readLock.lock()[ CD ]
Line_2 $$ public TaskAttemptCompletionEvent[] getTaskAttemptCompletionEvents(int fromEventId, int maxEvents) -->Line_3 $$ TaskAttemptCompletionEvent[] events = EMPTY_TASK_ATTEMPT_COMPLETION_EVENTS[ CD ]
Line_2 $$ public TaskAttemptCompletionEvent[] getTaskAttemptCompletionEvents(int fromEventId, int maxEvents) -->Line_8 $$ events = taskAttemptCompletionEvents.subList(fromEventId, actualMax + fromEventId).toArray(events)[ FD ]
Line_6 $$ if (taskAttemptCompletionEvents.size() > fromEventId) -->Line_8 $$ events = taskAttemptCompletionEvents.subList(fromEventId, actualMax + fromEventId).toArray(events)[ CD ]
Line_3 $$ TaskAttemptCompletionEvent[] events = EMPTY_TASK_ATTEMPT_COMPLETION_EVENTS-->Line_8 $$ events = taskAttemptCompletionEvents.subList(fromEventId, actualMax + fromEventId).toArray(events)[ FD ]
Line_2 $$ public TaskAttemptCompletionEvent[] getTaskAttemptCompletionEvents(int fromEventId, int maxEvents) -->Line_6 $$ if (taskAttemptCompletionEvents.size() > fromEventId) [ FD ]
