Line_10 $$ ProtocolStack<Message> stack = new ProtocolStack<Message>(incomingExecutor, failureHandler, failureHandler, new BufferingProtocol(200), receiveProtocol)-->Line_13 $$ stack.getTop().dispatchTo(workerStack.getBottom())[ FD ]
Line_8 $$ ProtocolStack<Message> workerStack = new ProtocolStack<Message>(incomingExecutor, failureHandler, failureHandler, workerProtocol)-->Line_13 $$ stack.getTop().dispatchTo(workerStack.getBottom())[ FD ]
Line_14 $$ AsyncConnection<Message> incomingEndpoint = router.createLocalConnection()-->Line_16 $$ incomingEndpoint.dispatchTo(stack.getBottom())[ FD ]
Line_8 $$ ProtocolStack<Message> workerStack = new ProtocolStack<Message>(incomingExecutor, failureHandler, failureHandler, workerProtocol)-->Line_12 $$ workerStack.getBottom().dispatchTo(stack.getTop())[ FD ]
Line_10 $$ ProtocolStack<Message> stack = new ProtocolStack<Message>(incomingExecutor, failureHandler, failureHandler, new BufferingProtocol(200), receiveProtocol)-->Line_12 $$ workerStack.getBottom().dispatchTo(stack.getTop())[ FD ]
Line_2 $$ public void addIncoming(final String channel, final Dispatch<Object> dispatch) -->Line_3 $$ lock.lock()[ CD ]
Line_10 $$ ProtocolStack<Message> stack = new ProtocolStack<Message>(incomingExecutor, failureHandler, failureHandler, new BufferingProtocol(200), receiveProtocol)-->Line_16 $$ incomingEndpoint.dispatchTo(stack.getBottom())[ FD ]
Line_10 $$ ProtocolStack<Message> stack = new ProtocolStack<Message>(incomingExecutor, failureHandler, failureHandler, new BufferingProtocol(200), receiveProtocol)-->Line_15 $$ stack.getBottom().dispatchTo(incomingEndpoint)[ FD ]
Line_10 $$ ProtocolStack<Message> stack = new ProtocolStack<Message>(incomingExecutor, failureHandler, failureHandler, new BufferingProtocol(200), receiveProtocol)-->Line_11 $$ handlers.add(stack)[ FD ]
Line_14 $$ AsyncConnection<Message> incomingEndpoint = router.createLocalConnection()-->Line_15 $$ stack.getBottom().dispatchTo(incomingEndpoint)[ FD ]
Line_8 $$ ProtocolStack<Message> workerStack = new ProtocolStack<Message>(incomingExecutor, failureHandler, failureHandler, workerProtocol)-->Line_9 $$ workers.add(workerStack)[ FD ]
