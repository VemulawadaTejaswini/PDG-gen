Line_6 $$ DelayedMessage message = queue.peek()-->Line_10 $$ if (message == null) [ FD ]
Line_14 $$ long now = timeProvider.getCurrentTime()-->Line_15 $$ if (message.dispatchTime > now) [ FD ]
Line_15 $$ if (message.dispatchTime > now) -->Line_18 $$ queue.poll()[ CD ]
Line_5 $$ while (true) -->Line_7 $$ if (message == null && stopping) [ CD ]
Line_15 $$ if (message.dispatchTime > now) -->Line_19 $$ if (queue.isEmpty()) [ CD ]
Line_5 $$ while (true) -->Line_14 $$ long now = timeProvider.getCurrentTime()[ CD ]
Line_15 $$ if (message.dispatchTime > now) -->Line_16 $$ condition.awaitUntil(new Date(message.dispatchTime))[ CD ]
Line_15 $$ if (message.dispatchTime > now) -->Line_22 $$ return message.message[ CD ]
Line_5 $$ while (true) -->Line_15 $$ if (message.dispatchTime > now) [ CD ]
Line_5 $$ while (true) -->Line_10 $$ if (message == null) [ CD ]
Line_7 $$ if (message == null && stopping) -->Line_8 $$ return null[ CD ]
Line_10 $$ if (message == null) -->Line_11 $$ condition.await()[ CD ]
Line_5 $$ while (true) -->Line_6 $$ DelayedMessage message = queue.peek()[ CD ]
Line_2 $$ public T receive() -->Line_3 $$ lock.lock()[ CD ]
Line_19 $$ if (queue.isEmpty()) -->Line_20 $$ condition.signalAll()[ CD ]
