Line_37 $$ node = parent-->Line_24 $$ while (node != treeRoot) [ FD ]
Line_20 $$ boolean allDeltasAreNull = true-->Line_60 $$ assert deltaUp == 0 || !allDeltasAreNull[ FD ]
Line_19 $$ int deltaUp = 0-->Line_46 $$ deltaUp += nodeDelta[ FD ]
Line_21 $$ int height = 0-->Line_38 $$ height++[ FD ]
Line_8 $$ long packedOffsets = cachedDeltaUpToRoot-->Line_9 $$ if (modCount(packedOffsets) == treeModCount) [ FD ]
Line_14 $$ IntervalNode<E> node = this-->Line_31 $$ IntervalNode<E> parent = node.getParent()[ FD ]
Line_14 $$ IntervalNode<E> node = this-->Line_37 $$ node = parent[ FD ]
Line_3 $$ while (true) -->Line_8 $$ long packedOffsets = cachedDeltaUpToRoot[ CD ]
Line_26 $$ if (node.isValid() && modCount(nodePackedOffsets) == treeModCount) -->Line_27 $$ deltaUp = deltaUpToRoot(nodePackedOffsets) - node.delta[ CD ]
Line_8 $$ long packedOffsets = cachedDeltaUpToRoot-->Line_10 $$ return deltaUpToRoot(packedOffsets)[ FD ]
Line_44 $$ if (node.isValid()) -->Line_45 $$ int nodeDelta = node.delta[ CD ]
Line_44 $$ if (node.isValid()) -->Line_46 $$ deltaUp += nodeDelta[ CD ]
Line_54 $$ node = (path & 1) == 0 ? node.getLeft() : node.getRight()-->Line_44 $$ if (node.isValid()) [ FD ]
Line_14 $$ IntervalNode<E> node = this-->Line_54 $$ node = (path & 1) == 0 ? node.getLeft() : node.getRight()[ FD ]
Line_24 $$ while (node != treeRoot) -->Line_36 $$ path = (path << 1) | (parent.getLeft() == node ? 0 : 1)[ CD ]
Line_7 $$ int treeModCount = myIntervalTree.modCount-->Line_9 $$ if (modCount(packedOffsets) == treeModCount) [ FD ]
Line_31 $$ IntervalNode<E> parent = node.getParent()-->Line_36 $$ path = (path << 1) | (parent.getLeft() == node ? 0 : 1)[ FD ]
Line_44 $$ if (node.isValid()) -->Line_48 $$ if (!node.tryToSetCachedValues(deltaUp, allDeltasAreNull, treeModCount)) [ CD ]
Line_37 $$ node = parent-->Line_48 $$ if (!node.tryToSetCachedValues(deltaUp, allDeltasAreNull, treeModCount)) [ FD ]
Line_37 $$ node = parent-->Line_26 $$ if (node.isValid() && modCount(nodePackedOffsets) == treeModCount) [ FD ]
Line_20 $$ boolean allDeltasAreNull = true-->Line_47 $$ allDeltasAreNull &= nodeDelta == 0[ FD ]
Line_24 $$ while (node != treeRoot) -->Line_37 $$ node = parent[ CD ]
Line_27 $$ deltaUp = deltaUpToRoot(nodePackedOffsets) - node.delta-->Line_48 $$ if (!node.tryToSetCachedValues(deltaUp, allDeltasAreNull, treeModCount)) [ FD ]
Line_37 $$ node = parent-->Line_52 $$ if (node == this)[ FD ]
Line_28 $$ allDeltasAreNull = allDeltasUpAreNull(nodePackedOffsets)-->Line_60 $$ assert deltaUp == 0 || !allDeltasAreNull[ FD ]
Line_45 $$ int nodeDelta = node.delta-->Line_47 $$ allDeltasAreNull &= nodeDelta == 0[ FD ]
Line_24 $$ while (node != treeRoot) -->Line_26 $$ if (node.isValid() && modCount(nodePackedOffsets) == treeModCount) [ CD ]
Line_14 $$ IntervalNode<E> node = this-->Line_44 $$ if (node.isValid()) [ FD ]
Line_3 $$ while (true) -->Line_9 $$ if (modCount(packedOffsets) == treeModCount) [ CD ]
Line_25 $$ long nodePackedOffsets = node.cachedDeltaUpToRoot-->Line_26 $$ if (node.isValid() && modCount(nodePackedOffsets) == treeModCount) [ FD ]
Line_46 $$ deltaUp += nodeDelta-->Line_48 $$ if (!node.tryToSetCachedValues(deltaUp, allDeltasAreNull, treeModCount)) [ FD ]
Line_54 $$ node = (path & 1) == 0 ? node.getLeft() : node.getRight()-->Line_48 $$ if (!node.tryToSetCachedValues(deltaUp, allDeltasAreNull, treeModCount)) [ FD ]
Line_26 $$ if (node.isValid() && modCount(nodePackedOffsets) == treeModCount) -->Line_28 $$ allDeltasAreNull = allDeltasUpAreNull(nodePackedOffsets)[ CD ]
Line_24 $$ while (node != treeRoot) -->Line_25 $$ long nodePackedOffsets = node.cachedDeltaUpToRoot[ CD ]
Line_27 $$ deltaUp = deltaUpToRoot(nodePackedOffsets) - node.delta-->Line_46 $$ deltaUp += nodeDelta[ FD ]
Line_9 $$ if (modCount(packedOffsets) == treeModCount) -->Line_10 $$ return deltaUpToRoot(packedOffsets)[ CD ]
Line_44 $$ if (node.isValid()) -->Line_47 $$ allDeltasAreNull &= nodeDelta == 0[ CD ]
Line_24 $$ while (node != treeRoot) -->Line_31 $$ IntervalNode<E> parent = node.getParent()[ CD ]
Line_14 $$ IntervalNode<E> node = this-->Line_24 $$ while (node != treeRoot) [ FD ]
Line_28 $$ allDeltasAreNull = allDeltasUpAreNull(nodePackedOffsets)-->Line_48 $$ if (!node.tryToSetCachedValues(deltaUp, allDeltasAreNull, treeModCount)) [ FD ]
Line_28 $$ allDeltasAreNull = allDeltasUpAreNull(nodePackedOffsets)-->Line_47 $$ allDeltasAreNull &= nodeDelta == 0[ FD ]
Line_20 $$ boolean allDeltasAreNull = true-->Line_48 $$ if (!node.tryToSetCachedValues(deltaUp, allDeltasAreNull, treeModCount)) [ FD ]
Line_24 $$ while (node != treeRoot) -->Line_38 $$ height++[ CD ]
Line_54 $$ node = (path & 1) == 0 ? node.getLeft() : node.getRight()-->Line_52 $$ if (node == this)[ FD ]
Line_45 $$ int nodeDelta = node.delta-->Line_46 $$ deltaUp += nodeDelta[ FD ]
Line_15 $$ IntervalNode<E> treeRoot = myIntervalTree.getRoot()-->Line_24 $$ while (node != treeRoot) [ FD ]
Line_31 $$ IntervalNode<E> parent = node.getParent()-->Line_32 $$ if (parent == null) [ FD ]
Line_19 $$ int deltaUp = 0-->Line_27 $$ deltaUp = deltaUpToRoot(nodePackedOffsets) - node.delta[ FD ]
Line_24 $$ while (node != treeRoot) -->Line_32 $$ if (parent == null) [ CD ]
Line_20 $$ boolean allDeltasAreNull = true-->Line_28 $$ allDeltasAreNull = allDeltasUpAreNull(nodePackedOffsets)[ FD ]
Line_47 $$ allDeltasAreNull &= nodeDelta == 0-->Line_48 $$ if (!node.tryToSetCachedValues(deltaUp, allDeltasAreNull, treeModCount)) [ FD ]
Line_37 $$ node = parent-->Line_31 $$ IntervalNode<E> parent = node.getParent()[ FD ]
Line_37 $$ node = parent-->Line_54 $$ node = (path & 1) == 0 ? node.getLeft() : node.getRight()[ FD ]
Line_19 $$ int deltaUp = 0-->Line_48 $$ if (!node.tryToSetCachedValues(deltaUp, allDeltasAreNull, treeModCount)) [ FD ]
Line_25 $$ long nodePackedOffsets = node.cachedDeltaUpToRoot-->Line_28 $$ allDeltasAreNull = allDeltasUpAreNull(nodePackedOffsets)[ FD ]
Line_14 $$ IntervalNode<E> node = this-->Line_48 $$ if (!node.tryToSetCachedValues(deltaUp, allDeltasAreNull, treeModCount)) [ FD ]
Line_37 $$ node = parent-->Line_44 $$ if (node.isValid()) [ FD ]
Line_3 $$ while (true) -->Line_7 $$ int treeModCount = myIntervalTree.modCount[ CD ]
Line_31 $$ IntervalNode<E> parent = node.getParent()-->Line_37 $$ node = parent[ FD ]
Line_7 $$ int treeModCount = myIntervalTree.modCount-->Line_48 $$ if (!node.tryToSetCachedValues(deltaUp, allDeltasAreNull, treeModCount)) [ FD ]
Line_14 $$ IntervalNode<E> node = this-->Line_26 $$ if (node.isValid() && modCount(nodePackedOffsets) == treeModCount) [ FD ]
Line_25 $$ long nodePackedOffsets = node.cachedDeltaUpToRoot-->Line_27 $$ deltaUp = deltaUpToRoot(nodePackedOffsets) - node.delta[ FD ]
Line_36 $$ path = (path << 1) | (parent.getLeft() == node ? 0 : 1)-->Line_55 $$ path >>= 1[ FD ]
Line_14 $$ IntervalNode<E> node = this-->Line_52 $$ if (node == this)[ FD ]
Line_47 $$ allDeltasAreNull &= nodeDelta == 0-->Line_60 $$ assert deltaUp == 0 || !allDeltasAreNull[ FD ]
