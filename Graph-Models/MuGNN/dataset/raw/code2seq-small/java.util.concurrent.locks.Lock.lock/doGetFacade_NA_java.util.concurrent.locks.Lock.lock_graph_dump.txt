Line_2 $$ private RemoteExternalSystemFacade doGetFacade(@NotNull IntegrationKey key, @NotNull Project project) throws Exception -->Line_6 $$ if (project.isDisposed() || manager == null) [ FD ]
Line_19 $$ if (pair != null) -->Line_20 $$ myFacadeWrappers.clear()[ CD ]
Line_6 $$ if (project.isDisposed() || manager == null) -->Line_7 $$ return RemoteExternalSystemFacade.NULL_OBJECT[ CD ]
Line_2 $$ private RemoteExternalSystemFacade doGetFacade(@NotNull IntegrationKey key, @NotNull Project project) throws Exception -->Line_10 $$ if (pair != null && prepare(myCommunicationManager, project, key, pair)) [ FD ]
Line_19 $$ if (pair != null) -->Line_21 $$ myRemoteFacades.clear()[ CD ]
Line_2 $$ private RemoteExternalSystemFacade doGetFacade(@NotNull IntegrationKey key, @NotNull Project project) throws Exception -->Line_5 $$ ExternalSystemManager manager = ExternalSystemApiUtil.getManager(key.getExternalSystemId())[ FD ]
Line_2 $$ private RemoteExternalSystemFacade doGetFacade(@NotNull IntegrationKey key, @NotNull Project project) throws Exception -->Line_5 $$ ExternalSystemManager manager = ExternalSystemApiUtil.getManager(key.getExternalSystemId())[ CD ]
Line_2 $$ private RemoteExternalSystemFacade doGetFacade(@NotNull IntegrationKey key, @NotNull Project project) throws Exception -->Line_23 $$ return doCreateFacade(key, project, myCommunicationManager)[ FD ]
Line_9 $$ Pair<RemoteExternalSystemFacade, ExternalSystemExecutionSettings> pair = myRemoteFacades.get(key)-->Line_16 $$ if (pair != null && prepare(myCommunicationManager, project, key, pair)) [ FD ]
Line_2 $$ private RemoteExternalSystemFacade doGetFacade(@NotNull IntegrationKey key, @NotNull Project project) throws Exception -->Line_3 $$ final boolean currentInProcess = ExternalSystemApiUtil.isInProcessMode(key.getExternalSystemId())[ FD ]
Line_2 $$ private RemoteExternalSystemFacade doGetFacade(@NotNull IntegrationKey key, @NotNull Project project) throws Exception -->Line_4 $$ final ExternalSystemCommunicationManager myCommunicationManager = currentInProcess ? myInProcessCommunicationManager : myRemoteCommunicationManager[ CD ]
Line_2 $$ private RemoteExternalSystemFacade doGetFacade(@NotNull IntegrationKey key, @NotNull Project project) throws Exception -->Line_16 $$ if (pair != null && prepare(myCommunicationManager, project, key, pair)) [ FD ]
Line_2 $$ private RemoteExternalSystemFacade doGetFacade(@NotNull IntegrationKey key, @NotNull Project project) throws Exception -->Line_13 $$ myLock.lock()[ CD ]
Line_2 $$ private RemoteExternalSystemFacade doGetFacade(@NotNull IntegrationKey key, @NotNull Project project) throws Exception -->Line_15 $$ pair = myRemoteFacades.get(key)[ FD ]
Line_16 $$ if (pair != null && prepare(myCommunicationManager, project, key, pair)) -->Line_17 $$ return pair.first[ CD ]
Line_4 $$ final ExternalSystemCommunicationManager myCommunicationManager = currentInProcess ? myInProcessCommunicationManager : myRemoteCommunicationManager-->Line_23 $$ return doCreateFacade(key, project, myCommunicationManager)[ FD ]
Line_15 $$ pair = myRemoteFacades.get(key)-->Line_19 $$ if (pair != null) [ FD ]
Line_2 $$ private RemoteExternalSystemFacade doGetFacade(@NotNull IntegrationKey key, @NotNull Project project) throws Exception -->Line_9 $$ Pair<RemoteExternalSystemFacade, ExternalSystemExecutionSettings> pair = myRemoteFacades.get(key)[ CD ]
Line_15 $$ pair = myRemoteFacades.get(key)-->Line_16 $$ if (pair != null && prepare(myCommunicationManager, project, key, pair)) [ FD ]
Line_2 $$ private RemoteExternalSystemFacade doGetFacade(@NotNull IntegrationKey key, @NotNull Project project) throws Exception -->Line_9 $$ Pair<RemoteExternalSystemFacade, ExternalSystemExecutionSettings> pair = myRemoteFacades.get(key)[ FD ]
Line_10 $$ if (pair != null && prepare(myCommunicationManager, project, key, pair)) -->Line_11 $$ return pair.first[ CD ]
Line_4 $$ final ExternalSystemCommunicationManager myCommunicationManager = currentInProcess ? myInProcessCommunicationManager : myRemoteCommunicationManager-->Line_16 $$ if (pair != null && prepare(myCommunicationManager, project, key, pair)) [ FD ]
Line_4 $$ final ExternalSystemCommunicationManager myCommunicationManager = currentInProcess ? myInProcessCommunicationManager : myRemoteCommunicationManager-->Line_10 $$ if (pair != null && prepare(myCommunicationManager, project, key, pair)) [ FD ]
Line_9 $$ Pair<RemoteExternalSystemFacade, ExternalSystemExecutionSettings> pair = myRemoteFacades.get(key)-->Line_19 $$ if (pair != null) [ FD ]
Line_2 $$ private RemoteExternalSystemFacade doGetFacade(@NotNull IntegrationKey key, @NotNull Project project) throws Exception -->Line_10 $$ if (pair != null && prepare(myCommunicationManager, project, key, pair)) [ CD ]
Line_2 $$ private RemoteExternalSystemFacade doGetFacade(@NotNull IntegrationKey key, @NotNull Project project) throws Exception -->Line_3 $$ final boolean currentInProcess = ExternalSystemApiUtil.isInProcessMode(key.getExternalSystemId())[ CD ]
Line_9 $$ Pair<RemoteExternalSystemFacade, ExternalSystemExecutionSettings> pair = myRemoteFacades.get(key)-->Line_15 $$ pair = myRemoteFacades.get(key)[ FD ]
Line_9 $$ Pair<RemoteExternalSystemFacade, ExternalSystemExecutionSettings> pair = myRemoteFacades.get(key)-->Line_10 $$ if (pair != null && prepare(myCommunicationManager, project, key, pair)) [ FD ]
Line_2 $$ private RemoteExternalSystemFacade doGetFacade(@NotNull IntegrationKey key, @NotNull Project project) throws Exception -->Line_6 $$ if (project.isDisposed() || manager == null) [ CD ]
