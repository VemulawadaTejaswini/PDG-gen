Line_2 $$ public final SoftLock lockItem(SessionImplementor session, Object key, Object version) throws CacheException -->Line_9 $$ getInternalRegion().put(session, key, lock)[ FD ]
Line_6 $$ Lockable item = (Lockable) getInternalRegion().get(session, key)-->Line_8 $$ final Lock lock = (item == null) ? new Lock(timeout, uuid, nextLockId(), version) : item.lock(timeout, uuid, nextLockId())[ FD ]
Line_2 $$ public final SoftLock lockItem(SessionImplementor session, Object key, Object version) throws CacheException -->Line_4 $$ LOG.debugf("locking key[%s] in region[%s]", key, getInternalRegion().getName())[ FD ]
Line_2 $$ public final SoftLock lockItem(SessionImplementor session, Object key, Object version) throws CacheException -->Line_6 $$ Lockable item = (Lockable) getInternalRegion().get(session, key)[ FD ]
Line_7 $$ long timeout = getInternalRegion().nextTimestamp() + getInternalRegion().getTimeout()-->Line_8 $$ final Lock lock = (item == null) ? new Lock(timeout, uuid, nextLockId(), version) : item.lock(timeout, uuid, nextLockId())[ FD ]
Line_8 $$ final Lock lock = (item == null) ? new Lock(timeout, uuid, nextLockId(), version) : item.lock(timeout, uuid, nextLockId())-->Line_9 $$ getInternalRegion().put(session, key, lock)[ FD ]
