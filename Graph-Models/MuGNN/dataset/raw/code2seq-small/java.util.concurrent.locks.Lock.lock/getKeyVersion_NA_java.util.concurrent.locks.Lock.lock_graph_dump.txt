Line_2 $$ public KeyVersion getKeyVersion(String versionName) throws IOException -->Line_10 $$ key = (SecretKeySpec) keyStore.getKey(versionName, password)[ FD ]
Line_2 $$ public KeyVersion getKeyVersion(String versionName) throws IOException -->Line_3 $$ readLock.lock()[ CD ]
Line_5 $$ SecretKeySpec key = null-->Line_18 $$ return new KeyVersion(getBaseName(versionName), versionName, key.getEncoded())[ FD ]
Line_2 $$ public KeyVersion getKeyVersion(String versionName) throws IOException -->Line_7 $$ if (!keyStore.containsAlias(versionName)) [ FD ]
Line_2 $$ public KeyVersion getKeyVersion(String versionName) throws IOException -->Line_18 $$ return new KeyVersion(getBaseName(versionName), versionName, key.getEncoded())[ FD ]
Line_7 $$ if (!keyStore.containsAlias(versionName)) -->Line_8 $$ return null[ CD ]
Line_10 $$ key = (SecretKeySpec) keyStore.getKey(versionName, password)-->Line_18 $$ return new KeyVersion(getBaseName(versionName), versionName, key.getEncoded())[ FD ]
Line_5 $$ SecretKeySpec key = null-->Line_10 $$ key = (SecretKeySpec) keyStore.getKey(versionName, password)[ FD ]
