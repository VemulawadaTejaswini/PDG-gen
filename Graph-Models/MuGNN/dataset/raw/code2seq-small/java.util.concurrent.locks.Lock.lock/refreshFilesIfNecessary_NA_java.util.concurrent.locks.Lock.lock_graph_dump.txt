Line_2 $$ private void refreshFilesIfNecessary() -->Line_16 $$ LocalFileSystem fileSystem = LocalFileSystem.getInstance()[ CD ]
Line_23 $$ if (file != null) -->Line_24 $$ Document document = fileDocumentManager.getCachedDocument(file)[ CD ]
Line_22 $$ VirtualFile file = fileSystem.findFileByPath(path)-->Line_24 $$ Document document = fileDocumentManager.getCachedDocument(file)[ FD ]
Line_2 $$ private void refreshFilesIfNecessary() -->Line_48 $$ if (scheduleRefresh) [ CD ]
Line_2 $$ private void refreshFilesIfNecessary() -->Line_3 $$ if (myFilesToRefresh.isEmpty() || myProject.isDisposed()) [ CD ]
Line_21 $$ for (String path : paths) -->Line_22 $$ VirtualFile file = fileSystem.findFileByPath(path)[ FD ]
Line_2 $$ private void refreshFilesIfNecessary() -->Line_6 $$ Map<ProjectSystemId, Set<String>> copy = ContainerUtilRt.newHashMap()[ CD ]
Line_39 $$ final ExternalSystemTaskState taskState = resolveTask == null ? null : resolveTask.getState()-->Line_42 $$ if (taskState != ExternalSystemTaskState.NOT_STARTED) [ FD ]
Line_25 $$ if (document != null) -->Line_26 $$ myDocumentsToSave.remove(document)[ CD ]
Line_35 $$ ExternalSystemProcessingManager processingManager = ServiceManager.getService(ExternalSystemProcessingManager.class)-->Line_38 $$ final ExternalSystemTask resolveTask = processingManager.findTask(ExternalSystemTaskType.RESOLVE_PROJECT, entry.getKey(), path)[ FD ]
Line_7 $$ Lock fileLock = myVfsLock.writeLock()-->Line_13 $$ fileLock.unlock()[ FD ]
Line_42 $$ if (taskState != ExternalSystemTaskState.NOT_STARTED) -->Line_43 $$ scheduleRefresh = true[ CD ]
Line_22 $$ VirtualFile file = fileSystem.findFileByPath(path)-->Line_23 $$ if (file != null) [ FD ]
Line_39 $$ final ExternalSystemTaskState taskState = resolveTask == null ? null : resolveTask.getState()-->Line_40 $$ if (taskState == null || taskState.isStopped()) [ FD ]
Line_23 $$ if (file != null) -->Line_25 $$ if (document != null) [ CD ]
Line_36 $$ for (Map.Entry<ProjectSystemId, Set<String>> entry : copy.entrySet()) -->Line_37 $$ for (String path : entry.getValue()) [ FD ]
Line_21 $$ for (String path : paths) -->Line_44 $$ addPath(entry.getKey(), path)[ FD ]
Line_16 $$ LocalFileSystem fileSystem = LocalFileSystem.getInstance()-->Line_22 $$ VirtualFile file = fileSystem.findFileByPath(path)[ FD ]
Line_2 $$ private void refreshFilesIfNecessary() -->Line_8 $$ fileLock.lock()[ CD ]
Line_36 $$ for (Map.Entry<ProjectSystemId, Set<String>> entry : copy.entrySet()) -->Line_38 $$ final ExternalSystemTask resolveTask = processingManager.findTask(ExternalSystemTaskType.RESOLVE_PROJECT, entry.getKey(), path)[ FD ]
Line_38 $$ final ExternalSystemTask resolveTask = processingManager.findTask(ExternalSystemTaskType.RESOLVE_PROJECT, entry.getKey(), path)-->Line_39 $$ final ExternalSystemTaskState taskState = resolveTask == null ? null : resolveTask.getState()[ FD ]
Line_2 $$ private void refreshFilesIfNecessary() -->Line_7 $$ Lock fileLock = myVfsLock.writeLock()[ CD ]
Line_2 $$ private void refreshFilesIfNecessary() -->Line_35 $$ ExternalSystemProcessingManager processingManager = ServiceManager.getService(ExternalSystemProcessingManager.class)[ CD ]
Line_3 $$ if (myFilesToRefresh.isEmpty() || myProject.isDisposed()) -->Line_4 $$ return[ CD ]
Line_2 $$ private void refreshFilesIfNecessary() -->Line_18 $$ documentLock.lock()[ CD ]
Line_36 $$ for (Map.Entry<ProjectSystemId, Set<String>> entry : copy.entrySet()) -->Line_41 $$ ExternalSystemUtil.refreshProject(myProject, entry.getKey(), path, myRefreshCallback, false, ProgressExecutionMode.IN_BACKGROUND_ASYNC, false)[ FD ]
Line_34 $$ boolean scheduleRefresh = false-->Line_43 $$ scheduleRefresh = true[ FD ]
Line_2 $$ private void refreshFilesIfNecessary() -->Line_15 $$ FileDocumentManager fileDocumentManager = FileDocumentManager.getInstance()[ CD ]
Line_17 $$ Lock documentLock = myDocumentLock.writeLock()-->Line_18 $$ documentLock.lock()[ FD ]
Line_21 $$ for (String path : paths) -->Line_41 $$ ExternalSystemUtil.refreshProject(myProject, entry.getKey(), path, myRefreshCallback, false, ProgressExecutionMode.IN_BACKGROUND_ASYNC, false)[ FD ]
Line_24 $$ Document document = fileDocumentManager.getCachedDocument(file)-->Line_25 $$ if (document != null) [ FD ]
Line_48 $$ if (scheduleRefresh) -->Line_49 $$ myVfsAlarm.cancelAllRequests()[ CD ]
Line_6 $$ Map<ProjectSystemId, Set<String>> copy = ContainerUtilRt.newHashMap()-->Line_36 $$ for (Map.Entry<ProjectSystemId, Set<String>> entry : copy.entrySet()) [ FD ]
Line_15 $$ FileDocumentManager fileDocumentManager = FileDocumentManager.getInstance()-->Line_24 $$ Document document = fileDocumentManager.getCachedDocument(file)[ FD ]
Line_36 $$ for (Map.Entry<ProjectSystemId, Set<String>> entry : copy.entrySet()) -->Line_44 $$ addPath(entry.getKey(), path)[ FD ]
Line_6 $$ Map<ProjectSystemId, Set<String>> copy = ContainerUtilRt.newHashMap()-->Line_20 $$ for (Set<String> paths : copy.values()) [ FD ]
Line_17 $$ Lock documentLock = myDocumentLock.writeLock()-->Line_32 $$ documentLock.unlock()[ FD ]
Line_2 $$ private void refreshFilesIfNecessary() -->Line_34 $$ boolean scheduleRefresh = false[ CD ]
Line_6 $$ Map<ProjectSystemId, Set<String>> copy = ContainerUtilRt.newHashMap()-->Line_10 $$ copy.putAll(myFilesToRefresh)[ FD ]
Line_40 $$ if (taskState == null || taskState.isStopped()) -->Line_41 $$ ExternalSystemUtil.refreshProject(myProject, entry.getKey(), path, myRefreshCallback, false, ProgressExecutionMode.IN_BACKGROUND_ASYNC, false)[ CD ]
Line_21 $$ for (String path : paths) -->Line_38 $$ final ExternalSystemTask resolveTask = processingManager.findTask(ExternalSystemTaskType.RESOLVE_PROJECT, entry.getKey(), path)[ FD ]
Line_7 $$ Lock fileLock = myVfsLock.writeLock()-->Line_8 $$ fileLock.lock()[ FD ]
Line_24 $$ Document document = fileDocumentManager.getCachedDocument(file)-->Line_26 $$ myDocumentsToSave.remove(document)[ FD ]
Line_42 $$ if (taskState != ExternalSystemTaskState.NOT_STARTED) -->Line_44 $$ addPath(entry.getKey(), path)[ CD ]
Line_48 $$ if (scheduleRefresh) -->Line_50 $$ myVfsAlarm.addRequest(myFilesRequest, ExternalSystemConstants.AUTO_IMPORT_DELAY_MILLIS)[ CD ]
Line_2 $$ private void refreshFilesIfNecessary() -->Line_17 $$ Lock documentLock = myDocumentLock.writeLock()[ CD ]
Line_40 $$ if (taskState == null || taskState.isStopped()) -->Line_42 $$ if (taskState != ExternalSystemTaskState.NOT_STARTED) [ CD ]
