Line_2 $$ public void deleteKey(String name) throws IOException -->Line_21 $$ keyStore.deleteEntry(name)[ FD ]
Line_2 $$ public void deleteKey(String name) throws IOException -->Line_26 $$ cache.remove(name)[ FD ]
Line_10 $$ String versionName = buildVersionName(name, v)-->Line_13 $$ keyStore.deleteEntry(versionName)[ FD ]
Line_5 $$ Metadata meta = getMetadata(name)-->Line_6 $$ if (meta == null) [ FD ]
Line_5 $$ Metadata meta = getMetadata(name)-->Line_9 $$ for (int v = 0; v < meta.getVersions(); ++v) [ FD ]
Line_2 $$ public void deleteKey(String name) throws IOException -->Line_10 $$ String versionName = buildVersionName(name, v)[ FD ]
Line_2 $$ public void deleteKey(String name) throws IOException -->Line_20 $$ if (keyStore.containsAlias(name)) [ FD ]
Line_12 $$ if (keyStore.containsAlias(versionName)) -->Line_13 $$ keyStore.deleteEntry(versionName)[ CD ]
Line_2 $$ public void deleteKey(String name) throws IOException -->Line_5 $$ Metadata meta = getMetadata(name)[ FD ]
Line_20 $$ if (keyStore.containsAlias(name)) -->Line_21 $$ keyStore.deleteEntry(name)[ CD ]
Line_9 $$ for (int v = 0; v < meta.getVersions(); ++v) -->Line_10 $$ String versionName = buildVersionName(name, v)[ FD ]
Line_2 $$ public void deleteKey(String name) throws IOException -->Line_3 $$ writeLock.lock()[ CD ]
Line_9 $$ for (int v = 0; v < meta.getVersions(); ++v) -->Line_10 $$ String versionName = buildVersionName(name, v)[ CD ]
Line_10 $$ String versionName = buildVersionName(name, v)-->Line_12 $$ if (keyStore.containsAlias(versionName)) [ FD ]
