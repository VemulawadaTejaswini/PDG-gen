Line_27 $$ if (cachedClassLoader == null) -->Line_36 $$ Cleanup cleanup = new Cleanup(libClasspath, cachedClassLoader, finalizerThread.getReferenceQueue(), classLoader, groovySystemForLoader, gradleApiGroovy, antBuilderAdapterGroovy)[ CD ]
Line_26 $$ cachedClassLoader = maybeGet(cacheEntry)-->Line_33 $$ cachedClassLoader = new CachedClassLoader(libClasspath, classLoader)[ FD ]
Line_33 $$ cachedClassLoader = new CachedClassLoader(libClasspath, classLoader)-->Line_52 $$ action.execute(cachedClassLoader)[ FD ]
Line_25 $$ CacheEntry cacheEntry = cacheEntries.get(libClasspath)-->Line_26 $$ cachedClassLoader = maybeGet(cacheEntry)[ FD ]
Line_22 $$ CachedClassLoader cachedClassLoader-->Line_56 $$ inUseClassLoaders.remove(cachedClassLoader)[ FD ]
Line_26 $$ cachedClassLoader = maybeGet(cacheEntry)-->Line_56 $$ inUseClassLoaders.remove(cachedClassLoader)[ FD ]
Line_27 $$ if (cachedClassLoader == null) -->Line_40 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_28 $$ if (LOG.isDebugEnabled()) -->Line_29 $$ LOG.debug(String.format("Classloader cache miss for classpath : %s. Creating classloader.", libClasspath.getAsURIs()))[ CD ]
Line_22 $$ CachedClassLoader cachedClassLoader-->Line_27 $$ if (cachedClassLoader == null) [ FD ]
Line_33 $$ cachedClassLoader = new CachedClassLoader(libClasspath, classLoader)-->Line_56 $$ inUseClassLoaders.remove(cachedClassLoader)[ FD ]
Line_34 $$ cacheEntry = new CacheEntry(libClasspath, cachedClassLoader)-->Line_38 $$ cacheEntries.put(libClasspath, cacheEntry)[ FD ]
Line_22 $$ CachedClassLoader cachedClassLoader-->Line_33 $$ cachedClassLoader = new CachedClassLoader(libClasspath, classLoader)[ FD ]
Line_26 $$ cachedClassLoader = maybeGet(cacheEntry)-->Line_27 $$ if (cachedClassLoader == null) [ FD ]
Line_26 $$ cachedClassLoader = maybeGet(cacheEntry)-->Line_52 $$ action.execute(cachedClassLoader)[ FD ]
Line_25 $$ CacheEntry cacheEntry = cacheEntries.get(libClasspath)-->Line_38 $$ cacheEntries.put(libClasspath, cacheEntry)[ FD ]
Line_40 $$ if (LOG.isDebugEnabled()) -->Line_41 $$ LOG.debug(String.format("Classloader found in cache: %s", libClasspath.getAsURIs()))[ CD ]
Line_25 $$ CacheEntry cacheEntry = cacheEntries.get(libClasspath)-->Line_34 $$ cacheEntry = new CacheEntry(libClasspath, cachedClassLoader)[ FD ]
Line_22 $$ CachedClassLoader cachedClassLoader-->Line_26 $$ cachedClassLoader = maybeGet(cacheEntry)[ FD ]
Line_36 $$ Cleanup cleanup = new Cleanup(libClasspath, cachedClassLoader, finalizerThread.getReferenceQueue(), classLoader, groovySystemForLoader, gradleApiGroovy, antBuilderAdapterGroovy)-->Line_37 $$ finalizerThread.putCleanup(libClasspath, cleanup)[ FD ]
Line_27 $$ if (cachedClassLoader == null) -->Line_35 $$ GroovySystemLoader groovySystemForLoader = groovySystemLoaderFactory.forClassLoader(classLoader)[ CD ]
Line_27 $$ if (cachedClassLoader == null) -->Line_33 $$ cachedClassLoader = new CachedClassLoader(libClasspath, classLoader)[ CD ]
Line_27 $$ if (cachedClassLoader == null) -->Line_34 $$ cacheEntry = new CacheEntry(libClasspath, cachedClassLoader)[ CD ]
Line_27 $$ if (cachedClassLoader == null) -->Line_37 $$ finalizerThread.putCleanup(libClasspath, cleanup)[ CD ]
Line_22 $$ CachedClassLoader cachedClassLoader-->Line_52 $$ action.execute(cachedClassLoader)[ FD ]
Line_27 $$ if (cachedClassLoader == null) -->Line_38 $$ cacheEntries.put(libClasspath, cacheEntry)[ CD ]
Line_27 $$ if (cachedClassLoader == null) -->Line_28 $$ if (LOG.isDebugEnabled()) [ CD ]
