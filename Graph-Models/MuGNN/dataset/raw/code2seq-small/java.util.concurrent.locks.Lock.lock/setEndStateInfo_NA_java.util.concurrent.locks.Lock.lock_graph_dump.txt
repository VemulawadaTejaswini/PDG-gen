Line_2 $$ private void setEndStateInfo(ExecHandleState newState, int exitValue, Throwable failureCause) -->Line_6 $$ lock.lock()[ CD ]
Line_2 $$ private void setEndStateInfo(ExecHandleState newState, int exitValue, Throwable failureCause) -->Line_17 $$ setState(newState)[ FD ]
Line_11 $$ if (currentState == ExecHandleState.STARTING) -->Line_14 $$ wrappedException = new ExecException(String.format("A problem occurred waiting for process '%s' to complete.", displayName), failureCause)[ CD ]
Line_2 $$ private void setEndStateInfo(ExecHandleState newState, int exitValue, Throwable failureCause) -->Line_3 $$ ShutdownHookActionRegister.removeAction(shutdownHookAction)[ CD ]
Line_5 $$ ExecHandleState currentState-->Line_11 $$ if (currentState == ExecHandleState.STARTING) [ FD ]
Line_9 $$ ExecException wrappedException = null-->Line_14 $$ wrappedException = new ExecException(String.format("A problem occurred waiting for process '%s' to complete.", displayName), failureCause)[ FD ]
Line_5 $$ ExecHandleState currentState-->Line_8 $$ currentState = this.state[ FD ]
Line_9 $$ ExecException wrappedException = null-->Line_12 $$ wrappedException = new ExecException(String.format("A problem occurred starting process '%s'", displayName), failureCause)[ FD ]
Line_19 $$ result = execResult-->Line_25 $$ broadcast.getSource().executionFinished(this, result)[ FD ]
Line_2 $$ private void setEndStateInfo(ExecHandleState newState, int exitValue, Throwable failureCause) -->Line_5 $$ ExecHandleState currentState[ CD ]
Line_2 $$ private void setEndStateInfo(ExecHandleState newState, int exitValue, Throwable failureCause) -->Line_24 $$ if (currentState != ExecHandleState.DETACHED && newState != ExecHandleState.DETACHED) [ CD ]
Line_2 $$ private void setEndStateInfo(ExecHandleState newState, int exitValue, Throwable failureCause) -->Line_4 $$ ExecResultImpl result[ CD ]
Line_8 $$ currentState = this.state-->Line_11 $$ if (currentState == ExecHandleState.STARTING) [ FD ]
Line_12 $$ wrappedException = new ExecException(String.format("A problem occurred starting process '%s'", displayName), failureCause)-->Line_14 $$ wrappedException = new ExecException(String.format("A problem occurred waiting for process '%s' to complete.", displayName), failureCause)[ FD ]
Line_10 $$ if (failureCause != null) -->Line_11 $$ if (currentState == ExecHandleState.STARTING) [ CD ]
Line_4 $$ ExecResultImpl result-->Line_25 $$ broadcast.getSource().executionFinished(this, result)[ FD ]
Line_2 $$ private void setEndStateInfo(ExecHandleState newState, int exitValue, Throwable failureCause) -->Line_23 $$ LOGGER.debug("Process '[ CD ]
Line_2 $$ private void setEndStateInfo(ExecHandleState newState, int exitValue, Throwable failureCause) -->Line_23 $$ LOGGER.debug("Process '[ FD ]
Line_2 $$ private void setEndStateInfo(ExecHandleState newState, int exitValue, Throwable failureCause) -->Line_27 $$ executor.requestStop()[ CD ]
Line_4 $$ ExecResultImpl result-->Line_19 $$ result = execResult[ FD ]
Line_2 $$ private void setEndStateInfo(ExecHandleState newState, int exitValue, Throwable failureCause) -->Line_10 $$ if (failureCause != null) [ FD ]
Line_24 $$ if (currentState != ExecHandleState.DETACHED && newState != ExecHandleState.DETACHED) -->Line_25 $$ broadcast.getSource().executionFinished(this, result)[ CD ]
Line_11 $$ if (currentState == ExecHandleState.STARTING) -->Line_12 $$ wrappedException = new ExecException(String.format("A problem occurred starting process '%s'", displayName), failureCause)[ CD ]
