Line_3 $$ Date expiry = new Date(System.currentTimeMillis() + 4000L)-->Line_8 $$ if (!condition.awaitUntil(expiry)) [ FD ]
Line_2 $$ private State waitForState(State... states) throws InterruptedException -->Line_4 $$ Collection<State> expectedStates = Arrays.asList(states)[ FD ]
Line_4 $$ Collection<State> expectedStates = Arrays.asList(states)-->Line_9 $$ throw new IllegalStateException(String.format("Timeout waiting for one of: %s", expectedStates))[ FD ]
Line_2 $$ private State waitForState(State... states) throws InterruptedException -->Line_4 $$ Collection<State> expectedStates = Arrays.asList(states)[ CD ]
Line_4 $$ Collection<State> expectedStates = Arrays.asList(states)-->Line_7 $$ while (!expectedStates.contains(state)) [ FD ]
Line_7 $$ while (!expectedStates.contains(state)) -->Line_8 $$ if (!condition.awaitUntil(expiry)) [ CD ]
Line_2 $$ private State waitForState(State... states) throws InterruptedException -->Line_3 $$ Date expiry = new Date(System.currentTimeMillis() + 4000L)[ CD ]
Line_2 $$ private State waitForState(State... states) throws InterruptedException -->Line_5 $$ lock.lock()[ CD ]
