Line_14 $$ Task task = new CompletedTask(yarnTaskID, taskInfo)-->Line_15 $$ tasks.put(yarnTaskID, task)[ FD ]
Line_2 $$ private void loadAllTasks() -->Line_3 $$ if (tasksLoaded.get()) [ CD ]
Line_14 $$ Task task = new CompletedTask(yarnTaskID, taskInfo)-->Line_16 $$ if (task.getType() == TaskType.MAP) [ FD ]
Line_14 $$ Task task = new CompletedTask(yarnTaskID, taskInfo)-->Line_19 $$ reduceTasks.put(task.getID(), task)[ FD ]
Line_11 $$ for (Map.Entry<TaskID, TaskInfo> entry : jobInfo.getAllTasks().entrySet()) -->Line_12 $$ TaskId yarnTaskID = TypeConverter.toYarn(entry.getKey())[ FD ]
Line_11 $$ for (Map.Entry<TaskID, TaskInfo> entry : jobInfo.getAllTasks().entrySet()) -->Line_13 $$ TaskInfo taskInfo = entry.getValue()[ FD ]
Line_12 $$ TaskId yarnTaskID = TypeConverter.toYarn(entry.getKey())-->Line_15 $$ tasks.put(yarnTaskID, task)[ FD ]
Line_3 $$ if (tasksLoaded.get()) -->Line_4 $$ return[ CD ]
Line_14 $$ Task task = new CompletedTask(yarnTaskID, taskInfo)-->Line_17 $$ mapTasks.put(task.getID(), task)[ FD ]
Line_18 $$ if (task.getType() == TaskType.REDUCE) -->Line_19 $$ reduceTasks.put(task.getID(), task)[ CD ]
Line_8 $$ if (tasksLoaded.get()) -->Line_9 $$ return[ CD ]
Line_16 $$ if (task.getType() == TaskType.MAP) -->Line_18 $$ if (task.getType() == TaskType.REDUCE) [ CD ]
Line_14 $$ Task task = new CompletedTask(yarnTaskID, taskInfo)-->Line_18 $$ if (task.getType() == TaskType.REDUCE) [ FD ]
Line_2 $$ private void loadAllTasks() -->Line_6 $$ tasksLock.lock()[ CD ]
Line_16 $$ if (task.getType() == TaskType.MAP) -->Line_17 $$ mapTasks.put(task.getID(), task)[ CD ]
