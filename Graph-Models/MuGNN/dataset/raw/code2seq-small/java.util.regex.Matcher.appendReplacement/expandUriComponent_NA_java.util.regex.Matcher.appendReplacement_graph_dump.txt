Line_14 $$ StringBuffer sb = new StringBuffer()-->Line_24 $$ matcher.appendReplacement(sb, replacement)[ FD ]
Line_10 $$ if (source.indexOf(':') != -1) -->Line_11 $$ source = sanitizeSource(source)[ CD ]
Line_14 $$ StringBuffer sb = new StringBuffer()-->Line_26 $$ matcher.appendTail(sb)[ FD ]
Line_22 $$ String variableValueString = getVariableValueAsString(variableValue)-->Line_23 $$ String replacement = Matcher.quoteReplacement(variableValueString)[ FD ]
Line_14 $$ StringBuffer sb = new StringBuffer()-->Line_27 $$ return sb.toString()[ FD ]
Line_15 $$ while (matcher.find()) -->Line_24 $$ matcher.appendReplacement(sb, replacement)[ CD ]
Line_15 $$ while (matcher.find()) -->Line_23 $$ String replacement = Matcher.quoteReplacement(variableValueString)[ CD ]
Line_18 $$ Object variableValue = uriVariables.getValue(variableName)-->Line_22 $$ String variableValueString = getVariableValueAsString(variableValue)[ FD ]
Line_11 $$ source = sanitizeSource(source)-->Line_13 $$ Matcher matcher = NAMES_PATTERN.matcher(source)[ FD ]
Line_13 $$ Matcher matcher = NAMES_PATTERN.matcher(source)-->Line_26 $$ matcher.appendTail(sb)[ FD ]
Line_16 $$ String match = matcher.group(1)-->Line_17 $$ String variableName = getVariableName(match)[ FD ]
Line_15 $$ while (matcher.find()) -->Line_18 $$ Object variableValue = uriVariables.getValue(variableName)[ CD ]
Line_15 $$ while (matcher.find()) -->Line_16 $$ String match = matcher.group(1)[ CD ]
Line_15 $$ while (matcher.find()) -->Line_22 $$ String variableValueString = getVariableValueAsString(variableValue)[ CD ]
Line_15 $$ while (matcher.find()) -->Line_19 $$ if (UriTemplateVariables.SKIP_VALUE.equals(variableValue)) [ CD ]
Line_7 $$ if (source.indexOf('-->Line_8 $$ return source[ CD ]
Line_13 $$ Matcher matcher = NAMES_PATTERN.matcher(source)-->Line_15 $$ while (matcher.find()) [ FD ]
Line_15 $$ while (matcher.find()) -->Line_17 $$ String variableName = getVariableName(match)[ CD ]
Line_18 $$ Object variableValue = uriVariables.getValue(variableName)-->Line_19 $$ if (UriTemplateVariables.SKIP_VALUE.equals(variableValue)) [ FD ]
Line_4 $$ if (source == null) -->Line_5 $$ return null[ CD ]
Line_13 $$ Matcher matcher = NAMES_PATTERN.matcher(source)-->Line_24 $$ matcher.appendReplacement(sb, replacement)[ FD ]
Line_13 $$ Matcher matcher = NAMES_PATTERN.matcher(source)-->Line_16 $$ String match = matcher.group(1)[ FD ]
Line_23 $$ String replacement = Matcher.quoteReplacement(variableValueString)-->Line_24 $$ matcher.appendReplacement(sb, replacement)[ FD ]
Line_17 $$ String variableName = getVariableName(match)-->Line_18 $$ Object variableValue = uriVariables.getValue(variableName)[ FD ]
