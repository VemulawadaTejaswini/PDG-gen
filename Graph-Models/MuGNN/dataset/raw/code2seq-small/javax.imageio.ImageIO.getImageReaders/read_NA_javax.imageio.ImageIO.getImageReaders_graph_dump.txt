Line_40 $$ if (formatName.contains(TYPE_PNG)) -->Line_42 $$ if (formatName.contains(TYPE_TIFF)) [ CD ]
Line_10 $$ while ((renderedImage == null) && iterator.hasNext()) -->Line_19 $$ formatName = StringUtil.toLowerCase(imageReader.getFormatName())[ CD ]
Line_2 $$ public ImageBag read(byte[] bytes) throws IOException -->Line_33 $$ String type = TYPE_JPEG[ CD ]
Line_11 $$ ImageReader imageReader = iterator.next()-->Line_15 $$ renderedImage = imageReader.read(0)[ FD ]
Line_2 $$ public ImageBag read(byte[] bytes) throws IOException -->Line_6 $$ RenderedImage renderedImage = null[ CD ]
Line_4 $$ ImageInputStream imageInputStream = null-->Line_30 $$ imageInputStream.close()[ FD ]
Line_19 $$ formatName = StringUtil.toLowerCase(imageReader.getFormatName())-->Line_34 $$ if (formatName.contains(TYPE_BMP)) [ FD ]
Line_5 $$ Queue<ImageReader> imageReaders = new LinkedList()-->Line_26 $$ ImageReader imageReader = imageReaders.poll()[ FD ]
Line_35 $$ type = TYPE_BMP-->Line_41 $$ type = TYPE_PNG[ FD ]
Line_5 $$ Queue<ImageReader> imageReaders = new LinkedList()-->Line_25 $$ while (!imageReaders.isEmpty()) [ FD ]
Line_8 $$ imageInputStream = ImageIO.createImageInputStream(new ByteArrayInputStream(bytes))-->Line_14 $$ imageReader.setInput(imageInputStream)[ FD ]
Line_35 $$ type = TYPE_BMP-->Line_37 $$ type = TYPE_GIF[ FD ]
Line_35 $$ type = TYPE_BMP-->Line_43 $$ type = TYPE_TIFF[ FD ]
Line_26 $$ ImageReader imageReader = imageReaders.poll()-->Line_27 $$ imageReader.dispose()[ FD ]
Line_38 $$ if (formatName.contains("jpeg") || StringUtil.equalsIgnoreCase(type, "jpeg")) -->Line_39 $$ type = TYPE_JPEG[ CD ]
Line_2 $$ public ImageBag read(byte[] bytes) throws IOException -->Line_4 $$ ImageInputStream imageInputStream = null[ CD ]
Line_37 $$ type = TYPE_GIF-->Line_39 $$ type = TYPE_JPEG[ FD ]
Line_4 $$ ImageInputStream imageInputStream = null-->Line_29 $$ if (imageInputStream != null) [ FD ]
Line_36 $$ if (formatName.contains(TYPE_GIF)) -->Line_38 $$ if (formatName.contains("jpeg") || StringUtil.equalsIgnoreCase(type, "jpeg")) [ CD ]
Line_33 $$ String type = TYPE_JPEG-->Line_35 $$ type = TYPE_BMP[ FD ]
Line_2 $$ public ImageBag read(byte[] bytes) throws IOException -->Line_34 $$ if (formatName.contains(TYPE_BMP)) [ CD ]
Line_4 $$ ImageInputStream imageInputStream = null-->Line_8 $$ imageInputStream = ImageIO.createImageInputStream(new ByteArrayInputStream(bytes))[ FD ]
Line_15 $$ renderedImage = imageReader.read(0)-->Line_21 $$ if (renderedImage == null) [ FD ]
Line_8 $$ imageInputStream = ImageIO.createImageInputStream(new ByteArrayInputStream(bytes))-->Line_9 $$ Iterator<ImageReader> iterator = ImageIO.getImageReaders(imageInputStream)[ FD ]
Line_2 $$ public ImageBag read(byte[] bytes) throws IOException -->Line_47 $$ return new ImageBag(renderedImage, type)[ CD ]
Line_19 $$ formatName = StringUtil.toLowerCase(imageReader.getFormatName())-->Line_40 $$ if (formatName.contains(TYPE_PNG)) [ FD ]
Line_37 $$ type = TYPE_GIF-->Line_41 $$ type = TYPE_PNG[ FD ]
Line_2 $$ public ImageBag read(byte[] bytes) throws IOException -->Line_3 $$ String formatName = null[ CD ]
Line_3 $$ String formatName = null-->Line_42 $$ if (formatName.contains(TYPE_TIFF)) [ FD ]
Line_3 $$ String formatName = null-->Line_38 $$ if (formatName.contains("jpeg") || StringUtil.equalsIgnoreCase(type, "jpeg")) [ FD ]
Line_6 $$ RenderedImage renderedImage = null-->Line_15 $$ renderedImage = imageReader.read(0)[ FD ]
Line_3 $$ String formatName = null-->Line_40 $$ if (formatName.contains(TYPE_PNG)) [ FD ]
Line_11 $$ ImageReader imageReader = iterator.next()-->Line_27 $$ imageReader.dispose()[ FD ]
Line_35 $$ type = TYPE_BMP-->Line_39 $$ type = TYPE_JPEG[ FD ]
Line_9 $$ Iterator<ImageReader> iterator = ImageIO.getImageReaders(imageInputStream)-->Line_10 $$ while ((renderedImage == null) && iterator.hasNext()) [ FD ]
Line_41 $$ type = TYPE_PNG-->Line_43 $$ type = TYPE_TIFF[ FD ]
Line_29 $$ if (imageInputStream != null) -->Line_30 $$ imageInputStream.close()[ CD ]
Line_38 $$ if (formatName.contains("jpeg") || StringUtil.equalsIgnoreCase(type, "jpeg")) -->Line_40 $$ if (formatName.contains(TYPE_PNG)) [ CD ]
Line_33 $$ String type = TYPE_JPEG-->Line_39 $$ type = TYPE_JPEG[ FD ]
Line_4 $$ ImageInputStream imageInputStream = null-->Line_9 $$ Iterator<ImageReader> iterator = ImageIO.getImageReaders(imageInputStream)[ FD ]
Line_33 $$ String type = TYPE_JPEG-->Line_38 $$ if (formatName.contains("jpeg") || StringUtil.equalsIgnoreCase(type, "jpeg")) [ FD ]
Line_19 $$ formatName = StringUtil.toLowerCase(imageReader.getFormatName())-->Line_36 $$ if (formatName.contains(TYPE_GIF)) [ FD ]
Line_3 $$ String formatName = null-->Line_36 $$ if (formatName.contains(TYPE_GIF)) [ FD ]
Line_37 $$ type = TYPE_GIF-->Line_43 $$ type = TYPE_TIFF[ FD ]
Line_34 $$ if (formatName.contains(TYPE_BMP)) -->Line_35 $$ type = TYPE_BMP[ CD ]
Line_33 $$ String type = TYPE_JPEG-->Line_37 $$ type = TYPE_GIF[ FD ]
Line_9 $$ Iterator<ImageReader> iterator = ImageIO.getImageReaders(imageInputStream)-->Line_11 $$ ImageReader imageReader = iterator.next()[ FD ]
Line_25 $$ while (!imageReaders.isEmpty()) -->Line_27 $$ imageReader.dispose()[ CD ]
Line_19 $$ formatName = StringUtil.toLowerCase(imageReader.getFormatName())-->Line_38 $$ if (formatName.contains("jpeg") || StringUtil.equalsIgnoreCase(type, "jpeg")) [ FD ]
Line_3 $$ String formatName = null-->Line_34 $$ if (formatName.contains(TYPE_BMP)) [ FD ]
Line_40 $$ if (formatName.contains(TYPE_PNG)) -->Line_41 $$ type = TYPE_PNG[ CD ]
Line_3 $$ String formatName = null-->Line_19 $$ formatName = StringUtil.toLowerCase(imageReader.getFormatName())[ FD ]
Line_19 $$ formatName = StringUtil.toLowerCase(imageReader.getFormatName())-->Line_42 $$ if (formatName.contains(TYPE_TIFF)) [ FD ]
Line_8 $$ imageInputStream = ImageIO.createImageInputStream(new ByteArrayInputStream(bytes))-->Line_30 $$ imageInputStream.close()[ FD ]
Line_10 $$ while ((renderedImage == null) && iterator.hasNext()) -->Line_12 $$ imageReaders.offer(imageReader)[ CD ]
Line_11 $$ ImageReader imageReader = iterator.next()-->Line_12 $$ imageReaders.offer(imageReader)[ FD ]
Line_8 $$ imageInputStream = ImageIO.createImageInputStream(new ByteArrayInputStream(bytes))-->Line_29 $$ if (imageInputStream != null) [ FD ]
Line_6 $$ RenderedImage renderedImage = null-->Line_21 $$ if (renderedImage == null) [ FD ]
Line_35 $$ type = TYPE_BMP-->Line_38 $$ if (formatName.contains("jpeg") || StringUtil.equalsIgnoreCase(type, "jpeg")) [ FD ]
Line_39 $$ type = TYPE_JPEG-->Line_41 $$ type = TYPE_PNG[ FD ]
Line_33 $$ String type = TYPE_JPEG-->Line_43 $$ type = TYPE_TIFF[ FD ]
Line_36 $$ if (formatName.contains(TYPE_GIF)) -->Line_37 $$ type = TYPE_GIF[ CD ]
Line_33 $$ String type = TYPE_JPEG-->Line_41 $$ type = TYPE_PNG[ FD ]
Line_2 $$ public ImageBag read(byte[] bytes) throws IOException -->Line_5 $$ Queue<ImageReader> imageReaders = new LinkedList()[ CD ]
Line_11 $$ ImageReader imageReader = iterator.next()-->Line_14 $$ imageReader.setInput(imageInputStream)[ FD ]
Line_42 $$ if (formatName.contains(TYPE_TIFF)) -->Line_43 $$ type = TYPE_TIFF[ CD ]
Line_4 $$ ImageInputStream imageInputStream = null-->Line_14 $$ imageReader.setInput(imageInputStream)[ FD ]
Line_34 $$ if (formatName.contains(TYPE_BMP)) -->Line_36 $$ if (formatName.contains(TYPE_GIF)) [ CD ]
Line_25 $$ while (!imageReaders.isEmpty()) -->Line_26 $$ ImageReader imageReader = imageReaders.poll()[ CD ]
Line_5 $$ Queue<ImageReader> imageReaders = new LinkedList()-->Line_12 $$ imageReaders.offer(imageReader)[ FD ]
Line_10 $$ while ((renderedImage == null) && iterator.hasNext()) -->Line_11 $$ ImageReader imageReader = iterator.next()[ CD ]
Line_39 $$ type = TYPE_JPEG-->Line_43 $$ type = TYPE_TIFF[ FD ]
Line_37 $$ type = TYPE_GIF-->Line_38 $$ if (formatName.contains("jpeg") || StringUtil.equalsIgnoreCase(type, "jpeg")) [ FD ]
Line_11 $$ ImageReader imageReader = iterator.next()-->Line_19 $$ formatName = StringUtil.toLowerCase(imageReader.getFormatName())[ FD ]
