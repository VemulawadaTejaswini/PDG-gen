Line_6 $$ PsiModifierList modifierList = variable.getModifierList()-->Line_7 $$ if (modifierList != null && modifierList.hasModifierProperty(PsiModifier.FINAL) && !(initializer instanceof PsiLiteralExpression)) [ FD ]
Line_15 $$ if (type.equalsToText("char")) -->Line_16 $$ text = "'" + text + "'"[ CD ]
Line_5 $$ if (initializer != null) -->Line_6 $$ PsiModifierList modifierList = variable.getModifierList()[ CD ]
Line_10 $$ if (o != null) -->Line_13 $$ if (type.equalsToText(CommonClassNames.JAVA_LANG_STRING)) [ CD ]
Line_8 $$ JavaPsiFacade instance = JavaPsiFacade.getInstance(variable.getProject())-->Line_9 $$ Object o = instance.getConstantEvaluationHelper().computeConstantExpression(initializer)[ FD ]
Line_4 $$ PsiExpression initializer = variable.getInitializer()-->Line_5 $$ if (initializer != null) [ FD ]
Line_12 $$ PsiType type = variable.getType()-->Line_15 $$ if (type.equalsToText("char")) [ FD ]
Line_10 $$ if (o != null) -->Line_11 $$ String text = o.toString()[ CD ]
Line_10 $$ if (o != null) -->Line_12 $$ PsiType type = variable.getType()[ CD ]
Line_5 $$ if (initializer != null) -->Line_7 $$ if (modifierList != null && modifierList.hasModifierProperty(PsiModifier.FINAL) && !(initializer instanceof PsiLiteralExpression)) [ CD ]
Line_7 $$ if (modifierList != null && modifierList.hasModifierProperty(PsiModifier.FINAL) && !(initializer instanceof PsiLiteralExpression)) -->Line_10 $$ if (o != null) [ CD ]
Line_7 $$ if (modifierList != null && modifierList.hasModifierProperty(PsiModifier.FINAL) && !(initializer instanceof PsiLiteralExpression)) -->Line_9 $$ Object o = instance.getConstantEvaluationHelper().computeConstantExpression(initializer)[ CD ]
Line_9 $$ Object o = instance.getConstantEvaluationHelper().computeConstantExpression(initializer)-->Line_10 $$ if (o != null) [ FD ]
Line_12 $$ PsiType type = variable.getType()-->Line_13 $$ if (type.equalsToText(CommonClassNames.JAVA_LANG_STRING)) [ FD ]
Line_9 $$ Object o = instance.getConstantEvaluationHelper().computeConstantExpression(initializer)-->Line_11 $$ String text = o.toString()[ FD ]
Line_11 $$ String text = o.toString()-->Line_14 $$ text = "\"" + StringUtil.escapeStringCharacters(StringUtil.shortenPathWithEllipsis(text, 120)) + "\""[ FD ]
Line_4 $$ PsiExpression initializer = variable.getInitializer()-->Line_9 $$ Object o = instance.getConstantEvaluationHelper().computeConstantExpression(initializer)[ FD ]
Line_14 $$ text = "\"" + StringUtil.escapeStringCharacters(StringUtil.shortenPathWithEllipsis(text, 120)) + "\""-->Line_16 $$ text = "'" + text + "'"[ FD ]
Line_7 $$ if (modifierList != null && modifierList.hasModifierProperty(PsiModifier.FINAL) && !(initializer instanceof PsiLiteralExpression)) -->Line_8 $$ JavaPsiFacade instance = JavaPsiFacade.getInstance(variable.getProject())[ CD ]
Line_13 $$ if (type.equalsToText(CommonClassNames.JAVA_LANG_STRING)) -->Line_14 $$ text = "\"" + StringUtil.escapeStringCharacters(StringUtil.shortenPathWithEllipsis(text, 120)) + "\""[ CD ]
Line_11 $$ String text = o.toString()-->Line_16 $$ text = "'" + text + "'"[ FD ]
Line_11 $$ String text = o.toString()-->Line_19 $$ return instance.getElementFactory().createExpressionFromText(text, variable)[ FD ]
Line_13 $$ if (type.equalsToText(CommonClassNames.JAVA_LANG_STRING)) -->Line_15 $$ if (type.equalsToText("char")) [ CD ]
Line_14 $$ text = "\"" + StringUtil.escapeStringCharacters(StringUtil.shortenPathWithEllipsis(text, 120)) + "\""-->Line_19 $$ return instance.getElementFactory().createExpressionFromText(text, variable)[ FD ]
Line_16 $$ text = "'" + text + "'"-->Line_19 $$ return instance.getElementFactory().createExpressionFromText(text, variable)[ FD ]
Line_8 $$ JavaPsiFacade instance = JavaPsiFacade.getInstance(variable.getProject())-->Line_19 $$ return instance.getElementFactory().createExpressionFromText(text, variable)[ FD ]
Line_12 $$ PsiType type = variable.getType()-->Line_21 $$ LOG.info("type:" + type.getCanonicalText() + "; text: " + text, ex)[ FD ]
