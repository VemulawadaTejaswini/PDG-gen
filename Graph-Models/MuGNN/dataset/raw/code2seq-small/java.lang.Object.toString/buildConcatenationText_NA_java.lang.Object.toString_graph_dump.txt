Line_6 $$ final Object value = ExpressionUtils.computeConstantExpression(expression)-->Line_7 $$ if (value == null) [ FD ]
Line_12 $$ if (element instanceof PsiWhiteSpace && element.getText().contains("\n") && (out.length() == 0 || out.charAt(out.length() - 1) != '\n')) -->Line_13 $$ out.append('\n')[ CD ]
Line_4 $$ if (element instanceof PsiExpression) -->Line_5 $$ final PsiExpression expression = (PsiExpression) element[ CD ]
Line_2 $$ private static StringBuilder buildConcatenationText(PsiPolyadicExpression polyadicExpression, StringBuilder out) -->Line_10 $$ out.append(value.toString())[ FD ]
Line_2 $$ private static StringBuilder buildConcatenationText(PsiPolyadicExpression polyadicExpression, StringBuilder out) -->Line_8 $$ out.append('?')[ FD ]
Line_6 $$ final Object value = ExpressionUtils.computeConstantExpression(expression)-->Line_10 $$ out.append(value.toString())[ FD ]
Line_4 $$ if (element instanceof PsiExpression) -->Line_12 $$ if (element instanceof PsiWhiteSpace && element.getText().contains("\n") && (out.length() == 0 || out.charAt(out.length() - 1) != '\n')) [ CD ]
Line_2 $$ private static StringBuilder buildConcatenationText(PsiPolyadicExpression polyadicExpression, StringBuilder out) -->Line_12 $$ if (element instanceof PsiWhiteSpace && element.getText().contains("\n") && (out.length() == 0 || out.charAt(out.length() - 1) != '\n')) [ FD ]
Line_2 $$ private static StringBuilder buildConcatenationText(PsiPolyadicExpression polyadicExpression, StringBuilder out) -->Line_16 $$ return out[ CD ]
Line_5 $$ final PsiExpression expression = (PsiExpression) element-->Line_6 $$ final Object value = ExpressionUtils.computeConstantExpression(expression)[ FD ]
Line_4 $$ if (element instanceof PsiExpression) -->Line_7 $$ if (value == null) [ CD ]
Line_3 $$ for (PsiElement element : polyadicExpression.getChildren()) -->Line_12 $$ if (element instanceof PsiWhiteSpace && element.getText().contains("\n") && (out.length() == 0 || out.charAt(out.length() - 1) != '\n')) [ FD ]
Line_3 $$ for (PsiElement element : polyadicExpression.getChildren()) -->Line_4 $$ if (element instanceof PsiExpression) [ FD ]
Line_7 $$ if (value == null) -->Line_8 $$ out.append('?')[ CD ]
Line_2 $$ private static StringBuilder buildConcatenationText(PsiPolyadicExpression polyadicExpression, StringBuilder out) -->Line_13 $$ out.append('\n')[ FD ]
Line_2 $$ private static StringBuilder buildConcatenationText(PsiPolyadicExpression polyadicExpression, StringBuilder out) -->Line_3 $$ for (PsiElement element : polyadicExpression.getChildren()) [ FD ]
Line_7 $$ if (value == null) -->Line_10 $$ out.append(value.toString())[ CD ]
Line_4 $$ if (element instanceof PsiExpression) -->Line_6 $$ final Object value = ExpressionUtils.computeConstantExpression(expression)[ CD ]
