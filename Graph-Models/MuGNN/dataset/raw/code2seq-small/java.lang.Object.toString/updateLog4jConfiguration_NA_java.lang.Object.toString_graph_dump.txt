Line_5 $$ InputStream is = null-->Line_8 $$ is = targetClass.getResourceAsStream("/log4j.properties")[ FD ]
Line_5 $$ InputStream is = null-->Line_18 $$ IOUtils.closeQuietly(is)[ FD ]
Line_2 $$ public static void updateLog4jConfiguration(Class<?> targetClass, String log4jPath) throws Exception -->Line_5 $$ InputStream is = null[ CD ]
Line_4 $$ FileInputStream fs = null-->Line_7 $$ fs = new FileInputStream(log4jPath)[ FD ]
Line_7 $$ fs = new FileInputStream(log4jPath)-->Line_19 $$ IOUtils.closeQuietly(fs)[ FD ]
Line_3 $$ Properties customProperties = new Properties()-->Line_9 $$ customProperties.load(fs)[ FD ]
Line_10 $$ Properties originalProperties = new Properties()-->Line_16 $$ PropertyConfigurator.configure(originalProperties)[ FD ]
Line_10 $$ Properties originalProperties = new Properties()-->Line_13 $$ originalProperties.setProperty(entry.getKey().toString(), entry.getValue().toString())[ FD ]
Line_8 $$ is = targetClass.getResourceAsStream("/log4j.properties")-->Line_18 $$ IOUtils.closeQuietly(is)[ FD ]
Line_4 $$ FileInputStream fs = null-->Line_9 $$ customProperties.load(fs)[ FD ]
Line_2 $$ public static void updateLog4jConfiguration(Class<?> targetClass, String log4jPath) throws Exception -->Line_8 $$ is = targetClass.getResourceAsStream("/log4j.properties")[ FD ]
Line_7 $$ fs = new FileInputStream(log4jPath)-->Line_9 $$ customProperties.load(fs)[ FD ]
Line_8 $$ is = targetClass.getResourceAsStream("/log4j.properties")-->Line_11 $$ originalProperties.load(is)[ FD ]
Line_10 $$ Properties originalProperties = new Properties()-->Line_11 $$ originalProperties.load(is)[ FD ]
Line_5 $$ InputStream is = null-->Line_11 $$ originalProperties.load(is)[ FD ]
Line_2 $$ public static void updateLog4jConfiguration(Class<?> targetClass, String log4jPath) throws Exception -->Line_3 $$ Properties customProperties = new Properties()[ CD ]
Line_2 $$ public static void updateLog4jConfiguration(Class<?> targetClass, String log4jPath) throws Exception -->Line_4 $$ FileInputStream fs = null[ CD ]
Line_12 $$ for (Entry<Object, Object> entry : customProperties.entrySet()) -->Line_13 $$ originalProperties.setProperty(entry.getKey().toString(), entry.getValue().toString())[ FD ]
Line_3 $$ Properties customProperties = new Properties()-->Line_12 $$ for (Entry<Object, Object> entry : customProperties.entrySet()) [ FD ]
Line_4 $$ FileInputStream fs = null-->Line_19 $$ IOUtils.closeQuietly(fs)[ FD ]
