Line_3 $$ AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext()-->Line_10 $$ Object l1i1 = ctx.getBean(L0ConfigEmpty.L1ConfigEmpty.class)[ FD ]
Line_14 $$ Object l2i2 = ctx.getBean(L0ConfigEmpty.L1ConfigEmpty.L2ConfigEmpty.class)-->Line_16 $$ assertNotEquals(l2i1.toString(), l2i2.toString())[ FD ]
Line_3 $$ AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext()-->Line_4 $$ ctx.register(L0ConfigEmpty.class)[ FD ]
Line_3 $$ AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext()-->Line_5 $$ ctx.refresh()[ FD ]
Line_2 $$ public void twoLevelsWithNoBeanMethods() -->Line_9 $$ assertTrue(l0i1 == l0i2)[ CD ]
Line_2 $$ public void twoLevelsWithNoBeanMethods() -->Line_6 $$ assertFalse(ctx.getBeanFactory().containsSingleton("l0ConfigEmpty"))[ CD ]
Line_2 $$ public void twoLevelsWithNoBeanMethods() -->Line_12 $$ assertTrue(l1i1 != l1i2)[ CD ]
Line_2 $$ public void twoLevelsWithNoBeanMethods() -->Line_11 $$ Object l1i2 = ctx.getBean(L0ConfigEmpty.L1ConfigEmpty.class)[ CD ]
Line_2 $$ public void twoLevelsWithNoBeanMethods() -->Line_5 $$ ctx.refresh()[ CD ]
Line_2 $$ public void twoLevelsWithNoBeanMethods() -->Line_4 $$ ctx.register(L0ConfigEmpty.class)[ CD ]
Line_3 $$ AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext()-->Line_7 $$ Object l0i1 = ctx.getBean(L0ConfigEmpty.class)[ FD ]
Line_2 $$ public void twoLevelsWithNoBeanMethods() -->Line_16 $$ assertNotEquals(l2i1.toString(), l2i2.toString())[ CD ]
Line_2 $$ public void twoLevelsWithNoBeanMethods() -->Line_7 $$ Object l0i1 = ctx.getBean(L0ConfigEmpty.class)[ CD ]
Line_2 $$ public void twoLevelsWithNoBeanMethods() -->Line_15 $$ assertTrue(l2i1 == l2i2)[ CD ]
Line_2 $$ public void twoLevelsWithNoBeanMethods() -->Line_8 $$ Object l0i2 = ctx.getBean(L0ConfigEmpty.class)[ CD ]
Line_3 $$ AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext()-->Line_6 $$ assertFalse(ctx.getBeanFactory().containsSingleton("l0ConfigEmpty"))[ FD ]
Line_3 $$ AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext()-->Line_13 $$ Object l2i1 = ctx.getBean(L0ConfigEmpty.L1ConfigEmpty.L2ConfigEmpty.class)[ FD ]
Line_2 $$ public void twoLevelsWithNoBeanMethods() -->Line_10 $$ Object l1i1 = ctx.getBean(L0ConfigEmpty.L1ConfigEmpty.class)[ CD ]
Line_2 $$ public void twoLevelsWithNoBeanMethods() -->Line_3 $$ AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext()[ CD ]
Line_2 $$ public void twoLevelsWithNoBeanMethods() -->Line_14 $$ Object l2i2 = ctx.getBean(L0ConfigEmpty.L1ConfigEmpty.L2ConfigEmpty.class)[ CD ]
Line_3 $$ AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext()-->Line_14 $$ Object l2i2 = ctx.getBean(L0ConfigEmpty.L1ConfigEmpty.L2ConfigEmpty.class)[ FD ]
Line_3 $$ AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext()-->Line_8 $$ Object l0i2 = ctx.getBean(L0ConfigEmpty.class)[ FD ]
Line_3 $$ AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext()-->Line_11 $$ Object l1i2 = ctx.getBean(L0ConfigEmpty.L1ConfigEmpty.class)[ FD ]
Line_13 $$ Object l2i1 = ctx.getBean(L0ConfigEmpty.L1ConfigEmpty.L2ConfigEmpty.class)-->Line_16 $$ assertNotEquals(l2i1.toString(), l2i2.toString())[ FD ]
Line_2 $$ public void twoLevelsWithNoBeanMethods() -->Line_13 $$ Object l2i1 = ctx.getBean(L0ConfigEmpty.L1ConfigEmpty.L2ConfigEmpty.class)[ CD ]
