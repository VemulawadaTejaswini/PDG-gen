Line_19 $$ if (requestClusterName == null) -->Line_20 $$ logger.warn("malformed external ping request, missing 'cluster_name' element within request, from [ CD ]
Line_32 $$ XContentBuilder builder = XContentFactory.contentBuilder(contentType)-->Line_50 $$ logger.trace("sending external ping response [ FD ]
Line_32 $$ XContentBuilder builder = XContentFactory.contentBuilder(contentType)-->Line_36 $$ builder.field("transport_address", localNode.address().toString())[ FD ]
Line_9 $$ if (multicastChannel == null) -->Line_10 $$ logger.debug("can't send ping response, no socket, from [ CD ]
Line_23 $$ if (!requestClusterName.equals(clusterName.value())) -->Line_25 $$ return[ CD ]
Line_9 $$ if (multicastChannel == null) -->Line_11 $$ return[ CD ]
Line_18 $$ final String requestClusterName = request.containsKey("cluster_name") ? request.get("cluster_name").toString() : request.containsKey("clusterName") ? request.get("clusterName").toString() : null-->Line_19 $$ if (requestClusterName == null) [ FD ]
Line_32 $$ XContentBuilder builder = XContentFactory.contentBuilder(contentType)-->Line_34 $$ builder.field("cluster_name", clusterName.value())[ FD ]
Line_23 $$ if (!requestClusterName.equals(clusterName.value())) -->Line_24 $$ logger.trace("got request for cluster_name [ CD ]
Line_14 $$ if (request == null) -->Line_15 $$ logger.warn("malformed external ping request, no 'request' element from [ CD ]
Line_13 $$ Map<String, Object> request = (Map<String, Object>) externalPingData.get("request")-->Line_18 $$ final String requestClusterName = request.containsKey("cluster_name") ? request.get("cluster_name").toString() : request.containsKey("clusterName") ? request.get("clusterName").toString() : null[ FD ]
Line_31 $$ DiscoveryNode localNode = contextProvider.nodes().localNode()-->Line_43 $$ for (ObjectObjectCursor<String, String> attr : localNode.attributes()) [ FD ]
Line_32 $$ XContentBuilder builder = XContentFactory.contentBuilder(contentType)-->Line_39 $$ builder.field(attr.getKey(), attr.getValue())[ FD ]
Line_32 $$ XContentBuilder builder = XContentFactory.contentBuilder(contentType)-->Line_48 $$ multicastChannel.send(builder.bytes())[ FD ]
Line_18 $$ final String requestClusterName = request.containsKey("cluster_name") ? request.get("cluster_name").toString() : request.containsKey("clusterName") ? request.get("clusterName").toString() : null-->Line_24 $$ logger.trace("got request for cluster_name [ FD ]
Line_32 $$ XContentBuilder builder = XContentFactory.contentBuilder(contentType)-->Line_44 $$ builder.field(attr.key, attr.value)[ FD ]
Line_32 $$ XContentBuilder builder = XContentFactory.contentBuilder(contentType)-->Line_42 $$ builder.startObject("attributes")[ FD ]
Line_32 $$ XContentBuilder builder = XContentFactory.contentBuilder(contentType)-->Line_47 $$ builder.endObject().endObject()[ FD ]
Line_27 $$ if (logger.isTraceEnabled()) -->Line_28 $$ logger.trace("got external ping request from [ CD ]
Line_31 $$ DiscoveryNode localNode = contextProvider.nodes().localNode()-->Line_36 $$ builder.field("transport_address", localNode.address().toString())[ FD ]
Line_18 $$ final String requestClusterName = request.containsKey("cluster_name") ? request.get("cluster_name").toString() : request.containsKey("clusterName") ? request.get("clusterName").toString() : null-->Line_23 $$ if (!requestClusterName.equals(clusterName.value())) [ FD ]
Line_32 $$ XContentBuilder builder = XContentFactory.contentBuilder(contentType)-->Line_35 $$ builder.startObject("version").field("number", version.number()).field("snapshot_build", version.snapshot).endObject()[ FD ]
Line_32 $$ XContentBuilder builder = XContentFactory.contentBuilder(contentType)-->Line_46 $$ builder.endObject()[ FD ]
Line_19 $$ if (requestClusterName == null) -->Line_21 $$ return[ CD ]
Line_38 $$ for (Map.Entry<String, String> attr : contextProvider.nodeService().attributes().entrySet()) -->Line_39 $$ builder.field(attr.getKey(), attr.getValue())[ FD ]
Line_49 $$ if (logger.isTraceEnabled()) -->Line_50 $$ logger.trace("sending external ping response [ CD ]
Line_4 $$ if (externalPingData.containsKey("response")) -->Line_7 $$ return[ CD ]
Line_13 $$ Map<String, Object> request = (Map<String, Object>) externalPingData.get("request")-->Line_14 $$ if (request == null) [ FD ]
Line_14 $$ if (request == null) -->Line_16 $$ return[ CD ]
Line_32 $$ XContentBuilder builder = XContentFactory.contentBuilder(contentType)-->Line_33 $$ builder.startObject().startObject("response")[ FD ]
