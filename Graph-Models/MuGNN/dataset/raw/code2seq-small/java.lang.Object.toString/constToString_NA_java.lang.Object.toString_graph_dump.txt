Line_32 $$ final double d = (Double) value-->Line_38 $$ return Double.toString(d)[ FD ]
Line_4 $$ if (value == null)-->Line_5 $$ return null[ CD ]
Line_40 $$ if (value instanceof Float) -->Line_41 $$ final float v = (Float) value[ CD ]
Line_42 $$ if (Float.isInfinite(v)) -->Line_44 $$ if (Float.isNaN(v)) [ CD ]
Line_53 $$ for (int i = 0, length = Array.getLength(value); i < length; i++) -->Line_56 $$ buffer.append(constToString(Array.get(value, i), type, anno))[ FD ]
Line_35 $$ if (Double.isNaN(d)) -->Line_36 $$ return DOUBLE_NAN[ CD ]
Line_44 $$ if (Float.isNaN(v)) -->Line_45 $$ return FLOAT_NAN[ CD ]
Line_53 $$ for (int i = 0, length = Array.getLength(value); i < length; i++) -->Line_56 $$ buffer.append(constToString(Array.get(value, i), type, anno))[ CD ]
Line_19 $$ if ("boolean".equals(type)) -->Line_20 $$ if (value.equals(0))[ CD ]
Line_51 $$ StringBuilder buffer = new StringBuilder()-->Line_55 $$ buffer.append(", ")[ FD ]
Line_53 $$ for (int i = 0, length = Array.getLength(value); i < length; i++) -->Line_54 $$ if (i > 0)[ CD ]
Line_15 $$ if (value instanceof Long) -->Line_16 $$ return value.toString() + "L"[ CD ]
Line_26 $$ char ch = (char) ((Integer) value).intValue()-->Line_27 $$ return "'" + StringUtil.escapeCharCharacters(String.valueOf(ch)) + "'"[ FD ]
Line_41 $$ final float v = (Float) value-->Line_44 $$ if (Float.isNaN(v)) [ FD ]
Line_31 $$ if (value instanceof Double) -->Line_33 $$ if (Double.isInfinite(d)) [ CD ]
Line_20 $$ if (value.equals(0))-->Line_21 $$ return "false"[ CD ]
Line_32 $$ final double d = (Double) value-->Line_33 $$ if (Double.isInfinite(d)) [ FD ]
Line_53 $$ for (int i = 0, length = Array.getLength(value); i < length; i++) -->Line_54 $$ if (i > 0)[ FD ]
Line_50 $$ if (value.getClass().isArray()) -->Line_52 $$ buffer.append('[ CD ]
Line_51 $$ StringBuilder buffer = new StringBuilder()-->Line_59 $$ return buffer.toString()[ FD ]
Line_32 $$ final double d = (Double) value-->Line_35 $$ if (Double.isNaN(d)) [ FD ]
Line_25 $$ if ("char".equals(type)) -->Line_27 $$ return "'" + StringUtil.escapeCharCharacters(String.valueOf(ch)) + "'"[ CD ]
Line_42 $$ if (Float.isInfinite(v)) -->Line_43 $$ return v > 0 ? FLOAT_POSITIVE_INF : FLOAT_NEGATIVE_INF[ CD ]
Line_31 $$ if (value instanceof Double) -->Line_38 $$ return Double.toString(d)[ CD ]
Line_41 $$ final float v = (Float) value-->Line_42 $$ if (Float.isInfinite(v)) [ FD ]
Line_41 $$ final float v = (Float) value-->Line_47 $$ return Float.toString(v) + "f"[ FD ]
Line_12 $$ if (value instanceof Character) -->Line_13 $$ return "'" + StringUtil.escapeCharCharacters(value.toString()) + "'"[ CD ]
Line_18 $$ if (value instanceof Integer) -->Line_19 $$ if ("boolean".equals(type)) [ CD ]
Line_33 $$ if (Double.isInfinite(d)) -->Line_35 $$ if (Double.isNaN(d)) [ CD ]
Line_40 $$ if (value instanceof Float) -->Line_42 $$ if (Float.isInfinite(v)) [ CD ]
Line_33 $$ if (Double.isInfinite(d)) -->Line_34 $$ return d > 0 ? DOUBLE_POSITIVE_INF : DOUBLE_NEGATIVE_INF[ CD ]
Line_19 $$ if ("boolean".equals(type)) -->Line_22 $$ if (value.equals(1))[ CD ]
Line_54 $$ if (i > 0)-->Line_55 $$ buffer.append(", ")[ CD ]
Line_18 $$ if (value instanceof Integer) -->Line_25 $$ if ("char".equals(type)) [ CD ]
Line_50 $$ if (value.getClass().isArray()) -->Line_59 $$ return buffer.toString()[ CD ]
Line_50 $$ if (value.getClass().isArray()) -->Line_51 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_6 $$ if (value instanceof String) -->Line_7 $$ return "\"" + StringUtil.escapeStringCharacters((String) value) + "\""[ CD ]
Line_9 $$ if (value instanceof Boolean || value instanceof Short || value instanceof Byte) -->Line_10 $$ return value.toString()[ CD ]
Line_22 $$ if (value.equals(1))-->Line_23 $$ return "true"[ CD ]
Line_25 $$ if ("char".equals(type)) -->Line_26 $$ char ch = (char) ((Integer) value).intValue()[ CD ]
Line_51 $$ StringBuilder buffer = new StringBuilder()-->Line_52 $$ buffer.append('[ FD ]
Line_51 $$ StringBuilder buffer = new StringBuilder()-->Line_56 $$ buffer.append(constToString(Array.get(value, i), type, anno))[ FD ]
Line_50 $$ if (value.getClass().isArray()) -->Line_58 $$ buffer.append('}')[ CD ]
Line_61 $$ if (anno && value instanceof Type) -->Line_62 $$ return getTypeText((Type) value) + ".class"[ CD ]
Line_51 $$ StringBuilder buffer = new StringBuilder()-->Line_58 $$ buffer.append('}')[ FD ]
Line_50 $$ if (value.getClass().isArray()) -->Line_53 $$ for (int i = 0, length = Array.getLength(value); i < length; i++) [ CD ]
Line_18 $$ if (value instanceof Integer) -->Line_29 $$ return value.toString()[ CD ]
Line_44 $$ if (Float.isNaN(v)) -->Line_47 $$ return Float.toString(v) + "f"[ CD ]
Line_31 $$ if (value instanceof Double) -->Line_32 $$ final double d = (Double) value[ CD ]
