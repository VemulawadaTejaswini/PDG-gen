Line_2 $$ public void testRefSubelementsBuildCollectionWithPrototypes() throws Exception -->Line_9 $$ assertTrue("Jen not same instance", friends[0] != jen)[ CD ]
Line_3 $$ TestBean jen = (TestBean) this.beanFactory.getBean("pJenny")-->Line_8 $$ assertTrue("First friend must be jen, not " + friends[0], friends[0].toString().equals(jen.toString()))[ FD ]
Line_3 $$ TestBean jen = (TestBean) this.beanFactory.getBean("pJenny")-->Line_16 $$ assertTrue("First friend must be jen, not " + friends2[0], friends2[0].toString().equals(jen.toString()))[ FD ]
Line_2 $$ public void testRefSubelementsBuildCollectionWithPrototypes() throws Exception -->Line_19 $$ assertTrue("Dave not same instance", friends2[1] != friends[1])[ CD ]
Line_4 $$ TestBean dave = (TestBean) this.beanFactory.getBean("pDavid")-->Line_18 $$ assertTrue(friends2[1].toString().equals(dave.toString()))[ FD ]
Line_2 $$ public void testRefSubelementsBuildCollectionWithPrototypes() throws Exception -->Line_4 $$ TestBean dave = (TestBean) this.beanFactory.getBean("pDavid")[ CD ]
Line_2 $$ public void testRefSubelementsBuildCollectionWithPrototypes() throws Exception -->Line_6 $$ Object[] friends = rod.getFriends().toArray()[ CD ]
Line_2 $$ public void testRefSubelementsBuildCollectionWithPrototypes() throws Exception -->Line_18 $$ assertTrue(friends2[1].toString().equals(dave.toString()))[ CD ]
Line_2 $$ public void testRefSubelementsBuildCollectionWithPrototypes() throws Exception -->Line_10 $$ assertTrue(friends[1].toString().equals(dave.toString()))[ CD ]
Line_4 $$ TestBean dave = (TestBean) this.beanFactory.getBean("pDavid")-->Line_10 $$ assertTrue(friends[1].toString().equals(dave.toString()))[ FD ]
Line_2 $$ public void testRefSubelementsBuildCollectionWithPrototypes() throws Exception -->Line_14 $$ Object[] friends2 = rod2.getFriends().toArray()[ CD ]
Line_2 $$ public void testRefSubelementsBuildCollectionWithPrototypes() throws Exception -->Line_15 $$ assertTrue(friends2.length == 2)[ CD ]
Line_2 $$ public void testRefSubelementsBuildCollectionWithPrototypes() throws Exception -->Line_5 $$ TestBean rod = (TestBean) this.beanFactory.getBean("pRod")[ CD ]
Line_2 $$ public void testRefSubelementsBuildCollectionWithPrototypes() throws Exception -->Line_16 $$ assertTrue("First friend must be jen, not " + friends2[0], friends2[0].toString().equals(jen.toString()))[ CD ]
Line_4 $$ TestBean dave = (TestBean) this.beanFactory.getBean("pDavid")-->Line_12 $$ assertEquals("Jen", dave.getSpouse().getName())[ FD ]
Line_2 $$ public void testRefSubelementsBuildCollectionWithPrototypes() throws Exception -->Line_13 $$ TestBean rod2 = (TestBean) this.beanFactory.getBean("pRod")[ CD ]
Line_2 $$ public void testRefSubelementsBuildCollectionWithPrototypes() throws Exception -->Line_12 $$ assertEquals("Jen", dave.getSpouse().getName())[ CD ]
Line_2 $$ public void testRefSubelementsBuildCollectionWithPrototypes() throws Exception -->Line_11 $$ assertTrue("Dave not same instance", friends[1] != dave)[ CD ]
Line_2 $$ public void testRefSubelementsBuildCollectionWithPrototypes() throws Exception -->Line_17 $$ assertTrue("Jen not same instance", friends2[0] != friends[0])[ CD ]
Line_5 $$ TestBean rod = (TestBean) this.beanFactory.getBean("pRod")-->Line_6 $$ Object[] friends = rod.getFriends().toArray()[ FD ]
Line_2 $$ public void testRefSubelementsBuildCollectionWithPrototypes() throws Exception -->Line_7 $$ assertTrue(friends.length == 2)[ CD ]
Line_2 $$ public void testRefSubelementsBuildCollectionWithPrototypes() throws Exception -->Line_3 $$ TestBean jen = (TestBean) this.beanFactory.getBean("pJenny")[ CD ]
Line_2 $$ public void testRefSubelementsBuildCollectionWithPrototypes() throws Exception -->Line_8 $$ assertTrue("First friend must be jen, not " + friends[0], friends[0].toString().equals(jen.toString()))[ CD ]
Line_13 $$ TestBean rod2 = (TestBean) this.beanFactory.getBean("pRod")-->Line_14 $$ Object[] friends2 = rod2.getFriends().toArray()[ FD ]
