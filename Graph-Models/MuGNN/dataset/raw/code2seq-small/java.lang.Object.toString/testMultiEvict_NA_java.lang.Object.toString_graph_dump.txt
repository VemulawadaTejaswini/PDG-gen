Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_17 $$ Object r3 = service.multiCache(o1)[ FD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_12 $$ assertSame(r1, secondary.get(o1).get())[ CD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_4 $$ Object o2 = o1.toString() + "A"[ CD ]
Line_18 $$ Object r4 = service.multiCache(o1)-->Line_20 $$ assertSame(r3, r4)[ FD ]
Line_3 $$ Object o1 = new Object()-->Line_4 $$ Object o2 = o1.toString() + "A"[ FD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_17 $$ Object r3 = service.multiCache(o1)[ CD ]
Line_7 $$ Cache primary = cm.getCache("primary")-->Line_21 $$ assertSame(r3, primary.get(o1).get())[ FD ]
Line_6 $$ Object r2 = service.multiCache(o1)-->Line_10 $$ assertSame(r1, r2)[ FD ]
Line_8 $$ Cache secondary = cm.getCache("secondary")-->Line_12 $$ assertSame(r1, secondary.get(o1).get())[ FD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_5 $$ Object r1 = service.multiCache(o1)[ FD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_15 $$ assertNull(secondary.get(o1))[ CD ]
Line_5 $$ Object r1 = service.multiCache(o1)-->Line_12 $$ assertSame(r1, secondary.get(o1).get())[ FD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_18 $$ Object r4 = service.multiCache(o1)[ FD ]
Line_8 $$ Cache secondary = cm.getCache("secondary")-->Line_22 $$ assertSame(r4, secondary.get(o1).get())[ FD ]
Line_3 $$ Object o1 = new Object()-->Line_15 $$ assertNull(secondary.get(o1))[ FD ]
Line_17 $$ Object r3 = service.multiCache(o1)-->Line_19 $$ assertNotSame(r1, r3)[ FD ]
Line_3 $$ Object o1 = new Object()-->Line_11 $$ assertSame(r1, primary.get(o1).get())[ FD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_21 $$ assertSame(r3, primary.get(o1).get())[ CD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_14 $$ assertNull(primary.get(o1))[ CD ]
Line_17 $$ Object r3 = service.multiCache(o1)-->Line_21 $$ assertSame(r3, primary.get(o1).get())[ FD ]
Line_18 $$ Object r4 = service.multiCache(o1)-->Line_22 $$ assertSame(r4, secondary.get(o1).get())[ FD ]
Line_3 $$ Object o1 = new Object()-->Line_17 $$ Object r3 = service.multiCache(o1)[ FD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_6 $$ Object r2 = service.multiCache(o1)[ FD ]
Line_7 $$ Cache primary = cm.getCache("primary")-->Line_9 $$ primary.put(o2, o2)[ FD ]
Line_3 $$ Object o1 = new Object()-->Line_5 $$ Object r1 = service.multiCache(o1)[ FD ]
Line_3 $$ Object o1 = new Object()-->Line_12 $$ assertSame(r1, secondary.get(o1).get())[ FD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_19 $$ assertNotSame(r1, r3)[ CD ]
Line_3 $$ Object o1 = new Object()-->Line_21 $$ assertSame(r3, primary.get(o1).get())[ FD ]
Line_7 $$ Cache primary = cm.getCache("primary")-->Line_14 $$ assertNull(primary.get(o1))[ FD ]
Line_17 $$ Object r3 = service.multiCache(o1)-->Line_20 $$ assertSame(r3, r4)[ FD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_18 $$ Object r4 = service.multiCache(o1)[ CD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_13 $$ service.multiEvict(o1)[ FD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_16 $$ assertNull(primary.get(o2))[ CD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_10 $$ assertSame(r1, r2)[ CD ]
Line_4 $$ Object o2 = o1.toString() + "A"-->Line_16 $$ assertNull(primary.get(o2))[ FD ]
Line_3 $$ Object o1 = new Object()-->Line_22 $$ assertSame(r4, secondary.get(o1).get())[ FD ]
Line_8 $$ Cache secondary = cm.getCache("secondary")-->Line_15 $$ assertNull(secondary.get(o1))[ FD ]
Line_3 $$ Object o1 = new Object()-->Line_18 $$ Object r4 = service.multiCache(o1)[ FD ]
Line_5 $$ Object r1 = service.multiCache(o1)-->Line_19 $$ assertNotSame(r1, r3)[ FD ]
Line_5 $$ Object r1 = service.multiCache(o1)-->Line_10 $$ assertSame(r1, r2)[ FD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_8 $$ Cache secondary = cm.getCache("secondary")[ CD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_5 $$ Object r1 = service.multiCache(o1)[ CD ]
Line_7 $$ Cache primary = cm.getCache("primary")-->Line_16 $$ assertNull(primary.get(o2))[ FD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_20 $$ assertSame(r3, r4)[ CD ]
Line_3 $$ Object o1 = new Object()-->Line_14 $$ assertNull(primary.get(o1))[ FD ]
Line_3 $$ Object o1 = new Object()-->Line_6 $$ Object r2 = service.multiCache(o1)[ FD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_7 $$ Cache primary = cm.getCache("primary")[ CD ]
Line_5 $$ Object r1 = service.multiCache(o1)-->Line_11 $$ assertSame(r1, primary.get(o1).get())[ FD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_11 $$ assertSame(r1, primary.get(o1).get())[ CD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_13 $$ service.multiEvict(o1)[ CD ]
Line_3 $$ Object o1 = new Object()-->Line_13 $$ service.multiEvict(o1)[ FD ]
Line_7 $$ Cache primary = cm.getCache("primary")-->Line_11 $$ assertSame(r1, primary.get(o1).get())[ FD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_6 $$ Object r2 = service.multiCache(o1)[ CD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_22 $$ assertSame(r4, secondary.get(o1).get())[ CD ]
Line_4 $$ Object o2 = o1.toString() + "A"-->Line_9 $$ primary.put(o2, o2)[ FD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_3 $$ Object o1 = new Object()[ CD ]
Line_2 $$ public void testMultiEvict(CacheableService<?> service) -->Line_9 $$ primary.put(o2, o2)[ CD ]
