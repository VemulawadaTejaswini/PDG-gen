Line_13 $$ Object expected2 = variation[3]-->Line_15 $$ assertRows(execute("SELECT key, " + col + ", " + fName + '(' + col + ") FROM %s"), row(1, expected1, expected2))[ FD ]
Line_10 $$ Object type = variation[0]-->Line_14 $$ String fName = createFunction(KEYSPACE, type.toString(), "CREATE OR REPLACE FUNCTION %s(val " + type + ") " + "RETURNS NULL ON NULL INPUT " + "RETURNS " + type + ' ' + "LANGUAGE javascript " + "AS 'val+1;';")[ FD ]
Line_10 $$ Object type = variation[0]-->Line_23 $$ String fName = createFunction(KEYSPACE, type.toString(), "CREATE OR REPLACE FUNCTION %s(val " + type + ") " + "RETURNS NULL ON NULL INPUT " + "RETURNS " + type + ' ' + "LANGUAGE javascript " + "AS 'val;';")[ FD ]
Line_13 $$ Object expected2 = variation[3]-->Line_24 $$ assertRows(execute("SELECT key, " + col + ", " + fName + '(' + col + ") FROM %s"), row(1, expected1, expected2))[ FD ]
Line_12 $$ Object expected1 = variation[2]-->Line_24 $$ assertRows(execute("SELECT key, " + col + ", " + fName + '(' + col + ") FROM %s"), row(1, expected1, expected2))[ FD ]
Line_5 $$ UUID tuuid = UUIDGen.getTimeUUID()-->Line_7 $$ execute("INSERT INTO %s (key, tival, sival, ival, lval, fval, dval, vval, ddval, timval, dtval, tsval, uval, tuval) VALUES " + "(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)", 1, (byte) 1, (short) 1, 1, 1L, 1f, 1d, BigInteger.valueOf(1L), BigDecimal.valueOf(1d), 1L, Integer.MAX_VALUE, new Date(1), ruuid, tuuid)[ FD ]
Line_4 $$ UUID ruuid = UUID.randomUUID()-->Line_7 $$ execute("INSERT INTO %s (key, tival, sival, ival, lval, fval, dval, vval, ddval, timval, dtval, tsval, uval, tuval) VALUES " + "(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)", 1, (byte) 1, (short) 1, 1, 1L, 1f, 1d, BigInteger.valueOf(1L), BigDecimal.valueOf(1d), 1L, Integer.MAX_VALUE, new Date(1), ruuid, tuuid)[ FD ]
Line_8 $$ Object[][] variations = -->Line_17 $$ variations = new Object[][] [ FD ]
Line_12 $$ Object expected1 = variation[2]-->Line_15 $$ assertRows(execute("SELECT key, " + col + ", " + fName + '(' + col + ") FROM %s"), row(1, expected1, expected2))[ FD ]
