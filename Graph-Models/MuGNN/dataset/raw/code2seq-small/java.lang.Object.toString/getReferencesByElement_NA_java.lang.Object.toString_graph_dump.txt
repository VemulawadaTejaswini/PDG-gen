Line_35 $$ if (value instanceof String) -->Line_36 $$ String text = (String) value[ CD ]
Line_8 $$ if (element instanceof PsiLiteralExpression) -->Line_11 $$ final Map<String, Object> annotationParams = new HashMap<String, Object>()[ CD ]
Line_4 $$ Object value = null-->Line_10 $$ value = literalExpression.getValue()[ FD ]
Line_11 $$ final Map<String, Object> annotationParams = new HashMap<String, Object>()-->Line_12 $$ annotationParams.put(AnnotationUtil.PROPERTY_KEY_RESOURCE_BUNDLE_PARAMETER, null)[ FD ]
Line_8 $$ if (element instanceof PsiLiteralExpression) -->Line_10 $$ value = literalExpression.getValue()[ CD ]
Line_8 $$ if (element instanceof PsiLiteralExpression) -->Line_22 $$ if (element instanceof XmlAttributeValue && isNonDynamicAttribute(element)) [ CD ]
Line_16 $$ if (resourceBundleName instanceof PsiExpression) -->Line_17 $$ PsiExpression expr = (PsiExpression) resourceBundleName[ CD ]
Line_22 $$ if (element instanceof XmlAttributeValue && isNonDynamicAttribute(element)) -->Line_26 $$ value = ((XmlAttributeValue) element).getValue()[ CD ]
Line_30 $$ if ("message".equals(parent.getLocalName()) && Arrays.binarySearch(XmlUtil.JSTL_FORMAT_URIS, parent.getNamespace()) >= 0) -->Line_31 $$ propertyRefWithPrefix = true[ CD ]
Line_29 $$ final XmlTag parent = attribute.getParent()-->Line_30 $$ if ("message".equals(parent.getLocalName()) && Arrays.binarySearch(XmlUtil.JSTL_FORMAT_URIS, parent.getNamespace()) >= 0) [ FD ]
Line_15 $$ final Object resourceBundleName = annotationParams.get(AnnotationUtil.PROPERTY_KEY_RESOURCE_BUNDLE_PARAMETER)-->Line_16 $$ if (resourceBundleName instanceof PsiExpression) [ FD ]
Line_4 $$ Object value = null-->Line_26 $$ value = ((XmlAttributeValue) element).getValue()[ FD ]
Line_13 $$ if (JavaI18nUtil.mustBePropertyKey(literalExpression, annotationParams)) -->Line_16 $$ if (resourceBundleName instanceof PsiExpression) [ CD ]
Line_16 $$ if (resourceBundleName instanceof PsiExpression) -->Line_18 $$ final Object bundleValue = JavaPsiFacade.getInstance(expr.getProject()).getConstantEvaluationHelper().computeConstantExpression(expr)[ CD ]
Line_9 $$ PsiLiteralExpression literalExpression = (PsiLiteralExpression) element-->Line_13 $$ if (JavaI18nUtil.mustBePropertyKey(literalExpression, annotationParams)) [ FD ]
Line_22 $$ if (element instanceof XmlAttributeValue && isNonDynamicAttribute(element)) -->Line_23 $$ if (element.getTextLength() < 2) [ CD ]
Line_28 $$ if ("key".equals(attribute.getName())) -->Line_30 $$ if ("message".equals(parent.getLocalName()) && Arrays.binarySearch(XmlUtil.JSTL_FORMAT_URIS, parent.getNamespace()) >= 0) [ CD ]
Line_22 $$ if (element instanceof XmlAttributeValue && isNonDynamicAttribute(element)) -->Line_27 $$ final XmlAttribute attribute = (XmlAttribute) element.getParent()[ CD ]
Line_28 $$ if ("key".equals(attribute.getName())) -->Line_29 $$ final XmlTag parent = attribute.getParent()[ CD ]
Line_10 $$ value = literalExpression.getValue()-->Line_26 $$ value = ((XmlAttributeValue) element).getValue()[ FD ]
Line_11 $$ final Map<String, Object> annotationParams = new HashMap<String, Object>()-->Line_13 $$ if (JavaI18nUtil.mustBePropertyKey(literalExpression, annotationParams)) [ FD ]
Line_5 $$ String bundleName = null-->Line_19 $$ bundleName = bundleValue == null ? null : bundleValue.toString()[ FD ]
Line_11 $$ final Map<String, Object> annotationParams = new HashMap<String, Object>()-->Line_15 $$ final Object resourceBundleName = annotationParams.get(AnnotationUtil.PROPERTY_KEY_RESOURCE_BUNDLE_PARAMETER)[ FD ]
Line_16 $$ if (resourceBundleName instanceof PsiExpression) -->Line_19 $$ bundleName = bundleValue == null ? null : bundleValue.toString()[ CD ]
Line_8 $$ if (element instanceof PsiLiteralExpression) -->Line_9 $$ PsiLiteralExpression literalExpression = (PsiLiteralExpression) element[ CD ]
Line_27 $$ final XmlAttribute attribute = (XmlAttribute) element.getParent()-->Line_29 $$ final XmlTag parent = attribute.getParent()[ FD ]
Line_23 $$ if (element.getTextLength() < 2) -->Line_24 $$ return PsiReference.EMPTY_ARRAY[ CD ]
Line_17 $$ PsiExpression expr = (PsiExpression) resourceBundleName-->Line_18 $$ final Object bundleValue = JavaPsiFacade.getInstance(expr.getProject()).getConstantEvaluationHelper().computeConstantExpression(expr)[ FD ]
Line_13 $$ if (JavaI18nUtil.mustBePropertyKey(literalExpression, annotationParams)) -->Line_14 $$ soft = false[ CD ]
Line_27 $$ final XmlAttribute attribute = (XmlAttribute) element.getParent()-->Line_28 $$ if ("key".equals(attribute.getName())) [ FD ]
Line_35 $$ if (value instanceof String) -->Line_38 $$ return new PsiReference[] [ CD ]
Line_6 $$ boolean propertyRefWithPrefix = false-->Line_31 $$ propertyRefWithPrefix = true[ FD ]
Line_22 $$ if (element instanceof XmlAttributeValue && isNonDynamicAttribute(element)) -->Line_28 $$ if ("key".equals(attribute.getName())) [ CD ]
Line_9 $$ PsiLiteralExpression literalExpression = (PsiLiteralExpression) element-->Line_10 $$ value = literalExpression.getValue()[ FD ]
Line_8 $$ if (element instanceof PsiLiteralExpression) -->Line_12 $$ annotationParams.put(AnnotationUtil.PROPERTY_KEY_RESOURCE_BUNDLE_PARAMETER, null)[ CD ]
Line_10 $$ value = literalExpression.getValue()-->Line_35 $$ if (value instanceof String) [ FD ]
Line_35 $$ if (value instanceof String) -->Line_37 $$ PsiReference reference = propertyRefWithPrefix ? new PrefixBasedPropertyReference(text, element, null, soft) : new PropertyReference(text, element, bundleName, soft)[ CD ]
Line_26 $$ value = ((XmlAttributeValue) element).getValue()-->Line_35 $$ if (value instanceof String) [ FD ]
Line_18 $$ final Object bundleValue = JavaPsiFacade.getInstance(expr.getProject()).getConstantEvaluationHelper().computeConstantExpression(expr)-->Line_19 $$ bundleName = bundleValue == null ? null : bundleValue.toString()[ FD ]
Line_7 $$ boolean soft = myDefaultSoft-->Line_14 $$ soft = false[ FD ]
Line_13 $$ if (JavaI18nUtil.mustBePropertyKey(literalExpression, annotationParams)) -->Line_15 $$ final Object resourceBundleName = annotationParams.get(AnnotationUtil.PROPERTY_KEY_RESOURCE_BUNDLE_PARAMETER)[ CD ]
Line_8 $$ if (element instanceof PsiLiteralExpression) -->Line_13 $$ if (JavaI18nUtil.mustBePropertyKey(literalExpression, annotationParams)) [ CD ]
Line_4 $$ Object value = null-->Line_35 $$ if (value instanceof String) [ FD ]
