Line_12 $$ if (JavaI18nUtil.mustBePropertyKey(literalExpression, annotationParams)) -->Line_13 $$ soft = false[ CD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull final ProcessingContext context) -->Line_5 $$ boolean propertyRefWithPrefix = false[ CD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull final ProcessingContext context) -->Line_3 $$ Object value = null[ CD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull final ProcessingContext context) -->Line_26 $$ final XmlAttribute attribute = (XmlAttribute) element.getParent()[ FD ]
Line_4 $$ String bundleName = null-->Line_18 $$ bundleName = bundleValue == null ? null : bundleValue.toString()[ FD ]
Line_27 $$ if ("key".equals(attribute.getName())) -->Line_29 $$ if ("message".equals(parent.getLocalName()) && Arrays.binarySearch(XmlUtil.JSTL_FORMAT_URIS, parent.getNamespace()) >= 0) [ CD ]
Line_8 $$ PsiLiteralExpression literalExpression = (PsiLiteralExpression) element-->Line_12 $$ if (JavaI18nUtil.mustBePropertyKey(literalExpression, annotationParams)) [ FD ]
Line_34 $$ if (value instanceof String) -->Line_35 $$ String text = (String) value[ CD ]
Line_15 $$ if (resourceBundleName instanceof PsiExpression) -->Line_16 $$ PsiExpression expr = (PsiExpression) resourceBundleName[ CD ]
Line_3 $$ Object value = null-->Line_34 $$ if (value instanceof String) [ FD ]
Line_21 $$ if (element instanceof XmlAttributeValue && isNonDynamicAttribute(element)) -->Line_26 $$ final XmlAttribute attribute = (XmlAttribute) element.getParent()[ CD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull final ProcessingContext context) -->Line_22 $$ if (element.getTextLength() < 2) [ FD ]
Line_26 $$ final XmlAttribute attribute = (XmlAttribute) element.getParent()-->Line_27 $$ if ("key".equals(attribute.getName())) [ FD ]
Line_28 $$ final XmlTag parent = attribute.getParent()-->Line_29 $$ if ("message".equals(parent.getLocalName()) && Arrays.binarySearch(XmlUtil.JSTL_FORMAT_URIS, parent.getNamespace()) >= 0) [ FD ]
Line_25 $$ value = ((XmlAttributeValue) element).getValue()-->Line_34 $$ if (value instanceof String) [ FD ]
Line_10 $$ final Map<String, Object> annotationParams = new HashMap<String, Object>()-->Line_14 $$ final Object resourceBundleName = annotationParams.get(AnnotationUtil.PROPERTY_KEY_RESOURCE_BUNDLE_PARAMETER)[ FD ]
Line_15 $$ if (resourceBundleName instanceof PsiExpression) -->Line_17 $$ final Object bundleValue = JavaPsiFacade.getInstance(expr.getProject()).getConstantEvaluationHelper().computeConstantExpression(expr)[ CD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull final ProcessingContext context) -->Line_7 $$ if (element instanceof PsiLiteralExpression) [ FD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull final ProcessingContext context) -->Line_21 $$ if (element instanceof XmlAttributeValue && isNonDynamicAttribute(element)) [ FD ]
Line_34 $$ if (value instanceof String) -->Line_36 $$ PsiReference reference = propertyRefWithPrefix ? new PrefixBasedPropertyReference(text, element, null, soft) : new PropertyReference(text, element, bundleName, soft)[ CD ]
Line_22 $$ if (element.getTextLength() < 2) -->Line_23 $$ return PsiReference.EMPTY_ARRAY[ CD ]
Line_27 $$ if ("key".equals(attribute.getName())) -->Line_28 $$ final XmlTag parent = attribute.getParent()[ CD ]
Line_9 $$ value = literalExpression.getValue()-->Line_25 $$ value = ((XmlAttributeValue) element).getValue()[ FD ]
Line_26 $$ final XmlAttribute attribute = (XmlAttribute) element.getParent()-->Line_28 $$ final XmlTag parent = attribute.getParent()[ FD ]
Line_5 $$ boolean propertyRefWithPrefix = false-->Line_30 $$ propertyRefWithPrefix = true[ FD ]
Line_7 $$ if (element instanceof PsiLiteralExpression) -->Line_10 $$ final Map<String, Object> annotationParams = new HashMap<String, Object>()[ CD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull final ProcessingContext context) -->Line_4 $$ String bundleName = null[ CD ]
Line_7 $$ if (element instanceof PsiLiteralExpression) -->Line_9 $$ value = literalExpression.getValue()[ CD ]
Line_7 $$ if (element instanceof PsiLiteralExpression) -->Line_12 $$ if (JavaI18nUtil.mustBePropertyKey(literalExpression, annotationParams)) [ CD ]
Line_7 $$ if (element instanceof PsiLiteralExpression) -->Line_21 $$ if (element instanceof XmlAttributeValue && isNonDynamicAttribute(element)) [ CD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull final ProcessingContext context) -->Line_6 $$ boolean soft = myDefaultSoft[ CD ]
Line_21 $$ if (element instanceof XmlAttributeValue && isNonDynamicAttribute(element)) -->Line_22 $$ if (element.getTextLength() < 2) [ CD ]
Line_6 $$ boolean soft = myDefaultSoft-->Line_13 $$ soft = false[ FD ]
Line_10 $$ final Map<String, Object> annotationParams = new HashMap<String, Object>()-->Line_11 $$ annotationParams.put(AnnotationUtil.PROPERTY_KEY_RESOURCE_BUNDLE_PARAMETER, null)[ FD ]
Line_12 $$ if (JavaI18nUtil.mustBePropertyKey(literalExpression, annotationParams)) -->Line_14 $$ final Object resourceBundleName = annotationParams.get(AnnotationUtil.PROPERTY_KEY_RESOURCE_BUNDLE_PARAMETER)[ CD ]
Line_8 $$ PsiLiteralExpression literalExpression = (PsiLiteralExpression) element-->Line_9 $$ value = literalExpression.getValue()[ FD ]
Line_17 $$ final Object bundleValue = JavaPsiFacade.getInstance(expr.getProject()).getConstantEvaluationHelper().computeConstantExpression(expr)-->Line_18 $$ bundleName = bundleValue == null ? null : bundleValue.toString()[ FD ]
Line_12 $$ if (JavaI18nUtil.mustBePropertyKey(literalExpression, annotationParams)) -->Line_15 $$ if (resourceBundleName instanceof PsiExpression) [ CD ]
Line_9 $$ value = literalExpression.getValue()-->Line_34 $$ if (value instanceof String) [ FD ]
Line_34 $$ if (value instanceof String) -->Line_37 $$ return new PsiReference[] [ CD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull final ProcessingContext context) -->Line_7 $$ if (element instanceof PsiLiteralExpression) [ CD ]
Line_16 $$ PsiExpression expr = (PsiExpression) resourceBundleName-->Line_17 $$ final Object bundleValue = JavaPsiFacade.getInstance(expr.getProject()).getConstantEvaluationHelper().computeConstantExpression(expr)[ FD ]
Line_3 $$ Object value = null-->Line_25 $$ value = ((XmlAttributeValue) element).getValue()[ FD ]
Line_21 $$ if (element instanceof XmlAttributeValue && isNonDynamicAttribute(element)) -->Line_27 $$ if ("key".equals(attribute.getName())) [ CD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull final ProcessingContext context) -->Line_34 $$ if (value instanceof String) [ CD ]
Line_7 $$ if (element instanceof PsiLiteralExpression) -->Line_8 $$ PsiLiteralExpression literalExpression = (PsiLiteralExpression) element[ CD ]
Line_7 $$ if (element instanceof PsiLiteralExpression) -->Line_11 $$ annotationParams.put(AnnotationUtil.PROPERTY_KEY_RESOURCE_BUNDLE_PARAMETER, null)[ CD ]
Line_29 $$ if ("message".equals(parent.getLocalName()) && Arrays.binarySearch(XmlUtil.JSTL_FORMAT_URIS, parent.getNamespace()) >= 0) -->Line_30 $$ propertyRefWithPrefix = true[ CD ]
Line_21 $$ if (element instanceof XmlAttributeValue && isNonDynamicAttribute(element)) -->Line_25 $$ value = ((XmlAttributeValue) element).getValue()[ CD ]
Line_10 $$ final Map<String, Object> annotationParams = new HashMap<String, Object>()-->Line_12 $$ if (JavaI18nUtil.mustBePropertyKey(literalExpression, annotationParams)) [ FD ]
Line_14 $$ final Object resourceBundleName = annotationParams.get(AnnotationUtil.PROPERTY_KEY_RESOURCE_BUNDLE_PARAMETER)-->Line_15 $$ if (resourceBundleName instanceof PsiExpression) [ FD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull final ProcessingContext context) -->Line_39 $$ return PsiReference.EMPTY_ARRAY[ CD ]
Line_3 $$ Object value = null-->Line_9 $$ value = literalExpression.getValue()[ FD ]
Line_15 $$ if (resourceBundleName instanceof PsiExpression) -->Line_18 $$ bundleName = bundleValue == null ? null : bundleValue.toString()[ CD ]
