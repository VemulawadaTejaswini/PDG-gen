Line_7 $$ map = parser.map()-->Line_54 $$ map = parser.map()[ FD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject().field("test", "value").endObject()-->Line_53 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) [ FD ]
Line_12 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1").startObject("path2").field("test", "value").endObject().endObject().endObject()-->Line_48 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) [ FD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject().field("test", "value").endObject()-->Line_52 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1.xxx").startObject("path2.yyy").field("test", "value").endObject().endObject().endObject()[ FD ]
Line_6 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) -->Line_7 $$ map = parser.map()[ FD ]
Line_34 $$ List extListValue = (List) extValue-->Line_35 $$ assertThat(extListValue.size(), equalTo(2))[ FD ]
Line_7 $$ map = parser.map()-->Line_49 $$ map = parser.map()[ FD ]
Line_7 $$ map = parser.map()-->Line_11 $$ assertThat(XContentMapValues.extractValue("something.else.2", map), nullValue())[ FD ]
Line_5 $$ Map<String, Object> map-->Line_38 $$ map = parser.map()[ FD ]
Line_5 $$ Map<String, Object> map-->Line_7 $$ map = parser.map()[ FD ]
Line_5 $$ Map<String, Object> map-->Line_11 $$ assertThat(XContentMapValues.extractValue("something.else.2", map), nullValue())[ FD ]
Line_42 $$ extListValue = (List) extValue-->Line_45 $$ assertThat(extListValue.get(1).toString(), equalTo("value2"))[ FD ]
Line_14 $$ map = parser.map()-->Line_49 $$ map = parser.map()[ FD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject().field("test", "value").endObject()-->Line_6 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) [ FD ]
Line_12 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1").startObject("path2").field("test", "value").endObject().endObject().endObject()-->Line_53 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) [ FD ]
Line_14 $$ map = parser.map()-->Line_38 $$ map = parser.map()[ FD ]
Line_32 $$ extValue = XContentMapValues.extractValue("path1.test", map)-->Line_41 $$ assertThat(extValue, instanceOf(List.class))[ FD ]
Line_30 $$ map = parser.map()-->Line_49 $$ map = parser.map()[ FD ]
Line_38 $$ map = parser.map()-->Line_51 $$ assertThat(XContentMapValues.extractValue("xxx.yyy", map).toString(), equalTo("value"))[ FD ]
Line_14 $$ map = parser.map()-->Line_17 $$ assertThat(XContentMapValues.extractValue("path1.path2.test_me", map), nullValue())[ FD ]
Line_5 $$ Map<String, Object> map-->Line_14 $$ map = parser.map()[ FD ]
Line_14 $$ map = parser.map()-->Line_16 $$ assertThat(XContentMapValues.extractValue("path1.path2.test", map).toString(), equalTo("value"))[ FD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject().field("test", "value").endObject()-->Line_12 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1").startObject("path2").field("test", "value").endObject().endObject().endObject()[ FD ]
Line_42 $$ extListValue = (List) extValue-->Line_44 $$ assertThat(extListValue.get(0).toString(), equalTo("value1"))[ FD ]
Line_5 $$ Map<String, Object> map-->Line_23 $$ extValue = XContentMapValues.extractValue("path1", map)[ FD ]
Line_49 $$ map = parser.map()-->Line_56 $$ assertThat(XContentMapValues.extractValue("path1.xxx.path2.yyy.test", map).toString(), equalTo("value"))[ FD ]
Line_12 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1").startObject("path2").field("test", "value").endObject().endObject().endObject()-->Line_29 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) [ FD ]
Line_14 $$ map = parser.map()-->Line_30 $$ map = parser.map()[ FD ]
Line_7 $$ map = parser.map()-->Line_56 $$ assertThat(XContentMapValues.extractValue("path1.xxx.path2.yyy.test", map).toString(), equalTo("value"))[ FD ]
Line_14 $$ map = parser.map()-->Line_54 $$ map = parser.map()[ FD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject().field("test", "value").endObject()-->Line_36 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1").startArray("path2").startObject().field("test", "value1").endObject().startObject().field("test", "value2").endObject().endArray().endObject().endObject()[ FD ]
Line_7 $$ map = parser.map()-->Line_23 $$ extValue = XContentMapValues.extractValue("path1", map)[ FD ]
Line_5 $$ Map<String, Object> map-->Line_40 $$ extValue = XContentMapValues.extractValue("path1.path2.test", map)[ FD ]
Line_5 $$ Map<String, Object> map-->Line_10 $$ assertThat(XContentMapValues.extractValue("test.me", map), nullValue())[ FD ]
Line_14 $$ map = parser.map()-->Line_18 $$ assertThat(XContentMapValues.extractValue("path1.non_path2.test", map), nullValue())[ FD ]
Line_5 $$ Map<String, Object> map-->Line_30 $$ map = parser.map()[ FD ]
Line_6 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) -->Line_49 $$ map = parser.map()[ FD ]
Line_19 $$ Object extValue = XContentMapValues.extractValue("path1.path2", map)-->Line_20 $$ assertThat(extValue, instanceOf(Map.class))[ FD ]
Line_7 $$ map = parser.map()-->Line_38 $$ map = parser.map()[ FD ]
Line_30 $$ map = parser.map()-->Line_32 $$ extValue = XContentMapValues.extractValue("path1.test", map)[ FD ]
Line_14 $$ map = parser.map()-->Line_23 $$ extValue = XContentMapValues.extractValue("path1", map)[ FD ]
Line_30 $$ map = parser.map()-->Line_51 $$ assertThat(XContentMapValues.extractValue("xxx.yyy", map).toString(), equalTo("value"))[ FD ]
Line_12 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1").startObject("path2").field("test", "value").endObject().endObject().endObject()-->Line_52 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1.xxx").startObject("path2.yyy").field("test", "value").endObject().endObject().endObject()[ FD ]
Line_14 $$ map = parser.map()-->Line_51 $$ assertThat(XContentMapValues.extractValue("xxx.yyy", map).toString(), equalTo("value"))[ FD ]
Line_5 $$ Map<String, Object> map-->Line_32 $$ extValue = XContentMapValues.extractValue("path1.test", map)[ FD ]
Line_19 $$ Object extValue = XContentMapValues.extractValue("path1.path2", map)-->Line_23 $$ extValue = XContentMapValues.extractValue("path1", map)[ FD ]
Line_25 $$ extMapValue = (Map<String, Object>) extValue-->Line_26 $$ assertThat(extMapValue.containsKey("path2"), equalTo(true))[ FD ]
Line_30 $$ map = parser.map()-->Line_38 $$ map = parser.map()[ FD ]
Line_36 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1").startArray("path2").startObject().field("test", "value1").endObject().startObject().field("test", "value2").endObject().endArray().endObject().endObject()-->Line_48 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) [ FD ]
Line_40 $$ extValue = XContentMapValues.extractValue("path1.path2.test", map)-->Line_41 $$ assertThat(extValue, instanceOf(List.class))[ FD ]
Line_5 $$ Map<String, Object> map-->Line_17 $$ assertThat(XContentMapValues.extractValue("path1.path2.test_me", map), nullValue())[ FD ]
Line_14 $$ map = parser.map()-->Line_19 $$ Object extValue = XContentMapValues.extractValue("path1.path2", map)[ FD ]
Line_14 $$ map = parser.map()-->Line_40 $$ extValue = XContentMapValues.extractValue("path1.path2.test", map)[ FD ]
Line_36 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1").startArray("path2").startObject().field("test", "value1").endObject().startObject().field("test", "value2").endObject().endArray().endObject().endObject()-->Line_52 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1.xxx").startObject("path2.yyy").field("test", "value").endObject().endObject().endObject()[ FD ]
Line_21 $$ Map<String, Object> extMapValue = (Map<String, Object>) extValue-->Line_25 $$ extMapValue = (Map<String, Object>) extValue[ FD ]
Line_30 $$ map = parser.map()-->Line_54 $$ map = parser.map()[ FD ]
Line_12 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1").startObject("path2").field("test", "value").endObject().endObject().endObject()-->Line_36 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1").startArray("path2").startObject().field("test", "value1").endObject().startObject().field("test", "value2").endObject().endArray().endObject().endObject()[ FD ]
Line_38 $$ map = parser.map()-->Line_40 $$ extValue = XContentMapValues.extractValue("path1.path2.test", map)[ FD ]
Line_12 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1").startObject("path2").field("test", "value").endObject().endObject().endObject()-->Line_37 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) [ FD ]
Line_23 $$ extValue = XContentMapValues.extractValue("path1", map)-->Line_41 $$ assertThat(extValue, instanceOf(List.class))[ FD ]
Line_6 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) -->Line_14 $$ map = parser.map()[ FD ]
Line_5 $$ Map<String, Object> map-->Line_9 $$ assertThat(XContentMapValues.extractValue("test", map).toString(), equalTo("value"))[ FD ]
Line_7 $$ map = parser.map()-->Line_51 $$ assertThat(XContentMapValues.extractValue("xxx.yyy", map).toString(), equalTo("value"))[ FD ]
Line_12 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1").startObject("path2").field("test", "value").endObject().endObject().endObject()-->Line_13 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) [ FD ]
Line_7 $$ map = parser.map()-->Line_14 $$ map = parser.map()[ FD ]
Line_36 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1").startArray("path2").startObject().field("test", "value1").endObject().startObject().field("test", "value2").endObject().endArray().endObject().endObject()-->Line_53 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) [ FD ]
Line_36 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1").startArray("path2").startObject().field("test", "value1").endObject().startObject().field("test", "value2").endObject().endArray().endObject().endObject()-->Line_37 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) [ FD ]
Line_19 $$ Object extValue = XContentMapValues.extractValue("path1.path2", map)-->Line_41 $$ assertThat(extValue, instanceOf(List.class))[ FD ]
Line_21 $$ Map<String, Object> extMapValue = (Map<String, Object>) extValue-->Line_26 $$ assertThat(extMapValue.containsKey("path2"), equalTo(true))[ FD ]
Line_34 $$ List extListValue = (List) extValue-->Line_43 $$ assertThat(extListValue.size(), equalTo(2))[ FD ]
Line_49 $$ map = parser.map()-->Line_51 $$ assertThat(XContentMapValues.extractValue("xxx.yyy", map).toString(), equalTo("value"))[ FD ]
Line_7 $$ map = parser.map()-->Line_18 $$ assertThat(XContentMapValues.extractValue("path1.non_path2.test", map), nullValue())[ FD ]
Line_5 $$ Map<String, Object> map-->Line_19 $$ Object extValue = XContentMapValues.extractValue("path1.path2", map)[ FD ]
Line_42 $$ extListValue = (List) extValue-->Line_43 $$ assertThat(extListValue.size(), equalTo(2))[ FD ]
Line_23 $$ extValue = XContentMapValues.extractValue("path1", map)-->Line_24 $$ assertThat(extValue, instanceOf(Map.class))[ FD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject().field("test", "value").endObject()-->Line_13 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) [ FD ]
Line_38 $$ map = parser.map()-->Line_49 $$ map = parser.map()[ FD ]
Line_19 $$ Object extValue = XContentMapValues.extractValue("path1.path2", map)-->Line_33 $$ assertThat(extValue, instanceOf(List.class))[ FD ]
Line_23 $$ extValue = XContentMapValues.extractValue("path1", map)-->Line_33 $$ assertThat(extValue, instanceOf(List.class))[ FD ]
Line_5 $$ Map<String, Object> map-->Line_16 $$ assertThat(XContentMapValues.extractValue("path1.path2.test", map).toString(), equalTo("value"))[ FD ]
Line_6 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) -->Line_30 $$ map = parser.map()[ FD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject().field("test", "value").endObject()-->Line_29 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) [ FD ]
Line_54 $$ map = parser.map()-->Line_56 $$ assertThat(XContentMapValues.extractValue("path1.xxx.path2.yyy.test", map).toString(), equalTo("value"))[ FD ]
Line_38 $$ map = parser.map()-->Line_56 $$ assertThat(XContentMapValues.extractValue("path1.xxx.path2.yyy.test", map).toString(), equalTo("value"))[ FD ]
Line_49 $$ map = parser.map()-->Line_54 $$ map = parser.map()[ FD ]
Line_7 $$ map = parser.map()-->Line_40 $$ extValue = XContentMapValues.extractValue("path1.path2.test", map)[ FD ]
Line_38 $$ map = parser.map()-->Line_54 $$ map = parser.map()[ FD ]
Line_7 $$ map = parser.map()-->Line_16 $$ assertThat(XContentMapValues.extractValue("path1.path2.test", map).toString(), equalTo("value"))[ FD ]
Line_32 $$ extValue = XContentMapValues.extractValue("path1.test", map)-->Line_33 $$ assertThat(extValue, instanceOf(List.class))[ FD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject().field("test", "value").endObject()-->Line_37 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) [ FD ]
Line_5 $$ Map<String, Object> map-->Line_18 $$ assertThat(XContentMapValues.extractValue("path1.non_path2.test", map), nullValue())[ FD ]
Line_7 $$ map = parser.map()-->Line_30 $$ map = parser.map()[ FD ]
Line_7 $$ map = parser.map()-->Line_32 $$ extValue = XContentMapValues.extractValue("path1.test", map)[ FD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder().startObject().field("test", "value").endObject()-->Line_48 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) [ FD ]
Line_7 $$ map = parser.map()-->Line_9 $$ assertThat(XContentMapValues.extractValue("test", map).toString(), equalTo("value"))[ FD ]
Line_14 $$ map = parser.map()-->Line_32 $$ extValue = XContentMapValues.extractValue("path1.test", map)[ FD ]
Line_5 $$ Map<String, Object> map-->Line_49 $$ map = parser.map()[ FD ]
Line_6 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) -->Line_54 $$ map = parser.map()[ FD ]
Line_21 $$ Map<String, Object> extMapValue = (Map<String, Object>) extValue-->Line_22 $$ assertThat(extMapValue, hasEntry("test", (Object) "value"))[ FD ]
Line_34 $$ List extListValue = (List) extValue-->Line_42 $$ extListValue = (List) extValue[ FD ]
Line_19 $$ Object extValue = XContentMapValues.extractValue("path1.path2", map)-->Line_40 $$ extValue = XContentMapValues.extractValue("path1.path2.test", map)[ FD ]
Line_7 $$ map = parser.map()-->Line_17 $$ assertThat(XContentMapValues.extractValue("path1.path2.test_me", map), nullValue())[ FD ]
Line_5 $$ Map<String, Object> map-->Line_54 $$ map = parser.map()[ FD ]
Line_23 $$ extValue = XContentMapValues.extractValue("path1", map)-->Line_32 $$ extValue = XContentMapValues.extractValue("path1.test", map)[ FD ]
Line_5 $$ Map<String, Object> map-->Line_56 $$ assertThat(XContentMapValues.extractValue("path1.xxx.path2.yyy.test", map).toString(), equalTo("value"))[ FD ]
Line_34 $$ List extListValue = (List) extValue-->Line_45 $$ assertThat(extListValue.get(1).toString(), equalTo("value2"))[ FD ]
Line_30 $$ map = parser.map()-->Line_40 $$ extValue = XContentMapValues.extractValue("path1.path2.test", map)[ FD ]
Line_19 $$ Object extValue = XContentMapValues.extractValue("path1.path2", map)-->Line_24 $$ assertThat(extValue, instanceOf(Map.class))[ FD ]
Line_14 $$ map = parser.map()-->Line_56 $$ assertThat(XContentMapValues.extractValue("path1.xxx.path2.yyy.test", map).toString(), equalTo("value"))[ FD ]
Line_32 $$ extValue = XContentMapValues.extractValue("path1.test", map)-->Line_40 $$ extValue = XContentMapValues.extractValue("path1.path2.test", map)[ FD ]
Line_7 $$ map = parser.map()-->Line_10 $$ assertThat(XContentMapValues.extractValue("test.me", map), nullValue())[ FD ]
Line_23 $$ extValue = XContentMapValues.extractValue("path1", map)-->Line_40 $$ extValue = XContentMapValues.extractValue("path1.path2.test", map)[ FD ]
Line_7 $$ map = parser.map()-->Line_19 $$ Object extValue = XContentMapValues.extractValue("path1.path2", map)[ FD ]
Line_19 $$ Object extValue = XContentMapValues.extractValue("path1.path2", map)-->Line_32 $$ extValue = XContentMapValues.extractValue("path1.test", map)[ FD ]
Line_34 $$ List extListValue = (List) extValue-->Line_44 $$ assertThat(extListValue.get(0).toString(), equalTo("value1"))[ FD ]
Line_52 $$ builder = XContentFactory.jsonBuilder().startObject().startObject("path1.xxx").startObject("path2.yyy").field("test", "value").endObject().endObject().endObject()-->Line_53 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) [ FD ]
Line_6 $$ try (XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.string())) -->Line_38 $$ map = parser.map()[ FD ]
Line_30 $$ map = parser.map()-->Line_56 $$ assertThat(XContentMapValues.extractValue("path1.xxx.path2.yyy.test", map).toString(), equalTo("value"))[ FD ]
Line_5 $$ Map<String, Object> map-->Line_51 $$ assertThat(XContentMapValues.extractValue("xxx.yyy", map).toString(), equalTo("value"))[ FD ]
