Line_2 $$ public void typeVariableType() throws Exception -->Line_4 $$ assertThat(type.toString(), equalTo("T"))[ CD ]
Line_3 $$ TypeVariable<?> type = (TypeVariable<?>) SerializableTypeWrapper.forField(Fields.class.getField("typeVariableType"))-->Line_4 $$ assertThat(type.toString(), equalTo("T"))[ FD ]
Line_2 $$ public void typeVariableType() throws Exception -->Line_3 $$ TypeVariable<?> type = (TypeVariable<?>) SerializableTypeWrapper.forField(Fields.class.getField("typeVariableType"))[ CD ]
Line_2 $$ public void typeVariableType() throws Exception -->Line_6 $$ assertSerialzable(type.getBounds())[ CD ]
Line_3 $$ TypeVariable<?> type = (TypeVariable<?>) SerializableTypeWrapper.forField(Fields.class.getField("typeVariableType"))-->Line_6 $$ assertSerialzable(type.getBounds())[ FD ]
Line_3 $$ TypeVariable<?> type = (TypeVariable<?>) SerializableTypeWrapper.forField(Fields.class.getField("typeVariableType"))-->Line_5 $$ assertSerialzable(type)[ FD ]
Line_2 $$ public void typeVariableType() throws Exception -->Line_5 $$ assertSerialzable(type)[ CD ]
