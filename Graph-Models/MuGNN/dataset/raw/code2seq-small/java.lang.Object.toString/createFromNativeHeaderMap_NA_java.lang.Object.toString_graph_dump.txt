Line_4 $$ MultiValueMap<String, String> inputNativeHeaders = new LinkedMultiValueMap()-->Line_6 $$ inputNativeHeaders.add("bar", "baz")[ FD ]
Line_7 $$ NativeMessageHeaderAccessor headerAccessor = new NativeMessageHeaderAccessor(inputNativeHeaders)-->Line_8 $$ Map<String, Object> actual = headerAccessor.toMap()[ FD ]
Line_8 $$ Map<String, Object> actual = headerAccessor.toMap()-->Line_10 $$ assertNotNull(actual.get(NativeMessageHeaderAccessor.NATIVE_HEADERS))[ FD ]
Line_8 $$ Map<String, Object> actual = headerAccessor.toMap()-->Line_11 $$ assertEquals(inputNativeHeaders, actual.get(NativeMessageHeaderAccessor.NATIVE_HEADERS))[ FD ]
Line_4 $$ MultiValueMap<String, String> inputNativeHeaders = new LinkedMultiValueMap()-->Line_12 $$ assertNotSame(inputNativeHeaders, actual.get(NativeMessageHeaderAccessor.NATIVE_HEADERS))[ FD ]
Line_8 $$ Map<String, Object> actual = headerAccessor.toMap()-->Line_9 $$ assertEquals(actual.toString(), 1, actual.size())[ FD ]
Line_8 $$ Map<String, Object> actual = headerAccessor.toMap()-->Line_12 $$ assertNotSame(inputNativeHeaders, actual.get(NativeMessageHeaderAccessor.NATIVE_HEADERS))[ FD ]
Line_4 $$ MultiValueMap<String, String> inputNativeHeaders = new LinkedMultiValueMap()-->Line_11 $$ assertEquals(inputNativeHeaders, actual.get(NativeMessageHeaderAccessor.NATIVE_HEADERS))[ FD ]
Line_4 $$ MultiValueMap<String, String> inputNativeHeaders = new LinkedMultiValueMap()-->Line_5 $$ inputNativeHeaders.add("foo", "bar")[ FD ]
