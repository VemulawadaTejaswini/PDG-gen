Line_9 $$ if (BigintType.BIGINT.equals(type)) -->Line_10 $$ return value.toString()[ CD ]
Line_2 $$ public static String serializeSessionProperty(Type type, Object value) -->Line_3 $$ if (value == null) [ FD ]
Line_6 $$ if (BooleanType.BOOLEAN.equals(type)) -->Line_7 $$ return value.toString()[ CD ]
Line_2 $$ public static String serializeSessionProperty(Type type, Object value) -->Line_6 $$ if (BooleanType.BOOLEAN.equals(type)) [ FD ]
Line_2 $$ public static String serializeSessionProperty(Type type, Object value) -->Line_7 $$ return value.toString()[ FD ]
Line_2 $$ public static String serializeSessionProperty(Type type, Object value) -->Line_10 $$ return value.toString()[ FD ]
Line_2 $$ public static String serializeSessionProperty(Type type, Object value) -->Line_13 $$ return value.toString()[ FD ]
Line_2 $$ public static String serializeSessionProperty(Type type, Object value) -->Line_18 $$ if (type instanceof ArrayType || type instanceof MapType) [ CD ]
Line_2 $$ public static String serializeSessionProperty(Type type, Object value) -->Line_15 $$ if (VarcharType.VARCHAR.equals(type)) [ CD ]
Line_2 $$ public static String serializeSessionProperty(Type type, Object value) -->Line_19 $$ return getJsonCodecForType(type).toJson(value)[ FD ]
Line_2 $$ public static String serializeSessionProperty(Type type, Object value) -->Line_16 $$ return value.toString()[ FD ]
Line_2 $$ public static String serializeSessionProperty(Type type, Object value) -->Line_15 $$ if (VarcharType.VARCHAR.equals(type)) [ FD ]
Line_2 $$ public static String serializeSessionProperty(Type type, Object value) -->Line_12 $$ if (DoubleType.DOUBLE.equals(type)) [ FD ]
Line_2 $$ public static String serializeSessionProperty(Type type, Object value) -->Line_21 $$ throw new PrestoException(INVALID_SESSION_PROPERTY, format("Session property type %s is not supported", type))[ FD ]
Line_15 $$ if (VarcharType.VARCHAR.equals(type)) -->Line_16 $$ return value.toString()[ CD ]
Line_12 $$ if (DoubleType.DOUBLE.equals(type)) -->Line_13 $$ return value.toString()[ CD ]
Line_2 $$ public static String serializeSessionProperty(Type type, Object value) -->Line_12 $$ if (DoubleType.DOUBLE.equals(type)) [ CD ]
Line_2 $$ public static String serializeSessionProperty(Type type, Object value) -->Line_6 $$ if (BooleanType.BOOLEAN.equals(type)) [ CD ]
Line_2 $$ public static String serializeSessionProperty(Type type, Object value) -->Line_9 $$ if (BigintType.BIGINT.equals(type)) [ CD ]
Line_2 $$ public static String serializeSessionProperty(Type type, Object value) -->Line_3 $$ if (value == null) [ CD ]
Line_2 $$ public static String serializeSessionProperty(Type type, Object value) -->Line_9 $$ if (BigintType.BIGINT.equals(type)) [ FD ]
Line_18 $$ if (type instanceof ArrayType || type instanceof MapType) -->Line_19 $$ return getJsonCodecForType(type).toJson(value)[ CD ]
