Line_29 $$ T element = failedToProcess.poll()-->Line_38 $$ if (!thingProcessor.process(element)) [ FD ]
Line_32 $$ if (element == tombStone) -->Line_34 $$ result = true[ CD ]
Line_32 $$ if (element == tombStone) -->Line_33 $$ things.offer(element)[ CD ]
Line_29 $$ T element = failedToProcess.poll()-->Line_30 $$ if (element == null)[ FD ]
Line_10 $$ class MyTask implements Callable<Boolean> -->Line_57 $$ return super.toString() + " seq=" + mySeq[ CD ]
Line_29 $$ T element = failedToProcess.poll()-->Line_43 $$ failedToProcess.add(element)[ FD ]
Line_31 $$ element = things.take()-->Line_32 $$ if (element == tombStone) [ FD ]
Line_31 $$ element = things.take()-->Line_38 $$ if (!thingProcessor.process(element)) [ FD ]
Line_29 $$ T element = failedToProcess.poll()-->Line_32 $$ if (element == tombStone) [ FD ]
Line_30 $$ if (element == null)-->Line_31 $$ element = things.take()[ CD ]
Line_34 $$ result = true-->Line_39 $$ result = false[ FD ]
Line_31 $$ element = things.take()-->Line_43 $$ failedToProcess.add(element)[ FD ]
Line_31 $$ element = things.take()-->Line_30 $$ if (element == null)[ FD ]
Line_29 $$ T element = failedToProcess.poll()-->Line_31 $$ element = things.take()[ FD ]
Line_34 $$ result = true-->Line_79 $$ result &= task.join()[ FD ]
Line_27 $$ while (true) -->Line_29 $$ T element = failedToProcess.poll()[ CD ]
Line_10 $$ class MyTask implements Callable<Boolean> -->Line_52 $$ return result[ CD ]
Line_27 $$ while (true) -->Line_30 $$ if (element == null)[ CD ]
Line_29 $$ T element = failedToProcess.poll()-->Line_33 $$ things.offer(element)[ FD ]
Line_72 $$ for (int i = 0; i < JobSchedulerImpl.CORES_COUNT; i++) -->Line_73 $$ tasks.add(pool.submit(new MyTask(i)))[ CD ]
Line_39 $$ result = false-->Line_79 $$ result &= task.join()[ FD ]
Line_27 $$ while (true) -->Line_28 $$ progress.checkCanceled()[ CD ]
Line_31 $$ element = things.take()-->Line_33 $$ things.offer(element)[ FD ]
Line_27 $$ while (true) -->Line_32 $$ if (element == tombStone) [ CD ]
Line_38 $$ if (!thingProcessor.process(element)) -->Line_39 $$ result = false[ CD ]
Line_10 $$ class MyTask implements Callable<Boolean> -->Line_22 $$ ProgressManager.getInstance().executeProcessUnderProgress(new Runnable() [ CD ]
