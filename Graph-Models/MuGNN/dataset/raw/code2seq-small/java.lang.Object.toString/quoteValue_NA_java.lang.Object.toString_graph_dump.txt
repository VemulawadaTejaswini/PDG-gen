Line_2 $$ public String quoteValue(Object value) -->Line_10 $$ if (this == OutputType.minimal && !string.equals("true") && !string.equals("false") && !string.equals("null") && !string.contains("//") && !string.contains("/*")) [ CD ]
Line_8 $$ StringBuilder buffer = new StringBuilder(string)-->Line_15 $$ return '"' + buffer.replace('"', "\\\"").toString() + '"'[ FD ]
Line_2 $$ public String quoteValue(Object value) -->Line_15 $$ return '"' + buffer.replace('"', "\\\"").toString() + '"'[ CD ]
Line_2 $$ public String quoteValue(Object value) -->Line_5 $$ String string = value.toString()[ FD ]
Line_6 $$ if (value instanceof Number || value instanceof Boolean)-->Line_7 $$ return string[ CD ]
Line_8 $$ StringBuilder buffer = new StringBuilder(string)-->Line_12 $$ if (length > 0 && buffer.charAt(length - 1) != ' ' && minimalValuePattern.matcher(buffer).matches())[ FD ]
Line_3 $$ if (value == null)-->Line_4 $$ return "null"[ CD ]
Line_5 $$ String string = value.toString()-->Line_10 $$ if (this == OutputType.minimal && !string.equals("true") && !string.equals("false") && !string.equals("null") && !string.contains("//") && !string.contains("/*")) [ FD ]
Line_10 $$ if (this == OutputType.minimal && !string.equals("true") && !string.equals("false") && !string.equals("null") && !string.contains("//") && !string.contains("/*")) -->Line_11 $$ int length = buffer.length()[ CD ]
Line_2 $$ public String quoteValue(Object value) -->Line_8 $$ StringBuilder buffer = new StringBuilder(string)[ CD ]
Line_8 $$ StringBuilder buffer = new StringBuilder(string)-->Line_13 $$ return buffer.toString()[ FD ]
Line_2 $$ public String quoteValue(Object value) -->Line_5 $$ String string = value.toString()[ CD ]
Line_2 $$ public String quoteValue(Object value) -->Line_6 $$ if (value instanceof Number || value instanceof Boolean)[ CD ]
Line_2 $$ public String quoteValue(Object value) -->Line_9 $$ buffer.replace('\\', "\\\\").replace('\r', "\\r").replace('\n', "\\n").replace('\t', "\\t")[ CD ]
Line_8 $$ StringBuilder buffer = new StringBuilder(string)-->Line_9 $$ buffer.replace('\\', "\\\\").replace('\r', "\\r").replace('\n', "\\n").replace('\t', "\\t")[ FD ]
Line_12 $$ if (length > 0 && buffer.charAt(length - 1) != ' ' && minimalValuePattern.matcher(buffer).matches())-->Line_13 $$ return buffer.toString()[ CD ]
Line_8 $$ StringBuilder buffer = new StringBuilder(string)-->Line_11 $$ int length = buffer.length()[ FD ]
Line_10 $$ if (this == OutputType.minimal && !string.equals("true") && !string.equals("false") && !string.equals("null") && !string.contains("//") && !string.contains("/*")) -->Line_12 $$ if (length > 0 && buffer.charAt(length - 1) != ' ' && minimalValuePattern.matcher(buffer).matches())[ CD ]
Line_2 $$ public String quoteValue(Object value) -->Line_3 $$ if (value == null)[ CD ]
Line_2 $$ public String quoteValue(Object value) -->Line_3 $$ if (value == null)[ FD ]
Line_5 $$ String string = value.toString()-->Line_6 $$ if (value instanceof Number || value instanceof Boolean)[ FD ]
