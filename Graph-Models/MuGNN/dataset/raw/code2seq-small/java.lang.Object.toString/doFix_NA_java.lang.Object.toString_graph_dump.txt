Line_4 $$ if (!(element instanceof PsiLiteralExpression)) -->Line_5 $$ return[ CD ]
Line_2 $$ protected void doFix(Project project, ProblemDescriptor descriptor) throws IncorrectOperationException -->Line_9 $$ if (!(literal instanceof Character)) [ CD ]
Line_8 $$ final Object literal = literalExpression.getValue()-->Line_12 $$ final String escaped = StringUtil.escapeStringCharacters(literal.toString())[ FD ]
Line_2 $$ protected void doFix(Project project, ProblemDescriptor descriptor) throws IncorrectOperationException -->Line_3 $$ final PsiElement element = descriptor.getPsiElement()[ FD ]
Line_2 $$ protected void doFix(Project project, ProblemDescriptor descriptor) throws IncorrectOperationException -->Line_4 $$ if (!(element instanceof PsiLiteralExpression)) [ CD ]
Line_9 $$ if (!(literal instanceof Character)) -->Line_10 $$ return[ CD ]
Line_2 $$ protected void doFix(Project project, ProblemDescriptor descriptor) throws IncorrectOperationException -->Line_12 $$ final String escaped = StringUtil.escapeStringCharacters(literal.toString())[ CD ]
Line_2 $$ protected void doFix(Project project, ProblemDescriptor descriptor) throws IncorrectOperationException -->Line_13 $$ PsiReplacementUtil.replaceExpression(literalExpression, '\"' + escaped + '"')[ CD ]
Line_2 $$ protected void doFix(Project project, ProblemDescriptor descriptor) throws IncorrectOperationException -->Line_3 $$ final PsiElement element = descriptor.getPsiElement()[ CD ]
Line_2 $$ protected void doFix(Project project, ProblemDescriptor descriptor) throws IncorrectOperationException -->Line_8 $$ final Object literal = literalExpression.getValue()[ CD ]
Line_7 $$ final PsiLiteralExpression literalExpression = (PsiLiteralExpression) element-->Line_13 $$ PsiReplacementUtil.replaceExpression(literalExpression, '\"' + escaped + '"')[ FD ]
Line_2 $$ protected void doFix(Project project, ProblemDescriptor descriptor) throws IncorrectOperationException -->Line_7 $$ final PsiLiteralExpression literalExpression = (PsiLiteralExpression) element[ CD ]
Line_7 $$ final PsiLiteralExpression literalExpression = (PsiLiteralExpression) element-->Line_8 $$ final Object literal = literalExpression.getValue()[ FD ]
