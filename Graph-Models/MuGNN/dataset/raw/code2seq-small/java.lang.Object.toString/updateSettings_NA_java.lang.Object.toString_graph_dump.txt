Line_2 $$ public void updateSettings(final UpdateSettingsClusterStateUpdateRequest request, final ActionListener<ClusterStateUpdateResponse> listener) -->Line_4 $$ updatedSettingsBuilder.put(request.settings()).normalizePrefix(IndexMetaData.INDEX_SETTING_PREFIX)[ FD ]
Line_12 $$ final Settings closeSettings = updatedSettingsBuilder.build()-->Line_58 $$ if (closeIndices.size() > 0 && closeSettings.get(IndexMetaData.SETTING_NUMBER_OF_REPLICAS) != null) [ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_70 $$ ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks())[ CD ]
Line_70 $$ ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks())-->Line_119 $$ ClusterState updatedState = ClusterState.builder(currentState).metaData(metaDataBuilder).routingTable(routingTableBuilder.build()).blocks(blocks).build()[ FD ]
Line_13 $$ final Set<String> removedSettings = new HashSet()-->Line_62 $$ throw new IllegalArgumentException(String.format(Locale.ROOT, "Can't update non dynamic settings[%s] for open indices [%s]", removedSettings, openIndices))[ FD ]
Line_70 $$ ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks())-->Line_107 $$ blocks.removeIndexBlock(index, IndexMetaData.INDEX_READ_BLOCK)[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_82 $$ if (updateMetaDataBlock != null) [ CD ]
Line_13 $$ final Set<String> removedSettings = new HashSet()-->Line_61 $$ if (!removedSettings.isEmpty() && !openIndices.isEmpty()) [ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_70 $$ ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks())[ FD ]
Line_46 $$ MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())-->Line_119 $$ ClusterState updatedState = ClusterState.builder(currentState).metaData(metaDataBuilder).routingTable(routingTableBuilder.build()).blocks(blocks).build()[ FD ]
Line_16 $$ if (!dynamicSettings.hasDynamicSetting(setting.getKey())) -->Line_20 $$ if (error != null) [ CD ]
Line_51 $$ for (String index : actualIndices) -->Line_105 $$ blocks.addIndexBlock(index, IndexMetaData.INDEX_READ_BLOCK)[ FD ]
Line_13 $$ final Set<String> removedSettings = new HashSet()-->Line_29 $$ if (!removedSettings.isEmpty()) [ FD ]
Line_2 $$ public void updateSettings(final UpdateSettingsClusterStateUpdateRequest request, final ActionListener<ClusterStateUpdateResponse> listener) -->Line_13 $$ final Set<String> removedSettings = new HashSet()[ CD ]
Line_50 $$ Set<String> closeIndices = new HashSet()-->Line_55 $$ closeIndices.add(index)[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_39 $$ return new ClusterStateUpdateResponse(acknowledged)[ CD ]
Line_14 $$ final Set<String> errors = new HashSet()-->Line_26 $$ listener.onFailure(new IllegalArgumentException("can't process the settings: " + errors.toString()))[ FD ]
Line_15 $$ for (Map.Entry<String, String> setting : updatedSettingsBuilder.internalMap().entrySet()) -->Line_21 $$ errors.add("[" + setting.getKey() + "] - " + error)[ FD ]
Line_112 $$ String[] indices = openIndices.toArray(new String[openIndices.size()])-->Line_117 $$ metaDataBuilder.updateSettings(closeSettings, indices)[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_71 $$ Boolean updatedReadOnly = openSettings.getAsBoolean(IndexMetaData.SETTING_READ_ONLY, null)[ CD ]
Line_2 $$ public void updateSettings(final UpdateSettingsClusterStateUpdateRequest request, final ActionListener<ClusterStateUpdateResponse> listener) -->Line_26 $$ listener.onFailure(new IllegalArgumentException("can't process the settings: " + errors.toString()))[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_50 $$ Set<String> closeIndices = new HashSet()[ CD ]
Line_44 $$ String[] actualIndices = indexNameExpressionResolver.concreteIndices(currentState, IndicesOptions.strictExpand(), request.indices())-->Line_68 $$ logger.info("updating number_of_replicas to [[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_72 $$ if (updatedReadOnly != null) [ CD ]
Line_46 $$ MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())-->Line_113 $$ metaDataBuilder.updateSettings(openSettings, indices)[ FD ]
Line_34 $$ final Settings openSettings = updatedSettingsBuilder.build()-->Line_64 $$ int updatedNumberOfReplicas = openSettings.getAsInt(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, -1)[ FD ]
Line_34 $$ final Settings openSettings = updatedSettingsBuilder.build()-->Line_91 $$ Boolean updateWriteBlock = openSettings.getAsBoolean(IndexMetaData.SETTING_BLOCKS_WRITE, null)[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_46 $$ MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_101 $$ Boolean updateReadBlock = openSettings.getAsBoolean(IndexMetaData.SETTING_BLOCKS_READ, null)[ CD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_81 $$ Boolean updateMetaDataBlock = openSettings.getAsBoolean(IndexMetaData.SETTING_BLOCKS_METADATA, null)[ CD ]
Line_19 $$ String error = dynamicSettings.validateDynamicSetting(setting.getKey(), setting.getValue(), clusterService.state())-->Line_20 $$ if (error != null) [ FD ]
Line_15 $$ for (Map.Entry<String, String> setting : updatedSettingsBuilder.internalMap().entrySet()) -->Line_19 $$ String error = dynamicSettings.validateDynamicSetting(setting.getKey(), setting.getValue(), clusterService.state())[ FD ]
Line_25 $$ if (!errors.isEmpty()) -->Line_27 $$ return[ CD ]
Line_14 $$ final Set<String> errors = new HashSet()-->Line_25 $$ if (!errors.isEmpty()) [ FD ]
Line_74 $$ if (updatedReadOnly) -->Line_77 $$ blocks.removeIndexBlock(index, IndexMetaData.INDEX_READ_ONLY_BLOCK)[ CD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_119 $$ ClusterState updatedState = ClusterState.builder(currentState).metaData(metaDataBuilder).routingTable(routingTableBuilder.build()).blocks(blocks).build()[ FD ]
Line_2 $$ public void updateSettings(final UpdateSettingsClusterStateUpdateRequest request, final ActionListener<ClusterStateUpdateResponse> listener) -->Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) [ CD ]
Line_70 $$ ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks())-->Line_75 $$ blocks.addIndexBlock(index, IndexMetaData.INDEX_READ_ONLY_BLOCK)[ FD ]
Line_13 $$ final Set<String> removedSettings = new HashSet()-->Line_17 $$ removedSettings.add(setting.getKey())[ FD ]
Line_70 $$ ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks())-->Line_105 $$ blocks.addIndexBlock(index, IndexMetaData.INDEX_READ_BLOCK)[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_123 $$ return updatedState[ CD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_58 $$ if (closeIndices.size() > 0 && closeSettings.get(IndexMetaData.SETTING_NUMBER_OF_REPLICAS) != null) [ CD ]
Line_65 $$ if (updatedNumberOfReplicas != -1) -->Line_67 $$ metaDataBuilder.updateNumberOfReplicas(updatedNumberOfReplicas, actualIndices)[ CD ]
Line_71 $$ Boolean updatedReadOnly = openSettings.getAsBoolean(IndexMetaData.SETTING_READ_ONLY, null)-->Line_72 $$ if (updatedReadOnly != null) [ FD ]
Line_52 $$ if (currentState.metaData().index(index).getState() == IndexMetaData.State.OPEN) -->Line_53 $$ openIndices.add(index)[ CD ]
Line_51 $$ for (String index : actualIndices) -->Line_87 $$ blocks.removeIndexBlock(index, IndexMetaData.INDEX_METADATA_BLOCK)[ FD ]
Line_51 $$ for (String index : actualIndices) -->Line_53 $$ openIndices.add(index)[ FD ]
Line_46 $$ MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())-->Line_67 $$ metaDataBuilder.updateNumberOfReplicas(updatedNumberOfReplicas, actualIndices)[ FD ]
Line_25 $$ if (!errors.isEmpty()) -->Line_26 $$ listener.onFailure(new IllegalArgumentException("can't process the settings: " + errors.toString()))[ CD ]
Line_15 $$ for (Map.Entry<String, String> setting : updatedSettingsBuilder.internalMap().entrySet()) -->Line_17 $$ removedSettings.add(setting.getKey())[ FD ]
Line_2 $$ public void updateSettings(final UpdateSettingsClusterStateUpdateRequest request, final ActionListener<ClusterStateUpdateResponse> listener) -->Line_3 $$ Settings.Builder updatedSettingsBuilder = Settings.settingsBuilder()[ CD ]
Line_50 $$ Set<String> closeIndices = new HashSet()-->Line_116 $$ String[] indices = closeIndices.toArray(new String[closeIndices.size()])[ FD ]
Line_3 $$ Settings.Builder updatedSettingsBuilder = Settings.settingsBuilder()-->Line_12 $$ final Settings closeSettings = updatedSettingsBuilder.build()[ FD ]
Line_2 $$ public void updateSettings(final UpdateSettingsClusterStateUpdateRequest request, final ActionListener<ClusterStateUpdateResponse> listener) -->Line_8 $$ listener.onFailure(new IllegalArgumentException("can't change the number of shards for an index"))[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_45 $$ RoutingTable.Builder routingTableBuilder = RoutingTable.builder(currentState.routingTable())[ CD ]
Line_44 $$ String[] actualIndices = indexNameExpressionResolver.concreteIndices(currentState, IndicesOptions.strictExpand(), request.indices())-->Line_67 $$ metaDataBuilder.updateNumberOfReplicas(updatedNumberOfReplicas, actualIndices)[ FD ]
Line_3 $$ Settings.Builder updatedSettingsBuilder = Settings.settingsBuilder()-->Line_31 $$ updatedSettingsBuilder.remove(removedSetting)[ FD ]
Line_51 $$ for (String index : actualIndices) -->Line_52 $$ if (currentState.metaData().index(index).getState() == IndexMetaData.State.OPEN) [ FD ]
Line_51 $$ for (String index : actualIndices) -->Line_77 $$ blocks.removeIndexBlock(index, IndexMetaData.INDEX_READ_ONLY_BLOCK)[ FD ]
Line_51 $$ for (String index : actualIndices) -->Line_97 $$ blocks.removeIndexBlock(index, IndexMetaData.INDEX_WRITE_BLOCK)[ FD ]
Line_2 $$ public void updateSettings(final UpdateSettingsClusterStateUpdateRequest request, final ActionListener<ClusterStateUpdateResponse> listener) -->Line_44 $$ String[] actualIndices = indexNameExpressionResolver.concreteIndices(currentState, IndicesOptions.strictExpand(), request.indices())[ FD ]
Line_14 $$ final Set<String> errors = new HashSet()-->Line_21 $$ errors.add("[" + setting.getKey() + "] - " + error)[ FD ]
Line_65 $$ if (updatedNumberOfReplicas != -1) -->Line_68 $$ logger.info("updating number_of_replicas to [[ CD ]
Line_50 $$ Set<String> closeIndices = new HashSet()-->Line_59 $$ throw new IllegalArgumentException(String.format(Locale.ROOT, "Can't update [%s] on closed indices [%s] - can leave index in an unopenable state", IndexMetaData.SETTING_NUMBER_OF_REPLICAS, closeIndices))[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_65 $$ if (updatedNumberOfReplicas != -1) [ CD ]
Line_115 $$ if (!closeIndices.isEmpty()) -->Line_117 $$ metaDataBuilder.updateSettings(closeSettings, indices)[ CD ]
Line_119 $$ ClusterState updatedState = ClusterState.builder(currentState).metaData(metaDataBuilder).routingTable(routingTableBuilder.build()).blocks(blocks).build()-->Line_122 $$ updatedState = ClusterState.builder(updatedState).routingResult(routingResult).build()[ FD ]
Line_3 $$ Settings.Builder updatedSettingsBuilder = Settings.settingsBuilder()-->Line_15 $$ for (Map.Entry<String, String> setting : updatedSettingsBuilder.internalMap().entrySet()) [ FD ]
Line_70 $$ ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks())-->Line_85 $$ blocks.addIndexBlock(index, IndexMetaData.INDEX_METADATA_BLOCK)[ FD ]
Line_16 $$ if (!dynamicSettings.hasDynamicSetting(setting.getKey())) -->Line_19 $$ String error = dynamicSettings.validateDynamicSetting(setting.getKey(), setting.getValue(), clusterService.state())[ CD ]
Line_81 $$ Boolean updateMetaDataBlock = openSettings.getAsBoolean(IndexMetaData.SETTING_BLOCKS_METADATA, null)-->Line_82 $$ if (updateMetaDataBlock != null) [ FD ]
Line_94 $$ if (updateWriteBlock) -->Line_97 $$ blocks.removeIndexBlock(index, IndexMetaData.INDEX_WRITE_BLOCK)[ CD ]
Line_115 $$ if (!closeIndices.isEmpty()) -->Line_116 $$ String[] indices = closeIndices.toArray(new String[closeIndices.size()])[ CD ]
Line_104 $$ if (updateReadBlock) -->Line_107 $$ blocks.removeIndexBlock(index, IndexMetaData.INDEX_READ_BLOCK)[ CD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_119 $$ ClusterState updatedState = ClusterState.builder(currentState).metaData(metaDataBuilder).routingTable(routingTableBuilder.build()).blocks(blocks).build()[ CD ]
Line_12 $$ final Settings closeSettings = updatedSettingsBuilder.build()-->Line_117 $$ metaDataBuilder.updateSettings(closeSettings, indices)[ FD ]
Line_2 $$ public void updateSettings(final UpdateSettingsClusterStateUpdateRequest request, final ActionListener<ClusterStateUpdateResponse> listener) -->Line_4 $$ updatedSettingsBuilder.put(request.settings()).normalizePrefix(IndexMetaData.INDEX_SETTING_PREFIX)[ CD ]
Line_46 $$ MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())-->Line_117 $$ metaDataBuilder.updateSettings(closeSettings, indices)[ FD ]
Line_51 $$ for (String index : actualIndices) -->Line_95 $$ blocks.addIndexBlock(index, IndexMetaData.INDEX_WRITE_BLOCK)[ FD ]
Line_52 $$ if (currentState.metaData().index(index).getState() == IndexMetaData.State.OPEN) -->Line_55 $$ closeIndices.add(index)[ CD ]
Line_34 $$ final Settings openSettings = updatedSettingsBuilder.build()-->Line_113 $$ metaDataBuilder.updateSettings(openSettings, indices)[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_45 $$ RoutingTable.Builder routingTableBuilder = RoutingTable.builder(currentState.routingTable())[ FD ]
Line_70 $$ ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks())-->Line_97 $$ blocks.removeIndexBlock(index, IndexMetaData.INDEX_WRITE_BLOCK)[ FD ]
Line_51 $$ for (String index : actualIndices) -->Line_85 $$ blocks.addIndexBlock(index, IndexMetaData.INDEX_METADATA_BLOCK)[ FD ]
Line_51 $$ for (String index : actualIndices) -->Line_75 $$ blocks.addIndexBlock(index, IndexMetaData.INDEX_READ_ONLY_BLOCK)[ FD ]
Line_34 $$ final Settings openSettings = updatedSettingsBuilder.build()-->Line_81 $$ Boolean updateMetaDataBlock = openSettings.getAsBoolean(IndexMetaData.SETTING_BLOCKS_METADATA, null)[ FD ]
Line_70 $$ ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks())-->Line_77 $$ blocks.removeIndexBlock(index, IndexMetaData.INDEX_READ_ONLY_BLOCK)[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_46 $$ MetaData.Builder metaDataBuilder = MetaData.builder(currentState.metaData())[ CD ]
Line_74 $$ if (updatedReadOnly) -->Line_75 $$ blocks.addIndexBlock(index, IndexMetaData.INDEX_READ_ONLY_BLOCK)[ CD ]
Line_111 $$ if (!openIndices.isEmpty()) -->Line_113 $$ metaDataBuilder.updateSettings(openSettings, indices)[ CD ]
Line_2 $$ public void updateSettings(final UpdateSettingsClusterStateUpdateRequest request, final ActionListener<ClusterStateUpdateResponse> listener) -->Line_34 $$ final Settings openSettings = updatedSettingsBuilder.build()[ CD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_44 $$ String[] actualIndices = indexNameExpressionResolver.concreteIndices(currentState, IndicesOptions.strictExpand(), request.indices())[ FD ]
Line_45 $$ RoutingTable.Builder routingTableBuilder = RoutingTable.builder(currentState.routingTable())-->Line_119 $$ ClusterState updatedState = ClusterState.builder(currentState).metaData(metaDataBuilder).routingTable(routingTableBuilder.build()).blocks(blocks).build()[ FD ]
Line_104 $$ if (updateReadBlock) -->Line_105 $$ blocks.addIndexBlock(index, IndexMetaData.INDEX_READ_BLOCK)[ CD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_115 $$ if (!closeIndices.isEmpty()) [ CD ]
Line_3 $$ Settings.Builder updatedSettingsBuilder = Settings.settingsBuilder()-->Line_34 $$ final Settings openSettings = updatedSettingsBuilder.build()[ FD ]
Line_91 $$ Boolean updateWriteBlock = openSettings.getAsBoolean(IndexMetaData.SETTING_BLOCKS_WRITE, null)-->Line_92 $$ if (updateWriteBlock != null) [ FD ]
Line_94 $$ if (updateWriteBlock) -->Line_95 $$ blocks.addIndexBlock(index, IndexMetaData.INDEX_WRITE_BLOCK)[ CD ]
Line_15 $$ for (Map.Entry<String, String> setting : updatedSettingsBuilder.internalMap().entrySet()) -->Line_16 $$ if (!dynamicSettings.hasDynamicSetting(setting.getKey())) [ FD ]
Line_111 $$ if (!openIndices.isEmpty()) -->Line_112 $$ String[] indices = openIndices.toArray(new String[openIndices.size()])[ CD ]
Line_2 $$ public void updateSettings(final UpdateSettingsClusterStateUpdateRequest request, final ActionListener<ClusterStateUpdateResponse> listener) -->Line_29 $$ if (!removedSettings.isEmpty()) [ CD ]
Line_34 $$ final Settings openSettings = updatedSettingsBuilder.build()-->Line_101 $$ Boolean updateReadBlock = openSettings.getAsBoolean(IndexMetaData.SETTING_BLOCKS_READ, null)[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_122 $$ updatedState = ClusterState.builder(updatedState).routingResult(routingResult).build()[ CD ]
Line_65 $$ if (updatedNumberOfReplicas != -1) -->Line_66 $$ routingTableBuilder.updateNumberOfReplicas(updatedNumberOfReplicas, actualIndices)[ CD ]
Line_70 $$ ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks())-->Line_87 $$ blocks.removeIndexBlock(index, IndexMetaData.INDEX_METADATA_BLOCK)[ FD ]
Line_30 $$ for (String removedSetting : removedSettings) -->Line_31 $$ updatedSettingsBuilder.remove(removedSetting)[ FD ]
Line_112 $$ String[] indices = openIndices.toArray(new String[openIndices.size()])-->Line_113 $$ metaDataBuilder.updateSettings(openSettings, indices)[ FD ]
Line_64 $$ int updatedNumberOfReplicas = openSettings.getAsInt(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, -1)-->Line_67 $$ metaDataBuilder.updateNumberOfReplicas(updatedNumberOfReplicas, actualIndices)[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_92 $$ if (updateWriteBlock != null) [ CD ]
Line_34 $$ final Settings openSettings = updatedSettingsBuilder.build()-->Line_71 $$ Boolean updatedReadOnly = openSettings.getAsBoolean(IndexMetaData.SETTING_READ_ONLY, null)[ FD ]
Line_101 $$ Boolean updateReadBlock = openSettings.getAsBoolean(IndexMetaData.SETTING_BLOCKS_READ, null)-->Line_102 $$ if (updateReadBlock != null) [ FD ]
Line_2 $$ public void updateSettings(final UpdateSettingsClusterStateUpdateRequest request, final ActionListener<ClusterStateUpdateResponse> listener) -->Line_14 $$ final Set<String> errors = new HashSet()[ CD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_61 $$ if (!removedSettings.isEmpty() && !openIndices.isEmpty()) [ CD ]
Line_3 $$ Settings.Builder updatedSettingsBuilder = Settings.settingsBuilder()-->Line_4 $$ updatedSettingsBuilder.put(request.settings()).normalizePrefix(IndexMetaData.INDEX_SETTING_PREFIX)[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_52 $$ if (currentState.metaData().index(index).getState() == IndexMetaData.State.OPEN) [ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_44 $$ String[] actualIndices = indexNameExpressionResolver.concreteIndices(currentState, IndicesOptions.strictExpand(), request.indices())[ CD ]
Line_7 $$ if (key.equals(IndexMetaData.SETTING_NUMBER_OF_SHARDS)) -->Line_9 $$ return[ CD ]
Line_64 $$ int updatedNumberOfReplicas = openSettings.getAsInt(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, -1)-->Line_68 $$ logger.info("updating number_of_replicas to [[ FD ]
Line_64 $$ int updatedNumberOfReplicas = openSettings.getAsInt(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, -1)-->Line_66 $$ routingTableBuilder.updateNumberOfReplicas(updatedNumberOfReplicas, actualIndices)[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_91 $$ Boolean updateWriteBlock = openSettings.getAsBoolean(IndexMetaData.SETTING_BLOCKS_WRITE, null)[ CD ]
Line_84 $$ if (updateMetaDataBlock) -->Line_85 $$ blocks.addIndexBlock(index, IndexMetaData.INDEX_METADATA_BLOCK)[ CD ]
Line_64 $$ int updatedNumberOfReplicas = openSettings.getAsInt(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, -1)-->Line_65 $$ if (updatedNumberOfReplicas != -1) [ FD ]
Line_16 $$ if (!dynamicSettings.hasDynamicSetting(setting.getKey())) -->Line_17 $$ removedSettings.add(setting.getKey())[ CD ]
Line_51 $$ for (String index : actualIndices) -->Line_55 $$ closeIndices.add(index)[ FD ]
Line_70 $$ ClusterBlocks.Builder blocks = ClusterBlocks.builder().blocks(currentState.blocks())-->Line_95 $$ blocks.addIndexBlock(index, IndexMetaData.INDEX_WRITE_BLOCK)[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_102 $$ if (updateReadBlock != null) [ CD ]
Line_84 $$ if (updateMetaDataBlock) -->Line_87 $$ blocks.removeIndexBlock(index, IndexMetaData.INDEX_METADATA_BLOCK)[ CD ]
Line_51 $$ for (String index : actualIndices) -->Line_107 $$ blocks.removeIndexBlock(index, IndexMetaData.INDEX_READ_BLOCK)[ FD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_64 $$ int updatedNumberOfReplicas = openSettings.getAsInt(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, -1)[ CD ]
Line_44 $$ String[] actualIndices = indexNameExpressionResolver.concreteIndices(currentState, IndicesOptions.strictExpand(), request.indices())-->Line_66 $$ routingTableBuilder.updateNumberOfReplicas(updatedNumberOfReplicas, actualIndices)[ FD ]
Line_50 $$ Set<String> closeIndices = new HashSet()-->Line_115 $$ if (!closeIndices.isEmpty()) [ FD ]
Line_2 $$ public void updateSettings(final UpdateSettingsClusterStateUpdateRequest request, final ActionListener<ClusterStateUpdateResponse> listener) -->Line_25 $$ if (!errors.isEmpty()) [ CD ]
Line_50 $$ Set<String> closeIndices = new HashSet()-->Line_58 $$ if (closeIndices.size() > 0 && closeSettings.get(IndexMetaData.SETTING_NUMBER_OF_REPLICAS) != null) [ FD ]
Line_2 $$ public void updateSettings(final UpdateSettingsClusterStateUpdateRequest request, final ActionListener<ClusterStateUpdateResponse> listener) -->Line_12 $$ final Settings closeSettings = updatedSettingsBuilder.build()[ CD ]
Line_35 $$ clusterService.submitStateUpdateTask("update-settings", new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(Priority.URGENT, request, listener) -->Line_111 $$ if (!openIndices.isEmpty()) [ CD ]
Line_20 $$ if (error != null) -->Line_21 $$ errors.add("[" + setting.getKey() + "] - " + error)[ CD ]
Line_45 $$ RoutingTable.Builder routingTableBuilder = RoutingTable.builder(currentState.routingTable())-->Line_66 $$ routingTableBuilder.updateNumberOfReplicas(updatedNumberOfReplicas, actualIndices)[ FD ]
Line_7 $$ if (key.equals(IndexMetaData.SETTING_NUMBER_OF_SHARDS)) -->Line_8 $$ listener.onFailure(new IllegalArgumentException("can't change the number of shards for an index"))[ CD ]
