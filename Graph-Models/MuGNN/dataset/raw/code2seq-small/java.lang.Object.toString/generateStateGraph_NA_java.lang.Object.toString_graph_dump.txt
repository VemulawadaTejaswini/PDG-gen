Line_23 $$ while (iter.hasNext()) -->Line_25 $$ Graph.Node toNode = g.getNode(iter.next().toString())[ CD ]
Line_22 $$ Iterator iter = ma.validPostStates.iterator()-->Line_23 $$ while (iter.hasNext()) [ FD ]
Line_20 $$ if (transition instanceof StateMachineFactory.MultipleInternalArc) -->Line_21 $$ StateMachineFactory.MultipleInternalArc ma = (StateMachineFactory.MultipleInternalArc) transition[ CD ]
Line_13 $$ for (Entry<EVENTTYPE, Transition<OPERAND, STATE, EVENTTYPE, EVENT>> entry : transitions.entrySet()) -->Line_19 $$ fromNode.addEdge(toNode, entry.getKey().toString())[ FD ]
Line_18 $$ Graph.Node toNode = g.getNode(sa.postState.toString())-->Line_26 $$ fromNode.addEdge(toNode, entry.getKey().toString())[ FD ]
Line_24 $$ Graph.Node fromNode = g.getNode(startState.toString())-->Line_26 $$ fromNode.addEdge(toNode, entry.getKey().toString())[ FD ]
Line_17 $$ Graph.Node fromNode = g.getNode(startState.toString())-->Line_19 $$ fromNode.addEdge(toNode, entry.getKey().toString())[ FD ]
Line_22 $$ Iterator iter = ma.validPostStates.iterator()-->Line_25 $$ Graph.Node toNode = g.getNode(iter.next().toString())[ FD ]
Line_12 $$ Map<EVENTTYPE, Transition<OPERAND, STATE, EVENTTYPE, EVENT>> transitions = stateMachineTable.get(startState)-->Line_13 $$ for (Entry<EVENTTYPE, Transition<OPERAND, STATE, EVENTTYPE, EVENT>> entry : transitions.entrySet()) [ FD ]
Line_18 $$ Graph.Node toNode = g.getNode(sa.postState.toString())-->Line_19 $$ fromNode.addEdge(toNode, entry.getKey().toString())[ FD ]
Line_17 $$ Graph.Node fromNode = g.getNode(startState.toString())-->Line_26 $$ fromNode.addEdge(toNode, entry.getKey().toString())[ FD ]
Line_20 $$ if (transition instanceof StateMachineFactory.MultipleInternalArc) -->Line_22 $$ Iterator iter = ma.validPostStates.iterator()[ CD ]
Line_15 $$ if (transition instanceof StateMachineFactory.SingleInternalArc) -->Line_16 $$ StateMachineFactory.SingleInternalArc sa = (StateMachineFactory.SingleInternalArc) transition[ CD ]
Line_13 $$ for (Entry<EVENTTYPE, Transition<OPERAND, STATE, EVENTTYPE, EVENT>> entry : transitions.entrySet()) -->Line_26 $$ fromNode.addEdge(toNode, entry.getKey().toString())[ FD ]
Line_20 $$ if (transition instanceof StateMachineFactory.MultipleInternalArc) -->Line_23 $$ while (iter.hasNext()) [ CD ]
Line_14 $$ Transition<OPERAND, STATE, EVENTTYPE, EVENT> transition = entry.getValue()-->Line_20 $$ if (transition instanceof StateMachineFactory.MultipleInternalArc) [ FD ]
Line_11 $$ for (STATE startState : stateMachineTable.keySet()) -->Line_24 $$ Graph.Node fromNode = g.getNode(startState.toString())[ FD ]
Line_10 $$ Graph g = new Graph(name)-->Line_17 $$ Graph.Node fromNode = g.getNode(startState.toString())[ FD ]
Line_15 $$ if (transition instanceof StateMachineFactory.SingleInternalArc) -->Line_20 $$ if (transition instanceof StateMachineFactory.MultipleInternalArc) [ CD ]
Line_13 $$ for (Entry<EVENTTYPE, Transition<OPERAND, STATE, EVENTTYPE, EVENT>> entry : transitions.entrySet()) -->Line_14 $$ Transition<OPERAND, STATE, EVENTTYPE, EVENT> transition = entry.getValue()[ FD ]
Line_25 $$ Graph.Node toNode = g.getNode(iter.next().toString())-->Line_26 $$ fromNode.addEdge(toNode, entry.getKey().toString())[ FD ]
Line_10 $$ Graph g = new Graph(name)-->Line_24 $$ Graph.Node fromNode = g.getNode(startState.toString())[ FD ]
Line_23 $$ while (iter.hasNext()) -->Line_26 $$ fromNode.addEdge(toNode, entry.getKey().toString())[ CD ]
Line_15 $$ if (transition instanceof StateMachineFactory.SingleInternalArc) -->Line_18 $$ Graph.Node toNode = g.getNode(sa.postState.toString())[ CD ]
Line_11 $$ for (STATE startState : stateMachineTable.keySet()) -->Line_12 $$ Map<EVENTTYPE, Transition<OPERAND, STATE, EVENTTYPE, EVENT>> transitions = stateMachineTable.get(startState)[ FD ]
Line_11 $$ for (STATE startState : stateMachineTable.keySet()) -->Line_17 $$ Graph.Node fromNode = g.getNode(startState.toString())[ FD ]
Line_10 $$ Graph g = new Graph(name)-->Line_18 $$ Graph.Node toNode = g.getNode(sa.postState.toString())[ FD ]
Line_14 $$ Transition<OPERAND, STATE, EVENTTYPE, EVENT> transition = entry.getValue()-->Line_15 $$ if (transition instanceof StateMachineFactory.SingleInternalArc) [ FD ]
Line_10 $$ Graph g = new Graph(name)-->Line_25 $$ Graph.Node toNode = g.getNode(iter.next().toString())[ FD ]
Line_15 $$ if (transition instanceof StateMachineFactory.SingleInternalArc) -->Line_17 $$ Graph.Node fromNode = g.getNode(startState.toString())[ CD ]
Line_15 $$ if (transition instanceof StateMachineFactory.SingleInternalArc) -->Line_19 $$ fromNode.addEdge(toNode, entry.getKey().toString())[ CD ]
Line_23 $$ while (iter.hasNext()) -->Line_24 $$ Graph.Node fromNode = g.getNode(startState.toString())[ CD ]
