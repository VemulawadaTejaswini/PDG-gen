Line_20 $$ for (String key : headers.keySet()) -->Line_21 $$ Object value = headers.get(key)[ FD ]
Line_4 $$ SimpMessageHeaderAccessor headerAccessor = SimpMessageHeaderAccessor.create(SimpMessageType.MESSAGE)-->Line_19 $$ initHeaders(headerAccessor)[ FD ]
Line_2 $$ protected Map<String, Object> processHeadersToSend(Map<String, Object> headers) -->Line_18 $$ SimpMessageHeaderAccessor headerAccessor = SimpMessageHeaderAccessor.create(SimpMessageType.MESSAGE)[ CD ]
Line_3 $$ if (headers == null) -->Line_7 $$ return headerAccessor.getMessageHeaders()[ CD ]
Line_4 $$ SimpMessageHeaderAccessor headerAccessor = SimpMessageHeaderAccessor.create(SimpMessageType.MESSAGE)-->Line_22 $$ headerAccessor.setNativeHeader(key, (value != null ? value.toString() : null))[ FD ]
Line_4 $$ SimpMessageHeaderAccessor headerAccessor = SimpMessageHeaderAccessor.create(SimpMessageType.MESSAGE)-->Line_24 $$ return headerAccessor.getMessageHeaders()[ FD ]
Line_13 $$ SimpMessageHeaderAccessor accessor = MessageHeaderAccessor.getAccessor((MessageHeaders) headers, SimpMessageHeaderAccessor.class)-->Line_14 $$ if (accessor != null) [ FD ]
Line_2 $$ protected Map<String, Object> processHeadersToSend(Map<String, Object> headers) -->Line_3 $$ if (headers == null) [ CD ]
Line_4 $$ SimpMessageHeaderAccessor headerAccessor = SimpMessageHeaderAccessor.create(SimpMessageType.MESSAGE)-->Line_6 $$ headerAccessor.setLeaveMutable(true)[ FD ]
Line_2 $$ protected Map<String, Object> processHeadersToSend(Map<String, Object> headers) -->Line_19 $$ initHeaders(headerAccessor)[ CD ]
Line_2 $$ protected Map<String, Object> processHeadersToSend(Map<String, Object> headers) -->Line_20 $$ for (String key : headers.keySet()) [ FD ]
Line_4 $$ SimpMessageHeaderAccessor headerAccessor = SimpMessageHeaderAccessor.create(SimpMessageType.MESSAGE)-->Line_7 $$ return headerAccessor.getMessageHeaders()[ FD ]
Line_21 $$ Object value = headers.get(key)-->Line_22 $$ headerAccessor.setNativeHeader(key, (value != null ? value.toString() : null))[ FD ]
Line_2 $$ protected Map<String, Object> processHeadersToSend(Map<String, Object> headers) -->Line_21 $$ Object value = headers.get(key)[ FD ]
Line_2 $$ protected Map<String, Object> processHeadersToSend(Map<String, Object> headers) -->Line_9 $$ if (headers.containsKey(NativeMessageHeaderAccessor.NATIVE_HEADERS)) [ FD ]
Line_20 $$ for (String key : headers.keySet()) -->Line_22 $$ headerAccessor.setNativeHeader(key, (value != null ? value.toString() : null))[ FD ]
Line_2 $$ protected Map<String, Object> processHeadersToSend(Map<String, Object> headers) -->Line_9 $$ if (headers.containsKey(NativeMessageHeaderAccessor.NATIVE_HEADERS)) [ CD ]
Line_9 $$ if (headers.containsKey(NativeMessageHeaderAccessor.NATIVE_HEADERS)) -->Line_10 $$ return headers[ CD ]
Line_3 $$ if (headers == null) -->Line_6 $$ headerAccessor.setLeaveMutable(true)[ CD ]
Line_12 $$ if (headers instanceof MessageHeaders) -->Line_13 $$ SimpMessageHeaderAccessor accessor = MessageHeaderAccessor.getAccessor((MessageHeaders) headers, SimpMessageHeaderAccessor.class)[ CD ]
Line_2 $$ protected Map<String, Object> processHeadersToSend(Map<String, Object> headers) -->Line_24 $$ return headerAccessor.getMessageHeaders()[ CD ]
Line_2 $$ protected Map<String, Object> processHeadersToSend(Map<String, Object> headers) -->Line_3 $$ if (headers == null) [ FD ]
Line_14 $$ if (accessor != null) -->Line_15 $$ return headers[ CD ]
Line_3 $$ if (headers == null) -->Line_5 $$ initHeaders(headerAccessor)[ CD ]
Line_3 $$ if (headers == null) -->Line_4 $$ SimpMessageHeaderAccessor headerAccessor = SimpMessageHeaderAccessor.create(SimpMessageType.MESSAGE)[ CD ]
Line_12 $$ if (headers instanceof MessageHeaders) -->Line_14 $$ if (accessor != null) [ CD ]
Line_2 $$ protected Map<String, Object> processHeadersToSend(Map<String, Object> headers) -->Line_12 $$ if (headers instanceof MessageHeaders) [ CD ]
Line_4 $$ SimpMessageHeaderAccessor headerAccessor = SimpMessageHeaderAccessor.create(SimpMessageType.MESSAGE)-->Line_5 $$ initHeaders(headerAccessor)[ FD ]
Line_2 $$ protected Map<String, Object> processHeadersToSend(Map<String, Object> headers) -->Line_12 $$ if (headers instanceof MessageHeaders) [ FD ]
