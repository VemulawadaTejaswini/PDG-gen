Line_10 $$ if (contextName.equals("jvm") && outRec.getTag("processName") != null) -->Line_12 $$ sb.append('.')[ CD ]
Line_21 $$ if (type != null) -->Line_24 $$ sb.setLength(sbBaseLen)[ CD ]
Line_10 $$ if (contextName.equals("jvm") && outRec.getTag("processName") != null) -->Line_11 $$ sb.append(outRec.getTag("processName"))[ CD ]
Line_21 $$ if (type != null) -->Line_23 $$ emitMetric(sb.toString(), type, metric.toString())[ CD ]
Line_19 $$ Object metric = outRec.getMetric(metricName)-->Line_20 $$ String type = typeTable.get(metric.getClass())[ FD ]
Line_21 $$ if (type != null) -->Line_22 $$ sb.append(metricName)[ CD ]
Line_19 $$ Object metric = outRec.getMetric(metricName)-->Line_26 $$ LOG.warn("Unknown metrics type: " + metric.getClass())[ FD ]
Line_19 $$ Object metric = outRec.getMetric(metricName)-->Line_23 $$ emitMetric(sb.toString(), type, metric.toString())[ FD ]
Line_20 $$ String type = typeTable.get(metric.getClass())-->Line_21 $$ if (type != null) [ FD ]
Line_21 $$ if (type != null) -->Line_26 $$ LOG.warn("Unknown metrics type: " + metric.getClass())[ CD ]
Line_20 $$ String type = typeTable.get(metric.getClass())-->Line_23 $$ emitMetric(sb.toString(), type, metric.toString())[ FD ]
Line_16 $$ int sbBaseLen = sb.length()-->Line_24 $$ sb.setLength(sbBaseLen)[ FD ]
