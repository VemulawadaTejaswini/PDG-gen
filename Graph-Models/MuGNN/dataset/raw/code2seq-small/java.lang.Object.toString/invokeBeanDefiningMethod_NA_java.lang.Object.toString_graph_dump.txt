Line_24 $$ if (args[0] instanceof RuntimeBeanReference) -->Line_25 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName)[ CD ]
Line_15 $$ if (args.length - 1 != 1) -->Line_18 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName, beanClass)[ CD ]
Line_14 $$ if (hasClosureArgument) -->Line_15 $$ if (args.length - 1 != 1) [ CD ]
Line_15 $$ if (args.length - 1 != 1) -->Line_16 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName, beanClass, resolveConstructorArguments(args, 1, args.length - 1))[ CD ]
Line_32 $$ Map namedArgs = (Map) args[0]-->Line_35 $$ setProperty(propName, namedArgs.get(propName))[ FD ]
Line_14 $$ if (hasClosureArgument) -->Line_21 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName, beanClass, resolveConstructorArguments(args, 1, args.length))[ CD ]
Line_69 $$ GroovyBeanDefinitionWrapper beanDefinition = currentBeanDefinition-->Line_72 $$ getRegistry().registerBeanDefinition(beanName, beanDefinition.getBeanDefinition())[ FD ]
Line_69 $$ GroovyBeanDefinitionWrapper beanDefinition = currentBeanDefinition-->Line_71 $$ beanDefinition.getBeanDefinition().setAttribute(GroovyBeanDefinitionWrapper.class.getName(), beanDefinition)[ FD ]
Line_32 $$ Map namedArgs = (Map) args[0]-->Line_33 $$ for (Object o : namedArgs.keySet()) [ FD ]
Line_63 $$ if (hasClosureArgument) -->Line_67 $$ callable.call(new Object[] [ CD ]
Line_64 $$ Closure callable = (Closure) args[args.length - 1]-->Line_65 $$ callable.setDelegate(this)[ FD ]
Line_63 $$ if (hasClosureArgument) -->Line_64 $$ Closure callable = (Closure) args[args.length - 1][ CD ]
Line_13 $$ if (args.length >= 1) -->Line_14 $$ if (hasClosureArgument) [ CD ]
Line_64 $$ Closure callable = (Closure) args[args.length - 1]-->Line_66 $$ callable.setResolveStrategy(Closure.DELEGATE_FIRST)[ FD ]
Line_11 $$ if (args[0] instanceof Class) -->Line_13 $$ if (args.length >= 1) [ CD ]
Line_64 $$ Closure callable = (Closure) args[args.length - 1]-->Line_67 $$ callable.call(new Object[] [ FD ]
Line_11 $$ if (args[0] instanceof Class) -->Line_12 $$ Class<?> beanClass = (args[0] instanceof Class ? (Class) args[0] : args[0].getClass())[ CD ]
Line_27 $$ if (args[0] instanceof Map) -->Line_56 $$ if (args[0] instanceof Closure) [ CD ]
Line_34 $$ String propName = (String) o-->Line_35 $$ setProperty(propName, namedArgs.get(propName))[ FD ]
Line_11 $$ if (args[0] instanceof Class) -->Line_24 $$ if (args[0] instanceof RuntimeBeanReference) [ CD ]
Line_56 $$ if (args[0] instanceof Closure) -->Line_58 $$ this.currentBeanDefinition.getBeanDefinition().setAbstract(true)[ CD ]
Line_63 $$ if (hasClosureArgument) -->Line_66 $$ callable.setResolveStrategy(Closure.DELEGATE_FIRST)[ CD ]
Line_24 $$ if (args[0] instanceof RuntimeBeanReference) -->Line_27 $$ if (args[0] instanceof Map) [ CD ]
Line_56 $$ if (args[0] instanceof Closure) -->Line_60 $$ List constructorArgs = resolveConstructorArguments(args, 0, hasClosureArgument ? args.length - 1 : args.length)[ CD ]
Line_63 $$ if (hasClosureArgument) -->Line_65 $$ callable.setDelegate(this)[ CD ]
Line_56 $$ if (args[0] instanceof Closure) -->Line_57 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName)[ CD ]
Line_24 $$ if (args[0] instanceof RuntimeBeanReference) -->Line_26 $$ this.currentBeanDefinition.getBeanDefinition().setFactoryBeanName(((RuntimeBeanReference) args[0]).getBeanName())[ CD ]
