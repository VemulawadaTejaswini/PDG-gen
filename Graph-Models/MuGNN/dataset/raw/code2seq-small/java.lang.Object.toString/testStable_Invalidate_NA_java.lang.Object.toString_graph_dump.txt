Line_2 $$ public void testStable_Invalidate() throws Throwable -->Line_15 $$ assertEquals(oldElement.toString(), stable.toString())[ CD ]
Line_3 $$ final MyElement oldElement = createElement("")-->Line_15 $$ assertEquals(oldElement.toString(), stable.toString())[ FD ]
Line_5 $$ final MyElement stable = getDomManager().createStableValue(new Factory<MyElement>() -->Line_15 $$ assertEquals(oldElement.toString(), stable.toString())[ FD ]
Line_2 $$ public void testStable_Invalidate() throws Throwable -->Line_5 $$ final MyElement stable = getDomManager().createStableValue(new Factory<MyElement>() [ CD ]
Line_2 $$ public void testStable_Invalidate() throws Throwable -->Line_12 $$ element[0] = null[ CD ]
Line_5 $$ final MyElement stable = getDomManager().createStableValue(new Factory<MyElement>() -->Line_9 $$ return element[0][ CD ]
Line_2 $$ public void testStable_Invalidate() throws Throwable -->Line_4 $$ final MyElement[] element = new MyElement[] [ CD ]
Line_2 $$ public void testStable_Invalidate() throws Throwable -->Line_13 $$ ((StableElement) stable).invalidate()[ CD ]
Line_2 $$ public void testStable_Invalidate() throws Throwable -->Line_14 $$ assertTrue(stable.equals(stable))[ CD ]
Line_5 $$ final MyElement stable = getDomManager().createStableValue(new Factory<MyElement>() -->Line_14 $$ assertTrue(stable.equals(stable))[ FD ]
Line_2 $$ public void testStable_Invalidate() throws Throwable -->Line_3 $$ final MyElement oldElement = createElement("")[ CD ]
