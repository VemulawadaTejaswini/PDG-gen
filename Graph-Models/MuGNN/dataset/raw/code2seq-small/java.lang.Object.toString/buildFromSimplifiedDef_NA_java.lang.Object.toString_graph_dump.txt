Line_42 $$ if (type != null) -->Line_43 $$ builder.endObject()[ CD ]
Line_26 $$ String fieldName = source[i++].toString()-->Line_30 $$ builder.startObject(fieldName)[ FD ]
Line_6 $$ if (type != null) -->Line_7 $$ builder.startObject(type)[ CD ]
Line_25 $$ for (int i = 0; i < source.length; i++) -->Line_26 $$ String fieldName = source[i++].toString()[ CD ]
Line_25 $$ for (int i = 0; i < source.length; i++) -->Line_26 $$ String fieldName = source[i++].toString()[ FD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder()-->Line_45 $$ builder.endObject()[ FD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder()-->Line_39 $$ builder.endObject()[ FD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder()-->Line_21 $$ builder.endObject()[ FD ]
Line_11 $$ if (RESERVED_FIELDS.contains(fieldName)) -->Line_13 $$ String[] s1 = Strings.splitStringByCommaToArray(source[i].toString())[ CD ]
Line_9 $$ for (int i = 0; i < source.length; i++) -->Line_10 $$ String fieldName = source[i++].toString()[ CD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder()-->Line_12 $$ builder.startObject(fieldName)[ FD ]
Line_25 $$ for (int i = 0; i < source.length; i++) -->Line_27 $$ if (RESERVED_FIELDS.contains(fieldName)) [ CD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder()-->Line_37 $$ builder.field(s2[0], s2[1])[ FD ]
Line_25 $$ for (int i = 0; i < source.length; i++) -->Line_30 $$ builder.startObject(fieldName)[ CD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder()-->Line_24 $$ builder.startObject("properties")[ FD ]
Line_25 $$ for (int i = 0; i < source.length; i++) -->Line_39 $$ builder.endObject()[ CD ]
Line_32 $$ for (String s : s1) -->Line_33 $$ String[] s2 = Strings.split(s, "=")[ FD ]
Line_14 $$ for (String s : s1) -->Line_15 $$ String[] s2 = Strings.split(s, "=")[ FD ]
Line_2 $$ public static XContentBuilder buildFromSimplifiedDef(String type, Object... source) -->Line_6 $$ if (type != null) [ FD ]
Line_10 $$ String fieldName = source[i++].toString()-->Line_30 $$ builder.startObject(fieldName)[ FD ]
Line_2 $$ public static XContentBuilder buildFromSimplifiedDef(String type, Object... source) -->Line_7 $$ builder.startObject(type)[ FD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder()-->Line_41 $$ builder.endObject()[ FD ]
Line_14 $$ for (String s : s1) -->Line_33 $$ String[] s2 = Strings.split(s, "=")[ FD ]
Line_9 $$ for (int i = 0; i < source.length; i++) -->Line_26 $$ String fieldName = source[i++].toString()[ FD ]
Line_2 $$ public static XContentBuilder buildFromSimplifiedDef(String type, Object... source) -->Line_42 $$ if (type != null) [ FD ]
Line_26 $$ String fieldName = source[i++].toString()-->Line_27 $$ if (RESERVED_FIELDS.contains(fieldName)) [ FD ]
Line_11 $$ if (RESERVED_FIELDS.contains(fieldName)) -->Line_12 $$ builder.startObject(fieldName)[ CD ]
Line_9 $$ for (int i = 0; i < source.length; i++) -->Line_10 $$ String fieldName = source[i++].toString()[ FD ]
Line_10 $$ String fieldName = source[i++].toString()-->Line_12 $$ builder.startObject(fieldName)[ FD ]
Line_10 $$ String fieldName = source[i++].toString()-->Line_11 $$ if (RESERVED_FIELDS.contains(fieldName)) [ FD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder()-->Line_19 $$ builder.field(s2[0], s2[1])[ FD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder()-->Line_5 $$ builder.startObject()[ FD ]
Line_25 $$ for (int i = 0; i < source.length; i++) -->Line_31 $$ String[] s1 = Strings.splitStringByCommaToArray(source[i].toString())[ CD ]
Line_9 $$ for (int i = 0; i < source.length; i++) -->Line_11 $$ if (RESERVED_FIELDS.contains(fieldName)) [ CD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder()-->Line_43 $$ builder.endObject()[ FD ]
Line_9 $$ for (int i = 0; i < source.length; i++) -->Line_25 $$ for (int i = 0; i < source.length; i++) [ FD ]
Line_11 $$ if (RESERVED_FIELDS.contains(fieldName)) -->Line_21 $$ builder.endObject()[ CD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder()-->Line_7 $$ builder.startObject(type)[ FD ]
Line_10 $$ String fieldName = source[i++].toString()-->Line_27 $$ if (RESERVED_FIELDS.contains(fieldName)) [ FD ]
Line_4 $$ XContentBuilder builder = XContentFactory.jsonBuilder()-->Line_30 $$ builder.startObject(fieldName)[ FD ]
