Line_7 $$ if (value instanceof Node) -->Line_9 $$ if (!node.isValid()) [ CD ]
Line_6 $$ StringBuilder result = new StringBuilder()-->Line_30 $$ result.append(UsageViewBundle.message("node.invalid"))[ FD ]
Line_43 $$ if (showAsReadOnly) -->Line_44 $$ result.append(UsageViewBundle.message("node.readonly")).append(" ")[ CD ]
Line_6 $$ StringBuilder result = new StringBuilder()-->Line_53 $$ result.append((String) userObject)[ FD ]
Line_7 $$ if (value instanceof Node) -->Line_12 $$ if (myPresentation.isShowReadOnlyStatusAsRed() && node.isReadOnly()) [ CD ]
Line_34 $$ if (node.isRoot()) -->Line_35 $$ result.append(StringUtil.capitalize(myPresentation.getUsagesWord()))[ CD ]
Line_24 $$ if (showAsReadOnly) -->Line_25 $$ result.append(UsageViewBundle.message("node.readonly")).append(" ")[ CD ]
Line_21 $$ if (usageTarget.isValid()) -->Line_30 $$ result.append(UsageViewBundle.message("node.invalid"))[ CD ]
Line_52 $$ if (userObject instanceof String) -->Line_55 $$ result.append(userObject == null ? "" : userObject.toString())[ CD ]
Line_21 $$ if (usageTarget.isValid()) -->Line_28 $$ result.append(text == null ? "" : text)[ CD ]
Line_8 $$ Node node = (Node) value-->Line_39 $$ int count = node.getRecursiveUsageCount()[ FD ]
Line_6 $$ StringBuilder result = new StringBuilder()-->Line_58 $$ result.append(value)[ FD ]
Line_8 $$ Node node = (Node) value-->Line_47 $$ TextChunk[] text = node.getUsage().getPresentation().getText()[ FD ]
Line_18 $$ Object userObject = treeNode.getUserObject()-->Line_19 $$ if (userObject instanceof UsageTarget) [ FD ]
Line_6 $$ StringBuilder result = new StringBuilder()-->Line_10 $$ result.append(UsageViewBundle.message("node.invalid")).append(" ")[ FD ]
Line_6 $$ StringBuilder result = new StringBuilder()-->Line_60 $$ return result.toString()[ FD ]
Line_22 $$ final ItemPresentation presentation = usageTarget.getPresentation()-->Line_27 $$ final String text = presentation.getPresentableText()[ FD ]
Line_6 $$ StringBuilder result = new StringBuilder()-->Line_25 $$ result.append(UsageViewBundle.message("node.readonly")).append(" ")[ FD ]
Line_6 $$ StringBuilder result = new StringBuilder()-->Line_35 $$ result.append(StringUtil.capitalize(myPresentation.getUsagesWord()))[ FD ]
Line_6 $$ StringBuilder result = new StringBuilder()-->Line_44 $$ result.append(UsageViewBundle.message("node.readonly")).append(" ")[ FD ]
Line_41 $$ if (treeNode instanceof UsageNode) -->Line_43 $$ if (showAsReadOnly) [ CD ]
Line_32 $$ if (treeNode instanceof GroupNode) -->Line_40 $$ result.append(" (").append(StringUtil.pluralize(count + " " + myPresentation.getUsagesWord(), count)).append(")")[ CD ]
Line_5 $$ boolean showAsReadOnly = false-->Line_13 $$ showAsReadOnly = true[ FD ]
Line_21 $$ if (usageTarget.isValid()) -->Line_24 $$ if (showAsReadOnly) [ CD ]
Line_39 $$ int count = node.getRecursiveUsageCount()-->Line_40 $$ result.append(" (").append(StringUtil.pluralize(count + " " + myPresentation.getUsagesWord(), count)).append(")")[ FD ]
Line_6 $$ StringBuilder result = new StringBuilder()-->Line_40 $$ result.append(" (").append(StringUtil.pluralize(count + " " + myPresentation.getUsagesWord(), count)).append(")")[ FD ]
Line_19 $$ if (userObject instanceof UsageTarget) -->Line_20 $$ UsageTarget usageTarget = (UsageTarget) userObject[ CD ]
Line_6 $$ StringBuilder result = new StringBuilder()-->Line_37 $$ result.append(node.getGroup().getText(myView))[ FD ]
Line_6 $$ StringBuilder result = new StringBuilder()-->Line_49 $$ result.append(textChunk.getText())[ FD ]
Line_8 $$ Node node = (Node) value-->Line_46 $$ if (node.isValid()) [ FD ]
Line_32 $$ if (treeNode instanceof GroupNode) -->Line_41 $$ if (treeNode instanceof UsageNode) [ CD ]
Line_32 $$ if (treeNode instanceof GroupNode) -->Line_39 $$ int count = node.getRecursiveUsageCount()[ CD ]
Line_21 $$ if (usageTarget.isValid()) -->Line_22 $$ final ItemPresentation presentation = usageTarget.getPresentation()[ CD ]
Line_17 $$ DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode) value-->Line_41 $$ if (treeNode instanceof UsageNode) [ FD ]
Line_18 $$ Object userObject = treeNode.getUserObject()-->Line_52 $$ if (userObject instanceof String) [ FD ]
Line_12 $$ if (myPresentation.isShowReadOnlyStatusAsRed() && node.isReadOnly()) -->Line_13 $$ showAsReadOnly = true[ CD ]
Line_21 $$ if (usageTarget.isValid()) -->Line_23 $$ LOG.assertTrue(presentation != null)[ CD ]
Line_8 $$ Node node = (Node) value-->Line_9 $$ if (!node.isValid()) [ FD ]
Line_16 $$ if (value instanceof DefaultMutableTreeNode) -->Line_19 $$ if (userObject instanceof UsageTarget) [ CD ]
Line_17 $$ DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode) value-->Line_32 $$ if (treeNode instanceof GroupNode) [ FD ]
Line_19 $$ if (userObject instanceof UsageTarget) -->Line_21 $$ if (usageTarget.isValid()) [ CD ]
Line_20 $$ UsageTarget usageTarget = (UsageTarget) userObject-->Line_22 $$ final ItemPresentation presentation = usageTarget.getPresentation()[ FD ]
Line_41 $$ if (treeNode instanceof UsageNode) -->Line_52 $$ if (userObject instanceof String) [ CD ]
Line_8 $$ Node node = (Node) value-->Line_34 $$ if (node.isRoot()) [ FD ]
Line_6 $$ StringBuilder result = new StringBuilder()-->Line_55 $$ result.append(userObject == null ? "" : userObject.toString())[ FD ]
Line_34 $$ if (node.isRoot()) -->Line_37 $$ result.append(node.getGroup().getText(myView))[ CD ]
Line_8 $$ Node node = (Node) value-->Line_12 $$ if (myPresentation.isShowReadOnlyStatusAsRed() && node.isReadOnly()) [ FD ]
Line_16 $$ if (value instanceof DefaultMutableTreeNode) -->Line_58 $$ result.append(value)[ CD ]
Line_9 $$ if (!node.isValid()) -->Line_10 $$ result.append(UsageViewBundle.message("node.invalid")).append(" ")[ CD ]
Line_46 $$ if (node.isValid()) -->Line_47 $$ TextChunk[] text = node.getUsage().getPresentation().getText()[ CD ]
Line_19 $$ if (userObject instanceof UsageTarget) -->Line_32 $$ if (treeNode instanceof GroupNode) [ CD ]
Line_18 $$ Object userObject = treeNode.getUserObject()-->Line_55 $$ result.append(userObject == null ? "" : userObject.toString())[ FD ]
Line_41 $$ if (treeNode instanceof UsageNode) -->Line_46 $$ if (node.isValid()) [ CD ]
Line_17 $$ DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode) value-->Line_18 $$ Object userObject = treeNode.getUserObject()[ FD ]
Line_16 $$ if (value instanceof DefaultMutableTreeNode) -->Line_18 $$ Object userObject = treeNode.getUserObject()[ CD ]
Line_21 $$ if (usageTarget.isValid()) -->Line_27 $$ final String text = presentation.getPresentableText()[ CD ]
Line_8 $$ Node node = (Node) value-->Line_37 $$ result.append(node.getGroup().getText(myView))[ FD ]
Line_48 $$ for (TextChunk textChunk : text) -->Line_49 $$ result.append(textChunk.getText())[ FD ]
Line_52 $$ if (userObject instanceof String) -->Line_53 $$ result.append((String) userObject)[ CD ]
Line_7 $$ if (value instanceof Node) -->Line_8 $$ Node node = (Node) value[ CD ]
Line_16 $$ if (value instanceof DefaultMutableTreeNode) -->Line_17 $$ DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode) value[ CD ]
Line_20 $$ UsageTarget usageTarget = (UsageTarget) userObject-->Line_21 $$ if (usageTarget.isValid()) [ FD ]
Line_6 $$ StringBuilder result = new StringBuilder()-->Line_28 $$ result.append(text == null ? "" : text)[ FD ]
Line_32 $$ if (treeNode instanceof GroupNode) -->Line_34 $$ if (node.isRoot()) [ CD ]
