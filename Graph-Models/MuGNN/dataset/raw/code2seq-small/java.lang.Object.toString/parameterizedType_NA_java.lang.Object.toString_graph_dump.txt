Line_4 $$ ParameterizedType type = (ParameterizedType) SerializableTypeWrapper.forField(Fields.class.getField("parameterizedType"))-->Line_8 $$ assertSerialzable(type.getRawType())[ FD ]
Line_4 $$ ParameterizedType type = (ParameterizedType) SerializableTypeWrapper.forField(Fields.class.getField("parameterizedType"))-->Line_9 $$ assertSerialzable(type.getActualTypeArguments())[ FD ]
Line_4 $$ ParameterizedType type = (ParameterizedType) SerializableTypeWrapper.forField(Fields.class.getField("parameterizedType"))-->Line_7 $$ assertSerialzable(type.getOwnerType())[ FD ]
Line_4 $$ ParameterizedType type = (ParameterizedType) SerializableTypeWrapper.forField(Fields.class.getField("parameterizedType"))-->Line_6 $$ assertSerialzable(type)[ FD ]
Line_4 $$ ParameterizedType type = (ParameterizedType) SerializableTypeWrapper.forField(Fields.class.getField("parameterizedType"))-->Line_10 $$ assertSerialzable(type.getActualTypeArguments()[0])[ FD ]
Line_4 $$ ParameterizedType type = (ParameterizedType) SerializableTypeWrapper.forField(Fields.class.getField("parameterizedType"))-->Line_5 $$ assertThat(type.toString(), equalTo("java.util.List<java.lang.String>"))[ FD ]
