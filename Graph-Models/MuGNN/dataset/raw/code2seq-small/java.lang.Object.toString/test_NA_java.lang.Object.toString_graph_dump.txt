Line_16 $$ names = bean.getNodes()-->Line_23 $$ assertTrue(names.contains(NODE_1))[ FD ]
Line_12 $$ names = bean.getNodes()-->Line_28 $$ assertTrue(names.contains(NODE_2))[ FD ]
Line_6 $$ RegistryRetriever bean = context.lookupStateless(RegistryRetrieverBean.class, RegistryRetriever.class)-->Line_7 $$ Collection<String> names = bean.getNodes()[ FD ]
Line_12 $$ names = bean.getNodes()-->Line_13 $$ assertEquals(1, names.size())[ FD ]
Line_25 $$ names = bean.getNodes()-->Line_27 $$ assertTrue(names.contains(NODE_1))[ FD ]
Line_16 $$ names = bean.getNodes()-->Line_21 $$ names = bean.getNodes()[ FD ]
Line_25 $$ names = bean.getNodes()-->Line_26 $$ assertEquals(2, names.size())[ FD ]
Line_16 $$ names = bean.getNodes()-->Line_18 $$ assertTrue(names.contains(NODE_1))[ FD ]
Line_4 $$ ContextSelector<EJBClientContext> selector = EJBClientContextSelector.setup(CLIENT_PROPERTIES)-->Line_32 $$ EJBClientContext.setSelector(selector)[ FD ]
Line_21 $$ names = bean.getNodes()-->Line_22 $$ assertEquals(1, names.size())[ FD ]
Line_7 $$ Collection<String> names = bean.getNodes()-->Line_25 $$ names = bean.getNodes()[ FD ]
Line_16 $$ names = bean.getNodes()-->Line_22 $$ assertEquals(1, names.size())[ FD ]
Line_7 $$ Collection<String> names = bean.getNodes()-->Line_17 $$ assertEquals(2, names.size())[ FD ]
Line_21 $$ names = bean.getNodes()-->Line_25 $$ names = bean.getNodes()[ FD ]
Line_7 $$ Collection<String> names = bean.getNodes()-->Line_26 $$ assertEquals(2, names.size())[ FD ]
Line_16 $$ names = bean.getNodes()-->Line_28 $$ assertTrue(names.contains(NODE_2))[ FD ]
Line_7 $$ Collection<String> names = bean.getNodes()-->Line_18 $$ assertTrue(names.contains(NODE_1))[ FD ]
Line_12 $$ names = bean.getNodes()-->Line_25 $$ names = bean.getNodes()[ FD ]
Line_12 $$ names = bean.getNodes()-->Line_14 $$ assertTrue(names.contains(NODE_2))[ FD ]
Line_6 $$ RegistryRetriever bean = context.lookupStateless(RegistryRetrieverBean.class, RegistryRetriever.class)-->Line_16 $$ names = bean.getNodes()[ FD ]
Line_16 $$ names = bean.getNodes()-->Line_25 $$ names = bean.getNodes()[ FD ]
Line_21 $$ names = bean.getNodes()-->Line_27 $$ assertTrue(names.contains(NODE_1))[ FD ]
Line_16 $$ names = bean.getNodes()-->Line_19 $$ assertTrue(names.contains(NODE_2))[ FD ]
Line_5 $$ try (EJBDirectory context = new RemoteEJBDirectory(MODULE_NAME)) -->Line_6 $$ RegistryRetriever bean = context.lookupStateless(RegistryRetrieverBean.class, RegistryRetriever.class)[ FD ]
Line_7 $$ Collection<String> names = bean.getNodes()-->Line_27 $$ assertTrue(names.contains(NODE_1))[ FD ]
Line_12 $$ names = bean.getNodes()-->Line_19 $$ assertTrue(names.contains(NODE_2))[ FD ]
Line_25 $$ names = bean.getNodes()-->Line_28 $$ assertTrue(names.contains(NODE_2))[ FD ]
Line_7 $$ Collection<String> names = bean.getNodes()-->Line_23 $$ assertTrue(names.contains(NODE_1))[ FD ]
Line_12 $$ names = bean.getNodes()-->Line_22 $$ assertEquals(1, names.size())[ FD ]
Line_7 $$ Collection<String> names = bean.getNodes()-->Line_8 $$ assertEquals(2, names.size())[ FD ]
Line_12 $$ names = bean.getNodes()-->Line_17 $$ assertEquals(2, names.size())[ FD ]
Line_16 $$ names = bean.getNodes()-->Line_17 $$ assertEquals(2, names.size())[ FD ]
Line_6 $$ RegistryRetriever bean = context.lookupStateless(RegistryRetrieverBean.class, RegistryRetriever.class)-->Line_21 $$ names = bean.getNodes()[ FD ]
Line_16 $$ names = bean.getNodes()-->Line_26 $$ assertEquals(2, names.size())[ FD ]
Line_12 $$ names = bean.getNodes()-->Line_18 $$ assertTrue(names.contains(NODE_1))[ FD ]
Line_7 $$ Collection<String> names = bean.getNodes()-->Line_22 $$ assertEquals(1, names.size())[ FD ]
Line_16 $$ names = bean.getNodes()-->Line_27 $$ assertTrue(names.contains(NODE_1))[ FD ]
Line_7 $$ Collection<String> names = bean.getNodes()-->Line_28 $$ assertTrue(names.contains(NODE_2))[ FD ]
Line_6 $$ RegistryRetriever bean = context.lookupStateless(RegistryRetrieverBean.class, RegistryRetriever.class)-->Line_25 $$ names = bean.getNodes()[ FD ]
Line_12 $$ names = bean.getNodes()-->Line_26 $$ assertEquals(2, names.size())[ FD ]
Line_6 $$ RegistryRetriever bean = context.lookupStateless(RegistryRetrieverBean.class, RegistryRetriever.class)-->Line_12 $$ names = bean.getNodes()[ FD ]
Line_7 $$ Collection<String> names = bean.getNodes()-->Line_13 $$ assertEquals(1, names.size())[ FD ]
Line_12 $$ names = bean.getNodes()-->Line_21 $$ names = bean.getNodes()[ FD ]
Line_7 $$ Collection<String> names = bean.getNodes()-->Line_16 $$ names = bean.getNodes()[ FD ]
Line_7 $$ Collection<String> names = bean.getNodes()-->Line_10 $$ assertTrue(names.toString(), names.contains(NODE_2))[ FD ]
Line_12 $$ names = bean.getNodes()-->Line_27 $$ assertTrue(names.contains(NODE_1))[ FD ]
Line_7 $$ Collection<String> names = bean.getNodes()-->Line_12 $$ names = bean.getNodes()[ FD ]
Line_7 $$ Collection<String> names = bean.getNodes()-->Line_21 $$ names = bean.getNodes()[ FD ]
Line_21 $$ names = bean.getNodes()-->Line_28 $$ assertTrue(names.contains(NODE_2))[ FD ]
Line_7 $$ Collection<String> names = bean.getNodes()-->Line_14 $$ assertTrue(names.contains(NODE_2))[ FD ]
Line_21 $$ names = bean.getNodes()-->Line_26 $$ assertEquals(2, names.size())[ FD ]
Line_21 $$ names = bean.getNodes()-->Line_23 $$ assertTrue(names.contains(NODE_1))[ FD ]
Line_12 $$ names = bean.getNodes()-->Line_23 $$ assertTrue(names.contains(NODE_1))[ FD ]
Line_12 $$ names = bean.getNodes()-->Line_16 $$ names = bean.getNodes()[ FD ]
Line_7 $$ Collection<String> names = bean.getNodes()-->Line_19 $$ assertTrue(names.contains(NODE_2))[ FD ]
Line_7 $$ Collection<String> names = bean.getNodes()-->Line_9 $$ assertTrue(names.toString(), names.contains(NODE_1))[ FD ]
