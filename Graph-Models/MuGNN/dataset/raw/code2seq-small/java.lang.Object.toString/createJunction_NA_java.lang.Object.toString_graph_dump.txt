Line_2 $$ public static File createJunction(@NotNull String target, @NotNull String junction) throws InterruptedException, IOException -->Line_6 $$ final String exePath = getJunctionExePath()[ CD ]
Line_8 $$ final ProcessBuilder command = new ProcessBuilder(exePath, junctionFile.getPath(), targetFile.getPath())-->Line_10 $$ assertEquals(command.command().toString(), 0, res)[ FD ]
Line_7 $$ final File junctionFile = getFullLinkPath(junction)-->Line_11 $$ assertTrue("target=" + target + ", link=" + junctionFile, junctionFile.isDirectory())[ FD ]
Line_9 $$ final int res = runCommand(command)-->Line_10 $$ assertEquals(command.command().toString(), 0, res)[ FD ]
Line_2 $$ public static File createJunction(@NotNull String target, @NotNull String junction) throws InterruptedException, IOException -->Line_12 $$ return junctionFile[ CD ]
Line_2 $$ public static File createJunction(@NotNull String target, @NotNull String junction) throws InterruptedException, IOException -->Line_9 $$ final int res = runCommand(command)[ CD ]
Line_2 $$ public static File createJunction(@NotNull String target, @NotNull String junction) throws InterruptedException, IOException -->Line_5 $$ assertTrue(targetFile.getPath(), targetFile.isDirectory())[ CD ]
Line_2 $$ public static File createJunction(@NotNull String target, @NotNull String junction) throws InterruptedException, IOException -->Line_4 $$ final File targetFile = new File(FileUtil.toSystemDependentName(target))[ FD ]
Line_4 $$ final File targetFile = new File(FileUtil.toSystemDependentName(target))-->Line_5 $$ assertTrue(targetFile.getPath(), targetFile.isDirectory())[ FD ]
Line_4 $$ final File targetFile = new File(FileUtil.toSystemDependentName(target))-->Line_8 $$ final ProcessBuilder command = new ProcessBuilder(exePath, junctionFile.getPath(), targetFile.getPath())[ FD ]
Line_2 $$ public static File createJunction(@NotNull String target, @NotNull String junction) throws InterruptedException, IOException -->Line_4 $$ final File targetFile = new File(FileUtil.toSystemDependentName(target))[ CD ]
Line_2 $$ public static File createJunction(@NotNull String target, @NotNull String junction) throws InterruptedException, IOException -->Line_11 $$ assertTrue("target=" + target + ", link=" + junctionFile, junctionFile.isDirectory())[ CD ]
Line_2 $$ public static File createJunction(@NotNull String target, @NotNull String junction) throws InterruptedException, IOException -->Line_10 $$ assertEquals(command.command().toString(), 0, res)[ CD ]
Line_2 $$ public static File createJunction(@NotNull String target, @NotNull String junction) throws InterruptedException, IOException -->Line_3 $$ assertTrue(SystemInfo.isWindows)[ CD ]
Line_8 $$ final ProcessBuilder command = new ProcessBuilder(exePath, junctionFile.getPath(), targetFile.getPath())-->Line_9 $$ final int res = runCommand(command)[ FD ]
Line_2 $$ public static File createJunction(@NotNull String target, @NotNull String junction) throws InterruptedException, IOException -->Line_7 $$ final File junctionFile = getFullLinkPath(junction)[ CD ]
Line_2 $$ public static File createJunction(@NotNull String target, @NotNull String junction) throws InterruptedException, IOException -->Line_7 $$ final File junctionFile = getFullLinkPath(junction)[ FD ]
Line_2 $$ public static File createJunction(@NotNull String target, @NotNull String junction) throws InterruptedException, IOException -->Line_8 $$ final ProcessBuilder command = new ProcessBuilder(exePath, junctionFile.getPath(), targetFile.getPath())[ CD ]
Line_7 $$ final File junctionFile = getFullLinkPath(junction)-->Line_8 $$ final ProcessBuilder command = new ProcessBuilder(exePath, junctionFile.getPath(), targetFile.getPath())[ FD ]
