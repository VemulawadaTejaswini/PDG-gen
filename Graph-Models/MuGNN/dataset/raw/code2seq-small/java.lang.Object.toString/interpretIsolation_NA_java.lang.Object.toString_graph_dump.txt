Line_2 $$ public static Integer interpretIsolation(Object setting) -->Line_3 $$ if (setting == null) [ FD ]
Line_9 $$ final String settingAsString = setting.toString()-->Line_14 $$ return ISOLATION_VALUE_MAP.get(settingAsString)[ FD ]
Line_9 $$ final String settingAsString = setting.toString()-->Line_18 $$ return Integer.valueOf(settingAsString)[ FD ]
Line_2 $$ public static Integer interpretIsolation(Object setting) -->Line_9 $$ final String settingAsString = setting.toString()[ FD ]
Line_2 $$ public static Integer interpretIsolation(Object setting) -->Line_9 $$ final String settingAsString = setting.toString()[ CD ]
Line_10 $$ if (StringHelper.isEmpty(settingAsString)) -->Line_11 $$ return null[ CD ]
Line_3 $$ if (setting == null) -->Line_4 $$ return null[ CD ]
Line_2 $$ public static Integer interpretIsolation(Object setting) -->Line_3 $$ if (setting == null) [ CD ]
Line_2 $$ public static Integer interpretIsolation(Object setting) -->Line_13 $$ if (ISOLATION_VALUE_MAP.containsKey(settingAsString)) [ CD ]
Line_9 $$ final String settingAsString = setting.toString()-->Line_13 $$ if (ISOLATION_VALUE_MAP.containsKey(settingAsString)) [ FD ]
Line_9 $$ final String settingAsString = setting.toString()-->Line_10 $$ if (StringHelper.isEmpty(settingAsString)) [ FD ]
Line_2 $$ public static Integer interpretIsolation(Object setting) -->Line_6 $$ if (Number.class.isInstance(setting)) [ CD ]
Line_13 $$ if (ISOLATION_VALUE_MAP.containsKey(settingAsString)) -->Line_14 $$ return ISOLATION_VALUE_MAP.get(settingAsString)[ CD ]
Line_2 $$ public static Integer interpretIsolation(Object setting) -->Line_10 $$ if (StringHelper.isEmpty(settingAsString)) [ CD ]
Line_2 $$ public static Integer interpretIsolation(Object setting) -->Line_6 $$ if (Number.class.isInstance(setting)) [ FD ]
Line_6 $$ if (Number.class.isInstance(setting)) -->Line_7 $$ return ((Number) setting).intValue()[ CD ]
