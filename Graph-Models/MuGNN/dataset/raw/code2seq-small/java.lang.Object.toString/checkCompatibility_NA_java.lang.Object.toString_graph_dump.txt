Line_3 $$ MappedFieldType fieldType = fullNameToFieldType.get(fieldMapper.fieldType().name())-->Line_8 $$ fieldType.checkCompatibility(fieldMapper.fieldType(), conflicts, strict)[ FD ]
Line_5 $$ List<String> conflicts = new ArrayList()-->Line_9 $$ if (conflicts.isEmpty() == false) [ FD ]
Line_2 $$ private void checkCompatibility(String type, FieldMapper fieldMapper, boolean updateAllTypes) -->Line_10 $$ throw new IllegalArgumentException("Mapper for [" + fieldMapper.fieldType().name() + "] conflicts with existing mapping in other types:\n" + conflicts.toString())[ FD ]
Line_7 $$ boolean strict = beStrict(type, types, updateAllTypes)-->Line_8 $$ fieldType.checkCompatibility(fieldMapper.fieldType(), conflicts, strict)[ FD ]
Line_2 $$ private void checkCompatibility(String type, FieldMapper fieldMapper, boolean updateAllTypes) -->Line_7 $$ boolean strict = beStrict(type, types, updateAllTypes)[ FD ]
Line_2 $$ private void checkCompatibility(String type, FieldMapper fieldMapper, boolean updateAllTypes) -->Line_6 $$ final Set<String> types = fullNameToTypes.get(fieldMapper.fieldType().name())[ FD ]
Line_4 $$ if (fieldType != null) -->Line_6 $$ final Set<String> types = fullNameToTypes.get(fieldMapper.fieldType().name())[ CD ]
Line_4 $$ if (fieldType != null) -->Line_5 $$ List<String> conflicts = new ArrayList()[ CD ]
Line_3 $$ MappedFieldType fieldType = fullNameToFieldType.get(fieldMapper.fieldType().name())-->Line_4 $$ if (fieldType != null) [ FD ]
Line_2 $$ private void checkCompatibility(String type, FieldMapper fieldMapper, boolean updateAllTypes) -->Line_8 $$ fieldType.checkCompatibility(fieldMapper.fieldType(), conflicts, strict)[ FD ]
Line_4 $$ if (fieldType != null) -->Line_9 $$ if (conflicts.isEmpty() == false) [ CD ]
Line_5 $$ List<String> conflicts = new ArrayList()-->Line_10 $$ throw new IllegalArgumentException("Mapper for [" + fieldMapper.fieldType().name() + "] conflicts with existing mapping in other types:\n" + conflicts.toString())[ FD ]
Line_2 $$ private void checkCompatibility(String type, FieldMapper fieldMapper, boolean updateAllTypes) -->Line_3 $$ MappedFieldType fieldType = fullNameToFieldType.get(fieldMapper.fieldType().name())[ CD ]
Line_6 $$ final Set<String> types = fullNameToTypes.get(fieldMapper.fieldType().name())-->Line_7 $$ boolean strict = beStrict(type, types, updateAllTypes)[ FD ]
Line_4 $$ if (fieldType != null) -->Line_7 $$ boolean strict = beStrict(type, types, updateAllTypes)[ CD ]
Line_5 $$ List<String> conflicts = new ArrayList()-->Line_8 $$ fieldType.checkCompatibility(fieldMapper.fieldType(), conflicts, strict)[ FD ]
Line_4 $$ if (fieldType != null) -->Line_8 $$ fieldType.checkCompatibility(fieldMapper.fieldType(), conflicts, strict)[ CD ]
Line_2 $$ private void checkCompatibility(String type, FieldMapper fieldMapper, boolean updateAllTypes) -->Line_4 $$ if (fieldType != null) [ CD ]
Line_2 $$ private void checkCompatibility(String type, FieldMapper fieldMapper, boolean updateAllTypes) -->Line_3 $$ MappedFieldType fieldType = fullNameToFieldType.get(fieldMapper.fieldType().name())[ FD ]
