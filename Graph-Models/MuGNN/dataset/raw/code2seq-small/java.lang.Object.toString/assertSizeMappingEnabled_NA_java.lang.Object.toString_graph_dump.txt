Line_2 $$ private void assertSizeMappingEnabled(String index, String type, boolean enabled) throws IOException -->Line_5 $$ Map<String, Object> mappingSource = getMappingsResponse.getMappings().get(index).get(type).getSourceAsMap()[ FD ]
Line_3 $$ String errMsg = String.format(Locale.ROOT, "Expected size field mapping to be " + (enabled ? "enabled" : "disabled") + " for %s/%s", index, type)-->Line_9 $$ assertThat(errMsg, sizeAsString, is("[ FD ]
Line_2 $$ private void assertSizeMappingEnabled(String index, String type, boolean enabled) throws IOException -->Line_3 $$ String errMsg = String.format(Locale.ROOT, "Expected size field mapping to be " + (enabled ? "enabled" : "disabled") + " for %s/%s", index, type)[ CD ]
Line_7 $$ String sizeAsString = mappingSource.get("_size").toString()-->Line_8 $$ assertThat(sizeAsString, is(notNullValue()))[ FD ]
Line_2 $$ private void assertSizeMappingEnabled(String index, String type, boolean enabled) throws IOException -->Line_3 $$ String errMsg = String.format(Locale.ROOT, "Expected size field mapping to be " + (enabled ? "enabled" : "disabled") + " for %s/%s", index, type)[ FD ]
Line_2 $$ private void assertSizeMappingEnabled(String index, String type, boolean enabled) throws IOException -->Line_5 $$ Map<String, Object> mappingSource = getMappingsResponse.getMappings().get(index).get(type).getSourceAsMap()[ CD ]
Line_2 $$ private void assertSizeMappingEnabled(String index, String type, boolean enabled) throws IOException -->Line_4 $$ GetMappingsResponse getMappingsResponse = client().admin().indices().prepareGetMappings(index).addTypes(type).get()[ CD ]
Line_4 $$ GetMappingsResponse getMappingsResponse = client().admin().indices().prepareGetMappings(index).addTypes(type).get()-->Line_5 $$ Map<String, Object> mappingSource = getMappingsResponse.getMappings().get(index).get(type).getSourceAsMap()[ FD ]
Line_3 $$ String errMsg = String.format(Locale.ROOT, "Expected size field mapping to be " + (enabled ? "enabled" : "disabled") + " for %s/%s", index, type)-->Line_6 $$ assertThat(errMsg, mappingSource, hasKey("_size"))[ FD ]
Line_5 $$ Map<String, Object> mappingSource = getMappingsResponse.getMappings().get(index).get(type).getSourceAsMap()-->Line_7 $$ String sizeAsString = mappingSource.get("_size").toString()[ FD ]
Line_2 $$ private void assertSizeMappingEnabled(String index, String type, boolean enabled) throws IOException -->Line_7 $$ String sizeAsString = mappingSource.get("_size").toString()[ CD ]
Line_2 $$ private void assertSizeMappingEnabled(String index, String type, boolean enabled) throws IOException -->Line_9 $$ assertThat(errMsg, sizeAsString, is("[ CD ]
Line_7 $$ String sizeAsString = mappingSource.get("_size").toString()-->Line_9 $$ assertThat(errMsg, sizeAsString, is("[ FD ]
Line_2 $$ private void assertSizeMappingEnabled(String index, String type, boolean enabled) throws IOException -->Line_8 $$ assertThat(sizeAsString, is(notNullValue()))[ CD ]
Line_2 $$ private void assertSizeMappingEnabled(String index, String type, boolean enabled) throws IOException -->Line_4 $$ GetMappingsResponse getMappingsResponse = client().admin().indices().prepareGetMappings(index).addTypes(type).get()[ FD ]
Line_2 $$ private void assertSizeMappingEnabled(String index, String type, boolean enabled) throws IOException -->Line_6 $$ assertThat(errMsg, mappingSource, hasKey("_size"))[ CD ]
Line_5 $$ Map<String, Object> mappingSource = getMappingsResponse.getMappings().get(index).get(type).getSourceAsMap()-->Line_6 $$ assertThat(errMsg, mappingSource, hasKey("_size"))[ FD ]
