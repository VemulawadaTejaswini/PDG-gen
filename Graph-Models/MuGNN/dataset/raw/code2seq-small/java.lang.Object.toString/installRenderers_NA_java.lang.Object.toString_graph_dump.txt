Line_12 $$ nameColumn.setCellRenderer(new ColoredTableCellRenderer() -->Line_17 $$ setIcon(settings.getConfiguration().getIcon())[ CD ]
Line_2 $$ private void installRenderers() -->Line_12 $$ nameColumn.setCellRenderer(new ColoredTableCellRenderer() [ CD ]
Line_2 $$ private void installRenderers() -->Line_8 $$ checkboxColumn.setCellRenderer(new BooleanTableCellRenderer())[ CD ]
Line_2 $$ private void installRenderers() -->Line_4 $$ final String header = checkboxColumn.getHeaderValue().toString()[ CD ]
Line_2 $$ private void installRenderers() -->Line_3 $$ final TableColumn checkboxColumn = myTable.getColumnModel().getColumn(ProjectStartupTasksTableModel.IS_SHARED_COLUMN)[ CD ]
Line_16 $$ final RunnerAndConfigurationSettings settings = myModel.getAllConfigurations().get(row)-->Line_17 $$ setIcon(settings.getConfiguration().getIcon())[ FD ]
Line_11 $$ final TableColumn nameColumn = myTable.getColumnModel().getColumn(ProjectStartupTasksTableModel.NAME_COLUMN)-->Line_12 $$ nameColumn.setCellRenderer(new ColoredTableCellRenderer() [ FD ]
Line_3 $$ final TableColumn checkboxColumn = myTable.getColumnModel().getColumn(ProjectStartupTasksTableModel.IS_SHARED_COLUMN)-->Line_8 $$ checkboxColumn.setCellRenderer(new BooleanTableCellRenderer())[ FD ]
Line_2 $$ private void installRenderers() -->Line_10 $$ myTable.getTableHeader().setReorderingAllowed(false)[ CD ]
Line_12 $$ nameColumn.setCellRenderer(new ColoredTableCellRenderer() -->Line_16 $$ final RunnerAndConfigurationSettings settings = myModel.getAllConfigurations().get(row)[ FD ]
Line_2 $$ private void installRenderers() -->Line_9 $$ myTable.getTableHeader().setResizingAllowed(false)[ CD ]
Line_2 $$ private void installRenderers() -->Line_11 $$ final TableColumn nameColumn = myTable.getColumnModel().getColumn(ProjectStartupTasksTableModel.NAME_COLUMN)[ CD ]
Line_3 $$ final TableColumn checkboxColumn = myTable.getColumnModel().getColumn(ProjectStartupTasksTableModel.IS_SHARED_COLUMN)-->Line_4 $$ final String header = checkboxColumn.getHeaderValue().toString()[ FD ]
Line_2 $$ private void installRenderers() -->Line_6 $$ final int width = -new JBCheckBox().getPreferredSize().width + fm.stringWidth(header + "ww")[ CD ]
Line_2 $$ private void installRenderers() -->Line_7 $$ TableUtil.setupCheckboxColumn(checkboxColumn, width)[ CD ]
Line_2 $$ private void installRenderers() -->Line_5 $$ final FontMetrics fm = myTable.getFontMetrics(myTable.getTableHeader().getFont())[ CD ]
Line_16 $$ final RunnerAndConfigurationSettings settings = myModel.getAllConfigurations().get(row)-->Line_18 $$ append(settings.getName())[ FD ]
Line_12 $$ nameColumn.setCellRenderer(new ColoredTableCellRenderer() -->Line_16 $$ final RunnerAndConfigurationSettings settings = myModel.getAllConfigurations().get(row)[ CD ]
Line_6 $$ final int width = -new JBCheckBox().getPreferredSize().width + fm.stringWidth(header + "ww")-->Line_7 $$ TableUtil.setupCheckboxColumn(checkboxColumn, width)[ FD ]
Line_5 $$ final FontMetrics fm = myTable.getFontMetrics(myTable.getTableHeader().getFont())-->Line_6 $$ final int width = -new JBCheckBox().getPreferredSize().width + fm.stringWidth(header + "ww")[ FD ]
Line_3 $$ final TableColumn checkboxColumn = myTable.getColumnModel().getColumn(ProjectStartupTasksTableModel.IS_SHARED_COLUMN)-->Line_7 $$ TableUtil.setupCheckboxColumn(checkboxColumn, width)[ FD ]
Line_12 $$ nameColumn.setCellRenderer(new ColoredTableCellRenderer() -->Line_18 $$ append(settings.getName())[ CD ]
