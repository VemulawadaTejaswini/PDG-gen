Line_4 $$ Writer writer = new StringWriter()-->Line_6 $$ assertEquals("Invalid result", "[ FD ]
Line_2 $$ public void jettisonDriver() throws Exception -->Line_3 $$ marshaller.setStreamDriver(new JettisonMappedXmlDriver())[ CD ]
Line_2 $$ public void jettisonDriver() throws Exception -->Line_11 $$ assertEquals("Number is invalid", 42L, unflight.getFlightNumber())[ CD ]
Line_9 $$ Flight unflight = (Flight) o-->Line_11 $$ assertEquals("Number is invalid", 42L, unflight.getFlightNumber())[ FD ]
Line_2 $$ public void jettisonDriver() throws Exception -->Line_7 $$ Object o = marshaller.unmarshal(new StreamSource(new StringReader(writer.toString())))[ CD ]
Line_4 $$ Writer writer = new StringWriter()-->Line_7 $$ Object o = marshaller.unmarshal(new StreamSource(new StringReader(writer.toString())))[ FD ]
Line_2 $$ public void jettisonDriver() throws Exception -->Line_4 $$ Writer writer = new StringWriter()[ CD ]
Line_9 $$ Flight unflight = (Flight) o-->Line_10 $$ assertNotNull("Flight is null", unflight)[ FD ]
Line_2 $$ public void jettisonDriver() throws Exception -->Line_6 $$ assertEquals("Invalid result", "[ CD ]
Line_2 $$ public void jettisonDriver() throws Exception -->Line_8 $$ assertTrue("Unmarshalled object is not Flights", o instanceof Flight)[ CD ]
Line_2 $$ public void jettisonDriver() throws Exception -->Line_10 $$ assertNotNull("Flight is null", unflight)[ CD ]
Line_2 $$ public void jettisonDriver() throws Exception -->Line_5 $$ marshaller.marshal(flight, new StreamResult(writer))[ CD ]
Line_2 $$ public void jettisonDriver() throws Exception -->Line_9 $$ Flight unflight = (Flight) o[ CD ]
