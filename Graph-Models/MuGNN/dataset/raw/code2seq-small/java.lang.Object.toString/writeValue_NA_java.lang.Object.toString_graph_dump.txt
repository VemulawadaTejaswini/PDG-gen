Line_20 $$ if (type == Short.class) -->Line_22 $$ if (type == Boolean.class) [ CD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_8 $$ if (type == String.class) [ CD ]
Line_48 $$ if (value instanceof Date) -->Line_49 $$ generator.writeString(XContentBuilder.defaultDatePrinter.print(((Date) value).getTime()))[ CD ]
Line_65 $$ if (text.hasBytes() && text.bytes().hasArray()) -->Line_67 $$ if (text.hasString()) [ CD ]
Line_93 $$ if (value instanceof float[]) -->Line_98 $$ generator.writeEndArray()[ CD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_3 $$ if (value == null) [ CD ]
Line_54 $$ if (value instanceof BytesReference) -->Line_55 $$ BytesReference bytes = (BytesReference) value[ CD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_7 $$ Class<?> type = value.getClass()[ CD ]
Line_12 $$ if (type == Long.class) -->Line_13 $$ generator.writeNumber(((Long) value).longValue())[ CD ]
Line_56 $$ if (!bytes.hasArray()) -->Line_57 $$ bytes = bytes.toBytesArray()[ CD ]
Line_7 $$ Class<?> type = value.getClass()-->Line_10 $$ if (type == Integer.class) [ FD ]
Line_63 $$ if (value instanceof Text) -->Line_64 $$ Text text = (Text) value[ CD ]
Line_46 $$ if (type == byte[].class) -->Line_47 $$ generator.writeBinary((byte[]) value)[ CD ]
Line_7 $$ Class<?> type = value.getClass()-->Line_20 $$ if (type == Short.class) [ FD ]
Line_81 $$ if (value instanceof long[]) -->Line_86 $$ generator.writeEndArray()[ CD ]
Line_36 $$ for (Object v : (Iterable<?>) value) -->Line_37 $$ writeValue(v)[ FD ]
Line_10 $$ if (type == Integer.class) -->Line_12 $$ if (type == Long.class) [ CD ]
Line_29 $$ if (value instanceof Map) -->Line_31 $$ if (value instanceof Path) [ CD ]
Line_31 $$ if (value instanceof Path) -->Line_34 $$ if (value instanceof Iterable) [ CD ]
Line_14 $$ if (type == Float.class) -->Line_16 $$ if (type == Double.class) [ CD ]
Line_40 $$ if (value instanceof Object[]) -->Line_45 $$ generator.writeEndArray()[ CD ]
Line_7 $$ Class<?> type = value.getClass()-->Line_14 $$ if (type == Float.class) [ FD ]
Line_24 $$ if (type == GeoPoint.class) -->Line_28 $$ generator.writeEndObject()[ CD ]
Line_55 $$ BytesReference bytes = (BytesReference) value-->Line_56 $$ if (!bytes.hasArray()) [ FD ]
Line_7 $$ Class<?> type = value.getClass()-->Line_16 $$ if (type == Double.class) [ FD ]
Line_67 $$ if (text.hasString()) -->Line_70 $$ BytesArray bytesArray = text.bytes().toBytesArray()[ CD ]
Line_93 $$ if (value instanceof float[]) -->Line_99 $$ if (value instanceof short[]) [ CD ]
Line_36 $$ for (Object v : (Iterable<?>) value) -->Line_43 $$ writeValue(v)[ FD ]
Line_20 $$ if (type == Short.class) -->Line_21 $$ generator.writeNumber(((Short) value).shortValue())[ CD ]
Line_54 $$ if (value instanceof BytesReference) -->Line_60 $$ if (value instanceof BytesRef) [ CD ]
Line_75 $$ if (value instanceof double[]) -->Line_81 $$ if (value instanceof long[]) [ CD ]
Line_64 $$ Text text = (Text) value-->Line_67 $$ if (text.hasString()) [ FD ]
Line_24 $$ if (type == GeoPoint.class) -->Line_27 $$ generator.writeNumberField("lon", ((GeoPoint) value).lon())[ CD ]
Line_7 $$ Class<?> type = value.getClass()-->Line_8 $$ if (type == String.class) [ FD ]
Line_52 $$ if (value instanceof ReadableInstant) -->Line_53 $$ generator.writeString(XContentBuilder.defaultDatePrinter.print((((ReadableInstant) value)).getMillis()))[ CD ]
Line_7 $$ Class<?> type = value.getClass()-->Line_22 $$ if (type == Boolean.class) [ FD ]
Line_22 $$ if (type == Boolean.class) -->Line_23 $$ generator.writeBoolean(((Boolean) value).booleanValue())[ CD ]
Line_64 $$ Text text = (Text) value-->Line_66 $$ generator.writeUTF8String(text.bytes().array(), text.bytes().arrayOffset(), text.bytes().length())[ FD ]
Line_87 $$ if (value instanceof int[]) -->Line_93 $$ if (value instanceof float[]) [ CD ]
Line_73 $$ if (value instanceof ToXContent) -->Line_74 $$ ((ToXContent) value).toXContent(this, ToXContent.EMPTY_PARAMS)[ CD ]
Line_7 $$ Class<?> type = value.getClass()-->Line_24 $$ if (type == GeoPoint.class) [ FD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_60 $$ if (value instanceof BytesRef) [ FD ]
Line_64 $$ Text text = (Text) value-->Line_70 $$ BytesArray bytesArray = text.bytes().toBytesArray()[ FD ]
Line_34 $$ if (value instanceof Iterable) -->Line_39 $$ generator.writeEndArray()[ CD ]
Line_54 $$ if (value instanceof BytesReference) -->Line_59 $$ generator.writeBinary(bytes.array(), bytes.arrayOffset(), bytes.length())[ CD ]
Line_64 $$ Text text = (Text) value-->Line_65 $$ if (text.hasBytes() && text.bytes().hasArray()) [ FD ]
Line_16 $$ if (type == Double.class) -->Line_17 $$ generator.writeNumber(((Double) value).doubleValue())[ CD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_3 $$ if (value == null) [ FD ]
Line_50 $$ if (value instanceof Calendar) -->Line_52 $$ if (value instanceof ReadableInstant) [ CD ]
Line_36 $$ for (Object v : (Iterable<?>) value) -->Line_84 $$ generator.writeNumber(v)[ FD ]
Line_93 $$ if (value instanceof float[]) -->Line_94 $$ generator.writeStartArray()[ CD ]
Line_24 $$ if (type == GeoPoint.class) -->Line_29 $$ if (value instanceof Map) [ CD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_48 $$ if (value instanceof Date) [ FD ]
Line_18 $$ if (type == Byte.class) -->Line_19 $$ generator.writeNumber(((Byte) value).byteValue())[ CD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_54 $$ if (value instanceof BytesReference) [ FD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_99 $$ if (value instanceof short[]) [ FD ]
Line_8 $$ if (type == String.class) -->Line_9 $$ generator.writeString((String) value)[ CD ]
Line_81 $$ if (value instanceof long[]) -->Line_82 $$ generator.writeStartArray()[ CD ]
Line_73 $$ if (value instanceof ToXContent) -->Line_75 $$ if (value instanceof double[]) [ CD ]
Line_34 $$ if (value instanceof Iterable) -->Line_35 $$ generator.writeStartArray()[ CD ]
Line_34 $$ if (value instanceof Iterable) -->Line_40 $$ if (value instanceof Object[]) [ CD ]
Line_75 $$ if (value instanceof double[]) -->Line_76 $$ generator.writeStartArray()[ CD ]
Line_7 $$ Class<?> type = value.getClass()-->Line_18 $$ if (type == Byte.class) [ FD ]
Line_36 $$ for (Object v : (Iterable<?>) value) -->Line_102 $$ generator.writeNumber(v)[ FD ]
Line_22 $$ if (type == Boolean.class) -->Line_24 $$ if (type == GeoPoint.class) [ CD ]
Line_8 $$ if (type == String.class) -->Line_10 $$ if (type == Integer.class) [ CD ]
Line_36 $$ for (Object v : (Iterable<?>) value) -->Line_96 $$ generator.writeNumber(v)[ FD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_50 $$ if (value instanceof Calendar) [ FD ]
Line_52 $$ if (value instanceof ReadableInstant) -->Line_54 $$ if (value instanceof BytesReference) [ CD ]
Line_55 $$ BytesReference bytes = (BytesReference) value-->Line_57 $$ bytes = bytes.toBytesArray()[ FD ]
Line_16 $$ if (type == Double.class) -->Line_18 $$ if (type == Byte.class) [ CD ]
Line_50 $$ if (value instanceof Calendar) -->Line_51 $$ generator.writeString(XContentBuilder.defaultDatePrinter.print((((Calendar) value)).getTimeInMillis()))[ CD ]
Line_29 $$ if (value instanceof Map) -->Line_30 $$ writeMap((Map) value)[ CD ]
Line_3 $$ if (value == null) -->Line_4 $$ generator.writeNull()[ CD ]
Line_99 $$ if (value instanceof short[]) -->Line_104 $$ generator.writeEndArray()[ CD ]
Line_87 $$ if (value instanceof int[]) -->Line_88 $$ generator.writeStartArray()[ CD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_40 $$ if (value instanceof Object[]) [ FD ]
Line_7 $$ Class<?> type = value.getClass()-->Line_46 $$ if (type == byte[].class) [ FD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_34 $$ if (value instanceof Iterable) [ FD ]
Line_36 $$ for (Object v : (Iterable<?>) value) -->Line_78 $$ generator.writeNumber(v)[ FD ]
Line_40 $$ if (value instanceof Object[]) -->Line_41 $$ generator.writeStartArray()[ CD ]
Line_48 $$ if (value instanceof Date) -->Line_50 $$ if (value instanceof Calendar) [ CD ]
Line_40 $$ if (value instanceof Object[]) -->Line_46 $$ if (type == byte[].class) [ CD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_81 $$ if (value instanceof long[]) [ FD ]
Line_55 $$ BytesReference bytes = (BytesReference) value-->Line_59 $$ generator.writeBinary(bytes.array(), bytes.arrayOffset(), bytes.length())[ FD ]
Line_36 $$ for (Object v : (Iterable<?>) value) -->Line_90 $$ generator.writeNumber(v)[ FD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_63 $$ if (value instanceof Text) [ FD ]
Line_63 $$ if (value instanceof Text) -->Line_65 $$ if (text.hasBytes() && text.bytes().hasArray()) [ CD ]
Line_65 $$ if (text.hasBytes() && text.bytes().hasArray()) -->Line_66 $$ generator.writeUTF8String(text.bytes().array(), text.bytes().arrayOffset(), text.bytes().length())[ CD ]
Line_75 $$ if (value instanceof double[]) -->Line_80 $$ generator.writeEndArray()[ CD ]
Line_10 $$ if (type == Integer.class) -->Line_11 $$ generator.writeNumber(((Integer) value).intValue())[ CD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_7 $$ Class<?> type = value.getClass()[ FD ]
Line_24 $$ if (type == GeoPoint.class) -->Line_26 $$ generator.writeNumberField("lat", ((GeoPoint) value).lat())[ CD ]
Line_46 $$ if (type == byte[].class) -->Line_48 $$ if (value instanceof Date) [ CD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_52 $$ if (value instanceof ReadableInstant) [ FD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_87 $$ if (value instanceof int[]) [ FD ]
Line_64 $$ Text text = (Text) value-->Line_68 $$ generator.writeString(text.string())[ FD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_73 $$ if (value instanceof ToXContent) [ FD ]
Line_87 $$ if (value instanceof int[]) -->Line_92 $$ generator.writeEndArray()[ CD ]
Line_99 $$ if (value instanceof short[]) -->Line_100 $$ generator.writeStartArray()[ CD ]
Line_3 $$ if (value == null) -->Line_5 $$ return[ CD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_29 $$ if (value instanceof Map) [ FD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_31 $$ if (value instanceof Path) [ FD ]
Line_70 $$ BytesArray bytesArray = text.bytes().toBytesArray()-->Line_71 $$ generator.writeUTF8String(bytesArray.array(), bytesArray.arrayOffset(), bytesArray.length())[ FD ]
Line_7 $$ Class<?> type = value.getClass()-->Line_12 $$ if (type == Long.class) [ FD ]
Line_14 $$ if (type == Float.class) -->Line_15 $$ generator.writeNumber(((Float) value).floatValue())[ CD ]
Line_63 $$ if (value instanceof Text) -->Line_73 $$ if (value instanceof ToXContent) [ CD ]
Line_60 $$ if (value instanceof BytesRef) -->Line_62 $$ generator.writeBinary(bytes.bytes, bytes.offset, bytes.length)[ CD ]
Line_67 $$ if (text.hasString()) -->Line_71 $$ generator.writeUTF8String(bytesArray.array(), bytesArray.arrayOffset(), bytesArray.length())[ CD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_93 $$ if (value instanceof float[]) [ FD ]
Line_60 $$ if (value instanceof BytesRef) -->Line_63 $$ if (value instanceof Text) [ CD ]
Line_67 $$ if (text.hasString()) -->Line_68 $$ generator.writeString(text.string())[ CD ]
Line_57 $$ bytes = bytes.toBytesArray()-->Line_59 $$ generator.writeBinary(bytes.array(), bytes.arrayOffset(), bytes.length())[ FD ]
Line_12 $$ if (type == Long.class) -->Line_14 $$ if (type == Float.class) [ CD ]
Line_54 $$ if (value instanceof BytesReference) -->Line_56 $$ if (!bytes.hasArray()) [ CD ]
Line_81 $$ if (value instanceof long[]) -->Line_87 $$ if (value instanceof int[]) [ CD ]
Line_18 $$ if (type == Byte.class) -->Line_20 $$ if (type == Short.class) [ CD ]
Line_2 $$ private void writeValue(Object value) throws IOException -->Line_75 $$ if (value instanceof double[]) [ FD ]
Line_24 $$ if (type == GeoPoint.class) -->Line_25 $$ generator.writeStartObject()[ CD ]
