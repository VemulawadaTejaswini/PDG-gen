Line_2 $$ public void testCompletionMultiField() throws Exception -->Line_8 $$ Map aField = ((Map) XContentMapValues.extractValue("properties.a", mappingSource))[ CD ]
Line_2 $$ public void testCompletionMultiField() throws Exception -->Line_7 $$ Map<String, Object> mappingSource = mappingMetaData.sourceAsMap()[ CD ]
Line_2 $$ public void testCompletionMultiField() throws Exception -->Line_16 $$ client().prepareIndex("my-index", "my-type", "1").setSource("a", "complete me").setRefresh(true).get()[ CD ]
Line_2 $$ public void testCompletionMultiField() throws Exception -->Line_13 $$ assertThat(bField.size(), equalTo(2))[ CD ]
Line_8 $$ Map aField = ((Map) XContentMapValues.extractValue("properties.a", mappingSource))-->Line_10 $$ assertThat(aField.get("type").toString(), equalTo("completion"))[ FD ]
Line_2 $$ public void testCompletionMultiField() throws Exception -->Line_15 $$ assertThat(bField.get("index").toString(), equalTo("not_analyzed"))[ CD ]
Line_5 $$ MappingMetaData mappingMetaData = getMappingsResponse.mappings().get("my-index").get("my-type")-->Line_7 $$ Map<String, Object> mappingSource = mappingMetaData.sourceAsMap()[ FD ]
Line_2 $$ public void testCompletionMultiField() throws Exception -->Line_4 $$ GetMappingsResponse getMappingsResponse = client().admin().indices().prepareGetMappings("my-index").get()[ CD ]
Line_2 $$ public void testCompletionMultiField() throws Exception -->Line_5 $$ MappingMetaData mappingMetaData = getMappingsResponse.mappings().get("my-index").get("my-type")[ CD ]
Line_7 $$ Map<String, Object> mappingSource = mappingMetaData.sourceAsMap()-->Line_12 $$ Map bField = ((Map) XContentMapValues.extractValue("properties.a.fields.b", mappingSource))[ FD ]
Line_8 $$ Map aField = ((Map) XContentMapValues.extractValue("properties.a", mappingSource))-->Line_11 $$ assertThat(aField.get("fields"), notNullValue())[ FD ]
Line_4 $$ GetMappingsResponse getMappingsResponse = client().admin().indices().prepareGetMappings("my-index").get()-->Line_5 $$ MappingMetaData mappingMetaData = getMappingsResponse.mappings().get("my-index").get("my-type")[ FD ]
Line_5 $$ MappingMetaData mappingMetaData = getMappingsResponse.mappings().get("my-index").get("my-type")-->Line_6 $$ assertThat(mappingMetaData, not(nullValue()))[ FD ]
Line_7 $$ Map<String, Object> mappingSource = mappingMetaData.sourceAsMap()-->Line_8 $$ Map aField = ((Map) XContentMapValues.extractValue("properties.a", mappingSource))[ FD ]
Line_2 $$ public void testCompletionMultiField() throws Exception -->Line_3 $$ assertAcked(client().admin().indices().prepareCreate("my-index").addMapping("my-type", createMappingSource("completion")))[ CD ]
Line_2 $$ public void testCompletionMultiField() throws Exception -->Line_17 $$ SearchResponse countResponse = client().prepareSearch("my-index").setSize(0).setQuery(matchQuery("a.b", "complete me")).get()[ CD ]
Line_12 $$ Map bField = ((Map) XContentMapValues.extractValue("properties.a.fields.b", mappingSource))-->Line_13 $$ assertThat(bField.size(), equalTo(2))[ FD ]
Line_2 $$ public void testCompletionMultiField() throws Exception -->Line_14 $$ assertThat(bField.get("type").toString(), equalTo("string"))[ CD ]
Line_2 $$ public void testCompletionMultiField() throws Exception -->Line_18 $$ assertThat(countResponse.getHits().totalHits(), equalTo(1l))[ CD ]
Line_12 $$ Map bField = ((Map) XContentMapValues.extractValue("properties.a.fields.b", mappingSource))-->Line_14 $$ assertThat(bField.get("type").toString(), equalTo("string"))[ FD ]
Line_2 $$ public void testCompletionMultiField() throws Exception -->Line_10 $$ assertThat(aField.get("type").toString(), equalTo("completion"))[ CD ]
Line_17 $$ SearchResponse countResponse = client().prepareSearch("my-index").setSize(0).setQuery(matchQuery("a.b", "complete me")).get()-->Line_18 $$ assertThat(countResponse.getHits().totalHits(), equalTo(1l))[ FD ]
Line_2 $$ public void testCompletionMultiField() throws Exception -->Line_9 $$ assertThat(aField.size(), equalTo(6))[ CD ]
Line_8 $$ Map aField = ((Map) XContentMapValues.extractValue("properties.a", mappingSource))-->Line_9 $$ assertThat(aField.size(), equalTo(6))[ FD ]
Line_2 $$ public void testCompletionMultiField() throws Exception -->Line_11 $$ assertThat(aField.get("fields"), notNullValue())[ CD ]
Line_12 $$ Map bField = ((Map) XContentMapValues.extractValue("properties.a.fields.b", mappingSource))-->Line_15 $$ assertThat(bField.get("index").toString(), equalTo("not_analyzed"))[ FD ]
Line_2 $$ public void testCompletionMultiField() throws Exception -->Line_12 $$ Map bField = ((Map) XContentMapValues.extractValue("properties.a.fields.b", mappingSource))[ CD ]
Line_2 $$ public void testCompletionMultiField() throws Exception -->Line_6 $$ assertThat(mappingMetaData, not(nullValue()))[ CD ]
