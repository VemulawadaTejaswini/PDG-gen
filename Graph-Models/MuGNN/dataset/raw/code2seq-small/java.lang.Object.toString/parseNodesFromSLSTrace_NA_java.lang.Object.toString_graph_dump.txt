Line_2 $$ public static Set<String> parseNodesFromSLSTrace(String jobTrace) throws IOException -->Line_5 $$ ObjectMapper mapper = new ObjectMapper()[ CD ]
Line_3 $$ Set<String> nodeSet = new HashSet<String>()-->Line_15 $$ nodeSet.add(hostname)[ FD ]
Line_14 $$ String hostname = jsonTask.get("container.host").toString()-->Line_15 $$ nodeSet.add(hostname)[ FD ]
Line_8 $$ Iterator<Map> i = mapper.readValues(jsonF.createJsonParser(input), Map.class)-->Line_10 $$ Map jsonE = i.next()[ FD ]
Line_4 $$ JsonFactory jsonF = new JsonFactory()-->Line_8 $$ Iterator<Map> i = mapper.readValues(jsonF.createJsonParser(input), Map.class)[ FD ]
Line_6 $$ Reader input = new FileReader(jobTrace)-->Line_8 $$ Iterator<Map> i = mapper.readValues(jsonF.createJsonParser(input), Map.class)[ FD ]
Line_9 $$ while (i.hasNext()) -->Line_10 $$ Map jsonE = i.next()[ CD ]
Line_9 $$ while (i.hasNext()) -->Line_11 $$ List tasks = (List) jsonE.get("job.tasks")[ CD ]
Line_13 $$ Map jsonTask = (Map) o-->Line_14 $$ String hostname = jsonTask.get("container.host").toString()[ FD ]
Line_6 $$ Reader input = new FileReader(jobTrace)-->Line_19 $$ input.close()[ FD ]
Line_2 $$ public static Set<String> parseNodesFromSLSTrace(String jobTrace) throws IOException -->Line_21 $$ return nodeSet[ CD ]
Line_2 $$ public static Set<String> parseNodesFromSLSTrace(String jobTrace) throws IOException -->Line_6 $$ Reader input = new FileReader(jobTrace)[ CD ]
Line_5 $$ ObjectMapper mapper = new ObjectMapper()-->Line_8 $$ Iterator<Map> i = mapper.readValues(jsonF.createJsonParser(input), Map.class)[ FD ]
Line_10 $$ Map jsonE = i.next()-->Line_11 $$ List tasks = (List) jsonE.get("job.tasks")[ FD ]
Line_2 $$ public static Set<String> parseNodesFromSLSTrace(String jobTrace) throws IOException -->Line_4 $$ JsonFactory jsonF = new JsonFactory()[ CD ]
Line_2 $$ public static Set<String> parseNodesFromSLSTrace(String jobTrace) throws IOException -->Line_3 $$ Set<String> nodeSet = new HashSet<String>()[ CD ]
Line_8 $$ Iterator<Map> i = mapper.readValues(jsonF.createJsonParser(input), Map.class)-->Line_9 $$ while (i.hasNext()) [ FD ]
