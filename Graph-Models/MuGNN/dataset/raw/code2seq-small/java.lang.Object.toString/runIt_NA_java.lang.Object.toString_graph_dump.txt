Line_14 $$ Object value = null-->Line_16 $$ value = ContainerUtil.map2List(((ListResult) paramResult).getComponents(), new Function<Result, String>() [ FD ]
Line_2 $$ private static Object runIt(Expression[] params, ExpressionContext context) -->Line_13 $$ Result paramResult = params[i].calculateResult(context)[ FD ]
Line_16 $$ value = ContainerUtil.map2List(((ListResult) paramResult).getComponents(), new Function<Result, String>() -->Line_18 $$ return result.toString()[ CD ]
Line_11 $$ Binding binding = new Binding()-->Line_24 $$ binding.setVariable("_" + i, value)[ FD ]
Line_8 $$ GroovyShell shell = new GroovyShell()-->Line_10 $$ Script script = possibleFile.exists() ? shell.parse(possibleFile) : shell.parse(text)[ FD ]
Line_11 $$ Binding binding = new Binding()-->Line_26 $$ binding.setVariable("_editor", context.getEditor())[ FD ]
Line_15 $$ if (paramResult instanceof ListResult) -->Line_21 $$ if (paramResult != null) [ CD ]
Line_13 $$ Result paramResult = params[i].calculateResult(context)-->Line_22 $$ value = paramResult.toString()[ FD ]
Line_12 $$ for (int i = 1; i < params.length; ++i) -->Line_13 $$ Result paramResult = params[i].calculateResult(context)[ CD ]
Line_13 $$ Result paramResult = params[i].calculateResult(context)-->Line_15 $$ if (paramResult instanceof ListResult) [ FD ]
Line_4 $$ Result result = params[0].calculateResult(context)-->Line_5 $$ if (result == null)[ FD ]
Line_9 $$ File possibleFile = new File(text)-->Line_10 $$ Script script = possibleFile.exists() ? shell.parse(possibleFile) : shell.parse(text)[ FD ]
Line_10 $$ Script script = possibleFile.exists() ? shell.parse(possibleFile) : shell.parse(text)-->Line_28 $$ Object o = script.run()[ FD ]
Line_12 $$ for (int i = 1; i < params.length; ++i) -->Line_24 $$ binding.setVariable("_" + i, value)[ CD ]
Line_4 $$ Result result = params[0].calculateResult(context)-->Line_7 $$ String text = result.toString()[ FD ]
Line_13 $$ Result paramResult = params[i].calculateResult(context)-->Line_21 $$ if (paramResult != null) [ FD ]
Line_10 $$ Script script = possibleFile.exists() ? shell.parse(possibleFile) : shell.parse(text)-->Line_27 $$ script.setBinding(binding)[ FD ]
Line_16 $$ value = ContainerUtil.map2List(((ListResult) paramResult).getComponents(), new Function<Result, String>() -->Line_18 $$ return result.toString()[ FD ]
Line_2 $$ private static Object runIt(Expression[] params, ExpressionContext context) -->Line_26 $$ binding.setVariable("_editor", context.getEditor())[ FD ]
Line_5 $$ if (result == null)-->Line_6 $$ return result[ CD ]
Line_12 $$ for (int i = 1; i < params.length; ++i) -->Line_14 $$ Object value = null[ CD ]
Line_12 $$ for (int i = 1; i < params.length; ++i) -->Line_15 $$ if (paramResult instanceof ListResult) [ CD ]
Line_16 $$ value = ContainerUtil.map2List(((ListResult) paramResult).getComponents(), new Function<Result, String>() -->Line_24 $$ binding.setVariable("_" + i, value)[ FD ]
Line_2 $$ private static Object runIt(Expression[] params, ExpressionContext context) -->Line_4 $$ Result result = params[0].calculateResult(context)[ FD ]
Line_4 $$ Result result = params[0].calculateResult(context)-->Line_18 $$ return result.toString()[ FD ]
Line_11 $$ Binding binding = new Binding()-->Line_27 $$ script.setBinding(binding)[ FD ]
Line_14 $$ Object value = null-->Line_24 $$ binding.setVariable("_" + i, value)[ FD ]
Line_15 $$ if (paramResult instanceof ListResult) -->Line_16 $$ value = ContainerUtil.map2List(((ListResult) paramResult).getComponents(), new Function<Result, String>() [ CD ]
Line_7 $$ String text = result.toString()-->Line_10 $$ Script script = possibleFile.exists() ? shell.parse(possibleFile) : shell.parse(text)[ FD ]
Line_21 $$ if (paramResult != null) -->Line_22 $$ value = paramResult.toString()[ CD ]
