Line_9 $$ while (source.incrementToken()) -->Line_13 $$ count++[ CD ]
Line_2 $$ static Query parseQueryString(ExtendedCommonTermsQuery query, Object queryString, String field, Analyzer analyzer, String lowFreqMinimumShouldMatch, String highFreqMinimumShouldMatch) throws IOException -->Line_21 $$ return query[ CD ]
Line_5 $$ try (TokenStream source = analyzer.tokenStream(field, queryString.toString())) -->Line_7 $$ CharTermAttribute termAtt = source.addAttribute(CharTermAttribute.class)[ FD ]
Line_2 $$ static Query parseQueryString(ExtendedCommonTermsQuery query, Object queryString, String field, Analyzer analyzer, String lowFreqMinimumShouldMatch, String highFreqMinimumShouldMatch) throws IOException -->Line_16 $$ if (count == 0) [ CD ]
Line_8 $$ BytesRefBuilder builder = new BytesRefBuilder()-->Line_12 $$ query.add(new Term(field, builder.toBytesRef()))[ FD ]
Line_5 $$ try (TokenStream source = analyzer.tokenStream(field, queryString.toString())) -->Line_6 $$ source.reset()[ FD ]
Line_16 $$ if (count == 0) -->Line_17 $$ return null[ CD ]
Line_2 $$ static Query parseQueryString(ExtendedCommonTermsQuery query, Object queryString, String field, Analyzer analyzer, String lowFreqMinimumShouldMatch, String highFreqMinimumShouldMatch) throws IOException -->Line_20 $$ query.setHighFreqMinimumNumberShouldMatch(highFreqMinimumShouldMatch)[ CD ]
Line_2 $$ static Query parseQueryString(ExtendedCommonTermsQuery query, Object queryString, String field, Analyzer analyzer, String lowFreqMinimumShouldMatch, String highFreqMinimumShouldMatch) throws IOException -->Line_12 $$ query.add(new Term(field, builder.toBytesRef()))[ FD ]
Line_2 $$ static Query parseQueryString(ExtendedCommonTermsQuery query, Object queryString, String field, Analyzer analyzer, String lowFreqMinimumShouldMatch, String highFreqMinimumShouldMatch) throws IOException -->Line_20 $$ query.setHighFreqMinimumNumberShouldMatch(highFreqMinimumShouldMatch)[ FD ]
Line_2 $$ static Query parseQueryString(ExtendedCommonTermsQuery query, Object queryString, String field, Analyzer analyzer, String lowFreqMinimumShouldMatch, String highFreqMinimumShouldMatch) throws IOException -->Line_5 $$ try (TokenStream source = analyzer.tokenStream(field, queryString.toString())) [ FD ]
Line_5 $$ try (TokenStream source = analyzer.tokenStream(field, queryString.toString())) -->Line_9 $$ while (source.incrementToken()) [ FD ]
Line_2 $$ static Query parseQueryString(ExtendedCommonTermsQuery query, Object queryString, String field, Analyzer analyzer, String lowFreqMinimumShouldMatch, String highFreqMinimumShouldMatch) throws IOException -->Line_19 $$ query.setLowFreqMinimumNumberShouldMatch(lowFreqMinimumShouldMatch)[ FD ]
Line_2 $$ static Query parseQueryString(ExtendedCommonTermsQuery query, Object queryString, String field, Analyzer analyzer, String lowFreqMinimumShouldMatch, String highFreqMinimumShouldMatch) throws IOException -->Line_19 $$ query.setLowFreqMinimumNumberShouldMatch(lowFreqMinimumShouldMatch)[ CD ]
Line_9 $$ while (source.incrementToken()) -->Line_12 $$ query.add(new Term(field, builder.toBytesRef()))[ CD ]
