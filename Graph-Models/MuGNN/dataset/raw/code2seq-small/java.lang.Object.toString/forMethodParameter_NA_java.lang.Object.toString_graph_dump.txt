Line_2 $$ public void forMethodParameter() throws Exception -->Line_6 $$ assertSerialzable(type)[ CD ]
Line_2 $$ public void forMethodParameter() throws Exception -->Line_5 $$ assertThat(type.toString(), equalTo("java.lang.Class<T>"))[ CD ]
Line_4 $$ Type type = SerializableTypeWrapper.forMethodParameter(MethodParameter.forMethodOrConstructor(method, 0))-->Line_5 $$ assertThat(type.toString(), equalTo("java.lang.Class<T>"))[ FD ]
Line_3 $$ Method method = Methods.class.getDeclaredMethod("method", Class.class, Object.class)-->Line_4 $$ Type type = SerializableTypeWrapper.forMethodParameter(MethodParameter.forMethodOrConstructor(method, 0))[ FD ]
Line_4 $$ Type type = SerializableTypeWrapper.forMethodParameter(MethodParameter.forMethodOrConstructor(method, 0))-->Line_6 $$ assertSerialzable(type)[ FD ]
Line_2 $$ public void forMethodParameter() throws Exception -->Line_4 $$ Type type = SerializableTypeWrapper.forMethodParameter(MethodParameter.forMethodOrConstructor(method, 0))[ CD ]
Line_2 $$ public void forMethodParameter() throws Exception -->Line_3 $$ Method method = Methods.class.getDeclaredMethod("method", Class.class, Object.class)[ CD ]
