Line_6 $$ Iterator<String> iterator = my.iterator()-->Line_8 $$ iterator.remove()[ FD ]
Line_4 $$ LockFreeCopyOnWriteArrayList<String> my = (LockFreeCopyOnWriteArrayList<String>) ContainerUtil.createLockFreeCopyOnWriteList(seq)-->Line_25 $$ assertEquals(my.toString(), seq.subList(i + 1, seq.size()).toString())[ FD ]
Line_2 $$ public void testLockFreeCOWIteratorRemove() -->Line_13 $$ int size = my.size()[ CD ]
Line_13 $$ int size = my.size()-->Line_15 $$ for (int i = 0; i < size; i++) [ FD ]
Line_2 $$ public void testLockFreeCOWIteratorRemove() -->Line_4 $$ LockFreeCopyOnWriteArrayList<String> my = (LockFreeCopyOnWriteArrayList<String>) ContainerUtil.createLockFreeCopyOnWriteList(seq)[ CD ]
Line_6 $$ Iterator<String> iterator = my.iterator()-->Line_29 $$ iterator.remove()[ FD ]
Line_2 $$ public void testLockFreeCOWIteratorRemove() -->Line_14 $$ Iterator<String> iterator = my.iterator()[ CD ]
Line_21 $$ if (i == size - 1) -->Line_22 $$ assertTrue(my.isEmpty())[ CD ]
Line_15 $$ for (int i = 0; i < size; i++) -->Line_18 $$ assertEquals(next, String.valueOf(i))[ FD ]
Line_4 $$ LockFreeCopyOnWriteArrayList<String> my = (LockFreeCopyOnWriteArrayList<String>) ContainerUtil.createLockFreeCopyOnWriteList(seq)-->Line_22 $$ assertTrue(my.isEmpty())[ FD ]
Line_4 $$ LockFreeCopyOnWriteArrayList<String> my = (LockFreeCopyOnWriteArrayList<String>) ContainerUtil.createLockFreeCopyOnWriteList(seq)-->Line_6 $$ Iterator<String> iterator = my.iterator()[ FD ]
Line_6 $$ Iterator<String> iterator = my.iterator()-->Line_17 $$ String next = iterator.next()[ FD ]
Line_15 $$ for (int i = 0; i < size; i++) -->Line_21 $$ if (i == size - 1) [ FD ]
Line_4 $$ LockFreeCopyOnWriteArrayList<String> my = (LockFreeCopyOnWriteArrayList<String>) ContainerUtil.createLockFreeCopyOnWriteList(seq)-->Line_13 $$ int size = my.size()[ FD ]
Line_4 $$ LockFreeCopyOnWriteArrayList<String> my = (LockFreeCopyOnWriteArrayList<String>) ContainerUtil.createLockFreeCopyOnWriteList(seq)-->Line_24 $$ assertEquals(my.toArray()[0], String.valueOf(i + 1))[ FD ]
Line_15 $$ for (int i = 0; i < size; i++) -->Line_21 $$ if (i == size - 1) [ CD ]
Line_17 $$ String next = iterator.next()-->Line_18 $$ assertEquals(next, String.valueOf(i))[ FD ]
Line_21 $$ if (i == size - 1) -->Line_25 $$ assertEquals(my.toString(), seq.subList(i + 1, seq.size()).toString())[ CD ]
Line_15 $$ for (int i = 0; i < size; i++) -->Line_20 $$ assertEquals(my.size(), size - i - 1)[ CD ]
Line_2 $$ public void testLockFreeCOWIteratorRemove() -->Line_6 $$ Iterator<String> iterator = my.iterator()[ CD ]
Line_15 $$ for (int i = 0; i < size; i++) -->Line_17 $$ String next = iterator.next()[ CD ]
Line_6 $$ Iterator<String> iterator = my.iterator()-->Line_16 $$ assertTrue(iterator.hasNext())[ FD ]
Line_2 $$ public void testLockFreeCOWIteratorRemove() -->Line_15 $$ for (int i = 0; i < size; i++) [ CD ]
Line_15 $$ for (int i = 0; i < size; i++) -->Line_18 $$ assertEquals(next, String.valueOf(i))[ CD ]
Line_4 $$ LockFreeCopyOnWriteArrayList<String> my = (LockFreeCopyOnWriteArrayList<String>) ContainerUtil.createLockFreeCopyOnWriteList(seq)-->Line_14 $$ Iterator<String> iterator = my.iterator()[ FD ]
Line_15 $$ for (int i = 0; i < size; i++) -->Line_16 $$ assertTrue(iterator.hasNext())[ CD ]
Line_2 $$ public void testLockFreeCOWIteratorRemove() -->Line_3 $$ List<String> seq = Arrays.asList("0", "1", "2", "3", "4")[ CD ]
Line_15 $$ for (int i = 0; i < size; i++) -->Line_19 $$ iterator.remove()[ CD ]
Line_4 $$ LockFreeCopyOnWriteArrayList<String> my = (LockFreeCopyOnWriteArrayList<String>) ContainerUtil.createLockFreeCopyOnWriteList(seq)-->Line_20 $$ assertEquals(my.size(), size - i - 1)[ FD ]
Line_6 $$ Iterator<String> iterator = my.iterator()-->Line_19 $$ iterator.remove()[ FD ]
Line_3 $$ List<String> seq = Arrays.asList("0", "1", "2", "3", "4")-->Line_25 $$ assertEquals(my.toString(), seq.subList(i + 1, seq.size()).toString())[ FD ]
Line_21 $$ if (i == size - 1) -->Line_24 $$ assertEquals(my.toArray()[0], String.valueOf(i + 1))[ CD ]
Line_3 $$ List<String> seq = Arrays.asList("0", "1", "2", "3", "4")-->Line_4 $$ LockFreeCopyOnWriteArrayList<String> my = (LockFreeCopyOnWriteArrayList<String>) ContainerUtil.createLockFreeCopyOnWriteList(seq)[ FD ]
