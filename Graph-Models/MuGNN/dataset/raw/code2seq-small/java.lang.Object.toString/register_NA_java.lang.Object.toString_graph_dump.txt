Line_19 $$ if (nodes.isEmpty()) -->Line_22 $$ cache.replace(service, nodes)[ CD ]
Line_18 $$ Cache<T, Set<Node>> cache = CacheServiceProviderRegistry.this.cache.getAdvancedCache().withFlags(Flag.IGNORE_RETURN_VALUES)-->Line_22 $$ cache.replace(service, nodes)[ FD ]
Line_16 $$ Set<Node> nodes = CacheServiceProviderRegistry.this.cache.getAdvancedCache().withFlags(Flag.FORCE_WRITE_LOCK).get(service)-->Line_17 $$ if ((nodes != null) && nodes.remove(node)) [ FD ]
Line_19 $$ if (nodes.isEmpty()) -->Line_20 $$ cache.remove(service)[ CD ]
Line_17 $$ if ((nodes != null) && nodes.remove(node)) -->Line_19 $$ if (nodes.isEmpty()) [ CD ]
Line_14 $$ Node node = CacheServiceProviderRegistry.this.getGroup().getLocalNode()-->Line_17 $$ if ((nodes != null) && nodes.remove(node)) [ FD ]
Line_17 $$ if ((nodes != null) && nodes.remove(node)) -->Line_18 $$ Cache<T, Set<Node>> cache = CacheServiceProviderRegistry.this.cache.getAdvancedCache().withFlags(Flag.IGNORE_RETURN_VALUES)[ CD ]
Line_10 $$ return new AbstractServiceProviderRegistration<T>(service, this) -->Line_14 $$ Node node = CacheServiceProviderRegistry.this.getGroup().getLocalNode()[ CD ]
Line_16 $$ Set<Node> nodes = CacheServiceProviderRegistry.this.cache.getAdvancedCache().withFlags(Flag.FORCE_WRITE_LOCK).get(service)-->Line_22 $$ cache.replace(service, nodes)[ FD ]
Line_16 $$ Set<Node> nodes = CacheServiceProviderRegistry.this.cache.getAdvancedCache().withFlags(Flag.FORCE_WRITE_LOCK).get(service)-->Line_19 $$ if (nodes.isEmpty()) [ FD ]
Line_18 $$ Cache<T, Set<Node>> cache = CacheServiceProviderRegistry.this.cache.getAdvancedCache().withFlags(Flag.IGNORE_RETURN_VALUES)-->Line_20 $$ cache.remove(service)[ FD ]
