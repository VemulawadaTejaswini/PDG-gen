Line_4 $$ if (!leak) -->Line_6 $$ logger.error("BAD RELEASE: attempted to release a reference ([ CD ]
Line_5 $$ String id = this.toString()-->Line_18 $$ debug.log(id)[ FD ]
Line_2 $$ void release(boolean leak) -->Line_14 $$ if (leak) [ CD ]
Line_14 $$ if (leak) -->Line_19 $$ if (DEBUG_ENABLED) [ CD ]
Line_2 $$ void release(boolean leak) -->Line_3 $$ if (!releasedUpdater.compareAndSet(this, 0, 1)) [ CD ]
Line_4 $$ if (!leak) -->Line_7 $$ if (DEBUG_ENABLED)[ CD ]
Line_14 $$ if (leak) -->Line_16 $$ logger.error("LEAK DETECTED: a reference ([ CD ]
Line_4 $$ if (!leak) -->Line_5 $$ String id = this.toString()[ CD ]
Line_3 $$ if (!releasedUpdater.compareAndSet(this, 0, 1)) -->Line_4 $$ if (!leak) [ CD ]
Line_2 $$ void release(boolean leak) -->Line_4 $$ if (!leak) [ FD ]
Line_19 $$ if (DEBUG_ENABLED) -->Line_20 $$ debug.deallocate()[ CD ]
Line_7 $$ if (DEBUG_ENABLED)-->Line_8 $$ debug.log(id)[ CD ]
Line_5 $$ String id = this.toString()-->Line_16 $$ logger.error("LEAK DETECTED: a reference ([ FD ]
Line_2 $$ void release(boolean leak) -->Line_13 $$ Throwable fail = globalState.release(this, null)[ CD ]
Line_13 $$ Throwable fail = globalState.release(this, null)-->Line_23 $$ logger.error("Error when closing [ FD ]
Line_3 $$ if (!releasedUpdater.compareAndSet(this, 0, 1)) -->Line_11 $$ return[ CD ]
Line_5 $$ String id = this.toString()-->Line_6 $$ logger.error("BAD RELEASE: attempted to release a reference ([ FD ]
Line_2 $$ void release(boolean leak) -->Line_22 $$ if (fail != null)[ CD ]
Line_22 $$ if (fail != null)-->Line_23 $$ logger.error("Error when closing [ CD ]
Line_17 $$ if (DEBUG_ENABLED)-->Line_18 $$ debug.log(id)[ CD ]
Line_13 $$ Throwable fail = globalState.release(this, null)-->Line_22 $$ if (fail != null)[ FD ]
Line_14 $$ if (leak) -->Line_17 $$ if (DEBUG_ENABLED)[ CD ]
Line_5 $$ String id = this.toString()-->Line_8 $$ debug.log(id)[ FD ]
Line_14 $$ if (leak) -->Line_15 $$ String id = this.toString()[ CD ]
