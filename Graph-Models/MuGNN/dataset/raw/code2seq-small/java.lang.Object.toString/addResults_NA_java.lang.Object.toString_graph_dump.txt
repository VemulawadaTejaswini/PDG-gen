Line_9 $$ for (List<Object> fields : results.getData()) -->Line_15 $$ for (int i = 0; i < fields.size(); i++) [ FD ]
Line_2 $$ public void addResults(QueryResults results) -->Line_9 $$ for (List<Object> fields : results.getData()) [ FD ]
Line_11 $$ try (Jedis jedis = jedisPool.getResource()) -->Line_26 $$ jedis.zadd(redisZset, count.get(), redisKey)[ FD ]
Line_14 $$ ImmutableMap.Builder<String, Object> builder = ImmutableMap.builder()-->Line_19 $$ builder.put(columns.get(i).getName(), value)[ FD ]
Line_17 $$ Object value = convertValue(fields.get(i), type)-->Line_19 $$ builder.put(columns.get(i).getName(), value)[ FD ]
Line_3 $$ if (types.get() == null && results.getColumns() != null) -->Line_4 $$ types.set(getTypes(results.getColumns()))[ CD ]
Line_16 $$ Type type = types.get().get(i)-->Line_17 $$ Object value = convertValue(fields.get(i), type)[ FD ]
Line_9 $$ for (List<Object> fields : results.getData()) -->Line_28 $$ jedis.hset(redisKey, columns.get(i).getName(), fields.get(i).toString())[ FD ]
Line_15 $$ for (int i = 0; i < fields.size(); i++) -->Line_17 $$ Object value = convertValue(fields.get(i), type)[ CD ]
Line_11 $$ try (Jedis jedis = jedisPool.getResource()) -->Line_22 $$ jedis.set(redisKey, jsonEncoder.toString(builder.build()))[ FD ]
Line_10 $$ String redisKey = tableName + ":" + count.getAndIncrement()-->Line_22 $$ jedis.set(redisKey, jsonEncoder.toString(builder.build()))[ FD ]
Line_2 $$ public void addResults(QueryResults results) -->Line_8 $$ List<Column> columns = results.getColumns()[ FD ]
Line_18 $$ if (value != null) -->Line_19 $$ builder.put(columns.get(i).getName(), value)[ CD ]
Line_2 $$ public void addResults(QueryResults results) -->Line_3 $$ if (types.get() == null && results.getColumns() != null) [ FD ]
Line_15 $$ for (int i = 0; i < fields.size(); i++) -->Line_19 $$ builder.put(columns.get(i).getName(), value)[ FD ]
Line_10 $$ String redisKey = tableName + ":" + count.getAndIncrement()-->Line_28 $$ jedis.hset(redisKey, columns.get(i).getName(), fields.get(i).toString())[ FD ]
Line_17 $$ Object value = convertValue(fields.get(i), type)-->Line_18 $$ if (value != null) [ FD ]
Line_15 $$ for (int i = 0; i < fields.size(); i++) -->Line_28 $$ jedis.hset(redisKey, columns.get(i).getName(), fields.get(i).toString())[ FD ]
Line_15 $$ for (int i = 0; i < fields.size(); i++) -->Line_17 $$ Object value = convertValue(fields.get(i), type)[ FD ]
Line_6 $$ if (results.getData() != null) -->Line_8 $$ List<Column> columns = results.getColumns()[ CD ]
Line_2 $$ public void addResults(QueryResults results) -->Line_6 $$ if (results.getData() != null) [ FD ]
Line_2 $$ public void addResults(QueryResults results) -->Line_3 $$ if (types.get() == null && results.getColumns() != null) [ CD ]
Line_15 $$ for (int i = 0; i < fields.size(); i++) -->Line_27 $$ for (int i = 0; i < fields.size(); i++) [ FD ]
Line_11 $$ try (Jedis jedis = jedisPool.getResource()) -->Line_28 $$ jedis.hset(redisKey, columns.get(i).getName(), fields.get(i).toString())[ FD ]
Line_2 $$ public void addResults(QueryResults results) -->Line_6 $$ if (results.getData() != null) [ CD ]
Line_15 $$ for (int i = 0; i < fields.size(); i++) -->Line_16 $$ Type type = types.get().get(i)[ FD ]
Line_15 $$ for (int i = 0; i < fields.size(); i++) -->Line_18 $$ if (value != null) [ CD ]
Line_9 $$ for (List<Object> fields : results.getData()) -->Line_27 $$ for (int i = 0; i < fields.size(); i++) [ FD ]
Line_27 $$ for (int i = 0; i < fields.size(); i++) -->Line_28 $$ jedis.hset(redisKey, columns.get(i).getName(), fields.get(i).toString())[ CD ]
Line_9 $$ for (List<Object> fields : results.getData()) -->Line_17 $$ Object value = convertValue(fields.get(i), type)[ FD ]
Line_6 $$ if (results.getData() != null) -->Line_7 $$ checkState(types.get() != null, "Data without types received!")[ CD ]
Line_27 $$ for (int i = 0; i < fields.size(); i++) -->Line_28 $$ jedis.hset(redisKey, columns.get(i).getName(), fields.get(i).toString())[ FD ]
Line_25 $$ String redisZset = "keyset:" + tableName-->Line_26 $$ jedis.zadd(redisZset, count.get(), redisKey)[ FD ]
Line_15 $$ for (int i = 0; i < fields.size(); i++) -->Line_16 $$ Type type = types.get().get(i)[ CD ]
Line_14 $$ ImmutableMap.Builder<String, Object> builder = ImmutableMap.builder()-->Line_22 $$ jedis.set(redisKey, jsonEncoder.toString(builder.build()))[ FD ]
Line_8 $$ List<Column> columns = results.getColumns()-->Line_19 $$ builder.put(columns.get(i).getName(), value)[ FD ]
Line_2 $$ public void addResults(QueryResults results) -->Line_4 $$ types.set(getTypes(results.getColumns()))[ FD ]
Line_8 $$ List<Column> columns = results.getColumns()-->Line_28 $$ jedis.hset(redisKey, columns.get(i).getName(), fields.get(i).toString())[ FD ]
Line_10 $$ String redisKey = tableName + ":" + count.getAndIncrement()-->Line_26 $$ jedis.zadd(redisZset, count.get(), redisKey)[ FD ]
