Line_3 $$ FieldSelectionHelper helper = new FieldSelectionHelper(FieldSelectionHelper.emptyText, FieldSelectionHelper.emptyText)-->Line_5 $$ output.collect(helper.getKey(), helper.getValue())[ FD ]
Line_3 $$ FieldSelectionHelper helper = new FieldSelectionHelper(FieldSelectionHelper.emptyText, FieldSelectionHelper.emptyText)-->Line_4 $$ helper.extractOutputKeyValue(key.toString(), val.toString(), fieldSeparator, mapOutputKeyFieldList, mapOutputValueFieldList, allMapValueFieldsFrom, ignoreInputKey, true)[ FD ]
Line_2 $$ public void map(K key, V val, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_5 $$ output.collect(helper.getKey(), helper.getValue())[ CD ]
Line_2 $$ public void map(K key, V val, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_5 $$ output.collect(helper.getKey(), helper.getValue())[ FD ]
Line_2 $$ public void map(K key, V val, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_3 $$ FieldSelectionHelper helper = new FieldSelectionHelper(FieldSelectionHelper.emptyText, FieldSelectionHelper.emptyText)[ CD ]
Line_2 $$ public void map(K key, V val, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_4 $$ helper.extractOutputKeyValue(key.toString(), val.toString(), fieldSeparator, mapOutputKeyFieldList, mapOutputValueFieldList, allMapValueFieldsFrom, ignoreInputKey, true)[ CD ]
Line_2 $$ public void map(K key, V val, OutputCollector<Text, Text> output, Reporter reporter) throws IOException -->Line_4 $$ helper.extractOutputKeyValue(key.toString(), val.toString(), fieldSeparator, mapOutputKeyFieldList, mapOutputValueFieldList, allMapValueFieldsFrom, ignoreInputKey, true)[ FD ]
