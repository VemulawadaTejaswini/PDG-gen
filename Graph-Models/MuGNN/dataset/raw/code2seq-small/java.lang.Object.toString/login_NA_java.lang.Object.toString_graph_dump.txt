Line_61 $$ if (getUseFirstPass() == true) -->Line_64 $$ sharedState.put("javax.security.auth.login.password", credential)[ CD ]
Line_16 $$ LoginException le = new LoginException()-->Line_41 $$ le.initCause(e)[ FD ]
Line_28 $$ Callback[] callbacks = -->Line_31 $$ callbackHandler.handle(callbacks)[ FD ]
Line_32 $$ username = callback.getPrincipal().getName()-->Line_49 $$ if (username == null) [ FD ]
Line_12 $$ String name = username.toString()-->Line_14 $$ identity = createIdentity(name)[ FD ]
Line_49 $$ if (username == null) -->Line_50 $$ return false[ CD ]
Line_34 $$ if (c instanceof SASCurrent) -->Line_37 $$ return false[ CD ]
Line_16 $$ LoginException le = new LoginException()-->Line_17 $$ le.initCause(e)[ FD ]
Line_16 $$ LoginException le = new LoginException()-->Line_45 $$ le.initCause(e)[ FD ]
Line_16 $$ LoginException le = new LoginException()-->Line_57 $$ le.initCause(e)[ FD ]
Line_33 $$ final Object c = callback.getCredential()-->Line_34 $$ if (c instanceof SASCurrent) [ FD ]
Line_27 $$ SecurityAssociationCallback callback = new SecurityAssociationCallback()-->Line_32 $$ username = callback.getPrincipal().getName()[ FD ]
Line_27 $$ SecurityAssociationCallback callback = new SecurityAssociationCallback()-->Line_33 $$ final Object c = callback.getCredential()[ FD ]
Line_32 $$ username = callback.getPrincipal().getName()-->Line_48 $$ validateCredential(username, credential)[ FD ]
Line_9 $$ if (username instanceof Principal)-->Line_12 $$ String name = username.toString()[ CD ]
Line_32 $$ username = callback.getPrincipal().getName()-->Line_54 $$ identity = createIdentity(username)[ FD ]
