Line_30 $$ if (c instanceof SASCurrent) -->Line_33 $$ return false[ CD ]
Line_23 $$ SecurityAssociationCallback callback = new SecurityAssociationCallback()-->Line_29 $$ final Object c = callback.getCredential()[ FD ]
Line_28 $$ username = callback.getPrincipal().getName()-->Line_50 $$ identity = createIdentity(username)[ FD ]
Line_12 $$ LoginException le = new LoginException()-->Line_13 $$ le.initCause(e)[ FD ]
Line_2 $$ public boolean login() throws LoginException -->Line_61 $$ super.loginOk = true[ CD ]
Line_12 $$ LoginException le = new LoginException()-->Line_53 $$ le.initCause(e)[ FD ]
Line_2 $$ public boolean login() throws LoginException -->Line_62 $$ return true[ CD ]
Line_4 $$ Object username = sharedState.get("javax.security.auth.login.name")-->Line_5 $$ if (username instanceof Principal)[ FD ]
Line_57 $$ if (getUseFirstPass() == true) -->Line_58 $$ sharedState.put("javax.security.auth.login.name", identity)[ CD ]
Line_2 $$ public boolean login() throws LoginException -->Line_57 $$ if (getUseFirstPass() == true) [ CD ]
Line_3 $$ if (super.login() == true) -->Line_17 $$ return true[ CD ]
Line_2 $$ public boolean login() throws LoginException -->Line_19 $$ super.loginOk = false[ CD ]
Line_2 $$ public boolean login() throws LoginException -->Line_44 $$ validateCredential(username, credential)[ CD ]
Line_4 $$ Object username = sharedState.get("javax.security.auth.login.name")-->Line_50 $$ identity = createIdentity(username)[ FD ]
Line_3 $$ if (super.login() == true) -->Line_4 $$ Object username = sharedState.get("javax.security.auth.login.name")[ CD ]
Line_45 $$ if (username == null) -->Line_46 $$ return false[ CD ]
Line_23 $$ SecurityAssociationCallback callback = new SecurityAssociationCallback()-->Line_28 $$ username = callback.getPrincipal().getName()[ FD ]
Line_2 $$ public boolean login() throws LoginException -->Line_48 $$ if (identity == null) [ CD ]
Line_57 $$ if (getUseFirstPass() == true) -->Line_59 $$ sharedState.put("javax.security.auth.login.password", credential)[ CD ]
Line_4 $$ Object username = sharedState.get("javax.security.auth.login.name")-->Line_28 $$ username = callback.getPrincipal().getName()[ FD ]
Line_2 $$ public boolean login() throws LoginException -->Line_20 $$ if (callbackHandler == null) [ CD ]
Line_28 $$ username = callback.getPrincipal().getName()-->Line_44 $$ validateCredential(username, credential)[ FD ]
Line_3 $$ if (super.login() == true) -->Line_5 $$ if (username instanceof Principal)[ CD ]
Line_4 $$ Object username = sharedState.get("javax.security.auth.login.name")-->Line_44 $$ validateCredential(username, credential)[ FD ]
Line_12 $$ LoginException le = new LoginException()-->Line_41 $$ le.initCause(e)[ FD ]
Line_24 $$ Callback[] callbacks = -->Line_27 $$ callbackHandler.handle(callbacks)[ FD ]
Line_2 $$ public boolean login() throws LoginException -->Line_24 $$ Callback[] callbacks = [ CD ]
Line_8 $$ String name = username.toString()-->Line_10 $$ identity = createIdentity(name)[ FD ]
Line_2 $$ public boolean login() throws LoginException -->Line_3 $$ if (super.login() == true) [ CD ]
Line_4 $$ Object username = sharedState.get("javax.security.auth.login.name")-->Line_8 $$ String name = username.toString()[ FD ]
Line_28 $$ username = callback.getPrincipal().getName()-->Line_45 $$ if (username == null) [ FD ]
Line_5 $$ if (username instanceof Principal)-->Line_8 $$ String name = username.toString()[ CD ]
Line_29 $$ final Object c = callback.getCredential()-->Line_30 $$ if (c instanceof SASCurrent) [ FD ]
Line_4 $$ Object username = sharedState.get("javax.security.auth.login.name")-->Line_45 $$ if (username == null) [ FD ]
Line_12 $$ LoginException le = new LoginException()-->Line_37 $$ le.initCause(e)[ FD ]
Line_2 $$ public boolean login() throws LoginException -->Line_23 $$ SecurityAssociationCallback callback = new SecurityAssociationCallback()[ CD ]
Line_2 $$ public boolean login() throws LoginException -->Line_45 $$ if (username == null) [ CD ]
