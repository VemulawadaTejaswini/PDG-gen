Line_71 $$ SimpleTextAttributes simples = textChunk.getSimpleAttributesIgnoreBackground()-->Line_72 $$ append(textChunk.getText() + (i == 0 ? " " : ""), patchAttrs(node, simples))[ FD ]
Line_6 $$ Node node = (Node) value-->Line_68 $$ TextChunk[] text = node.getUsage().getPresentation().getText()[ FD ]
Line_15 $$ if (value instanceof DefaultMutableTreeNode) -->Line_81 $$ append(value.toString(), SimpleTextAttributes.REGULAR_ATTRIBUTES)[ CD ]
Line_5 $$ if (value instanceof Node && value != tree.getModel().getRoot()) -->Line_7 $$ if (!node.isValid()) [ CD ]
Line_36 $$ if (userObject instanceof UsageTarget) -->Line_48 $$ append(text == null ? "" : text, SimpleTextAttributes.REGULAR_ATTRIBUTES)[ CD ]
Line_6 $$ Node node = (Node) value-->Line_56 $$ setIcon(node.getGroup().getIcon(expanded))[ FD ]
Line_38 $$ if (!usageTarget.isValid()) -->Line_39 $$ append(UsageViewBundle.message("node.invalid"), ourInvalidAttributes)[ CD ]
Line_15 $$ if (value instanceof DefaultMutableTreeNode) -->Line_17 $$ Object userObject = treeNode.getUserObject()[ CD ]
Line_36 $$ if (userObject instanceof UsageTarget) -->Line_37 $$ UsageTarget usageTarget = (UsageTarget) userObject[ CD ]
Line_50 $$ if (treeNode instanceof GroupNode) -->Line_52 $$ if (node.isRoot()) [ CD ]
Line_52 $$ if (node.isRoot()) -->Line_56 $$ setIcon(node.getGroup().getIcon(expanded))[ CD ]
Line_5 $$ if (value instanceof Node && value != tree.getModel().getRoot()) -->Line_6 $$ Node node = (Node) value[ CD ]
Line_52 $$ if (node.isRoot()) -->Line_53 $$ append(StringUtil.capitalize(myPresentation.getUsagesWord()), patchAttrs(node, SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES))[ CD ]
Line_6 $$ Node node = (Node) value-->Line_59 $$ SimpleTextAttributes attributes = patchAttrs(node, ourNumberOfUsagesAttribute)[ FD ]
Line_19 $$ if (!visibleRect.isEmpty()) -->Line_23 $$ if (visible != RowLocation.INSIDE_VISIBLE_RECT) [ CD ]
Line_70 $$ TextChunk textChunk = text[i]-->Line_71 $$ SimpleTextAttributes simples = textChunk.getSimpleAttributesIgnoreBackground()[ FD ]
Line_38 $$ if (!usageTarget.isValid()) -->Line_40 $$ return[ CD ]
Line_36 $$ if (userObject instanceof UsageTarget) -->Line_49 $$ setIcon(presentation.getIcon(expanded))[ CD ]
Line_42 $$ final ItemPresentation presentation = usageTarget.getPresentation()-->Line_49 $$ setIcon(presentation.getIcon(expanded))[ FD ]
Line_6 $$ Node node = (Node) value-->Line_58 $$ int count = node.getRecursiveUsageCount()[ FD ]
Line_36 $$ if (userObject instanceof UsageTarget) -->Line_43 $$ LOG.assertTrue(presentation != null)[ CD ]
Line_16 $$ DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode) value-->Line_50 $$ if (treeNode instanceof GroupNode) [ FD ]
Line_52 $$ if (node.isRoot()) -->Line_55 $$ append(node.getGroup().getText(myView), patchAttrs(node, showAsReadOnly ? ourReadOnlyAttributes : SimpleTextAttributes.REGULAR_ATTRIBUTES))[ CD ]
Line_67 $$ if (node.isValid()) -->Line_68 $$ TextChunk[] text = node.getUsage().getPresentation().getText()[ CD ]
Line_6 $$ Node node = (Node) value-->Line_7 $$ if (!node.isValid()) [ FD ]
Line_10 $$ if (myPresentation.isShowReadOnlyStatusAsRed() && node.isReadOnly()) -->Line_11 $$ showAsReadOnly = true[ CD ]
Line_50 $$ if (treeNode instanceof GroupNode) -->Line_60 $$ append(FontUtil.spaceAndThinSpace() + StringUtil.pluralize(count + " " + myPresentation.getUsagesWord(), count), SimpleTextAttributes.GRAYED_ATTRIBUTES.derive(attributes.getStyle(), null, null, null))[ CD ]
Line_6 $$ Node node = (Node) value-->Line_55 $$ append(node.getGroup().getText(myView), patchAttrs(node, showAsReadOnly ? ourReadOnlyAttributes : SimpleTextAttributes.REGULAR_ATTRIBUTES))[ FD ]
Line_61 $$ if (treeNode instanceof UsageNode) -->Line_63 $$ setIcon(node.getUsage().getPresentation().getIcon())[ CD ]
Line_61 $$ if (treeNode instanceof UsageNode) -->Line_64 $$ if (showAsReadOnly) [ CD ]
Line_70 $$ TextChunk textChunk = text[i]-->Line_72 $$ append(textChunk.getText() + (i == 0 ? " " : ""), patchAttrs(node, simples))[ FD ]
Line_6 $$ Node node = (Node) value-->Line_52 $$ if (node.isRoot()) [ FD ]
Line_6 $$ Node node = (Node) value-->Line_72 $$ append(textChunk.getText() + (i == 0 ? " " : ""), patchAttrs(node, simples))[ FD ]
Line_61 $$ if (treeNode instanceof UsageNode) -->Line_75 $$ if (userObject instanceof String) [ CD ]
Line_17 $$ Object userObject = treeNode.getUserObject()-->Line_75 $$ if (userObject instanceof String) [ FD ]
Line_6 $$ Node node = (Node) value-->Line_63 $$ setIcon(node.getUsage().getPresentation().getIcon())[ FD ]
Line_50 $$ if (treeNode instanceof GroupNode) -->Line_58 $$ int count = node.getRecursiveUsageCount()[ CD ]
Line_67 $$ if (node.isValid()) -->Line_69 $$ for (int i = 0; i < text.length; i++) [ CD ]
Line_15 $$ if (value instanceof DefaultMutableTreeNode) -->Line_16 $$ DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode) value[ CD ]
Line_6 $$ Node node = (Node) value-->Line_65 $$ append(UsageViewBundle.message("node.readonly") + " ", patchAttrs(node, ourReadOnlyAttributes))[ FD ]
Line_61 $$ if (treeNode instanceof UsageNode) -->Line_67 $$ if (node.isValid()) [ CD ]
Line_75 $$ if (userObject instanceof String) -->Line_76 $$ append((String) userObject, SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES)[ CD ]
Line_16 $$ DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode) value-->Line_17 $$ Object userObject = treeNode.getUserObject()[ FD ]
Line_50 $$ if (treeNode instanceof GroupNode) -->Line_61 $$ if (treeNode instanceof UsageNode) [ CD ]
Line_17 $$ Object userObject = treeNode.getUserObject()-->Line_36 $$ if (userObject instanceof UsageTarget) [ FD ]
Line_6 $$ Node node = (Node) value-->Line_10 $$ if (myPresentation.isShowReadOnlyStatusAsRed() && node.isReadOnly()) [ FD ]
Line_4 $$ boolean showAsReadOnly = false-->Line_11 $$ showAsReadOnly = true[ FD ]
Line_36 $$ if (userObject instanceof UsageTarget) -->Line_38 $$ if (!usageTarget.isValid()) [ CD ]
Line_37 $$ UsageTarget usageTarget = (UsageTarget) userObject-->Line_42 $$ final ItemPresentation presentation = usageTarget.getPresentation()[ FD ]
Line_42 $$ final ItemPresentation presentation = usageTarget.getPresentation()-->Line_47 $$ final String text = presentation.getPresentableText()[ FD ]
Line_6 $$ Node node = (Node) value-->Line_67 $$ if (node.isValid()) [ FD ]
Line_69 $$ for (int i = 0; i < text.length; i++) -->Line_70 $$ TextChunk textChunk = text[i][ CD ]
Line_17 $$ Object userObject = treeNode.getUserObject()-->Line_78 $$ append(userObject == null ? "" : userObject.toString(), SimpleTextAttributes.REGULAR_ATTRIBUTES)[ FD ]
Line_15 $$ if (value instanceof DefaultMutableTreeNode) -->Line_18 $$ Rectangle visibleRect = ((JViewport) tree.getParent()).getViewRect()[ CD ]
Line_36 $$ if (userObject instanceof UsageTarget) -->Line_47 $$ final String text = presentation.getPresentableText()[ CD ]
Line_15 $$ if (value instanceof DefaultMutableTreeNode) -->Line_36 $$ if (userObject instanceof UsageTarget) [ CD ]
Line_36 $$ if (userObject instanceof UsageTarget) -->Line_44 $$ if (showAsReadOnly) [ CD ]
Line_50 $$ if (treeNode instanceof GroupNode) -->Line_59 $$ SimpleTextAttributes attributes = patchAttrs(node, ourNumberOfUsagesAttribute)[ CD ]
Line_19 $$ if (!visibleRect.isEmpty()) -->Line_27 $$ if (!getIpad().equals(STANDARD_IPAD_NOWIFI)) [ CD ]
Line_58 $$ int count = node.getRecursiveUsageCount()-->Line_60 $$ append(FontUtil.spaceAndThinSpace() + StringUtil.pluralize(count + " " + myPresentation.getUsagesWord(), count), SimpleTextAttributes.GRAYED_ATTRIBUTES.derive(attributes.getStyle(), null, null, null))[ FD ]
Line_69 $$ for (int i = 0; i < text.length; i++) -->Line_72 $$ append(textChunk.getText() + (i == 0 ? " " : ""), patchAttrs(node, simples))[ CD ]
Line_37 $$ UsageTarget usageTarget = (UsageTarget) userObject-->Line_38 $$ if (!usageTarget.isValid()) [ FD ]
Line_7 $$ if (!node.isValid()) -->Line_8 $$ append(UsageViewBundle.message("node.invalid") + " ", UIUtil.isUnderDarcula() ? ourInvalidAttributesDarcula : ourInvalidAttributes)[ CD ]
Line_75 $$ if (userObject instanceof String) -->Line_78 $$ append(userObject == null ? "" : userObject.toString(), SimpleTextAttributes.REGULAR_ATTRIBUTES)[ CD ]
Line_44 $$ if (showAsReadOnly) -->Line_45 $$ append(UsageViewBundle.message("node.readonly") + " ", ourReadOnlyAttributes)[ CD ]
Line_36 $$ if (userObject instanceof UsageTarget) -->Line_42 $$ final ItemPresentation presentation = usageTarget.getPresentation()[ CD ]
Line_6 $$ Node node = (Node) value-->Line_53 $$ append(StringUtil.capitalize(myPresentation.getUsagesWord()), patchAttrs(node, SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES))[ FD ]
Line_15 $$ if (value instanceof DefaultMutableTreeNode) -->Line_19 $$ if (!visibleRect.isEmpty()) [ CD ]
Line_59 $$ SimpleTextAttributes attributes = patchAttrs(node, ourNumberOfUsagesAttribute)-->Line_60 $$ append(FontUtil.spaceAndThinSpace() + StringUtil.pluralize(count + " " + myPresentation.getUsagesWord(), count), SimpleTextAttributes.GRAYED_ATTRIBUTES.derive(attributes.getStyle(), null, null, null))[ FD ]
Line_5 $$ if (value instanceof Node && value != tree.getModel().getRoot()) -->Line_10 $$ if (myPresentation.isShowReadOnlyStatusAsRed() && node.isReadOnly()) [ CD ]
Line_36 $$ if (userObject instanceof UsageTarget) -->Line_50 $$ if (treeNode instanceof GroupNode) [ CD ]
Line_18 $$ Rectangle visibleRect = ((JViewport) tree.getParent()).getViewRect()-->Line_19 $$ if (!visibleRect.isEmpty()) [ FD ]
Line_69 $$ for (int i = 0; i < text.length; i++) -->Line_71 $$ SimpleTextAttributes simples = textChunk.getSimpleAttributesIgnoreBackground()[ CD ]
Line_16 $$ DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode) value-->Line_61 $$ if (treeNode instanceof UsageNode) [ FD ]
Line_64 $$ if (showAsReadOnly) -->Line_65 $$ append(UsageViewBundle.message("node.readonly") + " ", patchAttrs(node, ourReadOnlyAttributes))[ CD ]
