Line_2 $$ public void testThatUpdateUsingNativeScriptWorks() throws Exception -->Line_6 $$ Map<String, Object> params = new HashMap()[ CD ]
Line_2 $$ public void testThatUpdateUsingNativeScriptWorks() throws Exception -->Line_10 $$ assertThat(data, hasKey("foo"))[ CD ]
Line_2 $$ public void testThatUpdateUsingNativeScriptWorks() throws Exception -->Line_4 $$ ensureYellow()[ CD ]
Line_6 $$ Map<String, Object> params = new HashMap()-->Line_7 $$ params.put("foo", "SETVALUE")[ FD ]
Line_9 $$ Map<String, Object> data = client().prepareGet("test", "type", "1").get().getSource()-->Line_11 $$ assertThat(data.get("foo").toString(), is("SETVALUE"))[ FD ]
Line_2 $$ public void testThatUpdateUsingNativeScriptWorks() throws Exception -->Line_9 $$ Map<String, Object> data = client().prepareGet("test", "type", "1").get().getSource()[ CD ]
Line_9 $$ Map<String, Object> data = client().prepareGet("test", "type", "1").get().getSource()-->Line_10 $$ assertThat(data, hasKey("foo"))[ FD ]
Line_2 $$ public void testThatUpdateUsingNativeScriptWorks() throws Exception -->Line_3 $$ createIndex("test")[ CD ]
Line_2 $$ public void testThatUpdateUsingNativeScriptWorks() throws Exception -->Line_5 $$ index("test", "type", "1", "text", "value")[ CD ]
Line_2 $$ public void testThatUpdateUsingNativeScriptWorks() throws Exception -->Line_7 $$ params.put("foo", "SETVALUE")[ CD ]
Line_2 $$ public void testThatUpdateUsingNativeScriptWorks() throws Exception -->Line_11 $$ assertThat(data.get("foo").toString(), is("SETVALUE"))[ CD ]
Line_2 $$ public void testThatUpdateUsingNativeScriptWorks() throws Exception -->Line_8 $$ client().prepareUpdate("test", "type", "1").setScript(new Script("custom", ScriptService.ScriptType.INLINE, NativeScriptEngineService.NAME, params)).get()[ CD ]
