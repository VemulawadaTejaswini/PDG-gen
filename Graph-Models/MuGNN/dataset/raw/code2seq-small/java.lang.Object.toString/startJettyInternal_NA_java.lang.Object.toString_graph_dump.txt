Line_8 $$ JettyPluginServer plugin = getServer()-->Line_29 $$ plugin.setUserRealms(configuredRealms)[ FD ]
Line_3 $$ ProgressLoggerFactory progressLoggerFactory = getServices().get(ProgressLoggerFactory.class)-->Line_4 $$ ProgressLogger progressLogger = progressLoggerFactory.newOperation(AbstractJettyRunTask.class).start("Start Jetty server", "Starting Jetty")[ FD ]
Line_8 $$ JettyPluginServer plugin = getServer()-->Line_13 $$ configuredConnectors = new Object[] [ FD ]
Line_8 $$ JettyPluginServer plugin = getServer()-->Line_11 $$ Object[] connectors = plugin.getConnectors()[ FD ]
Line_2 $$ public void startJettyInternal() -->Line_4 $$ ProgressLogger progressLogger = progressLoggerFactory.newOperation(AbstractJettyRunTask.class).start("Start Jetty server", "Starting Jetty")[ CD ]
Line_12 $$ if (connectors == null || connectors.length == 0) -->Line_14 $$ plugin.setConnectors(configuredConnectors)[ CD ]
Line_9 $$ Object[] configuredConnectors = getConnectors()-->Line_13 $$ configuredConnectors = new Object[] [ FD ]
Line_4 $$ ProgressLogger progressLogger = progressLoggerFactory.newOperation(AbstractJettyRunTask.class).start("Start Jetty server", "Starting Jetty")-->Line_59 $$ progressLogger.completed()[ FD ]
Line_38 $$ if (getStopPort() != null && getStopPort() > 0 && getStopKey() != null) -->Line_39 $$ Monitor monitor = new Monitor(getStopPort(), getStopKey(), (Server) server.getProxiedObject())[ CD ]
Line_8 $$ JettyPluginServer plugin = getServer()-->Line_14 $$ plugin.setConnectors(configuredConnectors)[ FD ]
Line_9 $$ Object[] configuredConnectors = getConnectors()-->Line_14 $$ plugin.setConnectors(configuredConnectors)[ FD ]
Line_4 $$ ProgressLogger progressLogger = progressLoggerFactory.newOperation(AbstractJettyRunTask.class).start("Start Jetty server", "Starting Jetty")-->Line_50 $$ progressLogger.completed()[ FD ]
Line_26 $$ for (int i = 0; (configuredRealms != null) && i < configuredRealms.length; i++) -->Line_27 $$ logger.debug(configuredRealms[i].getClass().getName() + ": " + configuredRealms[i].toString())[ CD ]
Line_3 $$ ProgressLoggerFactory progressLoggerFactory = getServices().get(ProgressLoggerFactory.class)-->Line_52 $$ progressLogger = progressLoggerFactory.newOperation(AbstractJettyRunTask.class).start(String.format("Run Jetty at http://localhost:%d/%s", getHttpPort(), getContextPath()), String.format("Running at http://localhost:%d/%s", getHttpPort(), getContextPath()))[ FD ]
Line_52 $$ progressLogger = progressLoggerFactory.newOperation(AbstractJettyRunTask.class).start(String.format("Run Jetty at http://localhost:%d/%s", getHttpPort(), getContextPath()), String.format("Running at http://localhost:%d/%s", getHttpPort(), getContextPath()))-->Line_59 $$ progressLogger.completed()[ FD ]
Line_2 $$ public void startJettyInternal() -->Line_3 $$ ProgressLoggerFactory progressLoggerFactory = getServices().get(ProgressLoggerFactory.class)[ CD ]
Line_12 $$ if (connectors == null || connectors.length == 0) -->Line_13 $$ configuredConnectors = new Object[] [ CD ]
Line_13 $$ configuredConnectors = new Object[] -->Line_14 $$ plugin.setConnectors(configuredConnectors)[ FD ]
Line_8 $$ JettyPluginServer plugin = getServer()-->Line_10 $$ plugin.setConnectors(configuredConnectors)[ FD ]
Line_39 $$ Monitor monitor = new Monitor(getStopPort(), getStopKey(), (Server) server.getProxiedObject())-->Line_40 $$ monitor.start()[ FD ]
Line_2 $$ public void startJettyInternal() -->Line_52 $$ progressLogger = progressLoggerFactory.newOperation(AbstractJettyRunTask.class).start(String.format("Run Jetty at http://localhost:%d/%s", getHttpPort(), getContextPath()), String.format("Running at http://localhost:%d/%s", getHttpPort(), getContextPath()))[ CD ]
Line_9 $$ Object[] configuredConnectors = getConnectors()-->Line_10 $$ plugin.setConnectors(configuredConnectors)[ FD ]
Line_38 $$ if (getStopPort() != null && getStopPort() > 0 && getStopKey() != null) -->Line_40 $$ monitor.start()[ CD ]
Line_35 $$ if (daemon) -->Line_36 $$ return[ CD ]
Line_4 $$ ProgressLogger progressLogger = progressLoggerFactory.newOperation(AbstractJettyRunTask.class).start("Start Jetty server", "Starting Jetty")-->Line_52 $$ progressLogger = progressLoggerFactory.newOperation(AbstractJettyRunTask.class).start(String.format("Run Jetty at http://localhost:%d/%s", getHttpPort(), getContextPath()), String.format("Running at http://localhost:%d/%s", getHttpPort(), getContextPath()))[ FD ]
