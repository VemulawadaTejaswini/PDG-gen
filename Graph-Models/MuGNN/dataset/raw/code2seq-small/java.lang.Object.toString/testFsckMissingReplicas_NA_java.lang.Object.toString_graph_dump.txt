Line_20 $$ DistributedFileSystem dfs = null-->Line_52 $$ dfs.close()[ FD ]
Line_20 $$ DistributedFileSystem dfs = null-->Line_32 $$ DFSTestUtil.createFile(dfs, path, fileLen, REPL_FACTOR, 1)[ FD ]
Line_40 $$ NamenodeFsck fsck = new NamenodeFsck(conf, namenode, nettop, pmap, out, NUM_REPLICAS, (short) 1, remoteAddress)-->Line_45 $$ fsck.check(pathString, file, res)[ FD ]
Line_31 $$ long fileLen = blockSize * NUM_BLOCKS-->Line_32 $$ DFSTestUtil.createFile(dfs, path, fileLen, REPL_FACTOR, 1)[ FD ]
Line_19 $$ MiniDFSCluster cluster = null-->Line_26 $$ dfs = cluster.getFileSystem()[ FD ]
Line_20 $$ DistributedFileSystem dfs = null-->Line_27 $$ assertNotNull("Failed to get FileSystem", dfs)[ FD ]
Line_26 $$ dfs = cluster.getFileSystem()-->Line_32 $$ DFSTestUtil.createFile(dfs, path, fileLen, REPL_FACTOR, 1)[ FD ]
Line_19 $$ MiniDFSCluster cluster = null-->Line_55 $$ cluster.shutdown()[ FD ]
Line_20 $$ DistributedFileSystem dfs = null-->Line_51 $$ if (dfs != null) [ FD ]
Line_26 $$ dfs = cluster.getFileSystem()-->Line_27 $$ assertNotNull("Failed to get FileSystem", dfs)[ FD ]
Line_26 $$ dfs = cluster.getFileSystem()-->Line_52 $$ dfs.close()[ FD ]
Line_30 $$ final Path path = new Path(pathString)-->Line_32 $$ DFSTestUtil.createFile(dfs, path, fileLen, REPL_FACTOR, 1)[ FD ]
Line_51 $$ if (dfs != null) -->Line_52 $$ dfs.close()[ CD ]
Line_44 $$ Result res = new Result(conf)-->Line_45 $$ fsck.check(pathString, file, res)[ FD ]
Line_19 $$ MiniDFSCluster cluster = null-->Line_54 $$ if (cluster != null) [ FD ]
Line_54 $$ if (cluster != null) -->Line_55 $$ cluster.shutdown()[ CD ]
Line_19 $$ MiniDFSCluster cluster = null-->Line_25 $$ cluster.waitClusterUp()[ FD ]
Line_19 $$ MiniDFSCluster cluster = null-->Line_24 $$ assertNotNull("Failed Cluster Creation", cluster)[ FD ]
Line_20 $$ DistributedFileSystem dfs = null-->Line_26 $$ dfs = cluster.getFileSystem()[ FD ]
Line_26 $$ dfs = cluster.getFileSystem()-->Line_51 $$ if (dfs != null) [ FD ]
Line_19 $$ MiniDFSCluster cluster = null-->Line_35 $$ NetworkTopology nettop = cluster.getNamesystem().getBlockManager().getDatanodeManager().getNetworkTopology()[ FD ]
Line_17 $$ Configuration conf = new Configuration()-->Line_18 $$ conf.setLong(DFSConfigKeys.DFS_BLOCK_SIZE_KEY, blockSize)[ FD ]
