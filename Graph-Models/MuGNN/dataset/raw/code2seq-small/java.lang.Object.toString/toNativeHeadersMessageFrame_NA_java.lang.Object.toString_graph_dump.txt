Line_4 $$ StompHeaderAccessor headers = StompHeaderAccessor.create(StompCommand.MESSAGE)-->Line_8 $$ headers.updateStompCommandAsServerMessage()[ FD ]
Line_9 $$ Map<String, List<String>> actual = headers.toNativeHeaderMap()-->Line_10 $$ assertEquals(actual.toString(), 4, actual.size())[ FD ]
Line_9 $$ Map<String, List<String>> actual = headers.toNativeHeaderMap()-->Line_11 $$ assertEquals("s1", actual.get(StompHeaderAccessor.STOMP_SUBSCRIPTION_HEADER).get(0))[ FD ]
Line_9 $$ Map<String, List<String>> actual = headers.toNativeHeaderMap()-->Line_13 $$ assertEquals("application/json", actual.get(StompHeaderAccessor.STOMP_CONTENT_TYPE_HEADER).get(0))[ FD ]
Line_9 $$ Map<String, List<String>> actual = headers.toNativeHeaderMap()-->Line_14 $$ assertNotNull("message-id was not created", actual.get(StompHeaderAccessor.STOMP_MESSAGE_ID_HEADER).get(0))[ FD ]
Line_4 $$ StompHeaderAccessor headers = StompHeaderAccessor.create(StompCommand.MESSAGE)-->Line_5 $$ headers.setSubscriptionId("s1")[ FD ]
Line_4 $$ StompHeaderAccessor headers = StompHeaderAccessor.create(StompCommand.MESSAGE)-->Line_7 $$ headers.setContentType(MimeTypeUtils.APPLICATION_JSON)[ FD ]
Line_4 $$ StompHeaderAccessor headers = StompHeaderAccessor.create(StompCommand.MESSAGE)-->Line_6 $$ headers.setDestination("/d")[ FD ]
Line_4 $$ StompHeaderAccessor headers = StompHeaderAccessor.create(StompCommand.MESSAGE)-->Line_9 $$ Map<String, List<String>> actual = headers.toNativeHeaderMap()[ FD ]
Line_9 $$ Map<String, List<String>> actual = headers.toNativeHeaderMap()-->Line_12 $$ assertEquals("/d", actual.get(StompHeaderAccessor.STOMP_DESTINATION_HEADER).get(0))[ FD ]
