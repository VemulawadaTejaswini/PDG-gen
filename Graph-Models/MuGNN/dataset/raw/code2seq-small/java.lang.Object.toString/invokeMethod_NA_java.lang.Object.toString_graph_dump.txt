Line_11 $$ if ("ref".equals(name)) -->Line_26 $$ return new RuntimeBeanReference(refName, parentRef)[ CD ]
Line_9 $$ if ("beans".equals(name) && args.length == 1 && args[0] instanceof Closure) -->Line_11 $$ if ("ref".equals(name)) [ CD ]
Line_11 $$ if ("ref".equals(name)) -->Line_27 $$ if (this.namespaces.containsKey(name) && args.length > 0 && args[0] instanceof Closure) [ CD ]
Line_39 $$ if (!mc.respondsTo(getRegistry(), name, args).isEmpty()) -->Line_40 $$ return mc.invokeMethod(getRegistry(), name, args)[ CD ]
Line_38 $$ MetaClass mc = DefaultGroovyMethods.getMetaClass(getRegistry())-->Line_39 $$ if (!mc.respondsTo(getRegistry(), name, args).isEmpty()) [ FD ]
Line_22 $$ if (args[1] instanceof Boolean) -->Line_23 $$ parentRef = (Boolean) args[1][ CD ]
Line_20 $$ boolean parentRef = false-->Line_23 $$ parentRef = (Boolean) args[1][ FD ]
Line_8 $$ Object[] args = (Object[]) arg-->Line_36 $$ return invokeBeanDefiningMethod(name, args)[ FD ]
Line_16 $$ refName = ((RuntimeBeanReference) args[0]).getBeanName()-->Line_18 $$ refName = args[0].toString()[ FD ]
Line_21 $$ if (args.length > 1) -->Line_22 $$ if (args[1] instanceof Boolean) [ CD ]
Line_33 $$ if (args.length > 0 && (args[0] instanceof Class || args[0] instanceof RuntimeBeanReference || args[0] instanceof Map)) -->Line_35 $$ if (args.length > 1 && args[args.length - 1] instanceof Closure) [ CD ]
Line_11 $$ if ("ref".equals(name)) -->Line_20 $$ boolean parentRef = false[ CD ]
Line_28 $$ GroovyDynamicElementReader reader = createDynamicElementReader(name)-->Line_29 $$ reader.invokeMethod("doCall", args)[ FD ]
Line_33 $$ if (args.length > 0 && (args[0] instanceof Class || args[0] instanceof RuntimeBeanReference || args[0] instanceof Map)) -->Line_34 $$ return invokeBeanDefiningMethod(name, args)[ CD ]
Line_35 $$ if (args.length > 1 && args[args.length - 1] instanceof Closure) -->Line_36 $$ return invokeBeanDefiningMethod(name, args)[ CD ]
Line_9 $$ if ("beans".equals(name) && args.length == 1 && args[0] instanceof Closure) -->Line_10 $$ return beans((Closure) args[0])[ CD ]
Line_8 $$ Object[] args = (Object[]) arg-->Line_40 $$ return mc.invokeMethod(getRegistry(), name, args)[ FD ]
Line_11 $$ if ("ref".equals(name)) -->Line_15 $$ if (args[0] instanceof RuntimeBeanReference) [ CD ]
Line_27 $$ if (this.namespaces.containsKey(name) && args.length > 0 && args[0] instanceof Closure) -->Line_30 $$ if (args.length > 0 && args[0] instanceof Closure) [ CD ]
Line_8 $$ Object[] args = (Object[]) arg-->Line_34 $$ return invokeBeanDefiningMethod(name, args)[ FD ]
Line_12 $$ String refName-->Line_18 $$ refName = args[0].toString()[ FD ]
Line_11 $$ if ("ref".equals(name)) -->Line_21 $$ if (args.length > 1) [ CD ]
Line_11 $$ if ("ref".equals(name)) -->Line_12 $$ String refName[ CD ]
Line_15 $$ if (args[0] instanceof RuntimeBeanReference) -->Line_18 $$ refName = args[0].toString()[ CD ]
Line_27 $$ if (this.namespaces.containsKey(name) && args.length > 0 && args[0] instanceof Closure) -->Line_28 $$ GroovyDynamicElementReader reader = createDynamicElementReader(name)[ CD ]
Line_8 $$ Object[] args = (Object[]) arg-->Line_39 $$ if (!mc.respondsTo(getRegistry(), name, args).isEmpty()) [ FD ]
Line_30 $$ if (args.length > 0 && args[0] instanceof Closure) -->Line_33 $$ if (args.length > 0 && (args[0] instanceof Class || args[0] instanceof RuntimeBeanReference || args[0] instanceof Map)) [ CD ]
Line_27 $$ if (this.namespaces.containsKey(name) && args.length > 0 && args[0] instanceof Closure) -->Line_29 $$ reader.invokeMethod("doCall", args)[ CD ]
Line_11 $$ if ("ref".equals(name)) -->Line_13 $$ if (args[0] == null)[ CD ]
Line_38 $$ MetaClass mc = DefaultGroovyMethods.getMetaClass(getRegistry())-->Line_40 $$ return mc.invokeMethod(getRegistry(), name, args)[ FD ]
Line_8 $$ Object[] args = (Object[]) arg-->Line_29 $$ reader.invokeMethod("doCall", args)[ FD ]
Line_12 $$ String refName-->Line_16 $$ refName = ((RuntimeBeanReference) args[0]).getBeanName()[ FD ]
Line_15 $$ if (args[0] instanceof RuntimeBeanReference) -->Line_16 $$ refName = ((RuntimeBeanReference) args[0]).getBeanName()[ CD ]
