Line_2 $$ public Object invokeMethod(String name, Object arg) -->Line_3 $$ Object[] args = (Object[]) arg[ CD ]
Line_2 $$ public Object invokeMethod(String name, Object arg) -->Line_32 $$ MetaClass mc = DefaultGroovyMethods.getMetaClass(getRegistry())[ CD ]
Line_2 $$ public Object invokeMethod(String name, Object arg) -->Line_33 $$ if (!mc.respondsTo(getRegistry(), name, args).isEmpty()) [ CD ]
Line_22 $$ if (this.namespaces.containsKey(name) && args.length > 0 && args[0] instanceof Closure) -->Line_24 $$ reader.invokeMethod("doCall", args)[ CD ]
Line_25 $$ if (args.length > 0 && args[0] instanceof Closure) -->Line_27 $$ if (args.length > 0 && (args[0] instanceof Class || args[0] instanceof RuntimeBeanReference || args[0] instanceof Map)) [ CD ]
Line_2 $$ public Object invokeMethod(String name, Object arg) -->Line_36 $$ return this[ CD ]
Line_2 $$ public Object invokeMethod(String name, Object arg) -->Line_30 $$ return invokeBeanDefiningMethod(name, args)[ FD ]
Line_32 $$ MetaClass mc = DefaultGroovyMethods.getMetaClass(getRegistry())-->Line_33 $$ if (!mc.respondsTo(getRegistry(), name, args).isEmpty()) [ FD ]
Line_2 $$ public Object invokeMethod(String name, Object arg) -->Line_4 $$ if ("beans".equals(name) && args.length == 1 && args[0] instanceof Closure) [ CD ]
Line_3 $$ Object[] args = (Object[]) arg-->Line_26 $$ return invokeBeanDefiningMethod(name, args)[ FD ]
Line_6 $$ if ("ref".equals(name)) -->Line_10 $$ if (args[0] instanceof RuntimeBeanReference) [ CD ]
Line_32 $$ MetaClass mc = DefaultGroovyMethods.getMetaClass(getRegistry())-->Line_34 $$ return mc.invokeMethod(getRegistry(), name, args)[ FD ]
Line_22 $$ if (this.namespaces.containsKey(name) && args.length > 0 && args[0] instanceof Closure) -->Line_23 $$ GroovyDynamicElementReader reader = createDynamicElementReader(name)[ CD ]
Line_29 $$ if (args.length > 1 && args[args.length - 1] instanceof Closure) -->Line_30 $$ return invokeBeanDefiningMethod(name, args)[ CD ]
Line_10 $$ if (args[0] instanceof RuntimeBeanReference) -->Line_11 $$ refName = ((RuntimeBeanReference) args[0]).getBeanName()[ CD ]
Line_6 $$ if ("ref".equals(name)) -->Line_22 $$ if (this.namespaces.containsKey(name) && args.length > 0 && args[0] instanceof Closure) [ CD ]
Line_3 $$ Object[] args = (Object[]) arg-->Line_34 $$ return mc.invokeMethod(getRegistry(), name, args)[ FD ]
Line_11 $$ refName = ((RuntimeBeanReference) args[0]).getBeanName()-->Line_13 $$ refName = args[0].toString()[ FD ]
Line_27 $$ if (args.length > 0 && (args[0] instanceof Class || args[0] instanceof RuntimeBeanReference || args[0] instanceof Map)) -->Line_29 $$ if (args.length > 1 && args[args.length - 1] instanceof Closure) [ CD ]
Line_10 $$ if (args[0] instanceof RuntimeBeanReference) -->Line_13 $$ refName = args[0].toString()[ CD ]
Line_6 $$ if ("ref".equals(name)) -->Line_21 $$ return new RuntimeBeanReference(refName, parentRef)[ CD ]
Line_2 $$ public Object invokeMethod(String name, Object arg) -->Line_28 $$ return invokeBeanDefiningMethod(name, args)[ FD ]
Line_3 $$ Object[] args = (Object[]) arg-->Line_30 $$ return invokeBeanDefiningMethod(name, args)[ FD ]
Line_6 $$ if ("ref".equals(name)) -->Line_16 $$ if (args.length > 1) [ CD ]
Line_6 $$ if ("ref".equals(name)) -->Line_15 $$ boolean parentRef = false[ CD ]
Line_2 $$ public Object invokeMethod(String name, Object arg) -->Line_33 $$ if (!mc.respondsTo(getRegistry(), name, args).isEmpty()) [ FD ]
Line_22 $$ if (this.namespaces.containsKey(name) && args.length > 0 && args[0] instanceof Closure) -->Line_25 $$ if (args.length > 0 && args[0] instanceof Closure) [ CD ]
Line_6 $$ if ("ref".equals(name)) -->Line_8 $$ if (args[0] == null)[ CD ]
Line_33 $$ if (!mc.respondsTo(getRegistry(), name, args).isEmpty()) -->Line_34 $$ return mc.invokeMethod(getRegistry(), name, args)[ CD ]
Line_2 $$ public Object invokeMethod(String name, Object arg) -->Line_26 $$ return invokeBeanDefiningMethod(name, args)[ FD ]
Line_7 $$ String refName-->Line_11 $$ refName = ((RuntimeBeanReference) args[0]).getBeanName()[ FD ]
Line_2 $$ public Object invokeMethod(String name, Object arg) -->Line_4 $$ if ("beans".equals(name) && args.length == 1 && args[0] instanceof Closure) [ FD ]
Line_4 $$ if ("beans".equals(name) && args.length == 1 && args[0] instanceof Closure) -->Line_6 $$ if ("ref".equals(name)) [ CD ]
Line_2 $$ public Object invokeMethod(String name, Object arg) -->Line_6 $$ if ("ref".equals(name)) [ FD ]
Line_4 $$ if ("beans".equals(name) && args.length == 1 && args[0] instanceof Closure) -->Line_5 $$ return beans((Closure) args[0])[ CD ]
Line_3 $$ Object[] args = (Object[]) arg-->Line_33 $$ if (!mc.respondsTo(getRegistry(), name, args).isEmpty()) [ FD ]
Line_25 $$ if (args.length > 0 && args[0] instanceof Closure) -->Line_26 $$ return invokeBeanDefiningMethod(name, args)[ CD ]
Line_2 $$ public Object invokeMethod(String name, Object arg) -->Line_23 $$ GroovyDynamicElementReader reader = createDynamicElementReader(name)[ FD ]
Line_2 $$ public Object invokeMethod(String name, Object arg) -->Line_22 $$ if (this.namespaces.containsKey(name) && args.length > 0 && args[0] instanceof Closure) [ FD ]
Line_17 $$ if (args[1] instanceof Boolean) -->Line_18 $$ parentRef = (Boolean) args[1][ CD ]
Line_3 $$ Object[] args = (Object[]) arg-->Line_24 $$ reader.invokeMethod("doCall", args)[ FD ]
Line_23 $$ GroovyDynamicElementReader reader = createDynamicElementReader(name)-->Line_24 $$ reader.invokeMethod("doCall", args)[ FD ]
Line_27 $$ if (args.length > 0 && (args[0] instanceof Class || args[0] instanceof RuntimeBeanReference || args[0] instanceof Map)) -->Line_28 $$ return invokeBeanDefiningMethod(name, args)[ CD ]
Line_15 $$ boolean parentRef = false-->Line_18 $$ parentRef = (Boolean) args[1][ FD ]
Line_3 $$ Object[] args = (Object[]) arg-->Line_28 $$ return invokeBeanDefiningMethod(name, args)[ FD ]
Line_2 $$ public Object invokeMethod(String name, Object arg) -->Line_34 $$ return mc.invokeMethod(getRegistry(), name, args)[ FD ]
Line_6 $$ if ("ref".equals(name)) -->Line_7 $$ String refName[ CD ]
Line_7 $$ String refName-->Line_13 $$ refName = args[0].toString()[ FD ]
Line_16 $$ if (args.length > 1) -->Line_17 $$ if (args[1] instanceof Boolean) [ CD ]
