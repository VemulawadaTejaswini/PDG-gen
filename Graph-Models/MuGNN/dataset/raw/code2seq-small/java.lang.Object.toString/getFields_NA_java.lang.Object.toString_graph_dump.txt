Line_10 $$ for (int i = 0; i < values.size(); i++) -->Line_11 $$ fields[i] = new Field(mapper.fieldType().name(), values.get(i).toString(), TextField.TYPE_NOT_STORED)[ FD ]
Line_5 $$ List<Object> values = sourceLookup.extractRawValues(hitContext.getSourcePath(mapper.fieldType().name()))-->Line_9 $$ Field[] fields = new Field[values.size()][ FD ]
Line_5 $$ List<Object> values = sourceLookup.extractRawValues(hitContext.getSourcePath(mapper.fieldType().name()))-->Line_10 $$ for (int i = 0; i < values.size(); i++) [ FD ]
Line_2 $$ protected Field[] getFields(IndexReader reader, int docId, String fieldName) throws IOException -->Line_10 $$ for (int i = 0; i < values.size(); i++) [ CD ]
Line_2 $$ protected Field[] getFields(IndexReader reader, int docId, String fieldName) throws IOException -->Line_4 $$ sourceLookup.setSegmentAndDocument((LeafReaderContext) reader.getContext(), docId)[ FD ]
Line_6 $$ if (values.isEmpty()) -->Line_7 $$ return EMPTY_FIELDS[ CD ]
Line_2 $$ protected Field[] getFields(IndexReader reader, int docId, String fieldName) throws IOException -->Line_3 $$ SourceLookup sourceLookup = searchContext.lookup().source()[ CD ]
Line_2 $$ protected Field[] getFields(IndexReader reader, int docId, String fieldName) throws IOException -->Line_4 $$ sourceLookup.setSegmentAndDocument((LeafReaderContext) reader.getContext(), docId)[ CD ]
Line_5 $$ List<Object> values = sourceLookup.extractRawValues(hitContext.getSourcePath(mapper.fieldType().name()))-->Line_11 $$ fields[i] = new Field(mapper.fieldType().name(), values.get(i).toString(), TextField.TYPE_NOT_STORED)[ FD ]
Line_2 $$ protected Field[] getFields(IndexReader reader, int docId, String fieldName) throws IOException -->Line_9 $$ Field[] fields = new Field[values.size()][ CD ]
Line_2 $$ protected Field[] getFields(IndexReader reader, int docId, String fieldName) throws IOException -->Line_6 $$ if (values.isEmpty()) [ CD ]
Line_2 $$ protected Field[] getFields(IndexReader reader, int docId, String fieldName) throws IOException -->Line_13 $$ return fields[ CD ]
Line_10 $$ for (int i = 0; i < values.size(); i++) -->Line_11 $$ fields[i] = new Field(mapper.fieldType().name(), values.get(i).toString(), TextField.TYPE_NOT_STORED)[ CD ]
Line_3 $$ SourceLookup sourceLookup = searchContext.lookup().source()-->Line_5 $$ List<Object> values = sourceLookup.extractRawValues(hitContext.getSourcePath(mapper.fieldType().name()))[ FD ]
Line_2 $$ protected Field[] getFields(IndexReader reader, int docId, String fieldName) throws IOException -->Line_5 $$ List<Object> values = sourceLookup.extractRawValues(hitContext.getSourcePath(mapper.fieldType().name()))[ CD ]
Line_5 $$ List<Object> values = sourceLookup.extractRawValues(hitContext.getSourcePath(mapper.fieldType().name()))-->Line_6 $$ if (values.isEmpty()) [ FD ]
Line_3 $$ SourceLookup sourceLookup = searchContext.lookup().source()-->Line_4 $$ sourceLookup.setSegmentAndDocument((LeafReaderContext) reader.getContext(), docId)[ FD ]
