Line_2 $$ private Fields generateTermVectors(IndexShard indexShard, Collection<GetField> getFields, boolean withOffsets, @Nullable Map<String, String> perFieldAnalyzer, Set<String> fields) throws IOException -->Line_11 $$ Analyzer analyzer = getAnalyzerAtField(indexShard, field, perFieldAnalyzer)[ FD ]
Line_12 $$ for (Object text : getField.getValues()) -->Line_13 $$ index.addField(field, text.toString(), analyzer)[ FD ]
Line_5 $$ for (GetField getField : getFields) -->Line_6 $$ String field = getField.getName()[ FD ]
Line_6 $$ String field = getField.getName()-->Line_11 $$ Analyzer analyzer = getAnalyzerAtField(indexShard, field, perFieldAnalyzer)[ FD ]
Line_11 $$ Analyzer analyzer = getAnalyzerAtField(indexShard, field, perFieldAnalyzer)-->Line_13 $$ index.addField(field, text.toString(), analyzer)[ FD ]
Line_5 $$ for (GetField getField : getFields) -->Line_12 $$ for (Object text : getField.getValues()) [ FD ]
Line_2 $$ private Fields generateTermVectors(IndexShard indexShard, Collection<GetField> getFields, boolean withOffsets, @Nullable Map<String, String> perFieldAnalyzer, Set<String> fields) throws IOException -->Line_7 $$ if (fields.contains(field) == false) [ FD ]
Line_6 $$ String field = getField.getName()-->Line_13 $$ index.addField(field, text.toString(), analyzer)[ FD ]
Line_6 $$ String field = getField.getName()-->Line_7 $$ if (fields.contains(field) == false) [ FD ]
