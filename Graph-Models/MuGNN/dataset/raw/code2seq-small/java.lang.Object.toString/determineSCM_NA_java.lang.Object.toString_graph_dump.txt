Line_3 $$ Exec exec = new Exec(this)-->Line_17 $$ ret = exec.run(Arrays.asList(gitCommand, "log", "-n", "1"), scmOut)[ FD ]
Line_18 $$ if (ret != 0) -->Line_22 $$ scm = SCM.GIT[ CD ]
Line_4 $$ SCM scm = SCM.NONE-->Line_19 $$ scm = SCM.NONE[ FD ]
Line_13 $$ if (ret != 0) -->Line_14 $$ scm = SCM.NONE[ CD ]
Line_6 $$ int ret = exec.run(Arrays.asList(svnCommand, "info"), scmOut)-->Line_12 $$ ret = exec.run(Arrays.asList(gitCommand, "remote", "-v"), scmOut)[ FD ]
Line_8 $$ scm = SCM.SVN-->Line_22 $$ scm = SCM.GIT[ FD ]
Line_2 $$ private SCM determineSCM() throws Exception -->Line_4 $$ SCM scm = SCM.NONE[ CD ]
Line_17 $$ ret = exec.run(Arrays.asList(gitCommand, "log", "-n", "1"), scmOut)-->Line_18 $$ if (ret != 0) [ FD ]
Line_10 $$ ret = exec.run(Arrays.asList(gitCommand, "branch"), scmOut)-->Line_12 $$ ret = exec.run(Arrays.asList(gitCommand, "remote", "-v"), scmOut)[ FD ]
Line_2 $$ private SCM determineSCM() throws Exception -->Line_3 $$ Exec exec = new Exec(this)[ CD ]
Line_2 $$ private SCM determineSCM() throws Exception -->Line_6 $$ int ret = exec.run(Arrays.asList(svnCommand, "info"), scmOut)[ CD ]
Line_6 $$ int ret = exec.run(Arrays.asList(svnCommand, "info"), scmOut)-->Line_13 $$ if (ret != 0) [ FD ]
Line_8 $$ scm = SCM.SVN-->Line_19 $$ scm = SCM.NONE[ FD ]
Line_3 $$ Exec exec = new Exec(this)-->Line_6 $$ int ret = exec.run(Arrays.asList(svnCommand, "info"), scmOut)[ FD ]
Line_10 $$ ret = exec.run(Arrays.asList(gitCommand, "branch"), scmOut)-->Line_17 $$ ret = exec.run(Arrays.asList(gitCommand, "log", "-n", "1"), scmOut)[ FD ]
Line_3 $$ Exec exec = new Exec(this)-->Line_12 $$ ret = exec.run(Arrays.asList(gitCommand, "remote", "-v"), scmOut)[ FD ]
Line_2 $$ private SCM determineSCM() throws Exception -->Line_7 $$ if (ret == 0) [ CD ]
Line_7 $$ if (ret == 0) -->Line_11 $$ if (ret == 0) [ CD ]
Line_6 $$ int ret = exec.run(Arrays.asList(svnCommand, "info"), scmOut)-->Line_7 $$ if (ret == 0) [ FD ]
Line_7 $$ if (ret == 0) -->Line_8 $$ scm = SCM.SVN[ CD ]
Line_11 $$ if (ret == 0) -->Line_12 $$ ret = exec.run(Arrays.asList(gitCommand, "remote", "-v"), scmOut)[ CD ]
Line_8 $$ scm = SCM.SVN-->Line_14 $$ scm = SCM.NONE[ FD ]
Line_7 $$ if (ret == 0) -->Line_10 $$ ret = exec.run(Arrays.asList(gitCommand, "branch"), scmOut)[ CD ]
Line_10 $$ ret = exec.run(Arrays.asList(gitCommand, "branch"), scmOut)-->Line_18 $$ if (ret != 0) [ FD ]
Line_14 $$ scm = SCM.NONE-->Line_19 $$ scm = SCM.NONE[ FD ]
Line_10 $$ ret = exec.run(Arrays.asList(gitCommand, "branch"), scmOut)-->Line_11 $$ if (ret == 0) [ FD ]
Line_12 $$ ret = exec.run(Arrays.asList(gitCommand, "remote", "-v"), scmOut)-->Line_13 $$ if (ret != 0) [ FD ]
Line_12 $$ ret = exec.run(Arrays.asList(gitCommand, "remote", "-v"), scmOut)-->Line_18 $$ if (ret != 0) [ FD ]
Line_13 $$ if (ret != 0) -->Line_18 $$ if (ret != 0) [ CD ]
Line_4 $$ SCM scm = SCM.NONE-->Line_8 $$ scm = SCM.SVN[ FD ]
Line_10 $$ ret = exec.run(Arrays.asList(gitCommand, "branch"), scmOut)-->Line_13 $$ if (ret != 0) [ FD ]
Line_3 $$ Exec exec = new Exec(this)-->Line_10 $$ ret = exec.run(Arrays.asList(gitCommand, "branch"), scmOut)[ FD ]
Line_19 $$ scm = SCM.NONE-->Line_22 $$ scm = SCM.GIT[ FD ]
Line_18 $$ if (ret != 0) -->Line_19 $$ scm = SCM.NONE[ CD ]
Line_2 $$ private SCM determineSCM() throws Exception -->Line_27 $$ if (scmOut != null) [ CD ]
Line_12 $$ ret = exec.run(Arrays.asList(gitCommand, "remote", "-v"), scmOut)-->Line_17 $$ ret = exec.run(Arrays.asList(gitCommand, "log", "-n", "1"), scmOut)[ FD ]
Line_2 $$ private SCM determineSCM() throws Exception -->Line_30 $$ getLog().info("SCM: " + scm)[ CD ]
Line_6 $$ int ret = exec.run(Arrays.asList(svnCommand, "info"), scmOut)-->Line_10 $$ ret = exec.run(Arrays.asList(gitCommand, "branch"), scmOut)[ FD ]
Line_27 $$ if (scmOut != null) -->Line_28 $$ getLog().debug(scmOut.toString())[ CD ]
Line_4 $$ SCM scm = SCM.NONE-->Line_14 $$ scm = SCM.NONE[ FD ]
Line_14 $$ scm = SCM.NONE-->Line_22 $$ scm = SCM.GIT[ FD ]
Line_13 $$ if (ret != 0) -->Line_17 $$ ret = exec.run(Arrays.asList(gitCommand, "log", "-n", "1"), scmOut)[ CD ]
Line_11 $$ if (ret == 0) -->Line_13 $$ if (ret != 0) [ CD ]
Line_6 $$ int ret = exec.run(Arrays.asList(svnCommand, "info"), scmOut)-->Line_17 $$ ret = exec.run(Arrays.asList(gitCommand, "log", "-n", "1"), scmOut)[ FD ]
Line_2 $$ private SCM determineSCM() throws Exception -->Line_31 $$ return scm[ CD ]
Line_4 $$ SCM scm = SCM.NONE-->Line_22 $$ scm = SCM.GIT[ FD ]
Line_6 $$ int ret = exec.run(Arrays.asList(svnCommand, "info"), scmOut)-->Line_11 $$ if (ret == 0) [ FD ]
Line_6 $$ int ret = exec.run(Arrays.asList(svnCommand, "info"), scmOut)-->Line_18 $$ if (ret != 0) [ FD ]
