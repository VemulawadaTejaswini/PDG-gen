Line_4 $$ ResolvableType type = ResolvableType.forClass(ExtendsList.class)-->Line_5 $$ assertThat(type.getInterfaces().length, equalTo(0))[ FD ]
Line_6 $$ SortedSet<String> interfaces = new TreeSet<String>()-->Line_10 $$ assertThat(interfaces.toString(), equalTo("[" + "java.io.Serializable, " + "java.lang.Cloneable, " + "java.util.List<java.lang.CharSequence>, " + "java.util.RandomAccess" + "]"))[ FD ]
Line_4 $$ ResolvableType type = ResolvableType.forClass(ExtendsList.class)-->Line_7 $$ for (ResolvableType interfaceType : type.getSuperType().getInterfaces()) [ FD ]
Line_6 $$ SortedSet<String> interfaces = new TreeSet<String>()-->Line_8 $$ interfaces.add(interfaceType.toString())[ FD ]
Line_7 $$ for (ResolvableType interfaceType : type.getSuperType().getInterfaces()) -->Line_8 $$ interfaces.add(interfaceType.toString())[ FD ]
