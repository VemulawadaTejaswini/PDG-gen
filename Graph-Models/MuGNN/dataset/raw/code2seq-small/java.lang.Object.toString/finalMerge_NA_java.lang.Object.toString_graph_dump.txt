Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_30 $$ onDiskMapOutputs.add(new CompressAwarePath(outputPath, writer.getRawLength(), writer.getCompressedLength()))[ FD ]
Line_13 $$ final RawComparator<K> comparator = (RawComparator<K>) job.getOutputKeyComparator()-->Line_87 $$ return Merger.merge(job, fs, keyClass, valueClass, finalSegments, finalSegments.size(), tmpDir, comparator, reporter, spilledRecordsCounter, null, null)[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_5 $$ if (maxRedPer > 1.0 || maxRedPer < 0.0) [ CD ]
Line_21 $$ if (numMemDiskSegments > 0 && ioSortFactor > onDiskMapOutputs.size()) -->Line_45 $$ LOG.info("Merged " + numMemDiskSegments + " segments, " + inMemToDiskBytes + " bytes to disk to satisfy " + "reduce memory limit")[ CD ]
Line_52 $$ List<Segment<K, V>> diskSegments = new ArrayList<Segment<K, V>>()-->Line_64 $$ Collections.sort(diskSegments, new Comparator<Segment<K, V>>() [ FD ]
Line_31 $$ writer = null-->Line_42 $$ writer.close()[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_15 $$ long inMemToDiskBytes = 0[ CD ]
Line_23 $$ final Path outputPath = mapOutputFile.getInputFileForWrite(mapId, inMemToDiskBytes).suffix(Task.MERGED_OUTPUT_PREFIX)-->Line_35 $$ fs.delete(outputPath, true)[ FD ]
Line_19 $$ inMemToDiskBytes = createInMemorySegments(inMemoryMapOutputs, memDiskSegments, maxInMemReduce)-->Line_48 $$ if (inMemToDiskBytes != 0) [ FD ]
Line_20 $$ final int numMemDiskSegments = memDiskSegments.size()-->Line_24 $$ final RawKeyValueIterator rIter = Merger.merge(job, fs, keyClass, valueClass, memDiskSegments, numMemDiskSegments, tmpDir, comparator, reporter, spilledRecordsCounter, null, mergePhase)[ FD ]
Line_53 $$ long onDiskBytes = inMemToDiskBytes-->Line_58 $$ onDiskBytes += fileLength[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_3 $$ LOG.info("finalMerge called with " + inMemoryMapOutputs.size() + " in-memory map-outputs and " + onDiskMapOutputs.size() + " on-disk map-outputs")[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_73 $$ long inMemBytes = createInMemorySegments(inMemoryMapOutputs, finalSegments, 0)[ FD ]
Line_21 $$ if (numMemDiskSegments > 0 && ioSortFactor > onDiskMapOutputs.size()) -->Line_25 $$ FSDataOutputStream out = CryptoUtils.wrapIfNecessary(job, fs.create(outputPath))[ CD ]
Line_14 $$ List<Segment<K, V>> memDiskSegments = new ArrayList<Segment<K, V>>()-->Line_77 $$ diskSegments.addAll(0, memDiskSegments)[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_9 $$ Class<K> keyClass = (Class<K>) job.getMapOutputKeyClass()[ CD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_8 $$ int maxInMemReduce = (int) Math.min(Runtime.getRuntime().maxMemory() * maxRedPer, Integer.MAX_VALUE)[ CD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_74 $$ LOG.info("Merging " + finalSegments.size() + " segments, " + inMemBytes + " bytes from memory into reduce")[ CD ]
Line_41 $$ if (null != writer) -->Line_42 $$ writer.close()[ CD ]
Line_21 $$ if (numMemDiskSegments > 0 && ioSortFactor > onDiskMapOutputs.size()) -->Line_22 $$ mergePhaseFinished = true[ CD ]
Line_18 $$ TaskID mapId = inMemoryMapOutputs.get(0).getMapId().getTaskID()-->Line_23 $$ final Path outputPath = mapOutputFile.getInputFileForWrite(mapId, inMemToDiskBytes).suffix(Task.MERGED_OUTPUT_PREFIX)[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_17 $$ if (inMemoryMapOutputs.size() > 0) [ CD ]
Line_19 $$ inMemToDiskBytes = createInMemorySegments(inMemoryMapOutputs, memDiskSegments, maxInMemReduce)-->Line_46 $$ inMemToDiskBytes = 0[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_18 $$ TaskID mapId = inMemoryMapOutputs.get(0).getMapId().getTaskID()[ FD ]
Line_21 $$ if (numMemDiskSegments > 0 && ioSortFactor > onDiskMapOutputs.size()) -->Line_24 $$ final RawKeyValueIterator rIter = Merger.merge(job, fs, keyClass, valueClass, memDiskSegments, numMemDiskSegments, tmpDir, comparator, reporter, spilledRecordsCounter, null, mergePhase)[ CD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_73 $$ long inMemBytes = createInMemorySegments(inMemoryMapOutputs, finalSegments, 0)[ CD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_55 $$ CompressAwarePath[] onDisk = onDiskMapOutputs.toArray(new CompressAwarePath[onDiskMapOutputs.size()])[ CD ]
Line_15 $$ long inMemToDiskBytes = 0-->Line_23 $$ final Path outputPath = mapOutputFile.getInputFileForWrite(mapId, inMemToDiskBytes).suffix(Task.MERGED_OUTPUT_PREFIX)[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_12 $$ final Path tmpDir = new Path(reduceId.toString())[ CD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_11 $$ boolean keepInputs = job.getKeepFailedTaskFiles()[ CD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_64 $$ Collections.sort(diskSegments, new Comparator<Segment<K, V>>() [ CD ]
Line_21 $$ if (numMemDiskSegments > 0 && ioSortFactor > onDiskMapOutputs.size()) -->Line_23 $$ final Path outputPath = mapOutputFile.getInputFileForWrite(mapId, inMemToDiskBytes).suffix(Task.MERGED_OUTPUT_PREFIX)[ CD ]
Line_15 $$ long inMemToDiskBytes = 0-->Line_46 $$ inMemToDiskBytes = 0[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_35 $$ fs.delete(outputPath, true)[ FD ]
Line_8 $$ int maxInMemReduce = (int) Math.min(Runtime.getRuntime().maxMemory() * maxRedPer, Integer.MAX_VALUE)-->Line_19 $$ inMemToDiskBytes = createInMemorySegments(inMemoryMapOutputs, memDiskSegments, maxInMemReduce)[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_52 $$ List<Segment<K, V>> diskSegments = new ArrayList<Segment<K, V>>()[ CD ]
Line_75 $$ if (0 != onDiskBytes) -->Line_85 $$ finalSegments.add(new Segment<K, V>(new RawKVIteratorReader(diskMerge, onDiskBytes), true, rawBytes))[ CD ]
Line_52 $$ List<Segment<K, V>> diskSegments = new ArrayList<Segment<K, V>>()-->Line_80 $$ RawKeyValueIterator diskMerge = Merger.merge(job, fs, keyClass, valueClass, codec, diskSegments, ioSortFactor, numInMemSegments, tmpDir, comparator, reporter, false, spilledRecordsCounter, null, thisPhase)[ FD ]
Line_75 $$ if (0 != onDiskBytes) -->Line_80 $$ RawKeyValueIterator diskMerge = Merger.merge(job, fs, keyClass, valueClass, codec, diskSegments, ioSortFactor, numInMemSegments, tmpDir, comparator, reporter, false, spilledRecordsCounter, null, thisPhase)[ CD ]
Line_46 $$ inMemToDiskBytes = 0-->Line_48 $$ if (inMemToDiskBytes != 0) [ FD ]
Line_75 $$ if (0 != onDiskBytes) -->Line_81 $$ diskSegments.clear()[ CD ]
Line_53 $$ long onDiskBytes = inMemToDiskBytes-->Line_75 $$ if (0 != onDiskBytes) [ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_14 $$ List<Segment<K, V>> memDiskSegments = new ArrayList<Segment<K, V>>()[ CD ]
Line_9 $$ Class<K> keyClass = (Class<K>) job.getMapOutputKeyClass()-->Line_80 $$ RawKeyValueIterator diskMerge = Merger.merge(job, fs, keyClass, valueClass, codec, diskSegments, ioSortFactor, numInMemSegments, tmpDir, comparator, reporter, false, spilledRecordsCounter, null, thisPhase)[ FD ]
Line_82 $$ if (0 == finalSegments.size()) -->Line_83 $$ return diskMerge[ CD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_13 $$ final RawComparator<K> comparator = (RawComparator<K>) job.getOutputKeyComparator()[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_10 $$ Class<V> valueClass = (Class<V>) job.getMapOutputValueClass()[ CD ]
Line_10 $$ Class<V> valueClass = (Class<V>) job.getMapOutputValueClass()-->Line_80 $$ RawKeyValueIterator diskMerge = Merger.merge(job, fs, keyClass, valueClass, codec, diskSegments, ioSortFactor, numInMemSegments, tmpDir, comparator, reporter, false, spilledRecordsCounter, null, thisPhase)[ FD ]
Line_26 $$ Writer<K, V> writer = new Writer<K, V>(job, out, keyClass, valueClass, codec, null, true)-->Line_42 $$ writer.close()[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_87 $$ return Merger.merge(job, fs, keyClass, valueClass, finalSegments, finalSegments.size(), tmpDir, comparator, reporter, spilledRecordsCounter, null, null)[ FD ]
Line_54 $$ long rawBytes = inMemToDiskBytes-->Line_59 $$ rawBytes += (file.getRawDataLength() > 0) ? file.getRawDataLength() : fileLength[ FD ]
Line_12 $$ final Path tmpDir = new Path(reduceId.toString())-->Line_80 $$ RawKeyValueIterator diskMerge = Merger.merge(job, fs, keyClass, valueClass, codec, diskSegments, ioSortFactor, numInMemSegments, tmpDir, comparator, reporter, false, spilledRecordsCounter, null, thisPhase)[ FD ]
Line_17 $$ if (inMemoryMapOutputs.size() > 0) -->Line_18 $$ TaskID mapId = inMemoryMapOutputs.get(0).getMapId().getTaskID()[ CD ]
Line_21 $$ if (numMemDiskSegments > 0 && ioSortFactor > onDiskMapOutputs.size()) -->Line_48 $$ if (inMemToDiskBytes != 0) [ CD ]
Line_14 $$ List<Segment<K, V>> memDiskSegments = new ArrayList<Segment<K, V>>()-->Line_47 $$ memDiskSegments.clear()[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_54 $$ long rawBytes = inMemToDiskBytes[ CD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_10 $$ Class<V> valueClass = (Class<V>) job.getMapOutputValueClass()[ FD ]
Line_75 $$ if (0 != onDiskBytes) -->Line_78 $$ memDiskSegments.clear()[ CD ]
Line_75 $$ if (0 != onDiskBytes) -->Line_82 $$ if (0 == finalSegments.size()) [ CD ]
Line_16 $$ boolean mergePhaseFinished = false-->Line_22 $$ mergePhaseFinished = true[ FD ]
Line_13 $$ final RawComparator<K> comparator = (RawComparator<K>) job.getOutputKeyComparator()-->Line_24 $$ final RawKeyValueIterator rIter = Merger.merge(job, fs, keyClass, valueClass, memDiskSegments, numMemDiskSegments, tmpDir, comparator, reporter, spilledRecordsCounter, null, mergePhase)[ FD ]
Line_9 $$ Class<K> keyClass = (Class<K>) job.getMapOutputKeyClass()-->Line_87 $$ return Merger.merge(job, fs, keyClass, valueClass, finalSegments, finalSegments.size(), tmpDir, comparator, reporter, spilledRecordsCounter, null, null)[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_75 $$ if (0 != onDiskBytes) [ CD ]
Line_52 $$ List<Segment<K, V>> diskSegments = new ArrayList<Segment<K, V>>()-->Line_61 $$ diskSegments.add(new Segment<K, V>(job, fs, file, codec, keepInputs, (file.toString().endsWith(Task.MERGED_OUTPUT_PREFIX) ? null : mergedMapOutputsCounter), file.getRawDataLength()))[ FD ]
Line_75 $$ if (0 != onDiskBytes) -->Line_76 $$ final int numInMemSegments = memDiskSegments.size()[ CD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_19 $$ inMemToDiskBytes = createInMemorySegments(inMemoryMapOutputs, memDiskSegments, maxInMemReduce)[ FD ]
Line_13 $$ final RawComparator<K> comparator = (RawComparator<K>) job.getOutputKeyComparator()-->Line_80 $$ RawKeyValueIterator diskMerge = Merger.merge(job, fs, keyClass, valueClass, codec, diskSegments, ioSortFactor, numInMemSegments, tmpDir, comparator, reporter, false, spilledRecordsCounter, null, thisPhase)[ FD ]
Line_17 $$ if (inMemoryMapOutputs.size() > 0) -->Line_20 $$ final int numMemDiskSegments = memDiskSegments.size()[ CD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_55 $$ CompressAwarePath[] onDisk = onDiskMapOutputs.toArray(new CompressAwarePath[onDiskMapOutputs.size()])[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_4 $$ final float maxRedPer = job.getFloat(MRJobConfig.REDUCE_INPUT_BUFFER_PERCENT, 0f)[ FD ]
Line_66 $$ if (o1.getLength() == o2.getLength()) -->Line_67 $$ return 0[ CD ]
Line_14 $$ List<Segment<K, V>> memDiskSegments = new ArrayList<Segment<K, V>>()-->Line_78 $$ memDiskSegments.clear()[ FD ]
Line_56 $$ for (CompressAwarePath file : onDisk) -->Line_61 $$ diskSegments.add(new Segment<K, V>(job, fs, file, codec, keepInputs, (file.toString().endsWith(Task.MERGED_OUTPUT_PREFIX) ? null : mergedMapOutputsCounter), file.getRawDataLength()))[ FD ]
Line_23 $$ final Path outputPath = mapOutputFile.getInputFileForWrite(mapId, inMemToDiskBytes).suffix(Task.MERGED_OUTPUT_PREFIX)-->Line_33 $$ if (null != outputPath) [ FD ]
Line_64 $$ Collections.sort(diskSegments, new Comparator<Segment<K, V>>() -->Line_66 $$ if (o1.getLength() == o2.getLength()) [ CD ]
Line_26 $$ Writer<K, V> writer = new Writer<K, V>(job, out, keyClass, valueClass, codec, null, true)-->Line_31 $$ writer = null[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_25 $$ FSDataOutputStream out = CryptoUtils.wrapIfNecessary(job, fs.create(outputPath))[ FD ]
Line_21 $$ if (numMemDiskSegments > 0 && ioSortFactor > onDiskMapOutputs.size()) -->Line_46 $$ inMemToDiskBytes = 0[ CD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_3 $$ LOG.info("finalMerge called with " + inMemoryMapOutputs.size() + " in-memory map-outputs and " + onDiskMapOutputs.size() + " on-disk map-outputs")[ CD ]
Line_14 $$ List<Segment<K, V>> memDiskSegments = new ArrayList<Segment<K, V>>()-->Line_19 $$ inMemToDiskBytes = createInMemorySegments(inMemoryMapOutputs, memDiskSegments, maxInMemReduce)[ FD ]
Line_56 $$ for (CompressAwarePath file : onDisk) -->Line_57 $$ long fileLength = fs.getFileStatus(file).getLen()[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_87 $$ return Merger.merge(job, fs, keyClass, valueClass, finalSegments, finalSegments.size(), tmpDir, comparator, reporter, spilledRecordsCounter, null, null)[ CD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_21 $$ if (numMemDiskSegments > 0 && ioSortFactor > onDiskMapOutputs.size()) [ FD ]
Line_23 $$ final Path outputPath = mapOutputFile.getInputFileForWrite(mapId, inMemToDiskBytes).suffix(Task.MERGED_OUTPUT_PREFIX)-->Line_25 $$ FSDataOutputStream out = CryptoUtils.wrapIfNecessary(job, fs.create(outputPath))[ FD ]
Line_48 $$ if (inMemToDiskBytes != 0) -->Line_49 $$ LOG.info("Keeping " + numMemDiskSegments + " segments, " + inMemToDiskBytes + " bytes in memory for " + "intermediate, on-disk merge")[ CD ]
Line_64 $$ Collections.sort(diskSegments, new Comparator<Segment<K, V>>() -->Line_69 $$ return o1.getLength() < o2.getLength() ? -1 : 1[ CD ]
Line_12 $$ final Path tmpDir = new Path(reduceId.toString())-->Line_24 $$ final RawKeyValueIterator rIter = Merger.merge(job, fs, keyClass, valueClass, memDiskSegments, numMemDiskSegments, tmpDir, comparator, reporter, spilledRecordsCounter, null, mergePhase)[ FD ]
Line_10 $$ Class<V> valueClass = (Class<V>) job.getMapOutputValueClass()-->Line_24 $$ final RawKeyValueIterator rIter = Merger.merge(job, fs, keyClass, valueClass, memDiskSegments, numMemDiskSegments, tmpDir, comparator, reporter, spilledRecordsCounter, null, mergePhase)[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_24 $$ final RawKeyValueIterator rIter = Merger.merge(job, fs, keyClass, valueClass, memDiskSegments, numMemDiskSegments, tmpDir, comparator, reporter, spilledRecordsCounter, null, mergePhase)[ FD ]
Line_14 $$ List<Segment<K, V>> memDiskSegments = new ArrayList<Segment<K, V>>()-->Line_20 $$ final int numMemDiskSegments = memDiskSegments.size()[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_11 $$ boolean keepInputs = job.getKeepFailedTaskFiles()[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_63 $$ LOG.info("Merging " + onDisk.length + " files, " + onDiskBytes + " bytes from disk")[ CD ]
Line_17 $$ if (inMemoryMapOutputs.size() > 0) -->Line_19 $$ inMemToDiskBytes = createInMemorySegments(inMemoryMapOutputs, memDiskSegments, maxInMemReduce)[ CD ]
Line_17 $$ if (inMemoryMapOutputs.size() > 0) -->Line_21 $$ if (numMemDiskSegments > 0 && ioSortFactor > onDiskMapOutputs.size()) [ CD ]
Line_26 $$ Writer<K, V> writer = new Writer<K, V>(job, out, keyClass, valueClass, codec, null, true)-->Line_29 $$ writer.close()[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_28 $$ Merger.writeFile(rIter, writer, reporter, job)[ FD ]
Line_24 $$ final RawKeyValueIterator rIter = Merger.merge(job, fs, keyClass, valueClass, memDiskSegments, numMemDiskSegments, tmpDir, comparator, reporter, spilledRecordsCounter, null, mergePhase)-->Line_28 $$ Merger.writeFile(rIter, writer, reporter, job)[ FD ]
Line_19 $$ inMemToDiskBytes = createInMemorySegments(inMemoryMapOutputs, memDiskSegments, maxInMemReduce)-->Line_23 $$ final Path outputPath = mapOutputFile.getInputFileForWrite(mapId, inMemToDiskBytes).suffix(Task.MERGED_OUTPUT_PREFIX)[ FD ]
Line_14 $$ List<Segment<K, V>> memDiskSegments = new ArrayList<Segment<K, V>>()-->Line_76 $$ final int numInMemSegments = memDiskSegments.size()[ FD ]
Line_64 $$ Collections.sort(diskSegments, new Comparator<Segment<K, V>>() -->Line_69 $$ return o1.getLength() < o2.getLength() ? -1 : 1[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_53 $$ long onDiskBytes = inMemToDiskBytes[ CD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_57 $$ long fileLength = fs.getFileStatus(file).getLen()[ FD ]
Line_12 $$ final Path tmpDir = new Path(reduceId.toString())-->Line_87 $$ return Merger.merge(job, fs, keyClass, valueClass, finalSegments, finalSegments.size(), tmpDir, comparator, reporter, spilledRecordsCounter, null, null)[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_80 $$ RawKeyValueIterator diskMerge = Merger.merge(job, fs, keyClass, valueClass, codec, diskSegments, ioSortFactor, numInMemSegments, tmpDir, comparator, reporter, false, spilledRecordsCounter, null, thisPhase)[ FD ]
Line_15 $$ long inMemToDiskBytes = 0-->Line_48 $$ if (inMemToDiskBytes != 0) [ FD ]
Line_21 $$ if (numMemDiskSegments > 0 && ioSortFactor > onDiskMapOutputs.size()) -->Line_47 $$ memDiskSegments.clear()[ CD ]
Line_52 $$ List<Segment<K, V>> diskSegments = new ArrayList<Segment<K, V>>()-->Line_81 $$ diskSegments.clear()[ FD ]
Line_58 $$ onDiskBytes += fileLength-->Line_75 $$ if (0 != onDiskBytes) [ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_16 $$ boolean mergePhaseFinished = false[ CD ]
Line_9 $$ Class<K> keyClass = (Class<K>) job.getMapOutputKeyClass()-->Line_24 $$ final RawKeyValueIterator rIter = Merger.merge(job, fs, keyClass, valueClass, memDiskSegments, numMemDiskSegments, tmpDir, comparator, reporter, spilledRecordsCounter, null, mergePhase)[ FD ]
Line_21 $$ if (numMemDiskSegments > 0 && ioSortFactor > onDiskMapOutputs.size()) -->Line_26 $$ Writer<K, V> writer = new Writer<K, V>(job, out, keyClass, valueClass, codec, null, true)[ CD ]
Line_64 $$ Collections.sort(diskSegments, new Comparator<Segment<K, V>>() -->Line_66 $$ if (o1.getLength() == o2.getLength()) [ FD ]
Line_15 $$ long inMemToDiskBytes = 0-->Line_19 $$ inMemToDiskBytes = createInMemorySegments(inMemoryMapOutputs, memDiskSegments, maxInMemReduce)[ FD ]
Line_75 $$ if (0 != onDiskBytes) -->Line_77 $$ diskSegments.addAll(0, memDiskSegments)[ CD ]
Line_26 $$ Writer<K, V> writer = new Writer<K, V>(job, out, keyClass, valueClass, codec, null, true)-->Line_28 $$ Merger.writeFile(rIter, writer, reporter, job)[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_9 $$ Class<K> keyClass = (Class<K>) job.getMapOutputKeyClass()[ FD ]
Line_10 $$ Class<V> valueClass = (Class<V>) job.getMapOutputValueClass()-->Line_87 $$ return Merger.merge(job, fs, keyClass, valueClass, finalSegments, finalSegments.size(), tmpDir, comparator, reporter, spilledRecordsCounter, null, null)[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_4 $$ final float maxRedPer = job.getFloat(MRJobConfig.REDUCE_INPUT_BUFFER_PERCENT, 0f)[ CD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_17 $$ if (inMemoryMapOutputs.size() > 0) [ FD ]
Line_31 $$ writer = null-->Line_41 $$ if (null != writer) [ FD ]
Line_52 $$ List<Segment<K, V>> diskSegments = new ArrayList<Segment<K, V>>()-->Line_77 $$ diskSegments.addAll(0, memDiskSegments)[ FD ]
Line_14 $$ List<Segment<K, V>> memDiskSegments = new ArrayList<Segment<K, V>>()-->Line_24 $$ final RawKeyValueIterator rIter = Merger.merge(job, fs, keyClass, valueClass, memDiskSegments, numMemDiskSegments, tmpDir, comparator, reporter, spilledRecordsCounter, null, mergePhase)[ FD ]
Line_56 $$ for (CompressAwarePath file : onDisk) -->Line_59 $$ rawBytes += (file.getRawDataLength() > 0) ? file.getRawDataLength() : fileLength[ FD ]
Line_2 $$ private RawKeyValueIterator finalMerge(JobConf job, FileSystem fs, List<InMemoryMapOutput<K, V>> inMemoryMapOutputs, List<CompressAwarePath> onDiskMapOutputs) throws IOException -->Line_13 $$ final RawComparator<K> comparator = (RawComparator<K>) job.getOutputKeyComparator()[ CD ]
Line_57 $$ long fileLength = fs.getFileStatus(file).getLen()-->Line_58 $$ onDiskBytes += fileLength[ FD ]
Line_26 $$ Writer<K, V> writer = new Writer<K, V>(job, out, keyClass, valueClass, codec, null, true)-->Line_41 $$ if (null != writer) [ FD ]
Line_26 $$ Writer<K, V> writer = new Writer<K, V>(job, out, keyClass, valueClass, codec, null, true)-->Line_30 $$ onDiskMapOutputs.add(new CompressAwarePath(outputPath, writer.getRawLength(), writer.getCompressedLength()))[ FD ]
