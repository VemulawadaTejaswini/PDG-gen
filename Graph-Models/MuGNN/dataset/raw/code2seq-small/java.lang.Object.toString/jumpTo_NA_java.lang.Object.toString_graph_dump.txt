Line_2 $$ private <T> void jumpTo(@NotNull final T commitId, @NotNull final PairFunction<GraphTableModel, T, Integer> rowGetter, @NotNull final SettableFuture<Boolean> future) -->Line_3 $$ if (future.isCancelled())[ FD ]
Line_2 $$ private <T> void jumpTo(@NotNull final T commitId, @NotNull final PairFunction<GraphTableModel, T, Integer> rowGetter, @NotNull final SettableFuture<Boolean> future) -->Line_6 $$ if (model == null) [ CD ]
Line_2 $$ private <T> void jumpTo(@NotNull final T commitId, @NotNull final PairFunction<GraphTableModel, T, Integer> rowGetter, @NotNull final SettableFuture<Boolean> future) -->Line_15 $$ if (row >= 0) [ CD ]
Line_5 $$ GraphTableModel model = getModel()-->Line_19 $$ model.requestToLoadMore(new Runnable() [ FD ]
Line_24 $$ if (!myVisiblePack.isFull()) -->Line_32 $$ future.set(false)[ CD ]
Line_18 $$ if (model.canRequestMore()) -->Line_24 $$ if (!myVisiblePack.isFull()) [ CD ]
Line_6 $$ if (model == null) -->Line_7 $$ invokeOnChange(new Runnable() [ CD ]
Line_2 $$ private <T> void jumpTo(@NotNull final T commitId, @NotNull final PairFunction<GraphTableModel, T, Integer> rowGetter, @NotNull final SettableFuture<Boolean> future) -->Line_14 $$ int row = rowGetter.fun(model, commitId)[ FD ]
Line_5 $$ GraphTableModel model = getModel()-->Line_14 $$ int row = rowGetter.fun(model, commitId)[ FD ]
Line_24 $$ if (!myVisiblePack.isFull()) -->Line_25 $$ invokeOnChange(new Runnable() [ CD ]
Line_2 $$ private <T> void jumpTo(@NotNull final T commitId, @NotNull final PairFunction<GraphTableModel, T, Integer> rowGetter, @NotNull final SettableFuture<Boolean> future) -->Line_21 $$ jumpTo(commitId, rowGetter, future)[ FD ]
Line_2 $$ private <T> void jumpTo(@NotNull final T commitId, @NotNull final PairFunction<GraphTableModel, T, Integer> rowGetter, @NotNull final SettableFuture<Boolean> future) -->Line_14 $$ int row = rowGetter.fun(model, commitId)[ CD ]
Line_7 $$ invokeOnChange(new Runnable() -->Line_9 $$ jumpTo(commitId, rowGetter, future)[ CD ]
Line_2 $$ private <T> void jumpTo(@NotNull final T commitId, @NotNull final PairFunction<GraphTableModel, T, Integer> rowGetter, @NotNull final SettableFuture<Boolean> future) -->Line_32 $$ future.set(false)[ FD ]
Line_2 $$ private <T> void jumpTo(@NotNull final T commitId, @NotNull final PairFunction<GraphTableModel, T, Integer> rowGetter, @NotNull final SettableFuture<Boolean> future) -->Line_3 $$ if (future.isCancelled())[ CD ]
Line_5 $$ GraphTableModel model = getModel()-->Line_18 $$ if (model.canRequestMore()) [ FD ]
Line_25 $$ invokeOnChange(new Runnable() -->Line_27 $$ jumpTo(commitId, rowGetter, future)[ CD ]
Line_5 $$ GraphTableModel model = getModel()-->Line_6 $$ if (model == null) [ FD ]
Line_2 $$ private <T> void jumpTo(@NotNull final T commitId, @NotNull final PairFunction<GraphTableModel, T, Integer> rowGetter, @NotNull final SettableFuture<Boolean> future) -->Line_27 $$ jumpTo(commitId, rowGetter, future)[ FD ]
Line_15 $$ if (row >= 0) -->Line_16 $$ myMainFrame.getGraphTable().jumpToRow(row)[ CD ]
Line_15 $$ if (row >= 0) -->Line_17 $$ future.set(true)[ CD ]
Line_6 $$ if (model == null) -->Line_12 $$ return[ CD ]
Line_18 $$ if (model.canRequestMore()) -->Line_19 $$ model.requestToLoadMore(new Runnable() [ CD ]
Line_2 $$ private <T> void jumpTo(@NotNull final T commitId, @NotNull final PairFunction<GraphTableModel, T, Integer> rowGetter, @NotNull final SettableFuture<Boolean> future) -->Line_5 $$ GraphTableModel model = getModel()[ CD ]
Line_2 $$ private <T> void jumpTo(@NotNull final T commitId, @NotNull final PairFunction<GraphTableModel, T, Integer> rowGetter, @NotNull final SettableFuture<Boolean> future) -->Line_17 $$ future.set(true)[ FD ]
Line_15 $$ if (row >= 0) -->Line_18 $$ if (model.canRequestMore()) [ CD ]
Line_2 $$ private <T> void jumpTo(@NotNull final T commitId, @NotNull final PairFunction<GraphTableModel, T, Integer> rowGetter, @NotNull final SettableFuture<Boolean> future) -->Line_9 $$ jumpTo(commitId, rowGetter, future)[ FD ]
Line_3 $$ if (future.isCancelled())-->Line_4 $$ return[ CD ]
Line_24 $$ if (!myVisiblePack.isFull()) -->Line_31 $$ commitNotFound(commitId.toString())[ CD ]
Line_2 $$ private <T> void jumpTo(@NotNull final T commitId, @NotNull final PairFunction<GraphTableModel, T, Integer> rowGetter, @NotNull final SettableFuture<Boolean> future) -->Line_31 $$ commitNotFound(commitId.toString())[ FD ]
Line_19 $$ model.requestToLoadMore(new Runnable() -->Line_21 $$ jumpTo(commitId, rowGetter, future)[ CD ]
