Line_2 $$ public void testFilterWithEmptyIncludesExcludes() -->Line_3 $$ Map<String, Object> map = new HashMap()[ CD ]
Line_2 $$ public void testFilterWithEmptyIncludesExcludes() -->Line_7 $$ assertThat(filteredMap.get("field").toString(), equalTo("value"))[ CD ]
Line_3 $$ Map<String, Object> map = new HashMap()-->Line_5 $$ Map<String, Object> filteredMap = XContentMapValues.filter(map, Strings.EMPTY_ARRAY, Strings.EMPTY_ARRAY)[ FD ]
Line_2 $$ public void testFilterWithEmptyIncludesExcludes() -->Line_4 $$ map.put("field", "value")[ CD ]
Line_2 $$ public void testFilterWithEmptyIncludesExcludes() -->Line_5 $$ Map<String, Object> filteredMap = XContentMapValues.filter(map, Strings.EMPTY_ARRAY, Strings.EMPTY_ARRAY)[ CD ]
Line_5 $$ Map<String, Object> filteredMap = XContentMapValues.filter(map, Strings.EMPTY_ARRAY, Strings.EMPTY_ARRAY)-->Line_6 $$ assertThat(filteredMap.size(), equalTo(1))[ FD ]
Line_2 $$ public void testFilterWithEmptyIncludesExcludes() -->Line_6 $$ assertThat(filteredMap.size(), equalTo(1))[ CD ]
Line_5 $$ Map<String, Object> filteredMap = XContentMapValues.filter(map, Strings.EMPTY_ARRAY, Strings.EMPTY_ARRAY)-->Line_7 $$ assertThat(filteredMap.get("field").toString(), equalTo("value"))[ FD ]
Line_3 $$ Map<String, Object> map = new HashMap()-->Line_4 $$ map.put("field", "value")[ FD ]
