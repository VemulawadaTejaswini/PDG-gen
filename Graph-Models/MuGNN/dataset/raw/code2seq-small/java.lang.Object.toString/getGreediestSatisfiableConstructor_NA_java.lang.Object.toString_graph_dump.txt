Line_24 $$ if (greediestConstructor != null && parameterTypes.length != lastSatisfiableConstructorSize) -->Line_25 $$ if (conflicts.isEmpty()) [ CD ]
Line_2 $$ protected Constructor getGreediestSatisfiableConstructor(PicoContainer container) throws PicoIntrospectionException, AssignabilityRegistrationException, NotConcreteRegistrationException -->Line_4 $$ final Set<List<Class>> unsatisfiableDependencyTypes = new HashSet<List<Class>>()[ CD ]
Line_2 $$ protected Constructor getGreediestSatisfiableConstructor(PicoContainer container) throws PicoIntrospectionException, AssignabilityRegistrationException, NotConcreteRegistrationException -->Line_3 $$ final Set<Constructor> conflicts = new HashSet<Constructor>()[ CD ]
Line_21 $$ failedDependency = true-->Line_32 $$ if (!failedDependency && lastSatisfiableConstructorSize == parameterTypes.length) [ FD ]
Line_8 $$ Class unsatisfiedDependencyType = null-->Line_20 $$ unsatisfiedDependencyType = parameterTypes[j][ FD ]
Line_2 $$ protected Constructor getGreediestSatisfiableConstructor(PicoContainer container) throws PicoIntrospectionException, AssignabilityRegistrationException, NotConcreteRegistrationException -->Line_50 $$ return greediestConstructor[ CD ]
Line_2 $$ protected Constructor getGreediestSatisfiableConstructor(PicoContainer container) throws PicoIntrospectionException, AssignabilityRegistrationException, NotConcreteRegistrationException -->Line_6 $$ Constructor greediestConstructor = null[ CD ]
Line_3 $$ final Set<Constructor> conflicts = new HashSet<Constructor>()-->Line_25 $$ if (conflicts.isEmpty()) [ FD ]
Line_6 $$ Constructor greediestConstructor = null-->Line_37 $$ greediestConstructor = constructor[ FD ]
Line_10 $$ boolean failedDependency = false-->Line_32 $$ if (!failedDependency && lastSatisfiableConstructorSize == parameterTypes.length) [ FD ]
Line_21 $$ failedDependency = true-->Line_36 $$ if (!failedDependency) [ FD ]
Line_32 $$ if (!failedDependency && lastSatisfiableConstructorSize == parameterTypes.length) -->Line_35 $$ conflicts.add(greediestConstructor)[ CD ]
Line_2 $$ protected Constructor getGreediestSatisfiableConstructor(PicoContainer container) throws PicoIntrospectionException, AssignabilityRegistrationException, NotConcreteRegistrationException -->Line_8 $$ Class unsatisfiedDependencyType = null[ CD ]
Line_36 $$ if (!failedDependency) -->Line_37 $$ greediestConstructor = constructor[ CD ]
Line_11 $$ Class[] parameterTypes = constructor.getParameterTypes()-->Line_19 $$ unsatisfiableDependencyTypes.add(Arrays.asList(parameterTypes))[ FD ]
Line_4 $$ final Set<List<Class>> unsatisfiableDependencyTypes = new HashSet<List<Class>>()-->Line_43 $$ if (greediestConstructor == null && !unsatisfiableDependencyTypes.isEmpty()) [ FD ]
Line_10 $$ boolean failedDependency = false-->Line_36 $$ if (!failedDependency) [ FD ]
Line_2 $$ protected Constructor getGreediestSatisfiableConstructor(PicoContainer container) throws PicoIntrospectionException, AssignabilityRegistrationException, NotConcreteRegistrationException -->Line_5 $$ List<Constructor> sortedMatchingConstructors = getSortedMatchingConstructors()[ CD ]
Line_41 $$ if (!conflicts.isEmpty()) -->Line_43 $$ if (greediestConstructor == null && !unsatisfiableDependencyTypes.isEmpty()) [ CD ]
Line_4 $$ final Set<List<Class>> unsatisfiableDependencyTypes = new HashSet<List<Class>>()-->Line_19 $$ unsatisfiableDependencyTypes.add(Arrays.asList(parameterTypes))[ FD ]
Line_9 $$ for (Constructor constructor : sortedMatchingConstructors) -->Line_11 $$ Class[] parameterTypes = constructor.getParameterTypes()[ FD ]
Line_24 $$ if (greediestConstructor != null && parameterTypes.length != lastSatisfiableConstructorSize) -->Line_32 $$ if (!failedDependency && lastSatisfiableConstructorSize == parameterTypes.length) [ CD ]
Line_3 $$ final Set<Constructor> conflicts = new HashSet<Constructor>()-->Line_35 $$ conflicts.add(greediestConstructor)[ FD ]
Line_11 $$ Class[] parameterTypes = constructor.getParameterTypes()-->Line_12 $$ Parameter[] currentParameters = parameters != null ? parameters : createDefaultParameters(parameterTypes)[ FD ]
Line_6 $$ Constructor greediestConstructor = null-->Line_35 $$ conflicts.add(greediestConstructor)[ FD ]
Line_36 $$ if (!failedDependency) -->Line_38 $$ lastSatisfiableConstructorSize = parameterTypes.length[ CD ]
Line_6 $$ Constructor greediestConstructor = null-->Line_45 $$ if (greediestConstructor == null) [ FD ]
Line_7 $$ int lastSatisfiableConstructorSize = -1-->Line_38 $$ lastSatisfiableConstructorSize = parameterTypes.length[ FD ]
Line_43 $$ if (greediestConstructor == null && !unsatisfiableDependencyTypes.isEmpty()) -->Line_45 $$ if (greediestConstructor == null) [ CD ]
Line_37 $$ greediestConstructor = constructor-->Line_45 $$ if (greediestConstructor == null) [ FD ]
Line_3 $$ final Set<Constructor> conflicts = new HashSet<Constructor>()-->Line_41 $$ if (!conflicts.isEmpty()) [ FD ]
Line_2 $$ protected Constructor getGreediestSatisfiableConstructor(PicoContainer container) throws PicoIntrospectionException, AssignabilityRegistrationException, NotConcreteRegistrationException -->Line_41 $$ if (!conflicts.isEmpty()) [ CD ]
Line_9 $$ for (Constructor constructor : sortedMatchingConstructors) -->Line_37 $$ greediestConstructor = constructor[ FD ]
Line_2 $$ protected Constructor getGreediestSatisfiableConstructor(PicoContainer container) throws PicoIntrospectionException, AssignabilityRegistrationException, NotConcreteRegistrationException -->Line_7 $$ int lastSatisfiableConstructorSize = -1[ CD ]
Line_32 $$ if (!failedDependency && lastSatisfiableConstructorSize == parameterTypes.length) -->Line_36 $$ if (!failedDependency) [ CD ]
Line_10 $$ boolean failedDependency = false-->Line_21 $$ failedDependency = true[ FD ]
