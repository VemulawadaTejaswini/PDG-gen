Line_10 $$ boolean failedDependency = false-->Line_28 $$ if (!failedDependency && lastSatisfiableConstructorSize == parameterTypes.length) [ FD ]
Line_8 $$ Class unsatisfiedDependencyType = null-->Line_18 $$ unsatisfiedDependencyType = parameterTypes[j][ FD ]
Line_9 $$ for (Constructor constructor : sortedMatchingConstructors) -->Line_26 $$ conflicts.add(constructor)[ FD ]
Line_9 $$ for (Constructor constructor : sortedMatchingConstructors) -->Line_11 $$ Class[] parameterTypes = constructor.getParameterTypes()[ FD ]
Line_28 $$ if (!failedDependency && lastSatisfiableConstructorSize == parameterTypes.length) -->Line_30 $$ conflicts.add(greediestConstructor)[ CD ]
Line_6 $$ Constructor greediestConstructor = null-->Line_30 $$ conflicts.add(greediestConstructor)[ FD ]
Line_3 $$ final Set<Constructor> conflicts = new HashSet<Constructor>()-->Line_29 $$ conflicts.add(constructor)[ FD ]
Line_28 $$ if (!failedDependency && lastSatisfiableConstructorSize == parameterTypes.length) -->Line_29 $$ conflicts.add(constructor)[ CD ]
Line_28 $$ if (!failedDependency && lastSatisfiableConstructorSize == parameterTypes.length) -->Line_31 $$ if (!failedDependency) [ CD ]
Line_9 $$ for (Constructor constructor : sortedMatchingConstructors) -->Line_32 $$ greediestConstructor = constructor[ FD ]
Line_10 $$ boolean failedDependency = false-->Line_19 $$ failedDependency = true[ FD ]
Line_19 $$ failedDependency = true-->Line_28 $$ if (!failedDependency && lastSatisfiableConstructorSize == parameterTypes.length) [ FD ]
Line_38 $$ if (greediestConstructor == null && !unsatisfiableDependencyTypes.isEmpty()) -->Line_40 $$ if (greediestConstructor == null) [ CD ]
Line_2 $$ protected Constructor getGreediestSatisfiableConstructor(PicoContainer container) throws PicoIntrospectionException, AssignabilityRegistrationException, NotConcreteRegistrationException -->Line_7 $$ int lastSatisfiableConstructorSize = -1[ CD ]
Line_4 $$ final Set<List<Class>> unsatisfiableDependencyTypes = new HashSet<List<Class>>()-->Line_38 $$ if (greediestConstructor == null && !unsatisfiableDependencyTypes.isEmpty()) [ FD ]
Line_6 $$ Constructor greediestConstructor = null-->Line_40 $$ if (greediestConstructor == null) [ FD ]
Line_36 $$ if (!conflicts.isEmpty()) -->Line_38 $$ if (greediestConstructor == null && !unsatisfiableDependencyTypes.isEmpty()) [ CD ]
Line_2 $$ protected Constructor getGreediestSatisfiableConstructor(PicoContainer container) throws PicoIntrospectionException, AssignabilityRegistrationException, NotConcreteRegistrationException -->Line_3 $$ final Set<Constructor> conflicts = new HashSet<Constructor>()[ CD ]
Line_32 $$ greediestConstructor = constructor-->Line_40 $$ if (greediestConstructor == null) [ FD ]
Line_41 $$ final Set<Constructor> nonMatching = ContainerUtil.newHashSet(getConstructors())-->Line_42 $$ throw new PicoInitializationException("Either do the specified parameters not match any of the following constructors: " + nonMatching.toString() + " or the constructors were not accessible for '" + getComponentImplementation() + "'")[ FD ]
Line_2 $$ protected Constructor getGreediestSatisfiableConstructor(PicoContainer container) throws PicoIntrospectionException, AssignabilityRegistrationException, NotConcreteRegistrationException -->Line_6 $$ Constructor greediestConstructor = null[ CD ]
Line_22 $$ if (greediestConstructor != null && parameterTypes.length != lastSatisfiableConstructorSize) -->Line_28 $$ if (!failedDependency && lastSatisfiableConstructorSize == parameterTypes.length) [ CD ]
Line_3 $$ final Set<Constructor> conflicts = new HashSet<Constructor>()-->Line_26 $$ conflicts.add(constructor)[ FD ]
Line_4 $$ final Set<List<Class>> unsatisfiableDependencyTypes = new HashSet<List<Class>>()-->Line_17 $$ unsatisfiableDependencyTypes.add(Arrays.asList(parameterTypes))[ FD ]
Line_6 $$ Constructor greediestConstructor = null-->Line_32 $$ greediestConstructor = constructor[ FD ]
Line_3 $$ final Set<Constructor> conflicts = new HashSet<Constructor>()-->Line_30 $$ conflicts.add(greediestConstructor)[ FD ]
Line_2 $$ protected Constructor getGreediestSatisfiableConstructor(PicoContainer container) throws PicoIntrospectionException, AssignabilityRegistrationException, NotConcreteRegistrationException -->Line_44 $$ return greediestConstructor[ CD ]
Line_19 $$ failedDependency = true-->Line_31 $$ if (!failedDependency) [ FD ]
Line_40 $$ if (greediestConstructor == null) -->Line_41 $$ final Set<Constructor> nonMatching = ContainerUtil.newHashSet(getConstructors())[ CD ]
Line_3 $$ final Set<Constructor> conflicts = new HashSet<Constructor>()-->Line_36 $$ if (!conflicts.isEmpty()) [ FD ]
Line_11 $$ Class[] parameterTypes = constructor.getParameterTypes()-->Line_12 $$ Parameter[] currentParameters = parameters != null ? parameters : createDefaultParameters(parameterTypes)[ FD ]
Line_23 $$ if (conflicts.isEmpty()) -->Line_24 $$ return greediestConstructor[ CD ]
Line_2 $$ protected Constructor getGreediestSatisfiableConstructor(PicoContainer container) throws PicoIntrospectionException, AssignabilityRegistrationException, NotConcreteRegistrationException -->Line_14 $$ if (currentParameters[j].isResolvable(container, this, parameterTypes[j])) [ FD ]
Line_22 $$ if (greediestConstructor != null && parameterTypes.length != lastSatisfiableConstructorSize) -->Line_23 $$ if (conflicts.isEmpty()) [ CD ]
Line_7 $$ int lastSatisfiableConstructorSize = -1-->Line_33 $$ lastSatisfiableConstructorSize = parameterTypes.length[ FD ]
Line_13 $$ for (int j = 0; j < currentParameters.length; j++) -->Line_14 $$ if (currentParameters[j].isResolvable(container, this, parameterTypes[j])) [ CD ]
Line_10 $$ boolean failedDependency = false-->Line_31 $$ if (!failedDependency) [ FD ]
Line_3 $$ final Set<Constructor> conflicts = new HashSet<Constructor>()-->Line_23 $$ if (conflicts.isEmpty()) [ FD ]
Line_13 $$ for (int j = 0; j < currentParameters.length; j++) -->Line_17 $$ unsatisfiableDependencyTypes.add(Arrays.asList(parameterTypes))[ CD ]
Line_2 $$ protected Constructor getGreediestSatisfiableConstructor(PicoContainer container) throws PicoIntrospectionException, AssignabilityRegistrationException, NotConcreteRegistrationException -->Line_8 $$ Class unsatisfiedDependencyType = null[ CD ]
Line_31 $$ if (!failedDependency) -->Line_33 $$ lastSatisfiableConstructorSize = parameterTypes.length[ CD ]
Line_11 $$ Class[] parameterTypes = constructor.getParameterTypes()-->Line_17 $$ unsatisfiableDependencyTypes.add(Arrays.asList(parameterTypes))[ FD ]
Line_2 $$ protected Constructor getGreediestSatisfiableConstructor(PicoContainer container) throws PicoIntrospectionException, AssignabilityRegistrationException, NotConcreteRegistrationException -->Line_5 $$ List<Constructor> sortedMatchingConstructors = getSortedMatchingConstructors()[ CD ]
Line_13 $$ for (int j = 0; j < currentParameters.length; j++) -->Line_18 $$ unsatisfiedDependencyType = parameterTypes[j][ CD ]
Line_2 $$ protected Constructor getGreediestSatisfiableConstructor(PicoContainer container) throws PicoIntrospectionException, AssignabilityRegistrationException, NotConcreteRegistrationException -->Line_36 $$ if (!conflicts.isEmpty()) [ CD ]
Line_2 $$ protected Constructor getGreediestSatisfiableConstructor(PicoContainer container) throws PicoIntrospectionException, AssignabilityRegistrationException, NotConcreteRegistrationException -->Line_4 $$ final Set<List<Class>> unsatisfiableDependencyTypes = new HashSet<List<Class>>()[ CD ]
Line_23 $$ if (conflicts.isEmpty()) -->Line_26 $$ conflicts.add(constructor)[ CD ]
Line_31 $$ if (!failedDependency) -->Line_32 $$ greediestConstructor = constructor[ CD ]
Line_13 $$ for (int j = 0; j < currentParameters.length; j++) -->Line_19 $$ failedDependency = true[ CD ]
Line_9 $$ for (Constructor constructor : sortedMatchingConstructors) -->Line_29 $$ conflicts.add(constructor)[ FD ]
