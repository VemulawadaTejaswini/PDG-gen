Line_22 $$ filteredProperties = new Properties()-->Line_32 $$ filteredProperties.put(key, pValue)[ FD ]
Line_5 $$ List<JobPropertyParser> pList = new ArrayList<JobPropertyParser>(1)-->Line_18 $$ pList.add(parser)[ FD ]
Line_8 $$ if (config != null) -->Line_18 $$ pList.add(parser)[ CD ]
Line_5 $$ List<JobPropertyParser> pList = new ArrayList<JobPropertyParser>(1)-->Line_13 $$ pList.add(parser)[ FD ]
Line_31 $$ if (pValue != null) -->Line_32 $$ filteredProperties.put(key, pValue)[ CD ]
Line_12 $$ JobPropertyParser parser = ReflectionUtils.newInstance(c, conf)-->Line_18 $$ pList.add(parser)[ FD ]
Line_4 $$ Properties filteredProperties = null-->Line_32 $$ filteredProperties.put(key, pValue)[ FD ]
Line_30 $$ DataType<?> pValue = p.parseJobProperty(key, value)-->Line_32 $$ filteredProperties.put(key, pValue)[ FD ]
Line_27 $$ String value = entry.getValue().toString()-->Line_30 $$ DataType<?> pValue = p.parseJobProperty(key, value)[ FD ]
Line_30 $$ DataType<?> pValue = p.parseJobProperty(key, value)-->Line_31 $$ if (pValue != null) [ FD ]
Line_12 $$ JobPropertyParser parser = ReflectionUtils.newInstance(c, conf)-->Line_13 $$ pList.add(parser)[ FD ]
Line_11 $$ for (Class<JobPropertyParser> c : parsers) -->Line_12 $$ JobPropertyParser parser = ReflectionUtils.newInstance(c, conf)[ FD ]
Line_4 $$ Properties filteredProperties = null-->Line_22 $$ filteredProperties = new Properties()[ FD ]
