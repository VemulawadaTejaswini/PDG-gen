Line_2 $$ public static boolean groupedApproximateAggregationWithinErrorBound(InternalAggregationFunction function, int sampleWeightChannel, double confidence, Double expectedValue, Page... pages) -->Line_7 $$ Object groupValue = getGroupValue(groupedAggregation, 0)[ CD ]
Line_2 $$ public static boolean groupedApproximateAggregationWithinErrorBound(InternalAggregationFunction function, int sampleWeightChannel, double confidence, Double expectedValue, Page... pages) -->Line_3 $$ GroupedAccumulator groupedAggregation = function.bind(ImmutableList.of(0), Optional.empty(), Optional.of(sampleWeightChannel), confidence).createGroupedAccumulator()[ CD ]
Line_4 $$ for (Page page : pages) -->Line_5 $$ groupedAggregation.addInput(createGroupByIdBlock(0, page.getPositionCount()), page)[ FD ]
Line_2 $$ public static boolean groupedApproximateAggregationWithinErrorBound(InternalAggregationFunction function, int sampleWeightChannel, double confidence, Double expectedValue, Page... pages) -->Line_8 $$ if (expectedValue == null) [ CD ]
Line_7 $$ Object groupValue = getGroupValue(groupedAggregation, 0)-->Line_11 $$ return withinErrorBound(groupValue.toString(), expectedValue)[ FD ]
Line_2 $$ public static boolean groupedApproximateAggregationWithinErrorBound(InternalAggregationFunction function, int sampleWeightChannel, double confidence, Double expectedValue, Page... pages) -->Line_8 $$ if (expectedValue == null) [ FD ]
Line_2 $$ public static boolean groupedApproximateAggregationWithinErrorBound(InternalAggregationFunction function, int sampleWeightChannel, double confidence, Double expectedValue, Page... pages) -->Line_11 $$ return withinErrorBound(groupValue.toString(), expectedValue)[ FD ]
Line_3 $$ GroupedAccumulator groupedAggregation = function.bind(ImmutableList.of(0), Optional.empty(), Optional.of(sampleWeightChannel), confidence).createGroupedAccumulator()-->Line_7 $$ Object groupValue = getGroupValue(groupedAggregation, 0)[ FD ]
Line_3 $$ GroupedAccumulator groupedAggregation = function.bind(ImmutableList.of(0), Optional.empty(), Optional.of(sampleWeightChannel), confidence).createGroupedAccumulator()-->Line_5 $$ groupedAggregation.addInput(createGroupByIdBlock(0, page.getPositionCount()), page)[ FD ]
Line_8 $$ if (expectedValue == null) -->Line_9 $$ return groupValue == null[ CD ]
Line_2 $$ public static boolean groupedApproximateAggregationWithinErrorBound(InternalAggregationFunction function, int sampleWeightChannel, double confidence, Double expectedValue, Page... pages) -->Line_11 $$ return withinErrorBound(groupValue.toString(), expectedValue)[ CD ]
Line_2 $$ public static boolean groupedApproximateAggregationWithinErrorBound(InternalAggregationFunction function, int sampleWeightChannel, double confidence, Double expectedValue, Page... pages) -->Line_3 $$ GroupedAccumulator groupedAggregation = function.bind(ImmutableList.of(0), Optional.empty(), Optional.of(sampleWeightChannel), confidence).createGroupedAccumulator()[ FD ]
