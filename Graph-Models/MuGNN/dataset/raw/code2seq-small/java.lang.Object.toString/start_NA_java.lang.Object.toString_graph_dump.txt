Line_93 $$ String channelName = jgroupsChannels.get(key)-->Line_95 $$ channels.put(channelName, channel)[ FD ]
Line_36 $$ String name = socketRef.toString()-->Line_41 $$ final SocketBinding socketBinding = socketBindings.get(name)[ FD ]
Line_91 $$ if (jgroupFactories.containsKey(key)) -->Line_98 $$ final SocketBinding binding = groupBindings.get(key)[ CD ]
Line_35 $$ if (socketRef != null) -->Line_39 $$ OutboundSocketBinding binding = outboundSocketBindings.get(name)[ CD ]
Line_2 $$ public synchronized void start(final StartContext context) throws StartException -->Line_23 $$ configuration.setPagingDirectory(pathConfig.resolvePagingPath(pathManager))[ CD ]
Line_45 $$ InetSocketAddress sa = socketBinding.getSocketAddress()-->Line_51 $$ host = NetworkUtils.canonize(sa.getAddress().getHostAddress())[ FD ]
Line_40 $$ if (binding == null) -->Line_46 $$ port = sa.getPort()[ CD ]
Line_109 $$ if (discoveryGroups != null) -->Line_110 $$ configuration.setDiscoveryGroupConfigurations(new HashMap<String, DiscoveryGroupConfiguration>())[ CD ]
Line_115 $$ if (jgroupFactories.containsKey(key)) -->Line_116 $$ ChannelFactory channelFactory = jgroupFactories.get(key)[ CD ]
Line_40 $$ if (binding == null) -->Line_45 $$ InetSocketAddress sa = socketBinding.getSocketAddress()[ CD ]
Line_36 $$ String name = socketRef.toString()-->Line_103 $$ newConfigs.add(BroadcastGroupAdd.createBroadcastGroupConfiguration(name, config, binding))[ FD ]
Line_39 $$ OutboundSocketBinding binding = outboundSocketBindings.get(name)-->Line_76 $$ if (binding == null) [ FD ]
Line_35 $$ if (socketRef != null) -->Line_64 $$ tc.getParams().put(HOST, host)[ CD ]
Line_28 $$ Collection<TransportConfiguration> connectors = configuration.getConnectorConfigurations().values()-->Line_31 $$ if (connectors != null) [ FD ]
Line_111 $$ for (final Map.Entry<String, DiscoveryGroupConfiguration> entry : discoveryGroups.entrySet()) -->Line_123 $$ config = DiscoveryGroupAdd.createDiscoveryGroupConfiguration(name, entry.getValue(), channel, channelName)[ FD ]
Line_91 $$ if (jgroupFactories.containsKey(key)) -->Line_93 $$ String channelName = jgroupsChannels.get(key)[ CD ]
Line_88 $$ for (final BroadcastGroupConfiguration config : broadcastGroups) -->Line_129 $$ config = DiscoveryGroupAdd.createDiscoveryGroupConfiguration(name, entry.getValue(), binding)[ FD ]
Line_88 $$ for (final BroadcastGroupConfiguration config : broadcastGroups) -->Line_103 $$ newConfigs.add(BroadcastGroupAdd.createBroadcastGroupConfiguration(name, config, binding))[ FD ]
Line_35 $$ if (socketRef != null) -->Line_36 $$ String name = socketRef.toString()[ CD ]
Line_39 $$ OutboundSocketBinding binding = outboundSocketBindings.get(name)-->Line_56 $$ if (binding.getSourceAddress() != null) [ FD ]
Line_39 $$ OutboundSocketBinding binding = outboundSocketBindings.get(name)-->Line_103 $$ newConfigs.add(BroadcastGroupAdd.createBroadcastGroupConfiguration(name, config, binding))[ FD ]
Line_39 $$ OutboundSocketBinding binding = outboundSocketBindings.get(name)-->Line_40 $$ if (binding == null) [ FD ]
Line_94 $$ JChannel channel = (JChannel) channelFactory.createChannel(channelName)-->Line_120 $$ channel = (JChannel) channelFactory.createChannel(key)[ FD ]
Line_40 $$ if (binding == null) -->Line_56 $$ if (binding.getSourceAddress() != null) [ CD ]
Line_41 $$ final SocketBinding socketBinding = socketBindings.get(name)-->Line_45 $$ InetSocketAddress sa = socketBinding.getSocketAddress()[ FD ]
Line_90 $$ final String key = "broadcast" + name-->Line_98 $$ final SocketBinding binding = groupBindings.get(key)[ FD ]
Line_35 $$ if (socketRef != null) -->Line_37 $$ String host[ CD ]
Line_73 $$ if (socketRef != null) -->Line_76 $$ if (binding == null) [ CD ]
Line_86 $$ if (broadcastGroups != null) -->Line_106 $$ configuration.getBroadcastGroupConfigurations().clear()[ CD ]
Line_32 $$ for (TransportConfiguration tc : connectors) -->Line_43 $$ throw MessagingLogger.ROOT_LOGGER.failedToFindConnectorSocketBinding(tc.getName())[ FD ]
Line_29 $$ Collection<BroadcastGroupConfiguration> broadcastGroups = configuration.getBroadcastGroupConfigurations()-->Line_86 $$ if (broadcastGroups != null) [ FD ]
Line_80 $$ InetSocketAddress socketAddress = binding.getSocketAddress()-->Line_82 $$ tc.getParams().put(PORT, socketAddress.getPort())[ FD ]
Line_32 $$ for (TransportConfiguration tc : connectors) -->Line_77 $$ throw MessagingLogger.ROOT_LOGGER.failedToFindConnectorSocketBinding(tc.getName())[ FD ]
Line_10 $$ if (osName.contains("nux")) -->Line_13 $$ ROOT_LOGGER.aioInfo()[ CD ]
Line_94 $$ JChannel channel = (JChannel) channelFactory.createChannel(channelName)-->Line_123 $$ config = DiscoveryGroupAdd.createDiscoveryGroupConfiguration(name, entry.getValue(), channel, channelName)[ FD ]
Line_36 $$ String name = socketRef.toString()-->Line_127 $$ throw MessagingLogger.ROOT_LOGGER.failedToFindDiscoverySocketBinding(name)[ FD ]
Line_115 $$ if (jgroupFactories.containsKey(key)) -->Line_118 $$ JChannel channel = channels.get(channelName)[ CD ]
Line_46 $$ port = sa.getPort()-->Line_65 $$ tc.getParams().put(PORT, port)[ FD ]
Line_49 $$ host = NetworkUtils.canonize(sa.getAddress().getHostName())-->Line_55 $$ host = NetworkUtils.canonize(binding.getUnresolvedDestinationAddress())[ FD ]
Line_30 $$ Map<String, DiscoveryGroupConfiguration> discoveryGroups = configuration.getDiscoveryGroupConfigurations()-->Line_111 $$ for (final Map.Entry<String, DiscoveryGroupConfiguration> entry : discoveryGroups.entrySet()) [ FD ]
Line_36 $$ String name = socketRef.toString()-->Line_129 $$ config = DiscoveryGroupAdd.createDiscoveryGroupConfiguration(name, entry.getValue(), binding)[ FD ]
Line_123 $$ config = DiscoveryGroupAdd.createDiscoveryGroupConfiguration(name, entry.getValue(), channel, channelName)-->Line_132 $$ configuration.getDiscoveryGroupConfigurations().put(name, config)[ FD ]
Line_115 $$ if (jgroupFactories.containsKey(key)) -->Line_123 $$ config = DiscoveryGroupAdd.createDiscoveryGroupConfiguration(name, entry.getValue(), channel, channelName)[ CD ]
Line_39 $$ OutboundSocketBinding binding = outboundSocketBindings.get(name)-->Line_80 $$ InetSocketAddress socketAddress = binding.getSocketAddress()[ FD ]
Line_73 $$ if (socketRef != null) -->Line_80 $$ InetSocketAddress socketAddress = binding.getSocketAddress()[ CD ]
Line_36 $$ String name = socketRef.toString()-->Line_123 $$ config = DiscoveryGroupAdd.createDiscoveryGroupConfiguration(name, entry.getValue(), channel, channelName)[ FD ]
Line_91 $$ if (jgroupFactories.containsKey(key)) -->Line_94 $$ JChannel channel = (JChannel) channelFactory.createChannel(channelName)[ CD ]
Line_55 $$ host = NetworkUtils.canonize(binding.getUnresolvedDestinationAddress())-->Line_64 $$ tc.getParams().put(HOST, host)[ FD ]
Line_90 $$ final String key = "broadcast" + name-->Line_92 $$ ChannelFactory channelFactory = jgroupFactories.get(key)[ FD ]
Line_2 $$ public synchronized void start(final StartContext context) throws StartException -->Line_21 $$ configuration.setLargeMessagesDirectory(pathConfig.resolveLargeMessagePath(pathManager))[ CD ]
Line_36 $$ String name = socketRef.toString()-->Line_100 $$ throw MessagingLogger.ROOT_LOGGER.failedToFindBroadcastSocketBinding(name)[ FD ]
Line_39 $$ OutboundSocketBinding binding = outboundSocketBindings.get(name)-->Line_57 $$ tc.getParams().put(TransportConstants.LOCAL_ADDRESS_PROP_NAME, NetworkUtils.canonize(binding.getSourceAddress().getHostAddress()))[ FD ]
Line_39 $$ OutboundSocketBinding binding = outboundSocketBindings.get(name)-->Line_54 $$ port = binding.getDestinationPort()[ FD ]
Line_90 $$ final String key = "broadcast" + name-->Line_115 $$ if (jgroupFactories.containsKey(key)) [ FD ]
Line_94 $$ JChannel channel = (JChannel) channelFactory.createChannel(channelName)-->Line_119 $$ if (channel == null) [ FD ]
Line_73 $$ if (socketRef != null) -->Line_81 $$ tc.getParams().put(HOST, socketAddress.getAddress().getHostAddress())[ CD ]
Line_6 $$ if (jtype == JournalType.ASYNCIO) -->Line_7 $$ boolean supportsAIO = AIOSequentialFileFactory.isSupported()[ CD ]
Line_115 $$ if (jgroupFactories.containsKey(key)) -->Line_117 $$ String channelName = jgroupsChannels.get(key)[ CD ]
Line_73 $$ if (socketRef != null) -->Line_75 $$ SocketBinding binding = socketBindings.get(name)[ CD ]
Line_37 $$ String host-->Line_55 $$ host = NetworkUtils.canonize(binding.getUnresolvedDestinationAddress())[ FD ]
Line_41 $$ final SocketBinding socketBinding = socketBindings.get(name)-->Line_42 $$ if (socketBinding == null) [ FD ]
Line_40 $$ if (binding == null) -->Line_55 $$ host = NetworkUtils.canonize(binding.getUnresolvedDestinationAddress())[ CD ]
Line_87 $$ final List<BroadcastGroupConfiguration> newConfigs = new ArrayList<BroadcastGroupConfiguration>()-->Line_103 $$ newConfigs.add(BroadcastGroupAdd.createBroadcastGroupConfiguration(name, config, binding))[ FD ]
Line_139 $$ if (ActiveMQDefaultConfiguration.getDefaultClusterPassword().equals(server.getConfiguration().getClusterPassword())) -->Line_140 $$ server.getConfiguration().setClusterPassword(java.util.UUID.randomUUID().toString())[ CD ]
Line_51 $$ host = NetworkUtils.canonize(sa.getAddress().getHostAddress())-->Line_55 $$ host = NetworkUtils.canonize(binding.getUnresolvedDestinationAddress())[ FD ]
Line_123 $$ config = DiscoveryGroupAdd.createDiscoveryGroupConfiguration(name, entry.getValue(), channel, channelName)-->Line_129 $$ config = DiscoveryGroupAdd.createDiscoveryGroupConfiguration(name, entry.getValue(), binding)[ FD ]
Line_88 $$ for (final BroadcastGroupConfiguration config : broadcastGroups) -->Line_123 $$ config = DiscoveryGroupAdd.createDiscoveryGroupConfiguration(name, entry.getValue(), channel, channelName)[ FD ]
Line_91 $$ if (jgroupFactories.containsKey(key)) -->Line_92 $$ ChannelFactory channelFactory = jgroupFactories.get(key)[ CD ]
Line_86 $$ if (broadcastGroups != null) -->Line_107 $$ configuration.getBroadcastGroupConfigurations().addAll(newConfigs)[ CD ]
Line_73 $$ if (socketRef != null) -->Line_82 $$ tc.getParams().put(PORT, socketAddress.getPort())[ CD ]
Line_40 $$ if (binding == null) -->Line_41 $$ final SocketBinding socketBinding = socketBindings.get(name)[ CD ]
Line_94 $$ JChannel channel = (JChannel) channelFactory.createChannel(channelName)-->Line_96 $$ newConfigs.add(BroadcastGroupAdd.createBroadcastGroupConfiguration(name, config, channel, channelName))[ FD ]
Line_91 $$ if (jgroupFactories.containsKey(key)) -->Line_99 $$ if (binding == null) [ CD ]
Line_2 $$ public synchronized void start(final StartContext context) throws StartException -->Line_22 $$ configuration.setJournalDirectory(pathConfig.resolveJournalPath(pathManager))[ CD ]
Line_2 $$ public synchronized void start(final StartContext context) throws StartException -->Line_3 $$ ClassLoader origTCCL = org.wildfly.security.manager.WildFlySecurityManager.getCurrentContextClassLoaderPrivileged()[ CD ]
Line_120 $$ channel = (JChannel) channelFactory.createChannel(key)-->Line_121 $$ channels.put(channelName, channel)[ FD ]
Line_91 $$ if (jgroupFactories.containsKey(key)) -->Line_102 $$ binding.getSocketBindings().getNamedRegistry().registerBinding(ManagedBinding.Factory.createSimpleManagedBinding(binding))[ CD ]
Line_8 $$ if (supportsAIO == false) -->Line_10 $$ if (osName.contains("nux")) [ CD ]
Line_39 $$ OutboundSocketBinding binding = outboundSocketBindings.get(name)-->Line_99 $$ if (binding == null) [ FD ]
Line_120 $$ channel = (JChannel) channelFactory.createChannel(key)-->Line_123 $$ config = DiscoveryGroupAdd.createDiscoveryGroupConfiguration(name, entry.getValue(), channel, channelName)[ FD ]
Line_56 $$ if (binding.getSourceAddress() != null) -->Line_57 $$ tc.getParams().put(TransportConstants.LOCAL_ADDRESS_PROP_NAME, NetworkUtils.canonize(binding.getSourceAddress().getHostAddress()))[ CD ]
Line_119 $$ if (channel == null) -->Line_121 $$ channels.put(channelName, channel)[ CD ]
Line_115 $$ if (jgroupFactories.containsKey(key)) -->Line_125 $$ final SocketBinding binding = groupBindings.get(key)[ CD ]
Line_88 $$ for (final BroadcastGroupConfiguration config : broadcastGroups) -->Line_89 $$ final String name = config.getName()[ FD ]
Line_115 $$ if (jgroupFactories.containsKey(key)) -->Line_129 $$ config = DiscoveryGroupAdd.createDiscoveryGroupConfiguration(name, entry.getValue(), binding)[ CD ]
Line_93 $$ String channelName = jgroupsChannels.get(key)-->Line_123 $$ config = DiscoveryGroupAdd.createDiscoveryGroupConfiguration(name, entry.getValue(), channel, channelName)[ FD ]
Line_40 $$ if (binding == null) -->Line_59 $$ if (binding.getSourcePort() != null) [ CD ]
Line_91 $$ if (jgroupFactories.containsKey(key)) -->Line_96 $$ newConfigs.add(BroadcastGroupAdd.createBroadcastGroupConfiguration(name, config, channel, channelName))[ CD ]
Line_115 $$ if (jgroupFactories.containsKey(key)) -->Line_126 $$ if (binding == null) [ CD ]
Line_39 $$ OutboundSocketBinding binding = outboundSocketBindings.get(name)-->Line_129 $$ config = DiscoveryGroupAdd.createDiscoveryGroupConfiguration(name, entry.getValue(), binding)[ FD ]
Line_35 $$ if (socketRef != null) -->Line_38 $$ int port[ CD ]
Line_36 $$ String name = socketRef.toString()-->Line_96 $$ newConfigs.add(BroadcastGroupAdd.createBroadcastGroupConfiguration(name, config, channel, channelName))[ FD ]
Line_37 $$ String host-->Line_64 $$ tc.getParams().put(HOST, host)[ FD ]
Line_8 $$ if (supportsAIO == false) -->Line_9 $$ String osName = System.getProperty("os.name").toLowerCase(Locale.ENGLISH)[ CD ]
Line_90 $$ final String key = "broadcast" + name-->Line_125 $$ final SocketBinding binding = groupBindings.get(key)[ FD ]
Line_86 $$ if (broadcastGroups != null) -->Line_87 $$ final List<BroadcastGroupConfiguration> newConfigs = new ArrayList<BroadcastGroupConfiguration>()[ CD ]
Line_36 $$ String name = socketRef.toString()-->Line_75 $$ SocketBinding binding = socketBindings.get(name)[ FD ]
Line_90 $$ final String key = "broadcast" + name-->Line_91 $$ if (jgroupFactories.containsKey(key)) [ FD ]
Line_73 $$ if (socketRef != null) -->Line_74 $$ String name = socketRef.toString()[ CD ]
Line_93 $$ String channelName = jgroupsChannels.get(key)-->Line_94 $$ JChannel channel = (JChannel) channelFactory.createChannel(channelName)[ FD ]
Line_119 $$ if (channel == null) -->Line_120 $$ channel = (JChannel) channelFactory.createChannel(key)[ CD ]
Line_2 $$ public synchronized void start(final StartContext context) throws StartException -->Line_6 $$ if (jtype == JournalType.ASYNCIO) [ CD ]
Line_111 $$ for (final Map.Entry<String, DiscoveryGroupConfiguration> entry : discoveryGroups.entrySet()) -->Line_129 $$ config = DiscoveryGroupAdd.createDiscoveryGroupConfiguration(name, entry.getValue(), binding)[ FD ]
Line_51 $$ host = NetworkUtils.canonize(sa.getAddress().getHostAddress())-->Line_64 $$ tc.getParams().put(HOST, host)[ FD ]
Line_88 $$ for (final BroadcastGroupConfiguration config : broadcastGroups) -->Line_132 $$ configuration.getDiscoveryGroupConfigurations().put(name, config)[ FD ]
Line_40 $$ if (binding == null) -->Line_54 $$ port = binding.getDestinationPort()[ CD ]
Line_88 $$ for (final BroadcastGroupConfiguration config : broadcastGroups) -->Line_96 $$ newConfigs.add(BroadcastGroupAdd.createBroadcastGroupConfiguration(name, config, channel, channelName))[ FD ]
Line_73 $$ if (socketRef != null) -->Line_79 $$ binding.getSocketBindings().getNamedRegistry().registerBinding(ManagedBinding.Factory.createSimpleManagedBinding(binding))[ CD ]
Line_94 $$ JChannel channel = (JChannel) channelFactory.createChannel(channelName)-->Line_121 $$ channels.put(channelName, channel)[ FD ]
Line_35 $$ if (socketRef != null) -->Line_40 $$ if (binding == null) [ CD ]
Line_93 $$ String channelName = jgroupsChannels.get(key)-->Line_121 $$ channels.put(channelName, channel)[ FD ]
Line_49 $$ host = NetworkUtils.canonize(sa.getAddress().getHostName())-->Line_51 $$ host = NetworkUtils.canonize(sa.getAddress().getHostAddress())[ FD ]
Line_32 $$ for (TransportConfiguration tc : connectors) -->Line_65 $$ tc.getParams().put(PORT, port)[ FD ]
Line_35 $$ if (socketRef != null) -->Line_65 $$ tc.getParams().put(PORT, port)[ CD ]
Line_80 $$ InetSocketAddress socketAddress = binding.getSocketAddress()-->Line_81 $$ tc.getParams().put(HOST, socketAddress.getAddress().getHostAddress())[ FD ]
Line_90 $$ final String key = "broadcast" + name-->Line_120 $$ channel = (JChannel) channelFactory.createChannel(key)[ FD ]
Line_32 $$ for (TransportConfiguration tc : connectors) -->Line_81 $$ tc.getParams().put(HOST, socketAddress.getAddress().getHostAddress())[ FD ]
Line_39 $$ OutboundSocketBinding binding = outboundSocketBindings.get(name)-->Line_126 $$ if (binding == null) [ FD ]
Line_115 $$ if (jgroupFactories.containsKey(key)) -->Line_119 $$ if (channel == null) [ CD ]
Line_38 $$ int port-->Line_54 $$ port = binding.getDestinationPort()[ FD ]
Line_92 $$ ChannelFactory channelFactory = jgroupFactories.get(key)-->Line_94 $$ JChannel channel = (JChannel) channelFactory.createChannel(channelName)[ FD ]
Line_54 $$ port = binding.getDestinationPort()-->Line_65 $$ tc.getParams().put(PORT, port)[ FD ]
Line_8 $$ if (supportsAIO == false) -->Line_15 $$ configuration.setJournalType(JournalType.NIO)[ CD ]
Line_115 $$ if (jgroupFactories.containsKey(key)) -->Line_130 $$ binding.getSocketBindings().getNamedRegistry().registerBinding(ManagedBinding.Factory.createSimpleManagedBinding(binding))[ CD ]
Line_32 $$ for (TransportConfiguration tc : connectors) -->Line_82 $$ tc.getParams().put(PORT, socketAddress.getPort())[ FD ]
Line_111 $$ for (final Map.Entry<String, DiscoveryGroupConfiguration> entry : discoveryGroups.entrySet()) -->Line_112 $$ final String name = entry.getKey()[ FD ]
Line_45 $$ InetSocketAddress sa = socketBinding.getSocketAddress()-->Line_46 $$ port = sa.getPort()[ FD ]
Line_40 $$ if (binding == null) -->Line_42 $$ if (socketBinding == null) [ CD ]
Line_10 $$ if (osName.contains("nux")) -->Line_11 $$ ROOT_LOGGER.aioInfoLinux()[ CD ]
Line_38 $$ int port-->Line_46 $$ port = sa.getPort()[ FD ]
Line_36 $$ String name = socketRef.toString()-->Line_132 $$ configuration.getDiscoveryGroupConfigurations().put(name, config)[ FD ]
Line_90 $$ final String key = "broadcast" + name-->Line_116 $$ ChannelFactory channelFactory = jgroupFactories.get(key)[ FD ]
Line_94 $$ JChannel channel = (JChannel) channelFactory.createChannel(channelName)-->Line_95 $$ channels.put(channelName, channel)[ FD ]
Line_30 $$ Map<String, DiscoveryGroupConfiguration> discoveryGroups = configuration.getDiscoveryGroupConfigurations()-->Line_109 $$ if (discoveryGroups != null) [ FD ]
Line_87 $$ final List<BroadcastGroupConfiguration> newConfigs = new ArrayList<BroadcastGroupConfiguration>()-->Line_107 $$ configuration.getBroadcastGroupConfigurations().addAll(newConfigs)[ FD ]
Line_39 $$ OutboundSocketBinding binding = outboundSocketBindings.get(name)-->Line_55 $$ host = NetworkUtils.canonize(binding.getUnresolvedDestinationAddress())[ FD ]
Line_87 $$ final List<BroadcastGroupConfiguration> newConfigs = new ArrayList<BroadcastGroupConfiguration>()-->Line_96 $$ newConfigs.add(BroadcastGroupAdd.createBroadcastGroupConfiguration(name, config, channel, channelName))[ FD ]
Line_49 $$ host = NetworkUtils.canonize(sa.getAddress().getHostName())-->Line_64 $$ tc.getParams().put(HOST, host)[ FD ]
Line_2 $$ public synchronized void start(final StartContext context) throws StartException -->Line_20 $$ configuration.setBindingsDirectory(pathConfig.resolveBindingsPath(pathManager))[ CD ]
Line_37 $$ String host-->Line_51 $$ host = NetworkUtils.canonize(sa.getAddress().getHostAddress())[ FD ]
Line_39 $$ OutboundSocketBinding binding = outboundSocketBindings.get(name)-->Line_130 $$ binding.getSocketBindings().getNamedRegistry().registerBinding(ManagedBinding.Factory.createSimpleManagedBinding(binding))[ FD ]
Line_45 $$ InetSocketAddress sa = socketBinding.getSocketAddress()-->Line_49 $$ host = NetworkUtils.canonize(sa.getAddress().getHostName())[ FD ]
Line_32 $$ for (TransportConfiguration tc : connectors) -->Line_64 $$ tc.getParams().put(HOST, host)[ FD ]
Line_93 $$ String channelName = jgroupsChannels.get(key)-->Line_118 $$ JChannel channel = channels.get(channelName)[ FD ]
Line_93 $$ String channelName = jgroupsChannels.get(key)-->Line_96 $$ newConfigs.add(BroadcastGroupAdd.createBroadcastGroupConfiguration(name, config, channel, channelName))[ FD ]
Line_142 $$ for (Interceptor incomingInterceptor : incomingInterceptors) -->Line_143 $$ server.getServiceRegistry().addIncomingInterceptor(incomingInterceptor)[ FD ]
Line_39 $$ OutboundSocketBinding binding = outboundSocketBindings.get(name)-->Line_59 $$ if (binding.getSourcePort() != null) [ FD ]
Line_90 $$ final String key = "broadcast" + name-->Line_117 $$ String channelName = jgroupsChannels.get(key)[ FD ]
Line_39 $$ OutboundSocketBinding binding = outboundSocketBindings.get(name)-->Line_102 $$ binding.getSocketBindings().getNamedRegistry().registerBinding(ManagedBinding.Factory.createSimpleManagedBinding(binding))[ FD ]
Line_3 $$ ClassLoader origTCCL = org.wildfly.security.manager.WildFlySecurityManager.getCurrentContextClassLoaderPrivileged()-->Line_152 $$ org.wildfly.security.manager.WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(origTCCL)[ FD ]
Line_7 $$ boolean supportsAIO = AIOSequentialFileFactory.isSupported()-->Line_8 $$ if (supportsAIO == false) [ FD ]
Line_129 $$ config = DiscoveryGroupAdd.createDiscoveryGroupConfiguration(name, entry.getValue(), binding)-->Line_132 $$ configuration.getDiscoveryGroupConfigurations().put(name, config)[ FD ]
Line_92 $$ ChannelFactory channelFactory = jgroupFactories.get(key)-->Line_120 $$ channel = (JChannel) channelFactory.createChannel(key)[ FD ]
Line_38 $$ int port-->Line_65 $$ tc.getParams().put(PORT, port)[ FD ]
Line_6 $$ if (jtype == JournalType.ASYNCIO) -->Line_8 $$ if (supportsAIO == false) [ CD ]
Line_36 $$ String name = socketRef.toString()-->Line_39 $$ OutboundSocketBinding binding = outboundSocketBindings.get(name)[ FD ]
Line_39 $$ OutboundSocketBinding binding = outboundSocketBindings.get(name)-->Line_79 $$ binding.getSocketBindings().getNamedRegistry().registerBinding(ManagedBinding.Factory.createSimpleManagedBinding(binding))[ FD ]
Line_9 $$ String osName = System.getProperty("os.name").toLowerCase(Locale.ENGLISH)-->Line_10 $$ if (osName.contains("nux")) [ FD ]
Line_145 $$ for (Interceptor outgoingInterceptor : outgoingInterceptors) -->Line_146 $$ server.getServiceRegistry().addOutgoingInterceptor(outgoingInterceptor)[ FD ]
Line_37 $$ String host-->Line_49 $$ host = NetworkUtils.canonize(sa.getAddress().getHostName())[ FD ]
Line_90 $$ final String key = "broadcast" + name-->Line_93 $$ String channelName = jgroupsChannels.get(key)[ FD ]
Line_32 $$ for (TransportConfiguration tc : connectors) -->Line_57 $$ tc.getParams().put(TransportConstants.LOCAL_ADDRESS_PROP_NAME, NetworkUtils.canonize(binding.getSourceAddress().getHostAddress()))[ FD ]
Line_91 $$ if (jgroupFactories.containsKey(key)) -->Line_95 $$ channels.put(channelName, channel)[ CD ]
Line_46 $$ port = sa.getPort()-->Line_54 $$ port = binding.getDestinationPort()[ FD ]
Line_91 $$ if (jgroupFactories.containsKey(key)) -->Line_103 $$ newConfigs.add(BroadcastGroupAdd.createBroadcastGroupConfiguration(name, config, binding))[ CD ]
