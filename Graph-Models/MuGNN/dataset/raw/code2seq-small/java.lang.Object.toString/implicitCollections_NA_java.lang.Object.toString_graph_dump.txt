Line_8 $$ Map<String, Class<?>> aliases = new HashMap<String, Class<?>>()-->Line_11 $$ marshaller.setAliases(aliases)[ FD ]
Line_12 $$ Map implicitCollections = Collections.singletonMap(Flights.class, "flights,strings")-->Line_13 $$ marshaller.setImplicitCollections(implicitCollections)[ FD ]
Line_8 $$ Map<String, Class<?>> aliases = new HashMap<String, Class<?>>()-->Line_9 $$ aliases.put("flight", Flight.class)[ FD ]
Line_14 $$ Writer writer = new StringWriter()-->Line_16 $$ String result = writer.toString()[ FD ]
Line_16 $$ String result = writer.toString()-->Line_18 $$ assertXpathExists("/flights/flight", result)[ FD ]
Line_8 $$ Map<String, Class<?>> aliases = new HashMap<String, Class<?>>()-->Line_10 $$ aliases.put("flights", Flights.class)[ FD ]
Line_5 $$ Flights flights = new Flights()-->Line_6 $$ flights.getFlights().add(flight)[ FD ]
Line_5 $$ Flights flights = new Flights()-->Line_15 $$ marshaller.marshal(flights, new StreamResult(writer))[ FD ]
Line_16 $$ String result = writer.toString()-->Line_19 $$ assertXpathNotExists("/flights/strings", result)[ FD ]
Line_16 $$ String result = writer.toString()-->Line_17 $$ assertXpathNotExists("/flights/flights", result)[ FD ]
Line_16 $$ String result = writer.toString()-->Line_20 $$ assertXpathExists("/flights/string", result)[ FD ]
Line_5 $$ Flights flights = new Flights()-->Line_7 $$ flights.getStrings().add("42")[ FD ]
