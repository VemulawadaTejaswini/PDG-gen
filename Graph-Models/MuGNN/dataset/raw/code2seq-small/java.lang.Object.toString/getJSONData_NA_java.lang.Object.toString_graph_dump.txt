Line_2 $$ public JSONObject getJSONData(long companyId, String className, String tableName, String columnName, long classPK) throws PortalException -->Line_16 $$ jsonObject.put("data", data)[ CD ]
Line_3 $$ ExpandoColumn column = expandoColumnLocalService.getColumn(companyId, className, tableName, columnName)-->Line_4 $$ if (!ExpandoColumnPermissionUtil.contains(getPermissionChecker(), column, ActionKeys.VIEW)) [ FD ]
Line_8 $$ String data = dataSerializable.toString()-->Line_16 $$ jsonObject.put("data", data)[ FD ]
Line_2 $$ public JSONObject getJSONData(long companyId, String className, String tableName, String columnName, long classPK) throws PortalException -->Line_15 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()[ CD ]
Line_2 $$ public JSONObject getJSONData(long companyId, String className, String tableName, String columnName, long classPK) throws PortalException -->Line_12 $$ if (data.startsWith(StringPool.OPEN_CURLY_BRACE)) [ CD ]
Line_2 $$ public JSONObject getJSONData(long companyId, String className, String tableName, String columnName, long classPK) throws PortalException -->Line_9 $$ if (Validator.isNull(data)) [ CD ]
Line_12 $$ if (data.startsWith(StringPool.OPEN_CURLY_BRACE)) -->Line_13 $$ return JSONFactoryUtil.createJSONObject(data)[ CD ]
Line_15 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_16 $$ jsonObject.put("data", data)[ FD ]
Line_2 $$ public JSONObject getJSONData(long companyId, String className, String tableName, String columnName, long classPK) throws PortalException -->Line_4 $$ if (!ExpandoColumnPermissionUtil.contains(getPermissionChecker(), column, ActionKeys.VIEW)) [ CD ]
Line_2 $$ public JSONObject getJSONData(long companyId, String className, String tableName, String columnName, long classPK) throws PortalException -->Line_8 $$ String data = dataSerializable.toString()[ CD ]
Line_8 $$ String data = dataSerializable.toString()-->Line_12 $$ if (data.startsWith(StringPool.OPEN_CURLY_BRACE)) [ FD ]
Line_2 $$ public JSONObject getJSONData(long companyId, String className, String tableName, String columnName, long classPK) throws PortalException -->Line_17 $$ return jsonObject[ CD ]
Line_7 $$ Serializable dataSerializable = expandoValueLocalService.getData(companyId, className, tableName, columnName, classPK)-->Line_8 $$ String data = dataSerializable.toString()[ FD ]
Line_2 $$ public JSONObject getJSONData(long companyId, String className, String tableName, String columnName, long classPK) throws PortalException -->Line_3 $$ ExpandoColumn column = expandoColumnLocalService.getColumn(companyId, className, tableName, columnName)[ CD ]
Line_8 $$ String data = dataSerializable.toString()-->Line_9 $$ if (Validator.isNull(data)) [ FD ]
Line_2 $$ public JSONObject getJSONData(long companyId, String className, String tableName, String columnName, long classPK) throws PortalException -->Line_3 $$ ExpandoColumn column = expandoColumnLocalService.getColumn(companyId, className, tableName, columnName)[ FD ]
Line_2 $$ public JSONObject getJSONData(long companyId, String className, String tableName, String columnName, long classPK) throws PortalException -->Line_7 $$ Serializable dataSerializable = expandoValueLocalService.getData(companyId, className, tableName, columnName, classPK)[ FD ]
Line_2 $$ public JSONObject getJSONData(long companyId, String className, String tableName, String columnName, long classPK) throws PortalException -->Line_7 $$ Serializable dataSerializable = expandoValueLocalService.getData(companyId, className, tableName, columnName, classPK)[ CD ]
Line_4 $$ if (!ExpandoColumnPermissionUtil.contains(getPermissionChecker(), column, ActionKeys.VIEW)) -->Line_5 $$ return null[ CD ]
Line_8 $$ String data = dataSerializable.toString()-->Line_13 $$ return JSONFactoryUtil.createJSONObject(data)[ FD ]
Line_9 $$ if (Validator.isNull(data)) -->Line_10 $$ return null[ CD ]
