Line_8 $$ MappedFieldType bogus = new MappedFieldType() -->Line_12 $$ return null[ CD ]
Line_2 $$ public void testCheckTypeName() -->Line_8 $$ MappedFieldType bogus = new MappedFieldType() [ CD ]
Line_4 $$ List<String> conflicts = new ArrayList()-->Line_26 $$ assertTrue(conflicts.toString(), conflicts.isEmpty())[ FD ]
Line_2 $$ public void testCheckTypeName() -->Line_45 $$ assertTrue(conflicts.toString(), conflicts.isEmpty())[ CD ]
Line_4 $$ List<String> conflicts = new ArrayList()-->Line_21 $$ fieldType.checkCompatibility(bogus, conflicts, random().nextBoolean())[ FD ]
Line_4 $$ List<String> conflicts = new ArrayList()-->Line_40 $$ fieldType.checkCompatibility(other, conflicts, random().nextBoolean())[ FD ]
Line_2 $$ public void testCheckTypeName() -->Line_26 $$ assertTrue(conflicts.toString(), conflicts.isEmpty())[ CD ]
Line_27 $$ MappedFieldType other = new MappedFieldType() -->Line_31 $$ return null[ CD ]
Line_3 $$ final MappedFieldType fieldType = createNamedDefaultFieldType()-->Line_40 $$ fieldType.checkCompatibility(other, conflicts, random().nextBoolean())[ FD ]
Line_27 $$ MappedFieldType other = new MappedFieldType() -->Line_36 $$ return "othertype"[ CD ]
Line_4 $$ List<String> conflicts = new ArrayList()-->Line_7 $$ assertTrue(conflicts.toString(), conflicts.isEmpty())[ FD ]
Line_3 $$ final MappedFieldType fieldType = createNamedDefaultFieldType()-->Line_21 $$ fieldType.checkCompatibility(bogus, conflicts, random().nextBoolean())[ FD ]
Line_3 $$ final MappedFieldType fieldType = createNamedDefaultFieldType()-->Line_17 $$ return fieldType.typeName()[ FD ]
Line_4 $$ List<String> conflicts = new ArrayList()-->Line_45 $$ assertTrue(conflicts.toString(), conflicts.isEmpty())[ FD ]
Line_2 $$ public void testCheckTypeName() -->Line_7 $$ assertTrue(conflicts.toString(), conflicts.isEmpty())[ CD ]
Line_8 $$ MappedFieldType bogus = new MappedFieldType() -->Line_21 $$ fieldType.checkCompatibility(bogus, conflicts, random().nextBoolean())[ FD ]
Line_8 $$ MappedFieldType bogus = new MappedFieldType() -->Line_17 $$ return fieldType.typeName()[ CD ]
Line_2 $$ public void testCheckTypeName() -->Line_4 $$ List<String> conflicts = new ArrayList()[ CD ]
Line_2 $$ public void testCheckTypeName() -->Line_3 $$ final MappedFieldType fieldType = createNamedDefaultFieldType()[ CD ]
