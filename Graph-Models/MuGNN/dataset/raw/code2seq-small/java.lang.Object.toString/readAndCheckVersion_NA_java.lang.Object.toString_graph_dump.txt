Line_9 $$ for (InetSocketAddress address : addresses) -->Line_10 $$ RestResponse restResponse = new RestResponse(httpRequestBuilder(address).path(restApi.getPaths().get(0)).method(restApi.getMethods().get(0)).execute())[ FD ]
Line_16 $$ if (version == null) -->Line_17 $$ version = latestVersion.toString()[ CD ]
Line_17 $$ version = latestVersion.toString()-->Line_19 $$ if (!latestVersion.equals(version)) [ FD ]
Line_12 $$ Object latestVersion = restResponse.evaluate("version.number")-->Line_17 $$ version = latestVersion.toString()[ FD ]
Line_17 $$ version = latestVersion.toString()-->Line_24 $$ return Version.fromString(version)[ FD ]
Line_2 $$ private Version readAndCheckVersion() throws IOException, RestException -->Line_8 $$ String version = null[ CD ]
Line_8 $$ String version = null-->Line_16 $$ if (version == null) [ FD ]
Line_8 $$ String version = null-->Line_24 $$ return Version.fromString(version)[ FD ]
Line_10 $$ RestResponse restResponse = new RestResponse(httpRequestBuilder(address).path(restApi.getPaths().get(0)).method(restApi.getMethods().get(0)).execute())-->Line_11 $$ checkStatusCode(restResponse)[ FD ]
Line_2 $$ private Version readAndCheckVersion() throws IOException, RestException -->Line_24 $$ return Version.fromString(version)[ CD ]
Line_12 $$ Object latestVersion = restResponse.evaluate("version.number")-->Line_19 $$ if (!latestVersion.equals(version)) [ FD ]
Line_10 $$ RestResponse restResponse = new RestResponse(httpRequestBuilder(address).path(restApi.getPaths().get(0)).method(restApi.getMethods().get(0)).execute())-->Line_12 $$ Object latestVersion = restResponse.evaluate("version.number")[ FD ]
Line_16 $$ if (version == null) -->Line_19 $$ if (!latestVersion.equals(version)) [ CD ]
Line_8 $$ String version = null-->Line_19 $$ if (!latestVersion.equals(version)) [ FD ]
Line_8 $$ String version = null-->Line_17 $$ version = latestVersion.toString()[ FD ]
Line_12 $$ Object latestVersion = restResponse.evaluate("version.number")-->Line_13 $$ if (latestVersion == null) [ FD ]
