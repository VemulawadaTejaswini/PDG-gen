Line_3 $$ RestApi restApi = restApi("info")-->Line_4 $$ assert restApi.getPaths().size() == 1[ FD ]
Line_7 $$ for (InetSocketAddress address : addresses) -->Line_8 $$ RestResponse restResponse = new RestResponse(httpRequestBuilder(address).path(restApi.getPaths().get(0)).method(restApi.getMethods().get(0)).execute())[ FD ]
Line_3 $$ RestApi restApi = restApi("info")-->Line_5 $$ assert restApi.getMethods().size() == 1[ FD ]
Line_2 $$ private Version readAndCheckVersion() throws IOException, RestException -->Line_6 $$ String version = null[ CD ]
Line_6 $$ String version = null-->Line_14 $$ if (version == null) [ FD ]
Line_14 $$ if (version == null) -->Line_17 $$ if (!latestVersion.equals(version)) [ CD ]
Line_8 $$ RestResponse restResponse = new RestResponse(httpRequestBuilder(address).path(restApi.getPaths().get(0)).method(restApi.getMethods().get(0)).execute())-->Line_9 $$ checkStatusCode(restResponse)[ FD ]
Line_10 $$ Object latestVersion = restResponse.evaluate("version.number")-->Line_15 $$ version = latestVersion.toString()[ FD ]
Line_3 $$ RestApi restApi = restApi("info")-->Line_8 $$ RestResponse restResponse = new RestResponse(httpRequestBuilder(address).path(restApi.getPaths().get(0)).method(restApi.getMethods().get(0)).execute())[ FD ]
Line_10 $$ Object latestVersion = restResponse.evaluate("version.number")-->Line_11 $$ if (latestVersion == null) [ FD ]
Line_6 $$ String version = null-->Line_17 $$ if (!latestVersion.equals(version)) [ FD ]
Line_14 $$ if (version == null) -->Line_15 $$ version = latestVersion.toString()[ CD ]
Line_15 $$ version = latestVersion.toString()-->Line_17 $$ if (!latestVersion.equals(version)) [ FD ]
Line_6 $$ String version = null-->Line_22 $$ return Version.fromString(version)[ FD ]
Line_2 $$ private Version readAndCheckVersion() throws IOException, RestException -->Line_3 $$ RestApi restApi = restApi("info")[ CD ]
Line_6 $$ String version = null-->Line_15 $$ version = latestVersion.toString()[ FD ]
Line_10 $$ Object latestVersion = restResponse.evaluate("version.number")-->Line_17 $$ if (!latestVersion.equals(version)) [ FD ]
Line_15 $$ version = latestVersion.toString()-->Line_22 $$ return Version.fromString(version)[ FD ]
Line_2 $$ private Version readAndCheckVersion() throws IOException, RestException -->Line_22 $$ return Version.fromString(version)[ CD ]
Line_8 $$ RestResponse restResponse = new RestResponse(httpRequestBuilder(address).path(restApi.getPaths().get(0)).method(restApi.getMethods().get(0)).execute())-->Line_10 $$ Object latestVersion = restResponse.evaluate("version.number")[ FD ]
