Line_25 $$ Status opStatus = SUCCESS-->Line_69 $$ opStatus = ERROR[ FD ]
Line_23 $$ Socket proxySock = null-->Line_54 $$ throw new IOException("Copy block " + block + " from " + proxySock.getRemoteSocketAddress() + " failed due to access token error")[ FD ]
Line_70 $$ errMsg = "opReplaceBlock " + block + " received exception " + ioe-->Line_71 $$ LOG.info(errMsg)[ FD ]
Line_16 $$ if (!dataXceiverServer.balanceThrottler.acquire()) -->Line_21 $$ return[ CD ]
Line_23 $$ Socket proxySock = null-->Line_41 $$ InputStream unbufProxyIn = NetUtils.getInputStream(proxySock)[ FD ]
Line_25 $$ Status opStatus = SUCCESS-->Line_85 $$ sendResponse(opStatus, errMsg)[ FD ]
Line_28 $$ DataInputStream proxyReply = null-->Line_77 $$ proxyReply.readChar()[ FD ]
Line_23 $$ Socket proxySock = null-->Line_43 $$ IOStreamPair saslStreams = datanode.saslClient.socketSend(proxySock, unbufProxyOut, unbufProxyIn, keyFactory, blockToken, proxySource)[ FD ]
Line_23 $$ Socket proxySock = null-->Line_40 $$ OutputStream unbufProxyOut = NetUtils.getOutputStream(proxySock, dnConf.socketWriteTimeout)[ FD ]
Line_37 $$ proxySock = datanode.newSocket()-->Line_43 $$ IOStreamPair saslStreams = datanode.saslClient.socketSend(proxySock, unbufProxyOut, unbufProxyIn, keyFactory, blockToken, proxySource)[ FD ]
Line_33 $$ if (LOG.isDebugEnabled()) -->Line_34 $$ LOG.debug("Connecting to datanode " + dnAddr)[ CD ]
Line_27 $$ BlockReceiver blockReceiver = null-->Line_90 $$ IOUtils.closeStream(blockReceiver)[ FD ]
Line_23 $$ Socket proxySock = null-->Line_56 $$ throw new IOException("Copy block " + block + " from " + proxySock.getRemoteSocketAddress() + " failed")[ FD ]
Line_23 $$ Socket proxySock = null-->Line_39 $$ proxySock.setSoTimeout(dnConf.socketTimeout)[ FD ]
Line_26 $$ String errMsg = null-->Line_70 $$ errMsg = "opReplaceBlock " + block + " received exception " + ioe[ FD ]
Line_36 $$ InetSocketAddress proxyAddr = NetUtils.createSocketAddr(dnAddr)-->Line_38 $$ NetUtils.connect(proxySock, proxyAddr, dnConf.socketTimeout)[ FD ]
Line_37 $$ proxySock = datanode.newSocket()-->Line_40 $$ OutputStream unbufProxyOut = NetUtils.getOutputStream(proxySock, dnConf.socketWriteTimeout)[ FD ]
Line_28 $$ DataInputStream proxyReply = null-->Line_91 $$ IOUtils.closeStream(proxyReply)[ FD ]
Line_41 $$ InputStream unbufProxyIn = NetUtils.getInputStream(proxySock)-->Line_45 $$ unbufProxyIn = saslStreams.in[ FD ]
Line_37 $$ proxySock = datanode.newSocket()-->Line_56 $$ throw new IOException("Copy block " + block + " from " + proxySock.getRemoteSocketAddress() + " failed")[ FD ]
Line_37 $$ proxySock = datanode.newSocket()-->Line_54 $$ throw new IOException("Copy block " + block + " from " + proxySock.getRemoteSocketAddress() + " failed due to access token error")[ FD ]
Line_41 $$ InputStream unbufProxyIn = NetUtils.getInputStream(proxySock)-->Line_43 $$ IOStreamPair saslStreams = datanode.saslClient.socketSend(proxySock, unbufProxyOut, unbufProxyIn, keyFactory, blockToken, proxySource)[ FD ]
Line_52 $$ if (copyResponse.getStatus() != SUCCESS) -->Line_53 $$ if (copyResponse.getStatus() == ERROR_ACCESS_TOKEN) [ CD ]
Line_47 $$ proxyReply = new DataInputStream(new BufferedInputStream(unbufProxyIn, HdfsConstants.IO_FILE_BUFFER_SIZE))-->Line_91 $$ IOUtils.closeStream(proxyReply)[ FD ]
Line_24 $$ DataOutputStream proxyOut = null-->Line_89 $$ IOUtils.closeStream(proxyOut)[ FD ]
Line_29 $$ DataOutputStream replyOut = new DataOutputStream(getOutputStream())-->Line_92 $$ IOUtils.closeStream(replyOut)[ FD ]
Line_16 $$ if (!dataXceiverServer.balanceThrottler.acquire()) -->Line_20 $$ sendResponse(ERROR, msg)[ CD ]
Line_37 $$ proxySock = datanode.newSocket()-->Line_41 $$ InputStream unbufProxyIn = NetUtils.getInputStream(proxySock)[ FD ]
Line_23 $$ Socket proxySock = null-->Line_38 $$ NetUtils.connect(proxySock, proxyAddr, dnConf.socketTimeout)[ FD ]
Line_16 $$ if (!dataXceiverServer.balanceThrottler.acquire()) -->Line_19 $$ LOG.warn(msg)[ CD ]
Line_70 $$ errMsg = "opReplaceBlock " + block + " received exception " + ioe-->Line_85 $$ sendResponse(opStatus, errMsg)[ FD ]
Line_37 $$ proxySock = datanode.newSocket()-->Line_39 $$ proxySock.setSoTimeout(dnConf.socketTimeout)[ FD ]
Line_24 $$ DataOutputStream proxyOut = null-->Line_46 $$ proxyOut = new DataOutputStream(new BufferedOutputStream(unbufProxyOut, HdfsConstants.SMALL_BUFFER_SIZE))[ FD ]
Line_26 $$ String errMsg = null-->Line_85 $$ sendResponse(opStatus, errMsg)[ FD ]
Line_28 $$ DataInputStream proxyReply = null-->Line_47 $$ proxyReply = new DataInputStream(new BufferedInputStream(unbufProxyIn, HdfsConstants.IO_FILE_BUFFER_SIZE))[ FD ]
Line_69 $$ opStatus = ERROR-->Line_85 $$ sendResponse(opStatus, errMsg)[ FD ]
Line_42 $$ DataEncryptionKeyFactory keyFactory = datanode.getDataEncryptionKeyFactoryForBlock(block)-->Line_43 $$ IOStreamPair saslStreams = datanode.saslClient.socketSend(proxySock, unbufProxyOut, unbufProxyIn, keyFactory, blockToken, proxySource)[ FD ]
Line_26 $$ String errMsg = null-->Line_71 $$ LOG.info(errMsg)[ FD ]
Line_47 $$ proxyReply = new DataInputStream(new BufferedInputStream(unbufProxyIn, HdfsConstants.IO_FILE_BUFFER_SIZE))-->Line_77 $$ proxyReply.readChar()[ FD ]
Line_40 $$ OutputStream unbufProxyOut = NetUtils.getOutputStream(proxySock, dnConf.socketWriteTimeout)-->Line_43 $$ IOStreamPair saslStreams = datanode.saslClient.socketSend(proxySock, unbufProxyOut, unbufProxyIn, keyFactory, blockToken, proxySource)[ FD ]
Line_40 $$ OutputStream unbufProxyOut = NetUtils.getOutputStream(proxySock, dnConf.socketWriteTimeout)-->Line_44 $$ unbufProxyOut = saslStreams.out[ FD ]
Line_23 $$ Socket proxySock = null-->Line_37 $$ proxySock = datanode.newSocket()[ FD ]
Line_46 $$ proxyOut = new DataOutputStream(new BufferedOutputStream(unbufProxyOut, HdfsConstants.SMALL_BUFFER_SIZE))-->Line_89 $$ IOUtils.closeStream(proxyOut)[ FD ]
Line_37 $$ proxySock = datanode.newSocket()-->Line_38 $$ NetUtils.connect(proxySock, proxyAddr, dnConf.socketTimeout)[ FD ]
