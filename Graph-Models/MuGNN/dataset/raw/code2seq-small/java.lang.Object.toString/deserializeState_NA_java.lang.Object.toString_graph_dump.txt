Line_3 $$ if (stateElement == null) -->Line_5 $$ if (stateClass == Element.class) [ CD ]
Line_2 $$ public static <T> T deserializeState(@Nullable Element stateElement, Class<T> stateClass, @Nullable T mergeInto) -->Line_9 $$ String elementText = JDOMUtil.writeElement(stateElement, "\n")[ FD ]
Line_2 $$ public static <T> T deserializeState(@Nullable Element stateElement, Class<T> stateClass, @Nullable T mergeInto) -->Line_7 $$ if (JDOMExternalizable.class.isAssignableFrom(stateClass)) [ FD ]
Line_3 $$ if (stateElement == null) -->Line_4 $$ return mergeInto[ CD ]
Line_5 $$ if (stateClass == Element.class) -->Line_6 $$ return (T) stateElement[ CD ]
Line_2 $$ public static <T> T deserializeState(@Nullable Element stateElement, Class<T> stateClass, @Nullable T mergeInto) -->Line_12 $$ T t = ReflectionUtil.newInstance(stateClass)[ FD ]
Line_2 $$ public static <T> T deserializeState(@Nullable Element stateElement, Class<T> stateClass, @Nullable T mergeInto) -->Line_8 $$ if (mergeInto != null) [ FD ]
Line_19 $$ if (mergeInto == null) -->Line_20 $$ return XmlSerializer.deserialize(stateElement, stateClass)[ CD ]
Line_2 $$ public static <T> T deserializeState(@Nullable Element stateElement, Class<T> stateClass, @Nullable T mergeInto) -->Line_22 $$ XmlSerializer.deserializeInto(mergeInto, stateElement)[ FD ]
Line_19 $$ if (mergeInto == null) -->Line_22 $$ XmlSerializer.deserializeInto(mergeInto, stateElement)[ CD ]
Line_2 $$ public static <T> T deserializeState(@Nullable Element stateElement, Class<T> stateClass, @Nullable T mergeInto) -->Line_14 $$ ((JDOMExternalizable) t).readExternal(stateElement)[ FD ]
Line_8 $$ if (mergeInto != null) -->Line_9 $$ String elementText = JDOMUtil.writeElement(stateElement, "\n")[ CD ]
Line_2 $$ public static <T> T deserializeState(@Nullable Element stateElement, Class<T> stateClass, @Nullable T mergeInto) -->Line_20 $$ return XmlSerializer.deserialize(stateElement, stateClass)[ FD ]
Line_7 $$ if (JDOMExternalizable.class.isAssignableFrom(stateClass)) -->Line_8 $$ if (mergeInto != null) [ CD ]
Line_2 $$ public static <T> T deserializeState(@Nullable Element stateElement, Class<T> stateClass, @Nullable T mergeInto) -->Line_10 $$ LOG.error("State is " + stateClass.getName() + ", merge into is " + mergeInto.toString() + ", state element text is " + elementText)[ FD ]
Line_7 $$ if (JDOMExternalizable.class.isAssignableFrom(stateClass)) -->Line_12 $$ T t = ReflectionUtil.newInstance(stateClass)[ CD ]
Line_2 $$ public static <T> T deserializeState(@Nullable Element stateElement, Class<T> stateClass, @Nullable T mergeInto) -->Line_3 $$ if (stateElement == null) [ CD ]
Line_5 $$ if (stateClass == Element.class) -->Line_7 $$ if (JDOMExternalizable.class.isAssignableFrom(stateClass)) [ CD ]
Line_2 $$ public static <T> T deserializeState(@Nullable Element stateElement, Class<T> stateClass, @Nullable T mergeInto) -->Line_3 $$ if (stateElement == null) [ FD ]
Line_2 $$ public static <T> T deserializeState(@Nullable Element stateElement, Class<T> stateClass, @Nullable T mergeInto) -->Line_19 $$ if (mergeInto == null) [ FD ]
Line_8 $$ if (mergeInto != null) -->Line_10 $$ LOG.error("State is " + stateClass.getName() + ", merge into is " + mergeInto.toString() + ", state element text is " + elementText)[ CD ]
Line_7 $$ if (JDOMExternalizable.class.isAssignableFrom(stateClass)) -->Line_19 $$ if (mergeInto == null) [ CD ]
Line_2 $$ public static <T> T deserializeState(@Nullable Element stateElement, Class<T> stateClass, @Nullable T mergeInto) -->Line_5 $$ if (stateClass == Element.class) [ FD ]
Line_19 $$ if (mergeInto == null) -->Line_23 $$ return mergeInto[ CD ]
