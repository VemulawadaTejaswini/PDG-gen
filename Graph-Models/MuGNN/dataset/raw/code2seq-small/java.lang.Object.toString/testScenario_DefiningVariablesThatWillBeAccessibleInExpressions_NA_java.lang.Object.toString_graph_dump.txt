Line_16 $$ Object value = expr.getValue(ctx)-->Line_24 $$ assertEquals("[11, 13, 17]", value.toString())[ FD ]
Line_19 $$ value = expr.getValue(ctx)-->Line_20 $$ assertEquals(3, value)[ FD ]
Line_16 $$ Object value = expr.getValue(ctx)-->Line_19 $$ value = expr.getValue(ctx)[ FD ]
Line_18 $$ expr = parser.parseRaw("#primes.get(1)")-->Line_19 $$ value = expr.getValue(ctx)[ FD ]
Line_12 $$ List<Integer> primes = new ArrayList<Integer>()-->Line_13 $$ primes.addAll(Arrays.asList(2, 3, 5, 7, 11, 13, 17))[ FD ]
Line_15 $$ Expression expr = parser.parseRaw("#favouriteColour")-->Line_18 $$ expr = parser.parseRaw("#primes.get(1)")[ FD ]
Line_23 $$ value = expr.getValue(ctx)-->Line_24 $$ assertEquals("[11, 13, 17]", value.toString())[ FD ]
Line_15 $$ Expression expr = parser.parseRaw("#favouriteColour")-->Line_16 $$ Object value = expr.getValue(ctx)[ FD ]
Line_12 $$ List<Integer> primes = new ArrayList<Integer>()-->Line_14 $$ ctx.setVariable("primes", primes)[ FD ]
Line_16 $$ Object value = expr.getValue(ctx)-->Line_20 $$ assertEquals(3, value)[ FD ]
Line_15 $$ Expression expr = parser.parseRaw("#favouriteColour")-->Line_19 $$ value = expr.getValue(ctx)[ FD ]
Line_19 $$ value = expr.getValue(ctx)-->Line_23 $$ value = expr.getValue(ctx)[ FD ]
Line_19 $$ value = expr.getValue(ctx)-->Line_24 $$ assertEquals("[11, 13, 17]", value.toString())[ FD ]
Line_15 $$ Expression expr = parser.parseRaw("#favouriteColour")-->Line_23 $$ value = expr.getValue(ctx)[ FD ]
Line_16 $$ Object value = expr.getValue(ctx)-->Line_17 $$ assertEquals("blue", value)[ FD ]
Line_16 $$ Object value = expr.getValue(ctx)-->Line_23 $$ value = expr.getValue(ctx)[ FD ]
Line_18 $$ expr = parser.parseRaw("#primes.get(1)")-->Line_23 $$ value = expr.getValue(ctx)[ FD ]
