Line_5 $$ if (rootCause instanceof LogEventException) -->Line_6 $$ return ((LogEventException) rootCause).getLogMessage()[ CD ]
Line_2 $$ private static IdeaLoggingEvent extractLoggingEvent(Object message, Throwable throwable) -->Line_13 $$ return new IdeaLoggingEvent(strMessage, throwable)[ CD ]
Line_2 $$ private static IdeaLoggingEvent extractLoggingEvent(Object message, Throwable throwable) -->Line_5 $$ if (rootCause instanceof LogEventException) [ CD ]
Line_2 $$ private static IdeaLoggingEvent extractLoggingEvent(Object message, Throwable throwable) -->Line_11 $$ return LogMessageEx.createEvent(strMessage, ExceptionUtil.getThrowableText(throwable), withAttachments.getAttachments())[ FD ]
Line_9 $$ ExceptionWithAttachments withAttachments = ExceptionUtil.findCause(throwable, ExceptionWithAttachments.class)-->Line_11 $$ return LogMessageEx.createEvent(strMessage, ExceptionUtil.getThrowableText(throwable), withAttachments.getAttachments())[ FD ]
Line_10 $$ if (withAttachments != null) -->Line_11 $$ return LogMessageEx.createEvent(strMessage, ExceptionUtil.getThrowableText(throwable), withAttachments.getAttachments())[ CD ]
Line_2 $$ private static IdeaLoggingEvent extractLoggingEvent(Object message, Throwable throwable) -->Line_9 $$ ExceptionWithAttachments withAttachments = ExceptionUtil.findCause(throwable, ExceptionWithAttachments.class)[ FD ]
Line_2 $$ private static IdeaLoggingEvent extractLoggingEvent(Object message, Throwable throwable) -->Line_8 $$ String strMessage = message == null ? "<null> " : message.toString()[ FD ]
Line_2 $$ private static IdeaLoggingEvent extractLoggingEvent(Object message, Throwable throwable) -->Line_9 $$ ExceptionWithAttachments withAttachments = ExceptionUtil.findCause(throwable, ExceptionWithAttachments.class)[ CD ]
Line_2 $$ private static IdeaLoggingEvent extractLoggingEvent(Object message, Throwable throwable) -->Line_10 $$ if (withAttachments != null) [ CD ]
Line_8 $$ String strMessage = message == null ? "<null> " : message.toString()-->Line_11 $$ return LogMessageEx.createEvent(strMessage, ExceptionUtil.getThrowableText(throwable), withAttachments.getAttachments())[ FD ]
Line_9 $$ ExceptionWithAttachments withAttachments = ExceptionUtil.findCause(throwable, ExceptionWithAttachments.class)-->Line_10 $$ if (withAttachments != null) [ FD ]
Line_2 $$ private static IdeaLoggingEvent extractLoggingEvent(Object message, Throwable throwable) -->Line_8 $$ String strMessage = message == null ? "<null> " : message.toString()[ CD ]
