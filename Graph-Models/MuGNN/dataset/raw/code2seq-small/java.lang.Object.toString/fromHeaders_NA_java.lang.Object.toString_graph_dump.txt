Line_16 $$ Destination jmsReplyTo = getHeaderIfAvailable(headers, JmsHeaders.REPLY_TO, Destination.class)-->Line_17 $$ if (jmsReplyTo != null) [ FD ]
Line_33 $$ for (String headerName : headerNames) -->Line_35 $$ Object value = headers.get(headerName)[ FD ]
Line_41 $$ if (headerName.startsWith("JMSX")) -->Line_45 $$ if (logger.isWarnEnabled()) [ CD ]
Line_45 $$ if (logger.isWarnEnabled()) -->Line_46 $$ logger.warn("failed to map Message header '" + headerName + "' to JMS property", e)[ CD ]
Line_5 $$ Object jmsCorrelationId = headers.get(JmsHeaders.CORRELATION_ID)-->Line_7 $$ jmsCorrelationId = jmsCorrelationId.toString()[ FD ]
Line_24 $$ String jmsType = getHeaderIfAvailable(headers, JmsHeaders.TYPE, String.class)-->Line_25 $$ if (jmsType != null) [ FD ]
Line_34 $$ if (StringUtils.hasText(headerName) && !headerName.startsWith(JmsHeaders.PREFIX)) -->Line_36 $$ if (value != null && SUPPORTED_PROPERTY_TYPES.contains(value.getClass())) [ CD ]
Line_6 $$ if (jmsCorrelationId instanceof Number) -->Line_7 $$ jmsCorrelationId = jmsCorrelationId.toString()[ CD ]
Line_33 $$ for (String headerName : headerNames) -->Line_34 $$ if (StringUtils.hasText(headerName) && !headerName.startsWith(JmsHeaders.PREFIX)) [ FD ]
Line_53 $$ if (logger.isWarnEnabled()) -->Line_54 $$ logger.warn("error occurred while mapping from MessageHeaders to JMS properties", ex)[ CD ]
Line_33 $$ for (String headerName : headerNames) -->Line_41 $$ if (headerName.startsWith("JMSX")) [ FD ]
Line_42 $$ if (logger.isTraceEnabled()) -->Line_43 $$ logger.trace("skipping reserved header, it cannot be set by client: " + headerName)[ CD ]
Line_33 $$ for (String headerName : headerNames) -->Line_38 $$ String propertyName = this.fromHeaderName(headerName)[ FD ]
Line_7 $$ jmsCorrelationId = jmsCorrelationId.toString()-->Line_9 $$ if (jmsCorrelationId instanceof String) [ FD ]
Line_24 $$ String jmsType = getHeaderIfAvailable(headers, JmsHeaders.TYPE, String.class)-->Line_27 $$ jmsMessage.setJMSType(jmsType)[ FD ]
Line_38 $$ String propertyName = this.fromHeaderName(headerName)-->Line_39 $$ jmsMessage.setObjectProperty(propertyName, value)[ FD ]
Line_41 $$ if (headerName.startsWith("JMSX")) -->Line_42 $$ if (logger.isTraceEnabled()) [ CD ]
Line_16 $$ Destination jmsReplyTo = getHeaderIfAvailable(headers, JmsHeaders.REPLY_TO, Destination.class)-->Line_19 $$ jmsMessage.setJMSReplyTo(jmsReplyTo)[ FD ]
Line_5 $$ Object jmsCorrelationId = headers.get(JmsHeaders.CORRELATION_ID)-->Line_6 $$ if (jmsCorrelationId instanceof Number) [ FD ]
Line_34 $$ if (StringUtils.hasText(headerName) && !headerName.startsWith(JmsHeaders.PREFIX)) -->Line_35 $$ Object value = headers.get(headerName)[ CD ]
Line_35 $$ Object value = headers.get(headerName)-->Line_39 $$ jmsMessage.setObjectProperty(propertyName, value)[ FD ]
Line_35 $$ Object value = headers.get(headerName)-->Line_36 $$ if (value != null && SUPPORTED_PROPERTY_TYPES.contains(value.getClass())) [ FD ]
Line_5 $$ Object jmsCorrelationId = headers.get(JmsHeaders.CORRELATION_ID)-->Line_9 $$ if (jmsCorrelationId instanceof String) [ FD ]
