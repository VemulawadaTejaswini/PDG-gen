Line_2 $$ public static MultiTenancyStrategy determineMultiTenancyStrategy(Map properties) -->Line_4 $$ if (strategy == null) [ CD ]
Line_2 $$ public static MultiTenancyStrategy determineMultiTenancyStrategy(Map properties) -->Line_10 $$ final String strategyName = strategy.toString()[ CD ]
Line_3 $$ final Object strategy = properties.get(Environment.MULTI_TENANT)-->Line_10 $$ final String strategyName = strategy.toString()[ FD ]
Line_2 $$ public static MultiTenancyStrategy determineMultiTenancyStrategy(Map properties) -->Line_3 $$ final Object strategy = properties.get(Environment.MULTI_TENANT)[ CD ]
Line_2 $$ public static MultiTenancyStrategy determineMultiTenancyStrategy(Map properties) -->Line_3 $$ final Object strategy = properties.get(Environment.MULTI_TENANT)[ FD ]
Line_7 $$ if (MultiTenancyStrategy.class.isInstance(strategy)) -->Line_8 $$ return (MultiTenancyStrategy) strategy[ CD ]
Line_2 $$ public static MultiTenancyStrategy determineMultiTenancyStrategy(Map properties) -->Line_7 $$ if (MultiTenancyStrategy.class.isInstance(strategy)) [ CD ]
Line_10 $$ final String strategyName = strategy.toString()-->Line_12 $$ return MultiTenancyStrategy.valueOf(strategyName.toUpperCase(Locale.ROOT))[ FD ]
Line_3 $$ final Object strategy = properties.get(Environment.MULTI_TENANT)-->Line_7 $$ if (MultiTenancyStrategy.class.isInstance(strategy)) [ FD ]
Line_4 $$ if (strategy == null) -->Line_5 $$ return MultiTenancyStrategy.NONE[ CD ]
Line_3 $$ final Object strategy = properties.get(Environment.MULTI_TENANT)-->Line_4 $$ if (strategy == null) [ FD ]
