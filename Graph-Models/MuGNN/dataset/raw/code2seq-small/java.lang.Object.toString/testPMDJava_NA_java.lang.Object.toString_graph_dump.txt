Line_18 $$ List<String> list = Files.readAllLines(_logFilePath, Charset.defaultCharset())-->Line_19 $$ Assert.assertTrue(list.toString(), list.isEmpty())[ FD ]
Line_3 $$ SourceLanguage sourceLanguage = new SourceLanguage()-->Line_5 $$ sourceLanguage.setVersion(_buildProperties.getProperty("ant.build.javac.source"))[ FD ]
Line_7 $$ CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(ClassTypeResolver.class.getName(), Level.SEVERE)-->Line_10 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ FD ]
Line_11 $$ if (!logRecords.isEmpty()) -->Line_12 $$ AssertionError assertionError = new AssertionError("PMD Java log error")[ CD ]
Line_12 $$ AssertionError assertionError = new AssertionError("PMD Java log error")-->Line_14 $$ assertionError.addSuppressed(new Throwable(logRecord.getMessage(), logRecord.getThrown()))[ FD ]
Line_2 $$ public void testPMDJava() throws IOException -->Line_5 $$ sourceLanguage.setVersion(_buildProperties.getProperty("ant.build.javac.source"))[ CD ]
Line_2 $$ public void testPMDJava() throws IOException -->Line_3 $$ SourceLanguage sourceLanguage = new SourceLanguage()[ CD ]
Line_3 $$ SourceLanguage sourceLanguage = new SourceLanguage()-->Line_4 $$ sourceLanguage.setName("java")[ FD ]
Line_2 $$ public void testPMDJava() throws IOException -->Line_6 $$ _pmdTask.addConfiguredSourceLanguage(sourceLanguage)[ CD ]
Line_3 $$ SourceLanguage sourceLanguage = new SourceLanguage()-->Line_6 $$ _pmdTask.addConfiguredSourceLanguage(sourceLanguage)[ FD ]
Line_13 $$ for (LogRecord logRecord : logRecords) -->Line_14 $$ assertionError.addSuppressed(new Throwable(logRecord.getMessage(), logRecord.getThrown()))[ FD ]
Line_7 $$ CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(ClassTypeResolver.class.getName(), Level.SEVERE)-->Line_21 $$ captureHandler.close()[ FD ]
Line_2 $$ public void testPMDJava() throws IOException -->Line_7 $$ CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(ClassTypeResolver.class.getName(), Level.SEVERE)[ CD ]
Line_10 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_11 $$ if (!logRecords.isEmpty()) [ FD ]
Line_2 $$ public void testPMDJava() throws IOException -->Line_4 $$ sourceLanguage.setName("java")[ CD ]
