Line_4 $$ SourceLanguage sourceLanguage = new SourceLanguage()-->Line_7 $$ _pmdTask.addConfiguredSourceLanguage(sourceLanguage)[ FD ]
Line_12 $$ if (!logRecords.isEmpty()) -->Line_13 $$ AssertionError assertionError = new AssertionError("PMD Java log error")[ CD ]
Line_8 $$ CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(ClassTypeResolver.class.getName(), Level.SEVERE)-->Line_22 $$ captureHandler.close()[ FD ]
Line_8 $$ CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(ClassTypeResolver.class.getName(), Level.SEVERE)-->Line_11 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ FD ]
Line_13 $$ AssertionError assertionError = new AssertionError("PMD Java log error")-->Line_15 $$ assertionError.addSuppressed(new Throwable(logRecord.getMessage(), logRecord.getThrown()))[ FD ]
Line_4 $$ SourceLanguage sourceLanguage = new SourceLanguage()-->Line_6 $$ sourceLanguage.setVersion(_buildProperties.getProperty("ant.build.javac.source"))[ FD ]
Line_19 $$ List<String> list = Files.readAllLines(_logFilePath, Charset.defaultCharset())-->Line_20 $$ Assert.assertTrue(list.toString(), list.isEmpty())[ FD ]
Line_11 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_12 $$ if (!logRecords.isEmpty()) [ FD ]
Line_4 $$ SourceLanguage sourceLanguage = new SourceLanguage()-->Line_5 $$ sourceLanguage.setName("java")[ FD ]
Line_14 $$ for (LogRecord logRecord : logRecords) -->Line_15 $$ assertionError.addSuppressed(new Throwable(logRecord.getMessage(), logRecord.getThrown()))[ FD ]
