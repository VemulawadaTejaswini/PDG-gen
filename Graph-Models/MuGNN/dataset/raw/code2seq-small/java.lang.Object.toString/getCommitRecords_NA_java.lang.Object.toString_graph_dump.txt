Line_8 $$ List<String> errors = result.getErrorLines()-->Line_9 $$ if (!errors.isEmpty()) [ FD ]
Line_10 $$ if (result.getExitValue() != 0) -->Line_11 $$ if (silent) [ CD ]
Line_9 $$ if (!errors.isEmpty()) -->Line_18 $$ LOG.warn(errors.toString())[ CD ]
Line_21 $$ List<String> changeSets = StringUtil.split(output, HgChangesetUtil.CHANGESET_SEPARATOR)-->Line_22 $$ return ContainerUtil.mapNotNull(changeSets, converter)[ FD ]
Line_11 $$ if (silent) -->Line_12 $$ LOG.debug(errors.toString())[ CD ]
Line_8 $$ List<String> errors = result.getErrorLines()-->Line_14 $$ VcsNotifier.getInstance(project).notifyError(HgVcsMessages.message("hg4idea.error.log.command.execution"), errors.toString())[ FD ]
Line_8 $$ List<String> errors = result.getErrorLines()-->Line_12 $$ LOG.debug(errors.toString())[ FD ]
Line_20 $$ String output = result.getRawOutput()-->Line_21 $$ List<String> changeSets = StringUtil.split(output, HgChangesetUtil.CHANGESET_SEPARATOR)[ FD ]
Line_5 $$ if (result == null) -->Line_6 $$ return revisions[ CD ]
Line_10 $$ if (result.getExitValue() != 0) -->Line_16 $$ return Collections.emptyList()[ CD ]
Line_8 $$ List<String> errors = result.getErrorLines()-->Line_18 $$ LOG.warn(errors.toString())[ FD ]
Line_9 $$ if (!errors.isEmpty()) -->Line_10 $$ if (result.getExitValue() != 0) [ CD ]
Line_11 $$ if (silent) -->Line_14 $$ VcsNotifier.getInstance(project).notifyError(HgVcsMessages.message("hg4idea.error.log.command.execution"), errors.toString())[ CD ]
