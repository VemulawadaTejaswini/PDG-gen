Line_32 $$ while (valueIter.hasNext()) -->Line_33 $$ Object value = valueIter.next()[ CD ]
Line_24 $$ Iterator<Object> valueIter-->Line_33 $$ Object value = valueIter.next()[ FD ]
Line_27 $$ if (rawValue instanceof Collection) -->Line_28 $$ valueIter = ((Collection<Object>) rawValue).iterator()[ CD ]
Line_24 $$ Iterator<Object> valueIter-->Line_32 $$ while (valueIter.hasNext()) [ FD ]
Line_24 $$ Iterator<Object> valueIter-->Line_30 $$ valueIter = Collections.singleton(rawValue).iterator()[ FD ]
Line_30 $$ valueIter = Collections.singleton(rawValue).iterator()-->Line_32 $$ while (valueIter.hasNext()) [ FD ]
Line_40 $$ String encodedKey = urlEncode(entry.getKey(), encodingScheme)-->Line_42 $$ targetUrl.append(encodedKey).append('=').append(encodedValue)[ FD ]
Line_26 $$ valueIter = Arrays.asList(ObjectUtils.toObjectArray(rawValue)).iterator()-->Line_32 $$ while (valueIter.hasNext()) [ FD ]
Line_26 $$ valueIter = Arrays.asList(ObjectUtils.toObjectArray(rawValue)).iterator()-->Line_33 $$ Object value = valueIter.next()[ FD ]
Line_22 $$ for (Map.Entry<String, Object> entry : queryProperties(model).entrySet()) -->Line_40 $$ String encodedKey = urlEncode(entry.getKey(), encodingScheme)[ FD ]
Line_34 $$ if (first) -->Line_36 $$ first = false[ CD ]
Line_32 $$ while (valueIter.hasNext()) -->Line_42 $$ targetUrl.append(encodedKey).append('=').append(encodedValue)[ CD ]
Line_24 $$ Iterator<Object> valueIter-->Line_26 $$ valueIter = Arrays.asList(ObjectUtils.toObjectArray(rawValue)).iterator()[ FD ]
Line_28 $$ valueIter = ((Collection<Object>) rawValue).iterator()-->Line_32 $$ while (valueIter.hasNext()) [ FD ]
Line_32 $$ while (valueIter.hasNext()) -->Line_41 $$ String encodedValue = (value != null ? urlEncode(value.toString(), encodingScheme) : "")[ CD ]
Line_28 $$ valueIter = ((Collection<Object>) rawValue).iterator()-->Line_30 $$ valueIter = Collections.singleton(rawValue).iterator()[ FD ]
Line_33 $$ Object value = valueIter.next()-->Line_41 $$ String encodedValue = (value != null ? urlEncode(value.toString(), encodingScheme) : "")[ FD ]
Line_23 $$ Object rawValue = entry.getValue()-->Line_26 $$ valueIter = Arrays.asList(ObjectUtils.toObjectArray(rawValue)).iterator()[ FD ]
Line_15 $$ int anchorIndex = targetUrl.indexOf("#")-->Line_17 $$ fragment = targetUrl.substring(anchorIndex)[ FD ]
Line_24 $$ Iterator<Object> valueIter-->Line_28 $$ valueIter = ((Collection<Object>) rawValue).iterator()[ FD ]
Line_26 $$ valueIter = Arrays.asList(ObjectUtils.toObjectArray(rawValue)).iterator()-->Line_30 $$ valueIter = Collections.singleton(rawValue).iterator()[ FD ]
Line_17 $$ fragment = targetUrl.substring(anchorIndex)-->Line_47 $$ targetUrl.append(fragment)[ FD ]
Line_22 $$ for (Map.Entry<String, Object> entry : queryProperties(model).entrySet()) -->Line_23 $$ Object rawValue = entry.getValue()[ FD ]
Line_15 $$ int anchorIndex = targetUrl.indexOf("#")-->Line_16 $$ if (anchorIndex > -1) [ FD ]
Line_23 $$ Object rawValue = entry.getValue()-->Line_27 $$ if (rawValue instanceof Collection) [ FD ]
Line_30 $$ valueIter = Collections.singleton(rawValue).iterator()-->Line_33 $$ Object value = valueIter.next()[ FD ]
Line_28 $$ valueIter = ((Collection<Object>) rawValue).iterator()-->Line_33 $$ Object value = valueIter.next()[ FD ]
Line_32 $$ while (valueIter.hasNext()) -->Line_40 $$ String encodedKey = urlEncode(entry.getKey(), encodingScheme)[ CD ]
Line_16 $$ if (anchorIndex > -1) -->Line_18 $$ targetUrl.delete(anchorIndex, targetUrl.length())[ CD ]
Line_26 $$ valueIter = Arrays.asList(ObjectUtils.toObjectArray(rawValue)).iterator()-->Line_28 $$ valueIter = ((Collection<Object>) rawValue).iterator()[ FD ]
Line_41 $$ String encodedValue = (value != null ? urlEncode(value.toString(), encodingScheme) : "")-->Line_42 $$ targetUrl.append(encodedKey).append('=').append(encodedValue)[ FD ]
Line_23 $$ Object rawValue = entry.getValue()-->Line_30 $$ valueIter = Collections.singleton(rawValue).iterator()[ FD ]
Line_34 $$ if (first) -->Line_38 $$ targetUrl.append('&')[ CD ]
Line_16 $$ if (anchorIndex > -1) -->Line_17 $$ fragment = targetUrl.substring(anchorIndex)[ CD ]
Line_25 $$ if (rawValue != null && rawValue.getClass().isArray()) -->Line_26 $$ valueIter = Arrays.asList(ObjectUtils.toObjectArray(rawValue)).iterator()[ CD ]
Line_32 $$ while (valueIter.hasNext()) -->Line_34 $$ if (first) [ CD ]
Line_15 $$ int anchorIndex = targetUrl.indexOf("#")-->Line_18 $$ targetUrl.delete(anchorIndex, targetUrl.length())[ FD ]
Line_27 $$ if (rawValue instanceof Collection) -->Line_30 $$ valueIter = Collections.singleton(rawValue).iterator()[ CD ]
Line_34 $$ if (first) -->Line_35 $$ targetUrl.append('?')[ CD ]
Line_25 $$ if (rawValue != null && rawValue.getClass().isArray()) -->Line_27 $$ if (rawValue instanceof Collection) [ CD ]
Line_23 $$ Object rawValue = entry.getValue()-->Line_25 $$ if (rawValue != null && rawValue.getClass().isArray()) [ FD ]
