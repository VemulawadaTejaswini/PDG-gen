Line_2 $$ public static void deleteJunction(@NotNull String junction) throws InterruptedException, IOException -->Line_8 $$ assertEquals(command.command().toString(), 0, res)[ CD ]
Line_6 $$ final ProcessBuilder command = new ProcessBuilder(exePath, "-d", junctionFile.getPath())-->Line_8 $$ assertEquals(command.command().toString(), 0, res)[ FD ]
Line_2 $$ public static void deleteJunction(@NotNull String junction) throws InterruptedException, IOException -->Line_6 $$ final ProcessBuilder command = new ProcessBuilder(exePath, "-d", junctionFile.getPath())[ CD ]
Line_7 $$ final int res = runCommand(command)-->Line_8 $$ assertEquals(command.command().toString(), 0, res)[ FD ]
Line_2 $$ public static void deleteJunction(@NotNull String junction) throws InterruptedException, IOException -->Line_7 $$ final int res = runCommand(command)[ CD ]
Line_2 $$ public static void deleteJunction(@NotNull String junction) throws InterruptedException, IOException -->Line_3 $$ assertTrue(SystemInfo.isWindows)[ CD ]
Line_2 $$ public static void deleteJunction(@NotNull String junction) throws InterruptedException, IOException -->Line_5 $$ final String exePath = getJunctionExePath()[ CD ]
Line_2 $$ public static void deleteJunction(@NotNull String junction) throws InterruptedException, IOException -->Line_4 $$ final File junctionFile = new File(FileUtil.toSystemDependentName(junction))[ CD ]
Line_2 $$ public static void deleteJunction(@NotNull String junction) throws InterruptedException, IOException -->Line_4 $$ final File junctionFile = new File(FileUtil.toSystemDependentName(junction))[ FD ]
Line_4 $$ final File junctionFile = new File(FileUtil.toSystemDependentName(junction))-->Line_6 $$ final ProcessBuilder command = new ProcessBuilder(exePath, "-d", junctionFile.getPath())[ FD ]
Line_6 $$ final ProcessBuilder command = new ProcessBuilder(exePath, "-d", junctionFile.getPath())-->Line_7 $$ final int res = runCommand(command)[ FD ]
