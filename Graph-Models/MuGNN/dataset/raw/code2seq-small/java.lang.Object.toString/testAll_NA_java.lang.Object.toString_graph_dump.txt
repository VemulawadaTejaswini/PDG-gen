Line_9 $$ MyListener localListener = new MyListener("local")-->Line_34 $$ localListener.clear()[ FD ]
Line_14 $$ MyListener remoteListener = new MyListener("remote")-->Line_22 $$ assertTrue(remoteListener.isEmpty())[ FD ]
Line_16 $$ SessionFactory localFactory = sessionFactory()-->Line_35 $$ getCitizenWithCriteria(localFactory)[ FD ]
Line_14 $$ MyListener remoteListener = new MyListener("remote")-->Line_45 $$ remoteListener.clear()[ FD ]
Line_17 $$ SessionFactory remoteFactory = secondNodeEnvironment().getSessionFactory()-->Line_46 $$ getCitizenWithCriteria(remoteFactory)[ FD ]
Line_54 $$ Set localKeys = localNaturalIdCache.keySet()-->Line_55 $$ assertEquals(1, localKeys.size())[ FD ]
Line_9 $$ MyListener localListener = new MyListener("local")-->Line_23 $$ assertTrue(localListener.isEmpty())[ FD ]
Line_16 $$ SessionFactory localFactory = sessionFactory()-->Line_21 $$ saveSomeCitizens(localFactory)[ FD ]
Line_14 $$ MyListener remoteListener = new MyListener("remote")-->Line_19 $$ assertTrue(remoteListener.isEmpty())[ FD ]
Line_17 $$ SessionFactory remoteFactory = secondNodeEnvironment().getSessionFactory()-->Line_52 $$ deleteCitizenWithCriteria(remoteFactory)[ FD ]
Line_16 $$ SessionFactory localFactory = sessionFactory()-->Line_62 $$ withTxSession(localFactory,  s -> [ FD ]
Line_9 $$ MyListener localListener = new MyListener("local")-->Line_38 $$ assertLoadedFromCache(localListener, "1234")[ FD ]
Line_13 $$ Cache remoteNaturalIdCache = remoteManager.getCache(Citizen.class.getName() + "##NaturalId")-->Line_15 $$ remoteNaturalIdCache.addListener(remoteListener)[ FD ]
Line_9 $$ MyListener localListener = new MyListener("local")-->Line_10 $$ localNaturalIdCache.addListener(localListener)[ FD ]
Line_8 $$ Cache localNaturalIdCache = localManager.getCache(Citizen.class.getName() + "##NaturalId")-->Line_10 $$ localNaturalIdCache.addListener(localListener)[ FD ]
Line_9 $$ MyListener localListener = new MyListener("local")-->Line_20 $$ assertTrue(localListener.isEmpty())[ FD ]
Line_8 $$ Cache localNaturalIdCache = localManager.getCache(Citizen.class.getName() + "##NaturalId")-->Line_54 $$ Set localKeys = localNaturalIdCache.keySet()[ FD ]
Line_14 $$ MyListener remoteListener = new MyListener("remote")-->Line_15 $$ remoteNaturalIdCache.addListener(remoteListener)[ FD ]
Line_14 $$ MyListener remoteListener = new MyListener("remote")-->Line_49 $$ assertLoadedFromCache(remoteListener, "1234")[ FD ]
