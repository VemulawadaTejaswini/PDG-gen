Line_2 $$ public T[] findInvalid(final String dataId, T[] array, final Object dataSource) -->Line_5 $$ LOG.error("Data isn't valid. " + dataId + "=null Provided by: " + dataSource.getClass().getName() + " (" + dataSource.toString() + ")")[ FD ]
Line_3 $$ for (T element : array) -->Line_7 $$ T invalid = myElementValidator.findInvalid(dataId, element, dataSource)[ FD ]
Line_8 $$ if (invalid != null) -->Line_10 $$ result[0] = invalid[ CD ]
Line_2 $$ public T[] findInvalid(final String dataId, T[] array, final Object dataSource) -->Line_7 $$ T invalid = myElementValidator.findInvalid(dataId, element, dataSource)[ FD ]
Line_7 $$ T invalid = myElementValidator.findInvalid(dataId, element, dataSource)-->Line_10 $$ result[0] = invalid[ FD ]
Line_7 $$ T invalid = myElementValidator.findInvalid(dataId, element, dataSource)-->Line_8 $$ if (invalid != null) [ FD ]
Line_8 $$ if (invalid != null) -->Line_11 $$ return result[ CD ]
Line_4 $$ if (element == null) -->Line_5 $$ LOG.error("Data isn't valid. " + dataId + "=null Provided by: " + dataSource.getClass().getName() + " (" + dataSource.toString() + ")")[ CD ]
Line_3 $$ for (T element : array) -->Line_4 $$ if (element == null) [ FD ]
Line_2 $$ public T[] findInvalid(final String dataId, T[] array, final Object dataSource) -->Line_14 $$ return null[ CD ]
Line_8 $$ if (invalid != null) -->Line_9 $$ T[] result = (T[]) Array.newInstance(array[0].getClass(), 1)[ CD ]
