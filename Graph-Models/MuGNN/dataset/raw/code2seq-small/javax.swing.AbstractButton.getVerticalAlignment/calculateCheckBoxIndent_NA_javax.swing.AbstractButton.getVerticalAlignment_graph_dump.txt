Line_12 $$ if (icon != null) -->Line_14 $$ JBInsets.removeFrom(r1, checkBox.getInsets())[ CD ]
Line_4 $$ Icon icon = checkBox.getIcon()-->Line_7 $$ icon = UIManager.getIcon("CheckBox.icon")[ FD ]
Line_7 $$ icon = UIManager.getIcon("CheckBox.icon")-->Line_16 $$ SwingUtilities.layoutCompoundLabel(checkBox, checkBox.getFontMetrics(checkBox.getFont()), checkBox.getText(), icon, checkBox.getVerticalAlignment(), checkBox.getHorizontalAlignment(), checkBox.getVerticalTextPosition(), checkBox.getHorizontalTextPosition(), r1, new Rectangle(), iconRect, checkBox.getText() == null ? 0 : checkBox.getIconTextGap())[ FD ]
Line_4 $$ Icon icon = checkBox.getIcon()-->Line_12 $$ if (icon != null) [ FD ]
Line_3 $$ JCheckBox checkBox = new JCheckBox()-->Line_13 $$ final Rectangle r1 = new Rectangle(checkBox.getWidth(), checkBox.getHeight())[ FD ]
Line_2 $$ private static int calculateCheckBoxIndent() -->Line_3 $$ JCheckBox checkBox = new JCheckBox()[ CD ]
Line_10 $$ icon = EmptyIcon.create(20, 18)-->Line_16 $$ SwingUtilities.layoutCompoundLabel(checkBox, checkBox.getFontMetrics(checkBox.getFont()), checkBox.getText(), icon, checkBox.getVerticalAlignment(), checkBox.getHorizontalAlignment(), checkBox.getVerticalTextPosition(), checkBox.getHorizontalTextPosition(), r1, new Rectangle(), iconRect, checkBox.getText() == null ? 0 : checkBox.getIconTextGap())[ FD ]
Line_12 $$ if (icon != null) -->Line_17 $$ indent = iconRect.x[ CD ]
Line_2 $$ private static int calculateCheckBoxIndent() -->Line_6 $$ if (icon == null) [ CD ]
Line_7 $$ icon = UIManager.getIcon("CheckBox.icon")-->Line_12 $$ if (icon != null) [ FD ]
Line_12 $$ if (icon != null) -->Line_13 $$ final Rectangle r1 = new Rectangle(checkBox.getWidth(), checkBox.getHeight())[ CD ]
Line_2 $$ private static int calculateCheckBoxIndent() -->Line_4 $$ Icon icon = checkBox.getIcon()[ CD ]
Line_3 $$ JCheckBox checkBox = new JCheckBox()-->Line_19 $$ return indent + checkBox.getIconTextGap()[ FD ]
Line_10 $$ icon = EmptyIcon.create(20, 18)-->Line_12 $$ if (icon != null) [ FD ]
Line_3 $$ JCheckBox checkBox = new JCheckBox()-->Line_4 $$ Icon icon = checkBox.getIcon()[ FD ]
Line_15 $$ final Rectangle iconRect = new Rectangle()-->Line_16 $$ SwingUtilities.layoutCompoundLabel(checkBox, checkBox.getFontMetrics(checkBox.getFont()), checkBox.getText(), icon, checkBox.getVerticalAlignment(), checkBox.getHorizontalAlignment(), checkBox.getVerticalTextPosition(), checkBox.getHorizontalTextPosition(), r1, new Rectangle(), iconRect, checkBox.getText() == null ? 0 : checkBox.getIconTextGap())[ FD ]
Line_2 $$ private static int calculateCheckBoxIndent() -->Line_12 $$ if (icon != null) [ CD ]
Line_13 $$ final Rectangle r1 = new Rectangle(checkBox.getWidth(), checkBox.getHeight())-->Line_16 $$ SwingUtilities.layoutCompoundLabel(checkBox, checkBox.getFontMetrics(checkBox.getFont()), checkBox.getText(), icon, checkBox.getVerticalAlignment(), checkBox.getHorizontalAlignment(), checkBox.getVerticalTextPosition(), checkBox.getHorizontalTextPosition(), r1, new Rectangle(), iconRect, checkBox.getText() == null ? 0 : checkBox.getIconTextGap())[ FD ]
Line_12 $$ if (icon != null) -->Line_15 $$ final Rectangle iconRect = new Rectangle()[ CD ]
Line_2 $$ private static int calculateCheckBoxIndent() -->Line_9 $$ if (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF()) [ CD ]
Line_5 $$ int indent = 0-->Line_17 $$ indent = iconRect.x[ FD ]
Line_3 $$ JCheckBox checkBox = new JCheckBox()-->Line_14 $$ JBInsets.removeFrom(r1, checkBox.getInsets())[ FD ]
Line_4 $$ Icon icon = checkBox.getIcon()-->Line_6 $$ if (icon == null) [ FD ]
Line_12 $$ if (icon != null) -->Line_16 $$ SwingUtilities.layoutCompoundLabel(checkBox, checkBox.getFontMetrics(checkBox.getFont()), checkBox.getText(), icon, checkBox.getVerticalAlignment(), checkBox.getHorizontalAlignment(), checkBox.getVerticalTextPosition(), checkBox.getHorizontalTextPosition(), r1, new Rectangle(), iconRect, checkBox.getText() == null ? 0 : checkBox.getIconTextGap())[ CD ]
Line_7 $$ icon = UIManager.getIcon("CheckBox.icon")-->Line_10 $$ icon = EmptyIcon.create(20, 18)[ FD ]
Line_2 $$ private static int calculateCheckBoxIndent() -->Line_19 $$ return indent + checkBox.getIconTextGap()[ CD ]
Line_6 $$ if (icon == null) -->Line_7 $$ icon = UIManager.getIcon("CheckBox.icon")[ CD ]
Line_4 $$ Icon icon = checkBox.getIcon()-->Line_16 $$ SwingUtilities.layoutCompoundLabel(checkBox, checkBox.getFontMetrics(checkBox.getFont()), checkBox.getText(), icon, checkBox.getVerticalAlignment(), checkBox.getHorizontalAlignment(), checkBox.getVerticalTextPosition(), checkBox.getHorizontalTextPosition(), r1, new Rectangle(), iconRect, checkBox.getText() == null ? 0 : checkBox.getIconTextGap())[ FD ]
Line_9 $$ if (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF()) -->Line_10 $$ icon = EmptyIcon.create(20, 18)[ CD ]
Line_13 $$ final Rectangle r1 = new Rectangle(checkBox.getWidth(), checkBox.getHeight())-->Line_14 $$ JBInsets.removeFrom(r1, checkBox.getInsets())[ FD ]
Line_2 $$ private static int calculateCheckBoxIndent() -->Line_5 $$ int indent = 0[ CD ]
Line_3 $$ JCheckBox checkBox = new JCheckBox()-->Line_16 $$ SwingUtilities.layoutCompoundLabel(checkBox, checkBox.getFontMetrics(checkBox.getFont()), checkBox.getText(), icon, checkBox.getVerticalAlignment(), checkBox.getHorizontalAlignment(), checkBox.getVerticalTextPosition(), checkBox.getHorizontalTextPosition(), r1, new Rectangle(), iconRect, checkBox.getText() == null ? 0 : checkBox.getIconTextGap())[ FD ]
Line_4 $$ Icon icon = checkBox.getIcon()-->Line_10 $$ icon = EmptyIcon.create(20, 18)[ FD ]
