Line_2 $$ public static void _do(@NotNull final ConfigurationError error, @NotNull final Project project, @NotNull final PairProcessor<ConfigurationErrors, ConfigurationError> fun) -->Line_11 $$ final MessageBus bus = project.getMessageBus()[ CD ]
Line_15 $$ SwingUtilities.invokeLater(new Runnable() -->Line_17 $$ fun.process(bus.syncPublisher(TOPIC), error)[ CD ]
Line_2 $$ public static void _do(@NotNull final ConfigurationError error, @NotNull final Project project, @NotNull final PairProcessor<ConfigurationErrors, ConfigurationError> fun) -->Line_3 $$ if (!project.isInitialized()) [ CD ]
Line_2 $$ public static void _do(@NotNull final ConfigurationError error, @NotNull final Project project, @NotNull final PairProcessor<ConfigurationErrors, ConfigurationError> fun) -->Line_12 $$ if (EventQueue.isDispatchThread())[ CD ]
Line_3 $$ if (!project.isInitialized()) -->Line_9 $$ return[ CD ]
Line_3 $$ if (!project.isInitialized()) -->Line_4 $$ StartupManager.getInstance(project).runWhenProjectIsInitialized(new Runnable() [ CD ]
Line_2 $$ public static void _do(@NotNull final ConfigurationError error, @NotNull final Project project, @NotNull final PairProcessor<ConfigurationErrors, ConfigurationError> fun) -->Line_13 $$ fun.process(bus.syncPublisher(TOPIC), error)[ FD ]
Line_4 $$ StartupManager.getInstance(project).runWhenProjectIsInitialized(new Runnable() -->Line_6 $$ fun.process(project.getMessageBus().syncPublisher(TOPIC), error)[ CD ]
Line_12 $$ if (EventQueue.isDispatchThread())-->Line_15 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_2 $$ public static void _do(@NotNull final ConfigurationError error, @NotNull final Project project, @NotNull final PairProcessor<ConfigurationErrors, ConfigurationError> fun) -->Line_6 $$ fun.process(project.getMessageBus().syncPublisher(TOPIC), error)[ FD ]
Line_2 $$ public static void _do(@NotNull final ConfigurationError error, @NotNull final Project project, @NotNull final PairProcessor<ConfigurationErrors, ConfigurationError> fun) -->Line_4 $$ StartupManager.getInstance(project).runWhenProjectIsInitialized(new Runnable() [ FD ]
Line_12 $$ if (EventQueue.isDispatchThread())-->Line_13 $$ fun.process(bus.syncPublisher(TOPIC), error)[ CD ]
Line_2 $$ public static void _do(@NotNull final ConfigurationError error, @NotNull final Project project, @NotNull final PairProcessor<ConfigurationErrors, ConfigurationError> fun) -->Line_11 $$ final MessageBus bus = project.getMessageBus()[ FD ]
Line_2 $$ public static void _do(@NotNull final ConfigurationError error, @NotNull final Project project, @NotNull final PairProcessor<ConfigurationErrors, ConfigurationError> fun) -->Line_17 $$ fun.process(bus.syncPublisher(TOPIC), error)[ FD ]
Line_2 $$ public static void _do(@NotNull final ConfigurationError error, @NotNull final Project project, @NotNull final PairProcessor<ConfigurationErrors, ConfigurationError> fun) -->Line_3 $$ if (!project.isInitialized()) [ FD ]
