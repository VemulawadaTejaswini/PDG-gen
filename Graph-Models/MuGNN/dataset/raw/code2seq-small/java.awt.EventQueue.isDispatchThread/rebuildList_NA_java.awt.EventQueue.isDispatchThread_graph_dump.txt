Line_13 $$ final Runnable run = new Runnable() -->Line_23 $$ myCurrentWorker.doWhenRejected(run)[ FD ]
Line_2 $$ private void rebuildList(final String pattern) -->Line_10 $$ final Project project = CommonDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(getField().getTextEditor()))[ CD ]
Line_2 $$ private void rebuildList(final String pattern) -->Line_12 $$ myRenderer.myProject = project[ CD ]
Line_13 $$ final Runnable run = new Runnable() -->Line_21 $$ myCurrentWorker.doWhenDone(run)[ FD ]
Line_2 $$ private void rebuildList(final String pattern) -->Line_4 $$ if (myCalcThread != null && !myCurrentWorker.isProcessed()) [ CD ]
Line_13 $$ final Runnable run = new Runnable() -->Line_17 $$ myCurrentWorker = myCalcThread.start()[ CD ]
Line_2 $$ private void rebuildList(final String pattern) -->Line_7 $$ if (myCalcThread != null && !myCalcThread.isCanceled()) [ CD ]
Line_7 $$ if (myCalcThread != null && !myCalcThread.isCanceled()) -->Line_8 $$ myCalcThread.cancel()[ CD ]
Line_20 $$ if (myCurrentWorker.isDone()) -->Line_23 $$ myCurrentWorker.doWhenRejected(run)[ CD ]
Line_2 $$ private void rebuildList(final String pattern) -->Line_20 $$ if (myCurrentWorker.isDone()) [ CD ]
Line_10 $$ final Project project = CommonDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(getField().getTextEditor()))-->Line_12 $$ myRenderer.myProject = project[ FD ]
Line_4 $$ if (myCalcThread != null && !myCurrentWorker.isProcessed()) -->Line_5 $$ myCurrentWorker = myCalcThread.cancel()[ CD ]
Line_20 $$ if (myCurrentWorker.isDone()) -->Line_21 $$ myCurrentWorker.doWhenDone(run)[ CD ]
Line_2 $$ private void rebuildList(final String pattern) -->Line_13 $$ final Runnable run = new Runnable() [ CD ]
