Line_18 $$ final ItemWrapper wrapper = existing.get(configuration)-->Line_20 $$ wrapper.setMnemonic(i)[ FD ]
Line_30 $$ final ItemWrapper wrapper = new ItemWrapper(configuration) -->Line_41 $$ manager.setTemporaryConfiguration(configuration)[ CD ]
Line_2 $$ private static List<RunnerAndConfigurationSettings> populateWithDynamicRunners(final List<ItemWrapper> result, Map<RunnerAndConfigurationSettings, ItemWrapper> existing, final Project project, final RunManagerEx manager, final RunnerAndConfigurationSettings selectedConfiguration) -->Line_14 $$ int i = 2[ CD ]
Line_16 $$ final RunnerAndConfigurationSettings configuration = fromContext.getConfigurationSettings()-->Line_17 $$ if (existing.keySet().contains(configuration)) [ FD ]
Line_2 $$ private static List<RunnerAndConfigurationSettings> populateWithDynamicRunners(final List<ItemWrapper> result, Map<RunnerAndConfigurationSettings, ItemWrapper> existing, final Project project, final RunManagerEx manager, final RunnerAndConfigurationSettings selectedConfiguration) -->Line_18 $$ final ItemWrapper wrapper = existing.get(configuration)[ FD ]
Line_19 $$ if (wrapper.getMnemonic() != 1) -->Line_20 $$ wrapper.setMnemonic(i)[ CD ]
Line_30 $$ final ItemWrapper wrapper = new ItemWrapper(configuration) -->Line_38 $$ return canRun(executor, configuration)[ FD ]
Line_17 $$ if (existing.keySet().contains(configuration)) -->Line_19 $$ if (wrapper.getMnemonic() != 1) [ CD ]
Line_17 $$ if (existing.keySet().contains(configuration)) -->Line_27 $$ if (preferred[0] == null) [ CD ]
Line_2 $$ private static List<RunnerAndConfigurationSettings> populateWithDynamicRunners(final List<ItemWrapper> result, Map<RunnerAndConfigurationSettings, ItemWrapper> existing, final Project project, final RunManagerEx manager, final RunnerAndConfigurationSettings selectedConfiguration) -->Line_42 $$ RunManagerEx.getInstanceEx(project).setSelectedConfiguration(configuration)[ FD ]
Line_18 $$ final ItemWrapper wrapper = existing.get(configuration)-->Line_54 $$ result.add(wrapper)[ FD ]
Line_14 $$ int i = 2-->Line_53 $$ wrapper.setMnemonic(i)[ FD ]
Line_16 $$ final RunnerAndConfigurationSettings configuration = fromContext.getConfigurationSettings()-->Line_43 $$ ExecutionUtil.runConfiguration(configuration, executor)[ FD ]
Line_16 $$ final RunnerAndConfigurationSettings configuration = fromContext.getConfigurationSettings()-->Line_35 $$ return configuration.getName()[ FD ]
Line_15 $$ for (final ConfigurationFromContext fromContext : producers) -->Line_16 $$ final RunnerAndConfigurationSettings configuration = fromContext.getConfigurationSettings()[ FD ]
Line_17 $$ if (existing.keySet().contains(configuration)) -->Line_26 $$ contextConfigurations.add(configuration)[ CD ]
Line_27 $$ if (preferred[0] == null) -->Line_28 $$ preferred[0] = configuration[ CD ]
Line_16 $$ final RunnerAndConfigurationSettings configuration = fromContext.getConfigurationSettings()-->Line_41 $$ manager.setTemporaryConfiguration(configuration)[ FD ]
Line_16 $$ final RunnerAndConfigurationSettings configuration = fromContext.getConfigurationSettings()-->Line_32 $$ return RunManagerEx.getInstanceEx(project).getConfigurationIcon(configuration)[ FD ]
Line_30 $$ final ItemWrapper wrapper = new ItemWrapper(configuration) -->Line_43 $$ ExecutionUtil.runConfiguration(configuration, executor)[ CD ]
Line_4 $$ if (!EventQueue.isDispatchThread()) -->Line_5 $$ return Collections.emptyList()[ CD ]
Line_2 $$ private static List<RunnerAndConfigurationSettings> populateWithDynamicRunners(final List<ItemWrapper> result, Map<RunnerAndConfigurationSettings, ItemWrapper> existing, final Project project, final RunManagerEx manager, final RunnerAndConfigurationSettings selectedConfiguration) -->Line_9 $$ final List<ConfigurationFromContext> producers = PreferredProducerFind.getConfigurationsFromContext(context.getLocation(), context, false)[ CD ]
Line_2 $$ private static List<RunnerAndConfigurationSettings> populateWithDynamicRunners(final List<ItemWrapper> result, Map<RunnerAndConfigurationSettings, ItemWrapper> existing, final Project project, final RunManagerEx manager, final RunnerAndConfigurationSettings selectedConfiguration) -->Line_12 $$ Collections.sort(producers, ConfigurationFromContext.NAME_COMPARATOR)[ CD ]
Line_7 $$ final DataContext dataContext = DataManager.getInstance().getDataContext()-->Line_8 $$ final ConfigurationContext context = ConfigurationContext.getFromContext(dataContext)[ FD ]
Line_16 $$ final RunnerAndConfigurationSettings configuration = fromContext.getConfigurationSettings()-->Line_42 $$ RunManagerEx.getInstanceEx(project).setSelectedConfiguration(configuration)[ FD ]
Line_19 $$ if (wrapper.getMnemonic() != 1) -->Line_21 $$ i++[ CD ]
Line_14 $$ int i = 2-->Line_21 $$ i++[ FD ]
Line_9 $$ final List<ConfigurationFromContext> producers = PreferredProducerFind.getConfigurationsFromContext(context.getLocation(), context, false)-->Line_12 $$ Collections.sort(producers, ConfigurationFromContext.NAME_COMPARATOR)[ FD ]
Line_30 $$ final ItemWrapper wrapper = new ItemWrapper(configuration) -->Line_32 $$ return RunManagerEx.getInstanceEx(project).getConfigurationIcon(configuration)[ CD ]
Line_18 $$ final ItemWrapper wrapper = existing.get(configuration)-->Line_19 $$ if (wrapper.getMnemonic() != 1) [ FD ]
Line_10 $$ if (producers == null)-->Line_11 $$ return Collections.emptyList()[ CD ]
Line_16 $$ final RunnerAndConfigurationSettings configuration = fromContext.getConfigurationSettings()-->Line_28 $$ preferred[0] = configuration[ FD ]
Line_2 $$ private static List<RunnerAndConfigurationSettings> populateWithDynamicRunners(final List<ItemWrapper> result, Map<RunnerAndConfigurationSettings, ItemWrapper> existing, final Project project, final RunManagerEx manager, final RunnerAndConfigurationSettings selectedConfiguration) -->Line_32 $$ return RunManagerEx.getInstanceEx(project).getConfigurationIcon(configuration)[ FD ]
Line_30 $$ final ItemWrapper wrapper = new ItemWrapper(configuration) -->Line_46 $$ return new ConfigurationActionsStep(project, action, configuration, isDynamic())[ CD ]
Line_14 $$ int i = 2-->Line_20 $$ wrapper.setMnemonic(i)[ FD ]
Line_2 $$ private static List<RunnerAndConfigurationSettings> populateWithDynamicRunners(final List<ItemWrapper> result, Map<RunnerAndConfigurationSettings, ItemWrapper> existing, final Project project, final RunManagerEx manager, final RunnerAndConfigurationSettings selectedConfiguration) -->Line_4 $$ if (!EventQueue.isDispatchThread()) [ CD ]
Line_2 $$ private static List<RunnerAndConfigurationSettings> populateWithDynamicRunners(final List<ItemWrapper> result, Map<RunnerAndConfigurationSettings, ItemWrapper> existing, final Project project, final RunManagerEx manager, final RunnerAndConfigurationSettings selectedConfiguration) -->Line_7 $$ final DataContext dataContext = DataManager.getInstance().getDataContext()[ CD ]
Line_17 $$ if (existing.keySet().contains(configuration)) -->Line_53 $$ wrapper.setMnemonic(i)[ CD ]
Line_2 $$ private static List<RunnerAndConfigurationSettings> populateWithDynamicRunners(final List<ItemWrapper> result, Map<RunnerAndConfigurationSettings, ItemWrapper> existing, final Project project, final RunManagerEx manager, final RunnerAndConfigurationSettings selectedConfiguration) -->Line_3 $$ final ArrayList<RunnerAndConfigurationSettings> contextConfigurations = new ArrayList<RunnerAndConfigurationSettings>()[ CD ]
Line_16 $$ final RunnerAndConfigurationSettings configuration = fromContext.getConfigurationSettings()-->Line_24 $$ if (selectedConfiguration != null && configuration.equals(selectedConfiguration))[ FD ]
Line_30 $$ final ItemWrapper wrapper = new ItemWrapper(configuration) -->Line_42 $$ RunManagerEx.getInstanceEx(project).setSelectedConfiguration(configuration)[ CD ]
Line_2 $$ private static List<RunnerAndConfigurationSettings> populateWithDynamicRunners(final List<ItemWrapper> result, Map<RunnerAndConfigurationSettings, ItemWrapper> existing, final Project project, final RunManagerEx manager, final RunnerAndConfigurationSettings selectedConfiguration) -->Line_58 $$ return contextConfigurations[ CD ]
Line_2 $$ private static List<RunnerAndConfigurationSettings> populateWithDynamicRunners(final List<ItemWrapper> result, Map<RunnerAndConfigurationSettings, ItemWrapper> existing, final Project project, final RunManagerEx manager, final RunnerAndConfigurationSettings selectedConfiguration) -->Line_54 $$ result.add(wrapper)[ FD ]
Line_30 $$ final ItemWrapper wrapper = new ItemWrapper(configuration) -->Line_42 $$ RunManagerEx.getInstanceEx(project).setSelectedConfiguration(configuration)[ FD ]
Line_30 $$ final ItemWrapper wrapper = new ItemWrapper(configuration) -->Line_38 $$ return canRun(executor, configuration)[ CD ]
Line_18 $$ final ItemWrapper wrapper = existing.get(configuration)-->Line_52 $$ wrapper.setDynamic(true)[ FD ]
Line_30 $$ final ItemWrapper wrapper = new ItemWrapper(configuration) -->Line_49 $$ return true[ CD ]
Line_16 $$ final RunnerAndConfigurationSettings configuration = fromContext.getConfigurationSettings()-->Line_38 $$ return canRun(executor, configuration)[ FD ]
Line_8 $$ final ConfigurationContext context = ConfigurationContext.getFromContext(dataContext)-->Line_9 $$ final List<ConfigurationFromContext> producers = PreferredProducerFind.getConfigurationsFromContext(context.getLocation(), context, false)[ FD ]
Line_2 $$ private static List<RunnerAndConfigurationSettings> populateWithDynamicRunners(final List<ItemWrapper> result, Map<RunnerAndConfigurationSettings, ItemWrapper> existing, final Project project, final RunManagerEx manager, final RunnerAndConfigurationSettings selectedConfiguration) -->Line_13 $$ final RunnerAndConfigurationSettings[] preferred = [ CD ]
Line_17 $$ if (existing.keySet().contains(configuration)) -->Line_54 $$ result.add(wrapper)[ CD ]
Line_9 $$ final List<ConfigurationFromContext> producers = PreferredProducerFind.getConfigurationsFromContext(context.getLocation(), context, false)-->Line_10 $$ if (producers == null)[ FD ]
Line_2 $$ private static List<RunnerAndConfigurationSettings> populateWithDynamicRunners(final List<ItemWrapper> result, Map<RunnerAndConfigurationSettings, ItemWrapper> existing, final Project project, final RunManagerEx manager, final RunnerAndConfigurationSettings selectedConfiguration) -->Line_10 $$ if (producers == null)[ CD ]
Line_16 $$ final RunnerAndConfigurationSettings configuration = fromContext.getConfigurationSettings()-->Line_18 $$ final ItemWrapper wrapper = existing.get(configuration)[ FD ]
Line_30 $$ final ItemWrapper wrapper = new ItemWrapper(configuration) -->Line_43 $$ ExecutionUtil.runConfiguration(configuration, executor)[ FD ]
Line_3 $$ final ArrayList<RunnerAndConfigurationSettings> contextConfigurations = new ArrayList<RunnerAndConfigurationSettings>()-->Line_26 $$ contextConfigurations.add(configuration)[ FD ]
Line_30 $$ final ItemWrapper wrapper = new ItemWrapper(configuration) -->Line_35 $$ return configuration.getName()[ CD ]
Line_18 $$ final ItemWrapper wrapper = existing.get(configuration)-->Line_53 $$ wrapper.setMnemonic(i)[ FD ]
Line_16 $$ final RunnerAndConfigurationSettings configuration = fromContext.getConfigurationSettings()-->Line_26 $$ contextConfigurations.add(configuration)[ FD ]
Line_17 $$ if (existing.keySet().contains(configuration)) -->Line_52 $$ wrapper.setDynamic(true)[ CD ]
Line_2 $$ private static List<RunnerAndConfigurationSettings> populateWithDynamicRunners(final List<ItemWrapper> result, Map<RunnerAndConfigurationSettings, ItemWrapper> existing, final Project project, final RunManagerEx manager, final RunnerAndConfigurationSettings selectedConfiguration) -->Line_24 $$ if (selectedConfiguration != null && configuration.equals(selectedConfiguration))[ FD ]
Line_2 $$ private static List<RunnerAndConfigurationSettings> populateWithDynamicRunners(final List<ItemWrapper> result, Map<RunnerAndConfigurationSettings, ItemWrapper> existing, final Project project, final RunManagerEx manager, final RunnerAndConfigurationSettings selectedConfiguration) -->Line_8 $$ final ConfigurationContext context = ConfigurationContext.getFromContext(dataContext)[ CD ]
Line_2 $$ private static List<RunnerAndConfigurationSettings> populateWithDynamicRunners(final List<ItemWrapper> result, Map<RunnerAndConfigurationSettings, ItemWrapper> existing, final Project project, final RunManagerEx manager, final RunnerAndConfigurationSettings selectedConfiguration) -->Line_41 $$ manager.setTemporaryConfiguration(configuration)[ FD ]
Line_17 $$ if (existing.keySet().contains(configuration)) -->Line_18 $$ final ItemWrapper wrapper = existing.get(configuration)[ CD ]
Line_17 $$ if (existing.keySet().contains(configuration)) -->Line_24 $$ if (selectedConfiguration != null && configuration.equals(selectedConfiguration))[ CD ]
Line_2 $$ private static List<RunnerAndConfigurationSettings> populateWithDynamicRunners(final List<ItemWrapper> result, Map<RunnerAndConfigurationSettings, ItemWrapper> existing, final Project project, final RunManagerEx manager, final RunnerAndConfigurationSettings selectedConfiguration) -->Line_17 $$ if (existing.keySet().contains(configuration)) [ FD ]
