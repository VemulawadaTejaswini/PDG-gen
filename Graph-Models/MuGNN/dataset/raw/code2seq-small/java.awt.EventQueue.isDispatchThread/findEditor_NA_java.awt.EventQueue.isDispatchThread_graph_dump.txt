Line_3 $$ if (!EventQueue.isDispatchThread()) -->Line_4 $$ LOG.warn("Invoke findEditor() from EDT only. Otherwise, it causes deadlocks.")[ CD ]
Line_2 $$ public static Editor findEditor(@NotNull PsiElement element) -->Line_7 $$ VirtualFile virtualFile = PsiUtilCore.getVirtualFile(element)[ CD ]
Line_2 $$ public static Editor findEditor(@NotNull PsiElement element) -->Line_8 $$ if (virtualFile == null) [ CD ]
Line_22 $$ if (asyncResult.isDone()) -->Line_24 $$ if (editor != null) [ CD ]
Line_7 $$ VirtualFile virtualFile = PsiUtilCore.getVirtualFile(element)-->Line_8 $$ if (virtualFile == null) [ FD ]
Line_20 $$ if (SwingUtilities.isEventDispatchThread()) -->Line_21 $$ AsyncResult<DataContext> asyncResult = DataManager.getInstance().getDataContextFromFocus()[ CD ]
Line_21 $$ AsyncResult<DataContext> asyncResult = DataManager.getInstance().getDataContextFromFocus()-->Line_22 $$ if (asyncResult.isDone()) [ FD ]
Line_20 $$ if (SwingUtilities.isEventDispatchThread()) -->Line_22 $$ if (asyncResult.isDone()) [ CD ]
Line_24 $$ if (editor != null) -->Line_26 $$ if (cachedDocument == editor.getDocument()) [ CD ]
Line_14 $$ for (FileEditor editor : editors) -->Line_24 $$ if (editor != null) [ FD ]
Line_2 $$ public static Editor findEditor(@NotNull PsiElement element) -->Line_12 $$ if (virtualFile.isInLocalFileSystem() || virtualFile.getFileSystem() instanceof NonPhysicalFileSystem) [ CD ]
Line_26 $$ if (cachedDocument == editor.getDocument()) -->Line_27 $$ return editor[ CD ]
Line_25 $$ Document cachedDocument = PsiDocumentManager.getInstance(project).getCachedDocument(psiFile)-->Line_26 $$ if (cachedDocument == editor.getDocument()) [ FD ]
Line_6 $$ PsiFile psiFile = element.getContainingFile()-->Line_11 $$ Project project = psiFile.getProject()[ FD ]
Line_8 $$ if (virtualFile == null) -->Line_9 $$ return null[ CD ]
Line_15 $$ if (editor instanceof TextEditor) -->Line_16 $$ return ((TextEditor) editor).getEditor()[ CD ]
Line_22 $$ if (asyncResult.isDone()) -->Line_23 $$ Editor editor = CommonDataKeys.EDITOR.getData(asyncResult.getResult())[ CD ]
Line_21 $$ AsyncResult<DataContext> asyncResult = DataManager.getInstance().getDataContextFromFocus()-->Line_23 $$ Editor editor = CommonDataKeys.EDITOR.getData(asyncResult.getResult())[ FD ]
Line_2 $$ public static Editor findEditor(@NotNull PsiElement element) -->Line_20 $$ if (SwingUtilities.isEventDispatchThread()) [ CD ]
Line_12 $$ if (virtualFile.isInLocalFileSystem() || virtualFile.getFileSystem() instanceof NonPhysicalFileSystem) -->Line_13 $$ final FileEditor[] editors = FileEditorManager.getInstance(project).getEditors(virtualFile)[ CD ]
Line_24 $$ if (editor != null) -->Line_25 $$ Document cachedDocument = PsiDocumentManager.getInstance(project).getCachedDocument(psiFile)[ CD ]
Line_11 $$ Project project = psiFile.getProject()-->Line_25 $$ Document cachedDocument = PsiDocumentManager.getInstance(project).getCachedDocument(psiFile)[ FD ]
Line_2 $$ public static Editor findEditor(@NotNull PsiElement element) -->Line_32 $$ return null[ CD ]
Line_2 $$ public static Editor findEditor(@NotNull PsiElement element) -->Line_7 $$ VirtualFile virtualFile = PsiUtilCore.getVirtualFile(element)[ FD ]
Line_14 $$ for (FileEditor editor : editors) -->Line_26 $$ if (cachedDocument == editor.getDocument()) [ FD ]
Line_2 $$ public static Editor findEditor(@NotNull PsiElement element) -->Line_6 $$ PsiFile psiFile = element.getContainingFile()[ FD ]
Line_2 $$ public static Editor findEditor(@NotNull PsiElement element) -->Line_3 $$ if (!EventQueue.isDispatchThread()) [ CD ]
Line_7 $$ VirtualFile virtualFile = PsiUtilCore.getVirtualFile(element)-->Line_13 $$ final FileEditor[] editors = FileEditorManager.getInstance(project).getEditors(virtualFile)[ FD ]
Line_11 $$ Project project = psiFile.getProject()-->Line_13 $$ final FileEditor[] editors = FileEditorManager.getInstance(project).getEditors(virtualFile)[ FD ]
Line_2 $$ public static Editor findEditor(@NotNull PsiElement element) -->Line_11 $$ Project project = psiFile.getProject()[ CD ]
Line_14 $$ for (FileEditor editor : editors) -->Line_15 $$ if (editor instanceof TextEditor) [ FD ]
Line_2 $$ public static Editor findEditor(@NotNull PsiElement element) -->Line_6 $$ PsiFile psiFile = element.getContainingFile()[ CD ]
Line_6 $$ PsiFile psiFile = element.getContainingFile()-->Line_25 $$ Document cachedDocument = PsiDocumentManager.getInstance(project).getCachedDocument(psiFile)[ FD ]
Line_7 $$ VirtualFile virtualFile = PsiUtilCore.getVirtualFile(element)-->Line_12 $$ if (virtualFile.isInLocalFileSystem() || virtualFile.getFileSystem() instanceof NonPhysicalFileSystem) [ FD ]
