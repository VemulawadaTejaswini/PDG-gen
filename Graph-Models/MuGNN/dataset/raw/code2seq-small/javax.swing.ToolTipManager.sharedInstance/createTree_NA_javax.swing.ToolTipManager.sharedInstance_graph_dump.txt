Line_2 $$ private JTree createTree() -->Line_9 $$ tree.setCellRenderer(renderer)[ CD ]
Line_2 $$ private JTree createTree() -->Line_11 $$ tree.setRootVisible(false)[ CD ]
Line_27 $$ if (KeyEvent.VK_ENTER == e.getKeyCode()) -->Line_28 $$ List<Navigatable> navigatables = getNavigatables()[ CD ]
Line_4 $$ final Tree tree = new Tree(new DefaultTreeModel(root))-->Line_6 $$ tree.setToggleClickCount(-1)[ FD ]
Line_4 $$ final Tree tree = new Tree(new DefaultTreeModel(root))-->Line_15 $$ EditSourceOnDoubleClickHandler.install(tree)[ FD ]
Line_35 $$ if (navigatable.canNavigateToSource()) -->Line_37 $$ if (navigatable instanceof Usage) [ CD ]
Line_2 $$ private JTree createTree() -->Line_4 $$ final Tree tree = new Tree(new DefaultTreeModel(root))[ CD ]
Line_2 $$ private JTree createTree() -->Line_10 $$ UIUtil.setLineStyleAngled(tree)[ CD ]
Line_7 $$ SliceUsageCellRendererBase renderer = myProvider.getRenderer()-->Line_8 $$ renderer.setOpaque(false)[ FD ]
Line_27 $$ if (KeyEvent.VK_ENTER == e.getKeyCode()) -->Line_42 $$ e.consume()[ CD ]
Line_4 $$ final Tree tree = new Tree(new DefaultTreeModel(root))-->Line_10 $$ UIUtil.setLineStyleAngled(tree)[ FD ]
Line_2 $$ private JTree createTree() -->Line_12 $$ tree.setShowsRootHandles(true)[ CD ]
Line_4 $$ final Tree tree = new Tree(new DefaultTreeModel(root))-->Line_19 $$ myAutoScrollToSourceHandler.install(tree)[ FD ]
Line_4 $$ final Tree tree = new Tree(new DefaultTreeModel(root))-->Line_25 $$ tree.addKeyListener(new KeyAdapter() [ FD ]
Line_4 $$ final Tree tree = new Tree(new DefaultTreeModel(root))-->Line_5 $$ tree.setOpaque(false)[ FD ]
Line_2 $$ private JTree createTree() -->Line_7 $$ SliceUsageCellRendererBase renderer = myProvider.getRenderer()[ CD ]
Line_33 $$ navigatable = (Usage) ((AbstractTreeNode) navigatable).getValue()-->Line_37 $$ if (navigatable instanceof Usage) [ FD ]
Line_46 $$ tree.addTreeWillExpandListener(new TreeWillExpandListener() -->Line_52 $$ node.calculateDupNode()[ CD ]
Line_20 $$ tree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener() -->Line_22 $$ treeSelectionChanged()[ CD ]
Line_4 $$ final Tree tree = new Tree(new DefaultTreeModel(root))-->Line_20 $$ tree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener() [ FD ]
Line_33 $$ navigatable = (Usage) ((AbstractTreeNode) navigatable).getValue()-->Line_35 $$ if (navigatable.canNavigateToSource()) [ FD ]
Line_2 $$ private JTree createTree() -->Line_46 $$ tree.addTreeWillExpandListener(new TreeWillExpandListener() [ CD ]
Line_4 $$ final Tree tree = new Tree(new DefaultTreeModel(root))-->Line_9 $$ tree.setCellRenderer(renderer)[ FD ]
Line_2 $$ private JTree createTree() -->Line_25 $$ tree.addKeyListener(new KeyAdapter() [ CD ]
Line_35 $$ if (navigatable.canNavigateToSource()) -->Line_36 $$ navigatable.navigate(false)[ CD ]
Line_25 $$ tree.addKeyListener(new KeyAdapter() -->Line_27 $$ if (KeyEvent.VK_ENTER == e.getKeyCode()) [ CD ]
Line_27 $$ if (KeyEvent.VK_ENTER == e.getKeyCode()) -->Line_29 $$ if (navigatables.isEmpty())[ CD ]
Line_20 $$ tree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener() -->Line_42 $$ e.consume()[ FD ]
Line_2 $$ private JTree createTree() -->Line_6 $$ tree.setToggleClickCount(-1)[ CD ]
Line_7 $$ SliceUsageCellRendererBase renderer = myProvider.getRenderer()-->Line_9 $$ tree.setCellRenderer(renderer)[ FD ]
Line_46 $$ tree.addTreeWillExpandListener(new TreeWillExpandListener() -->Line_51 $$ SliceNode node = fromPath(path)[ CD ]
Line_50 $$ TreePath path = event.getPath()-->Line_51 $$ SliceNode node = fromPath(path)[ FD ]
Line_2 $$ private JTree createTree() -->Line_55 $$ return tree[ CD ]
Line_3 $$ DefaultMutableTreeNode root = new DefaultMutableTreeNode()-->Line_14 $$ tree.setSelectionPath(new TreePath(root.getPath()))[ FD ]
Line_2 $$ private JTree createTree() -->Line_18 $$ ToolTipManager.sharedInstance().registerComponent(tree)[ CD ]
Line_2 $$ private JTree createTree() -->Line_8 $$ renderer.setOpaque(false)[ CD ]
Line_4 $$ final Tree tree = new Tree(new DefaultTreeModel(root))-->Line_46 $$ tree.addTreeWillExpandListener(new TreeWillExpandListener() [ FD ]
Line_4 $$ final Tree tree = new Tree(new DefaultTreeModel(root))-->Line_11 $$ tree.setRootVisible(false)[ FD ]
Line_4 $$ final Tree tree = new Tree(new DefaultTreeModel(root))-->Line_13 $$ tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION)[ FD ]
Line_2 $$ private JTree createTree() -->Line_17 $$ TreeUtil.installActions(tree)[ CD ]
Line_4 $$ final Tree tree = new Tree(new DefaultTreeModel(root))-->Line_14 $$ tree.setSelectionPath(new TreePath(root.getPath()))[ FD ]
Line_31 $$ for (Navigatable navigatable : navigatables) -->Line_33 $$ navigatable = (Usage) ((AbstractTreeNode) navigatable).getValue()[ FD ]
Line_46 $$ tree.addTreeWillExpandListener(new TreeWillExpandListener() -->Line_50 $$ TreePath path = event.getPath()[ FD ]
Line_2 $$ private JTree createTree() -->Line_15 $$ EditSourceOnDoubleClickHandler.install(tree)[ CD ]
Line_28 $$ List<Navigatable> navigatables = getNavigatables()-->Line_29 $$ if (navigatables.isEmpty())[ FD ]
Line_29 $$ if (navigatables.isEmpty())-->Line_30 $$ return[ CD ]
Line_51 $$ SliceNode node = fromPath(path)-->Line_52 $$ node.calculateDupNode()[ FD ]
Line_4 $$ final Tree tree = new Tree(new DefaultTreeModel(root))-->Line_12 $$ tree.setShowsRootHandles(true)[ FD ]
Line_33 $$ navigatable = (Usage) ((AbstractTreeNode) navigatable).getValue()-->Line_36 $$ navigatable.navigate(false)[ FD ]
Line_20 $$ tree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener() -->Line_27 $$ if (KeyEvent.VK_ENTER == e.getKeyCode()) [ FD ]
Line_2 $$ private JTree createTree() -->Line_20 $$ tree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener() [ CD ]
Line_2 $$ private JTree createTree() -->Line_5 $$ tree.setOpaque(false)[ CD ]
Line_37 $$ if (navigatable instanceof Usage) -->Line_38 $$ ((Usage) navigatable).highlightInEditor()[ CD ]
Line_2 $$ private JTree createTree() -->Line_19 $$ myAutoScrollToSourceHandler.install(tree)[ CD ]
Line_25 $$ tree.addKeyListener(new KeyAdapter() -->Line_42 $$ e.consume()[ FD ]
Line_4 $$ final Tree tree = new Tree(new DefaultTreeModel(root))-->Line_18 $$ ToolTipManager.sharedInstance().registerComponent(tree)[ FD ]
Line_31 $$ for (Navigatable navigatable : navigatables) -->Line_37 $$ if (navigatable instanceof Usage) [ FD ]
Line_4 $$ final Tree tree = new Tree(new DefaultTreeModel(root))-->Line_17 $$ TreeUtil.installActions(tree)[ FD ]
Line_25 $$ tree.addKeyListener(new KeyAdapter() -->Line_27 $$ if (KeyEvent.VK_ENTER == e.getKeyCode()) [ FD ]
Line_31 $$ for (Navigatable navigatable : navigatables) -->Line_35 $$ if (navigatable.canNavigateToSource()) [ FD ]
Line_31 $$ for (Navigatable navigatable : navigatables) -->Line_36 $$ navigatable.navigate(false)[ FD ]
Line_32 $$ if (navigatable instanceof AbstractTreeNode && ((AbstractTreeNode) navigatable).getValue() instanceof Usage) -->Line_33 $$ navigatable = (Usage) ((AbstractTreeNode) navigatable).getValue()[ CD ]
Line_2 $$ private JTree createTree() -->Line_14 $$ tree.setSelectionPath(new TreePath(root.getPath()))[ CD ]
Line_2 $$ private JTree createTree() -->Line_3 $$ DefaultMutableTreeNode root = new DefaultMutableTreeNode()[ CD ]
Line_46 $$ tree.addTreeWillExpandListener(new TreeWillExpandListener() -->Line_50 $$ TreePath path = event.getPath()[ CD ]
Line_2 $$ private JTree createTree() -->Line_13 $$ tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION)[ CD ]
