Line_4 $$ final String labelText = trimLabelText(StringUtil.isEmpty(givenText) ? "" : " " + givenText, allowedWidth, normalMetrics)-->Line_5 $$ int used = RealLookupElementPresentation.getStringWidth(labelText, normalMetrics)[ FD ]
Line_6 $$ final Icon icon = presentation.getTypeIcon()-->Line_7 $$ if (icon != null) [ FD ]
Line_15 $$ if (proposedBackground != null) -->Line_16 $$ sampleBackground = proposedBackground[ CD ]
Line_5 $$ int used = RealLookupElementPresentation.getStringWidth(labelText, normalMetrics)-->Line_19 $$ used += normalMetrics.stringWidth("WW")[ FD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_3 $$ final String givenText = presentation.getTypeText()[ FD ]
Line_4 $$ final String labelText = trimLabelText(StringUtil.isEmpty(givenText) ? "" : " " + givenText, allowedWidth, normalMetrics)-->Line_21 $$ myTypeLabel.append(labelText)[ FD ]
Line_16 $$ sampleBackground = proposedBackground-->Line_23 $$ myTypeLabel.setBackground(sampleBackground)[ FD ]
Line_6 $$ final Icon icon = presentation.getTypeIcon()-->Line_9 $$ used += icon.getIconWidth()[ FD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_25 $$ return used[ CD ]
Line_7 $$ if (icon != null) -->Line_9 $$ used += icon.getIconWidth()[ CD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_24 $$ myTypeLabel.setForeground(getTypeTextColor(item, foreground, presentation, selected, nonFocusedSelection))[ FD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_3 $$ final String givenText = presentation.getTypeText()[ CD ]
Line_13 $$ if (o instanceof LookupValueWithUIHint && StringUtil.isEmpty(labelText)) -->Line_19 $$ used += normalMetrics.stringWidth("WW")[ CD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_19 $$ used += normalMetrics.stringWidth("WW")[ FD ]
Line_9 $$ used += icon.getIconWidth()-->Line_19 $$ used += normalMetrics.stringWidth("WW")[ FD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_5 $$ int used = RealLookupElementPresentation.getStringWidth(labelText, normalMetrics)[ CD ]
Line_11 $$ Color sampleBackground = background-->Line_23 $$ myTypeLabel.setBackground(sampleBackground)[ FD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_12 $$ Object o = item.isValid() ? item.getObject() : null[ CD ]
Line_13 $$ if (o instanceof LookupValueWithUIHint && StringUtil.isEmpty(labelText)) -->Line_14 $$ Color proposedBackground = ((LookupValueWithUIHint) o).getColorHint()[ CD ]
Line_11 $$ Color sampleBackground = background-->Line_16 $$ sampleBackground = proposedBackground[ FD ]
Line_13 $$ if (o instanceof LookupValueWithUIHint && StringUtil.isEmpty(labelText)) -->Line_15 $$ if (proposedBackground != null) [ CD ]
Line_14 $$ Color proposedBackground = ((LookupValueWithUIHint) o).getColorHint()-->Line_16 $$ sampleBackground = proposedBackground[ FD ]
Line_3 $$ final String givenText = presentation.getTypeText()-->Line_4 $$ final String labelText = trimLabelText(StringUtil.isEmpty(givenText) ? "" : " " + givenText, allowedWidth, normalMetrics)[ FD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_12 $$ Object o = item.isValid() ? item.getObject() : null[ FD ]
Line_14 $$ Color proposedBackground = ((LookupValueWithUIHint) o).getColorHint()-->Line_15 $$ if (proposedBackground != null) [ FD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_7 $$ if (icon != null) [ CD ]
Line_13 $$ if (o instanceof LookupValueWithUIHint && StringUtil.isEmpty(labelText)) -->Line_21 $$ myTypeLabel.append(labelText)[ CD ]
Line_6 $$ final Icon icon = presentation.getTypeIcon()-->Line_8 $$ myTypeLabel.setIcon(icon)[ FD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_23 $$ myTypeLabel.setBackground(sampleBackground)[ CD ]
Line_4 $$ final String labelText = trimLabelText(StringUtil.isEmpty(givenText) ? "" : " " + givenText, allowedWidth, normalMetrics)-->Line_13 $$ if (o instanceof LookupValueWithUIHint && StringUtil.isEmpty(labelText)) [ FD ]
Line_7 $$ if (icon != null) -->Line_8 $$ myTypeLabel.setIcon(icon)[ CD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_5 $$ int used = RealLookupElementPresentation.getStringWidth(labelText, normalMetrics)[ FD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_24 $$ myTypeLabel.setForeground(getTypeTextColor(item, foreground, presentation, selected, nonFocusedSelection))[ CD ]
Line_5 $$ int used = RealLookupElementPresentation.getStringWidth(labelText, normalMetrics)-->Line_9 $$ used += icon.getIconWidth()[ FD ]
Line_13 $$ if (o instanceof LookupValueWithUIHint && StringUtil.isEmpty(labelText)) -->Line_18 $$ myTypeLabel.append("  ")[ CD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_4 $$ final String labelText = trimLabelText(StringUtil.isEmpty(givenText) ? "" : " " + givenText, allowedWidth, normalMetrics)[ FD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_11 $$ Color sampleBackground = background[ CD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_6 $$ final Icon icon = presentation.getTypeIcon()[ CD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_4 $$ final String labelText = trimLabelText(StringUtil.isEmpty(givenText) ? "" : " " + givenText, allowedWidth, normalMetrics)[ CD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_6 $$ final Icon icon = presentation.getTypeIcon()[ FD ]
Line_2 $$ private int setTypeTextLabel(LookupElement item, final Color background, Color foreground, final LookupElementPresentation presentation, int allowedWidth, boolean selected, boolean nonFocusedSelection, FontMetrics normalMetrics) -->Line_13 $$ if (o instanceof LookupValueWithUIHint && StringUtil.isEmpty(labelText)) [ CD ]
