Line_2 $$ public int findFragmentAt(int x) -->Line_3 $$ int curX = myIpad.left[ CD ]
Line_17 $$ for (int i = 0; i < myAttributes.size(); i++) -->Line_30 $$ if (fragmentPadding > 0 && curX < fragmentPadding) [ CD ]
Line_12 $$ if (font == null) -->Line_13 $$ font = UIUtil.getLabelFont()[ CD ]
Line_28 $$ curX += curWidth-->Line_31 $$ curX = fragmentPadding[ FD ]
Line_11 $$ Font font = getFont()-->Line_21 $$ font = font.deriveFont(attributes.getFontStyle(), isSmaller ? UIUtil.getFontSize(UIUtil.FontSize.SMALL) : baseSize)[ FD ]
Line_20 $$ if (font.getStyle() != attributes.getFontStyle() || isSmaller != wasSmaller) -->Line_21 $$ font = font.deriveFont(attributes.getFontStyle(), isSmaller ? UIUtil.getFontSize(UIUtil.FontSize.SMALL) : baseSize)[ CD ]
Line_25 $$ if (x >= curX && x < curX + curWidth) -->Line_26 $$ return i[ CD ]
Line_3 $$ int curX = myIpad.left-->Line_31 $$ curX = fragmentPadding[ FD ]
Line_34 $$ if (myIcon != null && myIconOnTheRight) -->Line_35 $$ curX += myIconTextGap[ CD ]
Line_2 $$ public int findFragmentAt(int x) -->Line_34 $$ if (myIcon != null && myIconOnTheRight) [ CD ]
Line_28 $$ curX += curWidth-->Line_35 $$ curX += myIconTextGap[ FD ]
Line_3 $$ int curX = myIpad.left-->Line_9 $$ curX += iconRight[ FD ]
Line_2 $$ public int findFragmentAt(int x) -->Line_4 $$ if (myIcon != null && !myIconOnTheRight) [ CD ]
Line_17 $$ for (int i = 0; i < myAttributes.size(); i++) -->Line_18 $$ SimpleTextAttributes attributes = myAttributes.get(i)[ FD ]
Line_30 $$ if (fragmentPadding > 0 && curX < fragmentPadding) -->Line_31 $$ curX = fragmentPadding[ CD ]
Line_21 $$ font = font.deriveFont(attributes.getFontStyle(), isSmaller ? UIUtil.getFontSize(UIUtil.FontSize.SMALL) : baseSize)-->Line_20 $$ if (font.getStyle() != attributes.getFontStyle() || isSmaller != wasSmaller) [ FD ]
Line_13 $$ font = UIUtil.getLabelFont()-->Line_20 $$ if (font.getStyle() != attributes.getFontStyle() || isSmaller != wasSmaller) [ FD ]
Line_17 $$ for (int i = 0; i < myAttributes.size(); i++) -->Line_29 $$ final int fragmentPadding = myFragmentPadding.get(i)[ FD ]
Line_11 $$ Font font = getFont()-->Line_20 $$ if (font.getStyle() != attributes.getFontStyle() || isSmaller != wasSmaller) [ FD ]
Line_5 $$ final int iconRight = myIcon.getIconWidth() + myIconTextGap-->Line_6 $$ if (x < iconRight) [ FD ]
Line_13 $$ font = UIUtil.getLabelFont()-->Line_21 $$ font = font.deriveFont(attributes.getFontStyle(), isSmaller ? UIUtil.getFontSize(UIUtil.FontSize.SMALL) : baseSize)[ FD ]
Line_16 $$ boolean wasSmaller = false-->Line_23 $$ wasSmaller = isSmaller[ FD ]
Line_9 $$ curX += iconRight-->Line_31 $$ curX = fragmentPadding[ FD ]
Line_3 $$ int curX = myIpad.left-->Line_35 $$ curX += myIconTextGap[ FD ]
Line_2 $$ public int findFragmentAt(int x) -->Line_16 $$ boolean wasSmaller = false[ CD ]
Line_13 $$ font = UIUtil.getLabelFont()-->Line_15 $$ int baseSize = font.getSize()[ FD ]
Line_3 $$ int curX = myIpad.left-->Line_28 $$ curX += curWidth[ FD ]
Line_2 $$ public int findFragmentAt(int x) -->Line_17 $$ for (int i = 0; i < myAttributes.size(); i++) [ CD ]
Line_17 $$ for (int i = 0; i < myAttributes.size(); i++) -->Line_25 $$ if (x >= curX && x < curX + curWidth) [ CD ]
Line_9 $$ curX += iconRight-->Line_35 $$ curX += myIconTextGap[ FD ]
Line_11 $$ Font font = getFont()-->Line_24 $$ final int curWidth = computeStringWidth(myFragments.get(i), font)[ FD ]
Line_17 $$ for (int i = 0; i < myAttributes.size(); i++) -->Line_19 $$ boolean isSmaller = attributes.isSmaller()[ CD ]
Line_17 $$ for (int i = 0; i < myAttributes.size(); i++) -->Line_23 $$ wasSmaller = isSmaller[ CD ]
Line_11 $$ Font font = getFont()-->Line_12 $$ if (font == null) [ FD ]
Line_5 $$ final int iconRight = myIcon.getIconWidth() + myIconTextGap-->Line_9 $$ curX += iconRight[ FD ]
Line_4 $$ if (myIcon != null && !myIconOnTheRight) -->Line_6 $$ if (x < iconRight) [ CD ]
Line_17 $$ for (int i = 0; i < myAttributes.size(); i++) -->Line_20 $$ if (font.getStyle() != attributes.getFontStyle() || isSmaller != wasSmaller) [ CD ]
Line_18 $$ SimpleTextAttributes attributes = myAttributes.get(i)-->Line_20 $$ if (font.getStyle() != attributes.getFontStyle() || isSmaller != wasSmaller) [ FD ]
Line_21 $$ font = font.deriveFont(attributes.getFontStyle(), isSmaller ? UIUtil.getFontSize(UIUtil.FontSize.SMALL) : baseSize)-->Line_24 $$ final int curWidth = computeStringWidth(myFragments.get(i), font)[ FD ]
Line_29 $$ final int fragmentPadding = myFragmentPadding.get(i)-->Line_31 $$ curX = fragmentPadding[ FD ]
Line_2 $$ public int findFragmentAt(int x) -->Line_12 $$ if (font == null) [ CD ]
Line_17 $$ for (int i = 0; i < myAttributes.size(); i++) -->Line_24 $$ final int curWidth = computeStringWidth(myFragments.get(i), font)[ FD ]
Line_34 $$ if (myIcon != null && myIconOnTheRight) -->Line_36 $$ if (x >= curX && x < curX + myIcon.getIconWidth()) [ CD ]
Line_2 $$ public int findFragmentAt(int x) -->Line_15 $$ int baseSize = font.getSize()[ CD ]
Line_4 $$ if (myIcon != null && !myIconOnTheRight) -->Line_9 $$ curX += iconRight[ CD ]
Line_2 $$ public int findFragmentAt(int x) -->Line_6 $$ if (x < iconRight) [ FD ]
Line_18 $$ SimpleTextAttributes attributes = myAttributes.get(i)-->Line_19 $$ boolean isSmaller = attributes.isSmaller()[ FD ]
Line_24 $$ final int curWidth = computeStringWidth(myFragments.get(i), font)-->Line_28 $$ curX += curWidth[ FD ]
Line_17 $$ for (int i = 0; i < myAttributes.size(); i++) -->Line_24 $$ final int curWidth = computeStringWidth(myFragments.get(i), font)[ CD ]
Line_4 $$ if (myIcon != null && !myIconOnTheRight) -->Line_5 $$ final int iconRight = myIcon.getIconWidth() + myIconTextGap[ CD ]
Line_17 $$ for (int i = 0; i < myAttributes.size(); i++) -->Line_28 $$ curX += curWidth[ CD ]
Line_11 $$ Font font = getFont()-->Line_15 $$ int baseSize = font.getSize()[ FD ]
Line_2 $$ public int findFragmentAt(int x) -->Line_40 $$ return -1[ CD ]
Line_17 $$ for (int i = 0; i < myAttributes.size(); i++) -->Line_18 $$ SimpleTextAttributes attributes = myAttributes.get(i)[ CD ]
Line_31 $$ curX = fragmentPadding-->Line_35 $$ curX += myIconTextGap[ FD ]
Line_19 $$ boolean isSmaller = attributes.isSmaller()-->Line_23 $$ wasSmaller = isSmaller[ FD ]
Line_11 $$ Font font = getFont()-->Line_13 $$ font = UIUtil.getLabelFont()[ FD ]
Line_9 $$ curX += iconRight-->Line_28 $$ curX += curWidth[ FD ]
Line_13 $$ font = UIUtil.getLabelFont()-->Line_24 $$ final int curWidth = computeStringWidth(myFragments.get(i), font)[ FD ]
Line_36 $$ if (x >= curX && x < curX + myIcon.getIconWidth()) -->Line_37 $$ return FRAGMENT_ICON[ CD ]
Line_6 $$ if (x < iconRight) -->Line_7 $$ return FRAGMENT_ICON[ CD ]
Line_18 $$ SimpleTextAttributes attributes = myAttributes.get(i)-->Line_21 $$ font = font.deriveFont(attributes.getFontStyle(), isSmaller ? UIUtil.getFontSize(UIUtil.FontSize.SMALL) : baseSize)[ FD ]
Line_2 $$ public int findFragmentAt(int x) -->Line_11 $$ Font font = getFont()[ CD ]
Line_17 $$ for (int i = 0; i < myAttributes.size(); i++) -->Line_29 $$ final int fragmentPadding = myFragmentPadding.get(i)[ CD ]
