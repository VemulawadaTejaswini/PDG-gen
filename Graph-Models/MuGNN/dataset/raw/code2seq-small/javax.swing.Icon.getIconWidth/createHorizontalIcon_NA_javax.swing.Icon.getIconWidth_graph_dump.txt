Line_5 $$ for (Icon icon : icons) -->Line_6 $$ maxHeight = Math.max(maxHeight, icon.getIconHeight())[ FD ]
Line_2 $$ public static LayeredIcon createHorizontalIcon(@NotNull Icon... icons) -->Line_8 $$ int hShift = 0[ CD ]
Line_3 $$ LayeredIcon result = new LayeredIcon(icons.length)-->Line_10 $$ result.setIcon(icons[i], i, hShift, (maxHeight - icons[i].getIconHeight()) / 2)[ FD ]
Line_9 $$ for (int i = 0; i < icons.length; i++) -->Line_11 $$ hShift += icons[i].getIconWidth() + 1[ CD ]
Line_9 $$ for (int i = 0; i < icons.length; i++) -->Line_10 $$ result.setIcon(icons[i], i, hShift, (maxHeight - icons[i].getIconHeight()) / 2)[ CD ]
Line_9 $$ for (int i = 0; i < icons.length; i++) -->Line_10 $$ result.setIcon(icons[i], i, hShift, (maxHeight - icons[i].getIconHeight()) / 2)[ FD ]
Line_8 $$ int hShift = 0-->Line_10 $$ result.setIcon(icons[i], i, hShift, (maxHeight - icons[i].getIconHeight()) / 2)[ FD ]
Line_8 $$ int hShift = 0-->Line_11 $$ hShift += icons[i].getIconWidth() + 1[ FD ]
Line_2 $$ public static LayeredIcon createHorizontalIcon(@NotNull Icon... icons) -->Line_13 $$ return result[ CD ]
Line_11 $$ hShift += icons[i].getIconWidth() + 1-->Line_10 $$ result.setIcon(icons[i], i, hShift, (maxHeight - icons[i].getIconHeight()) / 2)[ FD ]
Line_2 $$ public static LayeredIcon createHorizontalIcon(@NotNull Icon... icons) -->Line_3 $$ LayeredIcon result = new LayeredIcon(icons.length)[ CD ]
Line_4 $$ int maxHeight = 0-->Line_6 $$ maxHeight = Math.max(maxHeight, icon.getIconHeight())[ FD ]
Line_2 $$ public static LayeredIcon createHorizontalIcon(@NotNull Icon... icons) -->Line_4 $$ int maxHeight = 0[ CD ]
Line_2 $$ public static LayeredIcon createHorizontalIcon(@NotNull Icon... icons) -->Line_9 $$ for (int i = 0; i < icons.length; i++) [ CD ]
