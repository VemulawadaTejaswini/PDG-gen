Line_16 $$ y += (height - getTextHeight()) / 2 + fontMetrics.getHeight() - fontMetrics.getDescent()-->Line_19 $$ g.drawString(string, x, y)[ FD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_26 $$ g.drawString(myMnemonic, x + offset, y)[ FD ]
Line_18 $$ String string = myStrings[i]-->Line_19 $$ g.drawString(string, x, y)[ FD ]
Line_22 $$ if (myMnemonic != null) -->Line_24 $$ int offset = fontMetrics.stringWidth(myStrings[myStrings.length - 1] + " ")[ CD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_16 $$ y += (height - getTextHeight()) / 2 + fontMetrics.getHeight() - fontMetrics.getDescent()[ FD ]
Line_12 $$ FontMetrics fontMetrics = Toolkit.getDefaultToolkit().getFontMetrics(font)-->Line_13 $$ g.setFont(fontMetrics.getFont())[ FD ]
Line_10 $$ if (myStrings != null) -->Line_14 $$ g.setColor(UIUtil.getLabelForeground())[ CD ]
Line_10 $$ if (myStrings != null) -->Line_17 $$ for (int i = 0; i < myStrings.length; i++) [ CD ]
Line_25 $$ y -= fontMetrics.getHeight()-->Line_26 $$ g.drawString(myMnemonic, x + offset, y)[ FD ]
Line_5 $$ if (height > iconHeight) -->Line_6 $$ myIcon.paintIcon(c, g, x, y + (height - iconHeight) / 2)[ CD ]
Line_17 $$ for (int i = 0; i < myStrings.length; i++) -->Line_19 $$ g.drawString(string, x, y)[ CD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_6 $$ myIcon.paintIcon(c, g, x, y + (height - iconHeight) / 2)[ FD ]
Line_15 $$ x += myIcon.getIconWidth() + 5-->Line_19 $$ g.drawString(string, x, y)[ FD ]
Line_17 $$ for (int i = 0; i < myStrings.length; i++) -->Line_20 $$ y += fontMetrics.getHeight()[ CD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_15 $$ x += myIcon.getIconWidth() + 5[ FD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_10 $$ if (myStrings != null) [ CD ]
Line_22 $$ if (myMnemonic != null) -->Line_26 $$ g.drawString(myMnemonic, x + offset, y)[ CD ]
Line_5 $$ if (height > iconHeight) -->Line_8 $$ myIcon.paintIcon(c, g, x, y)[ CD ]
Line_3 $$ int height = getIconHeight()-->Line_5 $$ if (height > iconHeight) [ FD ]
Line_17 $$ for (int i = 0; i < myStrings.length; i++) -->Line_18 $$ String string = myStrings[i][ CD ]
Line_20 $$ y += fontMetrics.getHeight()-->Line_19 $$ g.drawString(string, x, y)[ FD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_14 $$ g.setColor(UIUtil.getLabelForeground())[ FD ]
Line_12 $$ FontMetrics fontMetrics = Toolkit.getDefaultToolkit().getFontMetrics(font)-->Line_25 $$ y -= fontMetrics.getHeight()[ FD ]
Line_20 $$ y += fontMetrics.getHeight()-->Line_26 $$ g.drawString(myMnemonic, x + offset, y)[ FD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_4 $$ int iconHeight = myIcon.getIconHeight()[ CD ]
Line_10 $$ if (myStrings != null) -->Line_13 $$ g.setFont(fontMetrics.getFont())[ CD ]
Line_16 $$ y += (height - getTextHeight()) / 2 + fontMetrics.getHeight() - fontMetrics.getDescent()-->Line_26 $$ g.drawString(myMnemonic, x + offset, y)[ FD ]
Line_4 $$ int iconHeight = myIcon.getIconHeight()-->Line_5 $$ if (height > iconHeight) [ FD ]
Line_10 $$ if (myStrings != null) -->Line_11 $$ Font font = UIUtil.getLabelFont()[ CD ]
Line_16 $$ y += (height - getTextHeight()) / 2 + fontMetrics.getHeight() - fontMetrics.getDescent()-->Line_20 $$ y += fontMetrics.getHeight()[ FD ]
Line_16 $$ y += (height - getTextHeight()) / 2 + fontMetrics.getHeight() - fontMetrics.getDescent()-->Line_25 $$ y -= fontMetrics.getHeight()[ FD ]
Line_20 $$ y += fontMetrics.getHeight()-->Line_25 $$ y -= fontMetrics.getHeight()[ FD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_19 $$ g.drawString(string, x, y)[ FD ]
Line_10 $$ if (myStrings != null) -->Line_15 $$ x += myIcon.getIconWidth() + 5[ CD ]
Line_11 $$ Font font = UIUtil.getLabelFont()-->Line_12 $$ FontMetrics fontMetrics = Toolkit.getDefaultToolkit().getFontMetrics(font)[ FD ]
Line_12 $$ FontMetrics fontMetrics = Toolkit.getDefaultToolkit().getFontMetrics(font)-->Line_20 $$ y += fontMetrics.getHeight()[ FD ]
Line_12 $$ FontMetrics fontMetrics = Toolkit.getDefaultToolkit().getFontMetrics(font)-->Line_16 $$ y += (height - getTextHeight()) / 2 + fontMetrics.getHeight() - fontMetrics.getDescent()[ FD ]
Line_12 $$ FontMetrics fontMetrics = Toolkit.getDefaultToolkit().getFontMetrics(font)-->Line_24 $$ int offset = fontMetrics.stringWidth(myStrings[myStrings.length - 1] + " ")[ FD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_3 $$ int height = getIconHeight()[ CD ]
Line_22 $$ if (myMnemonic != null) -->Line_23 $$ g.setColor(UIUtil.getInactiveTextColor())[ CD ]
Line_22 $$ if (myMnemonic != null) -->Line_25 $$ y -= fontMetrics.getHeight()[ CD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_23 $$ g.setColor(UIUtil.getInactiveTextColor())[ FD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_8 $$ myIcon.paintIcon(c, g, x, y)[ FD ]
Line_10 $$ if (myStrings != null) -->Line_22 $$ if (myMnemonic != null) [ CD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_13 $$ g.setFont(fontMetrics.getFont())[ FD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_5 $$ if (height > iconHeight) [ CD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_25 $$ y -= fontMetrics.getHeight()[ FD ]
Line_10 $$ if (myStrings != null) -->Line_12 $$ FontMetrics fontMetrics = Toolkit.getDefaultToolkit().getFontMetrics(font)[ CD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_20 $$ y += fontMetrics.getHeight()[ FD ]
Line_10 $$ if (myStrings != null) -->Line_16 $$ y += (height - getTextHeight()) / 2 + fontMetrics.getHeight() - fontMetrics.getDescent()[ CD ]
