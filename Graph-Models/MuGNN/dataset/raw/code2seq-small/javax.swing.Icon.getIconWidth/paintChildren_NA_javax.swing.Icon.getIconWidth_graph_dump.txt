Line_11 $$ final boolean hasNextStep = getTreeStep().hasSubstep(extractUserObject(lastPathComponent))-->Line_12 $$ if (!hasNextStep)[ FD ]
Line_2 $$ protected void paintChildren(Graphics g) -->Line_18 $$ icon.paintIcon(this, g, x, y)[ FD ]
Line_2 $$ protected void paintChildren(Graphics g) -->Line_5 $$ int rowForLocation = getClosestRowForLocation(0, visibleRect.y)[ CD ]
Line_6 $$ for (int i = rowForLocation; i < rowForLocation + TreeUtil.getVisibleRowCount(this) + 1; i++) -->Line_12 $$ if (!hasNextStep)[ CD ]
Line_6 $$ for (int i = rowForLocation; i < rowForLocation + TreeUtil.getVisibleRowCount(this) + 1; i++) -->Line_15 $$ final Rectangle rec = getPathBounds(eachPath)[ CD ]
Line_2 $$ protected void paintChildren(Graphics g) -->Line_4 $$ Rectangle visibleRect = getVisibleRect()[ CD ]
Line_7 $$ final TreePath eachPath = getPathForRow(i)-->Line_10 $$ final Object lastPathComponent = eachPath.getLastPathComponent()[ FD ]
Line_2 $$ protected void paintChildren(Graphics g) -->Line_3 $$ super.paintChildren(g)[ FD ]
Line_7 $$ final TreePath eachPath = getPathForRow(i)-->Line_8 $$ if (eachPath == null)[ FD ]
Line_2 $$ protected void paintChildren(Graphics g) -->Line_6 $$ for (int i = rowForLocation; i < rowForLocation + TreeUtil.getVisibleRowCount(this) + 1; i++) [ CD ]
Line_16 $$ int x = getSize().width - icon.getIconWidth() - 1-->Line_18 $$ icon.paintIcon(this, g, x, y)[ FD ]
Line_6 $$ for (int i = rowForLocation; i < rowForLocation + TreeUtil.getVisibleRowCount(this) + 1; i++) -->Line_14 $$ Icon icon = isPathSelected(eachPath) ? AllIcons.Icons.Ide.NextStep : AllIcons.Icons.Ide.NextStepGrayed[ CD ]
Line_17 $$ int y = rec.y + (rec.height - icon.getIconWidth()) / 2-->Line_18 $$ icon.paintIcon(this, g, x, y)[ FD ]
Line_2 $$ protected void paintChildren(Graphics g) -->Line_3 $$ super.paintChildren(g)[ CD ]
Line_6 $$ for (int i = rowForLocation; i < rowForLocation + TreeUtil.getVisibleRowCount(this) + 1; i++) -->Line_17 $$ int y = rec.y + (rec.height - icon.getIconWidth()) / 2[ CD ]
Line_6 $$ for (int i = rowForLocation; i < rowForLocation + TreeUtil.getVisibleRowCount(this) + 1; i++) -->Line_11 $$ final boolean hasNextStep = getTreeStep().hasSubstep(extractUserObject(lastPathComponent))[ CD ]
Line_7 $$ final TreePath eachPath = getPathForRow(i)-->Line_15 $$ final Rectangle rec = getPathBounds(eachPath)[ FD ]
Line_14 $$ Icon icon = isPathSelected(eachPath) ? AllIcons.Icons.Ide.NextStep : AllIcons.Icons.Ide.NextStepGrayed-->Line_16 $$ int x = getSize().width - icon.getIconWidth() - 1[ FD ]
Line_6 $$ for (int i = rowForLocation; i < rowForLocation + TreeUtil.getVisibleRowCount(this) + 1; i++) -->Line_10 $$ final Object lastPathComponent = eachPath.getLastPathComponent()[ CD ]
Line_6 $$ for (int i = rowForLocation; i < rowForLocation + TreeUtil.getVisibleRowCount(this) + 1; i++) -->Line_7 $$ final TreePath eachPath = getPathForRow(i)[ FD ]
Line_6 $$ for (int i = rowForLocation; i < rowForLocation + TreeUtil.getVisibleRowCount(this) + 1; i++) -->Line_18 $$ icon.paintIcon(this, g, x, y)[ CD ]
Line_6 $$ for (int i = rowForLocation; i < rowForLocation + TreeUtil.getVisibleRowCount(this) + 1; i++) -->Line_16 $$ int x = getSize().width - icon.getIconWidth() - 1[ CD ]
Line_7 $$ final TreePath eachPath = getPathForRow(i)-->Line_14 $$ Icon icon = isPathSelected(eachPath) ? AllIcons.Icons.Ide.NextStep : AllIcons.Icons.Ide.NextStepGrayed[ FD ]
Line_14 $$ Icon icon = isPathSelected(eachPath) ? AllIcons.Icons.Ide.NextStep : AllIcons.Icons.Ide.NextStepGrayed-->Line_17 $$ int y = rec.y + (rec.height - icon.getIconWidth()) / 2[ FD ]
Line_14 $$ Icon icon = isPathSelected(eachPath) ? AllIcons.Icons.Ide.NextStep : AllIcons.Icons.Ide.NextStepGrayed-->Line_18 $$ icon.paintIcon(this, g, x, y)[ FD ]
Line_6 $$ for (int i = rowForLocation; i < rowForLocation + TreeUtil.getVisibleRowCount(this) + 1; i++) -->Line_8 $$ if (eachPath == null)[ CD ]
Line_6 $$ for (int i = rowForLocation; i < rowForLocation + TreeUtil.getVisibleRowCount(this) + 1; i++) -->Line_7 $$ final TreePath eachPath = getPathForRow(i)[ CD ]
Line_10 $$ final Object lastPathComponent = eachPath.getLastPathComponent()-->Line_11 $$ final boolean hasNextStep = getTreeStep().hasSubstep(extractUserObject(lastPathComponent))[ FD ]
