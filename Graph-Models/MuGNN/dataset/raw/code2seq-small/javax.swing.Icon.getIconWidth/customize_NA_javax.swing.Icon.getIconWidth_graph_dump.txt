Line_2 $$ public void customize(JList list, FileType type, int index, boolean selected, boolean hasFocus) -->Line_13 $$ setText(trimmedDescription + " (" + type.getName() + ")")[ FD ]
Line_2 $$ public void customize(JList list, FileType type, int index, boolean selected, boolean hasFocus) -->Line_5 $$ final Icon icon = type.getIcon()[ CD ]
Line_2 $$ public void customize(JList list, FileType type, int index, boolean selected, boolean hasFocus) -->Line_12 $$ if (isDuplicated(description)) [ CD ]
Line_3 $$ LayeredIcon layeredIcon = new LayeredIcon(2)-->Line_4 $$ layeredIcon.setIcon(EMPTY_ICON, 0)[ FD ]
Line_2 $$ public void customize(JList list, FileType type, int index, boolean selected, boolean hasFocus) -->Line_11 $$ String trimmedDescription = StringUtil.capitalizeWords(description.replaceAll("(?i)\\s*file(?:s)?$", ""), true)[ CD ]
Line_2 $$ public void customize(JList list, FileType type, int index, boolean selected, boolean hasFocus) -->Line_4 $$ layeredIcon.setIcon(EMPTY_ICON, 0)[ CD ]
Line_5 $$ final Icon icon = type.getIcon()-->Line_6 $$ if (icon != null) [ FD ]
Line_2 $$ public void customize(JList list, FileType type, int index, boolean selected, boolean hasFocus) -->Line_9 $$ setIcon(layeredIcon)[ CD ]
Line_2 $$ public void customize(JList list, FileType type, int index, boolean selected, boolean hasFocus) -->Line_10 $$ String description = type.getDescription()[ CD ]
Line_10 $$ String description = type.getDescription()-->Line_12 $$ if (isDuplicated(description)) [ FD ]
Line_12 $$ if (isDuplicated(description)) -->Line_15 $$ setText(trimmedDescription)[ CD ]
Line_2 $$ public void customize(JList list, FileType type, int index, boolean selected, boolean hasFocus) -->Line_3 $$ LayeredIcon layeredIcon = new LayeredIcon(2)[ CD ]
Line_12 $$ if (isDuplicated(description)) -->Line_13 $$ setText(trimmedDescription + " (" + type.getName() + ")")[ CD ]
Line_6 $$ if (icon != null) -->Line_7 $$ layeredIcon.setIcon(icon, 1, (-icon.getIconWidth() + EMPTY_ICON.getIconWidth()) / 2, (EMPTY_ICON.getIconHeight() - icon.getIconHeight()) / 2)[ CD ]
Line_3 $$ LayeredIcon layeredIcon = new LayeredIcon(2)-->Line_7 $$ layeredIcon.setIcon(icon, 1, (-icon.getIconWidth() + EMPTY_ICON.getIconWidth()) / 2, (EMPTY_ICON.getIconHeight() - icon.getIconHeight()) / 2)[ FD ]
Line_3 $$ LayeredIcon layeredIcon = new LayeredIcon(2)-->Line_9 $$ setIcon(layeredIcon)[ FD ]
Line_2 $$ public void customize(JList list, FileType type, int index, boolean selected, boolean hasFocus) -->Line_10 $$ String description = type.getDescription()[ FD ]
Line_11 $$ String trimmedDescription = StringUtil.capitalizeWords(description.replaceAll("(?i)\\s*file(?:s)?$", ""), true)-->Line_15 $$ setText(trimmedDescription)[ FD ]
Line_2 $$ public void customize(JList list, FileType type, int index, boolean selected, boolean hasFocus) -->Line_6 $$ if (icon != null) [ CD ]
Line_10 $$ String description = type.getDescription()-->Line_11 $$ String trimmedDescription = StringUtil.capitalizeWords(description.replaceAll("(?i)\\s*file(?:s)?$", ""), true)[ FD ]
Line_2 $$ public void customize(JList list, FileType type, int index, boolean selected, boolean hasFocus) -->Line_5 $$ final Icon icon = type.getIcon()[ FD ]
Line_5 $$ final Icon icon = type.getIcon()-->Line_7 $$ layeredIcon.setIcon(icon, 1, (-icon.getIconWidth() + EMPTY_ICON.getIconWidth()) / 2, (EMPTY_ICON.getIconHeight() - icon.getIconHeight()) / 2)[ FD ]
