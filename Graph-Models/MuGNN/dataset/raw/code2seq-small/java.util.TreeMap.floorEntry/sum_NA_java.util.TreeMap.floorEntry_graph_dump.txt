Line_3 $$ double sum = 0-->Line_15 $$ sum += value[ FD ]
Line_4 $$ Map.Entry<Double, Long> pnext = bin.higherEntry(b)-->Line_12 $$ double mb = pi.getValue() + (pnext.getValue() - pi.getValue()) * weight[ FD ]
Line_6 $$ sum += value-->Line_15 $$ sum += value[ FD ]
Line_2 $$ public double sum(double b) -->Line_4 $$ Map.Entry<Double, Long> pnext = bin.higherEntry(b)[ CD ]
Line_13 $$ sum += (pi.getValue() + mb) * weight / 2-->Line_15 $$ sum += value[ FD ]
Line_5 $$ if (pnext == null) -->Line_14 $$ sum += pi.getValue() / 2.0[ CD ]
Line_13 $$ sum += (pi.getValue() + mb) * weight / 2-->Line_14 $$ sum += pi.getValue() / 2.0[ FD ]
Line_9 $$ if (pi == null)-->Line_10 $$ return 0[ CD ]
Line_8 $$ Map.Entry<Double, Long> pi = bin.floorEntry(b)-->Line_9 $$ if (pi == null)[ FD ]
Line_5 $$ if (pnext == null) -->Line_12 $$ double mb = pi.getValue() + (pnext.getValue() - pi.getValue()) * weight[ CD ]
Line_3 $$ double sum = 0-->Line_13 $$ sum += (pi.getValue() + mb) * weight / 2[ FD ]
Line_5 $$ if (pnext == null) -->Line_11 $$ double weight = (b - pi.getKey()) / (pnext.getKey() - pi.getKey())[ CD ]
Line_14 $$ sum += pi.getValue() / 2.0-->Line_15 $$ sum += value[ FD ]
Line_2 $$ public double sum(double b) -->Line_17 $$ return sum[ CD ]
Line_8 $$ Map.Entry<Double, Long> pi = bin.floorEntry(b)-->Line_12 $$ double mb = pi.getValue() + (pnext.getValue() - pi.getValue()) * weight[ FD ]
Line_2 $$ public double sum(double b) -->Line_8 $$ Map.Entry<Double, Long> pi = bin.floorEntry(b)[ FD ]
Line_6 $$ sum += value-->Line_13 $$ sum += (pi.getValue() + mb) * weight / 2[ FD ]
Line_4 $$ Map.Entry<Double, Long> pnext = bin.higherEntry(b)-->Line_5 $$ if (pnext == null) [ FD ]
Line_2 $$ public double sum(double b) -->Line_4 $$ Map.Entry<Double, Long> pnext = bin.higherEntry(b)[ FD ]
Line_6 $$ for (Long value : bin.values()) sum += value-->Line_15 $$ sum += value[ FD ]
Line_5 $$ if (pnext == null) -->Line_8 $$ Map.Entry<Double, Long> pi = bin.floorEntry(b)[ CD ]
Line_6 $$ sum += value-->Line_14 $$ sum += pi.getValue() / 2.0[ FD ]
Line_8 $$ Map.Entry<Double, Long> pi = bin.floorEntry(b)-->Line_11 $$ double weight = (b - pi.getKey()) / (pnext.getKey() - pi.getKey())[ FD ]
Line_8 $$ Map.Entry<Double, Long> pi = bin.floorEntry(b)-->Line_15 $$ for (Long value : bin.headMap(pi.getKey(), false).values()) sum += value[ FD ]
Line_8 $$ Map.Entry<Double, Long> pi = bin.floorEntry(b)-->Line_13 $$ sum += (pi.getValue() + mb) * weight / 2[ FD ]
Line_4 $$ Map.Entry<Double, Long> pnext = bin.higherEntry(b)-->Line_11 $$ double weight = (b - pi.getKey()) / (pnext.getKey() - pi.getKey())[ FD ]
Line_2 $$ public double sum(double b) -->Line_3 $$ double sum = 0[ CD ]
Line_5 $$ if (pnext == null) -->Line_13 $$ sum += (pi.getValue() + mb) * weight / 2[ CD ]
Line_8 $$ Map.Entry<Double, Long> pi = bin.floorEntry(b)-->Line_14 $$ sum += pi.getValue() / 2.0[ FD ]
Line_3 $$ double sum = 0-->Line_14 $$ sum += pi.getValue() / 2.0[ FD ]
Line_5 $$ if (pnext == null) -->Line_9 $$ if (pi == null)[ CD ]
Line_3 $$ double sum = 0-->Line_6 $$ sum += value[ FD ]
Line_2 $$ public double sum(double b) -->Line_5 $$ if (pnext == null) [ CD ]
