Line_26 $$ Rectangle bounds = component.getBounds()-->Line_31 $$ bounds.setSize(size)[ FD ]
Line_26 $$ Rectangle bounds = component.getBounds()-->Line_28 $$ bounds.setLocation(location)[ FD ]
Line_10 $$ size = state.mySize-->Line_31 $$ bounds.setSize(size)[ FD ]
Line_9 $$ location = state.myLocation-->Line_27 $$ if (location != null) [ FD ]
Line_15 $$ location = getDefaultLocationFor(object, key)-->Line_27 $$ if (location != null) [ FD ]
Line_9 $$ location = state.myLocation-->Line_28 $$ bounds.setLocation(location)[ FD ]
Line_8 $$ if (state != null) -->Line_10 $$ size = state.mySize[ CD ]
Line_4 $$ Dimension size = null-->Line_10 $$ size = state.mySize[ FD ]
Line_3 $$ Point location = null-->Line_17 $$ if (!isVisible(location, size)) [ FD ]
Line_10 $$ size = state.mySize-->Line_30 $$ if (size != null) [ FD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_37 $$ return true[ CD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_5 $$ boolean maximized = false[ CD ]
Line_4 $$ Dimension size = null-->Line_31 $$ bounds.setSize(size)[ FD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_34 $$ if (!Patches.JDK_BUG_ID_8007219 && maximized && frame != null) [ CD ]
Line_5 $$ boolean maximized = false-->Line_11 $$ maximized = state.myMaximized[ FD ]
Line_10 $$ size = state.mySize-->Line_16 $$ size = getDefaultSizeFor(object, key)[ FD ]
Line_22 $$ Frame frame = component instanceof Frame ? (Frame) component : null-->Line_35 $$ frame.setExtendedState(Frame.MAXIMIZED_BOTH)[ FD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_14 $$ if (location == null && size == null) [ CD ]
Line_14 $$ if (location == null && size == null) -->Line_17 $$ if (!isVisible(location, size)) [ CD ]
Line_8 $$ if (state != null) -->Line_11 $$ maximized = state.myMaximized[ CD ]
Line_22 $$ Frame frame = component instanceof Frame ? (Frame) component : null-->Line_24 $$ frame.setExtendedState(Frame.NORMAL)[ FD ]
Line_4 $$ Dimension size = null-->Line_30 $$ if (size != null) [ FD ]
Line_3 $$ Point location = null-->Line_27 $$ if (location != null) [ FD ]
Line_15 $$ location = getDefaultLocationFor(object, key)-->Line_17 $$ if (!isVisible(location, size)) [ FD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_3 $$ Point location = null[ CD ]
Line_16 $$ size = getDefaultSizeFor(object, key)-->Line_30 $$ if (size != null) [ FD ]
Line_17 $$ if (!isVisible(location, size)) -->Line_18 $$ return false[ CD ]
Line_16 $$ size = getDefaultSizeFor(object, key)-->Line_31 $$ bounds.setSize(size)[ FD ]
Line_10 $$ size = state.mySize-->Line_17 $$ if (!isVisible(location, size)) [ FD ]
Line_14 $$ if (location == null && size == null) -->Line_16 $$ size = getDefaultSizeFor(object, key)[ CD ]
Line_4 $$ Dimension size = null-->Line_17 $$ if (!isVisible(location, size)) [ FD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_33 $$ component.setBounds(bounds)[ CD ]
Line_30 $$ if (size != null) -->Line_31 $$ bounds.setSize(size)[ CD ]
Line_11 $$ maximized = state.myMaximized-->Line_20 $$ maximized = getDefaultMaximizedFor(object, key)[ FD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_20 $$ maximized = getDefaultMaximizedFor(object, key)[ FD ]
Line_3 $$ Point location = null-->Line_15 $$ location = getDefaultLocationFor(object, key)[ FD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_33 $$ component.setBounds(bounds)[ FD ]
Line_7 $$ WindowState state = getFor(object, key, WindowState.class)-->Line_8 $$ if (state != null) [ FD ]
Line_34 $$ if (!Patches.JDK_BUG_ID_8007219 && maximized && frame != null) -->Line_35 $$ frame.setExtendedState(Frame.MAXIMIZED_BOTH)[ CD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_15 $$ location = getDefaultLocationFor(object, key)[ FD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_16 $$ size = getDefaultSizeFor(object, key)[ FD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_30 $$ if (size != null) [ CD ]
Line_27 $$ if (location != null) -->Line_28 $$ bounds.setLocation(location)[ CD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_27 $$ if (location != null) [ CD ]
Line_9 $$ location = state.myLocation-->Line_15 $$ location = getDefaultLocationFor(object, key)[ FD ]
Line_22 $$ Frame frame = component instanceof Frame ? (Frame) component : null-->Line_23 $$ if (frame != null && Frame.NORMAL != frame.getExtendedState()) [ FD ]
Line_23 $$ if (frame != null && Frame.NORMAL != frame.getExtendedState()) -->Line_24 $$ frame.setExtendedState(Frame.NORMAL)[ CD ]
Line_26 $$ Rectangle bounds = component.getBounds()-->Line_33 $$ component.setBounds(bounds)[ FD ]
Line_9 $$ location = state.myLocation-->Line_17 $$ if (!isVisible(location, size)) [ FD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_7 $$ WindowState state = getFor(object, key, WindowState.class)[ FD ]
Line_3 $$ Point location = null-->Line_9 $$ location = state.myLocation[ FD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_4 $$ Dimension size = null[ CD ]
Line_4 $$ Dimension size = null-->Line_16 $$ size = getDefaultSizeFor(object, key)[ FD ]
Line_8 $$ if (state != null) -->Line_9 $$ location = state.myLocation[ CD ]
Line_5 $$ boolean maximized = false-->Line_20 $$ maximized = getDefaultMaximizedFor(object, key)[ FD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_26 $$ Rectangle bounds = component.getBounds()[ CD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_26 $$ Rectangle bounds = component.getBounds()[ FD ]
Line_3 $$ Point location = null-->Line_28 $$ bounds.setLocation(location)[ FD ]
Line_14 $$ if (location == null && size == null) -->Line_20 $$ maximized = getDefaultMaximizedFor(object, key)[ CD ]
Line_15 $$ location = getDefaultLocationFor(object, key)-->Line_28 $$ bounds.setLocation(location)[ FD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_23 $$ if (frame != null && Frame.NORMAL != frame.getExtendedState()) [ CD ]
Line_16 $$ size = getDefaultSizeFor(object, key)-->Line_17 $$ if (!isVisible(location, size)) [ FD ]
Line_2 $$ public boolean loadStateFor(Object object, @NotNull String key, @NotNull Component component) -->Line_22 $$ Frame frame = component instanceof Frame ? (Frame) component : null[ CD ]
Line_14 $$ if (location == null && size == null) -->Line_15 $$ location = getDefaultLocationFor(object, key)[ CD ]
