Line_3 $$ final Balloon balloon = JBPopupFactory.getInstance().createHtmlTextBalloonBuilder(htmlBody.replace("\n", "<br>"), icon != null ? icon : type.getDefaultIcon(), type.getPopupBackground(), listener).createBalloon()-->Line_18 $$ balloon.show(new RelativePoint(contentPane, target), Balloon.Position.above)[ FD ]
Line_7 $$ if (comp.isShowing()) -->Line_9 $$ Point point = new Point(comp.getWidth() - offset, comp.getHeight() - offset)[ CD ]
Line_12 $$ final JRootPane rootPane = SwingUtilities.getRootPane(comp)-->Line_13 $$ if (rootPane != null && rootPane.isShowing()) [ FD ]
Line_2 $$ public BalloonHandler notifyByBalloon(MessageType type, String htmlBody, @Nullable Icon icon, @Nullable HyperlinkListener listener) -->Line_4 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_14 $$ final Container contentPane = rootPane.getContentPane()-->Line_15 $$ final Rectangle bounds = contentPane.getBounds()[ FD ]
Line_13 $$ if (rootPane != null && rootPane.isShowing()) -->Line_16 $$ final Point target = UIUtil.getCenterPoint(bounds, JBUI.size(1, 1))[ CD ]
Line_13 $$ if (rootPane != null && rootPane.isShowing()) -->Line_15 $$ final Rectangle bounds = contentPane.getBounds()[ CD ]
Line_6 $$ Component comp = InfoAndProgressPanel.this-->Line_12 $$ final JRootPane rootPane = SwingUtilities.getRootPane(comp)[ FD ]
Line_3 $$ final Balloon balloon = JBPopupFactory.getInstance().createHtmlTextBalloonBuilder(htmlBody.replace("\n", "<br>"), icon != null ? icon : type.getDefaultIcon(), type.getPopupBackground(), listener).createBalloon()-->Line_10 $$ balloon.show(new RelativePoint(comp, point), Balloon.Position.above)[ FD ]
Line_3 $$ final Balloon balloon = JBPopupFactory.getInstance().createHtmlTextBalloonBuilder(htmlBody.replace("\n", "<br>"), icon != null ? icon : type.getDefaultIcon(), type.getPopupBackground(), listener).createBalloon()-->Line_27 $$ balloon.hide()[ FD ]
Line_6 $$ Component comp = InfoAndProgressPanel.this-->Line_7 $$ if (comp.isShowing()) [ FD ]
Line_6 $$ Component comp = InfoAndProgressPanel.this-->Line_9 $$ Point point = new Point(comp.getWidth() - offset, comp.getHeight() - offset)[ FD ]
Line_15 $$ final Rectangle bounds = contentPane.getBounds()-->Line_16 $$ final Point target = UIUtil.getCenterPoint(bounds, JBUI.size(1, 1))[ FD ]
Line_4 $$ SwingUtilities.invokeLater(new Runnable() -->Line_6 $$ Component comp = InfoAndProgressPanel.this[ CD ]
Line_2 $$ public BalloonHandler notifyByBalloon(MessageType type, String htmlBody, @Nullable Icon icon, @Nullable HyperlinkListener listener) -->Line_3 $$ final Balloon balloon = JBPopupFactory.getInstance().createHtmlTextBalloonBuilder(htmlBody.replace("\n", "<br>"), icon != null ? icon : type.getDefaultIcon(), type.getPopupBackground(), listener).createBalloon()[ FD ]
Line_23 $$ return new BalloonHandler() -->Line_25 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_13 $$ if (rootPane != null && rootPane.isShowing()) -->Line_14 $$ final Container contentPane = rootPane.getContentPane()[ CD ]
Line_4 $$ SwingUtilities.invokeLater(new Runnable() -->Line_7 $$ if (comp.isShowing()) [ CD ]
Line_7 $$ if (comp.isShowing()) -->Line_8 $$ int offset = comp.getHeight() / 2[ CD ]
Line_12 $$ final JRootPane rootPane = SwingUtilities.getRootPane(comp)-->Line_14 $$ final Container contentPane = rootPane.getContentPane()[ FD ]
Line_6 $$ Component comp = InfoAndProgressPanel.this-->Line_8 $$ int offset = comp.getHeight() / 2[ FD ]
Line_7 $$ if (comp.isShowing()) -->Line_12 $$ final JRootPane rootPane = SwingUtilities.getRootPane(comp)[ CD ]
Line_13 $$ if (rootPane != null && rootPane.isShowing()) -->Line_18 $$ balloon.show(new RelativePoint(contentPane, target), Balloon.Position.above)[ CD ]
Line_7 $$ if (comp.isShowing()) -->Line_10 $$ balloon.show(new RelativePoint(comp, point), Balloon.Position.above)[ CD ]
Line_2 $$ public BalloonHandler notifyByBalloon(MessageType type, String htmlBody, @Nullable Icon icon, @Nullable HyperlinkListener listener) -->Line_23 $$ return new BalloonHandler() [ CD ]
Line_25 $$ SwingUtilities.invokeLater(new Runnable() -->Line_27 $$ balloon.hide()[ CD ]
Line_2 $$ public BalloonHandler notifyByBalloon(MessageType type, String htmlBody, @Nullable Icon icon, @Nullable HyperlinkListener listener) -->Line_3 $$ final Balloon balloon = JBPopupFactory.getInstance().createHtmlTextBalloonBuilder(htmlBody.replace("\n", "<br>"), icon != null ? icon : type.getDefaultIcon(), type.getPopupBackground(), listener).createBalloon()[ CD ]
Line_13 $$ if (rootPane != null && rootPane.isShowing()) -->Line_17 $$ target.y = bounds.height - 3[ CD ]
Line_7 $$ if (comp.isShowing()) -->Line_13 $$ if (rootPane != null && rootPane.isShowing()) [ CD ]
