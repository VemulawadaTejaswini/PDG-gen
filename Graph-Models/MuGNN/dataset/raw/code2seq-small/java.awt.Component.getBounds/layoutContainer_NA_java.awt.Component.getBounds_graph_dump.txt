Line_45 $$ newHistoryHeight -= delta-->Line_48 $$ history.getComponent().setBounds(0, 0, panelSize.width, newHistoryHeight)[ FD ]
Line_7 $$ final EditorEx history = myHistoryViewer-->Line_52 $$ JViewport viewport = history.getScrollPane().getViewport()[ FD ]
Line_43 $$ int newHistoryHeight = panelSize.height - newInputHeight-->Line_45 $$ newHistoryHeight -= delta[ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_48 $$ history.getComponent().setBounds(0, 0, panelSize.width, newHistoryHeight)[ CD ]
Line_8 $$ final EditorEx input = componentCount == 2 ? myConsoleEditor : null-->Line_47 $$ input.getComponent().setBounds(0, newHistoryHeight, panelSize.width, newInputHeight)[ FD ]
Line_38 $$ newInputHeight = inputPreferredHeight-->Line_40 $$ newInputHeight = panelSize.height - historyPreferredHeight[ FD ]
Line_36 $$ newInputHeight = panelSize.height - minHistoryHeight-->Line_38 $$ newInputHeight = inputPreferredHeight[ FD ]
Line_37 $$ if (panelSize.height < (inputPreferredHeight + historyPreferredHeight) || inputPreferredHeight == 0) -->Line_38 $$ newInputHeight = inputPreferredHeight[ CD ]
Line_51 $$ if (newHistoryHeight < oldHistoryHeight) -->Line_53 $$ Point position = viewport.getViewPosition()[ CD ]
Line_30 $$ int minInputHeight = input.isViewer() ? 0 : input.getLineHeight()-->Line_31 $$ final int inputPreferredHeight = input.isViewer() ? 0 : Math.max(minInputHeight, inputSize.height)[ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_49 $$ input.getComponent().doLayout()[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_47 $$ input.getComponent().setBounds(0, newHistoryHeight, panelSize.width, newInputHeight)[ CD ]
Line_19 $$ int newInputHeight-->Line_36 $$ newInputHeight = panelSize.height - minHistoryHeight[ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_7 $$ final EditorEx history = myHistoryViewer[ CD ]
Line_7 $$ final EditorEx history = myHistoryViewer-->Line_44 $$ int delta = newHistoryHeight - ((newHistoryHeight / history.getLineHeight()) * history.getLineHeight())[ FD ]
Line_29 $$ int minHistoryHeight = historySize.height > 0 ? getMinHistoryLineCount() * history.getLineHeight() : 0-->Line_32 $$ final int historyPreferredHeight = Math.max(minHistoryHeight, historySize.height)[ FD ]
Line_8 $$ final EditorEx input = componentCount == 2 ? myConsoleEditor : null-->Line_18 $$ final Dimension inputSize = input.getContentSize()[ FD ]
Line_43 $$ int newHistoryHeight = panelSize.height - newInputHeight-->Line_51 $$ if (newHistoryHeight < oldHistoryHeight) [ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_19 $$ int newInputHeight[ CD ]
Line_4 $$ if (componentCount == 0) -->Line_5 $$ return[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_42 $$ int oldHistoryHeight = history.getComponent().getHeight()[ CD ]
Line_7 $$ final EditorEx history = myHistoryViewer-->Line_29 $$ int minHistoryHeight = historySize.height > 0 ? getMinHistoryLineCount() * history.getLineHeight() : 0[ FD ]
Line_43 $$ int newHistoryHeight = panelSize.height - newInputHeight-->Line_47 $$ input.getComponent().setBounds(0, newHistoryHeight, panelSize.width, newInputHeight)[ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_21 $$ if (isHistoryViewerForceAdditionalColumnsUsage()) [ CD ]
Line_33 $$ if (panelSize.height < minInputHeight) -->Line_35 $$ if (panelSize.height < inputPreferredHeight) [ CD ]
Line_8 $$ final EditorEx input = componentCount == 2 ? myConsoleEditor : null-->Line_23 $$ input.getSettings().setAdditionalColumnsCount(2 + (width - inputSize.width) / EditorUtil.getSpaceWidth(Font.PLAIN, input))[ FD ]
Line_7 $$ final EditorEx history = myHistoryViewer-->Line_22 $$ history.getSoftWrapModel().forceAdditionalColumnsUsage()[ FD ]
Line_43 $$ int newHistoryHeight = panelSize.height - newInputHeight-->Line_48 $$ history.getComponent().setBounds(0, 0, panelSize.width, newHistoryHeight)[ FD ]
Line_26 $$ if (history.getDocument().getLineCount() == 0) -->Line_27 $$ historySize.height = 0[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_44 $$ int delta = newHistoryHeight - ((newHistoryHeight / history.getLineHeight()) * history.getLineHeight())[ CD ]
Line_19 $$ int newInputHeight-->Line_46 $$ newInputHeight += delta[ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_29 $$ int minHistoryHeight = historySize.height > 0 ? getMinHistoryLineCount() * history.getLineHeight() : 0[ CD ]
Line_8 $$ final EditorEx input = componentCount == 2 ? myConsoleEditor : null-->Line_31 $$ final int inputPreferredHeight = input.isViewer() ? 0 : Math.max(minInputHeight, inputSize.height)[ FD ]
Line_34 $$ newInputHeight = panelSize.height-->Line_46 $$ newInputHeight += delta[ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_14 $$ if (panelSize.getHeight() <= 0) [ CD ]
Line_45 $$ newHistoryHeight -= delta-->Line_51 $$ if (newHistoryHeight < oldHistoryHeight) [ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_10 $$ parent.getComponent(0).setBounds(parent.getBounds())[ FD ]
Line_19 $$ int newInputHeight-->Line_38 $$ newInputHeight = inputPreferredHeight[ FD ]
Line_32 $$ final int historyPreferredHeight = Math.max(minHistoryHeight, historySize.height)-->Line_40 $$ newInputHeight = panelSize.height - historyPreferredHeight[ FD ]
Line_53 $$ Point position = viewport.getViewPosition()-->Line_54 $$ position.translate(0, oldHistoryHeight - newHistoryHeight)[ FD ]
Line_51 $$ if (newHistoryHeight < oldHistoryHeight) -->Line_55 $$ viewport.setViewPosition(position)[ CD ]
Line_51 $$ if (newHistoryHeight < oldHistoryHeight) -->Line_52 $$ JViewport viewport = history.getScrollPane().getViewport()[ CD ]
Line_40 $$ newInputHeight = panelSize.height - historyPreferredHeight-->Line_47 $$ input.getComponent().setBounds(0, newHistoryHeight, panelSize.width, newInputHeight)[ FD ]
Line_53 $$ Point position = viewport.getViewPosition()-->Line_55 $$ viewport.setViewPosition(position)[ FD ]
Line_7 $$ final EditorEx history = myHistoryViewer-->Line_50 $$ history.getComponent().doLayout()[ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_30 $$ int minInputHeight = input.isViewer() ? 0 : input.getLineHeight()[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_51 $$ if (newHistoryHeight < oldHistoryHeight) [ CD ]
Line_34 $$ newInputHeight = panelSize.height-->Line_36 $$ newInputHeight = panelSize.height - minHistoryHeight[ FD ]
Line_51 $$ if (newHistoryHeight < oldHistoryHeight) -->Line_54 $$ position.translate(0, oldHistoryHeight - newHistoryHeight)[ CD ]
Line_35 $$ if (panelSize.height < inputPreferredHeight) -->Line_37 $$ if (panelSize.height < (inputPreferredHeight + historyPreferredHeight) || inputPreferredHeight == 0) [ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_45 $$ newHistoryHeight -= delta[ CD ]
Line_8 $$ final EditorEx input = componentCount == 2 ? myConsoleEditor : null-->Line_49 $$ input.getComponent().doLayout()[ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_18 $$ final Dimension inputSize = input.getContentSize()[ CD ]
Line_37 $$ if (panelSize.height < (inputPreferredHeight + historyPreferredHeight) || inputPreferredHeight == 0) -->Line_40 $$ newInputHeight = panelSize.height - historyPreferredHeight[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_3 $$ final int componentCount = parent.getComponentCount()[ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_43 $$ int newHistoryHeight = panelSize.height - newInputHeight[ CD ]
Line_52 $$ JViewport viewport = history.getScrollPane().getViewport()-->Line_53 $$ Point position = viewport.getViewPosition()[ FD ]
Line_21 $$ if (isHistoryViewerForceAdditionalColumnsUsage()) -->Line_24 $$ history.getSettings().setAdditionalColumnsCount(2 + (width - historySize.width) / EditorUtil.getSpaceWidth(Font.PLAIN, history))[ CD ]
Line_36 $$ newInputHeight = panelSize.height - minHistoryHeight-->Line_40 $$ newInputHeight = panelSize.height - historyPreferredHeight[ FD ]
Line_34 $$ newInputHeight = panelSize.height-->Line_47 $$ input.getComponent().setBounds(0, newHistoryHeight, panelSize.width, newInputHeight)[ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_32 $$ final int historyPreferredHeight = Math.max(minHistoryHeight, historySize.height)[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_4 $$ if (componentCount == 0) [ CD ]
Line_38 $$ newInputHeight = inputPreferredHeight-->Line_46 $$ newInputHeight += delta[ FD ]
Line_44 $$ int delta = newHistoryHeight - ((newHistoryHeight / history.getLineHeight()) * history.getLineHeight())-->Line_45 $$ newHistoryHeight -= delta[ FD ]
Line_31 $$ final int inputPreferredHeight = input.isViewer() ? 0 : Math.max(minInputHeight, inputSize.height)-->Line_35 $$ if (panelSize.height < inputPreferredHeight) [ FD ]
Line_7 $$ final EditorEx history = myHistoryViewer-->Line_26 $$ if (history.getDocument().getLineCount() == 0) [ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_20 $$ final int width = Math.max(inputSize.width, historySize.width)[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_46 $$ newInputHeight += delta[ CD ]
Line_33 $$ if (panelSize.height < minInputHeight) -->Line_34 $$ newInputHeight = panelSize.height[ CD ]
Line_42 $$ int oldHistoryHeight = history.getComponent().getHeight()-->Line_51 $$ if (newHistoryHeight < oldHistoryHeight) [ FD ]
Line_19 $$ int newInputHeight-->Line_40 $$ newInputHeight = panelSize.height - historyPreferredHeight[ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_33 $$ if (panelSize.height < minInputHeight) [ CD ]
Line_36 $$ newInputHeight = panelSize.height - minHistoryHeight-->Line_47 $$ input.getComponent().setBounds(0, newHistoryHeight, panelSize.width, newInputHeight)[ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_13 $$ final Dimension panelSize = parent.getSize()[ CD ]
Line_3 $$ final int componentCount = parent.getComponentCount()-->Line_4 $$ if (componentCount == 0) [ FD ]
Line_21 $$ if (isHistoryViewerForceAdditionalColumnsUsage()) -->Line_22 $$ history.getSoftWrapModel().forceAdditionalColumnsUsage()[ CD ]
Line_34 $$ newInputHeight = panelSize.height-->Line_38 $$ newInputHeight = inputPreferredHeight[ FD ]
Line_7 $$ final EditorEx history = myHistoryViewer-->Line_42 $$ int oldHistoryHeight = history.getComponent().getHeight()[ FD ]
Line_21 $$ if (isHistoryViewerForceAdditionalColumnsUsage()) -->Line_23 $$ input.getSettings().setAdditionalColumnsCount(2 + (width - inputSize.width) / EditorUtil.getSpaceWidth(Font.PLAIN, input))[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_13 $$ final Dimension panelSize = parent.getSize()[ FD ]
Line_14 $$ if (panelSize.getHeight() <= 0) -->Line_15 $$ return[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_8 $$ final EditorEx input = componentCount == 2 ? myConsoleEditor : null[ CD ]
Line_34 $$ newInputHeight = panelSize.height-->Line_40 $$ newInputHeight = panelSize.height - historyPreferredHeight[ FD ]
Line_46 $$ newInputHeight += delta-->Line_47 $$ input.getComponent().setBounds(0, newHistoryHeight, panelSize.width, newInputHeight)[ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_26 $$ if (history.getDocument().getLineCount() == 0) [ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_31 $$ final int inputPreferredHeight = input.isViewer() ? 0 : Math.max(minInputHeight, inputSize.height)[ CD ]
Line_19 $$ int newInputHeight-->Line_47 $$ input.getComponent().setBounds(0, newHistoryHeight, panelSize.width, newInputHeight)[ FD ]
Line_38 $$ newInputHeight = inputPreferredHeight-->Line_47 $$ input.getComponent().setBounds(0, newHistoryHeight, panelSize.width, newInputHeight)[ FD ]
Line_52 $$ JViewport viewport = history.getScrollPane().getViewport()-->Line_55 $$ viewport.setViewPosition(position)[ FD ]
Line_13 $$ final Dimension panelSize = parent.getSize()-->Line_14 $$ if (panelSize.getHeight() <= 0) [ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_50 $$ history.getComponent().doLayout()[ CD ]
Line_7 $$ final EditorEx history = myHistoryViewer-->Line_48 $$ history.getComponent().setBounds(0, 0, panelSize.width, newHistoryHeight)[ FD ]
Line_29 $$ int minHistoryHeight = historySize.height > 0 ? getMinHistoryLineCount() * history.getLineHeight() : 0-->Line_36 $$ newInputHeight = panelSize.height - minHistoryHeight[ FD ]
Line_19 $$ int newInputHeight-->Line_34 $$ newInputHeight = panelSize.height[ FD ]
Line_35 $$ if (panelSize.height < inputPreferredHeight) -->Line_36 $$ newInputHeight = panelSize.height - minHistoryHeight[ CD ]
Line_44 $$ int delta = newHistoryHeight - ((newHistoryHeight / history.getLineHeight()) * history.getLineHeight())-->Line_46 $$ newInputHeight += delta[ FD ]
Line_7 $$ final EditorEx history = myHistoryViewer-->Line_24 $$ history.getSettings().setAdditionalColumnsCount(2 + (width - historySize.width) / EditorUtil.getSpaceWidth(Font.PLAIN, history))[ FD ]
Line_9 $$ if (input == null) -->Line_10 $$ parent.getComponent(0).setBounds(parent.getBounds())[ CD ]
Line_7 $$ final EditorEx history = myHistoryViewer-->Line_17 $$ final Dimension historySize = history.getContentSize()[ FD ]
Line_9 $$ if (input == null) -->Line_11 $$ return[ CD ]
Line_8 $$ final EditorEx input = componentCount == 2 ? myConsoleEditor : null-->Line_9 $$ if (input == null) [ FD ]
Line_45 $$ newHistoryHeight -= delta-->Line_47 $$ input.getComponent().setBounds(0, newHistoryHeight, panelSize.width, newInputHeight)[ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_17 $$ final Dimension historySize = history.getContentSize()[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_9 $$ if (input == null) [ CD ]
Line_40 $$ newInputHeight = panelSize.height - historyPreferredHeight-->Line_46 $$ newInputHeight += delta[ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_3 $$ final int componentCount = parent.getComponentCount()[ CD ]
Line_8 $$ final EditorEx input = componentCount == 2 ? myConsoleEditor : null-->Line_30 $$ int minInputHeight = input.isViewer() ? 0 : input.getLineHeight()[ FD ]
Line_36 $$ newInputHeight = panelSize.height - minHistoryHeight-->Line_46 $$ newInputHeight += delta[ FD ]
Line_30 $$ int minInputHeight = input.isViewer() ? 0 : input.getLineHeight()-->Line_33 $$ if (panelSize.height < minInputHeight) [ FD ]
Line_31 $$ final int inputPreferredHeight = input.isViewer() ? 0 : Math.max(minInputHeight, inputSize.height)-->Line_38 $$ newInputHeight = inputPreferredHeight[ FD ]
