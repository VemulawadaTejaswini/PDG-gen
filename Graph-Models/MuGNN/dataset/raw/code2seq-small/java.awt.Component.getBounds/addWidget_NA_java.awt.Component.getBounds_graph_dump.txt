Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_83 $$ if (Position.LEFT == pos && panel.getComponentCount() == 0) [ CD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_4 $$ JPanel panel[ CD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_5 $$ if (pos == Position.RIGHT) [ CD ]
Line_12 $$ for (Component component : target.getComponents()) -->Line_18 $$ component.setBounds(r)[ FD ]
Line_83 $$ if (Position.LEFT == pos && panel.getComponentCount() == 0) -->Line_84 $$ c.setBorder(SystemInfo.isMac ? JBUI.Borders.empty(2, 0, 2, 4) : JBUI.Borders.empty())[ CD ]
Line_4 $$ JPanel panel-->Line_83 $$ if (Position.LEFT == pos && panel.getComponentCount() == 0) [ FD ]
Line_67 $$ if (before) -->Line_69 $$ updateBorder(i)[ CD ]
Line_13 $$ if (component instanceof MemoryUsagePanel) -->Line_18 $$ component.setBounds(r)[ CD ]
Line_48 $$ if (!anchor.equals("__AUTODETECT__")) -->Line_49 $$ final List<String> parts = StringUtil.split(anchor, " ")[ CD ]
Line_13 $$ if (component instanceof MemoryUsagePanel) -->Line_14 $$ Rectangle r = component.getBounds()[ CD ]
Line_28 $$ if (myLeftPanel == null) -->Line_31 $$ myLeftPanel.setLayout(new BoxLayout(myLeftPanel, BoxLayout.X_AXIS))[ CD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_44 $$ final JComponent c = wrap(widget)[ FD ]
Line_67 $$ if (before) -->Line_72 $$ panel.add(c, i + 1)[ CD ]
Line_62 $$ if (id.equalsIgnoreCase(wid)) -->Line_63 $$ final WidgetBean bean = myWidgetMap.get(id)[ CD ]
Line_37 $$ if (myCenterPanel == null) -->Line_40 $$ add(myCenterPanel, BorderLayout.CENTER)[ CD ]
Line_9 $$ myRightPanel.setLayout(new BoxLayout(myRightPanel, BoxLayout.X_AXIS) -->Line_17 $$ r.height = target.getHeight()[ FD ]
Line_5 $$ if (pos == Position.RIGHT) -->Line_27 $$ if (pos == Position.LEFT) [ CD ]
Line_6 $$ if (myRightPanel == null) -->Line_24 $$ add(myRightPanel, BorderLayout.EAST)[ CD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_27 $$ if (pos == Position.LEFT) [ FD ]
Line_4 $$ JPanel panel-->Line_68 $$ panel.add(c, i)[ FD ]
Line_66 $$ if (component == bean.component) -->Line_75 $$ installWidget(widget, pos, c, anchor)[ CD ]
Line_5 $$ if (pos == Position.RIGHT) -->Line_6 $$ if (myRightPanel == null) [ CD ]
Line_27 $$ if (pos == Position.LEFT) -->Line_37 $$ if (myCenterPanel == null) [ CD ]
Line_9 $$ myRightPanel.setLayout(new BoxLayout(myRightPanel, BoxLayout.X_AXIS) -->Line_11 $$ super.layoutContainer(target)[ CD ]
Line_13 $$ if (component instanceof MemoryUsagePanel) -->Line_17 $$ r.height = target.getHeight()[ CD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_86 $$ panel.add(c)[ CD ]
Line_4 $$ JPanel panel-->Line_45 $$ if (Position.RIGHT == pos && panel.getComponentCount() > 0) [ FD ]
Line_28 $$ if (myLeftPanel == null) -->Line_30 $$ myLeftPanel.setBorder(JBUI.Borders.empty(1, 4, 0, 1))[ CD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_87 $$ installWidget(widget, pos, c, anchor)[ CD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_49 $$ final List<String> parts = StringUtil.split(anchor, " ")[ FD ]
Line_4 $$ JPanel panel-->Line_86 $$ panel.add(c)[ FD ]
Line_90 $$ updateChildren(new ChildAction() -->Line_92 $$ UIUtil.invokeLaterIfNeeded(new Runnable() [ CD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_44 $$ final JComponent c = wrap(widget)[ CD ]
Line_50 $$ if (parts.size() < 2 || !myWidgetMap.keySet().contains(parts.get(1))) -->Line_55 $$ before = "before".equalsIgnoreCase(parts.get(0))[ CD ]
Line_92 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_95 $$ child.addWidget(widgetCopy, pos, anchor)[ CD ]
Line_90 $$ updateChildren(new ChildAction() -->Line_95 $$ child.addWidget(widgetCopy, pos, anchor)[ FD ]
Line_12 $$ for (Component component : target.getComponents()) -->Line_66 $$ if (component == bean.component) [ FD ]
Line_67 $$ if (before) -->Line_68 $$ panel.add(c, i)[ CD ]
Line_14 $$ Rectangle r = component.getBounds()-->Line_18 $$ component.setBounds(r)[ FD ]
Line_6 $$ if (myRightPanel == null) -->Line_9 $$ myRightPanel.setLayout(new BoxLayout(myRightPanel, BoxLayout.X_AXIS) [ CD ]
Line_9 $$ myRightPanel.setLayout(new BoxLayout(myRightPanel, BoxLayout.X_AXIS) -->Line_12 $$ for (Component component : target.getComponents()) [ FD ]
Line_27 $$ if (pos == Position.LEFT) -->Line_28 $$ if (myLeftPanel == null) [ CD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_101 $$ repaint()[ CD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_45 $$ if (Position.RIGHT == pos && panel.getComponentCount() > 0) [ CD ]
Line_13 $$ if (component instanceof MemoryUsagePanel) -->Line_15 $$ r.y = 0[ CD ]
Line_45 $$ if (Position.RIGHT == pos && panel.getComponentCount() > 0) -->Line_48 $$ if (!anchor.equals("__AUTODETECT__")) [ CD ]
Line_50 $$ if (parts.size() < 2 || !myWidgetMap.keySet().contains(parts.get(1))) -->Line_54 $$ wid = parts.get(1)[ CD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_48 $$ if (!anchor.equals("__AUTODETECT__")) [ FD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_88 $$ if (widget instanceof StatusBarWidget.Multiframe) [ CD ]
Line_9 $$ myRightPanel.setLayout(new BoxLayout(myRightPanel, BoxLayout.X_AXIS) -->Line_11 $$ super.layoutContainer(target)[ FD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_5 $$ if (pos == Position.RIGHT) [ FD ]
Line_37 $$ if (myCenterPanel == null) -->Line_38 $$ myCenterPanel = JBUI.Panels.simplePanel().andTransparent()[ CD ]
Line_48 $$ if (!anchor.equals("__AUTODETECT__")) -->Line_50 $$ if (parts.size() < 2 || !myWidgetMap.keySet().contains(parts.get(1))) [ CD ]
Line_4 $$ JPanel panel-->Line_72 $$ panel.add(c, i + 1)[ FD ]
Line_92 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_94 $$ StatusBarWidget widgetCopy = mfw.copy()[ CD ]
Line_28 $$ if (myLeftPanel == null) -->Line_33 $$ add(myLeftPanel, BorderLayout.WEST)[ CD ]
Line_28 $$ if (myLeftPanel == null) -->Line_32 $$ myLeftPanel.setOpaque(false)[ CD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_75 $$ installWidget(widget, pos, c, anchor)[ FD ]
Line_12 $$ for (Component component : target.getComponents()) -->Line_13 $$ if (component instanceof MemoryUsagePanel) [ FD ]
Line_66 $$ if (component == bean.component) -->Line_67 $$ if (before) [ CD ]
Line_37 $$ if (myCenterPanel == null) -->Line_39 $$ myCenterPanel.setBorder(JBUI.Borders.empty(1, 1, 0, 1))[ CD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_3 $$ myOrderedWidgets.add(widget.ID())[ FD ]
Line_66 $$ if (component == bean.component) -->Line_76 $$ return[ CD ]
Line_94 $$ StatusBarWidget widgetCopy = mfw.copy()-->Line_95 $$ child.addWidget(widgetCopy, pos, anchor)[ FD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_88 $$ if (widget instanceof StatusBarWidget.Multiframe) [ FD ]
Line_88 $$ if (widget instanceof StatusBarWidget.Multiframe) -->Line_90 $$ updateChildren(new ChildAction() [ CD ]
Line_12 $$ for (Component component : target.getComponents()) -->Line_14 $$ Rectangle r = component.getBounds()[ FD ]
Line_6 $$ if (myRightPanel == null) -->Line_23 $$ myRightPanel.setOpaque(false)[ CD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_95 $$ child.addWidget(widgetCopy, pos, anchor)[ FD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_3 $$ myOrderedWidgets.add(widget.ID())[ CD ]
Line_2 $$ private void addWidget(@NotNull final StatusBarWidget widget, @NotNull final Position pos, @NotNull final String anchor) -->Line_87 $$ installWidget(widget, pos, c, anchor)[ FD ]
Line_13 $$ if (component instanceof MemoryUsagePanel) -->Line_16 $$ r.width += SystemInfo.isMac ? 4 : 0[ CD ]
Line_6 $$ if (myRightPanel == null) -->Line_8 $$ myRightPanel.setBorder(JBUI.Borders.empty(1, 1, 0, SystemInfo.isMac ? 2 : 0))[ CD ]
Line_67 $$ if (before) -->Line_73 $$ updateBorder(ndx)[ CD ]
