Line_4 $$ if (!myCurrentTooltip.isShowing()) -->Line_5 $$ hideTooltip(true)[ CD ]
Line_9 $$ if (eventOriginator == null) -->Line_10 $$ return false[ CD ]
Line_3 $$ if (myCurrentTooltip != null) -->Line_13 $$ SwingUtilities.convertPointToScreen(point, eventOriginator)[ CD ]
Line_2 $$ private boolean isOverTip(MouseEvent e) -->Line_3 $$ if (myCurrentTooltip != null) [ CD ]
Line_8 $$ final Component eventOriginator = e.getComponent()-->Line_9 $$ if (eventOriginator == null) [ FD ]
Line_4 $$ if (!myCurrentTooltip.isShowing()) -->Line_6 $$ return false[ CD ]
Line_3 $$ if (myCurrentTooltip != null) -->Line_17 $$ return bounds.contains(point)[ CD ]
Line_3 $$ if (myCurrentTooltip != null) -->Line_12 $$ final Point point = e.getPoint()[ CD ]
Line_3 $$ if (myCurrentTooltip != null) -->Line_9 $$ if (eventOriginator == null) [ CD ]
Line_3 $$ if (myCurrentTooltip != null) -->Line_14 $$ final Rectangle bounds = myCurrentTooltip.getBounds()[ CD ]
Line_2 $$ private boolean isOverTip(MouseEvent e) -->Line_12 $$ final Point point = e.getPoint()[ FD ]
Line_14 $$ final Rectangle bounds = myCurrentTooltip.getBounds()-->Line_17 $$ return bounds.contains(point)[ FD ]
Line_3 $$ if (myCurrentTooltip != null) -->Line_4 $$ if (!myCurrentTooltip.isShowing()) [ CD ]
Line_12 $$ final Point point = e.getPoint()-->Line_13 $$ SwingUtilities.convertPointToScreen(point, eventOriginator)[ FD ]
Line_2 $$ private boolean isOverTip(MouseEvent e) -->Line_8 $$ final Component eventOriginator = e.getComponent()[ FD ]
Line_14 $$ final Rectangle bounds = myCurrentTooltip.getBounds()-->Line_16 $$ bounds.setLocation(tooltipLocationOnScreen.x, tooltipLocationOnScreen.y)[ FD ]
Line_3 $$ if (myCurrentTooltip != null) -->Line_16 $$ bounds.setLocation(tooltipLocationOnScreen.x, tooltipLocationOnScreen.y)[ CD ]
Line_12 $$ final Point point = e.getPoint()-->Line_17 $$ return bounds.contains(point)[ FD ]
Line_3 $$ if (myCurrentTooltip != null) -->Line_15 $$ final Point tooltipLocationOnScreen = myCurrentTooltip.getLocationOnScreen()[ CD ]
Line_3 $$ if (myCurrentTooltip != null) -->Line_8 $$ final Component eventOriginator = e.getComponent()[ CD ]
Line_2 $$ private boolean isOverTip(MouseEvent e) -->Line_19 $$ return false[ CD ]
Line_8 $$ final Component eventOriginator = e.getComponent()-->Line_13 $$ SwingUtilities.convertPointToScreen(point, eventOriginator)[ FD ]
