Line_8 $$ ExpandedItemRendererComponentWrapper wrapper = ExpandedItemRendererComponentWrapper.wrap(result)-->Line_15 $$ wrapper.setBounds(bounds)[ FD ]
Line_10 $$ JComponent res = ObjectUtils.tryCast(result, JComponent.class)-->Line_11 $$ if (res != null && UIUtil.getClientProperty(res, ExpandableItemsHandler.USE_RENDERER_BOUNDS) == Boolean.TRUE) [ FD ]
Line_8 $$ ExpandedItemRendererComponentWrapper wrapper = ExpandedItemRendererComponentWrapper.wrap(result)-->Line_16 $$ UIUtil.putClientProperty(wrapper, ExpandableItemsHandler.USE_RENDERER_BOUNDS, true)[ FD ]
Line_4 $$ Component result = myWrappee.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)-->Line_8 $$ ExpandedItemRendererComponentWrapper wrapper = ExpandedItemRendererComponentWrapper.wrap(result)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) -->Line_5 $$ if (!myHandler.getExpandedItems().contains(index))[ FD ]
Line_11 $$ if (res != null && UIUtil.getClientProperty(res, ExpandableItemsHandler.USE_RENDERER_BOUNDS) == Boolean.TRUE) -->Line_13 $$ bounds.translate(-insets.left, -insets.top)[ CD ]
Line_7 $$ Rectangle bounds = result.getBounds()-->Line_13 $$ bounds.translate(-insets.left, -insets.top)[ FD ]
Line_11 $$ if (res != null && UIUtil.getClientProperty(res, ExpandableItemsHandler.USE_RENDERER_BOUNDS) == Boolean.TRUE) -->Line_14 $$ bounds.grow(insets.left + insets.right, insets.top + insets.bottom)[ CD ]
Line_9 $$ if (UIUtil.getClientProperty(list, ExpandableItemsHandler.EXPANDED_RENDERER) == Boolean.TRUE) -->Line_11 $$ if (res != null && UIUtil.getClientProperty(res, ExpandableItemsHandler.USE_RENDERER_BOUNDS) == Boolean.TRUE) [ CD ]
Line_11 $$ if (res != null && UIUtil.getClientProperty(res, ExpandableItemsHandler.USE_RENDERER_BOUNDS) == Boolean.TRUE) -->Line_15 $$ wrapper.setBounds(bounds)[ CD ]
Line_4 $$ Component result = myWrappee.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)-->Line_5 $$ if (!myHandler.getExpandedItems().contains(index))[ FD ]
Line_2 $$ public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) -->Line_3 $$ list.putClientProperty(SwingUtilities2.AA_TEXT_PROPERTY_KEY, AntialiasingType.getAAHintForSwingComponent())[ FD ]
Line_2 $$ public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) -->Line_7 $$ Rectangle bounds = result.getBounds()[ CD ]
Line_5 $$ if (!myHandler.getExpandedItems().contains(index))-->Line_6 $$ return result[ CD ]
Line_2 $$ public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) -->Line_5 $$ if (!myHandler.getExpandedItems().contains(index))[ CD ]
Line_2 $$ public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) -->Line_19 $$ return wrapper[ CD ]
Line_9 $$ if (UIUtil.getClientProperty(list, ExpandableItemsHandler.EXPANDED_RENDERER) == Boolean.TRUE) -->Line_10 $$ JComponent res = ObjectUtils.tryCast(result, JComponent.class)[ CD ]
Line_2 $$ public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) -->Line_8 $$ ExpandedItemRendererComponentWrapper wrapper = ExpandedItemRendererComponentWrapper.wrap(result)[ CD ]
Line_2 $$ public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) -->Line_9 $$ if (UIUtil.getClientProperty(list, ExpandableItemsHandler.EXPANDED_RENDERER) == Boolean.TRUE) [ CD ]
Line_2 $$ public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) -->Line_4 $$ Component result = myWrappee.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) -->Line_9 $$ if (UIUtil.getClientProperty(list, ExpandableItemsHandler.EXPANDED_RENDERER) == Boolean.TRUE) [ FD ]
Line_2 $$ public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) -->Line_3 $$ list.putClientProperty(SwingUtilities2.AA_TEXT_PROPERTY_KEY, AntialiasingType.getAAHintForSwingComponent())[ CD ]
Line_2 $$ public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) -->Line_4 $$ Component result = myWrappee.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ CD ]
Line_8 $$ ExpandedItemRendererComponentWrapper wrapper = ExpandedItemRendererComponentWrapper.wrap(result)-->Line_12 $$ Insets insets = wrapper.getInsets()[ FD ]
Line_7 $$ Rectangle bounds = result.getBounds()-->Line_15 $$ wrapper.setBounds(bounds)[ FD ]
Line_4 $$ Component result = myWrappee.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)-->Line_7 $$ Rectangle bounds = result.getBounds()[ FD ]
Line_4 $$ Component result = myWrappee.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)-->Line_10 $$ JComponent res = ObjectUtils.tryCast(result, JComponent.class)[ FD ]
Line_7 $$ Rectangle bounds = result.getBounds()-->Line_14 $$ bounds.grow(insets.left + insets.right, insets.top + insets.bottom)[ FD ]
Line_11 $$ if (res != null && UIUtil.getClientProperty(res, ExpandableItemsHandler.USE_RENDERER_BOUNDS) == Boolean.TRUE) -->Line_12 $$ Insets insets = wrapper.getInsets()[ CD ]
Line_11 $$ if (res != null && UIUtil.getClientProperty(res, ExpandableItemsHandler.USE_RENDERER_BOUNDS) == Boolean.TRUE) -->Line_16 $$ UIUtil.putClientProperty(wrapper, ExpandableItemsHandler.USE_RENDERER_BOUNDS, true)[ CD ]
