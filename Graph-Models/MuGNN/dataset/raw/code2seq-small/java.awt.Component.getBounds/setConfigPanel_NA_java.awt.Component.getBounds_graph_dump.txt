Line_10 $$ FocusManager.getCurrentManager().addPropertyChangeListener("focusOwner", new PropertyChangeListener() -->Line_15 $$ final JComponent component = (JComponent) evt.getNewValue()[ FD ]
Line_6 $$ if (UIUtil.hasScrollPane(additionalConfigPanel)) -->Line_7 $$ configPanelAnchor.add(additionalConfigPanel)[ CD ]
Line_2 $$ private static void setConfigPanel(final JPanel configPanelAnchor, final ScopeToolState state) -->Line_5 $$ if (additionalConfigPanel != null) [ CD ]
Line_15 $$ final JComponent component = (JComponent) evt.getNewValue()-->Line_16 $$ if (component.isAncestorOf(pane)) [ FD ]
Line_2 $$ private static void setConfigPanel(final JPanel configPanelAnchor, final ScopeToolState state) -->Line_24 $$ UIUtil.setEnabled(configPanelAnchor, state.isEnabled(), true)[ FD ]
Line_2 $$ private static void setConfigPanel(final JPanel configPanelAnchor, final ScopeToolState state) -->Line_4 $$ final JComponent additionalConfigPanel = state.getAdditionalConfigPanel()[ CD ]
Line_12 $$ if (!(evt.getNewValue() instanceof JComponent)) -->Line_13 $$ return[ CD ]
Line_9 $$ final JScrollPane pane = ScrollPaneFactory.createScrollPane(additionalConfigPanel, SideBorder.NONE)-->Line_17 $$ pane.scrollRectToVisible(component.getBounds())[ FD ]
Line_10 $$ FocusManager.getCurrentManager().addPropertyChangeListener("focusOwner", new PropertyChangeListener() -->Line_12 $$ if (!(evt.getNewValue() instanceof JComponent)) [ FD ]
Line_10 $$ FocusManager.getCurrentManager().addPropertyChangeListener("focusOwner", new PropertyChangeListener() -->Line_12 $$ if (!(evt.getNewValue() instanceof JComponent)) [ CD ]
Line_6 $$ if (UIUtil.hasScrollPane(additionalConfigPanel)) -->Line_10 $$ FocusManager.getCurrentManager().addPropertyChangeListener("focusOwner", new PropertyChangeListener() [ CD ]
Line_15 $$ final JComponent component = (JComponent) evt.getNewValue()-->Line_17 $$ pane.scrollRectToVisible(component.getBounds())[ FD ]
Line_4 $$ final JComponent additionalConfigPanel = state.getAdditionalConfigPanel()-->Line_9 $$ final JScrollPane pane = ScrollPaneFactory.createScrollPane(additionalConfigPanel, SideBorder.NONE)[ FD ]
Line_4 $$ final JComponent additionalConfigPanel = state.getAdditionalConfigPanel()-->Line_5 $$ if (additionalConfigPanel != null) [ FD ]
Line_2 $$ private static void setConfigPanel(final JPanel configPanelAnchor, final ScopeToolState state) -->Line_3 $$ configPanelAnchor.removeAll()[ CD ]
Line_2 $$ private static void setConfigPanel(final JPanel configPanelAnchor, final ScopeToolState state) -->Line_24 $$ UIUtil.setEnabled(configPanelAnchor, state.isEnabled(), true)[ CD ]
Line_9 $$ final JScrollPane pane = ScrollPaneFactory.createScrollPane(additionalConfigPanel, SideBorder.NONE)-->Line_16 $$ if (component.isAncestorOf(pane)) [ FD ]
Line_16 $$ if (component.isAncestorOf(pane)) -->Line_17 $$ pane.scrollRectToVisible(component.getBounds())[ CD ]
Line_2 $$ private static void setConfigPanel(final JPanel configPanelAnchor, final ScopeToolState state) -->Line_4 $$ final JComponent additionalConfigPanel = state.getAdditionalConfigPanel()[ FD ]
Line_6 $$ if (UIUtil.hasScrollPane(additionalConfigPanel)) -->Line_9 $$ final JScrollPane pane = ScrollPaneFactory.createScrollPane(additionalConfigPanel, SideBorder.NONE)[ CD ]
Line_2 $$ private static void setConfigPanel(final JPanel configPanelAnchor, final ScopeToolState state) -->Line_7 $$ configPanelAnchor.add(additionalConfigPanel)[ FD ]
Line_4 $$ final JComponent additionalConfigPanel = state.getAdditionalConfigPanel()-->Line_6 $$ if (UIUtil.hasScrollPane(additionalConfigPanel)) [ FD ]
Line_2 $$ private static void setConfigPanel(final JPanel configPanelAnchor, final ScopeToolState state) -->Line_3 $$ configPanelAnchor.removeAll()[ FD ]
Line_10 $$ FocusManager.getCurrentManager().addPropertyChangeListener("focusOwner", new PropertyChangeListener() -->Line_16 $$ if (component.isAncestorOf(pane)) [ CD ]
Line_9 $$ final JScrollPane pane = ScrollPaneFactory.createScrollPane(additionalConfigPanel, SideBorder.NONE)-->Line_21 $$ configPanelAnchor.add(pane)[ FD ]
Line_10 $$ FocusManager.getCurrentManager().addPropertyChangeListener("focusOwner", new PropertyChangeListener() -->Line_15 $$ final JComponent component = (JComponent) evt.getNewValue()[ CD ]
Line_6 $$ if (UIUtil.hasScrollPane(additionalConfigPanel)) -->Line_21 $$ configPanelAnchor.add(pane)[ CD ]
Line_4 $$ final JComponent additionalConfigPanel = state.getAdditionalConfigPanel()-->Line_7 $$ configPanelAnchor.add(additionalConfigPanel)[ FD ]
Line_5 $$ if (additionalConfigPanel != null) -->Line_6 $$ if (UIUtil.hasScrollPane(additionalConfigPanel)) [ CD ]
Line_2 $$ private static void setConfigPanel(final JPanel configPanelAnchor, final ScopeToolState state) -->Line_21 $$ configPanelAnchor.add(pane)[ FD ]
