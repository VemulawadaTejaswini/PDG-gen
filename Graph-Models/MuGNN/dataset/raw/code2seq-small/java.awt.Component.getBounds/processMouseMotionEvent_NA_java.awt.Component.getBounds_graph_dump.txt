Line_21 $$ if ((myMotionMask & ANCHOR_LEFT) > 0) -->Line_28 $$ newBounds.width = oldBounds.width - offset.x[ CD ]
Line_21 $$ if ((myMotionMask & ANCHOR_LEFT) > 0) -->Line_23 $$ if (newPoint.x < screenBounds.x + DIVIDER_WIDTH) [ CD ]
Line_38 $$ if ((myMotionMask & ANCHOR_RIGHT) > 0) -->Line_40 $$ if (newPoint.x > screenBounds.width - DIVIDER_WIDTH) [ CD ]
Line_40 $$ if (newPoint.x > screenBounds.width - DIVIDER_WIDTH) -->Line_41 $$ newPoint.x = screenBounds.width[ CD ]
Line_4 $$ if (MouseEvent.MOUSE_DRAGGED == e.getID() && myLastPoint != null) -->Line_48 $$ if (e.getID() == MouseEvent.MOUSE_MOVED) [ CD ]
Line_2 $$ protected final void processMouseMotionEvent(final MouseEvent e) -->Line_50 $$ setMotionMask(e.getPoint())[ FD ]
Line_21 $$ if ((myMotionMask & ANCHOR_LEFT) > 0) -->Line_27 $$ newBounds.x = oldBounds.x + offset.x[ CD ]
Line_4 $$ if (MouseEvent.MOUSE_DRAGGED == e.getID() && myLastPoint != null) -->Line_8 $$ newPoint.x = Math.min(Math.max(newPoint.x, screenBounds.x), screenBounds.width)[ CD ]
Line_12 $$ if ((myMotionMask & ANCHOR_TOP) > 0) -->Line_14 $$ if (newPoint.y < screenBounds.y + DIVIDER_WIDTH) [ CD ]
Line_12 $$ if ((myMotionMask & ANCHOR_TOP) > 0) -->Line_18 $$ newBounds.y = oldBounds.y + offset.y[ CD ]
Line_4 $$ if (MouseEvent.MOUSE_DRAGGED == e.getID() && myLastPoint != null) -->Line_9 $$ newPoint.y = Math.min(Math.max(newPoint.y, screenBounds.y), screenBounds.height)[ CD ]
Line_48 $$ if (e.getID() == MouseEvent.MOUSE_MOVED) -->Line_49 $$ if (!myDragging) [ CD ]
Line_49 $$ if (!myDragging) -->Line_50 $$ setMotionMask(e.getPoint())[ CD ]
Line_2 $$ protected final void processMouseMotionEvent(final MouseEvent e) -->Line_5 $$ final Point newPoint = e.getPoint()[ FD ]
Line_4 $$ if (MouseEvent.MOUSE_DRAGGED == e.getID() && myLastPoint != null) -->Line_38 $$ if ((myMotionMask & ANCHOR_RIGHT) > 0) [ CD ]
Line_2 $$ protected final void processMouseMotionEvent(final MouseEvent e) -->Line_48 $$ if (e.getID() == MouseEvent.MOUSE_MOVED) [ FD ]
Line_4 $$ if (MouseEvent.MOUSE_DRAGGED == e.getID() && myLastPoint != null) -->Line_11 $$ final Rectangle newBounds = new Rectangle(oldBounds)[ CD ]
Line_23 $$ if (newPoint.x < screenBounds.x + DIVIDER_WIDTH) -->Line_24 $$ newPoint.x = screenBounds.x[ CD ]
Line_4 $$ if (MouseEvent.MOUSE_DRAGGED == e.getID() && myLastPoint != null) -->Line_30 $$ if ((myMotionMask & ANCHOR_BOTTOM) > 0) [ CD ]
Line_2 $$ protected final void processMouseMotionEvent(final MouseEvent e) -->Line_4 $$ if (MouseEvent.MOUSE_DRAGGED == e.getID() && myLastPoint != null) [ CD ]
Line_30 $$ if ((myMotionMask & ANCHOR_BOTTOM) > 0) -->Line_36 $$ newBounds.height = oldBounds.height + offset.y[ CD ]
Line_38 $$ if ((myMotionMask & ANCHOR_RIGHT) > 0) -->Line_44 $$ newBounds.width = oldBounds.width + offset.x[ CD ]
Line_5 $$ final Point newPoint = e.getPoint()-->Line_6 $$ SwingUtilities.convertPointToScreen(newPoint, this)[ FD ]
Line_4 $$ if (MouseEvent.MOUSE_DRAGGED == e.getID() && myLastPoint != null) -->Line_12 $$ if ((myMotionMask & ANCHOR_TOP) > 0) [ CD ]
Line_4 $$ if (MouseEvent.MOUSE_DRAGGED == e.getID() && myLastPoint != null) -->Line_21 $$ if ((myMotionMask & ANCHOR_LEFT) > 0) [ CD ]
Line_4 $$ if (MouseEvent.MOUSE_DRAGGED == e.getID() && myLastPoint != null) -->Line_5 $$ final Point newPoint = e.getPoint()[ CD ]
Line_12 $$ if ((myMotionMask & ANCHOR_TOP) > 0) -->Line_17 $$ final Point offset = new Point(newPoint.x - myLastPoint.x, newPoint.y - myLastPoint.y)[ CD ]
Line_2 $$ protected final void processMouseMotionEvent(final MouseEvent e) -->Line_4 $$ if (MouseEvent.MOUSE_DRAGGED == e.getID() && myLastPoint != null) [ FD ]
Line_12 $$ if ((myMotionMask & ANCHOR_TOP) > 0) -->Line_13 $$ newPoint.y = Math.min(newPoint.y, oldBounds.y + oldBounds.height - 2 * DIVIDER_WIDTH)[ CD ]
Line_4 $$ if (MouseEvent.MOUSE_DRAGGED == e.getID() && myLastPoint != null) -->Line_10 $$ final Rectangle oldBounds = FloatingDecorator.this.getBounds()[ CD ]
Line_38 $$ if ((myMotionMask & ANCHOR_RIGHT) > 0) -->Line_39 $$ newPoint.x = Math.max(newPoint.x, oldBounds.x + 2 * DIVIDER_WIDTH)[ CD ]
Line_4 $$ if (MouseEvent.MOUSE_DRAGGED == e.getID() && myLastPoint != null) -->Line_46 $$ FloatingDecorator.this.setBounds(newBounds.x, newBounds.y, newBounds.width, newBounds.height)[ CD ]
Line_12 $$ if ((myMotionMask & ANCHOR_TOP) > 0) -->Line_19 $$ newBounds.height = oldBounds.height - offset.y[ CD ]
Line_14 $$ if (newPoint.y < screenBounds.y + DIVIDER_WIDTH) -->Line_15 $$ newPoint.y = screenBounds.y[ CD ]
Line_4 $$ if (MouseEvent.MOUSE_DRAGGED == e.getID() && myLastPoint != null) -->Line_7 $$ final Rectangle screenBounds = WindowManagerEx.getInstanceEx().getScreenBounds()[ CD ]
Line_30 $$ if ((myMotionMask & ANCHOR_BOTTOM) > 0) -->Line_31 $$ newPoint.y = Math.max(newPoint.y, oldBounds.y + 2 * DIVIDER_WIDTH)[ CD ]
Line_21 $$ if ((myMotionMask & ANCHOR_LEFT) > 0) -->Line_22 $$ newPoint.x = Math.min(newPoint.x, oldBounds.x + oldBounds.width - 2 * DIVIDER_WIDTH)[ CD ]
Line_30 $$ if ((myMotionMask & ANCHOR_BOTTOM) > 0) -->Line_32 $$ if (newPoint.y > screenBounds.height - DIVIDER_WIDTH) [ CD ]
Line_32 $$ if (newPoint.y > screenBounds.height - DIVIDER_WIDTH) -->Line_33 $$ newPoint.y = screenBounds.height[ CD ]
Line_4 $$ if (MouseEvent.MOUSE_DRAGGED == e.getID() && myLastPoint != null) -->Line_6 $$ SwingUtilities.convertPointToScreen(newPoint, this)[ CD ]
Line_2 $$ protected final void processMouseMotionEvent(final MouseEvent e) -->Line_3 $$ super.processMouseMotionEvent(e)[ CD ]
Line_2 $$ protected final void processMouseMotionEvent(final MouseEvent e) -->Line_3 $$ super.processMouseMotionEvent(e)[ FD ]
