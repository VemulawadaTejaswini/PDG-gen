Line_2 $$ public void mouseDragged(MouseEvent e) -->Line_11 $$ myLastPoint.y = Math.min(Math.max(myLastPoint.y, 0), windowPane.getHeight())[ CD ]
Line_6 $$ final ToolWindowAnchor anchor = myInfo.getAnchor()-->Line_19 $$ if (anchor == ToolWindowAnchor.RIGHT) [ FD ]
Line_3 $$ if (!myDragging)-->Line_4 $$ return[ CD ]
Line_2 $$ public void mouseDragged(MouseEvent e) -->Line_23 $$ e.consume()[ CD ]
Line_2 $$ public void mouseDragged(MouseEvent e) -->Line_13 $$ if (anchor == ToolWindowAnchor.TOP) [ CD ]
Line_6 $$ final ToolWindowAnchor anchor = myInfo.getAnchor()-->Line_15 $$ if (anchor == ToolWindowAnchor.LEFT) [ FD ]
Line_13 $$ if (anchor == ToolWindowAnchor.TOP) -->Line_15 $$ if (anchor == ToolWindowAnchor.LEFT) [ CD ]
Line_5 $$ MouseEvent event = SwingUtilities.convertMouseEvent(e.getComponent(), e, MyDivider.this)-->Line_7 $$ final Point point = event.getPoint()[ FD ]
Line_2 $$ public void mouseDragged(MouseEvent e) -->Line_23 $$ e.consume()[ FD ]
Line_2 $$ public void mouseDragged(MouseEvent e) -->Line_22 $$ InternalDecorator.this.validate()[ CD ]
Line_8 $$ final Container windowPane = InternalDecorator.this.getParent()-->Line_10 $$ myLastPoint.x = Math.min(Math.max(myLastPoint.x, 0), windowPane.getWidth())[ FD ]
Line_19 $$ if (anchor == ToolWindowAnchor.RIGHT) -->Line_20 $$ InternalDecorator.this.setBounds(myLastPoint.x, 0, windowPane.getWidth() - myLastPoint.x, bounds.height)[ CD ]
Line_8 $$ final Container windowPane = InternalDecorator.this.getParent()-->Line_18 $$ InternalDecorator.this.setBounds(0, myLastPoint.y, bounds.width, windowPane.getHeight() - myLastPoint.y)[ FD ]
Line_2 $$ public void mouseDragged(MouseEvent e) -->Line_9 $$ myLastPoint = SwingUtilities.convertPoint(MyDivider.this, point, windowPane)[ CD ]
Line_8 $$ final Container windowPane = InternalDecorator.this.getParent()-->Line_20 $$ InternalDecorator.this.setBounds(myLastPoint.x, 0, windowPane.getWidth() - myLastPoint.x, bounds.height)[ FD ]
Line_7 $$ final Point point = event.getPoint()-->Line_9 $$ myLastPoint = SwingUtilities.convertPoint(MyDivider.this, point, windowPane)[ FD ]
Line_2 $$ public void mouseDragged(MouseEvent e) -->Line_7 $$ final Point point = event.getPoint()[ CD ]
Line_8 $$ final Container windowPane = InternalDecorator.this.getParent()-->Line_11 $$ myLastPoint.y = Math.min(Math.max(myLastPoint.y, 0), windowPane.getHeight())[ FD ]
Line_2 $$ public void mouseDragged(MouseEvent e) -->Line_10 $$ myLastPoint.x = Math.min(Math.max(myLastPoint.x, 0), windowPane.getWidth())[ CD ]
Line_17 $$ if (anchor == ToolWindowAnchor.BOTTOM) -->Line_18 $$ InternalDecorator.this.setBounds(0, myLastPoint.y, bounds.width, windowPane.getHeight() - myLastPoint.y)[ CD ]
Line_8 $$ final Container windowPane = InternalDecorator.this.getParent()-->Line_9 $$ myLastPoint = SwingUtilities.convertPoint(MyDivider.this, point, windowPane)[ FD ]
Line_2 $$ public void mouseDragged(MouseEvent e) -->Line_6 $$ final ToolWindowAnchor anchor = myInfo.getAnchor()[ CD ]
Line_13 $$ if (anchor == ToolWindowAnchor.TOP) -->Line_14 $$ InternalDecorator.this.setBounds(0, 0, bounds.width, myLastPoint.y)[ CD ]
Line_2 $$ public void mouseDragged(MouseEvent e) -->Line_5 $$ MouseEvent event = SwingUtilities.convertMouseEvent(e.getComponent(), e, MyDivider.this)[ CD ]
Line_15 $$ if (anchor == ToolWindowAnchor.LEFT) -->Line_17 $$ if (anchor == ToolWindowAnchor.BOTTOM) [ CD ]
Line_2 $$ public void mouseDragged(MouseEvent e) -->Line_5 $$ MouseEvent event = SwingUtilities.convertMouseEvent(e.getComponent(), e, MyDivider.this)[ FD ]
Line_2 $$ public void mouseDragged(MouseEvent e) -->Line_8 $$ final Container windowPane = InternalDecorator.this.getParent()[ CD ]
Line_17 $$ if (anchor == ToolWindowAnchor.BOTTOM) -->Line_19 $$ if (anchor == ToolWindowAnchor.RIGHT) [ CD ]
Line_15 $$ if (anchor == ToolWindowAnchor.LEFT) -->Line_16 $$ InternalDecorator.this.setBounds(0, 0, myLastPoint.x, bounds.height)[ CD ]
Line_6 $$ final ToolWindowAnchor anchor = myInfo.getAnchor()-->Line_17 $$ if (anchor == ToolWindowAnchor.BOTTOM) [ FD ]
Line_2 $$ public void mouseDragged(MouseEvent e) -->Line_3 $$ if (!myDragging)[ CD ]
Line_2 $$ public void mouseDragged(MouseEvent e) -->Line_12 $$ final Rectangle bounds = InternalDecorator.this.getBounds()[ CD ]
Line_6 $$ final ToolWindowAnchor anchor = myInfo.getAnchor()-->Line_13 $$ if (anchor == ToolWindowAnchor.TOP) [ FD ]
