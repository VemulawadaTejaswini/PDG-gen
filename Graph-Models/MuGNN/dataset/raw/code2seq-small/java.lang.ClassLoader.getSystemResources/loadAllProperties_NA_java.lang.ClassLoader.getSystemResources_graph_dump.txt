Line_9 $$ Properties props = new Properties()-->Line_19 $$ props.load(is)[ FD ]
Line_8 $$ Enumeration<URL> urls = (classLoaderToUse != null ? classLoaderToUse.getResources(resourceName) : ClassLoader.getSystemResources(resourceName))-->Line_11 $$ URL url = urls.nextElement()[ FD ]
Line_4 $$ ClassLoader classLoaderToUse = classLoader-->Line_5 $$ if (classLoaderToUse == null) [ FD ]
Line_4 $$ ClassLoader classLoaderToUse = classLoader-->Line_8 $$ Enumeration<URL> urls = (classLoaderToUse != null ? classLoaderToUse.getResources(resourceName) : ClassLoader.getSystemResources(resourceName))[ FD ]
Line_6 $$ classLoaderToUse = ClassUtils.getDefaultClassLoader()-->Line_8 $$ Enumeration<URL> urls = (classLoaderToUse != null ? classLoaderToUse.getResources(resourceName) : ClassLoader.getSystemResources(resourceName))[ FD ]
Line_10 $$ while (urls.hasMoreElements()) -->Line_11 $$ URL url = urls.nextElement()[ CD ]
Line_10 $$ while (urls.hasMoreElements()) -->Line_14 $$ InputStream is = con.getInputStream()[ CD ]
Line_5 $$ if (classLoaderToUse == null) -->Line_6 $$ classLoaderToUse = ClassUtils.getDefaultClassLoader()[ CD ]
Line_2 $$ public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException -->Line_3 $$ Assert.notNull(resourceName, "Resource name must not be null")[ FD ]
Line_16 $$ if (resourceName != null && resourceName.endsWith(XML_FILE_EXTENSION)) -->Line_19 $$ props.load(is)[ CD ]
Line_2 $$ public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException -->Line_3 $$ Assert.notNull(resourceName, "Resource name must not be null")[ CD ]
Line_12 $$ URLConnection con = url.openConnection()-->Line_14 $$ InputStream is = con.getInputStream()[ FD ]
Line_16 $$ if (resourceName != null && resourceName.endsWith(XML_FILE_EXTENSION)) -->Line_17 $$ props.loadFromXML(is)[ CD ]
Line_14 $$ InputStream is = con.getInputStream()-->Line_22 $$ is.close()[ FD ]
Line_11 $$ URL url = urls.nextElement()-->Line_12 $$ URLConnection con = url.openConnection()[ FD ]
Line_2 $$ public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException -->Line_10 $$ while (urls.hasMoreElements()) [ CD ]
Line_9 $$ Properties props = new Properties()-->Line_17 $$ props.loadFromXML(is)[ FD ]
Line_10 $$ while (urls.hasMoreElements()) -->Line_12 $$ URLConnection con = url.openConnection()[ CD ]
Line_14 $$ InputStream is = con.getInputStream()-->Line_19 $$ props.load(is)[ FD ]
Line_2 $$ public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException -->Line_8 $$ Enumeration<URL> urls = (classLoaderToUse != null ? classLoaderToUse.getResources(resourceName) : ClassLoader.getSystemResources(resourceName))[ FD ]
Line_2 $$ public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException -->Line_25 $$ return props[ CD ]
Line_10 $$ while (urls.hasMoreElements()) -->Line_13 $$ ResourceUtils.useCachesIfNecessary(con)[ CD ]
Line_8 $$ Enumeration<URL> urls = (classLoaderToUse != null ? classLoaderToUse.getResources(resourceName) : ClassLoader.getSystemResources(resourceName))-->Line_10 $$ while (urls.hasMoreElements()) [ FD ]
Line_4 $$ ClassLoader classLoaderToUse = classLoader-->Line_6 $$ classLoaderToUse = ClassUtils.getDefaultClassLoader()[ FD ]
Line_2 $$ public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException -->Line_4 $$ ClassLoader classLoaderToUse = classLoader[ CD ]
Line_2 $$ public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException -->Line_9 $$ Properties props = new Properties()[ CD ]
Line_12 $$ URLConnection con = url.openConnection()-->Line_13 $$ ResourceUtils.useCachesIfNecessary(con)[ FD ]
Line_2 $$ public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException -->Line_16 $$ if (resourceName != null && resourceName.endsWith(XML_FILE_EXTENSION)) [ FD ]
Line_14 $$ InputStream is = con.getInputStream()-->Line_17 $$ props.loadFromXML(is)[ FD ]
Line_2 $$ public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException -->Line_5 $$ if (classLoaderToUse == null) [ CD ]
Line_2 $$ public static Properties loadAllProperties(String resourceName, ClassLoader classLoader) throws IOException -->Line_8 $$ Enumeration<URL> urls = (classLoaderToUse != null ? classLoaderToUse.getResources(resourceName) : ClassLoader.getSystemResources(resourceName))[ CD ]
