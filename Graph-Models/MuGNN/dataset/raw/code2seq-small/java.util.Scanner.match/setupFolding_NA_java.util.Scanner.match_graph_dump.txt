Line_4 $$ Pattern pattern = Pattern.compile("FoldRegion ([+-])\\((\\d+):(\\d+)")-->Line_6 $$ while (scanner.findInLine(pattern) != null) [ FD ]
Line_6 $$ while (scanner.findInLine(pattern) != null) -->Line_9 $$ int startOffset = Integer.parseInt(match.group(2))[ CD ]
Line_3 $$ Scanner scanner = new Scanner(data)-->Line_6 $$ while (scanner.findInLine(pattern) != null) [ FD ]
Line_6 $$ while (scanner.findInLine(pattern) != null) -->Line_10 $$ int endOffset = Integer.parseInt(match.group(3))[ CD ]
Line_6 $$ while (scanner.findInLine(pattern) != null) -->Line_11 $$ infos.add(new Trinity(expanded, startOffset, endOffset))[ CD ]
Line_13 $$ final FoldingModel foldingModel = myEditor.getFoldingModel()-->Line_16 $$ final FoldRegion region = foldingModel.addFoldRegion(info.second, info.third, "...")[ FD ]
Line_7 $$ final MatchResult match = scanner.match()-->Line_9 $$ int startOffset = Integer.parseInt(match.group(2))[ FD ]
Line_13 $$ final FoldingModel foldingModel = myEditor.getFoldingModel()-->Line_14 $$ foldingModel.runBatchFoldingOperation(() -> [ FD ]
Line_2 $$ protected static void setupFolding(@NotNull String data) -->Line_14 $$ foldingModel.runBatchFoldingOperation(() -> [ CD ]
Line_2 $$ protected static void setupFolding(@NotNull String data) -->Line_4 $$ Pattern pattern = Pattern.compile("FoldRegion ([+-])\\((\\d+):(\\d+)")[ CD ]
Line_2 $$ protected static void setupFolding(@NotNull String data) -->Line_3 $$ Scanner scanner = new Scanner(data)[ CD ]
Line_2 $$ protected static void setupFolding(@NotNull String data) -->Line_13 $$ final FoldingModel foldingModel = myEditor.getFoldingModel()[ CD ]
Line_2 $$ protected static void setupFolding(@NotNull String data) -->Line_6 $$ while (scanner.findInLine(pattern) != null) [ CD ]
Line_3 $$ Scanner scanner = new Scanner(data)-->Line_7 $$ final MatchResult match = scanner.match()[ FD ]
Line_6 $$ while (scanner.findInLine(pattern) != null) -->Line_7 $$ final MatchResult match = scanner.match()[ CD ]
Line_5 $$ final List<Trinity<Boolean, Integer, Integer>> infos = new ArrayList()-->Line_11 $$ infos.add(new Trinity(expanded, startOffset, endOffset))[ FD ]
Line_6 $$ while (scanner.findInLine(pattern) != null) -->Line_8 $$ boolean expanded = "-".equals(match.group(1))[ CD ]
Line_7 $$ final MatchResult match = scanner.match()-->Line_8 $$ boolean expanded = "-".equals(match.group(1))[ FD ]
Line_2 $$ protected static void setupFolding(@NotNull String data) -->Line_5 $$ final List<Trinity<Boolean, Integer, Integer>> infos = new ArrayList()[ CD ]
Line_16 $$ final FoldRegion region = foldingModel.addFoldRegion(info.second, info.third, "...")-->Line_18 $$ region.setExpanded(info.first)[ FD ]
Line_7 $$ final MatchResult match = scanner.match()-->Line_10 $$ int endOffset = Integer.parseInt(match.group(3))[ FD ]
