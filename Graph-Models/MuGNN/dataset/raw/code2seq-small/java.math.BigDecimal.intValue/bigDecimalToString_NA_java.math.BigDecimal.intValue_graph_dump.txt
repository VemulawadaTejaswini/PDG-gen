Line_11 $$ for (int numConverted = 0; numConverted < MAX_CHARS; numConverted++) -->Line_17 $$ cur = cur.subtract(new BigDecimal(curCodePoint))[ CD ]
Line_13 $$ int curCodePoint = cur.intValue()-->Line_14 $$ if (0 == curCodePoint) [ FD ]
Line_11 $$ for (int numConverted = 0; numConverted < MAX_CHARS; numConverted++) -->Line_18 $$ sb.append(Character.toChars(curCodePoint))[ CD ]
Line_13 $$ int curCodePoint = cur.intValue()-->Line_18 $$ sb.append(Character.toChars(curCodePoint))[ FD ]
Line_11 $$ for (int numConverted = 0; numConverted < MAX_CHARS; numConverted++) -->Line_12 $$ cur = cur.multiply(ONE_PLACE)[ CD ]
Line_17 $$ cur = cur.subtract(new BigDecimal(curCodePoint))-->Line_13 $$ int curCodePoint = cur.intValue()[ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder()-->Line_20 $$ return sb.toString()[ FD ]
Line_9 $$ BigDecimal cur = bd.stripTrailingZeros()-->Line_13 $$ int curCodePoint = cur.intValue()[ FD ]
Line_12 $$ cur = cur.multiply(ONE_PLACE)-->Line_17 $$ cur = cur.subtract(new BigDecimal(curCodePoint))[ FD ]
Line_11 $$ for (int numConverted = 0; numConverted < MAX_CHARS; numConverted++) -->Line_13 $$ int curCodePoint = cur.intValue()[ CD ]
Line_17 $$ cur = cur.subtract(new BigDecimal(curCodePoint))-->Line_12 $$ cur = cur.multiply(ONE_PLACE)[ FD ]
Line_9 $$ BigDecimal cur = bd.stripTrailingZeros()-->Line_17 $$ cur = cur.subtract(new BigDecimal(curCodePoint))[ FD ]
Line_12 $$ cur = cur.multiply(ONE_PLACE)-->Line_13 $$ int curCodePoint = cur.intValue()[ FD ]
Line_9 $$ BigDecimal cur = bd.stripTrailingZeros()-->Line_12 $$ cur = cur.multiply(ONE_PLACE)[ FD ]
Line_11 $$ for (int numConverted = 0; numConverted < MAX_CHARS; numConverted++) -->Line_14 $$ if (0 == curCodePoint) [ CD ]
Line_10 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ sb.append(Character.toChars(curCodePoint))[ FD ]
