Line_4 $$ myEditor = new EditorTextField(document, myProject, StdFileTypes.JAVA) -->Line_12 $$ editorComponent.getActionMap().put("ENTER", new AbstractAction() [ CD ]
Line_43 $$ myEditor.addFocusListener(new FocusListener() -->Line_47 $$ if (!e.isTemporary()) [ FD ]
Line_34 $$ panel.addFocusListener(new FocusListener() -->Line_47 $$ if (!e.isTemporary()) [ FD ]
Line_24 $$ button.addActionListener(new ActionListener() -->Line_27 $$ chooser.showDialog()[ CD ]
Line_26 $$ TreeClassChooser chooser = TreeClassChooserFactory.getInstance(myProject).createInheritanceClassChooser(UIBundle.message("choose.class"), mySearchScope, null, true, true, Conditions.alwaysTrue())-->Line_27 $$ chooser.showDialog()[ FD ]
Line_4 $$ myEditor = new EditorTextField(document, myProject, StdFileTypes.JAVA) -->Line_9 $$ super.addNotify()[ CD ]
Line_12 $$ editorComponent.getActionMap().put("ENTER", new AbstractAction() -->Line_14 $$ stopCellEditing()[ CD ]
Line_2 $$ public final Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) -->Line_24 $$ button.addActionListener(new ActionListener() [ CD ]
Line_36 $$ if (!e.isTemporary() && myEditor != null) -->Line_37 $$ myEditor.requestFocus()[ CD ]
Line_47 $$ if (!e.isTemporary()) -->Line_48 $$ stopCellEditing()[ CD ]
Line_12 $$ editorComponent.getActionMap().put("ENTER", new AbstractAction() -->Line_36 $$ if (!e.isTemporary() && myEditor != null) [ FD ]
Line_34 $$ panel.addFocusListener(new FocusListener() -->Line_36 $$ if (!e.isTemporary() && myEditor != null) [ CD ]
Line_12 $$ editorComponent.getActionMap().put("ENTER", new AbstractAction() -->Line_47 $$ if (!e.isTemporary()) [ FD ]
Line_10 $$ final JComponent editorComponent = getEditor().getContentComponent()-->Line_11 $$ editorComponent.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "ENTER")[ FD ]
Line_28 $$ final PsiClass psiClass = chooser.getSelected()-->Line_29 $$ if (psiClass != null) [ FD ]
Line_34 $$ panel.addFocusListener(new FocusListener() -->Line_36 $$ if (!e.isTemporary() && myEditor != null) [ FD ]
Line_2 $$ public final Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) -->Line_20 $$ panel.setLayout(new BorderLayout())[ CD ]
Line_43 $$ myEditor.addFocusListener(new FocusListener() -->Line_47 $$ if (!e.isTemporary()) [ CD ]
Line_4 $$ myEditor = new EditorTextField(document, myProject, StdFileTypes.JAVA) -->Line_10 $$ final JComponent editorComponent = getEditor().getContentComponent()[ CD ]
Line_24 $$ button.addActionListener(new ActionListener() -->Line_29 $$ if (psiClass != null) [ CD ]
Line_2 $$ public final Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) -->Line_34 $$ panel.addFocusListener(new FocusListener() [ CD ]
Line_28 $$ final PsiClass psiClass = chooser.getSelected()-->Line_30 $$ myEditor.setText(psiClass.getQualifiedName())[ FD ]
Line_4 $$ myEditor = new EditorTextField(document, myProject, StdFileTypes.JAVA) -->Line_6 $$ return false[ CD ]
Line_4 $$ myEditor = new EditorTextField(document, myProject, StdFileTypes.JAVA) -->Line_11 $$ editorComponent.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "ENTER")[ CD ]
Line_24 $$ button.addActionListener(new ActionListener() -->Line_28 $$ final PsiClass psiClass = chooser.getSelected()[ CD ]
Line_2 $$ public final Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) -->Line_23 $$ panel.add(button, BorderLayout.EAST)[ CD ]
Line_2 $$ public final Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) -->Line_52 $$ return panel[ CD ]
Line_2 $$ public final Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) -->Line_21 $$ panel.add(myEditor)[ CD ]
Line_24 $$ button.addActionListener(new ActionListener() -->Line_26 $$ TreeClassChooser chooser = TreeClassChooserFactory.getInstance(myProject).createInheritanceClassChooser(UIBundle.message("choose.class"), mySearchScope, null, true, true, Conditions.alwaysTrue())[ CD ]
Line_2 $$ public final Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) -->Line_3 $$ final Document document = JavaReferenceEditorUtil.createDocument(value == null ? "" : (String) value, myProject, true)[ CD ]
Line_24 $$ button.addActionListener(new ActionListener() -->Line_36 $$ if (!e.isTemporary() && myEditor != null) [ FD ]
Line_2 $$ public final Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) -->Line_43 $$ myEditor.addFocusListener(new FocusListener() [ CD ]
Line_10 $$ final JComponent editorComponent = getEditor().getContentComponent()-->Line_12 $$ editorComponent.getActionMap().put("ENTER", new AbstractAction() [ FD ]
Line_24 $$ button.addActionListener(new ActionListener() -->Line_47 $$ if (!e.isTemporary()) [ FD ]
Line_29 $$ if (psiClass != null) -->Line_30 $$ myEditor.setText(psiClass.getQualifiedName())[ CD ]
Line_26 $$ TreeClassChooser chooser = TreeClassChooserFactory.getInstance(myProject).createInheritanceClassChooser(UIBundle.message("choose.class"), mySearchScope, null, true, true, Conditions.alwaysTrue())-->Line_28 $$ final PsiClass psiClass = chooser.getSelected()[ FD ]
