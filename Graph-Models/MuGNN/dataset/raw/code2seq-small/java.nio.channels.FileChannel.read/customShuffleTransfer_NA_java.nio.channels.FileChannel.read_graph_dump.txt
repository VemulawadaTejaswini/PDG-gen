Line_2 $$ long customShuffleTransfer(WritableByteChannel target, long position) throws IOException -->Line_21 $$ position += trans[ FD ]
Line_12 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(this.shuffleBufferSize)-->Line_24 $$ while (byteBuffer.hasRemaining()) [ FD ]
Line_13 $$ while (trans > 0L && (readSize = fileChannel.read(byteBuffer, this.position + position)) > 0) -->Line_14 $$ if (readSize < trans) [ FD ]
Line_10 $$ long trans = actualCount-->Line_21 $$ position += trans[ FD ]
Line_13 $$ while (trans > 0L && (readSize = fileChannel.read(byteBuffer, this.position + position)) > 0) -->Line_16 $$ position += readSize[ FD ]
Line_2 $$ long customShuffleTransfer(WritableByteChannel target, long position) throws IOException -->Line_16 $$ position += readSize[ FD ]
Line_14 $$ if (readSize < trans) -->Line_17 $$ byteBuffer.flip()[ CD ]
Line_12 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(this.shuffleBufferSize)-->Line_20 $$ byteBuffer.position(0)[ FD ]
Line_12 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(this.shuffleBufferSize)-->Line_27 $$ byteBuffer.clear()[ FD ]
Line_14 $$ if (readSize < trans) -->Line_21 $$ position += trans[ CD ]
Line_22 $$ trans = 0-->Line_21 $$ position += trans[ FD ]
Line_2 $$ long customShuffleTransfer(WritableByteChannel target, long position) throws IOException -->Line_3 $$ long actualCount = this.count - position[ CD ]
Line_14 $$ if (readSize < trans) -->Line_19 $$ byteBuffer.limit((int) trans)[ CD ]
Line_2 $$ long customShuffleTransfer(WritableByteChannel target, long position) throws IOException -->Line_7 $$ if (actualCount == 0) [ CD ]
Line_7 $$ if (actualCount == 0) -->Line_8 $$ return 0L[ CD ]
Line_14 $$ if (readSize < trans) -->Line_16 $$ position += readSize[ CD ]
Line_13 $$ while (trans > 0L && (readSize = fileChannel.read(byteBuffer, this.position + position)) > 0) -->Line_27 $$ byteBuffer.clear()[ CD ]
Line_10 $$ long trans = actualCount-->Line_14 $$ if (readSize < trans) [ FD ]
Line_11 $$ int readSize-->Line_15 $$ trans -= readSize[ FD ]
Line_12 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(this.shuffleBufferSize)-->Line_19 $$ byteBuffer.limit((int) trans)[ FD ]
Line_2 $$ long customShuffleTransfer(WritableByteChannel target, long position) throws IOException -->Line_12 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(this.shuffleBufferSize)[ CD ]
Line_11 $$ int readSize-->Line_14 $$ if (readSize < trans) [ FD ]
Line_11 $$ int readSize-->Line_13 $$ while (trans > 0L && (readSize = fileChannel.read(byteBuffer, this.position + position)) > 0) [ FD ]
Line_10 $$ long trans = actualCount-->Line_22 $$ trans = 0[ FD ]
Line_12 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(this.shuffleBufferSize)-->Line_13 $$ while (trans > 0L && (readSize = fileChannel.read(byteBuffer, this.position + position)) > 0) [ FD ]
Line_15 $$ trans -= readSize-->Line_22 $$ trans = 0[ FD ]
Line_12 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(this.shuffleBufferSize)-->Line_25 $$ target.write(byteBuffer)[ FD ]
Line_2 $$ long customShuffleTransfer(WritableByteChannel target, long position) throws IOException -->Line_29 $$ return actualCount - trans[ CD ]
Line_13 $$ while (trans > 0L && (readSize = fileChannel.read(byteBuffer, this.position + position)) > 0) -->Line_14 $$ if (readSize < trans) [ CD ]
Line_10 $$ long trans = actualCount-->Line_15 $$ trans -= readSize[ FD ]
Line_11 $$ int readSize-->Line_16 $$ position += readSize[ FD ]
Line_16 $$ position += readSize-->Line_21 $$ position += trans[ FD ]
Line_13 $$ while (trans > 0L && (readSize = fileChannel.read(byteBuffer, this.position + position)) > 0) -->Line_15 $$ trans -= readSize[ FD ]
Line_12 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(this.shuffleBufferSize)-->Line_17 $$ byteBuffer.flip()[ FD ]
Line_15 $$ trans -= readSize-->Line_21 $$ position += trans[ FD ]
Line_2 $$ long customShuffleTransfer(WritableByteChannel target, long position) throws IOException -->Line_11 $$ int readSize[ CD ]
Line_13 $$ while (trans > 0L && (readSize = fileChannel.read(byteBuffer, this.position + position)) > 0) -->Line_24 $$ while (byteBuffer.hasRemaining()) [ CD ]
Line_15 $$ trans -= readSize-->Line_14 $$ if (readSize < trans) [ FD ]
Line_14 $$ if (readSize < trans) -->Line_15 $$ trans -= readSize[ CD ]
Line_14 $$ if (readSize < trans) -->Line_20 $$ byteBuffer.position(0)[ CD ]
Line_2 $$ long customShuffleTransfer(WritableByteChannel target, long position) throws IOException -->Line_25 $$ target.write(byteBuffer)[ FD ]
Line_2 $$ long customShuffleTransfer(WritableByteChannel target, long position) throws IOException -->Line_10 $$ long trans = actualCount[ CD ]
Line_2 $$ long customShuffleTransfer(WritableByteChannel target, long position) throws IOException -->Line_13 $$ while (trans > 0L && (readSize = fileChannel.read(byteBuffer, this.position + position)) > 0) [ CD ]
Line_14 $$ if (readSize < trans) -->Line_22 $$ trans = 0[ CD ]
Line_24 $$ while (byteBuffer.hasRemaining()) -->Line_25 $$ target.write(byteBuffer)[ CD ]
Line_3 $$ long actualCount = this.count - position-->Line_7 $$ if (actualCount == 0) [ FD ]
Line_2 $$ long customShuffleTransfer(WritableByteChannel target, long position) throws IOException -->Line_4 $$ if (actualCount < 0 || position < 0) [ CD ]
Line_22 $$ trans = 0-->Line_14 $$ if (readSize < trans) [ FD ]
