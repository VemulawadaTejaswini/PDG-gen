Line_2 $$ private static int readSingleChunk(FileChannel channel, long channelPosition, ByteBuffer dest) throws IOException -->Line_4 $$ while (dest.hasRemaining()) [ FD ]
Line_2 $$ private static int readSingleChunk(FileChannel channel, long channelPosition, ByteBuffer dest) throws IOException -->Line_5 $$ int read = channel.read(dest, channelPosition)[ FD ]
Line_5 $$ int read = channel.read(dest, channelPosition)-->Line_11 $$ channelPosition += read[ FD ]
Line_4 $$ while (dest.hasRemaining()) -->Line_5 $$ int read = channel.read(dest, channelPosition)[ CD ]
Line_3 $$ int bytesRead = 0-->Line_10 $$ bytesRead += read[ FD ]
Line_5 $$ int read = channel.read(dest, channelPosition)-->Line_10 $$ bytesRead += read[ FD ]
Line_4 $$ while (dest.hasRemaining()) -->Line_10 $$ bytesRead += read[ CD ]
Line_2 $$ private static int readSingleChunk(FileChannel channel, long channelPosition, ByteBuffer dest) throws IOException -->Line_4 $$ while (dest.hasRemaining()) [ CD ]
Line_11 $$ channelPosition += read-->Line_5 $$ int read = channel.read(dest, channelPosition)[ FD ]
Line_2 $$ private static int readSingleChunk(FileChannel channel, long channelPosition, ByteBuffer dest) throws IOException -->Line_13 $$ return bytesRead[ CD ]
Line_2 $$ private static int readSingleChunk(FileChannel channel, long channelPosition, ByteBuffer dest) throws IOException -->Line_11 $$ channelPosition += read[ FD ]
Line_2 $$ private static int readSingleChunk(FileChannel channel, long channelPosition, ByteBuffer dest) throws IOException -->Line_3 $$ int bytesRead = 0[ CD ]
Line_4 $$ while (dest.hasRemaining()) -->Line_6 $$ if (read < 0) [ CD ]
Line_4 $$ while (dest.hasRemaining()) -->Line_11 $$ channelPosition += read[ CD ]
Line_6 $$ if (read < 0) -->Line_7 $$ return read[ CD ]
Line_5 $$ int read = channel.read(dest, channelPosition)-->Line_6 $$ if (read < 0) [ FD ]
