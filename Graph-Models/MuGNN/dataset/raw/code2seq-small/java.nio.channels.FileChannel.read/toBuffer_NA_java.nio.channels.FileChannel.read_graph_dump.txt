Line_2 $$ private ByteBuffer toBuffer() throws IOException -->Line_9 $$ bytes.position(0)[ CD ]
Line_5 $$ ByteBuffer bytes = ByteBuffer.allocateDirect(listLength * 4)-->Line_10 $$ assert bytes.limit() == listLength * 4[ FD ]
Line_5 $$ ByteBuffer bytes = ByteBuffer.allocateDirect(listLength * 4)-->Line_6 $$ int read = data.read(bytes, base + 8)[ FD ]
Line_2 $$ private ByteBuffer toBuffer() throws IOException -->Line_6 $$ int read = data.read(bytes, base + 8)[ CD ]
Line_2 $$ private ByteBuffer toBuffer() throws IOException -->Line_7 $$ if (read != listLength * 4)[ CD ]
Line_2 $$ private ByteBuffer toBuffer() throws IOException -->Line_5 $$ ByteBuffer bytes = ByteBuffer.allocateDirect(listLength * 4)[ CD ]
Line_6 $$ int read = data.read(bytes, base + 8)-->Line_7 $$ if (read != listLength * 4)[ FD ]
Line_2 $$ private ByteBuffer toBuffer() throws IOException -->Line_3 $$ assertListLength()[ CD ]
Line_5 $$ ByteBuffer bytes = ByteBuffer.allocateDirect(listLength * 4)-->Line_9 $$ bytes.position(0)[ FD ]
Line_2 $$ private ByteBuffer toBuffer() throws IOException -->Line_11 $$ return bytes[ CD ]
Line_2 $$ private ByteBuffer toBuffer() throws IOException -->Line_4 $$ int listLength = size[ CD ]
