Line_6 $$ try (IndexInput input = dir.openInput(fileToCorrupt.getFileName().toString(), IOContext.DEFAULT)) -->Line_26 $$ checksumAfterCorruption = input.getChecksum()[ FD ]
Line_11 $$ long filePointer = raf.position()-->Line_19 $$ logger.debug("Corrupting file [ FD ]
Line_12 $$ ByteBuffer bb = ByteBuffer.wrap(new byte[1])-->Line_13 $$ raf.read(bb)[ FD ]
Line_16 $$ byte newValue = (byte) ~oldValue-->Line_17 $$ bb.put(0, newValue)[ FD ]
Line_21 $$ long checksumAfterCorruption-->Line_26 $$ checksumAfterCorruption = input.getChecksum()[ FD ]
Line_12 $$ ByteBuffer bb = ByteBuffer.wrap(new byte[1])-->Line_18 $$ raf.write(bb, filePointer)[ FD ]
Line_3 $$ Path fileToCorrupt = file-->Line_19 $$ logger.debug("Corrupting file [ FD ]
Line_29 $$ StringBuilder msg = new StringBuilder()-->Line_35 $$ assumeTrue("Checksum collision - " + msg.toString(), checksumAfterCorruption != checksumBeforeCorruption || actualChecksumAfterCorruption != checksumBeforeCorruption)[ FD ]
Line_3 $$ Path fileToCorrupt = file-->Line_33 $$ msg.append(" file: ").append(fileToCorrupt.getFileName().toString()).append(" length: ").append(dir.fileLength(fileToCorrupt.getFileName().toString()))[ FD ]
Line_3 $$ Path fileToCorrupt = file-->Line_4 $$ try (final SimpleFSDirectory dir = new SimpleFSDirectory(fileToCorrupt.getParent())) [ FD ]
Line_2 $$ public static void corruptFile(Path file, ESLogger logger) throws IOException -->Line_34 $$ logger.debug(msg.toString())[ FD ]
Line_16 $$ byte newValue = (byte) ~oldValue-->Line_19 $$ logger.debug("Corrupting file [ FD ]
Line_6 $$ try (IndexInput input = dir.openInput(fileToCorrupt.getFileName().toString(), IOContext.DEFAULT)) -->Line_7 $$ checksumBeforeCorruption = CodecUtil.retrieveChecksum(input)[ FD ]
Line_21 $$ long checksumAfterCorruption-->Line_31 $$ msg.append(" after: [").append(checksumAfterCorruption).append("]")[ FD ]
Line_29 $$ StringBuilder msg = new StringBuilder()-->Line_32 $$ msg.append(" checksum value after corruption: ").append(actualChecksumAfterCorruption).append("]")[ FD ]
Line_12 $$ ByteBuffer bb = ByteBuffer.wrap(new byte[1])-->Line_15 $$ byte oldValue = bb.get(0)[ FD ]
Line_5 $$ long checksumBeforeCorruption-->Line_7 $$ checksumBeforeCorruption = CodecUtil.retrieveChecksum(input)[ FD ]
Line_9 $$ try (FileChannel raf = FileChannel.open(fileToCorrupt, StandardOpenOption.READ, StandardOpenOption.WRITE)) -->Line_10 $$ raf.position(randomIntBetween(0, (int) Math.min(Integer.MAX_VALUE, raf.size() - 1)))[ FD ]
Line_4 $$ try (final SimpleFSDirectory dir = new SimpleFSDirectory(fileToCorrupt.getParent())) -->Line_23 $$ try (ChecksumIndexInput input = dir.openChecksumInput(fileToCorrupt.getFileName().toString(), IOContext.DEFAULT)) [ FD ]
Line_3 $$ Path fileToCorrupt = file-->Line_6 $$ try (IndexInput input = dir.openInput(fileToCorrupt.getFileName().toString(), IOContext.DEFAULT)) [ FD ]
Line_4 $$ try (final SimpleFSDirectory dir = new SimpleFSDirectory(fileToCorrupt.getParent())) -->Line_6 $$ try (IndexInput input = dir.openInput(fileToCorrupt.getFileName().toString(), IOContext.DEFAULT)) [ FD ]
Line_6 $$ try (IndexInput input = dir.openInput(fileToCorrupt.getFileName().toString(), IOContext.DEFAULT)) -->Line_25 $$ input.seek(input.length() - 8)[ FD ]
Line_29 $$ StringBuilder msg = new StringBuilder()-->Line_30 $$ msg.append("Checksum before: [").append(checksumBeforeCorruption).append("]")[ FD ]
Line_9 $$ try (FileChannel raf = FileChannel.open(fileToCorrupt, StandardOpenOption.READ, StandardOpenOption.WRITE)) -->Line_18 $$ raf.write(bb, filePointer)[ FD ]
Line_29 $$ StringBuilder msg = new StringBuilder()-->Line_31 $$ msg.append(" after: [").append(checksumAfterCorruption).append("]")[ FD ]
Line_27 $$ actualChecksumAfterCorruption = input.readLong()-->Line_32 $$ msg.append(" checksum value after corruption: ").append(actualChecksumAfterCorruption).append("]")[ FD ]
Line_9 $$ try (FileChannel raf = FileChannel.open(fileToCorrupt, StandardOpenOption.READ, StandardOpenOption.WRITE)) -->Line_11 $$ long filePointer = raf.position()[ FD ]
Line_2 $$ public static void corruptFile(Path file, ESLogger logger) throws IOException -->Line_19 $$ logger.debug("Corrupting file [ FD ]
Line_4 $$ try (final SimpleFSDirectory dir = new SimpleFSDirectory(fileToCorrupt.getParent())) -->Line_33 $$ msg.append(" file: ").append(fileToCorrupt.getFileName().toString()).append(" length: ").append(dir.fileLength(fileToCorrupt.getFileName().toString()))[ FD ]
Line_2 $$ public static void corruptFile(Path file, ESLogger logger) throws IOException -->Line_3 $$ Path fileToCorrupt = file[ CD ]
Line_9 $$ try (FileChannel raf = FileChannel.open(fileToCorrupt, StandardOpenOption.READ, StandardOpenOption.WRITE)) -->Line_13 $$ raf.read(bb)[ FD ]
Line_22 $$ long actualChecksumAfterCorruption-->Line_27 $$ actualChecksumAfterCorruption = input.readLong()[ FD ]
Line_5 $$ long checksumBeforeCorruption-->Line_30 $$ msg.append("Checksum before: [").append(checksumBeforeCorruption).append("]")[ FD ]
Line_7 $$ checksumBeforeCorruption = CodecUtil.retrieveChecksum(input)-->Line_30 $$ msg.append("Checksum before: [").append(checksumBeforeCorruption).append("]")[ FD ]
Line_15 $$ byte oldValue = bb.get(0)-->Line_16 $$ byte newValue = (byte) ~oldValue[ FD ]
Line_26 $$ checksumAfterCorruption = input.getChecksum()-->Line_31 $$ msg.append(" after: [").append(checksumAfterCorruption).append("]")[ FD ]
Line_3 $$ Path fileToCorrupt = file-->Line_9 $$ try (FileChannel raf = FileChannel.open(fileToCorrupt, StandardOpenOption.READ, StandardOpenOption.WRITE)) [ FD ]
Line_22 $$ long actualChecksumAfterCorruption-->Line_32 $$ msg.append(" checksum value after corruption: ").append(actualChecksumAfterCorruption).append("]")[ FD ]
Line_15 $$ byte oldValue = bb.get(0)-->Line_19 $$ logger.debug("Corrupting file [ FD ]
Line_11 $$ long filePointer = raf.position()-->Line_18 $$ raf.write(bb, filePointer)[ FD ]
Line_3 $$ Path fileToCorrupt = file-->Line_23 $$ try (ChecksumIndexInput input = dir.openChecksumInput(fileToCorrupt.getFileName().toString(), IOContext.DEFAULT)) [ FD ]
Line_6 $$ try (IndexInput input = dir.openInput(fileToCorrupt.getFileName().toString(), IOContext.DEFAULT)) -->Line_24 $$ assertThat(input.getFilePointer(), is(0l))[ FD ]
Line_12 $$ ByteBuffer bb = ByteBuffer.wrap(new byte[1])-->Line_14 $$ bb.flip()[ FD ]
Line_29 $$ StringBuilder msg = new StringBuilder()-->Line_33 $$ msg.append(" file: ").append(fileToCorrupt.getFileName().toString()).append(" length: ").append(dir.fileLength(fileToCorrupt.getFileName().toString()))[ FD ]
Line_12 $$ ByteBuffer bb = ByteBuffer.wrap(new byte[1])-->Line_17 $$ bb.put(0, newValue)[ FD ]
Line_6 $$ try (IndexInput input = dir.openInput(fileToCorrupt.getFileName().toString(), IOContext.DEFAULT)) -->Line_27 $$ actualChecksumAfterCorruption = input.readLong()[ FD ]
Line_29 $$ StringBuilder msg = new StringBuilder()-->Line_34 $$ logger.debug(msg.toString())[ FD ]
