Line_120 $$ if (arrowIcon != null) -->Line_121 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) [ CD ]
Line_5 $$ ButtonModel buttonmodel = jmenuitem.getModel()-->Line_77 $$ if (buttonmodel.isEnabled()) [ FD ]
Line_110 $$ if (disabledForeground != null) -->Line_111 $$ g.setColor(disabledForeground)[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_21 $$ FontMetrics fontmetrics = g.getFontMetrics(font1)[ FD ]
Line_27 $$ keyStrokeText = getKeyStrokeText(jmenuitem.getAccelerator())-->Line_117 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x - 1, (c.y + fontmetrics.getAscent()) - 1)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_5 $$ ButtonModel buttonmodel = jmenuitem.getModel()[ CD ]
Line_21 $$ FontMetrics fontmetrics = g.getFontMetrics(font1)-->Line_109 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ FD ]
Line_35 $$ if (UIUtil.isUnderAquaLookAndFeel()) -->Line_39 $$ if (icon2 != null && !(UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())) [ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_21 $$ FontMetrics fontmetrics = g.getFontMetrics(font1)[ CD ]
Line_7 $$ Icon icon1 = getIcon()-->Line_67 $$ icon1 = jmenuitem.getPressedIcon()[ FD ]
Line_21 $$ FontMetrics fontmetrics = g.getFontMetrics(font1)-->Line_29 $$ String s1 = layoutMenuItem(fontmetrics, jmenuitem.getText(), fontmetrics1, keyStrokeText, icon1, icon2, arrowIcon, jmenuitem.getVerticalAlignment(), jmenuitem.getHorizontalAlignment(), jmenuitem.getVerticalTextPosition(), jmenuitem.getHorizontalTextPosition(), f, l, j, c, h, d, jmenuitem.getText() != null ? defaultTextIconGap : 0, defaultTextIconGap)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_36 $$ myAquaSelectedBackgroundPainter.paintBorder(comp, g, 0, 0, j1, k1)[ FD ]
Line_66 $$ if (buttonmodel.isPressed() && buttonmodel.isArmed()) -->Line_67 $$ icon1 = jmenuitem.getPressedIcon()[ CD ]
Line_67 $$ icon1 = jmenuitem.getPressedIcon()-->Line_72 $$ if (icon1 != null) [ FD ]
Line_25 $$ keyStrokeText = ((ActionMenuItem) jmenuitem).getFirstShortcutText()-->Line_97 $$ if (keyStrokeText != null && !keyStrokeText.isEmpty()) [ FD ]
Line_100 $$ if (UIUtil.isUnderAquaBasedLookAndFeel() && (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected())) -->Line_103 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) [ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_129 $$ g.setFont(font)[ CD ]
Line_5 $$ ButtonModel buttonmodel = jmenuitem.getModel()-->Line_100 $$ if (UIUtil.isUnderAquaBasedLookAndFeel() && (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected())) [ FD ]
Line_35 $$ if (UIUtil.isUnderAquaLookAndFeel()) -->Line_38 $$ g.setColor(selectionBackground)[ CD ]
Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp-->Line_114 $$ g.setColor(jmenuitem.getBackground().brighter())[ FD ]
Line_27 $$ keyStrokeText = getKeyStrokeText(jmenuitem.getAccelerator())-->Line_97 $$ if (keyStrokeText != null && !keyStrokeText.isEmpty()) [ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_98 $$ g.setFont(acceleratorFont)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_9 $$ int j1 = jmenuitem.getWidth()[ CD ]
Line_19 $$ Font font1 = comp.getFont()-->Line_21 $$ FontMetrics fontmetrics = g.getFontMetrics(font1)[ FD ]
Line_85 $$ final Object disabledForeground = UIUtil.getMenuItemDisabledForegroundObject()-->Line_86 $$ if (disabledForeground instanceof Color) [ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_20 $$ g.setFont(font1)[ CD ]
Line_6 $$ int mnemonicIndex = jmenuitem.getDisplayedMnemonicIndex()-->Line_83 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent())[ FD ]
Line_110 $$ if (disabledForeground != null) -->Line_116 $$ g.setColor(jmenuitem.getBackground().darker())[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_122 $$ g.setColor(selectionForeground)[ FD ]
Line_25 $$ keyStrokeText = ((ActionMenuItem) jmenuitem).getFirstShortcutText()-->Line_29 $$ String s1 = layoutMenuItem(fontmetrics, jmenuitem.getText(), fontmetrics1, keyStrokeText, icon1, icon2, arrowIcon, jmenuitem.getVerticalAlignment(), jmenuitem.getHorizontalAlignment(), jmenuitem.getVerticalTextPosition(), jmenuitem.getHorizontalTextPosition(), f, l, j, c, h, d, jmenuitem.getText() != null ? defaultTextIconGap : 0, defaultTextIconGap)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_114 $$ g.setColor(jmenuitem.getBackground().brighter())[ FD ]
Line_35 $$ if (UIUtil.isUnderAquaLookAndFeel()) -->Line_36 $$ myAquaSelectedBackgroundPainter.paintBorder(comp, g, 0, 0, j1, k1)[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_10 $$ int k1 = jmenuitem.getHeight()[ CD ]
Line_27 $$ keyStrokeText = getKeyStrokeText(jmenuitem.getAccelerator())-->Line_112 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_115 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_38 $$ g.setColor(selectionBackground)[ FD ]
Line_25 $$ keyStrokeText = ((ActionMenuItem) jmenuitem).getFirstShortcutText()-->Line_117 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x - 1, (c.y + fontmetrics.getAscent()) - 1)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_19 $$ Font font1 = comp.getFont()[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_106 $$ g.setColor(acceleratorForeground)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_11 $$ Insets insets = comp.getInsets()[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_8 $$ Icon icon2 = getAllowedIcon()[ CD ]
Line_25 $$ keyStrokeText = ((ActionMenuItem) jmenuitem).getFirstShortcutText()-->Line_112 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_51 $$ g.setColor(selectionForeground)[ FD ]
Line_6 $$ int mnemonicIndex = jmenuitem.getDisplayedMnemonicIndex()-->Line_93 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x - 1, (j.y + fontmetrics.getAscent()) - 1)[ FD ]
Line_50 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) -->Line_51 $$ g.setColor(selectionForeground)[ CD ]
Line_29 $$ String s1 = layoutMenuItem(fontmetrics, jmenuitem.getText(), fontmetrics1, keyStrokeText, icon1, icon2, arrowIcon, jmenuitem.getVerticalAlignment(), jmenuitem.getHorizontalAlignment(), jmenuitem.getVerticalTextPosition(), jmenuitem.getHorizontalTextPosition(), f, l, j, c, h, d, jmenuitem.getText() != null ? defaultTextIconGap : 0, defaultTextIconGap)-->Line_88 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent())[ FD ]
Line_77 $$ if (buttonmodel.isEnabled()) -->Line_85 $$ final Object disabledForeground = UIUtil.getMenuItemDisabledForegroundObject()[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_93 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x - 1, (j.y + fontmetrics.getAscent()) - 1)[ FD ]
Line_99 $$ if (buttonmodel.isEnabled()) -->Line_110 $$ if (disabledForeground != null) [ CD ]
Line_110 $$ if (disabledForeground != null) -->Line_112 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ CD ]
Line_59 $$ if (menuItem.isArmed()) -->Line_60 $$ drawIconBorder(g)[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_73 $$ icon1.paintIcon(comp, g, l.x, l.y)[ FD ]
Line_25 $$ keyStrokeText = ((ActionMenuItem) jmenuitem).getFirstShortcutText()-->Line_115 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_30 $$ Color color2 = g.getColor()[ FD ]
Line_8 $$ Icon icon2 = getAllowedIcon()-->Line_49 $$ if (icon2 != null) [ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_20 $$ g.setFont(font1)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_40 $$ g.fillRect(k, 0, j1 - k, k1)[ FD ]
Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp-->Line_5 $$ ButtonModel buttonmodel = jmenuitem.getModel()[ FD ]
Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp-->Line_24 $$ if (jmenuitem instanceof ActionMenuItem) [ FD ]
Line_49 $$ if (icon2 != null) -->Line_58 $$ g.setColor(color2)[ CD ]
Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp-->Line_65 $$ icon1 = jmenuitem.getDisabledIcon()[ FD ]
Line_5 $$ ButtonModel buttonmodel = jmenuitem.getModel()-->Line_78 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) [ FD ]
Line_77 $$ if (buttonmodel.isEnabled()) -->Line_83 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent())[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_29 $$ String s1 = layoutMenuItem(fontmetrics, jmenuitem.getText(), fontmetrics1, keyStrokeText, icon1, icon2, arrowIcon, jmenuitem.getVerticalAlignment(), jmenuitem.getHorizontalAlignment(), jmenuitem.getVerticalTextPosition(), jmenuitem.getHorizontalTextPosition(), f, l, j, c, h, d, jmenuitem.getText() != null ? defaultTextIconGap : 0, defaultTextIconGap)[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_90 $$ g.setColor(jmenuitem.getBackground().brighter())[ FD ]
Line_86 $$ if (disabledForeground instanceof Color) -->Line_91 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent())[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_92 $$ g.setColor(jmenuitem.getBackground().darker())[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_112 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_17 $$ f.height -= insets.bottom + f.y[ CD ]
Line_39 $$ if (icon2 != null && !(UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())) -->Line_43 $$ g.setColor(selectionBackground)[ CD ]
Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp-->Line_9 $$ int j1 = jmenuitem.getWidth()[ FD ]
Line_65 $$ icon1 = jmenuitem.getDisabledIcon()-->Line_73 $$ icon1.paintIcon(comp, g, l.x, l.y)[ FD ]
Line_27 $$ keyStrokeText = getKeyStrokeText(jmenuitem.getAccelerator())-->Line_109 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ FD ]
Line_5 $$ ButtonModel buttonmodel = jmenuitem.getModel()-->Line_50 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) [ FD ]
Line_29 $$ String s1 = layoutMenuItem(fontmetrics, jmenuitem.getText(), fontmetrics1, keyStrokeText, icon1, icon2, arrowIcon, jmenuitem.getVerticalAlignment(), jmenuitem.getHorizontalAlignment(), jmenuitem.getVerticalTextPosition(), jmenuitem.getHorizontalTextPosition(), f, l, j, c, h, d, jmenuitem.getText() != null ? defaultTextIconGap : 0, defaultTextIconGap)-->Line_91 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent())[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_3 $$ UISettings.setupAntialiasing(g)[ FD ]
Line_85 $$ final Object disabledForeground = UIUtil.getMenuItemDisabledForegroundObject()-->Line_110 $$ if (disabledForeground != null) [ FD ]
Line_31 $$ if (comp.isOpaque() || (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())) -->Line_32 $$ g.setColor(jmenuitem.getBackground())[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_60 $$ drawIconBorder(g)[ FD ]
Line_23 $$ String keyStrokeText-->Line_29 $$ String s1 = layoutMenuItem(fontmetrics, jmenuitem.getText(), fontmetrics1, keyStrokeText, icon1, icon2, arrowIcon, jmenuitem.getVerticalAlignment(), jmenuitem.getHorizontalAlignment(), jmenuitem.getVerticalTextPosition(), jmenuitem.getHorizontalTextPosition(), f, l, j, c, h, d, jmenuitem.getText() != null ? defaultTextIconGap : 0, defaultTextIconGap)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_91 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent())[ FD ]
Line_23 $$ String keyStrokeText-->Line_25 $$ keyStrokeText = ((ActionMenuItem) jmenuitem).getFirstShortcutText()[ FD ]
Line_120 $$ if (arrowIcon != null) -->Line_124 $$ if (useCheckAndArrow()) [ CD ]
Line_76 $$ if (s1 != null && s1.length() > 0) -->Line_77 $$ if (buttonmodel.isEnabled()) [ CD ]
Line_103 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) -->Line_106 $$ g.setColor(acceleratorForeground)[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_6 $$ int mnemonicIndex = jmenuitem.getDisplayedMnemonicIndex()[ CD ]
Line_30 $$ Color color2 = g.getColor()-->Line_47 $$ g.setColor(color2)[ FD ]
Line_29 $$ String s1 = layoutMenuItem(fontmetrics, jmenuitem.getText(), fontmetrics1, keyStrokeText, icon1, icon2, arrowIcon, jmenuitem.getVerticalAlignment(), jmenuitem.getHorizontalAlignment(), jmenuitem.getVerticalTextPosition(), jmenuitem.getHorizontalTextPosition(), f, l, j, c, h, d, jmenuitem.getText() != null ? defaultTextIconGap : 0, defaultTextIconGap)-->Line_76 $$ if (s1 != null && s1.length() > 0) [ FD ]
Line_86 $$ if (disabledForeground instanceof Color) -->Line_90 $$ g.setColor(jmenuitem.getBackground().brighter())[ CD ]
Line_10 $$ int k1 = jmenuitem.getHeight()-->Line_33 $$ g.fillRect(0, 0, j1, k1)[ FD ]
Line_30 $$ Color color2 = g.getColor()-->Line_128 $$ g.setColor(color2)[ FD ]
Line_65 $$ icon1 = jmenuitem.getDisabledIcon()-->Line_72 $$ if (icon1 != null) [ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_42 $$ g.fillRect(0, 0, j1, k1)[ FD ]
Line_24 $$ if (jmenuitem instanceof ActionMenuItem) -->Line_27 $$ keyStrokeText = getKeyStrokeText(jmenuitem.getAccelerator())[ CD ]
Line_8 $$ Icon icon2 = getAllowedIcon()-->Line_29 $$ String s1 = layoutMenuItem(fontmetrics, jmenuitem.getText(), fontmetrics1, keyStrokeText, icon1, icon2, arrowIcon, jmenuitem.getVerticalAlignment(), jmenuitem.getHorizontalAlignment(), jmenuitem.getVerticalTextPosition(), jmenuitem.getHorizontalTextPosition(), f, l, j, c, h, d, jmenuitem.getText() != null ? defaultTextIconGap : 0, defaultTextIconGap)[ FD ]
Line_65 $$ icon1 = jmenuitem.getDisabledIcon()-->Line_69 $$ icon1 = jmenuitem.getIcon()[ FD ]
Line_9 $$ int j1 = jmenuitem.getWidth()-->Line_13 $$ f.setBounds(0, 0, j1, k1)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_83 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent())[ FD ]
Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp-->Line_116 $$ g.setColor(jmenuitem.getBackground().darker())[ FD ]
Line_7 $$ Icon icon1 = getIcon()-->Line_29 $$ String s1 = layoutMenuItem(fontmetrics, jmenuitem.getText(), fontmetrics1, keyStrokeText, icon1, icon2, arrowIcon, jmenuitem.getVerticalAlignment(), jmenuitem.getHorizontalAlignment(), jmenuitem.getVerticalTextPosition(), jmenuitem.getHorizontalTextPosition(), f, l, j, c, h, d, jmenuitem.getText() != null ? defaultTextIconGap : 0, defaultTextIconGap)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_120 $$ if (arrowIcon != null) [ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp[ CD ]
Line_31 $$ if (comp.isOpaque() || (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())) -->Line_34 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) [ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_76 $$ if (s1 != null && s1.length() > 0) [ CD ]
Line_78 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) -->Line_79 $$ g.setColor(selectionForeground)[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_22 $$ FontMetrics fontmetrics1 = g.getFontMetrics(acceleratorFont)[ FD ]
Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp-->Line_27 $$ keyStrokeText = getKeyStrokeText(jmenuitem.getAccelerator())[ FD ]
Line_66 $$ if (buttonmodel.isPressed() && buttonmodel.isArmed()) -->Line_68 $$ if (icon1 == null) [ CD ]
Line_22 $$ FontMetrics fontmetrics1 = g.getFontMetrics(acceleratorFont)-->Line_29 $$ String s1 = layoutMenuItem(fontmetrics, jmenuitem.getText(), fontmetrics1, keyStrokeText, icon1, icon2, arrowIcon, jmenuitem.getVerticalAlignment(), jmenuitem.getHorizontalAlignment(), jmenuitem.getVerticalTextPosition(), jmenuitem.getHorizontalTextPosition(), f, l, j, c, h, d, jmenuitem.getText() != null ? defaultTextIconGap : 0, defaultTextIconGap)[ FD ]
Line_68 $$ if (icon1 == null) -->Line_69 $$ icon1 = jmenuitem.getIcon()[ CD ]
Line_67 $$ icon1 = jmenuitem.getPressedIcon()-->Line_73 $$ icon1.paintIcon(comp, g, l.x, l.y)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_111 $$ g.setColor(disabledForeground)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_88 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent())[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_128 $$ g.setColor(color2)[ CD ]
Line_97 $$ if (keyStrokeText != null && !keyStrokeText.isEmpty()) -->Line_98 $$ g.setFont(acceleratorFont)[ CD ]
Line_24 $$ if (jmenuitem instanceof ActionMenuItem) -->Line_25 $$ keyStrokeText = ((ActionMenuItem) jmenuitem).getFirstShortcutText()[ CD ]
Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp-->Line_29 $$ String s1 = layoutMenuItem(fontmetrics, jmenuitem.getText(), fontmetrics1, keyStrokeText, icon1, icon2, arrowIcon, jmenuitem.getVerticalAlignment(), jmenuitem.getHorizontalAlignment(), jmenuitem.getVerticalTextPosition(), jmenuitem.getHorizontalTextPosition(), f, l, j, c, h, d, jmenuitem.getText() != null ? defaultTextIconGap : 0, defaultTextIconGap)[ FD ]
Line_50 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) -->Line_53 $$ g.setColor(jmenuitem.getForeground())[ CD ]
Line_67 $$ icon1 = jmenuitem.getPressedIcon()-->Line_69 $$ icon1 = jmenuitem.getIcon()[ FD ]
Line_55 $$ if (useCheckAndArrow()) -->Line_56 $$ icon2.paintIcon(comp, g, h.x, h.y)[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_63 $$ if (icon1 != null) [ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_81 $$ g.setColor(jmenuitem.getForeground())[ FD ]
Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp-->Line_90 $$ g.setColor(jmenuitem.getBackground().brighter())[ FD ]
Line_23 $$ String keyStrokeText-->Line_117 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x - 1, (c.y + fontmetrics.getAscent()) - 1)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_31 $$ if (comp.isOpaque() || (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())) [ FD ]
Line_21 $$ FontMetrics fontmetrics = g.getFontMetrics(font1)-->Line_117 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x - 1, (c.y + fontmetrics.getAscent()) - 1)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_7 $$ Icon icon1 = getIcon()[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_56 $$ icon2.paintIcon(comp, g, h.x, h.y)[ FD ]
Line_67 $$ icon1 = jmenuitem.getPressedIcon()-->Line_68 $$ if (icon1 == null) [ FD ]
Line_99 $$ if (buttonmodel.isEnabled()) -->Line_100 $$ if (UIUtil.isUnderAquaBasedLookAndFeel() && (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected())) [ CD ]
Line_6 $$ int mnemonicIndex = jmenuitem.getDisplayedMnemonicIndex()-->Line_91 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent())[ FD ]
Line_110 $$ if (disabledForeground != null) -->Line_115 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ CD ]
Line_10 $$ int k1 = jmenuitem.getHeight()-->Line_42 $$ g.fillRect(0, 0, j1, k1)[ FD ]
Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp-->Line_10 $$ int k1 = jmenuitem.getHeight()[ FD ]
Line_8 $$ Icon icon2 = getAllowedIcon()-->Line_56 $$ icon2.paintIcon(comp, g, h.x, h.y)[ FD ]
Line_6 $$ int mnemonicIndex = jmenuitem.getDisplayedMnemonicIndex()-->Line_88 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent())[ FD ]
Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp-->Line_69 $$ icon1 = jmenuitem.getIcon()[ FD ]
Line_10 $$ int k1 = jmenuitem.getHeight()-->Line_13 $$ f.setBounds(0, 0, j1, k1)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_58 $$ g.setColor(color2)[ FD ]
Line_27 $$ keyStrokeText = getKeyStrokeText(jmenuitem.getAccelerator())-->Line_115 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ FD ]
Line_69 $$ icon1 = jmenuitem.getIcon()-->Line_73 $$ icon1.paintIcon(comp, g, l.x, l.y)[ FD ]
Line_78 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) -->Line_81 $$ g.setColor(jmenuitem.getForeground())[ CD ]
Line_23 $$ String keyStrokeText-->Line_112 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ FD ]
Line_121 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) -->Line_122 $$ g.setColor(selectionForeground)[ CD ]
Line_23 $$ String keyStrokeText-->Line_97 $$ if (keyStrokeText != null && !keyStrokeText.isEmpty()) [ FD ]
Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp-->Line_53 $$ g.setColor(jmenuitem.getForeground())[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_19 $$ Font font1 = comp.getFont()[ CD ]
Line_65 $$ icon1 = jmenuitem.getDisabledIcon()-->Line_68 $$ if (icon1 == null) [ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_15 $$ f.y += insets.top[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_33 $$ g.fillRect(0, 0, j1, k1)[ FD ]
Line_64 $$ if (!buttonmodel.isEnabled()) -->Line_66 $$ if (buttonmodel.isPressed() && buttonmodel.isArmed()) [ CD ]
Line_7 $$ Icon icon1 = getIcon()-->Line_72 $$ if (icon1 != null) [ FD ]
Line_18 $$ Font font = g.getFont()-->Line_129 $$ g.setFont(font)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_13 $$ f.setBounds(0, 0, j1, k1)[ CD ]
Line_31 $$ if (comp.isOpaque() || (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())) -->Line_47 $$ g.setColor(color2)[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_101 $$ g.setColor(selectionForeground)[ FD ]
Line_31 $$ if (comp.isOpaque() || (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())) -->Line_33 $$ g.fillRect(0, 0, j1, k1)[ CD ]
Line_97 $$ if (keyStrokeText != null && !keyStrokeText.isEmpty()) -->Line_99 $$ if (buttonmodel.isEnabled()) [ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_128 $$ g.setColor(color2)[ FD ]
Line_63 $$ if (icon1 != null) -->Line_72 $$ if (icon1 != null) [ CD ]
Line_39 $$ if (icon2 != null && !(UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())) -->Line_40 $$ g.fillRect(k, 0, j1 - k, k1)[ CD ]
Line_49 $$ if (icon2 != null) -->Line_59 $$ if (menuItem.isArmed()) [ CD ]
Line_5 $$ ButtonModel buttonmodel = jmenuitem.getModel()-->Line_103 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) [ FD ]
Line_64 $$ if (!buttonmodel.isEnabled()) -->Line_65 $$ icon1 = jmenuitem.getDisabledIcon()[ CD ]
Line_7 $$ Icon icon1 = getIcon()-->Line_65 $$ icon1 = jmenuitem.getDisabledIcon()[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_109 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ FD ]
Line_110 $$ if (disabledForeground != null) -->Line_117 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x - 1, (c.y + fontmetrics.getAscent()) - 1)[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_24 $$ if (jmenuitem instanceof ActionMenuItem) [ CD ]
Line_124 $$ if (useCheckAndArrow()) -->Line_125 $$ arrowIcon.paintIcon(comp, g, d.x, d.y)[ CD ]
Line_5 $$ ButtonModel buttonmodel = jmenuitem.getModel()-->Line_66 $$ if (buttonmodel.isPressed() && buttonmodel.isArmed()) [ FD ]
Line_7 $$ Icon icon1 = getIcon()-->Line_69 $$ icon1 = jmenuitem.getIcon()[ FD ]
Line_69 $$ icon1 = jmenuitem.getIcon()-->Line_72 $$ if (icon1 != null) [ FD ]
Line_23 $$ String keyStrokeText-->Line_27 $$ keyStrokeText = getKeyStrokeText(jmenuitem.getAccelerator())[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_22 $$ FontMetrics fontmetrics1 = g.getFontMetrics(acceleratorFont)[ CD ]
Line_63 $$ if (icon1 != null) -->Line_64 $$ if (!buttonmodel.isEnabled()) [ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_116 $$ g.setColor(jmenuitem.getBackground().darker())[ FD ]
Line_72 $$ if (icon1 != null) -->Line_73 $$ icon1.paintIcon(comp, g, l.x, l.y)[ CD ]
Line_10 $$ int k1 = jmenuitem.getHeight()-->Line_36 $$ myAquaSelectedBackgroundPainter.paintBorder(comp, g, 0, 0, j1, k1)[ FD ]
Line_21 $$ FontMetrics fontmetrics = g.getFontMetrics(font1)-->Line_115 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_30 $$ Color color2 = g.getColor()[ CD ]
Line_5 $$ ButtonModel buttonmodel = jmenuitem.getModel()-->Line_121 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) [ FD ]
Line_39 $$ if (icon2 != null && !(UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())) -->Line_42 $$ g.fillRect(0, 0, j1, k1)[ CD ]
Line_29 $$ String s1 = layoutMenuItem(fontmetrics, jmenuitem.getText(), fontmetrics1, keyStrokeText, icon1, icon2, arrowIcon, jmenuitem.getVerticalAlignment(), jmenuitem.getHorizontalAlignment(), jmenuitem.getVerticalTextPosition(), jmenuitem.getHorizontalTextPosition(), f, l, j, c, h, d, jmenuitem.getText() != null ? defaultTextIconGap : 0, defaultTextIconGap)-->Line_83 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent())[ FD ]
Line_9 $$ int j1 = jmenuitem.getWidth()-->Line_42 $$ g.fillRect(0, 0, j1, k1)[ FD ]
Line_7 $$ Icon icon1 = getIcon()-->Line_73 $$ icon1.paintIcon(comp, g, l.x, l.y)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_18 $$ Font font = g.getFont()[ CD ]
Line_77 $$ if (buttonmodel.isEnabled()) -->Line_86 $$ if (disabledForeground instanceof Color) [ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_47 $$ g.setColor(color2)[ FD ]
Line_49 $$ if (icon2 != null) -->Line_50 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) [ CD ]
Line_7 $$ Icon icon1 = getIcon()-->Line_63 $$ if (icon1 != null) [ FD ]
Line_29 $$ String s1 = layoutMenuItem(fontmetrics, jmenuitem.getText(), fontmetrics1, keyStrokeText, icon1, icon2, arrowIcon, jmenuitem.getVerticalAlignment(), jmenuitem.getHorizontalAlignment(), jmenuitem.getVerticalTextPosition(), jmenuitem.getHorizontalTextPosition(), f, l, j, c, h, d, jmenuitem.getText() != null ? defaultTextIconGap : 0, defaultTextIconGap)-->Line_93 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x - 1, (j.y + fontmetrics.getAscent()) - 1)[ FD ]
Line_5 $$ ButtonModel buttonmodel = jmenuitem.getModel()-->Line_99 $$ if (buttonmodel.isEnabled()) [ FD ]
Line_86 $$ if (disabledForeground instanceof Color) -->Line_92 $$ g.setColor(jmenuitem.getBackground().darker())[ CD ]
Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp-->Line_92 $$ g.setColor(jmenuitem.getBackground().darker())[ FD ]
Line_103 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) -->Line_104 $$ g.setColor(acceleratorSelectionForeground)[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_129 $$ g.setFont(font)[ FD ]
Line_5 $$ ButtonModel buttonmodel = jmenuitem.getModel()-->Line_64 $$ if (!buttonmodel.isEnabled()) [ FD ]
Line_10 $$ int k1 = jmenuitem.getHeight()-->Line_40 $$ g.fillRect(k, 0, j1 - k, k1)[ FD ]
Line_86 $$ if (disabledForeground instanceof Color) -->Line_93 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x - 1, (j.y + fontmetrics.getAscent()) - 1)[ CD ]
Line_100 $$ if (UIUtil.isUnderAquaBasedLookAndFeel() && (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected())) -->Line_101 $$ g.setColor(selectionForeground)[ CD ]
Line_99 $$ if (buttonmodel.isEnabled()) -->Line_109 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ CD ]
Line_9 $$ int j1 = jmenuitem.getWidth()-->Line_36 $$ myAquaSelectedBackgroundPainter.paintBorder(comp, g, 0, 0, j1, k1)[ FD ]
Line_25 $$ keyStrokeText = ((ActionMenuItem) jmenuitem).getFirstShortcutText()-->Line_27 $$ keyStrokeText = getKeyStrokeText(jmenuitem.getAccelerator())[ FD ]
Line_23 $$ String keyStrokeText-->Line_109 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ FD ]
Line_77 $$ if (buttonmodel.isEnabled()) -->Line_78 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) [ CD ]
Line_85 $$ final Object disabledForeground = UIUtil.getMenuItemDisabledForegroundObject()-->Line_111 $$ g.setColor(disabledForeground)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_104 $$ g.setColor(acceleratorSelectionForeground)[ FD ]
Line_86 $$ if (disabledForeground instanceof Color) -->Line_87 $$ g.setColor((Color) disabledForeground)[ CD ]
Line_21 $$ FontMetrics fontmetrics = g.getFontMetrics(font1)-->Line_112 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ FD ]
Line_19 $$ Font font1 = comp.getFont()-->Line_20 $$ g.setFont(font1)[ FD ]
Line_34 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) -->Line_35 $$ if (UIUtil.isUnderAquaLookAndFeel()) [ CD ]
Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp-->Line_67 $$ icon1 = jmenuitem.getPressedIcon()[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_125 $$ arrowIcon.paintIcon(comp, g, d.x, d.y)[ FD ]
Line_21 $$ FontMetrics fontmetrics = g.getFontMetrics(font1)-->Line_83 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent())[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_43 $$ g.setColor(selectionBackground)[ FD ]
Line_9 $$ int j1 = jmenuitem.getWidth()-->Line_33 $$ g.fillRect(0, 0, j1, k1)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_49 $$ if (icon2 != null) [ CD ]
Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp-->Line_81 $$ g.setColor(jmenuitem.getForeground())[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_87 $$ g.setColor((Color) disabledForeground)[ FD ]
Line_65 $$ icon1 = jmenuitem.getDisabledIcon()-->Line_67 $$ icon1 = jmenuitem.getPressedIcon()[ FD ]
Line_21 $$ FontMetrics fontmetrics = g.getFontMetrics(font1)-->Line_91 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent())[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_53 $$ g.setColor(jmenuitem.getForeground())[ FD ]
Line_49 $$ if (icon2 != null) -->Line_55 $$ if (useCheckAndArrow()) [ CD ]
Line_5 $$ ButtonModel buttonmodel = jmenuitem.getModel()-->Line_34 $$ if (buttonmodel.isArmed() || (comp instanceof JMenu) && buttonmodel.isSelected()) [ FD ]
Line_23 $$ String keyStrokeText-->Line_115 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_14 $$ f.x += insets.left[ CD ]
Line_7 $$ Icon icon1 = getIcon()-->Line_68 $$ if (icon1 == null) [ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_117 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x - 1, (c.y + fontmetrics.getAscent()) - 1)[ FD ]
Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp-->Line_6 $$ int mnemonicIndex = jmenuitem.getDisplayedMnemonicIndex()[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_32 $$ g.setColor(jmenuitem.getBackground())[ FD ]
Line_110 $$ if (disabledForeground != null) -->Line_114 $$ g.setColor(jmenuitem.getBackground().brighter())[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_18 $$ Font font = g.getFont()[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_12 $$ initBounds()[ CD ]
Line_4 $$ JMenuItem jmenuitem = (JMenuItem) comp-->Line_32 $$ g.setColor(jmenuitem.getBackground())[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_97 $$ if (keyStrokeText != null && !keyStrokeText.isEmpty()) [ CD ]
Line_86 $$ if (disabledForeground instanceof Color) -->Line_88 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent())[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_11 $$ Insets insets = comp.getInsets()[ CD ]
Line_21 $$ FontMetrics fontmetrics = g.getFontMetrics(font1)-->Line_88 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x, j.y + fontmetrics.getAscent())[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_3 $$ UISettings.setupAntialiasing(g)[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_31 $$ if (comp.isOpaque() || (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())) [ CD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_23 $$ String keyStrokeText[ CD ]
Line_25 $$ keyStrokeText = ((ActionMenuItem) jmenuitem).getFirstShortcutText()-->Line_109 $$ BasicGraphicsUtils.drawString(g, keyStrokeText, 0, c.x, c.y + fontmetrics.getAscent())[ FD ]
Line_30 $$ Color color2 = g.getColor()-->Line_58 $$ g.setColor(color2)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_79 $$ g.setColor(selectionForeground)[ FD ]
Line_27 $$ keyStrokeText = getKeyStrokeText(jmenuitem.getAccelerator())-->Line_29 $$ String s1 = layoutMenuItem(fontmetrics, jmenuitem.getText(), fontmetrics1, keyStrokeText, icon1, icon2, arrowIcon, jmenuitem.getVerticalAlignment(), jmenuitem.getHorizontalAlignment(), jmenuitem.getVerticalTextPosition(), jmenuitem.getHorizontalTextPosition(), f, l, j, c, h, d, jmenuitem.getText() != null ? defaultTextIconGap : 0, defaultTextIconGap)[ FD ]
Line_21 $$ FontMetrics fontmetrics = g.getFontMetrics(font1)-->Line_93 $$ BasicGraphicsUtils.drawStringUnderlineCharAt(g, s1, mnemonicIndex, j.x - 1, (j.y + fontmetrics.getAscent()) - 1)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent comp) -->Line_16 $$ f.width -= insets.right + f.x[ CD ]
