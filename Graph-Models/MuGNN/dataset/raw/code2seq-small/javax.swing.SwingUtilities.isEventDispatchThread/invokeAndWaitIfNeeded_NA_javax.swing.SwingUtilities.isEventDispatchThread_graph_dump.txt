Line_2 $$ public static <E extends Exception> void invokeAndWaitIfNeeded(@NotNull final ThrowableRunnable<E> runnable) throws Exception -->Line_10 $$ runnable.run()[ FD ]
Line_6 $$ final Ref<Exception> ref = Ref.create()-->Line_16 $$ if (!ref.isNull())[ FD ]
Line_2 $$ public static <E extends Exception> void invokeAndWaitIfNeeded(@NotNull final ThrowableRunnable<E> runnable) throws Exception -->Line_4 $$ runnable.run()[ FD ]
Line_3 $$ if (SwingUtilities.isEventDispatchThread()) -->Line_6 $$ final Ref<Exception> ref = Ref.create()[ CD ]
Line_3 $$ if (SwingUtilities.isEventDispatchThread()) -->Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() [ CD ]
Line_6 $$ final Ref<Exception> ref = Ref.create()-->Line_12 $$ ref.set(e)[ FD ]
Line_3 $$ if (SwingUtilities.isEventDispatchThread()) -->Line_16 $$ if (!ref.isNull())[ CD ]
Line_6 $$ final Ref<Exception> ref = Ref.create()-->Line_17 $$ throw ref.get()[ FD ]
Line_2 $$ public static <E extends Exception> void invokeAndWaitIfNeeded(@NotNull final ThrowableRunnable<E> runnable) throws Exception -->Line_3 $$ if (SwingUtilities.isEventDispatchThread()) [ CD ]
Line_3 $$ if (SwingUtilities.isEventDispatchThread()) -->Line_4 $$ runnable.run()[ CD ]
