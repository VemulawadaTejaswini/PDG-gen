Line_24 $$ if (myHintsStack.isEmpty()) -->Line_25 $$ updateLastEditor(null)[ CD ]
Line_2 $$ public boolean hideHints(int mask, boolean onlyOne, boolean editorChanged) -->Line_3 $$ LOG.assertTrue(SwingUtilities.isEventDispatchThread())[ CD ]
Line_7 $$ final HintInfo info = myHintsStack.get(i)-->Line_15 $$ myHintsStack.remove(info)[ FD ]
Line_6 $$ for (int i = myHintsStack.size() - 1; i >= 0; i--) -->Line_7 $$ final HintInfo info = myHintsStack.get(i)[ CD ]
Line_6 $$ for (int i = myHintsStack.size() - 1; i >= 0; i--) -->Line_9 $$ myHintsStack.remove(i)[ FD ]
Line_5 $$ boolean done = false-->Line_19 $$ done = true[ FD ]
Line_13 $$ if ((info.flags & mask) != 0 || editorChanged && !info.reviveOnEditorChange) -->Line_16 $$ if (onlyOne) [ CD ]
Line_8 $$ if (!info.hint.isVisible() && !info.hint.vetoesHiding()) -->Line_10 $$ info.hint.hide()[ CD ]
Line_13 $$ if ((info.flags & mask) != 0 || editorChanged && !info.reviveOnEditorChange) -->Line_14 $$ info.hint.hide()[ CD ]
Line_13 $$ if ((info.flags & mask) != 0 || editorChanged && !info.reviveOnEditorChange) -->Line_19 $$ done = true[ CD ]
Line_6 $$ for (int i = myHintsStack.size() - 1; i >= 0; i--) -->Line_13 $$ if ((info.flags & mask) != 0 || editorChanged && !info.reviveOnEditorChange) [ CD ]
Line_13 $$ if ((info.flags & mask) != 0 || editorChanged && !info.reviveOnEditorChange) -->Line_15 $$ myHintsStack.remove(info)[ CD ]
Line_6 $$ for (int i = myHintsStack.size() - 1; i >= 0; i--) -->Line_8 $$ if (!info.hint.isVisible() && !info.hint.vetoesHiding()) [ CD ]
Line_16 $$ if (onlyOne) -->Line_17 $$ return true[ CD ]
Line_8 $$ if (!info.hint.isVisible() && !info.hint.vetoesHiding()) -->Line_9 $$ myHintsStack.remove(i)[ CD ]
Line_6 $$ for (int i = myHintsStack.size() - 1; i >= 0; i--) -->Line_7 $$ final HintInfo info = myHintsStack.get(i)[ FD ]
