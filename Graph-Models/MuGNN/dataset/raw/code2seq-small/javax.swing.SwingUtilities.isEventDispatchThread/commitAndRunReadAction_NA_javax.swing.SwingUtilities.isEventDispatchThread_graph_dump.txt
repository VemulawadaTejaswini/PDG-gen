Line_16 $$ if (myUncommittedDocuments.isEmpty()) -->Line_20 $$ s1.down()[ CD ]
Line_4 $$ if (SwingUtilities.isEventDispatchThread()) -->Line_14 $$ application.runReadAction(new Runnable() [ CD ]
Line_30 $$ if (progressIndicator == null) -->Line_31 $$ ApplicationManager.getApplication().invokeLater(commitRunnable)[ CD ]
Line_11 $$ final Semaphore s1 = new Semaphore()-->Line_39 $$ s1.waitFor()[ FD ]
Line_22 $$ final Runnable commitRunnable = new Runnable() -->Line_26 $$ s2.waitFor()[ CD ]
Line_40 $$ application.runReadAction(new Runnable() -->Line_42 $$ s2.up()[ CD ]
Line_4 $$ if (SwingUtilities.isEventDispatchThread()) -->Line_8 $$ if (ApplicationManager.getApplication().isReadAccessAllowed()) [ CD ]
Line_8 $$ if (ApplicationManager.getApplication().isReadAccessAllowed()) -->Line_9 $$ LOG.error("Don't call commitAndRunReadAction inside ReadAction, it will cause a deadlock otherwise. " + Thread.currentThread())[ CD ]
Line_12 $$ final Semaphore s2 = new Semaphore()-->Line_26 $$ s2.waitFor()[ FD ]
Line_16 $$ if (myUncommittedDocuments.isEmpty()) -->Line_22 $$ final Runnable commitRunnable = new Runnable() [ CD ]
Line_4 $$ if (SwingUtilities.isEventDispatchThread()) -->Line_13 $$ final boolean[] committed = [ CD ]
Line_22 $$ final Runnable commitRunnable = new Runnable() -->Line_31 $$ ApplicationManager.getApplication().invokeLater(commitRunnable)[ FD ]
Line_3 $$ final Application application = ApplicationManager.getApplication()-->Line_40 $$ application.runReadAction(new Runnable() [ FD ]
Line_22 $$ final Runnable commitRunnable = new Runnable() -->Line_33 $$ ApplicationManager.getApplication().invokeLater(commitRunnable, progressIndicator.getModalityState())[ FD ]
Line_14 $$ application.runReadAction(new Runnable() -->Line_16 $$ if (myUncommittedDocuments.isEmpty()) [ CD ]
Line_16 $$ if (myUncommittedDocuments.isEmpty()) -->Line_18 $$ committed[0] = true[ CD ]
Line_2 $$ public void commitAndRunReadAction(@NotNull final Runnable runnable) -->Line_6 $$ runnable.run()[ FD ]
Line_40 $$ application.runReadAction(new Runnable() -->Line_43 $$ runnable.run()[ CD ]
Line_3 $$ final Application application = ApplicationManager.getApplication()-->Line_14 $$ application.runReadAction(new Runnable() [ FD ]
Line_12 $$ final Semaphore s2 = new Semaphore()-->Line_21 $$ s2.down()[ FD ]
Line_2 $$ public void commitAndRunReadAction(@NotNull final Runnable runnable) -->Line_4 $$ if (SwingUtilities.isEventDispatchThread()) [ CD ]
Line_12 $$ final Semaphore s2 = new Semaphore()-->Line_42 $$ s2.up()[ FD ]
Line_2 $$ public void commitAndRunReadAction(@NotNull final Runnable runnable) -->Line_43 $$ runnable.run()[ FD ]
Line_2 $$ public void commitAndRunReadAction(@NotNull final Runnable runnable) -->Line_3 $$ final Application application = ApplicationManager.getApplication()[ CD ]
Line_16 $$ if (myUncommittedDocuments.isEmpty()) -->Line_29 $$ final ProgressIndicator progressIndicator = ProgressManager.getInstance().getProgressIndicator()[ CD ]
Line_4 $$ if (SwingUtilities.isEventDispatchThread()) -->Line_11 $$ final Semaphore s1 = new Semaphore()[ CD ]
Line_22 $$ final Runnable commitRunnable = new Runnable() -->Line_24 $$ commitAllDocuments()[ CD ]
Line_4 $$ if (SwingUtilities.isEventDispatchThread()) -->Line_38 $$ if (!committed[0]) [ CD ]
Line_4 $$ if (SwingUtilities.isEventDispatchThread()) -->Line_6 $$ runnable.run()[ CD ]
Line_22 $$ final Runnable commitRunnable = new Runnable() -->Line_25 $$ s1.up()[ CD ]
Line_16 $$ if (myUncommittedDocuments.isEmpty()) -->Line_30 $$ if (progressIndicator == null) [ CD ]
Line_2 $$ public void commitAndRunReadAction(@NotNull final Runnable runnable) -->Line_17 $$ runnable.run()[ FD ]
Line_16 $$ if (myUncommittedDocuments.isEmpty()) -->Line_17 $$ runnable.run()[ CD ]
Line_30 $$ if (progressIndicator == null) -->Line_33 $$ ApplicationManager.getApplication().invokeLater(commitRunnable, progressIndicator.getModalityState())[ CD ]
Line_11 $$ final Semaphore s1 = new Semaphore()-->Line_20 $$ s1.down()[ FD ]
Line_38 $$ if (!committed[0]) -->Line_39 $$ s1.waitFor()[ CD ]
Line_4 $$ if (SwingUtilities.isEventDispatchThread()) -->Line_12 $$ final Semaphore s2 = new Semaphore()[ CD ]
Line_38 $$ if (!committed[0]) -->Line_40 $$ application.runReadAction(new Runnable() [ CD ]
Line_16 $$ if (myUncommittedDocuments.isEmpty()) -->Line_21 $$ s2.down()[ CD ]
Line_4 $$ if (SwingUtilities.isEventDispatchThread()) -->Line_5 $$ commitAllDocuments()[ CD ]
Line_11 $$ final Semaphore s1 = new Semaphore()-->Line_25 $$ s1.up()[ FD ]
