Line_2 $$ public Point getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @PositionFlags short constraint) -->Line_6 $$ LOG.assertTrue(SwingUtilities.isEventDispatchThread())[ CD ]
Line_30 $$ if (tooltip.getPreferredPosition() == Balloon.Position.atLeft) -->Line_31 $$ p.x += tooltip.getPositionChangeX()[ CD ]
Line_45 $$ rectangle = SwingUtilities.convertRectangle(c.getParent(), rectangle, lp)-->Line_46 $$ if (rectangle != null) [ FD ]
Line_2 $$ public Point getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @PositionFlags short constraint) -->Line_8 $$ if (dominantArea == null && rootPane != null) [ CD ]
Line_45 $$ rectangle = SwingUtilities.convertRectangle(c.getParent(), rectangle, lp)-->Line_47 $$ return getHintPositionRelativeTo(hint, editor, constraint, rectangle, pos)[ FD ]
Line_8 $$ if (dominantArea == null && rootPane != null) -->Line_51 $$ return getHintPositionRelativeTo(hint, editor, constraint, dominantArea, pos)[ CD ]
Line_14 $$ if (tooltip != null) -->Line_15 $$ Point p = tooltip.getShowingPoint().getPoint(lp)[ CD ]
Line_13 $$ IdeTooltip tooltip = info.hint.getCurrentIdeTooltip()-->Line_26 $$ p.y += tooltip.getPositionChangeY()[ FD ]
Line_4 $$ final DataContext dataContext = ((EditorEx) editor).getDataContext()-->Line_5 $$ final Rectangle dominantArea = PlatformDataKeys.DOMINANT_HINT_AREA_RECTANGLE.getData(dataContext)[ FD ]
Line_7 $$ JRootPane rootPane = editor.getComponent().getRootPane()-->Line_9 $$ JLayeredPane lp = rootPane.getLayeredPane()[ FD ]
Line_3 $$ LogicalPosition pos = editor.getCaretModel().getLogicalPosition()-->Line_47 $$ return getHintPositionRelativeTo(hint, editor, constraint, rectangle, pos)[ FD ]
Line_2 $$ public Point getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @PositionFlags short constraint) -->Line_7 $$ JRootPane rootPane = editor.getComponent().getRootPane()[ CD ]
Line_14 $$ if (tooltip != null) -->Line_16 $$ if (info.hint != hint) [ CD ]
Line_2 $$ public Point getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @PositionFlags short constraint) -->Line_5 $$ final Rectangle dominantArea = PlatformDataKeys.DOMINANT_HINT_AREA_RECTANGLE.getData(dataContext)[ CD ]
Line_8 $$ if (dominantArea == null && rootPane != null) -->Line_9 $$ JLayeredPane lp = rootPane.getLayeredPane()[ CD ]
Line_2 $$ public Point getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @PositionFlags short constraint) -->Line_53 $$ return getHintPosition(hint, editor, pos, constraint)[ FD ]
Line_3 $$ LogicalPosition pos = editor.getCaretModel().getLogicalPosition()-->Line_53 $$ return getHintPosition(hint, editor, pos, constraint)[ FD ]
Line_13 $$ IdeTooltip tooltip = info.hint.getCurrentIdeTooltip()-->Line_15 $$ Point p = tooltip.getShowingPoint().getPoint(lp)[ FD ]
Line_13 $$ IdeTooltip tooltip = info.hint.getCurrentIdeTooltip()-->Line_36 $$ p.x -= tooltip.getPositionChangeX()[ FD ]
Line_9 $$ JLayeredPane lp = rootPane.getLayeredPane()-->Line_15 $$ Point p = tooltip.getShowingPoint().getPoint(lp)[ FD ]
Line_3 $$ LogicalPosition pos = editor.getCaretModel().getLogicalPosition()-->Line_51 $$ return getHintPositionRelativeTo(hint, editor, constraint, dominantArea, pos)[ FD ]
Line_43 $$ Rectangle rectangle = info.hint.getBounds()-->Line_46 $$ if (rectangle != null) [ FD ]
Line_13 $$ IdeTooltip tooltip = info.hint.getCurrentIdeTooltip()-->Line_14 $$ if (tooltip != null) [ FD ]
Line_13 $$ IdeTooltip tooltip = info.hint.getCurrentIdeTooltip()-->Line_35 $$ if (tooltip.getPreferredPosition() == Balloon.Position.atRight) [ FD ]
Line_9 $$ JLayeredPane lp = rootPane.getLayeredPane()-->Line_45 $$ rectangle = SwingUtilities.convertRectangle(c.getParent(), rectangle, lp)[ FD ]
Line_2 $$ public Point getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @PositionFlags short constraint) -->Line_3 $$ LogicalPosition pos = editor.getCaretModel().getLogicalPosition()[ FD ]
Line_25 $$ if (tooltip.getPreferredPosition() == Balloon.Position.above) -->Line_26 $$ p.y += tooltip.getPositionChangeY()[ CD ]
Line_13 $$ IdeTooltip tooltip = info.hint.getCurrentIdeTooltip()-->Line_31 $$ p.x += tooltip.getPositionChangeX()[ FD ]
Line_46 $$ if (rectangle != null) -->Line_47 $$ return getHintPositionRelativeTo(hint, editor, constraint, rectangle, pos)[ CD ]
Line_2 $$ public Point getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @PositionFlags short constraint) -->Line_51 $$ return getHintPositionRelativeTo(hint, editor, constraint, dominantArea, pos)[ FD ]
Line_2 $$ public Point getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @PositionFlags short constraint) -->Line_7 $$ JRootPane rootPane = editor.getComponent().getRootPane()[ FD ]
Line_13 $$ IdeTooltip tooltip = info.hint.getCurrentIdeTooltip()-->Line_30 $$ if (tooltip.getPreferredPosition() == Balloon.Position.atLeft) [ FD ]
Line_43 $$ Rectangle rectangle = info.hint.getBounds()-->Line_45 $$ rectangle = SwingUtilities.convertRectangle(c.getParent(), rectangle, lp)[ FD ]
Line_2 $$ public Point getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @PositionFlags short constraint) -->Line_47 $$ return getHintPositionRelativeTo(hint, editor, constraint, rectangle, pos)[ FD ]
Line_2 $$ public Point getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @PositionFlags short constraint) -->Line_16 $$ if (info.hint != hint) [ FD ]
Line_44 $$ JComponent c = info.hint.getComponent()-->Line_45 $$ rectangle = SwingUtilities.convertRectangle(c.getParent(), rectangle, lp)[ FD ]
Line_2 $$ public Point getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @PositionFlags short constraint) -->Line_53 $$ return getHintPosition(hint, editor, pos, constraint)[ CD ]
Line_19 $$ if (tooltip.getPreferredPosition() == Balloon.Position.below) -->Line_20 $$ p.y -= tooltip.getPositionChangeY()[ CD ]
Line_5 $$ final Rectangle dominantArea = PlatformDataKeys.DOMINANT_HINT_AREA_RECTANGLE.getData(dataContext)-->Line_51 $$ return getHintPositionRelativeTo(hint, editor, constraint, dominantArea, pos)[ FD ]
Line_43 $$ Rectangle rectangle = info.hint.getBounds()-->Line_47 $$ return getHintPositionRelativeTo(hint, editor, constraint, rectangle, pos)[ FD ]
Line_13 $$ IdeTooltip tooltip = info.hint.getCurrentIdeTooltip()-->Line_25 $$ if (tooltip.getPreferredPosition() == Balloon.Position.above) [ FD ]
Line_14 $$ if (tooltip != null) -->Line_41 $$ return p[ CD ]
Line_13 $$ IdeTooltip tooltip = info.hint.getCurrentIdeTooltip()-->Line_20 $$ p.y -= tooltip.getPositionChangeY()[ FD ]
Line_13 $$ IdeTooltip tooltip = info.hint.getCurrentIdeTooltip()-->Line_19 $$ if (tooltip.getPreferredPosition() == Balloon.Position.below) [ FD ]
Line_35 $$ if (tooltip.getPreferredPosition() == Balloon.Position.atRight) -->Line_36 $$ p.x -= tooltip.getPositionChangeX()[ CD ]
Line_2 $$ public Point getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @PositionFlags short constraint) -->Line_3 $$ LogicalPosition pos = editor.getCaretModel().getLogicalPosition()[ CD ]
Line_2 $$ public Point getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @PositionFlags short constraint) -->Line_4 $$ final DataContext dataContext = ((EditorEx) editor).getDataContext()[ CD ]
