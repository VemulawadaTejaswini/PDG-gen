Line_15 $$ s += "; Uncommitted: " + task.document-->Line_25 $$ log.append(s).append("\n")[ FD ]
Line_2 $$ public void log(@NonNls String msg, @Nullable CommitTask task, boolean synchronously, @NonNls Object... args) -->Line_6 $$ String s = indent + msg + (synchronously ? " (sync)" : "") + (task == null ? " - " : "; task: " + task + " (" + System.identityHashCode(task) + ")")[ FD ]
Line_6 $$ String s = indent + msg + (synchronously ? " (sync)" : "") + (task == null ? " - " : "; task: " + task + " (" + System.identityHashCode(task) + ")")-->Line_9 $$ s += "; " + arg[ FD ]
Line_7 $$ for (Object arg : args) -->Line_9 $$ s += "; " + arg[ FD ]
Line_20 $$ if (size != 0) -->Line_21 $$ s += " (" + size + " documents are still in queue)"[ CD ]
Line_15 $$ s += "; Uncommitted: " + task.document-->Line_21 $$ s += " (" + size + " documents are still in queue)"[ FD ]
Line_12 $$ if (task != null) -->Line_14 $$ if (stillUncommitted) [ CD ]
Line_8 $$ if (!StringUtil.isEmpty(String.valueOf(arg))) -->Line_9 $$ s += "; " + arg[ CD ]
Line_7 $$ for (Object arg : args) -->Line_8 $$ if (!StringUtil.isEmpty(String.valueOf(arg))) [ FD ]
Line_6 $$ String s = indent + msg + (synchronously ? " (sync)" : "") + (task == null ? " - " : "; task: " + task + " (" + System.identityHashCode(task) + ")")-->Line_25 $$ log.append(s).append("\n")[ FD ]
Line_2 $$ public void log(@NonNls String msg, @Nullable CommitTask task, boolean synchronously, @NonNls Object... args) -->Line_3 $$ if (true)[ CD ]
Line_3 $$ if (true)-->Line_4 $$ return[ CD ]
Line_2 $$ public void log(@NonNls String msg, @Nullable CommitTask task, boolean synchronously, @NonNls Object... args) -->Line_5 $$ String indent = new SimpleDateFormat("hh:mm:ss:SSSS").format(new Date()) + (SwingUtilities.isEventDispatchThread() ? "-(EDT) " : "-      ")[ CD ]
Line_6 $$ String s = indent + msg + (synchronously ? " (sync)" : "") + (task == null ? " - " : "; task: " + task + " (" + System.identityHashCode(task) + ")")-->Line_15 $$ s += "; Uncommitted: " + task.document[ FD ]
Line_9 $$ s += "; " + arg-->Line_15 $$ s += "; Uncommitted: " + task.document[ FD ]
Line_19 $$ int size = documentsToCommit.size()-->Line_20 $$ if (size != 0) [ FD ]
Line_9 $$ s += "; " + arg-->Line_21 $$ s += " (" + size + " documents are still in queue)"[ FD ]
Line_2 $$ public void log(@NonNls String msg, @Nullable CommitTask task, boolean synchronously, @NonNls Object... args) -->Line_12 $$ if (task != null) [ FD ]
Line_9 $$ s += "; " + arg-->Line_25 $$ log.append(s).append("\n")[ FD ]
Line_2 $$ public void log(@NonNls String msg, @Nullable CommitTask task, boolean synchronously, @NonNls Object... args) -->Line_12 $$ if (task != null) [ CD ]
Line_21 $$ s += " (" + size + " documents are still in queue)"-->Line_25 $$ log.append(s).append("\n")[ FD ]
Line_2 $$ public void log(@NonNls String msg, @Nullable CommitTask task, boolean synchronously, @NonNls Object... args) -->Line_6 $$ String s = indent + msg + (synchronously ? " (sync)" : "") + (task == null ? " - " : "; task: " + task + " (" + System.identityHashCode(task) + ")")[ CD ]
Line_12 $$ if (task != null) -->Line_13 $$ boolean stillUncommitted = !task.project.isDisposed() && ((PsiDocumentManagerBase) PsiDocumentManager.getInstance(task.project)).isInUncommittedSet(task.document)[ CD ]
Line_6 $$ String s = indent + msg + (synchronously ? " (sync)" : "") + (task == null ? " - " : "; task: " + task + " (" + System.identityHashCode(task) + ")")-->Line_21 $$ s += " (" + size + " documents are still in queue)"[ FD ]
Line_14 $$ if (stillUncommitted) -->Line_15 $$ s += "; Uncommitted: " + task.document[ CD ]
Line_26 $$ if (log.length() > 100000) -->Line_27 $$ log.delete(0, log.length() - 50000)[ CD ]
