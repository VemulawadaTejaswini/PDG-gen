Line_4 $$ boolean repaint = false-->Line_30 $$ if (repaint && !fromSwing) [ FD ]
Line_3 $$ if (!SwingUtilities.isEventDispatchThread() && c.isShowing()) -->Line_8 $$ StackTraceElement[] stackTrace = exception.getStackTrace()[ CD ]
Line_12 $$ if (repaint && className.startsWith("javax.swing.")) -->Line_13 $$ fromSwing = true[ CD ]
Line_9 $$ for (StackTraceElement st : stackTrace) -->Line_10 $$ String className = st.getClassName()[ FD ]
Line_5 $$ boolean fromSwing = false-->Line_30 $$ if (repaint && !fromSwing) [ FD ]
Line_13 $$ fromSwing = true-->Line_30 $$ if (repaint && !fromSwing) [ FD ]
Line_3 $$ if (!SwingUtilities.isEventDispatchThread() && c.isShowing()) -->Line_4 $$ boolean repaint = false[ CD ]
Line_4 $$ boolean repaint = false-->Line_12 $$ if (repaint && className.startsWith("javax.swing.")) [ FD ]
Line_3 $$ if (!SwingUtilities.isEventDispatchThread() && c.isShowing()) -->Line_27 $$ if (swingKnownNonAwtOperations) [ CD ]
Line_24 $$ fromSwing = false-->Line_30 $$ if (repaint && !fromSwing) [ FD ]
Line_6 $$ boolean swingKnownNonAwtOperations = false-->Line_16 $$ swingKnownNonAwtOperations = true[ FD ]
Line_4 $$ boolean repaint = false-->Line_15 $$ if (repaint && "imageUpdate".equals(methodName)) [ FD ]
Line_2 $$ private void checkThreadViolations(JComponent c) -->Line_33 $$ if (SoftReference.dereference(myLastComponent) == c) [ FD ]
Line_11 $$ String methodName = st.getMethodName()-->Line_22 $$ if ("repaint".equals(methodName)) [ FD ]
Line_18 $$ if ("read".equals(methodName) && className.startsWith("javax.swing.JEditorPane") || "setCharacterAttributes".equals(methodName) && className.startsWith("javax.swing.text.DefaultStyledDocument")) -->Line_19 $$ swingKnownNonAwtOperations = true[ CD ]
Line_4 $$ boolean repaint = false-->Line_23 $$ repaint = true[ FD ]
Line_30 $$ if (repaint && !fromSwing) -->Line_31 $$ return[ CD ]
Line_11 $$ String methodName = st.getMethodName()-->Line_18 $$ if ("read".equals(methodName) && className.startsWith("javax.swing.JEditorPane") || "setCharacterAttributes".equals(methodName) && className.startsWith("javax.swing.text.DefaultStyledDocument")) [ FD ]
Line_2 $$ private void checkThreadViolations(JComponent c) -->Line_3 $$ if (!SwingUtilities.isEventDispatchThread() && c.isShowing()) [ CD ]
Line_23 $$ repaint = true-->Line_30 $$ if (repaint && !fromSwing) [ FD ]
Line_2 $$ private void checkThreadViolations(JComponent c) -->Line_3 $$ if (!SwingUtilities.isEventDispatchThread() && c.isShowing()) [ FD ]
Line_10 $$ String className = st.getClassName()-->Line_18 $$ if ("read".equals(methodName) && className.startsWith("javax.swing.JEditorPane") || "setCharacterAttributes".equals(methodName) && className.startsWith("javax.swing.text.DefaultStyledDocument")) [ FD ]
Line_33 $$ if (SoftReference.dereference(myLastComponent) == c) -->Line_34 $$ return[ CD ]
Line_3 $$ if (!SwingUtilities.isEventDispatchThread() && c.isShowing()) -->Line_6 $$ boolean swingKnownNonAwtOperations = false[ CD ]
Line_9 $$ for (StackTraceElement st : stackTrace) -->Line_11 $$ String methodName = st.getMethodName()[ FD ]
Line_11 $$ String methodName = st.getMethodName()-->Line_15 $$ if (repaint && "imageUpdate".equals(methodName)) [ FD ]
Line_16 $$ swingKnownNonAwtOperations = true-->Line_19 $$ swingKnownNonAwtOperations = true[ FD ]
Line_22 $$ if ("repaint".equals(methodName)) -->Line_24 $$ fromSwing = false[ CD ]
Line_3 $$ if (!SwingUtilities.isEventDispatchThread() && c.isShowing()) -->Line_33 $$ if (SoftReference.dereference(myLastComponent) == c) [ CD ]
Line_5 $$ boolean fromSwing = false-->Line_24 $$ fromSwing = false[ FD ]
Line_3 $$ if (!SwingUtilities.isEventDispatchThread() && c.isShowing()) -->Line_37 $$ LOG.warn("Access to realized (ever shown) UI components should be done only from the AWT event dispatch thread," + " revalidate(), invalidate() & repaint() is ok from any thread", exception)[ CD ]
Line_5 $$ boolean fromSwing = false-->Line_13 $$ fromSwing = true[ FD ]
Line_3 $$ if (!SwingUtilities.isEventDispatchThread() && c.isShowing()) -->Line_7 $$ final Exception exception = new Exception()[ CD ]
Line_10 $$ String className = st.getClassName()-->Line_12 $$ if (repaint && className.startsWith("javax.swing.")) [ FD ]
Line_3 $$ if (!SwingUtilities.isEventDispatchThread() && c.isShowing()) -->Line_30 $$ if (repaint && !fromSwing) [ CD ]
Line_22 $$ if ("repaint".equals(methodName)) -->Line_23 $$ repaint = true[ CD ]
Line_13 $$ fromSwing = true-->Line_24 $$ fromSwing = false[ FD ]
Line_27 $$ if (swingKnownNonAwtOperations) -->Line_28 $$ return[ CD ]
Line_6 $$ boolean swingKnownNonAwtOperations = false-->Line_19 $$ swingKnownNonAwtOperations = true[ FD ]
Line_3 $$ if (!SwingUtilities.isEventDispatchThread() && c.isShowing()) -->Line_5 $$ boolean fromSwing = false[ CD ]
Line_15 $$ if (repaint && "imageUpdate".equals(methodName)) -->Line_16 $$ swingKnownNonAwtOperations = true[ CD ]
Line_7 $$ final Exception exception = new Exception()-->Line_8 $$ StackTraceElement[] stackTrace = exception.getStackTrace()[ FD ]
Line_7 $$ final Exception exception = new Exception()-->Line_37 $$ LOG.warn("Access to realized (ever shown) UI components should be done only from the AWT event dispatch thread," + " revalidate(), invalidate() & repaint() is ok from any thread", exception)[ FD ]
