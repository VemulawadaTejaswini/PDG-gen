Line_7 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_12 $$ assertEquals("Echo: test", remote.echo("test"))[ FD ]
Line_3 $$ final InitialContext ctx = getRemoteContext()-->Line_7 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())[ FD ]
Line_7 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_14 $$ assertNotNull(remote)[ FD ]
Line_2 $$ public void testIt() throws Exception -->Line_4 $$ final ClassLoader current = Thread.currentThread().getContextClassLoader()[ CD ]
Line_3 $$ final InitialContext ctx = getRemoteContext()-->Line_20 $$ NamingEnumeration<NameClassPair> e = ctx.list("test")[ FD ]
Line_16 $$ final Set<String> expected = new HashSet<String>()-->Line_18 $$ expected.add(Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())[ FD ]
Line_3 $$ final InitialContext ctx = getRemoteContext()-->Line_13 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + StatefulBean.class.getSimpleName() + "!" + Remote.class.getName())[ FD ]
Line_4 $$ final ClassLoader current = Thread.currentThread().getContextClassLoader()-->Line_32 $$ Thread.currentThread().setContextClassLoader(current)[ FD ]
Line_7 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_8 $$ assertNotNull(remote)[ FD ]
Line_27 $$ if (!expected.isEmpty()) -->Line_28 $$ Assert.fail("bindings not found " + expected)[ CD ]
Line_20 $$ NamingEnumeration<NameClassPair> e = ctx.list("test")-->Line_21 $$ while (e.hasMore()) [ FD ]
Line_10 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())-->Line_11 $$ assertNotNull(remote)[ FD ]
Line_21 $$ while (e.hasMore()) -->Line_22 $$ NameClassPair binding = e.next()[ CD ]
Line_7 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_13 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + StatefulBean.class.getSimpleName() + "!" + Remote.class.getName())[ FD ]
Line_10 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())-->Line_12 $$ assertEquals("Echo: test", remote.echo("test"))[ FD ]
Line_22 $$ NameClassPair binding = e.next()-->Line_23 $$ if (!expected.remove(binding.getName())) [ FD ]
Line_23 $$ if (!expected.remove(binding.getName())) -->Line_24 $$ Assert.fail("unknown binding " + binding.getName())[ CD ]
Line_7 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_9 $$ assertEquals("Echo: test", remote.echo("test"))[ FD ]
Line_16 $$ final Set<String> expected = new HashSet<String>()-->Line_27 $$ if (!expected.isEmpty()) [ FD ]
Line_13 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + StatefulBean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_15 $$ assertEquals("Echo: test", remote.echo("test"))[ FD ]
Line_7 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_10 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())[ FD ]
Line_7 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_15 $$ assertEquals("Echo: test", remote.echo("test"))[ FD ]
Line_13 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + StatefulBean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_14 $$ assertNotNull(remote)[ FD ]
Line_10 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())-->Line_14 $$ assertNotNull(remote)[ FD ]
Line_20 $$ NamingEnumeration<NameClassPair> e = ctx.list("test")-->Line_22 $$ NameClassPair binding = e.next()[ FD ]
Line_16 $$ final Set<String> expected = new HashSet<String>()-->Line_23 $$ if (!expected.remove(binding.getName())) [ FD ]
Line_3 $$ final InitialContext ctx = getRemoteContext()-->Line_31 $$ ctx.close()[ FD ]
Line_10 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())-->Line_15 $$ assertEquals("Echo: test", remote.echo("test"))[ FD ]
Line_22 $$ NameClassPair binding = e.next()-->Line_24 $$ Assert.fail("unknown binding " + binding.getName())[ FD ]
Line_7 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_11 $$ assertNotNull(remote)[ FD ]
Line_10 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())-->Line_13 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + StatefulBean.class.getSimpleName() + "!" + Remote.class.getName())[ FD ]
Line_21 $$ while (e.hasMore()) -->Line_23 $$ if (!expected.remove(binding.getName())) [ CD ]
Line_16 $$ final Set<String> expected = new HashSet<String>()-->Line_19 $$ expected.add(StatefulBean.class.getSimpleName() + "!" + Remote.class.getName())[ FD ]
Line_2 $$ public void testIt() throws Exception -->Line_3 $$ final InitialContext ctx = getRemoteContext()[ CD ]
Line_3 $$ final InitialContext ctx = getRemoteContext()-->Line_10 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())[ FD ]
Line_16 $$ final Set<String> expected = new HashSet<String>()-->Line_17 $$ expected.add(Bean.class.getSimpleName() + "!" + Remote.class.getName())[ FD ]
