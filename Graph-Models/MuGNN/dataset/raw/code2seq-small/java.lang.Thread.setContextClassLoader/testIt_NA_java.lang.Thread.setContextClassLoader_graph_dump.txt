Line_8 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_14 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + StatefulBean.class.getSimpleName() + "!" + Remote.class.getName())[ FD ]
Line_17 $$ final Set<String> expected = new HashSet<String>()-->Line_28 $$ if (!expected.isEmpty()) [ FD ]
Line_23 $$ NameClassPair binding = e.next()-->Line_25 $$ Assert.fail("unknown binding " + binding.getName())[ FD ]
Line_8 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_13 $$ assertEquals("Echo: test", remote.echo("test"))[ FD ]
Line_4 $$ final InitialContext ctx = getRemoteContext()-->Line_21 $$ NamingEnumeration<NameClassPair> e = ctx.list("test")[ FD ]
Line_8 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_9 $$ assertNotNull(remote)[ FD ]
Line_11 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())-->Line_16 $$ assertEquals("Echo: test", remote.echo("test"))[ FD ]
Line_11 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())-->Line_13 $$ assertEquals("Echo: test", remote.echo("test"))[ FD ]
Line_4 $$ final InitialContext ctx = getRemoteContext()-->Line_32 $$ ctx.close()[ FD ]
Line_17 $$ final Set<String> expected = new HashSet<String>()-->Line_20 $$ expected.add(StatefulBean.class.getSimpleName() + "!" + Remote.class.getName())[ FD ]
Line_14 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + StatefulBean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_15 $$ assertNotNull(remote)[ FD ]
Line_28 $$ if (!expected.isEmpty()) -->Line_29 $$ Assert.fail("bindings not found " + expected)[ CD ]
Line_11 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())-->Line_14 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + StatefulBean.class.getSimpleName() + "!" + Remote.class.getName())[ FD ]
Line_11 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())-->Line_15 $$ assertNotNull(remote)[ FD ]
Line_14 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + StatefulBean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_16 $$ assertEquals("Echo: test", remote.echo("test"))[ FD ]
Line_4 $$ final InitialContext ctx = getRemoteContext()-->Line_14 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + StatefulBean.class.getSimpleName() + "!" + Remote.class.getName())[ FD ]
Line_17 $$ final Set<String> expected = new HashSet<String>()-->Line_18 $$ expected.add(Bean.class.getSimpleName() + "!" + Remote.class.getName())[ FD ]
Line_5 $$ final ClassLoader current = Thread.currentThread().getContextClassLoader()-->Line_33 $$ Thread.currentThread().setContextClassLoader(current)[ FD ]
Line_22 $$ while (e.hasMore()) -->Line_24 $$ if (!expected.remove(binding.getName())) [ CD ]
Line_8 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_15 $$ assertNotNull(remote)[ FD ]
Line_8 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_11 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())[ FD ]
Line_23 $$ NameClassPair binding = e.next()-->Line_24 $$ if (!expected.remove(binding.getName())) [ FD ]
Line_24 $$ if (!expected.remove(binding.getName())) -->Line_25 $$ Assert.fail("unknown binding " + binding.getName())[ CD ]
Line_17 $$ final Set<String> expected = new HashSet<String>()-->Line_19 $$ expected.add(Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())[ FD ]
Line_8 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_12 $$ assertNotNull(remote)[ FD ]
Line_8 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_10 $$ assertEquals("Echo: test", remote.echo("test"))[ FD ]
Line_21 $$ NamingEnumeration<NameClassPair> e = ctx.list("test")-->Line_22 $$ while (e.hasMore()) [ FD ]
Line_22 $$ while (e.hasMore()) -->Line_23 $$ NameClassPair binding = e.next()[ CD ]
Line_4 $$ final InitialContext ctx = getRemoteContext()-->Line_11 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())[ FD ]
Line_8 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())-->Line_16 $$ assertEquals("Echo: test", remote.echo("test"))[ FD ]
Line_17 $$ final Set<String> expected = new HashSet<String>()-->Line_24 $$ if (!expected.remove(binding.getName())) [ FD ]
Line_4 $$ final InitialContext ctx = getRemoteContext()-->Line_8 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())[ FD ]
Line_11 $$ remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())-->Line_12 $$ assertNotNull(remote)[ FD ]
Line_21 $$ NamingEnumeration<NameClassPair> e = ctx.list("test")-->Line_23 $$ NameClassPair binding = e.next()[ FD ]
