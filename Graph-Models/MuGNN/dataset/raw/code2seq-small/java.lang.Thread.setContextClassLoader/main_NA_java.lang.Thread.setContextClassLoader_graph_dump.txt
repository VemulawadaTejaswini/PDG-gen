Line_6 $$ if (loader instanceof URLClassLoader) -->Line_13 $$ Thread.currentThread().setContextClassLoader(loader)[ CD ]
Line_23 $$ Method m = loader.loadClass(mainClass).getMethod("main", parms.getClass())-->Line_26 $$ m.invoke(null, (Object) parms)[ FD ]
Line_18 $$ String mainClass = args[2]-->Line_23 $$ Method m = loader.loadClass(mainClass).getMethod("main", parms.getClass())[ FD ]
Line_9 $$ URL[] newURLs = new URL[origClassPathSize]-->Line_11 $$ System.arraycopy(oldURLs, startIndex, newURLs, 0, origClassPathSize)[ FD ]
Line_6 $$ if (loader instanceof URLClassLoader) -->Line_11 $$ System.arraycopy(oldURLs, startIndex, newURLs, 0, origClassPathSize)[ CD ]
Line_3 $$ int origClassPathSize = Integer.parseInt(args[0])-->Line_11 $$ System.arraycopy(oldURLs, startIndex, newURLs, 0, origClassPathSize)[ FD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_15 $$ final Thread thread = new Thread(new SnapShooterDaemon(port), "snapshooter")[ CD ]
Line_15 $$ final Thread thread = new Thread(new SnapShooterDaemon(port), "snapshooter")-->Line_16 $$ thread.setDaemon(true)[ FD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_4 $$ int port = Integer.parseInt(args[1])[ CD ]
Line_6 $$ if (loader instanceof URLClassLoader) -->Line_8 $$ URL[] oldURLs = ucl.getURLs()[ CD ]
Line_12 $$ loader = new URLClassLoader(newURLs, null)-->Line_13 $$ Thread.currentThread().setContextClassLoader(loader)[ FD ]
Line_5 $$ ClassLoader loader = SnapShooter.class.getClassLoader()-->Line_23 $$ Method m = loader.loadClass(mainClass).getMethod("main", parms.getClass())[ FD ]
Line_20 $$ for (int j = 3; j < args.length; j++) -->Line_21 $$ parms[j - 3] = args[j][ CD ]
Line_19 $$ String[] parms = new String[args.length - 3]-->Line_23 $$ Method m = loader.loadClass(mainClass).getMethod("main", parms.getClass())[ FD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_5 $$ ClassLoader loader = SnapShooter.class.getClassLoader()[ CD ]
Line_5 $$ ClassLoader loader = SnapShooter.class.getClassLoader()-->Line_12 $$ loader = new URLClassLoader(newURLs, null)[ FD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_20 $$ for (int j = 3; j < args.length; j++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_3 $$ int origClassPathSize = Integer.parseInt(args[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_17 $$ thread.start()[ CD ]
Line_10 $$ final int startIndex = oldURLs.length - origClassPathSize-->Line_11 $$ System.arraycopy(oldURLs, startIndex, newURLs, 0, origClassPathSize)[ FD ]
Line_12 $$ loader = new URLClassLoader(newURLs, null)-->Line_23 $$ Method m = loader.loadClass(mainClass).getMethod("main", parms.getClass())[ FD ]
Line_6 $$ if (loader instanceof URLClassLoader) -->Line_7 $$ URLClassLoader ucl = (URLClassLoader) loader[ CD ]
Line_6 $$ if (loader instanceof URLClassLoader) -->Line_10 $$ final int startIndex = oldURLs.length - origClassPathSize[ CD ]
Line_8 $$ URL[] oldURLs = ucl.getURLs()-->Line_11 $$ System.arraycopy(oldURLs, startIndex, newURLs, 0, origClassPathSize)[ FD ]
Line_7 $$ URLClassLoader ucl = (URLClassLoader) loader-->Line_8 $$ URL[] oldURLs = ucl.getURLs()[ FD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_16 $$ thread.setDaemon(true)[ CD ]
Line_23 $$ Method m = loader.loadClass(mainClass).getMethod("main", parms.getClass())-->Line_25 $$ ensureAccess(m)[ FD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_23 $$ Method m = loader.loadClass(mainClass).getMethod("main", parms.getClass())[ CD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_19 $$ String[] parms = new String[args.length - 3][ CD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_6 $$ if (loader instanceof URLClassLoader) [ CD ]
Line_15 $$ final Thread thread = new Thread(new SnapShooterDaemon(port), "snapshooter")-->Line_17 $$ thread.start()[ FD ]
Line_5 $$ ClassLoader loader = SnapShooter.class.getClassLoader()-->Line_6 $$ if (loader instanceof URLClassLoader) [ FD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_18 $$ String mainClass = args[2][ CD ]
Line_6 $$ if (loader instanceof URLClassLoader) -->Line_9 $$ URL[] newURLs = new URL[origClassPathSize][ CD ]
Line_6 $$ if (loader instanceof URLClassLoader) -->Line_12 $$ loader = new URLClassLoader(newURLs, null)[ CD ]
Line_5 $$ ClassLoader loader = SnapShooter.class.getClassLoader()-->Line_13 $$ Thread.currentThread().setContextClassLoader(loader)[ FD ]
