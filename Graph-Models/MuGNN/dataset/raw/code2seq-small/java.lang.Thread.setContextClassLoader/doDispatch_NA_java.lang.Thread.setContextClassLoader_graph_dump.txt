Line_3 $$ String pluginServletContextName = GetterUtil.getString(theme.getServletContextName())-->Line_4 $$ ServletContext pluginServletContext = ServletContextPool.get(pluginServletContextName)[ FD ]
Line_17 $$ if (extension.equals(ThemeHelper.TEMPLATE_EXTENSION_JSP)) -->Line_18 $$ doIncludeJSP(servletContext, request, response, path, theme)[ CD ]
Line_2 $$ protected static String doDispatch(ServletContext servletContext, HttpServletRequest request, HttpServletResponse response, String path, Theme theme, boolean write, String extension) throws Exception -->Line_20 $$ return doIncludeVM(servletContext, request, response, path, theme, false, write)[ FD ]
Line_2 $$ protected static String doDispatch(ServletContext servletContext, HttpServletRequest request, HttpServletResponse response, String path, Theme theme, boolean write, String extension) throws Exception -->Line_19 $$ if (extension.equals(ThemeHelper.TEMPLATE_EXTENSION_VM)) [ FD ]
Line_2 $$ protected static String doDispatch(ServletContext servletContext, HttpServletRequest request, HttpServletResponse response, String path, Theme theme, boolean write, String extension) throws Exception -->Line_10 $$ ClassLoader contextClassLoader = currentThread.getContextClassLoader()[ CD ]
Line_15 $$ if (extension.equals(ThemeHelper.TEMPLATE_EXTENSION_FTL)) -->Line_17 $$ if (extension.equals(ThemeHelper.TEMPLATE_EXTENSION_JSP)) [ CD ]
Line_2 $$ protected static String doDispatch(ServletContext servletContext, HttpServletRequest request, HttpServletResponse response, String path, Theme theme, boolean write, String extension) throws Exception -->Line_18 $$ doIncludeJSP(servletContext, request, response, path, theme)[ FD ]
Line_6 $$ if (pluginServletContext != null) -->Line_7 $$ pluginClassLoader = pluginServletContext.getClassLoader()[ CD ]
Line_9 $$ Thread currentThread = Thread.currentThread()-->Line_12 $$ currentThread.setContextClassLoader(pluginClassLoader)[ FD ]
Line_2 $$ protected static String doDispatch(ServletContext servletContext, HttpServletRequest request, HttpServletResponse response, String path, Theme theme, boolean write, String extension) throws Exception -->Line_11 $$ if ((pluginClassLoader != null) && (pluginClassLoader != contextClassLoader)) [ CD ]
Line_9 $$ Thread currentThread = Thread.currentThread()-->Line_10 $$ ClassLoader contextClassLoader = currentThread.getContextClassLoader()[ FD ]
Line_2 $$ protected static String doDispatch(ServletContext servletContext, HttpServletRequest request, HttpServletResponse response, String path, Theme theme, boolean write, String extension) throws Exception -->Line_3 $$ String pluginServletContextName = GetterUtil.getString(theme.getServletContextName())[ CD ]
Line_2 $$ protected static String doDispatch(ServletContext servletContext, HttpServletRequest request, HttpServletResponse response, String path, Theme theme, boolean write, String extension) throws Exception -->Line_16 $$ return doIncludeFTL(servletContext, request, response, path, theme, false, write)[ FD ]
Line_15 $$ if (extension.equals(ThemeHelper.TEMPLATE_EXTENSION_FTL)) -->Line_16 $$ return doIncludeFTL(servletContext, request, response, path, theme, false, write)[ CD ]
Line_19 $$ if (extension.equals(ThemeHelper.TEMPLATE_EXTENSION_VM)) -->Line_20 $$ return doIncludeVM(servletContext, request, response, path, theme, false, write)[ CD ]
Line_2 $$ protected static String doDispatch(ServletContext servletContext, HttpServletRequest request, HttpServletResponse response, String path, Theme theme, boolean write, String extension) throws Exception -->Line_15 $$ if (extension.equals(ThemeHelper.TEMPLATE_EXTENSION_FTL)) [ FD ]
Line_2 $$ protected static String doDispatch(ServletContext servletContext, HttpServletRequest request, HttpServletResponse response, String path, Theme theme, boolean write, String extension) throws Exception -->Line_3 $$ String pluginServletContextName = GetterUtil.getString(theme.getServletContextName())[ FD ]
Line_2 $$ protected static String doDispatch(ServletContext servletContext, HttpServletRequest request, HttpServletResponse response, String path, Theme theme, boolean write, String extension) throws Exception -->Line_9 $$ Thread currentThread = Thread.currentThread()[ CD ]
Line_2 $$ protected static String doDispatch(ServletContext servletContext, HttpServletRequest request, HttpServletResponse response, String path, Theme theme, boolean write, String extension) throws Exception -->Line_4 $$ ServletContext pluginServletContext = ServletContextPool.get(pluginServletContextName)[ CD ]
Line_7 $$ pluginClassLoader = pluginServletContext.getClassLoader()-->Line_12 $$ currentThread.setContextClassLoader(pluginClassLoader)[ FD ]
Line_9 $$ Thread currentThread = Thread.currentThread()-->Line_25 $$ currentThread.setContextClassLoader(contextClassLoader)[ FD ]
Line_17 $$ if (extension.equals(ThemeHelper.TEMPLATE_EXTENSION_JSP)) -->Line_19 $$ if (extension.equals(ThemeHelper.TEMPLATE_EXTENSION_VM)) [ CD ]
Line_11 $$ if ((pluginClassLoader != null) && (pluginClassLoader != contextClassLoader)) -->Line_12 $$ currentThread.setContextClassLoader(pluginClassLoader)[ CD ]
Line_24 $$ if ((pluginClassLoader != null) && (pluginClassLoader != contextClassLoader)) -->Line_25 $$ currentThread.setContextClassLoader(contextClassLoader)[ CD ]
Line_4 $$ ServletContext pluginServletContext = ServletContextPool.get(pluginServletContextName)-->Line_7 $$ pluginClassLoader = pluginServletContext.getClassLoader()[ FD ]
Line_2 $$ protected static String doDispatch(ServletContext servletContext, HttpServletRequest request, HttpServletResponse response, String path, Theme theme, boolean write, String extension) throws Exception -->Line_17 $$ if (extension.equals(ThemeHelper.TEMPLATE_EXTENSION_JSP)) [ FD ]
Line_10 $$ ClassLoader contextClassLoader = currentThread.getContextClassLoader()-->Line_25 $$ currentThread.setContextClassLoader(contextClassLoader)[ FD ]
Line_5 $$ ClassLoader pluginClassLoader = null-->Line_7 $$ pluginClassLoader = pluginServletContext.getClassLoader()[ FD ]
Line_5 $$ ClassLoader pluginClassLoader = null-->Line_12 $$ currentThread.setContextClassLoader(pluginClassLoader)[ FD ]
Line_2 $$ protected static String doDispatch(ServletContext servletContext, HttpServletRequest request, HttpServletResponse response, String path, Theme theme, boolean write, String extension) throws Exception -->Line_6 $$ if (pluginServletContext != null) [ CD ]
Line_2 $$ protected static String doDispatch(ServletContext servletContext, HttpServletRequest request, HttpServletResponse response, String path, Theme theme, boolean write, String extension) throws Exception -->Line_5 $$ ClassLoader pluginClassLoader = null[ CD ]
Line_4 $$ ServletContext pluginServletContext = ServletContextPool.get(pluginServletContextName)-->Line_6 $$ if (pluginServletContext != null) [ FD ]
