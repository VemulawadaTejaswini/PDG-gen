Line_22 $$ final CompositeIndex index = deploymentUnit.getAttachment(Attachments.COMPOSITE_ANNOTATION_INDEX)-->Line_55 $$ final Set<ClassInfo> subclasses = index.getAllKnownImplementors(SERVER_APPLICATION_CONFIG)[ FD ]
Line_4 $$ final DeploymentUnit deploymentUnit = phaseContext.getDeploymentUnit()-->Line_5 $$ final Module module = deploymentUnit.getAttachment(Attachments.MODULE)[ FD ]
Line_39 $$ final List<AnnotationInstance> clientEndpoints = index.getAnnotations(CLIENT_ENDPOINT)-->Line_40 $$ if (clientEndpoints != null) [ FD ]
Line_29 $$ Class<?> moduleClass = ClassLoadingUtils.loadClass(clazz.name().toString(), module)-->Line_31 $$ annotatedEndpoints.add(moduleClass)[ FD ]
Line_30 $$ if (!Modifier.isAbstract(moduleClass.getModifiers())) -->Line_31 $$ annotatedEndpoints.add(moduleClass)[ CD ]
Line_12 $$ WarMetaData metaData = deploymentUnit.getAttachment(WarMetaData.ATTACHMENT_KEY)-->Line_16 $$ if (!metaData.getMergedJBossWebMetaData().isEnableWebSockets()) [ FD ]
Line_19 $$ final Set<Class<?>> annotatedEndpoints = new HashSet()-->Line_82 $$ doDeployment(deploymentUnit, webSocketDeploymentInfo, annotatedEndpoints, config, endpoints)[ FD ]
Line_81 $$ WebSocketDeploymentInfo webSocketDeploymentInfo = new WebSocketDeploymentInfo()-->Line_83 $$ installWebsockets(phaseContext, webSocketDeploymentInfo)[ FD ]
Line_68 $$ final Set<ClassInfo> epClasses = index.getAllKnownSubclasses(ENDPOINT)-->Line_69 $$ if (epClasses != null) [ FD ]
Line_23 $$ final List<AnnotationInstance> serverEndpoints = index.getAnnotations(SERVER_ENDPOINT)-->Line_24 $$ if (serverEndpoints != null) [ FD ]
Line_81 $$ WebSocketDeploymentInfo webSocketDeploymentInfo = new WebSocketDeploymentInfo()-->Line_82 $$ doDeployment(deploymentUnit, webSocketDeploymentInfo, annotatedEndpoints, config, endpoints)[ FD ]
Line_4 $$ final DeploymentUnit deploymentUnit = phaseContext.getDeploymentUnit()-->Line_12 $$ WarMetaData metaData = deploymentUnit.getAttachment(WarMetaData.ATTACHMENT_KEY)[ FD ]
Line_25 $$ for (AnnotationInstance endpoint : serverEndpoints) -->Line_43 $$ ClassInfo clazz = (ClassInfo) endpoint.target()[ FD ]
Line_22 $$ final CompositeIndex index = deploymentUnit.getAttachment(Attachments.COMPOSITE_ANNOTATION_INDEX)-->Line_23 $$ final List<AnnotationInstance> serverEndpoints = index.getAnnotations(SERVER_ENDPOINT)[ FD ]
Line_29 $$ Class<?> moduleClass = ClassLoadingUtils.loadClass(clazz.name().toString(), module)-->Line_60 $$ if (!Modifier.isAbstract(moduleClass.getModifiers())) [ FD ]
Line_55 $$ final Set<ClassInfo> subclasses = index.getAllKnownImplementors(SERVER_APPLICATION_CONFIG)-->Line_56 $$ if (subclasses != null) [ FD ]
Line_27 $$ ClassInfo clazz = (ClassInfo) endpoint.target()-->Line_50 $$ UndertowLogger.ROOT_LOGGER.couldNotLoadWebSocketEndpoint(clazz.name().toString(), e)[ FD ]
Line_27 $$ ClassInfo clazz = (ClassInfo) endpoint.target()-->Line_72 $$ Class<?> moduleClass = ClassLoadingUtils.loadClass(clazz.name().toString(), module)[ FD ]
Line_20 $$ final Set<Class<? extends Endpoint>> endpoints = new HashSet()-->Line_74 $$ endpoints.add((Class) moduleClass)[ FD ]
Line_5 $$ final Module module = deploymentUnit.getAttachment(Attachments.MODULE)-->Line_29 $$ Class<?> moduleClass = ClassLoadingUtils.loadClass(clazz.name().toString(), module)[ FD ]
Line_29 $$ Class<?> moduleClass = ClassLoadingUtils.loadClass(clazz.name().toString(), module)-->Line_73 $$ if (!Modifier.isAbstract(moduleClass.getModifiers())) [ FD ]
Line_5 $$ final Module module = deploymentUnit.getAttachment(Attachments.MODULE)-->Line_11 $$ Thread.currentThread().setContextClassLoader(module.getClassLoader())[ FD ]
Line_22 $$ final CompositeIndex index = deploymentUnit.getAttachment(Attachments.COMPOSITE_ANNOTATION_INDEX)-->Line_39 $$ final List<AnnotationInstance> clientEndpoints = index.getAnnotations(CLIENT_ENDPOINT)[ FD ]
Line_29 $$ Class<?> moduleClass = ClassLoadingUtils.loadClass(clazz.name().toString(), module)-->Line_46 $$ if (!Modifier.isAbstract(moduleClass.getModifiers())) [ FD ]
Line_21 $$ final Set<Class<? extends ServerApplicationConfig>> config = new HashSet()-->Line_61 $$ config.add((Class) moduleClass)[ FD ]
Line_12 $$ WarMetaData metaData = deploymentUnit.getAttachment(WarMetaData.ATTACHMENT_KEY)-->Line_13 $$ if (metaData == null || metaData.getMergedJBossWebMetaData() == null) [ FD ]
Line_19 $$ final Set<Class<?>> annotatedEndpoints = new HashSet()-->Line_31 $$ annotatedEndpoints.add(moduleClass)[ FD ]
Line_16 $$ if (!metaData.getMergedJBossWebMetaData().isEnableWebSockets()) -->Line_17 $$ return[ CD ]
Line_27 $$ ClassInfo clazz = (ClassInfo) endpoint.target()-->Line_45 $$ Class<?> moduleClass = ClassLoadingUtils.loadClass(clazz.name().toString(), module)[ FD ]
Line_29 $$ Class<?> moduleClass = ClassLoadingUtils.loadClass(clazz.name().toString(), module)-->Line_47 $$ annotatedEndpoints.add(moduleClass)[ FD ]
Line_26 $$ if (endpoint.target() instanceof ClassInfo) -->Line_27 $$ ClassInfo clazz = (ClassInfo) endpoint.target()[ CD ]
Line_4 $$ final DeploymentUnit deploymentUnit = phaseContext.getDeploymentUnit()-->Line_22 $$ final CompositeIndex index = deploymentUnit.getAttachment(Attachments.COMPOSITE_ANNOTATION_INDEX)[ FD ]
Line_21 $$ final Set<Class<? extends ServerApplicationConfig>> config = new HashSet()-->Line_82 $$ doDeployment(deploymentUnit, webSocketDeploymentInfo, annotatedEndpoints, config, endpoints)[ FD ]
Line_5 $$ final Module module = deploymentUnit.getAttachment(Attachments.MODULE)-->Line_6 $$ if (module == null) [ FD ]
Line_4 $$ final DeploymentUnit deploymentUnit = phaseContext.getDeploymentUnit()-->Line_82 $$ doDeployment(deploymentUnit, webSocketDeploymentInfo, annotatedEndpoints, config, endpoints)[ FD ]
Line_60 $$ if (!Modifier.isAbstract(moduleClass.getModifiers())) -->Line_61 $$ config.add((Class) moduleClass)[ CD ]
Line_27 $$ ClassInfo clazz = (ClassInfo) endpoint.target()-->Line_59 $$ Class<?> moduleClass = ClassLoadingUtils.loadClass(clazz.name().toString(), module)[ FD ]
Line_27 $$ ClassInfo clazz = (ClassInfo) endpoint.target()-->Line_29 $$ Class<?> moduleClass = ClassLoadingUtils.loadClass(clazz.name().toString(), module)[ FD ]
Line_27 $$ ClassInfo clazz = (ClassInfo) endpoint.target()-->Line_34 $$ UndertowLogger.ROOT_LOGGER.couldNotLoadWebSocketEndpoint(clazz.name().toString(), e)[ FD ]
Line_25 $$ for (AnnotationInstance endpoint : serverEndpoints) -->Line_26 $$ if (endpoint.target() instanceof ClassInfo) [ FD ]
Line_20 $$ final Set<Class<? extends Endpoint>> endpoints = new HashSet()-->Line_82 $$ doDeployment(deploymentUnit, webSocketDeploymentInfo, annotatedEndpoints, config, endpoints)[ FD ]
Line_27 $$ ClassInfo clazz = (ClassInfo) endpoint.target()-->Line_77 $$ UndertowLogger.ROOT_LOGGER.couldNotLoadWebSocketConfig(clazz.name().toString(), e)[ FD ]
Line_27 $$ ClassInfo clazz = (ClassInfo) endpoint.target()-->Line_64 $$ UndertowLogger.ROOT_LOGGER.couldNotLoadWebSocketConfig(clazz.name().toString(), e)[ FD ]
Line_5 $$ final Module module = deploymentUnit.getAttachment(Attachments.MODULE)-->Line_45 $$ Class<?> moduleClass = ClassLoadingUtils.loadClass(clazz.name().toString(), module)[ FD ]
Line_29 $$ Class<?> moduleClass = ClassLoadingUtils.loadClass(clazz.name().toString(), module)-->Line_30 $$ if (!Modifier.isAbstract(moduleClass.getModifiers())) [ FD ]
Line_19 $$ final Set<Class<?>> annotatedEndpoints = new HashSet()-->Line_47 $$ annotatedEndpoints.add(moduleClass)[ FD ]
Line_5 $$ final Module module = deploymentUnit.getAttachment(Attachments.MODULE)-->Line_72 $$ Class<?> moduleClass = ClassLoadingUtils.loadClass(clazz.name().toString(), module)[ FD ]
Line_13 $$ if (metaData == null || metaData.getMergedJBossWebMetaData() == null) -->Line_14 $$ return[ CD ]
Line_9 $$ ClassLoader oldCl = Thread.currentThread().getContextClassLoader()-->Line_85 $$ Thread.currentThread().setContextClassLoader(oldCl)[ FD ]
Line_5 $$ final Module module = deploymentUnit.getAttachment(Attachments.MODULE)-->Line_59 $$ Class<?> moduleClass = ClassLoadingUtils.loadClass(clazz.name().toString(), module)[ FD ]
Line_73 $$ if (!Modifier.isAbstract(moduleClass.getModifiers())) -->Line_74 $$ endpoints.add((Class) moduleClass)[ CD ]
Line_25 $$ for (AnnotationInstance endpoint : serverEndpoints) -->Line_27 $$ ClassInfo clazz = (ClassInfo) endpoint.target()[ FD ]
Line_6 $$ if (module == null) -->Line_7 $$ return[ CD ]
Line_25 $$ for (AnnotationInstance endpoint : serverEndpoints) -->Line_42 $$ if (endpoint.target() instanceof ClassInfo) [ FD ]
Line_46 $$ if (!Modifier.isAbstract(moduleClass.getModifiers())) -->Line_47 $$ annotatedEndpoints.add(moduleClass)[ CD ]
Line_22 $$ final CompositeIndex index = deploymentUnit.getAttachment(Attachments.COMPOSITE_ANNOTATION_INDEX)-->Line_68 $$ final Set<ClassInfo> epClasses = index.getAllKnownSubclasses(ENDPOINT)[ FD ]
