Line_2 $$ public void testRemoteNamingGracefulShutdown() throws Exception -->Line_3 $$ ModelNode op = new ModelNode()[ CD ]
Line_7 $$ final InitialContext ctx = getRemoteContext()-->Line_21 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + StatefulBean.class.getSimpleName() + "!" + Remote.class.getName())[ FD ]
Line_7 $$ final InitialContext ctx = getRemoteContext()-->Line_29 $$ ctx.close()[ FD ]
Line_2 $$ public void testRemoteNamingGracefulShutdown() throws Exception -->Line_8 $$ final ClassLoader current = Thread.currentThread().getContextClassLoader()[ CD ]
Line_2 $$ public void testRemoteNamingGracefulShutdown() throws Exception -->Line_4 $$ op.get(ModelDescriptionConstants.OP).set("suspend")[ CD ]
Line_3 $$ ModelNode op = new ModelNode()-->Line_4 $$ op.get(ModelDescriptionConstants.OP).set("suspend")[ FD ]
Line_3 $$ ModelNode op = new ModelNode()-->Line_26 $$ op = new ModelNode()[ FD ]
Line_3 $$ ModelNode op = new ModelNode()-->Line_28 $$ managementClient.getControllerClient().execute(op)[ FD ]
Line_8 $$ final ClassLoader current = Thread.currentThread().getContextClassLoader()-->Line_30 $$ Thread.currentThread().setContextClassLoader(current)[ FD ]
Line_2 $$ public void testRemoteNamingGracefulShutdown() throws Exception -->Line_7 $$ final InitialContext ctx = getRemoteContext()[ CD ]
Line_26 $$ op = new ModelNode()-->Line_28 $$ managementClient.getControllerClient().execute(op)[ FD ]
Line_3 $$ ModelNode op = new ModelNode()-->Line_5 $$ managementClient.getControllerClient().execute(op)[ FD ]
Line_2 $$ public void testRemoteNamingGracefulShutdown() throws Exception -->Line_5 $$ managementClient.getControllerClient().execute(op)[ CD ]
Line_2 $$ public void testRemoteNamingGracefulShutdown() throws Exception -->Line_6 $$ Thread.currentThread().setContextClassLoader(Remote.class.getClassLoader())[ CD ]
Line_3 $$ ModelNode op = new ModelNode()-->Line_27 $$ op.get(ModelDescriptionConstants.OP).set("resume")[ FD ]
Line_7 $$ final InitialContext ctx = getRemoteContext()-->Line_11 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())[ FD ]
Line_7 $$ final InitialContext ctx = getRemoteContext()-->Line_16 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())[ FD ]
Line_26 $$ op = new ModelNode()-->Line_27 $$ op.get(ModelDescriptionConstants.OP).set("resume")[ FD ]
