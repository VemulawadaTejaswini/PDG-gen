Line_8 $$ final InitialContext ctx = getRemoteContext()-->Line_12 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Bean.class.getSimpleName() + "!" + Remote.class.getName())[ FD ]
Line_8 $$ final InitialContext ctx = getRemoteContext()-->Line_30 $$ ctx.close()[ FD ]
Line_4 $$ ModelNode op = new ModelNode()-->Line_27 $$ op = new ModelNode()[ FD ]
Line_27 $$ op = new ModelNode()-->Line_28 $$ op.get(ModelDescriptionConstants.OP).set("resume")[ FD ]
Line_8 $$ final InitialContext ctx = getRemoteContext()-->Line_17 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + Singleton.class.getSimpleName() + "!" + BinderRemote.class.getName())[ FD ]
Line_27 $$ op = new ModelNode()-->Line_29 $$ managementClient.getControllerClient().execute(op)[ FD ]
Line_9 $$ final ClassLoader current = Thread.currentThread().getContextClassLoader()-->Line_31 $$ Thread.currentThread().setContextClassLoader(current)[ FD ]
Line_4 $$ ModelNode op = new ModelNode()-->Line_6 $$ managementClient.getControllerClient().execute(op)[ FD ]
Line_4 $$ ModelNode op = new ModelNode()-->Line_5 $$ op.get(ModelDescriptionConstants.OP).set("suspend")[ FD ]
Line_4 $$ ModelNode op = new ModelNode()-->Line_29 $$ managementClient.getControllerClient().execute(op)[ FD ]
Line_8 $$ final InitialContext ctx = getRemoteContext()-->Line_22 $$ Remote remote = (Remote) ctx.lookup(ARCHIVE_NAME + "/" + StatefulBean.class.getSimpleName() + "!" + Remote.class.getName())[ FD ]
Line_4 $$ ModelNode op = new ModelNode()-->Line_28 $$ op.get(ModelDescriptionConstants.OP).set("resume")[ FD ]
