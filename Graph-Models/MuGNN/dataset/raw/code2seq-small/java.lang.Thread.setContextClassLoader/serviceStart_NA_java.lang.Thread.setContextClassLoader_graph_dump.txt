Line_3 $$ ThreadFactoryBuilder tfBuilder = new ThreadFactoryBuilder().setNameFormat("CommitterEvent Processor #%d")-->Line_14 $$ ThreadFactory tf = tfBuilder.build()[ FD ]
Line_4 $$ if (jobClassLoader != null) -->Line_12 $$ tfBuilder.setThreadFactory(backingTf)[ CD ]
Line_2 $$ protected void serviceStart() throws Exception -->Line_34 $$ super.serviceStart()[ CD ]
Line_2 $$ protected void serviceStart() throws Exception -->Line_32 $$ eventHandlingThread.setName("CommitterEvent Handler")[ CD ]
Line_5 $$ ThreadFactory backingTf = new ThreadFactory() -->Line_12 $$ tfBuilder.setThreadFactory(backingTf)[ FD ]
Line_5 $$ ThreadFactory backingTf = new ThreadFactory() -->Line_7 $$ Thread thread = new Thread(r)[ CD ]
Line_4 $$ if (jobClassLoader != null) -->Line_5 $$ ThreadFactory backingTf = new ThreadFactory() [ CD ]
Line_16 $$ eventHandlingThread = new Thread(new Runnable() -->Line_19 $$ while (!stopped.get() && !Thread.currentThread().isInterrupted()) [ CD ]
Line_2 $$ protected void serviceStart() throws Exception -->Line_4 $$ if (jobClassLoader != null) [ CD ]
Line_2 $$ protected void serviceStart() throws Exception -->Line_33 $$ eventHandlingThread.start()[ CD ]
Line_2 $$ protected void serviceStart() throws Exception -->Line_3 $$ ThreadFactoryBuilder tfBuilder = new ThreadFactoryBuilder().setNameFormat("CommitterEvent Processor #%d")[ CD ]
Line_7 $$ Thread thread = new Thread(r)-->Line_8 $$ thread.setContextClassLoader(jobClassLoader)[ FD ]
Line_18 $$ CommitterEvent event = null-->Line_21 $$ event = eventQueue.take()[ FD ]
Line_19 $$ while (!stopped.get() && !Thread.currentThread().isInterrupted()) -->Line_28 $$ launcherPool.execute(new EventProcessor(event))[ CD ]
Line_3 $$ ThreadFactoryBuilder tfBuilder = new ThreadFactoryBuilder().setNameFormat("CommitterEvent Processor #%d")-->Line_12 $$ tfBuilder.setThreadFactory(backingTf)[ FD ]
Line_2 $$ protected void serviceStart() throws Exception -->Line_14 $$ ThreadFactory tf = tfBuilder.build()[ CD ]
Line_5 $$ ThreadFactory backingTf = new ThreadFactory() -->Line_9 $$ return thread[ CD ]
Line_5 $$ ThreadFactory backingTf = new ThreadFactory() -->Line_8 $$ thread.setContextClassLoader(jobClassLoader)[ CD ]
Line_16 $$ eventHandlingThread = new Thread(new Runnable() -->Line_18 $$ CommitterEvent event = null[ CD ]
Line_23 $$ if (!stopped.get()) -->Line_24 $$ LOG.error("Returning, interrupted : " + e)[ CD ]
