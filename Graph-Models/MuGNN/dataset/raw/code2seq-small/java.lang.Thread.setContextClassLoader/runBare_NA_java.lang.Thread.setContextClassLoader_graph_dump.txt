Line_25 $$ Constructor constructor = shadowingLoadTimeWeaverClass.getConstructor(ClassLoader.class)-->Line_27 $$ Object ltw = constructor.newInstance(shadowingClassLoader)[ FD ]
Line_41 $$ Method addBeanPostProcessor = beanFactoryClass.getMethod("addBeanPostProcessor", beanPostProcessorClass)-->Line_42 $$ addBeanPostProcessor.invoke(beanFactory, beanPostProcessor)[ FD ]
Line_45 $$ cachedContext = genericApplicationContextClass.getConstructor(defaultListableBeanFactoryClass).newInstance(beanFactory)-->Line_58 $$ addContextMethod.invoke(shadowedTestCase, configLocations, cachedContext)[ FD ]
Line_15 $$ if (shadowingClassLoader == null) -->Line_17 $$ classLoaderCache.put(combinationOfContextLocationsForThisTestClass, shadowingClassLoader)[ CD ]
Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_40 $$ Class beanPostProcessorClass = shadowingClassLoader.loadClass(BeanPostProcessor.class.getName())[ FD ]
Line_24 $$ Class shadowingLoadTimeWeaverClass = shadowingClassLoader.loadClass(ShadowingLoadTimeWeaver.class.getName())-->Line_25 $$ Constructor constructor = shadowingLoadTimeWeaverClass.getConstructor(ClassLoader.class)[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_47 $$ contextCache.put(combinationOfContextLocationsForThisTestClass, cachedContext)[ CD ]
Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_43 $$ Class genericApplicationContextClass = shadowingClassLoader.loadClass(GenericApplicationContext.class.getName())[ FD ]
Line_32 $$ Object reader = beanDefinitionReaderClass.getConstructor(beanDefinitionRegistryClass).newInstance(beanFactory)-->Line_34 $$ loadBeanDefinitions.invoke(reader, new Object[] [ FD ]
Line_22 $$ Object cachedContext = contextCache.get(combinationOfContextLocationsForThisTestClass)-->Line_23 $$ if (cachedContext == null) [ FD ]
Line_2 $$ public void runBare() throws Throwable -->Line_7 $$ String combinationOfContextLocationsForThisTestClass = cacheKeys()[ CD ]
Line_2 $$ public void runBare() throws Throwable -->Line_9 $$ ClassLoader initialClassLoader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_23 $$ if (cachedContext == null) -->Line_29 $$ Object beanFactory = BeanUtils.instantiateClass(beanFactoryClass)[ CD ]
Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_43 $$ Class genericApplicationContextClass = shadowingClassLoader.loadClass(GenericApplicationContext.class.getName())[ FD ]
Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_35 $$ Class loadTimeWeaverInjectingBeanPostProcessorClass = shadowingClassLoader.loadClass(LoadTimeWeaverInjectingBeanPostProcessor.class.getName())[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_33 $$ Method loadBeanDefinitions = beanDefinitionReaderClass.getMethod("loadBeanDefinitions", String[].class)[ CD ]
Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_49 $$ Class shadowedTestClass = shadowingClassLoader.loadClass(getClass().getName())[ FD ]
Line_3 $$ if (!shouldUseShadowLoader()) -->Line_4 $$ super.runBare()[ CD ]
Line_30 $$ Class beanDefinitionReaderClass = shadowingClassLoader.loadClass(XmlBeanDefinitionReader.class.getName())-->Line_33 $$ Method loadBeanDefinitions = beanDefinitionReaderClass.getMethod("loadBeanDefinitions", String[].class)[ FD ]
Line_33 $$ Method loadBeanDefinitions = beanDefinitionReaderClass.getMethod("loadBeanDefinitions", String[].class)-->Line_34 $$ loadBeanDefinitions.invoke(reader, new Object[] [ FD ]
Line_45 $$ cachedContext = genericApplicationContextClass.getConstructor(defaultListableBeanFactoryClass).newInstance(beanFactory)-->Line_47 $$ contextCache.put(combinationOfContextLocationsForThisTestClass, cachedContext)[ FD ]
Line_49 $$ Class shadowedTestClass = shadowingClassLoader.loadClass(getClass().getName())-->Line_50 $$ TestCase shadowedTestCase = (TestCase) BeanUtils.instantiateClass(shadowedTestClass)[ FD ]
Line_56 $$ Method addContextMethod = shadowedTestClass.getMethod("addContext", String[].class, applicationContextClass)-->Line_57 $$ ReflectionUtils.makeAccessible(addContextMethod)[ FD ]
Line_10 $$ if (this.shadowParent != null) -->Line_15 $$ if (shadowingClassLoader == null) [ CD ]
Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_31 $$ Class beanDefinitionRegistryClass = shadowingClassLoader.loadClass(BeanDefinitionRegistry.class.getName())[ FD ]
Line_22 $$ Object cachedContext = contextCache.get(combinationOfContextLocationsForThisTestClass)-->Line_47 $$ contextCache.put(combinationOfContextLocationsForThisTestClass, cachedContext)[ FD ]
Line_8 $$ ClassLoader classLoaderForThisTestClass = getClass().getClassLoader()-->Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_31 $$ Class beanDefinitionRegistryClass = shadowingClassLoader.loadClass(BeanDefinitionRegistry.class.getName())[ CD ]
Line_2 $$ public void runBare() throws Throwable -->Line_3 $$ if (!shouldUseShadowLoader()) [ CD ]
Line_27 $$ Object ltw = constructor.newInstance(shadowingClassLoader)-->Line_39 $$ Object beanPostProcessor = bppConstructor.newInstance(ltw)[ FD ]
Line_7 $$ String combinationOfContextLocationsForThisTestClass = cacheKeys()-->Line_47 $$ contextCache.put(combinationOfContextLocationsForThisTestClass, cachedContext)[ FD ]
Line_36 $$ Class loadTimeWeaverClass = shadowingClassLoader.loadClass(LoadTimeWeaver.class.getName())-->Line_37 $$ Constructor bppConstructor = loadTimeWeaverInjectingBeanPostProcessorClass.getConstructor(loadTimeWeaverClass)[ FD ]
Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_31 $$ Class beanDefinitionRegistryClass = shadowingClassLoader.loadClass(BeanDefinitionRegistry.class.getName())[ FD ]
Line_40 $$ Class beanPostProcessorClass = shadowingClassLoader.loadClass(BeanPostProcessor.class.getName())-->Line_41 $$ Method addBeanPostProcessor = beanFactoryClass.getMethod("addBeanPostProcessor", beanPostProcessorClass)[ FD ]
Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_24 $$ Class shadowingLoadTimeWeaverClass = shadowingClassLoader.loadClass(ShadowingLoadTimeWeaver.class.getName())[ FD ]
Line_51 $$ Class thisShadowedClass = shadowingClassLoader.loadClass(AbstractJpaTests.class.getName())-->Line_52 $$ Field shadowed = thisShadowedClass.getDeclaredField("shadowParent")[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_41 $$ Method addBeanPostProcessor = beanFactoryClass.getMethod("addBeanPostProcessor", beanPostProcessorClass)[ CD ]
Line_15 $$ if (shadowingClassLoader == null) -->Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)[ CD ]
Line_35 $$ Class loadTimeWeaverInjectingBeanPostProcessorClass = shadowingClassLoader.loadClass(LoadTimeWeaverInjectingBeanPostProcessor.class.getName())-->Line_37 $$ Constructor bppConstructor = loadTimeWeaverInjectingBeanPostProcessorClass.getConstructor(loadTimeWeaverClass)[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_46 $$ genericApplicationContextClass.getMethod("refresh").invoke(cachedContext)[ CD ]
Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_55 $$ Class applicationContextClass = shadowingClassLoader.loadClass(ConfigurableApplicationContext.class.getName())[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_39 $$ Object beanPostProcessor = bppConstructor.newInstance(ltw)[ CD ]
Line_50 $$ TestCase shadowedTestCase = (TestCase) BeanUtils.instantiateClass(shadowedTestClass)-->Line_59 $$ shadowedTestCase.setName(getName())[ FD ]
Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_40 $$ Class beanPostProcessorClass = shadowingClassLoader.loadClass(BeanPostProcessor.class.getName())[ FD ]
Line_31 $$ Class beanDefinitionRegistryClass = shadowingClassLoader.loadClass(BeanDefinitionRegistry.class.getName())-->Line_32 $$ Object reader = beanDefinitionReaderClass.getConstructor(beanDefinitionRegistryClass).newInstance(beanFactory)[ FD ]
Line_44 $$ Class defaultListableBeanFactoryClass = shadowingClassLoader.loadClass(DefaultListableBeanFactory.class.getName())-->Line_45 $$ cachedContext = genericApplicationContextClass.getConstructor(defaultListableBeanFactoryClass).newInstance(beanFactory)[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_36 $$ Class loadTimeWeaverClass = shadowingClassLoader.loadClass(LoadTimeWeaver.class.getName())[ CD ]
Line_10 $$ if (this.shadowParent != null) -->Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)[ CD ]
Line_23 $$ if (cachedContext == null) -->Line_35 $$ Class loadTimeWeaverInjectingBeanPostProcessorClass = shadowingClassLoader.loadClass(LoadTimeWeaverInjectingBeanPostProcessor.class.getName())[ CD ]
Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_28 $$ Class beanFactoryClass = shadowingClassLoader.loadClass(DefaultListableBeanFactory.class.getName())[ FD ]
Line_29 $$ Object beanFactory = BeanUtils.instantiateClass(beanFactoryClass)-->Line_45 $$ cachedContext = genericApplicationContextClass.getConstructor(defaultListableBeanFactoryClass).newInstance(beanFactory)[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_32 $$ Object reader = beanDefinitionReaderClass.getConstructor(beanDefinitionRegistryClass).newInstance(beanFactory)[ CD ]
Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_27 $$ Object ltw = constructor.newInstance(shadowingClassLoader)[ FD ]
Line_50 $$ TestCase shadowedTestCase = (TestCase) BeanUtils.instantiateClass(shadowedTestClass)-->Line_60 $$ shadowedTestCase.runBare()[ FD ]
Line_10 $$ if (this.shadowParent != null) -->Line_12 $$ super.runBare()[ CD ]
Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_28 $$ Class beanFactoryClass = shadowingClassLoader.loadClass(DefaultListableBeanFactory.class.getName())[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_40 $$ Class beanPostProcessorClass = shadowingClassLoader.loadClass(BeanPostProcessor.class.getName())[ CD ]
Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_20 $$ Thread.currentThread().setContextClassLoader(shadowingClassLoader)[ FD ]
Line_7 $$ String combinationOfContextLocationsForThisTestClass = cacheKeys()-->Line_22 $$ Object cachedContext = contextCache.get(combinationOfContextLocationsForThisTestClass)[ FD ]
Line_52 $$ Field shadowed = thisShadowedClass.getDeclaredField("shadowParent")-->Line_54 $$ shadowed.set(shadowedTestCase, this)[ FD ]
Line_45 $$ cachedContext = genericApplicationContextClass.getConstructor(defaultListableBeanFactoryClass).newInstance(beanFactory)-->Line_46 $$ genericApplicationContextClass.getMethod("refresh").invoke(cachedContext)[ FD ]
Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_44 $$ Class defaultListableBeanFactoryClass = shadowingClassLoader.loadClass(DefaultListableBeanFactory.class.getName())[ FD ]
Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_20 $$ Thread.currentThread().setContextClassLoader(shadowingClassLoader)[ FD ]
Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_36 $$ Class loadTimeWeaverClass = shadowingClassLoader.loadClass(LoadTimeWeaver.class.getName())[ FD ]
Line_37 $$ Constructor bppConstructor = loadTimeWeaverInjectingBeanPostProcessorClass.getConstructor(loadTimeWeaverClass)-->Line_39 $$ Object beanPostProcessor = bppConstructor.newInstance(ltw)[ FD ]
Line_2 $$ public void runBare() throws Throwable -->Line_10 $$ if (this.shadowParent != null) [ CD ]
Line_50 $$ TestCase shadowedTestCase = (TestCase) BeanUtils.instantiateClass(shadowedTestClass)-->Line_54 $$ shadowed.set(shadowedTestCase, this)[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_30 $$ Class beanDefinitionReaderClass = shadowingClassLoader.loadClass(XmlBeanDefinitionReader.class.getName())[ CD ]
Line_23 $$ if (cachedContext == null) -->Line_34 $$ loadBeanDefinitions.invoke(reader, new Object[] [ CD ]
Line_9 $$ ClassLoader initialClassLoader = Thread.currentThread().getContextClassLoader()-->Line_64 $$ Thread.currentThread().setContextClassLoader(initialClassLoader)[ FD ]
Line_49 $$ Class shadowedTestClass = shadowingClassLoader.loadClass(getClass().getName())-->Line_56 $$ Method addContextMethod = shadowedTestClass.getMethod("addContext", String[].class, applicationContextClass)[ FD ]
Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_17 $$ classLoaderCache.put(combinationOfContextLocationsForThisTestClass, shadowingClassLoader)[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_26 $$ constructor.setAccessible(true)[ CD ]
Line_22 $$ Object cachedContext = contextCache.get(combinationOfContextLocationsForThisTestClass)-->Line_46 $$ genericApplicationContextClass.getMethod("refresh").invoke(cachedContext)[ FD ]
Line_8 $$ ClassLoader classLoaderForThisTestClass = getClass().getClassLoader()-->Line_11 $$ Thread.currentThread().setContextClassLoader(classLoaderForThisTestClass)[ FD ]
Line_7 $$ String combinationOfContextLocationsForThisTestClass = cacheKeys()-->Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_27 $$ Object ltw = constructor.newInstance(shadowingClassLoader)[ CD ]
Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_15 $$ if (shadowingClassLoader == null) [ FD ]
Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_24 $$ Class shadowingLoadTimeWeaverClass = shadowingClassLoader.loadClass(ShadowingLoadTimeWeaver.class.getName())[ FD ]
Line_50 $$ TestCase shadowedTestCase = (TestCase) BeanUtils.instantiateClass(shadowedTestClass)-->Line_58 $$ addContextMethod.invoke(shadowedTestCase, configLocations, cachedContext)[ FD ]
Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_51 $$ Class thisShadowedClass = shadowingClassLoader.loadClass(AbstractJpaTests.class.getName())[ FD ]
Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_35 $$ Class loadTimeWeaverInjectingBeanPostProcessorClass = shadowingClassLoader.loadClass(LoadTimeWeaverInjectingBeanPostProcessor.class.getName())[ FD ]
Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_36 $$ Class loadTimeWeaverClass = shadowingClassLoader.loadClass(LoadTimeWeaver.class.getName())[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_45 $$ cachedContext = genericApplicationContextClass.getConstructor(defaultListableBeanFactoryClass).newInstance(beanFactory)[ CD ]
Line_23 $$ if (cachedContext == null) -->Line_38 $$ bppConstructor.setAccessible(true)[ CD ]
Line_39 $$ Object beanPostProcessor = bppConstructor.newInstance(ltw)-->Line_42 $$ addBeanPostProcessor.invoke(beanFactory, beanPostProcessor)[ FD ]
Line_29 $$ Object beanFactory = BeanUtils.instantiateClass(beanFactoryClass)-->Line_42 $$ addBeanPostProcessor.invoke(beanFactory, beanPostProcessor)[ FD ]
Line_43 $$ Class genericApplicationContextClass = shadowingClassLoader.loadClass(GenericApplicationContext.class.getName())-->Line_45 $$ cachedContext = genericApplicationContextClass.getConstructor(defaultListableBeanFactoryClass).newInstance(beanFactory)[ FD ]
Line_55 $$ Class applicationContextClass = shadowingClassLoader.loadClass(ConfigurableApplicationContext.class.getName())-->Line_56 $$ Method addContextMethod = shadowedTestClass.getMethod("addContext", String[].class, applicationContextClass)[ FD ]
Line_25 $$ Constructor constructor = shadowingLoadTimeWeaverClass.getConstructor(ClassLoader.class)-->Line_26 $$ constructor.setAccessible(true)[ FD ]
Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_30 $$ Class beanDefinitionReaderClass = shadowingClassLoader.loadClass(XmlBeanDefinitionReader.class.getName())[ FD ]
Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_44 $$ Class defaultListableBeanFactoryClass = shadowingClassLoader.loadClass(DefaultListableBeanFactory.class.getName())[ FD ]
Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_30 $$ Class beanDefinitionReaderClass = shadowingClassLoader.loadClass(XmlBeanDefinitionReader.class.getName())[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_42 $$ addBeanPostProcessor.invoke(beanFactory, beanPostProcessor)[ CD ]
Line_56 $$ Method addContextMethod = shadowedTestClass.getMethod("addContext", String[].class, applicationContextClass)-->Line_58 $$ addContextMethod.invoke(shadowedTestCase, configLocations, cachedContext)[ FD ]
Line_3 $$ if (!shouldUseShadowLoader()) -->Line_5 $$ return[ CD ]
Line_30 $$ Class beanDefinitionReaderClass = shadowingClassLoader.loadClass(XmlBeanDefinitionReader.class.getName())-->Line_32 $$ Object reader = beanDefinitionReaderClass.getConstructor(beanDefinitionRegistryClass).newInstance(beanFactory)[ FD ]
Line_52 $$ Field shadowed = thisShadowedClass.getDeclaredField("shadowParent")-->Line_53 $$ shadowed.setAccessible(true)[ FD ]
Line_21 $$ String[] configLocations = getConfigLocations()-->Line_58 $$ addContextMethod.invoke(shadowedTestCase, configLocations, cachedContext)[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_28 $$ Class beanFactoryClass = shadowingClassLoader.loadClass(DefaultListableBeanFactory.class.getName())[ CD ]
Line_23 $$ if (cachedContext == null) -->Line_25 $$ Constructor constructor = shadowingLoadTimeWeaverClass.getConstructor(ClassLoader.class)[ CD ]
Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_17 $$ classLoaderCache.put(combinationOfContextLocationsForThisTestClass, shadowingClassLoader)[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_37 $$ Constructor bppConstructor = loadTimeWeaverInjectingBeanPostProcessorClass.getConstructor(loadTimeWeaverClass)[ CD ]
Line_28 $$ Class beanFactoryClass = shadowingClassLoader.loadClass(DefaultListableBeanFactory.class.getName())-->Line_41 $$ Method addBeanPostProcessor = beanFactoryClass.getMethod("addBeanPostProcessor", beanPostProcessorClass)[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_43 $$ Class genericApplicationContextClass = shadowingClassLoader.loadClass(GenericApplicationContext.class.getName())[ CD ]
Line_28 $$ Class beanFactoryClass = shadowingClassLoader.loadClass(DefaultListableBeanFactory.class.getName())-->Line_29 $$ Object beanFactory = BeanUtils.instantiateClass(beanFactoryClass)[ FD ]
Line_7 $$ String combinationOfContextLocationsForThisTestClass = cacheKeys()-->Line_17 $$ classLoaderCache.put(combinationOfContextLocationsForThisTestClass, shadowingClassLoader)[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_24 $$ Class shadowingLoadTimeWeaverClass = shadowingClassLoader.loadClass(ShadowingLoadTimeWeaver.class.getName())[ CD ]
Line_22 $$ Object cachedContext = contextCache.get(combinationOfContextLocationsForThisTestClass)-->Line_45 $$ cachedContext = genericApplicationContextClass.getConstructor(defaultListableBeanFactoryClass).newInstance(beanFactory)[ FD ]
Line_43 $$ Class genericApplicationContextClass = shadowingClassLoader.loadClass(GenericApplicationContext.class.getName())-->Line_46 $$ genericApplicationContextClass.getMethod("refresh").invoke(cachedContext)[ FD ]
Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_49 $$ Class shadowedTestClass = shadowingClassLoader.loadClass(getClass().getName())[ FD ]
Line_2 $$ public void runBare() throws Throwable -->Line_8 $$ ClassLoader classLoaderForThisTestClass = getClass().getClassLoader()[ CD ]
Line_29 $$ Object beanFactory = BeanUtils.instantiateClass(beanFactoryClass)-->Line_32 $$ Object reader = beanDefinitionReaderClass.getConstructor(beanDefinitionRegistryClass).newInstance(beanFactory)[ FD ]
Line_23 $$ if (cachedContext == null) -->Line_44 $$ Class defaultListableBeanFactoryClass = shadowingClassLoader.loadClass(DefaultListableBeanFactory.class.getName())[ CD ]
Line_37 $$ Constructor bppConstructor = loadTimeWeaverInjectingBeanPostProcessorClass.getConstructor(loadTimeWeaverClass)-->Line_38 $$ bppConstructor.setAccessible(true)[ FD ]
Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_55 $$ Class applicationContextClass = shadowingClassLoader.loadClass(ConfigurableApplicationContext.class.getName())[ FD ]
Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_51 $$ Class thisShadowedClass = shadowingClassLoader.loadClass(AbstractJpaTests.class.getName())[ FD ]
Line_22 $$ Object cachedContext = contextCache.get(combinationOfContextLocationsForThisTestClass)-->Line_58 $$ addContextMethod.invoke(shadowedTestCase, configLocations, cachedContext)[ FD ]
Line_10 $$ if (this.shadowParent != null) -->Line_11 $$ Thread.currentThread().setContextClassLoader(classLoaderForThisTestClass)[ CD ]
Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_16 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)[ FD ]
Line_14 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_27 $$ Object ltw = constructor.newInstance(shadowingClassLoader)[ FD ]
