Line_4 $$ ClassLoader contextClassLoader = currentThread.getContextClassLoader()-->Line_11 $$ currentThread.setContextClassLoader(contextClassLoader)[ FD ]
Line_2 $$ public void invokeSwappedCallback(Object[] callbackInstances, DependencyService component, ServiceReference previousServiceReference, Object previousService, ServiceReference currentServiceReference, Object currentService, String swapCallback) -->Line_6 $$ BundleWiring bundleWiring = bundle.adapt(BundleWiring.class)[ CD ]
Line_2 $$ public void invokeSwappedCallback(Object[] callbackInstances, DependencyService component, ServiceReference previousServiceReference, Object previousService, ServiceReference currentServiceReference, Object currentService, String swapCallback) -->Line_9 $$ super.invokeSwappedCallback(callbackInstances, component, previousServiceReference, previousService, currentServiceReference, currentService, swapCallback)[ FD ]
Line_3 $$ Thread currentThread = Thread.currentThread()-->Line_11 $$ currentThread.setContextClassLoader(contextClassLoader)[ FD ]
Line_2 $$ public void invokeSwappedCallback(Object[] callbackInstances, DependencyService component, ServiceReference previousServiceReference, Object previousService, ServiceReference currentServiceReference, Object currentService, String swapCallback) -->Line_7 $$ currentThread.setContextClassLoader(bundleWiring.getClassLoader())[ CD ]
Line_2 $$ public void invokeSwappedCallback(Object[] callbackInstances, DependencyService component, ServiceReference previousServiceReference, Object previousService, ServiceReference currentServiceReference, Object currentService, String swapCallback) -->Line_4 $$ ClassLoader contextClassLoader = currentThread.getContextClassLoader()[ CD ]
Line_6 $$ BundleWiring bundleWiring = bundle.adapt(BundleWiring.class)-->Line_7 $$ currentThread.setContextClassLoader(bundleWiring.getClassLoader())[ FD ]
Line_2 $$ public void invokeSwappedCallback(Object[] callbackInstances, DependencyService component, ServiceReference previousServiceReference, Object previousService, ServiceReference currentServiceReference, Object currentService, String swapCallback) -->Line_5 $$ Bundle bundle = currentServiceReference.getBundle()[ CD ]
Line_2 $$ public void invokeSwappedCallback(Object[] callbackInstances, DependencyService component, ServiceReference previousServiceReference, Object previousService, ServiceReference currentServiceReference, Object currentService, String swapCallback) -->Line_3 $$ Thread currentThread = Thread.currentThread()[ CD ]
Line_5 $$ Bundle bundle = currentServiceReference.getBundle()-->Line_6 $$ BundleWiring bundleWiring = bundle.adapt(BundleWiring.class)[ FD ]
Line_3 $$ Thread currentThread = Thread.currentThread()-->Line_7 $$ currentThread.setContextClassLoader(bundleWiring.getClassLoader())[ FD ]
Line_2 $$ public void invokeSwappedCallback(Object[] callbackInstances, DependencyService component, ServiceReference previousServiceReference, Object previousService, ServiceReference currentServiceReference, Object currentService, String swapCallback) -->Line_5 $$ Bundle bundle = currentServiceReference.getBundle()[ FD ]
Line_3 $$ Thread currentThread = Thread.currentThread()-->Line_4 $$ ClassLoader contextClassLoader = currentThread.getContextClassLoader()[ FD ]
