Line_10 $$ taskObject = ((Class<? extends EnhancerTestTask>) cl.loadClass(task.getName())).newInstance()-->Line_18 $$ taskObject.complete()[ FD ]
Line_4 $$ ClassLoader defaultCL = Thread.currentThread().getContextClassLoader()-->Line_22 $$ Thread.currentThread().setContextClassLoader(defaultCL)[ FD ]
Line_3 $$ EnhancerTestTask taskObject = null-->Line_11 $$ taskObject.prepare()[ FD ]
Line_6 $$ ClassLoader cl = EnhancerTestUtils.getEnhancerClassLoader(task.getPackage().getName())-->Line_8 $$ EnhancerTestUtils.setupClassLoader(cl, task.newInstance().getAnnotatedClasses())[ FD ]
Line_10 $$ taskObject = ((Class<? extends EnhancerTestTask>) cl.loadClass(task.getName())).newInstance()-->Line_17 $$ if (taskObject != null) [ FD ]
Line_3 $$ EnhancerTestTask taskObject = null-->Line_12 $$ taskObject.execute()[ FD ]
Line_10 $$ taskObject = ((Class<? extends EnhancerTestTask>) cl.loadClass(task.getName())).newInstance()-->Line_11 $$ taskObject.prepare()[ FD ]
Line_2 $$ public static void runEnhancerTestTask(final Class<? extends EnhancerTestTask> task) -->Line_8 $$ EnhancerTestUtils.setupClassLoader(cl, task.newInstance().getAnnotatedClasses())[ FD ]
Line_2 $$ public static void runEnhancerTestTask(final Class<? extends EnhancerTestTask> task) -->Line_10 $$ taskObject = ((Class<? extends EnhancerTestTask>) cl.loadClass(task.getName())).newInstance()[ FD ]
Line_17 $$ if (taskObject != null) -->Line_18 $$ taskObject.complete()[ CD ]
Line_6 $$ ClassLoader cl = EnhancerTestUtils.getEnhancerClassLoader(task.getPackage().getName())-->Line_7 $$ EnhancerTestUtils.setupClassLoader(cl, task)[ FD ]
Line_2 $$ public static void runEnhancerTestTask(final Class<? extends EnhancerTestTask> task) -->Line_4 $$ ClassLoader defaultCL = Thread.currentThread().getContextClassLoader()[ CD ]
Line_6 $$ ClassLoader cl = EnhancerTestUtils.getEnhancerClassLoader(task.getPackage().getName())-->Line_10 $$ taskObject = ((Class<? extends EnhancerTestTask>) cl.loadClass(task.getName())).newInstance()[ FD ]
Line_2 $$ public static void runEnhancerTestTask(final Class<? extends EnhancerTestTask> task) -->Line_3 $$ EnhancerTestTask taskObject = null[ CD ]
Line_3 $$ EnhancerTestTask taskObject = null-->Line_18 $$ taskObject.complete()[ FD ]
Line_3 $$ EnhancerTestTask taskObject = null-->Line_10 $$ taskObject = ((Class<? extends EnhancerTestTask>) cl.loadClass(task.getName())).newInstance()[ FD ]
Line_2 $$ public static void runEnhancerTestTask(final Class<? extends EnhancerTestTask> task) -->Line_7 $$ EnhancerTestUtils.setupClassLoader(cl, task)[ FD ]
Line_6 $$ ClassLoader cl = EnhancerTestUtils.getEnhancerClassLoader(task.getPackage().getName())-->Line_9 $$ Thread.currentThread().setContextClassLoader(cl)[ FD ]
Line_3 $$ EnhancerTestTask taskObject = null-->Line_17 $$ if (taskObject != null) [ FD ]
Line_10 $$ taskObject = ((Class<? extends EnhancerTestTask>) cl.loadClass(task.getName())).newInstance()-->Line_12 $$ taskObject.execute()[ FD ]
Line_2 $$ public static void runEnhancerTestTask(final Class<? extends EnhancerTestTask> task) -->Line_6 $$ ClassLoader cl = EnhancerTestUtils.getEnhancerClassLoader(task.getPackage().getName())[ FD ]
