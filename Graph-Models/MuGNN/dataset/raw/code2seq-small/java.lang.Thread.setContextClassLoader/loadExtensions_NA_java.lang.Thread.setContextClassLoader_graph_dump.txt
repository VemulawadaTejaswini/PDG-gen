Line_8 $$ if (!lifecycleParticipants.isEmpty()) -->Line_10 $$ MavenSession session = legacySupport.getSession()[ CD ]
Line_10 $$ MavenSession session = legacySupport.getSession()-->Line_12 $$ session.setProjects(Arrays.asList(project))[ FD ]
Line_7 $$ Collection<AbstractMavenLifecycleParticipant> lifecycleParticipants = getLifecycleParticipants(Arrays.asList(project))-->Line_8 $$ if (!lifecycleParticipants.isEmpty()) [ FD ]
Line_6 $$ ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader()-->Line_20 $$ Thread.currentThread().setContextClassLoader(originalClassLoader)[ FD ]
Line_10 $$ MavenSession session = legacySupport.getSession()-->Line_11 $$ session.setCurrentProject(project)[ FD ]
Line_8 $$ if (!lifecycleParticipants.isEmpty()) -->Line_9 $$ LegacySupport legacySupport = getComponent(LegacySupport.class)[ CD ]
Line_13 $$ for (AbstractMavenLifecycleParticipant listener : lifecycleParticipants) -->Line_14 $$ Thread.currentThread().setContextClassLoader(listener.getClass().getClassLoader())[ FD ]
Line_13 $$ for (AbstractMavenLifecycleParticipant listener : lifecycleParticipants) -->Line_16 $$ listener.afterProjectsRead(session)[ FD ]
Line_10 $$ MavenSession session = legacySupport.getSession()-->Line_16 $$ listener.afterProjectsRead(session)[ FD ]
Line_8 $$ if (!lifecycleParticipants.isEmpty()) -->Line_11 $$ session.setCurrentProject(project)[ CD ]
Line_9 $$ LegacySupport legacySupport = getComponent(LegacySupport.class)-->Line_10 $$ MavenSession session = legacySupport.getSession()[ FD ]
Line_8 $$ if (!lifecycleParticipants.isEmpty()) -->Line_12 $$ session.setProjects(Arrays.asList(project))[ CD ]
