Line_17 $$ ExpandContext childContext = new ExpandContext(myExpansionLimit, myLevelsLeft - levelDecrement)-->Line_18 $$ myExpansionLimit = childContext.expand(tree, path.pathByAddingChild(child))[ FD ]
Line_13 $$ for (int i = 0; i < model.getChildCount(node); i++) -->Line_15 $$ if (model.isLeaf(child))[ CD ]
Line_6 $$ Object node = path.getLastPathComponent()-->Line_8 $$ if (!tree.isExpanded(path) && !model.isLeaf(node)) [ FD ]
Line_13 $$ for (int i = 0; i < model.getChildCount(node); i++) -->Line_19 $$ if (myExpansionLimit <= 0)[ CD ]
Line_2 $$ public int expand(JTree tree, TreePath path) -->Line_22 $$ return myExpansionLimit[ CD ]
Line_2 $$ public int expand(JTree tree, TreePath path) -->Line_7 $$ int levelDecrement = 0[ CD ]
Line_5 $$ TreeModel model = tree.getModel()-->Line_13 $$ for (int i = 0; i < model.getChildCount(node); i++) [ FD ]
Line_6 $$ Object node = path.getLastPathComponent()-->Line_14 $$ Object child = model.getChild(node, i)[ FD ]
Line_2 $$ public int expand(JTree tree, TreePath path) -->Line_9 $$ tree.expandPath(path)[ FD ]
Line_13 $$ for (int i = 0; i < model.getChildCount(node); i++) -->Line_18 $$ myExpansionLimit = childContext.expand(tree, path.pathByAddingChild(child))[ CD ]
Line_19 $$ if (myExpansionLimit <= 0)-->Line_20 $$ return 0[ CD ]
Line_2 $$ public int expand(JTree tree, TreePath path) -->Line_6 $$ Object node = path.getLastPathComponent()[ FD ]
Line_14 $$ Object child = model.getChild(node, i)-->Line_18 $$ myExpansionLimit = childContext.expand(tree, path.pathByAddingChild(child))[ FD ]
Line_5 $$ TreeModel model = tree.getModel()-->Line_8 $$ if (!tree.isExpanded(path) && !model.isLeaf(node)) [ FD ]
Line_13 $$ for (int i = 0; i < model.getChildCount(node); i++) -->Line_14 $$ Object child = model.getChild(node, i)[ FD ]
Line_2 $$ public int expand(JTree tree, TreePath path) -->Line_8 $$ if (!tree.isExpanded(path) && !model.isLeaf(node)) [ CD ]
Line_2 $$ public int expand(JTree tree, TreePath path) -->Line_13 $$ for (int i = 0; i < model.getChildCount(node); i++) [ CD ]
Line_2 $$ public int expand(JTree tree, TreePath path) -->Line_6 $$ Object node = path.getLastPathComponent()[ CD ]
Line_6 $$ Object node = path.getLastPathComponent()-->Line_13 $$ for (int i = 0; i < model.getChildCount(node); i++) [ FD ]
Line_5 $$ TreeModel model = tree.getModel()-->Line_15 $$ if (model.isLeaf(child))[ FD ]
Line_2 $$ public int expand(JTree tree, TreePath path) -->Line_5 $$ TreeModel model = tree.getModel()[ CD ]
Line_8 $$ if (!tree.isExpanded(path) && !model.isLeaf(node)) -->Line_10 $$ levelDecrement = 1[ CD ]
Line_2 $$ public int expand(JTree tree, TreePath path) -->Line_5 $$ TreeModel model = tree.getModel()[ FD ]
Line_3 $$ if (myLevelsLeft == 0)-->Line_4 $$ return myExpansionLimit[ CD ]
Line_7 $$ int levelDecrement = 0-->Line_10 $$ levelDecrement = 1[ FD ]
Line_8 $$ if (!tree.isExpanded(path) && !model.isLeaf(node)) -->Line_9 $$ tree.expandPath(path)[ CD ]
Line_13 $$ for (int i = 0; i < model.getChildCount(node); i++) -->Line_14 $$ Object child = model.getChild(node, i)[ CD ]
Line_2 $$ public int expand(JTree tree, TreePath path) -->Line_8 $$ if (!tree.isExpanded(path) && !model.isLeaf(node)) [ FD ]
Line_5 $$ TreeModel model = tree.getModel()-->Line_14 $$ Object child = model.getChild(node, i)[ FD ]
Line_2 $$ public int expand(JTree tree, TreePath path) -->Line_18 $$ myExpansionLimit = childContext.expand(tree, path.pathByAddingChild(child))[ FD ]
Line_14 $$ Object child = model.getChild(node, i)-->Line_15 $$ if (model.isLeaf(child))[ FD ]
Line_2 $$ public int expand(JTree tree, TreePath path) -->Line_3 $$ if (myLevelsLeft == 0)[ CD ]
Line_13 $$ for (int i = 0; i < model.getChildCount(node); i++) -->Line_17 $$ ExpandContext childContext = new ExpandContext(myExpansionLimit, myLevelsLeft - levelDecrement)[ CD ]
