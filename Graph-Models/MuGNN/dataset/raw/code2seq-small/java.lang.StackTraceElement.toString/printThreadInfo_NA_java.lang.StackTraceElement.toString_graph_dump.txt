Line_10 $$ if (mi.getLockedStackDepth() == i) -->Line_11 $$ out.println(INDENT + "  - locked " + mi)[ CD ]
Line_2 $$ private static void printThreadInfo(ThreadInfo ti, PrintWriter out) -->Line_3 $$ printThread(ti, out)[ CD ]
Line_6 $$ for (int i = 0; i < stacktrace.length; i++) -->Line_7 $$ StackTraceElement ste = stacktrace[i][ CD ]
Line_7 $$ StackTraceElement ste = stacktrace[i]-->Line_8 $$ out.println(INDENT + "at " + ste.toString())[ FD ]
Line_6 $$ for (int i = 0; i < stacktrace.length; i++) -->Line_10 $$ if (mi.getLockedStackDepth() == i) [ FD ]
Line_2 $$ private static void printThreadInfo(ThreadInfo ti, PrintWriter out) -->Line_15 $$ out.println()[ CD ]
Line_2 $$ private static void printThreadInfo(ThreadInfo ti, PrintWriter out) -->Line_5 $$ MonitorInfo[] monitors = ti.getLockedMonitors()[ FD ]
Line_2 $$ private static void printThreadInfo(ThreadInfo ti, PrintWriter out) -->Line_8 $$ out.println(INDENT + "at " + ste.toString())[ FD ]
Line_2 $$ private static void printThreadInfo(ThreadInfo ti, PrintWriter out) -->Line_5 $$ MonitorInfo[] monitors = ti.getLockedMonitors()[ CD ]
Line_2 $$ private static void printThreadInfo(ThreadInfo ti, PrintWriter out) -->Line_6 $$ for (int i = 0; i < stacktrace.length; i++) [ CD ]
Line_2 $$ private static void printThreadInfo(ThreadInfo ti, PrintWriter out) -->Line_11 $$ out.println(INDENT + "  - locked " + mi)[ FD ]
Line_2 $$ private static void printThreadInfo(ThreadInfo ti, PrintWriter out) -->Line_15 $$ out.println()[ FD ]
Line_9 $$ for (MonitorInfo mi : monitors) -->Line_10 $$ if (mi.getLockedStackDepth() == i) [ FD ]
Line_2 $$ private static void printThreadInfo(ThreadInfo ti, PrintWriter out) -->Line_4 $$ StackTraceElement[] stacktrace = ti.getStackTrace()[ FD ]
Line_6 $$ for (int i = 0; i < stacktrace.length; i++) -->Line_8 $$ out.println(INDENT + "at " + ste.toString())[ CD ]
Line_2 $$ private static void printThreadInfo(ThreadInfo ti, PrintWriter out) -->Line_4 $$ StackTraceElement[] stacktrace = ti.getStackTrace()[ CD ]
Line_2 $$ private static void printThreadInfo(ThreadInfo ti, PrintWriter out) -->Line_3 $$ printThread(ti, out)[ FD ]
