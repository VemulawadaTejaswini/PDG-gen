Line_14 $$ bytesIn = new ByteArrayInputStream(buf)-->Line_24 $$ bytesIn.close()[ FD ]
Line_2 $$ void assertCompression(String name, Compressor compressor, Decompressor decompressor, byte[] originalRawData) -->Line_13 $$ Assert.assertEquals(joiner.join(name, "empty stream compressed output size != " + emSize), emSize, buf.length)[ FD ]
Line_5 $$ BlockDecompressorStream blockDecompressorStream = null-->Line_25 $$ blockDecompressorStream.close()[ FD ]
Line_5 $$ BlockDecompressorStream blockDecompressorStream = null-->Line_15 $$ blockDecompressorStream = new BlockDecompressorStream(bytesIn, decompressor, 1024)[ FD ]
Line_2 $$ void assertCompression(String name, Compressor compressor, Decompressor decompressor, byte[] originalRawData) -->Line_6 $$ ByteArrayOutputStream bytesOut = new ByteArrayOutputStream()[ CD ]
Line_2 $$ void assertCompression(String name, Compressor compressor, Decompressor decompressor, byte[] originalRawData) -->Line_12 $$ int emSize = emptySize.get(compressor.getClass())[ FD ]
Line_9 $$ BlockCompressorStream blockCompressorStream = new BlockCompressorStream(bytesOut, compressor, 1024, 0)-->Line_10 $$ blockCompressorStream.close()[ FD ]
Line_6 $$ ByteArrayOutputStream bytesOut = new ByteArrayOutputStream()-->Line_22 $$ bytesOut.close()[ FD ]
Line_2 $$ void assertCompression(String name, Compressor compressor, Decompressor decompressor, byte[] originalRawData) -->Line_16 $$ assertEquals(joiner.join(name, " return value is not -1"), -1, blockDecompressorStream.read())[ FD ]
Line_4 $$ ByteArrayInputStream bytesIn = null-->Line_14 $$ bytesIn = new ByteArrayInputStream(buf)[ FD ]
Line_3 $$ byte[] buf = null-->Line_11 $$ buf = bytesOut.toByteArray()[ FD ]
Line_15 $$ blockDecompressorStream = new BlockDecompressorStream(bytesIn, decompressor, 1024)-->Line_16 $$ assertEquals(joiner.join(name, " return value is not -1"), -1, blockDecompressorStream.read())[ FD ]
Line_5 $$ BlockDecompressorStream blockDecompressorStream = null-->Line_20 $$ if (blockDecompressorStream != null)[ FD ]
Line_2 $$ void assertCompression(String name, Compressor compressor, Decompressor decompressor, byte[] originalRawData) -->Line_18 $$ fail(joiner.join(name, e.getMessage()))[ FD ]
Line_5 $$ BlockDecompressorStream blockDecompressorStream = null-->Line_23 $$ blockDecompressorStream.close()[ FD ]
Line_12 $$ int emSize = emptySize.get(compressor.getClass())-->Line_13 $$ Assert.assertEquals(joiner.join(name, "empty stream compressed output size != " + emSize), emSize, buf.length)[ FD ]
Line_2 $$ void assertCompression(String name, Compressor compressor, Decompressor decompressor, byte[] originalRawData) -->Line_3 $$ byte[] buf = null[ CD ]
Line_15 $$ blockDecompressorStream = new BlockDecompressorStream(bytesIn, decompressor, 1024)-->Line_23 $$ blockDecompressorStream.close()[ FD ]
Line_5 $$ BlockDecompressorStream blockDecompressorStream = null-->Line_16 $$ assertEquals(joiner.join(name, " return value is not -1"), -1, blockDecompressorStream.read())[ FD ]
Line_15 $$ blockDecompressorStream = new BlockDecompressorStream(bytesIn, decompressor, 1024)-->Line_20 $$ if (blockDecompressorStream != null)[ FD ]
Line_6 $$ ByteArrayOutputStream bytesOut = new ByteArrayOutputStream()-->Line_11 $$ buf = bytesOut.toByteArray()[ FD ]
Line_15 $$ blockDecompressorStream = new BlockDecompressorStream(bytesIn, decompressor, 1024)-->Line_25 $$ blockDecompressorStream.close()[ FD ]
Line_2 $$ void assertCompression(String name, Compressor compressor, Decompressor decompressor, byte[] originalRawData) -->Line_8 $$ compressor.reset()[ FD ]
Line_2 $$ void assertCompression(String name, Compressor compressor, Decompressor decompressor, byte[] originalRawData) -->Line_4 $$ ByteArrayInputStream bytesIn = null[ CD ]
Line_4 $$ ByteArrayInputStream bytesIn = null-->Line_24 $$ bytesIn.close()[ FD ]
Line_2 $$ void assertCompression(String name, Compressor compressor, Decompressor decompressor, byte[] originalRawData) -->Line_5 $$ BlockDecompressorStream blockDecompressorStream = null[ CD ]
