Line_2 $$ public void testConnectUsingSASReadonly() throws Exception -->Line_9 $$ blob.upload(inputStream, 3)[ CD ]
Line_11 $$ Path filePath = new Path("/" + blobKey)-->Line_15 $$ DataInputStream obtainedInputStream = fs.open(filePath)[ FD ]
Line_2 $$ public void testConnectUsingSASReadonly() throws Exception -->Line_16 $$ obtainedInputStream.readFully(obtained)[ CD ]
Line_12 $$ FileSystem fs = testAccount.getFileSystem()-->Line_15 $$ DataInputStream obtainedInputStream = fs.open(filePath)[ FD ]
Line_2 $$ public void testConnectUsingSASReadonly() throws Exception -->Line_14 $$ byte[] obtained = new byte[3][ CD ]
Line_2 $$ public void testConnectUsingSASReadonly() throws Exception -->Line_12 $$ FileSystem fs = testAccount.getFileSystem()[ CD ]
Line_2 $$ public void testConnectUsingSASReadonly() throws Exception -->Line_5 $$ final String blobKey = "blobForReadonly"[ CD ]
Line_8 $$ ByteArrayInputStream inputStream = new ByteArrayInputStream(new byte[] -->Line_9 $$ blob.upload(inputStream, 3)[ FD ]
Line_5 $$ final String blobKey = "blobForReadonly"-->Line_7 $$ CloudBlockBlob blob = container.getBlockBlobReference(blobKey)[ FD ]
Line_2 $$ public void testConnectUsingSASReadonly() throws Exception -->Line_17 $$ obtainedInputStream.close()[ CD ]
Line_15 $$ DataInputStream obtainedInputStream = fs.open(filePath)-->Line_17 $$ obtainedInputStream.close()[ FD ]
Line_2 $$ public void testConnectUsingSASReadonly() throws Exception -->Line_6 $$ CloudBlobContainer container = testAccount.getRealContainer()[ CD ]
Line_2 $$ public void testConnectUsingSASReadonly() throws Exception -->Line_3 $$ testAccount = AzureBlobStorageTestAccount.create("", EnumSet.of(CreateOptions.UseSas, CreateOptions.CreateContainer, CreateOptions.Readonly))[ CD ]
Line_2 $$ public void testConnectUsingSASReadonly() throws Exception -->Line_15 $$ DataInputStream obtainedInputStream = fs.open(filePath)[ CD ]
Line_15 $$ DataInputStream obtainedInputStream = fs.open(filePath)-->Line_16 $$ obtainedInputStream.readFully(obtained)[ FD ]
Line_2 $$ public void testConnectUsingSASReadonly() throws Exception -->Line_18 $$ assertEquals(3, obtained[2])[ CD ]
Line_6 $$ CloudBlobContainer container = testAccount.getRealContainer()-->Line_7 $$ CloudBlockBlob blob = container.getBlockBlobReference(blobKey)[ FD ]
Line_2 $$ public void testConnectUsingSASReadonly() throws Exception -->Line_13 $$ assertTrue(fs.exists(filePath))[ CD ]
Line_8 $$ ByteArrayInputStream inputStream = new ByteArrayInputStream(new byte[] -->Line_10 $$ inputStream.close()[ FD ]
Line_2 $$ public void testConnectUsingSASReadonly() throws Exception -->Line_10 $$ inputStream.close()[ CD ]
Line_11 $$ Path filePath = new Path("/" + blobKey)-->Line_13 $$ assertTrue(fs.exists(filePath))[ FD ]
Line_2 $$ public void testConnectUsingSASReadonly() throws Exception -->Line_4 $$ assumeNotNull(testAccount)[ CD ]
Line_2 $$ public void testConnectUsingSASReadonly() throws Exception -->Line_11 $$ Path filePath = new Path("/" + blobKey)[ CD ]
Line_14 $$ byte[] obtained = new byte[3]-->Line_16 $$ obtainedInputStream.readFully(obtained)[ FD ]
Line_2 $$ public void testConnectUsingSASReadonly() throws Exception -->Line_7 $$ CloudBlockBlob blob = container.getBlockBlobReference(blobKey)[ CD ]
Line_12 $$ FileSystem fs = testAccount.getFileSystem()-->Line_13 $$ assertTrue(fs.exists(filePath))[ FD ]
Line_7 $$ CloudBlockBlob blob = container.getBlockBlobReference(blobKey)-->Line_9 $$ blob.upload(inputStream, 3)[ FD ]
Line_2 $$ public void testConnectUsingSASReadonly() throws Exception -->Line_8 $$ ByteArrayInputStream inputStream = new ByteArrayInputStream(new byte[] [ CD ]
