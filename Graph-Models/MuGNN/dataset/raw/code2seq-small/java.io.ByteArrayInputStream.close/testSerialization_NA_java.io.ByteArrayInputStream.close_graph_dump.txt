Line_2 $$ public void testSerialization() throws Exception -->Line_36 $$ em.getTransaction().commit()[ CD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_13 $$ em.persist(item)[ FD ]
Line_28 $$ item = em.find(Item.class, item.getName())-->Line_29 $$ item.setDescr(item.getDescr() + "-Amsterdam")[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_12 $$ item.setDescr("Paris-London")[ CD ]
Line_16 $$ ByteArrayOutputStream stream = new ByteArrayOutputStream()-->Line_21 $$ stream.close()[ FD ]
Line_4 $$ Cat cat = new Cat()-->Line_30 $$ cat = (Cat) em.createQuery("select c from " + Cat.class.getName() + " c").getSingleResult()[ FD ]
Line_4 $$ Cat cat = new Cat()-->Line_5 $$ cat.setAge(3)[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_10 $$ Item item = new Item()[ CD ]
Line_10 $$ Item item = new Item()-->Line_12 $$ item.setDescr("Paris-London")[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_23 $$ ObjectInputStream in = new ObjectInputStream(byteIn)[ CD ]
Line_17 $$ ObjectOutput out = new ObjectOutputStream(stream)-->Line_18 $$ out.writeObject(em)[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_34 $$ em.remove(cat)[ CD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_30 $$ cat = (Cat) em.createQuery("select c from " + Cat.class.getName() + " c").getSingleResult()[ CD ]
Line_17 $$ ObjectOutput out = new ObjectOutputStream(stream)-->Line_19 $$ out.close()[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_33 $$ em.remove(item)[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_7 $$ cat.setLength(22)[ CD ]
Line_22 $$ ByteArrayInputStream byteIn = new ByteArrayInputStream(serialized)-->Line_26 $$ byteIn.close()[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_27 $$ em.getTransaction().begin()[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_31 $$ cat.setLength(34)[ CD ]
Line_10 $$ Item item = new Item()-->Line_29 $$ item.setDescr(item.getDescr() + "-Amsterdam")[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_32 $$ em.flush()[ FD ]
Line_24 $$ em = (EntityManager) in.readObject()-->Line_36 $$ em.getTransaction().commit()[ FD ]
Line_24 $$ em = (EntityManager) in.readObject()-->Line_37 $$ em.close()[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_24 $$ em = (EntityManager) in.readObject()[ CD ]
Line_10 $$ Item item = new Item()-->Line_14 $$ item.setDescr("Paris-Bruxelles")[ FD ]
Line_30 $$ cat = (Cat) em.createQuery("select c from " + Cat.class.getName() + " c").getSingleResult()-->Line_31 $$ cat.setLength(34)[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_37 $$ em.close()[ CD ]
Line_10 $$ Item item = new Item()-->Line_11 $$ item.setName("Train Ticket")[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_28 $$ item = em.find(Item.class, item.getName())[ FD ]
Line_10 $$ Item item = new Item()-->Line_13 $$ em.persist(item)[ FD ]
Line_24 $$ em = (EntityManager) in.readObject()-->Line_30 $$ cat = (Cat) em.createQuery("select c from " + Cat.class.getName() + " c").getSingleResult()[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_34 $$ em.remove(cat)[ FD ]
Line_16 $$ ByteArrayOutputStream stream = new ByteArrayOutputStream()-->Line_20 $$ byte[] serialized = stream.toByteArray()[ FD ]
Line_24 $$ em = (EntityManager) in.readObject()-->Line_28 $$ item = em.find(Item.class, item.getName())[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_18 $$ out.writeObject(em)[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_16 $$ ByteArrayOutputStream stream = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_9 $$ em.persist(cat)[ CD ]
Line_23 $$ ObjectInputStream in = new ObjectInputStream(byteIn)-->Line_24 $$ em = (EntityManager) in.readObject()[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_35 $$ em.flush()[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_24 $$ em = (EntityManager) in.readObject()[ FD ]
Line_30 $$ cat = (Cat) em.createQuery("select c from " + Cat.class.getName() + " c").getSingleResult()-->Line_34 $$ em.remove(cat)[ FD ]
Line_4 $$ Cat cat = new Cat()-->Line_9 $$ em.persist(cat)[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_33 $$ em.remove(item)[ CD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_20 $$ byte[] serialized = stream.toByteArray()[ CD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_6 $$ cat.setDateOfBirth(new Date())[ CD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_17 $$ ObjectOutput out = new ObjectOutputStream(stream)[ CD ]
Line_24 $$ em = (EntityManager) in.readObject()-->Line_35 $$ em.flush()[ FD ]
Line_24 $$ em = (EntityManager) in.readObject()-->Line_32 $$ em.flush()[ FD ]
Line_10 $$ Item item = new Item()-->Line_33 $$ em.remove(item)[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_5 $$ cat.setAge(3)[ CD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_8 $$ cat.setName("Kitty")[ CD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_25 $$ in.close()[ CD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_9 $$ em.persist(cat)[ FD ]
Line_28 $$ item = em.find(Item.class, item.getName())-->Line_33 $$ em.remove(item)[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()[ CD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_18 $$ out.writeObject(em)[ CD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_21 $$ stream.close()[ CD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_36 $$ em.getTransaction().commit()[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_11 $$ item.setName("Train Ticket")[ CD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_19 $$ out.close()[ CD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_37 $$ em.close()[ FD ]
Line_4 $$ Cat cat = new Cat()-->Line_34 $$ em.remove(cat)[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_27 $$ em.getTransaction().begin()[ CD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_26 $$ byteIn.close()[ CD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_15 $$ ((HibernateEntityManager) em).getSession().disconnect()[ CD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_4 $$ Cat cat = new Cat()[ CD ]
Line_4 $$ Cat cat = new Cat()-->Line_6 $$ cat.setDateOfBirth(new Date())[ FD ]
Line_23 $$ ObjectInputStream in = new ObjectInputStream(byteIn)-->Line_25 $$ in.close()[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_35 $$ em.flush()[ CD ]
Line_24 $$ em = (EntityManager) in.readObject()-->Line_27 $$ em.getTransaction().begin()[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_32 $$ em.flush()[ CD ]
Line_24 $$ em = (EntityManager) in.readObject()-->Line_33 $$ em.remove(item)[ FD ]
Line_24 $$ em = (EntityManager) in.readObject()-->Line_34 $$ em.remove(cat)[ FD ]
Line_4 $$ Cat cat = new Cat()-->Line_31 $$ cat.setLength(34)[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_30 $$ cat = (Cat) em.createQuery("select c from " + Cat.class.getName() + " c").getSingleResult()[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_13 $$ em.persist(item)[ CD ]
Line_4 $$ Cat cat = new Cat()-->Line_8 $$ cat.setName("Kitty")[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_29 $$ item.setDescr(item.getDescr() + "-Amsterdam")[ CD ]
Line_4 $$ Cat cat = new Cat()-->Line_7 $$ cat.setLength(22)[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_14 $$ item.setDescr("Paris-Bruxelles")[ CD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_22 $$ ByteArrayInputStream byteIn = new ByteArrayInputStream(serialized)[ CD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_28 $$ item = em.find(Item.class, item.getName())[ CD ]
Line_10 $$ Item item = new Item()-->Line_28 $$ item = em.find(Item.class, item.getName())[ FD ]
