Line_2 $$ public Object loadSequentialRowsReverse(final ResultSet resultSet, final SessionImplementor session, final QueryParameters queryParameters, final boolean returnProxies, final boolean isLogicallyAfterLast) throws HibernateException -->Line_15 $$ while (resultSet.previous()) [ FD ]
Line_27 $$ EntityKey checkKey = getKeyFromResultSet(0, getEntityPersisters()[0], null, resultSet, session)-->Line_28 $$ if (!keyToRead.equals(checkKey)) [ FD ]
Line_10 $$ keyToRead = getKeyFromResultSet(0, getEntityPersisters()[0], null, resultSet, session)-->Line_28 $$ if (!keyToRead.equals(checkKey)) [ FD ]
Line_2 $$ public Object loadSequentialRowsReverse(final ResultSet resultSet, final SessionImplementor session, final QueryParameters queryParameters, final boolean returnProxies, final boolean isLogicallyAfterLast) throws HibernateException -->Line_12 $$ resultSet.previous()[ FD ]
Line_16 $$ EntityKey checkKey = getKeyFromResultSet(0, getEntityPersisters()[0], null, resultSet, session)-->Line_28 $$ if (!keyToRead.equals(checkKey)) [ FD ]
Line_16 $$ EntityKey checkKey = getKeyFromResultSet(0, getEntityPersisters()[0], null, resultSet, session)-->Line_21 $$ if (!lastKey.equals(checkKey)) [ FD ]
Line_2 $$ public Object loadSequentialRowsReverse(final ResultSet resultSet, final SessionImplementor session, final QueryParameters queryParameters, final boolean returnProxies, final boolean isLogicallyAfterLast) throws HibernateException -->Line_4 $$ if (resultSet.isFirst()) [ FD ]
Line_2 $$ public Object loadSequentialRowsReverse(final ResultSet resultSet, final SessionImplementor session, final QueryParameters queryParameters, final boolean returnProxies, final boolean isLogicallyAfterLast) throws HibernateException -->Line_16 $$ EntityKey checkKey = getKeyFromResultSet(0, getEntityPersisters()[0], null, resultSet, session)[ FD ]
Line_19 $$ keyToRead = checkKey-->Line_28 $$ if (!keyToRead.equals(checkKey)) [ FD ]
Line_16 $$ EntityKey checkKey = getKeyFromResultSet(0, getEntityPersisters()[0], null, resultSet, session)-->Line_19 $$ keyToRead = checkKey[ FD ]
Line_26 $$ while (resultSet.previous()) -->Line_28 $$ if (!keyToRead.equals(checkKey)) [ CD ]
Line_17 $$ if (firstPass) -->Line_18 $$ firstPass = false[ CD ]
Line_19 $$ keyToRead = checkKey-->Line_33 $$ return sequentialLoad(resultSet, session, queryParameters, returnProxies, keyToRead)[ FD ]
Line_8 $$ if (resultSet.isAfterLast() && isLogicallyAfterLast) -->Line_10 $$ keyToRead = getKeyFromResultSet(0, getEntityPersisters()[0], null, resultSet, session)[ CD ]
Line_2 $$ public Object loadSequentialRowsReverse(final ResultSet resultSet, final SessionImplementor session, final QueryParameters queryParameters, final boolean returnProxies, final boolean isLogicallyAfterLast) throws HibernateException -->Line_9 $$ resultSet.last()[ FD ]
Line_17 $$ if (firstPass) -->Line_19 $$ keyToRead = checkKey[ CD ]
Line_2 $$ public Object loadSequentialRowsReverse(final ResultSet resultSet, final SessionImplementor session, final QueryParameters queryParameters, final boolean returnProxies, final boolean isLogicallyAfterLast) throws HibernateException -->Line_10 $$ keyToRead = getKeyFromResultSet(0, getEntityPersisters()[0], null, resultSet, session)[ FD ]
Line_13 $$ boolean firstPass = true-->Line_18 $$ firstPass = false[ FD ]
Line_14 $$ final EntityKey lastKey = getKeyFromResultSet(0, getEntityPersisters()[0], null, resultSet, session)-->Line_21 $$ if (!lastKey.equals(checkKey)) [ FD ]
Line_2 $$ public Object loadSequentialRowsReverse(final ResultSet resultSet, final SessionImplementor session, final QueryParameters queryParameters, final boolean returnProxies, final boolean isLogicallyAfterLast) throws HibernateException -->Line_32 $$ resultSet.next()[ FD ]
Line_8 $$ if (resultSet.isAfterLast() && isLogicallyAfterLast) -->Line_15 $$ while (resultSet.previous()) [ CD ]
Line_8 $$ if (resultSet.isAfterLast() && isLogicallyAfterLast) -->Line_14 $$ final EntityKey lastKey = getKeyFromResultSet(0, getEntityPersisters()[0], null, resultSet, session)[ CD ]
Line_4 $$ if (resultSet.isFirst()) -->Line_5 $$ return null[ CD ]
Line_7 $$ EntityKey keyToRead = null-->Line_33 $$ return sequentialLoad(resultSet, session, queryParameters, returnProxies, keyToRead)[ FD ]
Line_15 $$ while (resultSet.previous()) -->Line_21 $$ if (!lastKey.equals(checkKey)) [ CD ]
Line_8 $$ if (resultSet.isAfterLast() && isLogicallyAfterLast) -->Line_13 $$ boolean firstPass = true[ CD ]
Line_2 $$ public Object loadSequentialRowsReverse(final ResultSet resultSet, final SessionImplementor session, final QueryParameters queryParameters, final boolean returnProxies, final boolean isLogicallyAfterLast) throws HibernateException -->Line_8 $$ if (resultSet.isAfterLast() && isLogicallyAfterLast) [ FD ]
Line_15 $$ while (resultSet.previous()) -->Line_17 $$ if (firstPass) [ CD ]
Line_2 $$ public Object loadSequentialRowsReverse(final ResultSet resultSet, final SessionImplementor session, final QueryParameters queryParameters, final boolean returnProxies, final boolean isLogicallyAfterLast) throws HibernateException -->Line_26 $$ while (resultSet.previous()) [ FD ]
Line_15 $$ while (resultSet.previous()) -->Line_16 $$ EntityKey checkKey = getKeyFromResultSet(0, getEntityPersisters()[0], null, resultSet, session)[ CD ]
Line_2 $$ public Object loadSequentialRowsReverse(final ResultSet resultSet, final SessionImplementor session, final QueryParameters queryParameters, final boolean returnProxies, final boolean isLogicallyAfterLast) throws HibernateException -->Line_27 $$ EntityKey checkKey = getKeyFromResultSet(0, getEntityPersisters()[0], null, resultSet, session)[ FD ]
Line_7 $$ EntityKey keyToRead = null-->Line_10 $$ keyToRead = getKeyFromResultSet(0, getEntityPersisters()[0], null, resultSet, session)[ FD ]
Line_10 $$ keyToRead = getKeyFromResultSet(0, getEntityPersisters()[0], null, resultSet, session)-->Line_33 $$ return sequentialLoad(resultSet, session, queryParameters, returnProxies, keyToRead)[ FD ]
Line_8 $$ if (resultSet.isAfterLast() && isLogicallyAfterLast) -->Line_12 $$ resultSet.previous()[ CD ]
Line_7 $$ EntityKey keyToRead = null-->Line_19 $$ keyToRead = checkKey[ FD ]
Line_7 $$ EntityKey keyToRead = null-->Line_28 $$ if (!keyToRead.equals(checkKey)) [ FD ]
Line_8 $$ if (resultSet.isAfterLast() && isLogicallyAfterLast) -->Line_9 $$ resultSet.last()[ CD ]
Line_26 $$ while (resultSet.previous()) -->Line_27 $$ EntityKey checkKey = getKeyFromResultSet(0, getEntityPersisters()[0], null, resultSet, session)[ CD ]
Line_2 $$ public Object loadSequentialRowsReverse(final ResultSet resultSet, final SessionImplementor session, final QueryParameters queryParameters, final boolean returnProxies, final boolean isLogicallyAfterLast) throws HibernateException -->Line_14 $$ final EntityKey lastKey = getKeyFromResultSet(0, getEntityPersisters()[0], null, resultSet, session)[ FD ]
Line_10 $$ keyToRead = getKeyFromResultSet(0, getEntityPersisters()[0], null, resultSet, session)-->Line_19 $$ keyToRead = checkKey[ FD ]
Line_2 $$ public Object loadSequentialRowsReverse(final ResultSet resultSet, final SessionImplementor session, final QueryParameters queryParameters, final boolean returnProxies, final boolean isLogicallyAfterLast) throws HibernateException -->Line_33 $$ return sequentialLoad(resultSet, session, queryParameters, returnProxies, keyToRead)[ FD ]
