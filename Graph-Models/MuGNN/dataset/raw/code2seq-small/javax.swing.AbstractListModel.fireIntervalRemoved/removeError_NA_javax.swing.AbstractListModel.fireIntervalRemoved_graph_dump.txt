Line_2 $$ public void removeError(@NotNull ConfigurationError error) -->Line_4 $$ myIgnoredErrors.remove(error)[ FD ]
Line_2 $$ public void removeError(@NotNull ConfigurationError error) -->Line_5 $$ myNotIgnoredErrors.remove(error)[ CD ]
Line_2 $$ public void removeError(@NotNull ConfigurationError error) -->Line_5 $$ myNotIgnoredErrors.remove(error)[ FD ]
Line_2 $$ public void removeError(@NotNull ConfigurationError error) -->Line_4 $$ myIgnoredErrors.remove(error)[ CD ]
Line_2 $$ public void removeError(@NotNull ConfigurationError error) -->Line_3 $$ final int i = myAllErrors.indexOf(error)[ CD ]
Line_2 $$ public void removeError(@NotNull ConfigurationError error) -->Line_3 $$ final int i = myAllErrors.indexOf(error)[ FD ]
Line_6 $$ if (i != -1 && i < MAX_ERRORS_TO_SHOW) -->Line_7 $$ fireIntervalRemoved(this, i, i)[ CD ]
Line_2 $$ public void removeError(@NotNull ConfigurationError error) -->Line_6 $$ if (i != -1 && i < MAX_ERRORS_TO_SHOW) [ CD ]
Line_3 $$ final int i = myAllErrors.indexOf(error)-->Line_7 $$ fireIntervalRemoved(this, i, i)[ FD ]
