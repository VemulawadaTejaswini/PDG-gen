Line_22 $$ NativeLibrary lib = (NativeLibrary) libs.elementAt(i)-->Line_45 $$ lib.load(name)[ FD ]
Line_49 $$ if (lib.handle != 0) -->Line_51 $$ libs.addElement(lib)[ CD ]
Line_21 $$ for (int i = 0; i < size; i++) -->Line_33 $$ NativeLibrary lib = (NativeLibrary) nativeLibraryContext.elementAt(i)[ FD ]
Line_33 $$ NativeLibrary lib = (NativeLibrary) nativeLibraryContext.elementAt(i)-->Line_45 $$ lib.load(name)[ FD ]
Line_21 $$ for (int i = 0; i < size; i++) -->Line_22 $$ NativeLibrary lib = (NativeLibrary) libs.elementAt(i)[ CD ]
Line_3 $$ Boolean exists = (Boolean) AccessController.doPrivileged(new PrivilegedAction() -->Line_8 $$ if (!exists.booleanValue()) [ FD ]
Line_23 $$ if (name.equals(lib.name)) -->Line_24 $$ return true[ CD ]
Line_32 $$ for (int i = 0; i < n; i++) -->Line_33 $$ NativeLibrary lib = (NativeLibrary) nativeLibraryContext.elementAt(i)[ CD ]
Line_49 $$ if (lib.handle != 0) -->Line_52 $$ return true[ CD ]
Line_21 $$ for (int i = 0; i < size; i++) -->Line_22 $$ NativeLibrary lib = (NativeLibrary) libs.elementAt(i)[ FD ]
Line_3 $$ Boolean exists = (Boolean) AccessController.doPrivileged(new PrivilegedAction() -->Line_5 $$ return new Boolean(file.exists())[ CD ]
Line_21 $$ for (int i = 0; i < size; i++) -->Line_32 $$ for (int i = 0; i < n; i++) [ FD ]
Line_33 $$ NativeLibrary lib = (NativeLibrary) nativeLibraryContext.elementAt(i)-->Line_51 $$ libs.addElement(lib)[ FD ]
Line_2 $$ private static boolean loadLibrary0(Class fromClass, final File file) -->Line_17 $$ ClassLoader loader = (fromClass == null) ? null : fromClass.getClassLoader()[ FD ]
Line_35 $$ if (loader == lib.fromClass.getClassLoader()) -->Line_36 $$ return true[ CD ]
Line_22 $$ NativeLibrary lib = (NativeLibrary) libs.elementAt(i)-->Line_51 $$ libs.addElement(lib)[ FD ]
Line_2 $$ private static boolean loadLibrary0(Class fromClass, final File file) -->Line_5 $$ return new Boolean(file.exists())[ FD ]
Line_2 $$ private static boolean loadLibrary0(Class fromClass, final File file) -->Line_13 $$ name = file.getCanonicalPath()[ FD ]
Line_2 $$ private static boolean loadLibrary0(Class fromClass, final File file) -->Line_3 $$ Boolean exists = (Boolean) AccessController.doPrivileged(new PrivilegedAction() [ CD ]
Line_22 $$ NativeLibrary lib = (NativeLibrary) libs.elementAt(i)-->Line_43 $$ nativeLibraryContext.push(lib)[ FD ]
Line_34 $$ if (name.equals(lib.name)) -->Line_35 $$ if (loader == lib.fromClass.getClassLoader()) [ CD ]
Line_21 $$ for (int i = 0; i < size; i++) -->Line_23 $$ if (name.equals(lib.name)) [ CD ]
Line_49 $$ if (lib.handle != 0) -->Line_50 $$ loadedLibraryNames.addElement(name)[ CD ]
Line_2 $$ private static boolean loadLibrary0(Class fromClass, final File file) -->Line_8 $$ if (!exists.booleanValue()) [ CD ]
Line_32 $$ for (int i = 0; i < n; i++) -->Line_33 $$ NativeLibrary lib = (NativeLibrary) nativeLibraryContext.elementAt(i)[ FD ]
Line_33 $$ NativeLibrary lib = (NativeLibrary) nativeLibraryContext.elementAt(i)-->Line_43 $$ nativeLibraryContext.push(lib)[ FD ]
Line_32 $$ for (int i = 0; i < n; i++) -->Line_34 $$ if (name.equals(lib.name)) [ CD ]
Line_8 $$ if (!exists.booleanValue()) -->Line_9 $$ return false[ CD ]
