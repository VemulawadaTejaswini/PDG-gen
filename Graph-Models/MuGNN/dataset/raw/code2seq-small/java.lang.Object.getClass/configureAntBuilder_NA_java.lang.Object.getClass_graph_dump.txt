Line_5 $$ Class<?> projectClass = project.getClass()-->Line_9 $$ Method removeBuildListener = projectClass.getDeclaredMethod("removeBuildListener", buildListenerClass)[ FD ]
Line_5 $$ Class<?> projectClass = project.getClass()-->Line_10 $$ Method getBuildListeners = projectClass.getDeclaredMethod("getBuildListeners")[ FD ]
Line_5 $$ Class<?> projectClass = project.getClass()-->Line_6 $$ ClassLoader cl = projectClass.getClassLoader()[ FD ]
Line_10 $$ Method getBuildListeners = projectClass.getDeclaredMethod("getBuildListeners")-->Line_11 $$ Vector listeners = (Vector) getBuildListeners.invoke(project)[ FD ]
Line_9 $$ Method removeBuildListener = projectClass.getDeclaredMethod("removeBuildListener", buildListenerClass)-->Line_12 $$ removeBuildListener.invoke(project, listeners.get(0))[ FD ]
Line_2 $$ protected void configureAntBuilder(Object antBuilder, Object antLogger) -->Line_4 $$ Object project = getProject(antBuilder)[ FD ]
Line_4 $$ Object project = getProject(antBuilder)-->Line_11 $$ Vector listeners = (Vector) getBuildListeners.invoke(project)[ FD ]
Line_7 $$ Class<?> buildListenerClass = cl.loadClass("org.apache.tools.ant.BuildListener")-->Line_9 $$ Method removeBuildListener = projectClass.getDeclaredMethod("removeBuildListener", buildListenerClass)[ FD ]
Line_4 $$ Object project = getProject(antBuilder)-->Line_12 $$ removeBuildListener.invoke(project, listeners.get(0))[ FD ]
Line_11 $$ Vector listeners = (Vector) getBuildListeners.invoke(project)-->Line_12 $$ removeBuildListener.invoke(project, listeners.get(0))[ FD ]
Line_5 $$ Class<?> projectClass = project.getClass()-->Line_8 $$ Method addBuildListener = projectClass.getDeclaredMethod("addBuildListener", buildListenerClass)[ FD ]
Line_4 $$ Object project = getProject(antBuilder)-->Line_5 $$ Class<?> projectClass = project.getClass()[ FD ]
Line_2 $$ protected void configureAntBuilder(Object antBuilder, Object antLogger) -->Line_13 $$ addBuildListener.invoke(project, antLogger)[ FD ]
Line_6 $$ ClassLoader cl = projectClass.getClassLoader()-->Line_7 $$ Class<?> buildListenerClass = cl.loadClass("org.apache.tools.ant.BuildListener")[ FD ]
Line_8 $$ Method addBuildListener = projectClass.getDeclaredMethod("addBuildListener", buildListenerClass)-->Line_13 $$ addBuildListener.invoke(project, antLogger)[ FD ]
Line_7 $$ Class<?> buildListenerClass = cl.loadClass("org.apache.tools.ant.BuildListener")-->Line_8 $$ Method addBuildListener = projectClass.getDeclaredMethod("addBuildListener", buildListenerClass)[ FD ]
Line_4 $$ Object project = getProject(antBuilder)-->Line_13 $$ addBuildListener.invoke(project, antLogger)[ FD ]
