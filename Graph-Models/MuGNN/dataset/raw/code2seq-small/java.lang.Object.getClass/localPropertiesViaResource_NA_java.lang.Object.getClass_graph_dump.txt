Line_2 $$ public void localPropertiesViaResource() -->Line_6 $$ Resource resource = new ClassPathResource("PropertySourcesPlaceholderConfigurerTests.properties", this.getClass())[ CD ]
Line_2 $$ public void localPropertiesViaResource() -->Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()[ CD ]
Line_2 $$ public void localPropertiesViaResource() -->Line_7 $$ pc.setLocation(resource)[ CD ]
Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_8 $$ pc.postProcessBeanFactory(bf)[ FD ]
Line_2 $$ public void localPropertiesViaResource() -->Line_4 $$ bf.registerBeanDefinition("testBean", genericBeanDefinition(TestBean.class).addPropertyValue("name", "$[ CD ]
Line_5 $$ PropertySourcesPlaceholderConfigurer pc = new PropertySourcesPlaceholderConfigurer()-->Line_7 $$ pc.setLocation(resource)[ FD ]
Line_2 $$ public void localPropertiesViaResource() -->Line_9 $$ assertThat(bf.getBean(TestBean.class).getName(), equalTo("foo"))[ CD ]
Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_9 $$ assertThat(bf.getBean(TestBean.class).getName(), equalTo("foo"))[ FD ]
Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_4 $$ bf.registerBeanDefinition("testBean", genericBeanDefinition(TestBean.class).addPropertyValue("name", "$[ FD ]
Line_2 $$ public void localPropertiesViaResource() -->Line_5 $$ PropertySourcesPlaceholderConfigurer pc = new PropertySourcesPlaceholderConfigurer()[ CD ]
Line_6 $$ Resource resource = new ClassPathResource("PropertySourcesPlaceholderConfigurerTests.properties", this.getClass())-->Line_7 $$ pc.setLocation(resource)[ FD ]
Line_5 $$ PropertySourcesPlaceholderConfigurer pc = new PropertySourcesPlaceholderConfigurer()-->Line_8 $$ pc.postProcessBeanFactory(bf)[ FD ]
Line_2 $$ public void localPropertiesViaResource() -->Line_8 $$ pc.postProcessBeanFactory(bf)[ CD ]
