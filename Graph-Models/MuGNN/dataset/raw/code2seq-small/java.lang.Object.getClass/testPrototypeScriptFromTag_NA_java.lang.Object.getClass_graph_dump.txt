Line_2 $$ public void testPrototypeScriptFromTag() throws Exception -->Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-with-xsd.xml", getClass())[ CD ]
Line_2 $$ public void testPrototypeScriptFromTag() throws Exception -->Line_12 $$ assertEquals("Bye World!", messenger.getMessage())[ CD ]
Line_2 $$ public void testPrototypeScriptFromTag() throws Exception -->Line_4 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerPrototype")[ CD ]
Line_5 $$ ConfigurableMessenger messenger2 = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_7 $$ assertSame(messenger.getClass(), messenger2.getClass())[ FD ]
Line_4 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_10 $$ messenger.setMessage("Bye World!")[ FD ]
Line_5 $$ ConfigurableMessenger messenger2 = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_13 $$ assertEquals("Byebye World!", messenger2.getMessage())[ FD ]
Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-with-xsd.xml", getClass())-->Line_5 $$ ConfigurableMessenger messenger2 = (ConfigurableMessenger) ctx.getBean("messengerPrototype")[ FD ]
Line_2 $$ public void testPrototypeScriptFromTag() throws Exception -->Line_13 $$ assertEquals("Byebye World!", messenger2.getMessage())[ CD ]
Line_2 $$ public void testPrototypeScriptFromTag() throws Exception -->Line_8 $$ assertEquals("Hello World!", messenger.getMessage())[ CD ]
Line_2 $$ public void testPrototypeScriptFromTag() throws Exception -->Line_6 $$ assertNotSame(messenger, messenger2)[ CD ]
Line_4 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_7 $$ assertSame(messenger.getClass(), messenger2.getClass())[ FD ]
Line_2 $$ public void testPrototypeScriptFromTag() throws Exception -->Line_11 $$ messenger2.setMessage("Byebye World!")[ CD ]
Line_2 $$ public void testPrototypeScriptFromTag() throws Exception -->Line_10 $$ messenger.setMessage("Bye World!")[ CD ]
Line_2 $$ public void testPrototypeScriptFromTag() throws Exception -->Line_7 $$ assertSame(messenger.getClass(), messenger2.getClass())[ CD ]
Line_4 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_8 $$ assertEquals("Hello World!", messenger.getMessage())[ FD ]
Line_5 $$ ConfigurableMessenger messenger2 = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_6 $$ assertNotSame(messenger, messenger2)[ FD ]
Line_4 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_12 $$ assertEquals("Bye World!", messenger.getMessage())[ FD ]
Line_5 $$ ConfigurableMessenger messenger2 = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_9 $$ assertEquals("Hello World!", messenger2.getMessage())[ FD ]
Line_2 $$ public void testPrototypeScriptFromTag() throws Exception -->Line_5 $$ ConfigurableMessenger messenger2 = (ConfigurableMessenger) ctx.getBean("messengerPrototype")[ CD ]
Line_5 $$ ConfigurableMessenger messenger2 = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_11 $$ messenger2.setMessage("Byebye World!")[ FD ]
Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-with-xsd.xml", getClass())-->Line_4 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerPrototype")[ FD ]
Line_2 $$ public void testPrototypeScriptFromTag() throws Exception -->Line_9 $$ assertEquals("Hello World!", messenger2.getMessage())[ CD ]
Line_4 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_6 $$ assertNotSame(messenger, messenger2)[ FD ]
