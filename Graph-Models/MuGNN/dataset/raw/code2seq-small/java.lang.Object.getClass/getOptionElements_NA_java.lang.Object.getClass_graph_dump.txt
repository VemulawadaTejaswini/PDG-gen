Line_4 $$ for (Class<?> type = target.getClass(); type != Object.class && type != null; type = type.getSuperclass()) -->Line_6 $$ allOptionElements.addAll(getFieldAnnotations(type))[ FD ]
Line_2 $$ private Collection<OptionElement> getOptionElements(Object target) -->Line_3 $$ List<OptionElement> allOptionElements = new ArrayList<OptionElement>()[ CD ]
Line_4 $$ for (Class<?> type = target.getClass(); type != Object.class && type != null; type = type.getSuperclass()) -->Line_5 $$ allOptionElements.addAll(getMethodAnnotations(type))[ FD ]
Line_3 $$ List<OptionElement> allOptionElements = new ArrayList<OptionElement>()-->Line_5 $$ allOptionElements.addAll(getMethodAnnotations(type))[ FD ]
Line_4 $$ for (Class<?> type = target.getClass(); type != Object.class && type != null; type = type.getSuperclass()) -->Line_6 $$ allOptionElements.addAll(getFieldAnnotations(type))[ CD ]
Line_3 $$ List<OptionElement> allOptionElements = new ArrayList<OptionElement>()-->Line_6 $$ allOptionElements.addAll(getFieldAnnotations(type))[ FD ]
Line_4 $$ for (Class<?> type = target.getClass(); type != Object.class && type != null; type = type.getSuperclass()) -->Line_5 $$ allOptionElements.addAll(getMethodAnnotations(type))[ CD ]
Line_2 $$ private Collection<OptionElement> getOptionElements(Object target) -->Line_4 $$ for (Class<?> type = target.getClass(); type != Object.class && type != null; type = type.getSuperclass()) [ FD ]
Line_2 $$ private Collection<OptionElement> getOptionElements(Object target) -->Line_4 $$ for (Class<?> type = target.getClass(); type != Object.class && type != null; type = type.getSuperclass()) [ CD ]
Line_2 $$ private Collection<OptionElement> getOptionElements(Object target) -->Line_8 $$ return allOptionElements[ CD ]
