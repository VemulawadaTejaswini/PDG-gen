Line_14 $$ if (Script.class.isAssignableFrom(this.scriptClass)) -->Line_15 $$ Object result = executeScript(scriptSource, this.scriptClass)[ CD ]
Line_12 $$ if (this.scriptClass == null || scriptSource.isModified()) -->Line_14 $$ if (Script.class.isAssignableFrom(this.scriptClass)) [ CD ]
Line_2 $$ public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) throws IOException, ScriptCompilationException -->Line_13 $$ this.scriptClass = getGroovyClassLoader().parseClass(scriptSource.getScriptAsString(), scriptSource.suggestedClassName())[ FD ]
Line_2 $$ public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) throws IOException, ScriptCompilationException -->Line_15 $$ Object result = executeScript(scriptSource, this.scriptClass)[ FD ]
Line_7 $$ if (this.cachedResult != null) -->Line_8 $$ Object result = this.cachedResult.object[ CD ]
Line_14 $$ if (Script.class.isAssignableFrom(this.scriptClass)) -->Line_17 $$ return result[ CD ]
Line_14 $$ if (Script.class.isAssignableFrom(this.scriptClass)) -->Line_19 $$ this.scriptResultClass = this.scriptClass[ CD ]
Line_2 $$ public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) throws IOException, ScriptCompilationException -->Line_24 $$ return executeScript(scriptSource, scriptClassToExecute)[ FD ]
Line_8 $$ Object result = this.cachedResult.object-->Line_16 $$ this.scriptResultClass = (result != null ? result.getClass() : null)[ FD ]
Line_4 $$ Class<?> scriptClassToExecute-->Line_22 $$ scriptClassToExecute = this.scriptClass[ FD ]
Line_22 $$ scriptClassToExecute = this.scriptClass-->Line_24 $$ return executeScript(scriptSource, scriptClassToExecute)[ FD ]
Line_14 $$ if (Script.class.isAssignableFrom(this.scriptClass)) -->Line_16 $$ this.scriptResultClass = (result != null ? result.getClass() : null)[ CD ]
Line_7 $$ if (this.cachedResult != null) -->Line_9 $$ this.cachedResult = null[ CD ]
Line_2 $$ public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) throws IOException, ScriptCompilationException -->Line_12 $$ if (this.scriptClass == null || scriptSource.isModified()) [ FD ]
Line_7 $$ if (this.cachedResult != null) -->Line_10 $$ return result[ CD ]
Line_12 $$ if (this.scriptClass == null || scriptSource.isModified()) -->Line_13 $$ this.scriptClass = getGroovyClassLoader().parseClass(scriptSource.getScriptAsString(), scriptSource.suggestedClassName())[ CD ]
Line_4 $$ Class<?> scriptClassToExecute-->Line_24 $$ return executeScript(scriptSource, scriptClassToExecute)[ FD ]
