Line_21 $$ if (name.startsWith(INTERNAL_ARRAY_PREFIX)) -->Line_22 $$ String elementName = name.substring(INTERNAL_ARRAY_PREFIX.length())[ CD ]
Line_26 $$ ClassLoader clToUse = classLoader-->Line_28 $$ clToUse = getDefaultClassLoader()[ FD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_4 $$ Class<?> clazz = resolvePrimitiveClassName(name)[ FD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_18 $$ Class<?> elementClass = forName(elementName, classLoader)[ FD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_31 $$ return (clToUse != null ? clToUse.loadClass(name) : Class.forName(name))[ FD ]
Line_34 $$ if (lastDotIndex != -1) -->Line_35 $$ String innerClassName = name.substring(0, lastDotIndex) + INNER_CLASS_SEPARATOR + name.substring(lastDotIndex + 1)[ CD ]
Line_35 $$ String innerClassName = name.substring(0, lastDotIndex) + INNER_CLASS_SEPARATOR + name.substring(lastDotIndex + 1)-->Line_37 $$ return (clToUse != null ? clToUse.loadClass(innerClassName) : Class.forName(innerClassName))[ FD ]
Line_26 $$ ClassLoader clToUse = classLoader-->Line_31 $$ return (clToUse != null ? clToUse.loadClass(name) : Class.forName(name))[ FD ]
Line_28 $$ clToUse = getDefaultClassLoader()-->Line_31 $$ return (clToUse != null ? clToUse.loadClass(name) : Class.forName(name))[ FD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_6 $$ clazz = commonClassCache.get(name)[ FD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_27 $$ if (clToUse == null) [ CD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_33 $$ int lastDotIndex = name.lastIndexOf(PACKAGE_SEPARATOR)[ FD ]
Line_4 $$ Class<?> clazz = resolvePrimitiveClassName(name)-->Line_6 $$ clazz = commonClassCache.get(name)[ FD ]
Line_26 $$ ClassLoader clToUse = classLoader-->Line_27 $$ if (clToUse == null) [ FD ]
Line_11 $$ if (name.endsWith(ARRAY_SUFFIX)) -->Line_13 $$ Class<?> elementClass = forName(elementClassName, classLoader)[ CD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_11 $$ if (name.endsWith(ARRAY_SUFFIX)) [ FD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_26 $$ ClassLoader clToUse = classLoader[ CD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_3 $$ Assert.notNull(name, "Name must not be null")[ FD ]
Line_11 $$ if (name.endsWith(ARRAY_SUFFIX)) -->Line_14 $$ return Array.newInstance(elementClass, 0).getClass()[ CD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_22 $$ String elementName = name.substring(INTERNAL_ARRAY_PREFIX.length())[ FD ]
Line_11 $$ if (name.endsWith(ARRAY_SUFFIX)) -->Line_12 $$ String elementClassName = name.substring(0, name.length() - ARRAY_SUFFIX.length())[ CD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_13 $$ Class<?> elementClass = forName(elementClassName, classLoader)[ FD ]
Line_12 $$ String elementClassName = name.substring(0, name.length() - ARRAY_SUFFIX.length())-->Line_13 $$ Class<?> elementClass = forName(elementClassName, classLoader)[ FD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_11 $$ if (name.endsWith(ARRAY_SUFFIX)) [ CD ]
Line_13 $$ Class<?> elementClass = forName(elementClassName, classLoader)-->Line_19 $$ return Array.newInstance(elementClass, 0).getClass()[ FD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_12 $$ String elementClassName = name.substring(0, name.length() - ARRAY_SUFFIX.length())[ FD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_16 $$ if (name.startsWith(NON_PRIMITIVE_ARRAY_PREFIX) && name.endsWith(";")) [ CD ]
Line_33 $$ int lastDotIndex = name.lastIndexOf(PACKAGE_SEPARATOR)-->Line_34 $$ if (lastDotIndex != -1) [ FD ]
Line_17 $$ String elementName = name.substring(NON_PRIMITIVE_ARRAY_PREFIX.length(), name.length() - 1)-->Line_23 $$ Class<?> elementClass = forName(elementName, classLoader)[ FD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_4 $$ Class<?> clazz = resolvePrimitiveClassName(name)[ CD ]
Line_33 $$ int lastDotIndex = name.lastIndexOf(PACKAGE_SEPARATOR)-->Line_35 $$ String innerClassName = name.substring(0, lastDotIndex) + INNER_CLASS_SEPARATOR + name.substring(lastDotIndex + 1)[ FD ]
Line_16 $$ if (name.startsWith(NON_PRIMITIVE_ARRAY_PREFIX) && name.endsWith(";")) -->Line_19 $$ return Array.newInstance(elementClass, 0).getClass()[ CD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_21 $$ if (name.startsWith(INTERNAL_ARRAY_PREFIX)) [ FD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_17 $$ String elementName = name.substring(NON_PRIMITIVE_ARRAY_PREFIX.length(), name.length() - 1)[ FD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_8 $$ if (clazz != null) [ CD ]
Line_8 $$ if (clazz != null) -->Line_9 $$ return clazz[ CD ]
Line_13 $$ Class<?> elementClass = forName(elementClassName, classLoader)-->Line_14 $$ return Array.newInstance(elementClass, 0).getClass()[ FD ]
Line_27 $$ if (clToUse == null) -->Line_28 $$ clToUse = getDefaultClassLoader()[ CD ]
Line_16 $$ if (name.startsWith(NON_PRIMITIVE_ARRAY_PREFIX) && name.endsWith(";")) -->Line_18 $$ Class<?> elementClass = forName(elementName, classLoader)[ CD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_3 $$ Assert.notNull(name, "Name must not be null")[ CD ]
Line_4 $$ Class<?> clazz = resolvePrimitiveClassName(name)-->Line_5 $$ if (clazz == null) [ FD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_23 $$ Class<?> elementClass = forName(elementName, classLoader)[ FD ]
Line_4 $$ Class<?> clazz = resolvePrimitiveClassName(name)-->Line_8 $$ if (clazz != null) [ FD ]
Line_21 $$ if (name.startsWith(INTERNAL_ARRAY_PREFIX)) -->Line_23 $$ Class<?> elementClass = forName(elementName, classLoader)[ CD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_35 $$ String innerClassName = name.substring(0, lastDotIndex) + INNER_CLASS_SEPARATOR + name.substring(lastDotIndex + 1)[ FD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_21 $$ if (name.startsWith(INTERNAL_ARRAY_PREFIX)) [ CD ]
Line_28 $$ clToUse = getDefaultClassLoader()-->Line_37 $$ return (clToUse != null ? clToUse.loadClass(innerClassName) : Class.forName(innerClassName))[ FD ]
Line_26 $$ ClassLoader clToUse = classLoader-->Line_37 $$ return (clToUse != null ? clToUse.loadClass(innerClassName) : Class.forName(innerClassName))[ FD ]
Line_13 $$ Class<?> elementClass = forName(elementClassName, classLoader)-->Line_24 $$ return Array.newInstance(elementClass, 0).getClass()[ FD ]
Line_17 $$ String elementName = name.substring(NON_PRIMITIVE_ARRAY_PREFIX.length(), name.length() - 1)-->Line_18 $$ Class<?> elementClass = forName(elementName, classLoader)[ FD ]
Line_21 $$ if (name.startsWith(INTERNAL_ARRAY_PREFIX)) -->Line_24 $$ return Array.newInstance(elementClass, 0).getClass()[ CD ]
Line_5 $$ if (clazz == null) -->Line_6 $$ clazz = commonClassCache.get(name)[ CD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_16 $$ if (name.startsWith(NON_PRIMITIVE_ARRAY_PREFIX) && name.endsWith(";")) [ FD ]
Line_6 $$ clazz = commonClassCache.get(name)-->Line_8 $$ if (clazz != null) [ FD ]
Line_2 $$ public static Class<?> forName(String name, ClassLoader classLoader) throws ClassNotFoundException, LinkageError -->Line_5 $$ if (clazz == null) [ CD ]
Line_16 $$ if (name.startsWith(NON_PRIMITIVE_ARRAY_PREFIX) && name.endsWith(";")) -->Line_17 $$ String elementName = name.substring(NON_PRIMITIVE_ARRAY_PREFIX.length(), name.length() - 1)[ CD ]
