Line_2 $$ public static ID findWindowFromJavaWindow(final Window w) -->Line_4 $$ if (SystemInfo.isJavaVersionAtLeast("1.7") && Registry.is("skip.untitled.windows.for.mac.messages")) [ CD ]
Line_4 $$ if (SystemInfo.isJavaVersionAtLeast("1.7") && Registry.is("skip.untitled.windows.for.mac.messages")) -->Line_20 $$ String foremostWindowTitle = getWindowTitle(w)[ CD ]
Line_7 $$ Method getPlatformWindowMethod = cWindowPeerClass.getDeclaredMethod("getPlatformWindow")-->Line_8 $$ Object cPlatformWindow = getPlatformWindowMethod.invoke(w.getPeer())[ FD ]
Line_2 $$ public static ID findWindowFromJavaWindow(final Window w) -->Line_3 $$ ID windowId = null[ CD ]
Line_20 $$ String foremostWindowTitle = getWindowTitle(w)-->Line_21 $$ windowId = findWindowForTitle(foremostWindowTitle)[ FD ]
Line_11 $$ windowId = new ID((Long) getNSWindowPtrMethod.invoke(cPlatformWindow))-->Line_21 $$ windowId = findWindowForTitle(foremostWindowTitle)[ FD ]
Line_2 $$ public static ID findWindowFromJavaWindow(final Window w) -->Line_23 $$ return windowId[ CD ]
Line_2 $$ public static ID findWindowFromJavaWindow(final Window w) -->Line_20 $$ String foremostWindowTitle = getWindowTitle(w)[ FD ]
Line_9 $$ Class<?> cPlatformWindowClass = cPlatformWindow.getClass()-->Line_10 $$ Method getNSWindowPtrMethod = cPlatformWindowClass.getDeclaredMethod("getNSWindowPtr")[ FD ]
Line_8 $$ Object cPlatformWindow = getPlatformWindowMethod.invoke(w.getPeer())-->Line_9 $$ Class<?> cPlatformWindowClass = cPlatformWindow.getClass()[ FD ]
Line_8 $$ Object cPlatformWindow = getPlatformWindowMethod.invoke(w.getPeer())-->Line_11 $$ windowId = new ID((Long) getNSWindowPtrMethod.invoke(cPlatformWindow))[ FD ]
Line_10 $$ Method getNSWindowPtrMethod = cPlatformWindowClass.getDeclaredMethod("getNSWindowPtr")-->Line_11 $$ windowId = new ID((Long) getNSWindowPtrMethod.invoke(cPlatformWindow))[ FD ]
Line_2 $$ public static ID findWindowFromJavaWindow(final Window w) -->Line_6 $$ Class<?> cWindowPeerClass = w.getPeer().getClass()[ FD ]
Line_4 $$ if (SystemInfo.isJavaVersionAtLeast("1.7") && Registry.is("skip.untitled.windows.for.mac.messages")) -->Line_21 $$ windowId = findWindowForTitle(foremostWindowTitle)[ CD ]
Line_3 $$ ID windowId = null-->Line_11 $$ windowId = new ID((Long) getNSWindowPtrMethod.invoke(cPlatformWindow))[ FD ]
Line_3 $$ ID windowId = null-->Line_21 $$ windowId = findWindowForTitle(foremostWindowTitle)[ FD ]
Line_6 $$ Class<?> cWindowPeerClass = w.getPeer().getClass()-->Line_7 $$ Method getPlatformWindowMethod = cWindowPeerClass.getDeclaredMethod("getPlatformWindow")[ FD ]
Line_2 $$ public static ID findWindowFromJavaWindow(final Window w) -->Line_8 $$ Object cPlatformWindow = getPlatformWindowMethod.invoke(w.getPeer())[ FD ]
