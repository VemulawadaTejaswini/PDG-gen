Line_2 $$ public void multipleLocationsWithDefaultResolvedValue() throws Exception -->Line_3 $$ PropertySourcesPlaceholderConfigurer ppc = new PropertySourcesPlaceholderConfigurer()[ CD ]
Line_2 $$ public void multipleLocationsWithDefaultResolvedValue() throws Exception -->Line_8 $$ ppc.setIgnoreUnresolvablePlaceholders(true)[ CD ]
Line_3 $$ PropertySourcesPlaceholderConfigurer ppc = new PropertySourcesPlaceholderConfigurer()-->Line_11 $$ ppc.postProcessBeanFactory(bf)[ FD ]
Line_2 $$ public void multipleLocationsWithDefaultResolvedValue() throws Exception -->Line_6 $$ ppc.setLocations(new Resource[] [ CD ]
Line_2 $$ public void multipleLocationsWithDefaultResolvedValue() throws Exception -->Line_9 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()[ CD ]
Line_2 $$ public void multipleLocationsWithDefaultResolvedValue() throws Exception -->Line_10 $$ bf.registerBeanDefinition("testBean", genericBeanDefinition(TestBean.class).addPropertyValue("jedi", "$[ CD ]
Line_2 $$ public void multipleLocationsWithDefaultResolvedValue() throws Exception -->Line_12 $$ assertThat(bf.getBean(TestBean.class).isJedi(), equalTo(true))[ CD ]
Line_3 $$ PropertySourcesPlaceholderConfigurer ppc = new PropertySourcesPlaceholderConfigurer()-->Line_6 $$ ppc.setLocations(new Resource[] [ FD ]
Line_2 $$ public void multipleLocationsWithDefaultResolvedValue() throws Exception -->Line_7 $$ ppc.setIgnoreResourceNotFound(true)[ CD ]
Line_3 $$ PropertySourcesPlaceholderConfigurer ppc = new PropertySourcesPlaceholderConfigurer()-->Line_7 $$ ppc.setIgnoreResourceNotFound(true)[ FD ]
Line_9 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_10 $$ bf.registerBeanDefinition("testBean", genericBeanDefinition(TestBean.class).addPropertyValue("jedi", "$[ FD ]
Line_9 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_12 $$ assertThat(bf.getBean(TestBean.class).isJedi(), equalTo(true))[ FD ]
Line_9 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_11 $$ ppc.postProcessBeanFactory(bf)[ FD ]
Line_2 $$ public void multipleLocationsWithDefaultResolvedValue() throws Exception -->Line_4 $$ ClassPathResource doesNotHave = new ClassPathResource("test.properties", getClass())[ CD ]
Line_3 $$ PropertySourcesPlaceholderConfigurer ppc = new PropertySourcesPlaceholderConfigurer()-->Line_8 $$ ppc.setIgnoreUnresolvablePlaceholders(true)[ FD ]
Line_2 $$ public void multipleLocationsWithDefaultResolvedValue() throws Exception -->Line_11 $$ ppc.postProcessBeanFactory(bf)[ CD ]
Line_2 $$ public void multipleLocationsWithDefaultResolvedValue() throws Exception -->Line_5 $$ ClassPathResource setToTrue = new ClassPathResource("placeholder.properties", getClass())[ CD ]
