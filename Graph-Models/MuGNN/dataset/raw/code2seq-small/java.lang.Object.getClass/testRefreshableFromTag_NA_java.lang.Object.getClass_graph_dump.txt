Line_2 $$ public void testRefreshableFromTag() throws Exception -->Line_9 $$ assertEquals(0, countingAspect.getCalls())[ CD ]
Line_2 $$ public void testRefreshableFromTag() throws Exception -->Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-with-xsd.xml", getClass())[ CD ]
Line_2 $$ public void testRefreshableFromTag() throws Exception -->Line_12 $$ assertTrue(ctx.getBeansOfType(Messenger.class).values().contains(messenger))[ CD ]
Line_2 $$ public void testRefreshableFromTag() throws Exception -->Line_8 $$ assertTrue(messenger instanceof Refreshable)[ CD ]
Line_2 $$ public void testRefreshableFromTag() throws Exception -->Line_4 $$ assertTrue(Arrays.asList(ctx.getBeanNamesForType(Messenger.class)).contains("refreshableMessenger"))[ CD ]
Line_2 $$ public void testRefreshableFromTag() throws Exception -->Line_5 $$ Messenger messenger = (Messenger) ctx.getBean("refreshableMessenger")[ CD ]
Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-with-xsd.xml", getClass())-->Line_12 $$ assertTrue(ctx.getBeansOfType(Messenger.class).values().contains(messenger))[ FD ]
Line_2 $$ public void testRefreshableFromTag() throws Exception -->Line_10 $$ assertEquals("Hello World!", messenger.getMessage())[ CD ]
Line_5 $$ Messenger messenger = (Messenger) ctx.getBean("refreshableMessenger")-->Line_7 $$ assertTrue(AopUtils.isAopProxy(messenger))[ FD ]
Line_6 $$ CallCounter countingAspect = (CallCounter) ctx.getBean("getMessageAspect")-->Line_9 $$ assertEquals(0, countingAspect.getCalls())[ FD ]
Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-with-xsd.xml", getClass())-->Line_4 $$ assertTrue(Arrays.asList(ctx.getBeanNamesForType(Messenger.class)).contains("refreshableMessenger"))[ FD ]
Line_2 $$ public void testRefreshableFromTag() throws Exception -->Line_7 $$ assertTrue(AopUtils.isAopProxy(messenger))[ CD ]
Line_5 $$ Messenger messenger = (Messenger) ctx.getBean("refreshableMessenger")-->Line_12 $$ assertTrue(ctx.getBeansOfType(Messenger.class).values().contains(messenger))[ FD ]
Line_2 $$ public void testRefreshableFromTag() throws Exception -->Line_11 $$ assertEquals(1, countingAspect.getCalls())[ CD ]
Line_2 $$ public void testRefreshableFromTag() throws Exception -->Line_6 $$ CallCounter countingAspect = (CallCounter) ctx.getBean("getMessageAspect")[ CD ]
Line_6 $$ CallCounter countingAspect = (CallCounter) ctx.getBean("getMessageAspect")-->Line_11 $$ assertEquals(1, countingAspect.getCalls())[ FD ]
Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-with-xsd.xml", getClass())-->Line_5 $$ Messenger messenger = (Messenger) ctx.getBean("refreshableMessenger")[ FD ]
Line_5 $$ Messenger messenger = (Messenger) ctx.getBean("refreshableMessenger")-->Line_10 $$ assertEquals("Hello World!", messenger.getMessage())[ FD ]
Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-with-xsd.xml", getClass())-->Line_6 $$ CallCounter countingAspect = (CallCounter) ctx.getBean("getMessageAspect")[ FD ]
