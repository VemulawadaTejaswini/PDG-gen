Line_2 $$ public void testGenericApplicationContextWithXmlBeanDefinitionsAndClassLoaderNull() -->Line_15 $$ ctx.close()[ CD ]
Line_3 $$ GenericApplicationContext ctx = new GenericApplicationContext()-->Line_13 $$ assertTrue(ctx.containsBean("logicOne"))[ FD ]
Line_5 $$ XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(ctx)-->Line_8 $$ reader.loadBeanDefinitions(new ClassPathResource(CONTEXT_A, getClass()))[ FD ]
Line_2 $$ public void testGenericApplicationContextWithXmlBeanDefinitionsAndClassLoaderNull() -->Line_6 $$ reader.loadBeanDefinitions(new ClassPathResource(CONTEXT_B, getClass()))[ CD ]
Line_3 $$ GenericApplicationContext ctx = new GenericApplicationContext()-->Line_10 $$ assertEquals(ObjectUtils.identityToString(ctx), ctx.getId())[ FD ]
Line_2 $$ public void testGenericApplicationContextWithXmlBeanDefinitionsAndClassLoaderNull() -->Line_9 $$ ctx.refresh()[ CD ]
Line_3 $$ GenericApplicationContext ctx = new GenericApplicationContext()-->Line_14 $$ assertTrue(ctx.containsBean("logicTwo"))[ FD ]
Line_2 $$ public void testGenericApplicationContextWithXmlBeanDefinitionsAndClassLoaderNull() -->Line_5 $$ XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(ctx)[ CD ]
Line_3 $$ GenericApplicationContext ctx = new GenericApplicationContext()-->Line_4 $$ ctx.setClassLoader(null)[ FD ]
Line_5 $$ XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(ctx)-->Line_7 $$ reader.loadBeanDefinitions(new ClassPathResource(CONTEXT_C, getClass()))[ FD ]
Line_2 $$ public void testGenericApplicationContextWithXmlBeanDefinitionsAndClassLoaderNull() -->Line_14 $$ assertTrue(ctx.containsBean("logicTwo"))[ CD ]
Line_2 $$ public void testGenericApplicationContextWithXmlBeanDefinitionsAndClassLoaderNull() -->Line_4 $$ ctx.setClassLoader(null)[ CD ]
Line_5 $$ XmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(ctx)-->Line_6 $$ reader.loadBeanDefinitions(new ClassPathResource(CONTEXT_B, getClass()))[ FD ]
Line_2 $$ public void testGenericApplicationContextWithXmlBeanDefinitionsAndClassLoaderNull() -->Line_11 $$ assertEquals(ObjectUtils.identityToString(ctx), ctx.getDisplayName())[ CD ]
Line_2 $$ public void testGenericApplicationContextWithXmlBeanDefinitionsAndClassLoaderNull() -->Line_7 $$ reader.loadBeanDefinitions(new ClassPathResource(CONTEXT_C, getClass()))[ CD ]
Line_2 $$ public void testGenericApplicationContextWithXmlBeanDefinitionsAndClassLoaderNull() -->Line_12 $$ assertTrue(ctx.containsBean("service"))[ CD ]
Line_2 $$ public void testGenericApplicationContextWithXmlBeanDefinitionsAndClassLoaderNull() -->Line_3 $$ GenericApplicationContext ctx = new GenericApplicationContext()[ CD ]
Line_3 $$ GenericApplicationContext ctx = new GenericApplicationContext()-->Line_15 $$ ctx.close()[ FD ]
Line_3 $$ GenericApplicationContext ctx = new GenericApplicationContext()-->Line_9 $$ ctx.refresh()[ FD ]
Line_3 $$ GenericApplicationContext ctx = new GenericApplicationContext()-->Line_12 $$ assertTrue(ctx.containsBean("service"))[ FD ]
Line_2 $$ public void testGenericApplicationContextWithXmlBeanDefinitionsAndClassLoaderNull() -->Line_8 $$ reader.loadBeanDefinitions(new ClassPathResource(CONTEXT_A, getClass()))[ CD ]
Line_2 $$ public void testGenericApplicationContextWithXmlBeanDefinitionsAndClassLoaderNull() -->Line_10 $$ assertEquals(ObjectUtils.identityToString(ctx), ctx.getId())[ CD ]
Line_3 $$ GenericApplicationContext ctx = new GenericApplicationContext()-->Line_11 $$ assertEquals(ObjectUtils.identityToString(ctx), ctx.getDisplayName())[ FD ]
Line_2 $$ public void testGenericApplicationContextWithXmlBeanDefinitionsAndClassLoaderNull() -->Line_13 $$ assertTrue(ctx.containsBean("logicOne"))[ CD ]
