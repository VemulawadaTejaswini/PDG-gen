Line_2 $$ public void conditionalConverterCachingForDifferentAnnotationAttributes() throws Exception -->Line_3 $$ conversionService.addConverter(new ColorConverter())[ CD ]
Line_2 $$ public void conditionalConverterCachingForDifferentAnnotationAttributes() throws Exception -->Line_5 $$ assertEquals(Color.BLACK, conversionService.convert("000000xxxx", new TypeDescriptor(getClass().getField("activeColor"))))[ CD ]
Line_2 $$ public void conditionalConverterCachingForDifferentAnnotationAttributes() throws Exception -->Line_7 $$ assertEquals(Color.BLACK, conversionService.convert("000000yyyy", new TypeDescriptor(getClass().getField("activeColor"))))[ CD ]
Line_2 $$ public void conditionalConverterCachingForDifferentAnnotationAttributes() throws Exception -->Line_8 $$ assertEquals(Color.BLACK, conversionService.convert("  #000000  ", new TypeDescriptor(getClass().getField("inactiveColor"))))[ CD ]
Line_2 $$ public void conditionalConverterCachingForDifferentAnnotationAttributes() throws Exception -->Line_6 $$ assertEquals(Color.BLACK, conversionService.convert(" #000000 ", new TypeDescriptor(getClass().getField("inactiveColor"))))[ CD ]
Line_2 $$ public void conditionalConverterCachingForDifferentAnnotationAttributes() throws Exception -->Line_4 $$ conversionService.addConverter(new MyConditionalColorConverter())[ CD ]
