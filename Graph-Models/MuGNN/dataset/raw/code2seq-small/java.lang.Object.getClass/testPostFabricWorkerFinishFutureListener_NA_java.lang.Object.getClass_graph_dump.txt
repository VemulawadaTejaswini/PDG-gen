Line_4 $$ Path inputPath1 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath1"))-->Line_17 $$ Assert.assertTrue(Files.notExists(inputPath1))[ FD ]
Line_43 $$ defaultNoticeableFuture = new DefaultNoticeableFuture()-->Line_44 $$ defaultNoticeableFuture.set(StringPool.BLANK)[ FD ]
Line_5 $$ Path inputPath2 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath2"))-->Line_49 $$ Assert.assertTrue(Files.notExists(inputPath2))[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_28 $$ postFabricWorkerFinishFutureListener.complete(null)[ CD ]
Line_27 $$ noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()-->Line_51 $$ Assert.assertEquals(StringPool.BLANK, noticeableFuture.get())[ FD ]
Line_9 $$ PostFabricWorkerFinishFutureListener postFabricWorkerFinishFutureListener = nettyFabricWorkerExecutionChannelHandler.new PostFabricWorkerFinishFutureListener(_embeddedChannel, createNettyFabricWorkerConfig(), new LoadedPaths(inputPaths, null, null))-->Line_47 $$ defaultNoticeableFuture.addFutureListener(postFabricWorkerFinishFutureListener)[ FD ]
Line_9 $$ PostFabricWorkerFinishFutureListener postFabricWorkerFinishFutureListener = nettyFabricWorkerExecutionChannelHandler.new PostFabricWorkerFinishFutureListener(_embeddedChannel, createNettyFabricWorkerConfig(), new LoadedPaths(inputPaths, null, null))-->Line_16 $$ defaultNoticeableFuture.addFutureListener(postFabricWorkerFinishFutureListener)[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_14 $$ NettyFabricWorkerStub<Serializable> nettyFabricWorkerStub = installNettyFabricWorkerStub()[ CD ]
Line_6 $$ Map<Path, Path> inputPaths = new HashMap()-->Line_41 $$ inputPaths.put(inputPath2, inputPath2)[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_49 $$ Assert.assertTrue(Files.notExists(inputPath2))[ CD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_5 $$ Path inputPath2 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath2"))[ CD ]
Line_27 $$ noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()-->Line_46 $$ noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()[ FD ]
Line_14 $$ NettyFabricWorkerStub<Serializable> nettyFabricWorkerStub = installNettyFabricWorkerStub()-->Line_26 $$ nettyFabricWorkerStub = installNettyFabricWorkerStub()[ FD ]
Line_26 $$ nettyFabricWorkerStub = installNettyFabricWorkerStub()-->Line_27 $$ noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()[ FD ]
Line_42 $$ postFabricWorkerFinishFutureListener = nettyFabricWorkerExecutionChannelHandler.new PostFabricWorkerFinishFutureListener(_embeddedChannel, createNettyFabricWorkerConfig(), new LoadedPaths(inputPaths, null, null))-->Line_47 $$ defaultNoticeableFuture.addFutureListener(postFabricWorkerFinishFutureListener)[ FD ]
Line_26 $$ nettyFabricWorkerStub = installNettyFabricWorkerStub()-->Line_46 $$ noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_3 $$ NettyFabricWorkerExecutionChannelHandler nettyFabricWorkerExecutionChannelHandler = new NettyFabricWorkerExecutionChannelHandler(new MockRepository<Channel>(), new LocalFabricAgent(new EmbeddedProcessExecutor()), Long.MAX_VALUE)[ CD ]
Line_6 $$ Map<Path, Path> inputPaths = new HashMap()-->Line_39 $$ inputPaths = new HashMap()[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_7 $$ inputPaths.put(inputPath1, inputPath1)[ CD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_40 $$ inputPaths.put(inputPath1, inputPath1)[ CD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_6 $$ Map<Path, Path> inputPaths = new HashMap()[ CD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_12 $$ defaultNoticeableFuture.setException(throwable)[ CD ]
Line_10 $$ DefaultNoticeableFuture<Serializable> defaultNoticeableFuture = new DefaultNoticeableFuture()-->Line_44 $$ defaultNoticeableFuture.set(StringPool.BLANK)[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_10 $$ DefaultNoticeableFuture<Serializable> defaultNoticeableFuture = new DefaultNoticeableFuture()[ CD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_26 $$ nettyFabricWorkerStub = installNettyFabricWorkerStub()[ CD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_42 $$ postFabricWorkerFinishFutureListener = nettyFabricWorkerExecutionChannelHandler.new PostFabricWorkerFinishFutureListener(_embeddedChannel, createNettyFabricWorkerConfig(), new LoadedPaths(inputPaths, null, null))[ CD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_41 $$ inputPaths.put(inputPath2, inputPath2)[ CD ]
Line_14 $$ NettyFabricWorkerStub<Serializable> nettyFabricWorkerStub = installNettyFabricWorkerStub()-->Line_46 $$ noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_48 $$ Assert.assertTrue(Files.notExists(inputPath1))[ CD ]
Line_6 $$ Map<Path, Path> inputPaths = new HashMap()-->Line_7 $$ inputPaths.put(inputPath1, inputPath1)[ FD ]
Line_11 $$ Throwable throwable = new Throwable()-->Line_12 $$ defaultNoticeableFuture.setException(throwable)[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_17 $$ Assert.assertTrue(Files.notExists(inputPath1))[ CD ]
Line_6 $$ Map<Path, Path> inputPaths = new HashMap()-->Line_8 $$ inputPaths.put(inputPath2, inputPath2)[ FD ]
Line_10 $$ DefaultNoticeableFuture<Serializable> defaultNoticeableFuture = new DefaultNoticeableFuture()-->Line_47 $$ defaultNoticeableFuture.addFutureListener(postFabricWorkerFinishFutureListener)[ FD ]
Line_37 $$ inputPath1 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath1"))-->Line_48 $$ Assert.assertTrue(Files.notExists(inputPath1))[ FD ]
Line_6 $$ Map<Path, Path> inputPaths = new HashMap()-->Line_40 $$ inputPaths.put(inputPath1, inputPath1)[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_37 $$ inputPath1 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath1"))[ CD ]
Line_9 $$ PostFabricWorkerFinishFutureListener postFabricWorkerFinishFutureListener = nettyFabricWorkerExecutionChannelHandler.new PostFabricWorkerFinishFutureListener(_embeddedChannel, createNettyFabricWorkerConfig(), new LoadedPaths(inputPaths, null, null))-->Line_28 $$ postFabricWorkerFinishFutureListener.complete(null)[ FD ]
Line_15 $$ NoticeableFuture<?> noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()-->Line_21 $$ noticeableFuture.get()[ FD ]
Line_34 $$ Throwable t = ee.getCause()-->Line_35 $$ Assert.assertSame(NullPointerException.class, t.getClass())[ FD ]
Line_26 $$ nettyFabricWorkerStub = installNettyFabricWorkerStub()-->Line_45 $$ nettyFabricWorkerStub = installNettyFabricWorkerStub()[ FD ]
Line_4 $$ Path inputPath1 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath1"))-->Line_48 $$ Assert.assertTrue(Files.notExists(inputPath1))[ FD ]
Line_38 $$ inputPath2 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath2"))-->Line_41 $$ inputPaths.put(inputPath2, inputPath2)[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_39 $$ inputPaths = new HashMap()[ CD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_46 $$ noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()[ CD ]
Line_9 $$ PostFabricWorkerFinishFutureListener postFabricWorkerFinishFutureListener = nettyFabricWorkerExecutionChannelHandler.new PostFabricWorkerFinishFutureListener(_embeddedChannel, createNettyFabricWorkerConfig(), new LoadedPaths(inputPaths, null, null))-->Line_42 $$ postFabricWorkerFinishFutureListener = nettyFabricWorkerExecutionChannelHandler.new PostFabricWorkerFinishFutureListener(_embeddedChannel, createNettyFabricWorkerConfig(), new LoadedPaths(inputPaths, null, null))[ FD ]
Line_4 $$ Path inputPath1 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath1"))-->Line_40 $$ inputPaths.put(inputPath1, inputPath1)[ FD ]
Line_37 $$ inputPath1 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath1"))-->Line_40 $$ inputPaths.put(inputPath1, inputPath1)[ FD ]
Line_43 $$ defaultNoticeableFuture = new DefaultNoticeableFuture()-->Line_47 $$ defaultNoticeableFuture.addFutureListener(postFabricWorkerFinishFutureListener)[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_38 $$ inputPath2 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath2"))[ CD ]
Line_15 $$ NoticeableFuture<?> noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()-->Line_46 $$ noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()[ FD ]
Line_10 $$ DefaultNoticeableFuture<Serializable> defaultNoticeableFuture = new DefaultNoticeableFuture()-->Line_43 $$ defaultNoticeableFuture = new DefaultNoticeableFuture()[ FD ]
Line_14 $$ NettyFabricWorkerStub<Serializable> nettyFabricWorkerStub = installNettyFabricWorkerStub()-->Line_15 $$ NoticeableFuture<?> noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_19 $$ invokeRPC()[ CD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_9 $$ PostFabricWorkerFinishFutureListener postFabricWorkerFinishFutureListener = nettyFabricWorkerExecutionChannelHandler.new PostFabricWorkerFinishFutureListener(_embeddedChannel, createNettyFabricWorkerConfig(), new LoadedPaths(inputPaths, null, null))[ CD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_50 $$ invokeRPC()[ CD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_44 $$ defaultNoticeableFuture.set(StringPool.BLANK)[ CD ]
Line_5 $$ Path inputPath2 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath2"))-->Line_38 $$ inputPath2 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath2"))[ FD ]
Line_5 $$ Path inputPath2 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath2"))-->Line_8 $$ inputPaths.put(inputPath2, inputPath2)[ FD ]
Line_39 $$ inputPaths = new HashMap()-->Line_41 $$ inputPaths.put(inputPath2, inputPath2)[ FD ]
Line_45 $$ nettyFabricWorkerStub = installNettyFabricWorkerStub()-->Line_46 $$ noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_45 $$ nettyFabricWorkerStub = installNettyFabricWorkerStub()[ CD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_16 $$ defaultNoticeableFuture.addFutureListener(postFabricWorkerFinishFutureListener)[ CD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_4 $$ Path inputPath1 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath1"))[ CD ]
Line_10 $$ DefaultNoticeableFuture<Serializable> defaultNoticeableFuture = new DefaultNoticeableFuture()-->Line_16 $$ defaultNoticeableFuture.addFutureListener(postFabricWorkerFinishFutureListener)[ FD ]
Line_5 $$ Path inputPath2 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath2"))-->Line_41 $$ inputPaths.put(inputPath2, inputPath2)[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_13 $$ installNettyFabricAgentStub()[ CD ]
Line_39 $$ inputPaths = new HashMap()-->Line_40 $$ inputPaths.put(inputPath1, inputPath1)[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_11 $$ Throwable throwable = new Throwable()[ CD ]
Line_4 $$ Path inputPath1 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath1"))-->Line_37 $$ inputPath1 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath1"))[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_18 $$ Assert.assertTrue(Files.notExists(inputPath2))[ CD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_47 $$ defaultNoticeableFuture.addFutureListener(postFabricWorkerFinishFutureListener)[ CD ]
Line_15 $$ NoticeableFuture<?> noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()-->Line_31 $$ noticeableFuture.get()[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_27 $$ noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()[ CD ]
Line_5 $$ Path inputPath2 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath2"))-->Line_18 $$ Assert.assertTrue(Files.notExists(inputPath2))[ FD ]
Line_11 $$ Throwable throwable = new Throwable()-->Line_24 $$ Assert.assertEquals(throwable, ee.getCause())[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_43 $$ defaultNoticeableFuture = new DefaultNoticeableFuture()[ CD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_8 $$ inputPaths.put(inputPath2, inputPath2)[ CD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_29 $$ invokeRPC()[ CD ]
Line_46 $$ noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()-->Line_51 $$ Assert.assertEquals(StringPool.BLANK, noticeableFuture.get())[ FD ]
Line_15 $$ NoticeableFuture<?> noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()-->Line_27 $$ noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()[ FD ]
Line_14 $$ NettyFabricWorkerStub<Serializable> nettyFabricWorkerStub = installNettyFabricWorkerStub()-->Line_45 $$ nettyFabricWorkerStub = installNettyFabricWorkerStub()[ FD ]
Line_38 $$ inputPath2 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath2"))-->Line_49 $$ Assert.assertTrue(Files.notExists(inputPath2))[ FD ]
Line_10 $$ DefaultNoticeableFuture<Serializable> defaultNoticeableFuture = new DefaultNoticeableFuture()-->Line_12 $$ defaultNoticeableFuture.setException(throwable)[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_15 $$ NoticeableFuture<?> noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()[ CD ]
Line_27 $$ noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()-->Line_31 $$ noticeableFuture.get()[ FD ]
Line_14 $$ NettyFabricWorkerStub<Serializable> nettyFabricWorkerStub = installNettyFabricWorkerStub()-->Line_27 $$ noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()[ FD ]
Line_15 $$ NoticeableFuture<?> noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()-->Line_51 $$ Assert.assertEquals(StringPool.BLANK, noticeableFuture.get())[ FD ]
Line_2 $$ public void testPostFabricWorkerFinishFutureListener() throws Exception -->Line_51 $$ Assert.assertEquals(StringPool.BLANK, noticeableFuture.get())[ CD ]
Line_4 $$ Path inputPath1 = FileServerTestUtil.createEmptyFile(Paths.get("inputPath1"))-->Line_7 $$ inputPaths.put(inputPath1, inputPath1)[ FD ]
