Line_28 $$ int numberOfIdsLeft = ids.length-->Line_43 $$ numberOfIdsLeft = numberOfIdsLeft - batchSize[ FD ]
Line_33 $$ maxBatchSize = session.getFactory().getDialect().getDefaultBatchLoadSizingStrategy().determineOptimalBatchLoadSize(persister.getIdentifierType().getColumnSpan(session.getFactory()), numberOfIdsLeft)-->Line_37 $$ int batchSize = Math.min(numberOfIdsLeft, maxBatchSize)[ FD ]
Line_36 $$ while (numberOfIdsLeft > 0) -->Line_40 $$ System.arraycopy(ids, idPosition, idsInBatch, 0, batchSize)[ CD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_4 $$ if (sessionCheckingEnabled) [ CD ]
Line_4 $$ if (sessionCheckingEnabled) -->Line_6 $$ final List<K> nonManagedIds = new ArrayList<K>()[ CD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_40 $$ System.arraycopy(ids, idPosition, idsInBatch, 0, batchSize)[ FD ]
Line_8 $$ final EntityKey entityKey = new EntityKey(id, persister)-->Line_9 $$ final T managedEntity = (T) session.getPersistenceContext().getEntity(entityKey)[ FD ]
Line_28 $$ int numberOfIdsLeft = ids.length-->Line_33 $$ maxBatchSize = session.getFactory().getDialect().getDefaultBatchLoadSizingStrategy().determineOptimalBatchLoadSize(persister.getIdentifierType().getColumnSpan(session.getFactory()), numberOfIdsLeft)[ FD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_25 $$ if (lockOptions == null) [ FD ]
Line_6 $$ final List<K> nonManagedIds = new ArrayList<K>()-->Line_18 $$ if (nonManagedIds.isEmpty()) [ FD ]
Line_9 $$ final T managedEntity = (T) session.getPersistenceContext().getEntity(entityKey)-->Line_12 $$ result.add(managedEntity)[ FD ]
Line_6 $$ final List<K> nonManagedIds = new ArrayList<K>()-->Line_21 $$ ids = nonManagedIds.toArray((K[]) Array.newInstance(ids.getClass().getComponentType(), nonManagedIds.size()))[ FD ]
Line_29 $$ final int maxBatchSize-->Line_37 $$ int batchSize = Math.min(numberOfIdsLeft, maxBatchSize)[ FD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_26 $$ lockOptions = new LockOptions(LockMode.NONE)[ FD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_30 $$ if (explicitBatchSize != null && explicitBatchSize > 0) [ CD ]
Line_31 $$ maxBatchSize = explicitBatchSize-->Line_33 $$ maxBatchSize = session.getFactory().getDialect().getDefaultBatchLoadSizingStrategy().determineOptimalBatchLoadSize(persister.getIdentifierType().getColumnSpan(session.getFactory()), numberOfIdsLeft)[ FD ]
Line_36 $$ while (numberOfIdsLeft > 0) -->Line_39 $$ Serializable[] idsInBatch = new Serializable[batchSize][ CD ]
Line_28 $$ int numberOfIdsLeft = ids.length-->Line_36 $$ while (numberOfIdsLeft > 0) [ FD ]
Line_39 $$ Serializable[] idsInBatch = new Serializable[batchSize]-->Line_40 $$ System.arraycopy(ids, idPosition, idsInBatch, 0, batchSize)[ FD ]
Line_36 $$ while (numberOfIdsLeft > 0) -->Line_43 $$ numberOfIdsLeft = numberOfIdsLeft - batchSize[ CD ]
Line_36 $$ while (numberOfIdsLeft > 0) -->Line_44 $$ idPosition += batchSize[ CD ]
Line_4 $$ if (sessionCheckingEnabled) -->Line_5 $$ boolean foundAnyManagedEntities = false[ CD ]
Line_26 $$ lockOptions = new LockOptions(LockMode.NONE)-->Line_41 $$ QueryParameters qp = buildMultiLoadQueryParameters(persister, idsInBatch, lockOptions)[ FD ]
Line_37 $$ int batchSize = Math.min(numberOfIdsLeft, maxBatchSize)-->Line_44 $$ idPosition += batchSize[ FD ]
Line_4 $$ if (sessionCheckingEnabled) -->Line_17 $$ if (foundAnyManagedEntities) [ CD ]
Line_36 $$ while (numberOfIdsLeft > 0) -->Line_37 $$ int batchSize = Math.min(numberOfIdsLeft, maxBatchSize)[ CD ]
Line_18 $$ if (nonManagedIds.isEmpty()) -->Line_19 $$ return result[ CD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_3 $$ List<T> result = CollectionHelper.arrayList(ids.length)[ CD ]
Line_30 $$ if (explicitBatchSize != null && explicitBatchSize > 0) -->Line_31 $$ maxBatchSize = explicitBatchSize[ CD ]
Line_39 $$ Serializable[] idsInBatch = new Serializable[batchSize]-->Line_42 $$ result.addAll(batchingLoader.doEntityBatchFetch(session, qp, idsInBatch))[ FD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_38 $$ final DynamicEntityLoader batchingLoader = new DynamicEntityLoader(persister, batchSize, lockOptions, session.getFactory(), session.getLoadQueryInfluencers())[ FD ]
Line_17 $$ if (foundAnyManagedEntities) -->Line_18 $$ if (nonManagedIds.isEmpty()) [ CD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_35 $$ int idPosition = 0[ CD ]
Line_31 $$ maxBatchSize = explicitBatchSize-->Line_37 $$ int batchSize = Math.min(numberOfIdsLeft, maxBatchSize)[ FD ]
Line_5 $$ boolean foundAnyManagedEntities = false-->Line_11 $$ foundAnyManagedEntities = true[ FD ]
Line_37 $$ int batchSize = Math.min(numberOfIdsLeft, maxBatchSize)-->Line_40 $$ System.arraycopy(ids, idPosition, idsInBatch, 0, batchSize)[ FD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_31 $$ maxBatchSize = explicitBatchSize[ FD ]
Line_41 $$ QueryParameters qp = buildMultiLoadQueryParameters(persister, idsInBatch, lockOptions)-->Line_42 $$ result.addAll(batchingLoader.doEntityBatchFetch(session, qp, idsInBatch))[ FD ]
Line_3 $$ List<T> result = CollectionHelper.arrayList(ids.length)-->Line_42 $$ result.addAll(batchingLoader.doEntityBatchFetch(session, qp, idsInBatch))[ FD ]
Line_36 $$ while (numberOfIdsLeft > 0) -->Line_42 $$ result.addAll(batchingLoader.doEntityBatchFetch(session, qp, idsInBatch))[ CD ]
Line_35 $$ int idPosition = 0-->Line_44 $$ idPosition += batchSize[ FD ]
Line_25 $$ if (lockOptions == null) -->Line_26 $$ lockOptions = new LockOptions(LockMode.NONE)[ CD ]
Line_18 $$ if (nonManagedIds.isEmpty()) -->Line_21 $$ ids = nonManagedIds.toArray((K[]) Array.newInstance(ids.getClass().getComponentType(), nonManagedIds.size()))[ CD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_29 $$ final int maxBatchSize[ CD ]
Line_29 $$ final int maxBatchSize-->Line_31 $$ maxBatchSize = explicitBatchSize[ FD ]
Line_28 $$ int numberOfIdsLeft = ids.length-->Line_37 $$ int batchSize = Math.min(numberOfIdsLeft, maxBatchSize)[ FD ]
Line_7 $$ for (K id : ids) -->Line_14 $$ nonManagedIds.add(id)[ FD ]
Line_6 $$ final List<K> nonManagedIds = new ArrayList<K>()-->Line_14 $$ nonManagedIds.add(id)[ FD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_28 $$ int numberOfIdsLeft = ids.length[ CD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_36 $$ while (numberOfIdsLeft > 0) [ CD ]
Line_10 $$ if (managedEntity != null) -->Line_12 $$ result.add(managedEntity)[ CD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_46 $$ return result[ CD ]
Line_36 $$ while (numberOfIdsLeft > 0) -->Line_41 $$ QueryParameters qp = buildMultiLoadQueryParameters(persister, idsInBatch, lockOptions)[ CD ]
Line_30 $$ if (explicitBatchSize != null && explicitBatchSize > 0) -->Line_33 $$ maxBatchSize = session.getFactory().getDialect().getDefaultBatchLoadSizingStrategy().determineOptimalBatchLoadSize(persister.getIdentifierType().getColumnSpan(session.getFactory()), numberOfIdsLeft)[ CD ]
Line_35 $$ int idPosition = 0-->Line_40 $$ System.arraycopy(ids, idPosition, idsInBatch, 0, batchSize)[ FD ]
Line_39 $$ Serializable[] idsInBatch = new Serializable[batchSize]-->Line_41 $$ QueryParameters qp = buildMultiLoadQueryParameters(persister, idsInBatch, lockOptions)[ FD ]
Line_29 $$ final int maxBatchSize-->Line_33 $$ maxBatchSize = session.getFactory().getDialect().getDefaultBatchLoadSizingStrategy().determineOptimalBatchLoadSize(persister.getIdentifierType().getColumnSpan(session.getFactory()), numberOfIdsLeft)[ FD ]
Line_44 $$ idPosition += batchSize-->Line_40 $$ System.arraycopy(ids, idPosition, idsInBatch, 0, batchSize)[ FD ]
Line_36 $$ while (numberOfIdsLeft > 0) -->Line_38 $$ final DynamicEntityLoader batchingLoader = new DynamicEntityLoader(persister, batchSize, lockOptions, session.getFactory(), session.getLoadQueryInfluencers())[ CD ]
Line_21 $$ ids = nonManagedIds.toArray((K[]) Array.newInstance(ids.getClass().getComponentType(), nonManagedIds.size()))-->Line_40 $$ System.arraycopy(ids, idPosition, idsInBatch, 0, batchSize)[ FD ]
Line_43 $$ numberOfIdsLeft = numberOfIdsLeft - batchSize-->Line_37 $$ int batchSize = Math.min(numberOfIdsLeft, maxBatchSize)[ FD ]
Line_9 $$ final T managedEntity = (T) session.getPersistenceContext().getEntity(entityKey)-->Line_10 $$ if (managedEntity != null) [ FD ]
Line_37 $$ int batchSize = Math.min(numberOfIdsLeft, maxBatchSize)-->Line_43 $$ numberOfIdsLeft = numberOfIdsLeft - batchSize[ FD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_25 $$ if (lockOptions == null) [ CD ]
Line_43 $$ numberOfIdsLeft = numberOfIdsLeft - batchSize-->Line_36 $$ while (numberOfIdsLeft > 0) [ FD ]
Line_10 $$ if (managedEntity != null) -->Line_11 $$ foundAnyManagedEntities = true[ CD ]
Line_38 $$ final DynamicEntityLoader batchingLoader = new DynamicEntityLoader(persister, batchSize, lockOptions, session.getFactory(), session.getLoadQueryInfluencers())-->Line_42 $$ result.addAll(batchingLoader.doEntityBatchFetch(session, qp, idsInBatch))[ FD ]
Line_3 $$ List<T> result = CollectionHelper.arrayList(ids.length)-->Line_12 $$ result.add(managedEntity)[ FD ]
Line_10 $$ if (managedEntity != null) -->Line_14 $$ nonManagedIds.add(id)[ CD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_41 $$ QueryParameters qp = buildMultiLoadQueryParameters(persister, idsInBatch, lockOptions)[ FD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_33 $$ maxBatchSize = session.getFactory().getDialect().getDefaultBatchLoadSizingStrategy().determineOptimalBatchLoadSize(persister.getIdentifierType().getColumnSpan(session.getFactory()), numberOfIdsLeft)[ FD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_9 $$ final T managedEntity = (T) session.getPersistenceContext().getEntity(entityKey)[ FD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_21 $$ ids = nonManagedIds.toArray((K[]) Array.newInstance(ids.getClass().getComponentType(), nonManagedIds.size()))[ FD ]
Line_2 $$ public <T, K extends Serializable> List<T> multiLoad(OuterJoinLoadable persister, K[] ids, LockOptions lockOptions, Integer explicitBatchSize, boolean sessionCheckingEnabled, SessionImplementor session) -->Line_42 $$ result.addAll(batchingLoader.doEntityBatchFetch(session, qp, idsInBatch))[ FD ]
