Line_2 $$ public Object postProcessBeforeInstantiation(Class<?> beanClass, String beanName) throws BeansException -->Line_18 $$ Object proxy = createProxy(beanClass, beanName, specificInterceptors, targetSource)[ FD ]
Line_15 $$ if (targetSource != null) -->Line_20 $$ return proxy[ CD ]
Line_4 $$ if (beanName == null || !this.targetSourcedBeans.contains(beanName)) -->Line_5 $$ if (this.advisedBeans.containsKey(cacheKey)) [ CD ]
Line_2 $$ public Object postProcessBeforeInstantiation(Class<?> beanClass, String beanName) throws BeansException -->Line_8 $$ if (isInfrastructureClass(beanClass) || shouldSkip(beanClass, beanName)) [ FD ]
Line_3 $$ Object cacheKey = getCacheKey(beanClass, beanName)-->Line_9 $$ this.advisedBeans.put(cacheKey, Boolean.FALSE)[ FD ]
Line_15 $$ if (targetSource != null) -->Line_16 $$ this.targetSourcedBeans.add(beanName)[ CD ]
Line_3 $$ Object cacheKey = getCacheKey(beanClass, beanName)-->Line_19 $$ this.proxyTypes.put(cacheKey, proxy.getClass())[ FD ]
Line_15 $$ if (targetSource != null) -->Line_18 $$ Object proxy = createProxy(beanClass, beanName, specificInterceptors, targetSource)[ CD ]
Line_2 $$ public Object postProcessBeforeInstantiation(Class<?> beanClass, String beanName) throws BeansException -->Line_3 $$ Object cacheKey = getCacheKey(beanClass, beanName)[ CD ]
Line_3 $$ Object cacheKey = getCacheKey(beanClass, beanName)-->Line_5 $$ if (this.advisedBeans.containsKey(cacheKey)) [ FD ]
Line_2 $$ public Object postProcessBeforeInstantiation(Class<?> beanClass, String beanName) throws BeansException -->Line_4 $$ if (beanName == null || !this.targetSourcedBeans.contains(beanName)) [ CD ]
Line_5 $$ if (this.advisedBeans.containsKey(cacheKey)) -->Line_6 $$ return null[ CD ]
Line_2 $$ public Object postProcessBeforeInstantiation(Class<?> beanClass, String beanName) throws BeansException -->Line_13 $$ if (beanName != null) [ CD ]
Line_14 $$ TargetSource targetSource = getCustomTargetSource(beanClass, beanName)-->Line_18 $$ Object proxy = createProxy(beanClass, beanName, specificInterceptors, targetSource)[ FD ]
Line_14 $$ TargetSource targetSource = getCustomTargetSource(beanClass, beanName)-->Line_15 $$ if (targetSource != null) [ FD ]
Line_15 $$ if (targetSource != null) -->Line_19 $$ this.proxyTypes.put(cacheKey, proxy.getClass())[ CD ]
Line_2 $$ public Object postProcessBeforeInstantiation(Class<?> beanClass, String beanName) throws BeansException -->Line_3 $$ Object cacheKey = getCacheKey(beanClass, beanName)[ FD ]
Line_2 $$ public Object postProcessBeforeInstantiation(Class<?> beanClass, String beanName) throws BeansException -->Line_16 $$ this.targetSourcedBeans.add(beanName)[ FD ]
Line_2 $$ public Object postProcessBeforeInstantiation(Class<?> beanClass, String beanName) throws BeansException -->Line_17 $$ Object[] specificInterceptors = getAdvicesAndAdvisorsForBean(beanClass, beanName, targetSource)[ FD ]
Line_14 $$ TargetSource targetSource = getCustomTargetSource(beanClass, beanName)-->Line_17 $$ Object[] specificInterceptors = getAdvicesAndAdvisorsForBean(beanClass, beanName, targetSource)[ FD ]
Line_13 $$ if (beanName != null) -->Line_15 $$ if (targetSource != null) [ CD ]
Line_2 $$ public Object postProcessBeforeInstantiation(Class<?> beanClass, String beanName) throws BeansException -->Line_23 $$ return null[ CD ]
Line_4 $$ if (beanName == null || !this.targetSourcedBeans.contains(beanName)) -->Line_8 $$ if (isInfrastructureClass(beanClass) || shouldSkip(beanClass, beanName)) [ CD ]
Line_13 $$ if (beanName != null) -->Line_14 $$ TargetSource targetSource = getCustomTargetSource(beanClass, beanName)[ CD ]
Line_15 $$ if (targetSource != null) -->Line_17 $$ Object[] specificInterceptors = getAdvicesAndAdvisorsForBean(beanClass, beanName, targetSource)[ CD ]
Line_8 $$ if (isInfrastructureClass(beanClass) || shouldSkip(beanClass, beanName)) -->Line_10 $$ return null[ CD ]
Line_2 $$ public Object postProcessBeforeInstantiation(Class<?> beanClass, String beanName) throws BeansException -->Line_14 $$ TargetSource targetSource = getCustomTargetSource(beanClass, beanName)[ FD ]
Line_18 $$ Object proxy = createProxy(beanClass, beanName, specificInterceptors, targetSource)-->Line_19 $$ this.proxyTypes.put(cacheKey, proxy.getClass())[ FD ]
Line_2 $$ public Object postProcessBeforeInstantiation(Class<?> beanClass, String beanName) throws BeansException -->Line_4 $$ if (beanName == null || !this.targetSourcedBeans.contains(beanName)) [ FD ]
Line_2 $$ public Object postProcessBeforeInstantiation(Class<?> beanClass, String beanName) throws BeansException -->Line_13 $$ if (beanName != null) [ FD ]
Line_8 $$ if (isInfrastructureClass(beanClass) || shouldSkip(beanClass, beanName)) -->Line_9 $$ this.advisedBeans.put(cacheKey, Boolean.FALSE)[ CD ]
Line_17 $$ Object[] specificInterceptors = getAdvicesAndAdvisorsForBean(beanClass, beanName, targetSource)-->Line_18 $$ Object proxy = createProxy(beanClass, beanName, specificInterceptors, targetSource)[ FD ]
