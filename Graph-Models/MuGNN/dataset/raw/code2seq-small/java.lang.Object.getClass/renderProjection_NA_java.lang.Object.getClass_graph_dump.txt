Line_4 $$ if (ValueHandlerFactory.isCharacter(literal)) -->Line_7 $$ return handler.render(literal)[ CD ]
Line_3 $$ final ValueHandlerFactory.ValueHandler handler = ValueHandlerFactory.determineAppropriateHandler(literal.getClass())-->Line_7 $$ return handler.render(literal)[ FD ]
Line_4 $$ if (ValueHandlerFactory.isCharacter(literal)) -->Line_5 $$ return '\'' + handler.render(literal) + '\''[ CD ]
Line_3 $$ final ValueHandlerFactory.ValueHandler handler = ValueHandlerFactory.determineAppropriateHandler(literal.getClass())-->Line_5 $$ return '\'' + handler.render(literal) + '\''[ FD ]
Line_2 $$ public String renderProjection(RenderingContext renderingContext) -->Line_3 $$ final ValueHandlerFactory.ValueHandler handler = ValueHandlerFactory.determineAppropriateHandler(literal.getClass())[ CD ]
Line_2 $$ public String renderProjection(RenderingContext renderingContext) -->Line_4 $$ if (ValueHandlerFactory.isCharacter(literal)) [ CD ]
