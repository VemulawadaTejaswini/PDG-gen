Line_2 $$ public void cacheResultReturnsProperType() throws Throwable -->Line_5 $$ Method method = ReflectionUtils.findMethod(AnnotatedJCacheableService.class, "cache", String.class)[ CD ]
Line_6 $$ CacheOperationInvoker invoker = new DummyInvoker(0L)-->Line_7 $$ Object execute = interceptor.execute(invoker, service, method, new Object[] [ FD ]
Line_7 $$ Object execute = interceptor.execute(invoker, service, method, new Object[] -->Line_10 $$ assertEquals("Wrong result", 0L, execute)[ FD ]
Line_7 $$ Object execute = interceptor.execute(invoker, service, method, new Object[] -->Line_8 $$ assertNotNull("result cannot be null.", execute)[ FD ]
Line_7 $$ Object execute = interceptor.execute(invoker, service, method, new Object[] -->Line_9 $$ assertEquals("Wrong result type", Long.class, execute.getClass())[ FD ]
Line_4 $$ AnnotatedJCacheableService service = new AnnotatedJCacheableService(cacheManager.getCache("default"))-->Line_7 $$ Object execute = interceptor.execute(invoker, service, method, new Object[] [ FD ]
Line_2 $$ public void cacheResultReturnsProperType() throws Throwable -->Line_7 $$ Object execute = interceptor.execute(invoker, service, method, new Object[] [ CD ]
Line_3 $$ JCacheInterceptor interceptor = createInterceptor(createOperationSource(cacheManager, defaultCacheResolver, defaultExceptionCacheResolver, defaultKeyGenerator))-->Line_7 $$ Object execute = interceptor.execute(invoker, service, method, new Object[] [ FD ]
Line_2 $$ public void cacheResultReturnsProperType() throws Throwable -->Line_9 $$ assertEquals("Wrong result type", Long.class, execute.getClass())[ CD ]
Line_2 $$ public void cacheResultReturnsProperType() throws Throwable -->Line_8 $$ assertNotNull("result cannot be null.", execute)[ CD ]
Line_2 $$ public void cacheResultReturnsProperType() throws Throwable -->Line_10 $$ assertEquals("Wrong result", 0L, execute)[ CD ]
Line_2 $$ public void cacheResultReturnsProperType() throws Throwable -->Line_4 $$ AnnotatedJCacheableService service = new AnnotatedJCacheableService(cacheManager.getCache("default"))[ CD ]
Line_2 $$ public void cacheResultReturnsProperType() throws Throwable -->Line_3 $$ JCacheInterceptor interceptor = createInterceptor(createOperationSource(cacheManager, defaultCacheResolver, defaultExceptionCacheResolver, defaultKeyGenerator))[ CD ]
Line_5 $$ Method method = ReflectionUtils.findMethod(AnnotatedJCacheableService.class, "cache", String.class)-->Line_7 $$ Object execute = interceptor.execute(invoker, service, method, new Object[] [ FD ]
Line_2 $$ public void cacheResultReturnsProperType() throws Throwable -->Line_6 $$ CacheOperationInvoker invoker = new DummyInvoker(0L)[ CD ]
