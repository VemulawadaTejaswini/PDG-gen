Line_7 $$ final Ref<String> errorMessage = new Ref<String>()-->Line_20 $$ ((BackgroundOperatingDiffElement) target).copyTo(mySrc, errorMessage, diff, onFinish, element.getSource(), path)[ FD ]
Line_6 $$ if (target instanceof BackgroundOperatingDiffElement) -->Line_22 $$ final AccessToken token = ApplicationManager.getApplication().acquireWriteActionLock(getClass())[ CD ]
Line_4 $$ if (target != null) -->Line_5 $$ final String path = element.getParentNode().getPath()[ CD ]
Line_5 $$ final String path = element.getParentNode().getPath()-->Line_24 $$ final DiffElement<?> diffElement = target.copyTo(mySrc, path)[ FD ]
Line_7 $$ final Ref<String> errorMessage = new Ref<String>()-->Line_15 $$ reportException(errorMessage.get())[ FD ]
Line_9 $$ Runnable onFinish = new Runnable() -->Line_20 $$ ((BackgroundOperatingDiffElement) target).copyTo(mySrc, errorMessage, diff, onFinish, element.getSource(), path)[ FD ]
Line_8 $$ final Ref<DiffElement> diff = new Ref<DiffElement>()-->Line_20 $$ ((BackgroundOperatingDiffElement) target).copyTo(mySrc, errorMessage, diff, onFinish, element.getSource(), path)[ FD ]
Line_12 $$ if (!myDisposed) -->Line_14 $$ if (!errorMessage.isNull()) [ CD ]
Line_2 $$ public void performCopyFrom(final DirDiffElementImpl element) -->Line_4 $$ if (target != null) [ CD ]
Line_9 $$ Runnable onFinish = new Runnable() -->Line_12 $$ if (!myDisposed) [ CD ]
Line_6 $$ if (target instanceof BackgroundOperatingDiffElement) -->Line_7 $$ final Ref<String> errorMessage = new Ref<String>()[ CD ]
Line_3 $$ final DiffElement<?> target = element.getTarget()-->Line_4 $$ if (target != null) [ FD ]
Line_2 $$ public void performCopyFrom(final DirDiffElementImpl element) -->Line_13 $$ refreshElementAfterCopyFrom(element, diff.get())[ FD ]
Line_14 $$ if (!errorMessage.isNull()) -->Line_15 $$ reportException(errorMessage.get())[ CD ]
Line_6 $$ if (target instanceof BackgroundOperatingDiffElement) -->Line_20 $$ ((BackgroundOperatingDiffElement) target).copyTo(mySrc, errorMessage, diff, onFinish, element.getSource(), path)[ CD ]
Line_9 $$ Runnable onFinish = new Runnable() -->Line_11 $$ ApplicationManager.getApplication().assertIsDispatchThread()[ CD ]
Line_5 $$ final String path = element.getParentNode().getPath()-->Line_20 $$ ((BackgroundOperatingDiffElement) target).copyTo(mySrc, errorMessage, diff, onFinish, element.getSource(), path)[ FD ]
Line_2 $$ public void performCopyFrom(final DirDiffElementImpl element) -->Line_5 $$ final String path = element.getParentNode().getPath()[ FD ]
Line_6 $$ if (target instanceof BackgroundOperatingDiffElement) -->Line_9 $$ Runnable onFinish = new Runnable() [ CD ]
Line_2 $$ public void performCopyFrom(final DirDiffElementImpl element) -->Line_3 $$ final DiffElement<?> target = element.getTarget()[ CD ]
Line_2 $$ public void performCopyFrom(final DirDiffElementImpl element) -->Line_3 $$ final DiffElement<?> target = element.getTarget()[ FD ]
Line_3 $$ final DiffElement<?> target = element.getTarget()-->Line_6 $$ if (target instanceof BackgroundOperatingDiffElement) [ FD ]
Line_7 $$ final Ref<String> errorMessage = new Ref<String>()-->Line_14 $$ if (!errorMessage.isNull()) [ FD ]
Line_6 $$ if (target instanceof BackgroundOperatingDiffElement) -->Line_8 $$ final Ref<DiffElement> diff = new Ref<DiffElement>()[ CD ]
Line_2 $$ public void performCopyFrom(final DirDiffElementImpl element) -->Line_25 $$ refreshElementAfterCopyFrom(element, diffElement)[ FD ]
Line_2 $$ public void performCopyFrom(final DirDiffElementImpl element) -->Line_20 $$ ((BackgroundOperatingDiffElement) target).copyTo(mySrc, errorMessage, diff, onFinish, element.getSource(), path)[ FD ]
Line_3 $$ final DiffElement<?> target = element.getTarget()-->Line_24 $$ final DiffElement<?> diffElement = target.copyTo(mySrc, path)[ FD ]
Line_8 $$ final Ref<DiffElement> diff = new Ref<DiffElement>()-->Line_13 $$ refreshElementAfterCopyFrom(element, diff.get())[ FD ]
Line_12 $$ if (!myDisposed) -->Line_13 $$ refreshElementAfterCopyFrom(element, diff.get())[ CD ]
Line_4 $$ if (target != null) -->Line_6 $$ if (target instanceof BackgroundOperatingDiffElement) [ CD ]
