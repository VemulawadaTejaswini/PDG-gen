Line_4 $$ Class<?> clazz = getClass()-->Line_5 $$ URL url = clazz.getResource("dependencies")[ FD ]
Line_2 $$ public void testPortalCss() throws Exception -->Line_5 $$ URL url = clazz.getResource("dependencies")[ CD ]
Line_7 $$ for (File file : folder.listFiles()) -->Line_8 $$ String filePath = file.getPath()[ FD ]
Line_2 $$ public void testPortalCss() throws Exception -->Line_6 $$ File folder = new File(url.toURI())[ CD ]
Line_8 $$ String filePath = file.getPath()-->Line_12 $$ Assert.assertEquals(formatCss(read(getRtlCustomFileName(filePath))), formatCss(rtlCssConverter.process(read(filePath))))[ FD ]
Line_2 $$ public void testPortalCss() throws Exception -->Line_4 $$ Class<?> clazz = getClass()[ CD ]
Line_8 $$ String filePath = file.getPath()-->Line_9 $$ if (filePath.contains("_rtl") || !filePath.endsWith(".css")) [ FD ]
Line_3 $$ RTLCSSConverter rtlCssConverter = new RTLCSSConverter(false)-->Line_12 $$ Assert.assertEquals(formatCss(read(getRtlCustomFileName(filePath))), formatCss(rtlCssConverter.process(read(filePath))))[ FD ]
Line_5 $$ URL url = clazz.getResource("dependencies")-->Line_6 $$ File folder = new File(url.toURI())[ FD ]
Line_6 $$ File folder = new File(url.toURI())-->Line_7 $$ for (File file : folder.listFiles()) [ FD ]
Line_2 $$ public void testPortalCss() throws Exception -->Line_3 $$ RTLCSSConverter rtlCssConverter = new RTLCSSConverter(false)[ CD ]
