Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_7 $$ line = line.trim()[ CD ]
Line_7 $$ line = line.trim()-->Line_8 $$ if (line.isEmpty() || (line.charAt(0) == CharPool.POUND)) [ FD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_16 $$ Assert.assertEquals(parts[0].trim() + " version", parts[1].trim(), BrowserSnifferImpl.parseVersion(userAgent, BrowserSnifferImpl.versionLeadings, BrowserSnifferImpl.versionSeparators))[ CD ]
Line_3 $$ Class<?> clazz = getClass()-->Line_4 $$ try (UnsyncBufferedReader unsyncBufferedReader = new UnsyncBufferedReader(new InputStreamReader(clazz.getResourceAsStream("dependencies/user_agents.csv")))) [ FD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_8 $$ if (line.isEmpty() || (line.charAt(0) == CharPool.POUND)) [ CD ]
Line_5 $$ String line = null-->Line_8 $$ if (line.isEmpty() || (line.charAt(0) == CharPool.POUND)) [ FD ]
Line_15 $$ String userAgent = parts[3].trim()-->Line_17 $$ Assert.assertEquals(parts[0].trim() + " revision", parts[2].trim(), BrowserSnifferImpl.parseVersion(userAgent, BrowserSnifferImpl.revisionLeadings, BrowserSnifferImpl.revisionSeparators))[ FD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_15 $$ String userAgent = parts[3].trim()[ CD ]
Line_5 $$ String line = null-->Line_7 $$ line = line.trim()[ FD ]
Line_5 $$ String line = null-->Line_11 $$ String[] parts = StringUtil.split(line, CharPool.COMMA)[ FD ]
Line_7 $$ line = line.trim()-->Line_11 $$ String[] parts = StringUtil.split(line, CharPool.COMMA)[ FD ]
Line_2 $$ public void testParseVersion() throws IOException -->Line_3 $$ Class<?> clazz = getClass()[ CD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_17 $$ Assert.assertEquals(parts[0].trim() + " revision", parts[2].trim(), BrowserSnifferImpl.parseVersion(userAgent, BrowserSnifferImpl.revisionLeadings, BrowserSnifferImpl.revisionSeparators))[ CD ]
Line_15 $$ String userAgent = parts[3].trim()-->Line_16 $$ Assert.assertEquals(parts[0].trim() + " version", parts[1].trim(), BrowserSnifferImpl.parseVersion(userAgent, BrowserSnifferImpl.versionLeadings, BrowserSnifferImpl.versionSeparators))[ FD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_12 $$ if (parts.length != 4) [ CD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_7 $$ line = line.trim()[ FD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_11 $$ String[] parts = StringUtil.split(line, CharPool.COMMA)[ CD ]
Line_4 $$ try (UnsyncBufferedReader unsyncBufferedReader = new UnsyncBufferedReader(new InputStreamReader(clazz.getResourceAsStream("dependencies/user_agents.csv")))) -->Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) [ FD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_8 $$ if (line.isEmpty() || (line.charAt(0) == CharPool.POUND)) [ FD ]
Line_5 $$ String line = null-->Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) [ FD ]
Line_6 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_11 $$ String[] parts = StringUtil.split(line, CharPool.COMMA)[ FD ]
