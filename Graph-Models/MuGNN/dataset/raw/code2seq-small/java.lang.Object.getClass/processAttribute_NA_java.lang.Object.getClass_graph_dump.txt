Line_23 $$ if (JaxbHbmMapType.class.isInstance(attributeJaxbMapping)) -->Line_24 $$ processMapAttribute(mappingDocument, callback, (JaxbHbmMapType) attributeJaxbMapping)[ CD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_21 $$ if (JaxbHbmAnyAssociationType.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_11 $$ if (JaxbHbmBasicAttributeType.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_29 $$ if (JaxbHbmPrimitiveArrayType.class.isInstance(attributeJaxbMapping)) -->Line_31 $$ if (JaxbHbmSetType.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_29 $$ if (JaxbHbmPrimitiveArrayType.class.isInstance(attributeJaxbMapping)) -->Line_30 $$ processPrimitiveArrayAttribute(mappingDocument, callback, (JaxbHbmPrimitiveArrayType) attributeJaxbMapping)[ CD ]
Line_11 $$ if (JaxbHbmBasicAttributeType.class.isInstance(attributeJaxbMapping)) -->Line_12 $$ processBasicAttribute(mappingDocument, callback, (JaxbHbmBasicAttributeType) attributeJaxbMapping, logicalTableName, naturalIdMutability)[ CD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_4 $$ processAttribute(mappingDocument, callback, ((JAXBElement) attributeJaxbMapping).getValue(), logicalTableName, naturalIdMutability)[ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_13 $$ if (JaxbHbmCompositeAttributeType.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_15 $$ if (JaxbHbmDynamicComponentType.class.isInstance(attributeJaxbMapping)) -->Line_16 $$ processDynamicComponentAttribute(mappingDocument, callback, (JaxbHbmDynamicComponentType) attributeJaxbMapping, logicalTableName, naturalIdMutability)[ CD ]
Line_15 $$ if (JaxbHbmDynamicComponentType.class.isInstance(attributeJaxbMapping)) -->Line_17 $$ if (JaxbHbmManyToOneType.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_17 $$ if (JaxbHbmManyToOneType.class.isInstance(attributeJaxbMapping)) -->Line_18 $$ processManyToOneAttribute(mappingDocument, callback, (JaxbHbmManyToOneType) attributeJaxbMapping, logicalTableName, naturalIdMutability)[ CD ]
Line_27 $$ if (JaxbHbmArrayType.class.isInstance(attributeJaxbMapping)) -->Line_29 $$ if (JaxbHbmPrimitiveArrayType.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_19 $$ if (JaxbHbmOneToOneType.class.isInstance(attributeJaxbMapping)) -->Line_21 $$ if (JaxbHbmAnyAssociationType.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_17 $$ if (JaxbHbmManyToOneType.class.isInstance(attributeJaxbMapping)) -->Line_19 $$ if (JaxbHbmOneToOneType.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_19 $$ if (JaxbHbmOneToOneType.class.isInstance(attributeJaxbMapping)) -->Line_20 $$ processOneToOneAttribute(mappingDocument, callback, (JaxbHbmOneToOneType) attributeJaxbMapping, logicalTableName, naturalIdMutability)[ CD ]
Line_3 $$ if (JAXBElement.class.isInstance(attributeJaxbMapping)) -->Line_4 $$ processAttribute(mappingDocument, callback, ((JAXBElement) attributeJaxbMapping).getValue(), logicalTableName, naturalIdMutability)[ CD ]
Line_9 $$ if (JaxbHbmPropertiesType.class.isInstance(attributeJaxbMapping)) -->Line_10 $$ processPropertiesGroup(mappingDocument, callback, (JaxbHbmPropertiesType) attributeJaxbMapping, logicalTableName, naturalIdMutability)[ CD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_9 $$ if (JaxbHbmPropertiesType.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_18 $$ processManyToOneAttribute(mappingDocument, callback, (JaxbHbmManyToOneType) attributeJaxbMapping, logicalTableName, naturalIdMutability)[ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_31 $$ if (JaxbHbmSetType.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_26 $$ processListAttribute(mappingDocument, callback, (JaxbHbmListType) attributeJaxbMapping)[ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_27 $$ if (JaxbHbmArrayType.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_31 $$ if (JaxbHbmSetType.class.isInstance(attributeJaxbMapping)) -->Line_32 $$ processSetAttribute(mappingDocument, callback, (JaxbHbmSetType) attributeJaxbMapping)[ CD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_17 $$ if (JaxbHbmManyToOneType.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_6 $$ callback.addAttributeSource(new CompositeIdentifierSingularAttributeSourceBasicImpl(mappingDocument, callback.getAttributeSourceContainer(), (JaxbHbmCompositeKeyBasicAttributeType) attributeJaxbMapping))[ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_36 $$ processIdBagAttribute(mappingDocument, callback, (JaxbHbmIdBagCollectionType) attributeJaxbMapping)[ FD ]
Line_35 $$ if (JaxbHbmIdBagCollectionType.class.isInstance(attributeJaxbMapping)) -->Line_36 $$ processIdBagAttribute(mappingDocument, callback, (JaxbHbmIdBagCollectionType) attributeJaxbMapping)[ CD ]
Line_25 $$ if (JaxbHbmListType.class.isInstance(attributeJaxbMapping)) -->Line_27 $$ if (JaxbHbmArrayType.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_13 $$ if (JaxbHbmCompositeAttributeType.class.isInstance(attributeJaxbMapping)) -->Line_14 $$ processEmbeddedAttribute(mappingDocument, callback, (JaxbHbmCompositeAttributeType) attributeJaxbMapping, logicalTableName, naturalIdMutability)[ CD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_34 $$ processBagAttribute(mappingDocument, callback, (JaxbHbmBagCollectionType) attributeJaxbMapping)[ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_33 $$ if (JaxbHbmBagCollectionType.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_21 $$ if (JaxbHbmAnyAssociationType.class.isInstance(attributeJaxbMapping)) -->Line_22 $$ processAnyAttribute(mappingDocument, callback, (JaxbHbmAnyAssociationType) attributeJaxbMapping, logicalTableName, naturalIdMutability)[ CD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_25 $$ if (JaxbHbmListType.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_9 $$ if (JaxbHbmPropertiesType.class.isInstance(attributeJaxbMapping)) -->Line_11 $$ if (JaxbHbmBasicAttributeType.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_24 $$ processMapAttribute(mappingDocument, callback, (JaxbHbmMapType) attributeJaxbMapping)[ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_40 $$ throw new MappingException("Encountered unexpected JAXB mapping type for attribute : " + attributeJaxbMapping.getClass().getName(), mappingDocument.getOrigin())[ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_3 $$ if (JAXBElement.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_3 $$ if (JAXBElement.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_7 $$ if (JaxbHbmCompositeKeyManyToOneType.class.isInstance(attributeJaxbMapping)) -->Line_9 $$ if (JaxbHbmPropertiesType.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_38 $$ processNestedEmbeddedElement(mappingDocument, callback, (JaxbHbmNestedCompositeElementType) attributeJaxbMapping, logicalTableName, naturalIdMutability)[ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_19 $$ if (JaxbHbmOneToOneType.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_5 $$ if (JaxbHbmCompositeKeyBasicAttributeType.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_8 $$ callback.addAttributeSource(new CompositeIdentifierSingularAttributeSourceManyToOneImpl(mappingDocument, callback.getAttributeSourceContainer(), (JaxbHbmCompositeKeyManyToOneType) attributeJaxbMapping))[ FD ]
Line_3 $$ if (JAXBElement.class.isInstance(attributeJaxbMapping)) -->Line_5 $$ if (JaxbHbmCompositeKeyBasicAttributeType.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_5 $$ if (JaxbHbmCompositeKeyBasicAttributeType.class.isInstance(attributeJaxbMapping)) -->Line_6 $$ callback.addAttributeSource(new CompositeIdentifierSingularAttributeSourceBasicImpl(mappingDocument, callback.getAttributeSourceContainer(), (JaxbHbmCompositeKeyBasicAttributeType) attributeJaxbMapping))[ CD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_10 $$ processPropertiesGroup(mappingDocument, callback, (JaxbHbmPropertiesType) attributeJaxbMapping, logicalTableName, naturalIdMutability)[ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_12 $$ processBasicAttribute(mappingDocument, callback, (JaxbHbmBasicAttributeType) attributeJaxbMapping, logicalTableName, naturalIdMutability)[ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_23 $$ if (JaxbHbmMapType.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_25 $$ if (JaxbHbmListType.class.isInstance(attributeJaxbMapping)) -->Line_26 $$ processListAttribute(mappingDocument, callback, (JaxbHbmListType) attributeJaxbMapping)[ CD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_28 $$ processArrayAttribute(mappingDocument, callback, (JaxbHbmArrayType) attributeJaxbMapping)[ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_20 $$ processOneToOneAttribute(mappingDocument, callback, (JaxbHbmOneToOneType) attributeJaxbMapping, logicalTableName, naturalIdMutability)[ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_29 $$ if (JaxbHbmPrimitiveArrayType.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_30 $$ processPrimitiveArrayAttribute(mappingDocument, callback, (JaxbHbmPrimitiveArrayType) attributeJaxbMapping)[ FD ]
Line_27 $$ if (JaxbHbmArrayType.class.isInstance(attributeJaxbMapping)) -->Line_28 $$ processArrayAttribute(mappingDocument, callback, (JaxbHbmArrayType) attributeJaxbMapping)[ CD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_16 $$ processDynamicComponentAttribute(mappingDocument, callback, (JaxbHbmDynamicComponentType) attributeJaxbMapping, logicalTableName, naturalIdMutability)[ FD ]
Line_31 $$ if (JaxbHbmSetType.class.isInstance(attributeJaxbMapping)) -->Line_33 $$ if (JaxbHbmBagCollectionType.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_14 $$ processEmbeddedAttribute(mappingDocument, callback, (JaxbHbmCompositeAttributeType) attributeJaxbMapping, logicalTableName, naturalIdMutability)[ FD ]
Line_11 $$ if (JaxbHbmBasicAttributeType.class.isInstance(attributeJaxbMapping)) -->Line_13 $$ if (JaxbHbmCompositeAttributeType.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_37 $$ if (JaxbHbmNestedCompositeElementType.class.isInstance(attributeJaxbMapping)) -->Line_38 $$ processNestedEmbeddedElement(mappingDocument, callback, (JaxbHbmNestedCompositeElementType) attributeJaxbMapping, logicalTableName, naturalIdMutability)[ CD ]
Line_7 $$ if (JaxbHbmCompositeKeyManyToOneType.class.isInstance(attributeJaxbMapping)) -->Line_8 $$ callback.addAttributeSource(new CompositeIdentifierSingularAttributeSourceManyToOneImpl(mappingDocument, callback.getAttributeSourceContainer(), (JaxbHbmCompositeKeyManyToOneType) attributeJaxbMapping))[ CD ]
Line_23 $$ if (JaxbHbmMapType.class.isInstance(attributeJaxbMapping)) -->Line_25 $$ if (JaxbHbmListType.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_35 $$ if (JaxbHbmIdBagCollectionType.class.isInstance(attributeJaxbMapping)) -->Line_37 $$ if (JaxbHbmNestedCompositeElementType.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_13 $$ if (JaxbHbmCompositeAttributeType.class.isInstance(attributeJaxbMapping)) -->Line_15 $$ if (JaxbHbmDynamicComponentType.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_33 $$ if (JaxbHbmBagCollectionType.class.isInstance(attributeJaxbMapping)) -->Line_34 $$ processBagAttribute(mappingDocument, callback, (JaxbHbmBagCollectionType) attributeJaxbMapping)[ CD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_22 $$ processAnyAttribute(mappingDocument, callback, (JaxbHbmAnyAssociationType) attributeJaxbMapping, logicalTableName, naturalIdMutability)[ FD ]
Line_21 $$ if (JaxbHbmAnyAssociationType.class.isInstance(attributeJaxbMapping)) -->Line_23 $$ if (JaxbHbmMapType.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_33 $$ if (JaxbHbmBagCollectionType.class.isInstance(attributeJaxbMapping)) -->Line_35 $$ if (JaxbHbmIdBagCollectionType.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_5 $$ if (JaxbHbmCompositeKeyBasicAttributeType.class.isInstance(attributeJaxbMapping)) -->Line_7 $$ if (JaxbHbmCompositeKeyManyToOneType.class.isInstance(attributeJaxbMapping)) [ CD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_35 $$ if (JaxbHbmIdBagCollectionType.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_37 $$ if (JaxbHbmNestedCompositeElementType.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_7 $$ if (JaxbHbmCompositeKeyManyToOneType.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_15 $$ if (JaxbHbmDynamicComponentType.class.isInstance(attributeJaxbMapping)) [ FD ]
Line_2 $$ private static void processAttribute(MappingDocument mappingDocument, Callback callback, Object attributeJaxbMapping, String logicalTableName, NaturalIdMutability naturalIdMutability) -->Line_32 $$ processSetAttribute(mappingDocument, callback, (JaxbHbmSetType) attributeJaxbMapping)[ FD ]
