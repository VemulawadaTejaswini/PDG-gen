Line_4 $$ if (value == null) -->Line_5 $$ return null[ CD ]
Line_2 $$ protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type) -->Line_7 $$ if (!type.isAssignableFrom(value.getClass())) [ CD ]
Line_7 $$ if (!type.isAssignableFrom(value.getClass())) -->Line_8 $$ if (logger.isWarnEnabled()) [ CD ]
Line_2 $$ protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type) -->Line_13 $$ return type.cast(value)[ FD ]
Line_3 $$ Object value = headers.get(name)-->Line_13 $$ return type.cast(value)[ FD ]
Line_3 $$ Object value = headers.get(name)-->Line_4 $$ if (value == null) [ FD ]
Line_7 $$ if (!type.isAssignableFrom(value.getClass())) -->Line_13 $$ return type.cast(value)[ CD ]
Line_2 $$ protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type) -->Line_3 $$ Object value = headers.get(name)[ FD ]
Line_3 $$ Object value = headers.get(name)-->Line_9 $$ logger.warn("Skipping header '" + name + "'expected type [" + type + "], but got [" + value.getClass() + "]")[ FD ]
Line_2 $$ protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type) -->Line_7 $$ if (!type.isAssignableFrom(value.getClass())) [ FD ]
Line_3 $$ Object value = headers.get(name)-->Line_7 $$ if (!type.isAssignableFrom(value.getClass())) [ FD ]
Line_7 $$ if (!type.isAssignableFrom(value.getClass())) -->Line_11 $$ return null[ CD ]
Line_8 $$ if (logger.isWarnEnabled()) -->Line_9 $$ logger.warn("Skipping header '" + name + "'expected type [" + type + "], but got [" + value.getClass() + "]")[ CD ]
Line_2 $$ protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type) -->Line_4 $$ if (value == null) [ CD ]
Line_2 $$ protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type) -->Line_3 $$ Object value = headers.get(name)[ CD ]
