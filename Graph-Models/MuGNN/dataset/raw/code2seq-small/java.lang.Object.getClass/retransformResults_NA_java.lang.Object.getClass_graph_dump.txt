Line_13 $$ if (transformer instanceof TupleSubsetResultTransformer) -->Line_14 $$ requiresRetransform = !((TupleSubsetResultTransformer) transformer).isTransformedValueATupleElement(aliasesToUse, tupleLength)[ CD ]
Line_2 $$ public List retransformResults(List transformedResults, String[] aliases, ResultTransformer transformer, boolean[] includeInTuple) -->Line_22 $$ return transformedResults[ CD ]
Line_2 $$ public List retransformResults(List transformedResults, String[] aliases, ResultTransformer transformer, boolean[] includeInTuple) -->Line_17 $$ for (int i = 0; i < transformedResults.size(); i++) [ FD ]
Line_18 $$ Object[] tuple = ACTUAL_TRANSFORMER.untransformToTuple(transformedResults.get(i), tupleSubsetLength == 1)-->Line_19 $$ transformedResults.set(i, transformer.transformTuple(tuple, aliasesToUse))[ FD ]
Line_17 $$ for (int i = 0; i < transformedResults.size(); i++) -->Line_19 $$ transformedResults.set(i, transformer.transformTuple(tuple, aliasesToUse))[ CD ]
Line_2 $$ public List retransformResults(List transformedResults, String[] aliases, ResultTransformer transformer, boolean[] includeInTuple) -->Line_6 $$ if (!this.equals(create(transformer, aliases, includeInTuple))) [ CD ]
Line_2 $$ public List retransformResults(List transformedResults, String[] aliases, ResultTransformer transformer, boolean[] includeInTuple) -->Line_11 $$ if (transformer == ACTUAL_TRANSFORMER) [ FD ]
Line_16 $$ if (requiresRetransform) -->Line_17 $$ for (int i = 0; i < transformedResults.size(); i++) [ CD ]
Line_2 $$ public List retransformResults(List transformedResults, String[] aliases, ResultTransformer transformer, boolean[] includeInTuple) -->Line_13 $$ if (transformer instanceof TupleSubsetResultTransformer) [ FD ]
Line_2 $$ public List retransformResults(List transformedResults, String[] aliases, ResultTransformer transformer, boolean[] includeInTuple) -->Line_3 $$ if (transformer == null) [ CD ]
Line_17 $$ for (int i = 0; i < transformedResults.size(); i++) -->Line_18 $$ Object[] tuple = ACTUAL_TRANSFORMER.untransformToTuple(transformedResults.get(i), tupleSubsetLength == 1)[ FD ]
Line_2 $$ public List retransformResults(List transformedResults, String[] aliases, ResultTransformer transformer, boolean[] includeInTuple) -->Line_18 $$ Object[] tuple = ACTUAL_TRANSFORMER.untransformToTuple(transformedResults.get(i), tupleSubsetLength == 1)[ FD ]
Line_9 $$ boolean requiresRetransform = true-->Line_14 $$ requiresRetransform = !((TupleSubsetResultTransformer) transformer).isTransformedValueATupleElement(aliasesToUse, tupleLength)[ FD ]
Line_17 $$ for (int i = 0; i < transformedResults.size(); i++) -->Line_19 $$ transformedResults.set(i, transformer.transformTuple(tuple, aliasesToUse))[ FD ]
Line_12 $$ requiresRetransform = false-->Line_14 $$ requiresRetransform = !((TupleSubsetResultTransformer) transformer).isTransformedValueATupleElement(aliasesToUse, tupleLength)[ FD ]
Line_2 $$ public List retransformResults(List transformedResults, String[] aliases, ResultTransformer transformer, boolean[] includeInTuple) -->Line_6 $$ if (!this.equals(create(transformer, aliases, includeInTuple))) [ FD ]
Line_9 $$ boolean requiresRetransform = true-->Line_12 $$ requiresRetransform = false[ FD ]
Line_2 $$ public List retransformResults(List transformedResults, String[] aliases, ResultTransformer transformer, boolean[] includeInTuple) -->Line_9 $$ boolean requiresRetransform = true[ CD ]
Line_11 $$ if (transformer == ACTUAL_TRANSFORMER) -->Line_13 $$ if (transformer instanceof TupleSubsetResultTransformer) [ CD ]
Line_11 $$ if (transformer == ACTUAL_TRANSFORMER) -->Line_12 $$ requiresRetransform = false[ CD ]
Line_2 $$ public List retransformResults(List transformedResults, String[] aliases, ResultTransformer transformer, boolean[] includeInTuple) -->Line_11 $$ if (transformer == ACTUAL_TRANSFORMER) [ CD ]
Line_2 $$ public List retransformResults(List transformedResults, String[] aliases, ResultTransformer transformer, boolean[] includeInTuple) -->Line_10 $$ String[] aliasesToUse = aliases == null ? null : index((aliases.getClass()), aliases)[ FD ]
Line_2 $$ public List retransformResults(List transformedResults, String[] aliases, ResultTransformer transformer, boolean[] includeInTuple) -->Line_10 $$ String[] aliasesToUse = aliases == null ? null : index((aliases.getClass()), aliases)[ CD ]
Line_2 $$ public List retransformResults(List transformedResults, String[] aliases, ResultTransformer transformer, boolean[] includeInTuple) -->Line_3 $$ if (transformer == null) [ FD ]
Line_10 $$ String[] aliasesToUse = aliases == null ? null : index((aliases.getClass()), aliases)-->Line_14 $$ requiresRetransform = !((TupleSubsetResultTransformer) transformer).isTransformedValueATupleElement(aliasesToUse, tupleLength)[ FD ]
Line_2 $$ public List retransformResults(List transformedResults, String[] aliases, ResultTransformer transformer, boolean[] includeInTuple) -->Line_19 $$ transformedResults.set(i, transformer.transformTuple(tuple, aliasesToUse))[ FD ]
Line_2 $$ public List retransformResults(List transformedResults, String[] aliases, ResultTransformer transformer, boolean[] includeInTuple) -->Line_16 $$ if (requiresRetransform) [ CD ]
Line_17 $$ for (int i = 0; i < transformedResults.size(); i++) -->Line_18 $$ Object[] tuple = ACTUAL_TRANSFORMER.untransformToTuple(transformedResults.get(i), tupleSubsetLength == 1)[ CD ]
Line_10 $$ String[] aliasesToUse = aliases == null ? null : index((aliases.getClass()), aliases)-->Line_19 $$ transformedResults.set(i, transformer.transformTuple(tuple, aliasesToUse))[ FD ]
