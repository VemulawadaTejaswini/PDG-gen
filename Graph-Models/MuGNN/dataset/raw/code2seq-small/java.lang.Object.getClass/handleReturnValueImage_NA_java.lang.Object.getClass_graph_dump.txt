Line_2 $$ public void handleReturnValueImage() throws Exception -->Line_3 $$ this.servletRequest.addHeader("Accept", "*/*")[ CD ]
Line_2 $$ public void handleReturnValueImage() throws Exception -->Line_4 $$ Method method = getClass().getDeclaredMethod("getImage")[ CD ]
Line_2 $$ public void handleReturnValueImage() throws Exception -->Line_7 $$ RequestResponseBodyMethodProcessor processor = new RequestResponseBodyMethodProcessor(converters)[ CD ]
Line_2 $$ public void handleReturnValueImage() throws Exception -->Line_6 $$ List<HttpMessageConverter<?>> converters = Collections.singletonList(new ResourceHttpMessageConverter())[ CD ]
Line_7 $$ RequestResponseBodyMethodProcessor processor = new RequestResponseBodyMethodProcessor(converters)-->Line_9 $$ processor.writeWithMessageConverters(resource, returnType, this.webRequest)[ FD ]
Line_2 $$ public void handleReturnValueImage() throws Exception -->Line_8 $$ ClassPathResource resource = new ClassPathResource("logo.jpg", getClass())[ CD ]
Line_2 $$ public void handleReturnValueImage() throws Exception -->Line_9 $$ processor.writeWithMessageConverters(resource, returnType, this.webRequest)[ CD ]
Line_8 $$ ClassPathResource resource = new ClassPathResource("logo.jpg", getClass())-->Line_9 $$ processor.writeWithMessageConverters(resource, returnType, this.webRequest)[ FD ]
Line_5 $$ MethodParameter returnType = new MethodParameter(method, -1)-->Line_9 $$ processor.writeWithMessageConverters(resource, returnType, this.webRequest)[ FD ]
Line_2 $$ public void handleReturnValueImage() throws Exception -->Line_10 $$ assertEquals("image/jpeg", this.servletResponse.getHeader("Content-Type"))[ CD ]
Line_2 $$ public void handleReturnValueImage() throws Exception -->Line_5 $$ MethodParameter returnType = new MethodParameter(method, -1)[ CD ]
