Line_2 $$ public void testStaticPrototypeScriptUsingJsr223() throws Exception -->Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovyContextWithJsr223.xml", getClass())[ CD ]
Line_4 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_9 $$ assertSame(messenger.getClass(), messenger2.getClass())[ FD ]
Line_2 $$ public void testStaticPrototypeScriptUsingJsr223() throws Exception -->Line_5 $$ ConfigurableMessenger messenger2 = (ConfigurableMessenger) ctx.getBean("messengerPrototype")[ CD ]
Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovyContextWithJsr223.xml", getClass())-->Line_5 $$ ConfigurableMessenger messenger2 = (ConfigurableMessenger) ctx.getBean("messengerPrototype")[ FD ]
Line_5 $$ ConfigurableMessenger messenger2 = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_8 $$ assertNotSame(messenger, messenger2)[ FD ]
Line_2 $$ public void testStaticPrototypeScriptUsingJsr223() throws Exception -->Line_9 $$ assertSame(messenger.getClass(), messenger2.getClass())[ CD ]
Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovyContextWithJsr223.xml", getClass())-->Line_4 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerPrototype")[ FD ]
Line_2 $$ public void testStaticPrototypeScriptUsingJsr223() throws Exception -->Line_13 $$ messenger2.setMessage("Byebye World!")[ CD ]
Line_2 $$ public void testStaticPrototypeScriptUsingJsr223() throws Exception -->Line_15 $$ assertEquals("Byebye World!", messenger2.getMessage())[ CD ]
Line_4 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_10 $$ assertEquals("Hello World!", messenger.getMessage())[ FD ]
Line_2 $$ public void testStaticPrototypeScriptUsingJsr223() throws Exception -->Line_11 $$ assertEquals("Hello World!", messenger2.getMessage())[ CD ]
Line_4 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_6 $$ assertFalse("Shouldn't get proxy when refresh is disabled", AopUtils.isAopProxy(messenger))[ FD ]
Line_4 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_14 $$ assertEquals("Bye World!", messenger.getMessage())[ FD ]
Line_5 $$ ConfigurableMessenger messenger2 = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_15 $$ assertEquals("Byebye World!", messenger2.getMessage())[ FD ]
Line_4 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_12 $$ messenger.setMessage("Bye World!")[ FD ]
Line_2 $$ public void testStaticPrototypeScriptUsingJsr223() throws Exception -->Line_6 $$ assertFalse("Shouldn't get proxy when refresh is disabled", AopUtils.isAopProxy(messenger))[ CD ]
Line_2 $$ public void testStaticPrototypeScriptUsingJsr223() throws Exception -->Line_7 $$ assertFalse("Scripted object should not be instance of Refreshable", messenger instanceof Refreshable)[ CD ]
Line_2 $$ public void testStaticPrototypeScriptUsingJsr223() throws Exception -->Line_8 $$ assertNotSame(messenger, messenger2)[ CD ]
Line_5 $$ ConfigurableMessenger messenger2 = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_9 $$ assertSame(messenger.getClass(), messenger2.getClass())[ FD ]
Line_5 $$ ConfigurableMessenger messenger2 = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_13 $$ messenger2.setMessage("Byebye World!")[ FD ]
Line_5 $$ ConfigurableMessenger messenger2 = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_11 $$ assertEquals("Hello World!", messenger2.getMessage())[ FD ]
Line_2 $$ public void testStaticPrototypeScriptUsingJsr223() throws Exception -->Line_14 $$ assertEquals("Bye World!", messenger.getMessage())[ CD ]
Line_2 $$ public void testStaticPrototypeScriptUsingJsr223() throws Exception -->Line_4 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerPrototype")[ CD ]
Line_2 $$ public void testStaticPrototypeScriptUsingJsr223() throws Exception -->Line_10 $$ assertEquals("Hello World!", messenger.getMessage())[ CD ]
Line_4 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerPrototype")-->Line_8 $$ assertNotSame(messenger, messenger2)[ FD ]
Line_2 $$ public void testStaticPrototypeScriptUsingJsr223() throws Exception -->Line_12 $$ messenger.setMessage("Bye World!")[ CD ]
