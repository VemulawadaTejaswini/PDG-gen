Line_2 $$ public List<PendingClusterTask> pendingTasks() -->Line_3 $$ PrioritizedEsThreadPoolExecutor.Pending[] pendings = updateTasksExecutor.getPending()[ CD ]
Line_6 $$ final String source-->Line_17 $$ source = "unknown [" + task.getClass() + "]"[ FD ]
Line_9 $$ if (task == null) -->Line_11 $$ if (task instanceof SourcePrioritizedRunnable) [ CD ]
Line_11 $$ if (task instanceof SourcePrioritizedRunnable) -->Line_12 $$ SourcePrioritizedRunnable runnable = (SourcePrioritizedRunnable) task[ CD ]
Line_11 $$ if (task instanceof SourcePrioritizedRunnable) -->Line_14 $$ timeInQueue = runnable.getAgeInMillis()[ CD ]
Line_11 $$ if (task instanceof SourcePrioritizedRunnable) -->Line_18 $$ timeInQueue = 0[ CD ]
Line_8 $$ final Object task = pending.task-->Line_9 $$ if (task == null) [ FD ]
Line_8 $$ final Object task = pending.task-->Line_17 $$ source = "unknown [" + task.getClass() + "]"[ FD ]
Line_2 $$ public List<PendingClusterTask> pendingTasks() -->Line_4 $$ List<PendingClusterTask> pendingClusterTasks = new ArrayList(pendings.length)[ CD ]
Line_8 $$ final Object task = pending.task-->Line_11 $$ if (task instanceof SourcePrioritizedRunnable) [ FD ]
Line_4 $$ List<PendingClusterTask> pendingClusterTasks = new ArrayList(pendings.length)-->Line_20 $$ pendingClusterTasks.add(new PendingClusterTask(pending.insertionOrder, pending.priority, new Text(source), timeInQueue, pending.executing))[ FD ]
Line_11 $$ if (task instanceof SourcePrioritizedRunnable) -->Line_13 $$ source = runnable.source()[ CD ]
Line_7 $$ final long timeInQueue-->Line_14 $$ timeInQueue = runnable.getAgeInMillis()[ FD ]
Line_11 $$ if (task instanceof SourcePrioritizedRunnable) -->Line_17 $$ source = "unknown [" + task.getClass() + "]"[ CD ]
Line_12 $$ SourcePrioritizedRunnable runnable = (SourcePrioritizedRunnable) task-->Line_14 $$ timeInQueue = runnable.getAgeInMillis()[ FD ]
Line_2 $$ public List<PendingClusterTask> pendingTasks() -->Line_22 $$ return pendingClusterTasks[ CD ]
Line_6 $$ final String source-->Line_13 $$ source = runnable.source()[ FD ]
Line_7 $$ final long timeInQueue-->Line_18 $$ timeInQueue = 0[ FD ]
Line_14 $$ timeInQueue = runnable.getAgeInMillis()-->Line_18 $$ timeInQueue = 0[ FD ]
Line_13 $$ source = runnable.source()-->Line_17 $$ source = "unknown [" + task.getClass() + "]"[ FD ]
Line_8 $$ final Object task = pending.task-->Line_16 $$ assert false : "expected SourcePrioritizedRunnable got " + task.getClass()[ FD ]
Line_12 $$ SourcePrioritizedRunnable runnable = (SourcePrioritizedRunnable) task-->Line_13 $$ source = runnable.source()[ FD ]
