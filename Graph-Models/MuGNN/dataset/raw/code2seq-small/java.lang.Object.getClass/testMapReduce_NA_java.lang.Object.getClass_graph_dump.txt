Line_2 $$ public void testMapReduce() throws Exception -->Line_5 $$ app.waitForState(job, JobState.SUCCEEDED)[ CD ]
Line_4 $$ Job job = app.submit(new Configuration())-->Line_7 $$ Assert.assertEquals(System.getProperty("user.name"), job.getUserName())[ FD ]
Line_3 $$ MRApp app = new MRApp(2, 2, true, this.getClass().getName(), true)-->Line_4 $$ Job job = app.submit(new Configuration())[ FD ]
Line_4 $$ Job job = app.submit(new Configuration())-->Line_5 $$ app.waitForState(job, JobState.SUCCEEDED)[ FD ]
Line_2 $$ public void testMapReduce() throws Exception -->Line_4 $$ Job job = app.submit(new Configuration())[ CD ]
Line_2 $$ public void testMapReduce() throws Exception -->Line_7 $$ Assert.assertEquals(System.getProperty("user.name"), job.getUserName())[ CD ]
Line_3 $$ MRApp app = new MRApp(2, 2, true, this.getClass().getName(), true)-->Line_6 $$ app.verifyCompleted()[ FD ]
Line_2 $$ public void testMapReduce() throws Exception -->Line_3 $$ MRApp app = new MRApp(2, 2, true, this.getClass().getName(), true)[ CD ]
Line_2 $$ public void testMapReduce() throws Exception -->Line_6 $$ app.verifyCompleted()[ CD ]
Line_3 $$ MRApp app = new MRApp(2, 2, true, this.getClass().getName(), true)-->Line_5 $$ app.waitForState(job, JobState.SUCCEEDED)[ FD ]
