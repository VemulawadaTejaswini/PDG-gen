Line_2 $$ public void SPR9495() throws Exception -->Line_3 $$ SpelParserConfiguration configuration = new SpelParserConfiguration(false, false)[ CD ]
Line_2 $$ public void SPR9495() throws Exception -->Line_11 $$ assertEquals(ABC.A, Array.get(result, 0))[ CD ]
Line_5 $$ StandardEvaluationContext context = new StandardEvaluationContext()-->Line_7 $$ context.setVariable("enumType", ABC.class)[ FD ]
Line_6 $$ Expression spel = parser.parseExpression("#enumType.values()")-->Line_8 $$ Object result = spel.getValue(context)[ FD ]
Line_19 $$ Method method = XYZ.class.getMethod("values")-->Line_20 $$ Object value = method.invoke(target, arguments)[ FD ]
Line_2 $$ public void SPR9495() throws Exception -->Line_31 $$ assertTrue(result.getClass().isArray())[ CD ]
Line_2 $$ public void SPR9495() throws Exception -->Line_8 $$ Object result = spel.getValue(context)[ CD ]
Line_16 $$ return new MethodExecutor() -->Line_20 $$ Object value = method.invoke(target, arguments)[ FD ]
Line_2 $$ public void SPR9495() throws Exception -->Line_33 $$ assertEquals(XYZ.Y, Array.get(result, 1))[ CD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_34 $$ assertEquals(XYZ.Z, Array.get(result, 2))[ FD ]
Line_2 $$ public void SPR9495() throws Exception -->Line_5 $$ StandardEvaluationContext context = new StandardEvaluationContext()[ CD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_30 $$ assertNotNull(result)[ FD ]
Line_2 $$ public void SPR9495() throws Exception -->Line_9 $$ assertNotNull(result)[ CD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_9 $$ assertNotNull(result)[ FD ]
Line_2 $$ public void SPR9495() throws Exception -->Line_4 $$ ExpressionParser parser = new SpelExpressionParser(configuration)[ CD ]
Line_2 $$ public void SPR9495() throws Exception -->Line_32 $$ assertEquals(XYZ.X, Array.get(result, 0))[ CD ]
Line_2 $$ public void SPR9495() throws Exception -->Line_10 $$ assertTrue(result.getClass().isArray())[ CD ]
Line_5 $$ StandardEvaluationContext context = new StandardEvaluationContext()-->Line_29 $$ result = spel.getValue(context)[ FD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_11 $$ assertEquals(ABC.A, Array.get(result, 0))[ FD ]
Line_2 $$ public void SPR9495() throws Exception -->Line_7 $$ context.setVariable("enumType", ABC.class)[ CD ]
Line_5 $$ StandardEvaluationContext context = new StandardEvaluationContext()-->Line_14 $$ context.addMethodResolver(new MethodResolver() [ FD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_13 $$ assertEquals(ABC.C, Array.get(result, 2))[ FD ]
Line_2 $$ public void SPR9495() throws Exception -->Line_12 $$ assertEquals(ABC.B, Array.get(result, 1))[ CD ]
Line_14 $$ context.addMethodResolver(new MethodResolver() -->Line_16 $$ return new MethodExecutor() [ CD ]
Line_20 $$ Object value = method.invoke(target, arguments)-->Line_21 $$ return new TypedValue(value, new TypeDescriptor(new MethodParameter(method, -1)).narrow(value))[ FD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_33 $$ assertEquals(XYZ.Y, Array.get(result, 1))[ FD ]
Line_2 $$ public void SPR9495() throws Exception -->Line_29 $$ result = spel.getValue(context)[ CD ]
Line_2 $$ public void SPR9495() throws Exception -->Line_6 $$ Expression spel = parser.parseExpression("#enumType.values()")[ CD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_31 $$ assertTrue(result.getClass().isArray())[ FD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_10 $$ assertTrue(result.getClass().isArray())[ FD ]
Line_6 $$ Expression spel = parser.parseExpression("#enumType.values()")-->Line_29 $$ result = spel.getValue(context)[ FD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_32 $$ assertEquals(XYZ.X, Array.get(result, 0))[ FD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_12 $$ assertEquals(ABC.B, Array.get(result, 1))[ FD ]
Line_2 $$ public void SPR9495() throws Exception -->Line_34 $$ assertEquals(XYZ.Z, Array.get(result, 2))[ CD ]
Line_2 $$ public void SPR9495() throws Exception -->Line_13 $$ assertEquals(ABC.C, Array.get(result, 2))[ CD ]
Line_16 $$ return new MethodExecutor() -->Line_29 $$ result = spel.getValue(context)[ FD ]
Line_4 $$ ExpressionParser parser = new SpelExpressionParser(configuration)-->Line_6 $$ Expression spel = parser.parseExpression("#enumType.values()")[ FD ]
Line_5 $$ StandardEvaluationContext context = new StandardEvaluationContext()-->Line_8 $$ Object result = spel.getValue(context)[ FD ]
Line_14 $$ context.addMethodResolver(new MethodResolver() -->Line_29 $$ result = spel.getValue(context)[ FD ]
Line_2 $$ public void SPR9495() throws Exception -->Line_14 $$ context.addMethodResolver(new MethodResolver() [ CD ]
Line_2 $$ public void SPR9495() throws Exception -->Line_30 $$ assertNotNull(result)[ CD ]
