Line_4 $$ String reason = unwrapped.getLocalizedMessage()-->Line_5 $$ if (!StringUtil.isEmpty(reason)) [ FD ]
Line_2 $$ public static String buildErrorMessage(@NotNull Throwable e) -->Line_4 $$ String reason = unwrapped.getLocalizedMessage()[ CD ]
Line_2 $$ public static String buildErrorMessage(@NotNull Throwable e) -->Line_5 $$ if (!StringUtil.isEmpty(reason)) [ CD ]
Line_7 $$ if (unwrapped.getClass() == ExternalSystemException.class) -->Line_11 $$ unwrapped.printStackTrace(new PrintWriter(writer))[ CD ]
Line_7 $$ if (unwrapped.getClass() == ExternalSystemException.class) -->Line_12 $$ return writer.toString()[ CD ]
Line_2 $$ public static String buildErrorMessage(@NotNull Throwable e) -->Line_3 $$ Throwable unwrapped = RemoteUtil.unwrap(e)[ CD ]
Line_10 $$ StringWriter writer = new StringWriter()-->Line_12 $$ return writer.toString()[ FD ]
Line_3 $$ Throwable unwrapped = RemoteUtil.unwrap(e)-->Line_11 $$ unwrapped.printStackTrace(new PrintWriter(writer))[ FD ]
Line_3 $$ Throwable unwrapped = RemoteUtil.unwrap(e)-->Line_4 $$ String reason = unwrapped.getLocalizedMessage()[ FD ]
Line_5 $$ if (!StringUtil.isEmpty(reason)) -->Line_7 $$ if (unwrapped.getClass() == ExternalSystemException.class) [ CD ]
Line_7 $$ if (unwrapped.getClass() == ExternalSystemException.class) -->Line_8 $$ return String.format("exception during working with external system: %s", ((ExternalSystemException) unwrapped).getOriginalReason())[ CD ]
Line_3 $$ Throwable unwrapped = RemoteUtil.unwrap(e)-->Line_7 $$ if (unwrapped.getClass() == ExternalSystemException.class) [ FD ]
Line_7 $$ if (unwrapped.getClass() == ExternalSystemException.class) -->Line_10 $$ StringWriter writer = new StringWriter()[ CD ]
Line_5 $$ if (!StringUtil.isEmpty(reason)) -->Line_6 $$ return reason[ CD ]
Line_2 $$ public static String buildErrorMessage(@NotNull Throwable e) -->Line_3 $$ Throwable unwrapped = RemoteUtil.unwrap(e)[ FD ]
