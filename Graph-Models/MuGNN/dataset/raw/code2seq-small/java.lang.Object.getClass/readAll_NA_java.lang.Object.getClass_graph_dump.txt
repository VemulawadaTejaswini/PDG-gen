Line_3 $$ Class<?> cls = instance.getClass()-->Line_6 $$ for (Field field : cls.getDeclaredFields()) [ FD ]
Line_6 $$ for (Field field : cls.getDeclaredFields()) -->Line_7 $$ field = ClassSerializer.getPreparedField(field)[ FD ]
Line_6 $$ for (Field field : cls.getDeclaredFields()) -->Line_11 $$ ret.add(buildFValue(field, instance, serializer))[ FD ]
Line_2 $$ private List<Value> readAll(@NotNull String instanceName, @NotNull Object instance) -->Line_16 $$ return ret[ CD ]
Line_2 $$ private List<Value> readAll(@NotNull String instanceName, @NotNull Object instance) -->Line_3 $$ Class<?> cls = instance.getClass()[ CD ]
Line_2 $$ private List<Value> readAll(@NotNull String instanceName, @NotNull Object instance) -->Line_3 $$ Class<?> cls = instance.getClass()[ FD ]
Line_4 $$ List<Value> ret = new ArrayList<Value>()-->Line_11 $$ ret.add(buildFValue(field, instance, serializer))[ FD ]
Line_2 $$ private List<Value> readAll(@NotNull String instanceName, @NotNull Object instance) -->Line_11 $$ ret.add(buildFValue(field, instance, serializer))[ FD ]
Line_2 $$ private List<Value> readAll(@NotNull String instanceName, @NotNull Object instance) -->Line_4 $$ List<Value> ret = new ArrayList<Value>()[ CD ]
Line_6 $$ for (Field field : cls.getDeclaredFields()) -->Line_8 $$ if (field == null || field.getName().endsWith("_FORCE"))[ FD ]
Line_7 $$ field = ClassSerializer.getPreparedField(field)-->Line_11 $$ ret.add(buildFValue(field, instance, serializer))[ FD ]
Line_7 $$ field = ClassSerializer.getPreparedField(field)-->Line_8 $$ if (field == null || field.getName().endsWith("_FORCE"))[ FD ]
Line_5 $$ ClassSerializer serializer = new ClassSerializer(instanceName, instance)-->Line_11 $$ ret.add(buildFValue(field, instance, serializer))[ FD ]
Line_2 $$ private List<Value> readAll(@NotNull String instanceName, @NotNull Object instance) -->Line_5 $$ ClassSerializer serializer = new ClassSerializer(instanceName, instance)[ CD ]
