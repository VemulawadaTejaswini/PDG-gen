Line_2 $$ public void isAssignableMapKeyValueTypes() throws Exception -->Line_4 $$ assertTrue(new TypeDescriptor(getClass().getField("notGenericMap")).isAssignableTo(new TypeDescriptor(getClass().getField("mapField"))))[ CD ]
Line_2 $$ public void isAssignableMapKeyValueTypes() throws Exception -->Line_5 $$ assertTrue(new TypeDescriptor(getClass().getField("mapField")).isAssignableTo(new TypeDescriptor(getClass().getField("notGenericMap"))))[ CD ]
Line_2 $$ public void isAssignableMapKeyValueTypes() throws Exception -->Line_7 $$ assertTrue(TypeDescriptor.valueOf(Map.class).isAssignableTo(new TypeDescriptor(getClass().getField("mapField"))))[ CD ]
Line_2 $$ public void isAssignableMapKeyValueTypes() throws Exception -->Line_3 $$ assertTrue(new TypeDescriptor(getClass().getField("mapField")).isAssignableTo(new TypeDescriptor(getClass().getField("mapField"))))[ CD ]
Line_2 $$ public void isAssignableMapKeyValueTypes() throws Exception -->Line_6 $$ assertFalse(new TypeDescriptor(getClass().getField("isAssignableMapKeyValueTypes")).isAssignableTo(new TypeDescriptor(getClass().getField("mapField"))))[ CD ]
