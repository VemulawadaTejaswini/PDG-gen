Line_15 $$ if (value instanceof Float) -->Line_16 $$ return constantFloat((Float) value)[ CD ]
Line_2 $$ public static ByteCodeExpression constantNumber(Number value) -->Line_12 $$ if (value instanceof Long) [ FD ]
Line_12 $$ if (value instanceof Long) -->Line_13 $$ return constantLong((Long) value)[ CD ]
Line_2 $$ public static ByteCodeExpression constantNumber(Number value) -->Line_6 $$ if (value instanceof Short) [ FD ]
Line_2 $$ public static ByteCodeExpression constantNumber(Number value) -->Line_18 $$ if (value instanceof Double) [ CD ]
Line_2 $$ public static ByteCodeExpression constantNumber(Number value) -->Line_21 $$ throw new IllegalStateException("Unsupported number type " + value.getClass().getSimpleName())[ FD ]
Line_2 $$ public static ByteCodeExpression constantNumber(Number value) -->Line_9 $$ if (value instanceof Integer) [ FD ]
Line_2 $$ public static ByteCodeExpression constantNumber(Number value) -->Line_6 $$ if (value instanceof Short) [ CD ]
Line_9 $$ if (value instanceof Integer) -->Line_10 $$ return constantInt((Integer) value)[ CD ]
Line_18 $$ if (value instanceof Double) -->Line_19 $$ return constantDouble((Double) value)[ CD ]
Line_2 $$ public static ByteCodeExpression constantNumber(Number value) -->Line_15 $$ if (value instanceof Float) [ CD ]
Line_2 $$ public static ByteCodeExpression constantNumber(Number value) -->Line_3 $$ if (value instanceof Byte) [ FD ]
Line_2 $$ public static ByteCodeExpression constantNumber(Number value) -->Line_18 $$ if (value instanceof Double) [ FD ]
Line_3 $$ if (value instanceof Byte) -->Line_4 $$ return constantInt((value).intValue()).cast(byte.class)[ CD ]
Line_2 $$ public static ByteCodeExpression constantNumber(Number value) -->Line_9 $$ if (value instanceof Integer) [ CD ]
Line_2 $$ public static ByteCodeExpression constantNumber(Number value) -->Line_12 $$ if (value instanceof Long) [ CD ]
Line_2 $$ public static ByteCodeExpression constantNumber(Number value) -->Line_3 $$ if (value instanceof Byte) [ CD ]
Line_2 $$ public static ByteCodeExpression constantNumber(Number value) -->Line_15 $$ if (value instanceof Float) [ FD ]
Line_6 $$ if (value instanceof Short) -->Line_7 $$ return constantInt((value).intValue()).cast(short.class)[ CD ]
