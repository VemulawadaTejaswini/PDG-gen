Line_5 $$ if (this.scriptClass == null || scriptSource.isModified()) -->Line_6 $$ this.wasModifiedForTypeCheck = true[ CD ]
Line_8 $$ if (Script.class.isAssignableFrom(this.scriptClass)) -->Line_11 $$ this.cachedResult = new CachedResultHolder(result)[ CD ]
Line_2 $$ public Class<?> getScriptedObjectType(ScriptSource scriptSource) throws IOException, ScriptCompilationException -->Line_7 $$ this.scriptClass = getGroovyClassLoader().parseClass(scriptSource.getScriptAsString(), scriptSource.suggestedClassName())[ FD ]
Line_8 $$ if (Script.class.isAssignableFrom(this.scriptClass)) -->Line_9 $$ Object result = executeScript(scriptSource, this.scriptClass)[ CD ]
Line_5 $$ if (this.scriptClass == null || scriptSource.isModified()) -->Line_7 $$ this.scriptClass = getGroovyClassLoader().parseClass(scriptSource.getScriptAsString(), scriptSource.suggestedClassName())[ CD ]
Line_2 $$ public Class<?> getScriptedObjectType(ScriptSource scriptSource) throws IOException, ScriptCompilationException -->Line_5 $$ if (this.scriptClass == null || scriptSource.isModified()) [ FD ]
Line_9 $$ Object result = executeScript(scriptSource, this.scriptClass)-->Line_10 $$ this.scriptResultClass = (result != null ? result.getClass() : null)[ FD ]
Line_5 $$ if (this.scriptClass == null || scriptSource.isModified()) -->Line_8 $$ if (Script.class.isAssignableFrom(this.scriptClass)) [ CD ]
Line_2 $$ public Class<?> getScriptedObjectType(ScriptSource scriptSource) throws IOException, ScriptCompilationException -->Line_9 $$ Object result = executeScript(scriptSource, this.scriptClass)[ FD ]
Line_8 $$ if (Script.class.isAssignableFrom(this.scriptClass)) -->Line_10 $$ this.scriptResultClass = (result != null ? result.getClass() : null)[ CD ]
Line_8 $$ if (Script.class.isAssignableFrom(this.scriptClass)) -->Line_13 $$ this.scriptResultClass = this.scriptClass[ CD ]
