Line_4 $$ Configuration conf = new YarnConfiguration()-->Line_17 $$ dirsHandler.init(conf)[ FD ]
Line_32 $$ boolean matched = false-->Line_33 $$ while (!matched && System.currentTimeMillis() < verifyStartTime + 5000l) [ FD ]
Line_14 $$ EventHandler<ApplicationEvent> appEventHandler = mock(EventHandler.class)-->Line_15 $$ dispatcher.register(ApplicationEventType.class, appEventHandler)[ FD ]
Line_31 $$ WantedButNotInvoked notInvokedException = null-->Line_38 $$ notInvokedException = e[ FD ]
Line_4 $$ Configuration conf = new YarnConfiguration()-->Line_10 $$ conf.set(YarnConfiguration.NM_LOG_DIRS, localLogDirsString)[ FD ]
Line_21 $$ NonAggregatingLogHandler logHandler = new NonAggregatingLogHandler(dispatcher, delService, dirsHandler)-->Line_23 $$ logHandler.start()[ FD ]
Line_2 $$ public void testLogDeletion() -->Line_7 $$ localLogDirs[0] = new File("target", this.getClass().getName() + "-localLogDir0").getAbsoluteFile()[ CD ]
Line_21 $$ NonAggregatingLogHandler logHandler = new NonAggregatingLogHandler(dispatcher, delService, dirsHandler)-->Line_25 $$ logHandler.handle(new LogHandlerContainerFinishedEvent(container11, 0))[ FD ]
Line_21 $$ NonAggregatingLogHandler logHandler = new NonAggregatingLogHandler(dispatcher, delService, dirsHandler)-->Line_26 $$ logHandler.handle(new LogHandlerAppFinishedEvent(appId1))[ FD ]
Line_2 $$ public void testLogDeletion() -->Line_5 $$ String user = "testuser"[ CD ]
Line_2 $$ public void testLogDeletion() -->Line_21 $$ NonAggregatingLogHandler logHandler = new NonAggregatingLogHandler(dispatcher, delService, dirsHandler)[ CD ]
Line_2 $$ public void testLogDeletion() -->Line_27 $$ Path[] localAppLogDirs = new Path[2][ CD ]
Line_2 $$ public void testLogDeletion() -->Line_12 $$ conf.setLong(YarnConfiguration.NM_LOG_RETAIN_SECONDS, 0l)[ CD ]
Line_21 $$ NonAggregatingLogHandler logHandler = new NonAggregatingLogHandler(dispatcher, delService, dirsHandler)-->Line_22 $$ logHandler.init(conf)[ FD ]
Line_2 $$ public void testLogDeletion() -->Line_14 $$ EventHandler<ApplicationEvent> appEventHandler = mock(EventHandler.class)[ CD ]
Line_2 $$ public void testLogDeletion() -->Line_9 $$ String localLogDirsString = localLogDirs[0].getAbsolutePath() + "," + localLogDirs[1].getAbsolutePath()[ CD ]
Line_2 $$ public void testLogDeletion() -->Line_17 $$ dirsHandler.init(conf)[ CD ]
Line_2 $$ public void testLogDeletion() -->Line_8 $$ localLogDirs[1] = new File("target", this.getClass().getName() + "-localLogDir1").getAbsoluteFile()[ CD ]
Line_2 $$ public void testLogDeletion() -->Line_19 $$ ApplicationAttemptId appAttemptId1 = BuilderUtils.newApplicationAttemptId(appId1, 1)[ CD ]
Line_2 $$ public void testLogDeletion() -->Line_10 $$ conf.set(YarnConfiguration.NM_LOG_DIRS, localLogDirsString)[ CD ]
Line_2 $$ public void testLogDeletion() -->Line_20 $$ ContainerId container11 = BuilderUtils.newContainerId(appAttemptId1, 1)[ CD ]
Line_2 $$ public void testLogDeletion() -->Line_24 $$ logHandler.handle(new LogHandlerAppStartedEvent(appId1, user, null, ContainerLogsRetentionPolicy.ALL_CONTAINERS, null))[ CD ]
Line_9 $$ String localLogDirsString = localLogDirs[0].getAbsolutePath() + "," + localLogDirs[1].getAbsolutePath()-->Line_10 $$ conf.set(YarnConfiguration.NM_LOG_DIRS, localLogDirsString)[ FD ]
Line_2 $$ public void testLogDeletion() -->Line_13 $$ DrainDispatcher dispatcher = createDispatcher(conf)[ CD ]
Line_4 $$ Configuration conf = new YarnConfiguration()-->Line_22 $$ logHandler.init(conf)[ FD ]
Line_2 $$ public void testLogDeletion() -->Line_29 $$ localAppLogDirs[1] = new Path(localLogDirs[1].getAbsolutePath(), appId1.toString())[ CD ]
Line_16 $$ LocalDirsHandlerService dirsHandler = new LocalDirsHandlerService()-->Line_17 $$ dirsHandler.init(conf)[ FD ]
Line_36 $$ matched = true-->Line_33 $$ while (!matched && System.currentTimeMillis() < verifyStartTime + 5000l) [ FD ]
Line_2 $$ public void testLogDeletion() -->Line_31 $$ WantedButNotInvoked notInvokedException = null[ CD ]
Line_32 $$ boolean matched = false-->Line_45 $$ if (!matched) [ FD ]
Line_21 $$ NonAggregatingLogHandler logHandler = new NonAggregatingLogHandler(dispatcher, delService, dirsHandler)-->Line_24 $$ logHandler.handle(new LogHandlerAppStartedEvent(appId1, user, null, ContainerLogsRetentionPolicy.ALL_CONTAINERS, null))[ FD ]
Line_18 $$ ApplicationId appId1 = BuilderUtils.newApplicationId(1234, 1)-->Line_29 $$ localAppLogDirs[1] = new Path(localLogDirs[1].getAbsolutePath(), appId1.toString())[ FD ]
Line_4 $$ Configuration conf = new YarnConfiguration()-->Line_13 $$ DrainDispatcher dispatcher = createDispatcher(conf)[ FD ]
Line_13 $$ DrainDispatcher dispatcher = createDispatcher(conf)-->Line_15 $$ dispatcher.register(ApplicationEventType.class, appEventHandler)[ FD ]
Line_2 $$ public void testLogDeletion() -->Line_30 $$ long verifyStartTime = System.currentTimeMillis()[ CD ]
Line_2 $$ public void testLogDeletion() -->Line_22 $$ logHandler.init(conf)[ CD ]
Line_2 $$ public void testLogDeletion() -->Line_33 $$ while (!matched && System.currentTimeMillis() < verifyStartTime + 5000l) [ CD ]
Line_2 $$ public void testLogDeletion() -->Line_11 $$ conf.setBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED, false)[ CD ]
Line_19 $$ ApplicationAttemptId appAttemptId1 = BuilderUtils.newApplicationAttemptId(appId1, 1)-->Line_20 $$ ContainerId container11 = BuilderUtils.newContainerId(appAttemptId1, 1)[ FD ]
Line_2 $$ public void testLogDeletion() -->Line_23 $$ logHandler.start()[ CD ]
Line_2 $$ public void testLogDeletion() -->Line_26 $$ logHandler.handle(new LogHandlerAppFinishedEvent(appId1))[ CD ]
Line_4 $$ Configuration conf = new YarnConfiguration()-->Line_12 $$ conf.setLong(YarnConfiguration.NM_LOG_RETAIN_SECONDS, 0l)[ FD ]
Line_2 $$ public void testLogDeletion() -->Line_3 $$ DeletionService delService = mock(DeletionService.class)[ CD ]
Line_2 $$ public void testLogDeletion() -->Line_6 $$ File[] localLogDirs = new File[2][ CD ]
Line_2 $$ public void testLogDeletion() -->Line_28 $$ localAppLogDirs[0] = new Path(localLogDirs[0].getAbsolutePath(), appId1.toString())[ CD ]
Line_2 $$ public void testLogDeletion() -->Line_32 $$ boolean matched = false[ CD ]
Line_3 $$ DeletionService delService = mock(DeletionService.class)-->Line_35 $$ verify(delService).delete(eq(user), (Path) eq(null), eq(localAppLogDirs[0]), eq(localAppLogDirs[1]))[ FD ]
Line_36 $$ matched = true-->Line_45 $$ if (!matched) [ FD ]
Line_18 $$ ApplicationId appId1 = BuilderUtils.newApplicationId(1234, 1)-->Line_28 $$ localAppLogDirs[0] = new Path(localLogDirs[0].getAbsolutePath(), appId1.toString())[ FD ]
Line_2 $$ public void testLogDeletion() -->Line_25 $$ logHandler.handle(new LogHandlerContainerFinishedEvent(container11, 0))[ CD ]
Line_18 $$ ApplicationId appId1 = BuilderUtils.newApplicationId(1234, 1)-->Line_19 $$ ApplicationAttemptId appAttemptId1 = BuilderUtils.newApplicationAttemptId(appId1, 1)[ FD ]
Line_2 $$ public void testLogDeletion() -->Line_18 $$ ApplicationId appId1 = BuilderUtils.newApplicationId(1234, 1)[ CD ]
Line_32 $$ boolean matched = false-->Line_36 $$ matched = true[ FD ]
Line_2 $$ public void testLogDeletion() -->Line_16 $$ LocalDirsHandlerService dirsHandler = new LocalDirsHandlerService()[ CD ]
Line_5 $$ String user = "testuser"-->Line_35 $$ verify(delService).delete(eq(user), (Path) eq(null), eq(localAppLogDirs[0]), eq(localAppLogDirs[1]))[ FD ]
Line_4 $$ Configuration conf = new YarnConfiguration()-->Line_11 $$ conf.setBoolean(YarnConfiguration.LOG_AGGREGATION_ENABLED, false)[ FD ]
Line_2 $$ public void testLogDeletion() -->Line_4 $$ Configuration conf = new YarnConfiguration()[ CD ]
Line_2 $$ public void testLogDeletion() -->Line_45 $$ if (!matched) [ CD ]
Line_2 $$ public void testLogDeletion() -->Line_15 $$ dispatcher.register(ApplicationEventType.class, appEventHandler)[ CD ]
