Line_2 $$ public void testRefreshableFromTagProxyTargetClass() throws Exception -->Line_6 $$ Messenger messenger = (Messenger) ctx.getBean("refreshableMessenger")[ CD ]
Line_2 $$ public void testRefreshableFromTagProxyTargetClass() throws Exception -->Line_11 $$ assertNotNull(AnnotationUtils.findAnnotation(messenger.getClass(), Component.class))[ CD ]
Line_2 $$ public void testRefreshableFromTagProxyTargetClass() throws Exception -->Line_7 $$ assertTrue(AopUtils.isAopProxy(messenger))[ CD ]
Line_4 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-with-xsd-proxy-target-class.xml", getClass())-->Line_6 $$ Messenger messenger = (Messenger) ctx.getBean("refreshableMessenger")[ FD ]
Line_2 $$ public void testRefreshableFromTagProxyTargetClass() throws Exception -->Line_8 $$ assertTrue(messenger instanceof Refreshable)[ CD ]
Line_6 $$ Messenger messenger = (Messenger) ctx.getBean("refreshableMessenger")-->Line_9 $$ assertEquals("Hello World!", messenger.getMessage())[ FD ]
Line_2 $$ public void testRefreshableFromTagProxyTargetClass() throws Exception -->Line_10 $$ assertTrue(ctx.getBeansOfType(ConcreteMessenger.class).values().contains(messenger))[ CD ]
Line_4 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-with-xsd-proxy-target-class.xml", getClass())-->Line_10 $$ assertTrue(ctx.getBeansOfType(ConcreteMessenger.class).values().contains(messenger))[ FD ]
Line_4 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-with-xsd-proxy-target-class.xml", getClass())-->Line_5 $$ assertTrue(Arrays.asList(ctx.getBeanNamesForType(Messenger.class)).contains("refreshableMessenger"))[ FD ]
Line_2 $$ public void testRefreshableFromTagProxyTargetClass() throws Exception -->Line_4 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-with-xsd-proxy-target-class.xml", getClass())[ CD ]
Line_2 $$ public void testRefreshableFromTagProxyTargetClass() throws Exception -->Line_5 $$ assertTrue(Arrays.asList(ctx.getBeanNamesForType(Messenger.class)).contains("refreshableMessenger"))[ CD ]
Line_6 $$ Messenger messenger = (Messenger) ctx.getBean("refreshableMessenger")-->Line_11 $$ assertNotNull(AnnotationUtils.findAnnotation(messenger.getClass(), Component.class))[ FD ]
Line_6 $$ Messenger messenger = (Messenger) ctx.getBean("refreshableMessenger")-->Line_7 $$ assertTrue(AopUtils.isAopProxy(messenger))[ FD ]
Line_6 $$ Messenger messenger = (Messenger) ctx.getBean("refreshableMessenger")-->Line_10 $$ assertTrue(ctx.getBeansOfType(ConcreteMessenger.class).values().contains(messenger))[ FD ]
Line_2 $$ public void testRefreshableFromTagProxyTargetClass() throws Exception -->Line_9 $$ assertEquals("Hello World!", messenger.getMessage())[ CD ]
