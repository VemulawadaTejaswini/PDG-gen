Line_24 $$ if (src == dest && srcOfs < destOfs) -->Line_26 $$ for (int destEnd = destOfs + len; destEnd-- > destOfs; ) [ CD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_25 $$ srcOfs += len[ FD ]
Line_11 $$ Class<?> srcComp = srcType.getComponentType()-->Line_13 $$ if (srcComp.modifiers != destComp.modifiers || (srcComp.isPrimitive() && !srcComp.equals(destComp))) [ FD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_7 $$ Class<?> destType = dest.getClass()[ CD ]
Line_6 $$ Class<?> srcType = src.getClass()-->Line_21 $$ if ((!srcComp.isPrimitive() || srcComp.isArray()) && !srcType.equals(destType)) [ FD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_6 $$ Class<?> srcType = src.getClass()[ CD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_6 $$ Class<?> srcType = src.getClass()[ FD ]
Line_24 $$ if (src == dest && srcOfs < destOfs) -->Line_30 $$ for (int destEnd = destOfs + len; destOfs < destEnd; ) [ CD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_16 $$ int srclen = getArrayLength(src)[ FD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_30 $$ for (int destEnd = destOfs + len; destOfs < destEnd; ) [ FD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_21 $$ if ((!srcComp.isPrimitive() || srcComp.isArray()) && !srcType.equals(destType)) [ CD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_11 $$ Class<?> srcComp = srcType.getComponentType()[ CD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_17 $$ int destlen = getArrayLength(dest)[ CD ]
Line_6 $$ Class<?> srcType = src.getClass()-->Line_11 $$ Class<?> srcComp = srcType.getComponentType()[ FD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_35 $$ nativeArraycopy(src, srcOfs, dest, destOfs, len)[ FD ]
Line_24 $$ if (src == dest && srcOfs < destOfs) -->Line_25 $$ srcOfs += len[ CD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_27 $$ destArray[destEnd] = srcArray[--srcOfs][ FD ]
Line_7 $$ Class<?> destType = dest.getClass()-->Line_12 $$ Class<?> destComp = destType.getComponentType()[ FD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_8 $$ if (!srcType.isArray() || !destType.isArray()) [ CD ]
Line_21 $$ if ((!srcComp.isPrimitive() || srcComp.isArray()) && !srcType.equals(destType)) -->Line_22 $$ Object[] srcArray = (Object[]) src[ CD ]
Line_21 $$ if ((!srcComp.isPrimitive() || srcComp.isArray()) && !srcType.equals(destType)) -->Line_35 $$ nativeArraycopy(src, srcOfs, dest, destOfs, len)[ CD ]
Line_6 $$ Class<?> srcType = src.getClass()-->Line_8 $$ if (!srcType.isArray() || !destType.isArray()) [ FD ]
Line_25 $$ srcOfs += len-->Line_35 $$ nativeArraycopy(src, srcOfs, dest, destOfs, len)[ FD ]
Line_25 $$ srcOfs += len-->Line_27 $$ destArray[destEnd] = srcArray[--srcOfs][ FD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_18 $$ if (srcOfs < 0 || destOfs < 0 || len < 0 || srcOfs + len > srclen || destOfs + len > destlen) [ CD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_16 $$ int srclen = getArrayLength(src)[ CD ]
Line_26 $$ for (int destEnd = destOfs + len; destEnd-- > destOfs; ) -->Line_27 $$ destArray[destEnd] = srcArray[--srcOfs][ CD ]
Line_7 $$ Class<?> destType = dest.getClass()-->Line_8 $$ if (!srcType.isArray() || !destType.isArray()) [ FD ]
Line_7 $$ Class<?> destType = dest.getClass()-->Line_21 $$ if ((!srcComp.isPrimitive() || srcComp.isArray()) && !srcType.equals(destType)) [ FD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_13 $$ if (srcComp.modifiers != destComp.modifiers || (srcComp.isPrimitive() && !srcComp.equals(destComp))) [ CD ]
Line_21 $$ if ((!srcComp.isPrimitive() || srcComp.isArray()) && !srcType.equals(destType)) -->Line_23 $$ Object[] destArray = (Object[]) dest[ CD ]
Line_21 $$ if ((!srcComp.isPrimitive() || srcComp.isArray()) && !srcType.equals(destType)) -->Line_24 $$ if (src == dest && srcOfs < destOfs) [ CD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_12 $$ Class<?> destComp = destType.getComponentType()[ CD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_26 $$ for (int destEnd = destOfs + len; destEnd-- > destOfs; ) [ FD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_3 $$ if (src == null || dest == null) [ CD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_17 $$ int destlen = getArrayLength(dest)[ FD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_7 $$ Class<?> destType = dest.getClass()[ FD ]
Line_12 $$ Class<?> destComp = destType.getComponentType()-->Line_13 $$ if (srcComp.modifiers != destComp.modifiers || (srcComp.isPrimitive() && !srcComp.equals(destComp))) [ FD ]
Line_25 $$ srcOfs += len-->Line_31 $$ destArray[destOfs++] = srcArray[srcOfs++][ FD ]
Line_2 $$ public static void arraycopy(Object src, int srcOfs, Object dest, int destOfs, int len) -->Line_31 $$ destArray[destOfs++] = srcArray[srcOfs++][ FD ]
Line_11 $$ Class<?> srcComp = srcType.getComponentType()-->Line_21 $$ if ((!srcComp.isPrimitive() || srcComp.isArray()) && !srcType.equals(destType)) [ FD ]
Line_26 $$ for (int destEnd = destOfs + len; destEnd-- > destOfs; ) -->Line_30 $$ for (int destEnd = destOfs + len; destOfs < destEnd; ) [ FD ]
Line_30 $$ for (int destEnd = destOfs + len; destOfs < destEnd; ) -->Line_31 $$ destArray[destOfs++] = srcArray[srcOfs++][ CD ]
