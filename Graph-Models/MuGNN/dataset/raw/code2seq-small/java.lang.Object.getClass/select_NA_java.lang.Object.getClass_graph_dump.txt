Line_2 $$ public List<TextRange> select(PsiElement e, CharSequence editorText, int cursorOffset, Editor editor) -->Line_8 $$ if (ranges.size() == 1 && ranges.contains(originalRange)) [ CD ]
Line_3 $$ final TextRange originalRange = e.getTextRange()-->Line_4 $$ if (originalRange.getEndOffset() > editorText.length()) [ FD ]
Line_2 $$ public List<TextRange> select(PsiElement e, CharSequence editorText, int cursorOffset, Editor editor) -->Line_11 $$ return ranges[ CD ]
Line_7 $$ List<TextRange> ranges = expandToWholeLine(editorText, originalRange, true)-->Line_8 $$ if (ranges.size() == 1 && ranges.contains(originalRange)) [ FD ]
Line_2 $$ public List<TextRange> select(PsiElement e, CharSequence editorText, int cursorOffset, Editor editor) -->Line_7 $$ List<TextRange> ranges = expandToWholeLine(editorText, originalRange, true)[ FD ]
Line_3 $$ final TextRange originalRange = e.getTextRange()-->Line_8 $$ if (ranges.size() == 1 && ranges.contains(originalRange)) [ FD ]
Line_2 $$ public List<TextRange> select(PsiElement e, CharSequence editorText, int cursorOffset, Editor editor) -->Line_4 $$ if (originalRange.getEndOffset() > editorText.length()) [ FD ]
Line_2 $$ public List<TextRange> select(PsiElement e, CharSequence editorText, int cursorOffset, Editor editor) -->Line_9 $$ return expandToWholeLine(editorText, originalRange, false)[ FD ]
Line_2 $$ public List<TextRange> select(PsiElement e, CharSequence editorText, int cursorOffset, Editor editor) -->Line_5 $$ throw new LogEventException("Invalid element range in " + getClass(), "element=" + e + "; range=" + originalRange + "; text length=" + editorText.length() + "; editor=" + editor + "; committed=" + PsiDocumentManager.getInstance(e.getProject()).isCommitted(editor.getDocument()), new Attachment("editor_text.txt", editorText.toString()), new Attachment("psi_text.txt", e.getText()))[ FD ]
Line_2 $$ public List<TextRange> select(PsiElement e, CharSequence editorText, int cursorOffset, Editor editor) -->Line_3 $$ final TextRange originalRange = e.getTextRange()[ CD ]
Line_2 $$ public List<TextRange> select(PsiElement e, CharSequence editorText, int cursorOffset, Editor editor) -->Line_4 $$ if (originalRange.getEndOffset() > editorText.length()) [ CD ]
Line_2 $$ public List<TextRange> select(PsiElement e, CharSequence editorText, int cursorOffset, Editor editor) -->Line_7 $$ List<TextRange> ranges = expandToWholeLine(editorText, originalRange, true)[ CD ]
Line_8 $$ if (ranges.size() == 1 && ranges.contains(originalRange)) -->Line_9 $$ return expandToWholeLine(editorText, originalRange, false)[ CD ]
Line_3 $$ final TextRange originalRange = e.getTextRange()-->Line_7 $$ List<TextRange> ranges = expandToWholeLine(editorText, originalRange, true)[ FD ]
Line_2 $$ public List<TextRange> select(PsiElement e, CharSequence editorText, int cursorOffset, Editor editor) -->Line_3 $$ final TextRange originalRange = e.getTextRange()[ FD ]
Line_3 $$ final TextRange originalRange = e.getTextRange()-->Line_9 $$ return expandToWholeLine(editorText, originalRange, false)[ FD ]
