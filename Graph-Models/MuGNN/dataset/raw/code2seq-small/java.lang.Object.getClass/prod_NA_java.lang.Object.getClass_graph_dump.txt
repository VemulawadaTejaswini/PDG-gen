Line_2 $$ public <N extends Number> Expression<N> prod(N n, Expression<? extends N> expression) -->Line_6 $$ final Class resultType = BinaryArithmeticOperation.determineResultType(n.getClass(), expression.getJavaType())[ FD ]
Line_2 $$ public <N extends Number> Expression<N> prod(N n, Expression<? extends N> expression) -->Line_6 $$ final Class resultType = BinaryArithmeticOperation.determineResultType(n.getClass(), expression.getJavaType())[ CD ]
Line_2 $$ public <N extends Number> Expression<N> prod(N n, Expression<? extends N> expression) -->Line_7 $$ return (BinaryArithmeticOperation<N>) new BinaryArithmeticOperation(this, resultType, BinaryArithmeticOperation.Operation.MULTIPLY, n, expression)[ CD ]
Line_2 $$ public <N extends Number> Expression<N> prod(N n, Expression<? extends N> expression) -->Line_3 $$ if (n == null || expression == null) [ CD ]
