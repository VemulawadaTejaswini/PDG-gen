Line_2 $$ public void testRegisterObject() -->Line_5 $$ Object[] extensions = extensionPoint.getExtensions()[ CD ]
Line_2 $$ public void testRegisterObject() -->Line_3 $$ ExtensionPoint<Integer> extensionPoint = buildExtensionPoint(Integer.class)[ CD ]
Line_3 $$ ExtensionPoint<Integer> extensionPoint = buildExtensionPoint(Integer.class)-->Line_5 $$ Object[] extensions = extensionPoint.getExtensions()[ FD ]
Line_2 $$ public void testRegisterObject() -->Line_8 $$ assertEquals("Correct object", new Integer(123), extensions[0])[ CD ]
Line_3 $$ ExtensionPoint<Integer> extensionPoint = buildExtensionPoint(Integer.class)-->Line_4 $$ extensionPoint.registerExtension(new Integer(123))[ FD ]
Line_5 $$ Object[] extensions = extensionPoint.getExtensions()-->Line_7 $$ assertSame("Correct type", Integer[].class, extensions.getClass())[ FD ]
Line_2 $$ public void testRegisterObject() -->Line_6 $$ assertEquals("One extension", 1, extensions.length)[ CD ]
Line_2 $$ public void testRegisterObject() -->Line_7 $$ assertSame("Correct type", Integer[].class, extensions.getClass())[ CD ]
Line_2 $$ public void testRegisterObject() -->Line_4 $$ extensionPoint.registerExtension(new Integer(123))[ CD ]
