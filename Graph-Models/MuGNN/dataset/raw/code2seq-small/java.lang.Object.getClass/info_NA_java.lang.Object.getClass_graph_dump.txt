Line_2 $$ private static Object info(Runnable r) -->Line_5 $$ Object sync = ReflectionUtil.getField(FutureTask.class, r, null, "sync")[ CD ]
Line_2 $$ private static Object info(Runnable r) -->Line_7 $$ Object callable = ReflectionUtil.getField(o.getClass(), o, Callable.class, "callable")[ CD ]
Line_7 $$ Object callable = ReflectionUtil.getField(o.getClass(), o, Callable.class, "callable")-->Line_8 $$ if (callable == null)[ FD ]
Line_2 $$ private static Object info(Runnable r) -->Line_8 $$ if (callable == null)[ CD ]
Line_8 $$ if (callable == null)-->Line_9 $$ return null[ CD ]
Line_2 $$ private static Object info(Runnable r) -->Line_3 $$ if (!(r instanceof FutureTask))[ FD ]
Line_2 $$ private static Object info(Runnable r) -->Line_10 $$ Object task = ReflectionUtil.getField(callable.getClass(), callable, null, "task")[ CD ]
Line_3 $$ if (!(r instanceof FutureTask))-->Line_4 $$ return r[ CD ]
Line_7 $$ Object callable = ReflectionUtil.getField(o.getClass(), o, Callable.class, "callable")-->Line_10 $$ Object task = ReflectionUtil.getField(callable.getClass(), callable, null, "task")[ FD ]
Line_2 $$ private static Object info(Runnable r) -->Line_6 $$ Object o = sync == null ? r : sync[ CD ]
Line_2 $$ private static Object info(Runnable r) -->Line_11 $$ return task == null ? callable : task[ CD ]
Line_2 $$ private static Object info(Runnable r) -->Line_3 $$ if (!(r instanceof FutureTask))[ CD ]
Line_2 $$ private static Object info(Runnable r) -->Line_5 $$ Object sync = ReflectionUtil.getField(FutureTask.class, r, null, "sync")[ FD ]
Line_6 $$ Object o = sync == null ? r : sync-->Line_7 $$ Object callable = ReflectionUtil.getField(o.getClass(), o, Callable.class, "callable")[ FD ]
