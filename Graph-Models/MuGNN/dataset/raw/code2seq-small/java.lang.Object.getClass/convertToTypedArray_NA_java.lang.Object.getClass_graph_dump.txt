Line_12 $$ if (input.getClass().isArray()) -->Line_18 $$ for (int i = 0; i < arrayLength; i++) [ CD ]
Line_8 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, it.next(), componentType)-->Line_26 $$ Array.set(result, 0, value)[ FD ]
Line_4 $$ Collection<?> coll = (Collection<?>) input-->Line_7 $$ for (Iterator<?> it = coll.iterator(); it.hasNext(); i++) [ FD ]
Line_12 $$ if (input.getClass().isArray()) -->Line_13 $$ if (componentType.equals(input.getClass().getComponentType()) && !this.propertyEditorRegistry.hasCustomEditorForElement(componentType, propertyName)) [ CD ]
Line_6 $$ int i = 0-->Line_18 $$ for (int i = 0; i < arrayLength; i++) [ FD ]
Line_12 $$ if (input.getClass().isArray()) -->Line_17 $$ Object result = Array.newInstance(componentType, arrayLength)[ CD ]
Line_7 $$ for (Iterator<?> it = coll.iterator(); it.hasNext(); i++) -->Line_8 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, it.next(), componentType)[ FD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_5 $$ Object result = Array.newInstance(componentType, coll.size())[ FD ]
Line_5 $$ Object result = Array.newInstance(componentType, coll.size())-->Line_9 $$ Array.set(result, i, value)[ FD ]
Line_6 $$ int i = 0-->Line_20 $$ Array.set(result, i, value)[ FD ]
Line_4 $$ Collection<?> coll = (Collection<?>) input-->Line_5 $$ Object result = Array.newInstance(componentType, coll.size())[ FD ]
Line_6 $$ int i = 0-->Line_9 $$ Array.set(result, i, value)[ FD ]
Line_3 $$ if (input instanceof Collection) -->Line_7 $$ for (Iterator<?> it = coll.iterator(); it.hasNext(); i++) [ CD ]
Line_12 $$ if (input.getClass().isArray()) -->Line_16 $$ int arrayLength = Array.getLength(input)[ CD ]
Line_16 $$ int arrayLength = Array.getLength(input)-->Line_18 $$ for (int i = 0; i < arrayLength; i++) [ FD ]
Line_12 $$ if (input.getClass().isArray()) -->Line_24 $$ Object result = Array.newInstance(componentType, 1)[ CD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_17 $$ Object result = Array.newInstance(componentType, arrayLength)[ FD ]
Line_3 $$ if (input instanceof Collection) -->Line_4 $$ Collection<?> coll = (Collection<?>) input[ CD ]
Line_6 $$ int i = 0-->Line_8 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, it.next(), componentType)[ FD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_12 $$ if (input.getClass().isArray()) [ FD ]
Line_13 $$ if (componentType.equals(input.getClass().getComponentType()) && !this.propertyEditorRegistry.hasCustomEditorForElement(componentType, propertyName)) -->Line_14 $$ return input[ CD ]
Line_16 $$ int arrayLength = Array.getLength(input)-->Line_17 $$ Object result = Array.newInstance(componentType, arrayLength)[ FD ]
Line_19 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, Array.get(input, i), componentType)-->Line_26 $$ Array.set(result, 0, value)[ FD ]
Line_12 $$ if (input.getClass().isArray()) -->Line_22 $$ return result[ CD ]
Line_25 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, 0), null, input, componentType)-->Line_26 $$ Array.set(result, 0, value)[ FD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_19 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, Array.get(input, i), componentType)[ FD ]
Line_18 $$ for (int i = 0; i < arrayLength; i++) -->Line_19 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, Array.get(input, i), componentType)[ CD ]
Line_5 $$ Object result = Array.newInstance(componentType, coll.size())-->Line_20 $$ Array.set(result, i, value)[ FD ]
Line_19 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, Array.get(input, i), componentType)-->Line_20 $$ Array.set(result, i, value)[ FD ]
Line_3 $$ if (input instanceof Collection) -->Line_5 $$ Object result = Array.newInstance(componentType, coll.size())[ CD ]
Line_18 $$ for (int i = 0; i < arrayLength; i++) -->Line_19 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, Array.get(input, i), componentType)[ FD ]
Line_3 $$ if (input instanceof Collection) -->Line_12 $$ if (input.getClass().isArray()) [ CD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_13 $$ if (componentType.equals(input.getClass().getComponentType()) && !this.propertyEditorRegistry.hasCustomEditorForElement(componentType, propertyName)) [ FD ]
Line_7 $$ for (Iterator<?> it = coll.iterator(); it.hasNext(); i++) -->Line_9 $$ Array.set(result, i, value)[ CD ]
Line_12 $$ if (input.getClass().isArray()) -->Line_27 $$ return result[ CD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_24 $$ Object result = Array.newInstance(componentType, 1)[ FD ]
Line_18 $$ for (int i = 0; i < arrayLength; i++) -->Line_20 $$ Array.set(result, i, value)[ FD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_3 $$ if (input instanceof Collection) [ CD ]
Line_5 $$ Object result = Array.newInstance(componentType, coll.size())-->Line_26 $$ Array.set(result, 0, value)[ FD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_25 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, 0), null, input, componentType)[ FD ]
Line_7 $$ for (Iterator<?> it = coll.iterator(); it.hasNext(); i++) -->Line_8 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, it.next(), componentType)[ CD ]
Line_18 $$ for (int i = 0; i < arrayLength; i++) -->Line_20 $$ Array.set(result, i, value)[ CD ]
Line_3 $$ if (input instanceof Collection) -->Line_6 $$ int i = 0[ CD ]
Line_6 $$ int i = 0-->Line_7 $$ for (Iterator<?> it = coll.iterator(); it.hasNext(); i++) [ FD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_16 $$ int arrayLength = Array.getLength(input)[ FD ]
Line_3 $$ if (input instanceof Collection) -->Line_11 $$ return result[ CD ]
Line_6 $$ int i = 0-->Line_19 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, Array.get(input, i), componentType)[ FD ]
Line_12 $$ if (input.getClass().isArray()) -->Line_26 $$ Array.set(result, 0, value)[ CD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_3 $$ if (input instanceof Collection) [ FD ]
Line_12 $$ if (input.getClass().isArray()) -->Line_25 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, 0), null, input, componentType)[ CD ]
Line_8 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, it.next(), componentType)-->Line_9 $$ Array.set(result, i, value)[ FD ]
Line_8 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, it.next(), componentType)-->Line_20 $$ Array.set(result, i, value)[ FD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_8 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, it.next(), componentType)[ FD ]
