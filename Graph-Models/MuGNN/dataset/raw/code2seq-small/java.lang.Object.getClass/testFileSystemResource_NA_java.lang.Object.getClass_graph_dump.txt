Line_3 $$ Resource resource = new FileSystemResource(getClass().getResource("Resource.class").getFile())-->Line_5 $$ assertEquals(new FileSystemResource(getClass().getResource("Resource.class").getFile()), resource)[ FD ]
Line_2 $$ public void testFileSystemResource() throws IOException -->Line_6 $$ Resource resource2 = new FileSystemResource("core/io/Resource.class")[ CD ]
Line_2 $$ public void testFileSystemResource() throws IOException -->Line_7 $$ assertEquals(resource2, new FileSystemResource("core/../core/io/./Resource.class"))[ CD ]
Line_2 $$ public void testFileSystemResource() throws IOException -->Line_4 $$ doTestResource(resource)[ CD ]
Line_2 $$ public void testFileSystemResource() throws IOException -->Line_5 $$ assertEquals(new FileSystemResource(getClass().getResource("Resource.class").getFile()), resource)[ CD ]
Line_3 $$ Resource resource = new FileSystemResource(getClass().getResource("Resource.class").getFile())-->Line_4 $$ doTestResource(resource)[ FD ]
Line_2 $$ public void testFileSystemResource() throws IOException -->Line_3 $$ Resource resource = new FileSystemResource(getClass().getResource("Resource.class").getFile())[ CD ]
Line_6 $$ Resource resource2 = new FileSystemResource("core/io/Resource.class")-->Line_7 $$ assertEquals(resource2, new FileSystemResource("core/../core/io/./Resource.class"))[ FD ]
