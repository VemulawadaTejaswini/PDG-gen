Line_8 $$ Throwable throwable = ee.getCause()-->Line_9 $$ Assert.assertSame(TerminationProcessException.class, throwable.getClass())[ FD ]
Line_2 $$ public void testErrorExit() throws Exception -->Line_3 $$ Future<?> future = ProcessUtil.execute(ProcessUtil.CONSUMER_OUTPUT_PROCESSOR, _buildArguments(ErrorExit.class))[ CD ]
Line_8 $$ Throwable throwable = ee.getCause()-->Line_10 $$ Assert.assertEquals("Subprocess terminated with exit code " + ErrorExit.EXIT_CODE, throwable.getMessage())[ FD ]
Line_3 $$ Future<?> future = ProcessUtil.execute(ProcessUtil.CONSUMER_OUTPUT_PROCESSOR, _buildArguments(ErrorExit.class))-->Line_5 $$ future.get()[ FD ]
Line_11 $$ TerminationProcessException terminationProcessException = (TerminationProcessException) throwable-->Line_12 $$ Assert.assertEquals(ErrorExit.EXIT_CODE, terminationProcessException.getExitCode())[ FD ]
