Line_18 $$ ds = ReflectionUtils.invokeMethod(getTargetDataSourceMethod, ds)-->Line_13 $$ if (TransactionSynchronizationManager.hasResource(ds)) [ FD ]
Line_20 $$ ds = null-->Line_13 $$ if (TransactionSynchronizationManager.hasResource(ds)) [ FD ]
Line_11 $$ Object ds = ReflectionUtils.invokeMethod(getDataSourceMethod, this.connectionFactory)-->Line_17 $$ Method getTargetDataSourceMethod = ds.getClass().getMethod("getTargetDataSource")[ FD ]
Line_11 $$ Object ds = ReflectionUtils.invokeMethod(getDataSourceMethod, this.connectionFactory)-->Line_20 $$ ds = null[ FD ]
Line_3 $$ for (Session session : this.sessions) -->Line_5 $$ session.commit()[ FD ]
Line_17 $$ Method getTargetDataSourceMethod = ds.getClass().getMethod("getTargetDataSource")-->Line_18 $$ ds = ReflectionUtils.invokeMethod(getTargetDataSourceMethod, ds)[ FD ]
Line_13 $$ if (TransactionSynchronizationManager.hasResource(ds)) -->Line_14 $$ return[ CD ]
Line_20 $$ ds = null-->Line_18 $$ ds = ReflectionUtils.invokeMethod(getTargetDataSourceMethod, ds)[ FD ]
Line_10 $$ Method getDataSourceMethod = this.connectionFactory.getClass().getMethod("getDataSource")-->Line_11 $$ Object ds = ReflectionUtils.invokeMethod(getDataSourceMethod, this.connectionFactory)[ FD ]
Line_12 $$ while (ds != null) -->Line_13 $$ if (TransactionSynchronizationManager.hasResource(ds)) [ CD ]
Line_20 $$ ds = null-->Line_12 $$ while (ds != null) [ FD ]
Line_24 $$ if (logger.isDebugEnabled()) -->Line_25 $$ logger.debug("No working getDataSource method found on ConnectionFactory: " + ex2)[ CD ]
Line_11 $$ Object ds = ReflectionUtils.invokeMethod(getDataSourceMethod, this.connectionFactory)-->Line_13 $$ if (TransactionSynchronizationManager.hasResource(ds)) [ FD ]
Line_20 $$ ds = null-->Line_17 $$ Method getTargetDataSourceMethod = ds.getClass().getMethod("getTargetDataSource")[ FD ]
Line_18 $$ ds = ReflectionUtils.invokeMethod(getTargetDataSourceMethod, ds)-->Line_20 $$ ds = null[ FD ]
Line_11 $$ Object ds = ReflectionUtils.invokeMethod(getDataSourceMethod, this.connectionFactory)-->Line_12 $$ while (ds != null) [ FD ]
Line_11 $$ Object ds = ReflectionUtils.invokeMethod(getDataSourceMethod, this.connectionFactory)-->Line_18 $$ ds = ReflectionUtils.invokeMethod(getTargetDataSourceMethod, ds)[ FD ]
Line_18 $$ ds = ReflectionUtils.invokeMethod(getTargetDataSourceMethod, ds)-->Line_12 $$ while (ds != null) [ FD ]
Line_18 $$ ds = ReflectionUtils.invokeMethod(getTargetDataSourceMethod, ds)-->Line_17 $$ Method getTargetDataSourceMethod = ds.getClass().getMethod("getTargetDataSource")[ FD ]
