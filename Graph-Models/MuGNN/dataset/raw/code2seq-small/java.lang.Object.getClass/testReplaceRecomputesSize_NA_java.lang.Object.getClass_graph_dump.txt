Line_23 $$ for (int i = 0; i < numberOfEntries; i++) -->Line_32 $$ cache.put(i, new Value(Integer.toString(i), 2))[ FD ]
Line_30 $$ if (rarely()) -->Line_32 $$ cache.put(i, new Value(Integer.toString(i), 2))[ CD ]
Line_3 $$ class Value -->Line_19 $$ return value.hashCode()[ CD ]
Line_2 $$ public void testReplaceRecomputesSize() -->Line_26 $$ assertEquals(numberOfEntries, cache.count())[ CD ]
Line_3 $$ class Value -->Line_11 $$ if (this == o)[ FD ]
Line_2 $$ public void testReplaceRecomputesSize() -->Line_23 $$ for (int i = 0; i < numberOfEntries; i++) [ CD ]
Line_2 $$ public void testReplaceRecomputesSize() -->Line_36 $$ assertEquals(numberOfEntries + replaced, cache.weight())[ CD ]
Line_2 $$ public void testReplaceRecomputesSize() -->Line_29 $$ for (int i = 0; i < numberOfEntries; i++) [ CD ]
Line_3 $$ class Value -->Line_13 $$ if (o == null || getClass() != o.getClass())[ CD ]
Line_13 $$ if (o == null || getClass() != o.getClass())-->Line_14 $$ return false[ CD ]
Line_3 $$ class Value -->Line_11 $$ if (this == o)[ CD ]
Line_29 $$ for (int i = 0; i < numberOfEntries; i++) -->Line_32 $$ cache.put(i, new Value(Integer.toString(i), 2))[ FD ]
Line_3 $$ class Value -->Line_13 $$ if (o == null || getClass() != o.getClass())[ FD ]
Line_2 $$ public void testReplaceRecomputesSize() -->Line_22 $$ Cache<Integer, Value> cache = CacheBuilder.<Integer, Value>builder().weigher(( k,  s) -> s.weight).build()[ CD ]
Line_23 $$ for (int i = 0; i < numberOfEntries; i++) -->Line_24 $$ cache.put(i, new Value(Integer.toString(i), 1))[ CD ]
Line_3 $$ class Value -->Line_16 $$ return value.equals(that.value)[ CD ]
Line_29 $$ for (int i = 0; i < numberOfEntries; i++) -->Line_30 $$ if (rarely()) [ CD ]
Line_2 $$ public void testReplaceRecomputesSize() -->Line_27 $$ assertEquals(numberOfEntries, cache.weight())[ CD ]
Line_2 $$ public void testReplaceRecomputesSize() -->Line_35 $$ assertEquals(numberOfEntries, cache.count())[ CD ]
Line_3 $$ class Value -->Line_15 $$ Value that = (Value) o[ CD ]
Line_23 $$ for (int i = 0; i < numberOfEntries; i++) -->Line_24 $$ cache.put(i, new Value(Integer.toString(i), 1))[ FD ]
Line_23 $$ for (int i = 0; i < numberOfEntries; i++) -->Line_29 $$ for (int i = 0; i < numberOfEntries; i++) [ FD ]
Line_11 $$ if (this == o)-->Line_12 $$ return true[ CD ]
