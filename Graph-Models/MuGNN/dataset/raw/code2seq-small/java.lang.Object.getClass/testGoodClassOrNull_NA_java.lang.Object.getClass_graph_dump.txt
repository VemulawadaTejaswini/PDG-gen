Line_9 $$ Class c = StreamUtil.goodClassOrNull(conf, NAME, defaultPackage)-->Line_10 $$ assertNotNull("Class " + NAME + " not found!", c)[ FD ]
Line_2 $$ public void testGoodClassOrNull() throws Exception -->Line_4 $$ ClassLoader cl = TestClassWithNoPackage.class.getClassLoader()[ CD ]
Line_3 $$ String NAME = "ClassWithNoPackage"-->Line_5 $$ String JAR = JarFinder.getJar(cl.loadClass(NAME))[ FD ]
Line_3 $$ String NAME = "ClassWithNoPackage"-->Line_9 $$ Class c = StreamUtil.goodClassOrNull(conf, NAME, defaultPackage)[ FD ]
Line_2 $$ public void testGoodClassOrNull() throws Exception -->Line_7 $$ conf.setClassLoader(new URLClassLoader(new URL[] [ CD ]
Line_4 $$ ClassLoader cl = TestClassWithNoPackage.class.getClassLoader()-->Line_5 $$ String JAR = JarFinder.getJar(cl.loadClass(NAME))[ FD ]
Line_2 $$ public void testGoodClassOrNull() throws Exception -->Line_3 $$ String NAME = "ClassWithNoPackage"[ CD ]
Line_8 $$ String defaultPackage = this.getClass().getPackage().getName()-->Line_9 $$ Class c = StreamUtil.goodClassOrNull(conf, NAME, defaultPackage)[ FD ]
Line_2 $$ public void testGoodClassOrNull() throws Exception -->Line_5 $$ String JAR = JarFinder.getJar(cl.loadClass(NAME))[ CD ]
Line_2 $$ public void testGoodClassOrNull() throws Exception -->Line_10 $$ assertNotNull("Class " + NAME + " not found!", c)[ CD ]
Line_2 $$ public void testGoodClassOrNull() throws Exception -->Line_6 $$ Configuration conf = new Configuration()[ CD ]
Line_2 $$ public void testGoodClassOrNull() throws Exception -->Line_9 $$ Class c = StreamUtil.goodClassOrNull(conf, NAME, defaultPackage)[ CD ]
Line_6 $$ Configuration conf = new Configuration()-->Line_7 $$ conf.setClassLoader(new URLClassLoader(new URL[] [ FD ]
Line_2 $$ public void testGoodClassOrNull() throws Exception -->Line_8 $$ String defaultPackage = this.getClass().getPackage().getName()[ CD ]
Line_6 $$ Configuration conf = new Configuration()-->Line_9 $$ Class c = StreamUtil.goodClassOrNull(conf, NAME, defaultPackage)[ FD ]
