Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_3 $$ JsonGenerator json = factory.createJsonGenerator(writer)[ FD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_26 $$ return writer[ CD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_24 $$ json.flush()[ CD ]
Line_3 $$ JsonGenerator json = factory.createJsonGenerator(writer)-->Line_25 $$ json.close()[ FD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_9 $$ json.writeStringField(LEVEL, level)[ FD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_10 $$ json.writeStringField(THREAD, threadName)[ FD ]
Line_3 $$ JsonGenerator json = factory.createJsonGenerator(writer)-->Line_11 $$ json.writeStringField(MESSAGE, message)[ FD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_11 $$ json.writeStringField(MESSAGE, message)[ CD ]
Line_12 $$ if (ti != null) -->Line_21 $$ json.writeEndArray()[ CD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_6 $$ json.writeNumberField(TIME, timeStamp)[ CD ]
Line_3 $$ JsonGenerator json = factory.createJsonGenerator(writer)-->Line_9 $$ json.writeStringField(LEVEL, level)[ FD ]
Line_7 $$ Date date = new Date(timeStamp)-->Line_8 $$ json.writeStringField(DATE, dateFormat.format(date))[ FD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_11 $$ json.writeStringField(MESSAGE, message)[ FD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_12 $$ if (ti != null) [ FD ]
Line_3 $$ JsonGenerator json = factory.createJsonGenerator(writer)-->Line_19 $$ json.writeString(row)[ FD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_13 $$ Throwable thrown = ti.getThrowable()[ FD ]
Line_3 $$ JsonGenerator json = factory.createJsonGenerator(writer)-->Line_4 $$ json.writeStartObject()[ FD ]
Line_13 $$ Throwable thrown = ti.getThrowable()-->Line_14 $$ String eclass = (thrown != null) ? thrown.getClass().getName() : ""[ FD ]
Line_3 $$ JsonGenerator json = factory.createJsonGenerator(writer)-->Line_21 $$ json.writeEndArray()[ FD ]
Line_14 $$ String eclass = (thrown != null) ? thrown.getClass().getName() : ""-->Line_15 $$ json.writeStringField(EXCEPTION_CLASS, eclass)[ FD ]
Line_12 $$ if (ti != null) -->Line_17 $$ json.writeArrayFieldStart(STACK)[ CD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_25 $$ json.close()[ CD ]
Line_3 $$ JsonGenerator json = factory.createJsonGenerator(writer)-->Line_24 $$ json.flush()[ FD ]
Line_12 $$ if (ti != null) -->Line_16 $$ String[] stackTrace = ti.getThrowableStrRep()[ CD ]
Line_12 $$ if (ti != null) -->Line_15 $$ json.writeStringField(EXCEPTION_CLASS, eclass)[ CD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_5 $$ json.writeStringField(NAME, loggerName)[ CD ]
Line_3 $$ JsonGenerator json = factory.createJsonGenerator(writer)-->Line_17 $$ json.writeArrayFieldStart(STACK)[ FD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_10 $$ json.writeStringField(THREAD, threadName)[ CD ]
Line_3 $$ JsonGenerator json = factory.createJsonGenerator(writer)-->Line_23 $$ json.writeEndObject()[ FD ]
Line_3 $$ JsonGenerator json = factory.createJsonGenerator(writer)-->Line_6 $$ json.writeNumberField(TIME, timeStamp)[ FD ]
Line_3 $$ JsonGenerator json = factory.createJsonGenerator(writer)-->Line_5 $$ json.writeStringField(NAME, loggerName)[ FD ]
Line_12 $$ if (ti != null) -->Line_14 $$ String eclass = (thrown != null) ? thrown.getClass().getName() : ""[ CD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_3 $$ JsonGenerator json = factory.createJsonGenerator(writer)[ CD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_6 $$ json.writeNumberField(TIME, timeStamp)[ FD ]
Line_18 $$ for (String row : stackTrace) -->Line_19 $$ json.writeString(row)[ FD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_23 $$ json.writeEndObject()[ CD ]
Line_3 $$ JsonGenerator json = factory.createJsonGenerator(writer)-->Line_15 $$ json.writeStringField(EXCEPTION_CLASS, eclass)[ FD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_5 $$ json.writeStringField(NAME, loggerName)[ FD ]
Line_3 $$ JsonGenerator json = factory.createJsonGenerator(writer)-->Line_8 $$ json.writeStringField(DATE, dateFormat.format(date))[ FD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_4 $$ json.writeStartObject()[ CD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_7 $$ Date date = new Date(timeStamp)[ CD ]
Line_3 $$ JsonGenerator json = factory.createJsonGenerator(writer)-->Line_10 $$ json.writeStringField(THREAD, threadName)[ FD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_16 $$ String[] stackTrace = ti.getThrowableStrRep()[ FD ]
Line_12 $$ if (ti != null) -->Line_13 $$ Throwable thrown = ti.getThrowable()[ CD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_8 $$ json.writeStringField(DATE, dateFormat.format(date))[ CD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_12 $$ if (ti != null) [ CD ]
Line_2 $$ public Writer toJson(final Writer writer, final String loggerName, final long timeStamp, final String level, final String threadName, final String message, final ThrowableInformation ti) throws IOException -->Line_9 $$ json.writeStringField(LEVEL, level)[ CD ]
