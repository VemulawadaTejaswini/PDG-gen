Line_2 $$ protected Response createResponse(Response.Status status, Throwable throwable) -->Line_6 $$ json.put(HttpFSFileSystem.ERROR_CLASSNAME_JSON, throwable.getClass().getName())[ CD ]
Line_2 $$ protected Response createResponse(Response.Status status, Throwable throwable) -->Line_8 $$ response.put(HttpFSFileSystem.ERROR_JSON, json)[ CD ]
Line_2 $$ protected Response createResponse(Response.Status status, Throwable throwable) -->Line_10 $$ return Response.status(status).type(MediaType.APPLICATION_JSON).entity(response).build()[ CD ]
Line_2 $$ protected Response createResponse(Response.Status status, Throwable throwable) -->Line_9 $$ log(status, throwable)[ CD ]
Line_3 $$ Map<String, Object> json = new LinkedHashMap<String, Object>()-->Line_8 $$ response.put(HttpFSFileSystem.ERROR_JSON, json)[ FD ]
Line_2 $$ protected Response createResponse(Response.Status status, Throwable throwable) -->Line_6 $$ json.put(HttpFSFileSystem.ERROR_CLASSNAME_JSON, throwable.getClass().getName())[ FD ]
Line_2 $$ protected Response createResponse(Response.Status status, Throwable throwable) -->Line_4 $$ json.put(HttpFSFileSystem.ERROR_MESSAGE_JSON, getOneLineMessage(throwable))[ CD ]
Line_3 $$ Map<String, Object> json = new LinkedHashMap<String, Object>()-->Line_5 $$ json.put(HttpFSFileSystem.ERROR_EXCEPTION_JSON, throwable.getClass().getSimpleName())[ FD ]
Line_2 $$ protected Response createResponse(Response.Status status, Throwable throwable) -->Line_10 $$ return Response.status(status).type(MediaType.APPLICATION_JSON).entity(response).build()[ FD ]
Line_2 $$ protected Response createResponse(Response.Status status, Throwable throwable) -->Line_5 $$ json.put(HttpFSFileSystem.ERROR_EXCEPTION_JSON, throwable.getClass().getSimpleName())[ CD ]
Line_7 $$ Map<String, Object> response = new LinkedHashMap<String, Object>()-->Line_10 $$ return Response.status(status).type(MediaType.APPLICATION_JSON).entity(response).build()[ FD ]
Line_2 $$ protected Response createResponse(Response.Status status, Throwable throwable) -->Line_4 $$ json.put(HttpFSFileSystem.ERROR_MESSAGE_JSON, getOneLineMessage(throwable))[ FD ]
Line_2 $$ protected Response createResponse(Response.Status status, Throwable throwable) -->Line_3 $$ Map<String, Object> json = new LinkedHashMap<String, Object>()[ CD ]
Line_2 $$ protected Response createResponse(Response.Status status, Throwable throwable) -->Line_9 $$ log(status, throwable)[ FD ]
Line_3 $$ Map<String, Object> json = new LinkedHashMap<String, Object>()-->Line_4 $$ json.put(HttpFSFileSystem.ERROR_MESSAGE_JSON, getOneLineMessage(throwable))[ FD ]
Line_7 $$ Map<String, Object> response = new LinkedHashMap<String, Object>()-->Line_8 $$ response.put(HttpFSFileSystem.ERROR_JSON, json)[ FD ]
Line_2 $$ protected Response createResponse(Response.Status status, Throwable throwable) -->Line_5 $$ json.put(HttpFSFileSystem.ERROR_EXCEPTION_JSON, throwable.getClass().getSimpleName())[ FD ]
Line_3 $$ Map<String, Object> json = new LinkedHashMap<String, Object>()-->Line_6 $$ json.put(HttpFSFileSystem.ERROR_CLASSNAME_JSON, throwable.getClass().getName())[ FD ]
Line_2 $$ protected Response createResponse(Response.Status status, Throwable throwable) -->Line_7 $$ Map<String, Object> response = new LinkedHashMap<String, Object>()[ CD ]
