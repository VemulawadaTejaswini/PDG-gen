Line_5 $$ LifecycleTestBean bean1 = (LifecycleTestBean) context.getBean("bean1")-->Line_15 $$ assertTrue(orderError, bean2.getStartOrder() > bean1.getStartOrder())[ FD ]
Line_2 $$ public void testStartOrder() -->Line_10 $$ assertTrue(notStartedError, bean1.getStartOrder() > 0)[ CD ]
Line_2 $$ public void testStartOrder() -->Line_6 $$ LifecycleTestBean bean2 = (LifecycleTestBean) context.getBean("bean2")[ CD ]
Line_6 $$ LifecycleTestBean bean2 = (LifecycleTestBean) context.getBean("bean2")-->Line_16 $$ assertTrue(orderError, bean3.getStartOrder() > bean2.getStartOrder())[ FD ]
Line_3 $$ AbstractApplicationContext context = new ClassPathXmlApplicationContext("lifecycleTests.xml", getClass())-->Line_8 $$ LifecycleTestBean bean4 = (LifecycleTestBean) context.getBean("bean4")[ FD ]
Line_2 $$ public void testStartOrder() -->Line_16 $$ assertTrue(orderError, bean3.getStartOrder() > bean2.getStartOrder())[ CD ]
Line_8 $$ LifecycleTestBean bean4 = (LifecycleTestBean) context.getBean("bean4")-->Line_13 $$ assertTrue(notStartedError, bean4.getStartOrder() > 0)[ FD ]
Line_7 $$ LifecycleTestBean bean3 = (LifecycleTestBean) context.getBean("bean3")-->Line_16 $$ assertTrue(orderError, bean3.getStartOrder() > bean2.getStartOrder())[ FD ]
Line_2 $$ public void testStartOrder() -->Line_5 $$ LifecycleTestBean bean1 = (LifecycleTestBean) context.getBean("bean1")[ CD ]
Line_9 $$ String notStartedError = "bean was not started"-->Line_10 $$ assertTrue(notStartedError, bean1.getStartOrder() > 0)[ FD ]
Line_9 $$ String notStartedError = "bean was not started"-->Line_12 $$ assertTrue(notStartedError, bean3.getStartOrder() > 0)[ FD ]
Line_3 $$ AbstractApplicationContext context = new ClassPathXmlApplicationContext("lifecycleTests.xml", getClass())-->Line_7 $$ LifecycleTestBean bean3 = (LifecycleTestBean) context.getBean("bean3")[ FD ]
Line_14 $$ String orderError = "dependent bean must start after the bean it depends on"-->Line_15 $$ assertTrue(orderError, bean2.getStartOrder() > bean1.getStartOrder())[ FD ]
Line_3 $$ AbstractApplicationContext context = new ClassPathXmlApplicationContext("lifecycleTests.xml", getClass())-->Line_6 $$ LifecycleTestBean bean2 = (LifecycleTestBean) context.getBean("bean2")[ FD ]
Line_2 $$ public void testStartOrder() -->Line_11 $$ assertTrue(notStartedError, bean2.getStartOrder() > 0)[ CD ]
Line_9 $$ String notStartedError = "bean was not started"-->Line_11 $$ assertTrue(notStartedError, bean2.getStartOrder() > 0)[ FD ]
Line_3 $$ AbstractApplicationContext context = new ClassPathXmlApplicationContext("lifecycleTests.xml", getClass())-->Line_4 $$ context.start()[ FD ]
Line_9 $$ String notStartedError = "bean was not started"-->Line_13 $$ assertTrue(notStartedError, bean4.getStartOrder() > 0)[ FD ]
Line_2 $$ public void testStartOrder() -->Line_4 $$ context.start()[ CD ]
Line_2 $$ public void testStartOrder() -->Line_8 $$ LifecycleTestBean bean4 = (LifecycleTestBean) context.getBean("bean4")[ CD ]
Line_2 $$ public void testStartOrder() -->Line_7 $$ LifecycleTestBean bean3 = (LifecycleTestBean) context.getBean("bean3")[ CD ]
Line_6 $$ LifecycleTestBean bean2 = (LifecycleTestBean) context.getBean("bean2")-->Line_17 $$ assertTrue(orderError, bean4.getStartOrder() > bean2.getStartOrder())[ FD ]
Line_2 $$ public void testStartOrder() -->Line_3 $$ AbstractApplicationContext context = new ClassPathXmlApplicationContext("lifecycleTests.xml", getClass())[ CD ]
Line_7 $$ LifecycleTestBean bean3 = (LifecycleTestBean) context.getBean("bean3")-->Line_12 $$ assertTrue(notStartedError, bean3.getStartOrder() > 0)[ FD ]
Line_14 $$ String orderError = "dependent bean must start after the bean it depends on"-->Line_17 $$ assertTrue(orderError, bean4.getStartOrder() > bean2.getStartOrder())[ FD ]
Line_6 $$ LifecycleTestBean bean2 = (LifecycleTestBean) context.getBean("bean2")-->Line_15 $$ assertTrue(orderError, bean2.getStartOrder() > bean1.getStartOrder())[ FD ]
Line_2 $$ public void testStartOrder() -->Line_14 $$ String orderError = "dependent bean must start after the bean it depends on"[ CD ]
Line_8 $$ LifecycleTestBean bean4 = (LifecycleTestBean) context.getBean("bean4")-->Line_17 $$ assertTrue(orderError, bean4.getStartOrder() > bean2.getStartOrder())[ FD ]
Line_5 $$ LifecycleTestBean bean1 = (LifecycleTestBean) context.getBean("bean1")-->Line_10 $$ assertTrue(notStartedError, bean1.getStartOrder() > 0)[ FD ]
Line_6 $$ LifecycleTestBean bean2 = (LifecycleTestBean) context.getBean("bean2")-->Line_11 $$ assertTrue(notStartedError, bean2.getStartOrder() > 0)[ FD ]
Line_2 $$ public void testStartOrder() -->Line_15 $$ assertTrue(orderError, bean2.getStartOrder() > bean1.getStartOrder())[ CD ]
Line_3 $$ AbstractApplicationContext context = new ClassPathXmlApplicationContext("lifecycleTests.xml", getClass())-->Line_5 $$ LifecycleTestBean bean1 = (LifecycleTestBean) context.getBean("bean1")[ FD ]
Line_14 $$ String orderError = "dependent bean must start after the bean it depends on"-->Line_16 $$ assertTrue(orderError, bean3.getStartOrder() > bean2.getStartOrder())[ FD ]
Line_2 $$ public void testStartOrder() -->Line_12 $$ assertTrue(notStartedError, bean3.getStartOrder() > 0)[ CD ]
Line_2 $$ public void testStartOrder() -->Line_13 $$ assertTrue(notStartedError, bean4.getStartOrder() > 0)[ CD ]
Line_2 $$ public void testStartOrder() -->Line_9 $$ String notStartedError = "bean was not started"[ CD ]
Line_2 $$ public void testStartOrder() -->Line_17 $$ assertTrue(orderError, bean4.getStartOrder() > bean2.getStartOrder())[ CD ]
