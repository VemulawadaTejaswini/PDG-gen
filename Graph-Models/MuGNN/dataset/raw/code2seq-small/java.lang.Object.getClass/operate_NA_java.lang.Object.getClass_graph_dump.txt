Line_4 $$ if (overloader.overridesOperation(op, left, right)) -->Line_9 $$ String rightType = (right == null ? "null" : right.getClass().getName())[ CD ]
Line_4 $$ if (overloader.overridesOperation(op, left, right)) -->Line_5 $$ Object returnValue = overloader.operate(op, left, right)[ CD ]
Line_3 $$ OperatorOverloader overloader = this.relatedContext.getOperatorOverloader()-->Line_4 $$ if (overloader.overridesOperation(op, left, right)) [ FD ]
Line_2 $$ public TypedValue operate(Operation op, Object left, Object right) throws EvaluationException -->Line_4 $$ if (overloader.overridesOperation(op, left, right)) [ FD ]
Line_2 $$ public TypedValue operate(Operation op, Object left, Object right) throws EvaluationException -->Line_4 $$ if (overloader.overridesOperation(op, left, right)) [ CD ]
Line_3 $$ OperatorOverloader overloader = this.relatedContext.getOperatorOverloader()-->Line_5 $$ Object returnValue = overloader.operate(op, left, right)[ FD ]
Line_4 $$ if (overloader.overridesOperation(op, left, right)) -->Line_8 $$ String leftType = (left == null ? "null" : left.getClass().getName())[ CD ]
Line_2 $$ public TypedValue operate(Operation op, Object left, Object right) throws EvaluationException -->Line_5 $$ Object returnValue = overloader.operate(op, left, right)[ FD ]
Line_4 $$ if (overloader.overridesOperation(op, left, right)) -->Line_6 $$ return new TypedValue(returnValue)[ CD ]
Line_2 $$ public TypedValue operate(Operation op, Object left, Object right) throws EvaluationException -->Line_9 $$ String rightType = (right == null ? "null" : right.getClass().getName())[ FD ]
Line_2 $$ public TypedValue operate(Operation op, Object left, Object right) throws EvaluationException -->Line_3 $$ OperatorOverloader overloader = this.relatedContext.getOperatorOverloader()[ CD ]
Line_2 $$ public TypedValue operate(Operation op, Object left, Object right) throws EvaluationException -->Line_8 $$ String leftType = (left == null ? "null" : left.getClass().getName())[ FD ]
