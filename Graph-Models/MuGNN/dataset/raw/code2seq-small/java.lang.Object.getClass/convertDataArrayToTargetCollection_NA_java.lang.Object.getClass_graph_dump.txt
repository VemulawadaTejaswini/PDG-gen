Line_2 $$ private Collection<?> convertDataArrayToTargetCollection(Object[] array, Class<?> collectionType, Class<?> elementType) throws NoSuchMethodException -->Line_4 $$ Collection<Object> resultColl = CollectionFactory.createCollection(collectionType, Array.getLength(array))[ FD ]
Line_2 $$ private Collection<?> convertDataArrayToTargetCollection(Object[] array, Class<?> collectionType, Class<?> elementType) throws NoSuchMethodException -->Line_3 $$ Method fromMethod = elementType.getMethod("from", array.getClass().getComponentType())[ FD ]
Line_5 $$ for (int i = 0; i < array.length; i++) -->Line_6 $$ resultColl.add(ReflectionUtils.invokeMethod(fromMethod, null, array[i]))[ CD ]
Line_2 $$ private Collection<?> convertDataArrayToTargetCollection(Object[] array, Class<?> collectionType, Class<?> elementType) throws NoSuchMethodException -->Line_4 $$ Collection<Object> resultColl = CollectionFactory.createCollection(collectionType, Array.getLength(array))[ CD ]
Line_2 $$ private Collection<?> convertDataArrayToTargetCollection(Object[] array, Class<?> collectionType, Class<?> elementType) throws NoSuchMethodException -->Line_5 $$ for (int i = 0; i < array.length; i++) [ CD ]
Line_3 $$ Method fromMethod = elementType.getMethod("from", array.getClass().getComponentType())-->Line_6 $$ resultColl.add(ReflectionUtils.invokeMethod(fromMethod, null, array[i]))[ FD ]
Line_2 $$ private Collection<?> convertDataArrayToTargetCollection(Object[] array, Class<?> collectionType, Class<?> elementType) throws NoSuchMethodException -->Line_8 $$ return resultColl[ CD ]
Line_2 $$ private Collection<?> convertDataArrayToTargetCollection(Object[] array, Class<?> collectionType, Class<?> elementType) throws NoSuchMethodException -->Line_3 $$ Method fromMethod = elementType.getMethod("from", array.getClass().getComponentType())[ CD ]
Line_4 $$ Collection<Object> resultColl = CollectionFactory.createCollection(collectionType, Array.getLength(array))-->Line_6 $$ resultColl.add(ReflectionUtils.invokeMethod(fromMethod, null, array[i]))[ FD ]
