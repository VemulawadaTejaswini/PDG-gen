Line_10 $$ final Map<String, Object> substitutionMap = new HashMap<String, Object>()-->Line_19 $$ substitutionMap.put(XACMLTestUtils.SUBST_SUBJECT_ID, "admin@acme.com")[ FD ]
Line_10 $$ final Map<String, Object> substitutionMap = new HashMap<String, Object>()-->Line_17 $$ substitutionMap.put(XACMLTestUtils.SUBST_SUBJECT_ID, "bs@simpsons.com")[ FD ]
Line_10 $$ final Map<String, Object> substitutionMap = new HashMap<String, Object>()-->Line_11 $$ substitutionMap.put(XACMLTestUtils.SUBST_SUBJECT_ID, "josef@med.example.com")[ FD ]
Line_10 $$ final Map<String, Object> substitutionMap = new HashMap<String, Object>()-->Line_15 $$ substitutionMap.put(XACMLTestUtils.SUBST_SUBJECT_ID, "hs@simpsons.com")[ FD ]
Line_8 $$ final String requestTemplate = IOUtils.toString(requestIS, "UTF-8")-->Line_18 $$ assertEquals("Decision for bs@simpsons.com should be DECISION_NOT_APPLICABLE", XACMLConstants.DECISION_NOT_APPLICABLE, getDecisionForStr(pdp, StrSubstitutor.replace(requestTemplate, substitutionMap)))[ FD ]
Line_10 $$ final Map<String, Object> substitutionMap = new HashMap<String, Object>()-->Line_16 $$ assertEquals("Decision for hs@simpsons.com should be DECISION_DENY", XACMLConstants.DECISION_DENY, getDecisionForStr(pdp, StrSubstitutor.replace(requestTemplate, substitutionMap)))[ FD ]
Line_7 $$ final JBossPDP pdp = createPDPForMed(policyDir)-->Line_20 $$ assertEquals("Decision for admin@acme.com should be DECISION_NOT_APPLICABLE", XACMLConstants.DECISION_NOT_APPLICABLE, getDecisionForStr(pdp, StrSubstitutor.replace(requestTemplate, substitutionMap)))[ FD ]
Line_3 $$ final File policyDir = new File("test-JBossPDP-Med-" + System.currentTimeMillis())-->Line_6 $$ policyDir.mkdirs()[ FD ]
Line_7 $$ final JBossPDP pdp = createPDPForMed(policyDir)-->Line_16 $$ assertEquals("Decision for hs@simpsons.com should be DECISION_DENY", XACMLConstants.DECISION_DENY, getDecisionForStr(pdp, StrSubstitutor.replace(requestTemplate, substitutionMap)))[ FD ]
Line_7 $$ final JBossPDP pdp = createPDPForMed(policyDir)-->Line_18 $$ assertEquals("Decision for bs@simpsons.com should be DECISION_NOT_APPLICABLE", XACMLConstants.DECISION_NOT_APPLICABLE, getDecisionForStr(pdp, StrSubstitutor.replace(requestTemplate, substitutionMap)))[ FD ]
Line_4 $$ final InputStream requestIS = getClass().getResourceAsStream(XACMLTestUtils.TESTOBJECTS_REQUESTS + "/med-example-request.xml")-->Line_8 $$ final String requestTemplate = IOUtils.toString(requestIS, "UTF-8")[ FD ]
Line_8 $$ final String requestTemplate = IOUtils.toString(requestIS, "UTF-8")-->Line_16 $$ assertEquals("Decision for hs@simpsons.com should be DECISION_DENY", XACMLConstants.DECISION_DENY, getDecisionForStr(pdp, StrSubstitutor.replace(requestTemplate, substitutionMap)))[ FD ]
Line_2 $$ public void testPoliciesLoadedFromDir() throws Exception -->Line_4 $$ final InputStream requestIS = getClass().getResourceAsStream(XACMLTestUtils.TESTOBJECTS_REQUESTS + "/med-example-request.xml")[ CD ]
Line_10 $$ final Map<String, Object> substitutionMap = new HashMap<String, Object>()-->Line_18 $$ assertEquals("Decision for bs@simpsons.com should be DECISION_NOT_APPLICABLE", XACMLConstants.DECISION_NOT_APPLICABLE, getDecisionForStr(pdp, StrSubstitutor.replace(requestTemplate, substitutionMap)))[ FD ]
Line_2 $$ public void testPoliciesLoadedFromDir() throws Exception -->Line_3 $$ final File policyDir = new File("test-JBossPDP-Med-" + System.currentTimeMillis())[ CD ]
Line_7 $$ final JBossPDP pdp = createPDPForMed(policyDir)-->Line_12 $$ assertEquals("Decision for josef@med.example.com should be DECISION_PERMIT", XACMLConstants.DECISION_PERMIT, getDecisionForStr(pdp, StrSubstitutor.replace(requestTemplate, substitutionMap)))[ FD ]
Line_7 $$ final JBossPDP pdp = createPDPForMed(policyDir)-->Line_14 $$ assertEquals("Decision for guest@med.example.com should be DECISION_DENY", XACMLConstants.DECISION_DENY, getDecisionForStr(pdp, StrSubstitutor.replace(requestTemplate, substitutionMap)))[ FD ]
Line_3 $$ final File policyDir = new File("test-JBossPDP-Med-" + System.currentTimeMillis())-->Line_7 $$ final JBossPDP pdp = createPDPForMed(policyDir)[ FD ]
Line_10 $$ final Map<String, Object> substitutionMap = new HashMap<String, Object>()-->Line_14 $$ assertEquals("Decision for guest@med.example.com should be DECISION_DENY", XACMLConstants.DECISION_DENY, getDecisionForStr(pdp, StrSubstitutor.replace(requestTemplate, substitutionMap)))[ FD ]
Line_4 $$ final InputStream requestIS = getClass().getResourceAsStream(XACMLTestUtils.TESTOBJECTS_REQUESTS + "/med-example-request.xml")-->Line_23 $$ requestIS.close()[ FD ]
Line_8 $$ final String requestTemplate = IOUtils.toString(requestIS, "UTF-8")-->Line_12 $$ assertEquals("Decision for josef@med.example.com should be DECISION_PERMIT", XACMLConstants.DECISION_PERMIT, getDecisionForStr(pdp, StrSubstitutor.replace(requestTemplate, substitutionMap)))[ FD ]
Line_10 $$ final Map<String, Object> substitutionMap = new HashMap<String, Object>()-->Line_20 $$ assertEquals("Decision for admin@acme.com should be DECISION_NOT_APPLICABLE", XACMLConstants.DECISION_NOT_APPLICABLE, getDecisionForStr(pdp, StrSubstitutor.replace(requestTemplate, substitutionMap)))[ FD ]
Line_8 $$ final String requestTemplate = IOUtils.toString(requestIS, "UTF-8")-->Line_14 $$ assertEquals("Decision for guest@med.example.com should be DECISION_DENY", XACMLConstants.DECISION_DENY, getDecisionForStr(pdp, StrSubstitutor.replace(requestTemplate, substitutionMap)))[ FD ]
Line_3 $$ final File policyDir = new File("test-JBossPDP-Med-" + System.currentTimeMillis())-->Line_22 $$ FileUtils.deleteDirectory(policyDir)[ FD ]
Line_8 $$ final String requestTemplate = IOUtils.toString(requestIS, "UTF-8")-->Line_20 $$ assertEquals("Decision for admin@acme.com should be DECISION_NOT_APPLICABLE", XACMLConstants.DECISION_NOT_APPLICABLE, getDecisionForStr(pdp, StrSubstitutor.replace(requestTemplate, substitutionMap)))[ FD ]
Line_10 $$ final Map<String, Object> substitutionMap = new HashMap<String, Object>()-->Line_12 $$ assertEquals("Decision for josef@med.example.com should be DECISION_PERMIT", XACMLConstants.DECISION_PERMIT, getDecisionForStr(pdp, StrSubstitutor.replace(requestTemplate, substitutionMap)))[ FD ]
Line_10 $$ final Map<String, Object> substitutionMap = new HashMap<String, Object>()-->Line_13 $$ substitutionMap.put(XACMLTestUtils.SUBST_SUBJECT_ID, "guest@med.example.com")[ FD ]
