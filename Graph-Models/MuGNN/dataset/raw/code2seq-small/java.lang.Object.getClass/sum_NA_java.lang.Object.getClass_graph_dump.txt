Line_2 $$ public <N extends Number> Expression<N> sum(N n, Expression<? extends N> expression) -->Line_7 $$ return new BinaryArithmeticOperation<N>(this, resultType, BinaryArithmeticOperation.Operation.ADD, n, expression)[ CD ]
Line_2 $$ public <N extends Number> Expression<N> sum(N n, Expression<? extends N> expression) -->Line_3 $$ if (expression == null || n == null) [ CD ]
Line_2 $$ public <N extends Number> Expression<N> sum(N n, Expression<? extends N> expression) -->Line_6 $$ final Class resultType = BinaryArithmeticOperation.determineResultType(n.getClass(), expression.getJavaType())[ FD ]
Line_2 $$ public <N extends Number> Expression<N> sum(N n, Expression<? extends N> expression) -->Line_6 $$ final Class resultType = BinaryArithmeticOperation.determineResultType(n.getClass(), expression.getJavaType())[ CD ]
