Line_9 $$ for (Method m : aClass.getDeclaredMethods()) -->Line_10 $$ LOG.debug(String.format("obj m: %s", m))[ FD ]
Line_19 $$ final Object delegate = delegateField.get(h)-->Line_20 $$ LOG.debug(String.format("delegate: %s", delegate))[ FD ]
Line_2 $$ private static void printToolingProxyDiagnosticInfo(@Nullable Object obj) -->Line_7 $$ LOG.debug(String.format("obj class: %s", aClass))[ CD ]
Line_3 $$ if (!LOG.isDebugEnabled() || obj == null)-->Line_4 $$ return[ CD ]
Line_2 $$ private static void printToolingProxyDiagnosticInfo(@Nullable Object obj) -->Line_6 $$ final Class<?> aClass = obj.getClass()[ CD ]
Line_2 $$ private static void printToolingProxyDiagnosticInfo(@Nullable Object obj) -->Line_6 $$ final Class<?> aClass = obj.getClass()[ FD ]
Line_19 $$ final Object delegate = delegateField.get(h)-->Line_22 $$ LOG.debug(String.format("delegate classloader: %s", delegate.getClass().getClassLoader()))[ FD ]
Line_6 $$ final Class<?> aClass = obj.getClass()-->Line_7 $$ LOG.debug(String.format("obj class: %s", aClass))[ FD ]
Line_14 $$ final Field hField = ReflectionUtil.findField(obj.getClass(), null, "h")-->Line_15 $$ hField.setAccessible(true)[ FD ]
Line_2 $$ private static void printToolingProxyDiagnosticInfo(@Nullable Object obj) -->Line_16 $$ final Object h = hField.get(obj)[ FD ]
Line_17 $$ final Field delegateField = ReflectionUtil.findField(h.getClass(), null, "delegate")-->Line_18 $$ delegateField.setAccessible(true)[ FD ]
Line_2 $$ private static void printToolingProxyDiagnosticInfo(@Nullable Object obj) -->Line_5 $$ LOG.debug(String.format("obj: %s", obj))[ FD ]
Line_2 $$ private static void printToolingProxyDiagnosticInfo(@Nullable Object obj) -->Line_12 $$ if (obj instanceof Proxy) [ FD ]
Line_14 $$ final Field hField = ReflectionUtil.findField(obj.getClass(), null, "h")-->Line_16 $$ final Object h = hField.get(obj)[ FD ]
Line_2 $$ private static void printToolingProxyDiagnosticInfo(@Nullable Object obj) -->Line_12 $$ if (obj instanceof Proxy) [ CD ]
Line_2 $$ private static void printToolingProxyDiagnosticInfo(@Nullable Object obj) -->Line_5 $$ LOG.debug(String.format("obj: %s", obj))[ CD ]
Line_2 $$ private static void printToolingProxyDiagnosticInfo(@Nullable Object obj) -->Line_14 $$ final Field hField = ReflectionUtil.findField(obj.getClass(), null, "h")[ FD ]
Line_2 $$ private static void printToolingProxyDiagnosticInfo(@Nullable Object obj) -->Line_8 $$ LOG.debug(String.format("classloader: %s", aClass.getClassLoader()))[ CD ]
Line_6 $$ final Class<?> aClass = obj.getClass()-->Line_9 $$ for (Method m : aClass.getDeclaredMethods()) [ FD ]
Line_19 $$ final Object delegate = delegateField.get(h)-->Line_21 $$ LOG.debug(String.format("delegate class: %s", delegate.getClass()))[ FD ]
Line_17 $$ final Field delegateField = ReflectionUtil.findField(h.getClass(), null, "delegate")-->Line_19 $$ final Object delegate = delegateField.get(h)[ FD ]
Line_19 $$ final Object delegate = delegateField.get(h)-->Line_23 $$ for (Method m : delegate.getClass().getDeclaredMethods()) [ FD ]
Line_2 $$ private static void printToolingProxyDiagnosticInfo(@Nullable Object obj) -->Line_3 $$ if (!LOG.isDebugEnabled() || obj == null)[ CD ]
Line_16 $$ final Object h = hField.get(obj)-->Line_19 $$ final Object delegate = delegateField.get(h)[ FD ]
Line_9 $$ for (Method m : aClass.getDeclaredMethods()) -->Line_24 $$ LOG.debug(String.format("delegate m: %s", m))[ FD ]
Line_16 $$ final Object h = hField.get(obj)-->Line_17 $$ final Field delegateField = ReflectionUtil.findField(h.getClass(), null, "delegate")[ FD ]
Line_6 $$ final Class<?> aClass = obj.getClass()-->Line_8 $$ LOG.debug(String.format("classloader: %s", aClass.getClassLoader()))[ FD ]
