Line_2 $$ public static <T> T[] filter(T[] array, PredicateFilter<T> filterPredicate) -->Line_3 $$ if (isEmpty(array)) [ CD ]
Line_7 $$ for (T t : array) -->Line_8 $$ if (filterPredicate.filter(t)) [ FD ]
Line_2 $$ public static <T> T[] filter(T[] array, PredicateFilter<T> filterPredicate) -->Line_3 $$ if (isEmpty(array)) [ FD ]
Line_2 $$ public static <T> T[] filter(T[] array, PredicateFilter<T> filterPredicate) -->Line_6 $$ List<T> filteredList = new ArrayList()[ CD ]
Line_2 $$ public static <T> T[] filter(T[] array, PredicateFilter<T> filterPredicate) -->Line_13 $$ return (T[]) Arrays.copyOf(filteredArray, filteredArray.length, array.getClass())[ FD ]
Line_6 $$ List<T> filteredList = new ArrayList()-->Line_12 $$ Object[] filteredArray = filteredList.toArray()[ FD ]
Line_6 $$ List<T> filteredList = new ArrayList()-->Line_9 $$ filteredList.add(t)[ FD ]
Line_7 $$ for (T t : array) -->Line_9 $$ filteredList.add(t)[ FD ]
Line_2 $$ public static <T> T[] filter(T[] array, PredicateFilter<T> filterPredicate) -->Line_13 $$ return (T[]) Arrays.copyOf(filteredArray, filteredArray.length, array.getClass())[ CD ]
Line_2 $$ public static <T> T[] filter(T[] array, PredicateFilter<T> filterPredicate) -->Line_12 $$ Object[] filteredArray = filteredList.toArray()[ CD ]
Line_8 $$ if (filterPredicate.filter(t)) -->Line_9 $$ filteredList.add(t)[ CD ]
Line_2 $$ public static <T> T[] filter(T[] array, PredicateFilter<T> filterPredicate) -->Line_8 $$ if (filterPredicate.filter(t)) [ FD ]
Line_12 $$ Object[] filteredArray = filteredList.toArray()-->Line_13 $$ return (T[]) Arrays.copyOf(filteredArray, filteredArray.length, array.getClass())[ FD ]
Line_3 $$ if (isEmpty(array)) -->Line_4 $$ return array[ CD ]
