Line_6 $$ String actual = this.resolver.resolveUrlPath(file, this.locations, this.chain)-->Line_7 $$ assertEquals(file, actual)[ FD ]
Line_2 $$ public void resolveUrlExisting() -->Line_8 $$ verify(this.chain, times(1)).resolveUrlPath(file, this.locations)[ CD ]
Line_4 $$ String file = "/foo/2.3/foo.txt"-->Line_5 $$ given(this.chain.resolveUrlPath(file, this.locations)).willReturn(file)[ FD ]
Line_2 $$ public void resolveUrlExisting() -->Line_5 $$ given(this.chain.resolveUrlPath(file, this.locations)).willReturn(file)[ CD ]
Line_4 $$ String file = "/foo/2.3/foo.txt"-->Line_8 $$ verify(this.chain, times(1)).resolveUrlPath(file, this.locations)[ FD ]
Line_2 $$ public void resolveUrlExisting() -->Line_4 $$ String file = "/foo/2.3/foo.txt"[ CD ]
Line_2 $$ public void resolveUrlExisting() -->Line_3 $$ this.locations = Collections.singletonList(new ClassPathResource("/META-INF/resources/webjars/", getClass()))[ CD ]
Line_2 $$ public void resolveUrlExisting() -->Line_6 $$ String actual = this.resolver.resolveUrlPath(file, this.locations, this.chain)[ CD ]
Line_4 $$ String file = "/foo/2.3/foo.txt"-->Line_6 $$ String actual = this.resolver.resolveUrlPath(file, this.locations, this.chain)[ FD ]
Line_4 $$ String file = "/foo/2.3/foo.txt"-->Line_7 $$ assertEquals(file, actual)[ FD ]
Line_2 $$ public void resolveUrlExisting() -->Line_7 $$ assertEquals(file, actual)[ CD ]
