Line_2 $$ public static Field getField(final Object owner, final String name, final Definition definition) -->Line_6 $$ while (clazz != null) [ CD ]
Line_2 $$ public static Field getField(final Object owner, final String name, final Definition definition) -->Line_4 $$ Class<?> clazz = owner.getClass()[ CD ]
Line_14 $$ for (final Class iface : clazz.getInterfaces()) -->Line_15 $$ struct = definition.classes.get(iface)[ FD ]
Line_15 $$ struct = definition.classes.get(iface)-->Line_23 $$ if (struct != null) [ FD ]
Line_8 $$ if (struct != null) -->Line_9 $$ field = struct.members.get(name)[ CD ]
Line_24 $$ field = struct.members.get(name)-->Line_25 $$ if (field != null) [ FD ]
Line_7 $$ struct = definition.classes.get(clazz)-->Line_16 $$ if (struct != null) [ FD ]
Line_9 $$ field = struct.members.get(name)-->Line_10 $$ if (field != null) [ FD ]
Line_4 $$ Class<?> clazz = owner.getClass()-->Line_29 $$ clazz = clazz.getSuperclass()[ FD ]
Line_8 $$ if (struct != null) -->Line_10 $$ if (field != null) [ CD ]
Line_3 $$ Struct struct = null-->Line_23 $$ if (struct != null) [ FD ]
Line_4 $$ Class<?> clazz = owner.getClass()-->Line_14 $$ for (final Class iface : clazz.getInterfaces()) [ FD ]
Line_7 $$ struct = definition.classes.get(clazz)-->Line_23 $$ if (struct != null) [ FD ]
Line_9 $$ field = struct.members.get(name)-->Line_24 $$ field = struct.members.get(name)[ FD ]
Line_5 $$ Field field = null-->Line_18 $$ if (field != null) [ FD ]
Line_5 $$ Field field = null-->Line_24 $$ field = struct.members.get(name)[ FD ]
Line_2 $$ public static Field getField(final Object owner, final String name, final Definition definition) -->Line_17 $$ field = struct.members.get(name)[ FD ]
Line_5 $$ Field field = null-->Line_25 $$ if (field != null) [ FD ]
Line_15 $$ struct = definition.classes.get(iface)-->Line_31 $$ if (struct == null) [ FD ]
Line_3 $$ Struct struct = null-->Line_7 $$ struct = definition.classes.get(clazz)[ FD ]
Line_29 $$ clazz = clazz.getSuperclass()-->Line_14 $$ for (final Class iface : clazz.getInterfaces()) [ FD ]
Line_23 $$ if (struct != null) -->Line_24 $$ field = struct.members.get(name)[ CD ]
Line_4 $$ Class<?> clazz = owner.getClass()-->Line_7 $$ struct = definition.classes.get(clazz)[ FD ]
Line_2 $$ public static Field getField(final Object owner, final String name, final Definition definition) -->Line_31 $$ if (struct == null) [ CD ]
Line_29 $$ clazz = clazz.getSuperclass()-->Line_7 $$ struct = definition.classes.get(clazz)[ FD ]
Line_2 $$ public static Field getField(final Object owner, final String name, final Definition definition) -->Line_34 $$ return field[ CD ]
Line_2 $$ public static Field getField(final Object owner, final String name, final Definition definition) -->Line_9 $$ field = struct.members.get(name)[ FD ]
Line_9 $$ field = struct.members.get(name)-->Line_17 $$ field = struct.members.get(name)[ FD ]
Line_24 $$ field = struct.members.get(name)-->Line_18 $$ if (field != null) [ FD ]
Line_7 $$ struct = definition.classes.get(clazz)-->Line_31 $$ if (struct == null) [ FD ]
Line_17 $$ field = struct.members.get(name)-->Line_25 $$ if (field != null) [ FD ]
Line_2 $$ public static Field getField(final Object owner, final String name, final Definition definition) -->Line_32 $$ throw new IllegalArgumentException("Unable to find a dynamic struct for class [" + owner.getClass() + "].")[ FD ]
Line_17 $$ field = struct.members.get(name)-->Line_10 $$ if (field != null) [ FD ]
Line_9 $$ field = struct.members.get(name)-->Line_25 $$ if (field != null) [ FD ]
Line_16 $$ if (struct != null) -->Line_18 $$ if (field != null) [ CD ]
Line_16 $$ if (struct != null) -->Line_17 $$ field = struct.members.get(name)[ CD ]
Line_17 $$ field = struct.members.get(name)-->Line_18 $$ if (field != null) [ FD ]
Line_4 $$ Class<?> clazz = owner.getClass()-->Line_6 $$ while (clazz != null) [ FD ]
Line_3 $$ Struct struct = null-->Line_15 $$ struct = definition.classes.get(iface)[ FD ]
Line_15 $$ struct = definition.classes.get(iface)-->Line_16 $$ if (struct != null) [ FD ]
Line_6 $$ while (clazz != null) -->Line_7 $$ struct = definition.classes.get(clazz)[ CD ]
Line_9 $$ field = struct.members.get(name)-->Line_18 $$ if (field != null) [ FD ]
Line_6 $$ while (clazz != null) -->Line_29 $$ clazz = clazz.getSuperclass()[ CD ]
Line_3 $$ Struct struct = null-->Line_31 $$ if (struct == null) [ FD ]
Line_7 $$ struct = definition.classes.get(clazz)-->Line_8 $$ if (struct != null) [ FD ]
Line_23 $$ if (struct != null) -->Line_25 $$ if (field != null) [ CD ]
Line_2 $$ public static Field getField(final Object owner, final String name, final Definition definition) -->Line_3 $$ Struct struct = null[ CD ]
Line_3 $$ Struct struct = null-->Line_8 $$ if (struct != null) [ FD ]
Line_2 $$ public static Field getField(final Object owner, final String name, final Definition definition) -->Line_4 $$ Class<?> clazz = owner.getClass()[ FD ]
Line_3 $$ Struct struct = null-->Line_16 $$ if (struct != null) [ FD ]
Line_29 $$ clazz = clazz.getSuperclass()-->Line_6 $$ while (clazz != null) [ FD ]
Line_2 $$ public static Field getField(final Object owner, final String name, final Definition definition) -->Line_5 $$ Field field = null[ CD ]
Line_5 $$ Field field = null-->Line_10 $$ if (field != null) [ FD ]
Line_6 $$ while (clazz != null) -->Line_23 $$ if (struct != null) [ CD ]
Line_15 $$ struct = definition.classes.get(iface)-->Line_8 $$ if (struct != null) [ FD ]
Line_5 $$ Field field = null-->Line_9 $$ field = struct.members.get(name)[ FD ]
Line_5 $$ Field field = null-->Line_17 $$ field = struct.members.get(name)[ FD ]
Line_7 $$ struct = definition.classes.get(clazz)-->Line_15 $$ struct = definition.classes.get(iface)[ FD ]
Line_2 $$ public static Field getField(final Object owner, final String name, final Definition definition) -->Line_24 $$ field = struct.members.get(name)[ FD ]
Line_6 $$ while (clazz != null) -->Line_8 $$ if (struct != null) [ CD ]
Line_17 $$ field = struct.members.get(name)-->Line_24 $$ field = struct.members.get(name)[ FD ]
Line_24 $$ field = struct.members.get(name)-->Line_10 $$ if (field != null) [ FD ]
