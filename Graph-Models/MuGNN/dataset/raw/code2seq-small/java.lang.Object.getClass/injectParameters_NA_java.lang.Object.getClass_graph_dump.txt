Line_2 $$ public static void injectParameters(Object type, Properties parameters) -->Line_10 $$ throw new MappingException("type is not parameterized: " + type.getClass().getName())[ FD ]
Line_2 $$ public static void injectParameters(Object type, Properties parameters) -->Line_7 $$ ((ParameterizedType) type).setParameterValues(parameters)[ FD ]
Line_2 $$ public static void injectParameters(Object type, Properties parameters) -->Line_3 $$ if (ParameterizedType.class.isInstance(type)) [ FD ]
Line_3 $$ if (ParameterizedType.class.isInstance(type)) -->Line_9 $$ if (parameters != null && !parameters.isEmpty()) [ CD ]
Line_2 $$ public static void injectParameters(Object type, Properties parameters) -->Line_3 $$ if (ParameterizedType.class.isInstance(type)) [ CD ]
Line_2 $$ public static void injectParameters(Object type, Properties parameters) -->Line_9 $$ if (parameters != null && !parameters.isEmpty()) [ FD ]
Line_2 $$ public static void injectParameters(Object type, Properties parameters) -->Line_4 $$ if (parameters == null) [ FD ]
Line_4 $$ if (parameters == null) -->Line_5 $$ ((ParameterizedType) type).setParameterValues(EMPTY_PROPERTIES)[ CD ]
Line_3 $$ if (ParameterizedType.class.isInstance(type)) -->Line_4 $$ if (parameters == null) [ CD ]
Line_4 $$ if (parameters == null) -->Line_7 $$ ((ParameterizedType) type).setParameterValues(parameters)[ CD ]
