Line_2 $$ static <A, B extends A> B checkType(A value, Class<B> target, String name) -->Line_3 $$ if (value == null) [ FD ]
Line_2 $$ static <A, B extends A> B checkType(A value, Class<B> target, String name) -->Line_7 $$ return target.cast(value)[ CD ]
Line_2 $$ static <A, B extends A> B checkType(A value, Class<B> target, String name) -->Line_6 $$ checkArgument(target.isInstance(value), "%s must be of type %s, not %s", name, target.getName(), value.getClass().getName())[ CD ]
Line_2 $$ static <A, B extends A> B checkType(A value, Class<B> target, String name) -->Line_3 $$ if (value == null) [ CD ]
Line_2 $$ static <A, B extends A> B checkType(A value, Class<B> target, String name) -->Line_7 $$ return target.cast(value)[ FD ]
Line_2 $$ static <A, B extends A> B checkType(A value, Class<B> target, String name) -->Line_4 $$ throw new NullPointerException(format("%s is null", name))[ FD ]
Line_2 $$ static <A, B extends A> B checkType(A value, Class<B> target, String name) -->Line_6 $$ checkArgument(target.isInstance(value), "%s must be of type %s, not %s", name, target.getName(), value.getClass().getName())[ FD ]
