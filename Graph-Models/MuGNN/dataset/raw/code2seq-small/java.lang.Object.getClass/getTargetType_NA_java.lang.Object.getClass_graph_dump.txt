Line_4 $$ for (Class<?> i : interfaces) -->Line_5 $$ if (configuredTargetTypes.containsKey(i.getName())) [ FD ]
Line_2 $$ public <T> Class<? extends T> getTargetType(Class<T> initialTargetType, Object protocolObject) -->Line_9 $$ return initialTargetType[ CD ]
Line_2 $$ public <T> Class<? extends T> getTargetType(Class<T> initialTargetType, Object protocolObject) -->Line_3 $$ Class<?>[] interfaces = protocolObject.getClass().getInterfaces()[ FD ]
Line_4 $$ for (Class<?> i : interfaces) -->Line_6 $$ return configuredTargetTypes.get(i.getName()).asSubclass(initialTargetType)[ FD ]
Line_2 $$ public <T> Class<? extends T> getTargetType(Class<T> initialTargetType, Object protocolObject) -->Line_6 $$ return configuredTargetTypes.get(i.getName()).asSubclass(initialTargetType)[ FD ]
Line_2 $$ public <T> Class<? extends T> getTargetType(Class<T> initialTargetType, Object protocolObject) -->Line_3 $$ Class<?>[] interfaces = protocolObject.getClass().getInterfaces()[ CD ]
Line_5 $$ if (configuredTargetTypes.containsKey(i.getName())) -->Line_6 $$ return configuredTargetTypes.get(i.getName()).asSubclass(initialTargetType)[ CD ]
