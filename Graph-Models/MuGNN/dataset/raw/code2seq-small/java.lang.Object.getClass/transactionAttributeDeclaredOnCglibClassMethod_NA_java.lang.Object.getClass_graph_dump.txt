Line_5 $$ ProxyFactory pf = new ProxyFactory(tb)-->Line_6 $$ pf.setProxyTargetClass(true)[ FD ]
Line_10 $$ RuleBasedTransactionAttribute rbta = new RuleBasedTransactionAttribute()-->Line_11 $$ rbta.getRollbackRules().add(new RollbackRuleAttribute(Exception.class))[ FD ]
Line_2 $$ public void transactionAttributeDeclaredOnCglibClassMethod() throws Exception -->Line_12 $$ assertEquals(rbta.getRollbackRules(), ((RuleBasedTransactionAttribute) actual).getRollbackRules())[ CD ]
Line_2 $$ public void transactionAttributeDeclaredOnCglibClassMethod() throws Exception -->Line_6 $$ pf.setProxyTargetClass(true)[ CD ]
Line_2 $$ public void transactionAttributeDeclaredOnCglibClassMethod() throws Exception -->Line_9 $$ TransactionAttribute actual = atas.getTransactionAttribute(classMethod, proxy.getClass())[ CD ]
Line_8 $$ AnnotationTransactionAttributeSource atas = new AnnotationTransactionAttributeSource()-->Line_9 $$ TransactionAttribute actual = atas.getTransactionAttribute(classMethod, proxy.getClass())[ FD ]
Line_10 $$ RuleBasedTransactionAttribute rbta = new RuleBasedTransactionAttribute()-->Line_12 $$ assertEquals(rbta.getRollbackRules(), ((RuleBasedTransactionAttribute) actual).getRollbackRules())[ FD ]
Line_7 $$ Object proxy = pf.getProxy()-->Line_9 $$ TransactionAttribute actual = atas.getTransactionAttribute(classMethod, proxy.getClass())[ FD ]
Line_2 $$ public void transactionAttributeDeclaredOnCglibClassMethod() throws Exception -->Line_10 $$ RuleBasedTransactionAttribute rbta = new RuleBasedTransactionAttribute()[ CD ]
Line_2 $$ public void transactionAttributeDeclaredOnCglibClassMethod() throws Exception -->Line_8 $$ AnnotationTransactionAttributeSource atas = new AnnotationTransactionAttributeSource()[ CD ]
Line_2 $$ public void transactionAttributeDeclaredOnCglibClassMethod() throws Exception -->Line_11 $$ rbta.getRollbackRules().add(new RollbackRuleAttribute(Exception.class))[ CD ]
Line_2 $$ public void transactionAttributeDeclaredOnCglibClassMethod() throws Exception -->Line_4 $$ TestBean1 tb = new TestBean1()[ CD ]
Line_5 $$ ProxyFactory pf = new ProxyFactory(tb)-->Line_7 $$ Object proxy = pf.getProxy()[ FD ]
Line_2 $$ public void transactionAttributeDeclaredOnCglibClassMethod() throws Exception -->Line_7 $$ Object proxy = pf.getProxy()[ CD ]
Line_3 $$ Method classMethod = ITestBean.class.getMethod("getAge")-->Line_9 $$ TransactionAttribute actual = atas.getTransactionAttribute(classMethod, proxy.getClass())[ FD ]
Line_2 $$ public void transactionAttributeDeclaredOnCglibClassMethod() throws Exception -->Line_5 $$ ProxyFactory pf = new ProxyFactory(tb)[ CD ]
Line_2 $$ public void transactionAttributeDeclaredOnCglibClassMethod() throws Exception -->Line_3 $$ Method classMethod = ITestBean.class.getMethod("getAge")[ CD ]
