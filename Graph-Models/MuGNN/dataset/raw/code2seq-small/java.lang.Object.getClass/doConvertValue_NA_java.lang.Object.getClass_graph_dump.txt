Line_2 $$ private Object doConvertValue(Object oldValue, Object newValue, Class<?> requiredType, PropertyEditor editor) -->Line_19 $$ if (requiredType != null && !requiredType.isArray() && convertedValue instanceof String[]) [ FD ]
Line_2 $$ private Object doConvertValue(Object oldValue, Object newValue, Class<?> requiredType, PropertyEditor editor) -->Line_25 $$ if (convertedValue instanceof String) [ CD ]
Line_32 $$ if (String.class == requiredType) -->Line_33 $$ returnValue = convertedValue[ CD ]
Line_2 $$ private Object doConvertValue(Object oldValue, Object newValue, Class<?> requiredType, PropertyEditor editor) -->Line_10 $$ editor = null[ FD ]
Line_2 $$ private Object doConvertValue(Object oldValue, Object newValue, Class<?> requiredType, PropertyEditor editor) -->Line_26 $$ if (editor != null) [ FD ]
Line_2 $$ private Object doConvertValue(Object oldValue, Object newValue, Class<?> requiredType, PropertyEditor editor) -->Line_36 $$ return returnValue[ CD ]
Line_25 $$ if (convertedValue instanceof String) -->Line_26 $$ if (editor != null) [ CD ]
Line_3 $$ Object convertedValue = newValue-->Line_6 $$ editor.setValue(convertedValue)[ FD ]
Line_23 $$ convertedValue = StringUtils.arrayToCommaDelimitedString((String[]) convertedValue)-->Line_25 $$ if (convertedValue instanceof String) [ FD ]
Line_18 $$ Object returnValue = convertedValue-->Line_33 $$ returnValue = convertedValue[ FD ]
Line_7 $$ Object newConvertedValue = editor.getValue()-->Line_9 $$ convertedValue = newConvertedValue[ FD ]
Line_9 $$ convertedValue = newConvertedValue-->Line_25 $$ if (convertedValue instanceof String) [ FD ]
Line_30 $$ String newTextValue = (String) convertedValue-->Line_31 $$ return doConvertTextValue(oldValue, newTextValue, editor)[ FD ]
Line_2 $$ private Object doConvertValue(Object oldValue, Object newValue, Class<?> requiredType, PropertyEditor editor) -->Line_32 $$ if (String.class == requiredType) [ FD ]
Line_27 $$ if (logger.isTraceEnabled()) -->Line_28 $$ logger.trace("Converting String to [" + requiredType + "] using property editor [" + editor + "]")[ CD ]
Line_2 $$ private Object doConvertValue(Object oldValue, Object newValue, Class<?> requiredType, PropertyEditor editor) -->Line_6 $$ editor.setValue(convertedValue)[ FD ]
Line_10 $$ editor = null-->Line_31 $$ return doConvertTextValue(oldValue, newTextValue, editor)[ FD ]
Line_2 $$ private Object doConvertValue(Object oldValue, Object newValue, Class<?> requiredType, PropertyEditor editor) -->Line_3 $$ Object convertedValue = newValue[ CD ]
Line_2 $$ private Object doConvertValue(Object oldValue, Object newValue, Class<?> requiredType, PropertyEditor editor) -->Line_7 $$ Object newConvertedValue = editor.getValue()[ FD ]
Line_26 $$ if (editor != null) -->Line_31 $$ return doConvertTextValue(oldValue, newTextValue, editor)[ CD ]
Line_19 $$ if (requiredType != null && !requiredType.isArray() && convertedValue instanceof String[]) -->Line_23 $$ convertedValue = StringUtils.arrayToCommaDelimitedString((String[]) convertedValue)[ CD ]
Line_2 $$ private Object doConvertValue(Object oldValue, Object newValue, Class<?> requiredType, PropertyEditor editor) -->Line_4 $$ if (editor != null && !(convertedValue instanceof String)) [ CD ]
Line_10 $$ editor = null-->Line_14 $$ logger.debug("PropertyEditor [" + editor.getClass().getName() + "] does not support setValue call", ex)[ FD ]
Line_8 $$ if (newConvertedValue != convertedValue) -->Line_10 $$ editor = null[ CD ]
Line_3 $$ Object convertedValue = newValue-->Line_9 $$ convertedValue = newConvertedValue[ FD ]
Line_7 $$ Object newConvertedValue = editor.getValue()-->Line_8 $$ if (newConvertedValue != convertedValue) [ FD ]
Line_13 $$ if (logger.isDebugEnabled()) -->Line_14 $$ logger.debug("PropertyEditor [" + editor.getClass().getName() + "] does not support setValue call", ex)[ CD ]
Line_9 $$ convertedValue = newConvertedValue-->Line_33 $$ returnValue = convertedValue[ FD ]
Line_2 $$ private Object doConvertValue(Object oldValue, Object newValue, Class<?> requiredType, PropertyEditor editor) -->Line_18 $$ Object returnValue = convertedValue[ CD ]
Line_2 $$ private Object doConvertValue(Object oldValue, Object newValue, Class<?> requiredType, PropertyEditor editor) -->Line_19 $$ if (requiredType != null && !requiredType.isArray() && convertedValue instanceof String[]) [ CD ]
Line_20 $$ if (logger.isTraceEnabled()) -->Line_21 $$ logger.trace("Converting String array to comma-delimited String [" + convertedValue + "]")[ CD ]
Line_10 $$ editor = null-->Line_26 $$ if (editor != null) [ FD ]
Line_3 $$ Object convertedValue = newValue-->Line_33 $$ returnValue = convertedValue[ FD ]
Line_2 $$ private Object doConvertValue(Object oldValue, Object newValue, Class<?> requiredType, PropertyEditor editor) -->Line_31 $$ return doConvertTextValue(oldValue, newTextValue, editor)[ FD ]
Line_26 $$ if (editor != null) -->Line_32 $$ if (String.class == requiredType) [ CD ]
Line_9 $$ convertedValue = newConvertedValue-->Line_23 $$ convertedValue = StringUtils.arrayToCommaDelimitedString((String[]) convertedValue)[ FD ]
Line_26 $$ if (editor != null) -->Line_30 $$ String newTextValue = (String) convertedValue[ CD ]
Line_23 $$ convertedValue = StringUtils.arrayToCommaDelimitedString((String[]) convertedValue)-->Line_33 $$ returnValue = convertedValue[ FD ]
Line_3 $$ Object convertedValue = newValue-->Line_8 $$ if (newConvertedValue != convertedValue) [ FD ]
Line_19 $$ if (requiredType != null && !requiredType.isArray() && convertedValue instanceof String[]) -->Line_20 $$ if (logger.isTraceEnabled()) [ CD ]
Line_3 $$ Object convertedValue = newValue-->Line_23 $$ convertedValue = StringUtils.arrayToCommaDelimitedString((String[]) convertedValue)[ FD ]
Line_2 $$ private Object doConvertValue(Object oldValue, Object newValue, Class<?> requiredType, PropertyEditor editor) -->Line_14 $$ logger.debug("PropertyEditor [" + editor.getClass().getName() + "] does not support setValue call", ex)[ FD ]
Line_3 $$ Object convertedValue = newValue-->Line_25 $$ if (convertedValue instanceof String) [ FD ]
Line_8 $$ if (newConvertedValue != convertedValue) -->Line_9 $$ convertedValue = newConvertedValue[ CD ]
Line_26 $$ if (editor != null) -->Line_27 $$ if (logger.isTraceEnabled()) [ CD ]
