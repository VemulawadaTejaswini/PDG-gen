Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("bshContext.xml", getClass())-->Line_5 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerWithConfigExtra")[ FD ]
Line_5 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerWithConfigExtra")-->Line_7 $$ assertNull(messenger.getMessage())[ FD ]
Line_2 $$ public void staticScriptWithTwoInterfacesSpecified() throws Exception -->Line_4 $$ assertTrue(Arrays.asList(ctx.getBeanNamesForType(Messenger.class)).contains("messengerWithConfigExtra"))[ CD ]
Line_2 $$ public void staticScriptWithTwoInterfacesSpecified() throws Exception -->Line_8 $$ assertTrue(ctx.getBeansOfType(Messenger.class).values().contains(messenger))[ CD ]
Line_2 $$ public void staticScriptWithTwoInterfacesSpecified() throws Exception -->Line_10 $$ assertNull(messenger.getMessage())[ CD ]
Line_2 $$ public void staticScriptWithTwoInterfacesSpecified() throws Exception -->Line_6 $$ messenger.setMessage(null)[ CD ]
Line_5 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerWithConfigExtra")-->Line_10 $$ assertNull(messenger.getMessage())[ FD ]
Line_2 $$ public void staticScriptWithTwoInterfacesSpecified() throws Exception -->Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("bshContext.xml", getClass())[ CD ]
Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("bshContext.xml", getClass())-->Line_9 $$ ctx.close()[ FD ]
Line_2 $$ public void staticScriptWithTwoInterfacesSpecified() throws Exception -->Line_9 $$ ctx.close()[ CD ]
Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("bshContext.xml", getClass())-->Line_8 $$ assertTrue(ctx.getBeansOfType(Messenger.class).values().contains(messenger))[ FD ]
Line_5 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerWithConfigExtra")-->Line_8 $$ assertTrue(ctx.getBeansOfType(Messenger.class).values().contains(messenger))[ FD ]
Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("bshContext.xml", getClass())-->Line_4 $$ assertTrue(Arrays.asList(ctx.getBeanNamesForType(Messenger.class)).contains("messengerWithConfigExtra"))[ FD ]
Line_2 $$ public void staticScriptWithTwoInterfacesSpecified() throws Exception -->Line_7 $$ assertNull(messenger.getMessage())[ CD ]
Line_2 $$ public void staticScriptWithTwoInterfacesSpecified() throws Exception -->Line_5 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerWithConfigExtra")[ CD ]
Line_5 $$ ConfigurableMessenger messenger = (ConfigurableMessenger) ctx.getBean("messengerWithConfigExtra")-->Line_6 $$ messenger.setMessage(null)[ FD ]
