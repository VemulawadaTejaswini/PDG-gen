Line_4 $$ for (Class<?> c = delegate.getClass(); c != Object.class; c = c.getSuperclass()) -->Line_5 $$ for (Method method : c.getMethods()) [ FD ]
Line_2 $$ public List<ProviderMethod<?>> getProviderMethods(Binder binder) -->Line_4 $$ for (Class<?> c = delegate.getClass(); c != Object.class; c = c.getSuperclass()) [ CD ]
Line_5 $$ for (Method method : c.getMethods()) -->Line_7 $$ result.add(createProviderMethod(binder, method))[ FD ]
Line_2 $$ public List<ProviderMethod<?>> getProviderMethods(Binder binder) -->Line_7 $$ result.add(createProviderMethod(binder, method))[ FD ]
Line_6 $$ if (method.getAnnotation(Provides.class) != null) -->Line_7 $$ result.add(createProviderMethod(binder, method))[ CD ]
Line_2 $$ public List<ProviderMethod<?>> getProviderMethods(Binder binder) -->Line_11 $$ return result[ CD ]
Line_2 $$ public List<ProviderMethod<?>> getProviderMethods(Binder binder) -->Line_3 $$ List<ProviderMethod<?>> result = new ArrayList()[ CD ]
Line_3 $$ List<ProviderMethod<?>> result = new ArrayList()-->Line_7 $$ result.add(createProviderMethod(binder, method))[ FD ]
Line_5 $$ for (Method method : c.getMethods()) -->Line_6 $$ if (method.getAnnotation(Provides.class) != null) [ FD ]
