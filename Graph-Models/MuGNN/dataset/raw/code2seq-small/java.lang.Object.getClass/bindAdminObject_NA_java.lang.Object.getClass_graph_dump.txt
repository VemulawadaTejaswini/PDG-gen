Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_9 $$ final AdminObjectReferenceFactoryService referenceFactoryService = new AdminObjectReferenceFactoryService()[ CD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_8 $$ final ContextNames.BindInfo bindInfo = getBindInfo(jndi)[ FD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_30 $$ DEPLOYMENT_CONNECTOR_LOGGER.debugf("Removed JCA AdminObject [%s]", jndi)[ FD ]
Line_6 $$ final ServiceName adminObjectServiceName = AdminObjectService.SERVICE_NAME_BASE.append(jndi)-->Line_11 $$ serviceTarget.addService(referenceFactoryServiceName, referenceFactoryService).addDependency(adminObjectServiceName, Object.class, referenceFactoryService.getAdminObjectInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install()[ FD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_4 $$ DEPLOYMENT_CONNECTOR_LOGGER.registeredAdminObject(jndi)[ CD ]
Line_8 $$ final ContextNames.BindInfo bindInfo = getBindInfo(jndi)-->Line_13 $$ final BinderService binderService = new BinderService(bindInfo.getBindName())[ FD ]
Line_10 $$ final ServiceName referenceFactoryServiceName = AdminObjectReferenceFactoryService.SERVICE_NAME_BASE.append(bindInfo.getBinderServiceName())-->Line_11 $$ serviceTarget.addService(referenceFactoryServiceName, referenceFactoryService).addDependency(adminObjectServiceName, Object.class, referenceFactoryService.getAdminObjectInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install()[ FD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_20 $$ DEPLOYMENT_CONNECTOR_LOGGER.boundJca("AdminObject", jndi)[ FD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_3 $$ mdr.getValue().registerJndiMapping(url.toExternalForm(), ao.getClass().getName(), jndi)[ CD ]
Line_13 $$ final BinderService binderService = new BinderService(bindInfo.getBindName())-->Line_15 $$ serviceTarget.addService(binderServiceName, binderService).addDependency(referenceFactoryServiceName, ManagedReferenceFactory.class, binderService.getManagedObjectInjector()).addDependency(bindInfo.getParentContextServiceName(), ServiceBasedNamingStore.class, binderService.getNamingStoreInjector()).addListener(new AbstractServiceListener<Object>() [ FD ]
Line_8 $$ final ContextNames.BindInfo bindInfo = getBindInfo(jndi)-->Line_15 $$ serviceTarget.addService(binderServiceName, binderService).addDependency(referenceFactoryServiceName, ManagedReferenceFactory.class, binderService.getManagedObjectInjector()).addDependency(bindInfo.getParentContextServiceName(), ServiceBasedNamingStore.class, binderService.getNamingStoreInjector()).addListener(new AbstractServiceListener<Object>() [ FD ]
Line_12 $$ if (isCreateBinderService()) -->Line_13 $$ final BinderService binderService = new BinderService(bindInfo.getBindName())[ CD ]
Line_8 $$ final ContextNames.BindInfo bindInfo = getBindInfo(jndi)-->Line_10 $$ final ServiceName referenceFactoryServiceName = AdminObjectReferenceFactoryService.SERVICE_NAME_BASE.append(bindInfo.getBinderServiceName())[ FD ]
Line_5 $$ final AdminObjectService adminObjectService = new AdminObjectService(ao)-->Line_7 $$ serviceTarget.addService(adminObjectServiceName, adminObjectService).setInitialMode(ServiceController.Mode.ACTIVE).install()[ FD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_5 $$ final AdminObjectService adminObjectService = new AdminObjectService(ao)[ CD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_11 $$ serviceTarget.addService(referenceFactoryServiceName, referenceFactoryService).addDependency(adminObjectServiceName, Object.class, referenceFactoryService.getAdminObjectInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install()[ CD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_4 $$ DEPLOYMENT_CONNECTOR_LOGGER.registeredAdminObject(jndi)[ FD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_39 $$ return new String[] [ CD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_6 $$ final ServiceName adminObjectServiceName = AdminObjectService.SERVICE_NAME_BASE.append(jndi)[ CD ]
Line_12 $$ if (isCreateBinderService()) -->Line_14 $$ final ServiceName binderServiceName = bindInfo.getBinderServiceName()[ CD ]
Line_6 $$ final ServiceName adminObjectServiceName = AdminObjectService.SERVICE_NAME_BASE.append(jndi)-->Line_7 $$ serviceTarget.addService(adminObjectServiceName, adminObjectService).setInitialMode(ServiceController.Mode.ACTIVE).install()[ FD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_10 $$ final ServiceName referenceFactoryServiceName = AdminObjectReferenceFactoryService.SERVICE_NAME_BASE.append(bindInfo.getBinderServiceName())[ CD ]
Line_8 $$ final ContextNames.BindInfo bindInfo = getBindInfo(jndi)-->Line_14 $$ final ServiceName binderServiceName = bindInfo.getBinderServiceName()[ FD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_12 $$ if (isCreateBinderService()) [ CD ]
Line_10 $$ final ServiceName referenceFactoryServiceName = AdminObjectReferenceFactoryService.SERVICE_NAME_BASE.append(bindInfo.getBinderServiceName())-->Line_15 $$ serviceTarget.addService(binderServiceName, binderService).addDependency(referenceFactoryServiceName, ManagedReferenceFactory.class, binderService.getManagedObjectInjector()).addDependency(bindInfo.getParentContextServiceName(), ServiceBasedNamingStore.class, binderService.getNamingStoreInjector()).addListener(new AbstractServiceListener<Object>() [ FD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_36 $$ if (ao instanceof javax.resource.Referenceable) [ FD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_7 $$ serviceTarget.addService(adminObjectServiceName, adminObjectService).setInitialMode(ServiceController.Mode.ACTIVE).install()[ CD ]
Line_36 $$ if (ao instanceof javax.resource.Referenceable) -->Line_37 $$ ((javax.resource.Referenceable) ao).setReference(new Reference(jndi))[ CD ]
Line_14 $$ final ServiceName binderServiceName = bindInfo.getBinderServiceName()-->Line_15 $$ serviceTarget.addService(binderServiceName, binderService).addDependency(referenceFactoryServiceName, ManagedReferenceFactory.class, binderService.getManagedObjectInjector()).addDependency(bindInfo.getParentContextServiceName(), ServiceBasedNamingStore.class, binderService.getNamingStoreInjector()).addListener(new AbstractServiceListener<Object>() [ FD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_25 $$ DEPLOYMENT_CONNECTOR_LOGGER.unboundJca("AdminObject", jndi)[ FD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_36 $$ if (ao instanceof javax.resource.Referenceable) [ CD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_6 $$ final ServiceName adminObjectServiceName = AdminObjectService.SERVICE_NAME_BASE.append(jndi)[ FD ]
Line_9 $$ final AdminObjectReferenceFactoryService referenceFactoryService = new AdminObjectReferenceFactoryService()-->Line_11 $$ serviceTarget.addService(referenceFactoryServiceName, referenceFactoryService).addDependency(adminObjectServiceName, Object.class, referenceFactoryService.getAdminObjectInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install()[ FD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_8 $$ final ContextNames.BindInfo bindInfo = getBindInfo(jndi)[ CD ]
Line_2 $$ public String[] bindAdminObject(URL url, String deployment, Object ao, final String jndi) throws Throwable -->Line_3 $$ mdr.getValue().registerJndiMapping(url.toExternalForm(), ao.getClass().getName(), jndi)[ FD ]
Line_12 $$ if (isCreateBinderService()) -->Line_15 $$ serviceTarget.addService(binderServiceName, binderService).addDependency(referenceFactoryServiceName, ManagedReferenceFactory.class, binderService.getManagedObjectInjector()).addDependency(bindInfo.getParentContextServiceName(), ServiceBasedNamingStore.class, binderService.getNamingStoreInjector()).addListener(new AbstractServiceListener<Object>() [ CD ]
