Line_6 $$ if (classLoader == null) -->Line_7 $$ classLoader = getClass().getClassLoader()[ CD ]
Line_5 $$ ClassLoader classLoader = myPluginDescriptor != null ? myPluginDescriptor.getPluginClassLoader() : getClass().getClassLoader()-->Line_9 $$ myImplementationClass = Class.forName(myImplementationClassName, false, classLoader)[ FD ]
Line_5 $$ ClassLoader classLoader = myPluginDescriptor != null ? myPluginDescriptor.getPluginClassLoader() : getClass().getClassLoader()-->Line_6 $$ if (classLoader == null) [ FD ]
Line_2 $$ private Class loadImplementationClass() -->Line_3 $$ if (myImplementationClass == null) [ CD ]
Line_7 $$ classLoader = getClass().getClassLoader()-->Line_9 $$ myImplementationClass = Class.forName(myImplementationClassName, false, classLoader)[ FD ]
Line_2 $$ private Class loadImplementationClass() -->Line_14 $$ return myImplementationClass[ CD ]
Line_5 $$ ClassLoader classLoader = myPluginDescriptor != null ? myPluginDescriptor.getPluginClassLoader() : getClass().getClassLoader()-->Line_7 $$ classLoader = getClass().getClassLoader()[ FD ]
