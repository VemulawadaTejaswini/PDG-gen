Line_2 $$ public Expression<Number> quot(Number number, Expression<? extends Number> expression) -->Line_6 $$ final Class resultType = BinaryArithmeticOperation.determineResultType(number.getClass(), expression.getJavaType(), true)[ CD ]
Line_2 $$ public Expression<Number> quot(Number number, Expression<? extends Number> expression) -->Line_3 $$ if (expression == null || number == null) [ CD ]
Line_2 $$ public Expression<Number> quot(Number number, Expression<? extends Number> expression) -->Line_6 $$ final Class resultType = BinaryArithmeticOperation.determineResultType(number.getClass(), expression.getJavaType(), true)[ FD ]
Line_2 $$ public Expression<Number> quot(Number number, Expression<? extends Number> expression) -->Line_7 $$ return new BinaryArithmeticOperation<Number>(this, resultType, BinaryArithmeticOperation.Operation.DIVIDE, number, expression)[ CD ]
