Line_6 $$ Future<Serializable> future = processChannel.getProcessNoticeableFuture()-->Line_27 $$ Assert.assertTrue(future.isDone())[ FD ]
Line_13 $$ Throwable throwable = ee.getCause()-->Line_14 $$ Assert.assertSame(TerminationProcessException.class, throwable.getClass())[ FD ]
Line_6 $$ Future<Serializable> future = processChannel.getProcessNoticeableFuture()-->Line_8 $$ future.get()[ FD ]
Line_13 $$ Throwable throwable = ee.getCause()-->Line_15 $$ Assert.assertEquals("Subprocess terminated with exit code 1", throwable.getMessage())[ FD ]
Line_30 $$ throwable = throwable.getCause()-->Line_31 $$ Assert.assertSame(EOFException.class, throwable.getClass())[ FD ]
Line_21 $$ future = processChannel.getProcessNoticeableFuture()-->Line_26 $$ Assert.assertFalse(future.isCancelled())[ FD ]
Line_6 $$ Future<Serializable> future = processChannel.getProcessNoticeableFuture()-->Line_23 $$ future.get()[ FD ]
Line_4 $$ KillJVMProcessCallable killJVMProcessCallable = new KillJVMProcessCallable(1)-->Line_19 $$ killJVMProcessCallable = new KillJVMProcessCallable(0)[ FD ]
Line_20 $$ processChannel = _localProcessExecutor.execute(_createJPDAProcessConfig(_JPDA_OPTIONS1), killJVMProcessCallable)-->Line_21 $$ future = processChannel.getProcessNoticeableFuture()[ FD ]
Line_6 $$ Future<Serializable> future = processChannel.getProcessNoticeableFuture()-->Line_12 $$ Assert.assertTrue(future.isDone())[ FD ]
Line_4 $$ KillJVMProcessCallable killJVMProcessCallable = new KillJVMProcessCallable(1)-->Line_5 $$ ProcessChannel<Serializable> processChannel = _localProcessExecutor.execute(_createJPDAProcessConfig(_JPDA_OPTIONS1), killJVMProcessCallable)[ FD ]
Line_16 $$ TerminationProcessException terminationProcessException = (TerminationProcessException) throwable-->Line_17 $$ Assert.assertEquals(1, terminationProcessException.getExitCode())[ FD ]
Line_5 $$ ProcessChannel<Serializable> processChannel = _localProcessExecutor.execute(_createJPDAProcessConfig(_JPDA_OPTIONS1), killJVMProcessCallable)-->Line_21 $$ future = processChannel.getProcessNoticeableFuture()[ FD ]
Line_21 $$ future = processChannel.getProcessNoticeableFuture()-->Line_23 $$ future.get()[ FD ]
Line_19 $$ killJVMProcessCallable = new KillJVMProcessCallable(0)-->Line_20 $$ processChannel = _localProcessExecutor.execute(_createJPDAProcessConfig(_JPDA_OPTIONS1), killJVMProcessCallable)[ FD ]
Line_4 $$ KillJVMProcessCallable killJVMProcessCallable = new KillJVMProcessCallable(1)-->Line_20 $$ processChannel = _localProcessExecutor.execute(_createJPDAProcessConfig(_JPDA_OPTIONS1), killJVMProcessCallable)[ FD ]
Line_5 $$ ProcessChannel<Serializable> processChannel = _localProcessExecutor.execute(_createJPDAProcessConfig(_JPDA_OPTIONS1), killJVMProcessCallable)-->Line_6 $$ Future<Serializable> future = processChannel.getProcessNoticeableFuture()[ FD ]
Line_13 $$ Throwable throwable = ee.getCause()-->Line_31 $$ Assert.assertSame(EOFException.class, throwable.getClass())[ FD ]
Line_6 $$ Future<Serializable> future = processChannel.getProcessNoticeableFuture()-->Line_26 $$ Assert.assertFalse(future.isCancelled())[ FD ]
Line_21 $$ future = processChannel.getProcessNoticeableFuture()-->Line_27 $$ Assert.assertTrue(future.isDone())[ FD ]
Line_13 $$ Throwable throwable = ee.getCause()-->Line_30 $$ throwable = throwable.getCause()[ FD ]
Line_6 $$ Future<Serializable> future = processChannel.getProcessNoticeableFuture()-->Line_21 $$ future = processChannel.getProcessNoticeableFuture()[ FD ]
Line_5 $$ ProcessChannel<Serializable> processChannel = _localProcessExecutor.execute(_createJPDAProcessConfig(_JPDA_OPTIONS1), killJVMProcessCallable)-->Line_20 $$ processChannel = _localProcessExecutor.execute(_createJPDAProcessConfig(_JPDA_OPTIONS1), killJVMProcessCallable)[ FD ]
Line_13 $$ Throwable throwable = ee.getCause()-->Line_29 $$ Assert.assertSame(ProcessException.class, throwable.getClass())[ FD ]
Line_6 $$ Future<Serializable> future = processChannel.getProcessNoticeableFuture()-->Line_11 $$ Assert.assertFalse(future.isCancelled())[ FD ]
