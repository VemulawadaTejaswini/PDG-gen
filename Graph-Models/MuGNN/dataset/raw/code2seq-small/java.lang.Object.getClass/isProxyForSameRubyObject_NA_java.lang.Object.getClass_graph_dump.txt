Line_2 $$ private boolean isProxyForSameRubyObject(Object other) -->Line_6 $$ InvocationHandler ih = Proxy.getInvocationHandler(other)[ CD ]
Line_2 $$ private boolean isProxyForSameRubyObject(Object other) -->Line_3 $$ if (!Proxy.isProxyClass(other.getClass())) [ CD ]
Line_3 $$ if (!Proxy.isProxyClass(other.getClass())) -->Line_4 $$ return false[ CD ]
Line_2 $$ private boolean isProxyForSameRubyObject(Object other) -->Line_3 $$ if (!Proxy.isProxyClass(other.getClass())) [ FD ]
Line_2 $$ private boolean isProxyForSameRubyObject(Object other) -->Line_6 $$ InvocationHandler ih = Proxy.getInvocationHandler(other)[ FD ]
Line_2 $$ private boolean isProxyForSameRubyObject(Object other) -->Line_7 $$ return (ih instanceof RubyObjectInvocationHandler && this.rubyObject.equals(((RubyObjectInvocationHandler) ih).rubyObject))[ CD ]
