Line_2 $$ public void testInstallSkeletonLocally() -->Line_6 $$ intrabandProxySkeleton = ReflectionTestUtil.getFieldValue(intrabandProxySkeleton, "_intrabandProxySkeleton")[ CD ]
Line_13 $$ throwable = throwable.getCause()-->Line_14 $$ Assert.assertSame(NullPointerException.class, throwable.getClass())[ FD ]
Line_13 $$ throwable = throwable.getCause()-->Line_15 $$ Assert.assertEquals("Target locator is null", throwable.getMessage())[ FD ]
Line_12 $$ Throwable throwable = re.getCause()-->Line_15 $$ Assert.assertEquals("Target locator is null", throwable.getMessage())[ FD ]
Line_6 $$ intrabandProxySkeleton = ReflectionTestUtil.getFieldValue(intrabandProxySkeleton, "_intrabandProxySkeleton")-->Line_7 $$ Assert.assertEquals(_targetLocator, ReflectionTestUtil.getFieldValue(intrabandProxySkeleton, "_targetLocator"))[ FD ]
Line_4 $$ IntrabandProxySkeleton intrabandProxySkeleton = IntrabandProxySkeletonRegistryUtil.get(TestClass.class.getName())-->Line_6 $$ intrabandProxySkeleton = ReflectionTestUtil.getFieldValue(intrabandProxySkeleton, "_intrabandProxySkeleton")[ FD ]
Line_2 $$ public void testInstallSkeletonLocally() -->Line_4 $$ IntrabandProxySkeleton intrabandProxySkeleton = IntrabandProxySkeletonRegistryUtil.get(TestClass.class.getName())[ CD ]
Line_2 $$ public void testInstallSkeletonLocally() -->Line_7 $$ Assert.assertEquals(_targetLocator, ReflectionTestUtil.getFieldValue(intrabandProxySkeleton, "_targetLocator"))[ CD ]
Line_2 $$ public void testInstallSkeletonLocally() -->Line_5 $$ Assert.assertSame(AsyncIntrabandProxySkeleton.class, intrabandProxySkeleton.getClass())[ CD ]
Line_4 $$ IntrabandProxySkeleton intrabandProxySkeleton = IntrabandProxySkeletonRegistryUtil.get(TestClass.class.getName())-->Line_7 $$ Assert.assertEquals(_targetLocator, ReflectionTestUtil.getFieldValue(intrabandProxySkeleton, "_targetLocator"))[ FD ]
Line_12 $$ Throwable throwable = re.getCause()-->Line_14 $$ Assert.assertSame(NullPointerException.class, throwable.getClass())[ FD ]
Line_2 $$ public void testInstallSkeletonLocally() -->Line_3 $$ IntrabandProxyInstallationUtil.checkProxyMethodSignatures(IntrabandProxyInstallationUtil.installSkeleton(TestClass.class, _targetLocator), _stubProxyMethodSignatures)[ CD ]
Line_12 $$ Throwable throwable = re.getCause()-->Line_13 $$ throwable = throwable.getCause()[ FD ]
Line_4 $$ IntrabandProxySkeleton intrabandProxySkeleton = IntrabandProxySkeletonRegistryUtil.get(TestClass.class.getName())-->Line_5 $$ Assert.assertSame(AsyncIntrabandProxySkeleton.class, intrabandProxySkeleton.getClass())[ FD ]
