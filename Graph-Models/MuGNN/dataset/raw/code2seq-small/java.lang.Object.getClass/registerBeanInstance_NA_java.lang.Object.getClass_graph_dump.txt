Line_13 $$ if (mbeanToExpose != null) -->Line_22 $$ ModelMBean mbean = createAndConfigureMBean(bean, beanKey)[ CD ]
Line_13 $$ if (mbeanToExpose != null) -->Line_17 $$ doRegister(mbeanToExpose, objectName)[ CD ]
Line_13 $$ if (mbeanToExpose != null) -->Line_19 $$ if (logger.isInfoEnabled()) [ CD ]
Line_2 $$ private ObjectName registerBeanInstance(Object bean, String beanKey) throws JMException -->Line_13 $$ if (mbeanToExpose != null) [ CD ]
Line_9 $$ if (adaptedBean != null) -->Line_10 $$ mbeanToExpose = adaptedBean[ CD ]
Line_6 $$ mbeanToExpose = bean-->Line_13 $$ if (mbeanToExpose != null) [ FD ]
Line_2 $$ private ObjectName registerBeanInstance(Object bean, String beanKey) throws JMException -->Line_5 $$ if (isMBean(bean.getClass())) [ FD ]
Line_2 $$ private ObjectName registerBeanInstance(Object bean, String beanKey) throws JMException -->Line_3 $$ ObjectName objectName = getObjectName(bean, beanKey)[ FD ]
Line_2 $$ private ObjectName registerBeanInstance(Object bean, String beanKey) throws JMException -->Line_6 $$ mbeanToExpose = bean[ FD ]
Line_10 $$ mbeanToExpose = adaptedBean-->Line_13 $$ if (mbeanToExpose != null) [ FD ]
Line_14 $$ if (logger.isInfoEnabled()) -->Line_15 $$ logger.info("Located MBean '" + beanKey + "': registering with JMX server as MBean [" + objectName + "]")[ CD ]
Line_2 $$ private ObjectName registerBeanInstance(Object bean, String beanKey) throws JMException -->Line_8 $$ DynamicMBean adaptedBean = adaptMBeanIfPossible(bean)[ FD ]
Line_6 $$ mbeanToExpose = bean-->Line_10 $$ mbeanToExpose = adaptedBean[ FD ]
Line_22 $$ ModelMBean mbean = createAndConfigureMBean(bean, beanKey)-->Line_24 $$ injectNotificationPublisherIfNecessary(bean, mbean, objectName)[ FD ]
Line_19 $$ if (logger.isInfoEnabled()) -->Line_20 $$ logger.info("Located managed bean '" + beanKey + "': registering with JMX server as MBean [" + objectName + "]")[ CD ]
Line_5 $$ if (isMBean(bean.getClass())) -->Line_6 $$ mbeanToExpose = bean[ CD ]
Line_22 $$ ModelMBean mbean = createAndConfigureMBean(bean, beanKey)-->Line_23 $$ doRegister(mbean, objectName)[ FD ]
Line_2 $$ private ObjectName registerBeanInstance(Object bean, String beanKey) throws JMException -->Line_5 $$ if (isMBean(bean.getClass())) [ CD ]
Line_2 $$ private ObjectName registerBeanInstance(Object bean, String beanKey) throws JMException -->Line_4 $$ Object mbeanToExpose = null[ CD ]
Line_2 $$ private ObjectName registerBeanInstance(Object bean, String beanKey) throws JMException -->Line_26 $$ return objectName[ CD ]
Line_4 $$ Object mbeanToExpose = null-->Line_17 $$ doRegister(mbeanToExpose, objectName)[ FD ]
Line_5 $$ if (isMBean(bean.getClass())) -->Line_9 $$ if (adaptedBean != null) [ CD ]
Line_2 $$ private ObjectName registerBeanInstance(Object bean, String beanKey) throws JMException -->Line_3 $$ ObjectName objectName = getObjectName(bean, beanKey)[ CD ]
Line_4 $$ Object mbeanToExpose = null-->Line_13 $$ if (mbeanToExpose != null) [ FD ]
Line_3 $$ ObjectName objectName = getObjectName(bean, beanKey)-->Line_23 $$ doRegister(mbean, objectName)[ FD ]
Line_3 $$ ObjectName objectName = getObjectName(bean, beanKey)-->Line_24 $$ injectNotificationPublisherIfNecessary(bean, mbean, objectName)[ FD ]
Line_8 $$ DynamicMBean adaptedBean = adaptMBeanIfPossible(bean)-->Line_10 $$ mbeanToExpose = adaptedBean[ FD ]
Line_6 $$ mbeanToExpose = bean-->Line_17 $$ doRegister(mbeanToExpose, objectName)[ FD ]
Line_10 $$ mbeanToExpose = adaptedBean-->Line_17 $$ doRegister(mbeanToExpose, objectName)[ FD ]
Line_3 $$ ObjectName objectName = getObjectName(bean, beanKey)-->Line_17 $$ doRegister(mbeanToExpose, objectName)[ FD ]
Line_2 $$ private ObjectName registerBeanInstance(Object bean, String beanKey) throws JMException -->Line_22 $$ ModelMBean mbean = createAndConfigureMBean(bean, beanKey)[ FD ]
Line_13 $$ if (mbeanToExpose != null) -->Line_23 $$ doRegister(mbean, objectName)[ CD ]
Line_5 $$ if (isMBean(bean.getClass())) -->Line_8 $$ DynamicMBean adaptedBean = adaptMBeanIfPossible(bean)[ CD ]
Line_13 $$ if (mbeanToExpose != null) -->Line_14 $$ if (logger.isInfoEnabled()) [ CD ]
Line_13 $$ if (mbeanToExpose != null) -->Line_24 $$ injectNotificationPublisherIfNecessary(bean, mbean, objectName)[ CD ]
Line_4 $$ Object mbeanToExpose = null-->Line_6 $$ mbeanToExpose = bean[ FD ]
Line_4 $$ Object mbeanToExpose = null-->Line_10 $$ mbeanToExpose = adaptedBean[ FD ]
Line_2 $$ private ObjectName registerBeanInstance(Object bean, String beanKey) throws JMException -->Line_24 $$ injectNotificationPublisherIfNecessary(bean, mbean, objectName)[ FD ]
Line_8 $$ DynamicMBean adaptedBean = adaptMBeanIfPossible(bean)-->Line_9 $$ if (adaptedBean != null) [ FD ]
