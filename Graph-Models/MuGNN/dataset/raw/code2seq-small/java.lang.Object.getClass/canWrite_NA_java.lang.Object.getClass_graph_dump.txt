Line_2 $$ public boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException -->Line_6 $$ Class<?> type = (target instanceof Class ? (Class<?>) target : target.getClass())[ CD ]
Line_2 $$ public boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException -->Line_6 $$ Class<?> type = (target instanceof Class ? (Class<?>) target : target.getClass())[ FD ]
Line_7 $$ CacheKey cacheKey = new CacheKey(type, name, target instanceof Class)-->Line_16 $$ this.typeDescriptorCache.put(cacheKey, typeDescriptor)[ FD ]
Line_2 $$ public boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException -->Line_11 $$ Method method = findSetterForProperty(name, type, target)[ FD ]
Line_11 $$ Method method = findSetterForProperty(name, type, target)-->Line_15 $$ this.writerCache.put(cacheKey, method)[ FD ]
Line_7 $$ CacheKey cacheKey = new CacheKey(type, name, target instanceof Class)-->Line_21 $$ this.writerCache.put(cacheKey, field)[ FD ]
Line_7 $$ CacheKey cacheKey = new CacheKey(type, name, target instanceof Class)-->Line_22 $$ this.typeDescriptorCache.put(cacheKey, new TypeDescriptor(field))[ FD ]
Line_14 $$ TypeDescriptor typeDescriptor = new TypeDescriptor(property)-->Line_16 $$ this.typeDescriptorCache.put(cacheKey, typeDescriptor)[ FD ]
Line_7 $$ CacheKey cacheKey = new CacheKey(type, name, target instanceof Class)-->Line_15 $$ this.writerCache.put(cacheKey, method)[ FD ]
Line_12 $$ if (method != null) -->Line_13 $$ Property property = new Property(type, null, method)[ CD ]
Line_8 $$ if (this.writerCache.containsKey(cacheKey)) -->Line_9 $$ return true[ CD ]
Line_19 $$ Field field = findField(name, type, target)-->Line_20 $$ if (field != null) [ FD ]
Line_12 $$ if (method != null) -->Line_17 $$ return true[ CD ]
Line_12 $$ if (method != null) -->Line_16 $$ this.typeDescriptorCache.put(cacheKey, typeDescriptor)[ CD ]
Line_2 $$ public boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException -->Line_19 $$ Field field = findField(name, type, target)[ FD ]
Line_20 $$ if (field != null) -->Line_21 $$ this.writerCache.put(cacheKey, field)[ CD ]
Line_2 $$ public boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException -->Line_3 $$ if (target == null) [ FD ]
Line_2 $$ public boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException -->Line_12 $$ if (method != null) [ CD ]
Line_12 $$ if (method != null) -->Line_15 $$ this.writerCache.put(cacheKey, method)[ CD ]
Line_20 $$ if (field != null) -->Line_23 $$ return true[ CD ]
Line_12 $$ if (method != null) -->Line_19 $$ Field field = findField(name, type, target)[ CD ]
Line_19 $$ Field field = findField(name, type, target)-->Line_21 $$ this.writerCache.put(cacheKey, field)[ FD ]
Line_3 $$ if (target == null) -->Line_4 $$ return false[ CD ]
Line_2 $$ public boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException -->Line_8 $$ if (this.writerCache.containsKey(cacheKey)) [ CD ]
Line_2 $$ public boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException -->Line_3 $$ if (target == null) [ CD ]
Line_11 $$ Method method = findSetterForProperty(name, type, target)-->Line_12 $$ if (method != null) [ FD ]
Line_2 $$ public boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException -->Line_26 $$ return false[ CD ]
Line_20 $$ if (field != null) -->Line_22 $$ this.typeDescriptorCache.put(cacheKey, new TypeDescriptor(field))[ CD ]
Line_6 $$ Class<?> type = (target instanceof Class ? (Class<?>) target : target.getClass())-->Line_11 $$ Method method = findSetterForProperty(name, type, target)[ FD ]
Line_12 $$ if (method != null) -->Line_20 $$ if (field != null) [ CD ]
Line_12 $$ if (method != null) -->Line_14 $$ TypeDescriptor typeDescriptor = new TypeDescriptor(property)[ CD ]
Line_2 $$ public boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException -->Line_11 $$ Method method = findSetterForProperty(name, type, target)[ CD ]
Line_2 $$ public boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException -->Line_7 $$ CacheKey cacheKey = new CacheKey(type, name, target instanceof Class)[ CD ]
Line_6 $$ Class<?> type = (target instanceof Class ? (Class<?>) target : target.getClass())-->Line_19 $$ Field field = findField(name, type, target)[ FD ]
Line_7 $$ CacheKey cacheKey = new CacheKey(type, name, target instanceof Class)-->Line_8 $$ if (this.writerCache.containsKey(cacheKey)) [ FD ]
