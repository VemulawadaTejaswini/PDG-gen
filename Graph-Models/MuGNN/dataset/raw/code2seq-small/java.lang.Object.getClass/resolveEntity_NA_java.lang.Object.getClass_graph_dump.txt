Line_2 $$ public InputSource resolveEntity(String publicId, String systemId) throws IOException -->Line_18 $$ source.setSystemId(systemId)[ FD ]
Line_6 $$ if (systemId != null && systemId.endsWith(DTD_EXTENSION)) -->Line_8 $$ int dtdNameStart = systemId.indexOf(DTD_NAME, lastPathSeparator)[ CD ]
Line_7 $$ int lastPathSeparator = systemId.lastIndexOf("/")-->Line_8 $$ int dtdNameStart = systemId.indexOf(DTD_NAME, lastPathSeparator)[ FD ]
Line_6 $$ if (systemId != null && systemId.endsWith(DTD_EXTENSION)) -->Line_9 $$ if (dtdNameStart != -1) [ CD ]
Line_11 $$ if (logger.isTraceEnabled()) -->Line_12 $$ logger.trace("Trying to locate [" + dtdFile + "] in Spring jar on classpath")[ CD ]
Line_8 $$ int dtdNameStart = systemId.indexOf(DTD_NAME, lastPathSeparator)-->Line_9 $$ if (dtdNameStart != -1) [ FD ]
Line_2 $$ public InputSource resolveEntity(String publicId, String systemId) throws IOException -->Line_6 $$ if (systemId != null && systemId.endsWith(DTD_EXTENSION)) [ CD ]
Line_3 $$ if (logger.isTraceEnabled()) -->Line_4 $$ logger.trace("Trying to resolve XML entity with public ID [" + publicId + "] and system ID [" + systemId + "]")[ CD ]
Line_2 $$ public InputSource resolveEntity(String publicId, String systemId) throws IOException -->Line_7 $$ int lastPathSeparator = systemId.lastIndexOf("/")[ FD ]
Line_15 $$ Resource resource = new ClassPathResource(dtdFile, getClass())-->Line_16 $$ InputSource source = new InputSource(resource.getInputStream())[ FD ]
Line_6 $$ if (systemId != null && systemId.endsWith(DTD_EXTENSION)) -->Line_7 $$ int lastPathSeparator = systemId.lastIndexOf("/")[ CD ]
Line_16 $$ InputSource source = new InputSource(resource.getInputStream())-->Line_17 $$ source.setPublicId(publicId)[ FD ]
Line_2 $$ public InputSource resolveEntity(String publicId, String systemId) throws IOException -->Line_8 $$ int dtdNameStart = systemId.indexOf(DTD_NAME, lastPathSeparator)[ FD ]
Line_24 $$ if (logger.isDebugEnabled()) -->Line_25 $$ logger.debug("Could not resolve beans DTD [" + systemId + "]: not found in classpath", ex)[ CD ]
Line_2 $$ public InputSource resolveEntity(String publicId, String systemId) throws IOException -->Line_6 $$ if (systemId != null && systemId.endsWith(DTD_EXTENSION)) [ FD ]
Line_19 $$ if (logger.isDebugEnabled()) -->Line_20 $$ logger.debug("Found beans DTD [" + systemId + "] in classpath: " + dtdFile)[ CD ]
Line_9 $$ if (dtdNameStart != -1) -->Line_11 $$ if (logger.isTraceEnabled()) [ CD ]
Line_2 $$ public InputSource resolveEntity(String publicId, String systemId) throws IOException -->Line_17 $$ source.setPublicId(publicId)[ FD ]
Line_9 $$ if (dtdNameStart != -1) -->Line_10 $$ String dtdFile = DTD_FILENAME + DTD_EXTENSION[ CD ]
Line_2 $$ public InputSource resolveEntity(String publicId, String systemId) throws IOException -->Line_3 $$ if (logger.isTraceEnabled()) [ CD ]
Line_2 $$ public InputSource resolveEntity(String publicId, String systemId) throws IOException -->Line_30 $$ return null[ CD ]
Line_16 $$ InputSource source = new InputSource(resource.getInputStream())-->Line_18 $$ source.setSystemId(systemId)[ FD ]
