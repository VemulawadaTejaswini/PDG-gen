Line_3 $$ Object convertedValue = currentConvertedValue-->Line_28 $$ convertedValue = enumField.get(null)[ FD ]
Line_15 $$ if (logger.isTraceEnabled()) -->Line_16 $$ logger.trace("Enum class [" + enumType + "] cannot be loaded", ex)[ CD ]
Line_12 $$ Field enumField = enumValueType.getField(fieldName)-->Line_13 $$ convertedValue = enumField.get(null)[ FD ]
Line_6 $$ if (index > -1) -->Line_9 $$ ClassLoader cl = this.targetObject.getClass().getClassLoader()[ CD ]
Line_2 $$ private Object attemptToConvertStringToEnum(Class<?> requiredType, String trimmedValue, Object currentConvertedValue) -->Line_25 $$ if (convertedValue == currentConvertedValue) [ FD ]
Line_2 $$ private Object attemptToConvertStringToEnum(Class<?> requiredType, String trimmedValue, Object currentConvertedValue) -->Line_3 $$ Object convertedValue = currentConvertedValue[ CD ]
Line_11 $$ Class<?> enumValueType = ClassUtils.forName(enumType, cl)-->Line_12 $$ Field enumField = enumValueType.getField(fieldName)[ FD ]
Line_2 $$ private Object attemptToConvertStringToEnum(Class<?> requiredType, String trimmedValue, Object currentConvertedValue) -->Line_7 $$ String enumType = trimmedValue.substring(0, index)[ FD ]
Line_6 $$ if (index > -1) -->Line_8 $$ String fieldName = trimmedValue.substring(index + 1)[ CD ]
Line_19 $$ if (logger.isTraceEnabled()) -->Line_20 $$ logger.trace("Field [" + fieldName + "] isn't an enum value for type [" + enumType + "]", ex)[ CD ]
Line_2 $$ private Object attemptToConvertStringToEnum(Class<?> requiredType, String trimmedValue, Object currentConvertedValue) -->Line_8 $$ String fieldName = trimmedValue.substring(index + 1)[ FD ]
Line_2 $$ private Object attemptToConvertStringToEnum(Class<?> requiredType, String trimmedValue, Object currentConvertedValue) -->Line_4 $$ if (Enum.class == requiredType) [ CD ]
Line_3 $$ Object convertedValue = currentConvertedValue-->Line_25 $$ if (convertedValue == currentConvertedValue) [ FD ]
Line_13 $$ convertedValue = enumField.get(null)-->Line_25 $$ if (convertedValue == currentConvertedValue) [ FD ]
Line_4 $$ if (Enum.class == requiredType) -->Line_6 $$ if (index > -1) [ CD ]
Line_2 $$ private Object attemptToConvertStringToEnum(Class<?> requiredType, String trimmedValue, Object currentConvertedValue) -->Line_4 $$ if (Enum.class == requiredType) [ FD ]
Line_13 $$ convertedValue = enumField.get(null)-->Line_28 $$ convertedValue = enumField.get(null)[ FD ]
Line_12 $$ Field enumField = enumValueType.getField(fieldName)-->Line_28 $$ convertedValue = enumField.get(null)[ FD ]
Line_9 $$ ClassLoader cl = this.targetObject.getClass().getClassLoader()-->Line_11 $$ Class<?> enumValueType = ClassUtils.forName(enumType, cl)[ FD ]
Line_3 $$ Object convertedValue = currentConvertedValue-->Line_13 $$ convertedValue = enumField.get(null)[ FD ]
Line_2 $$ private Object attemptToConvertStringToEnum(Class<?> requiredType, String trimmedValue, Object currentConvertedValue) -->Line_27 $$ Field enumField = requiredType.getField(trimmedValue)[ FD ]
Line_30 $$ if (logger.isTraceEnabled()) -->Line_31 $$ logger.trace("Field [" + convertedValue + "] isn't an enum value", ex)[ CD ]
Line_8 $$ String fieldName = trimmedValue.substring(index + 1)-->Line_12 $$ Field enumField = enumValueType.getField(fieldName)[ FD ]
Line_2 $$ private Object attemptToConvertStringToEnum(Class<?> requiredType, String trimmedValue, Object currentConvertedValue) -->Line_25 $$ if (convertedValue == currentConvertedValue) [ CD ]
Line_7 $$ String enumType = trimmedValue.substring(0, index)-->Line_11 $$ Class<?> enumValueType = ClassUtils.forName(enumType, cl)[ FD ]
Line_2 $$ private Object attemptToConvertStringToEnum(Class<?> requiredType, String trimmedValue, Object currentConvertedValue) -->Line_5 $$ int index = trimmedValue.lastIndexOf(".")[ FD ]
Line_5 $$ int index = trimmedValue.lastIndexOf(".")-->Line_6 $$ if (index > -1) [ FD ]
Line_4 $$ if (Enum.class == requiredType) -->Line_5 $$ int index = trimmedValue.lastIndexOf(".")[ CD ]
Line_6 $$ if (index > -1) -->Line_7 $$ String enumType = trimmedValue.substring(0, index)[ CD ]
Line_2 $$ private Object attemptToConvertStringToEnum(Class<?> requiredType, String trimmedValue, Object currentConvertedValue) -->Line_35 $$ return convertedValue[ CD ]
Line_5 $$ int index = trimmedValue.lastIndexOf(".")-->Line_7 $$ String enumType = trimmedValue.substring(0, index)[ FD ]
