Line_2 $$ protected String resolveSymLink(@NotNull final String path) throws Exception -->Line_8 $$ return toRealPath.invoke(pathObj, myLinkOptions).toString()[ CD ]
Line_5 $$ final Object pathObj = myGetPath.invoke(myDefaultFileSystem, path, ArrayUtil.EMPTY_STRING_ARRAY)-->Line_6 $$ final Method toRealPath = pathObj.getClass().getMethod("toRealPath", myLinkOptions.getClass())[ FD ]
Line_2 $$ protected String resolveSymLink(@NotNull final String path) throws Exception -->Line_5 $$ final Object pathObj = myGetPath.invoke(myDefaultFileSystem, path, ArrayUtil.EMPTY_STRING_ARRAY)[ CD ]
Line_2 $$ protected String resolveSymLink(@NotNull final String path) throws Exception -->Line_5 $$ final Object pathObj = myGetPath.invoke(myDefaultFileSystem, path, ArrayUtil.EMPTY_STRING_ARRAY)[ FD ]
Line_5 $$ final Object pathObj = myGetPath.invoke(myDefaultFileSystem, path, ArrayUtil.EMPTY_STRING_ARRAY)-->Line_8 $$ return toRealPath.invoke(pathObj, myLinkOptions).toString()[ FD ]
Line_3 $$ if (!new File(path).exists())-->Line_4 $$ return null[ CD ]
Line_6 $$ final Method toRealPath = pathObj.getClass().getMethod("toRealPath", myLinkOptions.getClass())-->Line_7 $$ toRealPath.setAccessible(true)[ FD ]
Line_2 $$ protected String resolveSymLink(@NotNull final String path) throws Exception -->Line_6 $$ final Method toRealPath = pathObj.getClass().getMethod("toRealPath", myLinkOptions.getClass())[ CD ]
Line_2 $$ protected String resolveSymLink(@NotNull final String path) throws Exception -->Line_7 $$ toRealPath.setAccessible(true)[ CD ]
Line_6 $$ final Method toRealPath = pathObj.getClass().getMethod("toRealPath", myLinkOptions.getClass())-->Line_8 $$ return toRealPath.invoke(pathObj, myLinkOptions).toString()[ FD ]
Line_2 $$ protected String resolveSymLink(@NotNull final String path) throws Exception -->Line_3 $$ if (!new File(path).exists())[ CD ]
