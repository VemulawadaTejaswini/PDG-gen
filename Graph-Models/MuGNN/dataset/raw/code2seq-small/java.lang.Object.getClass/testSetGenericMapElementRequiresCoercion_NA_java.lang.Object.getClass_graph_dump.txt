Line_8 $$ for (Object o : ks) -->Line_9 $$ assertEquals(String.class, o.getClass())[ FD ]
Line_2 $$ public void testSetGenericMapElementRequiresCoercion() throws Exception -->Line_11 $$ Collection<?> vs = parse("mapOfStringToBoolean.values()").getValue(eContext, Collection.class)[ CD ]
Line_4 $$ Expression e = parse("mapOfStringToBoolean[42]")-->Line_6 $$ e.setValue(eContext, "true")[ FD ]
Line_2 $$ public void testSetGenericMapElementRequiresCoercion() throws Exception -->Line_6 $$ e.setValue(eContext, "true")[ CD ]
Line_8 $$ for (Object o : ks) -->Line_16 $$ assertEquals(Boolean.TRUE, o)[ FD ]
Line_8 $$ for (Object o : ks) -->Line_13 $$ assertEquals(Boolean.class, o.getClass())[ FD ]
Line_4 $$ Expression e = parse("mapOfStringToBoolean[42]")-->Line_5 $$ assertNull(e.getValue(eContext))[ FD ]
Line_2 $$ public void testSetGenericMapElementRequiresCoercion() throws Exception -->Line_5 $$ assertNull(e.getValue(eContext))[ CD ]
Line_4 $$ Expression e = parse("mapOfStringToBoolean[42]")-->Line_15 $$ Object o = e.getValue(eContext)[ FD ]
Line_3 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_15 $$ Object o = e.getValue(eContext)[ FD ]
Line_2 $$ public void testSetGenericMapElementRequiresCoercion() throws Exception -->Line_15 $$ Object o = e.getValue(eContext)[ CD ]
Line_2 $$ public void testSetGenericMapElementRequiresCoercion() throws Exception -->Line_7 $$ Set<?> ks = parse("mapOfStringToBoolean.keySet()").getValue(eContext, Set.class)[ CD ]
Line_3 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_7 $$ Set<?> ks = parse("mapOfStringToBoolean.keySet()").getValue(eContext, Set.class)[ FD ]
Line_3 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_6 $$ e.setValue(eContext, "true")[ FD ]
Line_2 $$ public void testSetGenericMapElementRequiresCoercion() throws Exception -->Line_3 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()[ CD ]
Line_3 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_11 $$ Collection<?> vs = parse("mapOfStringToBoolean.values()").getValue(eContext, Collection.class)[ FD ]
Line_3 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_5 $$ assertNull(e.getValue(eContext))[ FD ]
Line_2 $$ public void testSetGenericMapElementRequiresCoercion() throws Exception -->Line_16 $$ assertEquals(Boolean.TRUE, o)[ CD ]
Line_2 $$ public void testSetGenericMapElementRequiresCoercion() throws Exception -->Line_4 $$ Expression e = parse("mapOfStringToBoolean[42]")[ CD ]
