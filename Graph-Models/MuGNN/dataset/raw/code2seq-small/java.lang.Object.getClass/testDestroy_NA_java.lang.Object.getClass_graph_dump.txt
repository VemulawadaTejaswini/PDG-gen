Line_2 $$ public void testDestroy() throws RemoteException -->Line_9 $$ CountDownLatch countDownLatch = _mockRemoteSPI.countDownLatch[ CD ]
Line_2 $$ public void testDestroy() throws RemoteException -->Line_23 $$ _mockRemoteSPI.destroy()[ CD ]
Line_2 $$ public void testDestroy() throws RemoteException -->Line_10 $$ Assert.assertEquals(0, countDownLatch.getCount())[ CD ]
Line_2 $$ public void testDestroy() throws RemoteException -->Line_12 $$ UnicastRemoteObject.exportObject(_mockRemoteSPI, 0)[ CD ]
Line_2 $$ public void testDestroy() throws RemoteException -->Line_21 $$ _mockRemoteSPI.setFailOnDestroy(false)[ CD ]
Line_2 $$ public void testDestroy() throws RemoteException -->Line_11 $$ _mockRemoteSPI.setFailOnDestroy(true)[ CD ]
Line_2 $$ public void testDestroy() throws RemoteException -->Line_22 $$ UnicastRemoteObject.exportObject(_mockRemoteSPI, 0)[ CD ]
Line_2 $$ public void testDestroy() throws RemoteException -->Line_20 $$ _mockRemoteSPI.countDownLatch = null[ CD ]
Line_2 $$ public void testDestroy() throws RemoteException -->Line_19 $$ unexported()[ CD ]
Line_2 $$ public void testDestroy() throws RemoteException -->Line_24 $$ unexported()[ CD ]
Line_9 $$ CountDownLatch countDownLatch = _mockRemoteSPI.countDownLatch-->Line_10 $$ Assert.assertEquals(0, countDownLatch.getCount())[ FD ]
