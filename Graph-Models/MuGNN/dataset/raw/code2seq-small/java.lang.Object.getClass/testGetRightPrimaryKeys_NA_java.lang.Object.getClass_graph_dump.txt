Line_2 $$ public void testGetRightPrimaryKeys() -->Line_13 $$ Assert.assertArrayEquals(new long[] [ CD ]
Line_9 $$ PortalCache<Long, long[]> leftToRightPortalCache = _tableMapperImpl.leftToRightPortalCache-->Line_14 $$ leftToRightPortalCache.remove(leftPrimaryKey)[ FD ]
Line_2 $$ public void testGetRightPrimaryKeys() -->Line_15 $$ MockGetRightPrimaryKeysSqlQuery mockGetRightPrimaryKeysByLeftPrimaryKeyMappingSqlQuery = (MockGetRightPrimaryKeysSqlQuery) _tableMapperImpl.getRightPrimaryKeysSqlQuery[ CD ]
Line_2 $$ public void testGetRightPrimaryKeys() -->Line_16 $$ mockGetRightPrimaryKeysByLeftPrimaryKeyMappingSqlQuery.setDatabaseError(true)[ CD ]
Line_15 $$ MockGetRightPrimaryKeysSqlQuery mockGetRightPrimaryKeysByLeftPrimaryKeyMappingSqlQuery = (MockGetRightPrimaryKeysSqlQuery) _tableMapperImpl.getRightPrimaryKeysSqlQuery-->Line_24 $$ mockGetRightPrimaryKeysByLeftPrimaryKeyMappingSqlQuery.setDatabaseError(false)[ FD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_11 $$ _mappingStore.put(leftPrimaryKey, new long[] [ FD ]
Line_2 $$ public void testGetRightPrimaryKeys() -->Line_11 $$ _mappingStore.put(leftPrimaryKey, new long[] [ CD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_12 $$ rightPrimaryKeys = _tableMapperImpl.getRightPrimaryKeys(leftPrimaryKey)[ FD ]
Line_2 $$ public void testGetRightPrimaryKeys() -->Line_6 $$ Assert.assertSame(rightPrimaryKeys, _tableMapperImpl.getRightPrimaryKeys(leftPrimaryKey))[ CD ]
Line_2 $$ public void testGetRightPrimaryKeys() -->Line_3 $$ long leftPrimaryKey = 1[ CD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_18 $$ _tableMapperImpl.getRightPrimaryKeys(leftPrimaryKey)[ FD ]
Line_4 $$ long[] rightPrimaryKeys = _tableMapperImpl.getRightPrimaryKeys(leftPrimaryKey)-->Line_12 $$ rightPrimaryKeys = _tableMapperImpl.getRightPrimaryKeys(leftPrimaryKey)[ FD ]
Line_2 $$ public void testGetRightPrimaryKeys() -->Line_14 $$ leftToRightPortalCache.remove(leftPrimaryKey)[ CD ]
Line_2 $$ public void testGetRightPrimaryKeys() -->Line_7 $$ long rightPrimaryKey1 = 3[ CD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_4 $$ long[] rightPrimaryKeys = _tableMapperImpl.getRightPrimaryKeys(leftPrimaryKey)[ FD ]
Line_15 $$ MockGetRightPrimaryKeysSqlQuery mockGetRightPrimaryKeysByLeftPrimaryKeyMappingSqlQuery = (MockGetRightPrimaryKeysSqlQuery) _tableMapperImpl.getRightPrimaryKeysSqlQuery-->Line_16 $$ mockGetRightPrimaryKeysByLeftPrimaryKeyMappingSqlQuery.setDatabaseError(true)[ FD ]
Line_12 $$ rightPrimaryKeys = _tableMapperImpl.getRightPrimaryKeys(leftPrimaryKey)-->Line_13 $$ Assert.assertArrayEquals(new long[] [ FD ]
Line_4 $$ long[] rightPrimaryKeys = _tableMapperImpl.getRightPrimaryKeys(leftPrimaryKey)-->Line_13 $$ Assert.assertArrayEquals(new long[] [ FD ]
Line_2 $$ public void testGetRightPrimaryKeys() -->Line_12 $$ rightPrimaryKeys = _tableMapperImpl.getRightPrimaryKeys(leftPrimaryKey)[ CD ]
Line_9 $$ PortalCache<Long, long[]> leftToRightPortalCache = _tableMapperImpl.leftToRightPortalCache-->Line_10 $$ leftToRightPortalCache.remove(leftPrimaryKey)[ FD ]
Line_2 $$ public void testGetRightPrimaryKeys() -->Line_8 $$ long rightPrimaryKey2 = 2[ CD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_10 $$ leftToRightPortalCache.remove(leftPrimaryKey)[ FD ]
Line_20 $$ Throwable cause = se.getCause()-->Line_21 $$ Assert.assertSame(RuntimeException.class, cause.getClass())[ FD ]
Line_2 $$ public void testGetRightPrimaryKeys() -->Line_9 $$ PortalCache<Long, long[]> leftToRightPortalCache = _tableMapperImpl.leftToRightPortalCache[ CD ]
Line_2 $$ public void testGetRightPrimaryKeys() -->Line_5 $$ Assert.assertEquals(0, rightPrimaryKeys.length)[ CD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_14 $$ leftToRightPortalCache.remove(leftPrimaryKey)[ FD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_6 $$ Assert.assertSame(rightPrimaryKeys, _tableMapperImpl.getRightPrimaryKeys(leftPrimaryKey))[ FD ]
Line_4 $$ long[] rightPrimaryKeys = _tableMapperImpl.getRightPrimaryKeys(leftPrimaryKey)-->Line_6 $$ Assert.assertSame(rightPrimaryKeys, _tableMapperImpl.getRightPrimaryKeys(leftPrimaryKey))[ FD ]
Line_2 $$ public void testGetRightPrimaryKeys() -->Line_4 $$ long[] rightPrimaryKeys = _tableMapperImpl.getRightPrimaryKeys(leftPrimaryKey)[ CD ]
Line_20 $$ Throwable cause = se.getCause()-->Line_22 $$ Assert.assertEquals("Database error", cause.getMessage())[ FD ]
Line_2 $$ public void testGetRightPrimaryKeys() -->Line_10 $$ leftToRightPortalCache.remove(leftPrimaryKey)[ CD ]
