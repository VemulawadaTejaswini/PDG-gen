Line_12 $$ if (invocationTarget == null || invocationTarget.member instanceof Method) -->Line_13 $$ Method method = (Method) (invocationTarget != null ? invocationTarget.member : null)[ CD ]
Line_15 $$ method = findGetterForProperty(name, type, target)-->Line_18 $$ ReflectionUtils.makeAccessible(method)[ FD ]
Line_22 $$ if (method != null) -->Line_23 $$ return new OptimalPropertyAccessor(invocationTarget)[ CD ]
Line_6 $$ Class<?> type = (target instanceof Class ? (Class<?>) target : target.getClass())-->Line_15 $$ method = findGetterForProperty(name, type, target)[ FD ]
Line_2 $$ public PropertyAccessor createOptimalAccessor(EvaluationContext evalContext, Object target, String name) -->Line_15 $$ method = findGetterForProperty(name, type, target)[ FD ]
Line_26 $$ if (invocationTarget == null || invocationTarget.member instanceof Field) -->Line_36 $$ if (field != null) [ CD ]
Line_12 $$ if (invocationTarget == null || invocationTarget.member instanceof Method) -->Line_14 $$ if (method == null) [ CD ]
Line_2 $$ public PropertyAccessor createOptimalAccessor(EvaluationContext evalContext, Object target, String name) -->Line_6 $$ Class<?> type = (target instanceof Class ? (Class<?>) target : target.getClass())[ FD ]
Line_13 $$ Method method = (Method) (invocationTarget != null ? invocationTarget.member : null)-->Line_15 $$ method = findGetterForProperty(name, type, target)[ FD ]
Line_11 $$ InvokerPair invocationTarget = this.readerCache.get(cacheKey)-->Line_31 $$ invocationTarget = new InvokerPair(field, new TypeDescriptor(field))[ FD ]
Line_6 $$ Class<?> type = (target instanceof Class ? (Class<?>) target : target.getClass())-->Line_7 $$ if (type.isArray()) [ FD ]
Line_30 $$ if (field != null) -->Line_33 $$ this.readerCache.put(cacheKey, invocationTarget)[ CD ]
Line_29 $$ field = findField(name, type, target instanceof Class)-->Line_32 $$ ReflectionUtils.makeAccessible(field)[ FD ]
Line_30 $$ if (field != null) -->Line_32 $$ ReflectionUtils.makeAccessible(field)[ CD ]
Line_29 $$ field = findField(name, type, target instanceof Class)-->Line_36 $$ if (field != null) [ FD ]
Line_7 $$ if (type.isArray()) -->Line_8 $$ return this[ CD ]
Line_2 $$ public PropertyAccessor createOptimalAccessor(EvaluationContext evalContext, Object target, String name) -->Line_7 $$ if (type.isArray()) [ CD ]
Line_15 $$ method = findGetterForProperty(name, type, target)-->Line_16 $$ if (method != null) [ FD ]
Line_27 $$ Field field = (invocationTarget != null ? (Field) invocationTarget.member : null)-->Line_32 $$ ReflectionUtils.makeAccessible(field)[ FD ]
Line_2 $$ public PropertyAccessor createOptimalAccessor(EvaluationContext evalContext, Object target, String name) -->Line_11 $$ InvokerPair invocationTarget = this.readerCache.get(cacheKey)[ CD ]
Line_26 $$ if (invocationTarget == null || invocationTarget.member instanceof Field) -->Line_28 $$ if (field == null) [ CD ]
Line_14 $$ if (method == null) -->Line_16 $$ if (method != null) [ CD ]
Line_12 $$ if (invocationTarget == null || invocationTarget.member instanceof Method) -->Line_22 $$ if (method != null) [ CD ]
Line_16 $$ if (method != null) -->Line_18 $$ ReflectionUtils.makeAccessible(method)[ CD ]
Line_2 $$ public PropertyAccessor createOptimalAccessor(EvaluationContext evalContext, Object target, String name) -->Line_26 $$ if (invocationTarget == null || invocationTarget.member instanceof Field) [ CD ]
Line_2 $$ public PropertyAccessor createOptimalAccessor(EvaluationContext evalContext, Object target, String name) -->Line_3 $$ if (target == null) [ CD ]
Line_27 $$ Field field = (invocationTarget != null ? (Field) invocationTarget.member : null)-->Line_30 $$ if (field != null) [ FD ]
Line_30 $$ if (field != null) -->Line_31 $$ invocationTarget = new InvokerPair(field, new TypeDescriptor(field))[ CD ]
Line_11 $$ InvokerPair invocationTarget = this.readerCache.get(cacheKey)-->Line_33 $$ this.readerCache.put(cacheKey, invocationTarget)[ FD ]
Line_16 $$ if (method != null) -->Line_17 $$ invocationTarget = new InvokerPair(method, new TypeDescriptor(new MethodParameter(method, -1)))[ CD ]
Line_10 $$ CacheKey cacheKey = new CacheKey(type, name, target instanceof Class)-->Line_11 $$ InvokerPair invocationTarget = this.readerCache.get(cacheKey)[ FD ]
Line_27 $$ Field field = (invocationTarget != null ? (Field) invocationTarget.member : null)-->Line_36 $$ if (field != null) [ FD ]
Line_14 $$ if (method == null) -->Line_15 $$ method = findGetterForProperty(name, type, target)[ CD ]
Line_2 $$ public PropertyAccessor createOptimalAccessor(EvaluationContext evalContext, Object target, String name) -->Line_6 $$ Class<?> type = (target instanceof Class ? (Class<?>) target : target.getClass())[ CD ]
Line_16 $$ if (method != null) -->Line_19 $$ this.readerCache.put(cacheKey, invocationTarget)[ CD ]
Line_2 $$ public PropertyAccessor createOptimalAccessor(EvaluationContext evalContext, Object target, String name) -->Line_10 $$ CacheKey cacheKey = new CacheKey(type, name, target instanceof Class)[ CD ]
Line_11 $$ InvokerPair invocationTarget = this.readerCache.get(cacheKey)-->Line_19 $$ this.readerCache.put(cacheKey, invocationTarget)[ FD ]
Line_10 $$ CacheKey cacheKey = new CacheKey(type, name, target instanceof Class)-->Line_19 $$ this.readerCache.put(cacheKey, invocationTarget)[ FD ]
Line_2 $$ public PropertyAccessor createOptimalAccessor(EvaluationContext evalContext, Object target, String name) -->Line_40 $$ return this[ CD ]
Line_29 $$ field = findField(name, type, target instanceof Class)-->Line_30 $$ if (field != null) [ FD ]
Line_17 $$ invocationTarget = new InvokerPair(method, new TypeDescriptor(new MethodParameter(method, -1)))-->Line_31 $$ invocationTarget = new InvokerPair(field, new TypeDescriptor(field))[ FD ]
Line_27 $$ Field field = (invocationTarget != null ? (Field) invocationTarget.member : null)-->Line_28 $$ if (field == null) [ FD ]
Line_15 $$ method = findGetterForProperty(name, type, target)-->Line_22 $$ if (method != null) [ FD ]
Line_13 $$ Method method = (Method) (invocationTarget != null ? invocationTarget.member : null)-->Line_22 $$ if (method != null) [ FD ]
Line_17 $$ invocationTarget = new InvokerPair(method, new TypeDescriptor(new MethodParameter(method, -1)))-->Line_33 $$ this.readerCache.put(cacheKey, invocationTarget)[ FD ]
Line_31 $$ invocationTarget = new InvokerPair(field, new TypeDescriptor(field))-->Line_33 $$ this.readerCache.put(cacheKey, invocationTarget)[ FD ]
Line_28 $$ if (field == null) -->Line_30 $$ if (field != null) [ CD ]
Line_36 $$ if (field != null) -->Line_37 $$ return new OptimalPropertyAccessor(invocationTarget)[ CD ]
Line_28 $$ if (field == null) -->Line_29 $$ field = findField(name, type, target instanceof Class)[ CD ]
Line_6 $$ Class<?> type = (target instanceof Class ? (Class<?>) target : target.getClass())-->Line_29 $$ field = findField(name, type, target instanceof Class)[ FD ]
Line_26 $$ if (invocationTarget == null || invocationTarget.member instanceof Field) -->Line_27 $$ Field field = (invocationTarget != null ? (Field) invocationTarget.member : null)[ CD ]
Line_2 $$ public PropertyAccessor createOptimalAccessor(EvaluationContext evalContext, Object target, String name) -->Line_3 $$ if (target == null) [ FD ]
Line_13 $$ Method method = (Method) (invocationTarget != null ? invocationTarget.member : null)-->Line_16 $$ if (method != null) [ FD ]
Line_13 $$ Method method = (Method) (invocationTarget != null ? invocationTarget.member : null)-->Line_14 $$ if (method == null) [ FD ]
Line_3 $$ if (target == null) -->Line_4 $$ return this[ CD ]
Line_27 $$ Field field = (invocationTarget != null ? (Field) invocationTarget.member : null)-->Line_29 $$ field = findField(name, type, target instanceof Class)[ FD ]
Line_11 $$ InvokerPair invocationTarget = this.readerCache.get(cacheKey)-->Line_17 $$ invocationTarget = new InvokerPair(method, new TypeDescriptor(new MethodParameter(method, -1)))[ FD ]
Line_10 $$ CacheKey cacheKey = new CacheKey(type, name, target instanceof Class)-->Line_33 $$ this.readerCache.put(cacheKey, invocationTarget)[ FD ]
Line_17 $$ invocationTarget = new InvokerPair(method, new TypeDescriptor(new MethodParameter(method, -1)))-->Line_19 $$ this.readerCache.put(cacheKey, invocationTarget)[ FD ]
Line_2 $$ public PropertyAccessor createOptimalAccessor(EvaluationContext evalContext, Object target, String name) -->Line_12 $$ if (invocationTarget == null || invocationTarget.member instanceof Method) [ CD ]
Line_2 $$ public PropertyAccessor createOptimalAccessor(EvaluationContext evalContext, Object target, String name) -->Line_29 $$ field = findField(name, type, target instanceof Class)[ FD ]
Line_13 $$ Method method = (Method) (invocationTarget != null ? invocationTarget.member : null)-->Line_18 $$ ReflectionUtils.makeAccessible(method)[ FD ]
