Line_2 $$ public void isAssignableElementTypes() throws Exception -->Line_3 $$ assertTrue(new TypeDescriptor(getClass().getField("listField")).isAssignableTo(new TypeDescriptor(getClass().getField("listField"))))[ CD ]
Line_2 $$ public void isAssignableElementTypes() throws Exception -->Line_7 $$ assertTrue(TypeDescriptor.valueOf(List.class).isAssignableTo(new TypeDescriptor(getClass().getField("listField"))))[ CD ]
Line_2 $$ public void isAssignableElementTypes() throws Exception -->Line_6 $$ assertFalse(new TypeDescriptor(getClass().getField("isAssignableElementTypes")).isAssignableTo(new TypeDescriptor(getClass().getField("listField"))))[ CD ]
Line_2 $$ public void isAssignableElementTypes() throws Exception -->Line_4 $$ assertTrue(new TypeDescriptor(getClass().getField("notGenericList")).isAssignableTo(new TypeDescriptor(getClass().getField("listField"))))[ CD ]
Line_2 $$ public void isAssignableElementTypes() throws Exception -->Line_5 $$ assertTrue(new TypeDescriptor(getClass().getField("listField")).isAssignableTo(new TypeDescriptor(getClass().getField("notGenericList"))))[ CD ]
