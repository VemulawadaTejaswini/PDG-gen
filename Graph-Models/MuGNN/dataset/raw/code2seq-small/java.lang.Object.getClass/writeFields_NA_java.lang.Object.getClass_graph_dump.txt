Line_8 $$ Field field = metadata.field-->Line_29 $$ writeValue(value, field.getType(), metadata.elementType)[ FD ]
Line_3 $$ Class type = object.getClass()-->Line_33 $$ ex.addTrace(field + " (" + type.getName() + ")")[ FD ]
Line_3 $$ Class type = object.getClass()-->Line_4 $$ Object[] defaultValues = getDefaultValues(type)[ FD ]
Line_18 $$ if (value.getClass().isArray() && defaultValue.getClass().isArray()) -->Line_20 $$ equals2[0] = defaultValue[ CD ]
Line_15 $$ if (value != null && defaultValue != null) -->Line_18 $$ if (value.getClass().isArray() && defaultValue.getClass().isArray()) [ CD ]
Line_36 $$ SerializationException ex = new SerializationException(runtimeEx)-->Line_37 $$ ex.addTrace(field + " (" + type.getName() + ")")[ FD ]
Line_8 $$ Field field = metadata.field-->Line_28 $$ writer.name(field.getName())[ FD ]
Line_2 $$ public void writeFields(Object object) -->Line_3 $$ Class type = object.getClass()[ CD ]
Line_15 $$ if (value != null && defaultValue != null) -->Line_16 $$ if (value.equals(defaultValue))[ CD ]
Line_12 $$ Object defaultValue = defaultValues[i++]-->Line_18 $$ if (value.getClass().isArray() && defaultValue.getClass().isArray()) [ FD ]
Line_2 $$ public void writeFields(Object object) -->Line_5 $$ OrderedMap<String, FieldMetadata> fields = getFields(type)[ CD ]
Line_3 $$ Class type = object.getClass()-->Line_27 $$ System.out.println("Writing field: " + field.getName() + " (" + type.getName() + ")")[ FD ]
Line_10 $$ Object value = field.get(object)-->Line_16 $$ if (value.equals(defaultValue))[ FD ]
Line_8 $$ Field field = metadata.field-->Line_10 $$ Object value = field.get(object)[ FD ]
Line_3 $$ Class type = object.getClass()-->Line_5 $$ OrderedMap<String, FieldMetadata> fields = getFields(type)[ FD ]
Line_3 $$ Class type = object.getClass()-->Line_37 $$ ex.addTrace(field + " (" + type.getName() + ")")[ FD ]
Line_10 $$ Object value = field.get(object)-->Line_29 $$ writeValue(value, field.getType(), metadata.elementType)[ FD ]
Line_6 $$ int i = 0-->Line_12 $$ Object defaultValue = defaultValues[i++][ FD ]
Line_2 $$ public void writeFields(Object object) -->Line_3 $$ Class type = object.getClass()[ FD ]
Line_11 $$ if (defaultValues != null) -->Line_15 $$ if (value != null && defaultValue != null) [ CD ]
Line_4 $$ Object[] defaultValues = getDefaultValues(type)-->Line_11 $$ if (defaultValues != null) [ FD ]
Line_12 $$ Object defaultValue = defaultValues[i++]-->Line_16 $$ if (value.equals(defaultValue))[ FD ]
Line_18 $$ if (value.getClass().isArray() && defaultValue.getClass().isArray()) -->Line_21 $$ if (Arrays.deepEquals(equals1, equals2))[ CD ]
Line_8 $$ Field field = metadata.field-->Line_31 $$ throw new SerializationException("Error accessing field: " + field.getName() + " (" + type.getName() + ")", ex)[ FD ]
Line_12 $$ Object defaultValue = defaultValues[i++]-->Line_20 $$ equals2[0] = defaultValue[ FD ]
Line_3 $$ Class type = object.getClass()-->Line_31 $$ throw new SerializationException("Error accessing field: " + field.getName() + " (" + type.getName() + ")", ex)[ FD ]
Line_11 $$ if (defaultValues != null) -->Line_12 $$ Object defaultValue = defaultValues[i++][ CD ]
Line_26 $$ if (debug)-->Line_27 $$ System.out.println("Writing field: " + field.getName() + " (" + type.getName() + ")")[ CD ]
Line_2 $$ public void writeFields(Object object) -->Line_6 $$ int i = 0[ CD ]
Line_2 $$ public void writeFields(Object object) -->Line_4 $$ Object[] defaultValues = getDefaultValues(type)[ CD ]
Line_2 $$ public void writeFields(Object object) -->Line_10 $$ Object value = field.get(object)[ FD ]
Line_10 $$ Object value = field.get(object)-->Line_18 $$ if (value.getClass().isArray() && defaultValue.getClass().isArray()) [ FD ]
Line_18 $$ if (value.getClass().isArray() && defaultValue.getClass().isArray()) -->Line_19 $$ equals1[0] = value[ CD ]
Line_8 $$ Field field = metadata.field-->Line_27 $$ System.out.println("Writing field: " + field.getName() + " (" + type.getName() + ")")[ FD ]
Line_11 $$ if (defaultValues != null) -->Line_13 $$ if (value == null && defaultValue == null)[ CD ]
Line_10 $$ Object value = field.get(object)-->Line_19 $$ equals1[0] = value[ FD ]
