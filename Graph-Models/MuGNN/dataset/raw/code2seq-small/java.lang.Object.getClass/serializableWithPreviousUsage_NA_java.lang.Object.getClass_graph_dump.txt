Line_2 $$ public void serializableWithPreviousUsage() throws Exception -->Line_4 $$ TransactionalService service = context.getBean("service", TransactionalService.class)[ CD ]
Line_4 $$ TransactionalService service = context.getBean("service", TransactionalService.class)-->Line_7 $$ service.setSomething("someName")[ FD ]
Line_2 $$ public void serializableWithPreviousUsage() throws Exception -->Line_5 $$ service.setSomething("someName")[ CD ]
Line_6 $$ service = (TransactionalService) SerializationTestUtils.serializeAndDeserialize(service)-->Line_7 $$ service.setSomething("someName")[ FD ]
Line_3 $$ ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext("annotationDrivenProxyTargetClassTests.xml", getClass())-->Line_4 $$ TransactionalService service = context.getBean("service", TransactionalService.class)[ FD ]
Line_2 $$ public void serializableWithPreviousUsage() throws Exception -->Line_7 $$ service.setSomething("someName")[ CD ]
Line_4 $$ TransactionalService service = context.getBean("service", TransactionalService.class)-->Line_6 $$ service = (TransactionalService) SerializationTestUtils.serializeAndDeserialize(service)[ FD ]
Line_2 $$ public void serializableWithPreviousUsage() throws Exception -->Line_3 $$ ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext("annotationDrivenProxyTargetClassTests.xml", getClass())[ CD ]
Line_2 $$ public void serializableWithPreviousUsage() throws Exception -->Line_6 $$ service = (TransactionalService) SerializationTestUtils.serializeAndDeserialize(service)[ CD ]
Line_4 $$ TransactionalService service = context.getBean("service", TransactionalService.class)-->Line_5 $$ service.setSomething("someName")[ FD ]
