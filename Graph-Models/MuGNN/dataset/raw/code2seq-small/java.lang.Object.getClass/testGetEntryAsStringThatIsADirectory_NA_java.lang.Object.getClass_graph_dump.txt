Line_2 $$ public void testGetEntryAsStringThatIsADirectory() throws Exception -->Line_4 $$ Assert.assertNull(zipReader.getEntryAsString("1"))[ CD ]
Line_3 $$ ZipReader zipReader = new ZipReaderImpl(DependenciesTestUtil.getDependencyAsInputStream(getClass(), _ZIP_FILE_PATH))-->Line_4 $$ Assert.assertNull(zipReader.getEntryAsString("1"))[ FD ]
Line_3 $$ ZipReader zipReader = new ZipReaderImpl(DependenciesTestUtil.getDependencyAsInputStream(getClass(), _ZIP_FILE_PATH))-->Line_6 $$ zipReader.close()[ FD ]
Line_2 $$ public void testGetEntryAsStringThatIsADirectory() throws Exception -->Line_5 $$ Assert.assertNull(zipReader.getEntryAsString("/1"))[ CD ]
Line_3 $$ ZipReader zipReader = new ZipReaderImpl(DependenciesTestUtil.getDependencyAsInputStream(getClass(), _ZIP_FILE_PATH))-->Line_5 $$ Assert.assertNull(zipReader.getEntryAsString("/1"))[ FD ]
Line_2 $$ public void testGetEntryAsStringThatIsADirectory() throws Exception -->Line_6 $$ zipReader.close()[ CD ]
Line_2 $$ public void testGetEntryAsStringThatIsADirectory() throws Exception -->Line_3 $$ ZipReader zipReader = new ZipReaderImpl(DependenciesTestUtil.getDependencyAsInputStream(getClass(), _ZIP_FILE_PATH))[ CD ]
