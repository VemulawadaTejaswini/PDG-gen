Line_3 $$ TypeDescriptor t1 = TypeDescriptor.nested(new MethodParameter(getClass().getMethod("test6", List.class), 0), 1)-->Line_5 $$ assertEquals("java.util.List<?>", t1.toString())[ FD ]
Line_2 $$ public void nestedNotParameterized() throws Exception -->Line_3 $$ TypeDescriptor t1 = TypeDescriptor.nested(new MethodParameter(getClass().getMethod("test6", List.class), 0), 1)[ CD ]
Line_2 $$ public void nestedNotParameterized() throws Exception -->Line_6 $$ TypeDescriptor t2 = TypeDescriptor.nested(new MethodParameter(getClass().getMethod("test6", List.class), 0), 2)[ CD ]
Line_6 $$ TypeDescriptor t2 = TypeDescriptor.nested(new MethodParameter(getClass().getMethod("test6", List.class), 0), 2)-->Line_7 $$ assertNull(t2)[ FD ]
Line_2 $$ public void nestedNotParameterized() throws Exception -->Line_5 $$ assertEquals("java.util.List<?>", t1.toString())[ CD ]
Line_2 $$ public void nestedNotParameterized() throws Exception -->Line_7 $$ assertNull(t2)[ CD ]
Line_2 $$ public void nestedNotParameterized() throws Exception -->Line_4 $$ assertEquals(List.class, t1.getType())[ CD ]
Line_3 $$ TypeDescriptor t1 = TypeDescriptor.nested(new MethodParameter(getClass().getMethod("test6", List.class), 0), 1)-->Line_4 $$ assertEquals(List.class, t1.getType())[ FD ]
