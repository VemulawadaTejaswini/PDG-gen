Line_2 $$ public static Object arrayLoad(final Object array, Object index, final Definition definition, final boolean indexsafe) -->Line_20 $$ throw new IllegalArgumentException("Error loading value from " + "array class [" + array.getClass().getCanonicalName() + "].", throwable)[ FD ]
Line_2 $$ public static Object arrayLoad(final Object array, Object index, final Definition definition, final boolean indexsafe) -->Line_10 $$ index = transform.method.handle.invoke(index)[ FD ]
Line_2 $$ public static Object arrayLoad(final Object array, Object index, final Definition definition, final boolean indexsafe) -->Line_3 $$ if (array instanceof Map) [ FD ]
Line_2 $$ public static Object arrayLoad(final Object array, Object index, final Definition definition, final boolean indexsafe) -->Line_3 $$ if (array instanceof Map) [ CD ]
Line_2 $$ public static Object arrayLoad(final Object array, Object index, final Definition definition, final boolean indexsafe) -->Line_4 $$ return ((Map) array).get(index)[ FD ]
Line_7 $$ if (!indexsafe) -->Line_9 $$ if (transform != null) [ CD ]
Line_2 $$ public static Object arrayLoad(final Object array, Object index, final Definition definition, final boolean indexsafe) -->Line_7 $$ if (!indexsafe) [ FD ]
Line_3 $$ if (array instanceof Map) -->Line_4 $$ return ((Map) array).get(index)[ CD ]
Line_9 $$ if (transform != null) -->Line_10 $$ index = transform.method.handle.invoke(index)[ CD ]
Line_2 $$ public static Object arrayLoad(final Object array, Object index, final Definition definition, final boolean indexsafe) -->Line_25 $$ throw new IllegalArgumentException("Attempting to address a non-array type " + "[" + array.getClass().getCanonicalName() + "] as an array.")[ FD ]
Line_2 $$ public static Object arrayLoad(final Object array, Object index, final Definition definition, final boolean indexsafe) -->Line_16 $$ if (array.getClass().isArray()) [ FD ]
Line_7 $$ if (!indexsafe) -->Line_8 $$ final Transform transform = getTransform(index.getClass(), Integer.class, definition)[ CD ]
Line_2 $$ public static Object arrayLoad(final Object array, Object index, final Definition definition, final boolean indexsafe) -->Line_18 $$ return Array.get(array, (int) index)[ FD ]
Line_16 $$ if (array.getClass().isArray()) -->Line_22 $$ if (array instanceof List) [ CD ]
Line_8 $$ final Transform transform = getTransform(index.getClass(), Integer.class, definition)-->Line_9 $$ if (transform != null) [ FD ]
Line_2 $$ public static Object arrayLoad(final Object array, Object index, final Definition definition, final boolean indexsafe) -->Line_22 $$ if (array instanceof List) [ FD ]
Line_2 $$ public static Object arrayLoad(final Object array, Object index, final Definition definition, final boolean indexsafe) -->Line_8 $$ final Transform transform = getTransform(index.getClass(), Integer.class, definition)[ FD ]
Line_3 $$ if (array instanceof Map) -->Line_16 $$ if (array.getClass().isArray()) [ CD ]
Line_22 $$ if (array instanceof List) -->Line_23 $$ return ((List) array).get((int) index)[ CD ]
