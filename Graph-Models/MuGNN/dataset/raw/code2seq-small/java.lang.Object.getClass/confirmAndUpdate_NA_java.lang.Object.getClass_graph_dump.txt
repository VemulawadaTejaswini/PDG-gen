Line_2 $$ private boolean confirmAndUpdate(final X509Certificate[] chain, boolean addToKeyStore, boolean askUser) -->Line_6 $$ if (threadClassName.equals("sun.awt.image.ImageFetcher")) [ CD ]
Line_2 $$ private boolean confirmAndUpdate(final X509Certificate[] chain, boolean addToKeyStore, boolean askUser) -->Line_17 $$ boolean accepted = askUser && CertificateManager.showAcceptDialog(new Callable<DialogWrapper>() [ CD ]
Line_2 $$ private boolean confirmAndUpdate(final X509Certificate[] chain, boolean addToKeyStore, boolean askUser) -->Line_10 $$ if (app.isUnitTestMode() || app.isHeadlessEnvironment() || CertificateManager.getInstance().getState().ACCEPT_AUTOMATICALLY) [ CD ]
Line_2 $$ private boolean confirmAndUpdate(final X509Certificate[] chain, boolean addToKeyStore, boolean askUser) -->Line_3 $$ Application app = ApplicationManager.getApplication()[ CD ]
Line_24 $$ if (addToKeyStore) -->Line_25 $$ myCustomManager.addCertificate(endPoint)[ CD ]
Line_12 $$ if (addToKeyStore) -->Line_13 $$ myCustomManager.addCertificate(endPoint)[ CD ]
Line_2 $$ private boolean confirmAndUpdate(final X509Certificate[] chain, boolean addToKeyStore, boolean askUser) -->Line_5 $$ String threadClassName = StringUtil.notNullize(Thread.currentThread().getClass().getCanonicalName())[ CD ]
Line_22 $$ if (accepted) -->Line_24 $$ if (addToKeyStore) [ CD ]
Line_4 $$ final X509Certificate endPoint = chain[0]-->Line_25 $$ myCustomManager.addCertificate(endPoint)[ FD ]
Line_2 $$ private boolean confirmAndUpdate(final X509Certificate[] chain, boolean addToKeyStore, boolean askUser) -->Line_4 $$ final X509Certificate endPoint = chain[0][ CD ]
Line_4 $$ final X509Certificate endPoint = chain[0]-->Line_13 $$ myCustomManager.addCertificate(endPoint)[ FD ]
Line_10 $$ if (app.isUnitTestMode() || app.isHeadlessEnvironment() || CertificateManager.getInstance().getState().ACCEPT_AUTOMATICALLY) -->Line_15 $$ return true[ CD ]
Line_22 $$ if (accepted) -->Line_23 $$ LOG.info("Certificate was accepted by user")[ CD ]
Line_2 $$ private boolean confirmAndUpdate(final X509Certificate[] chain, boolean addToKeyStore, boolean askUser) -->Line_22 $$ if (accepted) [ CD ]
Line_5 $$ String threadClassName = StringUtil.notNullize(Thread.currentThread().getClass().getCanonicalName())-->Line_6 $$ if (threadClassName.equals("sun.awt.image.ImageFetcher")) [ FD ]
Line_6 $$ if (threadClassName.equals("sun.awt.image.ImageFetcher")) -->Line_8 $$ return true[ CD ]
Line_6 $$ if (threadClassName.equals("sun.awt.image.ImageFetcher")) -->Line_7 $$ LOG.debug("Image Fetcher thread is detected. Certificate check will be skipped.")[ CD ]
Line_10 $$ if (app.isUnitTestMode() || app.isHeadlessEnvironment() || CertificateManager.getInstance().getState().ACCEPT_AUTOMATICALLY) -->Line_12 $$ if (addToKeyStore) [ CD ]
Line_4 $$ final X509Certificate endPoint = chain[0]-->Line_19 $$ return CertificateWarningDialog.createUntrustedCertificateWarning(endPoint)[ FD ]
Line_17 $$ boolean accepted = askUser && CertificateManager.showAcceptDialog(new Callable<DialogWrapper>() -->Line_19 $$ return CertificateWarningDialog.createUntrustedCertificateWarning(endPoint)[ CD ]
Line_3 $$ Application app = ApplicationManager.getApplication()-->Line_10 $$ if (app.isUnitTestMode() || app.isHeadlessEnvironment() || CertificateManager.getInstance().getState().ACCEPT_AUTOMATICALLY) [ FD ]
Line_2 $$ private boolean confirmAndUpdate(final X509Certificate[] chain, boolean addToKeyStore, boolean askUser) -->Line_28 $$ return accepted[ CD ]
Line_10 $$ if (app.isUnitTestMode() || app.isHeadlessEnvironment() || CertificateManager.getInstance().getState().ACCEPT_AUTOMATICALLY) -->Line_11 $$ LOG.debug("Certificate will be accepted automatically")[ CD ]
