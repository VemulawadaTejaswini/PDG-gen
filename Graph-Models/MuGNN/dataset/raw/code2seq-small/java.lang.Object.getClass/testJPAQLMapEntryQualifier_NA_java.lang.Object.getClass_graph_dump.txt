Line_22 $$ Map.Entry entry = (Map.Entry) result-->Line_36 $$ assertTrue(String.class.isAssignableFrom(entry.getKey().getClass()))[ FD ]
Line_3 $$ Session s = openSession()-->Line_30 $$ s.beginTransaction()[ FD ]
Line_16 $$ s = openSession()-->Line_30 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_17 $$ s.beginTransaction()[ CD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_41 $$ s = openSession()[ CD ]
Line_3 $$ Session s = openSession()-->Line_44 $$ s.delete(joe)[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_36 $$ assertTrue(String.class.isAssignableFrom(entry.getKey().getClass()))[ CD ]
Line_16 $$ s = openSession()-->Line_42 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_10 $$ me.getFamily().put("son", joe)[ CD ]
Line_3 $$ Session s = openSession()-->Line_39 $$ s.close()[ FD ]
Line_18 $$ List results = s.createQuery("select entry(h.family) from Human h").list()-->Line_19 $$ assertEquals(1, results.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_26 $$ s.close()[ FD ]
Line_5 $$ Human me = new Human()-->Line_11 $$ s.save(me)[ FD ]
Line_22 $$ Map.Entry entry = (Map.Entry) result-->Line_24 $$ assertTrue(Human.class.isAssignableFrom(entry.getValue().getClass()))[ FD ]
Line_5 $$ Human me = new Human()-->Line_43 $$ s.delete(me)[ FD ]
Line_16 $$ s = openSession()-->Line_31 $$ List results = s.createQuery("select ENTRY(f) from Human h join h.family f").list()[ FD ]
Line_5 $$ Human me = new Human()-->Line_9 $$ me.setFamily(new HashMap())[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_30 $$ s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_41 $$ s = openSession()[ FD ]
Line_29 $$ s = openSession()-->Line_39 $$ s.close()[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_45 $$ s.getTransaction().commit()[ CD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_9 $$ me.setFamily(new HashMap())[ CD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_14 $$ s.close()[ CD ]
Line_29 $$ s = openSession()-->Line_42 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_13 $$ s.getTransaction().commit()[ CD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_25 $$ s.getTransaction().commit()[ CD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_4 $$ s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_25 $$ s.getTransaction().commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_42 $$ s.beginTransaction()[ FD ]
Line_41 $$ s = openSession()-->Line_44 $$ s.delete(joe)[ FD ]
Line_3 $$ Session s = openSession()-->Line_11 $$ s.save(me)[ FD ]
Line_7 $$ Human joe = new Human()-->Line_10 $$ me.getFamily().put("son", joe)[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_19 $$ assertEquals(1, results.size())[ CD ]
Line_16 $$ s = openSession()-->Line_17 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_42 $$ s.beginTransaction()[ CD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_33 $$ Object result = results.get(0)[ CD ]
Line_7 $$ Human joe = new Human()-->Line_12 $$ s.save(joe)[ FD ]
Line_18 $$ List results = s.createQuery("select entry(h.family) from Human h").list()-->Line_33 $$ Object result = results.get(0)[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_34 $$ assertTrue(Map.Entry.class.isAssignableFrom(result.getClass()))[ CD ]
Line_29 $$ s = openSession()-->Line_44 $$ s.delete(joe)[ FD ]
Line_16 $$ s = openSession()-->Line_44 $$ s.delete(joe)[ FD ]
Line_22 $$ Map.Entry entry = (Map.Entry) result-->Line_37 $$ assertTrue(Human.class.isAssignableFrom(entry.getValue().getClass()))[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_31 $$ List results = s.createQuery("select ENTRY(f) from Human h join h.family f").list()[ CD ]
Line_20 $$ Object result = results.get(0)-->Line_21 $$ assertTrue(Map.Entry.class.isAssignableFrom(result.getClass()))[ FD ]
Line_3 $$ Session s = openSession()-->Line_14 $$ s.close()[ FD ]
Line_29 $$ s = openSession()-->Line_31 $$ List results = s.createQuery("select ENTRY(f) from Human h join h.family f").list()[ FD ]
Line_16 $$ s = openSession()-->Line_39 $$ s.close()[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_23 $$ assertTrue(String.class.isAssignableFrom(entry.getKey().getClass()))[ CD ]
Line_5 $$ Human me = new Human()-->Line_10 $$ me.getFamily().put("son", joe)[ FD ]
Line_16 $$ s = openSession()-->Line_41 $$ s = openSession()[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_18 $$ List results = s.createQuery("select entry(h.family) from Human h").list()[ CD ]
Line_3 $$ Session s = openSession()-->Line_29 $$ s = openSession()[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_39 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_43 $$ s.delete(me)[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_7 $$ Human joe = new Human()[ CD ]
Line_7 $$ Human joe = new Human()-->Line_44 $$ s.delete(joe)[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_8 $$ me.setName(new Name("Joe", null, "Ebersole"))[ CD ]
Line_3 $$ Session s = openSession()-->Line_18 $$ List results = s.createQuery("select entry(h.family) from Human h").list()[ FD ]
Line_16 $$ s = openSession()-->Line_26 $$ s.close()[ FD ]
Line_5 $$ Human me = new Human()-->Line_6 $$ me.setName(new Name("Steve", null, "Ebersole"))[ FD ]
Line_41 $$ s = openSession()-->Line_42 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_26 $$ s.close()[ CD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_46 $$ s.close()[ CD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_20 $$ Object result = results.get(0)[ CD ]
Line_29 $$ s = openSession()-->Line_30 $$ s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_31 $$ List results = s.createQuery("select ENTRY(f) from Human h join h.family f").list()[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_16 $$ s = openSession()[ CD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_44 $$ s.delete(joe)[ CD ]
Line_3 $$ Session s = openSession()-->Line_45 $$ s.getTransaction().commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ s.beginTransaction()[ FD ]
Line_20 $$ Object result = results.get(0)-->Line_34 $$ assertTrue(Map.Entry.class.isAssignableFrom(result.getClass()))[ FD ]
Line_18 $$ List results = s.createQuery("select entry(h.family) from Human h").list()-->Line_32 $$ assertEquals(1, results.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_16 $$ s = openSession()[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_5 $$ Human me = new Human()[ CD ]
Line_3 $$ Session s = openSession()-->Line_13 $$ s.getTransaction().commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_17 $$ s.beginTransaction()[ FD ]
Line_29 $$ s = openSession()-->Line_41 $$ s = openSession()[ FD ]
Line_16 $$ s = openSession()-->Line_45 $$ s.getTransaction().commit()[ FD ]
Line_5 $$ Human me = new Human()-->Line_8 $$ me.setName(new Name("Joe", null, "Ebersole"))[ FD ]
Line_41 $$ s = openSession()-->Line_45 $$ s.getTransaction().commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_12 $$ s.save(joe)[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_3 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_12 $$ s.save(joe)[ CD ]
Line_18 $$ List results = s.createQuery("select entry(h.family) from Human h").list()-->Line_20 $$ Object result = results.get(0)[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_22 $$ Map.Entry entry = (Map.Entry) result[ CD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_6 $$ me.setName(new Name("Steve", null, "Ebersole"))[ CD ]
Line_29 $$ s = openSession()-->Line_43 $$ s.delete(me)[ FD ]
Line_41 $$ s = openSession()-->Line_43 $$ s.delete(me)[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_43 $$ s.delete(me)[ CD ]
Line_16 $$ s = openSession()-->Line_18 $$ List results = s.createQuery("select entry(h.family) from Human h").list()[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_24 $$ assertTrue(Human.class.isAssignableFrom(entry.getValue().getClass()))[ CD ]
Line_16 $$ s = openSession()-->Line_29 $$ s = openSession()[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_21 $$ assertTrue(Map.Entry.class.isAssignableFrom(result.getClass()))[ CD ]
Line_16 $$ s = openSession()-->Line_38 $$ s.getTransaction().commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_46 $$ s.close()[ FD ]
Line_29 $$ s = openSession()-->Line_46 $$ s.close()[ FD ]
Line_29 $$ s = openSession()-->Line_45 $$ s.getTransaction().commit()[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_37 $$ assertTrue(Human.class.isAssignableFrom(entry.getValue().getClass()))[ CD ]
Line_29 $$ s = openSession()-->Line_38 $$ s.getTransaction().commit()[ FD ]
Line_16 $$ s = openSession()-->Line_25 $$ s.getTransaction().commit()[ FD ]
Line_22 $$ Map.Entry entry = (Map.Entry) result-->Line_23 $$ assertTrue(String.class.isAssignableFrom(entry.getKey().getClass()))[ FD ]
Line_16 $$ s = openSession()-->Line_43 $$ s.delete(me)[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_11 $$ s.save(me)[ CD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_38 $$ s.getTransaction().commit()[ CD ]
Line_3 $$ Session s = openSession()-->Line_38 $$ s.getTransaction().commit()[ FD ]
Line_16 $$ s = openSession()-->Line_46 $$ s.close()[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_29 $$ s = openSession()[ CD ]
Line_41 $$ s = openSession()-->Line_46 $$ s.close()[ FD ]
Line_2 $$ public void testJPAQLMapEntryQualifier() -->Line_32 $$ assertEquals(1, results.size())[ CD ]
