Line_5 $$ TypeDescriptor desc = new TypeDescriptor(property)-->Line_7 $$ assertEquals(Integer.class, desc.getElementTypeDescriptor().getType())[ FD ]
Line_2 $$ public void propertyGenericTypeList() throws Exception -->Line_3 $$ GenericType<Integer> genericBean = new IntegerType()[ CD ]
Line_3 $$ GenericType<Integer> genericBean = new IntegerType()-->Line_4 $$ Property property = new Property(getClass(), genericBean.getClass().getMethod("getListProperty"), genericBean.getClass().getMethod("setListProperty", List.class))[ FD ]
Line_2 $$ public void propertyGenericTypeList() throws Exception -->Line_7 $$ assertEquals(Integer.class, desc.getElementTypeDescriptor().getType())[ CD ]
Line_2 $$ public void propertyGenericTypeList() throws Exception -->Line_5 $$ TypeDescriptor desc = new TypeDescriptor(property)[ CD ]
Line_5 $$ TypeDescriptor desc = new TypeDescriptor(property)-->Line_6 $$ assertEquals(List.class, desc.getType())[ FD ]
Line_2 $$ public void propertyGenericTypeList() throws Exception -->Line_6 $$ assertEquals(List.class, desc.getType())[ CD ]
Line_2 $$ public void propertyGenericTypeList() throws Exception -->Line_4 $$ Property property = new Property(getClass(), genericBean.getClass().getMethod("getListProperty"), genericBean.getClass().getMethod("setListProperty", List.class))[ CD ]
