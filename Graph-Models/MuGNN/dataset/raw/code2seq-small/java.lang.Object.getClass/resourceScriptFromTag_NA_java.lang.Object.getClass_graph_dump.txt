Line_14 $$ Messenger messengerInstance = (Messenger) ctx.getBean("messengerInstance")-->Line_15 $$ assertEquals("Hello World!", messengerInstance.getMessage())[ FD ]
Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("bsh-with-xsd.xml", getClass())-->Line_4 $$ TestBean testBean = (TestBean) ctx.getBean("testBean")[ FD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_11 $$ assertFalse(messenger instanceof Refreshable)[ CD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_16 $$ TestBeanAwareMessenger messengerByType = (TestBeanAwareMessenger) ctx.getBean("messengerByType")[ CD ]
Line_16 $$ TestBeanAwareMessenger messengerByType = (TestBeanAwareMessenger) ctx.getBean("messengerByType")-->Line_17 $$ assertEquals(testBean, messengerByType.getTestBean())[ FD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_23 $$ assertTrue(beans.contains(messengerInstance))[ CD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_24 $$ assertTrue(beans.contains(messengerByType))[ CD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_14 $$ Messenger messengerInstance = (Messenger) ctx.getBean("messengerInstance")[ CD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_17 $$ assertEquals(testBean, messengerByType.getTestBean())[ CD ]
Line_16 $$ TestBeanAwareMessenger messengerByType = (TestBeanAwareMessenger) ctx.getBean("messengerByType")-->Line_24 $$ assertTrue(beans.contains(messengerByType))[ FD ]
Line_12 $$ Messenger messengerImpl = (Messenger) ctx.getBean("messengerImpl")-->Line_22 $$ assertTrue(beans.contains(messengerImpl))[ FD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("bsh-with-xsd.xml", getClass())[ CD ]
Line_12 $$ Messenger messengerImpl = (Messenger) ctx.getBean("messengerImpl")-->Line_28 $$ assertNull(messengerImpl.getMessage())[ FD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_29 $$ assertNull(messengerInstance.getMessage())[ CD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_5 $$ Collection<String> beanNames = Arrays.asList(ctx.getBeanNamesForType(Messenger.class))[ CD ]
Line_5 $$ Collection<String> beanNames = Arrays.asList(ctx.getBeanNamesForType(Messenger.class))-->Line_7 $$ assertTrue(beanNames.contains("messengerImpl"))[ FD ]
Line_18 $$ TestBeanAwareMessenger messengerByName = (TestBeanAwareMessenger) ctx.getBean("messengerByName")-->Line_25 $$ assertTrue(beans.contains(messengerByName))[ FD ]
Line_14 $$ Messenger messengerInstance = (Messenger) ctx.getBean("messengerInstance")-->Line_23 $$ assertTrue(beans.contains(messengerInstance))[ FD ]
Line_9 $$ Messenger messenger = (Messenger) ctx.getBean("messenger")-->Line_21 $$ assertTrue(beans.contains(messenger))[ FD ]
Line_9 $$ Messenger messenger = (Messenger) ctx.getBean("messenger")-->Line_27 $$ assertNull(messenger.getMessage())[ FD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_27 $$ assertNull(messenger.getMessage())[ CD ]
Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("bsh-with-xsd.xml", getClass())-->Line_16 $$ TestBeanAwareMessenger messengerByType = (TestBeanAwareMessenger) ctx.getBean("messengerByType")[ FD ]
Line_20 $$ Collection<Messenger> beans = ctx.getBeansOfType(Messenger.class).values()-->Line_25 $$ assertTrue(beans.contains(messengerByName))[ FD ]
Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("bsh-with-xsd.xml", getClass())-->Line_9 $$ Messenger messenger = (Messenger) ctx.getBean("messenger")[ FD ]
Line_4 $$ TestBean testBean = (TestBean) ctx.getBean("testBean")-->Line_19 $$ assertEquals(testBean, messengerByName.getTestBean())[ FD ]
Line_18 $$ TestBeanAwareMessenger messengerByName = (TestBeanAwareMessenger) ctx.getBean("messengerByName")-->Line_19 $$ assertEquals(testBean, messengerByName.getTestBean())[ FD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_12 $$ Messenger messengerImpl = (Messenger) ctx.getBean("messengerImpl")[ CD ]
Line_20 $$ Collection<Messenger> beans = ctx.getBeansOfType(Messenger.class).values()-->Line_23 $$ assertTrue(beans.contains(messengerInstance))[ FD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_7 $$ assertTrue(beanNames.contains("messengerImpl"))[ CD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_13 $$ assertEquals("Hello World!", messengerImpl.getMessage())[ CD ]
Line_20 $$ Collection<Messenger> beans = ctx.getBeansOfType(Messenger.class).values()-->Line_24 $$ assertTrue(beans.contains(messengerByType))[ FD ]
Line_20 $$ Collection<Messenger> beans = ctx.getBeansOfType(Messenger.class).values()-->Line_22 $$ assertTrue(beans.contains(messengerImpl))[ FD ]
Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("bsh-with-xsd.xml", getClass())-->Line_26 $$ ctx.close()[ FD ]
Line_4 $$ TestBean testBean = (TestBean) ctx.getBean("testBean")-->Line_17 $$ assertEquals(testBean, messengerByType.getTestBean())[ FD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_22 $$ assertTrue(beans.contains(messengerImpl))[ CD ]
Line_5 $$ Collection<String> beanNames = Arrays.asList(ctx.getBeanNamesForType(Messenger.class))-->Line_6 $$ assertTrue(beanNames.contains("messenger"))[ FD ]
Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("bsh-with-xsd.xml", getClass())-->Line_12 $$ Messenger messengerImpl = (Messenger) ctx.getBean("messengerImpl")[ FD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_25 $$ assertTrue(beans.contains(messengerByName))[ CD ]
Line_14 $$ Messenger messengerInstance = (Messenger) ctx.getBean("messengerInstance")-->Line_29 $$ assertNull(messengerInstance.getMessage())[ FD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_9 $$ Messenger messenger = (Messenger) ctx.getBean("messenger")[ CD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_4 $$ TestBean testBean = (TestBean) ctx.getBean("testBean")[ CD ]
Line_5 $$ Collection<String> beanNames = Arrays.asList(ctx.getBeanNamesForType(Messenger.class))-->Line_8 $$ assertTrue(beanNames.contains("messengerInstance"))[ FD ]
Line_20 $$ Collection<Messenger> beans = ctx.getBeansOfType(Messenger.class).values()-->Line_21 $$ assertTrue(beans.contains(messenger))[ FD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_26 $$ ctx.close()[ CD ]
Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("bsh-with-xsd.xml", getClass())-->Line_5 $$ Collection<String> beanNames = Arrays.asList(ctx.getBeanNamesForType(Messenger.class))[ FD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_15 $$ assertEquals("Hello World!", messengerInstance.getMessage())[ CD ]
Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("bsh-with-xsd.xml", getClass())-->Line_18 $$ TestBeanAwareMessenger messengerByName = (TestBeanAwareMessenger) ctx.getBean("messengerByName")[ FD ]
Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("bsh-with-xsd.xml", getClass())-->Line_20 $$ Collection<Messenger> beans = ctx.getBeansOfType(Messenger.class).values()[ FD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_10 $$ assertEquals("Hello World!", messenger.getMessage())[ CD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_6 $$ assertTrue(beanNames.contains("messenger"))[ CD ]
Line_12 $$ Messenger messengerImpl = (Messenger) ctx.getBean("messengerImpl")-->Line_13 $$ assertEquals("Hello World!", messengerImpl.getMessage())[ FD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_21 $$ assertTrue(beans.contains(messenger))[ CD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_18 $$ TestBeanAwareMessenger messengerByName = (TestBeanAwareMessenger) ctx.getBean("messengerByName")[ CD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_8 $$ assertTrue(beanNames.contains("messengerInstance"))[ CD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_20 $$ Collection<Messenger> beans = ctx.getBeansOfType(Messenger.class).values()[ CD ]
Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("bsh-with-xsd.xml", getClass())-->Line_14 $$ Messenger messengerInstance = (Messenger) ctx.getBean("messengerInstance")[ FD ]
Line_9 $$ Messenger messenger = (Messenger) ctx.getBean("messenger")-->Line_10 $$ assertEquals("Hello World!", messenger.getMessage())[ FD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_19 $$ assertEquals(testBean, messengerByName.getTestBean())[ CD ]
Line_2 $$ public void resourceScriptFromTag() throws Exception -->Line_28 $$ assertNull(messengerImpl.getMessage())[ CD ]
