Line_2 $$ public Number getKey() throws InvalidDataAccessApiUsageException, DataRetrievalFailureException -->Line_6 $$ if (this.keyList.size() > 1 || this.keyList.get(0).size() > 1) [ CD ]
Line_10 $$ if (keyIter.hasNext()) -->Line_12 $$ if (!(key instanceof Number)) [ CD ]
Line_9 $$ Iterator<Object> keyIter = this.keyList.get(0).values().iterator()-->Line_10 $$ if (keyIter.hasNext()) [ FD ]
Line_10 $$ if (keyIter.hasNext()) -->Line_15 $$ return (Number) key[ CD ]
Line_3 $$ if (this.keyList.size() == 0) -->Line_4 $$ return null[ CD ]
Line_10 $$ if (keyIter.hasNext()) -->Line_11 $$ Object key = keyIter.next()[ CD ]
Line_9 $$ Iterator<Object> keyIter = this.keyList.get(0).values().iterator()-->Line_11 $$ Object key = keyIter.next()[ FD ]
Line_2 $$ public Number getKey() throws InvalidDataAccessApiUsageException, DataRetrievalFailureException -->Line_3 $$ if (this.keyList.size() == 0) [ CD ]
Line_2 $$ public Number getKey() throws InvalidDataAccessApiUsageException, DataRetrievalFailureException -->Line_9 $$ Iterator<Object> keyIter = this.keyList.get(0).values().iterator()[ CD ]
Line_11 $$ Object key = keyIter.next()-->Line_13 $$ throw new DataRetrievalFailureException("The generated key is not of a supported numeric type. " + "Unable to cast [" + (key != null ? key.getClass().getName() : null) + "] to [" + Number.class.getName() + "]")[ FD ]
Line_2 $$ public Number getKey() throws InvalidDataAccessApiUsageException, DataRetrievalFailureException -->Line_10 $$ if (keyIter.hasNext()) [ CD ]
