Line_2 $$ public void handleMethodArgumentNotValid() throws Exception -->Line_6 $$ MethodArgumentNotValidException ex = new MethodArgumentNotValidException(parameter, errors)[ CD ]
Line_2 $$ public void handleMethodArgumentNotValid() throws Exception -->Line_9 $$ assertTrue("No Empty ModelAndView returned", mav.isEmpty())[ CD ]
Line_3 $$ BeanPropertyBindingResult errors = new BeanPropertyBindingResult(new TestBean(), "testBean")-->Line_4 $$ errors.rejectValue("name", "invalid")[ FD ]
Line_2 $$ public void handleMethodArgumentNotValid() throws Exception -->Line_10 $$ assertEquals("Invalid status code", 400, response.getStatus())[ CD ]
Line_2 $$ public void handleMethodArgumentNotValid() throws Exception -->Line_4 $$ errors.rejectValue("name", "invalid")[ CD ]
Line_7 $$ ModelAndView mav = exceptionResolver.resolveException(request, response, null, ex)-->Line_8 $$ assertNotNull("No ModelAndView returned", mav)[ FD ]
Line_2 $$ public void handleMethodArgumentNotValid() throws Exception -->Line_3 $$ BeanPropertyBindingResult errors = new BeanPropertyBindingResult(new TestBean(), "testBean")[ CD ]
Line_7 $$ ModelAndView mav = exceptionResolver.resolveException(request, response, null, ex)-->Line_9 $$ assertTrue("No Empty ModelAndView returned", mav.isEmpty())[ FD ]
Line_2 $$ public void handleMethodArgumentNotValid() throws Exception -->Line_7 $$ ModelAndView mav = exceptionResolver.resolveException(request, response, null, ex)[ CD ]
Line_2 $$ public void handleMethodArgumentNotValid() throws Exception -->Line_5 $$ MethodParameter parameter = new MethodParameter(this.getClass().getMethod("handle", String.class), 0)[ CD ]
Line_6 $$ MethodArgumentNotValidException ex = new MethodArgumentNotValidException(parameter, errors)-->Line_7 $$ ModelAndView mav = exceptionResolver.resolveException(request, response, null, ex)[ FD ]
Line_2 $$ public void handleMethodArgumentNotValid() throws Exception -->Line_8 $$ assertNotNull("No ModelAndView returned", mav)[ CD ]
