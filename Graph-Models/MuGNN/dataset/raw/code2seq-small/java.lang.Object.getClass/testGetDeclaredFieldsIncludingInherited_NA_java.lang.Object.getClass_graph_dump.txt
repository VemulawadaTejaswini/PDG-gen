Line_2 $$ public void testGetDeclaredFieldsIncludingInherited() -->Line_19 $$ List<Method> methods = ReflectionUtils.getDeclaredMethodsIncludingInherited(child.getClass())[ CD ]
Line_2 $$ public void testGetDeclaredFieldsIncludingInherited() -->Line_30 $$ assertTrue("Missing child field", containsChildField)[ CD ]
Line_3 $$ Parent child = new Parent() -->Line_6 $$ return childField[ CD ]
Line_2 $$ public void testGetDeclaredFieldsIncludingInherited() -->Line_32 $$ assertTrue("Missing child method", containsChildMethod)[ CD ]
Line_2 $$ public void testGetDeclaredFieldsIncludingInherited() -->Line_29 $$ assertTrue("Missing parent field", containsParentField)[ CD ]
Line_2 $$ public void testGetDeclaredFieldsIncludingInherited() -->Line_31 $$ assertTrue("Missing parent method", containsParentMethod)[ CD ]
Line_13 $$ if (field.getName().equals("parentField")) -->Line_15 $$ if (field.getName().equals("childField")) [ CD ]
Line_23 $$ if (method.getName().equals("getParentField")) -->Line_25 $$ if (method.getName().equals("getChildField")) [ CD ]
Line_2 $$ public void testGetDeclaredFieldsIncludingInherited() -->Line_3 $$ Parent child = new Parent() [ CD ]
Line_3 $$ Parent child = new Parent() -->Line_19 $$ List<Method> methods = ReflectionUtils.getDeclaredMethodsIncludingInherited(child.getClass())[ FD ]
Line_3 $$ Parent child = new Parent() -->Line_9 $$ List<Field> fields = ReflectionUtils.getDeclaredFieldsIncludingInherited(child.getClass())[ FD ]
Line_2 $$ public void testGetDeclaredFieldsIncludingInherited() -->Line_9 $$ List<Field> fields = ReflectionUtils.getDeclaredFieldsIncludingInherited(child.getClass())[ CD ]
