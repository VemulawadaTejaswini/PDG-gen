Line_2 $$ public final String[] selectImports(AnnotationMetadata importingClassMetadata) -->Line_13 $$ return imports[ CD ]
Line_2 $$ public final String[] selectImports(AnnotationMetadata importingClassMetadata) -->Line_9 $$ String[] imports = selectImports(adviceMode)[ CD ]
Line_8 $$ AdviceMode adviceMode = attributes.getEnum(this.getAdviceModeAttributeName())-->Line_9 $$ String[] imports = selectImports(adviceMode)[ FD ]
Line_2 $$ public final String[] selectImports(AnnotationMetadata importingClassMetadata) -->Line_10 $$ if (imports == null) [ CD ]
Line_2 $$ public final String[] selectImports(AnnotationMetadata importingClassMetadata) -->Line_3 $$ Class<?> annoType = GenericTypeResolver.resolveTypeArgument(getClass(), AdviceModeImportSelector.class)[ CD ]
Line_4 $$ AnnotationAttributes attributes = AnnotationConfigUtils.attributesFor(importingClassMetadata, annoType)-->Line_5 $$ if (attributes == null) [ FD ]
Line_2 $$ public final String[] selectImports(AnnotationMetadata importingClassMetadata) -->Line_6 $$ throw new IllegalArgumentException(String.format("@%s is not present on importing class '%s' as expected", annoType.getSimpleName(), importingClassMetadata.getClassName()))[ FD ]
Line_2 $$ public final String[] selectImports(AnnotationMetadata importingClassMetadata) -->Line_5 $$ if (attributes == null) [ CD ]
Line_2 $$ public final String[] selectImports(AnnotationMetadata importingClassMetadata) -->Line_8 $$ AdviceMode adviceMode = attributes.getEnum(this.getAdviceModeAttributeName())[ CD ]
Line_4 $$ AnnotationAttributes attributes = AnnotationConfigUtils.attributesFor(importingClassMetadata, annoType)-->Line_8 $$ AdviceMode adviceMode = attributes.getEnum(this.getAdviceModeAttributeName())[ FD ]
Line_8 $$ AdviceMode adviceMode = attributes.getEnum(this.getAdviceModeAttributeName())-->Line_11 $$ throw new IllegalArgumentException(String.format("Unknown AdviceMode: '%s'", adviceMode))[ FD ]
Line_9 $$ String[] imports = selectImports(adviceMode)-->Line_10 $$ if (imports == null) [ FD ]
Line_2 $$ public final String[] selectImports(AnnotationMetadata importingClassMetadata) -->Line_4 $$ AnnotationAttributes attributes = AnnotationConfigUtils.attributesFor(importingClassMetadata, annoType)[ FD ]
Line_3 $$ Class<?> annoType = GenericTypeResolver.resolveTypeArgument(getClass(), AdviceModeImportSelector.class)-->Line_6 $$ throw new IllegalArgumentException(String.format("@%s is not present on importing class '%s' as expected", annoType.getSimpleName(), importingClassMetadata.getClassName()))[ FD ]
Line_3 $$ Class<?> annoType = GenericTypeResolver.resolveTypeArgument(getClass(), AdviceModeImportSelector.class)-->Line_4 $$ AnnotationAttributes attributes = AnnotationConfigUtils.attributesFor(importingClassMetadata, annoType)[ FD ]
Line_2 $$ public final String[] selectImports(AnnotationMetadata importingClassMetadata) -->Line_4 $$ AnnotationAttributes attributes = AnnotationConfigUtils.attributesFor(importingClassMetadata, annoType)[ CD ]
