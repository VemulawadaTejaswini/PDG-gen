Line_9 $$ pos = _ejbList.indexOf(new Entity(name))-->Line_21 $$ if (pos == -1) [ FD ]
Line_19 $$ if (refPackage.equals(_packagePath)) -->Line_24 $$ entity = _ejbList.get(pos)[ CD ]
Line_32 $$ if (!refFile.exists()) -->Line_42 $$ _write(refFile, refContent)[ CD ]
Line_13 $$ entity = _ejbList.get(pos)-->Line_24 $$ entity = _ejbList.get(pos)[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_25 $$ _entityPool.put(name, entity)[ FD ]
Line_3 $$ Entity entity = _entityPool.get(name)-->Line_24 $$ entity = _ejbList.get(pos)[ FD ]
Line_8 $$ if (pos == -1) -->Line_13 $$ entity = _ejbList.get(pos)[ CD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_50 $$ if (useTempFile) [ CD ]
Line_31 $$ boolean useTempFile = false-->Line_47 $$ entity.setPortalReference(useTempFile)[ FD ]
Line_34 $$ refFile = new File(_TMP_DIR, refFileName)-->Line_51 $$ refFile.deleteOnExit()[ FD ]
Line_3 $$ Entity entity = _entityPool.get(name)-->Line_13 $$ entity = _ejbList.get(pos)[ FD ]
Line_34 $$ refFile = new File(_TMP_DIR, refFileName)-->Line_42 $$ _write(refFile, refContent)[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_45 $$ ServiceBuilder serviceBuilder = new ServiceBuilder(_apiDirName, _autoImportDefaultReferences, _autoNamespaceTables, _beanLocatorUtil, _buildNumber, _buildNumberIncrement, _hbmFileName, _implDirName, refFile.getAbsolutePath(), _modelHintsFileName, _osgiModule, _pluginName, _propsUtil, _readOnlyPrefixes, _resourceActionModels, _resourcesDirName, _springFileName, _springNamespaces, _sqlDirName, _sqlFileName, _sqlIndexesFileName, _sqlSequencesFileName, _targetEntityName, _testDirName, false)[ CD ]
Line_19 $$ if (refPackage.equals(_packagePath)) -->Line_25 $$ _entityPool.put(name, entity)[ CD ]
Line_3 $$ Entity entity = _entityPool.get(name)-->Line_25 $$ _entityPool.put(name, entity)[ FD ]
Line_30 $$ File refFile = new File(refFileName)-->Line_45 $$ ServiceBuilder serviceBuilder = new ServiceBuilder(_apiDirName, _autoImportDefaultReferences, _autoNamespaceTables, _beanLocatorUtil, _buildNumber, _buildNumberIncrement, _hbmFileName, _implDirName, refFile.getAbsolutePath(), _modelHintsFileName, _osgiModule, _pluginName, _propsUtil, _readOnlyPrefixes, _resourceActionModels, _resourcesDirName, _springFileName, _springNamespaces, _sqlDirName, _sqlFileName, _sqlIndexesFileName, _sqlSequencesFileName, _targetEntityName, _testDirName, false)[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_53 $$ return entity[ CD ]
Line_7 $$ int pos = name.lastIndexOf(".")-->Line_24 $$ entity = _ejbList.get(pos)[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_48 $$ _entityPool.put(name, entity)[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_7 $$ int pos = name.lastIndexOf(".")[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_8 $$ if (pos == -1) [ CD ]
Line_24 $$ entity = _ejbList.get(pos)-->Line_25 $$ _entityPool.put(name, entity)[ FD ]
Line_13 $$ entity = _ejbList.get(pos)-->Line_25 $$ _entityPool.put(name, entity)[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_46 $$ entity = serviceBuilder.getEntity(refEntity)[ CD ]
Line_35 $$ ClassLoader classLoader = getClass().getClassLoader()-->Line_38 $$ refContent = StringUtil.read(classLoader, refPackageDirName + "/service.xml")[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_14 $$ _entityPool.put(name, entity)[ FD ]
Line_9 $$ pos = _ejbList.indexOf(new Entity(name))-->Line_17 $$ String refPackage = name.substring(0, pos)[ FD ]
Line_3 $$ Entity entity = _entityPool.get(name)-->Line_47 $$ entity.setPortalReference(useTempFile)[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_18 $$ String refEntity = name.substring(pos + 1)[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_7 $$ int pos = name.lastIndexOf(".")[ CD ]
Line_7 $$ int pos = name.lastIndexOf(".")-->Line_21 $$ if (pos == -1) [ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_17 $$ String refPackage = name.substring(0, pos)[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_18 $$ String refEntity = name.substring(pos + 1)[ CD ]
Line_9 $$ pos = _ejbList.indexOf(new Entity(name))-->Line_13 $$ entity = _ejbList.get(pos)[ FD ]
Line_19 $$ if (refPackage.equals(_packagePath)) -->Line_21 $$ if (pos == -1) [ CD ]
Line_32 $$ if (!refFile.exists()) -->Line_35 $$ ClassLoader classLoader = getClass().getClassLoader()[ CD ]
Line_9 $$ pos = _ejbList.indexOf(new Entity(name))-->Line_10 $$ if (pos == -1) [ FD ]
Line_36 $$ String refContent = null-->Line_38 $$ refContent = StringUtil.read(classLoader, refPackageDirName + "/service.xml")[ FD ]
Line_3 $$ Entity entity = _entityPool.get(name)-->Line_4 $$ if (entity != null) [ FD ]
Line_17 $$ String refPackage = name.substring(0, pos)-->Line_19 $$ if (refPackage.equals(_packagePath)) [ FD ]
Line_24 $$ entity = _ejbList.get(pos)-->Line_48 $$ _entityPool.put(name, entity)[ FD ]
Line_7 $$ int pos = name.lastIndexOf(".")-->Line_17 $$ String refPackage = name.substring(0, pos)[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_30 $$ File refFile = new File(refFileName)[ CD ]
Line_3 $$ Entity entity = _entityPool.get(name)-->Line_48 $$ _entityPool.put(name, entity)[ FD ]
Line_32 $$ if (!refFile.exists()) -->Line_34 $$ refFile = new File(_TMP_DIR, refFileName)[ CD ]
Line_29 $$ String refFileName = _implDirName + "/" + refPackageDirName + "/service.xml"-->Line_33 $$ refFileName = String.valueOf(System.currentTimeMillis())[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_19 $$ if (refPackage.equals(_packagePath)) [ CD ]
Line_9 $$ pos = _ejbList.indexOf(new Entity(name))-->Line_20 $$ pos = _ejbList.indexOf(new Entity(refEntity))[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_3 $$ Entity entity = _entityPool.get(name)[ CD ]
Line_32 $$ if (!refFile.exists()) -->Line_33 $$ refFileName = String.valueOf(System.currentTimeMillis())[ CD ]
Line_7 $$ int pos = name.lastIndexOf(".")-->Line_13 $$ entity = _ejbList.get(pos)[ FD ]
Line_30 $$ File refFile = new File(refFileName)-->Line_34 $$ refFile = new File(_TMP_DIR, refFileName)[ FD ]
Line_3 $$ Entity entity = _entityPool.get(name)-->Line_46 $$ entity = serviceBuilder.getEntity(refEntity)[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_31 $$ boolean useTempFile = false[ CD ]
Line_3 $$ Entity entity = _entityPool.get(name)-->Line_14 $$ _entityPool.put(name, entity)[ FD ]
Line_4 $$ if (entity != null) -->Line_5 $$ return entity[ CD ]
Line_50 $$ if (useTempFile) -->Line_51 $$ refFile.deleteOnExit()[ CD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_32 $$ if (!refFile.exists()) [ CD ]
Line_20 $$ pos = _ejbList.indexOf(new Entity(refEntity))-->Line_24 $$ entity = _ejbList.get(pos)[ FD ]
Line_7 $$ int pos = name.lastIndexOf(".")-->Line_20 $$ pos = _ejbList.indexOf(new Entity(refEntity))[ FD ]
Line_24 $$ entity = _ejbList.get(pos)-->Line_46 $$ entity = serviceBuilder.getEntity(refEntity)[ FD ]
Line_46 $$ entity = serviceBuilder.getEntity(refEntity)-->Line_48 $$ _entityPool.put(name, entity)[ FD ]
Line_13 $$ entity = _ejbList.get(pos)-->Line_47 $$ entity.setPortalReference(useTempFile)[ FD ]
Line_19 $$ if (refPackage.equals(_packagePath)) -->Line_20 $$ pos = _ejbList.indexOf(new Entity(refEntity))[ CD ]
Line_30 $$ File refFile = new File(refFileName)-->Line_51 $$ refFile.deleteOnExit()[ FD ]
Line_18 $$ String refEntity = name.substring(pos + 1)-->Line_46 $$ entity = serviceBuilder.getEntity(refEntity)[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_29 $$ String refFileName = _implDirName + "/" + refPackageDirName + "/service.xml"[ CD ]
Line_8 $$ if (pos == -1) -->Line_14 $$ _entityPool.put(name, entity)[ CD ]
Line_8 $$ if (pos == -1) -->Line_15 $$ return entity[ CD ]
Line_36 $$ String refContent = null-->Line_42 $$ _write(refFile, refContent)[ FD ]
Line_43 $$ useTempFile = true-->Line_47 $$ entity.setPortalReference(useTempFile)[ FD ]
Line_32 $$ if (!refFile.exists()) -->Line_36 $$ String refContent = null[ CD ]
Line_30 $$ File refFile = new File(refFileName)-->Line_42 $$ _write(refFile, refContent)[ FD ]
Line_8 $$ if (pos == -1) -->Line_9 $$ pos = _ejbList.indexOf(new Entity(name))[ CD ]
Line_9 $$ pos = _ejbList.indexOf(new Entity(name))-->Line_24 $$ entity = _ejbList.get(pos)[ FD ]
Line_46 $$ entity = serviceBuilder.getEntity(refEntity)-->Line_47 $$ entity.setPortalReference(useTempFile)[ FD ]
Line_8 $$ if (pos == -1) -->Line_10 $$ if (pos == -1) [ CD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_4 $$ if (entity != null) [ CD ]
Line_13 $$ entity = _ejbList.get(pos)-->Line_14 $$ _entityPool.put(name, entity)[ FD ]
Line_13 $$ entity = _ejbList.get(pos)-->Line_46 $$ entity = serviceBuilder.getEntity(refEntity)[ FD ]
Line_31 $$ boolean useTempFile = false-->Line_43 $$ useTempFile = true[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_28 $$ String refPackageDirName = StringUtil.replace(refPackage, ".", "/")[ CD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_47 $$ entity.setPortalReference(useTempFile)[ CD ]
Line_17 $$ String refPackage = name.substring(0, pos)-->Line_28 $$ String refPackageDirName = StringUtil.replace(refPackage, ".", "/")[ FD ]
Line_20 $$ pos = _ejbList.indexOf(new Entity(refEntity))-->Line_21 $$ if (pos == -1) [ FD ]
Line_30 $$ File refFile = new File(refFileName)-->Line_32 $$ if (!refFile.exists()) [ FD ]
Line_38 $$ refContent = StringUtil.read(classLoader, refPackageDirName + "/service.xml")-->Line_42 $$ _write(refFile, refContent)[ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_48 $$ _entityPool.put(name, entity)[ CD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_3 $$ Entity entity = _entityPool.get(name)[ FD ]
Line_7 $$ int pos = name.lastIndexOf(".")-->Line_9 $$ pos = _ejbList.indexOf(new Entity(name))[ FD ]
Line_45 $$ ServiceBuilder serviceBuilder = new ServiceBuilder(_apiDirName, _autoImportDefaultReferences, _autoNamespaceTables, _beanLocatorUtil, _buildNumber, _buildNumberIncrement, _hbmFileName, _implDirName, refFile.getAbsolutePath(), _modelHintsFileName, _osgiModule, _pluginName, _propsUtil, _readOnlyPrefixes, _resourceActionModels, _resourcesDirName, _springFileName, _springNamespaces, _sqlDirName, _sqlFileName, _sqlIndexesFileName, _sqlSequencesFileName, _targetEntityName, _testDirName, false)-->Line_49 $$ _modifiedFileNames.addAll(serviceBuilder.getModifiedFileNames())[ FD ]
Line_19 $$ if (refPackage.equals(_packagePath)) -->Line_26 $$ return entity[ CD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_17 $$ String refPackage = name.substring(0, pos)[ CD ]
Line_24 $$ entity = _ejbList.get(pos)-->Line_47 $$ entity.setPortalReference(useTempFile)[ FD ]
Line_7 $$ int pos = name.lastIndexOf(".")-->Line_10 $$ if (pos == -1) [ FD ]
Line_34 $$ refFile = new File(_TMP_DIR, refFileName)-->Line_45 $$ ServiceBuilder serviceBuilder = new ServiceBuilder(_apiDirName, _autoImportDefaultReferences, _autoNamespaceTables, _beanLocatorUtil, _buildNumber, _buildNumberIncrement, _hbmFileName, _implDirName, refFile.getAbsolutePath(), _modelHintsFileName, _osgiModule, _pluginName, _propsUtil, _readOnlyPrefixes, _resourceActionModels, _resourcesDirName, _springFileName, _springNamespaces, _sqlDirName, _sqlFileName, _sqlIndexesFileName, _sqlSequencesFileName, _targetEntityName, _testDirName, false)[ FD ]
Line_7 $$ int pos = name.lastIndexOf(".")-->Line_8 $$ if (pos == -1) [ FD ]
Line_2 $$ public Entity getEntity(String name) throws Exception -->Line_49 $$ _modifiedFileNames.addAll(serviceBuilder.getModifiedFileNames())[ CD ]
Line_32 $$ if (!refFile.exists()) -->Line_43 $$ useTempFile = true[ CD ]
Line_13 $$ entity = _ejbList.get(pos)-->Line_48 $$ _entityPool.put(name, entity)[ FD ]
Line_45 $$ ServiceBuilder serviceBuilder = new ServiceBuilder(_apiDirName, _autoImportDefaultReferences, _autoNamespaceTables, _beanLocatorUtil, _buildNumber, _buildNumberIncrement, _hbmFileName, _implDirName, refFile.getAbsolutePath(), _modelHintsFileName, _osgiModule, _pluginName, _propsUtil, _readOnlyPrefixes, _resourceActionModels, _resourcesDirName, _springFileName, _springNamespaces, _sqlDirName, _sqlFileName, _sqlIndexesFileName, _sqlSequencesFileName, _targetEntityName, _testDirName, false)-->Line_46 $$ entity = serviceBuilder.getEntity(refEntity)[ FD ]
