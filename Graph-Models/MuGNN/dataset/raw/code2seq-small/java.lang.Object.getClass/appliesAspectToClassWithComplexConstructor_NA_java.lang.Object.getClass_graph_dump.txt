Line_2 $$ public void appliesAspectToClassWithComplexConstructor() -->Line_5 $$ bean.method()[ CD ]
Line_2 $$ public void appliesAspectToClassWithComplexConstructor() -->Line_6 $$ DebugInterceptor interceptor = context.getBean(DebugInterceptor.class)[ CD ]
Line_4 $$ ClassWithComplexConstructor bean = context.getBean(ClassWithComplexConstructor.class)-->Line_8 $$ assertThat(bean.getDependency().getValue(), is(1))[ FD ]
Line_2 $$ public void appliesAspectToClassWithComplexConstructor() -->Line_3 $$ ApplicationContext context = new ClassPathXmlApplicationContext("ObjenesisProxyTests-context.xml", getClass())[ CD ]
Line_2 $$ public void appliesAspectToClassWithComplexConstructor() -->Line_8 $$ assertThat(bean.getDependency().getValue(), is(1))[ CD ]
Line_6 $$ DebugInterceptor interceptor = context.getBean(DebugInterceptor.class)-->Line_7 $$ assertThat(interceptor.getCount(), is(1L))[ FD ]
Line_3 $$ ApplicationContext context = new ClassPathXmlApplicationContext("ObjenesisProxyTests-context.xml", getClass())-->Line_4 $$ ClassWithComplexConstructor bean = context.getBean(ClassWithComplexConstructor.class)[ FD ]
Line_2 $$ public void appliesAspectToClassWithComplexConstructor() -->Line_7 $$ assertThat(interceptor.getCount(), is(1L))[ CD ]
Line_3 $$ ApplicationContext context = new ClassPathXmlApplicationContext("ObjenesisProxyTests-context.xml", getClass())-->Line_6 $$ DebugInterceptor interceptor = context.getBean(DebugInterceptor.class)[ FD ]
Line_2 $$ public void appliesAspectToClassWithComplexConstructor() -->Line_4 $$ ClassWithComplexConstructor bean = context.getBean(ClassWithComplexConstructor.class)[ CD ]
Line_4 $$ ClassWithComplexConstructor bean = context.getBean(ClassWithComplexConstructor.class)-->Line_5 $$ bean.method()[ FD ]
