Line_2 $$ public void testGetAsTextReturnsNullByDefault() throws Exception -->Line_5 $$ InputStreamEditor editor = new InputStreamEditor()[ CD ]
Line_5 $$ InputStreamEditor editor = new InputStreamEditor()-->Line_6 $$ editor.setAsText(resource)[ FD ]
Line_2 $$ public void testGetAsTextReturnsNullByDefault() throws Exception -->Line_3 $$ assertNull(new InputStreamEditor().getAsText())[ CD ]
Line_2 $$ public void testGetAsTextReturnsNullByDefault() throws Exception -->Line_4 $$ String resource = "classpath:" + ClassUtils.classPackageAsResourcePath(getClass()) + "/" + ClassUtils.getShortName(getClass()) + ".class"[ CD ]
Line_2 $$ public void testGetAsTextReturnsNullByDefault() throws Exception -->Line_7 $$ assertNull(editor.getAsText())[ CD ]
Line_4 $$ String resource = "classpath:" + ClassUtils.classPackageAsResourcePath(getClass()) + "/" + ClassUtils.getShortName(getClass()) + ".class"-->Line_6 $$ editor.setAsText(resource)[ FD ]
Line_2 $$ public void testGetAsTextReturnsNullByDefault() throws Exception -->Line_6 $$ editor.setAsText(resource)[ CD ]
Line_5 $$ InputStreamEditor editor = new InputStreamEditor()-->Line_7 $$ assertNull(editor.getAsText())[ FD ]
