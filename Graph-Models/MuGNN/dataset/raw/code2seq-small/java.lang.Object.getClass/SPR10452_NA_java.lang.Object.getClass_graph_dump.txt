Line_5 $$ StandardEvaluationContext context = new StandardEvaluationContext()-->Line_7 $$ context.setVariable("enumType", ABC.class)[ FD ]
Line_6 $$ Expression spel = parser.parseExpression("#enumType.values()")-->Line_8 $$ Object result = spel.getValue(context)[ FD ]
Line_15 $$ result = spel.getValue(context)-->Line_17 $$ assertTrue(result.getClass().isArray())[ FD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_19 $$ assertEquals(XYZ.Y, Array.get(result, 1))[ FD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_12 $$ assertEquals(ABC.B, Array.get(result, 1))[ CD ]
Line_15 $$ result = spel.getValue(context)-->Line_19 $$ assertEquals(XYZ.Y, Array.get(result, 1))[ FD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_5 $$ StandardEvaluationContext context = new StandardEvaluationContext()[ CD ]
Line_5 $$ StandardEvaluationContext context = new StandardEvaluationContext()-->Line_14 $$ context.setVariable("enumType", XYZ.class)[ FD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_15 $$ result = spel.getValue(context)[ CD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_17 $$ assertTrue(result.getClass().isArray())[ FD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_9 $$ assertNotNull(result)[ FD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_20 $$ assertEquals(XYZ.Z, Array.get(result, 2))[ FD ]
Line_15 $$ result = spel.getValue(context)-->Line_18 $$ assertEquals(XYZ.X, Array.get(result, 0))[ FD ]
Line_6 $$ Expression spel = parser.parseExpression("#enumType.values()")-->Line_15 $$ result = spel.getValue(context)[ FD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_6 $$ Expression spel = parser.parseExpression("#enumType.values()")[ CD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_13 $$ assertEquals(ABC.C, Array.get(result, 2))[ CD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_8 $$ Object result = spel.getValue(context)[ CD ]
Line_15 $$ result = spel.getValue(context)-->Line_16 $$ assertNotNull(result)[ FD ]
Line_15 $$ result = spel.getValue(context)-->Line_20 $$ assertEquals(XYZ.Z, Array.get(result, 2))[ FD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_11 $$ assertEquals(ABC.A, Array.get(result, 0))[ FD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_16 $$ assertNotNull(result)[ CD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_10 $$ assertTrue(result.getClass().isArray())[ CD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_9 $$ assertNotNull(result)[ CD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_15 $$ result = spel.getValue(context)[ FD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_17 $$ assertTrue(result.getClass().isArray())[ CD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_13 $$ assertEquals(ABC.C, Array.get(result, 2))[ FD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_16 $$ assertNotNull(result)[ FD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_18 $$ assertEquals(XYZ.X, Array.get(result, 0))[ CD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_7 $$ context.setVariable("enumType", ABC.class)[ CD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_19 $$ assertEquals(XYZ.Y, Array.get(result, 1))[ CD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_10 $$ assertTrue(result.getClass().isArray())[ FD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_14 $$ context.setVariable("enumType", XYZ.class)[ CD ]
Line_5 $$ StandardEvaluationContext context = new StandardEvaluationContext()-->Line_15 $$ result = spel.getValue(context)[ FD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_12 $$ assertEquals(ABC.B, Array.get(result, 1))[ FD ]
Line_8 $$ Object result = spel.getValue(context)-->Line_18 $$ assertEquals(XYZ.X, Array.get(result, 0))[ FD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_3 $$ SpelParserConfiguration configuration = new SpelParserConfiguration(false, false)[ CD ]
Line_4 $$ ExpressionParser parser = new SpelExpressionParser(configuration)-->Line_6 $$ Expression spel = parser.parseExpression("#enumType.values()")[ FD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_4 $$ ExpressionParser parser = new SpelExpressionParser(configuration)[ CD ]
Line_5 $$ StandardEvaluationContext context = new StandardEvaluationContext()-->Line_8 $$ Object result = spel.getValue(context)[ FD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_11 $$ assertEquals(ABC.A, Array.get(result, 0))[ CD ]
Line_2 $$ public void SPR10452() throws Exception -->Line_20 $$ assertEquals(XYZ.Z, Array.get(result, 2))[ CD ]
