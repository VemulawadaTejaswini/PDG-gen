Line_3 $$ Log log = LogFactory.getLog(this.getClass())-->Line_7 $$ log.error("error")[ FD ]
Line_2 $$ private void assertLogOutput() -->Line_4 $$ log.debug("debug")[ CD ]
Line_2 $$ private void assertLogOutput() -->Line_9 $$ assertTrue(MockLog4jAppender.loggingStrings.contains("debug"))[ CD ]
Line_2 $$ private void assertLogOutput() -->Line_3 $$ Log log = LogFactory.getLog(this.getClass())[ CD ]
Line_3 $$ Log log = LogFactory.getLog(this.getClass())-->Line_6 $$ log.warn("warn")[ FD ]
Line_3 $$ Log log = LogFactory.getLog(this.getClass())-->Line_5 $$ log.info("info")[ FD ]
Line_2 $$ private void assertLogOutput() -->Line_12 $$ assertTrue(MockLog4jAppender.loggingStrings.contains("error"))[ CD ]
Line_2 $$ private void assertLogOutput() -->Line_6 $$ log.warn("warn")[ CD ]
Line_3 $$ Log log = LogFactory.getLog(this.getClass())-->Line_8 $$ log.fatal("fatal")[ FD ]
Line_2 $$ private void assertLogOutput() -->Line_11 $$ assertTrue(MockLog4jAppender.loggingStrings.contains("warn"))[ CD ]
Line_2 $$ private void assertLogOutput() -->Line_13 $$ assertTrue(MockLog4jAppender.loggingStrings.contains("fatal"))[ CD ]
Line_2 $$ private void assertLogOutput() -->Line_10 $$ assertTrue(MockLog4jAppender.loggingStrings.contains("info"))[ CD ]
Line_2 $$ private void assertLogOutput() -->Line_7 $$ log.error("error")[ CD ]
Line_2 $$ private void assertLogOutput() -->Line_5 $$ log.info("info")[ CD ]
Line_3 $$ Log log = LogFactory.getLog(this.getClass())-->Line_4 $$ log.debug("debug")[ FD ]
Line_2 $$ private void assertLogOutput() -->Line_8 $$ log.fatal("fatal")[ CD ]
