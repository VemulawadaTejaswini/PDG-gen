Line_2 $$ private static void cleanupSwingDataStructures() throws Exception -->Line_3 $$ Object manager = ReflectionUtil.getDeclaredMethod(Class.forName("javax.swing.KeyboardManager"), "getCurrentManager").invoke(null)[ CD ]
Line_4 $$ Map componentKeyStrokeMap = ReflectionUtil.getField(manager.getClass(), manager, Hashtable.class, "componentKeyStrokeMap")-->Line_5 $$ componentKeyStrokeMap.clear()[ FD ]
Line_6 $$ Map containerMap = ReflectionUtil.getField(manager.getClass(), manager, Hashtable.class, "containerMap")-->Line_7 $$ containerMap.clear()[ FD ]
Line_2 $$ private static void cleanupSwingDataStructures() throws Exception -->Line_6 $$ Map containerMap = ReflectionUtil.getField(manager.getClass(), manager, Hashtable.class, "containerMap")[ CD ]
Line_3 $$ Object manager = ReflectionUtil.getDeclaredMethod(Class.forName("javax.swing.KeyboardManager"), "getCurrentManager").invoke(null)-->Line_4 $$ Map componentKeyStrokeMap = ReflectionUtil.getField(manager.getClass(), manager, Hashtable.class, "componentKeyStrokeMap")[ FD ]
Line_3 $$ Object manager = ReflectionUtil.getDeclaredMethod(Class.forName("javax.swing.KeyboardManager"), "getCurrentManager").invoke(null)-->Line_6 $$ Map containerMap = ReflectionUtil.getField(manager.getClass(), manager, Hashtable.class, "containerMap")[ FD ]
Line_2 $$ private static void cleanupSwingDataStructures() throws Exception -->Line_7 $$ containerMap.clear()[ CD ]
Line_2 $$ private static void cleanupSwingDataStructures() throws Exception -->Line_5 $$ componentKeyStrokeMap.clear()[ CD ]
Line_2 $$ private static void cleanupSwingDataStructures() throws Exception -->Line_4 $$ Map componentKeyStrokeMap = ReflectionUtil.getField(manager.getClass(), manager, Hashtable.class, "componentKeyStrokeMap")[ CD ]
