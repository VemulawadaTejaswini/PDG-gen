Line_4 $$ for (Path snapshotFile : snapshotFileLengthMap.keySet()) -->Line_9 $$ s = "FAILED: " + getClass().getSimpleName() + ": file=" + file + ", snapshotFile" + snapshotFile + "\n\n currentSnapshotFileLen = " + currentSnapshotFileLen + "\noriginalSnapshotFileLen = " + originalSnapshotFileLen + "\n\nfile        : " + fsdir.getINode(file.toString()).toDetailString() + "\n\nsnapshotFile: " + fsdir.getINode(snapshotFile.toString()).toDetailString()[ FD ]
Line_4 $$ for (Path snapshotFile : snapshotFileLengthMap.keySet()) -->Line_14 $$ FSDataInputStream input = fs.open(snapshotFile)[ FD ]
Line_13 $$ if (currentSnapshotFileLen != -1L && !(this instanceof FileAppendNotClose)) -->Line_14 $$ FSDataInputStream input = fs.open(snapshotFile)[ CD ]
Line_9 $$ s = "FAILED: " + getClass().getSimpleName() + ": file=" + file + ", snapshotFile" + snapshotFile + "\n\n currentSnapshotFileLen = " + currentSnapshotFileLen + "\noriginalSnapshotFileLen = " + originalSnapshotFileLen + "\n\nfile        : " + fsdir.getINode(file.toString()).toDetailString() + "\n\nsnapshotFile: " + fsdir.getINode(snapshotFile.toString()).toDetailString()-->Line_17 $$ s = "FAILED: " + getClass().getSimpleName() + ": file=" + file + ", snapshotFile" + snapshotFile + "\n\n currentSnapshotFileLen = " + currentSnapshotFileLen + "\n                readLen = " + readLen + "\n\nfile        : " + fsdir.getINode(file.toString()).toDetailString() + "\n\nsnapshotFile: " + fsdir.getINode(snapshotFile.toString()).toDetailString()[ FD ]
Line_14 $$ FSDataInputStream input = fs.open(snapshotFile)-->Line_15 $$ int readLen = input.read(currentSnapshotFileLen, buffer, 0, 1)[ FD ]
Line_7 $$ String s = null-->Line_9 $$ s = "FAILED: " + getClass().getSimpleName() + ": file=" + file + ", snapshotFile" + snapshotFile + "\n\n currentSnapshotFileLen = " + currentSnapshotFileLen + "\noriginalSnapshotFileLen = " + originalSnapshotFileLen + "\n\nfile        : " + fsdir.getINode(file.toString()).toDetailString() + "\n\nsnapshotFile: " + fsdir.getINode(snapshotFile.toString()).toDetailString()[ FD ]
Line_17 $$ s = "FAILED: " + getClass().getSimpleName() + ": file=" + file + ", snapshotFile" + snapshotFile + "\n\n currentSnapshotFileLen = " + currentSnapshotFileLen + "\n                readLen = " + readLen + "\n\nfile        : " + fsdir.getINode(file.toString()).toDetailString() + "\n\nsnapshotFile: " + fsdir.getINode(snapshotFile.toString()).toDetailString()-->Line_18 $$ SnapshotTestHelper.dumpTree(s, cluster)[ FD ]
Line_7 $$ String s = null-->Line_17 $$ s = "FAILED: " + getClass().getSimpleName() + ": file=" + file + ", snapshotFile" + snapshotFile + "\n\n currentSnapshotFileLen = " + currentSnapshotFileLen + "\n                readLen = " + readLen + "\n\nfile        : " + fsdir.getINode(file.toString()).toDetailString() + "\n\nsnapshotFile: " + fsdir.getINode(snapshotFile.toString()).toDetailString()[ FD ]
Line_9 $$ s = "FAILED: " + getClass().getSimpleName() + ": file=" + file + ", snapshotFile" + snapshotFile + "\n\n currentSnapshotFileLen = " + currentSnapshotFileLen + "\noriginalSnapshotFileLen = " + originalSnapshotFileLen + "\n\nfile        : " + fsdir.getINode(file.toString()).toDetailString() + "\n\nsnapshotFile: " + fsdir.getINode(snapshotFile.toString()).toDetailString()-->Line_12 $$ assertEquals(s, originalSnapshotFileLen, currentSnapshotFileLen)[ FD ]
Line_6 $$ long originalSnapshotFileLen = snapshotFileLengthMap.get(snapshotFile)-->Line_8 $$ if (currentSnapshotFileLen != originalSnapshotFileLen) [ FD ]
Line_4 $$ for (Path snapshotFile : snapshotFileLengthMap.keySet()) -->Line_5 $$ long currentSnapshotFileLen = fs.exists(snapshotFile) ? fs.getFileStatus(snapshotFile).getLen() : -1L[ FD ]
Line_5 $$ long currentSnapshotFileLen = fs.exists(snapshotFile) ? fs.getFileStatus(snapshotFile).getLen() : -1L-->Line_15 $$ int readLen = input.read(currentSnapshotFileLen, buffer, 0, 1)[ FD ]
Line_5 $$ long currentSnapshotFileLen = fs.exists(snapshotFile) ? fs.getFileStatus(snapshotFile).getLen() : -1L-->Line_8 $$ if (currentSnapshotFileLen != originalSnapshotFileLen) [ FD ]
Line_16 $$ if (readLen != -1) -->Line_17 $$ s = "FAILED: " + getClass().getSimpleName() + ": file=" + file + ", snapshotFile" + snapshotFile + "\n\n currentSnapshotFileLen = " + currentSnapshotFileLen + "\n                readLen = " + readLen + "\n\nfile        : " + fsdir.getINode(file.toString()).toDetailString() + "\n\nsnapshotFile: " + fsdir.getINode(snapshotFile.toString()).toDetailString()[ CD ]
Line_2 $$ void checkSnapshots() throws Exception -->Line_3 $$ byte[] buffer = new byte[32][ CD ]
Line_7 $$ String s = null-->Line_12 $$ assertEquals(s, originalSnapshotFileLen, currentSnapshotFileLen)[ FD ]
Line_15 $$ int readLen = input.read(currentSnapshotFileLen, buffer, 0, 1)-->Line_16 $$ if (readLen != -1) [ FD ]
Line_17 $$ s = "FAILED: " + getClass().getSimpleName() + ": file=" + file + ", snapshotFile" + snapshotFile + "\n\n currentSnapshotFileLen = " + currentSnapshotFileLen + "\n                readLen = " + readLen + "\n\nfile        : " + fsdir.getINode(file.toString()).toDetailString() + "\n\nsnapshotFile: " + fsdir.getINode(snapshotFile.toString()).toDetailString()-->Line_20 $$ assertEquals(s, -1, readLen)[ FD ]
Line_13 $$ if (currentSnapshotFileLen != -1L && !(this instanceof FileAppendNotClose)) -->Line_21 $$ input.close()[ CD ]
Line_8 $$ if (currentSnapshotFileLen != originalSnapshotFileLen) -->Line_10 $$ SnapshotTestHelper.dumpTree(s, cluster)[ CD ]
Line_9 $$ s = "FAILED: " + getClass().getSimpleName() + ": file=" + file + ", snapshotFile" + snapshotFile + "\n\n currentSnapshotFileLen = " + currentSnapshotFileLen + "\noriginalSnapshotFileLen = " + originalSnapshotFileLen + "\n\nfile        : " + fsdir.getINode(file.toString()).toDetailString() + "\n\nsnapshotFile: " + fsdir.getINode(snapshotFile.toString()).toDetailString()-->Line_18 $$ SnapshotTestHelper.dumpTree(s, cluster)[ FD ]
Line_5 $$ long currentSnapshotFileLen = fs.exists(snapshotFile) ? fs.getFileStatus(snapshotFile).getLen() : -1L-->Line_12 $$ assertEquals(s, originalSnapshotFileLen, currentSnapshotFileLen)[ FD ]
Line_13 $$ if (currentSnapshotFileLen != -1L && !(this instanceof FileAppendNotClose)) -->Line_16 $$ if (readLen != -1) [ CD ]
Line_7 $$ String s = null-->Line_18 $$ SnapshotTestHelper.dumpTree(s, cluster)[ FD ]
Line_4 $$ for (Path snapshotFile : snapshotFileLengthMap.keySet()) -->Line_17 $$ s = "FAILED: " + getClass().getSimpleName() + ": file=" + file + ", snapshotFile" + snapshotFile + "\n\n currentSnapshotFileLen = " + currentSnapshotFileLen + "\n                readLen = " + readLen + "\n\nfile        : " + fsdir.getINode(file.toString()).toDetailString() + "\n\nsnapshotFile: " + fsdir.getINode(snapshotFile.toString()).toDetailString()[ FD ]
Line_9 $$ s = "FAILED: " + getClass().getSimpleName() + ": file=" + file + ", snapshotFile" + snapshotFile + "\n\n currentSnapshotFileLen = " + currentSnapshotFileLen + "\noriginalSnapshotFileLen = " + originalSnapshotFileLen + "\n\nfile        : " + fsdir.getINode(file.toString()).toDetailString() + "\n\nsnapshotFile: " + fsdir.getINode(snapshotFile.toString()).toDetailString()-->Line_20 $$ assertEquals(s, -1, readLen)[ FD ]
Line_4 $$ for (Path snapshotFile : snapshotFileLengthMap.keySet()) -->Line_6 $$ long originalSnapshotFileLen = snapshotFileLengthMap.get(snapshotFile)[ FD ]
Line_3 $$ byte[] buffer = new byte[32]-->Line_15 $$ int readLen = input.read(currentSnapshotFileLen, buffer, 0, 1)[ FD ]
Line_14 $$ FSDataInputStream input = fs.open(snapshotFile)-->Line_21 $$ input.close()[ FD ]
Line_13 $$ if (currentSnapshotFileLen != -1L && !(this instanceof FileAppendNotClose)) -->Line_20 $$ assertEquals(s, -1, readLen)[ CD ]
Line_16 $$ if (readLen != -1) -->Line_18 $$ SnapshotTestHelper.dumpTree(s, cluster)[ CD ]
Line_6 $$ long originalSnapshotFileLen = snapshotFileLengthMap.get(snapshotFile)-->Line_12 $$ assertEquals(s, originalSnapshotFileLen, currentSnapshotFileLen)[ FD ]
Line_8 $$ if (currentSnapshotFileLen != originalSnapshotFileLen) -->Line_9 $$ s = "FAILED: " + getClass().getSimpleName() + ": file=" + file + ", snapshotFile" + snapshotFile + "\n\n currentSnapshotFileLen = " + currentSnapshotFileLen + "\noriginalSnapshotFileLen = " + originalSnapshotFileLen + "\n\nfile        : " + fsdir.getINode(file.toString()).toDetailString() + "\n\nsnapshotFile: " + fsdir.getINode(snapshotFile.toString()).toDetailString()[ CD ]
Line_13 $$ if (currentSnapshotFileLen != -1L && !(this instanceof FileAppendNotClose)) -->Line_15 $$ int readLen = input.read(currentSnapshotFileLen, buffer, 0, 1)[ CD ]
Line_15 $$ int readLen = input.read(currentSnapshotFileLen, buffer, 0, 1)-->Line_20 $$ assertEquals(s, -1, readLen)[ FD ]
Line_7 $$ String s = null-->Line_10 $$ SnapshotTestHelper.dumpTree(s, cluster)[ FD ]
Line_7 $$ String s = null-->Line_20 $$ assertEquals(s, -1, readLen)[ FD ]
Line_9 $$ s = "FAILED: " + getClass().getSimpleName() + ": file=" + file + ", snapshotFile" + snapshotFile + "\n\n currentSnapshotFileLen = " + currentSnapshotFileLen + "\noriginalSnapshotFileLen = " + originalSnapshotFileLen + "\n\nfile        : " + fsdir.getINode(file.toString()).toDetailString() + "\n\nsnapshotFile: " + fsdir.getINode(snapshotFile.toString()).toDetailString()-->Line_10 $$ SnapshotTestHelper.dumpTree(s, cluster)[ FD ]
