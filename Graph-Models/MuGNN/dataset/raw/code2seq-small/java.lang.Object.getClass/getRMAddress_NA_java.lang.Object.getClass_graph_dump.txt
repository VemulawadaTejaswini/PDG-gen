Line_2 $$ protected InetSocketAddress getRMAddress(YarnConfiguration conf, Class<?> protocol) throws IOException -->Line_7 $$ if (protocol == ApplicationMasterProtocol.class) [ FD ]
Line_2 $$ protected InetSocketAddress getRMAddress(YarnConfiguration conf, Class<?> protocol) throws IOException -->Line_8 $$ InetSocketAddress serviceAddr = conf.getSocketAddr(YarnConfiguration.RM_SCHEDULER_ADDRESS, YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS, YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT)[ FD ]
Line_12 $$ String message = "Unsupported protocol found when creating the proxy " + "connection to ResourceManager: " + ((protocol != null) ? protocol.getClass().getName() : "null")-->Line_13 $$ LOG.error(message)[ FD ]
Line_5 $$ if (protocol == ResourceManagerAdministrationProtocol.class) -->Line_7 $$ if (protocol == ApplicationMasterProtocol.class) [ CD ]
Line_7 $$ if (protocol == ApplicationMasterProtocol.class) -->Line_8 $$ InetSocketAddress serviceAddr = conf.getSocketAddr(YarnConfiguration.RM_SCHEDULER_ADDRESS, YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS, YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT)[ CD ]
Line_2 $$ protected InetSocketAddress getRMAddress(YarnConfiguration conf, Class<?> protocol) throws IOException -->Line_3 $$ if (protocol == ApplicationClientProtocol.class) [ FD ]
Line_7 $$ if (protocol == ApplicationMasterProtocol.class) -->Line_12 $$ String message = "Unsupported protocol found when creating the proxy " + "connection to ResourceManager: " + ((protocol != null) ? protocol.getClass().getName() : "null")[ CD ]
Line_5 $$ if (protocol == ResourceManagerAdministrationProtocol.class) -->Line_6 $$ return conf.getSocketAddr(YarnConfiguration.RM_ADMIN_ADDRESS, YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS, YarnConfiguration.DEFAULT_RM_ADMIN_PORT)[ CD ]
Line_2 $$ protected InetSocketAddress getRMAddress(YarnConfiguration conf, Class<?> protocol) throws IOException -->Line_3 $$ if (protocol == ApplicationClientProtocol.class) [ CD ]
Line_2 $$ protected InetSocketAddress getRMAddress(YarnConfiguration conf, Class<?> protocol) throws IOException -->Line_5 $$ if (protocol == ResourceManagerAdministrationProtocol.class) [ FD ]
Line_2 $$ protected InetSocketAddress getRMAddress(YarnConfiguration conf, Class<?> protocol) throws IOException -->Line_6 $$ return conf.getSocketAddr(YarnConfiguration.RM_ADMIN_ADDRESS, YarnConfiguration.DEFAULT_RM_ADMIN_ADDRESS, YarnConfiguration.DEFAULT_RM_ADMIN_PORT)[ FD ]
Line_7 $$ if (protocol == ApplicationMasterProtocol.class) -->Line_13 $$ LOG.error(message)[ CD ]
Line_3 $$ if (protocol == ApplicationClientProtocol.class) -->Line_4 $$ return conf.getSocketAddr(YarnConfiguration.RM_ADDRESS, YarnConfiguration.DEFAULT_RM_ADDRESS, YarnConfiguration.DEFAULT_RM_PORT)[ CD ]
Line_2 $$ protected InetSocketAddress getRMAddress(YarnConfiguration conf, Class<?> protocol) throws IOException -->Line_4 $$ return conf.getSocketAddr(YarnConfiguration.RM_ADDRESS, YarnConfiguration.DEFAULT_RM_ADDRESS, YarnConfiguration.DEFAULT_RM_PORT)[ FD ]
Line_2 $$ protected InetSocketAddress getRMAddress(YarnConfiguration conf, Class<?> protocol) throws IOException -->Line_12 $$ String message = "Unsupported protocol found when creating the proxy " + "connection to ResourceManager: " + ((protocol != null) ? protocol.getClass().getName() : "null")[ FD ]
Line_8 $$ InetSocketAddress serviceAddr = conf.getSocketAddr(YarnConfiguration.RM_SCHEDULER_ADDRESS, YarnConfiguration.DEFAULT_RM_SCHEDULER_ADDRESS, YarnConfiguration.DEFAULT_RM_SCHEDULER_PORT)-->Line_9 $$ setupTokens(serviceAddr)[ FD ]
Line_3 $$ if (protocol == ApplicationClientProtocol.class) -->Line_5 $$ if (protocol == ResourceManagerAdministrationProtocol.class) [ CD ]
Line_7 $$ if (protocol == ApplicationMasterProtocol.class) -->Line_9 $$ setupTokens(serviceAddr)[ CD ]
Line_7 $$ if (protocol == ApplicationMasterProtocol.class) -->Line_10 $$ return serviceAddr[ CD ]
