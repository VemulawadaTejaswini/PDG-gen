Line_2 $$ public final Object getObjectInstance(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment) throws Exception -->Line_9 $$ final ServiceController<?> controller[ CD ]
Line_15 $$ final StabilityMonitor monitor = new StabilityMonitor()-->Line_16 $$ monitor.addController(controller)[ FD ]
Line_8 $$ final ServiceName serviceName = (ServiceName) nameAdr.getContent()-->Line_13 $$ throw NamingLogger.ROOT_LOGGER.cannotResolveService(serviceName)[ FD ]
Line_2 $$ public final Object getObjectInstance(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment) throws Exception -->Line_16 $$ monitor.addController(controller)[ CD ]
Line_8 $$ final ServiceName serviceName = (ServiceName) nameAdr.getContent()-->Line_30 $$ throw NamingLogger.ROOT_LOGGER.cannotResolveService(serviceName, getClass().getName(), "REMOVED")[ FD ]
Line_2 $$ public final Object getObjectInstance(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment) throws Exception -->Line_3 $$ final Reference reference = (Reference) obj[ CD ]
Line_15 $$ final StabilityMonitor monitor = new StabilityMonitor()-->Line_22 $$ monitor.removeController(controller)[ FD ]
Line_11 $$ controller = serviceRegistry.getRequiredService(serviceName)-->Line_22 $$ monitor.removeController(controller)[ FD ]
Line_9 $$ final ServiceController<?> controller-->Line_24 $$ switch(controller.getState()) [ FD ]
Line_3 $$ final Reference reference = (Reference) obj-->Line_4 $$ final ServiceNameRefAdr nameAdr = (ServiceNameRefAdr) reference.get("srof")[ FD ]
Line_9 $$ final ServiceController<?> controller-->Line_11 $$ controller = serviceRegistry.getRequiredService(serviceName)[ FD ]
Line_2 $$ public final Object getObjectInstance(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment) throws Exception -->Line_8 $$ final ServiceName serviceName = (ServiceName) nameAdr.getContent()[ CD ]
Line_8 $$ final ServiceName serviceName = (ServiceName) nameAdr.getContent()-->Line_32 $$ throw NamingLogger.ROOT_LOGGER.cannotResolveServiceBug(serviceName, getClass().getName(), controller.getState().toString())[ FD ]
Line_15 $$ final StabilityMonitor monitor = new StabilityMonitor()-->Line_18 $$ monitor.awaitStability()[ FD ]
Line_9 $$ final ServiceController<?> controller-->Line_22 $$ monitor.removeController(controller)[ FD ]
Line_9 $$ final ServiceController<?> controller-->Line_26 $$ return getObjectInstance(controller.getValue(), obj, name, nameCtx, environment)[ FD ]
Line_2 $$ public final Object getObjectInstance(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment) throws Exception -->Line_26 $$ return getObjectInstance(controller.getValue(), obj, name, nameCtx, environment)[ FD ]
Line_8 $$ final ServiceName serviceName = (ServiceName) nameAdr.getContent()-->Line_11 $$ controller = serviceRegistry.getRequiredService(serviceName)[ FD ]
Line_2 $$ public final Object getObjectInstance(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment) throws Exception -->Line_5 $$ if (nameAdr == null) [ CD ]
Line_2 $$ public final Object getObjectInstance(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment) throws Exception -->Line_15 $$ final StabilityMonitor monitor = new StabilityMonitor()[ CD ]
Line_4 $$ final ServiceNameRefAdr nameAdr = (ServiceNameRefAdr) reference.get("srof")-->Line_8 $$ final ServiceName serviceName = (ServiceName) nameAdr.getContent()[ FD ]
Line_9 $$ final ServiceController<?> controller-->Line_16 $$ monitor.addController(controller)[ FD ]
Line_8 $$ final ServiceName serviceName = (ServiceName) nameAdr.getContent()-->Line_20 $$ throw NamingLogger.ROOT_LOGGER.threadInterrupt(serviceName)[ FD ]
Line_9 $$ final ServiceController<?> controller-->Line_32 $$ throw NamingLogger.ROOT_LOGGER.cannotResolveServiceBug(serviceName, getClass().getName(), controller.getState().toString())[ FD ]
Line_2 $$ public final Object getObjectInstance(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment) throws Exception -->Line_4 $$ final ServiceNameRefAdr nameAdr = (ServiceNameRefAdr) reference.get("srof")[ CD ]
Line_11 $$ controller = serviceRegistry.getRequiredService(serviceName)-->Line_24 $$ switch(controller.getState()) [ FD ]
Line_8 $$ final ServiceName serviceName = (ServiceName) nameAdr.getContent()-->Line_28 $$ throw NamingLogger.ROOT_LOGGER.cannotResolveService(serviceName, getClass().getName(), "START_FAILED")[ FD ]
Line_11 $$ controller = serviceRegistry.getRequiredService(serviceName)-->Line_16 $$ monitor.addController(controller)[ FD ]
Line_4 $$ final ServiceNameRefAdr nameAdr = (ServiceNameRefAdr) reference.get("srof")-->Line_5 $$ if (nameAdr == null) [ FD ]
Line_11 $$ controller = serviceRegistry.getRequiredService(serviceName)-->Line_26 $$ return getObjectInstance(controller.getValue(), obj, name, nameCtx, environment)[ FD ]
Line_11 $$ controller = serviceRegistry.getRequiredService(serviceName)-->Line_32 $$ throw NamingLogger.ROOT_LOGGER.cannotResolveServiceBug(serviceName, getClass().getName(), controller.getState().toString())[ FD ]
