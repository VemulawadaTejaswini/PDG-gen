Line_20 $$ if (f == null) -->Line_21 $$ familyNameLogs[i].setValue(null)[ CD ]
Line_6 $$ for (int i = 0; i < numFamilies; ++i) -->Line_8 $$ familyNameLogs[i] = new Log()[ CD ]
Line_2 $$ protected void withRandomFamilies(int numFamilies, BiConsumer<Session, Family[]> consumer, String[] familyNameUpdates, Set<String>[] familyMembersUpdates, LockMode lockMode) throws Exception -->Line_3 $$ int[] ids = new int[numFamilies][ CD ]
Line_2 $$ protected void withRandomFamilies(int numFamilies, BiConsumer<Session, Family[]> consumer, String[] familyNameUpdates, Set<String>[] familyMembersUpdates, LockMode lockMode) throws Exception -->Line_29 $$ consumer.accept(s, families)[ FD ]
Line_2 $$ protected void withRandomFamilies(int numFamilies, BiConsumer<Session, Family[]> consumer, String[] familyNameUpdates, Set<String>[] familyMembersUpdates, LockMode lockMode) throws Exception -->Line_6 $$ for (int i = 0; i < numFamilies; ++i) [ FD ]
Line_18 $$ Family f = lockMode != null ? s.get(Family.class, ids[i], lockMode) : s.get(Family.class, ids[i])-->Line_26 $$ familyMembersLogs[i].setValue(membersToNames(f.getMembers()))[ FD ]
Line_13 $$ boolean failure = false-->Line_37 $$ recordReadWrite(ids[i], before, after, failure, familyNameUpdates != null ? Ref.of(familyNameUpdates[i]) : Ref.empty(), familyMembersUpdates != null ? Ref.of(familyMembersUpdates[i]) : Ref.empty(), familyNameLogs[i], familyMembersLogs[i])[ FD ]
Line_17 $$ for (int i = 0; i < numFamilies; ++i) -->Line_18 $$ Family f = lockMode != null ? s.get(Family.class, ids[i], lockMode) : s.get(Family.class, ids[i])[ CD ]
Line_2 $$ protected void withRandomFamilies(int numFamilies, BiConsumer<Session, Family[]> consumer, String[] familyNameUpdates, Set<String>[] familyMembersUpdates, LockMode lockMode) throws Exception -->Line_4 $$ Log<String>[] familyNameLogs = new Log[numFamilies][ CD ]
Line_2 $$ protected void withRandomFamilies(int numFamilies, BiConsumer<Session, Family[]> consumer, String[] familyNameUpdates, Set<String>[] familyMembersUpdates, LockMode lockMode) throws Exception -->Line_36 $$ for (int i = 0; i < numFamilies; ++i) [ FD ]
Line_2 $$ protected void withRandomFamilies(int numFamilies, BiConsumer<Session, Family[]> consumer, String[] familyNameUpdates, Set<String>[] familyMembersUpdates, LockMode lockMode) throws Exception -->Line_6 $$ for (int i = 0; i < numFamilies; ++i) [ CD ]
Line_18 $$ Family f = lockMode != null ? s.get(Family.class, ids[i], lockMode) : s.get(Family.class, ids[i])-->Line_19 $$ families[i] = f[ FD ]
Line_17 $$ for (int i = 0; i < numFamilies; ++i) -->Line_20 $$ if (f == null) [ CD ]
Line_20 $$ if (f == null) -->Line_26 $$ familyMembersLogs[i].setValue(membersToNames(f.getMembers()))[ CD ]
Line_36 $$ for (int i = 0; i < numFamilies; ++i) -->Line_37 $$ recordReadWrite(ids[i], before, after, failure, familyNameUpdates != null ? Ref.of(familyNameUpdates[i]) : Ref.empty(), familyMembersUpdates != null ? Ref.of(familyMembersUpdates[i]) : Ref.empty(), familyNameLogs[i], familyMembersLogs[i])[ CD ]
Line_6 $$ for (int i = 0; i < numFamilies; ++i) -->Line_9 $$ familyMembersLogs[i] = new Log()[ CD ]
Line_20 $$ if (f == null) -->Line_25 $$ familyNameLogs[i].setValue(f.getName())[ CD ]
Line_11 $$ int before = timestampGenerator.getAndIncrement()-->Line_12 $$ log.tracef("Started %s(%s) at %d", getClass().getSimpleName(), Arrays.toString(ids), before)[ FD ]
Line_17 $$ for (int i = 0; i < numFamilies; ++i) -->Line_19 $$ families[i] = f[ CD ]
Line_2 $$ protected void withRandomFamilies(int numFamilies, BiConsumer<Session, Family[]> consumer, String[] familyNameUpdates, Set<String>[] familyMembersUpdates, LockMode lockMode) throws Exception -->Line_17 $$ for (int i = 0; i < numFamilies; ++i) [ FD ]
Line_32 $$ failure = true-->Line_37 $$ recordReadWrite(ids[i], before, after, failure, familyNameUpdates != null ? Ref.of(familyNameUpdates[i]) : Ref.empty(), familyMembersUpdates != null ? Ref.of(familyMembersUpdates[i]) : Ref.empty(), familyNameLogs[i], familyMembersLogs[i])[ FD ]
Line_3 $$ int[] ids = new int[numFamilies]-->Line_12 $$ log.tracef("Started %s(%s) at %d", getClass().getSimpleName(), Arrays.toString(ids), before)[ FD ]
Line_2 $$ protected void withRandomFamilies(int numFamilies, BiConsumer<Session, Family[]> consumer, String[] familyNameUpdates, Set<String>[] familyMembersUpdates, LockMode lockMode) throws Exception -->Line_5 $$ Log<Set<String>>[] familyMembersLogs = new Log[numFamilies][ CD ]
Line_20 $$ if (f == null) -->Line_23 $$ familyNotFound(ids[i])[ CD ]
Line_20 $$ if (f == null) -->Line_22 $$ familyMembersLogs[i].setValue(Collections.EMPTY_SET)[ CD ]
Line_11 $$ int before = timestampGenerator.getAndIncrement()-->Line_37 $$ recordReadWrite(ids[i], before, after, failure, familyNameUpdates != null ? Ref.of(familyNameUpdates[i]) : Ref.empty(), familyMembersUpdates != null ? Ref.of(familyMembersUpdates[i]) : Ref.empty(), familyNameLogs[i], familyMembersLogs[i])[ FD ]
Line_17 $$ for (int i = 0; i < numFamilies; ++i) -->Line_36 $$ for (int i = 0; i < numFamilies; ++i) [ FD ]
Line_6 $$ for (int i = 0; i < numFamilies; ++i) -->Line_17 $$ for (int i = 0; i < numFamilies; ++i) [ FD ]
Line_2 $$ protected void withRandomFamilies(int numFamilies, BiConsumer<Session, Family[]> consumer, String[] familyNameUpdates, Set<String>[] familyMembersUpdates, LockMode lockMode) throws Exception -->Line_11 $$ int before = timestampGenerator.getAndIncrement()[ CD ]
Line_6 $$ for (int i = 0; i < numFamilies; ++i) -->Line_36 $$ for (int i = 0; i < numFamilies; ++i) [ FD ]
Line_6 $$ for (int i = 0; i < numFamilies; ++i) -->Line_7 $$ ids[i] = randomFamilyId(ThreadLocalRandom.current())[ CD ]
Line_16 $$ Family[] families = new Family[numFamilies]-->Line_29 $$ consumer.accept(s, families)[ FD ]
Line_13 $$ boolean failure = false-->Line_32 $$ failure = true[ FD ]
Line_2 $$ protected void withRandomFamilies(int numFamilies, BiConsumer<Session, Family[]> consumer, String[] familyNameUpdates, Set<String>[] familyMembersUpdates, LockMode lockMode) throws Exception -->Line_18 $$ Family f = lockMode != null ? s.get(Family.class, ids[i], lockMode) : s.get(Family.class, ids[i])[ FD ]
Line_35 $$ int after = timestampGenerator.getAndIncrement()-->Line_37 $$ recordReadWrite(ids[i], before, after, failure, familyNameUpdates != null ? Ref.of(familyNameUpdates[i]) : Ref.empty(), familyMembersUpdates != null ? Ref.of(familyMembersUpdates[i]) : Ref.empty(), familyNameLogs[i], familyMembersLogs[i])[ FD ]
Line_18 $$ Family f = lockMode != null ? s.get(Family.class, ids[i], lockMode) : s.get(Family.class, ids[i])-->Line_25 $$ familyNameLogs[i].setValue(f.getName())[ FD ]
Line_2 $$ protected void withRandomFamilies(int numFamilies, BiConsumer<Session, Family[]> consumer, String[] familyNameUpdates, Set<String>[] familyMembersUpdates, LockMode lockMode) throws Exception -->Line_13 $$ boolean failure = false[ CD ]
Line_18 $$ Family f = lockMode != null ? s.get(Family.class, ids[i], lockMode) : s.get(Family.class, ids[i])-->Line_20 $$ if (f == null) [ FD ]
Line_2 $$ protected void withRandomFamilies(int numFamilies, BiConsumer<Session, Family[]> consumer, String[] familyNameUpdates, Set<String>[] familyMembersUpdates, LockMode lockMode) throws Exception -->Line_12 $$ log.tracef("Started %s(%s) at %d", getClass().getSimpleName(), Arrays.toString(ids), before)[ CD ]
