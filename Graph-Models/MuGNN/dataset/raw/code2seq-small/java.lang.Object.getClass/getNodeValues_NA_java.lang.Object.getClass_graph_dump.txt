Line_3 $$ if (node instanceof FileCollection) -->Line_5 $$ values.add(fileCollection)[ CD ]
Line_3 $$ if (node instanceof FileCollection) -->Line_6 $$ if (node instanceof ResolvableDependency) [ CD ]
Line_3 $$ if (node instanceof FileCollection) -->Line_4 $$ FileCollection fileCollection = (FileCollection) node[ CD ]
Line_6 $$ if (node instanceof ResolvableDependency) -->Line_7 $$ ResolvableDependency resolvableDependency = (ResolvableDependency) node[ CD ]
Line_2 $$ public void getNodeValues(Object node, Collection<? super FileCollection> values, Collection<? super Object> connectedNodes) -->Line_3 $$ if (node instanceof FileCollection) [ FD ]
Line_6 $$ if (node instanceof ResolvableDependency) -->Line_11 $$ queue.clear()[ CD ]
Line_6 $$ if (node instanceof ResolvableDependency) -->Line_9 $$ resolvableDependency.resolve(CachingDependencyResolveContext.this)[ CD ]
Line_2 $$ public void getNodeValues(Object node, Collection<? super FileCollection> values, Collection<? super Object> connectedNodes) -->Line_13 $$ throw new IllegalArgumentException(String.format("Cannot resolve object of unknown type %s.", node.getClass().getSimpleName()))[ FD ]
Line_2 $$ public void getNodeValues(Object node, Collection<? super FileCollection> values, Collection<? super Object> connectedNodes) -->Line_6 $$ if (node instanceof ResolvableDependency) [ FD ]
Line_6 $$ if (node instanceof ResolvableDependency) -->Line_10 $$ connectedNodes.addAll(queue)[ CD ]
Line_2 $$ public void getNodeValues(Object node, Collection<? super FileCollection> values, Collection<? super Object> connectedNodes) -->Line_3 $$ if (node instanceof FileCollection) [ CD ]
Line_2 $$ public void getNodeValues(Object node, Collection<? super FileCollection> values, Collection<? super Object> connectedNodes) -->Line_10 $$ connectedNodes.addAll(queue)[ FD ]
Line_4 $$ FileCollection fileCollection = (FileCollection) node-->Line_5 $$ values.add(fileCollection)[ FD ]
Line_6 $$ if (node instanceof ResolvableDependency) -->Line_8 $$ queue.clear()[ CD ]
Line_2 $$ public void getNodeValues(Object node, Collection<? super FileCollection> values, Collection<? super Object> connectedNodes) -->Line_5 $$ values.add(fileCollection)[ FD ]
Line_7 $$ ResolvableDependency resolvableDependency = (ResolvableDependency) node-->Line_9 $$ resolvableDependency.resolve(CachingDependencyResolveContext.this)[ FD ]
