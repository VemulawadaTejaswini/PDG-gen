Line_2 $$ public void testClassRegisterAndUnregister() -->Line_18 $$ Assert.assertTrue(_postfixDirections.isEmpty())[ CD ]
Line_2 $$ public void testClassRegisterAndUnregister() -->Line_16 $$ DistributedRegistry.unregisterDistributed(ChildClass.class)[ CD ]
Line_2 $$ public void testClassRegisterAndUnregister() -->Line_13 $$ Assert.assertEquals(Direction.DUPLEX, _prefixDirections.get(ChildClass.name3))[ CD ]
Line_2 $$ public void testClassRegisterAndUnregister() -->Line_7 $$ Assert.assertEquals(Direction.REQUEST, _exactDirections.get(ChildClass.name10))[ CD ]
Line_2 $$ public void testClassRegisterAndUnregister() -->Line_10 $$ Assert.assertEquals(Direction.RESPONSE, _postfixDirections.get(ChildClass.name7))[ CD ]
Line_24 $$ Throwable throwable = re.getCause()-->Line_26 $$ throwable = throwable.getCause()[ FD ]
Line_2 $$ public void testClassRegisterAndUnregister() -->Line_8 $$ Assert.assertEquals(3, _postfixDirections.size())[ CD ]
Line_2 $$ public void testClassRegisterAndUnregister() -->Line_17 $$ Assert.assertTrue(_exactDirections.isEmpty())[ CD ]
Line_2 $$ public void testClassRegisterAndUnregister() -->Line_19 $$ Assert.assertTrue(_prefixDirections.isEmpty())[ CD ]
Line_2 $$ public void testClassRegisterAndUnregister() -->Line_6 $$ Assert.assertEquals(Direction.REQUEST, _exactDirections.get(ChildClass.name6))[ CD ]
Line_2 $$ public void testClassRegisterAndUnregister() -->Line_15 $$ Assert.assertEquals(Direction.DUPLEX, _prefixDirections.get(ChildClass.name12))[ CD ]
Line_24 $$ Throwable throwable = re.getCause()-->Line_27 $$ Assert.assertSame(NullPointerException.class, throwable.getClass())[ FD ]
Line_2 $$ public void testClassRegisterAndUnregister() -->Line_12 $$ Assert.assertEquals(3, _prefixDirections.size())[ CD ]
Line_24 $$ Throwable throwable = re.getCause()-->Line_25 $$ Assert.assertSame(ExceptionInInitializerError.class, throwable.getClass())[ FD ]
Line_2 $$ public void testClassRegisterAndUnregister() -->Line_4 $$ Assert.assertEquals(3, _exactDirections.size())[ CD ]
Line_2 $$ public void testClassRegisterAndUnregister() -->Line_3 $$ DistributedRegistry.registerDistributed(ChildClass.class)[ CD ]
Line_2 $$ public void testClassRegisterAndUnregister() -->Line_11 $$ Assert.assertEquals(Direction.RESPONSE, _postfixDirections.get(ChildClass.name11))[ CD ]
Line_2 $$ public void testClassRegisterAndUnregister() -->Line_5 $$ Assert.assertEquals(Direction.REQUEST, _exactDirections.get(ChildClass.name1))[ CD ]
Line_2 $$ public void testClassRegisterAndUnregister() -->Line_14 $$ Assert.assertEquals(Direction.DUPLEX, _prefixDirections.get(ChildClass.name8))[ CD ]
Line_26 $$ throwable = throwable.getCause()-->Line_27 $$ Assert.assertSame(NullPointerException.class, throwable.getClass())[ FD ]
Line_2 $$ public void testClassRegisterAndUnregister() -->Line_9 $$ Assert.assertEquals(Direction.RESPONSE, _postfixDirections.get(ChildClass.name2))[ CD ]
