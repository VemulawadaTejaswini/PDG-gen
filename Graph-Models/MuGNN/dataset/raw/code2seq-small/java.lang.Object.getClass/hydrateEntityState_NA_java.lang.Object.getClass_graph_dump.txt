Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_8 $$ final EntityKey entityKey = processingState.getEntityKey()[ CD ]
Line_17 $$ if (existing != null) -->Line_18 $$ if (!entityReference.getEntityPersister().isInstance(existing)) [ CD ]
Line_27 $$ final EntityKey optionalEntityKey = ResultSetProcessorHelper.getOptionalObjectKey(context.getQueryParameters(), context.getSession())-->Line_28 $$ if (optionalEntityKey != null) [ FD ]
Line_3 $$ final EntityReferenceProcessingState processingState = context.getProcessingState(entityReference)-->Line_4 $$ if (processingState.isMissingIdentifier()) [ FD ]
Line_8 $$ final EntityKey entityKey = processingState.getEntityKey()-->Line_35 $$ final Object entityInstance = optionalEntityInstance != null ? optionalEntityInstance : context.getSession().instantiate(concreteEntityTypeName, entityKey.getIdentifier())[ FD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_26 $$ if (isReturn && context.shouldUseOptionalEntityInformation()) [ FD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_3 $$ final EntityReferenceProcessingState processingState = context.getProcessingState(entityReference)[ FD ]
Line_39 $$ final LockMode lockModeToAcquire = requestedLockMode == LockMode.NONE ? LockMode.READ : requestedLockMode-->Line_40 $$ loadFromResultSet(resultSet, context, entityInstance, concreteEntityTypeName, entityKey, lockModeToAcquire)[ FD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_21 $$ checkVersion(resultSet, context, entityKey, existing)[ FD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_3 $$ final EntityReferenceProcessingState processingState = context.getProcessingState(entityReference)[ CD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_39 $$ final LockMode lockModeToAcquire = requestedLockMode == LockMode.NONE ? LockMode.READ : requestedLockMode[ CD ]
Line_26 $$ if (isReturn && context.shouldUseOptionalEntityInformation()) -->Line_27 $$ final EntityKey optionalEntityKey = ResultSetProcessorHelper.getOptionalObjectKey(context.getQueryParameters(), context.getSession())[ CD ]
Line_3 $$ final EntityReferenceProcessingState processingState = context.getProcessingState(entityReference)-->Line_22 $$ processingState.registerEntityInstance(existing)[ FD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_5 $$ handleMissingIdentifier(context)[ FD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_30 $$ optionalEntityInstance = context.getQueryParameters().getOptionalObject()[ FD ]
Line_17 $$ if (existing != null) -->Line_21 $$ checkVersion(resultSet, context, entityKey, existing)[ CD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_10 $$ handleMissingIdentifier(context)[ FD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_38 $$ final LockMode requestedLockMode = context.resolveLockMode(entityReference)[ CD ]
Line_8 $$ final EntityKey entityKey = processingState.getEntityKey()-->Line_19 $$ throw new WrongClassException("loaded object was of wrong class " + existing.getClass(), entityKey.getIdentifier(), entityReference.getEntityPersister().getEntityName())[ FD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_40 $$ loadFromResultSet(resultSet, context, entityInstance, concreteEntityTypeName, entityKey, lockModeToAcquire)[ FD ]
Line_8 $$ final EntityKey entityKey = processingState.getEntityKey()-->Line_9 $$ if (entityKey == null) [ FD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_26 $$ if (isReturn && context.shouldUseOptionalEntityInformation()) [ CD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_35 $$ final Object entityInstance = optionalEntityInstance != null ? optionalEntityInstance : context.getSession().instantiate(concreteEntityTypeName, entityKey.getIdentifier())[ FD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_16 $$ final Object existing = context.getSession().getEntityUsingInterceptor(entityKey)[ CD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_9 $$ if (entityKey == null) [ CD ]
Line_8 $$ final EntityKey entityKey = processingState.getEntityKey()-->Line_34 $$ final String concreteEntityTypeName = getConcreteEntityTypeName(resultSet, context, entityKey)[ FD ]
Line_29 $$ if (optionalEntityKey.equals(entityKey)) -->Line_30 $$ optionalEntityInstance = context.getQueryParameters().getOptionalObject()[ CD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_38 $$ final LockMode requestedLockMode = context.resolveLockMode(entityReference)[ FD ]
Line_27 $$ final EntityKey optionalEntityKey = ResultSetProcessorHelper.getOptionalObjectKey(context.getQueryParameters(), context.getSession())-->Line_29 $$ if (optionalEntityKey.equals(entityKey)) [ FD ]
Line_16 $$ final Object existing = context.getSession().getEntityUsingInterceptor(entityKey)-->Line_22 $$ processingState.registerEntityInstance(existing)[ FD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_13 $$ if (processingState.getEntityInstance() != null) [ CD ]
Line_16 $$ final Object existing = context.getSession().getEntityUsingInterceptor(entityKey)-->Line_17 $$ if (existing != null) [ FD ]
Line_34 $$ final String concreteEntityTypeName = getConcreteEntityTypeName(resultSet, context, entityKey)-->Line_35 $$ final Object entityInstance = optionalEntityInstance != null ? optionalEntityInstance : context.getSession().instantiate(concreteEntityTypeName, entityKey.getIdentifier())[ FD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_27 $$ final EntityKey optionalEntityKey = ResultSetProcessorHelper.getOptionalObjectKey(context.getQueryParameters(), context.getSession())[ FD ]
Line_26 $$ if (isReturn && context.shouldUseOptionalEntityInformation()) -->Line_28 $$ if (optionalEntityKey != null) [ CD ]
Line_16 $$ final Object existing = context.getSession().getEntityUsingInterceptor(entityKey)-->Line_21 $$ checkVersion(resultSet, context, entityKey, existing)[ FD ]
Line_8 $$ final EntityKey entityKey = processingState.getEntityKey()-->Line_40 $$ loadFromResultSet(resultSet, context, entityInstance, concreteEntityTypeName, entityKey, lockModeToAcquire)[ FD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_4 $$ if (processingState.isMissingIdentifier()) [ CD ]
Line_17 $$ if (existing != null) -->Line_22 $$ processingState.registerEntityInstance(existing)[ CD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_34 $$ final String concreteEntityTypeName = getConcreteEntityTypeName(resultSet, context, entityKey)[ FD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_37 $$ log.trace("hydrating entity state")[ CD ]
Line_4 $$ if (processingState.isMissingIdentifier()) -->Line_5 $$ handleMissingIdentifier(context)[ CD ]
Line_35 $$ final Object entityInstance = optionalEntityInstance != null ? optionalEntityInstance : context.getSession().instantiate(concreteEntityTypeName, entityKey.getIdentifier())-->Line_36 $$ processingState.registerEntityInstance(entityInstance)[ FD ]
Line_8 $$ final EntityKey entityKey = processingState.getEntityKey()-->Line_16 $$ final Object existing = context.getSession().getEntityUsingInterceptor(entityKey)[ FD ]
Line_8 $$ final EntityKey entityKey = processingState.getEntityKey()-->Line_21 $$ checkVersion(resultSet, context, entityKey, existing)[ FD ]
Line_8 $$ final EntityKey entityKey = processingState.getEntityKey()-->Line_29 $$ if (optionalEntityKey.equals(entityKey)) [ FD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_35 $$ final Object entityInstance = optionalEntityInstance != null ? optionalEntityInstance : context.getSession().instantiate(concreteEntityTypeName, entityKey.getIdentifier())[ CD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_36 $$ processingState.registerEntityInstance(entityInstance)[ CD ]
Line_16 $$ final Object existing = context.getSession().getEntityUsingInterceptor(entityKey)-->Line_18 $$ if (!entityReference.getEntityPersister().isInstance(existing)) [ FD ]
Line_28 $$ if (optionalEntityKey != null) -->Line_29 $$ if (optionalEntityKey.equals(entityKey)) [ CD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_25 $$ Object optionalEntityInstance = null[ CD ]
Line_3 $$ final EntityReferenceProcessingState processingState = context.getProcessingState(entityReference)-->Line_36 $$ processingState.registerEntityInstance(entityInstance)[ FD ]
Line_35 $$ final Object entityInstance = optionalEntityInstance != null ? optionalEntityInstance : context.getSession().instantiate(concreteEntityTypeName, entityKey.getIdentifier())-->Line_40 $$ loadFromResultSet(resultSet, context, entityInstance, concreteEntityTypeName, entityKey, lockModeToAcquire)[ FD ]
Line_3 $$ final EntityReferenceProcessingState processingState = context.getProcessingState(entityReference)-->Line_8 $$ final EntityKey entityKey = processingState.getEntityKey()[ FD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_40 $$ loadFromResultSet(resultSet, context, entityInstance, concreteEntityTypeName, entityKey, lockModeToAcquire)[ CD ]
Line_9 $$ if (entityKey == null) -->Line_11 $$ return[ CD ]
Line_16 $$ final Object existing = context.getSession().getEntityUsingInterceptor(entityKey)-->Line_19 $$ throw new WrongClassException("loaded object was of wrong class " + existing.getClass(), entityKey.getIdentifier(), entityReference.getEntityPersister().getEntityName())[ FD ]
Line_9 $$ if (entityKey == null) -->Line_10 $$ handleMissingIdentifier(context)[ CD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_17 $$ if (existing != null) [ CD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_34 $$ final String concreteEntityTypeName = getConcreteEntityTypeName(resultSet, context, entityKey)[ CD ]
Line_2 $$ public void hydrateEntityState(ResultSet resultSet, ResultSetProcessingContextImpl context) -->Line_16 $$ final Object existing = context.getSession().getEntityUsingInterceptor(entityKey)[ FD ]
Line_34 $$ final String concreteEntityTypeName = getConcreteEntityTypeName(resultSet, context, entityKey)-->Line_40 $$ loadFromResultSet(resultSet, context, entityInstance, concreteEntityTypeName, entityKey, lockModeToAcquire)[ FD ]
Line_13 $$ if (processingState.getEntityInstance() != null) -->Line_14 $$ return[ CD ]
Line_25 $$ Object optionalEntityInstance = null-->Line_30 $$ optionalEntityInstance = context.getQueryParameters().getOptionalObject()[ FD ]
Line_3 $$ final EntityReferenceProcessingState processingState = context.getProcessingState(entityReference)-->Line_13 $$ if (processingState.getEntityInstance() != null) [ FD ]
Line_4 $$ if (processingState.isMissingIdentifier()) -->Line_6 $$ return[ CD ]
Line_17 $$ if (existing != null) -->Line_23 $$ return[ CD ]
