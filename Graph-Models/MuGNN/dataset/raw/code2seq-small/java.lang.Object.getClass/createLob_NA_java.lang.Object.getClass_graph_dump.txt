Line_7 $$ Object lob = prepareLob(con, clob ? clobClass : blobClass)-->Line_9 $$ lob.getClass().getMethod("close", (Class[]) null).invoke(lob, (Object[]) null)[ FD ]
Line_3 $$ Connection con = null-->Line_6 $$ initOracleDriverClasses(con)[ FD ]
Line_7 $$ Object lob = prepareLob(con, clob ? clobClass : blobClass)-->Line_10 $$ this.temporaryLobs.add(lob)[ FD ]
Line_7 $$ Object lob = prepareLob(con, clob ? clobClass : blobClass)-->Line_8 $$ callback.populateLob(lob)[ FD ]
Line_18 $$ if (ex.getTargetException() instanceof SQLException) -->Line_20 $$ if (con != null && ex.getTargetException() instanceof ClassCastException) [ CD ]
Line_5 $$ con = getOracleConnection(ps)-->Line_7 $$ Object lob = prepareLob(con, clob ? clobClass : blobClass)[ FD ]
Line_3 $$ Connection con = null-->Line_21 $$ throw new InvalidDataAccessApiUsageException("OracleLobCreator needs to work on [oracle.jdbc.OracleConnection], not on [" + con.getClass().getName() + "]: specify a corresponding NativeJdbcExtractor", ex.getTargetException())[ FD ]
Line_2 $$ protected Object createLob(PreparedStatement ps, boolean clob, LobCallback callback) throws SQLException -->Line_8 $$ callback.populateLob(lob)[ FD ]
Line_5 $$ con = getOracleConnection(ps)-->Line_6 $$ initOracleDriverClasses(con)[ FD ]
Line_2 $$ protected Object createLob(PreparedStatement ps, boolean clob, LobCallback callback) throws SQLException -->Line_5 $$ con = getOracleConnection(ps)[ FD ]
Line_5 $$ con = getOracleConnection(ps)-->Line_21 $$ throw new InvalidDataAccessApiUsageException("OracleLobCreator needs to work on [oracle.jdbc.OracleConnection], not on [" + con.getClass().getName() + "]: specify a corresponding NativeJdbcExtractor", ex.getTargetException())[ FD ]
Line_11 $$ if (logger.isDebugEnabled()) -->Line_12 $$ logger.debug("Created new Oracle " + (clob ? "CLOB" : "BLOB"))[ CD ]
Line_2 $$ protected Object createLob(PreparedStatement ps, boolean clob, LobCallback callback) throws SQLException -->Line_3 $$ Connection con = null[ CD ]
Line_3 $$ Connection con = null-->Line_7 $$ Object lob = prepareLob(con, clob ? clobClass : blobClass)[ FD ]
Line_3 $$ Connection con = null-->Line_5 $$ con = getOracleConnection(ps)[ FD ]
