Line_7 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_9 $$ LogRecord logRecord = logRecords.get(0)[ FD ]
Line_13 $$ logRecord = logRecords.get(1)-->Line_14 $$ Assert.assertEquals("Unable to destroy SPI", logRecord.getMessage())[ FD ]
Line_9 $$ LogRecord logRecord = logRecords.get(0)-->Line_11 $$ Throwable throwable = logRecord.getThrown()[ FD ]
Line_7 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_8 $$ Assert.assertEquals(2, logRecords.size())[ FD ]
Line_2 $$ public void testSPIShutdownHookShutdown2() -->Line_3 $$ _mockRemoteSPI.setFailOnStop(true)[ CD ]
Line_9 $$ LogRecord logRecord = logRecords.get(0)-->Line_13 $$ logRecord = logRecords.get(1)[ FD ]
Line_7 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_13 $$ logRecord = logRecords.get(1)[ FD ]
Line_11 $$ Throwable throwable = logRecord.getThrown()-->Line_12 $$ Assert.assertSame(RemoteException.class, throwable.getClass())[ FD ]
Line_9 $$ LogRecord logRecord = logRecords.get(0)-->Line_15 $$ throwable = logRecord.getThrown()[ FD ]
Line_9 $$ LogRecord logRecord = logRecords.get(0)-->Line_10 $$ Assert.assertEquals("Unable to stop SPI", logRecord.getMessage())[ FD ]
Line_15 $$ throwable = logRecord.getThrown()-->Line_16 $$ Assert.assertSame(NoSuchObjectException.class, throwable.getClass())[ FD ]
Line_11 $$ Throwable throwable = logRecord.getThrown()-->Line_16 $$ Assert.assertSame(NoSuchObjectException.class, throwable.getClass())[ FD ]
Line_5 $$ try (CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(RemoteSPI.class.getName(), Level.SEVERE)) -->Line_7 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ FD ]
Line_11 $$ Throwable throwable = logRecord.getThrown()-->Line_15 $$ throwable = logRecord.getThrown()[ FD ]
Line_4 $$ SPIShutdownHook spiShutdownHook = _mockRemoteSPI.new SPIShutdownHook()-->Line_6 $$ Assert.assertTrue(spiShutdownHook.shutdown(0, null))[ FD ]
Line_9 $$ LogRecord logRecord = logRecords.get(0)-->Line_14 $$ Assert.assertEquals("Unable to destroy SPI", logRecord.getMessage())[ FD ]
Line_13 $$ logRecord = logRecords.get(1)-->Line_15 $$ throwable = logRecord.getThrown()[ FD ]
Line_2 $$ public void testSPIShutdownHookShutdown2() -->Line_4 $$ SPIShutdownHook spiShutdownHook = _mockRemoteSPI.new SPIShutdownHook()[ CD ]
