Line_3 $$ if (getSettings().CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT) -->Line_4 $$ if (DumbService.getInstance(myProject).isDumb()) [ CD ]
Line_21 $$ if (Messages.showOkCancelDialog(myProject, "Code analysis failed with exception: " + e.getClass().getName() + ": " + e.getMessage(), "Code analysis failed", "&Commit", "&Cancel", null) == Messages.OK) -->Line_22 $$ return ReturnResult.COMMIT[ CD ]
Line_12 $$ if (!codeSmells.isEmpty()) -->Line_15 $$ return ReturnResult.COMMIT[ CD ]
Line_12 $$ if (!codeSmells.isEmpty()) -->Line_13 $$ return processFoundCodeSmells(codeSmells, executor)[ CD ]
Line_3 $$ if (getSettings().CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT) -->Line_27 $$ return ReturnResult.COMMIT[ CD ]
Line_2 $$ public ReturnResult beforeCheckin(CommitExecutor executor, PairConsumer<Object, Object> additionalDataConsumer) -->Line_13 $$ return processFoundCodeSmells(codeSmells, executor)[ FD ]
Line_4 $$ if (DumbService.getInstance(myProject).isDumb()) -->Line_8 $$ return ReturnResult.COMMIT[ CD ]
Line_11 $$ final List<CodeSmellInfo> codeSmells = CodeSmellDetector.getInstance(myProject).findCodeSmells(CheckinHandlerUtil.filterOutGeneratedAndExcludedFiles(myCheckinPanel.getVirtualFiles(), myProject))-->Line_13 $$ return processFoundCodeSmells(codeSmells, executor)[ FD ]
Line_5 $$ if (Messages.showOkCancelDialog(myProject, VcsBundle.message("code.smells.error.indexing.message", ApplicationNamesInfo.getInstance().getProductName()), VcsBundle.message("code.smells.error.indexing"), "&Wait", "&Commit", null) == Messages.OK) -->Line_6 $$ return ReturnResult.CANCEL[ CD ]
Line_4 $$ if (DumbService.getInstance(myProject).isDumb()) -->Line_5 $$ if (Messages.showOkCancelDialog(myProject, VcsBundle.message("code.smells.error.indexing.message", ApplicationNamesInfo.getInstance().getProductName()), VcsBundle.message("code.smells.error.indexing"), "&Wait", "&Commit", null) == Messages.OK) [ CD ]
Line_11 $$ final List<CodeSmellInfo> codeSmells = CodeSmellDetector.getInstance(myProject).findCodeSmells(CheckinHandlerUtil.filterOutGeneratedAndExcludedFiles(myCheckinPanel.getVirtualFiles(), myProject))-->Line_12 $$ if (!codeSmells.isEmpty()) [ FD ]
Line_2 $$ public ReturnResult beforeCheckin(CommitExecutor executor, PairConsumer<Object, Object> additionalDataConsumer) -->Line_3 $$ if (getSettings().CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT) [ CD ]
