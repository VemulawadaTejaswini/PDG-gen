Line_3 $$ Cache cache-->Line_24 $$ CacheConfiguration config = cache.getCacheConfiguration()[ FD ]
Line_24 $$ CacheConfiguration config = cache.getCacheConfiguration()-->Line_61 $$ assertTrue("overridden diskExpiryThreadIntervalSeconds is correct", config.getDiskExpiryThreadIntervalSeconds() == 10)[ FD ]
Line_4 $$ EhCacheManagerFactoryBean cacheManagerFb = null-->Line_12 $$ cacheManagerFb = new EhCacheManagerFactoryBean()[ FD ]
Line_32 $$ if (useCacheManagerFb) -->Line_33 $$ cacheFb.setCacheManager(cacheManagerFb.getObject())[ CD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_53 $$ cacheFb.setDiskExpiryThreadIntervalSeconds(10)[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_50 $$ cacheFb.setMaxElementsInMemory(5)[ FD ]
Line_24 $$ CacheConfiguration config = cache.getCacheConfiguration()-->Line_58 $$ assertTrue("overridden maxElements is correct", config.getMaxElementsInMemory() == 5)[ FD ]
Line_8 $$ Class<? extends Ehcache> objectType = cacheFb.getObjectType()-->Line_9 $$ assertTrue(Ehcache.class.isAssignableFrom(objectType))[ FD ]
Line_26 $$ if (useCacheManagerFb) -->Line_27 $$ assertEquals("myCache1.maxElements", 300, config.getMaxElementsInMemory())[ CD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_47 $$ cacheFb.setCacheManager(cacheManagerFb.getObject())[ FD ]
Line_11 $$ if (useCacheManagerFb) -->Line_14 $$ cacheManagerFb.setCacheManagerName("cache")[ CD ]
Line_56 $$ config = cache.getCacheConfiguration()-->Line_59 $$ assertTrue("default timeToLive is correct", config.getTimeToLiveSeconds() == 8)[ FD ]
Line_45 $$ cacheFb = new EhCacheFactoryBean()-->Line_49 $$ cacheFb.setBeanName("undefinedCache2")[ FD ]
Line_24 $$ CacheConfiguration config = cache.getCacheConfiguration()-->Line_60 $$ assertTrue("default timeToIdle is correct", config.getTimeToIdleSeconds() == 7)[ FD ]
Line_31 $$ cacheFb = new EhCacheFactoryBean()-->Line_51 $$ cacheFb.setTimeToLive(8)[ FD ]
Line_31 $$ cacheFb = new EhCacheFactoryBean()-->Line_54 $$ cacheFb.afterPropertiesSet()[ FD ]
Line_45 $$ cacheFb = new EhCacheFactoryBean()-->Line_55 $$ cache = (Cache) cacheFb.getObject()[ FD ]
Line_4 $$ EhCacheManagerFactoryBean cacheManagerFb = null-->Line_64 $$ cacheManagerFb.destroy()[ FD ]
Line_12 $$ cacheManagerFb = new EhCacheManagerFactoryBean()-->Line_14 $$ cacheManagerFb.setCacheManagerName("cache")[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_33 $$ cacheFb.setCacheManager(cacheManagerFb.getObject())[ FD ]
Line_56 $$ config = cache.getCacheConfiguration()-->Line_60 $$ assertTrue("default timeToIdle is correct", config.getTimeToIdleSeconds() == 7)[ FD ]
Line_31 $$ cacheFb = new EhCacheFactoryBean()-->Line_49 $$ cacheFb.setBeanName("undefinedCache2")[ FD ]
Line_38 $$ config = cache.getCacheConfiguration()-->Line_61 $$ assertTrue("overridden diskExpiryThreadIntervalSeconds is correct", config.getDiskExpiryThreadIntervalSeconds() == 10)[ FD ]
Line_31 $$ cacheFb = new EhCacheFactoryBean()-->Line_52 $$ cacheFb.setTimeToIdle(7)[ FD ]
Line_3 $$ Cache cache-->Line_55 $$ cache = (Cache) cacheFb.getObject()[ FD ]
Line_63 $$ if (cacheManagerFbInitialized) -->Line_64 $$ cacheManagerFb.destroy()[ CD ]
Line_31 $$ cacheFb = new EhCacheFactoryBean()-->Line_55 $$ cache = (Cache) cacheFb.getObject()[ FD ]
Line_26 $$ if (useCacheManagerFb) -->Line_29 $$ assertEquals("myCache1.maxElements", 10000, config.getMaxElementsInMemory())[ CD ]
Line_37 $$ cache = (Cache) cacheFb.getObject()-->Line_39 $$ assertEquals("undefinedCache", cache.getName())[ FD ]
Line_3 $$ Cache cache-->Line_21 $$ cache = (Cache) cacheFb.getObject()[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_10 $$ assertTrue("Singleton property", cacheFb.isSingleton())[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_49 $$ cacheFb.setBeanName("undefinedCache2")[ FD ]
Line_37 $$ cache = (Cache) cacheFb.getObject()-->Line_55 $$ cache = (Cache) cacheFb.getObject()[ FD ]
Line_45 $$ cacheFb = new EhCacheFactoryBean()-->Line_53 $$ cacheFb.setDiskExpiryThreadIntervalSeconds(10)[ FD ]
Line_45 $$ cacheFb = new EhCacheFactoryBean()-->Line_47 $$ cacheFb.setCacheManager(cacheManagerFb.getObject())[ FD ]
Line_3 $$ Cache cache-->Line_57 $$ assertEquals("undefinedCache2", cache.getName())[ FD ]
Line_3 $$ Cache cache-->Line_38 $$ config = cache.getCacheConfiguration()[ FD ]
Line_24 $$ CacheConfiguration config = cache.getCacheConfiguration()-->Line_41 $$ assertFalse("default eternal is correct", config.isEternal())[ FD ]
Line_45 $$ cacheFb = new EhCacheFactoryBean()-->Line_50 $$ cacheFb.setMaxElementsInMemory(5)[ FD ]
Line_31 $$ cacheFb = new EhCacheFactoryBean()-->Line_35 $$ cacheFb.setCacheName("undefinedCache")[ FD ]
Line_2 $$ private void doTestEhCacheFactoryBean(boolean useCacheManagerFb) throws Exception -->Line_3 $$ Cache cache[ CD ]
Line_37 $$ cache = (Cache) cacheFb.getObject()-->Line_57 $$ assertEquals("undefinedCache2", cache.getName())[ FD ]
Line_11 $$ if (useCacheManagerFb) -->Line_15 $$ cacheManagerFb.afterPropertiesSet()[ CD ]
Line_24 $$ CacheConfiguration config = cache.getCacheConfiguration()-->Line_59 $$ assertTrue("default timeToLive is correct", config.getTimeToLiveSeconds() == 8)[ FD ]
Line_55 $$ cache = (Cache) cacheFb.getObject()-->Line_56 $$ config = cache.getCacheConfiguration()[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_22 $$ Class<? extends Ehcache> objectType2 = cacheFb.getObjectType()[ FD ]
Line_12 $$ cacheManagerFb = new EhCacheManagerFactoryBean()-->Line_64 $$ cacheManagerFb.destroy()[ FD ]
Line_38 $$ config = cache.getCacheConfiguration()-->Line_56 $$ config = cache.getCacheConfiguration()[ FD ]
Line_21 $$ cache = (Cache) cacheFb.getObject()-->Line_39 $$ assertEquals("undefinedCache", cache.getName())[ FD ]
Line_31 $$ cacheFb = new EhCacheFactoryBean()-->Line_45 $$ cacheFb = new EhCacheFactoryBean()[ FD ]
Line_24 $$ CacheConfiguration config = cache.getCacheConfiguration()-->Line_27 $$ assertEquals("myCache1.maxElements", 300, config.getMaxElementsInMemory())[ FD ]
Line_45 $$ cacheFb = new EhCacheFactoryBean()-->Line_54 $$ cacheFb.afterPropertiesSet()[ FD ]
Line_4 $$ EhCacheManagerFactoryBean cacheManagerFb = null-->Line_13 $$ cacheManagerFb.setConfigLocation(new ClassPathResource("testEhcache.xml", getClass()))[ FD ]
Line_12 $$ cacheManagerFb = new EhCacheManagerFactoryBean()-->Line_15 $$ cacheManagerFb.afterPropertiesSet()[ FD ]
Line_63 $$ if (cacheManagerFbInitialized) -->Line_66 $$ CacheManager.getInstance().shutdown()[ CD ]
Line_31 $$ cacheFb = new EhCacheFactoryBean()-->Line_33 $$ cacheFb.setCacheManager(cacheManagerFb.getObject())[ FD ]
Line_31 $$ cacheFb = new EhCacheFactoryBean()-->Line_50 $$ cacheFb.setMaxElementsInMemory(5)[ FD ]
Line_31 $$ cacheFb = new EhCacheFactoryBean()-->Line_37 $$ cache = (Cache) cacheFb.getObject()[ FD ]
Line_31 $$ cacheFb = new EhCacheFactoryBean()-->Line_53 $$ cacheFb.setDiskExpiryThreadIntervalSeconds(10)[ FD ]
Line_12 $$ cacheManagerFb = new EhCacheManagerFactoryBean()-->Line_17 $$ cacheFb.setCacheManager(cacheManagerFb.getObject())[ FD ]
Line_38 $$ config = cache.getCacheConfiguration()-->Line_40 $$ assertTrue("default maxElements is correct", config.getMaxElementsInMemory() == 10000)[ FD ]
Line_45 $$ cacheFb = new EhCacheFactoryBean()-->Line_51 $$ cacheFb.setTimeToLive(8)[ FD ]
Line_37 $$ cache = (Cache) cacheFb.getObject()-->Line_38 $$ config = cache.getCacheConfiguration()[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_45 $$ cacheFb = new EhCacheFactoryBean()[ FD ]
Line_21 $$ cache = (Cache) cacheFb.getObject()-->Line_24 $$ CacheConfiguration config = cache.getCacheConfiguration()[ FD ]
Line_22 $$ Class<? extends Ehcache> objectType2 = cacheFb.getObjectType()-->Line_23 $$ assertSame(objectType, objectType2)[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_55 $$ cache = (Cache) cacheFb.getObject()[ FD ]
Line_55 $$ cache = (Cache) cacheFb.getObject()-->Line_57 $$ assertEquals("undefinedCache2", cache.getName())[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_21 $$ cache = (Cache) cacheFb.getObject()[ FD ]
Line_3 $$ Cache cache-->Line_25 $$ assertEquals("myCache1", cache.getName())[ FD ]
Line_3 $$ Cache cache-->Line_37 $$ cache = (Cache) cacheFb.getObject()[ FD ]
Line_12 $$ cacheManagerFb = new EhCacheManagerFactoryBean()-->Line_13 $$ cacheManagerFb.setConfigLocation(new ClassPathResource("testEhcache.xml", getClass()))[ FD ]
Line_31 $$ cacheFb = new EhCacheFactoryBean()-->Line_36 $$ cacheFb.afterPropertiesSet()[ FD ]
Line_12 $$ cacheManagerFb = new EhCacheManagerFactoryBean()-->Line_47 $$ cacheFb.setCacheManager(cacheManagerFb.getObject())[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_20 $$ cacheFb.afterPropertiesSet()[ FD ]
Line_24 $$ CacheConfiguration config = cache.getCacheConfiguration()-->Line_40 $$ assertTrue("default maxElements is correct", config.getMaxElementsInMemory() == 10000)[ FD ]
Line_38 $$ config = cache.getCacheConfiguration()-->Line_41 $$ assertFalse("default eternal is correct", config.isEternal())[ FD ]
Line_21 $$ cache = (Cache) cacheFb.getObject()-->Line_56 $$ config = cache.getCacheConfiguration()[ FD ]
Line_31 $$ cacheFb = new EhCacheFactoryBean()-->Line_47 $$ cacheFb.setCacheManager(cacheManagerFb.getObject())[ FD ]
Line_21 $$ cache = (Cache) cacheFb.getObject()-->Line_38 $$ config = cache.getCacheConfiguration()[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_51 $$ cacheFb.setTimeToLive(8)[ FD ]
Line_56 $$ config = cache.getCacheConfiguration()-->Line_58 $$ assertTrue("overridden maxElements is correct", config.getMaxElementsInMemory() == 5)[ FD ]
Line_8 $$ Class<? extends Ehcache> objectType = cacheFb.getObjectType()-->Line_23 $$ assertSame(objectType, objectType2)[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_36 $$ cacheFb.afterPropertiesSet()[ FD ]
Line_24 $$ CacheConfiguration config = cache.getCacheConfiguration()-->Line_43 $$ assertTrue("default timeToIdle is correct", config.getTimeToIdleSeconds() == 120)[ FD ]
Line_2 $$ private void doTestEhCacheFactoryBean(boolean useCacheManagerFb) throws Exception -->Line_4 $$ EhCacheManagerFactoryBean cacheManagerFb = null[ CD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_19 $$ cacheFb.setCacheName("myCache1")[ FD ]
Line_11 $$ if (useCacheManagerFb) -->Line_13 $$ cacheManagerFb.setConfigLocation(new ClassPathResource("testEhcache.xml", getClass()))[ CD ]
Line_12 $$ cacheManagerFb = new EhCacheManagerFactoryBean()-->Line_33 $$ cacheFb.setCacheManager(cacheManagerFb.getObject())[ FD ]
Line_4 $$ EhCacheManagerFactoryBean cacheManagerFb = null-->Line_17 $$ cacheFb.setCacheManager(cacheManagerFb.getObject())[ FD ]
Line_4 $$ EhCacheManagerFactoryBean cacheManagerFb = null-->Line_47 $$ cacheFb.setCacheManager(cacheManagerFb.getObject())[ FD ]
Line_3 $$ Cache cache-->Line_56 $$ config = cache.getCacheConfiguration()[ FD ]
Line_4 $$ EhCacheManagerFactoryBean cacheManagerFb = null-->Line_33 $$ cacheFb.setCacheManager(cacheManagerFb.getObject())[ FD ]
Line_11 $$ if (useCacheManagerFb) -->Line_16 $$ cacheManagerFbInitialized = true[ CD ]
Line_56 $$ config = cache.getCacheConfiguration()-->Line_61 $$ assertTrue("overridden diskExpiryThreadIntervalSeconds is correct", config.getDiskExpiryThreadIntervalSeconds() == 10)[ FD ]
Line_38 $$ config = cache.getCacheConfiguration()-->Line_42 $$ assertTrue("default timeToLive is correct", config.getTimeToLiveSeconds() == 120)[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_52 $$ cacheFb.setTimeToIdle(7)[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_8 $$ Class<? extends Ehcache> objectType = cacheFb.getObjectType()[ FD ]
Line_46 $$ if (useCacheManagerFb) -->Line_47 $$ cacheFb.setCacheManager(cacheManagerFb.getObject())[ CD ]
Line_24 $$ CacheConfiguration config = cache.getCacheConfiguration()-->Line_56 $$ config = cache.getCacheConfiguration()[ FD ]
Line_3 $$ Cache cache-->Line_39 $$ assertEquals("undefinedCache", cache.getName())[ FD ]
Line_24 $$ CacheConfiguration config = cache.getCacheConfiguration()-->Line_44 $$ assertTrue("default diskExpiryThreadIntervalSeconds is correct", config.getDiskExpiryThreadIntervalSeconds() == 120)[ FD ]
Line_38 $$ config = cache.getCacheConfiguration()-->Line_43 $$ assertTrue("default timeToIdle is correct", config.getTimeToIdleSeconds() == 120)[ FD ]
Line_24 $$ CacheConfiguration config = cache.getCacheConfiguration()-->Line_29 $$ assertEquals("myCache1.maxElements", 10000, config.getMaxElementsInMemory())[ FD ]
Line_24 $$ CacheConfiguration config = cache.getCacheConfiguration()-->Line_42 $$ assertTrue("default timeToLive is correct", config.getTimeToLiveSeconds() == 120)[ FD ]
Line_38 $$ config = cache.getCacheConfiguration()-->Line_44 $$ assertTrue("default diskExpiryThreadIntervalSeconds is correct", config.getDiskExpiryThreadIntervalSeconds() == 120)[ FD ]
Line_21 $$ cache = (Cache) cacheFb.getObject()-->Line_25 $$ assertEquals("myCache1", cache.getName())[ FD ]
Line_38 $$ config = cache.getCacheConfiguration()-->Line_60 $$ assertTrue("default timeToIdle is correct", config.getTimeToIdleSeconds() == 7)[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_54 $$ cacheFb.afterPropertiesSet()[ FD ]
Line_24 $$ CacheConfiguration config = cache.getCacheConfiguration()-->Line_38 $$ config = cache.getCacheConfiguration()[ FD ]
Line_38 $$ config = cache.getCacheConfiguration()-->Line_59 $$ assertTrue("default timeToLive is correct", config.getTimeToLiveSeconds() == 8)[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_35 $$ cacheFb.setCacheName("undefinedCache")[ FD ]
Line_5 $$ boolean cacheManagerFbInitialized = false-->Line_16 $$ cacheManagerFbInitialized = true[ FD ]
Line_11 $$ if (useCacheManagerFb) -->Line_12 $$ cacheManagerFb = new EhCacheManagerFactoryBean()[ CD ]
Line_11 $$ if (useCacheManagerFb) -->Line_17 $$ cacheFb.setCacheManager(cacheManagerFb.getObject())[ CD ]
Line_45 $$ cacheFb = new EhCacheFactoryBean()-->Line_52 $$ cacheFb.setTimeToIdle(7)[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_31 $$ cacheFb = new EhCacheFactoryBean()[ FD ]
Line_21 $$ cache = (Cache) cacheFb.getObject()-->Line_55 $$ cache = (Cache) cacheFb.getObject()[ FD ]
Line_38 $$ config = cache.getCacheConfiguration()-->Line_58 $$ assertTrue("overridden maxElements is correct", config.getMaxElementsInMemory() == 5)[ FD ]
Line_21 $$ cache = (Cache) cacheFb.getObject()-->Line_57 $$ assertEquals("undefinedCache2", cache.getName())[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_17 $$ cacheFb.setCacheManager(cacheManagerFb.getObject())[ FD ]
Line_4 $$ EhCacheManagerFactoryBean cacheManagerFb = null-->Line_15 $$ cacheManagerFb.afterPropertiesSet()[ FD ]
Line_2 $$ private void doTestEhCacheFactoryBean(boolean useCacheManagerFb) throws Exception -->Line_5 $$ boolean cacheManagerFbInitialized = false[ CD ]
Line_21 $$ cache = (Cache) cacheFb.getObject()-->Line_37 $$ cache = (Cache) cacheFb.getObject()[ FD ]
Line_7 $$ EhCacheFactoryBean cacheFb = new EhCacheFactoryBean()-->Line_37 $$ cache = (Cache) cacheFb.getObject()[ FD ]
Line_37 $$ cache = (Cache) cacheFb.getObject()-->Line_56 $$ config = cache.getCacheConfiguration()[ FD ]
Line_4 $$ EhCacheManagerFactoryBean cacheManagerFb = null-->Line_14 $$ cacheManagerFb.setCacheManagerName("cache")[ FD ]
