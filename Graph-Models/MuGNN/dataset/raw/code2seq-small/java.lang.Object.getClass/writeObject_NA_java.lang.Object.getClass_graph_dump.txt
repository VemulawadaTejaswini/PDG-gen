Line_10 $$ for (int j = 0; j < len; j++) -->Line_11 $$ Object item = Array.get(value, j)[ FD ]
Line_19 $$ Boolean b = (Boolean) value-->Line_20 $$ jg.writeBoolean(b)[ FD ]
Line_15 $$ if (value instanceof Number) -->Line_17 $$ jg.writeNumber(n.toString())[ CD ]
Line_22 $$ CompositeData cds = (CompositeData) value-->Line_23 $$ CompositeType comp = cds.getCompositeType()[ FD ]
Line_30 $$ if (value instanceof TabularData) -->Line_32 $$ jg.writeStartArray()[ CD ]
Line_7 $$ if (c.isArray()) -->Line_8 $$ jg.writeStartArray()[ CD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_12 $$ writeObject(jg, item)[ FD ]
Line_30 $$ if (value instanceof TabularData) -->Line_31 $$ TabularData tds = (TabularData) value[ CD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_38 $$ jg.writeString(value.toString())[ FD ]
Line_10 $$ for (int j = 0; j < len; j++) -->Line_11 $$ Object item = Array.get(value, j)[ CD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_25 $$ jg.writeStartObject()[ FD ]
Line_16 $$ Number n = (Number) value-->Line_17 $$ jg.writeNumber(n.toString())[ FD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_9 $$ int len = Array.getLength(value)[ FD ]
Line_10 $$ for (int j = 0; j < len; j++) -->Line_12 $$ writeObject(jg, item)[ CD ]
Line_21 $$ if (value instanceof CompositeData) -->Line_25 $$ jg.writeStartObject()[ CD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_29 $$ jg.writeEndObject()[ FD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_3 $$ if (value == null) [ FD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_11 $$ Object item = Array.get(value, j)[ FD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_4 $$ jg.writeNull()[ FD ]
Line_15 $$ if (value instanceof Number) -->Line_16 $$ Number n = (Number) value[ CD ]
Line_21 $$ if (value instanceof CompositeData) -->Line_29 $$ jg.writeEndObject()[ CD ]
Line_21 $$ if (value instanceof CompositeData) -->Line_23 $$ CompositeType comp = cds.getCompositeType()[ CD ]
Line_15 $$ if (value instanceof Number) -->Line_18 $$ if (value instanceof Boolean) [ CD ]
Line_30 $$ if (value instanceof TabularData) -->Line_36 $$ jg.writeEndArray()[ CD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_15 $$ if (value instanceof Number) [ FD ]
Line_3 $$ if (value == null) -->Line_4 $$ jg.writeNull()[ CD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_36 $$ jg.writeEndArray()[ FD ]
Line_7 $$ if (c.isArray()) -->Line_9 $$ int len = Array.getLength(value)[ CD ]
Line_21 $$ if (value instanceof CompositeData) -->Line_22 $$ CompositeData cds = (CompositeData) value[ CD ]
Line_21 $$ if (value instanceof CompositeData) -->Line_30 $$ if (value instanceof TabularData) [ CD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_3 $$ if (value == null) [ CD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_34 $$ writeObject(jg, entry)[ FD ]
Line_26 $$ for (String key : keys) -->Line_27 $$ writeAttribute(jg, key, cds.get(key))[ FD ]
Line_18 $$ if (value instanceof Boolean) -->Line_19 $$ Boolean b = (Boolean) value[ CD ]
Line_22 $$ CompositeData cds = (CompositeData) value-->Line_27 $$ writeAttribute(jg, key, cds.get(key))[ FD ]
Line_33 $$ for (Object entry : tds.values()) -->Line_34 $$ writeObject(jg, entry)[ FD ]
Line_11 $$ Object item = Array.get(value, j)-->Line_12 $$ writeObject(jg, item)[ FD ]
Line_7 $$ if (c.isArray()) -->Line_14 $$ jg.writeEndArray()[ CD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_21 $$ if (value instanceof CompositeData) [ FD ]
Line_23 $$ CompositeType comp = cds.getCompositeType()-->Line_24 $$ Set<String> keys = comp.keySet()[ FD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_20 $$ jg.writeBoolean(b)[ FD ]
Line_6 $$ Class<?> c = value.getClass()-->Line_7 $$ if (c.isArray()) [ FD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_6 $$ Class<?> c = value.getClass()[ FD ]
Line_7 $$ if (c.isArray()) -->Line_15 $$ if (value instanceof Number) [ CD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_18 $$ if (value instanceof Boolean) [ FD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_30 $$ if (value instanceof TabularData) [ FD ]
Line_31 $$ TabularData tds = (TabularData) value-->Line_33 $$ for (Object entry : tds.values()) [ FD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_27 $$ writeAttribute(jg, key, cds.get(key))[ FD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_32 $$ jg.writeStartArray()[ FD ]
Line_9 $$ int len = Array.getLength(value)-->Line_10 $$ for (int j = 0; j < len; j++) [ FD ]
Line_3 $$ if (value == null) -->Line_7 $$ if (c.isArray()) [ CD ]
Line_3 $$ if (value == null) -->Line_6 $$ Class<?> c = value.getClass()[ CD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_8 $$ jg.writeStartArray()[ FD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_14 $$ jg.writeEndArray()[ FD ]
Line_7 $$ if (c.isArray()) -->Line_10 $$ for (int j = 0; j < len; j++) [ CD ]
Line_18 $$ if (value instanceof Boolean) -->Line_21 $$ if (value instanceof CompositeData) [ CD ]
Line_21 $$ if (value instanceof CompositeData) -->Line_24 $$ Set<String> keys = comp.keySet()[ CD ]
Line_30 $$ if (value instanceof TabularData) -->Line_38 $$ jg.writeString(value.toString())[ CD ]
Line_2 $$ private void writeObject(JsonGenerator jg, Object value) throws IOException -->Line_17 $$ jg.writeNumber(n.toString())[ FD ]
Line_18 $$ if (value instanceof Boolean) -->Line_20 $$ jg.writeBoolean(b)[ CD ]
