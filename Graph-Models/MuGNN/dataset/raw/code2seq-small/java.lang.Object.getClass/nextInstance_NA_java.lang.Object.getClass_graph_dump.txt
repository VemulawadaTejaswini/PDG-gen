Line_2 $$ protected Object nextInstance(Object instance) -->Line_3 $$ Class protoclass = (instance instanceof Class) ? (Class) instance : instance.getClass()[ FD ]
Line_7 $$ if (argumentTypes != null) -->Line_10 $$ return ((Factory) instance).newInstance(callbacks)[ CD ]
Line_2 $$ protected Object nextInstance(Object instance) -->Line_4 $$ if (classOnly) [ CD ]
Line_6 $$ if (instance instanceof Factory) -->Line_13 $$ return createUsingReflection(protoclass)[ CD ]
Line_4 $$ if (classOnly) -->Line_5 $$ return protoclass[ CD ]
Line_6 $$ if (instance instanceof Factory) -->Line_7 $$ if (argumentTypes != null) [ CD ]
Line_4 $$ if (classOnly) -->Line_6 $$ if (instance instanceof Factory) [ CD ]
Line_2 $$ protected Object nextInstance(Object instance) -->Line_3 $$ Class protoclass = (instance instanceof Class) ? (Class) instance : instance.getClass()[ CD ]
Line_7 $$ if (argumentTypes != null) -->Line_8 $$ return ((Factory) instance).newInstance(argumentTypes, arguments, callbacks)[ CD ]
Line_3 $$ Class protoclass = (instance instanceof Class) ? (Class) instance : instance.getClass()-->Line_13 $$ return createUsingReflection(protoclass)[ FD ]
Line_2 $$ protected Object nextInstance(Object instance) -->Line_6 $$ if (instance instanceof Factory) [ FD ]
