Line_8 $$ Log log = LogFactory.getLog(this.getClass())-->Line_12 $$ log.error("error")[ FD ]
Line_2 $$ private void doTestInitLogging(String location, boolean refreshInterval) throws FileNotFoundException -->Line_20 $$ assertTrue(MockLog4jAppender.closeCalled)[ CD ]
Line_2 $$ private void doTestInitLogging(String location, boolean refreshInterval) throws FileNotFoundException -->Line_12 $$ log.error("error")[ CD ]
Line_8 $$ Log log = LogFactory.getLog(this.getClass())-->Line_9 $$ log.debug("debug")[ FD ]
Line_8 $$ Log log = LogFactory.getLog(this.getClass())-->Line_13 $$ log.fatal("fatal")[ FD ]
Line_2 $$ private void doTestInitLogging(String location, boolean refreshInterval) throws FileNotFoundException -->Line_3 $$ if (refreshInterval) [ CD ]
Line_2 $$ private void doTestInitLogging(String location, boolean refreshInterval) throws FileNotFoundException -->Line_6 $$ Log4jConfigurer.initLogging(location)[ FD ]
Line_2 $$ private void doTestInitLogging(String location, boolean refreshInterval) throws FileNotFoundException -->Line_16 $$ assertTrue(MockLog4jAppender.loggingStrings.contains("warn"))[ CD ]
Line_2 $$ private void doTestInitLogging(String location, boolean refreshInterval) throws FileNotFoundException -->Line_13 $$ log.fatal("fatal")[ CD ]
Line_2 $$ private void doTestInitLogging(String location, boolean refreshInterval) throws FileNotFoundException -->Line_18 $$ assertTrue(MockLog4jAppender.loggingStrings.contains("fatal"))[ CD ]
Line_2 $$ private void doTestInitLogging(String location, boolean refreshInterval) throws FileNotFoundException -->Line_8 $$ Log log = LogFactory.getLog(this.getClass())[ CD ]
Line_2 $$ private void doTestInitLogging(String location, boolean refreshInterval) throws FileNotFoundException -->Line_15 $$ assertTrue(MockLog4jAppender.loggingStrings.contains("info"))[ CD ]
Line_3 $$ if (refreshInterval) -->Line_6 $$ Log4jConfigurer.initLogging(location)[ CD ]
Line_2 $$ private void doTestInitLogging(String location, boolean refreshInterval) throws FileNotFoundException -->Line_14 $$ assertTrue(MockLog4jAppender.loggingStrings.contains("debug"))[ CD ]
Line_2 $$ private void doTestInitLogging(String location, boolean refreshInterval) throws FileNotFoundException -->Line_10 $$ log.info("info")[ CD ]
Line_3 $$ if (refreshInterval) -->Line_4 $$ Log4jConfigurer.initLogging(location, 10)[ CD ]
Line_8 $$ Log log = LogFactory.getLog(this.getClass())-->Line_10 $$ log.info("info")[ FD ]
Line_2 $$ private void doTestInitLogging(String location, boolean refreshInterval) throws FileNotFoundException -->Line_17 $$ assertTrue(MockLog4jAppender.loggingStrings.contains("error"))[ CD ]
Line_8 $$ Log log = LogFactory.getLog(this.getClass())-->Line_11 $$ log.warn("warn")[ FD ]
Line_2 $$ private void doTestInitLogging(String location, boolean refreshInterval) throws FileNotFoundException -->Line_4 $$ Log4jConfigurer.initLogging(location, 10)[ FD ]
Line_2 $$ private void doTestInitLogging(String location, boolean refreshInterval) throws FileNotFoundException -->Line_9 $$ log.debug("debug")[ CD ]
Line_2 $$ private void doTestInitLogging(String location, boolean refreshInterval) throws FileNotFoundException -->Line_11 $$ log.warn("warn")[ CD ]
Line_2 $$ private void doTestInitLogging(String location, boolean refreshInterval) throws FileNotFoundException -->Line_19 $$ Log4jConfigurer.shutdownLogging()[ CD ]
