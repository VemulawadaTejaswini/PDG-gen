Line_13 $$ final long[] formats = (long[]) getClipboardFormats.invoke(clipboard)-->Line_17 $$ final Set<DataFlavor> set = DataTransferer.getInstance().getFlavorsForFormats(formats, FLAVOR_MAP).keySet()[ FD ]
Line_7 $$ final Method getClipboardFormats = ReflectionUtil.getDeclaredMethod(aClass, "getClipboardFormats")-->Line_13 $$ final long[] formats = (long[]) getClipboardFormats.invoke(clipboard)[ FD ]
Line_7 $$ final Method getClipboardFormats = ReflectionUtil.getDeclaredMethod(aClass, "getClipboardFormats")-->Line_8 $$ if (getClipboardFormats == null)[ FD ]
Line_2 $$ private static Collection<DataFlavor> checkContentsQuick() -->Line_3 $$ final Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard()[ CD ]
Line_2 $$ private static Collection<DataFlavor> checkContentsQuick() -->Line_11 $$ System.setProperty(DATA_TRANSFER_TIMEOUT_PROPERTY, SHORT_TIMEOUT)[ CD ]
Line_4 $$ final Class<? extends Clipboard> aClass = clipboard.getClass()-->Line_5 $$ if (!"sun.awt.X11.XClipboard".equals(aClass.getName()))[ FD ]
Line_2 $$ private static Collection<DataFlavor> checkContentsQuick() -->Line_5 $$ if (!"sun.awt.X11.XClipboard".equals(aClass.getName()))[ CD ]
Line_2 $$ private static Collection<DataFlavor> checkContentsQuick() -->Line_29 $$ return null[ CD ]
Line_8 $$ if (getClipboardFormats == null)-->Line_9 $$ return null[ CD ]
Line_5 $$ if (!"sun.awt.X11.XClipboard".equals(aClass.getName()))-->Line_6 $$ return null[ CD ]
Line_2 $$ private static Collection<DataFlavor> checkContentsQuick() -->Line_7 $$ final Method getClipboardFormats = ReflectionUtil.getDeclaredMethod(aClass, "getClipboardFormats")[ CD ]
Line_2 $$ private static Collection<DataFlavor> checkContentsQuick() -->Line_10 $$ final String timeout = System.getProperty(DATA_TRANSFER_TIMEOUT_PROPERTY)[ CD ]
Line_4 $$ final Class<? extends Clipboard> aClass = clipboard.getClass()-->Line_7 $$ final Method getClipboardFormats = ReflectionUtil.getDeclaredMethod(aClass, "getClipboardFormats")[ FD ]
Line_10 $$ final String timeout = System.getProperty(DATA_TRANSFER_TIMEOUT_PROPERTY)-->Line_27 $$ System.setProperty(DATA_TRANSFER_TIMEOUT_PROPERTY, timeout)[ FD ]
Line_14 $$ if (formats == null || formats.length == 0) -->Line_15 $$ return Collections.emptySet()[ CD ]
Line_2 $$ private static Collection<DataFlavor> checkContentsQuick() -->Line_8 $$ if (getClipboardFormats == null)[ CD ]
Line_22 $$ final Throwable cause = e.getCause()-->Line_23 $$ if (cause instanceof IllegalStateException) [ FD ]
Line_2 $$ private static Collection<DataFlavor> checkContentsQuick() -->Line_4 $$ final Class<? extends Clipboard> aClass = clipboard.getClass()[ CD ]
Line_3 $$ final Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard()-->Line_4 $$ final Class<? extends Clipboard> aClass = clipboard.getClass()[ FD ]
Line_3 $$ final Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard()-->Line_13 $$ final long[] formats = (long[]) getClipboardFormats.invoke(clipboard)[ FD ]
