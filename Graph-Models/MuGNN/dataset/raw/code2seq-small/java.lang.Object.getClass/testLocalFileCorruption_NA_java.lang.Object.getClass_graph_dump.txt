Line_2 $$ public void testLocalFileCorruption() throws Exception -->Line_10 $$ dos.writeBytes("corruption")[ CD ]
Line_4 $$ Path file = new Path(PathUtils.getTestDirName(getClass()), "corruptFile")-->Line_18 $$ fs.delete(file, true)[ FD ]
Line_5 $$ FileSystem fs = FileSystem.getLocal(conf)-->Line_6 $$ DataOutputStream dos = fs.create(file)[ FD ]
Line_6 $$ DataOutputStream dos = fs.create(file)-->Line_8 $$ dos.close()[ FD ]
Line_2 $$ public void testLocalFileCorruption() throws Exception -->Line_9 $$ dos = new DataOutputStream(new FileOutputStream(file.toString()))[ CD ]
Line_5 $$ FileSystem fs = FileSystem.getLocal(conf)-->Line_18 $$ fs.delete(file, true)[ FD ]
Line_4 $$ Path file = new Path(PathUtils.getTestDirName(getClass()), "corruptFile")-->Line_9 $$ dos = new DataOutputStream(new FileOutputStream(file.toString()))[ FD ]
Line_4 $$ Path file = new Path(PathUtils.getTestDirName(getClass()), "corruptFile")-->Line_6 $$ DataOutputStream dos = fs.create(file)[ FD ]
Line_2 $$ public void testLocalFileCorruption() throws Exception -->Line_6 $$ DataOutputStream dos = fs.create(file)[ CD ]
Line_2 $$ public void testLocalFileCorruption() throws Exception -->Line_18 $$ fs.delete(file, true)[ CD ]
Line_2 $$ public void testLocalFileCorruption() throws Exception -->Line_4 $$ Path file = new Path(PathUtils.getTestDirName(getClass()), "corruptFile")[ CD ]
Line_2 $$ public void testLocalFileCorruption() throws Exception -->Line_8 $$ dos.close()[ CD ]
Line_6 $$ DataOutputStream dos = fs.create(file)-->Line_7 $$ dos.writeBytes("original bytes")[ FD ]
Line_9 $$ dos = new DataOutputStream(new FileOutputStream(file.toString()))-->Line_10 $$ dos.writeBytes("corruption")[ FD ]
Line_2 $$ public void testLocalFileCorruption() throws Exception -->Line_11 $$ dos.close()[ CD ]
Line_6 $$ DataOutputStream dos = fs.create(file)-->Line_9 $$ dos = new DataOutputStream(new FileOutputStream(file.toString()))[ FD ]
Line_12 $$ DataInputStream dis = fs.open(file, 512)-->Line_15 $$ dis.readByte()[ FD ]
Line_6 $$ DataOutputStream dos = fs.create(file)-->Line_11 $$ dos.close()[ FD ]
Line_6 $$ DataOutputStream dos = fs.create(file)-->Line_10 $$ dos.writeBytes("corruption")[ FD ]
Line_2 $$ public void testLocalFileCorruption() throws Exception -->Line_3 $$ Configuration conf = new HdfsConfiguration()[ CD ]
Line_5 $$ FileSystem fs = FileSystem.getLocal(conf)-->Line_12 $$ DataInputStream dis = fs.open(file, 512)[ FD ]
Line_4 $$ Path file = new Path(PathUtils.getTestDirName(getClass()), "corruptFile")-->Line_12 $$ DataInputStream dis = fs.open(file, 512)[ FD ]
Line_2 $$ public void testLocalFileCorruption() throws Exception -->Line_5 $$ FileSystem fs = FileSystem.getLocal(conf)[ CD ]
Line_2 $$ public void testLocalFileCorruption() throws Exception -->Line_12 $$ DataInputStream dis = fs.open(file, 512)[ CD ]
Line_3 $$ Configuration conf = new HdfsConfiguration()-->Line_5 $$ FileSystem fs = FileSystem.getLocal(conf)[ FD ]
Line_2 $$ public void testLocalFileCorruption() throws Exception -->Line_7 $$ dos.writeBytes("original bytes")[ CD ]
Line_9 $$ dos = new DataOutputStream(new FileOutputStream(file.toString()))-->Line_11 $$ dos.close()[ FD ]
