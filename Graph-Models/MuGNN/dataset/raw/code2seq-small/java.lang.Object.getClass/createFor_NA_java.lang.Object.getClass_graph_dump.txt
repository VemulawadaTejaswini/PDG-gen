Line_8 $$ if (domainObject instanceof SettingsInternal) -->Line_10 $$ registries.add(settingsServices)[ CD ]
Line_3 $$ if (domainObject instanceof GradleInternal) -->Line_4 $$ GradleScopeServices gradleServices = new GradleScopeServices(services, (GradleInternal) domainObject)[ CD ]
Line_2 $$ public ServiceRegistry createFor(Object domainObject) -->Line_3 $$ if (domainObject instanceof GradleInternal) [ FD ]
Line_2 $$ public ServiceRegistry createFor(Object domainObject) -->Line_8 $$ if (domainObject instanceof SettingsInternal) [ FD ]
Line_3 $$ if (domainObject instanceof GradleInternal) -->Line_5 $$ registries.add(gradleServices)[ CD ]
Line_3 $$ if (domainObject instanceof GradleInternal) -->Line_6 $$ return gradleServices[ CD ]
Line_2 $$ public ServiceRegistry createFor(Object domainObject) -->Line_8 $$ if (domainObject instanceof SettingsInternal) [ CD ]
Line_9 $$ SettingsScopeServices settingsServices = new SettingsScopeServices(services, (SettingsInternal) domainObject)-->Line_10 $$ registries.add(settingsServices)[ FD ]
Line_8 $$ if (domainObject instanceof SettingsInternal) -->Line_9 $$ SettingsScopeServices settingsServices = new SettingsScopeServices(services, (SettingsInternal) domainObject)[ CD ]
Line_2 $$ public ServiceRegistry createFor(Object domainObject) -->Line_13 $$ throw new IllegalArgumentException(String.format("Cannot create services for unknown domain object of type %s.", domainObject.getClass().getSimpleName()))[ FD ]
Line_8 $$ if (domainObject instanceof SettingsInternal) -->Line_11 $$ return settingsServices[ CD ]
Line_2 $$ public ServiceRegistry createFor(Object domainObject) -->Line_3 $$ if (domainObject instanceof GradleInternal) [ CD ]
Line_4 $$ GradleScopeServices gradleServices = new GradleScopeServices(services, (GradleInternal) domainObject)-->Line_5 $$ registries.add(gradleServices)[ FD ]
