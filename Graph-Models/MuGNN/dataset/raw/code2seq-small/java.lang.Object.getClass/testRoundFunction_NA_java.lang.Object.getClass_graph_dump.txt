Line_2 $$ public void testRoundFunction() -->Line_6 $$ Session s = openSession()[ CD ]
Line_3 $$ Product product = new Product()-->Line_4 $$ product.setLength(100)[ FD ]
Line_6 $$ Session s = openSession()-->Line_13 $$ Query q = s.createQuery("select round(p.price,1) from Product p")[ FD ]
Line_2 $$ public void testRoundFunction() -->Line_15 $$ assertEquals(BigDecimal.class, o.getClass())[ CD ]
Line_13 $$ Query q = s.createQuery("select round(p.price,1) from Product p")-->Line_14 $$ Object o = q.uniqueResult()[ FD ]
Line_6 $$ Session s = openSession()-->Line_11 $$ s = openSession()[ FD ]
Line_6 $$ Session s = openSession()-->Line_10 $$ s.close()[ FD ]
Line_2 $$ public void testRoundFunction() -->Line_18 $$ s.close()[ CD ]
Line_2 $$ public void testRoundFunction() -->Line_13 $$ Query q = s.createQuery("select round(p.price,1) from Product p")[ CD ]
Line_7 $$ Transaction tx = s.beginTransaction()-->Line_9 $$ tx.commit()[ FD ]
Line_2 $$ public void testRoundFunction() -->Line_11 $$ s = openSession()[ CD ]
Line_2 $$ public void testRoundFunction() -->Line_3 $$ Product product = new Product()[ CD ]
Line_3 $$ Product product = new Product()-->Line_8 $$ s.save(product)[ FD ]
Line_11 $$ s = openSession()-->Line_12 $$ tx = s.beginTransaction()[ FD ]
Line_6 $$ Session s = openSession()-->Line_8 $$ s.save(product)[ FD ]
Line_11 $$ s = openSession()-->Line_18 $$ s.close()[ FD ]
Line_2 $$ public void testRoundFunction() -->Line_8 $$ s.save(product)[ CD ]
Line_6 $$ Session s = openSession()-->Line_12 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testRoundFunction() -->Line_14 $$ Object o = q.uniqueResult()[ CD ]
Line_2 $$ public void testRoundFunction() -->Line_10 $$ s.close()[ CD ]
Line_12 $$ tx = s.beginTransaction()-->Line_17 $$ tx.commit()[ FD ]
Line_2 $$ public void testRoundFunction() -->Line_4 $$ product.setLength(100)[ CD ]
Line_14 $$ Object o = q.uniqueResult()-->Line_15 $$ assertEquals(BigDecimal.class, o.getClass())[ FD ]
Line_2 $$ public void testRoundFunction() -->Line_5 $$ product.setPrice(new BigDecimal(1.298))[ CD ]
Line_2 $$ public void testRoundFunction() -->Line_17 $$ tx.commit()[ CD ]
Line_2 $$ public void testRoundFunction() -->Line_16 $$ assertEquals(BigDecimal.valueOf(1.3), o)[ CD ]
Line_11 $$ s = openSession()-->Line_13 $$ Query q = s.createQuery("select round(p.price,1) from Product p")[ FD ]
Line_6 $$ Session s = openSession()-->Line_18 $$ s.close()[ FD ]
Line_7 $$ Transaction tx = s.beginTransaction()-->Line_17 $$ tx.commit()[ FD ]
Line_7 $$ Transaction tx = s.beginTransaction()-->Line_12 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testRoundFunction() -->Line_12 $$ tx = s.beginTransaction()[ CD ]
Line_6 $$ Session s = openSession()-->Line_7 $$ Transaction tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testRoundFunction() -->Line_9 $$ tx.commit()[ CD ]
Line_14 $$ Object o = q.uniqueResult()-->Line_16 $$ assertEquals(BigDecimal.valueOf(1.3), o)[ FD ]
Line_3 $$ Product product = new Product()-->Line_5 $$ product.setPrice(new BigDecimal(1.298))[ FD ]
Line_2 $$ public void testRoundFunction() -->Line_7 $$ Transaction tx = s.beginTransaction()[ CD ]
