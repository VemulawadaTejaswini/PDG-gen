Line_8 $$ Element currentTest-->Line_12 $$ currentTest = rootElement[ FD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_8 $$ Element currentTest[ CD ]
Line_8 $$ Element currentTest-->Line_10 $$ currentTest = testElements.get(createDescription(test))[ FD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_21 $$ final Text trace = doc.createTextNode(strace)[ CD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_15 $$ final String message = t.getMessage()[ FD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_22 $$ nested.appendChild(trace)[ CD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_19 $$ nested.setAttribute(ATTR_TYPE, t.getClass().getName())[ CD ]
Line_3 $$ if (test != null) -->Line_5 $$ failedTests.put(test, test)[ CD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_3 $$ if (test != null) [ CD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_9 $$ if (test != null) [ CD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_7 $$ final Element nested = doc.createElement(type)[ CD ]
Line_10 $$ currentTest = testElements.get(createDescription(test))-->Line_14 $$ currentTest.appendChild(nested)[ FD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_15 $$ final String message = t.getMessage()[ CD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_14 $$ currentTest.appendChild(nested)[ CD ]
Line_3 $$ if (test != null) -->Line_4 $$ endTest(test)[ CD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_20 $$ final String strace = JUnitTestRunner.getFilteredTrace(t)[ CD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_20 $$ final String strace = JUnitTestRunner.getFilteredTrace(t)[ FD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_19 $$ nested.setAttribute(ATTR_TYPE, t.getClass().getName())[ FD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_4 $$ endTest(test)[ FD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_3 $$ if (test != null) [ FD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_10 $$ currentTest = testElements.get(createDescription(test))[ FD ]
Line_16 $$ if (message != null && message.length() > 0) -->Line_17 $$ nested.setAttribute(ATTR_MESSAGE, t.getMessage())[ CD ]
Line_12 $$ currentTest = rootElement-->Line_14 $$ currentTest.appendChild(nested)[ FD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_16 $$ if (message != null && message.length() > 0) [ CD ]
Line_7 $$ final Element nested = doc.createElement(type)-->Line_17 $$ nested.setAttribute(ATTR_MESSAGE, t.getMessage())[ FD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_5 $$ failedTests.put(test, test)[ FD ]
Line_7 $$ final Element nested = doc.createElement(type)-->Line_19 $$ nested.setAttribute(ATTR_TYPE, t.getClass().getName())[ FD ]
Line_9 $$ if (test != null) -->Line_10 $$ currentTest = testElements.get(createDescription(test))[ CD ]
Line_15 $$ final String message = t.getMessage()-->Line_16 $$ if (message != null && message.length() > 0) [ FD ]
Line_21 $$ final Text trace = doc.createTextNode(strace)-->Line_22 $$ nested.appendChild(trace)[ FD ]
Line_20 $$ final String strace = JUnitTestRunner.getFilteredTrace(t)-->Line_21 $$ final Text trace = doc.createTextNode(strace)[ FD ]
Line_7 $$ final Element nested = doc.createElement(type)-->Line_22 $$ nested.appendChild(trace)[ FD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_9 $$ if (test != null) [ FD ]
Line_7 $$ final Element nested = doc.createElement(type)-->Line_14 $$ currentTest.appendChild(nested)[ FD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_7 $$ final Element nested = doc.createElement(type)[ FD ]
Line_9 $$ if (test != null) -->Line_12 $$ currentTest = rootElement[ CD ]
Line_2 $$ private void formatError(final String type, final Test test, final Throwable t) -->Line_17 $$ nested.setAttribute(ATTR_MESSAGE, t.getMessage())[ FD ]
Line_8 $$ Element currentTest-->Line_14 $$ currentTest.appendChild(nested)[ FD ]
Line_10 $$ currentTest = testElements.get(createDescription(test))-->Line_12 $$ currentTest = rootElement[ FD ]
