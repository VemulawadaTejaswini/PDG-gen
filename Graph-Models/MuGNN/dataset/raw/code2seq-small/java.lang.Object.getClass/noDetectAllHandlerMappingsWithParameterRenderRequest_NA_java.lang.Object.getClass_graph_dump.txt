Line_2 $$ public void noDetectAllHandlerMappingsWithParameterRenderRequest() throws Exception -->Line_11 $$ complexDispatcherPortlet.doDispatch(request, response)[ CD ]
Line_3 $$ DispatcherPortlet complexDispatcherPortlet = new DispatcherPortlet()-->Line_5 $$ complexDispatcherPortlet.setNamespace("test")[ FD ]
Line_3 $$ DispatcherPortlet complexDispatcherPortlet = new DispatcherPortlet()-->Line_7 $$ complexDispatcherPortlet.init(new MockPortletConfig(getPortletContext(), "complex"))[ FD ]
Line_13 $$ Exception exception = (Exception) model.get("exception")-->Line_14 $$ assertTrue(exception.getClass().equals(NoHandlerFoundException.class))[ FD ]
Line_2 $$ public void noDetectAllHandlerMappingsWithParameterRenderRequest() throws Exception -->Line_12 $$ Map<?, ?> model = (Map<?, ?>) request.getAttribute(ViewRendererServlet.MODEL_ATTRIBUTE)[ CD ]
Line_2 $$ public void noDetectAllHandlerMappingsWithParameterRenderRequest() throws Exception -->Line_9 $$ MockRenderResponse response = new MockRenderResponse()[ CD ]
Line_3 $$ DispatcherPortlet complexDispatcherPortlet = new DispatcherPortlet()-->Line_4 $$ complexDispatcherPortlet.setContextClass(ComplexPortletApplicationContext.class)[ FD ]
Line_2 $$ public void noDetectAllHandlerMappingsWithParameterRenderRequest() throws Exception -->Line_6 $$ complexDispatcherPortlet.setDetectAllHandlerMappings(false)[ CD ]
Line_12 $$ Map<?, ?> model = (Map<?, ?>) request.getAttribute(ViewRendererServlet.MODEL_ATTRIBUTE)-->Line_13 $$ Exception exception = (Exception) model.get("exception")[ FD ]
Line_2 $$ public void noDetectAllHandlerMappingsWithParameterRenderRequest() throws Exception -->Line_8 $$ MockRenderRequest request = new MockRenderRequest()[ CD ]
Line_2 $$ public void noDetectAllHandlerMappingsWithParameterRenderRequest() throws Exception -->Line_13 $$ Exception exception = (Exception) model.get("exception")[ CD ]
Line_2 $$ public void noDetectAllHandlerMappingsWithParameterRenderRequest() throws Exception -->Line_14 $$ assertTrue(exception.getClass().equals(NoHandlerFoundException.class))[ CD ]
Line_2 $$ public void noDetectAllHandlerMappingsWithParameterRenderRequest() throws Exception -->Line_15 $$ InternalResourceView view = (InternalResourceView) request.getAttribute(ViewRendererServlet.VIEW_ATTRIBUTE)[ CD ]
Line_2 $$ public void noDetectAllHandlerMappingsWithParameterRenderRequest() throws Exception -->Line_10 $$ request.setParameter("myParam", "test1")[ CD ]
Line_9 $$ MockRenderResponse response = new MockRenderResponse()-->Line_11 $$ complexDispatcherPortlet.doDispatch(request, response)[ FD ]
Line_2 $$ public void noDetectAllHandlerMappingsWithParameterRenderRequest() throws Exception -->Line_4 $$ complexDispatcherPortlet.setContextClass(ComplexPortletApplicationContext.class)[ CD ]
Line_8 $$ MockRenderRequest request = new MockRenderRequest()-->Line_12 $$ Map<?, ?> model = (Map<?, ?>) request.getAttribute(ViewRendererServlet.MODEL_ATTRIBUTE)[ FD ]
Line_8 $$ MockRenderRequest request = new MockRenderRequest()-->Line_10 $$ request.setParameter("myParam", "test1")[ FD ]
Line_8 $$ MockRenderRequest request = new MockRenderRequest()-->Line_11 $$ complexDispatcherPortlet.doDispatch(request, response)[ FD ]
Line_2 $$ public void noDetectAllHandlerMappingsWithParameterRenderRequest() throws Exception -->Line_5 $$ complexDispatcherPortlet.setNamespace("test")[ CD ]
Line_15 $$ InternalResourceView view = (InternalResourceView) request.getAttribute(ViewRendererServlet.VIEW_ATTRIBUTE)-->Line_16 $$ assertEquals("failed-unavailable", view.getBeanName())[ FD ]
Line_2 $$ public void noDetectAllHandlerMappingsWithParameterRenderRequest() throws Exception -->Line_3 $$ DispatcherPortlet complexDispatcherPortlet = new DispatcherPortlet()[ CD ]
Line_3 $$ DispatcherPortlet complexDispatcherPortlet = new DispatcherPortlet()-->Line_11 $$ complexDispatcherPortlet.doDispatch(request, response)[ FD ]
Line_3 $$ DispatcherPortlet complexDispatcherPortlet = new DispatcherPortlet()-->Line_6 $$ complexDispatcherPortlet.setDetectAllHandlerMappings(false)[ FD ]
Line_2 $$ public void noDetectAllHandlerMappingsWithParameterRenderRequest() throws Exception -->Line_7 $$ complexDispatcherPortlet.init(new MockPortletConfig(getPortletContext(), "complex"))[ CD ]
Line_2 $$ public void noDetectAllHandlerMappingsWithParameterRenderRequest() throws Exception -->Line_16 $$ assertEquals("failed-unavailable", view.getBeanName())[ CD ]
Line_8 $$ MockRenderRequest request = new MockRenderRequest()-->Line_15 $$ InternalResourceView view = (InternalResourceView) request.getAttribute(ViewRendererServlet.VIEW_ATTRIBUTE)[ FD ]
