Line_15 $$ if (con != null) -->Line_16 $$ DatabaseMetaData metaData = con.getMetaData()[ CD ]
Line_30 $$ if (_log.isInfoEnabled()) -->Line_31 $$ _log.info("Detected HSQL with database name " + dbName)[ CD ]
Line_73 $$ if (_sqlPool == null) -->Line_76 $$ _sqlPool.clear()[ CD ]
Line_28 $$ if (dbName.startsWith("HSQL")) -->Line_30 $$ if (_log.isInfoEnabled()) [ CD ]
Line_28 $$ if (dbName.startsWith("HSQL")) -->Line_33 $$ if (dbName.startsWith("Informix")) [ CD ]
Line_17 $$ String dbName = GetterUtil.getString(metaData.getDatabaseProductName())-->Line_45 $$ if (dbName.startsWith("Sybase") || dbName.equals("ASE")) [ FD ]
Line_15 $$ if (con != null) -->Line_18 $$ if (_log.isInfoEnabled()) [ CD ]
Line_52 $$ if (dbName.startsWith("Oracle")) -->Line_57 $$ if (dbName.startsWith("PostgreSQL")) [ CD ]
Line_59 $$ if (_log.isInfoEnabled()) -->Line_60 $$ _log.info("Detected PostgreSQL with database name " + dbName)[ CD ]
Line_2 $$ public void reloadCustomSQL() throws SQLException -->Line_5 $$ String functionIsNull = PortalUtil.getCustomSQLFunctionIsNull()[ CD ]
Line_11 $$ if (_log.isDebugEnabled()) -->Line_12 $$ _log.debug("functionIsNull is manually set to " + functionIsNull)[ CD ]
Line_40 $$ if (dbName.startsWith("MySQL")) -->Line_45 $$ if (dbName.startsWith("Sybase") || dbName.equals("ASE")) [ CD ]
Line_8 $$ if (Validator.isNotNull(functionIsNull) && Validator.isNotNull(functionIsNotNull)) -->Line_15 $$ if (con != null) [ CD ]
Line_4 $$ Connection con = DataAccess.getConnection()-->Line_16 $$ DatabaseMetaData metaData = con.getMetaData()[ FD ]
Line_21 $$ if (dbName.startsWith("DB2")) -->Line_28 $$ if (dbName.startsWith("HSQL")) [ CD ]
Line_82 $$ for (String _config : configs) -->Line_83 $$ read(classLoader, _config)[ FD ]
Line_15 $$ if (con != null) -->Line_17 $$ String dbName = GetterUtil.getString(metaData.getDatabaseProductName())[ CD ]
Line_15 $$ if (con != null) -->Line_21 $$ if (dbName.startsWith("DB2")) [ CD ]
Line_79 $$ Class<?> clazz = getClass()-->Line_80 $$ ClassLoader classLoader = clazz.getClassLoader()[ FD ]
Line_6 $$ String functionIsNotNull = PortalUtil.getCustomSQLFunctionIsNotNull()-->Line_8 $$ if (Validator.isNotNull(functionIsNull) && Validator.isNotNull(functionIsNotNull)) [ FD ]
Line_2 $$ public void reloadCustomSQL() throws SQLException -->Line_4 $$ Connection con = DataAccess.getConnection()[ CD ]
Line_63 $$ if (_log.isDebugEnabled()) -->Line_64 $$ _log.debug("Unable to detect database with name " + dbName)[ CD ]
Line_16 $$ DatabaseMetaData metaData = con.getMetaData()-->Line_17 $$ String dbName = GetterUtil.getString(metaData.getDatabaseProductName())[ FD ]
Line_17 $$ String dbName = GetterUtil.getString(metaData.getDatabaseProductName())-->Line_33 $$ if (dbName.startsWith("Informix")) [ FD ]
Line_40 $$ if (dbName.startsWith("MySQL")) -->Line_42 $$ if (_log.isInfoEnabled()) [ CD ]
Line_45 $$ if (dbName.startsWith("Sybase") || dbName.equals("ASE")) -->Line_52 $$ if (dbName.startsWith("Oracle")) [ CD ]
Line_52 $$ if (dbName.startsWith("Oracle")) -->Line_54 $$ if (_log.isInfoEnabled()) [ CD ]
Line_37 $$ if (_log.isInfoEnabled()) -->Line_38 $$ _log.info("Detected Informix with database name " + dbName)[ CD ]
Line_4 $$ Connection con = DataAccess.getConnection()-->Line_15 $$ if (con != null) [ FD ]
Line_4 $$ Connection con = DataAccess.getConnection()-->Line_71 $$ DataAccess.cleanUp(con)[ FD ]
Line_11 $$ if (_log.isDebugEnabled()) -->Line_13 $$ _log.debug("functionIsNotNull is manually set to " + functionIsNotNull)[ CD ]
Line_17 $$ String dbName = GetterUtil.getString(metaData.getDatabaseProductName())-->Line_52 $$ if (dbName.startsWith("Oracle")) [ FD ]
Line_2 $$ public void reloadCustomSQL() throws SQLException -->Line_3 $$ PortalUtil.initCustomSQL()[ CD ]
Line_17 $$ String dbName = GetterUtil.getString(metaData.getDatabaseProductName())-->Line_28 $$ if (dbName.startsWith("HSQL")) [ FD ]
Line_17 $$ String dbName = GetterUtil.getString(metaData.getDatabaseProductName())-->Line_21 $$ if (dbName.startsWith("DB2")) [ FD ]
Line_21 $$ if (dbName.startsWith("DB2")) -->Line_25 $$ if (_log.isInfoEnabled()) [ CD ]
Line_17 $$ String dbName = GetterUtil.getString(metaData.getDatabaseProductName())-->Line_40 $$ if (dbName.startsWith("MySQL")) [ FD ]
Line_45 $$ if (dbName.startsWith("Sybase") || dbName.equals("ASE")) -->Line_49 $$ if (_log.isInfoEnabled()) [ CD ]
Line_2 $$ public void reloadCustomSQL() throws SQLException -->Line_73 $$ if (_sqlPool == null) [ CD ]
Line_8 $$ if (Validator.isNotNull(functionIsNull) && Validator.isNotNull(functionIsNotNull)) -->Line_11 $$ if (_log.isDebugEnabled()) [ CD ]
Line_54 $$ if (_log.isInfoEnabled()) -->Line_55 $$ _log.info("Detected Oracle with database name " + dbName)[ CD ]
Line_57 $$ if (dbName.startsWith("PostgreSQL")) -->Line_59 $$ if (_log.isInfoEnabled()) [ CD ]
Line_2 $$ public void reloadCustomSQL() throws SQLException -->Line_6 $$ String functionIsNotNull = PortalUtil.getCustomSQLFunctionIsNotNull()[ CD ]
Line_18 $$ if (_log.isInfoEnabled()) -->Line_19 $$ _log.info("Database name " + dbName)[ CD ]
Line_57 $$ if (dbName.startsWith("PostgreSQL")) -->Line_63 $$ if (_log.isDebugEnabled()) [ CD ]
Line_33 $$ if (dbName.startsWith("Informix")) -->Line_40 $$ if (dbName.startsWith("MySQL")) [ CD ]
Line_42 $$ if (_log.isInfoEnabled()) -->Line_43 $$ _log.info("Detected MySQL with database name " + dbName)[ CD ]
Line_80 $$ ClassLoader classLoader = clazz.getClassLoader()-->Line_83 $$ read(classLoader, _config)[ FD ]
Line_33 $$ if (dbName.startsWith("Informix")) -->Line_37 $$ if (_log.isInfoEnabled()) [ CD ]
Line_5 $$ String functionIsNull = PortalUtil.getCustomSQLFunctionIsNull()-->Line_8 $$ if (Validator.isNotNull(functionIsNull) && Validator.isNotNull(functionIsNotNull)) [ FD ]
Line_17 $$ String dbName = GetterUtil.getString(metaData.getDatabaseProductName())-->Line_57 $$ if (dbName.startsWith("PostgreSQL")) [ FD ]
Line_25 $$ if (_log.isInfoEnabled()) -->Line_26 $$ _log.info("Detected DB2 with database name " + dbName)[ CD ]
Line_49 $$ if (_log.isInfoEnabled()) -->Line_50 $$ _log.info("Detected Sybase with database name " + dbName)[ CD ]
