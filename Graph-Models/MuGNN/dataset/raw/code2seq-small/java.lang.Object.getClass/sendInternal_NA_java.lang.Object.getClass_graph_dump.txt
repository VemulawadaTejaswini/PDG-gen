Line_4 $$ if (converter.canWrite(data.getClass(), mediaType)) -->Line_6 $$ this.outputMessage.flush()[ CD ]
Line_3 $$ for (HttpMessageConverter<?> converter : ResponseBodyEmitterReturnValueHandler.this.messageConverters) -->Line_4 $$ if (converter.canWrite(data.getClass(), mediaType)) [ FD ]
Line_4 $$ if (converter.canWrite(data.getClass(), mediaType)) -->Line_5 $$ ((HttpMessageConverter<T>) converter).write(data, mediaType, this.outputMessage)[ CD ]
Line_2 $$ private <T> void sendInternal(T data, MediaType mediaType) throws IOException -->Line_4 $$ if (converter.canWrite(data.getClass(), mediaType)) [ FD ]
Line_7 $$ if (logger.isDebugEnabled()) -->Line_8 $$ logger.debug("Written [" + data + "] using [" + converter + "]")[ CD ]
Line_2 $$ private <T> void sendInternal(T data, MediaType mediaType) throws IOException -->Line_13 $$ throw new IllegalArgumentException("No suitable converter for " + data.getClass())[ FD ]
Line_4 $$ if (converter.canWrite(data.getClass(), mediaType)) -->Line_7 $$ if (logger.isDebugEnabled()) [ CD ]
Line_4 $$ if (converter.canWrite(data.getClass(), mediaType)) -->Line_10 $$ return[ CD ]
Line_2 $$ private <T> void sendInternal(T data, MediaType mediaType) throws IOException -->Line_5 $$ ((HttpMessageConverter<T>) converter).write(data, mediaType, this.outputMessage)[ FD ]
