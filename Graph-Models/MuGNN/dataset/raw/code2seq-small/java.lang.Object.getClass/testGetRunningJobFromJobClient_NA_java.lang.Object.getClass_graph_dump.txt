Line_2 $$ public void testGetRunningJobFromJobClient() throws Exception -->Line_5 $$ FileInputFormat.addInputPath(conf, createTempFile("in", "hello"))[ CD ]
Line_2 $$ public void testGetRunningJobFromJobClient() throws Exception -->Line_8 $$ FileOutputFormat.setOutputPath(conf, outputDir)[ CD ]
Line_2 $$ public void testGetRunningJobFromJobClient() throws Exception -->Line_12 $$ RunningJob newRunningJob = jc.getJob(runningJob.getID())[ CD ]
Line_2 $$ public void testGetRunningJobFromJobClient() throws Exception -->Line_9 $$ JobClient jc = new JobClient(conf)[ CD ]
Line_3 $$ JobConf conf = new JobConf()-->Line_4 $$ conf.set("mapreduce.framework.name", "local")[ FD ]
Line_10 $$ RunningJob runningJob = jc.submitJob(conf)-->Line_11 $$ assertNotNull("Running job", runningJob)[ FD ]
Line_2 $$ public void testGetRunningJobFromJobClient() throws Exception -->Line_13 $$ assertNotNull("New running job", newRunningJob)[ CD ]
Line_3 $$ JobConf conf = new JobConf()-->Line_10 $$ RunningJob runningJob = jc.submitJob(conf)[ FD ]
Line_2 $$ public void testGetRunningJobFromJobClient() throws Exception -->Line_11 $$ assertNotNull("Running job", runningJob)[ CD ]
Line_9 $$ JobClient jc = new JobClient(conf)-->Line_12 $$ RunningJob newRunningJob = jc.getJob(runningJob.getID())[ FD ]
Line_6 $$ Path outputDir = new Path(TEST_ROOT_DIR, getClass().getSimpleName())-->Line_8 $$ FileOutputFormat.setOutputPath(conf, outputDir)[ FD ]
Line_9 $$ JobClient jc = new JobClient(conf)-->Line_10 $$ RunningJob runningJob = jc.submitJob(conf)[ FD ]
Line_2 $$ public void testGetRunningJobFromJobClient() throws Exception -->Line_10 $$ RunningJob runningJob = jc.submitJob(conf)[ CD ]
Line_3 $$ JobConf conf = new JobConf()-->Line_7 $$ outputDir.getFileSystem(conf).delete(outputDir, true)[ FD ]
Line_2 $$ public void testGetRunningJobFromJobClient() throws Exception -->Line_6 $$ Path outputDir = new Path(TEST_ROOT_DIR, getClass().getSimpleName())[ CD ]
Line_2 $$ public void testGetRunningJobFromJobClient() throws Exception -->Line_3 $$ JobConf conf = new JobConf()[ CD ]
Line_3 $$ JobConf conf = new JobConf()-->Line_8 $$ FileOutputFormat.setOutputPath(conf, outputDir)[ FD ]
Line_12 $$ RunningJob newRunningJob = jc.getJob(runningJob.getID())-->Line_13 $$ assertNotNull("New running job", newRunningJob)[ FD ]
Line_2 $$ public void testGetRunningJobFromJobClient() throws Exception -->Line_7 $$ outputDir.getFileSystem(conf).delete(outputDir, true)[ CD ]
Line_3 $$ JobConf conf = new JobConf()-->Line_5 $$ FileInputFormat.addInputPath(conf, createTempFile("in", "hello"))[ FD ]
Line_2 $$ public void testGetRunningJobFromJobClient() throws Exception -->Line_4 $$ conf.set("mapreduce.framework.name", "local")[ CD ]
Line_10 $$ RunningJob runningJob = jc.submitJob(conf)-->Line_12 $$ RunningJob newRunningJob = jc.getJob(runningJob.getID())[ FD ]
Line_6 $$ Path outputDir = new Path(TEST_ROOT_DIR, getClass().getSimpleName())-->Line_7 $$ outputDir.getFileSystem(conf).delete(outputDir, true)[ FD ]
