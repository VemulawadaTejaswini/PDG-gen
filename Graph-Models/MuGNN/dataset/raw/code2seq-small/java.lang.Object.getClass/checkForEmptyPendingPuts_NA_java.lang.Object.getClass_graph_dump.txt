Line_8 $$ SessionFactoryImplementor sfi = (SessionFactoryImplementor) sessionFactories[i]-->Line_10 $$ PutFromLoadValidator validator = getPutFromLoadValidator(sfi, (String) regionName)[ FD ]
Line_19 $$ getInvalidators = entry.getValue().getClass().getMethod("getInvalidators")-->Line_18 $$ if (getInvalidators == null) [ FD ]
Line_2 $$ protected void checkForEmptyPendingPuts() throws Exception -->Line_3 $$ Field pp = PutFromLoadValidator.class.getDeclaredField("pendingPuts")[ CD ]
Line_6 $$ List<DelayedInvalidators> delayed = new LinkedList()-->Line_32 $$ for (Iterator<DelayedInvalidators> iterator = delayed.iterator(); iterator.hasNext(); ) [ FD ]
Line_5 $$ Method getInvalidators = null-->Line_19 $$ getInvalidators = entry.getValue().getClass().getMethod("getInvalidators")[ FD ]
Line_10 $$ PutFromLoadValidator validator = getPutFromLoadValidator(sfi, (String) regionName)-->Line_15 $$ ConcurrentMap<Object, Object> map = (ConcurrentMap) pp.get(validator)[ FD ]
Line_2 $$ protected void checkForEmptyPendingPuts() throws Exception -->Line_30 $$ long deadline = System.currentTimeMillis() + 30000[ CD ]
Line_35 $$ if (pendingPutMap == null) -->Line_36 $$ iterator.remove()[ CD ]
Line_16 $$ for (Iterator<Map.Entry<Object, Object>> iterator = map.entrySet().iterator(); iterator.hasNext(); ) -->Line_22 $$ java.util.Collection invalidators = (java.util.Collection) getInvalidators.invoke(entry.getValue())[ CD ]
Line_2 $$ protected void checkForEmptyPendingPuts() throws Exception -->Line_7 $$ for (int i = 0; i < sessionFactories.length; i++) [ CD ]
Line_35 $$ if (pendingPutMap == null) -->Line_38 $$ java.util.Collection invalidators = (java.util.Collection) getInvalidators.invoke(pendingPutMap)[ CD ]
Line_5 $$ Method getInvalidators = null-->Line_18 $$ if (getInvalidators == null) [ FD ]
Line_16 $$ for (Iterator<Map.Entry<Object, Object>> iterator = map.entrySet().iterator(); iterator.hasNext(); ) -->Line_33 $$ DelayedInvalidators entry = iterator.next()[ FD ]
Line_5 $$ Method getInvalidators = null-->Line_22 $$ java.util.Collection invalidators = (java.util.Collection) getInvalidators.invoke(entry.getValue())[ FD ]
Line_32 $$ for (Iterator<DelayedInvalidators> iterator = delayed.iterator(); iterator.hasNext(); ) -->Line_40 $$ iterator.remove()[ FD ]
Line_15 $$ ConcurrentMap<Object, Object> map = (ConcurrentMap) pp.get(validator)-->Line_16 $$ for (Iterator<Map.Entry<Object, Object>> iterator = map.entrySet().iterator(); iterator.hasNext(); ) [ FD ]
Line_2 $$ protected void checkForEmptyPendingPuts() throws Exception -->Line_6 $$ List<DelayedInvalidators> delayed = new LinkedList()[ CD ]
Line_31 $$ while (System.currentTimeMillis() < deadline) -->Line_47 $$ Thread.sleep(1000)[ CD ]
Line_2 $$ protected void checkForEmptyPendingPuts() throws Exception -->Line_31 $$ while (System.currentTimeMillis() < deadline) [ CD ]
Line_3 $$ Field pp = PutFromLoadValidator.class.getDeclaredField("pendingPuts")-->Line_4 $$ pp.setAccessible(true)[ FD ]
Line_19 $$ getInvalidators = entry.getValue().getClass().getMethod("getInvalidators")-->Line_22 $$ java.util.Collection invalidators = (java.util.Collection) getInvalidators.invoke(entry.getValue())[ FD ]
Line_16 $$ for (Iterator<Map.Entry<Object, Object>> iterator = map.entrySet().iterator(); iterator.hasNext(); ) -->Line_32 $$ for (Iterator<DelayedInvalidators> iterator = delayed.iterator(); iterator.hasNext(); ) [ FD ]
Line_2 $$ protected void checkForEmptyPendingPuts() throws Exception -->Line_49 $$ if (!delayed.isEmpty()) [ CD ]
Line_34 $$ Object pendingPutMap = entry.getPendingPutMap()-->Line_35 $$ if (pendingPutMap == null) [ FD ]
Line_10 $$ PutFromLoadValidator validator = getPutFromLoadValidator(sfi, (String) regionName)-->Line_11 $$ if (validator == null) [ FD ]
Line_16 $$ for (Iterator<Map.Entry<Object, Object>> iterator = map.entrySet().iterator(); iterator.hasNext(); ) -->Line_26 $$ iterator.remove()[ CD ]
Line_18 $$ if (getInvalidators == null) -->Line_20 $$ getInvalidators.setAccessible(true)[ CD ]
Line_33 $$ DelayedInvalidators entry = iterator.next()-->Line_34 $$ Object pendingPutMap = entry.getPendingPutMap()[ FD ]
Line_34 $$ Object pendingPutMap = entry.getPendingPutMap()-->Line_38 $$ java.util.Collection invalidators = (java.util.Collection) getInvalidators.invoke(pendingPutMap)[ FD ]
Line_17 $$ Map.Entry entry = iterator.next()-->Line_19 $$ getInvalidators = entry.getValue().getClass().getMethod("getInvalidators")[ FD ]
Line_6 $$ List<DelayedInvalidators> delayed = new LinkedList()-->Line_24 $$ delayed.add(new DelayedInvalidators(map, entry.getKey()))[ FD ]
Line_31 $$ while (System.currentTimeMillis() < deadline) -->Line_32 $$ for (Iterator<DelayedInvalidators> iterator = delayed.iterator(); iterator.hasNext(); ) [ CD ]
Line_19 $$ getInvalidators = entry.getValue().getClass().getMethod("getInvalidators")-->Line_20 $$ getInvalidators.setAccessible(true)[ FD ]
Line_6 $$ List<DelayedInvalidators> delayed = new LinkedList()-->Line_49 $$ if (!delayed.isEmpty()) [ FD ]
Line_38 $$ java.util.Collection invalidators = (java.util.Collection) getInvalidators.invoke(pendingPutMap)-->Line_39 $$ if (invalidators == null || invalidators.isEmpty()) [ FD ]
Line_8 $$ SessionFactoryImplementor sfi = (SessionFactoryImplementor) sessionFactories[i]-->Line_9 $$ for (Object regionName : sfi.getAllSecondLevelCacheRegions().keySet()) [ FD ]
Line_23 $$ if (invalidators != null && !invalidators.isEmpty()) -->Line_24 $$ delayed.add(new DelayedInvalidators(map, entry.getKey()))[ CD ]
Line_16 $$ for (Iterator<Map.Entry<Object, Object>> iterator = map.entrySet().iterator(); iterator.hasNext(); ) -->Line_36 $$ iterator.remove()[ FD ]
Line_19 $$ getInvalidators = entry.getValue().getClass().getMethod("getInvalidators")-->Line_38 $$ java.util.Collection invalidators = (java.util.Collection) getInvalidators.invoke(pendingPutMap)[ FD ]
Line_32 $$ for (Iterator<DelayedInvalidators> iterator = delayed.iterator(); iterator.hasNext(); ) -->Line_33 $$ DelayedInvalidators entry = iterator.next()[ FD ]
Line_16 $$ for (Iterator<Map.Entry<Object, Object>> iterator = map.entrySet().iterator(); iterator.hasNext(); ) -->Line_17 $$ Map.Entry entry = iterator.next()[ CD ]
Line_11 $$ if (validator == null) -->Line_12 $$ log.warn("No validator for " + regionName)[ CD ]
Line_32 $$ for (Iterator<DelayedInvalidators> iterator = delayed.iterator(); iterator.hasNext(); ) -->Line_35 $$ if (pendingPutMap == null) [ CD ]
Line_18 $$ if (getInvalidators == null) -->Line_19 $$ getInvalidators = entry.getValue().getClass().getMethod("getInvalidators")[ CD ]
Line_16 $$ for (Iterator<Map.Entry<Object, Object>> iterator = map.entrySet().iterator(); iterator.hasNext(); ) -->Line_17 $$ Map.Entry entry = iterator.next()[ FD ]
Line_3 $$ Field pp = PutFromLoadValidator.class.getDeclaredField("pendingPuts")-->Line_15 $$ ConcurrentMap<Object, Object> map = (ConcurrentMap) pp.get(validator)[ FD ]
Line_17 $$ Map.Entry entry = iterator.next()-->Line_24 $$ delayed.add(new DelayedInvalidators(map, entry.getKey()))[ FD ]
Line_32 $$ for (Iterator<DelayedInvalidators> iterator = delayed.iterator(); iterator.hasNext(); ) -->Line_33 $$ DelayedInvalidators entry = iterator.next()[ CD ]
Line_32 $$ for (Iterator<DelayedInvalidators> iterator = delayed.iterator(); iterator.hasNext(); ) -->Line_34 $$ Object pendingPutMap = entry.getPendingPutMap()[ CD ]
Line_35 $$ if (pendingPutMap == null) -->Line_39 $$ if (invalidators == null || invalidators.isEmpty()) [ CD ]
Line_22 $$ java.util.Collection invalidators = (java.util.Collection) getInvalidators.invoke(entry.getValue())-->Line_39 $$ if (invalidators == null || invalidators.isEmpty()) [ FD ]
Line_16 $$ for (Iterator<Map.Entry<Object, Object>> iterator = map.entrySet().iterator(); iterator.hasNext(); ) -->Line_40 $$ iterator.remove()[ FD ]
Line_2 $$ protected void checkForEmptyPendingPuts() throws Exception -->Line_4 $$ pp.setAccessible(true)[ CD ]
Line_6 $$ List<DelayedInvalidators> delayed = new LinkedList()-->Line_44 $$ if (delayed.isEmpty()) [ FD ]
Line_16 $$ for (Iterator<Map.Entry<Object, Object>> iterator = map.entrySet().iterator(); iterator.hasNext(); ) -->Line_26 $$ iterator.remove()[ FD ]
Line_5 $$ Method getInvalidators = null-->Line_20 $$ getInvalidators.setAccessible(true)[ FD ]
Line_17 $$ Map.Entry entry = iterator.next()-->Line_34 $$ Object pendingPutMap = entry.getPendingPutMap()[ FD ]
Line_2 $$ protected void checkForEmptyPendingPuts() throws Exception -->Line_5 $$ Method getInvalidators = null[ CD ]
Line_7 $$ for (int i = 0; i < sessionFactories.length; i++) -->Line_8 $$ SessionFactoryImplementor sfi = (SessionFactoryImplementor) sessionFactories[i][ CD ]
Line_16 $$ for (Iterator<Map.Entry<Object, Object>> iterator = map.entrySet().iterator(); iterator.hasNext(); ) -->Line_23 $$ if (invalidators != null && !invalidators.isEmpty()) [ CD ]
Line_17 $$ Map.Entry entry = iterator.next()-->Line_22 $$ java.util.Collection invalidators = (java.util.Collection) getInvalidators.invoke(entry.getValue())[ FD ]
Line_31 $$ while (System.currentTimeMillis() < deadline) -->Line_44 $$ if (delayed.isEmpty()) [ CD ]
Line_5 $$ Method getInvalidators = null-->Line_38 $$ java.util.Collection invalidators = (java.util.Collection) getInvalidators.invoke(pendingPutMap)[ FD ]
Line_16 $$ for (Iterator<Map.Entry<Object, Object>> iterator = map.entrySet().iterator(); iterator.hasNext(); ) -->Line_18 $$ if (getInvalidators == null) [ CD ]
Line_22 $$ java.util.Collection invalidators = (java.util.Collection) getInvalidators.invoke(entry.getValue())-->Line_23 $$ if (invalidators != null && !invalidators.isEmpty()) [ FD ]
Line_39 $$ if (invalidators == null || invalidators.isEmpty()) -->Line_40 $$ iterator.remove()[ CD ]
Line_32 $$ for (Iterator<DelayedInvalidators> iterator = delayed.iterator(); iterator.hasNext(); ) -->Line_36 $$ iterator.remove()[ FD ]
Line_30 $$ long deadline = System.currentTimeMillis() + 30000-->Line_31 $$ while (System.currentTimeMillis() < deadline) [ FD ]
