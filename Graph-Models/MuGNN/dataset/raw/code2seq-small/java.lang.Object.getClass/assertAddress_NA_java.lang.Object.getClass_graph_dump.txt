Line_2 $$ private void assertAddress(PersonBase person, String address, String localAddress) -->Line_4 $$ assertEquals(1, results.size())[ CD ]
Line_7 $$ results = find(person.getClass(), person.id, "localAddresses")-->Line_8 $$ assertEquals(1, results.size())[ FD ]
Line_2 $$ private void assertAddress(PersonBase person, String address, String localAddress) -->Line_6 $$ assertEquals(address, ((Address) results.get(0)).name)[ CD ]
Line_2 $$ private void assertAddress(PersonBase person, String address, String localAddress) -->Line_6 $$ assertEquals(address, ((Address) results.get(0)).name)[ FD ]
Line_3 $$ List<Object> results = find(person.getClass(), person.id, "addresses")-->Line_5 $$ assertEquals(person.addresses.get(0).id, ((Address) results.get(0)).id)[ FD ]
Line_3 $$ List<Object> results = find(person.getClass(), person.id, "addresses")-->Line_7 $$ results = find(person.getClass(), person.id, "localAddresses")[ FD ]
Line_3 $$ List<Object> results = find(person.getClass(), person.id, "addresses")-->Line_10 $$ assertEquals(localAddress, ((Address) results.get(0)).name)[ FD ]
Line_7 $$ results = find(person.getClass(), person.id, "localAddresses")-->Line_9 $$ assertEquals(person.getLocalAddresses().get(0).id, ((Address) results.get(0)).id)[ FD ]
Line_2 $$ private void assertAddress(PersonBase person, String address, String localAddress) -->Line_8 $$ assertEquals(1, results.size())[ CD ]
Line_7 $$ results = find(person.getClass(), person.id, "localAddresses")-->Line_10 $$ assertEquals(localAddress, ((Address) results.get(0)).name)[ FD ]
Line_2 $$ private void assertAddress(PersonBase person, String address, String localAddress) -->Line_10 $$ assertEquals(localAddress, ((Address) results.get(0)).name)[ CD ]
Line_2 $$ private void assertAddress(PersonBase person, String address, String localAddress) -->Line_9 $$ assertEquals(person.getLocalAddresses().get(0).id, ((Address) results.get(0)).id)[ CD ]
Line_2 $$ private void assertAddress(PersonBase person, String address, String localAddress) -->Line_11 $$ getOrCreateEntityManager().close()[ CD ]
Line_3 $$ List<Object> results = find(person.getClass(), person.id, "addresses")-->Line_9 $$ assertEquals(person.getLocalAddresses().get(0).id, ((Address) results.get(0)).id)[ FD ]
Line_3 $$ List<Object> results = find(person.getClass(), person.id, "addresses")-->Line_4 $$ assertEquals(1, results.size())[ FD ]
Line_2 $$ private void assertAddress(PersonBase person, String address, String localAddress) -->Line_5 $$ assertEquals(person.addresses.get(0).id, ((Address) results.get(0)).id)[ CD ]
Line_3 $$ List<Object> results = find(person.getClass(), person.id, "addresses")-->Line_6 $$ assertEquals(address, ((Address) results.get(0)).name)[ FD ]
Line_2 $$ private void assertAddress(PersonBase person, String address, String localAddress) -->Line_3 $$ List<Object> results = find(person.getClass(), person.id, "addresses")[ CD ]
Line_2 $$ private void assertAddress(PersonBase person, String address, String localAddress) -->Line_7 $$ results = find(person.getClass(), person.id, "localAddresses")[ CD ]
Line_2 $$ private void assertAddress(PersonBase person, String address, String localAddress) -->Line_7 $$ results = find(person.getClass(), person.id, "localAddresses")[ FD ]
Line_2 $$ private void assertAddress(PersonBase person, String address, String localAddress) -->Line_3 $$ List<Object> results = find(person.getClass(), person.id, "addresses")[ FD ]
Line_3 $$ List<Object> results = find(person.getClass(), person.id, "addresses")-->Line_8 $$ assertEquals(1, results.size())[ FD ]
Line_2 $$ private void assertAddress(PersonBase person, String address, String localAddress) -->Line_10 $$ assertEquals(localAddress, ((Address) results.get(0)).name)[ FD ]
Line_2 $$ private void assertAddress(PersonBase person, String address, String localAddress) -->Line_9 $$ assertEquals(person.getLocalAddresses().get(0).id, ((Address) results.get(0)).id)[ FD ]
