Line_2 $$ protected void releaseResourcesAfterRead(Connection con, Object lob) -->Line_11 $$ freeTemporary.invoke(lob)[ FD ]
Line_5 $$ Boolean temporary = Boolean.FALSE-->Line_8 $$ temporary = (Boolean) isTemporary.invoke(lob)[ FD ]
Line_16 $$ Method close = lob.getClass().getMethod("close")-->Line_17 $$ close.invoke(lob)[ FD ]
Line_2 $$ protected void releaseResourcesAfterRead(Connection con, Object lob) -->Line_14 $$ Boolean open = (Boolean) isOpen.invoke(lob)[ FD ]
Line_15 $$ if (open) -->Line_16 $$ Method close = lob.getClass().getMethod("close")[ CD ]
Line_2 $$ protected void releaseResourcesAfterRead(Connection con, Object lob) -->Line_8 $$ temporary = (Boolean) isTemporary.invoke(lob)[ FD ]
Line_9 $$ if (temporary) -->Line_11 $$ freeTemporary.invoke(lob)[ CD ]
Line_2 $$ protected void releaseResourcesAfterRead(Connection con, Object lob) -->Line_13 $$ Method isOpen = lob.getClass().getMethod("isOpen")[ FD ]
Line_21 $$ if (temporary) -->Line_24 $$ logger.error("Could not close Oracle LOB", ex.getTargetException())[ CD ]
Line_2 $$ protected void releaseResourcesAfterRead(Connection con, Object lob) -->Line_10 $$ Method freeTemporary = lob.getClass().getMethod("freeTemporary")[ FD ]
Line_15 $$ if (open) -->Line_17 $$ close.invoke(lob)[ CD ]
Line_9 $$ if (temporary) -->Line_10 $$ Method freeTemporary = lob.getClass().getMethod("freeTemporary")[ CD ]
Line_2 $$ protected void releaseResourcesAfterRead(Connection con, Object lob) -->Line_7 $$ Method isTemporary = lob.getClass().getMethod("isTemporary")[ FD ]
Line_2 $$ protected void releaseResourcesAfterRead(Connection con, Object lob) -->Line_16 $$ Method close = lob.getClass().getMethod("close")[ FD ]
Line_3 $$ if (this.releaseResourcesAfterRead) -->Line_5 $$ Boolean temporary = Boolean.FALSE[ CD ]
Line_2 $$ protected void releaseResourcesAfterRead(Connection con, Object lob) -->Line_3 $$ if (this.releaseResourcesAfterRead) [ CD ]
Line_2 $$ protected void releaseResourcesAfterRead(Connection con, Object lob) -->Line_4 $$ initOracleDriverClasses(con)[ FD ]
Line_9 $$ if (temporary) -->Line_14 $$ Boolean open = (Boolean) isOpen.invoke(lob)[ CD ]
Line_7 $$ Method isTemporary = lob.getClass().getMethod("isTemporary")-->Line_8 $$ temporary = (Boolean) isTemporary.invoke(lob)[ FD ]
Line_3 $$ if (this.releaseResourcesAfterRead) -->Line_4 $$ initOracleDriverClasses(con)[ CD ]
Line_9 $$ if (temporary) -->Line_15 $$ if (open) [ CD ]
Line_21 $$ if (temporary) -->Line_22 $$ logger.error("Could not free Oracle LOB", ex.getTargetException())[ CD ]
Line_10 $$ Method freeTemporary = lob.getClass().getMethod("freeTemporary")-->Line_11 $$ freeTemporary.invoke(lob)[ FD ]
Line_13 $$ Method isOpen = lob.getClass().getMethod("isOpen")-->Line_14 $$ Boolean open = (Boolean) isOpen.invoke(lob)[ FD ]
Line_9 $$ if (temporary) -->Line_13 $$ Method isOpen = lob.getClass().getMethod("isOpen")[ CD ]
Line_2 $$ protected void releaseResourcesAfterRead(Connection con, Object lob) -->Line_17 $$ close.invoke(lob)[ FD ]
