Line_2 $$ private static int uncompressedSize(Object object) throws IOException -->Line_14 $$ if (object instanceof LongWritable) [ CD ]
Line_5 $$ int size = 0-->Line_37 $$ size += uncompressedSize(entry.getValue())[ FD ]
Line_3 $$ if (object instanceof OrcStruct) -->Line_5 $$ int size = 0[ CD ]
Line_17 $$ if (object instanceof DoubleWritable) -->Line_18 $$ return SIZE_OF_DOUBLE[ CD ]
Line_7 $$ size += uncompressedSize(getFieldValue(struct, i))-->Line_29 $$ size += uncompressedSize(element)[ FD ]
Line_2 $$ private static int uncompressedSize(Object object) throws IOException -->Line_3 $$ if (object instanceof OrcStruct) [ FD ]
Line_2 $$ private static int uncompressedSize(Object object) throws IOException -->Line_33 $$ if (object instanceof Map<?, ?>) [ FD ]
Line_2 $$ private static int uncompressedSize(Object object) throws IOException -->Line_17 $$ if (object instanceof DoubleWritable) [ CD ]
Line_11 $$ if ((object == null) || (object instanceof BooleanWritable)) -->Line_12 $$ return SIZE_OF_BYTE[ CD ]
Line_2 $$ private static int uncompressedSize(Object object) throws IOException -->Line_20 $$ if (object instanceof Text) [ FD ]
Line_2 $$ private static int uncompressedSize(Object object) throws IOException -->Line_20 $$ if (object instanceof Text) [ CD ]
Line_28 $$ for (Object element : (Iterable<?>) object) -->Line_29 $$ size += uncompressedSize(element)[ FD ]
Line_2 $$ private static int uncompressedSize(Object object) throws IOException -->Line_11 $$ if ((object == null) || (object instanceof BooleanWritable)) [ CD ]
Line_35 $$ for (Map.Entry<?, ?> entry : ((Map<?, ?>) object).entrySet()) -->Line_36 $$ size += uncompressedSize(entry.getKey())[ FD ]
Line_20 $$ if (object instanceof Text) -->Line_21 $$ return ((Text) object).getLength()[ CD ]
Line_26 $$ if (object instanceof List<?>) -->Line_31 $$ return size[ CD ]
Line_4 $$ OrcStruct struct = (OrcStruct) object-->Line_6 $$ for (int i = 0; i < struct.getNumFields(); i++) [ FD ]
Line_2 $$ private static int uncompressedSize(Object object) throws IOException -->Line_26 $$ if (object instanceof List<?>) [ FD ]
Line_36 $$ size += uncompressedSize(entry.getKey())-->Line_37 $$ size += uncompressedSize(entry.getValue())[ FD ]
Line_2 $$ private static int uncompressedSize(Object object) throws IOException -->Line_23 $$ if (object instanceof BytesWritable) [ CD ]
Line_2 $$ private static int uncompressedSize(Object object) throws IOException -->Line_3 $$ if (object instanceof OrcStruct) [ CD ]
Line_5 $$ int size = 0-->Line_29 $$ size += uncompressedSize(element)[ FD ]
Line_29 $$ size += uncompressedSize(element)-->Line_37 $$ size += uncompressedSize(entry.getValue())[ FD ]
Line_29 $$ size += uncompressedSize(element)-->Line_36 $$ size += uncompressedSize(entry.getKey())[ FD ]
Line_2 $$ private static int uncompressedSize(Object object) throws IOException -->Line_41 $$ throw new IOException("Unhandled ORC object: " + object.getClass().getName())[ FD ]
Line_5 $$ int size = 0-->Line_36 $$ size += uncompressedSize(entry.getKey())[ FD ]
Line_23 $$ if (object instanceof BytesWritable) -->Line_24 $$ return ((BytesWritable) object).getLength()[ CD ]
Line_3 $$ if (object instanceof OrcStruct) -->Line_9 $$ return size[ CD ]
Line_2 $$ private static int uncompressedSize(Object object) throws IOException -->Line_23 $$ if (object instanceof BytesWritable) [ FD ]
Line_6 $$ for (int i = 0; i < struct.getNumFields(); i++) -->Line_7 $$ size += uncompressedSize(getFieldValue(struct, i))[ CD ]
Line_4 $$ OrcStruct struct = (OrcStruct) object-->Line_7 $$ size += uncompressedSize(getFieldValue(struct, i))[ FD ]
Line_2 $$ private static int uncompressedSize(Object object) throws IOException -->Line_26 $$ if (object instanceof List<?>) [ CD ]
Line_2 $$ private static int uncompressedSize(Object object) throws IOException -->Line_33 $$ if (object instanceof Map<?, ?>) [ CD ]
Line_7 $$ size += uncompressedSize(getFieldValue(struct, i))-->Line_37 $$ size += uncompressedSize(entry.getValue())[ FD ]
Line_2 $$ private static int uncompressedSize(Object object) throws IOException -->Line_14 $$ if (object instanceof LongWritable) [ FD ]
Line_3 $$ if (object instanceof OrcStruct) -->Line_6 $$ for (int i = 0; i < struct.getNumFields(); i++) [ CD ]
Line_35 $$ for (Map.Entry<?, ?> entry : ((Map<?, ?>) object).entrySet()) -->Line_37 $$ size += uncompressedSize(entry.getValue())[ FD ]
Line_6 $$ for (int i = 0; i < struct.getNumFields(); i++) -->Line_7 $$ size += uncompressedSize(getFieldValue(struct, i))[ FD ]
Line_14 $$ if (object instanceof LongWritable) -->Line_15 $$ return SIZE_OF_LONG[ CD ]
Line_33 $$ if (object instanceof Map<?, ?>) -->Line_39 $$ return size[ CD ]
Line_2 $$ private static int uncompressedSize(Object object) throws IOException -->Line_17 $$ if (object instanceof DoubleWritable) [ FD ]
Line_5 $$ int size = 0-->Line_7 $$ size += uncompressedSize(getFieldValue(struct, i))[ FD ]
Line_7 $$ size += uncompressedSize(getFieldValue(struct, i))-->Line_36 $$ size += uncompressedSize(entry.getKey())[ FD ]
Line_3 $$ if (object instanceof OrcStruct) -->Line_4 $$ OrcStruct struct = (OrcStruct) object[ CD ]
