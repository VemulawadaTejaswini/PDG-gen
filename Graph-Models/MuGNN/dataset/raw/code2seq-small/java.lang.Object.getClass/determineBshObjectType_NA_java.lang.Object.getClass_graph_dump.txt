Line_7 $$ if (result instanceof Class) -->Line_9 $$ if (result != null) [ CD ]
Line_2 $$ static Class<?> determineBshObjectType(String scriptSource, ClassLoader classLoader) throws EvalError -->Line_3 $$ Assert.hasText(scriptSource, "Script source must not be empty")[ FD ]
Line_6 $$ Object result = interpreter.eval(scriptSource)-->Line_9 $$ if (result != null) [ FD ]
Line_2 $$ static Class<?> determineBshObjectType(String scriptSource, ClassLoader classLoader) throws EvalError -->Line_5 $$ interpreter.setClassLoader(classLoader)[ CD ]
Line_2 $$ static Class<?> determineBshObjectType(String scriptSource, ClassLoader classLoader) throws EvalError -->Line_6 $$ Object result = interpreter.eval(scriptSource)[ FD ]
Line_7 $$ if (result instanceof Class) -->Line_8 $$ return (Class<?>) result[ CD ]
Line_9 $$ if (result != null) -->Line_10 $$ return result.getClass()[ CD ]
Line_2 $$ static Class<?> determineBshObjectType(String scriptSource, ClassLoader classLoader) throws EvalError -->Line_7 $$ if (result instanceof Class) [ CD ]
Line_2 $$ static Class<?> determineBshObjectType(String scriptSource, ClassLoader classLoader) throws EvalError -->Line_6 $$ Object result = interpreter.eval(scriptSource)[ CD ]
Line_6 $$ Object result = interpreter.eval(scriptSource)-->Line_10 $$ return result.getClass()[ FD ]
Line_6 $$ Object result = interpreter.eval(scriptSource)-->Line_7 $$ if (result instanceof Class) [ FD ]
Line_9 $$ if (result != null) -->Line_12 $$ return null[ CD ]
Line_2 $$ static Class<?> determineBshObjectType(String scriptSource, ClassLoader classLoader) throws EvalError -->Line_5 $$ interpreter.setClassLoader(classLoader)[ FD ]
Line_4 $$ Interpreter interpreter = new Interpreter()-->Line_6 $$ Object result = interpreter.eval(scriptSource)[ FD ]
Line_4 $$ Interpreter interpreter = new Interpreter()-->Line_5 $$ interpreter.setClassLoader(classLoader)[ FD ]
Line_2 $$ static Class<?> determineBshObjectType(String scriptSource, ClassLoader classLoader) throws EvalError -->Line_3 $$ Assert.hasText(scriptSource, "Script source must not be empty")[ CD ]
Line_2 $$ static Class<?> determineBshObjectType(String scriptSource, ClassLoader classLoader) throws EvalError -->Line_4 $$ Interpreter interpreter = new Interpreter()[ CD ]
