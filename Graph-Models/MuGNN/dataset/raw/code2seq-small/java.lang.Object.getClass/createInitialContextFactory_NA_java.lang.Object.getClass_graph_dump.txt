Line_7 $$ if (icf instanceof Class) -->Line_8 $$ icfClass = (Class<?>) icf[ CD ]
Line_4 $$ Object icf = environment.get(Context.INITIAL_CONTEXT_FACTORY)-->Line_12 $$ throw new IllegalArgumentException("Invalid value type for environment key [" + Context.INITIAL_CONTEXT_FACTORY + "]: " + icf.getClass().getName())[ FD ]
Line_8 $$ icfClass = (Class<?>) icf-->Line_18 $$ return (InitialContextFactory) icfClass.newInstance()[ FD ]
Line_10 $$ icfClass = ClassUtils.resolveClassName((String) icf, getClass().getClassLoader())-->Line_14 $$ if (!InitialContextFactory.class.isAssignableFrom(icfClass)) [ FD ]
Line_3 $$ if (activated == null && environment != null) -->Line_5 $$ if (icf != null) [ CD ]
Line_2 $$ public InitialContextFactory createInitialContextFactory(Hashtable<?, ?> environment) -->Line_4 $$ Object icf = environment.get(Context.INITIAL_CONTEXT_FACTORY)[ FD ]
Line_4 $$ Object icf = environment.get(Context.INITIAL_CONTEXT_FACTORY)-->Line_7 $$ if (icf instanceof Class) [ FD ]
Line_2 $$ public InitialContextFactory createInitialContextFactory(Hashtable<?, ?> environment) -->Line_3 $$ if (activated == null && environment != null) [ CD ]
Line_24 $$ return new InitialContextFactory() -->Line_26 $$ return new SimpleNamingContext("", boundObjects, (Hashtable<String, Object>) environment)[ CD ]
Line_5 $$ if (icf != null) -->Line_6 $$ Class<?> icfClass[ CD ]
Line_5 $$ if (icf != null) -->Line_7 $$ if (icf instanceof Class) [ CD ]
Line_8 $$ icfClass = (Class<?>) icf-->Line_10 $$ icfClass = ClassUtils.resolveClassName((String) icf, getClass().getClassLoader())[ FD ]
Line_9 $$ if (icf instanceof String) -->Line_10 $$ icfClass = ClassUtils.resolveClassName((String) icf, getClass().getClassLoader())[ CD ]
Line_5 $$ if (icf != null) -->Line_14 $$ if (!InitialContextFactory.class.isAssignableFrom(icfClass)) [ CD ]
Line_6 $$ Class<?> icfClass-->Line_18 $$ return (InitialContextFactory) icfClass.newInstance()[ FD ]
Line_6 $$ Class<?> icfClass-->Line_8 $$ icfClass = (Class<?>) icf[ FD ]
Line_2 $$ public InitialContextFactory createInitialContextFactory(Hashtable<?, ?> environment) -->Line_24 $$ return new InitialContextFactory() [ CD ]
Line_3 $$ if (activated == null && environment != null) -->Line_4 $$ Object icf = environment.get(Context.INITIAL_CONTEXT_FACTORY)[ CD ]
Line_6 $$ Class<?> icfClass-->Line_10 $$ icfClass = ClassUtils.resolveClassName((String) icf, getClass().getClassLoader())[ FD ]
Line_8 $$ icfClass = (Class<?>) icf-->Line_14 $$ if (!InitialContextFactory.class.isAssignableFrom(icfClass)) [ FD ]
Line_10 $$ icfClass = ClassUtils.resolveClassName((String) icf, getClass().getClassLoader())-->Line_18 $$ return (InitialContextFactory) icfClass.newInstance()[ FD ]
Line_4 $$ Object icf = environment.get(Context.INITIAL_CONTEXT_FACTORY)-->Line_5 $$ if (icf != null) [ FD ]
Line_4 $$ Object icf = environment.get(Context.INITIAL_CONTEXT_FACTORY)-->Line_9 $$ if (icf instanceof String) [ FD ]
Line_7 $$ if (icf instanceof Class) -->Line_9 $$ if (icf instanceof String) [ CD ]
Line_6 $$ Class<?> icfClass-->Line_14 $$ if (!InitialContextFactory.class.isAssignableFrom(icfClass)) [ FD ]
