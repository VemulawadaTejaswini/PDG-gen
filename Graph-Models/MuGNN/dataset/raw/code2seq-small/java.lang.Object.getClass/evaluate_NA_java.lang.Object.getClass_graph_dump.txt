Line_2 $$ private Object evaluate(String key, Object object, Stash stash) -->Line_7 $$ return ((Map<String, Object>) object).get(key)[ FD ]
Line_2 $$ private Object evaluate(String key, Object object, Stash stash) -->Line_19 $$ throw new IllegalArgumentException("no object found for [" + key + "] within object of class [" + object.getClass() + "]")[ FD ]
Line_2 $$ private Object evaluate(String key, Object object, Stash stash) -->Line_9 $$ if (object instanceof List) [ CD ]
Line_2 $$ private Object evaluate(String key, Object object, Stash stash) -->Line_6 $$ if (object instanceof Map) [ FD ]
Line_10 $$ List<Object> list = (List<Object>) object-->Line_12 $$ return list.get(Integer.valueOf(key))[ FD ]
Line_2 $$ private Object evaluate(String key, Object object, Stash stash) -->Line_3 $$ if (stash.isStashedValue(key)) [ CD ]
Line_10 $$ List<Object> list = (List<Object>) object-->Line_16 $$ throw new IllegalArgumentException("element was a list with " + list.size() + " elements, but [" + key + "] was out of bounds", e)[ FD ]
Line_4 $$ key = stash.unstashValue(key).toString()-->Line_12 $$ return list.get(Integer.valueOf(key))[ FD ]
Line_3 $$ if (stash.isStashedValue(key)) -->Line_4 $$ key = stash.unstashValue(key).toString()[ CD ]
Line_2 $$ private Object evaluate(String key, Object object, Stash stash) -->Line_3 $$ if (stash.isStashedValue(key)) [ FD ]
Line_2 $$ private Object evaluate(String key, Object object, Stash stash) -->Line_4 $$ key = stash.unstashValue(key).toString()[ FD ]
Line_2 $$ private Object evaluate(String key, Object object, Stash stash) -->Line_6 $$ if (object instanceof Map) [ CD ]
Line_4 $$ key = stash.unstashValue(key).toString()-->Line_7 $$ return ((Map<String, Object>) object).get(key)[ FD ]
Line_2 $$ private Object evaluate(String key, Object object, Stash stash) -->Line_9 $$ if (object instanceof List) [ FD ]
Line_9 $$ if (object instanceof List) -->Line_10 $$ List<Object> list = (List<Object>) object[ CD ]
Line_2 $$ private Object evaluate(String key, Object object, Stash stash) -->Line_12 $$ return list.get(Integer.valueOf(key))[ FD ]
Line_6 $$ if (object instanceof Map) -->Line_7 $$ return ((Map<String, Object>) object).get(key)[ CD ]
