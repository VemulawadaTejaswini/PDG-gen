Line_10 $$ readType = LogType.READ-->Line_12 $$ familyNameLog.setType(readType).setTimes(before, after)[ FD ]
Line_5 $$ if (failure || rolledBack) -->Line_6 $$ writeType = LogType.WRITE_FAILURE[ CD ]
Line_16 $$ if (familyNameLog.getValue() != null) -->Line_20 $$ if (familyMembersUpdate.isSet()) [ CD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_13 $$ familyMembersLog.setType(readType).setTimes(before, after)[ CD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_3 $$ log.tracef("Finished %s at %d", getClass().getSimpleName(), after)[ CD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_5 $$ if (failure || rolledBack) [ FD ]
Line_4 $$ LogType readType, writeType-->Line_6 $$ writeType = LogType.WRITE_FAILURE[ FD ]
Line_16 $$ if (familyNameLog.getValue() != null) -->Line_17 $$ if (familyNameUpdate.isSet()) [ CD ]
Line_4 $$ LogType readType, writeType-->Line_7 $$ readType = LogType.READ_FAILURE[ FD ]
Line_5 $$ if (failure || rolledBack) -->Line_7 $$ readType = LogType.READ_FAILURE[ CD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_17 $$ if (familyNameUpdate.isSet()) [ FD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_20 $$ if (familyMembersUpdate.isSet()) [ FD ]
Line_20 $$ if (familyMembersUpdate.isSet()) -->Line_21 $$ getRecordList(familyMembers, id).add(new Log(before, after, familyMembersUpdate.get(), writeType, familyMembersLog))[ CD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_12 $$ familyNameLog.setType(readType).setTimes(before, after)[ CD ]
Line_6 $$ writeType = LogType.WRITE_FAILURE-->Line_9 $$ writeType = LogType.WRITE[ FD ]
Line_17 $$ if (familyNameUpdate.isSet()) -->Line_18 $$ getRecordList(familyNames, id).add(new Log(before, after, familyNameUpdate.get(), writeType, familyNameLog))[ CD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_3 $$ log.tracef("Finished %s at %d", getClass().getSimpleName(), after)[ FD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_13 $$ familyMembersLog.setType(readType).setTimes(before, after)[ FD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_18 $$ getRecordList(familyNames, id).add(new Log(before, after, familyNameUpdate.get(), writeType, familyNameLog))[ FD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_4 $$ LogType readType, writeType[ CD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_12 $$ familyNameLog.setType(readType).setTimes(before, after)[ FD ]
Line_4 $$ LogType readType, writeType-->Line_12 $$ familyNameLog.setType(readType).setTimes(before, after)[ FD ]
Line_4 $$ LogType readType, writeType-->Line_13 $$ familyMembersLog.setType(readType).setTimes(before, after)[ FD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_21 $$ getRecordList(familyMembers, id).add(new Log(before, after, familyMembersUpdate.get(), writeType, familyMembersLog))[ FD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_14 $$ getRecordList(familyNames, id).add(familyNameLog)[ CD ]
Line_10 $$ readType = LogType.READ-->Line_13 $$ familyMembersLog.setType(readType).setTimes(before, after)[ FD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_15 $$ getRecordList(familyMembers, id).add(familyMembersLog)[ FD ]
Line_4 $$ LogType readType, writeType-->Line_9 $$ writeType = LogType.WRITE[ FD ]
Line_7 $$ readType = LogType.READ_FAILURE-->Line_10 $$ readType = LogType.READ[ FD ]
Line_5 $$ if (failure || rolledBack) -->Line_9 $$ writeType = LogType.WRITE[ CD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_16 $$ if (familyNameLog.getValue() != null) [ CD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_16 $$ if (familyNameLog.getValue() != null) [ FD ]
Line_5 $$ if (failure || rolledBack) -->Line_10 $$ readType = LogType.READ[ CD ]
Line_4 $$ LogType readType, writeType-->Line_10 $$ readType = LogType.READ[ FD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_15 $$ getRecordList(familyMembers, id).add(familyMembersLog)[ CD ]
Line_7 $$ readType = LogType.READ_FAILURE-->Line_12 $$ familyNameLog.setType(readType).setTimes(before, after)[ FD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_14 $$ getRecordList(familyNames, id).add(familyNameLog)[ FD ]
Line_2 $$ private void recordReadWrite(int id, int before, int after, boolean failure, Ref<String> familyNameUpdate, Ref<Set<String>> familyMembersUpdate, Log<String> familyNameLog, Log<Set<String>> familyMembersLog) -->Line_5 $$ if (failure || rolledBack) [ CD ]
Line_7 $$ readType = LogType.READ_FAILURE-->Line_13 $$ familyMembersLog.setType(readType).setTimes(before, after)[ FD ]
