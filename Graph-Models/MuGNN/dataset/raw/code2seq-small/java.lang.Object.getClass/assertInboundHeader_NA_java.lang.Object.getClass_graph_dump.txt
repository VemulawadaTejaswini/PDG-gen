Line_5 $$ if (value == null) -->Line_10 $$ assertEquals(value, headerValue)[ CD ]
Line_4 $$ Object headerValue = headers.get(headerId)-->Line_6 $$ assertNull(headerValue)[ FD ]
Line_2 $$ private void assertInboundHeader(javax.jms.Message jmsMessage, String headerId, Object value) -->Line_3 $$ Map<String, Object> headers = mapper.toHeaders(jmsMessage)[ CD ]
Line_2 $$ private void assertInboundHeader(javax.jms.Message jmsMessage, String headerId, Object value) -->Line_5 $$ if (value == null) [ FD ]
Line_4 $$ Object headerValue = headers.get(headerId)-->Line_9 $$ assertEquals(value.getClass(), headerValue.getClass())[ FD ]
Line_4 $$ Object headerValue = headers.get(headerId)-->Line_8 $$ assertNotNull(headerValue)[ FD ]
Line_5 $$ if (value == null) -->Line_6 $$ assertNull(headerValue)[ CD ]
Line_2 $$ private void assertInboundHeader(javax.jms.Message jmsMessage, String headerId, Object value) -->Line_3 $$ Map<String, Object> headers = mapper.toHeaders(jmsMessage)[ FD ]
Line_5 $$ if (value == null) -->Line_8 $$ assertNotNull(headerValue)[ CD ]
Line_3 $$ Map<String, Object> headers = mapper.toHeaders(jmsMessage)-->Line_4 $$ Object headerValue = headers.get(headerId)[ FD ]
Line_2 $$ private void assertInboundHeader(javax.jms.Message jmsMessage, String headerId, Object value) -->Line_9 $$ assertEquals(value.getClass(), headerValue.getClass())[ FD ]
Line_2 $$ private void assertInboundHeader(javax.jms.Message jmsMessage, String headerId, Object value) -->Line_4 $$ Object headerValue = headers.get(headerId)[ CD ]
Line_2 $$ private void assertInboundHeader(javax.jms.Message jmsMessage, String headerId, Object value) -->Line_5 $$ if (value == null) [ CD ]
Line_2 $$ private void assertInboundHeader(javax.jms.Message jmsMessage, String headerId, Object value) -->Line_10 $$ assertEquals(value, headerValue)[ FD ]
Line_2 $$ private void assertInboundHeader(javax.jms.Message jmsMessage, String headerId, Object value) -->Line_4 $$ Object headerValue = headers.get(headerId)[ FD ]
Line_4 $$ Object headerValue = headers.get(headerId)-->Line_10 $$ assertEquals(value, headerValue)[ FD ]
Line_5 $$ if (value == null) -->Line_9 $$ assertEquals(value.getClass(), headerValue.getClass())[ CD ]
