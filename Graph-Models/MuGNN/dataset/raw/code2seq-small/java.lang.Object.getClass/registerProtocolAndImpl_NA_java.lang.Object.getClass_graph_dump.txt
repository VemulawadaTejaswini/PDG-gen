Line_2 $$ void registerProtocolAndImpl(RpcKind rpcKind, Class<?> protocolClass, Object protocolImpl) -->Line_6 $$ version = RPC.getProtocolVersion(protocolClass)[ FD ]
Line_4 $$ long version-->Line_6 $$ version = RPC.getProtocolVersion(protocolClass)[ FD ]
Line_2 $$ void registerProtocolAndImpl(RpcKind rpcKind, Class<?> protocolClass, Object protocolImpl) -->Line_4 $$ long version[ CD ]
Line_2 $$ void registerProtocolAndImpl(RpcKind rpcKind, Class<?> protocolClass, Object protocolImpl) -->Line_12 $$ LOG.debug("RpcKind = " + rpcKind + " Protocol Name = " + protocolName + " version=" + version + " ProtocolImpl=" + protocolImpl.getClass().getName() + " protocolClass=" + protocolClass.getName())[ FD ]
Line_2 $$ void registerProtocolAndImpl(RpcKind rpcKind, Class<?> protocolClass, Object protocolImpl) -->Line_12 $$ LOG.debug("RpcKind = " + rpcKind + " Protocol Name = " + protocolName + " version=" + version + " ProtocolImpl=" + protocolImpl.getClass().getName() + " protocolClass=" + protocolClass.getName())[ CD ]
Line_2 $$ void registerProtocolAndImpl(RpcKind rpcKind, Class<?> protocolClass, Object protocolImpl) -->Line_3 $$ String protocolName = RPC.getProtocolName(protocolClass)[ FD ]
Line_2 $$ void registerProtocolAndImpl(RpcKind rpcKind, Class<?> protocolClass, Object protocolImpl) -->Line_11 $$ getProtocolImplMap(rpcKind).put(new ProtoNameVer(protocolName, version), new ProtoClassProtoImpl(protocolClass, protocolImpl))[ CD ]
Line_2 $$ void registerProtocolAndImpl(RpcKind rpcKind, Class<?> protocolClass, Object protocolImpl) -->Line_3 $$ String protocolName = RPC.getProtocolName(protocolClass)[ CD ]
Line_2 $$ void registerProtocolAndImpl(RpcKind rpcKind, Class<?> protocolClass, Object protocolImpl) -->Line_11 $$ getProtocolImplMap(rpcKind).put(new ProtoNameVer(protocolName, version), new ProtoClassProtoImpl(protocolClass, protocolImpl))[ FD ]
