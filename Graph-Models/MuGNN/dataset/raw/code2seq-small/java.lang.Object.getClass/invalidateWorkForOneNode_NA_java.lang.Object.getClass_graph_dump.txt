Line_3 $$ final List<Block> toInvalidate-->Line_12 $$ if (toInvalidate == null) [ FD ]
Line_6 $$ if (namesystem.isInSafeMode()) -->Line_8 $$ return 0[ CD ]
Line_3 $$ final List<Block> toInvalidate-->Line_11 $$ toInvalidate = invalidateBlocks.invalidateWork(datanodeManager.getDatanode(dn))[ FD ]
Line_2 $$ private int invalidateWorkForOneNode(DatanodeInfo dn) -->Line_4 $$ namesystem.writeLock()[ CD ]
Line_11 $$ toInvalidate = invalidateBlocks.invalidateWork(datanodeManager.getDatanode(dn))-->Line_12 $$ if (toInvalidate == null) [ FD ]
Line_11 $$ toInvalidate = invalidateBlocks.invalidateWork(datanodeManager.getDatanode(dn))-->Line_24 $$ return toInvalidate.size()[ FD ]
Line_2 $$ private int invalidateWorkForOneNode(DatanodeInfo dn) -->Line_21 $$ if (blockLog.isInfoEnabled()) [ CD ]
Line_2 $$ private int invalidateWorkForOneNode(DatanodeInfo dn) -->Line_24 $$ return toInvalidate.size()[ CD ]
Line_2 $$ private int invalidateWorkForOneNode(DatanodeInfo dn) -->Line_3 $$ final List<Block> toInvalidate[ CD ]
Line_6 $$ if (namesystem.isInSafeMode()) -->Line_7 $$ LOG.debug("In safemode, not computing replication work")[ CD ]
Line_12 $$ if (toInvalidate == null) -->Line_13 $$ return 0[ CD ]
Line_3 $$ final List<Block> toInvalidate-->Line_24 $$ return toInvalidate.size()[ FD ]
Line_2 $$ private int invalidateWorkForOneNode(DatanodeInfo dn) -->Line_11 $$ toInvalidate = invalidateBlocks.invalidateWork(datanodeManager.getDatanode(dn))[ FD ]
Line_21 $$ if (blockLog.isInfoEnabled()) -->Line_22 $$ blockLog.info("BLOCK* " + getClass().getSimpleName() + ": ask " + dn + " to delete " + toInvalidate)[ CD ]
