Line_2 $$ public void convertStringToCollectionWithElementConversion() throws Exception -->Line_4 $$ assertEquals(3, result.size())[ CD ]
Line_3 $$ List result = (List) conversionService.convert("1,2,3", TypeDescriptor.valueOf(String.class), new TypeDescriptor(getClass().getField("genericList")))-->Line_5 $$ assertEquals(1, result.get(0))[ FD ]
Line_2 $$ public void convertStringToCollectionWithElementConversion() throws Exception -->Line_6 $$ assertEquals(2, result.get(1))[ CD ]
Line_3 $$ List result = (List) conversionService.convert("1,2,3", TypeDescriptor.valueOf(String.class), new TypeDescriptor(getClass().getField("genericList")))-->Line_6 $$ assertEquals(2, result.get(1))[ FD ]
Line_2 $$ public void convertStringToCollectionWithElementConversion() throws Exception -->Line_3 $$ List result = (List) conversionService.convert("1,2,3", TypeDescriptor.valueOf(String.class), new TypeDescriptor(getClass().getField("genericList")))[ CD ]
Line_2 $$ public void convertStringToCollectionWithElementConversion() throws Exception -->Line_5 $$ assertEquals(1, result.get(0))[ CD ]
Line_3 $$ List result = (List) conversionService.convert("1,2,3", TypeDescriptor.valueOf(String.class), new TypeDescriptor(getClass().getField("genericList")))-->Line_7 $$ assertEquals(3, result.get(2))[ FD ]
Line_2 $$ public void convertStringToCollectionWithElementConversion() throws Exception -->Line_7 $$ assertEquals(3, result.get(2))[ CD ]
Line_3 $$ List result = (List) conversionService.convert("1,2,3", TypeDescriptor.valueOf(String.class), new TypeDescriptor(getClass().getField("genericList")))-->Line_4 $$ assertEquals(3, result.size())[ FD ]
