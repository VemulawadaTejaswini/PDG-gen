Line_21 $$ if (args.length > 1 && args[1] instanceof Class) -->Line_24 $$ Map namedArgs = (Map) args[0][ CD ]
Line_2 $$ private GroovyBeanDefinitionWrapper invokeBeanDefiningMethod(String beanName, Object[] args) -->Line_57 $$ this.currentBeanDefinition = null[ CD ]
Line_43 $$ if (args[0] instanceof Closure) -->Line_44 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName)[ CD ]
Line_17 $$ if (args[0] instanceof RuntimeBeanReference) -->Line_20 $$ if (args[0] instanceof Map) [ CD ]
Line_4 $$ if (args[0] instanceof Class) -->Line_5 $$ Class<?> beanClass = (args[0] instanceof Class ? (Class) args[0] : args[0].getClass())[ CD ]
Line_33 $$ int constructorArgsTest = hasClosureArgument ? 2 : 1-->Line_34 $$ if (args.length > constructorArgsTest) [ FD ]
Line_4 $$ if (args[0] instanceof Class) -->Line_17 $$ if (args[0] instanceof RuntimeBeanReference) [ CD ]
Line_24 $$ Map namedArgs = (Map) args[0]-->Line_25 $$ for (Object o : namedArgs.keySet()) [ FD ]
Line_43 $$ if (args[0] instanceof Closure) -->Line_47 $$ List constructorArgs = resolveConstructorArguments(args, 0, hasClosureArgument ? args.length - 1 : args.length)[ CD ]
Line_6 $$ if (args.length >= 1) -->Line_7 $$ if (hasClosureArgument) [ CD ]
Line_8 $$ if (args.length - 1 != 1) -->Line_11 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName, beanClass)[ CD ]
Line_21 $$ if (args.length > 1 && args[1] instanceof Class) -->Line_34 $$ if (args.length > constructorArgsTest) [ CD ]
Line_2 $$ private GroovyBeanDefinitionWrapper invokeBeanDefiningMethod(String beanName, Object[] args) -->Line_3 $$ boolean hasClosureArgument = args[args.length - 1] instanceof Closure[ CD ]
Line_51 $$ Closure callable = (Closure) args[args.length - 1]-->Line_52 $$ callable.setDelegate(this)[ FD ]
Line_43 $$ if (args[0] instanceof Closure) -->Line_45 $$ this.currentBeanDefinition.getBeanDefinition().setAbstract(true)[ CD ]
Line_17 $$ if (args[0] instanceof RuntimeBeanReference) -->Line_18 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName)[ CD ]
Line_24 $$ Map namedArgs = (Map) args[0]-->Line_27 $$ setProperty(propName, namedArgs.get(propName))[ FD ]
Line_56 $$ GroovyBeanDefinitionWrapper beanDefinition = currentBeanDefinition-->Line_59 $$ getRegistry().registerBeanDefinition(beanName, beanDefinition.getBeanDefinition())[ FD ]
Line_2 $$ private GroovyBeanDefinitionWrapper invokeBeanDefiningMethod(String beanName, Object[] args) -->Line_22 $$ List constructorArgs = resolveConstructorArguments(args, 2, hasClosureArgument ? args.length - 1 : args.length)[ FD ]
Line_50 $$ if (hasClosureArgument) -->Line_54 $$ callable.call(new Object[] [ CD ]
Line_56 $$ GroovyBeanDefinitionWrapper beanDefinition = currentBeanDefinition-->Line_58 $$ beanDefinition.getBeanDefinition().setAttribute(GroovyBeanDefinitionWrapper.class.getName(), beanDefinition)[ FD ]
Line_2 $$ private GroovyBeanDefinitionWrapper invokeBeanDefiningMethod(String beanName, Object[] args) -->Line_58 $$ beanDefinition.getBeanDefinition().setAttribute(GroovyBeanDefinitionWrapper.class.getName(), beanDefinition)[ CD ]
Line_21 $$ if (args.length > 1 && args[1] instanceof Class) -->Line_41 $$ this.currentBeanDefinition.getBeanDefinition().setFactoryMethodName(factoryBeanEntry.getValue().toString())[ CD ]
Line_50 $$ if (hasClosureArgument) -->Line_52 $$ callable.setDelegate(this)[ CD ]
Line_26 $$ String propName = (String) o-->Line_27 $$ setProperty(propName, namedArgs.get(propName))[ FD ]
Line_20 $$ if (args[0] instanceof Map) -->Line_21 $$ if (args.length > 1 && args[1] instanceof Class) [ CD ]
Line_21 $$ if (args.length > 1 && args[1] instanceof Class) -->Line_40 $$ this.currentBeanDefinition.getBeanDefinition().setFactoryBeanName(factoryBeanEntry.getKey().toString())[ CD ]
Line_51 $$ Closure callable = (Closure) args[args.length - 1]-->Line_53 $$ callable.setResolveStrategy(Closure.DELEGATE_FIRST)[ FD ]
Line_2 $$ private GroovyBeanDefinitionWrapper invokeBeanDefiningMethod(String beanName, Object[] args) -->Line_56 $$ GroovyBeanDefinitionWrapper beanDefinition = currentBeanDefinition[ CD ]
Line_7 $$ if (hasClosureArgument) -->Line_8 $$ if (args.length - 1 != 1) [ CD ]
Line_2 $$ private GroovyBeanDefinitionWrapper invokeBeanDefiningMethod(String beanName, Object[] args) -->Line_47 $$ List constructorArgs = resolveConstructorArguments(args, 0, hasClosureArgument ? args.length - 1 : args.length)[ FD ]
Line_4 $$ if (args[0] instanceof Class) -->Line_6 $$ if (args.length >= 1) [ CD ]
Line_2 $$ private GroovyBeanDefinitionWrapper invokeBeanDefiningMethod(String beanName, Object[] args) -->Line_14 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName, beanClass, resolveConstructorArguments(args, 1, args.length))[ FD ]
Line_2 $$ private GroovyBeanDefinitionWrapper invokeBeanDefiningMethod(String beanName, Object[] args) -->Line_59 $$ getRegistry().registerBeanDefinition(beanName, beanDefinition.getBeanDefinition())[ CD ]
Line_21 $$ if (args.length > 1 && args[1] instanceof Class) -->Line_31 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName)[ CD ]
Line_2 $$ private GroovyBeanDefinitionWrapper invokeBeanDefiningMethod(String beanName, Object[] args) -->Line_60 $$ return beanDefinition[ CD ]
Line_17 $$ if (args[0] instanceof RuntimeBeanReference) -->Line_19 $$ this.currentBeanDefinition.getBeanDefinition().setFactoryBeanName(((RuntimeBeanReference) args[0]).getBeanName())[ CD ]
Line_2 $$ private GroovyBeanDefinitionWrapper invokeBeanDefiningMethod(String beanName, Object[] args) -->Line_4 $$ if (args[0] instanceof Class) [ CD ]
Line_35 $$ int endOfConstructArgs = (hasClosureArgument ? args.length - 1 : args.length)-->Line_36 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName, null, resolveConstructorArguments(args, 1, endOfConstructArgs))[ FD ]
Line_8 $$ if (args.length - 1 != 1) -->Line_9 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName, beanClass, resolveConstructorArguments(args, 1, args.length - 1))[ CD ]
Line_32 $$ Map.Entry factoryBeanEntry = (Map.Entry) ((Map) args[0]).entrySet().iterator().next()-->Line_40 $$ this.currentBeanDefinition.getBeanDefinition().setFactoryBeanName(factoryBeanEntry.getKey().toString())[ FD ]
Line_51 $$ Closure callable = (Closure) args[args.length - 1]-->Line_54 $$ callable.call(new Object[] [ FD ]
Line_2 $$ private GroovyBeanDefinitionWrapper invokeBeanDefiningMethod(String beanName, Object[] args) -->Line_50 $$ if (hasClosureArgument) [ CD ]
Line_50 $$ if (hasClosureArgument) -->Line_51 $$ Closure callable = (Closure) args[args.length - 1][ CD ]
Line_2 $$ private GroovyBeanDefinitionWrapper invokeBeanDefiningMethod(String beanName, Object[] args) -->Line_59 $$ getRegistry().registerBeanDefinition(beanName, beanDefinition.getBeanDefinition())[ FD ]
Line_2 $$ private GroovyBeanDefinitionWrapper invokeBeanDefiningMethod(String beanName, Object[] args) -->Line_9 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName, beanClass, resolveConstructorArguments(args, 1, args.length - 1))[ FD ]
Line_7 $$ if (hasClosureArgument) -->Line_14 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName, beanClass, resolveConstructorArguments(args, 1, args.length))[ CD ]
Line_21 $$ if (args.length > 1 && args[1] instanceof Class) -->Line_33 $$ int constructorArgsTest = hasClosureArgument ? 2 : 1[ CD ]
Line_34 $$ if (args.length > constructorArgsTest) -->Line_35 $$ int endOfConstructArgs = (hasClosureArgument ? args.length - 1 : args.length)[ CD ]
Line_32 $$ Map.Entry factoryBeanEntry = (Map.Entry) ((Map) args[0]).entrySet().iterator().next()-->Line_41 $$ this.currentBeanDefinition.getBeanDefinition().setFactoryMethodName(factoryBeanEntry.getValue().toString())[ FD ]
Line_50 $$ if (hasClosureArgument) -->Line_53 $$ callable.setResolveStrategy(Closure.DELEGATE_FIRST)[ CD ]
Line_21 $$ if (args.length > 1 && args[1] instanceof Class) -->Line_23 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName, (Class) args[1], constructorArgs)[ CD ]
Line_20 $$ if (args[0] instanceof Map) -->Line_43 $$ if (args[0] instanceof Closure) [ CD ]
Line_34 $$ if (args.length > constructorArgsTest) -->Line_36 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName, null, resolveConstructorArguments(args, 1, endOfConstructArgs))[ CD ]
Line_2 $$ private GroovyBeanDefinitionWrapper invokeBeanDefiningMethod(String beanName, Object[] args) -->Line_36 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName, null, resolveConstructorArguments(args, 1, endOfConstructArgs))[ FD ]
Line_21 $$ if (args.length > 1 && args[1] instanceof Class) -->Line_32 $$ Map.Entry factoryBeanEntry = (Map.Entry) ((Map) args[0]).entrySet().iterator().next()[ CD ]
Line_34 $$ if (args.length > constructorArgsTest) -->Line_38 $$ this.currentBeanDefinition = new GroovyBeanDefinitionWrapper(beanName)[ CD ]
Line_21 $$ if (args.length > 1 && args[1] instanceof Class) -->Line_22 $$ List constructorArgs = resolveConstructorArguments(args, 2, hasClosureArgument ? args.length - 1 : args.length)[ CD ]
