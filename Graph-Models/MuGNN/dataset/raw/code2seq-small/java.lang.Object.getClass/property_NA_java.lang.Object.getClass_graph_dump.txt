Line_2 $$ public void property() throws Exception -->Line_8 $$ assertNotNull(desc.getAnnotation(MethodAnnotation1.class))[ CD ]
Line_2 $$ public void property() throws Exception -->Line_3 $$ Property property = new Property(getClass(), getClass().getMethod("getProperty"), getClass().getMethod("setProperty", Map.class))[ CD ]
Line_4 $$ TypeDescriptor desc = new TypeDescriptor(property)-->Line_7 $$ assertEquals(Long.class, desc.getMapValueTypeDescriptor().getElementTypeDescriptor().getType())[ FD ]
Line_2 $$ public void property() throws Exception -->Line_10 $$ assertNotNull(desc.getAnnotation(MethodAnnotation3.class))[ CD ]
Line_4 $$ TypeDescriptor desc = new TypeDescriptor(property)-->Line_5 $$ assertEquals(Map.class, desc.getType())[ FD ]
Line_4 $$ TypeDescriptor desc = new TypeDescriptor(property)-->Line_10 $$ assertNotNull(desc.getAnnotation(MethodAnnotation3.class))[ FD ]
Line_2 $$ public void property() throws Exception -->Line_7 $$ assertEquals(Long.class, desc.getMapValueTypeDescriptor().getElementTypeDescriptor().getType())[ CD ]
Line_4 $$ TypeDescriptor desc = new TypeDescriptor(property)-->Line_8 $$ assertNotNull(desc.getAnnotation(MethodAnnotation1.class))[ FD ]
Line_2 $$ public void property() throws Exception -->Line_9 $$ assertNotNull(desc.getAnnotation(MethodAnnotation2.class))[ CD ]
Line_2 $$ public void property() throws Exception -->Line_4 $$ TypeDescriptor desc = new TypeDescriptor(property)[ CD ]
Line_2 $$ public void property() throws Exception -->Line_5 $$ assertEquals(Map.class, desc.getType())[ CD ]
Line_4 $$ TypeDescriptor desc = new TypeDescriptor(property)-->Line_6 $$ assertEquals(Integer.class, desc.getMapKeyTypeDescriptor().getElementTypeDescriptor().getType())[ FD ]
Line_2 $$ public void property() throws Exception -->Line_6 $$ assertEquals(Integer.class, desc.getMapKeyTypeDescriptor().getElementTypeDescriptor().getType())[ CD ]
Line_4 $$ TypeDescriptor desc = new TypeDescriptor(property)-->Line_9 $$ assertNotNull(desc.getAnnotation(MethodAnnotation2.class))[ FD ]
