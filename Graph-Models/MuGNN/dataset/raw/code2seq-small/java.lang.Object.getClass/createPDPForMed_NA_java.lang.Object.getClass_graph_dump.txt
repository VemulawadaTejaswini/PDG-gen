Line_11 $$ final PoliciesType policies = new PoliciesType()-->Line_14 $$ policies.getPolicySet().add(policySet)[ FD ]
Line_12 $$ final PolicySetType policySet = new PolicySetType()-->Line_13 $$ policySet.setLocation(policyDir.toURI().getPath())[ FD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_11 $$ final PoliciesType policies = new PoliciesType()[ CD ]
Line_3 $$ final File policySetFile = new File(policyDir, XACMLTestUtils.MED_EXAMPLE_POLICY_SET)-->Line_8 $$ FileUtils.copyInputStreamToFile(getClass().getResourceAsStream(XACMLTestUtils.TESTOBJECTS_POLICIES + "/" + XACMLTestUtils.MED_EXAMPLE_POLICY_SET), policySetFile)[ FD ]
Line_18 $$ final LocatorsType locators = new LocatorsType()-->Line_20 $$ pdp.setLocators(locators)[ FD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_20 $$ pdp.setLocators(locators)[ CD ]
Line_11 $$ final PoliciesType policies = new PoliciesType()-->Line_15 $$ pdp.setPolicies(policies)[ FD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_18 $$ final LocatorsType locators = new LocatorsType()[ CD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_6 $$ LOGGER.debug("Copying policies to the " + policyDir.getAbsolutePath())[ FD ]
Line_5 $$ if (LOGGER.isDebugEnabled()) -->Line_6 $$ LOGGER.debug("Copying policies to the " + policyDir.getAbsolutePath())[ CD ]
Line_10 $$ final PDP pdp = new PDP()-->Line_20 $$ pdp.setLocators(locators)[ FD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_10 $$ final PDP pdp = new PDP()[ CD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_4 $$ final File policySetFile2 = new File(policyDir, XACMLTestUtils.MED_EXAMPLE_POLICY_SET2)[ CD ]
Line_10 $$ final PDP pdp = new PDP()-->Line_15 $$ pdp.setPolicies(policies)[ FD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_21 $$ return new JBossPDP(new JAXBElement<PDP>(new QName("urn:jboss:xacml:2.0", "jbosspdp"), PDP.class, pdp))[ CD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_13 $$ policySet.setLocation(policyDir.toURI().getPath())[ FD ]
Line_4 $$ final File policySetFile2 = new File(policyDir, XACMLTestUtils.MED_EXAMPLE_POLICY_SET2)-->Line_9 $$ FileUtils.copyInputStreamToFile(getClass().getResourceAsStream(XACMLTestUtils.TESTOBJECTS_POLICIES + "/" + XACMLTestUtils.MED_EXAMPLE_POLICY_SET2), policySetFile2)[ FD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_15 $$ pdp.setPolicies(policies)[ CD ]
Line_16 $$ final LocatorType locator = new LocatorType()-->Line_19 $$ locators.getLocator().add(locator)[ FD ]
Line_18 $$ final LocatorsType locators = new LocatorsType()-->Line_19 $$ locators.getLocator().add(locator)[ FD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_5 $$ if (LOGGER.isDebugEnabled()) [ CD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_9 $$ FileUtils.copyInputStreamToFile(getClass().getResourceAsStream(XACMLTestUtils.TESTOBJECTS_POLICIES + "/" + XACMLTestUtils.MED_EXAMPLE_POLICY_SET2), policySetFile2)[ CD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_14 $$ policies.getPolicySet().add(policySet)[ CD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_13 $$ policySet.setLocation(policyDir.toURI().getPath())[ CD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_8 $$ FileUtils.copyInputStreamToFile(getClass().getResourceAsStream(XACMLTestUtils.TESTOBJECTS_POLICIES + "/" + XACMLTestUtils.MED_EXAMPLE_POLICY_SET), policySetFile)[ CD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_3 $$ final File policySetFile = new File(policyDir, XACMLTestUtils.MED_EXAMPLE_POLICY_SET)[ CD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_12 $$ final PolicySetType policySet = new PolicySetType()[ CD ]
Line_12 $$ final PolicySetType policySet = new PolicySetType()-->Line_14 $$ policies.getPolicySet().add(policySet)[ FD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_19 $$ locators.getLocator().add(locator)[ CD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_17 $$ locator.setName(JBossPolicySetLocator.class.getName())[ CD ]
Line_2 $$ private JBossPDP createPDPForMed(final File policyDir) throws IOException -->Line_16 $$ final LocatorType locator = new LocatorType()[ CD ]
Line_16 $$ final LocatorType locator = new LocatorType()-->Line_17 $$ locator.setName(JBossPolicySetLocator.class.getName())[ FD ]
