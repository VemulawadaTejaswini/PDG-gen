Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_38 $$ if (cf instanceof javax.resource.Referenceable) [ CD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_5 $$ final ConnectionFactoryService connectionFactoryService = new ConnectionFactoryService(cf)[ CD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_6 $$ final ServiceName connectionFactoryServiceName = ConnectionFactoryService.SERVICE_NAME_BASE.append(jndi)[ FD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_3 $$ mdr.getValue().registerJndiMapping(url.toExternalForm(), cf.getClass().getName(), jndi)[ CD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_11 $$ final ContextNames.BindInfo bindInfo = getBindInfo(jndi)[ CD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_12 $$ final ConnectionFactoryReferenceFactoryService referenceFactoryService = new ConnectionFactoryReferenceFactoryService()[ CD ]
Line_12 $$ final ConnectionFactoryReferenceFactoryService referenceFactoryService = new ConnectionFactoryReferenceFactoryService()-->Line_14 $$ serviceTarget.addService(referenceFactoryServiceName, referenceFactoryService).addDependency(connectionFactoryServiceName, Object.class, referenceFactoryService.getConnectionFactoryInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install()[ FD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_41 $$ return new String[] [ CD ]
Line_11 $$ final ContextNames.BindInfo bindInfo = getBindInfo(jndi)-->Line_13 $$ final ServiceName referenceFactoryServiceName = ConnectionFactoryReferenceFactoryService.SERVICE_NAME_BASE.append(bindInfo.getBinderServiceName())[ FD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_11 $$ final ContextNames.BindInfo bindInfo = getBindInfo(jndi)[ FD ]
Line_11 $$ final ContextNames.BindInfo bindInfo = getBindInfo(jndi)-->Line_17 $$ serviceTarget.addService(bindInfo.getBinderServiceName(), binderService).addDependency(referenceFactoryServiceName, ManagedReferenceFactory.class, binderService.getManagedObjectInjector()).addDependency(bindInfo.getParentContextServiceName(), ServiceBasedNamingStore.class, binderService.getNamingStoreInjector()).addListener(new AbstractServiceListener<Object>() [ FD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_38 $$ if (cf instanceof javax.resource.Referenceable) [ FD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_27 $$ DEPLOYMENT_CONNECTOR_LOGGER.unboundJca("ConnectionFactory", jndi)[ FD ]
Line_7 $$ ServiceBuilder connectionFactoryBuilder = serviceTarget.addService(connectionFactoryServiceName, connectionFactoryService)-->Line_9 $$ connectionFactoryBuilder.addDependency(deploymentServiceName)[ FD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_15 $$ if (isCreateBinderService()) [ CD ]
Line_6 $$ final ServiceName connectionFactoryServiceName = ConnectionFactoryService.SERVICE_NAME_BASE.append(jndi)-->Line_14 $$ serviceTarget.addService(referenceFactoryServiceName, referenceFactoryService).addDependency(connectionFactoryServiceName, Object.class, referenceFactoryService.getConnectionFactoryInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install()[ FD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_4 $$ DEPLOYMENT_CONNECTOR_LOGGER.registeredConnectionFactory(jndi)[ CD ]
Line_5 $$ final ConnectionFactoryService connectionFactoryService = new ConnectionFactoryService(cf)-->Line_7 $$ ServiceBuilder connectionFactoryBuilder = serviceTarget.addService(connectionFactoryServiceName, connectionFactoryService)[ FD ]
Line_15 $$ if (isCreateBinderService()) -->Line_17 $$ serviceTarget.addService(bindInfo.getBinderServiceName(), binderService).addDependency(referenceFactoryServiceName, ManagedReferenceFactory.class, binderService.getManagedObjectInjector()).addDependency(bindInfo.getParentContextServiceName(), ServiceBasedNamingStore.class, binderService.getNamingStoreInjector()).addListener(new AbstractServiceListener<Object>() [ CD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_8 $$ if (deploymentServiceName != null)[ CD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_13 $$ final ServiceName referenceFactoryServiceName = ConnectionFactoryReferenceFactoryService.SERVICE_NAME_BASE.append(bindInfo.getBinderServiceName())[ CD ]
Line_11 $$ final ContextNames.BindInfo bindInfo = getBindInfo(jndi)-->Line_16 $$ final BinderService binderService = new BinderService(bindInfo.getBindName())[ FD ]
Line_16 $$ final BinderService binderService = new BinderService(bindInfo.getBindName())-->Line_17 $$ serviceTarget.addService(bindInfo.getBinderServiceName(), binderService).addDependency(referenceFactoryServiceName, ManagedReferenceFactory.class, binderService.getManagedObjectInjector()).addDependency(bindInfo.getParentContextServiceName(), ServiceBasedNamingStore.class, binderService.getNamingStoreInjector()).addListener(new AbstractServiceListener<Object>() [ FD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_22 $$ DEPLOYMENT_CONNECTOR_LOGGER.boundJca("ConnectionFactory", jndi)[ FD ]
Line_15 $$ if (isCreateBinderService()) -->Line_16 $$ final BinderService binderService = new BinderService(bindInfo.getBindName())[ CD ]
Line_13 $$ final ServiceName referenceFactoryServiceName = ConnectionFactoryReferenceFactoryService.SERVICE_NAME_BASE.append(bindInfo.getBinderServiceName())-->Line_14 $$ serviceTarget.addService(referenceFactoryServiceName, referenceFactoryService).addDependency(connectionFactoryServiceName, Object.class, referenceFactoryService.getConnectionFactoryInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install()[ FD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_14 $$ serviceTarget.addService(referenceFactoryServiceName, referenceFactoryService).addDependency(connectionFactoryServiceName, Object.class, referenceFactoryService.getConnectionFactoryInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install()[ CD ]
Line_8 $$ if (deploymentServiceName != null)-->Line_9 $$ connectionFactoryBuilder.addDependency(deploymentServiceName)[ CD ]
Line_38 $$ if (cf instanceof javax.resource.Referenceable) -->Line_39 $$ ((javax.resource.Referenceable) cf).setReference(new Reference(jndi))[ CD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_3 $$ mdr.getValue().registerJndiMapping(url.toExternalForm(), cf.getClass().getName(), jndi)[ FD ]
Line_13 $$ final ServiceName referenceFactoryServiceName = ConnectionFactoryReferenceFactoryService.SERVICE_NAME_BASE.append(bindInfo.getBinderServiceName())-->Line_17 $$ serviceTarget.addService(bindInfo.getBinderServiceName(), binderService).addDependency(referenceFactoryServiceName, ManagedReferenceFactory.class, binderService.getManagedObjectInjector()).addDependency(bindInfo.getParentContextServiceName(), ServiceBasedNamingStore.class, binderService.getNamingStoreInjector()).addListener(new AbstractServiceListener<Object>() [ FD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_7 $$ ServiceBuilder connectionFactoryBuilder = serviceTarget.addService(connectionFactoryServiceName, connectionFactoryService)[ CD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_10 $$ connectionFactoryBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install()[ CD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_32 $$ DEPLOYMENT_CONNECTOR_LOGGER.debugf("Removed JCA ConnectionFactory [%s]", jndi)[ FD ]
Line_6 $$ final ServiceName connectionFactoryServiceName = ConnectionFactoryService.SERVICE_NAME_BASE.append(jndi)-->Line_7 $$ ServiceBuilder connectionFactoryBuilder = serviceTarget.addService(connectionFactoryServiceName, connectionFactoryService)[ FD ]
Line_7 $$ ServiceBuilder connectionFactoryBuilder = serviceTarget.addService(connectionFactoryServiceName, connectionFactoryService)-->Line_10 $$ connectionFactoryBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install()[ FD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_4 $$ DEPLOYMENT_CONNECTOR_LOGGER.registeredConnectionFactory(jndi)[ FD ]
Line_2 $$ public String[] bindConnectionFactory(URL url, String deployment, Object cf, final String jndi) throws Throwable -->Line_6 $$ final ServiceName connectionFactoryServiceName = ConnectionFactoryService.SERVICE_NAME_BASE.append(jndi)[ CD ]
