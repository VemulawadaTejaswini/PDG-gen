Line_2 $$ public void convertFromStreamToArray() throws NoSuchFieldException -->Line_12 $$ assertEquals(Long.valueOf(2L), content[1])[ CD ]
Line_2 $$ public void convertFromStreamToArray() throws NoSuchFieldException -->Line_3 $$ this.conversionService.addConverterFactory(new NumberToNumberConverterFactory())[ CD ]
Line_2 $$ public void convertFromStreamToArray() throws NoSuchFieldException -->Line_14 $$ assertEquals("Wrong number of elements", 3, content.length)[ CD ]
Line_4 $$ Stream<Integer> stream = Arrays.asList(1, 2, 3).stream()-->Line_7 $$ Object result = this.conversionService.convert(stream, arrayOfLongs)[ FD ]
Line_2 $$ public void convertFromStreamToArray() throws NoSuchFieldException -->Line_5 $$ TypeDescriptor arrayOfLongs = new TypeDescriptor(Types.class.getField("arrayOfLongs"))[ CD ]
Line_2 $$ public void convertFromStreamToArray() throws NoSuchFieldException -->Line_11 $$ assertEquals(Long.valueOf(1L), content[0])[ CD ]
Line_2 $$ public void convertFromStreamToArray() throws NoSuchFieldException -->Line_9 $$ assertTrue("Converted object must be an array", result.getClass().isArray())[ CD ]
Line_2 $$ public void convertFromStreamToArray() throws NoSuchFieldException -->Line_7 $$ Object result = this.conversionService.convert(stream, arrayOfLongs)[ CD ]
Line_2 $$ public void convertFromStreamToArray() throws NoSuchFieldException -->Line_13 $$ assertEquals(Long.valueOf(3L), content[2])[ CD ]
Line_5 $$ TypeDescriptor arrayOfLongs = new TypeDescriptor(Types.class.getField("arrayOfLongs"))-->Line_7 $$ Object result = this.conversionService.convert(stream, arrayOfLongs)[ FD ]
Line_7 $$ Object result = this.conversionService.convert(stream, arrayOfLongs)-->Line_8 $$ assertNotNull("Converted object must not be null", result)[ FD ]
Line_2 $$ public void convertFromStreamToArray() throws NoSuchFieldException -->Line_8 $$ assertNotNull("Converted object must not be null", result)[ CD ]
Line_2 $$ public void convertFromStreamToArray() throws NoSuchFieldException -->Line_4 $$ Stream<Integer> stream = Arrays.asList(1, 2, 3).stream()[ CD ]
Line_2 $$ public void convertFromStreamToArray() throws NoSuchFieldException -->Line_10 $$ Long[] content = (Long[]) result[ CD ]
Line_7 $$ Object result = this.conversionService.convert(stream, arrayOfLongs)-->Line_9 $$ assertTrue("Converted object must be an array", result.getClass().isArray())[ FD ]
