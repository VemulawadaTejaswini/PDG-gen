Line_6 $$ String destroyMethodName = beanDefinition.getDestroyMethodName()-->Line_7 $$ if (AbstractBeanDefinition.INFER_METHOD.equals(destroyMethodName)) [ FD ]
Line_7 $$ if (AbstractBeanDefinition.INFER_METHOD.equals(destroyMethodName)) -->Line_8 $$ return (ClassUtils.hasMethod(bean.getClass(), CLOSE_METHOD_NAME) || ClassUtils.hasMethod(bean.getClass(), SHUTDOWN_METHOD_NAME))[ CD ]
Line_2 $$ public static boolean hasDestroyMethod(Object bean, RootBeanDefinition beanDefinition) -->Line_10 $$ return StringUtils.hasLength(destroyMethodName)[ CD ]
Line_2 $$ public static boolean hasDestroyMethod(Object bean, RootBeanDefinition beanDefinition) -->Line_6 $$ String destroyMethodName = beanDefinition.getDestroyMethodName()[ CD ]
Line_3 $$ if (bean instanceof DisposableBean || closeableInterface.isInstance(bean)) -->Line_4 $$ return true[ CD ]
Line_6 $$ String destroyMethodName = beanDefinition.getDestroyMethodName()-->Line_10 $$ return StringUtils.hasLength(destroyMethodName)[ FD ]
Line_2 $$ public static boolean hasDestroyMethod(Object bean, RootBeanDefinition beanDefinition) -->Line_8 $$ return (ClassUtils.hasMethod(bean.getClass(), CLOSE_METHOD_NAME) || ClassUtils.hasMethod(bean.getClass(), SHUTDOWN_METHOD_NAME))[ FD ]
Line_2 $$ public static boolean hasDestroyMethod(Object bean, RootBeanDefinition beanDefinition) -->Line_3 $$ if (bean instanceof DisposableBean || closeableInterface.isInstance(bean)) [ FD ]
Line_2 $$ public static boolean hasDestroyMethod(Object bean, RootBeanDefinition beanDefinition) -->Line_7 $$ if (AbstractBeanDefinition.INFER_METHOD.equals(destroyMethodName)) [ CD ]
Line_2 $$ public static boolean hasDestroyMethod(Object bean, RootBeanDefinition beanDefinition) -->Line_3 $$ if (bean instanceof DisposableBean || closeableInterface.isInstance(bean)) [ CD ]
Line_2 $$ public static boolean hasDestroyMethod(Object bean, RootBeanDefinition beanDefinition) -->Line_6 $$ String destroyMethodName = beanDefinition.getDestroyMethodName()[ FD ]
