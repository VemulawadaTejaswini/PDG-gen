Line_3 $$ if (value == null) -->Line_6 $$ NULL_RENDERER.setBackground(isSelected ? table.getSelectionBackground() : table.getBackground())[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_14 $$ return result[ CD ]
Line_10 $$ JComponent result = renderer.setValue(value)-->Line_12 $$ result.setForeground(isSelected ? table.getSelectionForeground() : table.getForeground())[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_10 $$ JComponent result = renderer.setValue(value)[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_5 $$ NULL_RENDERER.setForeground(isSelected ? table.getSelectionForeground() : table.getForeground())[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_12 $$ result.setForeground(isSelected ? table.getSelectionForeground() : table.getForeground())[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_11 $$ result.setOpaque(isSelected)[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_10 $$ JComponent result = renderer.setValue(value)[ FD ]
Line_10 $$ JComponent result = renderer.setValue(value)-->Line_11 $$ result.setOpaque(isSelected)[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_11 $$ result.setOpaque(isSelected)[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_9 $$ Renderer<Object> renderer = ObjectUtils.notNull(getRenderer(value.getClass()), DEFAULT_RENDERER)[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_4 $$ NULL_RENDERER.setOpaque(isSelected)[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_13 $$ result.setBackground(isSelected ? table.getSelectionBackground() : table.getBackground())[ FD ]
Line_10 $$ JComponent result = renderer.setValue(value)-->Line_13 $$ result.setBackground(isSelected ? table.getSelectionBackground() : table.getBackground())[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_6 $$ NULL_RENDERER.setBackground(isSelected ? table.getSelectionBackground() : table.getBackground())[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_13 $$ result.setBackground(isSelected ? table.getSelectionBackground() : table.getBackground())[ CD ]
Line_9 $$ Renderer<Object> renderer = ObjectUtils.notNull(getRenderer(value.getClass()), DEFAULT_RENDERER)-->Line_10 $$ JComponent result = renderer.setValue(value)[ FD ]
Line_3 $$ if (value == null) -->Line_7 $$ return NULL_RENDERER[ CD ]
Line_3 $$ if (value == null) -->Line_5 $$ NULL_RENDERER.setForeground(isSelected ? table.getSelectionForeground() : table.getForeground())[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_3 $$ if (value == null) [ FD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_3 $$ if (value == null) [ CD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_12 $$ result.setForeground(isSelected ? table.getSelectionForeground() : table.getForeground())[ CD ]
Line_3 $$ if (value == null) -->Line_4 $$ NULL_RENDERER.setOpaque(isSelected)[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) -->Line_9 $$ Renderer<Object> renderer = ObjectUtils.notNull(getRenderer(value.getClass()), DEFAULT_RENDERER)[ CD ]
