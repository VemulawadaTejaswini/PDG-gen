Line_2 $$ public void selectionWithPrimitiveArray() throws Exception -->Line_10 $$ assertEquals(5, array.length)[ CD ]
Line_2 $$ public void selectionWithPrimitiveArray() throws Exception -->Line_14 $$ assertEquals(new Integer(3), array[3])[ CD ]
Line_2 $$ public void selectionWithPrimitiveArray() throws Exception -->Line_6 $$ assertTrue(value.getClass().isArray())[ CD ]
Line_7 $$ TypedValue typedValue = new TypedValue(value)-->Line_8 $$ assertEquals(Integer.class, typedValue.getTypeDescriptor().getElementTypeDescriptor().getType())[ FD ]
Line_4 $$ EvaluationContext context = new StandardEvaluationContext(new ArrayTestBean())-->Line_5 $$ Object value = expression.getValue(context)[ FD ]
Line_5 $$ Object value = expression.getValue(context)-->Line_6 $$ assertTrue(value.getClass().isArray())[ FD ]
Line_2 $$ public void selectionWithPrimitiveArray() throws Exception -->Line_12 $$ assertEquals(new Integer(1), array[1])[ CD ]
Line_2 $$ public void selectionWithPrimitiveArray() throws Exception -->Line_13 $$ assertEquals(new Integer(2), array[2])[ CD ]
Line_2 $$ public void selectionWithPrimitiveArray() throws Exception -->Line_11 $$ assertEquals(new Integer(0), array[0])[ CD ]
Line_2 $$ public void selectionWithPrimitiveArray() throws Exception -->Line_8 $$ assertEquals(Integer.class, typedValue.getTypeDescriptor().getElementTypeDescriptor().getType())[ CD ]
Line_2 $$ public void selectionWithPrimitiveArray() throws Exception -->Line_5 $$ Object value = expression.getValue(context)[ CD ]
Line_2 $$ public void selectionWithPrimitiveArray() throws Exception -->Line_4 $$ EvaluationContext context = new StandardEvaluationContext(new ArrayTestBean())[ CD ]
Line_2 $$ public void selectionWithPrimitiveArray() throws Exception -->Line_9 $$ Integer[] array = (Integer[]) value[ CD ]
Line_2 $$ public void selectionWithPrimitiveArray() throws Exception -->Line_15 $$ assertEquals(new Integer(4), array[4])[ CD ]
Line_2 $$ public void selectionWithPrimitiveArray() throws Exception -->Line_3 $$ Expression expression = new SpelExpressionParser().parseRaw("ints.?[#this<5]")[ CD ]
Line_3 $$ Expression expression = new SpelExpressionParser().parseRaw("ints.?[#this<5]")-->Line_5 $$ Object value = expression.getValue(context)[ FD ]
Line_2 $$ public void selectionWithPrimitiveArray() throws Exception -->Line_7 $$ TypedValue typedValue = new TypedValue(value)[ CD ]
