Line_6 $$ Method isTemporary = lob.getClass().getMethod("isTemporary")-->Line_7 $$ Boolean temporary = (Boolean) isTemporary.invoke(lob)[ FD ]
Line_2 $$ protected void initializeResourcesBeforeRead(Connection con, Object lob) -->Line_9 $$ Method open = lob.getClass().getMethod("open", int.class)[ FD ]
Line_9 $$ Method open = lob.getClass().getMethod("open", int.class)-->Line_10 $$ open.invoke(lob, this.modeReadOnlyConstants.get(lob.getClass()))[ FD ]
Line_2 $$ protected void initializeResourcesBeforeRead(Connection con, Object lob) -->Line_6 $$ Method isTemporary = lob.getClass().getMethod("isTemporary")[ FD ]
Line_8 $$ if (!temporary) -->Line_10 $$ open.invoke(lob, this.modeReadOnlyConstants.get(lob.getClass()))[ CD ]
Line_2 $$ protected void initializeResourcesBeforeRead(Connection con, Object lob) -->Line_4 $$ initOracleDriverClasses(con)[ FD ]
Line_3 $$ if (this.releaseResourcesAfterRead) -->Line_4 $$ initOracleDriverClasses(con)[ CD ]
Line_7 $$ Boolean temporary = (Boolean) isTemporary.invoke(lob)-->Line_8 $$ if (!temporary) [ FD ]
Line_2 $$ protected void initializeResourcesBeforeRead(Connection con, Object lob) -->Line_3 $$ if (this.releaseResourcesAfterRead) [ CD ]
Line_2 $$ protected void initializeResourcesBeforeRead(Connection con, Object lob) -->Line_7 $$ Boolean temporary = (Boolean) isTemporary.invoke(lob)[ FD ]
Line_8 $$ if (!temporary) -->Line_9 $$ Method open = lob.getClass().getMethod("open", int.class)[ CD ]
Line_2 $$ protected void initializeResourcesBeforeRead(Connection con, Object lob) -->Line_10 $$ open.invoke(lob, this.modeReadOnlyConstants.get(lob.getClass()))[ FD ]
