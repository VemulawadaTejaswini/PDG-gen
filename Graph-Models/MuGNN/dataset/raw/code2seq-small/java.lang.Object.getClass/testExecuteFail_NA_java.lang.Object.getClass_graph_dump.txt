Line_8 $$ Serializer serializer = new Serializer()-->Line_10 $$ return Datagram.createResponseDatagram(datagram, serializer.toByteBuffer())[ FD ]
Line_4 $$ final Exception exception = new Exception("Execution error")-->Line_23 $$ Assert.assertEquals(exception.getMessage(), t.getMessage())[ FD ]
Line_5 $$ MockIntraband mockIntraband = new MockIntraband() -->Line_10 $$ return Datagram.createResponseDatagram(datagram, serializer.toByteBuffer())[ FD ]
Line_2 $$ public void testExecuteFail() throws Exception -->Line_3 $$ PortalClassLoaderUtil.setClassLoader(getClass().getClassLoader())[ CD ]
Line_2 $$ public void testExecuteFail() throws Exception -->Line_5 $$ MockIntraband mockIntraband = new MockIntraband() [ CD ]
Line_2 $$ public void testExecuteFail() throws Exception -->Line_4 $$ final Exception exception = new Exception("Execution error")[ CD ]
Line_2 $$ public void testExecuteFail() throws Exception -->Line_17 $$ Future<String> futureResult = IntrabandRPCUtil.execute(mockRegistrationReference, new TestProcessCallable())[ CD ]
Line_8 $$ Serializer serializer = new Serializer()-->Line_9 $$ serializer.writeObject(new RPCResponse(exception))[ FD ]
