Line_6 $$ TypeDef type1 = sf.mappings.getTypeDef("type1")-->Line_10 $$ assertEquals("value1", type1.getParameters().getProperty("param1"))[ FD ]
Line_7 $$ TypeDef type2 = sf.mappings.getTypeDef("type2")-->Line_14 $$ assertEquals("myvalue", type2.getParameters().getProperty("myParam"))[ FD ]
Line_6 $$ TypeDef type1 = sf.mappings.getTypeDef("type1")-->Line_9 $$ assertEquals(2, type1.getParameters().size())[ FD ]
Line_2 $$ public void testLocalSessionFactoryBeanWithTypeDefinitions() throws Exception -->Line_5 $$ TypeTestLocalSessionFactoryBean sf = (TypeTestLocalSessionFactoryBean) xbf.getBean("&sessionFactory")[ CD ]
Line_2 $$ public void testLocalSessionFactoryBeanWithTypeDefinitions() throws Exception -->Line_14 $$ assertEquals("myvalue", type2.getParameters().getProperty("myParam"))[ CD ]
Line_7 $$ TypeDef type2 = sf.mappings.getTypeDef("type2")-->Line_13 $$ assertEquals(1, type2.getParameters().size())[ FD ]
Line_6 $$ TypeDef type1 = sf.mappings.getTypeDef("type1")-->Line_8 $$ assertEquals("mypackage.MyTypeClass", type1.getTypeClass())[ FD ]
Line_2 $$ public void testLocalSessionFactoryBeanWithTypeDefinitions() throws Exception -->Line_3 $$ DefaultListableBeanFactory xbf = new DefaultListableBeanFactory()[ CD ]
Line_7 $$ TypeDef type2 = sf.mappings.getTypeDef("type2")-->Line_12 $$ assertEquals("mypackage.MyOtherTypeClass", type2.getTypeClass())[ FD ]
Line_2 $$ public void testLocalSessionFactoryBeanWithTypeDefinitions() throws Exception -->Line_9 $$ assertEquals(2, type1.getParameters().size())[ CD ]
Line_2 $$ public void testLocalSessionFactoryBeanWithTypeDefinitions() throws Exception -->Line_6 $$ TypeDef type1 = sf.mappings.getTypeDef("type1")[ CD ]
Line_2 $$ public void testLocalSessionFactoryBeanWithTypeDefinitions() throws Exception -->Line_12 $$ assertEquals("mypackage.MyOtherTypeClass", type2.getTypeClass())[ CD ]
Line_2 $$ public void testLocalSessionFactoryBeanWithTypeDefinitions() throws Exception -->Line_8 $$ assertEquals("mypackage.MyTypeClass", type1.getTypeClass())[ CD ]
Line_2 $$ public void testLocalSessionFactoryBeanWithTypeDefinitions() throws Exception -->Line_13 $$ assertEquals(1, type2.getParameters().size())[ CD ]
Line_2 $$ public void testLocalSessionFactoryBeanWithTypeDefinitions() throws Exception -->Line_10 $$ assertEquals("value1", type1.getParameters().getProperty("param1"))[ CD ]
Line_3 $$ DefaultListableBeanFactory xbf = new DefaultListableBeanFactory()-->Line_5 $$ TypeTestLocalSessionFactoryBean sf = (TypeTestLocalSessionFactoryBean) xbf.getBean("&sessionFactory")[ FD ]
Line_2 $$ public void testLocalSessionFactoryBeanWithTypeDefinitions() throws Exception -->Line_11 $$ assertEquals("othervalue", type1.getParameters().getProperty("otherParam"))[ CD ]
Line_2 $$ public void testLocalSessionFactoryBeanWithTypeDefinitions() throws Exception -->Line_7 $$ TypeDef type2 = sf.mappings.getTypeDef("type2")[ CD ]
Line_6 $$ TypeDef type1 = sf.mappings.getTypeDef("type1")-->Line_11 $$ assertEquals("othervalue", type1.getParameters().getProperty("otherParam"))[ FD ]
Line_2 $$ public void testLocalSessionFactoryBeanWithTypeDefinitions() throws Exception -->Line_4 $$ new XmlBeanDefinitionReader(xbf).loadBeanDefinitions(new ClassPathResource("typeDefinitions.xml", getClass()))[ CD ]
