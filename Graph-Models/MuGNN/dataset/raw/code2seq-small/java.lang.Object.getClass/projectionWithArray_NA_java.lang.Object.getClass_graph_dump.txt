Line_2 $$ public void projectionWithArray() throws Exception -->Line_12 $$ assertEquals(new Integer(5), array[0])[ CD ]
Line_3 $$ Expression expression = new SpelExpressionParser().parseRaw("#testArray.![wrapper.value]")-->Line_6 $$ Object value = expression.getValue(context)[ FD ]
Line_2 $$ public void projectionWithArray() throws Exception -->Line_4 $$ EvaluationContext context = new StandardEvaluationContext()[ CD ]
Line_4 $$ EvaluationContext context = new StandardEvaluationContext()-->Line_6 $$ Object value = expression.getValue(context)[ FD ]
Line_2 $$ public void projectionWithArray() throws Exception -->Line_14 $$ assertEquals(new Integer(7), array[2])[ CD ]
Line_2 $$ public void projectionWithArray() throws Exception -->Line_3 $$ Expression expression = new SpelExpressionParser().parseRaw("#testArray.![wrapper.value]")[ CD ]
Line_2 $$ public void projectionWithArray() throws Exception -->Line_6 $$ Object value = expression.getValue(context)[ CD ]
Line_2 $$ public void projectionWithArray() throws Exception -->Line_7 $$ assertTrue(value.getClass().isArray())[ CD ]
Line_8 $$ TypedValue typedValue = new TypedValue(value)-->Line_9 $$ assertEquals(Number.class, typedValue.getTypeDescriptor().getElementTypeDescriptor().getType())[ FD ]
Line_2 $$ public void projectionWithArray() throws Exception -->Line_5 $$ context.setVariable("testArray", IntegerTestBean.createArray())[ CD ]
Line_2 $$ public void projectionWithArray() throws Exception -->Line_10 $$ Number[] array = (Number[]) value[ CD ]
Line_2 $$ public void projectionWithArray() throws Exception -->Line_13 $$ assertEquals(5.9f, array[1])[ CD ]
Line_6 $$ Object value = expression.getValue(context)-->Line_7 $$ assertTrue(value.getClass().isArray())[ FD ]
Line_2 $$ public void projectionWithArray() throws Exception -->Line_8 $$ TypedValue typedValue = new TypedValue(value)[ CD ]
Line_4 $$ EvaluationContext context = new StandardEvaluationContext()-->Line_5 $$ context.setVariable("testArray", IntegerTestBean.createArray())[ FD ]
Line_2 $$ public void projectionWithArray() throws Exception -->Line_9 $$ assertEquals(Number.class, typedValue.getTypeDescriptor().getElementTypeDescriptor().getType())[ CD ]
Line_2 $$ public void projectionWithArray() throws Exception -->Line_11 $$ assertEquals(3, array.length)[ CD ]
