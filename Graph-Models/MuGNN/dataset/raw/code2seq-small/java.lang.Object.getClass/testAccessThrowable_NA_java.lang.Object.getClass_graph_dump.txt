Line_2 $$ public void testAccessThrowable() throws Exception -->Line_5 $$ ExceptionHandlingAspect aspect = (ExceptionHandlingAspect) ctx.getBean("aspect")[ CD ]
Line_2 $$ public void testAccessThrowable() throws Exception -->Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext(getClass().getSimpleName() + "-context.xml", getClass())[ CD ]
Line_2 $$ public void testAccessThrowable() throws Exception -->Line_6 $$ assertTrue(AopUtils.isAopProxy(bean))[ CD ]
Line_2 $$ public void testAccessThrowable() throws Exception -->Line_12 $$ assertNotNull(aspect.lastException)[ CD ]
Line_4 $$ ITestBean bean = (ITestBean) ctx.getBean("testBean")-->Line_6 $$ assertTrue(AopUtils.isAopProxy(bean))[ FD ]
Line_2 $$ public void testAccessThrowable() throws Exception -->Line_4 $$ ITestBean bean = (ITestBean) ctx.getBean("testBean")[ CD ]
Line_4 $$ ITestBean bean = (ITestBean) ctx.getBean("testBean")-->Line_8 $$ bean.unreliableFileOperation()[ FD ]
Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext(getClass().getSimpleName() + "-context.xml", getClass())-->Line_4 $$ ITestBean bean = (ITestBean) ctx.getBean("testBean")[ FD ]
Line_2 $$ public void testAccessThrowable() throws Exception -->Line_11 $$ assertEquals(1, aspect.handled)[ CD ]
Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext(getClass().getSimpleName() + "-context.xml", getClass())-->Line_5 $$ ExceptionHandlingAspect aspect = (ExceptionHandlingAspect) ctx.getBean("aspect")[ FD ]
