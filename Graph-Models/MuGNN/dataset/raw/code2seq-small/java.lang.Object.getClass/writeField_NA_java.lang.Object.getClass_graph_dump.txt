Line_2 $$ public void writeField(Object object, String fieldName, String jsonName, Class elementType) -->Line_3 $$ Class type = object.getClass()[ CD ]
Line_10 $$ elementType = metadata.elementType-->Line_15 $$ writeValue(field.get(object), field.getType(), elementType)[ FD ]
Line_2 $$ public void writeField(Object object, String fieldName, String jsonName, Class elementType) -->Line_10 $$ elementType = metadata.elementType[ FD ]
Line_2 $$ public void writeField(Object object, String fieldName, String jsonName, Class elementType) -->Line_9 $$ if (elementType == null)[ CD ]
Line_22 $$ SerializationException ex = new SerializationException(runtimeEx)-->Line_23 $$ ex.addTrace(field + " (" + type.getName() + ")")[ FD ]
Line_2 $$ public void writeField(Object object, String fieldName, String jsonName, Class elementType) -->Line_8 $$ Field field = metadata.field[ CD ]
Line_5 $$ FieldMetadata metadata = fields.get(fieldName)-->Line_6 $$ if (metadata == null)[ FD ]
Line_2 $$ public void writeField(Object object, String fieldName, String jsonName, Class elementType) -->Line_4 $$ ObjectMap<String, FieldMetadata> fields = getFields(type)[ CD ]
Line_2 $$ public void writeField(Object object, String fieldName, String jsonName, Class elementType) -->Line_9 $$ if (elementType == null)[ FD ]
Line_3 $$ Class type = object.getClass()-->Line_7 $$ throw new SerializationException("Field not found: " + fieldName + " (" + type.getName() + ")")[ FD ]
Line_9 $$ if (elementType == null)-->Line_10 $$ elementType = metadata.elementType[ CD ]
Line_2 $$ public void writeField(Object object, String fieldName, String jsonName, Class elementType) -->Line_14 $$ writer.name(jsonName)[ FD ]
Line_8 $$ Field field = metadata.field-->Line_15 $$ writeValue(field.get(object), field.getType(), elementType)[ FD ]
Line_12 $$ if (debug)-->Line_13 $$ System.out.println("Writing field: " + field.getName() + " (" + type.getName() + ")")[ CD ]
Line_2 $$ public void writeField(Object object, String fieldName, String jsonName, Class elementType) -->Line_6 $$ if (metadata == null)[ CD ]
Line_3 $$ Class type = object.getClass()-->Line_17 $$ throw new SerializationException("Error accessing field: " + field.getName() + " (" + type.getName() + ")", ex)[ FD ]
Line_8 $$ Field field = metadata.field-->Line_17 $$ throw new SerializationException("Error accessing field: " + field.getName() + " (" + type.getName() + ")", ex)[ FD ]
Line_3 $$ Class type = object.getClass()-->Line_19 $$ ex.addTrace(field + " (" + type.getName() + ")")[ FD ]
Line_3 $$ Class type = object.getClass()-->Line_23 $$ ex.addTrace(field + " (" + type.getName() + ")")[ FD ]
Line_2 $$ public void writeField(Object object, String fieldName, String jsonName, Class elementType) -->Line_3 $$ Class type = object.getClass()[ FD ]
Line_3 $$ Class type = object.getClass()-->Line_4 $$ ObjectMap<String, FieldMetadata> fields = getFields(type)[ FD ]
Line_4 $$ ObjectMap<String, FieldMetadata> fields = getFields(type)-->Line_5 $$ FieldMetadata metadata = fields.get(fieldName)[ FD ]
Line_2 $$ public void writeField(Object object, String fieldName, String jsonName, Class elementType) -->Line_5 $$ FieldMetadata metadata = fields.get(fieldName)[ FD ]
Line_2 $$ public void writeField(Object object, String fieldName, String jsonName, Class elementType) -->Line_15 $$ writeValue(field.get(object), field.getType(), elementType)[ FD ]
Line_8 $$ Field field = metadata.field-->Line_13 $$ System.out.println("Writing field: " + field.getName() + " (" + type.getName() + ")")[ FD ]
Line_3 $$ Class type = object.getClass()-->Line_13 $$ System.out.println("Writing field: " + field.getName() + " (" + type.getName() + ")")[ FD ]
Line_2 $$ public void writeField(Object object, String fieldName, String jsonName, Class elementType) -->Line_5 $$ FieldMetadata metadata = fields.get(fieldName)[ CD ]
