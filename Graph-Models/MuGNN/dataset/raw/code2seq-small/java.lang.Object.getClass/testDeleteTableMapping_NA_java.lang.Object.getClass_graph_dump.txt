Line_46 $$ rightModelListener = new RecorderModelListener()-->Line_54 $$ rightModelListener.assertOnAfterRemoveAssociation(false, null, null, null)[ FD ]
Line_25 $$ MockDeleteMappingSqlUpdate mockDeleteSqlUpdate = (MockDeleteMappingSqlUpdate) _tableMapperImpl.deleteTableMappingSqlUpdate-->Line_35 $$ mockDeleteSqlUpdate.setDatabaseError(false)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_56 $$ _rightBasePersistence.unregisterListener(rightModelListener)[ CD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_17 $$ rightModelListener.assertOnAfterRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ FD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_14 $$ leftModelListener.assertOnBeforeRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_54 $$ rightModelListener.assertOnAfterRemoveAssociation(false, null, null, null)[ CD ]
Line_20 $$ leftModelListener = new RecorderModelListener()-->Line_38 $$ leftModelListener.assertOnBeforeRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ FD ]
Line_8 $$ RecorderModelListener<Left> leftModelListener = new RecorderModelListener()-->Line_55 $$ _leftBasePersistence.unregisterListener(leftModelListener)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_3 $$ long leftPrimaryKey = 1[ CD ]
Line_4 $$ long rightPrimaryKey = 2-->Line_13 $$ Assert.assertTrue(_tableMapperImpl.deleteTableMapping(leftPrimaryKey, rightPrimaryKey))[ FD ]
Line_8 $$ RecorderModelListener<Left> leftModelListener = new RecorderModelListener()-->Line_16 $$ leftModelListener.assertOnAfterRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ FD ]
Line_4 $$ long rightPrimaryKey = 2-->Line_17 $$ rightModelListener.assertOnAfterRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ FD ]
Line_10 $$ RecorderModelListener<Right> rightModelListener = new RecorderModelListener()-->Line_43 $$ _rightBasePersistence.unregisterListener(rightModelListener)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_46 $$ rightModelListener = new RecorderModelListener()[ CD ]
Line_20 $$ leftModelListener = new RecorderModelListener()-->Line_40 $$ leftModelListener.assertOnAfterRemoveAssociation(false, null, null, null)[ FD ]
Line_10 $$ RecorderModelListener<Right> rightModelListener = new RecorderModelListener()-->Line_56 $$ _rightBasePersistence.unregisterListener(rightModelListener)[ FD ]
Line_8 $$ RecorderModelListener<Left> leftModelListener = new RecorderModelListener()-->Line_38 $$ leftModelListener.assertOnBeforeRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_39 $$ rightModelListener.assertOnBeforeRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ CD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_13 $$ Assert.assertTrue(_tableMapperImpl.deleteTableMapping(leftPrimaryKey, rightPrimaryKey))[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_23 $$ _rightBasePersistence.registerListener(rightModelListener)[ CD ]
Line_4 $$ long rightPrimaryKey = 2-->Line_38 $$ leftModelListener.assertOnBeforeRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ FD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_5 $$ Assert.assertFalse(_tableMapperImpl.deleteTableMapping(leftPrimaryKey, rightPrimaryKey))[ FD ]
Line_44 $$ leftModelListener = new RecorderModelListener()-->Line_53 $$ leftModelListener.assertOnAfterRemoveAssociation(false, null, null, null)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_4 $$ long rightPrimaryKey = 2[ CD ]
Line_8 $$ RecorderModelListener<Left> leftModelListener = new RecorderModelListener()-->Line_44 $$ leftModelListener = new RecorderModelListener()[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_53 $$ leftModelListener.assertOnAfterRemoveAssociation(false, null, null, null)[ CD ]
Line_8 $$ RecorderModelListener<Left> leftModelListener = new RecorderModelListener()-->Line_9 $$ _leftBasePersistence.registerListener(leftModelListener)[ FD ]
Line_4 $$ long rightPrimaryKey = 2-->Line_5 $$ Assert.assertFalse(_tableMapperImpl.deleteTableMapping(leftPrimaryKey, rightPrimaryKey))[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_52 $$ rightModelListener.assertOnBeforeRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ CD ]
Line_10 $$ RecorderModelListener<Right> rightModelListener = new RecorderModelListener()-->Line_17 $$ rightModelListener.assertOnAfterRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_55 $$ _leftBasePersistence.unregisterListener(leftModelListener)[ CD ]
Line_20 $$ leftModelListener = new RecorderModelListener()-->Line_45 $$ _leftBasePersistence.registerListener(leftModelListener)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_8 $$ RecorderModelListener<Left> leftModelListener = new RecorderModelListener()[ CD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_20 $$ leftModelListener = new RecorderModelListener()[ CD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_52 $$ rightModelListener.assertOnBeforeRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_16 $$ leftModelListener.assertOnAfterRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ CD ]
Line_22 $$ rightModelListener = new RecorderModelListener()-->Line_43 $$ _rightBasePersistence.unregisterListener(rightModelListener)[ FD ]
Line_46 $$ rightModelListener = new RecorderModelListener()-->Line_52 $$ rightModelListener.assertOnBeforeRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ FD ]
Line_10 $$ RecorderModelListener<Right> rightModelListener = new RecorderModelListener()-->Line_54 $$ rightModelListener.assertOnAfterRemoveAssociation(false, null, null, null)[ FD ]
Line_10 $$ RecorderModelListener<Right> rightModelListener = new RecorderModelListener()-->Line_15 $$ rightModelListener.assertOnBeforeRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ FD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_24 $$ _mappingStore.put(leftPrimaryKey, new long[] [ FD ]
Line_31 $$ Throwable cause = se.getCause()-->Line_33 $$ Assert.assertEquals("Database error", cause.getMessage())[ FD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_15 $$ rightModelListener.assertOnBeforeRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ FD ]
Line_4 $$ long rightPrimaryKey = 2-->Line_7 $$ Assert.assertTrue(_tableMapperImpl.deleteTableMapping(leftPrimaryKey, rightPrimaryKey))[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_11 $$ _rightBasePersistence.registerListener(rightModelListener)[ CD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_43 $$ _rightBasePersistence.unregisterListener(rightModelListener)[ CD ]
Line_20 $$ leftModelListener = new RecorderModelListener()-->Line_55 $$ _leftBasePersistence.unregisterListener(leftModelListener)[ FD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_39 $$ rightModelListener.assertOnBeforeRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ FD ]
Line_8 $$ RecorderModelListener<Left> leftModelListener = new RecorderModelListener()-->Line_53 $$ leftModelListener.assertOnAfterRemoveAssociation(false, null, null, null)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_24 $$ _mappingStore.put(leftPrimaryKey, new long[] [ CD ]
Line_10 $$ RecorderModelListener<Right> rightModelListener = new RecorderModelListener()-->Line_19 $$ _rightBasePersistence.unregisterListener(rightModelListener)[ FD ]
Line_25 $$ MockDeleteMappingSqlUpdate mockDeleteSqlUpdate = (MockDeleteMappingSqlUpdate) _tableMapperImpl.deleteTableMappingSqlUpdate-->Line_26 $$ mockDeleteSqlUpdate.setDatabaseError(true)[ FD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_12 $$ _mappingStore.put(leftPrimaryKey, new long[] [ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_41 $$ rightModelListener.assertOnAfterRemoveAssociation(false, null, null, null)[ CD ]
Line_22 $$ rightModelListener = new RecorderModelListener()-->Line_56 $$ _rightBasePersistence.unregisterListener(rightModelListener)[ FD ]
Line_10 $$ RecorderModelListener<Right> rightModelListener = new RecorderModelListener()-->Line_22 $$ rightModelListener = new RecorderModelListener()[ FD ]
Line_4 $$ long rightPrimaryKey = 2-->Line_28 $$ _tableMapperImpl.deleteTableMapping(leftPrimaryKey, rightPrimaryKey)[ FD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_7 $$ Assert.assertTrue(_tableMapperImpl.deleteTableMapping(leftPrimaryKey, rightPrimaryKey))[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_9 $$ _leftBasePersistence.registerListener(leftModelListener)[ CD ]
Line_8 $$ RecorderModelListener<Left> leftModelListener = new RecorderModelListener()-->Line_14 $$ leftModelListener.assertOnBeforeRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ FD ]
Line_20 $$ leftModelListener = new RecorderModelListener()-->Line_21 $$ _leftBasePersistence.registerListener(leftModelListener)[ FD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_36 $$ _mappingStore.remove(leftPrimaryKey)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_5 $$ Assert.assertFalse(_tableMapperImpl.deleteTableMapping(leftPrimaryKey, rightPrimaryKey))[ CD ]
Line_4 $$ long rightPrimaryKey = 2-->Line_39 $$ rightModelListener.assertOnBeforeRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_49 $$ leftToRightPortalCache.put(leftPrimaryKey, new long[] [ CD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_22 $$ rightModelListener = new RecorderModelListener()[ CD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_13 $$ Assert.assertTrue(_tableMapperImpl.deleteTableMapping(leftPrimaryKey, rightPrimaryKey))[ CD ]
Line_8 $$ RecorderModelListener<Left> leftModelListener = new RecorderModelListener()-->Line_18 $$ _leftBasePersistence.unregisterListener(leftModelListener)[ FD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_50 $$ Assert.assertFalse(_tableMapperImpl.deleteTableMapping(leftPrimaryKey, rightPrimaryKey))[ FD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_38 $$ leftModelListener.assertOnBeforeRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ FD ]
Line_8 $$ RecorderModelListener<Left> leftModelListener = new RecorderModelListener()-->Line_42 $$ _leftBasePersistence.unregisterListener(leftModelListener)[ FD ]
Line_10 $$ RecorderModelListener<Right> rightModelListener = new RecorderModelListener()-->Line_52 $$ rightModelListener.assertOnBeforeRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ FD ]
Line_4 $$ long rightPrimaryKey = 2-->Line_50 $$ Assert.assertFalse(_tableMapperImpl.deleteTableMapping(leftPrimaryKey, rightPrimaryKey))[ FD ]
Line_20 $$ leftModelListener = new RecorderModelListener()-->Line_42 $$ _leftBasePersistence.unregisterListener(leftModelListener)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_44 $$ leftModelListener = new RecorderModelListener()[ CD ]
Line_10 $$ RecorderModelListener<Right> rightModelListener = new RecorderModelListener()-->Line_11 $$ _rightBasePersistence.registerListener(rightModelListener)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_21 $$ _leftBasePersistence.registerListener(leftModelListener)[ CD ]
Line_20 $$ leftModelListener = new RecorderModelListener()-->Line_51 $$ leftModelListener.assertOnBeforeRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ FD ]
Line_20 $$ leftModelListener = new RecorderModelListener()-->Line_53 $$ leftModelListener.assertOnAfterRemoveAssociation(false, null, null, null)[ FD ]
Line_44 $$ leftModelListener = new RecorderModelListener()-->Line_51 $$ leftModelListener.assertOnBeforeRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ FD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_51 $$ leftModelListener.assertOnBeforeRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ FD ]
Line_8 $$ RecorderModelListener<Left> leftModelListener = new RecorderModelListener()-->Line_21 $$ _leftBasePersistence.registerListener(leftModelListener)[ FD ]
Line_8 $$ RecorderModelListener<Left> leftModelListener = new RecorderModelListener()-->Line_51 $$ leftModelListener.assertOnBeforeRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_17 $$ rightModelListener.assertOnAfterRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ CD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_47 $$ _rightBasePersistence.registerListener(rightModelListener)[ CD ]
Line_10 $$ RecorderModelListener<Right> rightModelListener = new RecorderModelListener()-->Line_39 $$ rightModelListener.assertOnBeforeRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_7 $$ Assert.assertTrue(_tableMapperImpl.deleteTableMapping(leftPrimaryKey, rightPrimaryKey))[ CD ]
Line_4 $$ long rightPrimaryKey = 2-->Line_16 $$ leftModelListener.assertOnAfterRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_48 $$ PortalCache<Long, long[]> leftToRightPortalCache = _tableMapperImpl.leftToRightPortalCache[ CD ]
Line_8 $$ RecorderModelListener<Left> leftModelListener = new RecorderModelListener()-->Line_40 $$ leftModelListener.assertOnAfterRemoveAssociation(false, null, null, null)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_38 $$ leftModelListener.assertOnBeforeRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ CD ]
Line_22 $$ rightModelListener = new RecorderModelListener()-->Line_54 $$ rightModelListener.assertOnAfterRemoveAssociation(false, null, null, null)[ FD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_16 $$ leftModelListener.assertOnAfterRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ FD ]
Line_20 $$ leftModelListener = new RecorderModelListener()-->Line_44 $$ leftModelListener = new RecorderModelListener()[ FD ]
Line_4 $$ long rightPrimaryKey = 2-->Line_51 $$ leftModelListener.assertOnBeforeRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_51 $$ leftModelListener.assertOnBeforeRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ CD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_15 $$ rightModelListener.assertOnBeforeRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ CD ]
Line_8 $$ RecorderModelListener<Left> leftModelListener = new RecorderModelListener()-->Line_20 $$ leftModelListener = new RecorderModelListener()[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_45 $$ _leftBasePersistence.registerListener(leftModelListener)[ CD ]
Line_44 $$ leftModelListener = new RecorderModelListener()-->Line_45 $$ _leftBasePersistence.registerListener(leftModelListener)[ FD ]
Line_46 $$ rightModelListener = new RecorderModelListener()-->Line_47 $$ _rightBasePersistence.registerListener(rightModelListener)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_25 $$ MockDeleteMappingSqlUpdate mockDeleteSqlUpdate = (MockDeleteMappingSqlUpdate) _tableMapperImpl.deleteTableMappingSqlUpdate[ CD ]
Line_22 $$ rightModelListener = new RecorderModelListener()-->Line_46 $$ rightModelListener = new RecorderModelListener()[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_12 $$ _mappingStore.put(leftPrimaryKey, new long[] [ CD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_6 $$ _mappingStore.put(leftPrimaryKey, new long[] [ FD ]
Line_10 $$ RecorderModelListener<Right> rightModelListener = new RecorderModelListener()-->Line_46 $$ rightModelListener = new RecorderModelListener()[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_42 $$ _leftBasePersistence.unregisterListener(leftModelListener)[ CD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_10 $$ RecorderModelListener<Right> rightModelListener = new RecorderModelListener()[ CD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_18 $$ _leftBasePersistence.unregisterListener(leftModelListener)[ CD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_6 $$ _mappingStore.put(leftPrimaryKey, new long[] [ CD ]
Line_10 $$ RecorderModelListener<Right> rightModelListener = new RecorderModelListener()-->Line_47 $$ _rightBasePersistence.registerListener(rightModelListener)[ FD ]
Line_48 $$ PortalCache<Long, long[]> leftToRightPortalCache = _tableMapperImpl.leftToRightPortalCache-->Line_49 $$ leftToRightPortalCache.put(leftPrimaryKey, new long[] [ FD ]
Line_4 $$ long rightPrimaryKey = 2-->Line_15 $$ rightModelListener.assertOnBeforeRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ FD ]
Line_22 $$ rightModelListener = new RecorderModelListener()-->Line_47 $$ _rightBasePersistence.registerListener(rightModelListener)[ FD ]
Line_4 $$ long rightPrimaryKey = 2-->Line_52 $$ rightModelListener.assertOnBeforeRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ FD ]
Line_22 $$ rightModelListener = new RecorderModelListener()-->Line_52 $$ rightModelListener.assertOnBeforeRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_40 $$ leftModelListener.assertOnAfterRemoveAssociation(false, null, null, null)[ CD ]
Line_4 $$ long rightPrimaryKey = 2-->Line_14 $$ leftModelListener.assertOnBeforeRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_19 $$ _rightBasePersistence.unregisterListener(rightModelListener)[ CD ]
Line_10 $$ RecorderModelListener<Right> rightModelListener = new RecorderModelListener()-->Line_23 $$ _rightBasePersistence.registerListener(rightModelListener)[ FD ]
Line_8 $$ RecorderModelListener<Left> leftModelListener = new RecorderModelListener()-->Line_45 $$ _leftBasePersistence.registerListener(leftModelListener)[ FD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_49 $$ leftToRightPortalCache.put(leftPrimaryKey, new long[] [ FD ]
Line_44 $$ leftModelListener = new RecorderModelListener()-->Line_55 $$ _leftBasePersistence.unregisterListener(leftModelListener)[ FD ]
Line_22 $$ rightModelListener = new RecorderModelListener()-->Line_23 $$ _rightBasePersistence.registerListener(rightModelListener)[ FD ]
Line_46 $$ rightModelListener = new RecorderModelListener()-->Line_56 $$ _rightBasePersistence.unregisterListener(rightModelListener)[ FD ]
Line_10 $$ RecorderModelListener<Right> rightModelListener = new RecorderModelListener()-->Line_41 $$ rightModelListener.assertOnAfterRemoveAssociation(false, null, null, null)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_50 $$ Assert.assertFalse(_tableMapperImpl.deleteTableMapping(leftPrimaryKey, rightPrimaryKey))[ CD ]
Line_3 $$ long leftPrimaryKey = 1-->Line_28 $$ _tableMapperImpl.deleteTableMapping(leftPrimaryKey, rightPrimaryKey)[ FD ]
Line_22 $$ rightModelListener = new RecorderModelListener()-->Line_41 $$ rightModelListener.assertOnAfterRemoveAssociation(false, null, null, null)[ FD ]
Line_22 $$ rightModelListener = new RecorderModelListener()-->Line_39 $$ rightModelListener.assertOnBeforeRemoveAssociation(true, rightPrimaryKey, Left.class.getName(), leftPrimaryKey)[ FD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_26 $$ mockDeleteSqlUpdate.setDatabaseError(true)[ CD ]
Line_2 $$ public void testDeleteTableMapping() -->Line_14 $$ leftModelListener.assertOnBeforeRemoveAssociation(true, leftPrimaryKey, Right.class.getName(), rightPrimaryKey)[ CD ]
Line_31 $$ Throwable cause = se.getCause()-->Line_32 $$ Assert.assertSame(RuntimeException.class, cause.getClass())[ FD ]
