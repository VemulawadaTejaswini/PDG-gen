Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))-->Line_46 $$ applied = true[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))[ FD ]
Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_20 $$ applied = applyCacheRegionHint((String) value)[ FD ]
Line_10 $$ applied = applyTimeoutHint(timeout)-->Line_55 $$ applied = false[ FD ]
Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))-->Line_58 $$ applied = false[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_51 $$ final LockMode lockMode = LockModeTypeHelper.interpretLockMode(value)[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_61 $$ if (value instanceof EntityGraphImpl) [ FD ]
Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_46 $$ applied = true[ FD ]
Line_73 $$ if (applied) -->Line_74 $$ if (hints == null) [ CD ]
Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))-->Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_47 $$ if (hintName.startsWith(AvailableSettings.ALIAS_SPECIFIC_LOCK_MODE)) [ FD ]
Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))-->Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_15 $$ if (HINT_FETCH_SIZE.equals(hintName)) -->Line_17 $$ if (HINT_CACHEABLE.equals(hintName)) [ CD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_79 $$ LOG.debugf("Skipping unsupported query hint [%s]", hintName)[ FD ]
Line_4 $$ boolean applied = false-->Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))[ FD ]
Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))-->Line_66 $$ applied = true[ FD ]
Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))[ FD ]
Line_49 $$ final String alias = hintName.substring(AvailableSettings.ALIAS_SPECIFIC_LOCK_MODE.length() + 1)-->Line_52 $$ applyAliasSpecificLockModeHint(alias, lockMode)[ FD ]
Line_55 $$ applied = false-->Line_58 $$ applied = false[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_64 $$ LOG.warnf("The %s hint was set, but the value was not an EntityGraph!", hintName)[ FD ]
Line_39 $$ if (LockMode.class.isInstance(value)) -->Line_40 $$ internalApplyLockMode(LockModeTypeHelper.getLockModeType((LockMode) value))[ CD ]
Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))[ FD ]
Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))[ FD ]
Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))-->Line_66 $$ applied = true[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_19 $$ if (HINT_CACHE_REGION.equals(hintName)) [ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_49 $$ final String alias = hintName.substring(AvailableSettings.ALIAS_SPECIFIC_LOCK_MODE.length() + 1)[ FD ]
Line_10 $$ applied = applyTimeoutHint(timeout)-->Line_46 $$ applied = true[ FD ]
Line_4 $$ boolean applied = false-->Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))[ FD ]
Line_48 $$ if (canApplyAliasSpecificLockModeHints()) -->Line_49 $$ final String alias = hintName.substring(AvailableSettings.ALIAS_SPECIFIC_LOCK_MODE.length() + 1)[ CD ]
Line_20 $$ applied = applyCacheRegionHint((String) value)-->Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))[ FD ]
Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))[ FD ]
Line_4 $$ boolean applied = false-->Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))[ FD ]
Line_39 $$ if (LockMode.class.isInstance(value)) -->Line_41 $$ if (LockModeType.class.isInstance(value)) [ CD ]
Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))-->Line_66 $$ applied = true[ FD ]
Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))[ FD ]
Line_8 $$ if (SPEC_HINT_TIMEOUT.equals(hintName)) -->Line_10 $$ applied = applyTimeoutHint(timeout)[ CD ]
Line_14 $$ applied = applyCommentHint((String) value)-->Line_20 $$ applied = applyCacheRegionHint((String) value)[ FD ]
Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_20 $$ applied = applyCacheRegionHint((String) value)[ FD ]
Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))-->Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))[ FD ]
Line_60 $$ if (HINT_FETCHGRAPH.equals(hintName) || HINT_LOADGRAPH.equals(hintName)) -->Line_61 $$ if (value instanceof EntityGraphImpl) [ CD ]
Line_11 $$ if (AvailableSettings.LOCK_TIMEOUT.equals(hintName)) -->Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))[ CD ]
Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))-->Line_66 $$ applied = true[ FD ]
Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))-->Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))[ FD ]
Line_6 $$ if (HINT_TIMEOUT.equals(hintName)) -->Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))[ CD ]
Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_66 $$ applied = true[ FD ]
Line_27 $$ if (AvailableSettings.SHARED_CACHE_RETRIEVE_MODE.equals(hintName)) -->Line_29 $$ final CacheStoreMode storeMode = getHint(AvailableSettings.SHARED_CACHE_STORE_MODE, CacheStoreMode.class)[ CD ]
Line_27 $$ if (AvailableSettings.SHARED_CACHE_RETRIEVE_MODE.equals(hintName)) -->Line_31 $$ if (AvailableSettings.SHARED_CACHE_STORE_MODE.equals(hintName)) [ CD ]
Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))[ FD ]
Line_4 $$ boolean applied = false-->Line_10 $$ applied = applyTimeoutHint(timeout)[ FD ]
Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))-->Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))[ FD ]
Line_58 $$ applied = false-->Line_66 $$ applied = true[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_21 $$ if (HINT_READONLY.equals(hintName)) [ FD ]
Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_10 $$ applied = applyTimeoutHint(timeout)[ FD ]
Line_48 $$ if (canApplyAliasSpecificLockModeHints()) -->Line_58 $$ applied = false[ CD ]
Line_4 $$ boolean applied = false-->Line_46 $$ applied = true[ FD ]
Line_28 $$ final CacheRetrieveMode retrieveMode = value != null ? CacheRetrieveMode.valueOf(value.toString()) : null-->Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_11 $$ if (AvailableSettings.LOCK_TIMEOUT.equals(hintName)) [ FD ]
Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))[ FD ]
Line_47 $$ if (hintName.startsWith(AvailableSettings.ALIAS_SPECIFIC_LOCK_MODE)) -->Line_48 $$ if (canApplyAliasSpecificLockModeHints()) [ CD ]
Line_27 $$ if (AvailableSettings.SHARED_CACHE_RETRIEVE_MODE.equals(hintName)) -->Line_28 $$ final CacheRetrieveMode retrieveMode = value != null ? CacheRetrieveMode.valueOf(value.toString()) : null[ CD ]
Line_4 $$ boolean applied = false-->Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))[ FD ]
Line_27 $$ if (AvailableSettings.SHARED_CACHE_RETRIEVE_MODE.equals(hintName)) -->Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ CD ]
Line_47 $$ if (hintName.startsWith(AvailableSettings.ALIAS_SPECIFIC_LOCK_MODE)) -->Line_60 $$ if (HINT_FETCHGRAPH.equals(hintName) || HINT_LOADGRAPH.equals(hintName)) [ CD ]
Line_14 $$ applied = applyCommentHint((String) value)-->Line_66 $$ applied = true[ FD ]
Line_14 $$ applied = applyCommentHint((String) value)-->Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))[ FD ]
Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))[ FD ]
Line_35 $$ if (QueryHints.HINT_NATIVE_LOCKMODE.equals(hintName)) -->Line_36 $$ if (!isNativeSqlQuery()) [ CD ]
Line_20 $$ applied = applyCacheRegionHint((String) value)-->Line_58 $$ applied = false[ FD ]
Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))-->Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_35 $$ if (QueryHints.HINT_NATIVE_LOCKMODE.equals(hintName)) [ FD ]
Line_4 $$ boolean applied = false-->Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_54 $$ LOG.unableToDetermineLockModeValue(hintName, value)[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_17 $$ if (HINT_CACHEABLE.equals(hintName)) [ FD ]
Line_31 $$ if (AvailableSettings.SHARED_CACHE_STORE_MODE.equals(hintName)) -->Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ CD ]
Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))-->Line_55 $$ applied = false[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_41 $$ if (LockModeType.class.isInstance(value)) [ FD ]
Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))-->Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))[ FD ]
Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))-->Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_14 $$ applied = applyCommentHint((String) value)-->Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))[ FD ]
Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))-->Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))[ FD ]
Line_14 $$ applied = applyCommentHint((String) value)-->Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))[ FD ]
Line_14 $$ applied = applyCommentHint((String) value)-->Line_46 $$ applied = true[ FD ]
Line_20 $$ applied = applyCacheRegionHint((String) value)-->Line_46 $$ applied = true[ FD ]
Line_8 $$ if (SPEC_HINT_TIMEOUT.equals(hintName)) -->Line_9 $$ int timeout = (int) Math.round(ConfigurationHelper.getInteger(value).doubleValue() / 1000.0)[ CD ]
Line_20 $$ applied = applyCacheRegionHint((String) value)-->Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_20 $$ applied = applyCacheRegionHint((String) value)-->Line_55 $$ applied = false[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_8 $$ if (SPEC_HINT_TIMEOUT.equals(hintName)) [ FD ]
Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_46 $$ applied = true[ FD ]
Line_25 $$ if (HINT_FLUSH_MODE.equals(hintName)) -->Line_27 $$ if (AvailableSettings.SHARED_CACHE_RETRIEVE_MODE.equals(hintName)) [ CD ]
Line_10 $$ applied = applyTimeoutHint(timeout)-->Line_14 $$ applied = applyCommentHint((String) value)[ FD ]
Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))-->Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_39 $$ if (LockMode.class.isInstance(value)) [ FD ]
Line_10 $$ applied = applyTimeoutHint(timeout)-->Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))[ FD ]
Line_4 $$ boolean applied = false-->Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))[ FD ]
Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))-->Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))[ FD ]
Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))-->Line_58 $$ applied = false[ FD ]
Line_10 $$ applied = applyTimeoutHint(timeout)-->Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))[ FD ]
Line_10 $$ applied = applyTimeoutHint(timeout)-->Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))[ FD ]
Line_20 $$ applied = applyCacheRegionHint((String) value)-->Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))[ FD ]
Line_15 $$ if (HINT_FETCH_SIZE.equals(hintName)) -->Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))[ CD ]
Line_28 $$ final CacheRetrieveMode retrieveMode = value != null ? CacheRetrieveMode.valueOf(value.toString()) : null-->Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_23 $$ if (HINT_CACHE_MODE.equals(hintName)) -->Line_25 $$ if (HINT_FLUSH_MODE.equals(hintName)) [ CD ]
Line_10 $$ applied = applyTimeoutHint(timeout)-->Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_25 $$ if (HINT_FLUSH_MODE.equals(hintName)) -->Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))[ CD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_81 $$ return this[ CD ]
Line_9 $$ int timeout = (int) Math.round(ConfigurationHelper.getInteger(value).doubleValue() / 1000.0)-->Line_10 $$ applied = applyTimeoutHint(timeout)[ FD ]
Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_73 $$ if (applied) [ CD ]
Line_4 $$ boolean applied = false-->Line_66 $$ applied = true[ FD ]
Line_4 $$ boolean applied = false-->Line_14 $$ applied = applyCommentHint((String) value)[ FD ]
Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))-->Line_55 $$ applied = false[ FD ]
Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))-->Line_46 $$ applied = true[ FD ]
Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))-->Line_66 $$ applied = true[ FD ]
Line_73 $$ if (applied) -->Line_79 $$ LOG.debugf("Skipping unsupported query hint [%s]", hintName)[ CD ]
Line_10 $$ applied = applyTimeoutHint(timeout)-->Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))[ FD ]
Line_10 $$ applied = applyTimeoutHint(timeout)-->Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))[ FD ]
Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))-->Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_31 $$ if (AvailableSettings.SHARED_CACHE_STORE_MODE.equals(hintName)) [ FD ]
Line_41 $$ if (LockModeType.class.isInstance(value)) -->Line_42 $$ internalApplyLockMode((LockModeType) value)[ CD ]
Line_55 $$ applied = false-->Line_66 $$ applied = true[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_13 $$ if (HINT_COMMENT.equals(hintName)) [ FD ]
Line_19 $$ if (HINT_CACHE_REGION.equals(hintName)) -->Line_21 $$ if (HINT_READONLY.equals(hintName)) [ CD ]
Line_21 $$ if (HINT_READONLY.equals(hintName)) -->Line_23 $$ if (HINT_CACHE_MODE.equals(hintName)) [ CD ]
Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))-->Line_46 $$ applied = true[ FD ]
Line_51 $$ final LockMode lockMode = LockModeTypeHelper.interpretLockMode(value)-->Line_52 $$ applyAliasSpecificLockModeHint(alias, lockMode)[ FD ]
Line_20 $$ applied = applyCacheRegionHint((String) value)-->Line_66 $$ applied = true[ FD ]
Line_73 $$ if (applied) -->Line_77 $$ hints.put(hintName, value)[ CD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_28 $$ final CacheRetrieveMode retrieveMode = value != null ? CacheRetrieveMode.valueOf(value.toString()) : null[ FD ]
Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))-->Line_66 $$ applied = true[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_3 $$ checkOpen(true)[ CD ]
Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))-->Line_58 $$ applied = false[ FD ]
Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))-->Line_58 $$ applied = false[ FD ]
Line_4 $$ boolean applied = false-->Line_55 $$ applied = false[ FD ]
Line_8 $$ if (SPEC_HINT_TIMEOUT.equals(hintName)) -->Line_11 $$ if (AvailableSettings.LOCK_TIMEOUT.equals(hintName)) [ CD ]
Line_4 $$ boolean applied = false-->Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_29 $$ final CacheStoreMode storeMode = getHint(AvailableSettings.SHARED_CACHE_STORE_MODE, CacheStoreMode.class)-->Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_55 $$ applied = false[ FD ]
Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))-->Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_46 $$ applied = true-->Line_66 $$ applied = true[ FD ]
Line_23 $$ if (HINT_CACHE_MODE.equals(hintName)) -->Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))[ CD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_15 $$ if (HINT_FETCH_SIZE.equals(hintName)) [ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_32 $$ final CacheStoreMode storeMode = value != null ? CacheStoreMode.valueOf(value.toString()) : null[ FD ]
Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))-->Line_20 $$ applied = applyCacheRegionHint((String) value)[ FD ]
Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))-->Line_58 $$ applied = false[ FD ]
Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_58 $$ applied = false[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_27 $$ if (AvailableSettings.SHARED_CACHE_RETRIEVE_MODE.equals(hintName)) [ FD ]
Line_14 $$ applied = applyCommentHint((String) value)-->Line_55 $$ applied = false[ FD ]
Line_4 $$ boolean applied = false-->Line_20 $$ applied = applyCacheRegionHint((String) value)[ FD ]
Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))-->Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_9 $$ int timeout = (int) Math.round(ConfigurationHelper.getInteger(value).doubleValue() / 1000.0)[ FD ]
Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_14 $$ applied = applyCommentHint((String) value)[ FD ]
Line_17 $$ if (HINT_CACHEABLE.equals(hintName)) -->Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))[ CD ]
Line_46 $$ applied = true-->Line_55 $$ applied = false[ FD ]
Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))-->Line_58 $$ applied = false[ FD ]
Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))-->Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))[ FD ]
Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))-->Line_46 $$ applied = true[ FD ]
Line_31 $$ if (AvailableSettings.SHARED_CACHE_STORE_MODE.equals(hintName)) -->Line_33 $$ final CacheRetrieveMode retrieveMode = getHint(AvailableSettings.SHARED_CACHE_RETRIEVE_MODE, CacheRetrieveMode.class)[ CD ]
Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_58 $$ applied = false[ FD ]
Line_14 $$ applied = applyCommentHint((String) value)-->Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))[ FD ]
Line_20 $$ applied = applyCacheRegionHint((String) value)-->Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))[ FD ]
Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))-->Line_55 $$ applied = false[ FD ]
Line_17 $$ if (HINT_CACHEABLE.equals(hintName)) -->Line_19 $$ if (HINT_CACHE_REGION.equals(hintName)) [ CD ]
Line_19 $$ if (HINT_CACHE_REGION.equals(hintName)) -->Line_20 $$ applied = applyCacheRegionHint((String) value)[ CD ]
Line_10 $$ applied = applyTimeoutHint(timeout)-->Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))[ FD ]
Line_60 $$ if (HINT_FETCHGRAPH.equals(hintName) || HINT_LOADGRAPH.equals(hintName)) -->Line_66 $$ applied = true[ CD ]
Line_10 $$ applied = applyTimeoutHint(timeout)-->Line_58 $$ applied = false[ FD ]
Line_35 $$ if (QueryHints.HINT_NATIVE_LOCKMODE.equals(hintName)) -->Line_47 $$ if (hintName.startsWith(AvailableSettings.ALIAS_SPECIFIC_LOCK_MODE)) [ CD ]
Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))[ FD ]
Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))-->Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_25 $$ if (HINT_FLUSH_MODE.equals(hintName)) [ FD ]
Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_14 $$ applied = applyCommentHint((String) value)[ FD ]
Line_10 $$ applied = applyTimeoutHint(timeout)-->Line_20 $$ applied = applyCacheRegionHint((String) value)[ FD ]
Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_10 $$ applied = applyTimeoutHint(timeout)-->Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_35 $$ if (QueryHints.HINT_NATIVE_LOCKMODE.equals(hintName)) -->Line_46 $$ applied = true[ CD ]
Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))-->Line_55 $$ applied = false[ FD ]
Line_4 $$ boolean applied = false-->Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))[ FD ]
Line_11 $$ if (AvailableSettings.LOCK_TIMEOUT.equals(hintName)) -->Line_13 $$ if (HINT_COMMENT.equals(hintName)) [ CD ]
Line_6 $$ if (HINT_TIMEOUT.equals(hintName)) -->Line_8 $$ if (SPEC_HINT_TIMEOUT.equals(hintName)) [ CD ]
Line_14 $$ applied = applyCommentHint((String) value)-->Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_14 $$ applied = applyCommentHint((String) value)-->Line_58 $$ applied = false[ FD ]
Line_21 $$ if (HINT_READONLY.equals(hintName)) -->Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))[ CD ]
Line_61 $$ if (value instanceof EntityGraphImpl) -->Line_64 $$ LOG.warnf("The %s hint was set, but the value was not an EntityGraph!", hintName)[ CD ]
Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))-->Line_55 $$ applied = false[ FD ]
Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))-->Line_46 $$ applied = true[ FD ]
Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))-->Line_58 $$ applied = false[ FD ]
Line_14 $$ applied = applyCommentHint((String) value)-->Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))[ FD ]
Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))[ FD ]
Line_46 $$ applied = true-->Line_58 $$ applied = false[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_44 $$ throw new IllegalArgumentException(String.format("Native lock-mode hint [%s] must specify %s or %s.  Encountered type : %s", HINT_NATIVE_LOCKMODE, LockMode.class.getName(), LockModeType.class.getName(), value.getClass().getName()))[ FD ]
Line_13 $$ if (HINT_COMMENT.equals(hintName)) -->Line_14 $$ applied = applyCommentHint((String) value)[ CD ]
Line_31 $$ if (AvailableSettings.SHARED_CACHE_STORE_MODE.equals(hintName)) -->Line_35 $$ if (QueryHints.HINT_NATIVE_LOCKMODE.equals(hintName)) [ CD ]
Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))-->Line_46 $$ applied = true[ FD ]
Line_24 $$ applied = applyCacheModeHint(ConfigurationHelper.getCacheMode(value))-->Line_66 $$ applied = true[ FD ]
Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))-->Line_46 $$ applied = true[ FD ]
Line_60 $$ if (HINT_FETCHGRAPH.equals(hintName) || HINT_LOADGRAPH.equals(hintName)) -->Line_68 $$ LOG.ignoringUnrecognizedQueryHint(hintName)[ CD ]
Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))-->Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_4 $$ boolean applied = false-->Line_58 $$ applied = false[ FD ]
Line_12 $$ applied = applyLockTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_68 $$ LOG.ignoringUnrecognizedQueryHint(hintName)[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_6 $$ if (HINT_TIMEOUT.equals(hintName)) [ FD ]
Line_14 $$ applied = applyCommentHint((String) value)-->Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_4 $$ boolean applied = false[ CD ]
Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))-->Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))[ FD ]
Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_66 $$ applied = true[ FD ]
Line_35 $$ if (QueryHints.HINT_NATIVE_LOCKMODE.equals(hintName)) -->Line_39 $$ if (LockMode.class.isInstance(value)) [ CD ]
Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))-->Line_20 $$ applied = applyCacheRegionHint((String) value)[ FD ]
Line_4 $$ boolean applied = false-->Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))-->Line_55 $$ applied = false[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_60 $$ if (HINT_FETCHGRAPH.equals(hintName) || HINT_LOADGRAPH.equals(hintName)) [ FD ]
Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))-->Line_55 $$ applied = false[ FD ]
Line_29 $$ final CacheStoreMode storeMode = getHint(AvailableSettings.SHARED_CACHE_STORE_MODE, CacheStoreMode.class)-->Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))-->Line_55 $$ applied = false[ FD ]
Line_18 $$ applied = applyCacheableHint(ConfigurationHelper.getBoolean(value))-->Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_20 $$ applied = applyCacheRegionHint((String) value)-->Line_26 $$ applied = applyFlushModeHint(ConfigurationHelper.getFlushMode(value))[ FD ]
Line_22 $$ applied = applyReadOnlyHint(ConfigurationHelper.getBoolean(value))-->Line_30 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_23 $$ if (HINT_CACHE_MODE.equals(hintName)) [ FD ]
Line_13 $$ if (HINT_COMMENT.equals(hintName)) -->Line_15 $$ if (HINT_FETCH_SIZE.equals(hintName)) [ CD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_77 $$ hints.put(hintName, value)[ FD ]
Line_10 $$ applied = applyTimeoutHint(timeout)-->Line_66 $$ applied = true[ FD ]
Line_2 $$ public BaseQueryImpl setHint(String hintName, Object value) -->Line_7 $$ applied = applyTimeoutHint(ConfigurationHelper.getInteger(value))[ FD ]
Line_16 $$ applied = applyFetchSizeHint(ConfigurationHelper.getInteger(value))-->Line_34 $$ applied = applyCacheModeHint(CacheModeHelper.interpretCacheMode(storeMode, retrieveMode))[ FD ]
