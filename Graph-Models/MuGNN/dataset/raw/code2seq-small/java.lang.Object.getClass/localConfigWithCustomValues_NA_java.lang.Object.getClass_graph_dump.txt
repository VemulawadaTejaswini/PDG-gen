Line_2 $$ public void localConfigWithCustomValues() throws Exception -->Line_8 $$ assertEquals("transactionManager", "txMgr", cfg.getTransactionManager())[ CD ]
Line_2 $$ public void localConfigWithCustomValues() throws Exception -->Line_13 $$ assertEquals("blockCommentStartDelimiter", "<<", cfg.getBlockCommentStartDelimiter())[ CD ]
Line_5 $$ MergedSqlConfig cfg = new MergedSqlConfig(localSqlConfig, getClass())-->Line_7 $$ assertEquals("dataSource", "ds", cfg.getDataSource())[ FD ]
Line_2 $$ public void localConfigWithCustomValues() throws Exception -->Line_3 $$ Method method = getClass().getMethod("localConfigMethodWithCustomValues")[ CD ]
Line_2 $$ public void localConfigWithCustomValues() throws Exception -->Line_9 $$ assertEquals("transactionMode", ISOLATED, cfg.getTransactionMode())[ CD ]
Line_5 $$ MergedSqlConfig cfg = new MergedSqlConfig(localSqlConfig, getClass())-->Line_10 $$ assertEquals("encoding", "enigma", cfg.getEncoding())[ FD ]
Line_2 $$ public void localConfigWithCustomValues() throws Exception -->Line_15 $$ assertEquals("errorMode", IGNORE_FAILED_DROPS, cfg.getErrorMode())[ CD ]
Line_5 $$ MergedSqlConfig cfg = new MergedSqlConfig(localSqlConfig, getClass())-->Line_8 $$ assertEquals("transactionManager", "txMgr", cfg.getTransactionManager())[ FD ]
Line_5 $$ MergedSqlConfig cfg = new MergedSqlConfig(localSqlConfig, getClass())-->Line_11 $$ assertEquals("separator", "\n", cfg.getSeparator())[ FD ]
Line_2 $$ public void localConfigWithCustomValues() throws Exception -->Line_10 $$ assertEquals("encoding", "enigma", cfg.getEncoding())[ CD ]
Line_2 $$ public void localConfigWithCustomValues() throws Exception -->Line_4 $$ SqlConfig localSqlConfig = method.getAnnotation(Sql.class).config()[ CD ]
Line_3 $$ Method method = getClass().getMethod("localConfigMethodWithCustomValues")-->Line_4 $$ SqlConfig localSqlConfig = method.getAnnotation(Sql.class).config()[ FD ]
Line_2 $$ public void localConfigWithCustomValues() throws Exception -->Line_14 $$ assertEquals("blockCommentEndDelimiter", ">>", cfg.getBlockCommentEndDelimiter())[ CD ]
Line_2 $$ public void localConfigWithCustomValues() throws Exception -->Line_6 $$ assertNotNull(cfg)[ CD ]
Line_5 $$ MergedSqlConfig cfg = new MergedSqlConfig(localSqlConfig, getClass())-->Line_12 $$ assertEquals("commentPrefix", "`", cfg.getCommentPrefix())[ FD ]
Line_2 $$ public void localConfigWithCustomValues() throws Exception -->Line_12 $$ assertEquals("commentPrefix", "`", cfg.getCommentPrefix())[ CD ]
Line_2 $$ public void localConfigWithCustomValues() throws Exception -->Line_5 $$ MergedSqlConfig cfg = new MergedSqlConfig(localSqlConfig, getClass())[ CD ]
Line_2 $$ public void localConfigWithCustomValues() throws Exception -->Line_11 $$ assertEquals("separator", "\n", cfg.getSeparator())[ CD ]
Line_5 $$ MergedSqlConfig cfg = new MergedSqlConfig(localSqlConfig, getClass())-->Line_13 $$ assertEquals("blockCommentStartDelimiter", "<<", cfg.getBlockCommentStartDelimiter())[ FD ]
Line_5 $$ MergedSqlConfig cfg = new MergedSqlConfig(localSqlConfig, getClass())-->Line_6 $$ assertNotNull(cfg)[ FD ]
Line_5 $$ MergedSqlConfig cfg = new MergedSqlConfig(localSqlConfig, getClass())-->Line_14 $$ assertEquals("blockCommentEndDelimiter", ">>", cfg.getBlockCommentEndDelimiter())[ FD ]
Line_5 $$ MergedSqlConfig cfg = new MergedSqlConfig(localSqlConfig, getClass())-->Line_15 $$ assertEquals("errorMode", IGNORE_FAILED_DROPS, cfg.getErrorMode())[ FD ]
Line_5 $$ MergedSqlConfig cfg = new MergedSqlConfig(localSqlConfig, getClass())-->Line_9 $$ assertEquals("transactionMode", ISOLATED, cfg.getTransactionMode())[ FD ]
Line_2 $$ public void localConfigWithCustomValues() throws Exception -->Line_7 $$ assertEquals("dataSource", "ds", cfg.getDataSource())[ CD ]
