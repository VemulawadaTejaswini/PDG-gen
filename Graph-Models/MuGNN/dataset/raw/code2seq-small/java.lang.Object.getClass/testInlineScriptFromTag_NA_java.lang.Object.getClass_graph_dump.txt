Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-with-xsd.xml", getClass())-->Line_4 $$ BeanDefinition bd = ctx.getBeanFactory().getBeanDefinition("calculator")[ FD ]
Line_6 $$ Calculator calculator = (Calculator) ctx.getBean("calculator")-->Line_7 $$ assertNotNull(calculator)[ FD ]
Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-with-xsd.xml", getClass())-->Line_6 $$ Calculator calculator = (Calculator) ctx.getBean("calculator")[ FD ]
Line_2 $$ public void testInlineScriptFromTag() throws Exception -->Line_4 $$ BeanDefinition bd = ctx.getBeanFactory().getBeanDefinition("calculator")[ CD ]
Line_2 $$ public void testInlineScriptFromTag() throws Exception -->Line_7 $$ assertNotNull(calculator)[ CD ]
Line_4 $$ BeanDefinition bd = ctx.getBeanFactory().getBeanDefinition("calculator")-->Line_5 $$ assertTrue(ObjectUtils.containsElement(bd.getDependsOn(), "messenger"))[ FD ]
Line_2 $$ public void testInlineScriptFromTag() throws Exception -->Line_6 $$ Calculator calculator = (Calculator) ctx.getBean("calculator")[ CD ]
Line_2 $$ public void testInlineScriptFromTag() throws Exception -->Line_5 $$ assertTrue(ObjectUtils.containsElement(bd.getDependsOn(), "messenger"))[ CD ]
Line_2 $$ public void testInlineScriptFromTag() throws Exception -->Line_3 $$ ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-with-xsd.xml", getClass())[ CD ]
Line_2 $$ public void testInlineScriptFromTag() throws Exception -->Line_8 $$ assertFalse(calculator instanceof Refreshable)[ CD ]
