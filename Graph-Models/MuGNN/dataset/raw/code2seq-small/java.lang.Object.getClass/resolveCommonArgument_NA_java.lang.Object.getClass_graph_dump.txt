Line_5 $$ Object value = argumentResolver.resolveArgument(methodParameter, webRequest)-->Line_14 $$ throw new IllegalStateException("Standard argument type [" + paramType.getName() + "] resolved to incompatible value of type [" + (value != null ? value.getClass() : null) + "]. Consider declaring the argument type in a less specific fashion.")[ FD ]
Line_2 $$ protected Object resolveCommonArgument(MethodParameter methodParameter, NativeWebRequest webRequest, Exception thrownException) throws Exception -->Line_13 $$ if (value != WebArgumentResolver.UNRESOLVED && !ClassUtils.isAssignableValue(paramType, value)) [ CD ]
Line_2 $$ protected Object resolveCommonArgument(MethodParameter methodParameter, NativeWebRequest webRequest, Exception thrownException) throws Exception -->Line_3 $$ if (this.customArgumentResolvers != null) [ CD ]
Line_2 $$ protected Object resolveCommonArgument(MethodParameter methodParameter, NativeWebRequest webRequest, Exception thrownException) throws Exception -->Line_16 $$ return value[ CD ]
Line_6 $$ if (value != WebArgumentResolver.UNRESOLVED) -->Line_7 $$ return value[ CD ]
Line_11 $$ Class<?> paramType = methodParameter.getParameterType()-->Line_13 $$ if (value != WebArgumentResolver.UNRESOLVED && !ClassUtils.isAssignableValue(paramType, value)) [ FD ]
Line_2 $$ protected Object resolveCommonArgument(MethodParameter methodParameter, NativeWebRequest webRequest, Exception thrownException) throws Exception -->Line_12 $$ Object value = resolveStandardArgument(paramType, webRequest, thrownException)[ FD ]
Line_11 $$ Class<?> paramType = methodParameter.getParameterType()-->Line_12 $$ Object value = resolveStandardArgument(paramType, webRequest, thrownException)[ FD ]
Line_11 $$ Class<?> paramType = methodParameter.getParameterType()-->Line_14 $$ throw new IllegalStateException("Standard argument type [" + paramType.getName() + "] resolved to incompatible value of type [" + (value != null ? value.getClass() : null) + "]. Consider declaring the argument type in a less specific fashion.")[ FD ]
Line_2 $$ protected Object resolveCommonArgument(MethodParameter methodParameter, NativeWebRequest webRequest, Exception thrownException) throws Exception -->Line_5 $$ Object value = argumentResolver.resolveArgument(methodParameter, webRequest)[ FD ]
Line_2 $$ protected Object resolveCommonArgument(MethodParameter methodParameter, NativeWebRequest webRequest, Exception thrownException) throws Exception -->Line_12 $$ Object value = resolveStandardArgument(paramType, webRequest, thrownException)[ CD ]
Line_2 $$ protected Object resolveCommonArgument(MethodParameter methodParameter, NativeWebRequest webRequest, Exception thrownException) throws Exception -->Line_11 $$ Class<?> paramType = methodParameter.getParameterType()[ FD ]
Line_2 $$ protected Object resolveCommonArgument(MethodParameter methodParameter, NativeWebRequest webRequest, Exception thrownException) throws Exception -->Line_11 $$ Class<?> paramType = methodParameter.getParameterType()[ CD ]
Line_4 $$ for (WebArgumentResolver argumentResolver : this.customArgumentResolvers) -->Line_5 $$ Object value = argumentResolver.resolveArgument(methodParameter, webRequest)[ FD ]
Line_5 $$ Object value = argumentResolver.resolveArgument(methodParameter, webRequest)-->Line_6 $$ if (value != WebArgumentResolver.UNRESOLVED) [ FD ]
Line_5 $$ Object value = argumentResolver.resolveArgument(methodParameter, webRequest)-->Line_13 $$ if (value != WebArgumentResolver.UNRESOLVED && !ClassUtils.isAssignableValue(paramType, value)) [ FD ]
