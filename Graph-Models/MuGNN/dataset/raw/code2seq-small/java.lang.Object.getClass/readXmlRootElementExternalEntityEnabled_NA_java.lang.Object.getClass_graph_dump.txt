Line_6 $$ Jaxb2CollectionHttpMessageConverter<?> c = new Jaxb2CollectionHttpMessageConverter<Collection<Object>>() -->Line_13 $$ Collection<RootElement> result = c.read(rootElementListType, null, inputMessage)[ FD ]
Line_2 $$ public void readXmlRootElementExternalEntityEnabled() throws Exception -->Line_15 $$ assertEquals("Foo Bar", result.iterator().next().external)[ CD ]
Line_2 $$ public void readXmlRootElementExternalEntityEnabled() throws Exception -->Line_13 $$ Collection<RootElement> result = c.read(rootElementListType, null, inputMessage)[ CD ]
Line_5 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(content.getBytes("UTF-8"))-->Line_13 $$ Collection<RootElement> result = c.read(rootElementListType, null, inputMessage)[ FD ]
Line_2 $$ public void readXmlRootElementExternalEntityEnabled() throws Exception -->Line_5 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(content.getBytes("UTF-8"))[ CD ]
Line_2 $$ public void readXmlRootElementExternalEntityEnabled() throws Exception -->Line_6 $$ Jaxb2CollectionHttpMessageConverter<?> c = new Jaxb2CollectionHttpMessageConverter<Collection<Object>>() [ CD ]
Line_6 $$ Jaxb2CollectionHttpMessageConverter<?> c = new Jaxb2CollectionHttpMessageConverter<Collection<Object>>() -->Line_8 $$ XMLInputFactory inputFactory = XMLInputFactory.newInstance()[ CD ]
Line_2 $$ public void readXmlRootElementExternalEntityEnabled() throws Exception -->Line_14 $$ assertEquals(1, result.size())[ CD ]
Line_2 $$ public void readXmlRootElementExternalEntityEnabled() throws Exception -->Line_3 $$ Resource external = new ClassPathResource("external.txt", getClass())[ CD ]
Line_6 $$ Jaxb2CollectionHttpMessageConverter<?> c = new Jaxb2CollectionHttpMessageConverter<Collection<Object>>() -->Line_9 $$ inputFactory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true)[ CD ]
Line_3 $$ Resource external = new ClassPathResource("external.txt", getClass())-->Line_4 $$ String content = "<!DOCTYPE root [" + "  <!ELEMENT external ANY >\n" + "  <!ENTITY ext SYSTEM \"" + external.getURI() + "\" >]>" + "  <list><rootElement><type s=\"1\"/><external>&ext;</external></rootElement></list>"[ FD ]
Line_2 $$ public void readXmlRootElementExternalEntityEnabled() throws Exception -->Line_4 $$ String content = "<!DOCTYPE root [" + "  <!ELEMENT external ANY >\n" + "  <!ENTITY ext SYSTEM \"" + external.getURI() + "\" >]>" + "  <list><rootElement><type s=\"1\"/><external>&ext;</external></rootElement></list>"[ CD ]
Line_8 $$ XMLInputFactory inputFactory = XMLInputFactory.newInstance()-->Line_9 $$ inputFactory.setProperty(XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES, true)[ FD ]
Line_6 $$ Jaxb2CollectionHttpMessageConverter<?> c = new Jaxb2CollectionHttpMessageConverter<Collection<Object>>() -->Line_10 $$ return inputFactory[ CD ]
Line_4 $$ String content = "<!DOCTYPE root [" + "  <!ELEMENT external ANY >\n" + "  <!ENTITY ext SYSTEM \"" + external.getURI() + "\" >]>" + "  <list><rootElement><type s=\"1\"/><external>&ext;</external></rootElement></list>"-->Line_5 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(content.getBytes("UTF-8"))[ FD ]
