Line_8 $$ Employment emp = new Employment(gavin, jboss, "AU")-->Line_22 $$ assertEquals(emp2.getEndDate(), emp.getEndDate())[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_97 $$ t.commit()[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_45 $$ assertClassAssignability(Employment.class, o[1].getClass())[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_27 $$ assertTrue(m.containsKey("Employment"))[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_77 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ CD ]
Line_16 $$ t = s.beginTransaction()-->Line_71 $$ t.commit()[ FD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_34 $$ assertEquals(1, list.size())[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_98 $$ s.close()[ CD ]
Line_48 $$ list = queryWithCollection.list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_15 $$ s = openSession()-->Line_82 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_74 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_10 $$ Serializable orgId2 = s.save(ifa)[ CD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_34 $$ assertEquals(1, list.size())[ FD ]
Line_83 $$ SpaceShip enterprise = new SpaceShip()-->Line_96 $$ s.delete(enterprise)[ FD ]
Line_65 $$ s = openSession()-->Line_72 $$ s.close()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_88 $$ enterprise.setDimensions(d)[ CD ]
Line_74 $$ t = s.beginTransaction()-->Line_97 $$ t.commit()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_4 $$ Transaction t = s.beginTransaction()[ CD ]
Line_51 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_55 $$ assertEquals(2, list.size())[ FD ]
Line_15 $$ s = openSession()-->Line_74 $$ t = s.beginTransaction()[ FD ]
Line_82 $$ t = s.beginTransaction()-->Line_97 $$ t.commit()[ FD ]
Line_81 $$ s = openSession()-->Line_82 $$ t = s.beginTransaction()[ FD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()[ FD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_30 $$ assertEquals(1, list.size())[ FD ]
Line_65 $$ s = openSession()-->Line_74 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_54 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_5 $$ Organization ifa = new Organization("IFA")[ CD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_25 $$ assertEquals(1, list.size())[ FD ]
Line_15 $$ s = openSession()-->Line_76 $$ s.save(dim)[ FD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_15 $$ s = openSession()-->Line_78 $$ s.delete(dim)[ FD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()[ FD ]
Line_73 $$ s = openSession()-->Line_90 $$ Object[] result = (Object[]) s.getNamedQuery("spaceship").uniqueResult()[ FD ]
Line_75 $$ Dimension dim = new Dimension(3, Integer.MAX_VALUE)-->Line_78 $$ s.delete(dim)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_12 $$ s.save(emp)[ CD ]
Line_65 $$ s = openSession()-->Line_89 $$ s.save(enterprise)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_86 $$ enterprise.setSpeed(50d)[ CD ]
Line_48 $$ list = queryWithCollection.list()-->Line_49 $$ assertEquals(list.size(), 1)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_36 $$ assertTrue(m.containsKey("EMPID"))[ CD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_31 $$ Object[] o = (Object[]) list.get(0)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_75 $$ Dimension dim = new Dimension(3, Integer.MAX_VALUE)[ CD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_61 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_46 $$ Query queryWithCollection = s.getNamedQuery("organizationEmploymentsExplicitAliases")-->Line_47 $$ queryWithCollection.setLong("id", jboss.getId())[ FD ]
Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_34 $$ assertEquals(1, list.size())[ FD ]
Line_15 $$ s = openSession()-->Line_98 $$ s.close()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_35 $$ m = (Map) list.get(0)[ CD ]
Line_65 $$ s = openSession()-->Line_96 $$ s.delete(enterprise)[ FD ]
Line_15 $$ s = openSession()-->Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()[ FD ]
Line_35 $$ m = (Map) list.get(0)-->Line_39 $$ assertEquals(8, m.size())[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_26 $$ Map m = (Map) list.get(0)[ CD ]
Line_46 $$ Query queryWithCollection = s.getNamedQuery("organizationEmploymentsExplicitAliases")-->Line_48 $$ list = queryWithCollection.list()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_94 $$ assertTrue(450d == extractDoubleValue(result[1]))[ CD ]
Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_77 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_26 $$ Map m = (Map) list.get(0)[ FD ]
Line_54 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_59 $$ assertEquals(2, list.size())[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_49 $$ assertEquals(list.size(), 1)[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_25 $$ assertEquals(1, list.size())[ CD ]
Line_15 $$ s = openSession()-->Line_46 $$ Query queryWithCollection = s.getNamedQuery("organizationEmploymentsExplicitAliases")[ FD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_18 $$ assertEquals(1, list.size())[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_92 $$ enterprise = (SpaceShip) result[0][ CD ]
Line_15 $$ s = openSession()-->Line_67 $$ s.delete(emp2)[ FD ]
Line_15 $$ s = openSession()-->Line_60 $$ s.clear()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_44 $$ assertClassAssignability(Number.class, o[0].getClass())[ CD ]
Line_54 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_55 $$ assertEquals(2, list.size())[ FD ]
Line_65 $$ s = openSession()-->Line_81 $$ s = openSession()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_78 $$ s.delete(dim)[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_85 $$ enterprise.setName("Entreprise")[ CD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_42 $$ o = (Object[]) list.get(0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_46 $$ Query queryWithCollection = s.getNamedQuery("organizationEmploymentsExplicitAliases")[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_39 $$ assertEquals(8, m.size())[ CD ]
Line_15 $$ s = openSession()-->Line_89 $$ s.save(enterprise)[ FD ]
Line_15 $$ s = openSession()-->Line_77 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_41 $$ assertEquals(1, list.size())[ FD ]
Line_31 $$ Object[] o = (Object[]) list.get(0)-->Line_42 $$ o = (Object[]) list.get(0)[ FD ]
Line_65 $$ s = openSession()-->Line_77 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_65 $$ s = openSession()-->Line_66 $$ t = s.beginTransaction()[ FD ]
Line_19 $$ Employment emp2 = (Employment) list.get(0)-->Line_22 $$ assertEquals(emp2.getEndDate(), emp.getEndDate())[ FD ]
Line_5 $$ Organization ifa = new Organization("IFA")-->Line_10 $$ Serializable orgId2 = s.save(ifa)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_71 $$ t.commit()[ CD ]
Line_35 $$ m = (Map) list.get(0)-->Line_38 $$ assertTrue(m.containsKey("ENDDATE"))[ FD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_52 $$ assertEquals(2, list.size())[ FD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_61 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_98 $$ s.close()[ FD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_48 $$ list = queryWithCollection.list()[ FD ]
Line_16 $$ t = s.beginTransaction()-->Line_82 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_91 $$ assertEquals("expecting 3 result values", 3, result.length)[ CD ]
Line_51 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_83 $$ SpaceShip enterprise = new SpaceShip()-->Line_88 $$ enterprise.setDimensions(d)[ FD ]
Line_3 $$ Session s = openSession()-->Line_80 $$ s.close()[ FD ]
Line_66 $$ t = s.beginTransaction()-->Line_82 $$ t = s.beginTransaction()[ FD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_26 $$ Map m = (Map) list.get(0)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_90 $$ Object[] result = (Object[]) s.getNamedQuery("spaceship").uniqueResult()[ CD ]
Line_3 $$ Session s = openSession()-->Line_16 $$ t = s.beginTransaction()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_63 $$ t.commit()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_83 $$ SpaceShip enterprise = new SpaceShip()[ CD ]
Line_15 $$ s = openSession()-->Line_23 $$ s.clear()[ FD ]
Line_26 $$ Map m = (Map) list.get(0)-->Line_37 $$ assertTrue(m.containsKey("AMOUNT"))[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_41 $$ assertEquals(1, list.size())[ CD ]
Line_15 $$ s = openSession()-->Line_64 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_30 $$ assertEquals(1, list.size())[ CD ]
Line_51 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_58 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_58 $$ list = s.getNamedQuery("organizationreturnproperty").list()-->Line_59 $$ assertEquals(2, list.size())[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_22 $$ assertEquals(emp2.getEndDate(), emp.getEndDate())[ CD ]
Line_48 $$ list = queryWithCollection.list()-->Line_61 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_48 $$ list = queryWithCollection.list()-->Line_54 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_62 $$ assertEquals(2, list.size())[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_51 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ CD ]
Line_15 $$ s = openSession()-->Line_65 $$ s = openSession()[ FD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_58 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_63 $$ t.commit()[ CD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_35 $$ m = (Map) list.get(0)[ FD ]
Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_54 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_8 $$ Employment emp = new Employment(gavin, jboss, "AU")-->Line_12 $$ s.save(emp)[ FD ]
Line_15 $$ s = openSession()-->Line_72 $$ s.close()[ FD ]
Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_49 $$ assertEquals(list.size(), 1)[ FD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_58 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_15 $$ s = openSession()-->Line_96 $$ s.delete(enterprise)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_79 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_23 $$ s.clear()[ FD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_51 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_65 $$ s = openSession()-->Line_90 $$ Object[] result = (Object[]) s.getNamedQuery("spaceship").uniqueResult()[ FD ]
Line_65 $$ s = openSession()-->Line_98 $$ s.close()[ FD ]
Line_15 $$ s = openSession()-->Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_47 $$ queryWithCollection.setLong("id", jboss.getId())[ CD ]
Line_75 $$ Dimension dim = new Dimension(3, Integer.MAX_VALUE)-->Line_76 $$ s.save(dim)[ FD ]
Line_66 $$ t = s.beginTransaction()-->Line_71 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_66 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_73 $$ s = openSession()[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_76 $$ s.save(dim)[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_3 $$ Session s = openSession()[ CD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_42 $$ o = (Object[]) list.get(0)[ FD ]
Line_15 $$ s = openSession()-->Line_69 $$ s.delete(gavin)[ FD ]
Line_3 $$ Session s = openSession()-->Line_15 $$ s = openSession()[ FD ]
Line_5 $$ Organization ifa = new Organization("IFA")-->Line_70 $$ s.delete(ifa)[ FD ]
Line_65 $$ s = openSession()-->Line_80 $$ s.close()[ FD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_74 $$ t = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_81 $$ s = openSession()[ FD ]
Line_66 $$ t = s.beginTransaction()-->Line_74 $$ t = s.beginTransaction()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_16 $$ t = s.beginTransaction()[ FD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_49 $$ assertEquals(list.size(), 1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_58 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_32 $$ assertEquals(8, o.length)[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_43 $$ assertEquals(2, o.length)[ CD ]
Line_51 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_59 $$ assertEquals(2, list.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_72 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_9 $$ Serializable orgId = s.save(jboss)[ FD ]
Line_3 $$ Session s = openSession()-->Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()[ FD ]
Line_15 $$ s = openSession()-->Line_81 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_60 $$ s.clear()[ FD ]
Line_15 $$ s = openSession()-->Line_61 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_59 $$ assertEquals(2, list.size())[ FD ]
Line_15 $$ s = openSession()-->Line_51 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_59 $$ assertEquals(2, list.size())[ FD ]
Line_73 $$ s = openSession()-->Line_74 $$ t = s.beginTransaction()[ FD ]
Line_15 $$ s = openSession()-->Line_56 $$ s.clear()[ FD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_41 $$ assertEquals(1, list.size())[ FD ]
Line_81 $$ s = openSession()-->Line_96 $$ s.delete(enterprise)[ FD ]
Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_59 $$ assertEquals(2, list.size())[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_74 $$ t = s.beginTransaction()[ FD ]
Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_77 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_7 $$ Person gavin = new Person("Gavin")-->Line_69 $$ s.delete(gavin)[ FD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()[ FD ]
Line_81 $$ s = openSession()-->Line_90 $$ Object[] result = (Object[]) s.getNamedQuery("spaceship").uniqueResult()[ FD ]
Line_3 $$ Session s = openSession()-->Line_76 $$ s.save(dim)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_16 $$ t = s.beginTransaction()[ CD ]
Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_61 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_58 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_92 $$ enterprise = (SpaceShip) result[0]-->Line_93 $$ assertTrue(50d == enterprise.getSpeed())[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()[ CD ]
Line_15 $$ s = openSession()-->Line_54 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_58 $$ list = s.getNamedQuery("organizationreturnproperty").list()-->Line_61 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_65 $$ s = openSession()-->Line_67 $$ s.delete(emp2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_68 $$ s.delete(jboss)[ FD ]
Line_15 $$ s = openSession()-->Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()[ FD ]
Line_19 $$ Employment emp2 = (Employment) list.get(0)-->Line_21 $$ assertEquals(emp2.getStartDate().getDate(), emp.getStartDate().getDate())[ FD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_54 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_84 $$ enterprise.setModel("USS")[ CD ]
Line_3 $$ Session s = openSession()-->Line_89 $$ s.save(enterprise)[ FD ]
Line_66 $$ t = s.beginTransaction()-->Line_97 $$ t.commit()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_70 $$ s.delete(ifa)[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_23 $$ s.clear()[ CD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_55 $$ assertEquals(2, list.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_82 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_11 $$ s.save(gavin)[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_96 $$ s.delete(enterprise)[ CD ]
Line_16 $$ t = s.beginTransaction()-->Line_66 $$ t = s.beginTransaction()[ FD ]
Line_51 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_61 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_59 $$ assertEquals(2, list.size())[ FD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_42 $$ o = (Object[]) list.get(0)[ FD ]
Line_15 $$ s = openSession()-->Line_90 $$ Object[] result = (Object[]) s.getNamedQuery("spaceship").uniqueResult()[ FD ]
Line_15 $$ s = openSession()-->Line_80 $$ s.close()[ FD ]
Line_48 $$ list = queryWithCollection.list()-->Line_51 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_83 $$ SpaceShip enterprise = new SpaceShip()-->Line_93 $$ assertTrue(50d == enterprise.getSpeed())[ FD ]
Line_83 $$ SpaceShip enterprise = new SpaceShip()-->Line_86 $$ enterprise.setSpeed(50d)[ FD ]
Line_15 $$ s = openSession()-->Line_73 $$ s = openSession()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_97 $$ t.commit()[ FD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()[ FD ]
Line_48 $$ list = queryWithCollection.list()-->Line_52 $$ assertEquals(2, list.size())[ FD ]
Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_55 $$ assertEquals(2, list.size())[ FD ]
Line_74 $$ t = s.beginTransaction()-->Line_79 $$ t.commit()[ FD ]
Line_81 $$ s = openSession()-->Line_98 $$ s.close()[ FD ]
Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_35 $$ m = (Map) list.get(0)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_69 $$ s.delete(gavin)[ CD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_49 $$ assertEquals(list.size(), 1)[ FD ]
Line_16 $$ t = s.beginTransaction()-->Line_97 $$ t.commit()[ FD ]
Line_54 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_55 $$ assertEquals(2, list.size())[ FD ]
Line_35 $$ m = (Map) list.get(0)-->Line_36 $$ assertTrue(m.containsKey("EMPID"))[ FD ]
Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_52 $$ assertEquals(2, list.size())[ FD ]
Line_65 $$ s = openSession()-->Line_68 $$ s.delete(jboss)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_6 $$ Organization jboss = new Organization("JBoss")[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_60 $$ s.clear()[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_66 $$ t = s.beginTransaction()[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_31 $$ Object[] o = (Object[]) list.get(0)[ CD ]
Line_3 $$ Session s = openSession()-->Line_90 $$ Object[] result = (Object[]) s.getNamedQuery("spaceship").uniqueResult()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()[ CD ]
Line_15 $$ s = openSession()-->Line_68 $$ s.delete(jboss)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_65 $$ s = openSession()[ CD ]
Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_48 $$ list = queryWithCollection.list()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_80 $$ s.close()[ CD ]
Line_15 $$ s = openSession()-->Line_50 $$ s.clear()[ FD ]
Line_58 $$ list = s.getNamedQuery("organizationreturnproperty").list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_54 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_77 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_41 $$ assertEquals(1, list.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_67 $$ s.delete(emp2)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_34 $$ assertEquals(1, list.size())[ CD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_61 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_15 $$ s = openSession()-->Line_66 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_56 $$ s.clear()[ CD ]
Line_26 $$ Map m = (Map) list.get(0)-->Line_39 $$ assertEquals(8, m.size())[ FD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_48 $$ list = queryWithCollection.list()[ FD ]
Line_6 $$ Organization jboss = new Organization("JBoss")-->Line_9 $$ Serializable orgId = s.save(jboss)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_13 $$ t.commit()[ CD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_77 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_35 $$ m = (Map) list.get(0)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_79 $$ t.commit()[ CD ]
Line_15 $$ s = openSession()-->Line_57 $$ s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_71 $$ t.commit()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_52 $$ assertEquals(2, list.size())[ CD ]
Line_73 $$ s = openSession()-->Line_82 $$ t = s.beginTransaction()[ FD ]
Line_65 $$ s = openSession()-->Line_70 $$ s.delete(ifa)[ FD ]
Line_3 $$ Session s = openSession()-->Line_14 $$ s.close()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_53 $$ s.clear()[ CD ]
Line_15 $$ s = openSession()-->Line_70 $$ s.delete(ifa)[ FD ]
Line_87 $$ Dimension d = new Dimension(45, 10)-->Line_88 $$ enterprise.setDimensions(d)[ FD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_58 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_65 $$ s = openSession()-->Line_73 $$ s = openSession()[ FD ]
Line_7 $$ Person gavin = new Person("Gavin")-->Line_11 $$ s.save(gavin)[ FD ]
Line_6 $$ Organization jboss = new Organization("JBoss")-->Line_68 $$ s.delete(jboss)[ FD ]
Line_51 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_52 $$ assertEquals(2, list.size())[ FD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_49 $$ assertEquals(list.size(), 1)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_58 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ CD ]
Line_51 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_77 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_48 $$ list = queryWithCollection.list()-->Line_58 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_58 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_6 $$ Organization jboss = new Organization("JBoss")-->Line_47 $$ queryWithCollection.setLong("id", jboss.getId())[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_81 $$ s = openSession()[ CD ]
Line_83 $$ SpaceShip enterprise = new SpaceShip()-->Line_84 $$ enterprise.setModel("USS")[ FD ]
Line_48 $$ list = queryWithCollection.list()-->Line_55 $$ assertEquals(2, list.size())[ FD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_30 $$ assertEquals(1, list.size())[ FD ]
Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_10 $$ Serializable orgId2 = s.save(ifa)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_15 $$ s = openSession()[ CD ]
Line_3 $$ Session s = openSession()-->Line_78 $$ s.delete(dim)[ FD ]
Line_8 $$ Employment emp = new Employment(gavin, jboss, "AU")-->Line_20 $$ assertEquals(emp2.getEmploymentId(), emp.getEmploymentId())[ FD ]
Line_26 $$ Map m = (Map) list.get(0)-->Line_28 $$ assertEquals(1, m.size())[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_87 $$ Dimension d = new Dimension(45, 10)[ CD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_52 $$ assertEquals(2, list.size())[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_95 $$ assertTrue(4500d == extractDoubleValue(result[2]))[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_28 $$ assertEquals(1, m.size())[ CD ]
Line_73 $$ s = openSession()-->Line_76 $$ s.save(dim)[ FD ]
Line_16 $$ t = s.beginTransaction()-->Line_63 $$ t.commit()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_64 $$ s.close()[ CD ]
Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_48 $$ list = queryWithCollection.list()[ FD ]
Line_51 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_54 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()[ FD ]
Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_42 $$ o = (Object[]) list.get(0)[ FD ]
Line_15 $$ s = openSession()-->Line_53 $$ s.clear()[ FD ]
Line_26 $$ Map m = (Map) list.get(0)-->Line_36 $$ assertTrue(m.containsKey("EMPID"))[ FD ]
Line_15 $$ s = openSession()-->Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_67 $$ s.delete(emp2)[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_50 $$ s.clear()[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_61 $$ list = s.getNamedQuery("organizationautodetect").list()[ CD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_30 $$ assertEquals(1, list.size())[ FD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()[ FD ]
Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_51 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_52 $$ assertEquals(2, list.size())[ FD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_35 $$ m = (Map) list.get(0)[ FD ]
Line_83 $$ SpaceShip enterprise = new SpaceShip()-->Line_92 $$ enterprise = (SpaceShip) result[0][ FD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_56 $$ s.clear()[ FD ]
Line_3 $$ Session s = openSession()-->Line_69 $$ s.delete(gavin)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_8 $$ Employment emp = new Employment(gavin, jboss, "AU")[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_20 $$ assertEquals(emp2.getEmploymentId(), emp.getEmploymentId())[ CD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_25 $$ assertEquals(1, list.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_70 $$ s.delete(ifa)[ FD ]
Line_73 $$ s = openSession()-->Line_81 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_77 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_50 $$ s.clear()[ FD ]
Line_58 $$ list = s.getNamedQuery("organizationreturnproperty").list()-->Line_77 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_65 $$ s = openSession()-->Line_82 $$ t = s.beginTransaction()[ FD ]
Line_81 $$ s = openSession()-->Line_89 $$ s.save(enterprise)[ FD ]
Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_49 $$ assertEquals(list.size(), 1)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_55 $$ assertEquals(2, list.size())[ CD ]
Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_54 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()[ FD ]
Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_41 $$ assertEquals(1, list.size())[ FD ]
Line_61 $$ list = s.getNamedQuery("organizationautodetect").list()-->Line_77 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_54 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_61 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_77 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_83 $$ SpaceShip enterprise = new SpaceShip()-->Line_85 $$ enterprise.setName("Entreprise")[ FD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_55 $$ assertEquals(2, list.size())[ FD ]
Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_51 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_83 $$ SpaceShip enterprise = new SpaceShip()-->Line_89 $$ s.save(enterprise)[ FD ]
Line_74 $$ t = s.beginTransaction()-->Line_82 $$ t = s.beginTransaction()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_13 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_53 $$ s.clear()[ FD ]
Line_61 $$ list = s.getNamedQuery("organizationautodetect").list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_89 $$ s.save(enterprise)[ CD ]
Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_42 $$ o = (Object[]) list.get(0)[ FD ]
Line_54 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_58 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_57 $$ s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_73 $$ s = openSession()-->Line_96 $$ s.delete(enterprise)[ FD ]
Line_3 $$ Session s = openSession()-->Line_11 $$ s.save(gavin)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_18 $$ assertEquals(1, list.size())[ CD ]
Line_73 $$ s = openSession()-->Line_77 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_57 $$ s.getNamedQuery("organizationreturnproperty").list()[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_38 $$ assertTrue(m.containsKey("ENDDATE"))[ CD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_51 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_96 $$ s.delete(enterprise)[ FD ]
Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_52 $$ assertEquals(2, list.size())[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_82 $$ t = s.beginTransaction()[ FD ]
Line_65 $$ s = openSession()-->Line_78 $$ s.delete(dim)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_46 $$ Query queryWithCollection = s.getNamedQuery("organizationEmploymentsExplicitAliases")[ CD ]
Line_48 $$ list = queryWithCollection.list()-->Line_59 $$ assertEquals(2, list.size())[ FD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_48 $$ list = queryWithCollection.list()[ FD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_31 $$ Object[] o = (Object[]) list.get(0)[ FD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_19 $$ Employment emp2 = (Employment) list.get(0)[ FD ]
Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()[ FD ]
Line_26 $$ Map m = (Map) list.get(0)-->Line_38 $$ assertTrue(m.containsKey("ENDDATE"))[ FD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_31 $$ Object[] o = (Object[]) list.get(0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_12 $$ s.save(emp)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_68 $$ s.delete(jboss)[ CD ]
Line_92 $$ enterprise = (SpaceShip) result[0]-->Line_96 $$ s.delete(enterprise)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_82 $$ t = s.beginTransaction()[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_9 $$ Serializable orgId = s.save(jboss)[ CD ]
Line_8 $$ Employment emp = new Employment(gavin, jboss, "AU")-->Line_21 $$ assertEquals(emp2.getStartDate().getDate(), emp.getStartDate().getDate())[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_21 $$ assertEquals(emp2.getStartDate().getDate(), emp.getStartDate().getDate())[ CD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_54 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()[ FD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_33 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_19 $$ Employment emp2 = (Employment) list.get(0)[ CD ]
Line_15 $$ s = openSession()-->Line_58 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_42 $$ o = (Object[]) list.get(0)[ CD ]
Line_3 $$ Session s = openSession()-->Line_73 $$ s = openSession()[ FD ]
Line_73 $$ s = openSession()-->Line_80 $$ s.close()[ FD ]
Line_19 $$ Employment emp2 = (Employment) list.get(0)-->Line_67 $$ s.delete(emp2)[ FD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_51 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_65 $$ s = openSession()-->Line_76 $$ s.save(dim)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_54 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ CD ]
Line_65 $$ s = openSession()-->Line_69 $$ s.delete(gavin)[ FD ]
Line_73 $$ s = openSession()-->Line_78 $$ s.delete(dim)[ FD ]
Line_15 $$ s = openSession()-->Line_16 $$ t = s.beginTransaction()[ FD ]
Line_66 $$ t = s.beginTransaction()-->Line_79 $$ t.commit()[ FD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_34 $$ assertEquals(1, list.size())[ FD ]
Line_26 $$ Map m = (Map) list.get(0)-->Line_35 $$ m = (Map) list.get(0)[ FD ]
Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()[ FD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_41 $$ assertEquals(1, list.size())[ FD ]
Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_55 $$ assertEquals(2, list.size())[ FD ]
Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_65 $$ s = openSession()[ FD ]
Line_48 $$ list = queryWithCollection.list()-->Line_77 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_14 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_61 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_35 $$ m = (Map) list.get(0)-->Line_37 $$ assertTrue(m.containsKey("AMOUNT"))[ FD ]
Line_73 $$ s = openSession()-->Line_98 $$ s.close()[ FD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_59 $$ assertEquals(2, list.size())[ CD ]
Line_73 $$ s = openSession()-->Line_89 $$ s.save(enterprise)[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_7 $$ Person gavin = new Person("Gavin")[ CD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_72 $$ s.close()[ CD ]
Line_19 $$ Employment emp2 = (Employment) list.get(0)-->Line_20 $$ assertEquals(emp2.getEmploymentId(), emp.getEmploymentId())[ FD ]
Line_16 $$ t = s.beginTransaction()-->Line_79 $$ t.commit()[ FD ]
Line_26 $$ Map m = (Map) list.get(0)-->Line_27 $$ assertTrue(m.containsKey("Employment"))[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()[ CD ]
Line_3 $$ Session s = openSession()-->Line_51 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_54 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_66 $$ t = s.beginTransaction()[ FD ]
Line_40 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_61 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_29 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_59 $$ assertEquals(2, list.size())[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_93 $$ assertTrue(50d == enterprise.getSpeed())[ CD ]
Line_17 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_77 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_15 $$ s = openSession()-->Line_24 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_48 $$ list = queryWithCollection.list()[ CD ]
Line_3 $$ Session s = openSession()-->Line_64 $$ s.close()[ FD ]
Line_2 $$ public void testAutoDetectAliasing() -->Line_37 $$ assertTrue(m.containsKey("AMOUNT"))[ CD ]
Line_16 $$ t = s.beginTransaction()-->Line_74 $$ t = s.beginTransaction()[ FD ]
