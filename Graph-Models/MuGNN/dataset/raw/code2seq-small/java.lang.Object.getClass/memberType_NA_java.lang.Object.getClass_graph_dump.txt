Line_10 $$ if (member instanceof Constructor) -->Line_11 $$ return Constructor.class[ CD ]
Line_2 $$ public static Class<? extends Member> memberType(Member member) -->Line_3 $$ Objects.requireNonNull(member, "member")[ FD ]
Line_2 $$ public static Class<? extends Member> memberType(Member member) -->Line_8 $$ if (member instanceof Method) [ FD ]
Line_2 $$ public static Class<? extends Member> memberType(Member member) -->Line_4 $$ if (member instanceof MemberImpl) [ FD ]
Line_2 $$ public static Class<? extends Member> memberType(Member member) -->Line_10 $$ if (member instanceof Constructor) [ FD ]
Line_4 $$ if (member instanceof MemberImpl) -->Line_6 $$ if (member instanceof Field) [ CD ]
Line_8 $$ if (member instanceof Method) -->Line_9 $$ return Method.class[ CD ]
Line_6 $$ if (member instanceof Field) -->Line_8 $$ if (member instanceof Method) [ CD ]
Line_2 $$ public static Class<? extends Member> memberType(Member member) -->Line_3 $$ Objects.requireNonNull(member, "member")[ CD ]
Line_4 $$ if (member instanceof MemberImpl) -->Line_5 $$ return ((MemberImpl) member).memberType[ CD ]
Line_8 $$ if (member instanceof Method) -->Line_10 $$ if (member instanceof Constructor) [ CD ]
Line_6 $$ if (member instanceof Field) -->Line_7 $$ return Field.class[ CD ]
Line_2 $$ public static Class<? extends Member> memberType(Member member) -->Line_4 $$ if (member instanceof MemberImpl) [ CD ]
Line_2 $$ public static Class<? extends Member> memberType(Member member) -->Line_13 $$ throw new IllegalArgumentException("Unsupported implementation class for Member, " + member.getClass())[ FD ]
Line_2 $$ public static Class<? extends Member> memberType(Member member) -->Line_6 $$ if (member instanceof Field) [ FD ]
