Line_12 $$ for (Object element : array) -->Line_13 $$ if (!isValidBindValue(parameterType.getComponentType(), element, temporalType)) [ FD ]
Line_6 $$ if (value.getClass().getComponentType().isPrimitive()) -->Line_11 $$ final Object[] array = (Object[]) value[ CD ]
Line_2 $$ private static void validateArrayValuedParameterBinding(Class parameterType, Object value, TemporalType temporalType) -->Line_8 $$ throw new IllegalArgumentException(String.format("Primitive array-valued parameter bind value type [%s] did not match expected type [%s (%s)]", value.getClass().getComponentType().getName(), parameterType.getName(), extractName(temporalType)))[ FD ]
Line_2 $$ private static void validateArrayValuedParameterBinding(Class parameterType, Object value, TemporalType temporalType) -->Line_6 $$ if (value.getClass().getComponentType().isPrimitive()) [ CD ]
Line_2 $$ private static void validateArrayValuedParameterBinding(Class parameterType, Object value, TemporalType temporalType) -->Line_4 $$ throw new IllegalArgumentException(String.format("Encountered array-valued parameter binding, but was expecting [%s (%s)]", parameterType.getName(), extractName(temporalType)))[ FD ]
Line_6 $$ if (value.getClass().getComponentType().isPrimitive()) -->Line_7 $$ if (!parameterType.getComponentType().isAssignableFrom(value.getClass().getComponentType())) [ CD ]
Line_12 $$ for (Object element : array) -->Line_14 $$ throw new IllegalArgumentException(String.format("Array-valued parameter value element [%s] did not match expected type [%s (%s)]", element, parameterType.getName(), extractName(temporalType)))[ FD ]
Line_2 $$ private static void validateArrayValuedParameterBinding(Class parameterType, Object value, TemporalType temporalType) -->Line_3 $$ if (!parameterType.isArray()) [ FD ]
Line_2 $$ private static void validateArrayValuedParameterBinding(Class parameterType, Object value, TemporalType temporalType) -->Line_3 $$ if (!parameterType.isArray()) [ CD ]
Line_2 $$ private static void validateArrayValuedParameterBinding(Class parameterType, Object value, TemporalType temporalType) -->Line_7 $$ if (!parameterType.getComponentType().isAssignableFrom(value.getClass().getComponentType())) [ FD ]
Line_2 $$ private static void validateArrayValuedParameterBinding(Class parameterType, Object value, TemporalType temporalType) -->Line_14 $$ throw new IllegalArgumentException(String.format("Array-valued parameter value element [%s] did not match expected type [%s (%s)]", element, parameterType.getName(), extractName(temporalType)))[ FD ]
Line_2 $$ private static void validateArrayValuedParameterBinding(Class parameterType, Object value, TemporalType temporalType) -->Line_6 $$ if (value.getClass().getComponentType().isPrimitive()) [ FD ]
Line_2 $$ private static void validateArrayValuedParameterBinding(Class parameterType, Object value, TemporalType temporalType) -->Line_13 $$ if (!isValidBindValue(parameterType.getComponentType(), element, temporalType)) [ FD ]
