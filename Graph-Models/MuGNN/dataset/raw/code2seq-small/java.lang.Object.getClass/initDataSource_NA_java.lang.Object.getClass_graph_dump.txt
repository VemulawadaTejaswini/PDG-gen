Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_5 $$ properties = defaultProperties[ FD ]
Line_25 $$ if (_log.isDebugEnabled()) -->Line_26 $$ _log.debug("Initializing C3P0 data source")[ CD ]
Line_38 $$ dataSource = initDataSourceHikariCP(properties)-->Line_43 $$ dataSource = initDataSourceTomcat(properties)[ FD ]
Line_34 $$ if (StringUtil.equalsIgnoreCase(liferayPoolProvider, "hikaricp")) -->Line_38 $$ dataSource = initDataSourceHikariCP(properties)[ CD ]
Line_38 $$ dataSource = initDataSourceHikariCP(properties)-->Line_46 $$ _log.debug("Created data source " + dataSource.getClass())[ FD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_28 $$ dataSource = initDataSourceC3PO(properties)[ FD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_5 $$ properties = defaultProperties[ CD ]
Line_5 $$ properties = defaultProperties-->Line_21 $$ testDatabaseClass(properties)[ FD ]
Line_24 $$ if (StringUtil.equalsIgnoreCase(liferayPoolProvider, "c3p0") || StringUtil.equalsIgnoreCase(liferayPoolProvider, "c3po")) -->Line_28 $$ dataSource = initDataSourceC3PO(properties)[ CD ]
Line_24 $$ if (StringUtil.equalsIgnoreCase(liferayPoolProvider, "c3p0") || StringUtil.equalsIgnoreCase(liferayPoolProvider, "c3po")) -->Line_25 $$ if (_log.isDebugEnabled()) [ CD ]
Line_45 $$ if (_log.isDebugEnabled()) -->Line_46 $$ _log.debug("Created data source " + dataSource.getClass())[ CD ]
Line_28 $$ dataSource = initDataSourceC3PO(properties)-->Line_48 $$ return _pacl.getDataSource(dataSource)[ FD ]
Line_40 $$ if (_log.isDebugEnabled()) -->Line_41 $$ _log.debug("Initializing Tomcat data source")[ CD ]
Line_28 $$ dataSource = initDataSourceC3PO(properties)-->Line_33 $$ dataSource = initDataSourceDBCP(properties)[ FD ]
Line_6 $$ String jndiName = properties.getProperty("jndi.name")-->Line_7 $$ if (Validator.isNotNull(jndiName)) [ FD ]
Line_5 $$ properties = defaultProperties-->Line_38 $$ dataSource = initDataSourceHikariCP(properties)[ FD ]
Line_29 $$ if (StringUtil.equalsIgnoreCase(liferayPoolProvider, "dbcp")) -->Line_30 $$ if (_log.isDebugEnabled()) [ CD ]
Line_33 $$ dataSource = initDataSourceDBCP(properties)-->Line_48 $$ return _pacl.getDataSource(dataSource)[ FD ]
Line_23 $$ String liferayPoolProvider = PropsValues.JDBC_DEFAULT_LIFERAY_POOL_PROVIDER-->Line_24 $$ if (StringUtil.equalsIgnoreCase(liferayPoolProvider, "c3p0") || StringUtil.equalsIgnoreCase(liferayPoolProvider, "c3po")) [ FD ]
Line_33 $$ dataSource = initDataSourceDBCP(properties)-->Line_43 $$ dataSource = initDataSourceTomcat(properties)[ FD ]
Line_16 $$ if (_log.isDebugEnabled()) -->Line_19 $$ _log.debug(PropertiesUtil.toString(sortedProperties))[ CD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_4 $$ PropertiesUtil.merge(defaultProperties, properties)[ CD ]
Line_43 $$ dataSource = initDataSourceTomcat(properties)-->Line_46 $$ _log.debug("Created data source " + dataSource.getClass())[ FD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_3 $$ Properties defaultProperties = PropsUtil.getProperties("jdbc.default.", true)[ CD ]
Line_43 $$ dataSource = initDataSourceTomcat(properties)-->Line_48 $$ return _pacl.getDataSource(dataSource)[ FD ]
Line_16 $$ if (_log.isDebugEnabled()) -->Line_17 $$ _log.debug("Data source properties:\n")[ CD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_16 $$ if (_log.isDebugEnabled()) [ CD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_23 $$ String liferayPoolProvider = PropsValues.JDBC_DEFAULT_LIFERAY_POOL_PROVIDER[ CD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_21 $$ testDatabaseClass(properties)[ CD ]
Line_18 $$ SortedProperties sortedProperties = new SortedProperties(properties)-->Line_19 $$ _log.debug(PropertiesUtil.toString(sortedProperties))[ FD ]
Line_34 $$ if (StringUtil.equalsIgnoreCase(liferayPoolProvider, "hikaricp")) -->Line_35 $$ if (_log.isDebugEnabled()) [ CD ]
Line_35 $$ if (_log.isDebugEnabled()) -->Line_36 $$ _log.debug("Initializing HikariCP data source")[ CD ]
Line_23 $$ String liferayPoolProvider = PropsValues.JDBC_DEFAULT_LIFERAY_POOL_PROVIDER-->Line_29 $$ if (StringUtil.equalsIgnoreCase(liferayPoolProvider, "dbcp")) [ FD ]
Line_22 $$ DataSource dataSource = null-->Line_33 $$ dataSource = initDataSourceDBCP(properties)[ FD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_22 $$ DataSource dataSource = null[ CD ]
Line_5 $$ properties = defaultProperties-->Line_28 $$ dataSource = initDataSourceC3PO(properties)[ FD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_45 $$ if (_log.isDebugEnabled()) [ CD ]
Line_28 $$ dataSource = initDataSourceC3PO(properties)-->Line_43 $$ dataSource = initDataSourceTomcat(properties)[ FD ]
Line_34 $$ if (StringUtil.equalsIgnoreCase(liferayPoolProvider, "hikaricp")) -->Line_40 $$ if (_log.isDebugEnabled()) [ CD ]
Line_33 $$ dataSource = initDataSourceDBCP(properties)-->Line_46 $$ _log.debug("Created data source " + dataSource.getClass())[ FD ]
Line_30 $$ if (_log.isDebugEnabled()) -->Line_31 $$ _log.debug("Initializing DBCP data source")[ CD ]
Line_6 $$ String jndiName = properties.getProperty("jndi.name")-->Line_11 $$ return (DataSource) JNDIUtil.lookup(context, jndiName)[ FD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_24 $$ if (StringUtil.equalsIgnoreCase(liferayPoolProvider, "c3p0") || StringUtil.equalsIgnoreCase(liferayPoolProvider, "c3po")) [ CD ]
Line_22 $$ DataSource dataSource = null-->Line_46 $$ _log.debug("Created data source " + dataSource.getClass())[ FD ]
Line_38 $$ dataSource = initDataSourceHikariCP(properties)-->Line_48 $$ return _pacl.getDataSource(dataSource)[ FD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_21 $$ testDatabaseClass(properties)[ FD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_7 $$ if (Validator.isNotNull(jndiName)) [ CD ]
Line_3 $$ Properties defaultProperties = PropsUtil.getProperties("jdbc.default.", true)-->Line_4 $$ PropertiesUtil.merge(defaultProperties, properties)[ FD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_33 $$ dataSource = initDataSourceDBCP(properties)[ FD ]
Line_28 $$ dataSource = initDataSourceC3PO(properties)-->Line_46 $$ _log.debug("Created data source " + dataSource.getClass())[ FD ]
Line_22 $$ DataSource dataSource = null-->Line_38 $$ dataSource = initDataSourceHikariCP(properties)[ FD ]
Line_22 $$ DataSource dataSource = null-->Line_43 $$ dataSource = initDataSourceTomcat(properties)[ FD ]
Line_29 $$ if (StringUtil.equalsIgnoreCase(liferayPoolProvider, "dbcp")) -->Line_33 $$ dataSource = initDataSourceDBCP(properties)[ CD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_6 $$ String jndiName = properties.getProperty("jndi.name")[ FD ]
Line_29 $$ if (StringUtil.equalsIgnoreCase(liferayPoolProvider, "dbcp")) -->Line_34 $$ if (StringUtil.equalsIgnoreCase(liferayPoolProvider, "hikaricp")) [ CD ]
Line_24 $$ if (StringUtil.equalsIgnoreCase(liferayPoolProvider, "c3p0") || StringUtil.equalsIgnoreCase(liferayPoolProvider, "c3po")) -->Line_29 $$ if (StringUtil.equalsIgnoreCase(liferayPoolProvider, "dbcp")) [ CD ]
Line_3 $$ Properties defaultProperties = PropsUtil.getProperties("jdbc.default.", true)-->Line_5 $$ properties = defaultProperties[ FD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_4 $$ PropertiesUtil.merge(defaultProperties, properties)[ FD ]
Line_5 $$ properties = defaultProperties-->Line_43 $$ dataSource = initDataSourceTomcat(properties)[ FD ]
Line_5 $$ properties = defaultProperties-->Line_33 $$ dataSource = initDataSourceDBCP(properties)[ FD ]
Line_5 $$ properties = defaultProperties-->Line_6 $$ String jndiName = properties.getProperty("jndi.name")[ FD ]
Line_22 $$ DataSource dataSource = null-->Line_28 $$ dataSource = initDataSourceC3PO(properties)[ FD ]
Line_33 $$ dataSource = initDataSourceDBCP(properties)-->Line_38 $$ dataSource = initDataSourceHikariCP(properties)[ FD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_48 $$ return _pacl.getDataSource(dataSource)[ CD ]
Line_28 $$ dataSource = initDataSourceC3PO(properties)-->Line_38 $$ dataSource = initDataSourceHikariCP(properties)[ FD ]
Line_22 $$ DataSource dataSource = null-->Line_48 $$ return _pacl.getDataSource(dataSource)[ FD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_43 $$ dataSource = initDataSourceTomcat(properties)[ FD ]
Line_16 $$ if (_log.isDebugEnabled()) -->Line_18 $$ SortedProperties sortedProperties = new SortedProperties(properties)[ CD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_38 $$ dataSource = initDataSourceHikariCP(properties)[ FD ]
Line_23 $$ String liferayPoolProvider = PropsValues.JDBC_DEFAULT_LIFERAY_POOL_PROVIDER-->Line_34 $$ if (StringUtil.equalsIgnoreCase(liferayPoolProvider, "hikaricp")) [ FD ]
Line_34 $$ if (StringUtil.equalsIgnoreCase(liferayPoolProvider, "hikaricp")) -->Line_43 $$ dataSource = initDataSourceTomcat(properties)[ CD ]
Line_2 $$ public DataSource initDataSource(Properties properties) throws Exception -->Line_6 $$ String jndiName = properties.getProperty("jndi.name")[ CD ]
Line_10 $$ Context context = new InitialContext(jndiEnvironmentProperties)-->Line_11 $$ return (DataSource) JNDIUtil.lookup(context, jndiName)[ FD ]
