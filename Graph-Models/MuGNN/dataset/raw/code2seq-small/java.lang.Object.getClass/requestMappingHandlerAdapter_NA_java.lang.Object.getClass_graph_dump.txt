Line_2 $$ public void requestMappingHandlerAdapter() throws Exception -->Line_28 $$ assertEquals(2, bodyAdvice.size())[ CD ]
Line_9 $$ ObjectMapper objectMapper = ((AbstractJackson2HttpMessageConverter) converter).getObjectMapper()-->Line_14 $$ assertEquals(XmlMapper.class, objectMapper.getClass())[ FD ]
Line_2 $$ public void requestMappingHandlerAdapter() throws Exception -->Line_3 $$ ApplicationContext context = initContext(WebConfig.class)[ CD ]
Line_2 $$ public void requestMappingHandlerAdapter() throws Exception -->Line_22 $$ assertTrue(conversionService instanceof FormattingConversionService)[ CD ]
Line_18 $$ ConfigurableWebBindingInitializer initializer = (ConfigurableWebBindingInitializer) adapter.getWebBindingInitializer()-->Line_23 $$ Validator validator = initializer.getValidator()[ FD ]
Line_13 $$ if (converter instanceof MappingJackson2XmlHttpMessageConverter) -->Line_14 $$ assertEquals(XmlMapper.class, objectMapper.getClass())[ CD ]
Line_2 $$ public void requestMappingHandlerAdapter() throws Exception -->Line_20 $$ ConversionService conversionService = initializer.getConversionService()[ CD ]
Line_4 $$ RequestMappingHandlerAdapter adapter = context.getBean(RequestMappingHandlerAdapter.class)-->Line_18 $$ ConfigurableWebBindingInitializer initializer = (ConfigurableWebBindingInitializer) adapter.getWebBindingInitializer()[ FD ]
Line_2 $$ public void requestMappingHandlerAdapter() throws Exception -->Line_29 $$ assertEquals(JsonViewRequestBodyAdvice.class, bodyAdvice.get(0).getClass())[ CD ]
Line_27 $$ List<Object> bodyAdvice = (List<Object>) fieldAccessor.getPropertyValue("requestResponseBodyAdvice")-->Line_28 $$ assertEquals(2, bodyAdvice.size())[ FD ]
Line_18 $$ ConfigurableWebBindingInitializer initializer = (ConfigurableWebBindingInitializer) adapter.getWebBindingInitializer()-->Line_19 $$ assertNotNull(initializer)[ FD ]
Line_7 $$ for (HttpMessageConverter<?> converter : converters) -->Line_8 $$ if (converter instanceof AbstractJackson2HttpMessageConverter) [ FD ]
Line_4 $$ RequestMappingHandlerAdapter adapter = context.getBean(RequestMappingHandlerAdapter.class)-->Line_5 $$ List<HttpMessageConverter<?>> converters = adapter.getMessageConverters()[ FD ]
Line_2 $$ public void requestMappingHandlerAdapter() throws Exception -->Line_19 $$ assertNotNull(initializer)[ CD ]
Line_8 $$ if (converter instanceof AbstractJackson2HttpMessageConverter) -->Line_12 $$ assertFalse(objectMapper.getDeserializationConfig().isEnabled(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES))[ CD ]
Line_5 $$ List<HttpMessageConverter<?>> converters = adapter.getMessageConverters()-->Line_6 $$ assertEquals(9, converters.size())[ FD ]
Line_8 $$ if (converter instanceof AbstractJackson2HttpMessageConverter) -->Line_9 $$ ObjectMapper objectMapper = ((AbstractJackson2HttpMessageConverter) converter).getObjectMapper()[ CD ]
Line_2 $$ public void requestMappingHandlerAdapter() throws Exception -->Line_27 $$ List<Object> bodyAdvice = (List<Object>) fieldAccessor.getPropertyValue("requestResponseBodyAdvice")[ CD ]
Line_20 $$ ConversionService conversionService = initializer.getConversionService()-->Line_21 $$ assertNotNull(conversionService)[ FD ]
Line_7 $$ for (HttpMessageConverter<?> converter : converters) -->Line_13 $$ if (converter instanceof MappingJackson2XmlHttpMessageConverter) [ FD ]
Line_2 $$ public void requestMappingHandlerAdapter() throws Exception -->Line_18 $$ ConfigurableWebBindingInitializer initializer = (ConfigurableWebBindingInitializer) adapter.getWebBindingInitializer()[ CD ]
Line_8 $$ if (converter instanceof AbstractJackson2HttpMessageConverter) -->Line_13 $$ if (converter instanceof MappingJackson2XmlHttpMessageConverter) [ CD ]
Line_23 $$ Validator validator = initializer.getValidator()-->Line_24 $$ assertNotNull(validator)[ FD ]
Line_27 $$ List<Object> bodyAdvice = (List<Object>) fieldAccessor.getPropertyValue("requestResponseBodyAdvice")-->Line_30 $$ assertEquals(JsonViewResponseBodyAdvice.class, bodyAdvice.get(1).getClass())[ FD ]
Line_2 $$ public void requestMappingHandlerAdapter() throws Exception -->Line_25 $$ assertTrue(validator instanceof LocalValidatorFactoryBean)[ CD ]
Line_8 $$ if (converter instanceof AbstractJackson2HttpMessageConverter) -->Line_11 $$ assertFalse(objectMapper.getSerializationConfig().isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))[ CD ]
Line_8 $$ if (converter instanceof AbstractJackson2HttpMessageConverter) -->Line_10 $$ assertFalse(objectMapper.getDeserializationConfig().isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))[ CD ]
Line_2 $$ public void requestMappingHandlerAdapter() throws Exception -->Line_21 $$ assertNotNull(conversionService)[ CD ]
Line_2 $$ public void requestMappingHandlerAdapter() throws Exception -->Line_24 $$ assertNotNull(validator)[ CD ]
Line_2 $$ public void requestMappingHandlerAdapter() throws Exception -->Line_6 $$ assertEquals(9, converters.size())[ CD ]
Line_2 $$ public void requestMappingHandlerAdapter() throws Exception -->Line_23 $$ Validator validator = initializer.getValidator()[ CD ]
Line_2 $$ public void requestMappingHandlerAdapter() throws Exception -->Line_5 $$ List<HttpMessageConverter<?>> converters = adapter.getMessageConverters()[ CD ]
Line_9 $$ ObjectMapper objectMapper = ((AbstractJackson2HttpMessageConverter) converter).getObjectMapper()-->Line_10 $$ assertFalse(objectMapper.getDeserializationConfig().isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))[ FD ]
Line_3 $$ ApplicationContext context = initContext(WebConfig.class)-->Line_4 $$ RequestMappingHandlerAdapter adapter = context.getBean(RequestMappingHandlerAdapter.class)[ FD ]
Line_2 $$ public void requestMappingHandlerAdapter() throws Exception -->Line_26 $$ DirectFieldAccessor fieldAccessor = new DirectFieldAccessor(adapter)[ CD ]
Line_2 $$ public void requestMappingHandlerAdapter() throws Exception -->Line_4 $$ RequestMappingHandlerAdapter adapter = context.getBean(RequestMappingHandlerAdapter.class)[ CD ]
Line_18 $$ ConfigurableWebBindingInitializer initializer = (ConfigurableWebBindingInitializer) adapter.getWebBindingInitializer()-->Line_20 $$ ConversionService conversionService = initializer.getConversionService()[ FD ]
Line_2 $$ public void requestMappingHandlerAdapter() throws Exception -->Line_30 $$ assertEquals(JsonViewResponseBodyAdvice.class, bodyAdvice.get(1).getClass())[ CD ]
Line_26 $$ DirectFieldAccessor fieldAccessor = new DirectFieldAccessor(adapter)-->Line_27 $$ List<Object> bodyAdvice = (List<Object>) fieldAccessor.getPropertyValue("requestResponseBodyAdvice")[ FD ]
Line_27 $$ List<Object> bodyAdvice = (List<Object>) fieldAccessor.getPropertyValue("requestResponseBodyAdvice")-->Line_29 $$ assertEquals(JsonViewRequestBodyAdvice.class, bodyAdvice.get(0).getClass())[ FD ]
Line_9 $$ ObjectMapper objectMapper = ((AbstractJackson2HttpMessageConverter) converter).getObjectMapper()-->Line_12 $$ assertFalse(objectMapper.getDeserializationConfig().isEnabled(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES))[ FD ]
Line_9 $$ ObjectMapper objectMapper = ((AbstractJackson2HttpMessageConverter) converter).getObjectMapper()-->Line_11 $$ assertFalse(objectMapper.getSerializationConfig().isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))[ FD ]
