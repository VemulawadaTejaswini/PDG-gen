Line_2 $$ public void startLdapServer(final String hostname) throws Exception, IOException, ClassNotFoundException, FileNotFoundException -->Line_18 $$ FileOutputStream fos = new FileOutputStream(KEYSTORE_FILE)[ CD ]
Line_2 $$ public void startLdapServer(final String hostname) throws Exception, IOException, ClassNotFoundException, FileNotFoundException -->Line_5 $$ map.put("hostname", NetworkUtils.formatPossibleIpv6Address(hostname))[ FD ]
Line_17 $$ final ManagedCreateLdapServer createLdapServer = new ManagedCreateLdapServer((CreateLdapServer) AnnotationUtils.getInstance(CreateLdapServer.class))-->Line_22 $$ fixTransportAddress(createLdapServer, hostname)[ FD ]
Line_2 $$ public void startLdapServer(final String hostname) throws Exception, IOException, ClassNotFoundException, FileNotFoundException -->Line_7 $$ final String ldifContent = StrSubstitutor.replace(IOUtils.toString(LdapServerSetupTask.class.getResourceAsStream("picketlink-idm-tests.ldif"), "UTF-8"), map)[ CD ]
Line_10 $$ for (LdifEntry ldifEntry : new LdifReader(IOUtils.toInputStream(ldifContent))) -->Line_11 $$ directoryService.getAdminSession().add(new DefaultEntry(schemaManager, ldifEntry.getEntry()))[ FD ]
Line_2 $$ public void startLdapServer(final String hostname) throws Exception, IOException, ClassNotFoundException, FileNotFoundException -->Line_4 $$ final Map<String, String> map = new HashMap<String, String>()[ CD ]
Line_7 $$ final String ldifContent = StrSubstitutor.replace(IOUtils.toString(LdapServerSetupTask.class.getResourceAsStream("picketlink-idm-tests.ldif"), "UTF-8"), map)-->Line_10 $$ for (LdifEntry ldifEntry : new LdifReader(IOUtils.toInputStream(ldifContent))) [ FD ]
Line_2 $$ public void startLdapServer(final String hostname) throws Exception, IOException, ClassNotFoundException, FileNotFoundException -->Line_22 $$ fixTransportAddress(createLdapServer, hostname)[ CD ]
Line_2 $$ public void startLdapServer(final String hostname) throws Exception, IOException, ClassNotFoundException, FileNotFoundException -->Line_23 $$ ldapServer = ServerAnnotationProcessor.instantiateLdapServer(createLdapServer, directoryService)[ CD ]
Line_4 $$ final Map<String, String> map = new HashMap<String, String>()-->Line_5 $$ map.put("hostname", NetworkUtils.formatPossibleIpv6Address(hostname))[ FD ]
Line_2 $$ public void startLdapServer(final String hostname) throws Exception, IOException, ClassNotFoundException, FileNotFoundException -->Line_8 $$ final SchemaManager schemaManager = directoryService.getSchemaManager()[ CD ]
Line_17 $$ final ManagedCreateLdapServer createLdapServer = new ManagedCreateLdapServer((CreateLdapServer) AnnotationUtils.getInstance(CreateLdapServer.class))-->Line_21 $$ createLdapServer.setKeyStore(KEYSTORE_FILE.getAbsolutePath())[ FD ]
Line_2 $$ public void startLdapServer(final String hostname) throws Exception, IOException, ClassNotFoundException, FileNotFoundException -->Line_19 $$ IOUtils.copy(getClass().getResourceAsStream(KEYSTORE_FILENAME), fos)[ CD ]
Line_2 $$ public void startLdapServer(final String hostname) throws Exception, IOException, ClassNotFoundException, FileNotFoundException -->Line_6 $$ directoryService = DSAnnotationProcessor.getDirectoryService()[ CD ]
Line_2 $$ public void startLdapServer(final String hostname) throws Exception, IOException, ClassNotFoundException, FileNotFoundException -->Line_17 $$ final ManagedCreateLdapServer createLdapServer = new ManagedCreateLdapServer((CreateLdapServer) AnnotationUtils.getInstance(CreateLdapServer.class))[ CD ]
Line_18 $$ FileOutputStream fos = new FileOutputStream(KEYSTORE_FILE)-->Line_19 $$ IOUtils.copy(getClass().getResourceAsStream(KEYSTORE_FILENAME), fos)[ FD ]
Line_18 $$ FileOutputStream fos = new FileOutputStream(KEYSTORE_FILE)-->Line_20 $$ fos.close()[ FD ]
Line_2 $$ public void startLdapServer(final String hostname) throws Exception, IOException, ClassNotFoundException, FileNotFoundException -->Line_24 $$ ldapServer.start()[ CD ]
Line_4 $$ final Map<String, String> map = new HashMap<String, String>()-->Line_7 $$ final String ldifContent = StrSubstitutor.replace(IOUtils.toString(LdapServerSetupTask.class.getResourceAsStream("picketlink-idm-tests.ldif"), "UTF-8"), map)[ FD ]
Line_2 $$ public void startLdapServer(final String hostname) throws Exception, IOException, ClassNotFoundException, FileNotFoundException -->Line_20 $$ fos.close()[ CD ]
Line_2 $$ public void startLdapServer(final String hostname) throws Exception, IOException, ClassNotFoundException, FileNotFoundException -->Line_22 $$ fixTransportAddress(createLdapServer, hostname)[ FD ]
Line_2 $$ public void startLdapServer(final String hostname) throws Exception, IOException, ClassNotFoundException, FileNotFoundException -->Line_21 $$ createLdapServer.setKeyStore(KEYSTORE_FILE.getAbsolutePath())[ CD ]
Line_17 $$ final ManagedCreateLdapServer createLdapServer = new ManagedCreateLdapServer((CreateLdapServer) AnnotationUtils.getInstance(CreateLdapServer.class))-->Line_23 $$ ldapServer = ServerAnnotationProcessor.instantiateLdapServer(createLdapServer, directoryService)[ FD ]
Line_2 $$ public void startLdapServer(final String hostname) throws Exception, IOException, ClassNotFoundException, FileNotFoundException -->Line_5 $$ map.put("hostname", NetworkUtils.formatPossibleIpv6Address(hostname))[ CD ]
