Line_3 $$ SpelExpressionParser parser = new SpelExpressionParser()-->Line_4 $$ Expression expr = parser.parseExpression("throwException(#bar)")[ FD ]
Line_2 $$ public void testMethodThrowingException_SPR6941_2() -->Line_4 $$ Expression expr = parser.parseExpression("throwException(#bar)")[ CD ]
Line_2 $$ public void testMethodThrowingException_SPR6941_2() -->Line_3 $$ SpelExpressionParser parser = new SpelExpressionParser()[ CD ]
Line_10 $$ Throwable cause = ex.getCause()-->Line_11 $$ assertEquals("org.springframework.expression.spel.testresources.Inventor$TestException", cause.getClass().getName())[ FD ]
Line_2 $$ public void testMethodThrowingException_SPR6941_2() -->Line_5 $$ eContext.setVariable("bar", 4)[ CD ]
Line_4 $$ Expression expr = parser.parseExpression("throwException(#bar)")-->Line_7 $$ expr.getValue(eContext)[ FD ]
