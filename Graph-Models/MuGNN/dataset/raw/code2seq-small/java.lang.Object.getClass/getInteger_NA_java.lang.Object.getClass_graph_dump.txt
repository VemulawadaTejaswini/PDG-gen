Line_4 $$ if (value == null) -->Line_5 $$ return null[ CD ]
Line_10 $$ if (String.class.isInstance(value)) -->Line_11 $$ final String trimmed = value.toString().trim()[ CD ]
Line_11 $$ final String trimmed = value.toString().trim()-->Line_12 $$ if (trimmed.isEmpty()) [ FD ]
Line_3 $$ Object value = values.get(name)-->Line_17 $$ throw new ConfigurationException("Could not determine how to handle configuration value [name=" + name + ", value=" + value + "(" + value.getClass().getName() + ")] as Integer")[ FD ]
Line_2 $$ public static Integer getInteger(String name, Map values) -->Line_4 $$ if (value == null) [ CD ]
Line_2 $$ public static Integer getInteger(String name, Map values) -->Line_7 $$ if (Integer.class.isInstance(value)) [ CD ]
Line_2 $$ public static Integer getInteger(String name, Map values) -->Line_3 $$ Object value = values.get(name)[ FD ]
Line_3 $$ Object value = values.get(name)-->Line_4 $$ if (value == null) [ FD ]
Line_3 $$ Object value = values.get(name)-->Line_10 $$ if (String.class.isInstance(value)) [ FD ]
Line_12 $$ if (trimmed.isEmpty()) -->Line_13 $$ return null[ CD ]
Line_7 $$ if (Integer.class.isInstance(value)) -->Line_8 $$ return (Integer) value[ CD ]
Line_11 $$ final String trimmed = value.toString().trim()-->Line_15 $$ return Integer.valueOf(trimmed)[ FD ]
Line_3 $$ Object value = values.get(name)-->Line_7 $$ if (Integer.class.isInstance(value)) [ FD ]
Line_10 $$ if (String.class.isInstance(value)) -->Line_15 $$ return Integer.valueOf(trimmed)[ CD ]
Line_2 $$ public static Integer getInteger(String name, Map values) -->Line_10 $$ if (String.class.isInstance(value)) [ CD ]
Line_3 $$ Object value = values.get(name)-->Line_11 $$ final String trimmed = value.toString().trim()[ FD ]
Line_10 $$ if (String.class.isInstance(value)) -->Line_12 $$ if (trimmed.isEmpty()) [ CD ]
Line_2 $$ public static Integer getInteger(String name, Map values) -->Line_3 $$ Object value = values.get(name)[ CD ]
