Line_4 $$ return new Module() -->Line_6 $$ binder = binder.skipSources(getClass())[ CD ]
Line_4 $$ return new Module() -->Line_6 $$ binder = binder.skipSources(getClass())[ FD ]
Line_2 $$ public static Module combine(Iterable<? extends Module> modules) -->Line_3 $$ final Set<? extends Module> modulesSet = newHashSet(modules)[ FD ]
Line_4 $$ return new Module() -->Line_8 $$ binder.install(module)[ FD ]
Line_2 $$ public static Module combine(Iterable<? extends Module> modules) -->Line_4 $$ return new Module() [ CD ]
Line_6 $$ binder = binder.skipSources(getClass())-->Line_8 $$ binder.install(module)[ FD ]
Line_7 $$ for (Module module : modulesSet) -->Line_8 $$ binder.install(module)[ FD ]
Line_2 $$ public static Module combine(Iterable<? extends Module> modules) -->Line_3 $$ final Set<? extends Module> modulesSet = newHashSet(modules)[ CD ]
