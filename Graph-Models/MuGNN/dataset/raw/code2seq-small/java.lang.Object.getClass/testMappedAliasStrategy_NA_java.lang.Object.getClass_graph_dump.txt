Line_38 $$ s = openSession()-->Line_63 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_33 $$ assertClassAssignability(Map.class, res.getClass())[ CD ]
Line_3 $$ Session s = openSession()-->Line_76 $$ s.close()[ FD ]
Line_44 $$ m = (Map) list.get(0)-->Line_48 $$ assertClassAssignability(m.get("org").getClass(), Organization.class)[ FD ]
Line_30 $$ list = sqlQuery.list()-->Line_31 $$ assertEquals(1, list.size())[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_52 $$ Map m2 = (Map) list.get(1)[ CD ]
Line_27 $$ t = s.beginTransaction()-->Line_63 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_32 $$ Object res = list.get(0)[ CD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_40 $$ sqlQuery = s.getNamedQuery("organizationreturnproperty")[ CD ]
Line_49 $$ if (jboss.getId() == ((Organization) m.get("org")).getId()) -->Line_50 $$ assertClassAssignability(m.get("emp").getClass(), Employment.class)[ CD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_26 $$ s = openSession()[ CD ]
Line_39 $$ t = s.beginTransaction()-->Line_60 $$ t.commit()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_73 $$ s.delete(gavin)[ CD ]
Line_38 $$ s = openSession()-->Line_39 $$ t = s.beginTransaction()[ FD ]
Line_15 $$ s = openSession()-->Line_76 $$ s.close()[ FD ]
Line_15 $$ s = openSession()-->Line_37 $$ s.close()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_15 $$ s = openSession()[ CD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_25 $$ s.close()[ CD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_24 $$ t.commit()[ CD ]
Line_26 $$ s = openSession()-->Line_63 $$ t = s.beginTransaction()[ FD ]
Line_18 $$ List list = namedQuery.list()-->Line_32 $$ Object res = list.get(0)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_13 $$ t.commit()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_29 $$ sqlQuery.setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)[ CD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_27 $$ t = s.beginTransaction()[ CD ]
Line_16 $$ t = s.beginTransaction()-->Line_63 $$ t = s.beginTransaction()[ FD ]
Line_38 $$ s = openSession()-->Line_76 $$ s.close()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_37 $$ s.close()[ CD ]
Line_28 $$ Query sqlQuery = s.getNamedQuery("EmploymentAndPerson")-->Line_40 $$ sqlQuery = s.getNamedQuery("organizationreturnproperty")[ FD ]
Line_15 $$ s = openSession()-->Line_17 $$ Query namedQuery = s.getNamedQuery("AllEmploymentAsMapped")[ FD ]
Line_8 $$ Employment emp = new Employment(gavin, jboss, "AU")-->Line_12 $$ s.save(emp)[ FD ]
Line_3 $$ Session s = openSession()-->Line_11 $$ s.save(gavin)[ FD ]
Line_30 $$ list = sqlQuery.list()-->Line_52 $$ Map m2 = (Map) list.get(1)[ FD ]
Line_38 $$ s = openSession()-->Line_72 $$ s.delete(jboss)[ FD ]
Line_28 $$ Query sqlQuery = s.getNamedQuery("EmploymentAndPerson")-->Line_29 $$ sqlQuery.setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_66 $$ assertEquals(1, list.size())[ CD ]
Line_15 $$ s = openSession()-->Line_28 $$ Query sqlQuery = s.getNamedQuery("EmploymentAndPerson")[ FD ]
Line_27 $$ t = s.beginTransaction()-->Line_39 $$ t = s.beginTransaction()[ FD ]
Line_42 $$ list = sqlQuery.list()-->Line_67 $$ Object[] objs = (Object[]) list.get(0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_16 $$ t = s.beginTransaction()[ CD ]
Line_26 $$ s = openSession()-->Line_38 $$ s = openSession()[ FD ]
Line_15 $$ s = openSession()-->Line_26 $$ s = openSession()[ FD ]
Line_62 $$ s = openSession()-->Line_74 $$ s.delete(ifa)[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_20 $$ Employment emp2 = (Employment) list.get(0)[ CD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_22 $$ assertEquals(emp2.getStartDate().getDate(), emp.getStartDate().getDate())[ CD ]
Line_15 $$ s = openSession()-->Line_63 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_72 $$ s.delete(jboss)[ CD ]
Line_18 $$ List list = namedQuery.list()-->Line_19 $$ assertEquals(1, list.size())[ FD ]
Line_30 $$ list = sqlQuery.list()-->Line_32 $$ Object res = list.get(0)[ FD ]
Line_26 $$ s = openSession()-->Line_74 $$ s.delete(ifa)[ FD ]
Line_44 $$ m = (Map) list.get(0)-->Line_46 $$ assertTrue(m.containsKey("org"))[ FD ]
Line_20 $$ Employment emp2 = (Employment) list.get(0)-->Line_23 $$ assertEquals(emp2.getEndDate(), emp.getEndDate())[ FD ]
Line_38 $$ s = openSession()-->Line_62 $$ s = openSession()[ FD ]
Line_15 $$ s = openSession()-->Line_39 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_63 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_64 $$ namedQuery = s.getNamedQuery("EmploymentAndPerson")[ FD ]
Line_39 $$ t = s.beginTransaction()-->Line_75 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_73 $$ s.delete(gavin)[ FD ]
Line_18 $$ List list = namedQuery.list()-->Line_31 $$ assertEquals(1, list.size())[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_21 $$ assertEquals(emp2.getEmploymentId(), emp.getEmploymentId())[ CD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_14 $$ s.close()[ CD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_62 $$ s = openSession()[ CD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_63 $$ t = s.beginTransaction()[ CD ]
Line_62 $$ s = openSession()-->Line_76 $$ s.close()[ FD ]
Line_15 $$ s = openSession()-->Line_71 $$ s.delete(emp2)[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_74 $$ s.delete(ifa)[ CD ]
Line_26 $$ s = openSession()-->Line_28 $$ Query sqlQuery = s.getNamedQuery("EmploymentAndPerson")[ FD ]
Line_18 $$ List list = namedQuery.list()-->Line_20 $$ Employment emp2 = (Employment) list.get(0)[ FD ]
Line_15 $$ s = openSession()-->Line_40 $$ sqlQuery = s.getNamedQuery("organizationreturnproperty")[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_69 $$ emp2 = (Employment) objs[0][ CD ]
Line_38 $$ s = openSession()-->Line_71 $$ s.delete(emp2)[ FD ]
Line_62 $$ s = openSession()-->Line_63 $$ t = s.beginTransaction()[ FD ]
Line_17 $$ Query namedQuery = s.getNamedQuery("AllEmploymentAsMapped")-->Line_64 $$ namedQuery = s.getNamedQuery("EmploymentAndPerson")[ FD ]
Line_62 $$ s = openSession()-->Line_72 $$ s.delete(jboss)[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_49 $$ if (jboss.getId() == ((Organization) m.get("org")).getId()) [ CD ]
Line_34 $$ Map m = (Map) res-->Line_46 $$ assertTrue(m.containsKey("org"))[ FD ]
Line_44 $$ m = (Map) list.get(0)-->Line_50 $$ assertClassAssignability(m.get("emp").getClass(), Employment.class)[ FD ]
Line_6 $$ Organization jboss = new Organization("JBoss")-->Line_9 $$ Serializable orgId = s.save(jboss)[ FD ]
Line_16 $$ t = s.beginTransaction()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_26 $$ s = openSession()-->Line_62 $$ s = openSession()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_18 $$ List list = namedQuery.list()[ CD ]
Line_17 $$ Query namedQuery = s.getNamedQuery("AllEmploymentAsMapped")-->Line_65 $$ list = namedQuery.list()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_34 $$ Map m = (Map) res[ CD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_38 $$ s = openSession()[ CD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_71 $$ s.delete(emp2)[ CD ]
Line_3 $$ Session s = openSession()-->Line_15 $$ s = openSession()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_67 $$ Object[] objs = (Object[]) list.get(0)[ CD ]
Line_52 $$ Map m2 = (Map) list.get(1)-->Line_57 $$ if (jboss.getId() == ((Organization) m2.get("org")).getId()) [ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_44 $$ m = (Map) list.get(0)[ CD ]
Line_15 $$ s = openSession()-->Line_38 $$ s = openSession()[ FD ]
Line_44 $$ m = (Map) list.get(0)-->Line_45 $$ assertEquals(2, m.size())[ FD ]
Line_27 $$ t = s.beginTransaction()-->Line_36 $$ t.commit()[ FD ]
Line_26 $$ s = openSession()-->Line_72 $$ s.delete(jboss)[ FD ]
Line_34 $$ Map m = (Map) res-->Line_48 $$ assertClassAssignability(m.get("org").getClass(), Organization.class)[ FD ]
Line_26 $$ s = openSession()-->Line_73 $$ s.delete(gavin)[ FD ]
Line_38 $$ s = openSession()-->Line_73 $$ s.delete(gavin)[ FD ]
Line_3 $$ Session s = openSession()-->Line_74 $$ s.delete(ifa)[ FD ]
Line_18 $$ List list = namedQuery.list()-->Line_42 $$ list = sqlQuery.list()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_8 $$ Employment emp = new Employment(gavin, jboss, "AU")[ CD ]
Line_3 $$ Session s = openSession()-->Line_12 $$ s.save(emp)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_36 $$ t.commit()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_3 $$ Session s = openSession()[ CD ]
Line_16 $$ t = s.beginTransaction()-->Line_39 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_17 $$ Query namedQuery = s.getNamedQuery("AllEmploymentAsMapped")[ FD ]
Line_42 $$ list = sqlQuery.list()-->Line_43 $$ assertEquals(2, list.size())[ FD ]
Line_42 $$ list = sqlQuery.list()-->Line_44 $$ m = (Map) list.get(0)[ FD ]
Line_6 $$ Organization jboss = new Organization("JBoss")-->Line_72 $$ s.delete(jboss)[ FD ]
Line_65 $$ list = namedQuery.list()-->Line_67 $$ Object[] objs = (Object[]) list.get(0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_37 $$ s.close()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_36 $$ t.commit()[ CD ]
Line_62 $$ s = openSession()-->Line_64 $$ namedQuery = s.getNamedQuery("EmploymentAndPerson")[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_70 $$ gavin = (Person) objs[1][ CD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_35 $$ assertEquals(2, m.size())[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_16 $$ t = s.beginTransaction()[ FD ]
Line_16 $$ t = s.beginTransaction()-->Line_24 $$ t.commit()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_28 $$ Query sqlQuery = s.getNamedQuery("EmploymentAndPerson")[ CD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_45 $$ assertEquals(2, m.size())[ CD ]
Line_18 $$ List list = namedQuery.list()-->Line_67 $$ Object[] objs = (Object[]) list.get(0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_14 $$ s.close()[ FD ]
Line_16 $$ t = s.beginTransaction()-->Line_75 $$ t.commit()[ FD ]
Line_65 $$ list = namedQuery.list()-->Line_66 $$ assertEquals(1, list.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_61 $$ s.close()[ FD ]
Line_26 $$ s = openSession()-->Line_64 $$ namedQuery = s.getNamedQuery("EmploymentAndPerson")[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_55 $$ assertTrue(m2.containsKey("emp"))[ CD ]
Line_7 $$ Person gavin = new Person("Gavin")-->Line_11 $$ s.save(gavin)[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_46 $$ assertTrue(m.containsKey("org"))[ CD ]
Line_42 $$ list = sqlQuery.list()-->Line_52 $$ Map m2 = (Map) list.get(1)[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_4 $$ Transaction t = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_9 $$ Serializable orgId = s.save(jboss)[ FD ]
Line_8 $$ Employment emp = new Employment(gavin, jboss, "AU")-->Line_23 $$ assertEquals(emp2.getEndDate(), emp.getEndDate())[ FD ]
Line_34 $$ Map m = (Map) res-->Line_44 $$ m = (Map) list.get(0)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_75 $$ t.commit()[ FD ]
Line_18 $$ List list = namedQuery.list()-->Line_30 $$ list = sqlQuery.list()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_9 $$ Serializable orgId = s.save(jboss)[ CD ]
Line_20 $$ Employment emp2 = (Employment) list.get(0)-->Line_22 $$ assertEquals(emp2.getStartDate().getDate(), emp.getStartDate().getDate())[ FD ]
Line_40 $$ sqlQuery = s.getNamedQuery("organizationreturnproperty")-->Line_42 $$ list = sqlQuery.list()[ FD ]
Line_69 $$ emp2 = (Employment) objs[0]-->Line_71 $$ s.delete(emp2)[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_61 $$ s.close()[ CD ]
Line_30 $$ list = sqlQuery.list()-->Line_67 $$ Object[] objs = (Object[]) list.get(0)[ FD ]
Line_39 $$ t = s.beginTransaction()-->Line_63 $$ t = s.beginTransaction()[ FD ]
Line_38 $$ s = openSession()-->Line_40 $$ sqlQuery = s.getNamedQuery("organizationreturnproperty")[ FD ]
Line_18 $$ List list = namedQuery.list()-->Line_43 $$ assertEquals(2, list.size())[ FD ]
Line_34 $$ Map m = (Map) res-->Line_49 $$ if (jboss.getId() == ((Organization) m.get("org")).getId()) [ FD ]
Line_20 $$ Employment emp2 = (Employment) list.get(0)-->Line_69 $$ emp2 = (Employment) objs[0][ FD ]
Line_28 $$ Query sqlQuery = s.getNamedQuery("EmploymentAndPerson")-->Line_42 $$ list = sqlQuery.list()[ FD ]
Line_30 $$ list = sqlQuery.list()-->Line_43 $$ assertEquals(2, list.size())[ FD ]
Line_26 $$ s = openSession()-->Line_37 $$ s.close()[ FD ]
Line_26 $$ s = openSession()-->Line_71 $$ s.delete(emp2)[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_17 $$ Query namedQuery = s.getNamedQuery("AllEmploymentAsMapped")[ CD ]
Line_52 $$ Map m2 = (Map) list.get(1)-->Line_54 $$ assertTrue(m2.containsKey("org"))[ FD ]
Line_3 $$ Session s = openSession()-->Line_10 $$ Serializable orgId2 = s.save(ifa)[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_23 $$ assertEquals(emp2.getEndDate(), emp.getEndDate())[ CD ]
Line_38 $$ s = openSession()-->Line_64 $$ namedQuery = s.getNamedQuery("EmploymentAndPerson")[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_40 $$ sqlQuery = s.getNamedQuery("organizationreturnproperty")-->Line_41 $$ sqlQuery.setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_12 $$ s.save(emp)[ CD ]
Line_18 $$ List list = namedQuery.list()-->Line_52 $$ Map m2 = (Map) list.get(1)[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_13 $$ t.commit()[ CD ]
Line_38 $$ s = openSession()-->Line_61 $$ s.close()[ FD ]
Line_34 $$ Map m = (Map) res-->Line_50 $$ assertClassAssignability(m.get("emp").getClass(), Employment.class)[ FD ]
Line_15 $$ s = openSession()-->Line_16 $$ t = s.beginTransaction()[ FD ]
Line_15 $$ s = openSession()-->Line_64 $$ namedQuery = s.getNamedQuery("EmploymentAndPerson")[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_41 $$ sqlQuery.setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)[ CD ]
Line_57 $$ if (jboss.getId() == ((Organization) m2.get("org")).getId()) -->Line_58 $$ assertClassAssignability(m2.get("emp").getClass(), Employment.class)[ CD ]
Line_3 $$ Session s = openSession()-->Line_25 $$ s.close()[ FD ]
Line_26 $$ s = openSession()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_5 $$ Organization ifa = new Organization("IFA")[ CD ]
Line_18 $$ List list = namedQuery.list()-->Line_44 $$ m = (Map) list.get(0)[ FD ]
Line_15 $$ s = openSession()-->Line_73 $$ s.delete(gavin)[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_54 $$ assertTrue(m2.containsKey("org"))[ CD ]
Line_42 $$ list = sqlQuery.list()-->Line_65 $$ list = namedQuery.list()[ FD ]
Line_52 $$ Map m2 = (Map) list.get(1)-->Line_58 $$ assertClassAssignability(m2.get("emp").getClass(), Employment.class)[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_60 $$ t.commit()[ CD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_11 $$ s.save(gavin)[ CD ]
Line_7 $$ Person gavin = new Person("Gavin")-->Line_73 $$ s.delete(gavin)[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_75 $$ t.commit()[ CD ]
Line_20 $$ Employment emp2 = (Employment) list.get(0)-->Line_71 $$ s.delete(emp2)[ FD ]
Line_5 $$ Organization ifa = new Organization("IFA")-->Line_74 $$ s.delete(ifa)[ FD ]
Line_16 $$ t = s.beginTransaction()-->Line_60 $$ t.commit()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_10 $$ Serializable orgId2 = s.save(ifa)[ CD ]
Line_27 $$ t = s.beginTransaction()-->Line_75 $$ t.commit()[ FD ]
Line_15 $$ s = openSession()-->Line_62 $$ s = openSession()[ FD ]
Line_30 $$ list = sqlQuery.list()-->Line_42 $$ list = sqlQuery.list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_26 $$ s = openSession()[ FD ]
Line_8 $$ Employment emp = new Employment(gavin, jboss, "AU")-->Line_21 $$ assertEquals(emp2.getEmploymentId(), emp.getEmploymentId())[ FD ]
Line_34 $$ Map m = (Map) res-->Line_45 $$ assertEquals(2, m.size())[ FD ]
Line_27 $$ t = s.beginTransaction()-->Line_60 $$ t.commit()[ FD ]
Line_17 $$ Query namedQuery = s.getNamedQuery("AllEmploymentAsMapped")-->Line_18 $$ List list = namedQuery.list()[ FD ]
Line_32 $$ Object res = list.get(0)-->Line_33 $$ assertClassAssignability(Map.class, res.getClass())[ FD ]
Line_62 $$ s = openSession()-->Line_73 $$ s.delete(gavin)[ FD ]
Line_52 $$ Map m2 = (Map) list.get(1)-->Line_56 $$ assertClassAssignability(m2.get("org").getClass(), Organization.class)[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_30 $$ list = sqlQuery.list()[ CD ]
Line_5 $$ Organization ifa = new Organization("IFA")-->Line_10 $$ Serializable orgId2 = s.save(ifa)[ FD ]
Line_3 $$ Session s = openSession()-->Line_39 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Organization jboss = new Organization("JBoss")-->Line_49 $$ if (jboss.getId() == ((Organization) m.get("org")).getId()) [ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_6 $$ Organization jboss = new Organization("JBoss")[ CD ]
Line_30 $$ list = sqlQuery.list()-->Line_44 $$ m = (Map) list.get(0)[ FD ]
Line_44 $$ m = (Map) list.get(0)-->Line_49 $$ if (jboss.getId() == ((Organization) m.get("org")).getId()) [ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_39 $$ t = s.beginTransaction()[ CD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_64 $$ namedQuery = s.getNamedQuery("EmploymentAndPerson")[ CD ]
Line_20 $$ Employment emp2 = (Employment) list.get(0)-->Line_21 $$ assertEquals(emp2.getEmploymentId(), emp.getEmploymentId())[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_39 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_53 $$ assertEquals(2, m.size())[ CD ]
Line_16 $$ t = s.beginTransaction()-->Line_36 $$ t.commit()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_63 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_40 $$ sqlQuery = s.getNamedQuery("organizationreturnproperty")[ FD ]
Line_18 $$ List list = namedQuery.list()-->Line_65 $$ list = namedQuery.list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_71 $$ s.delete(emp2)[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_76 $$ s.close()[ CD ]
Line_6 $$ Organization jboss = new Organization("JBoss")-->Line_57 $$ if (jboss.getId() == ((Organization) m2.get("org")).getId()) [ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_47 $$ assertTrue(m.containsKey("emp"))[ CD ]
Line_30 $$ list = sqlQuery.list()-->Line_65 $$ list = namedQuery.list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_62 $$ s = openSession()[ FD ]
Line_52 $$ Map m2 = (Map) list.get(1)-->Line_55 $$ assertTrue(m2.containsKey("emp"))[ FD ]
Line_8 $$ Employment emp = new Employment(gavin, jboss, "AU")-->Line_22 $$ assertEquals(emp2.getStartDate().getDate(), emp.getStartDate().getDate())[ FD ]
Line_28 $$ Query sqlQuery = s.getNamedQuery("EmploymentAndPerson")-->Line_30 $$ list = sqlQuery.list()[ FD ]
Line_64 $$ namedQuery = s.getNamedQuery("EmploymentAndPerson")-->Line_65 $$ list = namedQuery.list()[ FD ]
Line_62 $$ s = openSession()-->Line_71 $$ s.delete(emp2)[ FD ]
Line_34 $$ Map m = (Map) res-->Line_53 $$ assertEquals(2, m.size())[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_68 $$ assertEquals(2, objs.length)[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_24 $$ t.commit()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_43 $$ assertEquals(2, list.size())[ CD ]
Line_26 $$ s = openSession()-->Line_39 $$ t = s.beginTransaction()[ FD ]
Line_70 $$ gavin = (Person) objs[1]-->Line_73 $$ s.delete(gavin)[ FD ]
Line_38 $$ s = openSession()-->Line_74 $$ s.delete(ifa)[ FD ]
Line_15 $$ s = openSession()-->Line_25 $$ s.close()[ FD ]
Line_42 $$ list = sqlQuery.list()-->Line_66 $$ assertEquals(1, list.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_38 $$ s = openSession()[ FD ]
Line_15 $$ s = openSession()-->Line_61 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_72 $$ s.delete(jboss)[ FD ]
Line_3 $$ Session s = openSession()-->Line_16 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_56 $$ assertClassAssignability(m2.get("org").getClass(), Organization.class)[ CD ]
Line_15 $$ s = openSession()-->Line_72 $$ s.delete(jboss)[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_42 $$ list = sqlQuery.list()[ CD ]
Line_26 $$ s = openSession()-->Line_61 $$ s.close()[ FD ]
Line_63 $$ t = s.beginTransaction()-->Line_75 $$ t.commit()[ FD ]
Line_34 $$ Map m = (Map) res-->Line_47 $$ assertTrue(m.containsKey("emp"))[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_65 $$ list = namedQuery.list()[ CD ]
Line_18 $$ List list = namedQuery.list()-->Line_66 $$ assertEquals(1, list.size())[ FD ]
Line_15 $$ s = openSession()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_31 $$ assertEquals(1, list.size())[ CD ]
Line_44 $$ m = (Map) list.get(0)-->Line_53 $$ assertEquals(2, m.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_28 $$ Query sqlQuery = s.getNamedQuery("EmploymentAndPerson")[ FD ]
Line_28 $$ Query sqlQuery = s.getNamedQuery("EmploymentAndPerson")-->Line_41 $$ sqlQuery.setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)[ FD ]
Line_44 $$ m = (Map) list.get(0)-->Line_47 $$ assertTrue(m.containsKey("emp"))[ FD ]
Line_3 $$ Session s = openSession()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_26 $$ s = openSession()-->Line_76 $$ s.close()[ FD ]
Line_15 $$ s = openSession()-->Line_74 $$ s.delete(ifa)[ FD ]
Line_26 $$ s = openSession()-->Line_40 $$ sqlQuery = s.getNamedQuery("organizationreturnproperty")[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_57 $$ if (jboss.getId() == ((Organization) m2.get("org")).getId()) [ CD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_7 $$ Person gavin = new Person("Gavin")[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_60 $$ t.commit()[ FD ]
Line_30 $$ list = sqlQuery.list()-->Line_66 $$ assertEquals(1, list.size())[ FD ]
Line_7 $$ Person gavin = new Person("Gavin")-->Line_70 $$ gavin = (Person) objs[1][ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_48 $$ assertClassAssignability(m.get("org").getClass(), Organization.class)[ CD ]
Line_34 $$ Map m = (Map) res-->Line_35 $$ assertEquals(2, m.size())[ FD ]
Line_2 $$ public void testMappedAliasStrategy() -->Line_19 $$ assertEquals(1, list.size())[ CD ]
