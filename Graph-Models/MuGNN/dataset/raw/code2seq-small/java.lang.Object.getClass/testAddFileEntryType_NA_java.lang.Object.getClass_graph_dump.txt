Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_11 $$ Assert.assertEquals(1, ddmStructures.size())[ CD ]
Line_18 $$ boolean hasUserLocale = ArrayUtil.contains(availableLocales, user.getLocale())-->Line_19 $$ Assert.assertTrue(hasUserLocale)[ FD ]
Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_4 $$ byte[] testFileBytes = FileUtil.getBytes(getClass(), _TEST_DDM_STRUCTURE)[ CD ]
Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_8 $$ serviceContext.setLanguageId(LocaleUtil.toLanguageId(user.getLocale()))[ CD ]
Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_20 $$ DLFileEntryTypeLocalServiceUtil.deleteDLFileEntryType(dlFileEntryType)[ CD ]
Line_13 $$ Locale[] availableLocales = LocaleUtil.fromLanguageIds(ddmStructure.getAvailableLanguageIds())-->Line_18 $$ boolean hasUserLocale = ArrayUtil.contains(availableLocales, user.getLocale())[ FD ]
Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_6 $$ serviceContext.setAttribute("ddmForm", DDMBeanTranslatorUtil.translate(ddmForm))[ CD ]
Line_3 $$ ServiceContext serviceContext = new ServiceContext()-->Line_9 $$ DLFileEntryType dlFileEntryType = DLFileEntryTypeLocalServiceUtil.addFileEntryType(TestPropsValues.getUserId(), _group.getGroupId(), "Test Structure", StringPool.BLANK, new long[0], serviceContext)[ FD ]
Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_19 $$ Assert.assertTrue(hasUserLocale)[ CD ]
Line_3 $$ ServiceContext serviceContext = new ServiceContext()-->Line_8 $$ serviceContext.setLanguageId(LocaleUtil.toLanguageId(user.getLocale()))[ FD ]
Line_10 $$ List<com.liferay.portlet.dynamicdatamapping.DDMStructure> ddmStructures = dlFileEntryType.getDDMStructures()-->Line_12 $$ DDMStructure ddmStructure = DDMStructureLocalServiceUtil.getStructure(ddmStructures.get(0).getStructureId())[ FD ]
Line_3 $$ ServiceContext serviceContext = new ServiceContext()-->Line_6 $$ serviceContext.setAttribute("ddmForm", DDMBeanTranslatorUtil.translate(ddmForm))[ FD ]
Line_7 $$ User user = TestPropsValues.getUser()-->Line_8 $$ serviceContext.setLanguageId(LocaleUtil.toLanguageId(user.getLocale()))[ FD ]
Line_9 $$ DLFileEntryType dlFileEntryType = DLFileEntryTypeLocalServiceUtil.addFileEntryType(TestPropsValues.getUserId(), _group.getGroupId(), "Test Structure", StringPool.BLANK, new long[0], serviceContext)-->Line_10 $$ List<com.liferay.portlet.dynamicdatamapping.DDMStructure> ddmStructures = dlFileEntryType.getDDMStructures()[ FD ]
Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_5 $$ DDMForm ddmForm = DDMFormXSDDeserializerUtil.deserialize(new String(testFileBytes))[ CD ]
Line_12 $$ DDMStructure ddmStructure = DDMStructureLocalServiceUtil.getStructure(ddmStructures.get(0).getStructureId())-->Line_13 $$ Locale[] availableLocales = LocaleUtil.fromLanguageIds(ddmStructure.getAvailableLanguageIds())[ FD ]
Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_7 $$ User user = TestPropsValues.getUser()[ CD ]
Line_16 $$ boolean hasHungarianLocale = ArrayUtil.contains(availableLocales, LocaleUtil.HUNGARY)-->Line_17 $$ Assert.assertTrue(hasHungarianLocale)[ FD ]
Line_14 $$ boolean hasDefaultLocale = ArrayUtil.contains(availableLocales, LocaleUtil.getSiteDefault())-->Line_15 $$ Assert.assertTrue(hasDefaultLocale)[ FD ]
Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_9 $$ DLFileEntryType dlFileEntryType = DLFileEntryTypeLocalServiceUtil.addFileEntryType(TestPropsValues.getUserId(), _group.getGroupId(), "Test Structure", StringPool.BLANK, new long[0], serviceContext)[ CD ]
Line_10 $$ List<com.liferay.portlet.dynamicdatamapping.DDMStructure> ddmStructures = dlFileEntryType.getDDMStructures()-->Line_11 $$ Assert.assertEquals(1, ddmStructures.size())[ FD ]
Line_7 $$ User user = TestPropsValues.getUser()-->Line_18 $$ boolean hasUserLocale = ArrayUtil.contains(availableLocales, user.getLocale())[ FD ]
Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_12 $$ DDMStructure ddmStructure = DDMStructureLocalServiceUtil.getStructure(ddmStructures.get(0).getStructureId())[ CD ]
Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_13 $$ Locale[] availableLocales = LocaleUtil.fromLanguageIds(ddmStructure.getAvailableLanguageIds())[ CD ]
Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_16 $$ boolean hasHungarianLocale = ArrayUtil.contains(availableLocales, LocaleUtil.HUNGARY)[ CD ]
Line_5 $$ DDMForm ddmForm = DDMFormXSDDeserializerUtil.deserialize(new String(testFileBytes))-->Line_6 $$ serviceContext.setAttribute("ddmForm", DDMBeanTranslatorUtil.translate(ddmForm))[ FD ]
Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_3 $$ ServiceContext serviceContext = new ServiceContext()[ CD ]
Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_14 $$ boolean hasDefaultLocale = ArrayUtil.contains(availableLocales, LocaleUtil.getSiteDefault())[ CD ]
Line_13 $$ Locale[] availableLocales = LocaleUtil.fromLanguageIds(ddmStructure.getAvailableLanguageIds())-->Line_16 $$ boolean hasHungarianLocale = ArrayUtil.contains(availableLocales, LocaleUtil.HUNGARY)[ FD ]
Line_13 $$ Locale[] availableLocales = LocaleUtil.fromLanguageIds(ddmStructure.getAvailableLanguageIds())-->Line_14 $$ boolean hasDefaultLocale = ArrayUtil.contains(availableLocales, LocaleUtil.getSiteDefault())[ FD ]
Line_9 $$ DLFileEntryType dlFileEntryType = DLFileEntryTypeLocalServiceUtil.addFileEntryType(TestPropsValues.getUserId(), _group.getGroupId(), "Test Structure", StringPool.BLANK, new long[0], serviceContext)-->Line_20 $$ DLFileEntryTypeLocalServiceUtil.deleteDLFileEntryType(dlFileEntryType)[ FD ]
Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_10 $$ List<com.liferay.portlet.dynamicdatamapping.DDMStructure> ddmStructures = dlFileEntryType.getDDMStructures()[ CD ]
Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_15 $$ Assert.assertTrue(hasDefaultLocale)[ CD ]
Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_17 $$ Assert.assertTrue(hasHungarianLocale)[ CD ]
Line_2 $$ public void testAddFileEntryType() throws Exception -->Line_18 $$ boolean hasUserLocale = ArrayUtil.contains(availableLocales, user.getLocale())[ CD ]
