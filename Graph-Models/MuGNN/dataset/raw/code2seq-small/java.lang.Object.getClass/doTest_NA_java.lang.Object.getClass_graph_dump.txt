Line_3 $$ if (arg instanceof String) -->Line_5 $$ given(rsetMethod.invoke(rset, 1)).willReturn(ret).willThrow(new SQLException("test"))[ CD ]
Line_2 $$ private void doTest(Method rsetMethod, Method rowsetMethod, Object arg, Object ret) throws Exception -->Line_3 $$ if (arg instanceof String) [ CD ]
Line_2 $$ private void doTest(Method rsetMethod, Method rowsetMethod, Object arg, Object ret) throws Exception -->Line_9 $$ rowsetMethod.invoke(rowset, arg)[ FD ]
Line_2 $$ private void doTest(Method rsetMethod, Method rowsetMethod, Object arg, Object ret) throws Exception -->Line_7 $$ given(rsetMethod.invoke(rset, arg)).willReturn(ret).willThrow(new SQLException("test"))[ FD ]
Line_2 $$ private void doTest(Method rsetMethod, Method rowsetMethod, Object arg, Object ret) throws Exception -->Line_9 $$ rowsetMethod.invoke(rowset, arg)[ CD ]
Line_2 $$ private void doTest(Method rsetMethod, Method rowsetMethod, Object arg, Object ret) throws Exception -->Line_5 $$ given(rsetMethod.invoke(rset, 1)).willReturn(ret).willThrow(new SQLException("test"))[ FD ]
Line_3 $$ if (arg instanceof String) -->Line_7 $$ given(rsetMethod.invoke(rset, arg)).willReturn(ret).willThrow(new SQLException("test"))[ CD ]
Line_3 $$ if (arg instanceof String) -->Line_4 $$ given(rset.findColumn((String) arg)).willReturn(1)[ CD ]
Line_2 $$ private void doTest(Method rsetMethod, Method rowsetMethod, Object arg, Object ret) throws Exception -->Line_11 $$ rowsetMethod.invoke(rowset, arg)[ FD ]
Line_2 $$ private void doTest(Method rsetMethod, Method rowsetMethod, Object arg, Object ret) throws Exception -->Line_3 $$ if (arg instanceof String) [ FD ]
