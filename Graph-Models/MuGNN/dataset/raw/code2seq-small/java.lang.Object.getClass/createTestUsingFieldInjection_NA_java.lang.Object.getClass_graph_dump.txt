Line_2 $$ private Object createTestUsingFieldInjection() throws Exception -->Line_18 $$ return testClassInstance[ CD ]
Line_3 $$ List<FrameworkField> annotatedFieldsByParameter = getAnnotatedFieldsByParameter()-->Line_4 $$ if (annotatedFieldsByParameter.size() != parameters.length) [ FD ]
Line_2 $$ private Object createTestUsingFieldInjection() throws Exception -->Line_7 $$ Object testClassInstance = getTestClass().getJavaClass().newInstance()[ CD ]
Line_7 $$ Object testClassInstance = getTestClass().getJavaClass().newInstance()-->Line_13 $$ field.set(testClassInstance, parameters[index])[ FD ]
Line_8 $$ for (FrameworkField each : annotatedFieldsByParameter) -->Line_9 $$ Field field = each.getField()[ FD ]
Line_10 $$ Parameterized.Parameter annotation = field.getAnnotation(Parameterized.Parameter.class)-->Line_11 $$ int index = annotation.value()[ FD ]
Line_9 $$ Field field = each.getField()-->Line_10 $$ Parameterized.Parameter annotation = field.getAnnotation(Parameterized.Parameter.class)[ FD ]
Line_9 $$ Field field = each.getField()-->Line_13 $$ field.set(testClassInstance, parameters[index])[ FD ]
Line_9 $$ Field field = each.getField()-->Line_15 $$ throw new Exception(getTestClass().getName() + ": Trying to set " + field.getName() + " with the value " + parameters[index] + " that is not the right type (" + parameters[index].getClass().getSimpleName() + " instead of " + field.getType().getSimpleName() + ").", iare)[ FD ]
Line_3 $$ List<FrameworkField> annotatedFieldsByParameter = getAnnotatedFieldsByParameter()-->Line_5 $$ throw new Exception("Wrong number of parameters and @Parameter fields." + " @Parameter fields counted: " + annotatedFieldsByParameter.size() + ", available parameters: " + parameters.length + ".")[ FD ]
Line_2 $$ private Object createTestUsingFieldInjection() throws Exception -->Line_4 $$ if (annotatedFieldsByParameter.size() != parameters.length) [ CD ]
Line_2 $$ private Object createTestUsingFieldInjection() throws Exception -->Line_3 $$ List<FrameworkField> annotatedFieldsByParameter = getAnnotatedFieldsByParameter()[ CD ]
