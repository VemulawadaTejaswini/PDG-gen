Line_2 $$ public void testLoadPathsMissedInputPaths() throws InterruptedException -->Line_7 $$ mergedPaths.put(inputPath1, mappedInputPath1)[ CD ]
Line_8 $$ NettyFabricWorkerExecutionChannelHandler nettyFabricWorkerExecutionChannelHandler = new NettyFabricWorkerExecutionChannelHandler(new MockRepository<Channel>("repository") -->Line_11 $$ defaultNoticeableFuture.set(mergedPaths)[ CD ]
Line_8 $$ NettyFabricWorkerExecutionChannelHandler nettyFabricWorkerExecutionChannelHandler = new NettyFabricWorkerExecutionChannelHandler(new MockRepository<Channel>("repository") -->Line_10 $$ DefaultNoticeableFuture<Map<Path, Path>> defaultNoticeableFuture = new DefaultNoticeableFuture()[ CD ]
Line_2 $$ public void testLoadPathsMissedInputPaths() throws InterruptedException -->Line_16 $$ builder.setBootstrapClassPath(StringPool.BLANK)[ CD ]
Line_2 $$ public void testLoadPathsMissedInputPaths() throws InterruptedException -->Line_5 $$ Path mappedInputPath1 = Paths.get("mappedInputPath1")[ CD ]
Line_2 $$ public void testLoadPathsMissedInputPaths() throws InterruptedException -->Line_22 $$ NoticeableFuture<LoadedPaths> noticeableFuture = nettyFabricWorkerExecutionChannelHandler.loadPaths(_embeddedChannel, new NettyFabricWorkerConfig<Serializable>(0, processConfig, processCallable, fabricPathMappingVisitor.getPathMap()))[ CD ]
Line_2 $$ public void testLoadPathsMissedInputPaths() throws InterruptedException -->Line_6 $$ Path inputPath2 = Paths.get("inputPaths2")[ CD ]
Line_2 $$ public void testLoadPathsMissedInputPaths() throws InterruptedException -->Line_8 $$ NettyFabricWorkerExecutionChannelHandler nettyFabricWorkerExecutionChannelHandler = new NettyFabricWorkerExecutionChannelHandler(new MockRepository<Channel>("repository") [ CD ]
Line_3 $$ final Map<Path, Path> mergedPaths = new HashMap()-->Line_7 $$ mergedPaths.put(inputPath1, mappedInputPath1)[ FD ]
Line_2 $$ public void testLoadPathsMissedInputPaths() throws InterruptedException -->Line_3 $$ final Map<Path, Path> mergedPaths = new HashMap()[ CD ]
Line_2 $$ public void testLoadPathsMissedInputPaths() throws InterruptedException -->Line_17 $$ builder.setRuntimeClassPath(StringPool.BLANK)[ CD ]
Line_3 $$ final Map<Path, Path> mergedPaths = new HashMap()-->Line_11 $$ defaultNoticeableFuture.set(mergedPaths)[ FD ]
Line_6 $$ Path inputPath2 = Paths.get("inputPaths2")-->Line_19 $$ ProcessCallable<Serializable> processCallable = new LoadPathProcessCallable(inputPath1.toFile(), inputPath2.toFile())[ FD ]
Line_8 $$ NettyFabricWorkerExecutionChannelHandler nettyFabricWorkerExecutionChannelHandler = new NettyFabricWorkerExecutionChannelHandler(new MockRepository<Channel>("repository") -->Line_12 $$ return defaultNoticeableFuture[ CD ]
Line_2 $$ public void testLoadPathsMissedInputPaths() throws InterruptedException -->Line_21 $$ ObjectGraphUtil.walkObjectGraph(processCallable, fabricPathMappingVisitor)[ CD ]
Line_10 $$ DefaultNoticeableFuture<Map<Path, Path>> defaultNoticeableFuture = new DefaultNoticeableFuture()-->Line_11 $$ defaultNoticeableFuture.set(mergedPaths)[ FD ]
Line_4 $$ Path inputPath1 = Paths.get("inputPaths1")-->Line_7 $$ mergedPaths.put(inputPath1, mappedInputPath1)[ FD ]
Line_4 $$ Path inputPath1 = Paths.get("inputPaths1")-->Line_19 $$ ProcessCallable<Serializable> processCallable = new LoadPathProcessCallable(inputPath1.toFile(), inputPath2.toFile())[ FD ]
Line_8 $$ NettyFabricWorkerExecutionChannelHandler nettyFabricWorkerExecutionChannelHandler = new NettyFabricWorkerExecutionChannelHandler(new MockRepository<Channel>("repository") -->Line_22 $$ NoticeableFuture<LoadedPaths> noticeableFuture = nettyFabricWorkerExecutionChannelHandler.loadPaths(_embeddedChannel, new NettyFabricWorkerConfig<Serializable>(0, processConfig, processCallable, fabricPathMappingVisitor.getPathMap()))[ FD ]
Line_2 $$ public void testLoadPathsMissedInputPaths() throws InterruptedException -->Line_4 $$ Path inputPath1 = Paths.get("inputPaths1")[ CD ]
Line_6 $$ Path inputPath2 = Paths.get("inputPaths2")-->Line_28 $$ Assert.assertEquals("Unable to get input paths: " + Arrays.asList(inputPath2), throwable.getMessage())[ FD ]
Line_2 $$ public void testLoadPathsMissedInputPaths() throws InterruptedException -->Line_18 $$ ProcessConfig processConfig = builder.build()[ CD ]
Line_5 $$ Path mappedInputPath1 = Paths.get("mappedInputPath1")-->Line_7 $$ mergedPaths.put(inputPath1, mappedInputPath1)[ FD ]
