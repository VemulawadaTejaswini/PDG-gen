Line_4 $$ final ServiceBuilder<RemotingProfileService> profileServiceBuilder = serviceTarget.addService(profileServiceName, profileService)-->Line_27 $$ profileServiceBuilder.addDependency(localEjbReceiverServiceName, LocalEjbReceiver.class, profileService.getLocalEjbReceiverInjector())[ FD ]
Line_2 $$ private RemotingProfileService createInternalRemotingProfileService(final ServiceName profileServiceName, final ServiceTarget serviceTarget, final EJBClientDescriptorMetaData ejbClientDescriptorMetaData) -->Line_22 $$ final boolean localReceiverExcluded = ejbClientDescriptorMetaData.isLocalReceiverExcluded() != null ? ejbClientDescriptorMetaData.isLocalReceiverExcluded() : false[ CD ]
Line_13 $$ final OptionMap channelCreationOpts-->Line_17 $$ channelCreationOpts = getOptionMapFromProperties(channelCreationProps, this.getClass().getClassLoader())[ FD ]
Line_13 $$ final OptionMap channelCreationOpts-->Line_19 $$ profileService.addChannelCreationOption(connectionRef, channelCreationOpts)[ FD ]
Line_6 $$ final String connectionRef = remotingReceiverConfiguration.getOutboundConnectionRef()-->Line_19 $$ profileService.addChannelCreationOption(connectionRef, channelCreationOpts)[ FD ]
Line_5 $$ for (final EJBClientDescriptorMetaData.RemotingReceiverConfiguration remotingReceiverConfiguration : ejbClientDescriptorMetaData.getRemotingReceiverConfigurations()) -->Line_12 $$ final Properties channelCreationProps = remotingReceiverConfiguration.getChannelCreationOptions()[ FD ]
Line_3 $$ final RemotingProfileService profileService = new RemotingProfileService()-->Line_4 $$ final ServiceBuilder<RemotingProfileService> profileServiceBuilder = serviceTarget.addService(profileServiceName, profileService)[ FD ]
Line_15 $$ channelCreationOpts = OptionMap.EMPTY-->Line_17 $$ channelCreationOpts = getOptionMapFromProperties(channelCreationProps, this.getClass().getClassLoader())[ FD ]
Line_14 $$ if (channelCreationProps == null) -->Line_15 $$ channelCreationOpts = OptionMap.EMPTY[ CD ]
Line_6 $$ final String connectionRef = remotingReceiverConfiguration.getOutboundConnectionRef()-->Line_20 $$ EjbLogger.DEPLOYMENT_LOGGER.debugf("Channel creation options for connection %s are %s", channelCreationOpts, connectionRef, channelCreationOpts)[ FD ]
Line_24 $$ final Boolean passByValue = ejbClientDescriptorMetaData.isLocalReceiverPassByValue()-->Line_25 $$ if (passByValue != null) [ FD ]
Line_4 $$ final ServiceBuilder<RemotingProfileService> profileServiceBuilder = serviceTarget.addService(profileServiceName, profileService)-->Line_32 $$ profileServiceBuilder.install()[ FD ]
Line_25 $$ if (passByValue != null) -->Line_26 $$ final ServiceName localEjbReceiverServiceName = passByValue == true ? LocalEjbReceiver.BY_VALUE_SERVICE_NAME : LocalEjbReceiver.BY_REFERENCE_SERVICE_NAME[ CD ]
Line_15 $$ channelCreationOpts = OptionMap.EMPTY-->Line_20 $$ EjbLogger.DEPLOYMENT_LOGGER.debugf("Channel creation options for connection %s are %s", channelCreationOpts, connectionRef, channelCreationOpts)[ FD ]
Line_2 $$ private RemotingProfileService createInternalRemotingProfileService(final ServiceName profileServiceName, final ServiceTarget serviceTarget, final EJBClientDescriptorMetaData ejbClientDescriptorMetaData) -->Line_4 $$ final ServiceBuilder<RemotingProfileService> profileServiceBuilder = serviceTarget.addService(profileServiceName, profileService)[ CD ]
Line_12 $$ final Properties channelCreationProps = remotingReceiverConfiguration.getChannelCreationOptions()-->Line_17 $$ channelCreationOpts = getOptionMapFromProperties(channelCreationProps, this.getClass().getClassLoader())[ FD ]
Line_2 $$ private RemotingProfileService createInternalRemotingProfileService(final ServiceName profileServiceName, final ServiceTarget serviceTarget, final EJBClientDescriptorMetaData ejbClientDescriptorMetaData) -->Line_22 $$ final boolean localReceiverExcluded = ejbClientDescriptorMetaData.isLocalReceiverExcluded() != null ? ejbClientDescriptorMetaData.isLocalReceiverExcluded() : false[ FD ]
Line_2 $$ private RemotingProfileService createInternalRemotingProfileService(final ServiceName profileServiceName, final ServiceTarget serviceTarget, final EJBClientDescriptorMetaData ejbClientDescriptorMetaData) -->Line_24 $$ final Boolean passByValue = ejbClientDescriptorMetaData.isLocalReceiverPassByValue()[ FD ]
Line_7 $$ final ServiceName connectionDependencyService = AbstractOutboundConnectionService.OUTBOUND_CONNECTION_BASE_SERVICE_NAME.append(connectionRef)-->Line_9 $$ profileServiceBuilder.addDependency(connectionDependencyService, AbstractOutboundConnectionService.class, connectionInjector)[ FD ]
Line_2 $$ private RemotingProfileService createInternalRemotingProfileService(final ServiceName profileServiceName, final ServiceTarget serviceTarget, final EJBClientDescriptorMetaData ejbClientDescriptorMetaData) -->Line_5 $$ for (final EJBClientDescriptorMetaData.RemotingReceiverConfiguration remotingReceiverConfiguration : ejbClientDescriptorMetaData.getRemotingReceiverConfigurations()) [ FD ]
Line_13 $$ final OptionMap channelCreationOpts-->Line_15 $$ channelCreationOpts = OptionMap.EMPTY[ FD ]
Line_17 $$ channelCreationOpts = getOptionMapFromProperties(channelCreationProps, this.getClass().getClassLoader())-->Line_19 $$ profileService.addChannelCreationOption(connectionRef, channelCreationOpts)[ FD ]
Line_25 $$ if (passByValue != null) -->Line_27 $$ profileServiceBuilder.addDependency(localEjbReceiverServiceName, LocalEjbReceiver.class, profileService.getLocalEjbReceiverInjector())[ CD ]
Line_26 $$ final ServiceName localEjbReceiverServiceName = passByValue == true ? LocalEjbReceiver.BY_VALUE_SERVICE_NAME : LocalEjbReceiver.BY_REFERENCE_SERVICE_NAME-->Line_27 $$ profileServiceBuilder.addDependency(localEjbReceiverServiceName, LocalEjbReceiver.class, profileService.getLocalEjbReceiverInjector())[ FD ]
Line_2 $$ private RemotingProfileService createInternalRemotingProfileService(final ServiceName profileServiceName, final ServiceTarget serviceTarget, final EJBClientDescriptorMetaData ejbClientDescriptorMetaData) -->Line_33 $$ return profileService[ CD ]
Line_25 $$ if (passByValue != null) -->Line_29 $$ profileServiceBuilder.addDependency(LocalEjbReceiver.DEFAULT_LOCAL_EJB_RECEIVER_SERVICE_NAME, LocalEjbReceiver.class, profileService.getLocalEjbReceiverInjector())[ CD ]
Line_2 $$ private RemotingProfileService createInternalRemotingProfileService(final ServiceName profileServiceName, final ServiceTarget serviceTarget, final EJBClientDescriptorMetaData ejbClientDescriptorMetaData) -->Line_23 $$ if (!localReceiverExcluded) [ CD ]
Line_17 $$ channelCreationOpts = getOptionMapFromProperties(channelCreationProps, this.getClass().getClassLoader())-->Line_20 $$ EjbLogger.DEPLOYMENT_LOGGER.debugf("Channel creation options for connection %s are %s", channelCreationOpts, connectionRef, channelCreationOpts)[ FD ]
Line_7 $$ final ServiceName connectionDependencyService = AbstractOutboundConnectionService.OUTBOUND_CONNECTION_BASE_SERVICE_NAME.append(connectionRef)-->Line_10 $$ profileService.addRemotingConnectionInjector(connectionDependencyService, connectionInjector)[ FD ]
Line_5 $$ for (final EJBClientDescriptorMetaData.RemotingReceiverConfiguration remotingReceiverConfiguration : ejbClientDescriptorMetaData.getRemotingReceiverConfigurations()) -->Line_11 $$ profileService.addConnectionTimeout(connectionRef, remotingReceiverConfiguration.getConnectionTimeout())[ FD ]
Line_13 $$ final OptionMap channelCreationOpts-->Line_20 $$ EjbLogger.DEPLOYMENT_LOGGER.debugf("Channel creation options for connection %s are %s", channelCreationOpts, connectionRef, channelCreationOpts)[ FD ]
Line_3 $$ final RemotingProfileService profileService = new RemotingProfileService()-->Line_27 $$ profileServiceBuilder.addDependency(localEjbReceiverServiceName, LocalEjbReceiver.class, profileService.getLocalEjbReceiverInjector())[ FD ]
Line_2 $$ private RemotingProfileService createInternalRemotingProfileService(final ServiceName profileServiceName, final ServiceTarget serviceTarget, final EJBClientDescriptorMetaData ejbClientDescriptorMetaData) -->Line_3 $$ final RemotingProfileService profileService = new RemotingProfileService()[ CD ]
Line_23 $$ if (!localReceiverExcluded) -->Line_25 $$ if (passByValue != null) [ CD ]
Line_5 $$ for (final EJBClientDescriptorMetaData.RemotingReceiverConfiguration remotingReceiverConfiguration : ejbClientDescriptorMetaData.getRemotingReceiverConfigurations()) -->Line_6 $$ final String connectionRef = remotingReceiverConfiguration.getOutboundConnectionRef()[ FD ]
Line_3 $$ final RemotingProfileService profileService = new RemotingProfileService()-->Line_19 $$ profileService.addChannelCreationOption(connectionRef, channelCreationOpts)[ FD ]
Line_4 $$ final ServiceBuilder<RemotingProfileService> profileServiceBuilder = serviceTarget.addService(profileServiceName, profileService)-->Line_29 $$ profileServiceBuilder.addDependency(LocalEjbReceiver.DEFAULT_LOCAL_EJB_RECEIVER_SERVICE_NAME, LocalEjbReceiver.class, profileService.getLocalEjbReceiverInjector())[ FD ]
Line_2 $$ private RemotingProfileService createInternalRemotingProfileService(final ServiceName profileServiceName, final ServiceTarget serviceTarget, final EJBClientDescriptorMetaData ejbClientDescriptorMetaData) -->Line_32 $$ profileServiceBuilder.install()[ CD ]
Line_2 $$ private RemotingProfileService createInternalRemotingProfileService(final ServiceName profileServiceName, final ServiceTarget serviceTarget, final EJBClientDescriptorMetaData ejbClientDescriptorMetaData) -->Line_4 $$ final ServiceBuilder<RemotingProfileService> profileServiceBuilder = serviceTarget.addService(profileServiceName, profileService)[ FD ]
Line_3 $$ final RemotingProfileService profileService = new RemotingProfileService()-->Line_10 $$ profileService.addRemotingConnectionInjector(connectionDependencyService, connectionInjector)[ FD ]
Line_8 $$ final InjectedValue<AbstractOutboundConnectionService> connectionInjector = new InjectedValue<AbstractOutboundConnectionService>()-->Line_10 $$ profileService.addRemotingConnectionInjector(connectionDependencyService, connectionInjector)[ FD ]
Line_12 $$ final Properties channelCreationProps = remotingReceiverConfiguration.getChannelCreationOptions()-->Line_14 $$ if (channelCreationProps == null) [ FD ]
Line_3 $$ final RemotingProfileService profileService = new RemotingProfileService()-->Line_11 $$ profileService.addConnectionTimeout(connectionRef, remotingReceiverConfiguration.getConnectionTimeout())[ FD ]
Line_15 $$ channelCreationOpts = OptionMap.EMPTY-->Line_19 $$ profileService.addChannelCreationOption(connectionRef, channelCreationOpts)[ FD ]
Line_14 $$ if (channelCreationProps == null) -->Line_17 $$ channelCreationOpts = getOptionMapFromProperties(channelCreationProps, this.getClass().getClassLoader())[ CD ]
Line_23 $$ if (!localReceiverExcluded) -->Line_24 $$ final Boolean passByValue = ejbClientDescriptorMetaData.isLocalReceiverPassByValue()[ CD ]
Line_6 $$ final String connectionRef = remotingReceiverConfiguration.getOutboundConnectionRef()-->Line_7 $$ final ServiceName connectionDependencyService = AbstractOutboundConnectionService.OUTBOUND_CONNECTION_BASE_SERVICE_NAME.append(connectionRef)[ FD ]
Line_4 $$ final ServiceBuilder<RemotingProfileService> profileServiceBuilder = serviceTarget.addService(profileServiceName, profileService)-->Line_9 $$ profileServiceBuilder.addDependency(connectionDependencyService, AbstractOutboundConnectionService.class, connectionInjector)[ FD ]
Line_8 $$ final InjectedValue<AbstractOutboundConnectionService> connectionInjector = new InjectedValue<AbstractOutboundConnectionService>()-->Line_9 $$ profileServiceBuilder.addDependency(connectionDependencyService, AbstractOutboundConnectionService.class, connectionInjector)[ FD ]
Line_6 $$ final String connectionRef = remotingReceiverConfiguration.getOutboundConnectionRef()-->Line_11 $$ profileService.addConnectionTimeout(connectionRef, remotingReceiverConfiguration.getConnectionTimeout())[ FD ]
Line_3 $$ final RemotingProfileService profileService = new RemotingProfileService()-->Line_29 $$ profileServiceBuilder.addDependency(LocalEjbReceiver.DEFAULT_LOCAL_EJB_RECEIVER_SERVICE_NAME, LocalEjbReceiver.class, profileService.getLocalEjbReceiverInjector())[ FD ]
Line_22 $$ final boolean localReceiverExcluded = ejbClientDescriptorMetaData.isLocalReceiverExcluded() != null ? ejbClientDescriptorMetaData.isLocalReceiverExcluded() : false-->Line_23 $$ if (!localReceiverExcluded) [ FD ]
