Line_2 $$ protected <T extends Number & Comparable<? super T>> void createSortableNumericField(String name, boolean typify, T... values) -->Line_7 $$ createSortableNumericField(name, typify, String.valueOf(minValue), minValue.getClass())[ CD ]
Line_2 $$ protected <T extends Number & Comparable<? super T>> void createSortableNumericField(String name, boolean typify, T... values) -->Line_3 $$ if ((values == null) || (values.length == 0)) [ CD ]
Line_2 $$ protected <T extends Number & Comparable<? super T>> void createSortableNumericField(String name, boolean typify, T... values) -->Line_6 $$ T minValue = Collections.min(Arrays.asList(values))[ FD ]
Line_6 $$ T minValue = Collections.min(Arrays.asList(values))-->Line_7 $$ createSortableNumericField(name, typify, String.valueOf(minValue), minValue.getClass())[ FD ]
Line_3 $$ if ((values == null) || (values.length == 0)) -->Line_4 $$ return[ CD ]
Line_2 $$ protected <T extends Number & Comparable<? super T>> void createSortableNumericField(String name, boolean typify, T... values) -->Line_6 $$ T minValue = Collections.min(Arrays.asList(values))[ CD ]
Line_2 $$ protected <T extends Number & Comparable<? super T>> void createSortableNumericField(String name, boolean typify, T... values) -->Line_7 $$ createSortableNumericField(name, typify, String.valueOf(minValue), minValue.getClass())[ FD ]
