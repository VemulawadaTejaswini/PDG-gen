Line_3 $$ ApplicationContext applicationContext = new ClassPathXmlApplicationContext("contextNamespaceHandlerTests-override.xml", getClass())-->Line_4 $$ Map<String, PropertyOverrideConfigurer> beans = applicationContext.getBeansOfType(PropertyOverrideConfigurer.class)[ FD ]
Line_2 $$ public void propertyOverride() throws Exception -->Line_7 $$ Calendar calendar = Calendar.getInstance()[ CD ]
Line_2 $$ public void propertyOverride() throws Exception -->Line_5 $$ assertFalse("No PropertyOverrideConfigurer found", beans.isEmpty())[ CD ]
Line_2 $$ public void propertyOverride() throws Exception -->Line_4 $$ Map<String, PropertyOverrideConfigurer> beans = applicationContext.getBeansOfType(PropertyOverrideConfigurer.class)[ CD ]
Line_3 $$ ApplicationContext applicationContext = new ClassPathXmlApplicationContext("contextNamespaceHandlerTests-override.xml", getClass())-->Line_6 $$ Date date = (Date) applicationContext.getBean("date")[ FD ]
Line_6 $$ Date date = (Date) applicationContext.getBean("date")-->Line_8 $$ calendar.setTime(date)[ FD ]
Line_4 $$ Map<String, PropertyOverrideConfigurer> beans = applicationContext.getBeansOfType(PropertyOverrideConfigurer.class)-->Line_5 $$ assertFalse("No PropertyOverrideConfigurer found", beans.isEmpty())[ FD ]
Line_7 $$ Calendar calendar = Calendar.getInstance()-->Line_9 $$ assertEquals(42, calendar.get(Calendar.MINUTE))[ FD ]
Line_2 $$ public void propertyOverride() throws Exception -->Line_3 $$ ApplicationContext applicationContext = new ClassPathXmlApplicationContext("contextNamespaceHandlerTests-override.xml", getClass())[ CD ]
Line_7 $$ Calendar calendar = Calendar.getInstance()-->Line_8 $$ calendar.setTime(date)[ FD ]
Line_2 $$ public void propertyOverride() throws Exception -->Line_9 $$ assertEquals(42, calendar.get(Calendar.MINUTE))[ CD ]
Line_2 $$ public void propertyOverride() throws Exception -->Line_8 $$ calendar.setTime(date)[ CD ]
Line_2 $$ public void propertyOverride() throws Exception -->Line_6 $$ Date date = (Date) applicationContext.getBean("date")[ CD ]
