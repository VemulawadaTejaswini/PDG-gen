Line_12 $$ if (restore) -->Line_16 $$ WikiPageLocalServiceUtil.deletePageAttachment(_page.getNodeId(), _page.getTitle(), fileName)[ CD ]
Line_2 $$ private void _trashWikiAttachments(boolean restore) throws Exception -->Line_8 $$ Assert.assertEquals(initialTrashEntriesCount, _page.getDeletedAttachmentsFileEntriesCount())[ CD ]
Line_2 $$ private void _trashWikiAttachments(boolean restore) throws Exception -->Line_12 $$ if (restore) [ CD ]
Line_12 $$ if (restore) -->Line_19 $$ Assert.assertEquals(initialNotInTrashCount, _page.getAttachmentsFileEntriesCount())[ CD ]
Line_5 $$ String fileName = RandomTestUtil.randomString() + ".docx"-->Line_9 $$ FileEntry fileEntry = WikiPageLocalServiceUtil.movePageAttachmentToTrash(TestPropsValues.getUserId(), _page.getNodeId(), _page.getTitle(), fileName)[ FD ]
Line_2 $$ private void _trashWikiAttachments(boolean restore) throws Exception -->Line_6 $$ WikiTestUtil.addWikiAttachment(TestPropsValues.getUserId(), _node.getNodeId(), _page.getTitle(), fileName, getClass())[ CD ]
Line_2 $$ private void _trashWikiAttachments(boolean restore) throws Exception -->Line_10 $$ Assert.assertEquals(initialNotInTrashCount, _page.getAttachmentsFileEntriesCount())[ CD ]
Line_4 $$ int initialTrashEntriesCount = _page.getDeletedAttachmentsFileEntriesCount()-->Line_8 $$ Assert.assertEquals(initialTrashEntriesCount, _page.getDeletedAttachmentsFileEntriesCount())[ FD ]
Line_5 $$ String fileName = RandomTestUtil.randomString() + ".docx"-->Line_16 $$ WikiPageLocalServiceUtil.deletePageAttachment(_page.getNodeId(), _page.getTitle(), fileName)[ FD ]
Line_9 $$ FileEntry fileEntry = WikiPageLocalServiceUtil.movePageAttachmentToTrash(TestPropsValues.getUserId(), _page.getNodeId(), _page.getTitle(), fileName)-->Line_13 $$ TrashEntryServiceUtil.restoreEntry(DLFileEntryConstants.getClassName(), fileEntry.getFileEntryId())[ FD ]
Line_4 $$ int initialTrashEntriesCount = _page.getDeletedAttachmentsFileEntriesCount()-->Line_15 $$ Assert.assertEquals(initialTrashEntriesCount, _page.getDeletedAttachmentsFileEntriesCount())[ FD ]
Line_3 $$ int initialNotInTrashCount = _page.getAttachmentsFileEntriesCount()-->Line_19 $$ Assert.assertEquals(initialNotInTrashCount, _page.getAttachmentsFileEntriesCount())[ FD ]
Line_12 $$ if (restore) -->Line_18 $$ WikiPageLocalServiceUtil.deletePageAttachment(_page.getNodeId(), _page.getTitle(), fileEntry.getTitle())[ CD ]
Line_12 $$ if (restore) -->Line_13 $$ TrashEntryServiceUtil.restoreEntry(DLFileEntryConstants.getClassName(), fileEntry.getFileEntryId())[ CD ]
Line_2 $$ private void _trashWikiAttachments(boolean restore) throws Exception -->Line_5 $$ String fileName = RandomTestUtil.randomString() + ".docx"[ CD ]
Line_5 $$ String fileName = RandomTestUtil.randomString() + ".docx"-->Line_6 $$ WikiTestUtil.addWikiAttachment(TestPropsValues.getUserId(), _node.getNodeId(), _page.getTitle(), fileName, getClass())[ FD ]
Line_12 $$ if (restore) -->Line_20 $$ Assert.assertEquals(initialTrashEntriesCount, _page.getDeletedAttachmentsFileEntriesCount())[ CD ]
Line_3 $$ int initialNotInTrashCount = _page.getAttachmentsFileEntriesCount()-->Line_10 $$ Assert.assertEquals(initialNotInTrashCount, _page.getAttachmentsFileEntriesCount())[ FD ]
Line_2 $$ private void _trashWikiAttachments(boolean restore) throws Exception -->Line_11 $$ Assert.assertEquals(initialTrashEntriesCount + 1, _page.getDeletedAttachmentsFileEntriesCount())[ CD ]
Line_2 $$ private void _trashWikiAttachments(boolean restore) throws Exception -->Line_9 $$ FileEntry fileEntry = WikiPageLocalServiceUtil.movePageAttachmentToTrash(TestPropsValues.getUserId(), _page.getNodeId(), _page.getTitle(), fileName)[ CD ]
Line_12 $$ if (restore) -->Line_14 $$ Assert.assertEquals(initialNotInTrashCount + 1, _page.getAttachmentsFileEntriesCount())[ CD ]
Line_2 $$ private void _trashWikiAttachments(boolean restore) throws Exception -->Line_4 $$ int initialTrashEntriesCount = _page.getDeletedAttachmentsFileEntriesCount()[ CD ]
Line_9 $$ FileEntry fileEntry = WikiPageLocalServiceUtil.movePageAttachmentToTrash(TestPropsValues.getUserId(), _page.getNodeId(), _page.getTitle(), fileName)-->Line_18 $$ WikiPageLocalServiceUtil.deletePageAttachment(_page.getNodeId(), _page.getTitle(), fileEntry.getTitle())[ FD ]
Line_2 $$ private void _trashWikiAttachments(boolean restore) throws Exception -->Line_3 $$ int initialNotInTrashCount = _page.getAttachmentsFileEntriesCount()[ CD ]
Line_2 $$ private void _trashWikiAttachments(boolean restore) throws Exception -->Line_7 $$ Assert.assertEquals(initialNotInTrashCount + 1, _page.getAttachmentsFileEntriesCount())[ CD ]
Line_12 $$ if (restore) -->Line_15 $$ Assert.assertEquals(initialTrashEntriesCount, _page.getDeletedAttachmentsFileEntriesCount())[ CD ]
Line_4 $$ int initialTrashEntriesCount = _page.getDeletedAttachmentsFileEntriesCount()-->Line_20 $$ Assert.assertEquals(initialTrashEntriesCount, _page.getDeletedAttachmentsFileEntriesCount())[ FD ]
