Line_14 $$ map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_15 $$ Assert.assertNotNull(map)[ FD ]
Line_9 $$ Map<?, ?> map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_17 $$ Assert.assertEquals(JSONFactoryUtil.class.getName(), map.get("class"))[ FD ]
Line_19 $$ map = (Map<?, ?>) map.get("jsonFactory")-->Line_21 $$ Assert.assertEquals(1, map.size())[ FD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_8 $$ JSONFactoryUtil.looseDeserialize("[ CD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_6 $$ Assert.assertEquals(HashMap.class, object.getClass())[ CD ]
Line_9 $$ Map<?, ?> map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_19 $$ map = (Map<?, ?>) map.get("jsonFactory")[ FD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_4 $$ Assert.assertEquals(HashMap.class, object.getClass())[ CD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_18 $$ Assert.assertEquals("boo", map.get("foo"))[ CD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_19 $$ map = (Map<?, ?>) map.get("jsonFactory")[ CD ]
Line_14 $$ map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_19 $$ map = (Map<?, ?>) map.get("jsonFactory")[ FD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_5 $$ object = JSONFactoryUtil.looseDeserialize("[ CD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_14 $$ map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("[ CD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_16 $$ Assert.assertEquals(3, map.size())[ CD ]
Line_14 $$ map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_21 $$ Assert.assertEquals(1, map.size())[ FD ]
Line_3 $$ Object object = JSONFactoryUtil.looseDeserialize("-->Line_4 $$ Assert.assertEquals(HashMap.class, object.getClass())[ FD ]
Line_9 $$ Map<?, ?> map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_14 $$ map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("[ FD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_17 $$ Assert.assertEquals(JSONFactoryUtil.class.getName(), map.get("class"))[ CD ]
Line_9 $$ Map<?, ?> map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_15 $$ Assert.assertNotNull(map)[ FD ]
Line_9 $$ Map<?, ?> map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_16 $$ Assert.assertEquals(3, map.size())[ FD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_10 $$ Assert.assertNotNull(map)[ CD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_7 $$ Assert.assertTrue(((Map<?, ?>) object).containsKey("class"))[ CD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_21 $$ Assert.assertEquals(1, map.size())[ CD ]
Line_3 $$ Object object = JSONFactoryUtil.looseDeserialize("-->Line_5 $$ object = JSONFactoryUtil.looseDeserialize("[ FD ]
Line_14 $$ map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_22 $$ Assert.assertEquals(JSONFactoryImpl.class.getName(), map.get("class"))[ FD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_15 $$ Assert.assertNotNull(map)[ CD ]
Line_14 $$ map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_20 $$ Assert.assertNotNull(map)[ FD ]
Line_9 $$ Map<?, ?> map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_12 $$ Assert.assertEquals("com.liferay.portal.kernel.json.JSONFactoryUtil", map.get("class"))[ FD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_13 $$ Assert.assertEquals("boo", map.get("foo"))[ CD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_9 $$ Map<?, ?> map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("[ CD ]
Line_9 $$ Map<?, ?> map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_10 $$ Assert.assertNotNull(map)[ FD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_3 $$ Object object = JSONFactoryUtil.looseDeserialize("[ CD ]
Line_9 $$ Map<?, ?> map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_20 $$ Assert.assertNotNull(map)[ FD ]
Line_19 $$ map = (Map<?, ?>) map.get("jsonFactory")-->Line_20 $$ Assert.assertNotNull(map)[ FD ]
Line_14 $$ map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_18 $$ Assert.assertEquals("boo", map.get("foo"))[ FD ]
Line_9 $$ Map<?, ?> map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_21 $$ Assert.assertEquals(1, map.size())[ FD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_12 $$ Assert.assertEquals("com.liferay.portal.kernel.json.JSONFactoryUtil", map.get("class"))[ CD ]
Line_9 $$ Map<?, ?> map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_18 $$ Assert.assertEquals("boo", map.get("foo"))[ FD ]
Line_9 $$ Map<?, ?> map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_22 $$ Assert.assertEquals(JSONFactoryImpl.class.getName(), map.get("class"))[ FD ]
Line_9 $$ Map<?, ?> map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_11 $$ Assert.assertEquals(2, map.size())[ FD ]
Line_14 $$ map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_16 $$ Assert.assertEquals(3, map.size())[ FD ]
Line_9 $$ Map<?, ?> map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_13 $$ Assert.assertEquals("boo", map.get("foo"))[ FD ]
Line_19 $$ map = (Map<?, ?>) map.get("jsonFactory")-->Line_22 $$ Assert.assertEquals(JSONFactoryImpl.class.getName(), map.get("class"))[ FD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_20 $$ Assert.assertNotNull(map)[ CD ]
Line_3 $$ Object object = JSONFactoryUtil.looseDeserialize("-->Line_6 $$ Assert.assertEquals(HashMap.class, object.getClass())[ FD ]
Line_5 $$ object = JSONFactoryUtil.looseDeserialize("-->Line_6 $$ Assert.assertEquals(HashMap.class, object.getClass())[ FD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_22 $$ Assert.assertEquals(JSONFactoryImpl.class.getName(), map.get("class"))[ CD ]
Line_14 $$ map = (Map<?, ?>) JSONFactoryUtil.looseDeserialize("-->Line_17 $$ Assert.assertEquals(JSONFactoryUtil.class.getName(), map.get("class"))[ FD ]
Line_2 $$ public void testLooseDeserializeSafe() -->Line_11 $$ Assert.assertEquals(2, map.size())[ CD ]
