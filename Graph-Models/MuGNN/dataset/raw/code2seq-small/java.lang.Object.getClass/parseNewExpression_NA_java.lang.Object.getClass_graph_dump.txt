Line_3 $$ Method method = ReflectionUtils.findMethod(getClass(), "toString")-->Line_4 $$ Expression expression = expressionEvaluator.getTestExpression("true", method, getClass())[ FD ]
Line_2 $$ public void parseNewExpression() -->Line_3 $$ Method method = ReflectionUtils.findMethod(getClass(), "toString")[ CD ]
Line_2 $$ public void parseNewExpression() -->Line_5 $$ hasParsedExpression("true")[ CD ]
Line_2 $$ public void parseNewExpression() -->Line_4 $$ Expression expression = expressionEvaluator.getTestExpression("true", method, getClass())[ CD ]
Line_4 $$ Expression expression = expressionEvaluator.getTestExpression("true", method, getClass())-->Line_6 $$ assertEquals(true, expression.getValue())[ FD ]
Line_2 $$ public void parseNewExpression() -->Line_6 $$ assertEquals(true, expression.getValue())[ CD ]
Line_2 $$ public void parseNewExpression() -->Line_7 $$ assertEquals("Expression should be in cache", 1, expressionEvaluator.testCache.size())[ CD ]
