Line_4 $$ TestBean tb = (TestBean) ctx.getBean("testBean")-->Line_8 $$ assertEquals(tb, bean.getTestBean())[ FD ]
Line_2 $$ public void testCanPassInMoreThanOneProperty() -->Line_4 $$ TestBean tb = (TestBean) ctx.getBean("testBean")[ CD ]
Line_4 $$ TestBean tb = (TestBean) ctx.getBean("testBean")-->Line_11 $$ assertEquals(tb, bean2.getTestBean())[ FD ]
Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())-->Line_12 $$ assertEquals(ctx, bean2.getApplicationContext())[ FD ]
Line_5 $$ ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")-->Line_7 $$ assertEquals("The second property ain't bein' injected.", 31, bean.getAge())[ FD ]
Line_10 $$ ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")-->Line_11 $$ assertEquals(tb, bean2.getTestBean())[ FD ]
Line_2 $$ public void testCanPassInMoreThanOneProperty() -->Line_10 $$ ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")[ CD ]
Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())-->Line_14 $$ ctx.getBean("bean3")[ FD ]
Line_5 $$ ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")-->Line_9 $$ assertEquals(ctx, bean.getApplicationContext())[ FD ]
Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())-->Line_10 $$ ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")[ FD ]
Line_2 $$ public void testCanPassInMoreThanOneProperty() -->Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())[ CD ]
Line_2 $$ public void testCanPassInMoreThanOneProperty() -->Line_6 $$ assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())[ CD ]
Line_2 $$ public void testCanPassInMoreThanOneProperty() -->Line_5 $$ ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")[ CD ]
Line_2 $$ public void testCanPassInMoreThanOneProperty() -->Line_11 $$ assertEquals(tb, bean2.getTestBean())[ CD ]
Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())-->Line_5 $$ ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")[ FD ]
Line_2 $$ public void testCanPassInMoreThanOneProperty() -->Line_9 $$ assertEquals(ctx, bean.getApplicationContext())[ CD ]
Line_2 $$ public void testCanPassInMoreThanOneProperty() -->Line_12 $$ assertEquals(ctx, bean2.getApplicationContext())[ CD ]
Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())-->Line_4 $$ TestBean tb = (TestBean) ctx.getBean("testBean")[ FD ]
Line_10 $$ ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")-->Line_12 $$ assertEquals(ctx, bean2.getApplicationContext())[ FD ]
Line_5 $$ ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")-->Line_6 $$ assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())[ FD ]
Line_2 $$ public void testCanPassInMoreThanOneProperty() -->Line_7 $$ assertEquals("The second property ain't bein' injected.", 31, bean.getAge())[ CD ]
Line_2 $$ public void testCanPassInMoreThanOneProperty() -->Line_8 $$ assertEquals(tb, bean.getTestBean())[ CD ]
Line_3 $$ ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())-->Line_9 $$ assertEquals(ctx, bean.getApplicationContext())[ FD ]
Line_5 $$ ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")-->Line_8 $$ assertEquals(tb, bean.getTestBean())[ FD ]
