Line_3 $$ Object payload = message.getPayload()-->Line_14 $$ return (ClassUtils.isAssignableValue(targetClass, payload) ? payload : null)[ FD ]
Line_2 $$ public Object fromMessage(Message<?> message, Class<?> targetClass) -->Line_9 $$ return this.conversionService.convert(payload, targetClass)[ FD ]
Line_4 $$ if (targetClass == null) -->Line_5 $$ return payload[ CD ]
Line_2 $$ public Object fromMessage(Message<?> message, Class<?> targetClass) -->Line_3 $$ Object payload = message.getPayload()[ CD ]
Line_2 $$ public Object fromMessage(Message<?> message, Class<?> targetClass) -->Line_7 $$ if (payload != null && this.conversionService.canConvert(payload.getClass(), targetClass)) [ CD ]
Line_2 $$ public Object fromMessage(Message<?> message, Class<?> targetClass) -->Line_14 $$ return (ClassUtils.isAssignableValue(targetClass, payload) ? payload : null)[ CD ]
Line_2 $$ public Object fromMessage(Message<?> message, Class<?> targetClass) -->Line_4 $$ if (targetClass == null) [ FD ]
Line_2 $$ public Object fromMessage(Message<?> message, Class<?> targetClass) -->Line_7 $$ if (payload != null && this.conversionService.canConvert(payload.getClass(), targetClass)) [ FD ]
Line_2 $$ public Object fromMessage(Message<?> message, Class<?> targetClass) -->Line_4 $$ if (targetClass == null) [ CD ]
Line_2 $$ public Object fromMessage(Message<?> message, Class<?> targetClass) -->Line_3 $$ Object payload = message.getPayload()[ FD ]
Line_3 $$ Object payload = message.getPayload()-->Line_7 $$ if (payload != null && this.conversionService.canConvert(payload.getClass(), targetClass)) [ FD ]
Line_2 $$ public Object fromMessage(Message<?> message, Class<?> targetClass) -->Line_11 $$ throw new MessageConversionException(message, "Failed to convert message payload '" + payload + "' to '" + targetClass.getName() + "'", ex)[ FD ]
Line_2 $$ public Object fromMessage(Message<?> message, Class<?> targetClass) -->Line_14 $$ return (ClassUtils.isAssignableValue(targetClass, payload) ? payload : null)[ FD ]
Line_3 $$ Object payload = message.getPayload()-->Line_9 $$ return this.conversionService.convert(payload, targetClass)[ FD ]
