Line_10 $$ if (id instanceof Integer) -->Line_11 $$ key = id.toString()[ CD ]
Line_9 $$ value = obj.get(key, obj)-->Line_12 $$ value = obj.get((Integer) id, obj)[ FD ]
Line_2 $$ public static Map<String, Object> toMap(Scriptable obj) -->Line_12 $$ value = obj.get((Integer) id, obj)[ FD ]
Line_5 $$ String key-->Line_9 $$ value = obj.get(key, obj)[ FD ]
Line_4 $$ for (Object id : obj.getIds()) -->Line_14 $$ throw new IllegalArgumentException(String.format("Unexpected key type: %s (value: %s)", id.getClass().getName(), id))[ FD ]
Line_9 $$ value = obj.get(key, obj)-->Line_16 $$ map.put(key, toJavaValue(value))[ FD ]
Line_4 $$ for (Object id : obj.getIds()) -->Line_11 $$ key = id.toString()[ FD ]
Line_12 $$ value = obj.get((Integer) id, obj)-->Line_16 $$ map.put(key, toJavaValue(value))[ FD ]
Line_2 $$ public static Map<String, Object> toMap(Scriptable obj) -->Line_4 $$ for (Object id : obj.getIds()) [ FD ]
Line_5 $$ String key-->Line_16 $$ map.put(key, toJavaValue(value))[ FD ]
Line_8 $$ key = (String) id-->Line_9 $$ value = obj.get(key, obj)[ FD ]
Line_2 $$ public static Map<String, Object> toMap(Scriptable obj) -->Line_18 $$ return map[ CD ]
Line_2 $$ public static Map<String, Object> toMap(Scriptable obj) -->Line_9 $$ value = obj.get(key, obj)[ FD ]
Line_6 $$ Object value-->Line_16 $$ map.put(key, toJavaValue(value))[ FD ]
Line_4 $$ for (Object id : obj.getIds()) -->Line_7 $$ if (id instanceof String) [ FD ]
Line_7 $$ if (id instanceof String) -->Line_9 $$ value = obj.get(key, obj)[ CD ]
Line_3 $$ Map<String, Object> map = new LinkedHashMap<String, Object>()-->Line_16 $$ map.put(key, toJavaValue(value))[ FD ]
Line_8 $$ key = (String) id-->Line_16 $$ map.put(key, toJavaValue(value))[ FD ]
Line_11 $$ key = id.toString()-->Line_16 $$ map.put(key, toJavaValue(value))[ FD ]
Line_10 $$ if (id instanceof Integer) -->Line_12 $$ value = obj.get((Integer) id, obj)[ CD ]
Line_7 $$ if (id instanceof String) -->Line_8 $$ key = (String) id[ CD ]
Line_8 $$ key = (String) id-->Line_11 $$ key = id.toString()[ FD ]
Line_4 $$ for (Object id : obj.getIds()) -->Line_10 $$ if (id instanceof Integer) [ FD ]
Line_5 $$ String key-->Line_8 $$ key = (String) id[ FD ]
Line_2 $$ public static Map<String, Object> toMap(Scriptable obj) -->Line_3 $$ Map<String, Object> map = new LinkedHashMap<String, Object>()[ CD ]
Line_5 $$ String key-->Line_11 $$ key = id.toString()[ FD ]
Line_7 $$ if (id instanceof String) -->Line_10 $$ if (id instanceof Integer) [ CD ]
Line_6 $$ Object value-->Line_12 $$ value = obj.get((Integer) id, obj)[ FD ]
Line_6 $$ Object value-->Line_9 $$ value = obj.get(key, obj)[ FD ]
