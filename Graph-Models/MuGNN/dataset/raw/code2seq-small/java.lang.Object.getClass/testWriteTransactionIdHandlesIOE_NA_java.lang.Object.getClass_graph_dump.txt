Line_2 $$ public void testWriteTransactionIdHandlesIOE() throws Exception -->Line_4 $$ ArrayList<URI> fsImageDirs = new ArrayList<URI>()[ CD ]
Line_2 $$ public void testWriteTransactionIdHandlesIOE() throws Exception -->Line_7 $$ assertTrue("Couldn't create directory storageDirToCheck", filePath.exists() || filePath.mkdirs())[ CD ]
Line_2 $$ public void testWriteTransactionIdHandlesIOE() throws Exception -->Line_19 $$ assertTrue("Removed directory wasn't what was expected", listRsd.size() > 0 && listRsd.get(listRsd.size() - 1).getRoot().toString().indexOf("storageDirToCheck") != -1)[ CD ]
Line_2 $$ public void testWriteTransactionIdHandlesIOE() throws Exception -->Line_6 $$ File filePath = new File(PathUtils.getTestDir(getClass()), "storageDirToCheck")[ CD ]
Line_10 $$ NNStorage nnStorage = new NNStorage(new HdfsConfiguration(), fsImageDirs, editsDirs)-->Line_12 $$ assertTrue("List of storage directories didn't have storageDirToCheck.", nnStorage.getEditsDirectories().iterator().next().toString().indexOf("storageDirToCheck") != -1)[ FD ]
Line_10 $$ NNStorage nnStorage = new NNStorage(new HdfsConfiguration(), fsImageDirs, editsDirs)-->Line_20 $$ nnStorage.close()[ FD ]
Line_2 $$ public void testWriteTransactionIdHandlesIOE() throws Exception -->Line_8 $$ fsImageDirs.add(filePath.toURI())[ CD ]
Line_2 $$ public void testWriteTransactionIdHandlesIOE() throws Exception -->Line_10 $$ NNStorage nnStorage = new NNStorage(new HdfsConfiguration(), fsImageDirs, editsDirs)[ CD ]
Line_10 $$ NNStorage nnStorage = new NNStorage(new HdfsConfiguration(), fsImageDirs, editsDirs)-->Line_18 $$ List<StorageDirectory> listRsd = nnStorage.getRemovedStorageDirs()[ FD ]
Line_2 $$ public void testWriteTransactionIdHandlesIOE() throws Exception -->Line_9 $$ editsDirs.add(filePath.toURI())[ CD ]
Line_4 $$ ArrayList<URI> fsImageDirs = new ArrayList<URI>()-->Line_8 $$ fsImageDirs.add(filePath.toURI())[ FD ]
Line_18 $$ List<StorageDirectory> listRsd = nnStorage.getRemovedStorageDirs()-->Line_19 $$ assertTrue("Removed directory wasn't what was expected", listRsd.size() > 0 && listRsd.get(listRsd.size() - 1).getRoot().toString().indexOf("storageDirToCheck") != -1)[ FD ]
Line_2 $$ public void testWriteTransactionIdHandlesIOE() throws Exception -->Line_3 $$ LOG.info("Check IOException handled correctly by writeTransactionIdFile")[ CD ]
Line_2 $$ public void testWriteTransactionIdHandlesIOE() throws Exception -->Line_17 $$ nnStorage.writeTransactionIdFileToStorage(1)[ CD ]
Line_6 $$ File filePath = new File(PathUtils.getTestDir(getClass()), "storageDirToCheck")-->Line_9 $$ editsDirs.add(filePath.toURI())[ FD ]
Line_10 $$ NNStorage nnStorage = new NNStorage(new HdfsConfiguration(), fsImageDirs, editsDirs)-->Line_13 $$ assertTrue("List of removed storage directories wasn't empty", nnStorage.getRemovedStorageDirs().isEmpty())[ FD ]
Line_6 $$ File filePath = new File(PathUtils.getTestDir(getClass()), "storageDirToCheck")-->Line_15 $$ assertTrue("Couldn't remove directory " + filePath.getAbsolutePath(), filePath.delete())[ FD ]
Line_10 $$ NNStorage nnStorage = new NNStorage(new HdfsConfiguration(), fsImageDirs, editsDirs)-->Line_17 $$ nnStorage.writeTransactionIdFileToStorage(1)[ FD ]
Line_2 $$ public void testWriteTransactionIdHandlesIOE() throws Exception -->Line_18 $$ List<StorageDirectory> listRsd = nnStorage.getRemovedStorageDirs()[ CD ]
Line_2 $$ public void testWriteTransactionIdHandlesIOE() throws Exception -->Line_5 $$ ArrayList<URI> editsDirs = new ArrayList<URI>()[ CD ]
Line_6 $$ File filePath = new File(PathUtils.getTestDir(getClass()), "storageDirToCheck")-->Line_7 $$ assertTrue("Couldn't create directory storageDirToCheck", filePath.exists() || filePath.mkdirs())[ FD ]
Line_2 $$ public void testWriteTransactionIdHandlesIOE() throws Exception -->Line_20 $$ nnStorage.close()[ CD ]
Line_5 $$ ArrayList<URI> editsDirs = new ArrayList<URI>()-->Line_9 $$ editsDirs.add(filePath.toURI())[ FD ]
Line_6 $$ File filePath = new File(PathUtils.getTestDir(getClass()), "storageDirToCheck")-->Line_8 $$ fsImageDirs.add(filePath.toURI())[ FD ]
