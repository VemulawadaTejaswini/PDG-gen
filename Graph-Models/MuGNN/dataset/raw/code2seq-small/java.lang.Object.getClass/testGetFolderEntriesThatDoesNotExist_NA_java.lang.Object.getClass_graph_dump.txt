Line_2 $$ public void testGetFolderEntriesThatDoesNotExist() throws Exception -->Line_5 $$ Assert.assertNotNull(entries)[ CD ]
Line_4 $$ List<String> entries = zipReader.getFolderEntries("foo")-->Line_5 $$ Assert.assertNotNull(entries)[ FD ]
Line_2 $$ public void testGetFolderEntriesThatDoesNotExist() throws Exception -->Line_4 $$ List<String> entries = zipReader.getFolderEntries("foo")[ CD ]
Line_2 $$ public void testGetFolderEntriesThatDoesNotExist() throws Exception -->Line_3 $$ ZipReader zipReader = new ZipReaderImpl(DependenciesTestUtil.getDependencyAsInputStream(getClass(), _ZIP_FILE_PATH))[ CD ]
Line_3 $$ ZipReader zipReader = new ZipReaderImpl(DependenciesTestUtil.getDependencyAsInputStream(getClass(), _ZIP_FILE_PATH))-->Line_7 $$ zipReader.close()[ FD ]
Line_2 $$ public void testGetFolderEntriesThatDoesNotExist() throws Exception -->Line_7 $$ zipReader.close()[ CD ]
Line_3 $$ ZipReader zipReader = new ZipReaderImpl(DependenciesTestUtil.getDependencyAsInputStream(getClass(), _ZIP_FILE_PATH))-->Line_4 $$ List<String> entries = zipReader.getFolderEntries("foo")[ FD ]
Line_4 $$ List<String> entries = zipReader.getFolderEntries("foo")-->Line_6 $$ Assert.assertTrue(entries.isEmpty())[ FD ]
Line_2 $$ public void testGetFolderEntriesThatDoesNotExist() throws Exception -->Line_6 $$ Assert.assertTrue(entries.isEmpty())[ CD ]
