Line_46 $$ Object resource = myNativeAXResourceField.get(ac)-->Line_47 $$ if (resource != null && isCAccessible(resource)) [ FD ]
Line_12 $$ for (CaretListener each : carets) -->Line_31 $$ bar.removeChangeListener(each)[ FD ]
Line_6 $$ if ((he.getChangeFlags() & HierarchyEvent.SHOWING_CHANGED) > 0) -->Line_7 $$ if (he.getComponent() != null && !he.getComponent().isShowing()) [ CD ]
Line_46 $$ Object resource = myNativeAXResourceField.get(ac)-->Line_48 $$ Field accessible = ReflectionUtil.findField(resource.getClass(), Accessible.class, "accessible")[ FD ]
Line_17 $$ Document document = textComponent.getDocument()-->Line_22 $$ document.removeDocumentListener(each)[ FD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_6 $$ if ((he.getChangeFlags() & HierarchyEvent.SHOWING_CHANGED) > 0) [ CD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_3 $$ if (!SystemInfo.isMac || !Registry.is("ide.mac.fix.accessibleLeak"))[ CD ]
Line_12 $$ for (CaretListener each : carets) -->Line_21 $$ if (isCAccessibleListener(each)) [ FD ]
Line_12 $$ for (CaretListener each : carets) -->Line_22 $$ document.removeDocumentListener(each)[ FD ]
Line_8 $$ Component c = he.getComponent()-->Line_43 $$ AccessibleContext ac = c.getAccessibleContext()[ FD ]
Line_10 $$ JTextComponent textComponent = (JTextComponent) c-->Line_17 $$ Document document = textComponent.getDocument()[ FD ]
Line_43 $$ AccessibleContext ac = c.getAccessibleContext()-->Line_46 $$ Object resource = myNativeAXResourceField.get(ac)[ FD ]
Line_30 $$ if (isCAccessibleListener(each)) -->Line_31 $$ bar.removeChangeListener(each)[ CD ]
Line_5 $$ HierarchyEvent he = (HierarchyEvent) event-->Line_6 $$ if ((he.getChangeFlags() & HierarchyEvent.SHOWING_CHANGED) > 0) [ FD ]
Line_46 $$ Object resource = myNativeAXResourceField.get(ac)-->Line_49 $$ accessible.set(resource, null)[ FD ]
Line_26 $$ if (c instanceof JProgressBar) -->Line_28 $$ ChangeListener[] changeListeners = bar.getChangeListeners()[ CD ]
Line_9 $$ if (c instanceof JTextComponent) -->Line_11 $$ CaretListener[] carets = textComponent.getListeners(CaretListener.class)[ CD ]
Line_35 $$ JSlider slider = (JSlider) c-->Line_36 $$ ChangeListener[] changeListeners = slider.getChangeListeners()[ FD ]
Line_8 $$ Component c = he.getComponent()-->Line_9 $$ if (c instanceof JTextComponent) [ FD ]
Line_17 $$ Document document = textComponent.getDocument()-->Line_18 $$ if (document instanceof AbstractDocument) [ FD ]
Line_12 $$ for (CaretListener each : carets) -->Line_38 $$ if (isCAccessibleListener(each)) [ FD ]
Line_3 $$ if (!SystemInfo.isMac || !Registry.is("ide.mac.fix.accessibleLeak"))-->Line_4 $$ return[ CD ]
Line_9 $$ if (c instanceof JTextComponent) -->Line_10 $$ JTextComponent textComponent = (JTextComponent) c[ CD ]
Line_12 $$ for (CaretListener each : carets) -->Line_13 $$ if (isCAccessibleListener(each)) [ FD ]
Line_5 $$ HierarchyEvent he = (HierarchyEvent) event-->Line_8 $$ Component c = he.getComponent()[ FD ]
Line_7 $$ if (he.getComponent() != null && !he.getComponent().isShowing()) -->Line_44 $$ if (ac != null && myNativeAXResourceField != null) [ CD ]
Line_34 $$ if (c instanceof JSlider) -->Line_35 $$ JSlider slider = (JSlider) c[ CD ]
Line_8 $$ Component c = he.getComponent()-->Line_34 $$ if (c instanceof JSlider) [ FD ]
Line_27 $$ JProgressBar bar = (JProgressBar) c-->Line_31 $$ bar.removeChangeListener(each)[ FD ]
Line_10 $$ JTextComponent textComponent = (JTextComponent) c-->Line_14 $$ textComponent.removeCaretListener(each)[ FD ]
Line_2 $$ public void eventDispatched(AWTEvent event) -->Line_5 $$ HierarchyEvent he = (HierarchyEvent) event[ CD ]
Line_12 $$ for (CaretListener each : carets) -->Line_14 $$ textComponent.removeCaretListener(each)[ FD ]
Line_10 $$ JTextComponent textComponent = (JTextComponent) c-->Line_11 $$ CaretListener[] carets = textComponent.getListeners(CaretListener.class)[ FD ]
Line_35 $$ JSlider slider = (JSlider) c-->Line_39 $$ slider.removeChangeListener(each)[ FD ]
Line_12 $$ for (CaretListener each : carets) -->Line_39 $$ slider.removeChangeListener(each)[ FD ]
Line_9 $$ if (c instanceof JTextComponent) -->Line_17 $$ Document document = textComponent.getDocument()[ CD ]
Line_7 $$ if (he.getComponent() != null && !he.getComponent().isShowing()) -->Line_9 $$ if (c instanceof JTextComponent) [ CD ]
Line_38 $$ if (isCAccessibleListener(each)) -->Line_39 $$ slider.removeChangeListener(each)[ CD ]
Line_13 $$ if (isCAccessibleListener(each)) -->Line_14 $$ textComponent.removeCaretListener(each)[ CD ]
Line_34 $$ if (c instanceof JSlider) -->Line_36 $$ ChangeListener[] changeListeners = slider.getChangeListeners()[ CD ]
Line_5 $$ HierarchyEvent he = (HierarchyEvent) event-->Line_7 $$ if (he.getComponent() != null && !he.getComponent().isShowing()) [ FD ]
Line_27 $$ JProgressBar bar = (JProgressBar) c-->Line_28 $$ ChangeListener[] changeListeners = bar.getChangeListeners()[ FD ]
Line_47 $$ if (resource != null && isCAccessible(resource)) -->Line_49 $$ accessible.set(resource, null)[ CD ]
Line_8 $$ Component c = he.getComponent()-->Line_26 $$ if (c instanceof JProgressBar) [ FD ]
Line_9 $$ if (c instanceof JTextComponent) -->Line_18 $$ if (document instanceof AbstractDocument) [ CD ]
Line_26 $$ if (c instanceof JProgressBar) -->Line_27 $$ JProgressBar bar = (JProgressBar) c[ CD ]
Line_48 $$ Field accessible = ReflectionUtil.findField(resource.getClass(), Accessible.class, "accessible")-->Line_49 $$ accessible.set(resource, null)[ FD ]
Line_9 $$ if (c instanceof JTextComponent) -->Line_26 $$ if (c instanceof JProgressBar) [ CD ]
Line_21 $$ if (isCAccessibleListener(each)) -->Line_22 $$ document.removeDocumentListener(each)[ CD ]
Line_7 $$ if (he.getComponent() != null && !he.getComponent().isShowing()) -->Line_8 $$ Component c = he.getComponent()[ CD ]
Line_7 $$ if (he.getComponent() != null && !he.getComponent().isShowing()) -->Line_43 $$ AccessibleContext ac = c.getAccessibleContext()[ CD ]
Line_12 $$ for (CaretListener each : carets) -->Line_30 $$ if (isCAccessibleListener(each)) [ FD ]
Line_18 $$ if (document instanceof AbstractDocument) -->Line_19 $$ DocumentListener[] documentListeners = ((AbstractDocument) document).getDocumentListeners()[ CD ]
Line_47 $$ if (resource != null && isCAccessible(resource)) -->Line_48 $$ Field accessible = ReflectionUtil.findField(resource.getClass(), Accessible.class, "accessible")[ CD ]
Line_26 $$ if (c instanceof JProgressBar) -->Line_34 $$ if (c instanceof JSlider) [ CD ]
