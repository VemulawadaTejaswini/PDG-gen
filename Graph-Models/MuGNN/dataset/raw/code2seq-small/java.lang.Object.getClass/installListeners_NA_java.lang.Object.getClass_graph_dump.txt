Line_69 $$ GraphicsConfiguration gc = gd.getDefaultConfiguration()-->Line_70 $$ Rectangle bounds = gc.getBounds()[ FD ]
Line_71 $$ if (bounds.contains(midLoc)) -->Line_72 $$ if (gc != currentRootPaneGC) [ CD ]
Line_23 $$ if (myWindowComponentListener != null) -->Line_24 $$ myCurrentWindow.removeComponentListener(myWindowComponentListener)[ CD ]
Line_4 $$ myHierarchyListener = new HierarchyListener() -->Line_6 $$ Component parent = root.getParent()[ CD ]
Line_28 $$ myWindowListener = new WindowAdapter() -->Line_30 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_33 $$ for (Frame frame : frames) -->Line_34 $$ if (frame.isDisplayable()) [ FD ]
Line_72 $$ if (gc != currentRootPaneGC) -->Line_74 $$ setMaximized()[ CD ]
Line_58 $$ if (!myWindow.isShowing() || !myWindow.isDisplayable()) -->Line_60 $$ return[ CD ]
Line_2 $$ protected void installListeners(final JRootPane root) -->Line_91 $$ root.addHierarchyListener(myHierarchyListener)[ FD ]
Line_2 $$ protected void installListeners(final JRootPane root) -->Line_92 $$ root.addPropertyChangeListener(myPropertyChangeListener)[ FD ]
Line_10 $$ if (parent.getClass().getName().startsWith("org.jdesktop.jdic.tray") || (parent.getClass().getName().compareTo("javax.swing.Popup$HeavyWeightWindow") == 0)) -->Line_11 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_6 $$ Component parent = root.getParent()-->Line_18 $$ Window currWindow = UIUtil.getWindow(parent)[ FD ]
Line_53 $$ SwingUtilities.invokeLater(new Runnable() -->Line_55 $$ if (myWindow == null) [ CD ]
Line_62 $$ GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment()-->Line_63 $$ GraphicsDevice[] gds = ge.getScreenDevices()[ FD ]
Line_67 $$ Point midLoc = new Point(myWindow.getLocationOnScreen().x + myWindow.getWidth() / 2, myWindow.getLocationOnScreen().y + myWindow.getHeight() / 2)-->Line_71 $$ if (bounds.contains(midLoc)) [ FD ]
Line_4 $$ myHierarchyListener = new HierarchyListener() -->Line_10 $$ if (parent.getClass().getName().startsWith("org.jdesktop.jdic.tray") || (parent.getClass().getName().compareTo("javax.swing.Popup$HeavyWeightWindow") == 0)) [ CD ]
Line_2 $$ protected void installListeners(final JRootPane root) -->Line_91 $$ root.addHierarchyListener(myHierarchyListener)[ CD ]
Line_4 $$ myHierarchyListener = new HierarchyListener() -->Line_23 $$ if (myWindowComponentListener != null) [ CD ]
Line_30 $$ SwingUtilities.invokeLater(new Runnable() -->Line_32 $$ Frame[] frames = Frame.getFrames()[ CD ]
Line_2 $$ protected void installListeners(final JRootPane root) -->Line_13 $$ root.removeHierarchyListener(myHierarchyListener)[ FD ]
Line_70 $$ Rectangle bounds = gc.getBounds()-->Line_71 $$ if (bounds.contains(midLoc)) [ FD ]
Line_45 $$ myWindowComponentListener = new ComponentAdapter() -->Line_53 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_2 $$ protected void installListeners(final JRootPane root) -->Line_3 $$ super.installListeners(root)[ FD ]
Line_2 $$ protected void installListeners(final JRootPane root) -->Line_6 $$ Component parent = root.getParent()[ FD ]
Line_45 $$ myWindowComponentListener = new ComponentAdapter() -->Line_47 $$ processNewPosition()[ CD ]
Line_53 $$ SwingUtilities.invokeLater(new Runnable() -->Line_58 $$ if (!myWindow.isShowing() || !myWindow.isDisplayable()) [ CD ]
Line_83 $$ if (parent instanceof JFrame) -->Line_84 $$ currWindow.addComponentListener(myWindowComponentListener)[ CD ]
Line_2 $$ protected void installListeners(final JRootPane root) -->Line_92 $$ root.addPropertyChangeListener(myPropertyChangeListener)[ CD ]
Line_53 $$ SwingUtilities.invokeLater(new Runnable() -->Line_63 $$ GraphicsDevice[] gds = ge.getScreenDevices()[ CD ]
Line_53 $$ SwingUtilities.invokeLater(new Runnable() -->Line_67 $$ Point midLoc = new Point(myWindow.getLocationOnScreen().x + myWindow.getWidth() / 2, myWindow.getLocationOnScreen().y + myWindow.getHeight() / 2)[ CD ]
Line_27 $$ if (currWindow != null) -->Line_83 $$ if (parent instanceof JFrame) [ CD ]
Line_53 $$ SwingUtilities.invokeLater(new Runnable() -->Line_64 $$ if (gds.length == 1) [ CD ]
Line_4 $$ myHierarchyListener = new HierarchyListener() -->Line_18 $$ Window currWindow = UIUtil.getWindow(parent)[ CD ]
Line_7 $$ if (parent == null) -->Line_8 $$ return[ CD ]
Line_42 $$ if (!(parent instanceof JInternalFrame)) -->Line_43 $$ currWindow.addWindowListener(myWindowListener)[ CD ]
Line_2 $$ protected void installListeners(final JRootPane root) -->Line_3 $$ super.installListeners(root)[ CD ]
Line_55 $$ if (myWindow == null) -->Line_56 $$ return[ CD ]
Line_34 $$ if (frame.isDisplayable()) -->Line_35 $$ return[ CD ]
Line_27 $$ if (currWindow != null) -->Line_42 $$ if (!(parent instanceof JInternalFrame)) [ CD ]
Line_53 $$ SwingUtilities.invokeLater(new Runnable() -->Line_62 $$ GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment()[ CD ]
Line_69 $$ GraphicsConfiguration gc = gd.getDefaultConfiguration()-->Line_72 $$ if (gc != currentRootPaneGC) [ FD ]
Line_6 $$ Component parent = root.getParent()-->Line_83 $$ if (parent instanceof JFrame) [ FD ]
Line_4 $$ myHierarchyListener = new HierarchyListener() -->Line_19 $$ if (myWindowListener != null) [ CD ]
Line_4 $$ myHierarchyListener = new HierarchyListener() -->Line_27 $$ if (currWindow != null) [ CD ]
Line_68 $$ for (GraphicsDevice gd : gds) -->Line_69 $$ GraphicsConfiguration gc = gd.getDefaultConfiguration()[ FD ]
Line_11 $$ SwingUtilities.invokeLater(new Runnable() -->Line_13 $$ root.removeHierarchyListener(myHierarchyListener)[ CD ]
Line_19 $$ if (myWindowListener != null) -->Line_20 $$ myCurrentWindow.removeWindowListener(myWindowListener)[ CD ]
Line_45 $$ myWindowComponentListener = new ComponentAdapter() -->Line_50 $$ processNewPosition()[ CD ]
Line_6 $$ Component parent = root.getParent()-->Line_10 $$ if (parent.getClass().getName().startsWith("org.jdesktop.jdic.tray") || (parent.getClass().getName().compareTo("javax.swing.Popup$HeavyWeightWindow") == 0)) [ FD ]
Line_6 $$ Component parent = root.getParent()-->Line_7 $$ if (parent == null) [ FD ]
Line_4 $$ myHierarchyListener = new HierarchyListener() -->Line_7 $$ if (parent == null) [ CD ]
Line_64 $$ if (gds.length == 1) -->Line_65 $$ return[ CD ]
