Line_2 $$ public void cacheExpressionBasedOnConcreteType() -->Line_3 $$ Method method = ReflectionUtils.findMethod(getClass(), "toString")[ CD ]
Line_3 $$ Method method = ReflectionUtils.findMethod(getClass(), "toString")-->Line_4 $$ expressionEvaluator.getTestExpression("true", method, getClass())[ FD ]
Line_2 $$ public void cacheExpressionBasedOnConcreteType() -->Line_6 $$ assertEquals("Cached expression should be based on type", 2, expressionEvaluator.testCache.size())[ CD ]
Line_2 $$ public void cacheExpressionBasedOnConcreteType() -->Line_5 $$ expressionEvaluator.getTestExpression("true", method, Object.class)[ CD ]
Line_2 $$ public void cacheExpressionBasedOnConcreteType() -->Line_4 $$ expressionEvaluator.getTestExpression("true", method, getClass())[ CD ]
Line_3 $$ Method method = ReflectionUtils.findMethod(getClass(), "toString")-->Line_5 $$ expressionEvaluator.getTestExpression("true", method, Object.class)[ FD ]
