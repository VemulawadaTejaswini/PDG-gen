Line_10 $$ RepairSession session = new RepairSession(parentSessionId, sessionId, Arrays.asList(repairRange), "Keyspace1", RepairParallelism.SEQUENTIAL, endpoints, ActiveRepairService.UNREPAIRED_SSTABLE, "Standard1")-->Line_11 $$ session.convict(remote, Double.MAX_VALUE)[ FD ]
Line_8 $$ Range<Token> repairRange = new Range(p.getToken(ByteBufferUtil.bytes(0)), p.getToken(ByteBufferUtil.bytes(100)))-->Line_10 $$ RepairSession session = new RepairSession(parentSessionId, sessionId, Arrays.asList(repairRange), "Keyspace1", RepairParallelism.SEQUENTIAL, endpoints, ActiveRepairService.UNREPAIRED_SSTABLE, "Standard1")[ FD ]
Line_2 $$ public void testConviction() throws Exception -->Line_7 $$ IPartitioner p = Murmur3Partitioner.instance[ CD ]
Line_2 $$ public void testConviction() throws Exception -->Line_5 $$ UUID parentSessionId = UUIDGen.getTimeUUID()[ CD ]
Line_7 $$ IPartitioner p = Murmur3Partitioner.instance-->Line_8 $$ Range<Token> repairRange = new Range(p.getToken(ByteBufferUtil.bytes(0)), p.getToken(ByteBufferUtil.bytes(100)))[ FD ]
Line_2 $$ public void testConviction() throws Exception -->Line_4 $$ Gossiper.instance.initializeNodeUnsafe(remote, UUID.randomUUID(), 1)[ CD ]
Line_2 $$ public void testConviction() throws Exception -->Line_6 $$ UUID sessionId = UUID.randomUUID()[ CD ]
Line_2 $$ public void testConviction() throws Exception -->Line_11 $$ session.convict(remote, Double.MAX_VALUE)[ CD ]
Line_2 $$ public void testConviction() throws Exception -->Line_3 $$ InetAddress remote = InetAddress.getByName("127.0.0.2")[ CD ]
Line_2 $$ public void testConviction() throws Exception -->Line_8 $$ Range<Token> repairRange = new Range(p.getToken(ByteBufferUtil.bytes(0)), p.getToken(ByteBufferUtil.bytes(100)))[ CD ]
Line_2 $$ public void testConviction() throws Exception -->Line_10 $$ RepairSession session = new RepairSession(parentSessionId, sessionId, Arrays.asList(repairRange), "Keyspace1", RepairParallelism.SEQUENTIAL, endpoints, ActiveRepairService.UNREPAIRED_SSTABLE, "Standard1")[ CD ]
Line_10 $$ RepairSession session = new RepairSession(parentSessionId, sessionId, Arrays.asList(repairRange), "Keyspace1", RepairParallelism.SEQUENTIAL, endpoints, ActiveRepairService.UNREPAIRED_SSTABLE, "Standard1")-->Line_13 $$ session.get()[ FD ]
Line_2 $$ public void testConviction() throws Exception -->Line_9 $$ Set<InetAddress> endpoints = Sets.newHashSet(remote)[ CD ]
Line_3 $$ InetAddress remote = InetAddress.getByName("127.0.0.2")-->Line_11 $$ session.convict(remote, Double.MAX_VALUE)[ FD ]
Line_3 $$ InetAddress remote = InetAddress.getByName("127.0.0.2")-->Line_9 $$ Set<InetAddress> endpoints = Sets.newHashSet(remote)[ FD ]
Line_3 $$ InetAddress remote = InetAddress.getByName("127.0.0.2")-->Line_4 $$ Gossiper.instance.initializeNodeUnsafe(remote, UUID.randomUUID(), 1)[ FD ]
