Line_4 $$ SearchResponse searchResponse = searchRequestBuilder.get()-->Line_10 $$ assertVersionSerializable(searchResponse)[ FD ]
Line_6 $$ for (ShardSearchFailure shardSearchFailure : searchResponse.getShardFailures()) -->Line_8 $$ assertThat(shardSearchFailure.reason(), reasonMatcher)[ FD ]
Line_2 $$ public static void assertFailures(SearchRequestBuilder searchRequestBuilder, RestStatus restStatus, Matcher<String> reasonMatcher) -->Line_15 $$ assertThat(shardSearchFailure.status(), equalTo(restStatus))[ FD ]
Line_2 $$ public static void assertFailures(SearchRequestBuilder searchRequestBuilder, RestStatus restStatus, Matcher<String> reasonMatcher) -->Line_8 $$ assertThat(shardSearchFailure.reason(), reasonMatcher)[ FD ]
Line_6 $$ for (ShardSearchFailure shardSearchFailure : searchResponse.getShardFailures()) -->Line_7 $$ assertThat(shardSearchFailure.status(), equalTo(restStatus))[ FD ]
Line_2 $$ public static void assertFailures(SearchRequestBuilder searchRequestBuilder, RestStatus restStatus, Matcher<String> reasonMatcher) -->Line_16 $$ assertThat(shardSearchFailure.reason(), reasonMatcher)[ FD ]
Line_4 $$ SearchResponse searchResponse = searchRequestBuilder.get()-->Line_5 $$ assertThat("Expected shard failures, got none", searchResponse.getShardFailures().length, greaterThan(0))[ FD ]
Line_2 $$ public static void assertFailures(SearchRequestBuilder searchRequestBuilder, RestStatus restStatus, Matcher<String> reasonMatcher) -->Line_13 $$ assertThat(e.toString(), reasonMatcher)[ FD ]
Line_6 $$ for (ShardSearchFailure shardSearchFailure : searchResponse.getShardFailures()) -->Line_15 $$ assertThat(shardSearchFailure.status(), equalTo(restStatus))[ FD ]
Line_6 $$ for (ShardSearchFailure shardSearchFailure : searchResponse.getShardFailures()) -->Line_16 $$ assertThat(shardSearchFailure.reason(), reasonMatcher)[ FD ]
Line_2 $$ public static void assertFailures(SearchRequestBuilder searchRequestBuilder, RestStatus restStatus, Matcher<String> reasonMatcher) -->Line_12 $$ assertThat(e.status(), equalTo(restStatus))[ FD ]
Line_4 $$ SearchResponse searchResponse = searchRequestBuilder.get()-->Line_6 $$ for (ShardSearchFailure shardSearchFailure : searchResponse.getShardFailures()) [ FD ]
Line_2 $$ public static void assertFailures(SearchRequestBuilder searchRequestBuilder, RestStatus restStatus, Matcher<String> reasonMatcher) -->Line_4 $$ SearchResponse searchResponse = searchRequestBuilder.get()[ FD ]
Line_2 $$ public static void assertFailures(SearchRequestBuilder searchRequestBuilder, RestStatus restStatus, Matcher<String> reasonMatcher) -->Line_7 $$ assertThat(shardSearchFailure.status(), equalTo(restStatus))[ FD ]
