Line_2 $$ public static String extractEntityName(Object object) -->Line_3 $$ if (Proxy.isProxyClass(object.getClass())) [ CD ]
Line_5 $$ if (DataProxyHandler.class.isAssignableFrom(handler.getClass())) -->Line_6 $$ DataProxyHandler myHandler = (DataProxyHandler) handler[ CD ]
Line_2 $$ public static String extractEntityName(Object object) -->Line_3 $$ if (Proxy.isProxyClass(object.getClass())) [ FD ]
Line_2 $$ public static String extractEntityName(Object object) -->Line_4 $$ InvocationHandler handler = Proxy.getInvocationHandler(object)[ FD ]
Line_6 $$ DataProxyHandler myHandler = (DataProxyHandler) handler-->Line_7 $$ return myHandler.getEntityName()[ FD ]
Line_4 $$ InvocationHandler handler = Proxy.getInvocationHandler(object)-->Line_5 $$ if (DataProxyHandler.class.isAssignableFrom(handler.getClass())) [ FD ]
Line_2 $$ public static String extractEntityName(Object object) -->Line_10 $$ return null[ CD ]
Line_5 $$ if (DataProxyHandler.class.isAssignableFrom(handler.getClass())) -->Line_7 $$ return myHandler.getEntityName()[ CD ]
Line_3 $$ if (Proxy.isProxyClass(object.getClass())) -->Line_5 $$ if (DataProxyHandler.class.isAssignableFrom(handler.getClass())) [ CD ]
Line_3 $$ if (Proxy.isProxyClass(object.getClass())) -->Line_4 $$ InvocationHandler handler = Proxy.getInvocationHandler(object)[ CD ]
