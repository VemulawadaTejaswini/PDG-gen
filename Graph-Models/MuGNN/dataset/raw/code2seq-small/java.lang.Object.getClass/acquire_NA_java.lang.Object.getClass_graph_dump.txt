Line_7 $$ if (Remote.class.isAssignableFrom(myValueClass)) -->Line_9 $$ if (entryPoint == null)[ CD ]
Line_8 $$ EntryPoint entryPoint = narrowImpl(remote, myValueClass)-->Line_11 $$ return RemoteUtil.substituteClassLoader(entryPoint, myValueClass.getClassLoader())[ FD ]
Line_6 $$ Remote remote = ObjectUtils.assertNotNull(registry.lookup(port.name))-->Line_8 $$ EntryPoint entryPoint = narrowImpl(remote, myValueClass)[ FD ]
Line_7 $$ if (Remote.class.isAssignableFrom(myValueClass)) -->Line_8 $$ EntryPoint entryPoint = narrowImpl(remote, myValueClass)[ CD ]
Line_7 $$ if (Remote.class.isAssignableFrom(myValueClass)) -->Line_13 $$ return RemoteUtil.castToLocal(remote, myValueClass)[ CD ]
Line_3 $$ EntryPoint result = RemoteUtil.executeWithClassLoader(new ThrowableComputable<EntryPoint, Exception>() -->Line_5 $$ Registry registry = LocateRegistry.getRegistry("localhost", port.port)[ CD ]
Line_7 $$ if (Remote.class.isAssignableFrom(myValueClass)) -->Line_11 $$ return RemoteUtil.substituteClassLoader(entryPoint, myValueClass.getClassLoader())[ CD ]
Line_5 $$ Registry registry = LocateRegistry.getRegistry("localhost", port.port)-->Line_6 $$ Remote remote = ObjectUtils.assertNotNull(registry.lookup(port.name))[ FD ]
Line_6 $$ Remote remote = ObjectUtils.assertNotNull(registry.lookup(port.name))-->Line_13 $$ return RemoteUtil.castToLocal(remote, myValueClass)[ FD ]
Line_3 $$ EntryPoint result = RemoteUtil.executeWithClassLoader(new ThrowableComputable<EntryPoint, Exception>() -->Line_6 $$ Remote remote = ObjectUtils.assertNotNull(registry.lookup(port.name))[ CD ]
Line_9 $$ if (entryPoint == null)-->Line_10 $$ return null[ CD ]
Line_2 $$ private EntryPoint acquire(final RunningInfo port) throws Exception -->Line_3 $$ EntryPoint result = RemoteUtil.executeWithClassLoader(new ThrowableComputable<EntryPoint, Exception>() [ CD ]
Line_8 $$ EntryPoint entryPoint = narrowImpl(remote, myValueClass)-->Line_9 $$ if (entryPoint == null)[ FD ]
Line_3 $$ EntryPoint result = RemoteUtil.executeWithClassLoader(new ThrowableComputable<EntryPoint, Exception>() -->Line_7 $$ if (Remote.class.isAssignableFrom(myValueClass)) [ CD ]
Line_2 $$ private EntryPoint acquire(final RunningInfo port) throws Exception -->Line_19 $$ return result[ CD ]
