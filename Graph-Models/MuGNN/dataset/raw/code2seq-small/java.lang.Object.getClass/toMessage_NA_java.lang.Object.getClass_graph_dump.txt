Line_2 $$ private static String toMessage(Closure<?> closure, Object argument) -->Line_8 $$ return String.format("The closure '%s' is not valid as an action for argument '%s'. It should accept no parameters, or one compatible with type '%s'. It accepts (%s).", closure, argument, argument.getClass().getName(), CollectionUtils.join(", ", classNames))[ CD ]
Line_2 $$ private static String toMessage(Closure<?> closure, Object argument) -->Line_3 $$ List<Object> classNames = CollectionUtils.collect(closure.getParameterTypes(), new Transformer<Object, Class>() [ CD ]
Line_2 $$ private static String toMessage(Closure<?> closure, Object argument) -->Line_3 $$ List<Object> classNames = CollectionUtils.collect(closure.getParameterTypes(), new Transformer<Object, Class>() [ FD ]
Line_3 $$ List<Object> classNames = CollectionUtils.collect(closure.getParameterTypes(), new Transformer<Object, Class>() -->Line_5 $$ return clazz.getName()[ CD ]
Line_3 $$ List<Object> classNames = CollectionUtils.collect(closure.getParameterTypes(), new Transformer<Object, Class>() -->Line_5 $$ return clazz.getName()[ FD ]
Line_2 $$ private static String toMessage(Closure<?> closure, Object argument) -->Line_8 $$ return String.format("The closure '%s' is not valid as an action for argument '%s'. It should accept no parameters, or one compatible with type '%s'. It accepts (%s).", closure, argument, argument.getClass().getName(), CollectionUtils.join(", ", classNames))[ FD ]
Line_3 $$ List<Object> classNames = CollectionUtils.collect(closure.getParameterTypes(), new Transformer<Object, Class>() -->Line_8 $$ return String.format("The closure '%s' is not valid as an action for argument '%s'. It should accept no parameters, or one compatible with type '%s'. It accepts (%s).", closure, argument, argument.getClass().getName(), CollectionUtils.join(", ", classNames))[ FD ]
