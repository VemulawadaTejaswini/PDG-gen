Line_24 $$ if (completion instanceof LookupItem) -->Line_25 $$ final Object o = ((LookupItem) completion).getObject()[ CD ]
Line_4 $$ for (PsiReference ref : getReferences((PsiMultiReference) reference)) -->Line_5 $$ completeReference(ref, position, set, tailType, file, filter, variant)[ FD ]
Line_19 $$ final PsiElement psiElement = (PsiElement) completion-->Line_20 $$ if (filter.isClassAcceptable(psiElement.getClass()) && filter.isAcceptable(psiElement, position)) [ FD ]
Line_2 $$ protected void completeReference(final PsiReference reference, final PsiElement position, final Set<LookupElement> set, final TailType tailType, final PsiFile file, final ElementFilter filter, final CompletionVariant variant) -->Line_34 $$ LOG.error("Caused by variant from reference: " + reference.getClass(), e)[ FD ]
Line_2 $$ protected void completeReference(final PsiReference reference, final PsiElement position, final Set<LookupElement> set, final TailType tailType, final PsiFile file, final ElementFilter filter, final CompletionVariant variant) -->Line_20 $$ if (filter.isClassAcceptable(psiElement.getClass()) && filter.isAcceptable(psiElement, position)) [ FD ]
Line_2 $$ protected void completeReference(final PsiReference reference, final PsiElement position, final Set<LookupElement> set, final TailType tailType, final PsiFile file, final ElementFilter filter, final CompletionVariant variant) -->Line_21 $$ addLookupItem(set, tailType, completion, variant)[ FD ]
Line_4 $$ for (PsiReference ref : getReferences((PsiMultiReference) reference)) -->Line_9 $$ completeReference(ref, position, set, tailType, file, filter, variant)[ FD ]
Line_2 $$ protected void completeReference(final PsiReference reference, final PsiElement position, final Set<LookupElement> set, final TailType tailType, final PsiFile file, final ElementFilter filter, final CompletionVariant variant) -->Line_5 $$ completeReference(ref, position, set, tailType, file, filter, variant)[ FD ]
Line_13 $$ for (Object completion : completions) -->Line_14 $$ if (completion == null) [ FD ]
Line_25 $$ final Object o = ((LookupItem) completion).getObject()-->Line_26 $$ if (o instanceof PsiElement) [ FD ]
Line_13 $$ for (Object completion : completions) -->Line_18 $$ if (completion instanceof PsiElement) [ FD ]
Line_18 $$ if (completion instanceof PsiElement) -->Line_24 $$ if (completion instanceof LookupItem) [ CD ]
Line_3 $$ if (reference instanceof PsiMultiReference) -->Line_7 $$ if (reference instanceof PsiDynaReference) [ CD ]
Line_14 $$ if (completion == null) -->Line_15 $$ LOG.error("Position=" + position + "\n;Reference=" + reference + "\n;variants=" + Arrays.toString(completions))[ CD ]
Line_2 $$ protected void completeReference(final PsiReference reference, final PsiElement position, final Set<LookupElement> set, final TailType tailType, final PsiFile file, final ElementFilter filter, final CompletionVariant variant) -->Line_9 $$ completeReference(ref, position, set, tailType, file, filter, variant)[ FD ]
Line_7 $$ if (reference instanceof PsiDynaReference) -->Line_12 $$ final Object[] completions = reference.getVariants()[ CD ]
Line_2 $$ protected void completeReference(final PsiReference reference, final PsiElement position, final Set<LookupElement> set, final TailType tailType, final PsiFile file, final ElementFilter filter, final CompletionVariant variant) -->Line_3 $$ if (reference instanceof PsiMultiReference) [ FD ]
Line_24 $$ if (completion instanceof LookupItem) -->Line_26 $$ if (o instanceof PsiElement) [ CD ]
Line_2 $$ protected void completeReference(final PsiReference reference, final PsiElement position, final Set<LookupElement> set, final TailType tailType, final PsiFile file, final ElementFilter filter, final CompletionVariant variant) -->Line_27 $$ if (!filter.isClassAcceptable(o.getClass()) || !filter.isAcceptable(o, position))[ FD ]
Line_25 $$ final Object o = ((LookupItem) completion).getObject()-->Line_27 $$ if (!filter.isClassAcceptable(o.getClass()) || !filter.isAcceptable(o, position))[ FD ]
Line_20 $$ if (filter.isClassAcceptable(psiElement.getClass()) && filter.isAcceptable(psiElement, position)) -->Line_21 $$ addLookupItem(set, tailType, completion, variant)[ CD ]
Line_18 $$ if (completion instanceof PsiElement) -->Line_20 $$ if (filter.isClassAcceptable(psiElement.getClass()) && filter.isAcceptable(psiElement, position)) [ CD ]
Line_2 $$ protected void completeReference(final PsiReference reference, final PsiElement position, final Set<LookupElement> set, final TailType tailType, final PsiFile file, final ElementFilter filter, final CompletionVariant variant) -->Line_12 $$ final Object[] completions = reference.getVariants()[ FD ]
Line_2 $$ protected void completeReference(final PsiReference reference, final PsiElement position, final Set<LookupElement> set, final TailType tailType, final PsiFile file, final ElementFilter filter, final CompletionVariant variant) -->Line_7 $$ if (reference instanceof PsiDynaReference) [ FD ]
Line_26 $$ if (o instanceof PsiElement) -->Line_27 $$ if (!filter.isClassAcceptable(o.getClass()) || !filter.isAcceptable(o, position))[ CD ]
Line_13 $$ for (Object completion : completions) -->Line_21 $$ addLookupItem(set, tailType, completion, variant)[ FD ]
Line_13 $$ for (Object completion : completions) -->Line_32 $$ addLookupItem(set, tailType, completion, variant)[ FD ]
Line_2 $$ protected void completeReference(final PsiReference reference, final PsiElement position, final Set<LookupElement> set, final TailType tailType, final PsiFile file, final ElementFilter filter, final CompletionVariant variant) -->Line_32 $$ addLookupItem(set, tailType, completion, variant)[ FD ]
Line_13 $$ for (Object completion : completions) -->Line_24 $$ if (completion instanceof LookupItem) [ FD ]
Line_12 $$ final Object[] completions = reference.getVariants()-->Line_15 $$ LOG.error("Position=" + position + "\n;Reference=" + reference + "\n;variants=" + Arrays.toString(completions))[ FD ]
Line_2 $$ protected void completeReference(final PsiReference reference, final PsiElement position, final Set<LookupElement> set, final TailType tailType, final PsiFile file, final ElementFilter filter, final CompletionVariant variant) -->Line_3 $$ if (reference instanceof PsiMultiReference) [ CD ]
Line_18 $$ if (completion instanceof PsiElement) -->Line_19 $$ final PsiElement psiElement = (PsiElement) completion[ CD ]
