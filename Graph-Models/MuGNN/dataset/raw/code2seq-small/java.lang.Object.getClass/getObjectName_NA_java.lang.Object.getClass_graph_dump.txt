Line_2 $$ public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException -->Line_7 $$ return ObjectNameManager.getInstance(domain, keys)[ CD ]
Line_2 $$ public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException -->Line_6 $$ keys.put(HASH_CODE_KEY, ObjectUtils.getIdentityHexString(managedBean))[ CD ]
Line_2 $$ public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException -->Line_6 $$ keys.put(HASH_CODE_KEY, ObjectUtils.getIdentityHexString(managedBean))[ FD ]
Line_3 $$ String domain = ClassUtils.getPackageName(managedBean.getClass())-->Line_7 $$ return ObjectNameManager.getInstance(domain, keys)[ FD ]
Line_2 $$ public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException -->Line_4 $$ Hashtable<String, String> keys = new Hashtable<String, String>()[ CD ]
Line_4 $$ Hashtable<String, String> keys = new Hashtable<String, String>()-->Line_5 $$ keys.put(TYPE_KEY, ClassUtils.getShortName(managedBean.getClass()))[ FD ]
Line_4 $$ Hashtable<String, String> keys = new Hashtable<String, String>()-->Line_6 $$ keys.put(HASH_CODE_KEY, ObjectUtils.getIdentityHexString(managedBean))[ FD ]
Line_2 $$ public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException -->Line_5 $$ keys.put(TYPE_KEY, ClassUtils.getShortName(managedBean.getClass()))[ CD ]
Line_2 $$ public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException -->Line_3 $$ String domain = ClassUtils.getPackageName(managedBean.getClass())[ FD ]
Line_2 $$ public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException -->Line_5 $$ keys.put(TYPE_KEY, ClassUtils.getShortName(managedBean.getClass()))[ FD ]
Line_4 $$ Hashtable<String, String> keys = new Hashtable<String, String>()-->Line_7 $$ return ObjectNameManager.getInstance(domain, keys)[ FD ]
Line_2 $$ public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException -->Line_3 $$ String domain = ClassUtils.getPackageName(managedBean.getClass())[ CD ]
