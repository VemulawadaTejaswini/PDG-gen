Line_7 $$ transport = new TransportServiceWrapper((Class<? extends TransportService>) Class.forName(SOCKET_TRANSPORT_CLASS))-->Line_12 $$ transport = new TransportServiceWrapper((Class<? extends TransportService>) Class.forName(SOCKET_TRANSPORT_CLASS))[ FD ]
Line_9 $$ transport = new TransportServiceWrapper((Class<? extends TransportService>) Class.forName(SHMEM_TRANSPORT_CLASS))-->Line_12 $$ transport = new TransportServiceWrapper((Class<? extends TransportService>) Class.forName(SOCKET_TRANSPORT_CLASS))[ FD ]
Line_6 $$ if (forceSocketTransport) -->Line_9 $$ transport = new TransportServiceWrapper((Class<? extends TransportService>) Class.forName(SHMEM_TRANSPORT_CLASS))[ CD ]
Line_2 $$ public static TransportServiceWrapper getTransportService(boolean forceSocketTransport) throws ExecutionException -->Line_3 $$ TransportServiceWrapper transport[ CD ]
Line_2 $$ public static TransportServiceWrapper getTransportService(boolean forceSocketTransport) throws ExecutionException -->Line_17 $$ return transport[ CD ]
Line_7 $$ transport = new TransportServiceWrapper((Class<? extends TransportService>) Class.forName(SOCKET_TRANSPORT_CLASS))-->Line_9 $$ transport = new TransportServiceWrapper((Class<? extends TransportService>) Class.forName(SHMEM_TRANSPORT_CLASS))[ FD ]
Line_6 $$ if (forceSocketTransport) -->Line_7 $$ transport = new TransportServiceWrapper((Class<? extends TransportService>) Class.forName(SOCKET_TRANSPORT_CLASS))[ CD ]
Line_3 $$ TransportServiceWrapper transport-->Line_12 $$ transport = new TransportServiceWrapper((Class<? extends TransportService>) Class.forName(SOCKET_TRANSPORT_CLASS))[ FD ]
Line_3 $$ TransportServiceWrapper transport-->Line_9 $$ transport = new TransportServiceWrapper((Class<? extends TransportService>) Class.forName(SHMEM_TRANSPORT_CLASS))[ FD ]
Line_3 $$ TransportServiceWrapper transport-->Line_7 $$ transport = new TransportServiceWrapper((Class<? extends TransportService>) Class.forName(SOCKET_TRANSPORT_CLASS))[ FD ]
