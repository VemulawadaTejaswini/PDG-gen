Line_2 $$ public void testOneReplicaRbwReportArrivesAfterBlockCompleted() throws Exception -->Line_35 $$ cluster.stopDataNode(1)[ CD ]
Line_4 $$ DelayAnswer delayer = new GenericTestUtils.DelayAnswer(LOG) -->Line_24 $$ Mockito.doAnswer(delayer).when(spy).blockReport(Mockito.<DatanodeRegistration>anyObject(), Mockito.anyString(), Mockito.<StorageBlockReport[]>anyObject())[ FD ]
Line_4 $$ DelayAnswer delayer = new GenericTestUtils.DelayAnswer(LOG) -->Line_30 $$ delayer.proceed()[ FD ]
Line_2 $$ public void testOneReplicaRbwReportArrivesAfterBlockCompleted() throws Exception -->Line_32 $$ BlockManagerTestUtil.updateState(nn.getNamesystem().getBlockManager())[ CD ]
Line_2 $$ public void testOneReplicaRbwReportArrivesAfterBlockCompleted() throws Exception -->Line_13 $$ final String METHOD_NAME = GenericTestUtils.getMethodName()[ CD ]
Line_2 $$ public void testOneReplicaRbwReportArrivesAfterBlockCompleted() throws Exception -->Line_30 $$ delayer.proceed()[ CD ]
Line_2 $$ public void testOneReplicaRbwReportArrivesAfterBlockCompleted() throws Exception -->Line_36 $$ DFSTestUtil.readFile(fs, filePath)[ CD ]
Line_2 $$ public void testOneReplicaRbwReportArrivesAfterBlockCompleted() throws Exception -->Line_33 $$ assertEquals(0, nn.getNamesystem().getCorruptReplicaBlocks())[ CD ]
Line_3 $$ final CountDownLatch brFinished = new CountDownLatch(1)-->Line_9 $$ brFinished.countDown()[ FD ]
Line_4 $$ DelayAnswer delayer = new GenericTestUtils.DelayAnswer(LOG) -->Line_7 $$ return super.passThrough(invocation)[ FD ]
Line_2 $$ public void testOneReplicaRbwReportArrivesAfterBlockCompleted() throws Exception -->Line_34 $$ DFSTestUtil.readFile(fs, filePath)[ CD ]
Line_4 $$ DelayAnswer delayer = new GenericTestUtils.DelayAnswer(LOG) -->Line_26 $$ delayer.waitForCall()[ FD ]
Line_2 $$ public void testOneReplicaRbwReportArrivesAfterBlockCompleted() throws Exception -->Line_31 $$ brFinished.await()[ CD ]
Line_2 $$ public void testOneReplicaRbwReportArrivesAfterBlockCompleted() throws Exception -->Line_3 $$ final CountDownLatch brFinished = new CountDownLatch(1)[ CD ]
Line_3 $$ final CountDownLatch brFinished = new CountDownLatch(1)-->Line_31 $$ brFinished.await()[ FD ]
Line_2 $$ public void testOneReplicaRbwReportArrivesAfterBlockCompleted() throws Exception -->Line_4 $$ DelayAnswer delayer = new GenericTestUtils.DelayAnswer(LOG) [ CD ]
Line_2 $$ public void testOneReplicaRbwReportArrivesAfterBlockCompleted() throws Exception -->Line_17 $$ NameNode nn = cluster.getNameNode()[ CD ]
Line_2 $$ public void testOneReplicaRbwReportArrivesAfterBlockCompleted() throws Exception -->Line_18 $$ FSDataOutputStream out = fs.create(filePath, REPL_FACTOR)[ CD ]
Line_2 $$ public void testOneReplicaRbwReportArrivesAfterBlockCompleted() throws Exception -->Line_16 $$ startDNandWait(null, false)[ CD ]
