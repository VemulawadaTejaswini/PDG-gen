Line_23 $$ internalCluster().getInstance(TransportService.class, noneMasterNode).sendRequest(node, PublishClusterStateAction.SEND_ACTION_NAME, new BytesTransportRequest(bytes, Version.CURRENT), new EmptyTransportResponseHandler(ThreadPool.Names.SAME) -->Line_25 $$ super.handleResponse(response)[ FD ]
Line_6 $$ List<String> nonMasterNodes = new ArrayList(nodeNames)-->Line_8 $$ String noneMasterNode = nonMasterNodes.get(0)[ FD ]
Line_23 $$ internalCluster().getInstance(TransportService.class, noneMasterNode).sendRequest(node, PublishClusterStateAction.SEND_ACTION_NAME, new BytesTransportRequest(bytes, Version.CURRENT), new EmptyTransportResponseHandler(ThreadPool.Names.SAME) -->Line_30 $$ reference.set(exp)[ FD ]
Line_23 $$ internalCluster().getInstance(TransportService.class, noneMasterNode).sendRequest(node, PublishClusterStateAction.SEND_ACTION_NAME, new BytesTransportRequest(bytes, Version.CURRENT), new EmptyTransportResponseHandler(ThreadPool.Names.SAME) -->Line_26 $$ latch.countDown()[ CD ]
Line_8 $$ String noneMasterNode = nonMasterNodes.get(0)-->Line_12 $$ if (discoveryNode.name().equals(noneMasterNode)) [ FD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_7 $$ nonMasterNodes.remove(internalCluster().getMasterName())[ CD ]
Line_21 $$ final CountDownLatch latch = new CountDownLatch(1)-->Line_31 $$ latch.countDown()[ FD ]
Line_22 $$ final AtomicReference<Exception> reference = new AtomicReference()-->Line_36 $$ assertThat(ExceptionsHelper.detailedMessage(reference.get()), containsString("cluster state from a different master than the current one, rejecting"))[ FD ]
Line_18 $$ ClusterState.Builder builder = ClusterState.builder(state)-->Line_19 $$ builder.nodes(nodes)[ FD ]
Line_3 $$ Settings settings = Settings.builder().put("discovery.type", "zen").build()-->Line_4 $$ List<String> nodeNames = internalCluster().startNodesAsync(2, settings).get()[ FD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_36 $$ assertThat(ExceptionsHelper.detailedMessage(reference.get()), containsString("cluster state from a different master than the current one, rejecting"))[ CD ]
Line_21 $$ final CountDownLatch latch = new CountDownLatch(1)-->Line_34 $$ latch.await()[ FD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_8 $$ String noneMasterNode = nonMasterNodes.get(0)[ CD ]
Line_9 $$ ClusterState state = internalCluster().getInstance(ClusterService.class).state()-->Line_11 $$ for (DiscoveryNode discoveryNode : state.nodes()) [ FD ]
Line_8 $$ String noneMasterNode = nonMasterNodes.get(0)-->Line_23 $$ internalCluster().getInstance(TransportService.class, noneMasterNode).sendRequest(node, PublishClusterStateAction.SEND_ACTION_NAME, new BytesTransportRequest(bytes, Version.CURRENT), new EmptyTransportResponseHandler(ThreadPool.Names.SAME) [ FD ]
Line_23 $$ internalCluster().getInstance(TransportService.class, noneMasterNode).sendRequest(node, PublishClusterStateAction.SEND_ACTION_NAME, new BytesTransportRequest(bytes, Version.CURRENT), new EmptyTransportResponseHandler(ThreadPool.Names.SAME) -->Line_31 $$ latch.countDown()[ CD ]
Line_21 $$ final CountDownLatch latch = new CountDownLatch(1)-->Line_26 $$ latch.countDown()[ FD ]
Line_9 $$ ClusterState state = internalCluster().getInstance(ClusterService.class).state()-->Line_17 $$ DiscoveryNodes.Builder nodes = DiscoveryNodes.builder(state.nodes()).put(new DiscoveryNode("abc", new LocalTransportAddress("abc"), Version.CURRENT)).masterNodeId("abc")[ FD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_3 $$ Settings settings = Settings.builder().put("discovery.type", "zen").build()[ CD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_6 $$ List<String> nonMasterNodes = new ArrayList(nodeNames)[ CD ]
Line_11 $$ for (DiscoveryNode discoveryNode : state.nodes()) -->Line_12 $$ if (discoveryNode.name().equals(noneMasterNode)) [ FD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_22 $$ final AtomicReference<Exception> reference = new AtomicReference()[ CD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_23 $$ internalCluster().getInstance(TransportService.class, noneMasterNode).sendRequest(node, PublishClusterStateAction.SEND_ACTION_NAME, new BytesTransportRequest(bytes, Version.CURRENT), new EmptyTransportResponseHandler(ThreadPool.Names.SAME) [ CD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_20 $$ BytesReference bytes = PublishClusterStateAction.serializeFullClusterState(builder.build(), node.version())[ CD ]
Line_10 $$ DiscoveryNode node = null-->Line_20 $$ BytesReference bytes = PublishClusterStateAction.serializeFullClusterState(builder.build(), node.version())[ FD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_35 $$ assertThat(reference.get(), notNullValue())[ CD ]
Line_12 $$ if (discoveryNode.name().equals(noneMasterNode)) -->Line_13 $$ node = discoveryNode[ CD ]
Line_23 $$ internalCluster().getInstance(TransportService.class, noneMasterNode).sendRequest(node, PublishClusterStateAction.SEND_ACTION_NAME, new BytesTransportRequest(bytes, Version.CURRENT), new EmptyTransportResponseHandler(ThreadPool.Names.SAME) -->Line_30 $$ reference.set(exp)[ CD ]
Line_11 $$ for (DiscoveryNode discoveryNode : state.nodes()) -->Line_13 $$ node = discoveryNode[ FD ]
Line_23 $$ internalCluster().getInstance(TransportService.class, noneMasterNode).sendRequest(node, PublishClusterStateAction.SEND_ACTION_NAME, new BytesTransportRequest(bytes, Version.CURRENT), new EmptyTransportResponseHandler(ThreadPool.Names.SAME) -->Line_29 $$ super.handleException(exp)[ FD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_18 $$ ClusterState.Builder builder = ClusterState.builder(state)[ CD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_34 $$ latch.await()[ CD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_5 $$ client().admin().cluster().prepareHealth().setWaitForNodes("2").get()[ CD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_9 $$ ClusterState state = internalCluster().getInstance(ClusterService.class).state()[ CD ]
Line_13 $$ node = discoveryNode-->Line_23 $$ internalCluster().getInstance(TransportService.class, noneMasterNode).sendRequest(node, PublishClusterStateAction.SEND_ACTION_NAME, new BytesTransportRequest(bytes, Version.CURRENT), new EmptyTransportResponseHandler(ThreadPool.Names.SAME) [ FD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_4 $$ List<String> nodeNames = internalCluster().startNodesAsync(2, settings).get()[ CD ]
Line_13 $$ node = discoveryNode-->Line_20 $$ BytesReference bytes = PublishClusterStateAction.serializeFullClusterState(builder.build(), node.version())[ FD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_10 $$ DiscoveryNode node = null[ CD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_17 $$ DiscoveryNodes.Builder nodes = DiscoveryNodes.builder(state.nodes()).put(new DiscoveryNode("abc", new LocalTransportAddress("abc"), Version.CURRENT)).masterNodeId("abc")[ CD ]
Line_10 $$ DiscoveryNode node = null-->Line_13 $$ node = discoveryNode[ FD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_19 $$ builder.nodes(nodes)[ CD ]
Line_17 $$ DiscoveryNodes.Builder nodes = DiscoveryNodes.builder(state.nodes()).put(new DiscoveryNode("abc", new LocalTransportAddress("abc"), Version.CURRENT)).masterNodeId("abc")-->Line_19 $$ builder.nodes(nodes)[ FD ]
Line_23 $$ internalCluster().getInstance(TransportService.class, noneMasterNode).sendRequest(node, PublishClusterStateAction.SEND_ACTION_NAME, new BytesTransportRequest(bytes, Version.CURRENT), new EmptyTransportResponseHandler(ThreadPool.Names.SAME) -->Line_29 $$ super.handleException(exp)[ CD ]
Line_18 $$ ClusterState.Builder builder = ClusterState.builder(state)-->Line_20 $$ BytesReference bytes = PublishClusterStateAction.serializeFullClusterState(builder.build(), node.version())[ FD ]
Line_22 $$ final AtomicReference<Exception> reference = new AtomicReference()-->Line_30 $$ reference.set(exp)[ FD ]
Line_10 $$ DiscoveryNode node = null-->Line_23 $$ internalCluster().getInstance(TransportService.class, noneMasterNode).sendRequest(node, PublishClusterStateAction.SEND_ACTION_NAME, new BytesTransportRequest(bytes, Version.CURRENT), new EmptyTransportResponseHandler(ThreadPool.Names.SAME) [ FD ]
Line_9 $$ ClusterState state = internalCluster().getInstance(ClusterService.class).state()-->Line_18 $$ ClusterState.Builder builder = ClusterState.builder(state)[ FD ]
Line_2 $$ public void testNodeRejectsClusterStateWithWrongMasterNode() throws Exception -->Line_21 $$ final CountDownLatch latch = new CountDownLatch(1)[ CD ]
Line_6 $$ List<String> nonMasterNodes = new ArrayList(nodeNames)-->Line_7 $$ nonMasterNodes.remove(internalCluster().getMasterName())[ FD ]
Line_23 $$ internalCluster().getInstance(TransportService.class, noneMasterNode).sendRequest(node, PublishClusterStateAction.SEND_ACTION_NAME, new BytesTransportRequest(bytes, Version.CURRENT), new EmptyTransportResponseHandler(ThreadPool.Names.SAME) -->Line_25 $$ super.handleResponse(response)[ CD ]
Line_22 $$ final AtomicReference<Exception> reference = new AtomicReference()-->Line_35 $$ assertThat(reference.get(), notNullValue())[ FD ]
