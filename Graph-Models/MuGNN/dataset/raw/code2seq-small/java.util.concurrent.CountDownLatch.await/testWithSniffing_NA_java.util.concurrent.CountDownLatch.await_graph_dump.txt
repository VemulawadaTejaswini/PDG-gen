Line_3 $$ TransportClient client = TransportClient.builder().settings(Settings.builder().put("client.transport.sniff", true).put("cluster.name", "cluster1").put("node.name", "transport_client_" + this.getTestName() + "_1").put("client.transport.nodes_sampler_interval", "1s").put(HEADER_SETTINGS).put("path.home", createTempDir().toString()).build()).addPlugin(InternalTransportService.TestPlugin.class).build()-->Line_10 $$ assertThat(client.connectedNodes().size(), is(1))[ FD ]
Line_3 $$ TransportClient client = TransportClient.builder().settings(Settings.builder().put("client.transport.sniff", true).put("cluster.name", "cluster1").put("node.name", "transport_client_" + this.getTestName() + "_1").put("client.transport.nodes_sampler_interval", "1s").put(HEADER_SETTINGS).put("path.home", createTempDir().toString()).build()).addPlugin(InternalTransportService.TestPlugin.class).build()-->Line_13 $$ client.close()[ FD ]
Line_3 $$ TransportClient client = TransportClient.builder().settings(Settings.builder().put("client.transport.sniff", true).put("cluster.name", "cluster1").put("node.name", "transport_client_" + this.getTestName() + "_1").put("client.transport.nodes_sampler_interval", "1s").put(HEADER_SETTINGS).put("path.home", createTempDir().toString()).build()).addPlugin(InternalTransportService.TestPlugin.class).build()-->Line_11 $$ assertThat(client.connectedNodes().get(0).getAddress(), is((TransportAddress) address))[ FD ]
Line_7 $$ if (!service.clusterStateLatch.await(5, TimeUnit.SECONDS)) -->Line_8 $$ fail("takes way too long to get the cluster state")[ CD ]
Line_3 $$ TransportClient client = TransportClient.builder().settings(Settings.builder().put("client.transport.sniff", true).put("cluster.name", "cluster1").put("node.name", "transport_client_" + this.getTestName() + "_1").put("client.transport.nodes_sampler_interval", "1s").put(HEADER_SETTINGS).put("path.home", createTempDir().toString()).build()).addPlugin(InternalTransportService.TestPlugin.class).build()-->Line_5 $$ client.addTransportAddress(address)[ FD ]
Line_2 $$ public void testWithSniffing() throws Exception -->Line_3 $$ TransportClient client = TransportClient.builder().settings(Settings.builder().put("client.transport.sniff", true).put("cluster.name", "cluster1").put("node.name", "transport_client_" + this.getTestName() + "_1").put("client.transport.nodes_sampler_interval", "1s").put(HEADER_SETTINGS).put("path.home", createTempDir().toString()).build()).addPlugin(InternalTransportService.TestPlugin.class).build()[ CD ]
