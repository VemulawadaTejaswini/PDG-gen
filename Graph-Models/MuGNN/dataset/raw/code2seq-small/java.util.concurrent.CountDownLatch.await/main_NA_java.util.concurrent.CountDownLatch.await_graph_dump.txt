Line_2 $$ public static void main(String[] args) throws Throwable -->Line_7 $$ final CountDownLatch latch = new CountDownLatch(1)[ CD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_4 $$ settings.put("http.cors.enabled", "true")[ CD ]
Line_3 $$ Settings.Builder settings = Settings.builder()-->Line_5 $$ settings.put("http.cors.allow-origin", "*")[ FD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_9 $$ Runtime.getRuntime().addShutdownHook(new Thread() [ CD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_5 $$ settings.put("http.cors.allow-origin", "*")[ CD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_16 $$ latch.await()[ CD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_6 $$ settings.put("cluster.name", AzureRepositoryF.class.getSimpleName())[ CD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_8 $$ final Node node = new MockNode(settings.build(), Version.CURRENT, Collections.singletonList(AzureRepositoryPlugin.class))[ CD ]
Line_9 $$ Runtime.getRuntime().addShutdownHook(new Thread() -->Line_11 $$ node.close()[ CD ]
Line_3 $$ Settings.Builder settings = Settings.builder()-->Line_6 $$ settings.put("cluster.name", AzureRepositoryF.class.getSimpleName())[ FD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_3 $$ Settings.Builder settings = Settings.builder()[ CD ]
Line_8 $$ final Node node = new MockNode(settings.build(), Version.CURRENT, Collections.singletonList(AzureRepositoryPlugin.class))-->Line_11 $$ node.close()[ FD ]
Line_7 $$ final CountDownLatch latch = new CountDownLatch(1)-->Line_12 $$ latch.countDown()[ FD ]
Line_8 $$ final Node node = new MockNode(settings.build(), Version.CURRENT, Collections.singletonList(AzureRepositoryPlugin.class))-->Line_15 $$ node.start()[ FD ]
Line_3 $$ Settings.Builder settings = Settings.builder()-->Line_4 $$ settings.put("http.cors.enabled", "true")[ FD ]
Line_7 $$ final CountDownLatch latch = new CountDownLatch(1)-->Line_16 $$ latch.await()[ FD ]
Line_3 $$ Settings.Builder settings = Settings.builder()-->Line_8 $$ final Node node = new MockNode(settings.build(), Version.CURRENT, Collections.singletonList(AzureRepositoryPlugin.class))[ FD ]
Line_2 $$ public static void main(String[] args) throws Throwable -->Line_15 $$ node.start()[ CD ]
Line_9 $$ Runtime.getRuntime().addShutdownHook(new Thread() -->Line_12 $$ latch.countDown()[ CD ]
