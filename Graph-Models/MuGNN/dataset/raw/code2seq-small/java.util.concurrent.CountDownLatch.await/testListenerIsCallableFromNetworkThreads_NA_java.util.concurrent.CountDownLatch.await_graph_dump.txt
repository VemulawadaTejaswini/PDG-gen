Line_9 $$ future.addListener(new ActionListener<Object>() -->Line_15 $$ listenerCalled.countDown()[ CD ]
Line_5 $$ final PlainListenableActionFuture<Object> future = new PlainListenableActionFuture(threadPool)-->Line_24 $$ future.onResponse(response)[ FD ]
Line_18 $$ Thread networkThread = new Thread(new AbstractRunnable() -->Line_24 $$ future.onResponse(response)[ CD ]
Line_7 $$ final AtomicReference<Throwable> error = new AtomicReference()-->Line_31 $$ throw error.get()[ FD ]
Line_18 $$ Thread networkThread = new Thread(new AbstractRunnable() -->Line_21 $$ listenerCalled.countDown()[ CD ]
Line_7 $$ final AtomicReference<Throwable> error = new AtomicReference()-->Line_30 $$ if (error.get() != null) [ FD ]
Line_9 $$ future.addListener(new ActionListener<Object>() -->Line_14 $$ error.set(e)[ CD ]
Line_6 $$ final CountDownLatch listenerCalled = new CountDownLatch(1)-->Line_11 $$ listenerCalled.countDown()[ FD ]
Line_6 $$ final CountDownLatch listenerCalled = new CountDownLatch(1)-->Line_21 $$ listenerCalled.countDown()[ FD ]
Line_18 $$ Thread networkThread = new Thread(new AbstractRunnable() -->Line_20 $$ error.set(t)[ FD ]
Line_6 $$ final CountDownLatch listenerCalled = new CountDownLatch(1)-->Line_29 $$ listenerCalled.await()[ FD ]
Line_6 $$ final CountDownLatch listenerCalled = new CountDownLatch(1)-->Line_15 $$ listenerCalled.countDown()[ FD ]
Line_9 $$ future.addListener(new ActionListener<Object>() -->Line_11 $$ listenerCalled.countDown()[ CD ]
Line_5 $$ final PlainListenableActionFuture<Object> future = new PlainListenableActionFuture(threadPool)-->Line_9 $$ future.addListener(new ActionListener<Object>() [ FD ]
Line_9 $$ future.addListener(new ActionListener<Object>() -->Line_14 $$ error.set(e)[ FD ]
Line_7 $$ final AtomicReference<Throwable> error = new AtomicReference()-->Line_20 $$ error.set(t)[ FD ]
Line_7 $$ final AtomicReference<Throwable> error = new AtomicReference()-->Line_14 $$ error.set(e)[ FD ]
Line_3 $$ ThreadPool threadPool = new ThreadPool("testListenerIsCallableFromNetworkThreads")-->Line_34 $$ ThreadPool.terminate(threadPool, 10, TimeUnit.SECONDS)[ FD ]
Line_2 $$ public void testListenerIsCallableFromNetworkThreads() throws Throwable -->Line_3 $$ ThreadPool threadPool = new ThreadPool("testListenerIsCallableFromNetworkThreads")[ CD ]
Line_18 $$ Thread networkThread = new Thread(new AbstractRunnable() -->Line_20 $$ error.set(t)[ CD ]
Line_8 $$ final Object response = new Object()-->Line_24 $$ future.onResponse(response)[ FD ]
