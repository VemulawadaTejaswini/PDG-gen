Line_4 $$ final CollectingListener subtreeListener = new CollectingListener(1)-->Line_5 $$ coordinator.addListener("foo", EventContext.SUBTREE_SCOPE, subtreeListener)[ FD ]
Line_3 $$ final NamingEventCoordinator coordinator = new NamingEventCoordinator()-->Line_7 $$ coordinator.addListener("foo/bar", EventContext.SUBTREE_SCOPE, subtreeListenerTwo)[ FD ]
Line_2 $$ public void testFireMultiLevelEvent() throws Exception -->Line_3 $$ final NamingEventCoordinator coordinator = new NamingEventCoordinator()[ CD ]
Line_2 $$ public void testFireMultiLevelEvent() throws Exception -->Line_15 $$ assertEquals(1, subtreeListenerTwo.capturedEvents.size())[ CD ]
Line_3 $$ final NamingEventCoordinator coordinator = new NamingEventCoordinator()-->Line_9 $$ coordinator.addListener("foo/bar/baz", EventContext.SUBTREE_SCOPE, subtreeListenerThree)[ FD ]
Line_2 $$ public void testFireMultiLevelEvent() throws Exception -->Line_10 $$ coordinator.fireEvent(context, new CompositeName("foo/bar/baz/boo"), null, null, NamingEvent.OBJECT_ADDED, "bind", EventContext.OBJECT_SCOPE, EventContext.ONELEVEL_SCOPE, EventContext.SUBTREE_SCOPE)[ CD ]
Line_2 $$ public void testFireMultiLevelEvent() throws Exception -->Line_12 $$ subtreeListenerTwo.latch.await(1, TimeUnit.SECONDS)[ CD ]
Line_2 $$ public void testFireMultiLevelEvent() throws Exception -->Line_5 $$ coordinator.addListener("foo", EventContext.SUBTREE_SCOPE, subtreeListener)[ CD ]
Line_2 $$ public void testFireMultiLevelEvent() throws Exception -->Line_9 $$ coordinator.addListener("foo/bar/baz", EventContext.SUBTREE_SCOPE, subtreeListenerThree)[ CD ]
Line_2 $$ public void testFireMultiLevelEvent() throws Exception -->Line_8 $$ final CollectingListener subtreeListenerThree = new CollectingListener(1)[ CD ]
Line_2 $$ public void testFireMultiLevelEvent() throws Exception -->Line_14 $$ assertEquals(1, subtreeListener.capturedEvents.size())[ CD ]
Line_2 $$ public void testFireMultiLevelEvent() throws Exception -->Line_13 $$ subtreeListenerThree.latch.await(1, TimeUnit.SECONDS)[ CD ]
Line_6 $$ final CollectingListener subtreeListenerTwo = new CollectingListener(1)-->Line_7 $$ coordinator.addListener("foo/bar", EventContext.SUBTREE_SCOPE, subtreeListenerTwo)[ FD ]
Line_2 $$ public void testFireMultiLevelEvent() throws Exception -->Line_16 $$ assertEquals(1, subtreeListenerThree.capturedEvents.size())[ CD ]
Line_3 $$ final NamingEventCoordinator coordinator = new NamingEventCoordinator()-->Line_10 $$ coordinator.fireEvent(context, new CompositeName("foo/bar/baz/boo"), null, null, NamingEvent.OBJECT_ADDED, "bind", EventContext.OBJECT_SCOPE, EventContext.ONELEVEL_SCOPE, EventContext.SUBTREE_SCOPE)[ FD ]
Line_2 $$ public void testFireMultiLevelEvent() throws Exception -->Line_6 $$ final CollectingListener subtreeListenerTwo = new CollectingListener(1)[ CD ]
Line_8 $$ final CollectingListener subtreeListenerThree = new CollectingListener(1)-->Line_9 $$ coordinator.addListener("foo/bar/baz", EventContext.SUBTREE_SCOPE, subtreeListenerThree)[ FD ]
Line_2 $$ public void testFireMultiLevelEvent() throws Exception -->Line_11 $$ subtreeListener.latch.await(1, TimeUnit.SECONDS)[ CD ]
Line_2 $$ public void testFireMultiLevelEvent() throws Exception -->Line_7 $$ coordinator.addListener("foo/bar", EventContext.SUBTREE_SCOPE, subtreeListenerTwo)[ CD ]
Line_3 $$ final NamingEventCoordinator coordinator = new NamingEventCoordinator()-->Line_5 $$ coordinator.addListener("foo", EventContext.SUBTREE_SCOPE, subtreeListener)[ FD ]
Line_2 $$ public void testFireMultiLevelEvent() throws Exception -->Line_4 $$ final CollectingListener subtreeListener = new CollectingListener(1)[ CD ]
