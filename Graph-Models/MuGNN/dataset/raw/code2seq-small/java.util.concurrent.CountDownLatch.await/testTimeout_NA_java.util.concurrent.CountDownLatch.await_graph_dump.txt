Line_2 $$ public void testTimeout() throws Exception -->Line_3 $$ ScheduledExecutorService timer = Executors.newSingleThreadScheduledExecutor(EsExecutors.daemonThreadFactory(getTestName()))[ CD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_27 $$ executor.execute(new Runnable() [ CD ]
Line_4 $$ PrioritizedEsThreadPoolExecutor executor = EsExecutors.newSinglePrioritizing(getTestName(), EsExecutors.daemonThreadFactory(getTestName()))-->Line_21 $$ PrioritizedEsThreadPoolExecutor.Pending[] pending = executor.getPending()[ FD ]
Line_5 $$ final CountDownLatch invoked = new CountDownLatch(1)-->Line_10 $$ invoked.countDown()[ FD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_40 $$ pending = executor.getPending()[ CD ]
Line_4 $$ PrioritizedEsThreadPoolExecutor executor = EsExecutors.newSinglePrioritizing(getTestName(), EsExecutors.daemonThreadFactory(getTestName()))-->Line_40 $$ pending = executor.getPending()[ FD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_50 $$ assertTrue(terminate(timer, executor))[ CD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_43 $$ assertThat(pending[0].executing, equalTo(true))[ CD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_6 $$ final CountDownLatch block = new CountDownLatch(1)[ CD ]
Line_6 $$ final CountDownLatch block = new CountDownLatch(1)-->Line_47 $$ block.countDown()[ FD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_49 $$ assertThat(executeCalled.get(), equalTo(false))[ CD ]
Line_4 $$ PrioritizedEsThreadPoolExecutor executor = EsExecutors.newSinglePrioritizing(getTestName(), EsExecutors.daemonThreadFactory(getTestName()))-->Line_50 $$ assertTrue(terminate(timer, executor))[ FD ]
Line_4 $$ PrioritizedEsThreadPoolExecutor executor = EsExecutors.newSinglePrioritizing(getTestName(), EsExecutors.daemonThreadFactory(getTestName()))-->Line_7 $$ executor.execute(new Runnable() [ FD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_5 $$ final CountDownLatch invoked = new CountDownLatch(1)[ CD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_23 $$ assertThat(pending[0].task.toString(), equalTo("the blocking"))[ CD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_44 $$ assertThat(pending[1].task.toString(), equalTo("the waiting"))[ CD ]
Line_5 $$ final CountDownLatch invoked = new CountDownLatch(1)-->Line_20 $$ invoked.await()[ FD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_45 $$ assertThat(pending[1].executing, equalTo(false))[ CD ]
Line_3 $$ ScheduledExecutorService timer = Executors.newSingleThreadScheduledExecutor(EsExecutors.daemonThreadFactory(getTestName()))-->Line_50 $$ assertTrue(terminate(timer, executor))[ FD ]
Line_7 $$ executor.execute(new Runnable() -->Line_17 $$ return "the blocking"[ CD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_41 $$ assertThat(pending.length, equalTo(2))[ CD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_20 $$ invoked.await()[ CD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_24 $$ assertThat(pending[0].executing, equalTo(true))[ CD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_7 $$ executor.execute(new Runnable() [ CD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_4 $$ PrioritizedEsThreadPoolExecutor executor = EsExecutors.newSinglePrioritizing(getTestName(), EsExecutors.daemonThreadFactory(getTestName()))[ CD ]
Line_3 $$ ScheduledExecutorService timer = Executors.newSingleThreadScheduledExecutor(EsExecutors.daemonThreadFactory(getTestName()))-->Line_27 $$ executor.execute(new Runnable() [ FD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_22 $$ assertThat(pending.length, equalTo(1))[ CD ]
Line_4 $$ PrioritizedEsThreadPoolExecutor executor = EsExecutors.newSinglePrioritizing(getTestName(), EsExecutors.daemonThreadFactory(getTestName()))-->Line_27 $$ executor.execute(new Runnable() [ FD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_46 $$ assertThat(timedOut.await(2, TimeUnit.SECONDS), equalTo(true))[ CD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_47 $$ block.countDown()[ CD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_48 $$ Thread.sleep(100)[ CD ]
Line_27 $$ executor.execute(new Runnable() -->Line_37 $$ timedOut.countDown()[ CD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_21 $$ PrioritizedEsThreadPoolExecutor.Pending[] pending = executor.getPending()[ CD ]
Line_27 $$ executor.execute(new Runnable() -->Line_29 $$ executeCalled.set(true)[ CD ]
Line_2 $$ public void testTimeout() throws Exception -->Line_42 $$ assertThat(pending[0].task.toString(), equalTo("the blocking"))[ CD ]
Line_6 $$ final CountDownLatch block = new CountDownLatch(1)-->Line_11 $$ block.await()[ FD ]
Line_27 $$ executor.execute(new Runnable() -->Line_32 $$ return "the waiting"[ CD ]
