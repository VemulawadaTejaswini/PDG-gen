Line_4 $$ Alarm alarm = new Alarm(Alarm.ThreadToUse.SHARED_THREAD)-->Line_8 $$ alarm.addRequest(() -> [ FD ]
Line_3 $$ ConsoleViewImpl console = myConsole-->Line_6 $$ console.clear()[ FD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_8 $$ alarm.addRequest(() -> [ CD ]
Line_2 $$ public void testClearAndPrintWhileAnotherClearExecution() throws Exception -->Line_5 $$ for (int i = 0; i < 100; i++) [ CD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_15 $$ UIUtil.dispatchAllInvocationEvents()[ CD ]
Line_2 $$ public void testClearAndPrintWhileAnotherClearExecution() throws Exception -->Line_4 $$ Alarm alarm = new Alarm(Alarm.ThreadToUse.SHARED_THREAD)[ CD ]
Line_7 $$ CountDownLatch latch = new CountDownLatch(1)-->Line_11 $$ latch.countDown()[ FD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_6 $$ console.clear()[ CD ]
Line_3 $$ ConsoleViewImpl console = myConsole-->Line_10 $$ console.print("Test", ConsoleViewContentType.NORMAL_OUTPUT)[ FD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_14 $$ latch.await()[ CD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_13 $$ UIUtil.dispatchAllInvocationEvents()[ CD ]
Line_2 $$ public void testClearAndPrintWhileAnotherClearExecution() throws Exception -->Line_3 $$ ConsoleViewImpl console = myConsole[ CD ]
Line_16 $$ while (console.hasDeferredOutput()) -->Line_17 $$ UIUtil.dispatchAllInvocationEvents()[ CD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_7 $$ CountDownLatch latch = new CountDownLatch(1)[ CD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_20 $$ assertEquals("Test", console.getText())[ CD ]
Line_7 $$ CountDownLatch latch = new CountDownLatch(1)-->Line_14 $$ latch.await()[ FD ]
Line_3 $$ ConsoleViewImpl console = myConsole-->Line_20 $$ assertEquals("Test", console.getText())[ FD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_16 $$ while (console.hasDeferredOutput()) [ CD ]
Line_16 $$ while (console.hasDeferredOutput()) -->Line_18 $$ TimeoutUtil.sleep(5)[ CD ]
Line_3 $$ ConsoleViewImpl console = myConsole-->Line_16 $$ while (console.hasDeferredOutput()) [ FD ]
Line_3 $$ ConsoleViewImpl console = myConsole-->Line_9 $$ console.clear()[ FD ]
