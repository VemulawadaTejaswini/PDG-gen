Line_2 $$ public void testTooManyContinueProcessingResponse() throws ExecutionException, InterruptedException -->Line_4 $$ ResponseTestFilter testFilter = new ResponseTestFilter(randomInt(), new ResponseCallback() [ CD ]
Line_4 $$ ResponseTestFilter testFilter = new ResponseTestFilter(randomInt(), new ResponseCallback() -->Line_17 $$ listener.onResponse(new TestResponse())[ FD ]
Line_2 $$ public void testTooManyContinueProcessingResponse() throws ExecutionException, InterruptedException -->Line_23 $$ transportAction.execute(new TestRequest(), new ActionListener<TestResponse>() [ CD ]
Line_2 $$ public void testTooManyContinueProcessingResponse() throws ExecutionException, InterruptedException -->Line_13 $$ String actionName = randomAsciiOfLength(randomInt(30))[ CD ]
Line_4 $$ ResponseTestFilter testFilter = new ResponseTestFilter(randomInt(), new ResponseCallback() -->Line_6 $$ for (int i = 0; i <= additionalContinueCount; i++) [ CD ]
Line_6 $$ for (int i = 0; i <= additionalContinueCount; i++) -->Line_7 $$ chain.proceed(action, response, listener)[ CD ]
Line_2 $$ public void testTooManyContinueProcessingResponse() throws ExecutionException, InterruptedException -->Line_12 $$ filters.add(testFilter)[ CD ]
Line_33 $$ if (!latch.await(10, TimeUnit.SECONDS)) -->Line_34 $$ fail("timeout waiting for the filter to notify the listener as many times as expected")[ CD ]
Line_4 $$ ResponseTestFilter testFilter = new ResponseTestFilter(randomInt(), new ResponseCallback() -->Line_7 $$ chain.proceed(action, response, listener)[ FD ]
Line_15 $$ TransportAction<TestRequest, TestResponse> transportAction = new TransportAction<TestRequest, TestResponse>(Settings.EMPTY, actionName, null, actionFilters, null) -->Line_17 $$ listener.onResponse(new TestResponse())[ CD ]
Line_3 $$ final int additionalContinueCount = randomInt(10)-->Line_39 $$ assertThat(failures.size(), equalTo(additionalContinueCount))[ FD ]
Line_2 $$ public void testTooManyContinueProcessingResponse() throws ExecutionException, InterruptedException -->Line_37 $$ assertThat(testFilter.lastActionName, equalTo(actionName))[ CD ]
Line_2 $$ public void testTooManyContinueProcessingResponse() throws ExecutionException, InterruptedException -->Line_38 $$ assertThat(responses.get(), equalTo(1))[ CD ]
Line_2 $$ public void testTooManyContinueProcessingResponse() throws ExecutionException, InterruptedException -->Line_33 $$ if (!latch.await(10, TimeUnit.SECONDS)) [ CD ]
Line_23 $$ transportAction.execute(new TestRequest(), new ActionListener<TestResponse>() -->Line_30 $$ latch.countDown()[ CD ]
Line_2 $$ public void testTooManyContinueProcessingResponse() throws ExecutionException, InterruptedException -->Line_3 $$ final int additionalContinueCount = randomInt(10)[ CD ]
Line_4 $$ ResponseTestFilter testFilter = new ResponseTestFilter(randomInt(), new ResponseCallback() -->Line_12 $$ filters.add(testFilter)[ FD ]
Line_3 $$ final int additionalContinueCount = randomInt(10)-->Line_6 $$ for (int i = 0; i <= additionalContinueCount; i++) [ FD ]
Line_23 $$ transportAction.execute(new TestRequest(), new ActionListener<TestResponse>() -->Line_29 $$ failures.add(e)[ CD ]
Line_23 $$ transportAction.execute(new TestRequest(), new ActionListener<TestResponse>() -->Line_25 $$ responses.incrementAndGet()[ CD ]
Line_23 $$ transportAction.execute(new TestRequest(), new ActionListener<TestResponse>() -->Line_29 $$ failures.add(e)[ FD ]
Line_2 $$ public void testTooManyContinueProcessingResponse() throws ExecutionException, InterruptedException -->Line_36 $$ assertThat(testFilter.runs.get(), equalTo(1))[ CD ]
Line_15 $$ TransportAction<TestRequest, TestResponse> transportAction = new TransportAction<TestRequest, TestResponse>(Settings.EMPTY, actionName, null, actionFilters, null) -->Line_17 $$ listener.onResponse(new TestResponse())[ FD ]
Line_2 $$ public void testTooManyContinueProcessingResponse() throws ExecutionException, InterruptedException -->Line_39 $$ assertThat(failures.size(), equalTo(additionalContinueCount))[ CD ]
Line_23 $$ transportAction.execute(new TestRequest(), new ActionListener<TestResponse>() -->Line_26 $$ latch.countDown()[ CD ]
