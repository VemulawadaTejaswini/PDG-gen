Line_5 $$ clusterService.submitStateUpdateTask("test", new ClusterStateUpdateTask() -->Line_7 $$ return updater.execute(currentState)[ FD ]
Line_2 $$ private void updateClusterState(final ClusterStateUpdater updater) throws InterruptedException -->Line_16 $$ countDownLatch.await()[ CD ]
Line_3 $$ final CountDownLatch countDownLatch = new CountDownLatch(1)-->Line_16 $$ countDownLatch.await()[ FD ]
Line_5 $$ clusterService.submitStateUpdateTask("test", new ClusterStateUpdateTask() -->Line_13 $$ countDownLatch.countDown()[ CD ]
Line_2 $$ private void updateClusterState(final ClusterStateUpdater updater) throws InterruptedException -->Line_3 $$ final CountDownLatch countDownLatch = new CountDownLatch(1)[ CD ]
Line_2 $$ private void updateClusterState(final ClusterStateUpdater updater) throws InterruptedException -->Line_7 $$ return updater.execute(currentState)[ FD ]
Line_4 $$ final ClusterService clusterService = internalCluster().getInstance(ClusterService.class)-->Line_5 $$ clusterService.submitStateUpdateTask("test", new ClusterStateUpdateTask() [ FD ]
Line_3 $$ final CountDownLatch countDownLatch = new CountDownLatch(1)-->Line_13 $$ countDownLatch.countDown()[ FD ]
Line_2 $$ private void updateClusterState(final ClusterStateUpdater updater) throws InterruptedException -->Line_4 $$ final ClusterService clusterService = internalCluster().getInstance(ClusterService.class)[ CD ]
Line_2 $$ private void updateClusterState(final ClusterStateUpdater updater) throws InterruptedException -->Line_5 $$ clusterService.submitStateUpdateTask("test", new ClusterStateUpdateTask() [ CD ]
Line_5 $$ clusterService.submitStateUpdateTask("test", new ClusterStateUpdateTask() -->Line_10 $$ countDownLatch.countDown()[ CD ]
Line_3 $$ final CountDownLatch countDownLatch = new CountDownLatch(1)-->Line_10 $$ countDownLatch.countDown()[ FD ]
Line_5 $$ clusterService.submitStateUpdateTask("test", new ClusterStateUpdateTask() -->Line_7 $$ return updater.execute(currentState)[ CD ]
