Line_26 $$ Answer<Void> blockingSync = new Answer<Void>() -->Line_38 $$ return null[ CD ]
Line_13 $$ final Thread doAnEditThread = new Thread() -->Line_56 $$ doAnEditThread.join()[ FD ]
Line_6 $$ final FSNamesystem namesystem = FSNamesystem.loadFromDisk(conf)-->Line_8 $$ FSImage fsimage = namesystem.getFSImage()[ FD ]
Line_6 $$ final FSNamesystem namesystem = FSNamesystem.loadFromDisk(conf)-->Line_17 $$ namesystem.mkdirs("/test", new PermissionStatus("test", "test", new FsPermission((short) 00755)), true)[ FD ]
Line_6 $$ final FSNamesystem namesystem = FSNamesystem.loadFromDisk(conf)-->Line_62 $$ if (namesystem != null)[ FD ]
Line_12 $$ final CountDownLatch waitToEnterSync = new CountDownLatch(1)-->Line_22 $$ waitToEnterSync.countDown()[ FD ]
Line_26 $$ Answer<Void> blockingSync = new Answer<Void>() -->Line_36 $$ invocation.callRealMethod()[ CD ]
Line_6 $$ final FSNamesystem namesystem = FSNamesystem.loadFromDisk(conf)-->Line_54 $$ namesystem.saveNamespace()[ FD ]
Line_13 $$ final Thread doAnEditThread = new Thread() -->Line_42 $$ doAnEditThread.start()[ FD ]
Line_11 $$ final AtomicReference<Throwable> deferredException = new AtomicReference<Throwable>()-->Line_45 $$ assertNull(deferredException.get())[ FD ]
Line_8 $$ FSImage fsimage = namesystem.getFSImage()-->Line_59 $$ assertEquals(1, verifyEditLogs(namesystem, fsimage, NNStorage.getInProgressEditsFileName(4), 4))[ FD ]
Line_3 $$ Configuration conf = getConf()-->Line_4 $$ NameNode.initMetrics(conf, NamenodeRole.NAMENODE)[ FD ]
Line_29 $$ if (Thread.currentThread() == doAnEditThread) -->Line_34 $$ LOG.info("Going through to logSync. This will allow the main thread to continue.")[ CD ]
Line_12 $$ final CountDownLatch waitToEnterSync = new CountDownLatch(1)-->Line_44 $$ waitToEnterSync.await()[ FD ]
Line_8 $$ FSImage fsimage = namesystem.getFSImage()-->Line_58 $$ assertEquals(3, verifyEditLogs(namesystem, fsimage, NNStorage.getFinalizedEditsFileName(1, 3), 1))[ FD ]
Line_6 $$ final FSNamesystem namesystem = FSNamesystem.loadFromDisk(conf)-->Line_63 $$ namesystem.close()[ FD ]
Line_11 $$ final AtomicReference<Throwable> deferredException = new AtomicReference<Throwable>()-->Line_57 $$ assertNull(deferredException.get())[ FD ]
Line_6 $$ final FSNamesystem namesystem = FSNamesystem.loadFromDisk(conf)-->Line_50 $$ namesystem.setSafeMode(SafeModeAction.SAFEMODE_ENTER)[ FD ]
Line_2 $$ public void testSaveRightBeforeSync() throws Exception -->Line_6 $$ final FSNamesystem namesystem = FSNamesystem.loadFromDisk(conf)[ CD ]
Line_11 $$ final AtomicReference<Throwable> deferredException = new AtomicReference<Throwable>()-->Line_21 $$ deferredException.set(ioe)[ FD ]
Line_29 $$ if (Thread.currentThread() == doAnEditThread) -->Line_31 $$ waitToEnterSync.countDown()[ CD ]
Line_29 $$ if (Thread.currentThread() == doAnEditThread) -->Line_33 $$ Thread.sleep(BLOCK_TIME * 1000)[ CD ]
Line_26 $$ Answer<Void> blockingSync = new Answer<Void>() -->Line_29 $$ if (Thread.currentThread() == doAnEditThread) [ CD ]
Line_29 $$ if (Thread.currentThread() == doAnEditThread) -->Line_30 $$ LOG.info("edit thread: Telling main thread we made it just before logSync...")[ CD ]
Line_26 $$ Answer<Void> blockingSync = new Answer<Void>() -->Line_37 $$ LOG.info("logSync complete")[ CD ]
Line_62 $$ if (namesystem != null)-->Line_63 $$ namesystem.close()[ CD ]
Line_6 $$ final FSNamesystem namesystem = FSNamesystem.loadFromDisk(conf)-->Line_58 $$ assertEquals(3, verifyEditLogs(namesystem, fsimage, NNStorage.getFinalizedEditsFileName(1, 3), 1))[ FD ]
Line_2 $$ public void testSaveRightBeforeSync() throws Exception -->Line_5 $$ DFSTestUtil.formatNameNode(conf)[ CD ]
Line_9 $$ FSEditLog editLog = spy(fsimage.getEditLog())-->Line_41 $$ doAnswer(blockingSync).when(editLog).logSync()[ FD ]
Line_2 $$ public void testSaveRightBeforeSync() throws Exception -->Line_3 $$ Configuration conf = getConf()[ CD ]
Line_3 $$ Configuration conf = getConf()-->Line_6 $$ final FSNamesystem namesystem = FSNamesystem.loadFromDisk(conf)[ FD ]
Line_29 $$ if (Thread.currentThread() == doAnEditThread) -->Line_32 $$ LOG.info("edit thread: sleeping for " + BLOCK_TIME + "secs")[ CD ]
Line_6 $$ final FSNamesystem namesystem = FSNamesystem.loadFromDisk(conf)-->Line_59 $$ assertEquals(1, verifyEditLogs(namesystem, fsimage, NNStorage.getInProgressEditsFileName(4), 4))[ FD ]
Line_26 $$ Answer<Void> blockingSync = new Answer<Void>() -->Line_28 $$ LOG.info("logSync called")[ CD ]
Line_13 $$ final Thread doAnEditThread = new Thread() -->Line_29 $$ if (Thread.currentThread() == doAnEditThread) [ FD ]
Line_3 $$ Configuration conf = getConf()-->Line_5 $$ DFSTestUtil.formatNameNode(conf)[ FD ]
Line_26 $$ Answer<Void> blockingSync = new Answer<Void>() -->Line_36 $$ invocation.callRealMethod()[ FD ]
Line_8 $$ FSImage fsimage = namesystem.getFSImage()-->Line_9 $$ FSEditLog editLog = spy(fsimage.getEditLog())[ FD ]
Line_12 $$ final CountDownLatch waitToEnterSync = new CountDownLatch(1)-->Line_31 $$ waitToEnterSync.countDown()[ FD ]
Line_9 $$ FSEditLog editLog = spy(fsimage.getEditLog())-->Line_10 $$ fsimage.editLog = editLog[ FD ]
Line_2 $$ public void testSaveRightBeforeSync() throws Exception -->Line_4 $$ NameNode.initMetrics(conf, NamenodeRole.NAMENODE)[ CD ]
