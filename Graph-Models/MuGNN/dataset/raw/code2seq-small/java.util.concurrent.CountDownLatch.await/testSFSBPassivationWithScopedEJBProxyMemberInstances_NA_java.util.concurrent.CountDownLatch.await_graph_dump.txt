Line_3 $$ final StatefulBeanA sfsbOnLocalServer = InitialContext.doLookup("java:module/" + StatefulBeanA.class.getSimpleName() + "!" + StatefulBeanA.class.getName())-->Line_16 $$ sfsbOnLocalServer.registerPassivationNotificationLatch(passivationLatch)[ FD ]
Line_35 $$ final String echoAfterPostActivate = sfsbOnLocalServer.getEchoByInvokingOnRemoteServerBean(message)-->Line_36 $$ Assert.assertEquals("Unexpected echo message from remote server SLSB", message, echoAfterPostActivate)[ FD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_4 $$ final int initialCount = sfsbOnLocalServer.getCountByInvokingOnRemoteServerBean()[ CD ]
Line_6 $$ final int NUM_TIMES_BEFORE_PASSIVATION = 5-->Line_7 $$ for (int i = 0; i < NUM_TIMES_BEFORE_PASSIVATION; i++) [ FD ]
Line_10 $$ final int countAfterIncrement = sfsbOnLocalServer.getCountByInvokingOnRemoteServerBean()-->Line_11 $$ Assert.assertEquals("Unexpected count after increment, from stateful bean", NUM_TIMES_BEFORE_PASSIVATION, countAfterIncrement)[ FD ]
Line_6 $$ final int NUM_TIMES_BEFORE_PASSIVATION = 5-->Line_27 $$ Assert.assertEquals("Unexpected count from stateful bean after it was activated", NUM_TIMES_BEFORE_PASSIVATION, countAfterActivate)[ FD ]
Line_3 $$ final StatefulBeanA sfsbOnLocalServer = InitialContext.doLookup("java:module/" + StatefulBeanA.class.getSimpleName() + "!" + StatefulBeanA.class.getName())-->Line_8 $$ sfsbOnLocalServer.incrementCountByInvokingOnRemoteServerBean()[ FD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_17 $$ logger.info("Triggering passivation of " + StatefulBeanA.class.getSimpleName() + " bean")[ CD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_28 $$ Assert.assertTrue("Post-activate method was not invoked on bean " + StatefulBeanA.class.getSimpleName(), sfsbOnLocalServer.wasPostActivateInvoked())[ CD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_13 $$ final String firstEcho = sfsbOnLocalServer.getEchoByInvokingOnRemoteServerBean(message)[ CD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_29 $$ final int NUM_TIMES_AFTER_ACTIVATION = 2[ CD ]
Line_3 $$ final StatefulBeanA sfsbOnLocalServer = InitialContext.doLookup("java:module/" + StatefulBeanA.class.getSimpleName() + "!" + StatefulBeanA.class.getName())-->Line_26 $$ final int countAfterActivate = sfsbOnLocalServer.getCountByInvokingOnRemoteServerBean()[ FD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_35 $$ final String echoAfterPostActivate = sfsbOnLocalServer.getEchoByInvokingOnRemoteServerBean(message)[ CD ]
Line_7 $$ for (int i = 0; i < NUM_TIMES_BEFORE_PASSIVATION; i++) -->Line_8 $$ sfsbOnLocalServer.incrementCountByInvokingOnRemoteServerBean()[ CD ]
Line_3 $$ final StatefulBeanA sfsbOnLocalServer = InitialContext.doLookup("java:module/" + StatefulBeanA.class.getSimpleName() + "!" + StatefulBeanA.class.getName())-->Line_28 $$ Assert.assertTrue("Post-activate method was not invoked on bean " + StatefulBeanA.class.getSimpleName(), sfsbOnLocalServer.wasPostActivateInvoked())[ FD ]
Line_3 $$ final StatefulBeanA sfsbOnLocalServer = InitialContext.doLookup("java:module/" + StatefulBeanA.class.getSimpleName() + "!" + StatefulBeanA.class.getName())-->Line_31 $$ sfsbOnLocalServer.incrementCountByInvokingOnRemoteServerBean()[ FD ]
Line_6 $$ final int NUM_TIMES_BEFORE_PASSIVATION = 5-->Line_11 $$ Assert.assertEquals("Unexpected count after increment, from stateful bean", NUM_TIMES_BEFORE_PASSIVATION, countAfterIncrement)[ FD ]
Line_30 $$ for (int i = 0; i < NUM_TIMES_AFTER_ACTIVATION; i++) -->Line_31 $$ sfsbOnLocalServer.incrementCountByInvokingOnRemoteServerBean()[ CD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_5 $$ Assert.assertEquals("Unexpected initial count from stateful bean", 0, initialCount)[ CD ]
Line_3 $$ final StatefulBeanA sfsbOnLocalServer = InitialContext.doLookup("java:module/" + StatefulBeanA.class.getSimpleName() + "!" + StatefulBeanA.class.getName())-->Line_10 $$ final int countAfterIncrement = sfsbOnLocalServer.getCountByInvokingOnRemoteServerBean()[ FD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_14 $$ Assert.assertEquals("Unexpected echo from remote server SLSB", message, firstEcho)[ CD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_34 $$ Assert.assertEquals("Unexpected count after increment, on the post activated stateful bean", NUM_TIMES_BEFORE_PASSIVATION + NUM_TIMES_AFTER_ACTIVATION, counterAfterIncrementOnPostActivate)[ CD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_15 $$ final CountDownLatch passivationLatch = new CountDownLatch(1)[ CD ]
Line_3 $$ final StatefulBeanA sfsbOnLocalServer = InitialContext.doLookup("java:module/" + StatefulBeanA.class.getSimpleName() + "!" + StatefulBeanA.class.getName())-->Line_35 $$ final String echoAfterPostActivate = sfsbOnLocalServer.getEchoByInvokingOnRemoteServerBean(message)[ FD ]
Line_12 $$ final String message = "foo"-->Line_14 $$ Assert.assertEquals("Unexpected echo from remote server SLSB", message, firstEcho)[ FD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_25 $$ Thread.sleep(1000)[ CD ]
Line_3 $$ final StatefulBeanA sfsbOnLocalServer = InitialContext.doLookup("java:module/" + StatefulBeanA.class.getSimpleName() + "!" + StatefulBeanA.class.getName())-->Line_33 $$ final int counterAfterIncrementOnPostActivate = sfsbOnLocalServer.getCountByInvokingOnRemoteServerBean()[ FD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_27 $$ Assert.assertEquals("Unexpected count from stateful bean after it was activated", NUM_TIMES_BEFORE_PASSIVATION, countAfterActivate)[ CD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_20 $$ if (passivated) [ CD ]
Line_33 $$ final int counterAfterIncrementOnPostActivate = sfsbOnLocalServer.getCountByInvokingOnRemoteServerBean()-->Line_34 $$ Assert.assertEquals("Unexpected count after increment, on the post activated stateful bean", NUM_TIMES_BEFORE_PASSIVATION + NUM_TIMES_AFTER_ACTIVATION, counterAfterIncrementOnPostActivate)[ FD ]
Line_3 $$ final StatefulBeanA sfsbOnLocalServer = InitialContext.doLookup("java:module/" + StatefulBeanA.class.getSimpleName() + "!" + StatefulBeanA.class.getName())-->Line_13 $$ final String firstEcho = sfsbOnLocalServer.getEchoByInvokingOnRemoteServerBean(message)[ FD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_3 $$ final StatefulBeanA sfsbOnLocalServer = InitialContext.doLookup("java:module/" + StatefulBeanA.class.getSimpleName() + "!" + StatefulBeanA.class.getName())[ CD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_12 $$ final String message = "foo"[ CD ]
Line_12 $$ final String message = "foo"-->Line_35 $$ final String echoAfterPostActivate = sfsbOnLocalServer.getEchoByInvokingOnRemoteServerBean(message)[ FD ]
Line_4 $$ final int initialCount = sfsbOnLocalServer.getCountByInvokingOnRemoteServerBean()-->Line_5 $$ Assert.assertEquals("Unexpected initial count from stateful bean", 0, initialCount)[ FD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_19 $$ final boolean passivated = passivationLatch.await(2, TimeUnit.SECONDS)[ CD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_16 $$ sfsbOnLocalServer.registerPassivationNotificationLatch(passivationLatch)[ CD ]
Line_15 $$ final CountDownLatch passivationLatch = new CountDownLatch(1)-->Line_16 $$ sfsbOnLocalServer.registerPassivationNotificationLatch(passivationLatch)[ FD ]
Line_12 $$ final String message = "foo"-->Line_36 $$ Assert.assertEquals("Unexpected echo message from remote server SLSB", message, echoAfterPostActivate)[ FD ]
Line_12 $$ final String message = "foo"-->Line_13 $$ final String firstEcho = sfsbOnLocalServer.getEchoByInvokingOnRemoteServerBean(message)[ FD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_18 $$ InitialContext.doLookup("java:module/" + StatefulBeanA.class.getSimpleName() + "!" + StatefulBeanA.class.getName())[ CD ]
Line_20 $$ if (passivated) -->Line_23 $$ Assert.fail(sfsbOnLocalServer + " was not passivated")[ CD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_6 $$ final int NUM_TIMES_BEFORE_PASSIVATION = 5[ CD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_26 $$ final int countAfterActivate = sfsbOnLocalServer.getCountByInvokingOnRemoteServerBean()[ CD ]
Line_7 $$ for (int i = 0; i < NUM_TIMES_BEFORE_PASSIVATION; i++) -->Line_30 $$ for (int i = 0; i < NUM_TIMES_AFTER_ACTIVATION; i++) [ FD ]
Line_13 $$ final String firstEcho = sfsbOnLocalServer.getEchoByInvokingOnRemoteServerBean(message)-->Line_14 $$ Assert.assertEquals("Unexpected echo from remote server SLSB", message, firstEcho)[ FD ]
Line_29 $$ final int NUM_TIMES_AFTER_ACTIVATION = 2-->Line_30 $$ for (int i = 0; i < NUM_TIMES_AFTER_ACTIVATION; i++) [ FD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_11 $$ Assert.assertEquals("Unexpected count after increment, from stateful bean", NUM_TIMES_BEFORE_PASSIVATION, countAfterIncrement)[ CD ]
Line_26 $$ final int countAfterActivate = sfsbOnLocalServer.getCountByInvokingOnRemoteServerBean()-->Line_27 $$ Assert.assertEquals("Unexpected count from stateful bean after it was activated", NUM_TIMES_BEFORE_PASSIVATION, countAfterActivate)[ FD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_30 $$ for (int i = 0; i < NUM_TIMES_AFTER_ACTIVATION; i++) [ CD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_33 $$ final int counterAfterIncrementOnPostActivate = sfsbOnLocalServer.getCountByInvokingOnRemoteServerBean()[ CD ]
Line_20 $$ if (passivated) -->Line_21 $$ logger.info("pre-passivate invoked on " + StatefulBeanA.class.getSimpleName() + " bean")[ CD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_10 $$ final int countAfterIncrement = sfsbOnLocalServer.getCountByInvokingOnRemoteServerBean()[ CD ]
Line_3 $$ final StatefulBeanA sfsbOnLocalServer = InitialContext.doLookup("java:module/" + StatefulBeanA.class.getSimpleName() + "!" + StatefulBeanA.class.getName())-->Line_4 $$ final int initialCount = sfsbOnLocalServer.getCountByInvokingOnRemoteServerBean()[ FD ]
Line_15 $$ final CountDownLatch passivationLatch = new CountDownLatch(1)-->Line_19 $$ final boolean passivated = passivationLatch.await(2, TimeUnit.SECONDS)[ FD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_36 $$ Assert.assertEquals("Unexpected echo message from remote server SLSB", message, echoAfterPostActivate)[ CD ]
Line_2 $$ public void testSFSBPassivationWithScopedEJBProxyMemberInstances() throws Exception -->Line_7 $$ for (int i = 0; i < NUM_TIMES_BEFORE_PASSIVATION; i++) [ CD ]
