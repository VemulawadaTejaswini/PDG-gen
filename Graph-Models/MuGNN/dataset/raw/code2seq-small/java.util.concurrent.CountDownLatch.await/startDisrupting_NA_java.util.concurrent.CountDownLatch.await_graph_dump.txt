Line_7 $$ ClusterService clusterService = cluster.getInstance(ClusterService.class, disruptionNodeCopy)-->Line_15 $$ clusterService.submitStateUpdateTask("service_disruption_block", new ClusterStateUpdateTask(Priority.IMMEDIATE) [ FD ]
Line_2 $$ public void startDisrupting() -->Line_7 $$ ClusterService clusterService = cluster.getInstance(ClusterService.class, disruptionNodeCopy)[ CD ]
Line_2 $$ public void startDisrupting() -->Line_14 $$ final CountDownLatch started = new CountDownLatch(1)[ CD ]
Line_15 $$ clusterService.submitStateUpdateTask("service_disruption_block", new ClusterStateUpdateTask(Priority.IMMEDIATE) -->Line_20 $$ started.countDown()[ CD ]
Line_3 $$ final String disruptionNodeCopy = disruptedNode-->Line_4 $$ if (disruptionNodeCopy == null) [ FD ]
Line_7 $$ ClusterService clusterService = cluster.getInstance(ClusterService.class, disruptionNodeCopy)-->Line_8 $$ if (clusterService == null) [ FD ]
Line_14 $$ final CountDownLatch started = new CountDownLatch(1)-->Line_32 $$ started.await()[ FD ]
Line_15 $$ clusterService.submitStateUpdateTask("service_disruption_block", new ClusterStateUpdateTask(Priority.IMMEDIATE) -->Line_17 $$ return false[ CD ]
Line_15 $$ clusterService.submitStateUpdateTask("service_disruption_block", new ClusterStateUpdateTask(Priority.IMMEDIATE) -->Line_25 $$ return currentState[ CD ]
Line_3 $$ final String disruptionNodeCopy = disruptedNode-->Line_7 $$ ClusterService clusterService = cluster.getInstance(ClusterService.class, disruptionNodeCopy)[ FD ]
Line_4 $$ if (disruptionNodeCopy == null) -->Line_5 $$ return[ CD ]
Line_15 $$ clusterService.submitStateUpdateTask("service_disruption_block", new ClusterStateUpdateTask(Priority.IMMEDIATE) -->Line_28 $$ logger.error("unexpected error during disruption", t)[ FD ]
Line_22 $$ if (latch != null) -->Line_23 $$ latch.await()[ CD ]
Line_2 $$ public void startDisrupting() -->Line_15 $$ clusterService.submitStateUpdateTask("service_disruption_block", new ClusterStateUpdateTask(Priority.IMMEDIATE) [ CD ]
Line_2 $$ public void startDisrupting() -->Line_11 $$ logger.info("delaying cluster state updates on node [[ CD ]
Line_2 $$ public void startDisrupting() -->Line_3 $$ final String disruptionNodeCopy = disruptedNode[ CD ]
Line_14 $$ final CountDownLatch started = new CountDownLatch(1)-->Line_20 $$ started.countDown()[ FD ]
Line_15 $$ clusterService.submitStateUpdateTask("service_disruption_block", new ClusterStateUpdateTask(Priority.IMMEDIATE) -->Line_22 $$ if (latch != null) [ CD ]
Line_15 $$ clusterService.submitStateUpdateTask("service_disruption_block", new ClusterStateUpdateTask(Priority.IMMEDIATE) -->Line_21 $$ CountDownLatch latch = disruptionLatch.get()[ CD ]
Line_21 $$ CountDownLatch latch = disruptionLatch.get()-->Line_22 $$ if (latch != null) [ FD ]
Line_2 $$ public void startDisrupting() -->Line_8 $$ if (clusterService == null) [ CD ]
Line_3 $$ final String disruptionNodeCopy = disruptedNode-->Line_11 $$ logger.info("delaying cluster state updates on node [[ FD ]
Line_2 $$ public void startDisrupting() -->Line_4 $$ if (disruptionNodeCopy == null) [ CD ]
Line_2 $$ public void startDisrupting() -->Line_12 $$ boolean success = disruptionLatch.compareAndSet(null, new CountDownLatch(1))[ CD ]
Line_21 $$ CountDownLatch latch = disruptionLatch.get()-->Line_23 $$ latch.await()[ FD ]
Line_15 $$ clusterService.submitStateUpdateTask("service_disruption_block", new ClusterStateUpdateTask(Priority.IMMEDIATE) -->Line_28 $$ logger.error("unexpected error during disruption", t)[ CD ]
Line_8 $$ if (clusterService == null) -->Line_9 $$ return[ CD ]
