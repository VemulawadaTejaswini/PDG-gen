Line_8 $$ int state = super.stop()-->Line_19 $$ if (state == ServerConstants.SERVER_STATE_ONLINE) [ FD ]
Line_8 $$ int state = super.stop()-->Line_21 $$ if (state == ServerConstants.SERVER_STATE_SHUTDOWN) [ FD ]
Line_4 $$ Server server = new Server() -->Line_32 $$ server.setLogWriter(new UnsyncPrintWriter(new File(_HYPERSONIC_TEMP_DIR_NAME, _databaseName + ".std.log")))[ FD ]
Line_4 $$ Server server = new Server() -->Line_35 $$ server.start()[ FD ]
Line_19 $$ if (state == ServerConstants.SERVER_STATE_ONLINE) -->Line_21 $$ if (state == ServerConstants.SERVER_STATE_SHUTDOWN) [ CD ]
Line_2 $$ public Server beforeClass(Description description) throws Exception -->Line_4 $$ Server server = new Server() [ CD ]
Line_2 $$ public Server beforeClass(Description description) throws Exception -->Line_3 $$ final CountDownLatch startCountDownLatch = new CountDownLatch(1)[ CD ]
Line_4 $$ Server server = new Server() -->Line_19 $$ if (state == ServerConstants.SERVER_STATE_ONLINE) [ FD ]
Line_4 $$ Server server = new Server() -->Line_34 $$ server.setDatabasePath(0, _HYPERSONIC_TEMP_DIR_NAME + _databaseName)[ FD ]
Line_21 $$ if (state == ServerConstants.SERVER_STATE_SHUTDOWN) -->Line_22 $$ _shutdownCountDownLatch.countDown()[ CD ]
Line_4 $$ Server server = new Server() -->Line_31 $$ server.setErrWriter(new UnsyncPrintWriter(new File(_HYPERSONIC_TEMP_DIR_NAME, _databaseName + ".err.log")))[ FD ]
Line_2 $$ public Server beforeClass(Description description) throws Exception -->Line_34 $$ server.setDatabasePath(0, _HYPERSONIC_TEMP_DIR_NAME + _databaseName)[ CD ]
Line_4 $$ Server server = new Server() -->Line_18 $$ super.setState(state)[ FD ]
Line_3 $$ final CountDownLatch startCountDownLatch = new CountDownLatch(1)-->Line_20 $$ startCountDownLatch.countDown()[ FD ]
Line_4 $$ Server server = new Server() -->Line_18 $$ super.setState(state)[ CD ]
Line_2 $$ public Server beforeClass(Description description) throws Exception -->Line_36 $$ if (!startCountDownLatch.await(1, TimeUnit.MINUTES)) [ CD ]
Line_8 $$ int state = super.stop()-->Line_18 $$ super.setState(state)[ FD ]
Line_4 $$ Server server = new Server() -->Line_33 $$ server.setDatabaseName(0, _databaseName)[ FD ]
Line_2 $$ public Server beforeClass(Description description) throws Exception -->Line_35 $$ server.start()[ CD ]
Line_2 $$ public Server beforeClass(Description description) throws Exception -->Line_39 $$ return server[ CD ]
Line_4 $$ Server server = new Server() -->Line_21 $$ if (state == ServerConstants.SERVER_STATE_SHUTDOWN) [ FD ]
Line_2 $$ public Server beforeClass(Description description) throws Exception -->Line_31 $$ server.setErrWriter(new UnsyncPrintWriter(new File(_HYPERSONIC_TEMP_DIR_NAME, _databaseName + ".err.log")))[ CD ]
Line_2 $$ public Server beforeClass(Description description) throws Exception -->Line_33 $$ server.setDatabaseName(0, _databaseName)[ CD ]
Line_19 $$ if (state == ServerConstants.SERVER_STATE_ONLINE) -->Line_20 $$ startCountDownLatch.countDown()[ CD ]
Line_3 $$ final CountDownLatch startCountDownLatch = new CountDownLatch(1)-->Line_36 $$ if (!startCountDownLatch.await(1, TimeUnit.MINUTES)) [ FD ]
Line_4 $$ Server server = new Server() -->Line_19 $$ if (state == ServerConstants.SERVER_STATE_ONLINE) [ CD ]
Line_2 $$ public Server beforeClass(Description description) throws Exception -->Line_32 $$ server.setLogWriter(new UnsyncPrintWriter(new File(_HYPERSONIC_TEMP_DIR_NAME, _databaseName + ".std.log")))[ CD ]
