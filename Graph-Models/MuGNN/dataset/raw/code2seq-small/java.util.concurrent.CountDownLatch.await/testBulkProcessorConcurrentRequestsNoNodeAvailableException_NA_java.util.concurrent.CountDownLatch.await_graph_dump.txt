Line_2 $$ public void testBulkProcessorConcurrentRequestsNoNodeAvailableException() throws Exception -->Line_23 $$ assertThat(listener.bulkFailures.size(), equalTo(totalExpectedBulkActions))[ CD ]
Line_2 $$ public void testBulkProcessorConcurrentRequestsNoNodeAvailableException() throws Exception -->Line_11 $$ final CountDownLatch closeLatch = new CountDownLatch(totalExpectedBulkActions)[ CD ]
Line_7 $$ int concurrentRequests = randomIntBetween(0, 10)-->Line_13 $$ try (BulkProcessor processor = BulkProcessor.builder(transportClient, listener).setConcurrentRequests(concurrentRequests).setBulkActions(bulkActions).setFlushInterval(TimeValue.timeValueHours(24)).setBulkSize(new ByteSizeValue(1, ByteSizeUnit.GB)).build()) [ FD ]
Line_2 $$ public void testBulkProcessorConcurrentRequestsNoNodeAvailableException() throws Exception -->Line_4 $$ Client transportClient = TransportClient.builder().settings(settings).build()[ CD ]
Line_5 $$ int bulkActions = randomIntBetween(10, 100)-->Line_13 $$ try (BulkProcessor processor = BulkProcessor.builder(transportClient, listener).setConcurrentRequests(concurrentRequests).setBulkActions(bulkActions).setFlushInterval(TimeValue.timeValueHours(24)).setBulkSize(new ByteSizeValue(1, ByteSizeUnit.GB)).build()) [ FD ]
Line_4 $$ Client transportClient = TransportClient.builder().settings(settings).build()-->Line_13 $$ try (BulkProcessor processor = BulkProcessor.builder(transportClient, listener).setConcurrentRequests(concurrentRequests).setBulkActions(bulkActions).setFlushInterval(TimeValue.timeValueHours(24)).setBulkSize(new ByteSizeValue(1, ByteSizeUnit.GB)).build()) [ FD ]
Line_2 $$ public void testBulkProcessorConcurrentRequestsNoNodeAvailableException() throws Exception -->Line_6 $$ int numDocs = randomIntBetween(bulkActions, bulkActions + 100)[ CD ]
Line_2 $$ public void testBulkProcessorConcurrentRequestsNoNodeAvailableException() throws Exception -->Line_22 $$ closeLatch.await()[ CD ]
Line_5 $$ int bulkActions = randomIntBetween(10, 100)-->Line_6 $$ int numDocs = randomIntBetween(bulkActions, bulkActions + 100)[ FD ]
Line_3 $$ Settings settings = Settings.builder().put("path.home", createTempDir().toString()).build()-->Line_4 $$ Client transportClient = TransportClient.builder().settings(settings).build()[ FD ]
Line_2 $$ public void testBulkProcessorConcurrentRequestsNoNodeAvailableException() throws Exception -->Line_8 $$ int expectedBulkActions = numDocs / bulkActions[ CD ]
Line_2 $$ public void testBulkProcessorConcurrentRequestsNoNodeAvailableException() throws Exception -->Line_24 $$ assertThat(listener.bulkItems.size(), equalTo(0))[ CD ]
Line_8 $$ int expectedBulkActions = numDocs / bulkActions-->Line_18 $$ assertThat(listener.afterCounts.get(), equalTo(expectedBulkActions))[ FD ]
Line_2 $$ public void testBulkProcessorConcurrentRequestsNoNodeAvailableException() throws Exception -->Line_9 $$ final CountDownLatch latch = new CountDownLatch(expectedBulkActions)[ CD ]
Line_4 $$ Client transportClient = TransportClient.builder().settings(settings).build()-->Line_25 $$ transportClient.close()[ FD ]
Line_4 $$ Client transportClient = TransportClient.builder().settings(settings).build()-->Line_15 $$ indexDocs(transportClient, processor, numDocs)[ FD ]
Line_2 $$ public void testBulkProcessorConcurrentRequestsNoNodeAvailableException() throws Exception -->Line_10 $$ int totalExpectedBulkActions = numDocs % bulkActions == 0 ? expectedBulkActions : expectedBulkActions + 1[ CD ]
Line_8 $$ int expectedBulkActions = numDocs / bulkActions-->Line_19 $$ assertThat(listener.bulkFailures.size(), equalTo(expectedBulkActions))[ FD ]
Line_13 $$ try (BulkProcessor processor = BulkProcessor.builder(transportClient, listener).setConcurrentRequests(concurrentRequests).setBulkActions(bulkActions).setFlushInterval(TimeValue.timeValueHours(24)).setBulkSize(new ByteSizeValue(1, ByteSizeUnit.GB)).build()) -->Line_15 $$ indexDocs(transportClient, processor, numDocs)[ FD ]
Line_12 $$ BulkProcessorTestListener listener = new BulkProcessorTestListener(latch, closeLatch)-->Line_13 $$ try (BulkProcessor processor = BulkProcessor.builder(transportClient, listener).setConcurrentRequests(concurrentRequests).setBulkActions(bulkActions).setFlushInterval(TimeValue.timeValueHours(24)).setBulkSize(new ByteSizeValue(1, ByteSizeUnit.GB)).build()) [ FD ]
Line_6 $$ int numDocs = randomIntBetween(bulkActions, bulkActions + 100)-->Line_15 $$ indexDocs(transportClient, processor, numDocs)[ FD ]
Line_2 $$ public void testBulkProcessorConcurrentRequestsNoNodeAvailableException() throws Exception -->Line_3 $$ Settings settings = Settings.builder().put("path.home", createTempDir().toString()).build()[ CD ]
Line_11 $$ final CountDownLatch closeLatch = new CountDownLatch(totalExpectedBulkActions)-->Line_22 $$ closeLatch.await()[ FD ]
Line_8 $$ int expectedBulkActions = numDocs / bulkActions-->Line_17 $$ assertThat(listener.beforeCounts.get(), equalTo(expectedBulkActions))[ FD ]
Line_10 $$ int totalExpectedBulkActions = numDocs % bulkActions == 0 ? expectedBulkActions : expectedBulkActions + 1-->Line_23 $$ assertThat(listener.bulkFailures.size(), equalTo(totalExpectedBulkActions))[ FD ]
Line_2 $$ public void testBulkProcessorConcurrentRequestsNoNodeAvailableException() throws Exception -->Line_25 $$ transportClient.close()[ CD ]
Line_2 $$ public void testBulkProcessorConcurrentRequestsNoNodeAvailableException() throws Exception -->Line_5 $$ int bulkActions = randomIntBetween(10, 100)[ CD ]
Line_9 $$ final CountDownLatch latch = new CountDownLatch(expectedBulkActions)-->Line_16 $$ latch.await()[ FD ]
Line_2 $$ public void testBulkProcessorConcurrentRequestsNoNodeAvailableException() throws Exception -->Line_12 $$ BulkProcessorTestListener listener = new BulkProcessorTestListener(latch, closeLatch)[ CD ]
Line_2 $$ public void testBulkProcessorConcurrentRequestsNoNodeAvailableException() throws Exception -->Line_7 $$ int concurrentRequests = randomIntBetween(0, 10)[ CD ]
