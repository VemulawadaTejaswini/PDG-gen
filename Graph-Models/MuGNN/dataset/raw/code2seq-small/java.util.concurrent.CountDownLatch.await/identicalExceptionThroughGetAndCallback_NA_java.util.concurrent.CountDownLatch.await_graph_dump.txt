Line_2 $$ public void identicalExceptionThroughGetAndCallback() throws Exception -->Line_3 $$ final HttpClientErrorException[] callbackException = new HttpClientErrorException[1][ CD ]
Line_4 $$ final CountDownLatch latch = new CountDownLatch(1)-->Line_13 $$ latch.countDown()[ FD ]
Line_4 $$ final CountDownLatch latch = new CountDownLatch(1)-->Line_22 $$ latch.await(5, TimeUnit.SECONDS)[ FD ]
Line_2 $$ public void identicalExceptionThroughGetAndCallback() throws Exception -->Line_5 $$ ListenableFuture<?> future = template.execute(baseUrl + "/status/notfound", HttpMethod.GET, null, null)[ CD ]
Line_2 $$ public void identicalExceptionThroughGetAndCallback() throws Exception -->Line_6 $$ future.addCallback(new ListenableFutureCallback<Object>() [ CD ]
Line_5 $$ ListenableFuture<?> future = template.execute(baseUrl + "/status/notfound", HttpMethod.GET, null, null)-->Line_6 $$ future.addCallback(new ListenableFutureCallback<Object>() [ FD ]
Line_6 $$ future.addCallback(new ListenableFutureCallback<Object>() -->Line_8 $$ fail("onSuccess not expected")[ CD ]
Line_2 $$ public void identicalExceptionThroughGetAndCallback() throws Exception -->Line_4 $$ final CountDownLatch latch = new CountDownLatch(1)[ CD ]
Line_6 $$ future.addCallback(new ListenableFutureCallback<Object>() -->Line_13 $$ latch.countDown()[ CD ]
Line_5 $$ ListenableFuture<?> future = template.execute(baseUrl + "/status/notfound", HttpMethod.GET, null, null)-->Line_17 $$ future.get()[ FD ]
Line_6 $$ future.addCallback(new ListenableFutureCallback<Object>() -->Line_11 $$ assertTrue(ex instanceof HttpClientErrorException)[ CD ]
Line_6 $$ future.addCallback(new ListenableFutureCallback<Object>() -->Line_12 $$ callbackException[0] = (HttpClientErrorException) ex[ CD ]
Line_6 $$ future.addCallback(new ListenableFutureCallback<Object>() -->Line_20 $$ Throwable cause = ex.getCause()[ FD ]
