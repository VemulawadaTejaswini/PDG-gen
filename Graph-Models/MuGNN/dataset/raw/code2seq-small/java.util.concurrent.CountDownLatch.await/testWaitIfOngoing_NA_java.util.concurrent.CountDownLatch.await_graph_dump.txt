Line_6 $$ for (int i = 0; i < numIters; i++) -->Line_29 $$ assertThat(errors, emptyIterable())[ CD ]
Line_12 $$ for (int j = 0; j < 10; j++) -->Line_13 $$ client().admin().indices().prepareFlush("test").setWaitIfOngoing(true).execute(new ActionListener<FlushResponse>() [ CD ]
Line_13 $$ client().admin().indices().prepareFlush("test").setWaitIfOngoing(true).execute(new ActionListener<FlushResponse>() -->Line_16 $$ assertThat("Unexpected ShardFailures: " + Arrays.toString(flushResponse.getShardFailures()), flushResponse.getFailedShards(), equalTo(0))[ FD ]
Line_2 $$ public void testWaitIfOngoing() throws InterruptedException -->Line_3 $$ createIndex("test")[ CD ]
Line_5 $$ final int numIters = scaledRandomIntBetween(10, 30)-->Line_6 $$ for (int i = 0; i < numIters; i++) [ FD ]
Line_2 $$ public void testWaitIfOngoing() throws InterruptedException -->Line_6 $$ for (int i = 0; i < numIters; i++) [ CD ]
Line_7 $$ for (int j = 0; j < 10; j++) -->Line_12 $$ for (int j = 0; j < 10; j++) [ FD ]
Line_13 $$ client().admin().indices().prepareFlush("test").setWaitIfOngoing(true).execute(new ActionListener<FlushResponse>() -->Line_23 $$ errors.add(e)[ CD ]
Line_7 $$ for (int j = 0; j < 10; j++) -->Line_8 $$ client().prepareIndex("test", "test").setSource("[ CD ]
Line_6 $$ for (int i = 0; i < numIters; i++) -->Line_7 $$ for (int j = 0; j < 10; j++) [ CD ]
Line_13 $$ client().admin().indices().prepareFlush("test").setWaitIfOngoing(true).execute(new ActionListener<FlushResponse>() -->Line_23 $$ errors.add(e)[ FD ]
Line_13 $$ client().admin().indices().prepareFlush("test").setWaitIfOngoing(true).execute(new ActionListener<FlushResponse>() -->Line_24 $$ latch.countDown()[ CD ]
Line_2 $$ public void testWaitIfOngoing() throws InterruptedException -->Line_4 $$ ensureGreen("test")[ CD ]
Line_6 $$ for (int i = 0; i < numIters; i++) -->Line_28 $$ latch.await()[ CD ]
Line_2 $$ public void testWaitIfOngoing() throws InterruptedException -->Line_5 $$ final int numIters = scaledRandomIntBetween(10, 30)[ CD ]
Line_6 $$ for (int i = 0; i < numIters; i++) -->Line_12 $$ for (int j = 0; j < 10; j++) [ CD ]
