Line_19 $$ TransportService localTransportService = internalCluster().getInstance(TransportService.class, discoveryNodes.localNode().getName())-->Line_37 $$ masterTransportService.clearRule(localTransportService)[ FD ]
Line_7 $$ nonMasterNode = nodes.get(1)-->Line_16 $$ assertNoMaster(nonMasterNode)[ FD ]
Line_5 $$ String nonMasterNode-->Line_16 $$ assertNoMaster(nonMasterNode)[ FD ]
Line_3 $$ List<String> nodes = startCluster(2, 1)-->Line_9 $$ nonMasterNode = nodes.get(0)[ FD ]
Line_19 $$ TransportService localTransportService = internalCluster().getInstance(TransportService.class, discoveryNodes.localNode().getName())-->Line_23 $$ masterTransportService.addFailToSendNoConnectRule(localTransportService, PublishClusterStateAction.COMMIT_ACTION_NAME)[ FD ]
Line_6 $$ if (masterNode.equals(nodes.get(0))) -->Line_7 $$ nonMasterNode = nodes.get(1)[ CD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_35 $$ countDownLatch.await()[ CD ]
Line_20 $$ if (randomBoolean()) -->Line_21 $$ masterTransportService.addFailToSendNoConnectRule(localTransportService, PublishClusterStateAction.SEND_ACTION_NAME)[ CD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_40 $$ internalCluster().stopRandomNonMasterNode()[ CD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_6 $$ if (masterNode.equals(nodes.get(0))) [ CD ]
Line_27 $$ nonMasterTransportService.addDelegate(masterTranspotService, new MockTransportService.DelegateTransport(nonMasterTransportService.original()) -->Line_32 $$ super.sendRequest(node, requestId, action, request, options)[ CD ]
Line_5 $$ String nonMasterNode-->Line_13 $$ logger.info("blocking requests from non master [[ FD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_11 $$ DiscoveryNodes discoveryNodes = internalCluster().getInstance(ClusterService.class, nonMasterNode).state().nodes()[ CD ]
Line_5 $$ String nonMasterNode-->Line_9 $$ nonMasterNode = nodes.get(0)[ FD ]
Line_4 $$ String masterNode = internalCluster().getMasterName()-->Line_6 $$ if (masterNode.equals(nodes.get(0))) [ FD ]
Line_9 $$ nonMasterNode = nodes.get(0)-->Line_16 $$ assertNoMaster(nonMasterNode)[ FD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_36 $$ logger.info("waiting for cluster to reform")[ CD ]
Line_4 $$ String masterNode = internalCluster().getMasterName()-->Line_13 $$ logger.info("blocking requests from non master [[ FD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_19 $$ TransportService localTransportService = internalCluster().getInstance(TransportService.class, discoveryNodes.localNode().getName())[ CD ]
Line_7 $$ nonMasterNode = nodes.get(1)-->Line_11 $$ DiscoveryNodes discoveryNodes = internalCluster().getInstance(ClusterService.class, nonMasterNode).state().nodes()[ FD ]
Line_7 $$ nonMasterNode = nodes.get(1)-->Line_14 $$ MockTransportService nonMasterTransportService = (MockTransportService) internalCluster().getInstance(TransportService.class, nonMasterNode)[ FD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_3 $$ List<String> nodes = startCluster(2, 1)[ CD ]
Line_5 $$ String nonMasterNode-->Line_14 $$ MockTransportService nonMasterTransportService = (MockTransportService) internalCluster().getInstance(TransportService.class, nonMasterNode)[ FD ]
Line_5 $$ String nonMasterNode-->Line_11 $$ DiscoveryNodes discoveryNodes = internalCluster().getInstance(ClusterService.class, nonMasterNode).state().nodes()[ FD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_13 $$ logger.info("blocking requests from non master [[ CD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_18 $$ MockTransportService masterTransportService = (MockTransportService) internalCluster().getInstance(TransportService.class, masterNode)[ CD ]
Line_9 $$ nonMasterNode = nodes.get(0)-->Line_13 $$ logger.info("blocking requests from non master [[ FD ]
Line_7 $$ nonMasterNode = nodes.get(1)-->Line_9 $$ nonMasterNode = nodes.get(0)[ FD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_27 $$ nonMasterTransportService.addDelegate(masterTranspotService, new MockTransportService.DelegateTransport(nonMasterTransportService.original()) [ CD ]
Line_14 $$ MockTransportService nonMasterTransportService = (MockTransportService) internalCluster().getInstance(TransportService.class, nonMasterNode)-->Line_15 $$ nonMasterTransportService.addFailToSendNoConnectRule(masterTranspotService)[ FD ]
Line_27 $$ nonMasterTransportService.addDelegate(masterTranspotService, new MockTransportService.DelegateTransport(nonMasterTransportService.original()) -->Line_29 $$ if (action.equals(MembershipAction.DISCOVERY_JOIN_ACTION_NAME)) [ CD ]
Line_9 $$ nonMasterNode = nodes.get(0)-->Line_11 $$ DiscoveryNodes discoveryNodes = internalCluster().getInstance(ClusterService.class, nonMasterNode).state().nodes()[ FD ]
Line_9 $$ nonMasterNode = nodes.get(0)-->Line_14 $$ MockTransportService nonMasterTransportService = (MockTransportService) internalCluster().getInstance(TransportService.class, nonMasterNode)[ FD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_37 $$ masterTransportService.clearRule(localTransportService)[ CD ]
Line_3 $$ List<String> nodes = startCluster(2, 1)-->Line_7 $$ nonMasterNode = nodes.get(1)[ FD ]
Line_14 $$ MockTransportService nonMasterTransportService = (MockTransportService) internalCluster().getInstance(TransportService.class, nonMasterNode)-->Line_27 $$ nonMasterTransportService.addDelegate(masterTranspotService, new MockTransportService.DelegateTransport(nonMasterTransportService.original()) [ FD ]
Line_18 $$ MockTransportService masterTransportService = (MockTransportService) internalCluster().getInstance(TransportService.class, masterNode)-->Line_23 $$ masterTransportService.addFailToSendNoConnectRule(localTransportService, PublishClusterStateAction.COMMIT_ACTION_NAME)[ FD ]
Line_19 $$ TransportService localTransportService = internalCluster().getInstance(TransportService.class, discoveryNodes.localNode().getName())-->Line_21 $$ masterTransportService.addFailToSendNoConnectRule(localTransportService, PublishClusterStateAction.SEND_ACTION_NAME)[ FD ]
Line_18 $$ MockTransportService masterTransportService = (MockTransportService) internalCluster().getInstance(TransportService.class, masterNode)-->Line_21 $$ masterTransportService.addFailToSendNoConnectRule(localTransportService, PublishClusterStateAction.SEND_ACTION_NAME)[ FD ]
Line_12 $$ TransportService masterTranspotService = internalCluster().getInstance(TransportService.class, discoveryNodes.masterNode().getName())-->Line_27 $$ nonMasterTransportService.addDelegate(masterTranspotService, new MockTransportService.DelegateTransport(nonMasterTransportService.original()) [ FD ]
Line_5 $$ String nonMasterNode-->Line_25 $$ logger.info("allowing requests from non master [[ FD ]
Line_29 $$ if (action.equals(MembershipAction.DISCOVERY_JOIN_ACTION_NAME)) -->Line_30 $$ countDownLatch.countDown()[ CD ]
Line_26 $$ final CountDownLatch countDownLatch = new CountDownLatch(2)-->Line_35 $$ countDownLatch.await()[ FD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_20 $$ if (randomBoolean()) [ CD ]
Line_3 $$ List<String> nodes = startCluster(2, 1)-->Line_6 $$ if (masterNode.equals(nodes.get(0))) [ FD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_12 $$ TransportService masterTranspotService = internalCluster().getInstance(TransportService.class, discoveryNodes.masterNode().getName())[ CD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_4 $$ String masterNode = internalCluster().getMasterName()[ CD ]
Line_7 $$ nonMasterNode = nodes.get(1)-->Line_25 $$ logger.info("allowing requests from non master [[ FD ]
Line_5 $$ String nonMasterNode-->Line_17 $$ logger.info("blocking cluster state publishing from master [[ FD ]
Line_27 $$ nonMasterTransportService.addDelegate(masterTranspotService, new MockTransportService.DelegateTransport(nonMasterTransportService.original()) -->Line_32 $$ super.sendRequest(node, requestId, action, request, options)[ FD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_14 $$ MockTransportService nonMasterTransportService = (MockTransportService) internalCluster().getInstance(TransportService.class, nonMasterNode)[ CD ]
Line_14 $$ MockTransportService nonMasterTransportService = (MockTransportService) internalCluster().getInstance(TransportService.class, nonMasterNode)-->Line_38 $$ nonMasterTransportService.clearRule(localTransportService)[ FD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_17 $$ logger.info("blocking cluster state publishing from master [[ CD ]
Line_4 $$ String masterNode = internalCluster().getMasterName()-->Line_25 $$ logger.info("allowing requests from non master [[ FD ]
Line_12 $$ TransportService masterTranspotService = internalCluster().getInstance(TransportService.class, discoveryNodes.masterNode().getName())-->Line_15 $$ nonMasterTransportService.addFailToSendNoConnectRule(masterTranspotService)[ FD ]
Line_4 $$ String masterNode = internalCluster().getMasterName()-->Line_18 $$ MockTransportService masterTransportService = (MockTransportService) internalCluster().getInstance(TransportService.class, masterNode)[ FD ]
Line_5 $$ String nonMasterNode-->Line_7 $$ nonMasterNode = nodes.get(1)[ FD ]
Line_7 $$ nonMasterNode = nodes.get(1)-->Line_13 $$ logger.info("blocking requests from non master [[ FD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_39 $$ ensureStableCluster(2)[ CD ]
Line_11 $$ DiscoveryNodes discoveryNodes = internalCluster().getInstance(ClusterService.class, nonMasterNode).state().nodes()-->Line_12 $$ TransportService masterTranspotService = internalCluster().getInstance(TransportService.class, discoveryNodes.masterNode().getName())[ FD ]
Line_4 $$ String masterNode = internalCluster().getMasterName()-->Line_17 $$ logger.info("blocking cluster state publishing from master [[ FD ]
Line_11 $$ DiscoveryNodes discoveryNodes = internalCluster().getInstance(ClusterService.class, nonMasterNode).state().nodes()-->Line_19 $$ TransportService localTransportService = internalCluster().getInstance(TransportService.class, discoveryNodes.localNode().getName())[ FD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_26 $$ final CountDownLatch countDownLatch = new CountDownLatch(2)[ CD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_15 $$ nonMasterTransportService.addFailToSendNoConnectRule(masterTranspotService)[ CD ]
Line_26 $$ final CountDownLatch countDownLatch = new CountDownLatch(2)-->Line_30 $$ countDownLatch.countDown()[ FD ]
Line_7 $$ nonMasterNode = nodes.get(1)-->Line_17 $$ logger.info("blocking cluster state publishing from master [[ FD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_25 $$ logger.info("allowing requests from non master [[ CD ]
Line_27 $$ nonMasterTransportService.addDelegate(masterTranspotService, new MockTransportService.DelegateTransport(nonMasterTransportService.original()) -->Line_29 $$ if (action.equals(MembershipAction.DISCOVERY_JOIN_ACTION_NAME)) [ FD ]
Line_9 $$ nonMasterNode = nodes.get(0)-->Line_17 $$ logger.info("blocking cluster state publishing from master [[ FD ]
Line_19 $$ TransportService localTransportService = internalCluster().getInstance(TransportService.class, discoveryNodes.localNode().getName())-->Line_38 $$ nonMasterTransportService.clearRule(localTransportService)[ FD ]
Line_9 $$ nonMasterNode = nodes.get(0)-->Line_25 $$ logger.info("allowing requests from non master [[ FD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_16 $$ assertNoMaster(nonMasterNode)[ CD ]
Line_6 $$ if (masterNode.equals(nodes.get(0))) -->Line_9 $$ nonMasterNode = nodes.get(0)[ CD ]
Line_20 $$ if (randomBoolean()) -->Line_23 $$ masterTransportService.addFailToSendNoConnectRule(localTransportService, PublishClusterStateAction.COMMIT_ACTION_NAME)[ CD ]
Line_18 $$ MockTransportService masterTransportService = (MockTransportService) internalCluster().getInstance(TransportService.class, masterNode)-->Line_37 $$ masterTransportService.clearRule(localTransportService)[ FD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_38 $$ nonMasterTransportService.clearRule(localTransportService)[ CD ]
Line_2 $$ public void testClusterJoinDespiteOfPublishingIssues() throws Exception -->Line_5 $$ String nonMasterNode[ CD ]
