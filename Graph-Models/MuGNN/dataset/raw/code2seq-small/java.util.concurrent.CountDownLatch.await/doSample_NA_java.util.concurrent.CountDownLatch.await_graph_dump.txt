Line_2 $$ protected void doSample() -->Line_11 $$ final ConcurrentMap<DiscoveryNode, ClusterStateResponse> clusterStateResponses = ConcurrentCollections.newConcurrentMap()[ CD ]
Line_18 $$ if (nodes.contains(listedNode)) -->Line_22 $$ logger.trace("connecting to listed node (light) [[ CD ]
Line_31 $$ transportService.sendRequest(listedNode, ClusterStateAction.NAME, headers.applyTo(Requests.clusterStateRequest().clear().nodes(true).local(true)), TransportRequestOptions.builder().withType(TransportRequestOptions.Type.STATE).withTimeout(pingTimeout).build(), new BaseTransportResponseHandler<ClusterStateResponse>() -->Line_43 $$ logger.info("failed to get local cluster state for [ CD ]
Line_3 $$ Set<DiscoveryNode> nodesToPing = new HashSet()-->Line_10 $$ final CountDownLatch latch = new CountDownLatch(nodesToPing.size())[ FD ]
Line_12 $$ for (final DiscoveryNode listedNode : nodesToPing) -->Line_43 $$ logger.info("failed to get local cluster state for [ FD ]
Line_12 $$ for (final DiscoveryNode listedNode : nodesToPing) -->Line_44 $$ transportService.disconnectFromNode(listedNode)[ FD ]
Line_18 $$ if (nodes.contains(listedNode)) -->Line_20 $$ transportService.connectToNode(listedNode)[ CD ]
Line_12 $$ for (final DiscoveryNode listedNode : nodesToPing) -->Line_49 $$ logger.info("failed to get local cluster state info for [ FD ]
Line_2 $$ protected void doSample() -->Line_74 $$ filteredNodes = Collections.unmodifiableList(new ArrayList(newFilteredNodes))[ CD ]
Line_12 $$ for (final DiscoveryNode listedNode : nodesToPing) -->Line_20 $$ transportService.connectToNode(listedNode)[ FD ]
Line_12 $$ for (final DiscoveryNode listedNode : nodesToPing) -->Line_39 $$ clusterStateResponses.put(listedNode, response)[ FD ]
Line_2 $$ protected void doSample() -->Line_10 $$ final CountDownLatch latch = new CountDownLatch(nodesToPing.size())[ CD ]
Line_12 $$ for (final DiscoveryNode listedNode : nodesToPing) -->Line_26 $$ logger.debug("failed to connect to node [[ FD ]
Line_31 $$ transportService.sendRequest(listedNode, ClusterStateAction.NAME, headers.applyTo(Requests.clusterStateRequest().clear().nodes(true).local(true)), TransportRequestOptions.builder().withType(TransportRequestOptions.Type.STATE).withTimeout(pingTimeout).build(), new BaseTransportResponseHandler<ClusterStateResponse>() -->Line_40 $$ latch.countDown()[ CD ]
Line_31 $$ transportService.sendRequest(listedNode, ClusterStateAction.NAME, headers.applyTo(Requests.clusterStateRequest().clear().nodes(true).local(true)), TransportRequestOptions.builder().withType(TransportRequestOptions.Type.STATE).withTimeout(pingTimeout).build(), new BaseTransportResponseHandler<ClusterStateResponse>() -->Line_49 $$ logger.info("failed to get local cluster state info for [ FD ]
Line_31 $$ transportService.sendRequest(listedNode, ClusterStateAction.NAME, headers.applyTo(Requests.clusterStateRequest().clear().nodes(true).local(true)), TransportRequestOptions.builder().withType(TransportRequestOptions.Type.STATE).withTimeout(pingTimeout).build(), new BaseTransportResponseHandler<ClusterStateResponse>() -->Line_45 $$ latch.countDown()[ CD ]
Line_10 $$ final CountDownLatch latch = new CountDownLatch(nodesToPing.size())-->Line_27 $$ latch.countDown()[ FD ]
Line_31 $$ transportService.sendRequest(listedNode, ClusterStateAction.NAME, headers.applyTo(Requests.clusterStateRequest().clear().nodes(true).local(true)), TransportRequestOptions.builder().withType(TransportRequestOptions.Type.STATE).withTimeout(pingTimeout).build(), new BaseTransportResponseHandler<ClusterStateResponse>() -->Line_36 $$ return ThreadPool.Names.SAME[ CD ]
Line_3 $$ Set<DiscoveryNode> nodesToPing = new HashSet()-->Line_8 $$ nodesToPing.add(node)[ FD ]
Line_18 $$ if (nodes.contains(listedNode)) -->Line_19 $$ logger.trace("connecting to cluster node [[ CD ]
Line_64 $$ if (!ignoreClusterName && !clusterName.equals(entry.getValue().getClusterName())) -->Line_65 $$ logger.warn("node [ CD ]
Line_12 $$ for (final DiscoveryNode listedNode : nodesToPing) -->Line_16 $$ if (!transportService.nodeConnected(listedNode)) [ FD ]
Line_12 $$ for (final DiscoveryNode listedNode : nodesToPing) -->Line_18 $$ if (nodes.contains(listedNode)) [ FD ]
Line_10 $$ final CountDownLatch latch = new CountDownLatch(nodesToPing.size())-->Line_45 $$ latch.countDown()[ FD ]
Line_64 $$ if (!ignoreClusterName && !clusterName.equals(entry.getValue().getClusterName())) -->Line_66 $$ newFilteredNodes.add(entry.getKey())[ CD ]
Line_12 $$ for (final DiscoveryNode listedNode : nodesToPing) -->Line_23 $$ transportService.connectToNodeLight(listedNode)[ FD ]
Line_11 $$ final ConcurrentMap<DiscoveryNode, ClusterStateResponse> clusterStateResponses = ConcurrentCollections.newConcurrentMap()-->Line_39 $$ clusterStateResponses.put(listedNode, response)[ FD ]
Line_10 $$ final CountDownLatch latch = new CountDownLatch(nodesToPing.size())-->Line_40 $$ latch.countDown()[ FD ]
Line_3 $$ Set<DiscoveryNode> nodesToPing = new HashSet()-->Line_5 $$ nodesToPing.add(node)[ FD ]
Line_2 $$ protected void doSample() -->Line_3 $$ Set<DiscoveryNode> nodesToPing = new HashSet()[ CD ]
Line_18 $$ if (nodes.contains(listedNode)) -->Line_23 $$ transportService.connectToNodeLight(listedNode)[ CD ]
Line_31 $$ transportService.sendRequest(listedNode, ClusterStateAction.NAME, headers.applyTo(Requests.clusterStateRequest().clear().nodes(true).local(true)), TransportRequestOptions.builder().withType(TransportRequestOptions.Type.STATE).withTimeout(pingTimeout).build(), new BaseTransportResponseHandler<ClusterStateResponse>() -->Line_39 $$ clusterStateResponses.put(listedNode, response)[ CD ]
Line_10 $$ final CountDownLatch latch = new CountDownLatch(nodesToPing.size())-->Line_57 $$ latch.await()[ FD ]
Line_31 $$ transportService.sendRequest(listedNode, ClusterStateAction.NAME, headers.applyTo(Requests.clusterStateRequest().clear().nodes(true).local(true)), TransportRequestOptions.builder().withType(TransportRequestOptions.Type.STATE).withTimeout(pingTimeout).build(), new BaseTransportResponseHandler<ClusterStateResponse>() -->Line_44 $$ transportService.disconnectFromNode(listedNode)[ CD ]
Line_12 $$ for (final DiscoveryNode listedNode : nodesToPing) -->Line_50 $$ transportService.disconnectFromNode(listedNode)[ FD ]
Line_31 $$ transportService.sendRequest(listedNode, ClusterStateAction.NAME, headers.applyTo(Requests.clusterStateRequest().clear().nodes(true).local(true)), TransportRequestOptions.builder().withType(TransportRequestOptions.Type.STATE).withTimeout(pingTimeout).build(), new BaseTransportResponseHandler<ClusterStateResponse>() -->Line_33 $$ return new ClusterStateResponse()[ CD ]
Line_31 $$ transportService.sendRequest(listedNode, ClusterStateAction.NAME, headers.applyTo(Requests.clusterStateRequest().clear().nodes(true).local(true)), TransportRequestOptions.builder().withType(TransportRequestOptions.Type.STATE).withTimeout(pingTimeout).build(), new BaseTransportResponseHandler<ClusterStateResponse>() -->Line_39 $$ clusterStateResponses.put(listedNode, response)[ FD ]
Line_11 $$ final ConcurrentMap<DiscoveryNode, ClusterStateResponse> clusterStateResponses = ConcurrentCollections.newConcurrentMap()-->Line_63 $$ for (Map.Entry<DiscoveryNode, ClusterStateResponse> entry : clusterStateResponses.entrySet()) [ FD ]
Line_31 $$ transportService.sendRequest(listedNode, ClusterStateAction.NAME, headers.applyTo(Requests.clusterStateRequest().clear().nodes(true).local(true)), TransportRequestOptions.builder().withType(TransportRequestOptions.Type.STATE).withTimeout(pingTimeout).build(), new BaseTransportResponseHandler<ClusterStateResponse>() -->Line_43 $$ logger.info("failed to get local cluster state for [ FD ]
Line_4 $$ for (DiscoveryNode node : listedNodes) -->Line_5 $$ nodesToPing.add(node)[ FD ]
Line_12 $$ for (final DiscoveryNode listedNode : nodesToPing) -->Line_22 $$ logger.trace("connecting to listed node (light) [[ FD ]
Line_10 $$ final CountDownLatch latch = new CountDownLatch(nodesToPing.size())-->Line_51 $$ latch.countDown()[ FD ]
Line_12 $$ for (final DiscoveryNode listedNode : nodesToPing) -->Line_19 $$ logger.trace("connecting to cluster node [[ FD ]
Line_12 $$ for (final DiscoveryNode listedNode : nodesToPing) -->Line_31 $$ transportService.sendRequest(listedNode, ClusterStateAction.NAME, headers.applyTo(Requests.clusterStateRequest().clear().nodes(true).local(true)), TransportRequestOptions.builder().withType(TransportRequestOptions.Type.STATE).withTimeout(pingTimeout).build(), new BaseTransportResponseHandler<ClusterStateResponse>() [ FD ]
Line_2 $$ protected void doSample() -->Line_73 $$ nodes = validateNewNodes(newNodes)[ CD ]
Line_4 $$ for (DiscoveryNode node : listedNodes) -->Line_8 $$ nodesToPing.add(node)[ FD ]
