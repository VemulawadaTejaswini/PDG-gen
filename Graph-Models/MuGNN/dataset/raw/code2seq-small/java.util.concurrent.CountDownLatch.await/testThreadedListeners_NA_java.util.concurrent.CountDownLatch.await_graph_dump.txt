Line_2 $$ public void testThreadedListeners() throws Throwable -->Line_11 $$ client.index(request, new ActionListener<IndexResponse>() [ CD ]
Line_6 $$ Client client = client()-->Line_11 $$ client.index(request, new ActionListener<IndexResponse>() [ FD ]
Line_2 $$ public void testThreadedListeners() throws Throwable -->Line_6 $$ Client client = client()[ CD ]
Line_8 $$ if (randomBoolean()) -->Line_9 $$ request.source("field1", "value1")[ CD ]
Line_2 $$ public void testThreadedListeners() throws Throwable -->Line_5 $$ final AtomicReference<String> threadName = new AtomicReference()[ CD ]
Line_11 $$ client.index(request, new ActionListener<IndexResponse>() -->Line_18 $$ failure.set(e)[ FD ]
Line_3 $$ final CountDownLatch latch = new CountDownLatch(1)-->Line_14 $$ latch.countDown()[ FD ]
Line_24 $$ if (shouldBeThreaded) -->Line_27 $$ assertFalse(threadName.get().contains("listener"))[ CD ]
Line_11 $$ client.index(request, new ActionListener<IndexResponse>() -->Line_17 $$ threadName.set(Thread.currentThread().getName())[ CD ]
Line_5 $$ final AtomicReference<String> threadName = new AtomicReference()-->Line_25 $$ assertTrue(threadName.get().contains("listener"))[ FD ]
Line_3 $$ final CountDownLatch latch = new CountDownLatch(1)-->Line_22 $$ latch.await()[ FD ]
Line_11 $$ client.index(request, new ActionListener<IndexResponse>() -->Line_14 $$ latch.countDown()[ CD ]
Line_2 $$ public void testThreadedListeners() throws Throwable -->Line_8 $$ if (randomBoolean()) [ CD ]
Line_2 $$ public void testThreadedListeners() throws Throwable -->Line_4 $$ final AtomicReference<Throwable> failure = new AtomicReference()[ CD ]
Line_5 $$ final AtomicReference<String> threadName = new AtomicReference()-->Line_13 $$ threadName.set(Thread.currentThread().getName())[ FD ]
Line_11 $$ client.index(request, new ActionListener<IndexResponse>() -->Line_13 $$ threadName.set(Thread.currentThread().getName())[ CD ]
Line_2 $$ public void testThreadedListeners() throws Throwable -->Line_7 $$ IndexRequest request = new IndexRequest("test", "type", "1")[ CD ]
Line_11 $$ client.index(request, new ActionListener<IndexResponse>() -->Line_19 $$ latch.countDown()[ CD ]
Line_11 $$ client.index(request, new ActionListener<IndexResponse>() -->Line_18 $$ failure.set(e)[ CD ]
Line_7 $$ IndexRequest request = new IndexRequest("test", "type", "1")-->Line_9 $$ request.source("field1", "value1")[ FD ]
Line_3 $$ final CountDownLatch latch = new CountDownLatch(1)-->Line_19 $$ latch.countDown()[ FD ]
Line_24 $$ if (shouldBeThreaded) -->Line_25 $$ assertTrue(threadName.get().contains("listener"))[ CD ]
Line_4 $$ final AtomicReference<Throwable> failure = new AtomicReference()-->Line_18 $$ failure.set(e)[ FD ]
Line_2 $$ public void testThreadedListeners() throws Throwable -->Line_24 $$ if (shouldBeThreaded) [ CD ]
Line_2 $$ public void testThreadedListeners() throws Throwable -->Line_22 $$ latch.await()[ CD ]
Line_5 $$ final AtomicReference<String> threadName = new AtomicReference()-->Line_27 $$ assertFalse(threadName.get().contains("listener"))[ FD ]
Line_6 $$ Client client = client()-->Line_23 $$ boolean shouldBeThreaded = DiscoveryNode.clientNode(client.settings()) || TransportClient.CLIENT_TYPE.equals(client.settings().get(Client.CLIENT_TYPE_SETTING))[ FD ]
Line_7 $$ IndexRequest request = new IndexRequest("test", "type", "1")-->Line_11 $$ client.index(request, new ActionListener<IndexResponse>() [ FD ]
Line_2 $$ public void testThreadedListeners() throws Throwable -->Line_3 $$ final CountDownLatch latch = new CountDownLatch(1)[ CD ]
Line_5 $$ final AtomicReference<String> threadName = new AtomicReference()-->Line_17 $$ threadName.set(Thread.currentThread().getName())[ FD ]
