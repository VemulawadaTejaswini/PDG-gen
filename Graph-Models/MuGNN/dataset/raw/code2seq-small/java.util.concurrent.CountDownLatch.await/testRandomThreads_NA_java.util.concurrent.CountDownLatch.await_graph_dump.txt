Line_14 $$ for (int i = 0; i < 10; i++) -->Line_16 $$ r.nextBytes(bytes)[ CD ]
Line_2 $$ public void testRandomThreads() throws Exception -->Line_26 $$ startingGun.countDown()[ CD ]
Line_14 $$ for (int i = 0; i < 10; i++) -->Line_15 $$ byte[] bytes = new byte[TestUtil.nextInt(r, 1, 100000)][ CD ]
Line_2 $$ public void testRandomThreads() throws Exception -->Line_3 $$ final Random r = getRandom()[ CD ]
Line_12 $$ Random r = new Random(seed)-->Line_16 $$ r.nextBytes(bytes)[ FD ]
Line_3 $$ final Random r = getRandom()-->Line_8 $$ final long seed = r.nextLong()[ FD ]
Line_7 $$ for (int tid = 0; tid < threadCount; tid++) -->Line_8 $$ final long seed = r.nextLong()[ CD ]
Line_3 $$ final Random r = getRandom()-->Line_15 $$ byte[] bytes = new byte[TestUtil.nextInt(r, 1, 100000)][ FD ]
Line_2 $$ public void testRandomThreads() throws Exception -->Line_5 $$ Thread[] threads = new Thread[threadCount][ CD ]
Line_14 $$ for (int i = 0; i < 10; i++) -->Line_17 $$ doTest(bytes)[ CD ]
Line_15 $$ byte[] bytes = new byte[TestUtil.nextInt(r, 1, 100000)]-->Line_16 $$ r.nextBytes(bytes)[ FD ]
Line_3 $$ final Random r = getRandom()-->Line_16 $$ r.nextBytes(bytes)[ FD ]
Line_7 $$ for (int tid = 0; tid < threadCount; tid++) -->Line_24 $$ threads[tid].start()[ CD ]
Line_6 $$ final CountDownLatch startingGun = new CountDownLatch(1)-->Line_13 $$ startingGun.await()[ FD ]
Line_2 $$ public void testRandomThreads() throws Exception -->Line_6 $$ final CountDownLatch startingGun = new CountDownLatch(1)[ CD ]
Line_2 $$ public void testRandomThreads() throws Exception -->Line_7 $$ for (int tid = 0; tid < threadCount; tid++) [ CD ]
Line_12 $$ Random r = new Random(seed)-->Line_15 $$ byte[] bytes = new byte[TestUtil.nextInt(r, 1, 100000)][ FD ]
Line_6 $$ final CountDownLatch startingGun = new CountDownLatch(1)-->Line_26 $$ startingGun.countDown()[ FD ]
Line_4 $$ int threadCount = TestUtil.nextInt(r, 2, 6)-->Line_7 $$ for (int tid = 0; tid < threadCount; tid++) [ FD ]
Line_2 $$ public void testRandomThreads() throws Exception -->Line_4 $$ int threadCount = TestUtil.nextInt(r, 2, 6)[ CD ]
Line_3 $$ final Random r = getRandom()-->Line_4 $$ int threadCount = TestUtil.nextInt(r, 2, 6)[ FD ]
Line_7 $$ for (int tid = 0; tid < threadCount; tid++) -->Line_9 $$ threads[tid] = new Thread() [ CD ]
Line_15 $$ byte[] bytes = new byte[TestUtil.nextInt(r, 1, 100000)]-->Line_17 $$ doTest(bytes)[ FD ]
