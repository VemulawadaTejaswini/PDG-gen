Line_4 $$ TestableZooKeeper zk = new TestableZooKeeper(hp, timeout, watcher)-->Line_14 $$ allClients.add(zk)[ FD ]
Line_2 $$ protected TestableZooKeeper createClient(CountdownWatcher watcher, String hp, int timeout) throws IOException, InterruptedException -->Line_5 $$ if (!watcher.clientConnected.await(timeout, TimeUnit.MILLISECONDS)) [ FD ]
Line_13 $$ if (allClients != null) -->Line_14 $$ allClients.add(zk)[ CD ]
Line_2 $$ protected TestableZooKeeper createClient(CountdownWatcher watcher, String hp, int timeout) throws IOException, InterruptedException -->Line_19 $$ return zk[ CD ]
Line_9 $$ if (!allClientsSetup) -->Line_10 $$ LOG.error("allClients never setup")[ CD ]
Line_4 $$ TestableZooKeeper zk = new TestableZooKeeper(hp, timeout, watcher)-->Line_16 $$ zk.close()[ FD ]
Line_2 $$ protected TestableZooKeeper createClient(CountdownWatcher watcher, String hp, int timeout) throws IOException, InterruptedException -->Line_5 $$ if (!watcher.clientConnected.await(timeout, TimeUnit.MILLISECONDS)) [ CD ]
Line_5 $$ if (!watcher.clientConnected.await(timeout, TimeUnit.MILLISECONDS)) -->Line_6 $$ Assert.fail("Unable to connect to server")[ CD ]
Line_2 $$ protected TestableZooKeeper createClient(CountdownWatcher watcher, String hp, int timeout) throws IOException, InterruptedException -->Line_4 $$ TestableZooKeeper zk = new TestableZooKeeper(hp, timeout, watcher)[ CD ]
Line_9 $$ if (!allClientsSetup) -->Line_11 $$ Assert.fail("allClients never setup")[ CD ]
Line_13 $$ if (allClients != null) -->Line_16 $$ zk.close()[ CD ]
Line_2 $$ protected TestableZooKeeper createClient(CountdownWatcher watcher, String hp, int timeout) throws IOException, InterruptedException -->Line_3 $$ watcher.reset()[ CD ]
Line_2 $$ protected TestableZooKeeper createClient(CountdownWatcher watcher, String hp, int timeout) throws IOException, InterruptedException -->Line_3 $$ watcher.reset()[ FD ]
