Line_9 $$ conn = cf.createConnection("guest", "guest")-->Line_26 $$ final Session producerSession = conn.createSession(false, AUTO_ACKNOWLEDGE)[ FD ]
Line_17 $$ TextMessage msg = (TextMessage) message-->Line_19 $$ result.add(msg.getText())[ FD ]
Line_29 $$ for (int i = 0; i < 10; i++) -->Line_32 $$ producer.send(msg)[ CD ]
Line_12 $$ final CountDownLatch latch = new CountDownLatch(10)-->Line_20 $$ latch.countDown()[ FD ]
Line_3 $$ Connection conn = null-->Line_10 $$ conn.start()[ FD ]
Line_7 $$ Destination destination = (Destination) remoteContext.lookup(QUEUE_NAME)-->Line_14 $$ MessageConsumer consumer = consumerSession.createConsumer(destination)[ FD ]
Line_11 $$ Session consumerSession = conn.createSession(false, AUTO_ACKNOWLEDGE)-->Line_14 $$ MessageConsumer consumer = consumerSession.createConsumer(destination)[ FD ]
Line_3 $$ Connection conn = null-->Line_42 $$ conn.close()[ FD ]
Line_5 $$ ConnectionFactory cf = (ConnectionFactory) remoteContext.lookup(connectionFactoryLookup)-->Line_6 $$ assertNotNull(cf)[ FD ]
Line_12 $$ final CountDownLatch latch = new CountDownLatch(10)-->Line_35 $$ assertTrue(latch.await(3, SECONDS))[ FD ]
Line_30 $$ String s = "Test" + i-->Line_31 $$ TextMessage msg = producerSession.createTextMessage(s)[ FD ]
Line_15 $$ consumer.setMessageListener(new MessageListener() -->Line_17 $$ TextMessage msg = (TextMessage) message[ CD ]
Line_31 $$ TextMessage msg = producerSession.createTextMessage(s)-->Line_32 $$ producer.send(msg)[ FD ]
Line_37 $$ for (int i = 0; i < result.size(); i++) -->Line_38 $$ assertEquals("Test" + i, result.get(i))[ CD ]
Line_9 $$ conn = cf.createConnection("guest", "guest")-->Line_11 $$ Session consumerSession = conn.createSession(false, AUTO_ACKNOWLEDGE)[ FD ]
Line_9 $$ conn = cf.createConnection("guest", "guest")-->Line_42 $$ conn.close()[ FD ]
Line_14 $$ MessageConsumer consumer = consumerSession.createConsumer(destination)-->Line_15 $$ consumer.setMessageListener(new MessageListener() [ FD ]
Line_3 $$ Connection conn = null-->Line_9 $$ conn = cf.createConnection("guest", "guest")[ FD ]
Line_13 $$ final List<String> result = new ArrayList<String>()-->Line_36 $$ assertEquals(10, result.size())[ FD ]
Line_5 $$ ConnectionFactory cf = (ConnectionFactory) remoteContext.lookup(connectionFactoryLookup)-->Line_9 $$ conn = cf.createConnection("guest", "guest")[ FD ]
Line_3 $$ Connection conn = null-->Line_11 $$ Session consumerSession = conn.createSession(false, AUTO_ACKNOWLEDGE)[ FD ]
Line_13 $$ final List<String> result = new ArrayList<String>()-->Line_37 $$ for (int i = 0; i < result.size(); i++) [ FD ]
Line_7 $$ Destination destination = (Destination) remoteContext.lookup(QUEUE_NAME)-->Line_27 $$ MessageProducer producer = producerSession.createProducer(destination)[ FD ]
Line_3 $$ Connection conn = null-->Line_26 $$ final Session producerSession = conn.createSession(false, AUTO_ACKNOWLEDGE)[ FD ]
Line_37 $$ for (int i = 0; i < result.size(); i++) -->Line_38 $$ assertEquals("Test" + i, result.get(i))[ FD ]
Line_2 $$ private void doSendAndReceive(String connectionFactoryLookup) throws Exception -->Line_5 $$ ConnectionFactory cf = (ConnectionFactory) remoteContext.lookup(connectionFactoryLookup)[ FD ]
Line_17 $$ TextMessage msg = (TextMessage) message-->Line_32 $$ producer.send(msg)[ FD ]
Line_29 $$ for (int i = 0; i < 10; i++) -->Line_37 $$ for (int i = 0; i < result.size(); i++) [ FD ]
Line_29 $$ for (int i = 0; i < 10; i++) -->Line_30 $$ String s = "Test" + i[ CD ]
Line_2 $$ private void doSendAndReceive(String connectionFactoryLookup) throws Exception -->Line_3 $$ Connection conn = null[ CD ]
Line_13 $$ final List<String> result = new ArrayList<String>()-->Line_19 $$ result.add(msg.getText())[ FD ]
Line_9 $$ conn = cf.createConnection("guest", "guest")-->Line_10 $$ conn.start()[ FD ]
Line_29 $$ for (int i = 0; i < 10; i++) -->Line_31 $$ TextMessage msg = producerSession.createTextMessage(s)[ CD ]
Line_29 $$ for (int i = 0; i < 10; i++) -->Line_38 $$ assertEquals("Test" + i, result.get(i))[ FD ]
Line_13 $$ final List<String> result = new ArrayList<String>()-->Line_38 $$ assertEquals("Test" + i, result.get(i))[ FD ]
Line_7 $$ Destination destination = (Destination) remoteContext.lookup(QUEUE_NAME)-->Line_8 $$ assertNotNull(destination)[ FD ]
