Line_43 $$ clusterService1.submitStateUpdateTask("test3", new ClusterStateUpdateTask() -->Line_45 $$ Thread.sleep(100)[ CD ]
Line_2 $$ public void testLongClusterStateUpdateLogging() throws Exception -->Line_10 $$ mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation("test4", "cluster.service", Level.WARN, "*cluster state update task [test4] took * above the warn threshold of 10ms"))[ CD ]
Line_2 $$ public void testLongClusterStateUpdateLogging() throws Exception -->Line_9 $$ mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation("test3", "cluster.service", Level.WARN, "*cluster state update task [test3] took * above the warn threshold of 10ms"))[ CD ]
Line_2 $$ public void testLongClusterStateUpdateLogging() throws Exception -->Line_12 $$ rootLogger.addAppender(mockAppender)[ CD ]
Line_16 $$ clusterService1.submitStateUpdateTask("test1", new ClusterStateUpdateTask() -->Line_18 $$ Thread.sleep(100)[ CD ]
Line_55 $$ clusterService1.submitStateUpdateTask("test4", new ClusterStateUpdateTask() -->Line_58 $$ return currentState[ CD ]
Line_6 $$ MockLogAppender mockAppender = new MockLogAppender()-->Line_80 $$ rootLogger.removeAppender(mockAppender)[ FD ]
Line_3 $$ Settings settings = settingsBuilder().put("discovery.type", "local").put(InternalClusterService.CLUSTER_SERVICE_SLOW_TASK_LOGGING_THRESHOLD_SETTING.getKey(), "10s").build()-->Line_4 $$ internalCluster().startNode(settings)[ FD ]
Line_2 $$ public void testLongClusterStateUpdateLogging() throws Exception -->Line_5 $$ ClusterService clusterService1 = internalCluster().getInstance(ClusterService.class)[ CD ]
Line_16 $$ clusterService1.submitStateUpdateTask("test1", new ClusterStateUpdateTask() -->Line_22 $$ latch.countDown()[ CD ]
Line_14 $$ final CountDownLatch latch = new CountDownLatch(5)-->Line_22 $$ latch.countDown()[ FD ]
Line_14 $$ final CountDownLatch latch = new CountDownLatch(5)-->Line_72 $$ latch.countDown()[ FD ]
Line_14 $$ final CountDownLatch latch = new CountDownLatch(5)-->Line_61 $$ latch.countDown()[ FD ]
Line_6 $$ MockLogAppender mockAppender = new MockLogAppender()-->Line_7 $$ mockAppender.addExpectation(new MockLogAppender.UnseenEventExpectation("test1 shouldn't see because setting is too low", "cluster.service", Level.WARN, "*cluster state update task [test1] took * above the warn threshold of *"))[ FD ]
Line_31 $$ clusterService1.submitStateUpdateTask("test2", new ClusterStateUpdateTask() -->Line_46 $$ return ClusterState.builder(currentState).incrementVersion().build()[ FD ]
Line_55 $$ clusterService1.submitStateUpdateTask("test4", new ClusterStateUpdateTask() -->Line_61 $$ latch.countDown()[ CD ]
Line_67 $$ clusterService1.submitStateUpdateTask("test5", new ClusterStateUpdateTask() -->Line_72 $$ latch.countDown()[ CD ]
Line_31 $$ clusterService1.submitStateUpdateTask("test2", new ClusterStateUpdateTask() -->Line_37 $$ fail()[ CD ]
Line_16 $$ clusterService1.submitStateUpdateTask("test1", new ClusterStateUpdateTask() -->Line_23 $$ processedFirstTask.countDown()[ CD ]
Line_16 $$ clusterService1.submitStateUpdateTask("test1", new ClusterStateUpdateTask() -->Line_26 $$ fail()[ CD ]
Line_14 $$ final CountDownLatch latch = new CountDownLatch(5)-->Line_40 $$ latch.countDown()[ FD ]
Line_5 $$ ClusterService clusterService1 = internalCluster().getInstance(ClusterService.class)-->Line_43 $$ clusterService1.submitStateUpdateTask("test3", new ClusterStateUpdateTask() [ FD ]
Line_2 $$ public void testLongClusterStateUpdateLogging() throws Exception -->Line_3 $$ Settings settings = settingsBuilder().put("discovery.type", "local").put(InternalClusterService.CLUSTER_SERVICE_SLOW_TASK_LOGGING_THRESHOLD_SETTING.getKey(), "10s").build()[ CD ]
Line_2 $$ public void testLongClusterStateUpdateLogging() throws Exception -->Line_7 $$ mockAppender.addExpectation(new MockLogAppender.UnseenEventExpectation("test1 shouldn't see because setting is too low", "cluster.service", Level.WARN, "*cluster state update task [test1] took * above the warn threshold of *"))[ CD ]
Line_55 $$ clusterService1.submitStateUpdateTask("test4", new ClusterStateUpdateTask() -->Line_64 $$ fail()[ CD ]
Line_6 $$ MockLogAppender mockAppender = new MockLogAppender()-->Line_12 $$ rootLogger.addAppender(mockAppender)[ FD ]
Line_2 $$ public void testLongClusterStateUpdateLogging() throws Exception -->Line_11 $$ Logger rootLogger = Logger.getRootLogger()[ CD ]
Line_43 $$ clusterService1.submitStateUpdateTask("test3", new ClusterStateUpdateTask() -->Line_49 $$ latch.countDown()[ CD ]
Line_11 $$ Logger rootLogger = Logger.getRootLogger()-->Line_80 $$ rootLogger.removeAppender(mockAppender)[ FD ]
Line_15 $$ final CountDownLatch processedFirstTask = new CountDownLatch(1)-->Line_29 $$ processedFirstTask.await(1, TimeUnit.SECONDS)[ FD ]
Line_43 $$ clusterService1.submitStateUpdateTask("test3", new ClusterStateUpdateTask() -->Line_46 $$ return ClusterState.builder(currentState).incrementVersion().build()[ FD ]
Line_15 $$ final CountDownLatch processedFirstTask = new CountDownLatch(1)-->Line_23 $$ processedFirstTask.countDown()[ FD ]
Line_5 $$ ClusterService clusterService1 = internalCluster().getInstance(ClusterService.class)-->Line_55 $$ clusterService1.submitStateUpdateTask("test4", new ClusterStateUpdateTask() [ FD ]
Line_31 $$ clusterService1.submitStateUpdateTask("test2", new ClusterStateUpdateTask() -->Line_33 $$ Thread.sleep(100)[ CD ]
Line_14 $$ final CountDownLatch latch = new CountDownLatch(5)-->Line_49 $$ latch.countDown()[ FD ]
Line_16 $$ clusterService1.submitStateUpdateTask("test1", new ClusterStateUpdateTask() -->Line_19 $$ return currentState[ CD ]
Line_6 $$ MockLogAppender mockAppender = new MockLogAppender()-->Line_9 $$ mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation("test3", "cluster.service", Level.WARN, "*cluster state update task [test3] took * above the warn threshold of 10ms"))[ FD ]
Line_43 $$ clusterService1.submitStateUpdateTask("test3", new ClusterStateUpdateTask() -->Line_46 $$ return ClusterState.builder(currentState).incrementVersion().build()[ CD ]
Line_67 $$ clusterService1.submitStateUpdateTask("test5", new ClusterStateUpdateTask() -->Line_69 $$ return currentState[ CD ]
Line_31 $$ clusterService1.submitStateUpdateTask("test2", new ClusterStateUpdateTask() -->Line_40 $$ latch.countDown()[ CD ]
Line_5 $$ ClusterService clusterService1 = internalCluster().getInstance(ClusterService.class)-->Line_16 $$ clusterService1.submitStateUpdateTask("test1", new ClusterStateUpdateTask() [ FD ]
Line_2 $$ public void testLongClusterStateUpdateLogging() throws Exception -->Line_82 $$ mockAppender.assertAllExpectationsMatched()[ CD ]
Line_6 $$ MockLogAppender mockAppender = new MockLogAppender()-->Line_10 $$ mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation("test4", "cluster.service", Level.WARN, "*cluster state update task [test4] took * above the warn threshold of 10ms"))[ FD ]
Line_5 $$ ClusterService clusterService1 = internalCluster().getInstance(ClusterService.class)-->Line_31 $$ clusterService1.submitStateUpdateTask("test2", new ClusterStateUpdateTask() [ FD ]
Line_16 $$ clusterService1.submitStateUpdateTask("test1", new ClusterStateUpdateTask() -->Line_46 $$ return ClusterState.builder(currentState).incrementVersion().build()[ FD ]
Line_11 $$ Logger rootLogger = Logger.getRootLogger()-->Line_12 $$ rootLogger.addAppender(mockAppender)[ FD ]
Line_55 $$ clusterService1.submitStateUpdateTask("test4", new ClusterStateUpdateTask() -->Line_57 $$ Thread.sleep(100)[ CD ]
Line_2 $$ public void testLongClusterStateUpdateLogging() throws Exception -->Line_4 $$ internalCluster().startNode(settings)[ CD ]
Line_2 $$ public void testLongClusterStateUpdateLogging() throws Exception -->Line_6 $$ MockLogAppender mockAppender = new MockLogAppender()[ CD ]
Line_6 $$ MockLogAppender mockAppender = new MockLogAppender()-->Line_82 $$ mockAppender.assertAllExpectationsMatched()[ FD ]
Line_6 $$ MockLogAppender mockAppender = new MockLogAppender()-->Line_8 $$ mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation("test2", "cluster.service", Level.WARN, "*cluster state update task [test2] took * above the warn threshold of 10ms"))[ FD ]
Line_2 $$ public void testLongClusterStateUpdateLogging() throws Exception -->Line_8 $$ mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation("test2", "cluster.service", Level.WARN, "*cluster state update task [test2] took * above the warn threshold of 10ms"))[ CD ]
Line_67 $$ clusterService1.submitStateUpdateTask("test5", new ClusterStateUpdateTask() -->Line_75 $$ fail()[ CD ]
Line_14 $$ final CountDownLatch latch = new CountDownLatch(5)-->Line_78 $$ assertThat(latch.await(5, TimeUnit.SECONDS), equalTo(true))[ FD ]
Line_43 $$ clusterService1.submitStateUpdateTask("test3", new ClusterStateUpdateTask() -->Line_52 $$ fail()[ CD ]
Line_5 $$ ClusterService clusterService1 = internalCluster().getInstance(ClusterService.class)-->Line_67 $$ clusterService1.submitStateUpdateTask("test5", new ClusterStateUpdateTask() [ FD ]
