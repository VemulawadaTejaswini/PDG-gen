Line_2 $$ public void testRepositoryInfoReadingWhileModifying() throws Exception -->Line_4 $$ assertNotNull(myGlobalRepositoryManager.getRepositoryForRoot(repositoryFile))[ CD ]
Line_2 $$ public void testRepositoryInfoReadingWhileModifying() throws Exception -->Line_21 $$ assertNotNull(readExistingRepo.get(1, TimeUnit.SECONDS))[ CD ]
Line_2 $$ public void testRepositoryInfoReadingWhileModifying() throws Exception -->Line_20 $$ read.start()[ CD ]
Line_2 $$ public void testRepositoryInfoReadingWhileModifying() throws Exception -->Line_5 $$ FutureTask<Repository> readExistingRepo = new FutureTask<Repository>(new Callable<Repository>() [ CD ]
Line_5 $$ FutureTask<Repository> readExistingRepo = new FutureTask<Repository>(new Callable<Repository>() -->Line_21 $$ assertNotNull(readExistingRepo.get(1, TimeUnit.SECONDS))[ FD ]
Line_2 $$ public void testRepositoryInfoReadingWhileModifying() throws Exception -->Line_23 $$ assertTrue(modifyRepositoryMapping.get(1, TimeUnit.SECONDS))[ CD ]
Line_2 $$ public void testRepositoryInfoReadingWhileModifying() throws Exception -->Line_3 $$ final VirtualFile repositoryFile = createExternalRepository()[ CD ]
Line_10 $$ FutureTask<Boolean> modifyRepositoryMapping = new FutureTask<Boolean>(new Callable<Boolean>() -->Line_13 $$ return !myGlobalRepositoryManager.getRepositories().isEmpty()[ CD ]
Line_2 $$ public void testRepositoryInfoReadingWhileModifying() throws Exception -->Line_25 $$ modify.join()[ CD ]
Line_5 $$ FutureTask<Repository> readExistingRepo = new FutureTask<Repository>(new Callable<Repository>() -->Line_7 $$ return myGlobalRepositoryManager.getRepositoryForRoot(repositoryFile)[ CD ]
Line_2 $$ public void testRepositoryInfoReadingWhileModifying() throws Exception -->Line_24 $$ read.join()[ CD ]
Line_2 $$ public void testRepositoryInfoReadingWhileModifying() throws Exception -->Line_17 $$ modify.start()[ CD ]
Line_2 $$ public void testRepositoryInfoReadingWhileModifying() throws Exception -->Line_22 $$ CONTINUE_MODIFY.countDown()[ CD ]
Line_10 $$ FutureTask<Boolean> modifyRepositoryMapping = new FutureTask<Boolean>(new Callable<Boolean>() -->Line_12 $$ myProjectLevelVcsManager.setDirectoryMappings(VcsUtil.addMapping(myProjectLevelVcsManager.getDirectoryMappings(), myProjectRoot.getPath(), myVcs.getName()))[ CD ]
Line_2 $$ public void testRepositoryInfoReadingWhileModifying() throws Exception -->Line_18 $$ assertTrue(LOCK_ERROR_TEXT, READY_TO_READ.await(1, TimeUnit.SECONDS))[ CD ]
Line_3 $$ final VirtualFile repositoryFile = createExternalRepository()-->Line_7 $$ return myGlobalRepositoryManager.getRepositoryForRoot(repositoryFile)[ FD ]
Line_3 $$ final VirtualFile repositoryFile = createExternalRepository()-->Line_4 $$ assertNotNull(myGlobalRepositoryManager.getRepositoryForRoot(repositoryFile))[ FD ]
