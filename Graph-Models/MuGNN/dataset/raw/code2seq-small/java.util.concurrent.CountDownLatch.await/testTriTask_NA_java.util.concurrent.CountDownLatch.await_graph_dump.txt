Line_2 $$ public void testTriTask() throws Exception -->Line_6 $$ Assert.assertTrue(TriTask.first)[ CD ]
Line_2 $$ public void testTriTask() throws Exception -->Line_7 $$ Assert.assertTrue(TriTask.middle)[ CD ]
Line_2 $$ public void testTriTask() throws Exception -->Line_4 $$ runner.schedule(new TriTask(0, 10, 5))[ CD ]
Line_2 $$ public void testTriTask() throws Exception -->Line_5 $$ TriTask.latch.await(5000, TimeUnit.MILLISECONDS)[ CD ]
Line_2 $$ public void testTriTask() throws Exception -->Line_8 $$ Assert.assertTrue(TriTask.last)[ CD ]
Line_2 $$ public void testTriTask() throws Exception -->Line_3 $$ runner.start()[ CD ]
