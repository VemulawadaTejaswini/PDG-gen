Line_5 $$ GradlePluginLord.RequestObserver observer = new GradlePluginLord.RequestObserver() -->Line_15 $$ errorOutput.set(output)[ FD ]
Line_2 $$ private static void refreshProjectsBlocking(GradlePluginLord gradlePluginLord, final ExecuteGradleCommandServerProtocol.ExecutionInteraction executionInteraction, int maximumWaitValue, TimeUnit maximumWaitUnits) -->Line_5 $$ GradlePluginLord.RequestObserver observer = new GradlePluginLord.RequestObserver() [ CD ]
Line_4 $$ final AtomicReference<String> errorOutput = new AtomicReference<String>()-->Line_35 $$ throw new AssertionError(String.format("Command failed with output:%n%s", errorOutput.get()))[ FD ]
Line_2 $$ private static void refreshProjectsBlocking(GradlePluginLord gradlePluginLord, final ExecuteGradleCommandServerProtocol.ExecutionInteraction executionInteraction, int maximumWaitValue, TimeUnit maximumWaitUnits) -->Line_21 $$ Request request = gradlePluginLord.addRefreshRequestToQueue()[ CD ]
Line_4 $$ final AtomicReference<String> errorOutput = new AtomicReference<String>()-->Line_15 $$ errorOutput.set(output)[ FD ]
Line_5 $$ GradlePluginLord.RequestObserver observer = new GradlePluginLord.RequestObserver() -->Line_9 $$ request.setExecutionInteraction(executionInteraction)[ CD ]
Line_2 $$ private static void refreshProjectsBlocking(GradlePluginLord gradlePluginLord, final ExecuteGradleCommandServerProtocol.ExecutionInteraction executionInteraction, int maximumWaitValue, TimeUnit maximumWaitUnits) -->Line_20 $$ gradlePluginLord.addRequestObserver(observer, false)[ CD ]
Line_14 $$ if (result != 0) -->Line_15 $$ errorOutput.set(output)[ CD ]
Line_2 $$ private static void refreshProjectsBlocking(GradlePluginLord gradlePluginLord, final ExecuteGradleCommandServerProtocol.ExecutionInteraction executionInteraction, int maximumWaitValue, TimeUnit maximumWaitUnits) -->Line_29 $$ gradlePluginLord.removeRequestObserver(observer)[ CD ]
Line_5 $$ GradlePluginLord.RequestObserver observer = new GradlePluginLord.RequestObserver() -->Line_14 $$ if (result != 0) [ CD ]
Line_2 $$ private static void refreshProjectsBlocking(GradlePluginLord gradlePluginLord, final ExecuteGradleCommandServerProtocol.ExecutionInteraction executionInteraction, int maximumWaitValue, TimeUnit maximumWaitUnits) -->Line_4 $$ final AtomicReference<String> errorOutput = new AtomicReference<String>()[ CD ]
Line_2 $$ private static void refreshProjectsBlocking(GradlePluginLord gradlePluginLord, final ExecuteGradleCommandServerProtocol.ExecutionInteraction executionInteraction, int maximumWaitValue, TimeUnit maximumWaitUnits) -->Line_22 $$ Assert.assertNotNull(request)[ CD ]
Line_2 $$ private static void refreshProjectsBlocking(GradlePluginLord gradlePluginLord, final ExecuteGradleCommandServerProtocol.ExecutionInteraction executionInteraction, int maximumWaitValue, TimeUnit maximumWaitUnits) -->Line_9 $$ request.setExecutionInteraction(executionInteraction)[ FD ]
Line_5 $$ GradlePluginLord.RequestObserver observer = new GradlePluginLord.RequestObserver() -->Line_14 $$ if (result != 0) [ FD ]
Line_5 $$ GradlePluginLord.RequestObserver observer = new GradlePluginLord.RequestObserver() -->Line_17 $$ complete.countDown()[ CD ]
Line_3 $$ final CountDownLatch complete = new CountDownLatch(1)-->Line_25 $$ completed = complete.await(maximumWaitValue, maximumWaitUnits)[ FD ]
Line_5 $$ GradlePluginLord.RequestObserver observer = new GradlePluginLord.RequestObserver() -->Line_20 $$ gradlePluginLord.addRequestObserver(observer, false)[ FD ]
Line_2 $$ private static void refreshProjectsBlocking(GradlePluginLord gradlePluginLord, final ExecuteGradleCommandServerProtocol.ExecutionInteraction executionInteraction, int maximumWaitValue, TimeUnit maximumWaitUnits) -->Line_29 $$ gradlePluginLord.removeRequestObserver(observer)[ FD ]
Line_2 $$ private static void refreshProjectsBlocking(GradlePluginLord gradlePluginLord, final ExecuteGradleCommandServerProtocol.ExecutionInteraction executionInteraction, int maximumWaitValue, TimeUnit maximumWaitUnits) -->Line_21 $$ Request request = gradlePluginLord.addRefreshRequestToQueue()[ FD ]
Line_2 $$ private static void refreshProjectsBlocking(GradlePluginLord gradlePluginLord, final ExecuteGradleCommandServerProtocol.ExecutionInteraction executionInteraction, int maximumWaitValue, TimeUnit maximumWaitUnits) -->Line_25 $$ completed = complete.await(maximumWaitValue, maximumWaitUnits)[ FD ]
Line_5 $$ GradlePluginLord.RequestObserver observer = new GradlePluginLord.RequestObserver() -->Line_29 $$ gradlePluginLord.removeRequestObserver(observer)[ FD ]
Line_2 $$ private static void refreshProjectsBlocking(GradlePluginLord gradlePluginLord, final ExecuteGradleCommandServerProtocol.ExecutionInteraction executionInteraction, int maximumWaitValue, TimeUnit maximumWaitUnits) -->Line_34 $$ if (errorOutput.get() != null) [ CD ]
Line_5 $$ GradlePluginLord.RequestObserver observer = new GradlePluginLord.RequestObserver() -->Line_22 $$ Assert.assertNotNull(request)[ FD ]
Line_2 $$ private static void refreshProjectsBlocking(GradlePluginLord gradlePluginLord, final ExecuteGradleCommandServerProtocol.ExecutionInteraction executionInteraction, int maximumWaitValue, TimeUnit maximumWaitUnits) -->Line_30 $$ if (!completed) [ CD ]
Line_4 $$ final AtomicReference<String> errorOutput = new AtomicReference<String>()-->Line_34 $$ if (errorOutput.get() != null) [ FD ]
Line_3 $$ final CountDownLatch complete = new CountDownLatch(1)-->Line_17 $$ complete.countDown()[ FD ]
Line_5 $$ GradlePluginLord.RequestObserver observer = new GradlePluginLord.RequestObserver() -->Line_9 $$ request.setExecutionInteraction(executionInteraction)[ FD ]
Line_5 $$ GradlePluginLord.RequestObserver observer = new GradlePluginLord.RequestObserver() -->Line_31 $$ request.cancel()[ FD ]
Line_2 $$ private static void refreshProjectsBlocking(GradlePluginLord gradlePluginLord, final ExecuteGradleCommandServerProtocol.ExecutionInteraction executionInteraction, int maximumWaitValue, TimeUnit maximumWaitUnits) -->Line_3 $$ final CountDownLatch complete = new CountDownLatch(1)[ CD ]
Line_30 $$ if (!completed) -->Line_31 $$ request.cancel()[ CD ]
Line_2 $$ private static void refreshProjectsBlocking(GradlePluginLord gradlePluginLord, final ExecuteGradleCommandServerProtocol.ExecutionInteraction executionInteraction, int maximumWaitValue, TimeUnit maximumWaitUnits) -->Line_20 $$ gradlePluginLord.addRequestObserver(observer, false)[ FD ]
