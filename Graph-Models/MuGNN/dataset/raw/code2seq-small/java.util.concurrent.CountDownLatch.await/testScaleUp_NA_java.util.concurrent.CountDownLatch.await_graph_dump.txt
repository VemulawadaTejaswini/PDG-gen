Line_6 $$ ThreadPoolExecutor pool = EsExecutors.newScaling(getTestName(), min, max, between(1, 100), randomTimeUnit(), EsExecutors.daemonThreadFactory("test"))-->Line_28 $$ terminate(pool)[ FD ]
Line_3 $$ final int min = between(1, 3)-->Line_6 $$ ThreadPoolExecutor pool = EsExecutors.newScaling(getTestName(), min, max, between(1, 100), randomTimeUnit(), EsExecutors.daemonThreadFactory("test"))[ FD ]
Line_2 $$ public void testScaleUp() throws Exception -->Line_9 $$ for (int i = 0; i < max; ++i) [ CD ]
Line_9 $$ for (int i = 0; i < max; ++i) -->Line_11 $$ pool.execute(new Runnable() [ CD ]
Line_3 $$ final int min = between(1, 3)-->Line_7 $$ assertThat("Min property", pool.getCorePoolSize(), equalTo(min))[ FD ]
Line_9 $$ for (int i = 0; i < max; ++i) -->Line_10 $$ final CountDownLatch latch = new CountDownLatch(1)[ CD ]
Line_5 $$ final ThreadBarrier barrier = new ThreadBarrier(max + 1)-->Line_16 $$ barrier.await()[ FD ]
Line_4 $$ final int max = between(min + 1, 6)-->Line_25 $$ assertThat("wrong pool size", pool.getPoolSize(), equalTo(max))[ FD ]
Line_6 $$ ThreadPoolExecutor pool = EsExecutors.newScaling(getTestName(), min, max, between(1, 100), randomTimeUnit(), EsExecutors.daemonThreadFactory("test"))-->Line_26 $$ assertThat("wrong active size", pool.getActiveCount(), equalTo(max))[ FD ]
Line_6 $$ ThreadPoolExecutor pool = EsExecutors.newScaling(getTestName(), min, max, between(1, 100), randomTimeUnit(), EsExecutors.daemonThreadFactory("test"))-->Line_8 $$ assertThat("Max property", pool.getMaximumPoolSize(), equalTo(max))[ FD ]
Line_4 $$ final int max = between(min + 1, 6)-->Line_8 $$ assertThat("Max property", pool.getMaximumPoolSize(), equalTo(max))[ FD ]
Line_11 $$ pool.execute(new Runnable() -->Line_13 $$ latch.countDown()[ CD ]
Line_6 $$ ThreadPoolExecutor pool = EsExecutors.newScaling(getTestName(), min, max, between(1, 100), randomTimeUnit(), EsExecutors.daemonThreadFactory("test"))-->Line_11 $$ pool.execute(new Runnable() [ FD ]
Line_2 $$ public void testScaleUp() throws Exception -->Line_7 $$ assertThat("Min property", pool.getCorePoolSize(), equalTo(min))[ CD ]
Line_2 $$ public void testScaleUp() throws Exception -->Line_5 $$ final ThreadBarrier barrier = new ThreadBarrier(max + 1)[ CD ]
Line_10 $$ final CountDownLatch latch = new CountDownLatch(1)-->Line_22 $$ latch.await()[ FD ]
Line_6 $$ ThreadPoolExecutor pool = EsExecutors.newScaling(getTestName(), min, max, between(1, 100), randomTimeUnit(), EsExecutors.daemonThreadFactory("test"))-->Line_25 $$ assertThat("wrong pool size", pool.getPoolSize(), equalTo(max))[ FD ]
Line_2 $$ public void testScaleUp() throws Exception -->Line_6 $$ ThreadPoolExecutor pool = EsExecutors.newScaling(getTestName(), min, max, between(1, 100), randomTimeUnit(), EsExecutors.daemonThreadFactory("test"))[ CD ]
Line_2 $$ public void testScaleUp() throws Exception -->Line_8 $$ assertThat("Max property", pool.getMaximumPoolSize(), equalTo(max))[ CD ]
Line_9 $$ for (int i = 0; i < max; ++i) -->Line_22 $$ latch.await()[ CD ]
Line_2 $$ public void testScaleUp() throws Exception -->Line_27 $$ barrier.await()[ CD ]
Line_5 $$ final ThreadBarrier barrier = new ThreadBarrier(max + 1)-->Line_27 $$ barrier.await()[ FD ]
Line_2 $$ public void testScaleUp() throws Exception -->Line_28 $$ terminate(pool)[ CD ]
Line_4 $$ final int max = between(min + 1, 6)-->Line_26 $$ assertThat("wrong active size", pool.getActiveCount(), equalTo(max))[ FD ]
Line_5 $$ final ThreadBarrier barrier = new ThreadBarrier(max + 1)-->Line_15 $$ barrier.await()[ FD ]
Line_6 $$ ThreadPoolExecutor pool = EsExecutors.newScaling(getTestName(), min, max, between(1, 100), randomTimeUnit(), EsExecutors.daemonThreadFactory("test"))-->Line_7 $$ assertThat("Min property", pool.getCorePoolSize(), equalTo(min))[ FD ]
Line_10 $$ final CountDownLatch latch = new CountDownLatch(1)-->Line_13 $$ latch.countDown()[ FD ]
Line_4 $$ final int max = between(min + 1, 6)-->Line_6 $$ ThreadPoolExecutor pool = EsExecutors.newScaling(getTestName(), min, max, between(1, 100), randomTimeUnit(), EsExecutors.daemonThreadFactory("test"))[ FD ]
Line_5 $$ final ThreadBarrier barrier = new ThreadBarrier(max + 1)-->Line_24 $$ barrier.await()[ FD ]
Line_2 $$ public void testScaleUp() throws Exception -->Line_26 $$ assertThat("wrong active size", pool.getActiveCount(), equalTo(max))[ CD ]
Line_5 $$ final ThreadBarrier barrier = new ThreadBarrier(max + 1)-->Line_18 $$ barrier.reset(e)[ FD ]
Line_2 $$ public void testScaleUp() throws Exception -->Line_24 $$ barrier.await()[ CD ]
Line_2 $$ public void testScaleUp() throws Exception -->Line_3 $$ final int min = between(1, 3)[ CD ]
Line_4 $$ final int max = between(min + 1, 6)-->Line_9 $$ for (int i = 0; i < max; ++i) [ FD ]
Line_2 $$ public void testScaleUp() throws Exception -->Line_4 $$ final int max = between(min + 1, 6)[ CD ]
Line_2 $$ public void testScaleUp() throws Exception -->Line_25 $$ assertThat("wrong pool size", pool.getPoolSize(), equalTo(max))[ CD ]
