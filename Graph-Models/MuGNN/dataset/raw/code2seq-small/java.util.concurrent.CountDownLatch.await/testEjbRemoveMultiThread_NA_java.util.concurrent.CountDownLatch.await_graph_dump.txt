Line_3 $$ CountedSessionHome countedHome = (CountedSessionHome) ctx.lookup("java:module/CountedSession3!" + CountedSessionHome.class.getName())-->Line_4 $$ final CountedSession counted = countedHome.create()[ FD ]
Line_4 $$ final CountedSession counted = countedHome.create()-->Line_8 $$ counted.doSomethingSync(233)[ FD ]
Line_2 $$ public void testEjbRemoveMultiThread() throws Exception -->Line_13 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_2 $$ public void testEjbRemoveMultiThread() throws Exception -->Line_16 $$ CDL.await(5, TimeUnit.SECONDS)[ CD ]
Line_13 $$ for (int i = 0; i < 10; i++) -->Line_14 $$ new Thread(runnable).start()[ CD ]
Line_2 $$ public void testEjbRemoveMultiThread() throws Exception -->Line_4 $$ final CountedSession counted = countedHome.create()[ CD ]
Line_2 $$ public void testEjbRemoveMultiThread() throws Exception -->Line_3 $$ CountedSessionHome countedHome = (CountedSessionHome) ctx.lookup("java:module/CountedSession3!" + CountedSessionHome.class.getName())[ CD ]
Line_2 $$ public void testEjbRemoveMultiThread() throws Exception -->Line_5 $$ Runnable runnable = new Runnable() [ CD ]
Line_2 $$ public void testEjbRemoveMultiThread() throws Exception -->Line_17 $$ Assert.assertTrue("createCounter has to be == 5 but was " + CounterSingleton.createCounter3.get(), CounterSingleton.createCounter3.get() == 5)[ CD ]
