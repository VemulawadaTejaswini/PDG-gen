Line_2 $$ public void sendSubscribeToControllerAndReceiveReply() throws Exception -->Line_6 $$ WebSocketSession session = doHandshake(clientHandler, "/ws").get()[ CD ]
Line_2 $$ public void sendSubscribeToControllerAndReceiveReply() throws Exception -->Line_3 $$ String destHeader = "destination:/app/number"[ CD ]
Line_2 $$ public void sendSubscribeToControllerAndReceiveReply() throws Exception -->Line_5 $$ TestClientWebSocketHandler clientHandler = new TestClientWebSocketHandler(1, message)[ CD ]
Line_6 $$ WebSocketSession session = doHandshake(clientHandler, "/ws").get()-->Line_13 $$ session.close()[ FD ]
Line_3 $$ String destHeader = "destination:/app/number"-->Line_4 $$ TextMessage message = create(StompCommand.SUBSCRIBE).headers("id:subs1", destHeader).build()[ FD ]
Line_2 $$ public void sendSubscribeToControllerAndReceiveReply() throws Exception -->Line_4 $$ TextMessage message = create(StompCommand.SUBSCRIBE).headers("id:subs1", destHeader).build()[ CD ]
Line_9 $$ String payload = clientHandler.actual.get(0).getPayload()-->Line_10 $$ assertTrue("Expected STOMP destination=/app/number, got " + payload, payload.contains(destHeader))[ FD ]
Line_5 $$ TestClientWebSocketHandler clientHandler = new TestClientWebSocketHandler(1, message)-->Line_6 $$ WebSocketSession session = doHandshake(clientHandler, "/ws").get()[ FD ]
Line_9 $$ String payload = clientHandler.actual.get(0).getPayload()-->Line_11 $$ assertTrue("Expected STOMP Payload=42, got " + payload, payload.contains("42"))[ FD ]
Line_3 $$ String destHeader = "destination:/app/number"-->Line_10 $$ assertTrue("Expected STOMP destination=/app/number, got " + payload, payload.contains(destHeader))[ FD ]
