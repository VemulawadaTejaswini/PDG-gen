Line_6 $$ WebSocketSession session = doHandshake(clientHandler, "/ws").get()-->Line_12 $$ session.close()[ FD ]
Line_2 $$ public void sendMessageToBrokerAndReceiveReplyViaTopic() throws Exception -->Line_4 $$ TextMessage m2 = create(StompCommand.SEND).headers("destination:/topic/foo").body("5").build()[ CD ]
Line_2 $$ public void sendMessageToBrokerAndReceiveReplyViaTopic() throws Exception -->Line_6 $$ WebSocketSession session = doHandshake(clientHandler, "/ws").get()[ CD ]
Line_5 $$ TestClientWebSocketHandler clientHandler = new TestClientWebSocketHandler(1, m1, m2)-->Line_6 $$ WebSocketSession session = doHandshake(clientHandler, "/ws").get()[ FD ]
Line_2 $$ public void sendMessageToBrokerAndReceiveReplyViaTopic() throws Exception -->Line_3 $$ TextMessage m1 = create(StompCommand.SUBSCRIBE).headers("id:subs1", "destination:/topic/foo").build()[ CD ]
Line_9 $$ String payload = clientHandler.actual.get(0).getPayload()-->Line_10 $$ assertTrue("Expected STOMP MESSAGE, got " + payload, payload.startsWith("MESSAGE\n"))[ FD ]
Line_2 $$ public void sendMessageToBrokerAndReceiveReplyViaTopic() throws Exception -->Line_5 $$ TestClientWebSocketHandler clientHandler = new TestClientWebSocketHandler(1, m1, m2)[ CD ]
