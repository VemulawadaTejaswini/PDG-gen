Line_4 $$ final AtomicReference<LocalChangeList> changeList = new AtomicReference<LocalChangeList>()-->Line_28 $$ return changeList.get()[ FD ]
Line_2 $$ private LocalChangeList createChangeListAfterUpdate(@NotNull final VcsFullCommitDetails commit, @NotNull final Collection<FilePath> paths, @NotNull final String commitMessage) -->Line_3 $$ final CountDownLatch waiter = new CountDownLatch(1)[ CD ]
Line_7 $$ myChangeListManager.invokeAfterUpdate(new Runnable() -->Line_9 $$ changeList.set(createChangeListIfThereAreChanges(commit, commitMessage))[ CD ]
Line_3 $$ final CountDownLatch waiter = new CountDownLatch(1)-->Line_10 $$ waiter.countDown()[ FD ]
Line_4 $$ final AtomicReference<LocalChangeList> changeList = new AtomicReference<LocalChangeList>()-->Line_9 $$ changeList.set(createChangeListIfThereAreChanges(commit, commitMessage))[ FD ]
Line_7 $$ myChangeListManager.invokeAfterUpdate(new Runnable() -->Line_14 $$ vcsDirtyScopeManager.filePathsDirty(paths, null)[ FD ]
Line_2 $$ private LocalChangeList createChangeListAfterUpdate(@NotNull final VcsFullCommitDetails commit, @NotNull final Collection<FilePath> paths, @NotNull final String commitMessage) -->Line_14 $$ vcsDirtyScopeManager.filePathsDirty(paths, null)[ FD ]
Line_2 $$ private LocalChangeList createChangeListAfterUpdate(@NotNull final VcsFullCommitDetails commit, @NotNull final Collection<FilePath> paths, @NotNull final String commitMessage) -->Line_9 $$ changeList.set(createChangeListIfThereAreChanges(commit, commitMessage))[ FD ]
Line_2 $$ private LocalChangeList createChangeListAfterUpdate(@NotNull final VcsFullCommitDetails commit, @NotNull final Collection<FilePath> paths, @NotNull final String commitMessage) -->Line_4 $$ final AtomicReference<LocalChangeList> changeList = new AtomicReference<LocalChangeList>()[ CD ]
Line_2 $$ private LocalChangeList createChangeListAfterUpdate(@NotNull final VcsFullCommitDetails commit, @NotNull final Collection<FilePath> paths, @NotNull final String commitMessage) -->Line_5 $$ myPlatformFacade.invokeAndWait(new Runnable() [ CD ]
Line_21 $$ if (!success) -->Line_22 $$ LOG.error("Couldn't await for changelist manager refresh")[ CD ]
Line_5 $$ myPlatformFacade.invokeAndWait(new Runnable() -->Line_7 $$ myChangeListManager.invokeAfterUpdate(new Runnable() [ CD ]
Line_7 $$ myChangeListManager.invokeAfterUpdate(new Runnable() -->Line_14 $$ vcsDirtyScopeManager.filePathsDirty(paths, null)[ CD ]
Line_2 $$ private LocalChangeList createChangeListAfterUpdate(@NotNull final VcsFullCommitDetails commit, @NotNull final Collection<FilePath> paths, @NotNull final String commitMessage) -->Line_28 $$ return changeList.get()[ CD ]
Line_7 $$ myChangeListManager.invokeAfterUpdate(new Runnable() -->Line_10 $$ waiter.countDown()[ CD ]
Line_3 $$ final CountDownLatch waiter = new CountDownLatch(1)-->Line_20 $$ boolean success = waiter.await(100, TimeUnit.SECONDS)[ FD ]
