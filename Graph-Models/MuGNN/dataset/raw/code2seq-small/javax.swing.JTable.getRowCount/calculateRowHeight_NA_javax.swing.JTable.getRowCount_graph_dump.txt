Line_4 $$ for (int row = 0; row < Math.min(getRowCount(), myMaxItemsForSizeCalculation); row++) -->Line_9 $$ final Component component = renderer.getTableCellRendererComponent(this, value, true, true, row, column)[ FD ]
Line_5 $$ for (int column = 0; column < Math.min(getColumnCount(), myMaxItemsForSizeCalculation); column++) -->Line_6 $$ final TableCellRenderer renderer = getCellRenderer(row, column)[ FD ]
Line_9 $$ final Component component = renderer.getTableCellRendererComponent(this, value, true, true, row, column)-->Line_11 $$ final Dimension size = component.getPreferredSize()[ FD ]
Line_2 $$ protected int calculateRowHeight() -->Line_17 $$ return result[ CD ]
Line_9 $$ final Component component = renderer.getTableCellRendererComponent(this, value, true, true, row, column)-->Line_10 $$ if (component != null) [ FD ]
Line_5 $$ for (int column = 0; column < Math.min(getColumnCount(), myMaxItemsForSizeCalculation); column++) -->Line_9 $$ final Component component = renderer.getTableCellRendererComponent(this, value, true, true, row, column)[ FD ]
Line_4 $$ for (int row = 0; row < Math.min(getRowCount(), myMaxItemsForSizeCalculation); row++) -->Line_6 $$ final TableCellRenderer renderer = getCellRenderer(row, column)[ FD ]
Line_6 $$ final TableCellRenderer renderer = getCellRenderer(row, column)-->Line_9 $$ final Component component = renderer.getTableCellRendererComponent(this, value, true, true, row, column)[ FD ]
Line_8 $$ final Object value = getValueAt(row, column)-->Line_9 $$ final Component component = renderer.getTableCellRendererComponent(this, value, true, true, row, column)[ FD ]
Line_4 $$ for (int row = 0; row < Math.min(getRowCount(), myMaxItemsForSizeCalculation); row++) -->Line_5 $$ for (int column = 0; column < Math.min(getColumnCount(), myMaxItemsForSizeCalculation); column++) [ CD ]
Line_4 $$ for (int row = 0; row < Math.min(getRowCount(), myMaxItemsForSizeCalculation); row++) -->Line_8 $$ final Object value = getValueAt(row, column)[ FD ]
Line_3 $$ int result = -1-->Line_12 $$ result = Math.max(size.height, result)[ FD ]
Line_7 $$ if (renderer != null) -->Line_10 $$ if (component != null) [ CD ]
Line_5 $$ for (int column = 0; column < Math.min(getColumnCount(), myMaxItemsForSizeCalculation); column++) -->Line_7 $$ if (renderer != null) [ CD ]
Line_5 $$ for (int column = 0; column < Math.min(getColumnCount(), myMaxItemsForSizeCalculation); column++) -->Line_8 $$ final Object value = getValueAt(row, column)[ FD ]
Line_7 $$ if (renderer != null) -->Line_9 $$ final Component component = renderer.getTableCellRendererComponent(this, value, true, true, row, column)[ CD ]
Line_5 $$ for (int column = 0; column < Math.min(getColumnCount(), myMaxItemsForSizeCalculation); column++) -->Line_6 $$ final TableCellRenderer renderer = getCellRenderer(row, column)[ CD ]
Line_10 $$ if (component != null) -->Line_11 $$ final Dimension size = component.getPreferredSize()[ CD ]
Line_7 $$ if (renderer != null) -->Line_8 $$ final Object value = getValueAt(row, column)[ CD ]
Line_6 $$ final TableCellRenderer renderer = getCellRenderer(row, column)-->Line_7 $$ if (renderer != null) [ FD ]
Line_2 $$ protected int calculateRowHeight() -->Line_3 $$ int result = -1[ CD ]
Line_10 $$ if (component != null) -->Line_12 $$ result = Math.max(size.height, result)[ CD ]
Line_2 $$ protected int calculateRowHeight() -->Line_4 $$ for (int row = 0; row < Math.min(getRowCount(), myMaxItemsForSizeCalculation); row++) [ CD ]
