Line_9 $$ for (int i = 0; i < _COUNT; i++) -->Line_12 $$ intBuffer.put(ints[i])[ CD ]
Line_4 $$ Serializer serializer = new Serializer()-->Line_11 $$ serializer.writeInt(ints[i])[ FD ]
Line_5 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(_COUNT * 4)-->Line_6 $$ byteBuffer.order(ByteOrder.BIG_ENDIAN)[ FD ]
Line_5 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(_COUNT * 4)-->Line_7 $$ IntBuffer intBuffer = byteBuffer.asIntBuffer()[ FD ]
Line_5 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(_COUNT * 4)-->Line_15 $$ Assert.assertArrayEquals(byteBuffer.array(), bytes)[ FD ]
Line_9 $$ for (int i = 0; i < _COUNT; i++) -->Line_11 $$ serializer.writeInt(ints[i])[ CD ]
Line_7 $$ IntBuffer intBuffer = byteBuffer.asIntBuffer()-->Line_12 $$ intBuffer.put(ints[i])[ FD ]
Line_4 $$ Serializer serializer = new Serializer()-->Line_14 $$ byte[] bytes = serializer.toByteBuffer().array()[ FD ]
Line_14 $$ byte[] bytes = serializer.toByteBuffer().array()-->Line_15 $$ Assert.assertArrayEquals(byteBuffer.array(), bytes)[ FD ]
Line_9 $$ for (int i = 0; i < _COUNT; i++) -->Line_10 $$ ints[i] = _random.nextInt()[ CD ]
