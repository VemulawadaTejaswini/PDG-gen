Line_4 $$ final int maxFreeSlots = BufferPool.CHUNK_SIZE / size-->Line_15 $$ doTestFrees(size, maxFreeSlots, idxs)[ FD ]
Line_2 $$ private void doTestRandomFrees(long seed) -->Line_15 $$ doTestFrees(size, maxFreeSlots, idxs)[ CD ]
Line_11 $$ int v = idxs[idx]-->Line_13 $$ idxs[i] = v[ FD ]
Line_3 $$ final int size = 4096-->Line_15 $$ doTestFrees(size, maxFreeSlots, idxs)[ FD ]
Line_5 $$ final int[] idxs = new int[maxFreeSlots]-->Line_15 $$ doTestFrees(size, maxFreeSlots, idxs)[ FD ]
Line_6 $$ for (int i = 0; i < maxFreeSlots; i++) idxs[i] = maxFreeSlots - 1 - i-->Line_9 $$ for (int i = idxs.length - 1; i > 0; i--) [ FD ]
Line_2 $$ private void doTestRandomFrees(long seed) -->Line_8 $$ rnd.setSeed(seed)[ CD ]
Line_2 $$ private void doTestRandomFrees(long seed) -->Line_5 $$ final int[] idxs = new int[maxFreeSlots][ CD ]
Line_4 $$ final int maxFreeSlots = BufferPool.CHUNK_SIZE / size-->Line_6 $$ for (int i = 0; i < maxFreeSlots; i++) idxs[i] = maxFreeSlots - 1 - i[ FD ]
Line_2 $$ private void doTestRandomFrees(long seed) -->Line_3 $$ final int size = 4096[ CD ]
Line_2 $$ private void doTestRandomFrees(long seed) -->Line_9 $$ for (int i = idxs.length - 1; i > 0; i--) [ CD ]
Line_7 $$ Random rnd = new Random()-->Line_10 $$ int idx = rnd.nextInt(i + 1)[ FD ]
Line_9 $$ for (int i = idxs.length - 1; i > 0; i--) -->Line_13 $$ idxs[i] = v[ CD ]
Line_9 $$ for (int i = idxs.length - 1; i > 0; i--) -->Line_10 $$ int idx = rnd.nextInt(i + 1)[ CD ]
Line_9 $$ for (int i = idxs.length - 1; i > 0; i--) -->Line_11 $$ int v = idxs[idx][ CD ]
Line_2 $$ private void doTestRandomFrees(long seed) -->Line_4 $$ final int maxFreeSlots = BufferPool.CHUNK_SIZE / size[ CD ]
Line_2 $$ private void doTestRandomFrees(long seed) -->Line_8 $$ rnd.setSeed(seed)[ FD ]
Line_2 $$ private void doTestRandomFrees(long seed) -->Line_6 $$ for (int i = 0; i < maxFreeSlots; i++) idxs[i] = maxFreeSlots - 1 - i[ CD ]
Line_2 $$ private void doTestRandomFrees(long seed) -->Line_7 $$ Random rnd = new Random()[ CD ]
Line_7 $$ Random rnd = new Random()-->Line_8 $$ rnd.setSeed(seed)[ FD ]
Line_9 $$ for (int i = idxs.length - 1; i > 0; i--) -->Line_12 $$ idxs[idx] = idxs[i][ CD ]
