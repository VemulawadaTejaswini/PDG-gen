Line_12 $$ n += l-->Line_11 $$ System.arraycopy(word, 0, o.get(), n, l)[ FD ]
Line_5 $$ len = MIN_KEY_LEN-->Line_8 $$ while (n < len) [ FD ]
Line_2 $$ private void fillKey(BytesWritable o) -->Line_18 $$ lastKey.set(o)[ CD ]
Line_2 $$ private void fillKey(BytesWritable o) -->Line_3 $$ int len = keyLenRNG.nextInt()[ CD ]
Line_4 $$ if (len < MIN_KEY_LEN)-->Line_5 $$ len = MIN_KEY_LEN[ CD ]
Line_7 $$ int n = MIN_KEY_LEN-->Line_12 $$ n += l[ FD ]
Line_7 $$ int n = MIN_KEY_LEN-->Line_11 $$ System.arraycopy(word, 0, o.get(), n, l)[ FD ]
Line_2 $$ private void fillKey(BytesWritable o) -->Line_4 $$ if (len < MIN_KEY_LEN)[ CD ]
Line_2 $$ private void fillKey(BytesWritable o) -->Line_7 $$ int n = MIN_KEY_LEN[ CD ]
Line_7 $$ int n = MIN_KEY_LEN-->Line_8 $$ while (n < len) [ FD ]
Line_2 $$ private void fillKey(BytesWritable o) -->Line_14 $$ if (sorted && WritableComparator.compareBytes(lastKey.get(), MIN_KEY_LEN, lastKey.getSize() - MIN_KEY_LEN, o.get(), MIN_KEY_LEN, o.getSize() - MIN_KEY_LEN) > 0) [ CD ]
Line_8 $$ while (n < len) -->Line_11 $$ System.arraycopy(word, 0, o.get(), n, l)[ CD ]
Line_3 $$ int len = keyLenRNG.nextInt()-->Line_8 $$ while (n < len) [ FD ]
Line_9 $$ byte[] word = dict[random.nextInt(dict.length)]-->Line_11 $$ System.arraycopy(word, 0, o.get(), n, l)[ FD ]
Line_2 $$ private void fillKey(BytesWritable o) -->Line_17 $$ System.arraycopy(prefix, 0, o.get(), 0, MIN_KEY_LEN)[ CD ]
Line_12 $$ n += l-->Line_8 $$ while (n < len) [ FD ]
Line_8 $$ while (n < len) -->Line_12 $$ n += l[ CD ]
Line_2 $$ private void fillKey(BytesWritable o) -->Line_14 $$ if (sorted && WritableComparator.compareBytes(lastKey.get(), MIN_KEY_LEN, lastKey.getSize() - MIN_KEY_LEN, o.get(), MIN_KEY_LEN, o.getSize() - MIN_KEY_LEN) > 0) [ FD ]
Line_10 $$ int l = Math.min(word.length, len - n)-->Line_11 $$ System.arraycopy(word, 0, o.get(), n, l)[ FD ]
Line_3 $$ int len = keyLenRNG.nextInt()-->Line_4 $$ if (len < MIN_KEY_LEN)[ FD ]
Line_2 $$ private void fillKey(BytesWritable o) -->Line_11 $$ System.arraycopy(word, 0, o.get(), n, l)[ FD ]
Line_8 $$ while (n < len) -->Line_10 $$ int l = Math.min(word.length, len - n)[ CD ]
Line_2 $$ private void fillKey(BytesWritable o) -->Line_18 $$ lastKey.set(o)[ FD ]
Line_3 $$ int len = keyLenRNG.nextInt()-->Line_6 $$ o.setSize(len)[ FD ]
Line_5 $$ len = MIN_KEY_LEN-->Line_6 $$ o.setSize(len)[ FD ]
Line_10 $$ int l = Math.min(word.length, len - n)-->Line_12 $$ n += l[ FD ]
Line_2 $$ private void fillKey(BytesWritable o) -->Line_8 $$ while (n < len) [ CD ]
Line_2 $$ private void fillKey(BytesWritable o) -->Line_17 $$ System.arraycopy(prefix, 0, o.get(), 0, MIN_KEY_LEN)[ FD ]
Line_2 $$ private void fillKey(BytesWritable o) -->Line_6 $$ o.setSize(len)[ FD ]
Line_3 $$ int len = keyLenRNG.nextInt()-->Line_5 $$ len = MIN_KEY_LEN[ FD ]
Line_14 $$ if (sorted && WritableComparator.compareBytes(lastKey.get(), MIN_KEY_LEN, lastKey.getSize() - MIN_KEY_LEN, o.get(), MIN_KEY_LEN, o.getSize() - MIN_KEY_LEN) > 0) -->Line_15 $$ incrementPrefix()[ CD ]
Line_2 $$ private void fillKey(BytesWritable o) -->Line_6 $$ o.setSize(len)[ CD ]
Line_8 $$ while (n < len) -->Line_9 $$ byte[] word = dict[random.nextInt(dict.length)][ CD ]
