Line_9 $$ int basePort = 10060 + random.nextInt(100) * 2-->Line_10 $$ MiniDFSNNTopology topology = new MiniDFSNNTopology().addNameservice(new MiniDFSNNTopology.NSConf("ns1").addNN(new MiniDFSNNTopology.NNConf("nn1").setHttpPort(basePort)).addNN(new MiniDFSNNTopology.NNConf("nn2").setHttpPort(basePort + 1)))[ FD ]
Line_10 $$ MiniDFSNNTopology topology = new MiniDFSNNTopology().addNameservice(new MiniDFSNNTopology.NSConf("ns1").addNN(new MiniDFSNNTopology.NNConf("nn1").setHttpPort(basePort)).addNN(new MiniDFSNNTopology.NNConf("nn2").setHttpPort(basePort + 1)))-->Line_11 $$ cluster = new MiniDFSCluster.Builder(conf).nnTopology(topology).numDataNodes(0).build()[ FD ]
Line_3 $$ Configuration conf = setupCommonConfig()-->Line_15 $$ fs = HATestUtil.configureFailoverFs(cluster, conf)[ FD ]
Line_3 $$ Configuration conf = setupCommonConfig()-->Line_5 $$ conf.setInt(DFSConfigKeys.DFS_NAMENODE_NUM_EXTRA_EDITS_RETAINED_KEY, 0)[ FD ]
Line_2 $$ public void setupCluster() throws Exception -->Line_5 $$ conf.setInt(DFSConfigKeys.DFS_NAMENODE_NUM_EXTRA_EDITS_RETAINED_KEY, 0)[ CD ]
Line_2 $$ public void setupCluster() throws Exception -->Line_3 $$ Configuration conf = setupCommonConfig()[ CD ]
Line_2 $$ public void setupCluster() throws Exception -->Line_6 $$ int retryCount = 0[ CD ]
Line_2 $$ public void setupCluster() throws Exception -->Line_7 $$ while (true) [ CD ]
Line_2 $$ public void setupCluster() throws Exception -->Line_4 $$ conf.setInt(DFSConfigKeys.DFS_NAMENODE_NUM_CHECKPOINTS_RETAINED_KEY, 1)[ CD ]
Line_3 $$ Configuration conf = setupCommonConfig()-->Line_4 $$ conf.setInt(DFSConfigKeys.DFS_NAMENODE_NUM_CHECKPOINTS_RETAINED_KEY, 1)[ FD ]
Line_6 $$ int retryCount = 0-->Line_17 $$ ++retryCount[ FD ]
