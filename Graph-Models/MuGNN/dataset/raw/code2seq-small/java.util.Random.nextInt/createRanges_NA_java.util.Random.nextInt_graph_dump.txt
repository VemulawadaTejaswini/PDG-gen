Line_2 $$ private static Range[] createRanges(int length, int numFiles, Random random) -->Line_5 $$ for (int i = 0; i < numFiles; i++) [ CD ]
Line_5 $$ for (int i = 0; i < numFiles; i++) -->Line_7 $$ int end = i == numFiles - 1 ? length : (length / numFiles) * (2 * i + 1) / 2 + random.nextInt(length / numFiles) + 1[ CD ]
Line_2 $$ private static Range[] createRanges(int length, int numFiles, Random random) -->Line_7 $$ int end = i == numFiles - 1 ? length : (length / numFiles) * (2 * i + 1) / 2 + random.nextInt(length / numFiles) + 1[ FD ]
Line_5 $$ for (int i = 0; i < numFiles; i++) -->Line_6 $$ int start = i == 0 ? 0 : ranges[i - 1].end[ CD ]
Line_2 $$ private static Range[] createRanges(int length, int numFiles, Random random) -->Line_5 $$ for (int i = 0; i < numFiles; i++) [ FD ]
Line_2 $$ private static Range[] createRanges(int length, int numFiles, Random random) -->Line_10 $$ return ranges[ CD ]
Line_5 $$ for (int i = 0; i < numFiles; i++) -->Line_8 $$ ranges[i] = new Range(start, end)[ CD ]
