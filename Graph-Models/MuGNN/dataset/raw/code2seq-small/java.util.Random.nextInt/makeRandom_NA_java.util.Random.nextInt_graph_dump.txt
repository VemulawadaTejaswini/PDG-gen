Line_2 $$ private RangeTombstoneList makeRandom(Random rand, int size, int maxItSize, int maxItDistance, int maxMarkedAt) -->Line_11 $$ boolean startInclusive = rand.nextBoolean()[ FD ]
Line_8 $$ for (int i = 0; i < size; i++) -->Line_12 $$ boolean endInclusive = rand.nextBoolean()[ CD ]
Line_2 $$ private RangeTombstoneList makeRandom(Random rand, int size, int maxItSize, int maxItDistance, int maxMarkedAt) -->Line_5 $$ int prevEnd = 0[ CD ]
Line_15 $$ startInclusive = !prevEndInclusive-->Line_22 $$ l.add(rt(nextStart, startInclusive, nextEnd, endInclusive, rand.nextInt(maxMarkedAt)))[ FD ]
Line_2 $$ private RangeTombstoneList makeRandom(Random rand, int size, int maxItSize, int maxItDistance, int maxMarkedAt) -->Line_22 $$ l.add(rt(nextStart, startInclusive, nextEnd, endInclusive, rand.nextInt(maxMarkedAt)))[ FD ]
Line_8 $$ for (int i = 0; i < size; i++) -->Line_9 $$ int nextStart = prevEnd + rand.nextInt(maxItDistance)[ CD ]
Line_8 $$ for (int i = 0; i < size; i++) -->Line_24 $$ prevEnd = nextEnd[ CD ]
Line_18 $$ endInclusive = true-->Line_26 $$ prevEndInclusive = endInclusive[ FD ]
Line_20 $$ nextEnd += 1-->Line_22 $$ l.add(rt(nextStart, startInclusive, nextEnd, endInclusive, rand.nextInt(maxMarkedAt)))[ FD ]
Line_2 $$ private RangeTombstoneList makeRandom(Random rand, int size, int maxItSize, int maxItDistance, int maxMarkedAt) -->Line_4 $$ int prevStart = -1[ CD ]
Line_6 $$ boolean prevStartInclusive = false-->Line_25 $$ prevStartInclusive = startInclusive[ FD ]
Line_8 $$ for (int i = 0; i < size; i++) -->Line_26 $$ prevEndInclusive = endInclusive[ CD ]
Line_2 $$ private RangeTombstoneList makeRandom(Random rand, int size, int maxItSize, int maxItDistance, int maxMarkedAt) -->Line_8 $$ for (int i = 0; i < size; i++) [ CD ]
Line_2 $$ private RangeTombstoneList makeRandom(Random rand, int size, int maxItSize, int maxItDistance, int maxMarkedAt) -->Line_8 $$ for (int i = 0; i < size; i++) [ FD ]
Line_2 $$ private RangeTombstoneList makeRandom(Random rand, int size, int maxItSize, int maxItDistance, int maxMarkedAt) -->Line_7 $$ boolean prevEndInclusive = false[ CD ]
Line_16 $$ if (nextStart == nextEnd) -->Line_17 $$ if (startInclusive)[ CD ]
Line_9 $$ int nextStart = prevEnd + rand.nextInt(maxItDistance)-->Line_16 $$ if (nextStart == nextEnd) [ FD ]
Line_8 $$ for (int i = 0; i < size; i++) -->Line_25 $$ prevStartInclusive = startInclusive[ CD ]
Line_4 $$ int prevStart = -1-->Line_23 $$ prevStart = nextStart[ FD ]
Line_17 $$ if (startInclusive)-->Line_20 $$ nextEnd += 1[ CD ]
Line_9 $$ int nextStart = prevEnd + rand.nextInt(maxItDistance)-->Line_23 $$ prevStart = nextStart[ FD ]
Line_10 $$ int nextEnd = nextStart + rand.nextInt(maxItSize)-->Line_24 $$ prevEnd = nextEnd[ FD ]
Line_3 $$ RangeTombstoneList l = new RangeTombstoneList(cmp, size)-->Line_22 $$ l.add(rt(nextStart, startInclusive, nextEnd, endInclusive, rand.nextInt(maxMarkedAt)))[ FD ]
Line_11 $$ boolean startInclusive = rand.nextBoolean()-->Line_15 $$ startInclusive = !prevEndInclusive[ FD ]
Line_10 $$ int nextEnd = nextStart + rand.nextInt(maxItSize)-->Line_22 $$ l.add(rt(nextStart, startInclusive, nextEnd, endInclusive, rand.nextInt(maxMarkedAt)))[ FD ]
Line_12 $$ boolean endInclusive = rand.nextBoolean()-->Line_26 $$ prevEndInclusive = endInclusive[ FD ]
Line_2 $$ private RangeTombstoneList makeRandom(Random rand, int size, int maxItSize, int maxItDistance, int maxMarkedAt) -->Line_10 $$ int nextEnd = nextStart + rand.nextInt(maxItSize)[ FD ]
Line_12 $$ boolean endInclusive = rand.nextBoolean()-->Line_18 $$ endInclusive = true[ FD ]
Line_2 $$ private RangeTombstoneList makeRandom(Random rand, int size, int maxItSize, int maxItDistance, int maxMarkedAt) -->Line_9 $$ int nextStart = prevEnd + rand.nextInt(maxItDistance)[ FD ]
Line_7 $$ boolean prevEndInclusive = false-->Line_15 $$ startInclusive = !prevEndInclusive[ FD ]
Line_8 $$ for (int i = 0; i < size; i++) -->Line_11 $$ boolean startInclusive = rand.nextBoolean()[ CD ]
Line_10 $$ int nextEnd = nextStart + rand.nextInt(maxItSize)-->Line_20 $$ nextEnd += 1[ FD ]
Line_7 $$ boolean prevEndInclusive = false-->Line_26 $$ prevEndInclusive = endInclusive[ FD ]
Line_20 $$ nextEnd += 1-->Line_24 $$ prevEnd = nextEnd[ FD ]
Line_2 $$ private RangeTombstoneList makeRandom(Random rand, int size, int maxItSize, int maxItDistance, int maxMarkedAt) -->Line_6 $$ boolean prevStartInclusive = false[ CD ]
Line_8 $$ for (int i = 0; i < size; i++) -->Line_23 $$ prevStart = nextStart[ CD ]
Line_15 $$ startInclusive = !prevEndInclusive-->Line_25 $$ prevStartInclusive = startInclusive[ FD ]
Line_17 $$ if (startInclusive)-->Line_18 $$ endInclusive = true[ CD ]
Line_11 $$ boolean startInclusive = rand.nextBoolean()-->Line_22 $$ l.add(rt(nextStart, startInclusive, nextEnd, endInclusive, rand.nextInt(maxMarkedAt)))[ FD ]
Line_8 $$ for (int i = 0; i < size; i++) -->Line_16 $$ if (nextStart == nextEnd) [ CD ]
Line_8 $$ for (int i = 0; i < size; i++) -->Line_10 $$ int nextEnd = nextStart + rand.nextInt(maxItSize)[ CD ]
Line_5 $$ int prevEnd = 0-->Line_24 $$ prevEnd = nextEnd[ FD ]
Line_9 $$ int nextStart = prevEnd + rand.nextInt(maxItDistance)-->Line_22 $$ l.add(rt(nextStart, startInclusive, nextEnd, endInclusive, rand.nextInt(maxMarkedAt)))[ FD ]
Line_12 $$ boolean endInclusive = rand.nextBoolean()-->Line_22 $$ l.add(rt(nextStart, startInclusive, nextEnd, endInclusive, rand.nextInt(maxMarkedAt)))[ FD ]
Line_2 $$ private RangeTombstoneList makeRandom(Random rand, int size, int maxItSize, int maxItDistance, int maxMarkedAt) -->Line_28 $$ return l[ CD ]
Line_2 $$ private RangeTombstoneList makeRandom(Random rand, int size, int maxItSize, int maxItDistance, int maxMarkedAt) -->Line_3 $$ RangeTombstoneList l = new RangeTombstoneList(cmp, size)[ CD ]
Line_18 $$ endInclusive = true-->Line_22 $$ l.add(rt(nextStart, startInclusive, nextEnd, endInclusive, rand.nextInt(maxMarkedAt)))[ FD ]
Line_10 $$ int nextEnd = nextStart + rand.nextInt(maxItSize)-->Line_16 $$ if (nextStart == nextEnd) [ FD ]
Line_8 $$ for (int i = 0; i < size; i++) -->Line_22 $$ l.add(rt(nextStart, startInclusive, nextEnd, endInclusive, rand.nextInt(maxMarkedAt)))[ CD ]
Line_2 $$ private RangeTombstoneList makeRandom(Random rand, int size, int maxItSize, int maxItDistance, int maxMarkedAt) -->Line_12 $$ boolean endInclusive = rand.nextBoolean()[ FD ]
Line_26 $$ prevEndInclusive = endInclusive-->Line_15 $$ startInclusive = !prevEndInclusive[ FD ]
Line_20 $$ nextEnd += 1-->Line_16 $$ if (nextStart == nextEnd) [ FD ]
Line_11 $$ boolean startInclusive = rand.nextBoolean()-->Line_25 $$ prevStartInclusive = startInclusive[ FD ]
