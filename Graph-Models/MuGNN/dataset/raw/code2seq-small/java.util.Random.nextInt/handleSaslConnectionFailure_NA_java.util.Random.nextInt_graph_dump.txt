Line_10 $$ if (LOG.isDebugEnabled()) -->Line_11 $$ LOG.debug("Exception encountered while connecting to " + "the server : " + ex)[ CD ]
Line_3 $$ ugi.doAs(new PrivilegedExceptionAction<Object>() -->Line_7 $$ disposeSasl()[ CD ]
Line_9 $$ if (currRetries < maxRetries) -->Line_18 $$ Thread.sleep((rand.nextInt(MAX_BACKOFF) + 1))[ CD ]
Line_8 $$ if (shouldAuthenticateOverKrb()) -->Line_26 $$ LOG.warn("Exception encountered while connecting to " + "the server : " + ex)[ CD ]
Line_2 $$ private synchronized void handleSaslConnectionFailure(final int currRetries, final int maxRetries, final Exception ex, final Random rand, final UserGroupInformation ugi) throws IOException, InterruptedException -->Line_3 $$ ugi.doAs(new PrivilegedExceptionAction<Object>() [ CD ]
Line_3 $$ ugi.doAs(new PrivilegedExceptionAction<Object>() -->Line_8 $$ if (shouldAuthenticateOverKrb()) [ CD ]
Line_3 $$ ugi.doAs(new PrivilegedExceptionAction<Object>() -->Line_28 $$ if (ex instanceof RemoteException)[ CD ]
Line_9 $$ if (currRetries < maxRetries) -->Line_13 $$ if (UserGroupInformation.isLoginKeytabBased()) [ CD ]
Line_2 $$ private synchronized void handleSaslConnectionFailure(final int currRetries, final int maxRetries, final Exception ex, final Random rand, final UserGroupInformation ugi) throws IOException, InterruptedException -->Line_18 $$ Thread.sleep((rand.nextInt(MAX_BACKOFF) + 1))[ FD ]
Line_2 $$ private synchronized void handleSaslConnectionFailure(final int currRetries, final int maxRetries, final Exception ex, final Random rand, final UserGroupInformation ugi) throws IOException, InterruptedException -->Line_9 $$ if (currRetries < maxRetries) [ FD ]
Line_2 $$ private synchronized void handleSaslConnectionFailure(final int currRetries, final int maxRetries, final Exception ex, final Random rand, final UserGroupInformation ugi) throws IOException, InterruptedException -->Line_23 $$ throw (IOException) new IOException(msg).initCause(ex)[ FD ]
Line_8 $$ if (shouldAuthenticateOverKrb()) -->Line_9 $$ if (currRetries < maxRetries) [ CD ]
Line_13 $$ if (UserGroupInformation.isLoginKeytabBased()) -->Line_14 $$ UserGroupInformation.getLoginUser().reloginFromKeytab()[ CD ]
Line_3 $$ ugi.doAs(new PrivilegedExceptionAction<Object>() -->Line_5 $$ final short MAX_BACKOFF = 5000[ CD ]
Line_2 $$ private synchronized void handleSaslConnectionFailure(final int currRetries, final int maxRetries, final Exception ex, final Random rand, final UserGroupInformation ugi) throws IOException, InterruptedException -->Line_28 $$ if (ex instanceof RemoteException)[ FD ]
Line_15 $$ if (UserGroupInformation.isLoginTicketBased()) -->Line_16 $$ UserGroupInformation.getLoginUser().reloginFromTicketCache()[ CD ]
Line_9 $$ if (currRetries < maxRetries) -->Line_10 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_5 $$ final short MAX_BACKOFF = 5000-->Line_18 $$ Thread.sleep((rand.nextInt(MAX_BACKOFF) + 1))[ FD ]
Line_3 $$ ugi.doAs(new PrivilegedExceptionAction<Object>() -->Line_6 $$ closeConnection()[ CD ]
Line_13 $$ if (UserGroupInformation.isLoginKeytabBased()) -->Line_15 $$ if (UserGroupInformation.isLoginTicketBased()) [ CD ]
Line_21 $$ String msg = "Couldn't setup connection for " + UserGroupInformation.getLoginUser().getUserName() + " to " + remoteId-->Line_22 $$ LOG.warn(msg)[ FD ]
Line_9 $$ if (currRetries < maxRetries) -->Line_21 $$ String msg = "Couldn't setup connection for " + UserGroupInformation.getLoginUser().getUserName() + " to " + remoteId[ CD ]
Line_9 $$ if (currRetries < maxRetries) -->Line_19 $$ return null[ CD ]
Line_9 $$ if (currRetries < maxRetries) -->Line_22 $$ LOG.warn(msg)[ CD ]
Line_2 $$ private synchronized void handleSaslConnectionFailure(final int currRetries, final int maxRetries, final Exception ex, final Random rand, final UserGroupInformation ugi) throws IOException, InterruptedException -->Line_3 $$ ugi.doAs(new PrivilegedExceptionAction<Object>() [ FD ]
