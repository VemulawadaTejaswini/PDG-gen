Line_11 $$ int len = 0-->Line_17 $$ AppendTestUtil.write(stm, len, thisLen)[ FD ]
Line_2 $$ public void testAlgoSwitchRandomized() throws IOException -->Line_9 $$ IOUtils.closeStream(fsWithCrc32.create(p))[ CD ]
Line_2 $$ public void testAlgoSwitchRandomized() throws IOException -->Line_11 $$ int len = 0[ CD ]
Line_2 $$ public void testAlgoSwitchRandomized() throws IOException -->Line_10 $$ long st = Time.now()[ CD ]
Line_5 $$ Path p = new Path("/testAlgoSwitchRandomized")-->Line_23 $$ AppendTestUtil.check(fsWithCrc32, p, len)[ FD ]
Line_2 $$ public void testAlgoSwitchRandomized() throws IOException -->Line_6 $$ long seed = Time.now()[ CD ]
Line_12 $$ while (Time.now() - st < RANDOM_TEST_RUNTIME) -->Line_14 $$ FileSystem fs = (r.nextBoolean() ? fsWithCrc32 : fsWithCrc32C)[ CD ]
Line_13 $$ int thisLen = r.nextInt(500)-->Line_21 $$ len += thisLen[ FD ]
Line_11 $$ int len = 0-->Line_24 $$ AppendTestUtil.check(fsWithCrc32C, p, len)[ FD ]
Line_4 $$ FileSystem fsWithCrc32C = createFsWithChecksum("CRC32C", 512)-->Line_24 $$ AppendTestUtil.check(fsWithCrc32C, p, len)[ FD ]
Line_8 $$ Random r = new Random(seed)-->Line_13 $$ int thisLen = r.nextInt(500)[ FD ]
Line_12 $$ while (Time.now() - st < RANDOM_TEST_RUNTIME) -->Line_15 $$ FSDataOutputStream stm = fs.append(p)[ CD ]
Line_11 $$ int len = 0-->Line_23 $$ AppendTestUtil.check(fsWithCrc32, p, len)[ FD ]
Line_14 $$ FileSystem fs = (r.nextBoolean() ? fsWithCrc32 : fsWithCrc32C)-->Line_15 $$ FSDataOutputStream stm = fs.append(p)[ FD ]
Line_2 $$ public void testAlgoSwitchRandomized() throws IOException -->Line_7 $$ System.out.println("seed: " + seed)[ CD ]
Line_5 $$ Path p = new Path("/testAlgoSwitchRandomized")-->Line_24 $$ AppendTestUtil.check(fsWithCrc32C, p, len)[ FD ]
Line_2 $$ public void testAlgoSwitchRandomized() throws IOException -->Line_8 $$ Random r = new Random(seed)[ CD ]
Line_2 $$ public void testAlgoSwitchRandomized() throws IOException -->Line_24 $$ AppendTestUtil.check(fsWithCrc32C, p, len)[ CD ]
Line_2 $$ public void testAlgoSwitchRandomized() throws IOException -->Line_23 $$ AppendTestUtil.check(fsWithCrc32, p, len)[ CD ]
Line_2 $$ public void testAlgoSwitchRandomized() throws IOException -->Line_4 $$ FileSystem fsWithCrc32C = createFsWithChecksum("CRC32C", 512)[ CD ]
Line_8 $$ Random r = new Random(seed)-->Line_14 $$ FileSystem fs = (r.nextBoolean() ? fsWithCrc32 : fsWithCrc32C)[ FD ]
Line_21 $$ len += thisLen-->Line_23 $$ AppendTestUtil.check(fsWithCrc32, p, len)[ FD ]
Line_3 $$ FileSystem fsWithCrc32 = createFsWithChecksum("CRC32", 512)-->Line_9 $$ IOUtils.closeStream(fsWithCrc32.create(p))[ FD ]
Line_13 $$ int thisLen = r.nextInt(500)-->Line_17 $$ AppendTestUtil.write(stm, len, thisLen)[ FD ]
Line_5 $$ Path p = new Path("/testAlgoSwitchRandomized")-->Line_9 $$ IOUtils.closeStream(fsWithCrc32.create(p))[ FD ]
Line_21 $$ len += thisLen-->Line_17 $$ AppendTestUtil.write(stm, len, thisLen)[ FD ]
Line_2 $$ public void testAlgoSwitchRandomized() throws IOException -->Line_12 $$ while (Time.now() - st < RANDOM_TEST_RUNTIME) [ CD ]
Line_11 $$ int len = 0-->Line_21 $$ len += thisLen[ FD ]
Line_2 $$ public void testAlgoSwitchRandomized() throws IOException -->Line_5 $$ Path p = new Path("/testAlgoSwitchRandomized")[ CD ]
Line_21 $$ len += thisLen-->Line_24 $$ AppendTestUtil.check(fsWithCrc32C, p, len)[ FD ]
Line_15 $$ FSDataOutputStream stm = fs.append(p)-->Line_19 $$ stm.close()[ FD ]
Line_5 $$ Path p = new Path("/testAlgoSwitchRandomized")-->Line_15 $$ FSDataOutputStream stm = fs.append(p)[ FD ]
Line_3 $$ FileSystem fsWithCrc32 = createFsWithChecksum("CRC32", 512)-->Line_23 $$ AppendTestUtil.check(fsWithCrc32, p, len)[ FD ]
Line_12 $$ while (Time.now() - st < RANDOM_TEST_RUNTIME) -->Line_13 $$ int thisLen = r.nextInt(500)[ CD ]
Line_2 $$ public void testAlgoSwitchRandomized() throws IOException -->Line_3 $$ FileSystem fsWithCrc32 = createFsWithChecksum("CRC32", 512)[ CD ]
Line_15 $$ FSDataOutputStream stm = fs.append(p)-->Line_17 $$ AppendTestUtil.write(stm, len, thisLen)[ FD ]
Line_12 $$ while (Time.now() - st < RANDOM_TEST_RUNTIME) -->Line_21 $$ len += thisLen[ CD ]
