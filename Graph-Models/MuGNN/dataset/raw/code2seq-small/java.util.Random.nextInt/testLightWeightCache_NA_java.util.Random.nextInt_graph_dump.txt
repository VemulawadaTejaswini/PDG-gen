Line_6 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_15 $$ check(1, creationExpiration, accessExpiration, 1 << 10, 65537)[ FD ]
Line_21 $$ for (int i = 0; i < 10; i++) -->Line_24 $$ checkSizeLimit(sizeLimit, dataSize, modulus)[ CD ]
Line_6 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_16 $$ check(17, creationExpiration, accessExpiration, 1 << 16, 17)[ FD ]
Line_14 $$ final long accessExpiration = ran.nextInt(1024) + 1-->Line_17 $$ check(255, creationExpiration, accessExpiration, 1 << 16, 65537)[ FD ]
Line_6 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_7 $$ check(1, creationExpiration, 0L, 1 << 10, 65537)[ FD ]
Line_6 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_8 $$ check(17, creationExpiration, 0L, 1 << 16, 17)[ FD ]
Line_13 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_16 $$ check(17, creationExpiration, accessExpiration, 1 << 16, 17)[ FD ]
Line_13 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_17 $$ check(255, creationExpiration, accessExpiration, 1 << 16, 65537)[ FD ]
Line_6 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_17 $$ check(255, creationExpiration, accessExpiration, 1 << 16, 65537)[ FD ]
Line_14 $$ final long accessExpiration = ran.nextInt(1024) + 1-->Line_15 $$ check(1, creationExpiration, accessExpiration, 1 << 10, 65537)[ FD ]
Line_6 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_9 $$ check(255, creationExpiration, 0L, 1 << 16, 65537)[ FD ]
Line_22 $$ final int modulus = ran.nextInt(1024) + 1-->Line_23 $$ final int sizeLimit = ran.nextInt(modulus) + 1[ FD ]
Line_23 $$ final int sizeLimit = ran.nextInt(modulus) + 1-->Line_24 $$ checkSizeLimit(sizeLimit, dataSize, modulus)[ FD ]
Line_22 $$ final int modulus = ran.nextInt(1024) + 1-->Line_24 $$ checkSizeLimit(sizeLimit, dataSize, modulus)[ FD ]
Line_21 $$ for (int i = 0; i < 10; i++) -->Line_23 $$ final int sizeLimit = ran.nextInt(modulus) + 1[ CD ]
Line_13 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_15 $$ check(1, creationExpiration, accessExpiration, 1 << 10, 65537)[ FD ]
Line_14 $$ final long accessExpiration = ran.nextInt(1024) + 1-->Line_16 $$ check(17, creationExpiration, accessExpiration, 1 << 16, 17)[ FD ]
Line_21 $$ for (int i = 0; i < 10; i++) -->Line_22 $$ final int modulus = ran.nextInt(1024) + 1[ CD ]
