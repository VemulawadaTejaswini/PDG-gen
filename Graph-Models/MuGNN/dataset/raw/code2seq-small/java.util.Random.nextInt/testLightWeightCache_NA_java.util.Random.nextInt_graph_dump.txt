Line_4 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_12 $$ check(1, creationExpiration, accessExpiration, 1 << 10, 65537)[ FD ]
Line_2 $$ public void testLightWeightCache() -->Line_17 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_10 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_12 $$ check(1, creationExpiration, accessExpiration, 1 << 10, 65537)[ FD ]
Line_4 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_14 $$ check(255, creationExpiration, accessExpiration, 1 << 16, 65537)[ FD ]
Line_2 $$ public void testLightWeightCache() -->Line_16 $$ final int dataSize = 1 << 16[ CD ]
Line_2 $$ public void testLightWeightCache() -->Line_4 $$ final long creationExpiration = ran.nextInt(1024) + 1[ CD ]
Line_4 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_6 $$ check(17, creationExpiration, 0L, 1 << 16, 17)[ FD ]
Line_18 $$ final int modulus = ran.nextInt(1024) + 1-->Line_19 $$ final int sizeLimit = ran.nextInt(modulus) + 1[ FD ]
Line_18 $$ final int modulus = ran.nextInt(1024) + 1-->Line_20 $$ checkSizeLimit(sizeLimit, dataSize, modulus)[ FD ]
Line_9 $$ for (int i = 0; i < 3; i++) -->Line_17 $$ for (int i = 0; i < 10; i++) [ FD ]
Line_16 $$ final int dataSize = 1 << 16-->Line_20 $$ checkSizeLimit(sizeLimit, dataSize, modulus)[ FD ]
Line_17 $$ for (int i = 0; i < 10; i++) -->Line_19 $$ final int sizeLimit = ran.nextInt(modulus) + 1[ CD ]
Line_17 $$ for (int i = 0; i < 10; i++) -->Line_18 $$ final int modulus = ran.nextInt(1024) + 1[ CD ]
Line_2 $$ public void testLightWeightCache() -->Line_5 $$ check(1, creationExpiration, 0L, 1 << 10, 65537)[ CD ]
Line_4 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_7 $$ check(255, creationExpiration, 0L, 1 << 16, 65537)[ FD ]
Line_2 $$ public void testLightWeightCache() -->Line_7 $$ check(255, creationExpiration, 0L, 1 << 16, 65537)[ CD ]
Line_19 $$ final int sizeLimit = ran.nextInt(modulus) + 1-->Line_20 $$ checkSizeLimit(sizeLimit, dataSize, modulus)[ FD ]
Line_10 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_14 $$ check(255, creationExpiration, accessExpiration, 1 << 16, 65537)[ FD ]
Line_9 $$ for (int i = 0; i < 3; i++) -->Line_12 $$ check(1, creationExpiration, accessExpiration, 1 << 10, 65537)[ CD ]
Line_4 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_13 $$ check(17, creationExpiration, accessExpiration, 1 << 16, 17)[ FD ]
Line_11 $$ final long accessExpiration = ran.nextInt(1024) + 1-->Line_13 $$ check(17, creationExpiration, accessExpiration, 1 << 16, 17)[ FD ]
Line_9 $$ for (int i = 0; i < 3; i++) -->Line_14 $$ check(255, creationExpiration, accessExpiration, 1 << 16, 65537)[ CD ]
Line_2 $$ public void testLightWeightCache() -->Line_6 $$ check(17, creationExpiration, 0L, 1 << 16, 17)[ CD ]
Line_17 $$ for (int i = 0; i < 10; i++) -->Line_20 $$ checkSizeLimit(sizeLimit, dataSize, modulus)[ CD ]
Line_2 $$ public void testLightWeightCache() -->Line_9 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_4 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_5 $$ check(1, creationExpiration, 0L, 1 << 10, 65537)[ FD ]
Line_9 $$ for (int i = 0; i < 3; i++) -->Line_11 $$ final long accessExpiration = ran.nextInt(1024) + 1[ CD ]
Line_11 $$ final long accessExpiration = ran.nextInt(1024) + 1-->Line_14 $$ check(255, creationExpiration, accessExpiration, 1 << 16, 65537)[ FD ]
Line_9 $$ for (int i = 0; i < 3; i++) -->Line_13 $$ check(17, creationExpiration, accessExpiration, 1 << 16, 17)[ CD ]
Line_10 $$ final long creationExpiration = ran.nextInt(1024) + 1-->Line_13 $$ check(17, creationExpiration, accessExpiration, 1 << 16, 17)[ FD ]
Line_9 $$ for (int i = 0; i < 3; i++) -->Line_10 $$ final long creationExpiration = ran.nextInt(1024) + 1[ CD ]
Line_11 $$ final long accessExpiration = ran.nextInt(1024) + 1-->Line_12 $$ check(1, creationExpiration, accessExpiration, 1 << 10, 65537)[ FD ]
