Line_4 $$ int MAX_LIST_SIZE = 50-->Line_12 $$ RangeTombstoneList l2 = makeRandom(rand, rand.nextInt(MAX_LIST_SIZE) + 1, rand.nextInt(MAX_IT_SIZE) + 1, rand.nextInt(MAX_IT_DISTANCE) + 1, rand.nextInt(MAX_MARKEDAT) + 1)[ FD ]
Line_5 $$ int MAX_IT_SIZE = 20-->Line_12 $$ RangeTombstoneList l2 = makeRandom(rand, rand.nextInt(MAX_LIST_SIZE) + 1, rand.nextInt(MAX_IT_SIZE) + 1, rand.nextInt(MAX_IT_DISTANCE) + 1, rand.nextInt(MAX_MARKEDAT) + 1)[ FD ]
Line_11 $$ RangeTombstoneList l1 = makeRandom(rand, rand.nextInt(MAX_LIST_SIZE) + 1, rand.nextInt(MAX_IT_SIZE) + 1, rand.nextInt(MAX_IT_DISTANCE) + 1, rand.nextInt(MAX_MARKEDAT) + 1)-->Line_13 $$ RangeTombstoneList l1Initial = l1.copy()[ FD ]
Line_2 $$ public void addAllRandomTest() throws Throwable -->Line_7 $$ int MAX_MARKEDAT = 10[ CD ]
Line_2 $$ public void addAllRandomTest() throws Throwable -->Line_6 $$ int MAX_IT_DISTANCE = 10[ CD ]
Line_2 $$ public void addAllRandomTest() throws Throwable -->Line_5 $$ int MAX_IT_SIZE = 20[ CD ]
Line_11 $$ RangeTombstoneList l1 = makeRandom(rand, rand.nextInt(MAX_LIST_SIZE) + 1, rand.nextInt(MAX_IT_SIZE) + 1, rand.nextInt(MAX_IT_DISTANCE) + 1, rand.nextInt(MAX_MARKEDAT) + 1)-->Line_16 $$ assertValid(l1)[ FD ]
Line_9 $$ Random rand = new Random(seed)-->Line_11 $$ RangeTombstoneList l1 = makeRandom(rand, rand.nextInt(MAX_LIST_SIZE) + 1, rand.nextInt(MAX_IT_SIZE) + 1, rand.nextInt(MAX_IT_DISTANCE) + 1, rand.nextInt(MAX_MARKEDAT) + 1)[ FD ]
Line_2 $$ public void addAllRandomTest() throws Throwable -->Line_8 $$ long seed = System.nanoTime()[ CD ]
Line_12 $$ RangeTombstoneList l2 = makeRandom(rand, rand.nextInt(MAX_LIST_SIZE) + 1, rand.nextInt(MAX_IT_SIZE) + 1, rand.nextInt(MAX_IT_DISTANCE) + 1, rand.nextInt(MAX_MARKEDAT) + 1)-->Line_15 $$ l1.addAll(l2)[ FD ]
Line_3 $$ int TEST_COUNT = 1000-->Line_10 $$ for (int i = 0; i < TEST_COUNT; i++) [ FD ]
Line_5 $$ int MAX_IT_SIZE = 20-->Line_11 $$ RangeTombstoneList l1 = makeRandom(rand, rand.nextInt(MAX_LIST_SIZE) + 1, rand.nextInt(MAX_IT_SIZE) + 1, rand.nextInt(MAX_IT_DISTANCE) + 1, rand.nextInt(MAX_MARKEDAT) + 1)[ FD ]
Line_10 $$ for (int i = 0; i < TEST_COUNT; i++) -->Line_11 $$ RangeTombstoneList l1 = makeRandom(rand, rand.nextInt(MAX_LIST_SIZE) + 1, rand.nextInt(MAX_IT_SIZE) + 1, rand.nextInt(MAX_IT_DISTANCE) + 1, rand.nextInt(MAX_MARKEDAT) + 1)[ CD ]
Line_10 $$ for (int i = 0; i < TEST_COUNT; i++) -->Line_13 $$ RangeTombstoneList l1Initial = l1.copy()[ CD ]
Line_2 $$ public void addAllRandomTest() throws Throwable -->Line_10 $$ for (int i = 0; i < TEST_COUNT; i++) [ CD ]
Line_10 $$ for (int i = 0; i < TEST_COUNT; i++) -->Line_12 $$ RangeTombstoneList l2 = makeRandom(rand, rand.nextInt(MAX_LIST_SIZE) + 1, rand.nextInt(MAX_IT_SIZE) + 1, rand.nextInt(MAX_IT_DISTANCE) + 1, rand.nextInt(MAX_MARKEDAT) + 1)[ CD ]
Line_9 $$ Random rand = new Random(seed)-->Line_12 $$ RangeTombstoneList l2 = makeRandom(rand, rand.nextInt(MAX_LIST_SIZE) + 1, rand.nextInt(MAX_IT_SIZE) + 1, rand.nextInt(MAX_IT_DISTANCE) + 1, rand.nextInt(MAX_MARKEDAT) + 1)[ FD ]
Line_7 $$ int MAX_MARKEDAT = 10-->Line_11 $$ RangeTombstoneList l1 = makeRandom(rand, rand.nextInt(MAX_LIST_SIZE) + 1, rand.nextInt(MAX_IT_SIZE) + 1, rand.nextInt(MAX_IT_DISTANCE) + 1, rand.nextInt(MAX_MARKEDAT) + 1)[ FD ]
Line_2 $$ public void addAllRandomTest() throws Throwable -->Line_4 $$ int MAX_LIST_SIZE = 50[ CD ]
Line_13 $$ RangeTombstoneList l1Initial = l1.copy()-->Line_19 $$ System.out.println(" l1: " + toString(l1Initial))[ FD ]
Line_7 $$ int MAX_MARKEDAT = 10-->Line_12 $$ RangeTombstoneList l2 = makeRandom(rand, rand.nextInt(MAX_LIST_SIZE) + 1, rand.nextInt(MAX_IT_SIZE) + 1, rand.nextInt(MAX_IT_DISTANCE) + 1, rand.nextInt(MAX_MARKEDAT) + 1)[ FD ]
Line_11 $$ RangeTombstoneList l1 = makeRandom(rand, rand.nextInt(MAX_LIST_SIZE) + 1, rand.nextInt(MAX_IT_SIZE) + 1, rand.nextInt(MAX_IT_DISTANCE) + 1, rand.nextInt(MAX_MARKEDAT) + 1)-->Line_15 $$ l1.addAll(l2)[ FD ]
Line_12 $$ RangeTombstoneList l2 = makeRandom(rand, rand.nextInt(MAX_LIST_SIZE) + 1, rand.nextInt(MAX_IT_SIZE) + 1, rand.nextInt(MAX_IT_DISTANCE) + 1, rand.nextInt(MAX_MARKEDAT) + 1)-->Line_20 $$ System.out.println(" l2: " + toString(l2))[ FD ]
Line_2 $$ public void addAllRandomTest() throws Throwable -->Line_3 $$ int TEST_COUNT = 1000[ CD ]
Line_2 $$ public void addAllRandomTest() throws Throwable -->Line_9 $$ Random rand = new Random(seed)[ CD ]
Line_6 $$ int MAX_IT_DISTANCE = 10-->Line_12 $$ RangeTombstoneList l2 = makeRandom(rand, rand.nextInt(MAX_LIST_SIZE) + 1, rand.nextInt(MAX_IT_SIZE) + 1, rand.nextInt(MAX_IT_DISTANCE) + 1, rand.nextInt(MAX_MARKEDAT) + 1)[ FD ]
Line_6 $$ int MAX_IT_DISTANCE = 10-->Line_11 $$ RangeTombstoneList l1 = makeRandom(rand, rand.nextInt(MAX_LIST_SIZE) + 1, rand.nextInt(MAX_IT_SIZE) + 1, rand.nextInt(MAX_IT_DISTANCE) + 1, rand.nextInt(MAX_MARKEDAT) + 1)[ FD ]
Line_4 $$ int MAX_LIST_SIZE = 50-->Line_11 $$ RangeTombstoneList l1 = makeRandom(rand, rand.nextInt(MAX_LIST_SIZE) + 1, rand.nextInt(MAX_IT_SIZE) + 1, rand.nextInt(MAX_IT_DISTANCE) + 1, rand.nextInt(MAX_MARKEDAT) + 1)[ FD ]
