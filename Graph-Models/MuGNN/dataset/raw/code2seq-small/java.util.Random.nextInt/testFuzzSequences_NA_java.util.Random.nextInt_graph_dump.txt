Line_2 $$ public void testFuzzSequences() throws IOException -->Line_4 $$ final int MAX_INVALID_SEQ = 5000[ CD ]
Line_6 $$ Random r = new Random(RANDOM_SEED)-->Line_8 $$ byte[] garbage = new byte[r.nextInt(MAX_GARBAGE_LENGTH)][ FD ]
Line_2 $$ public void testFuzzSequences() throws IOException -->Line_3 $$ final int MAX_GARBAGE_LENGTH = 512[ CD ]
Line_4 $$ final int MAX_INVALID_SEQ = 5000-->Line_7 $$ for (int i = 0; i < MAX_INVALID_SEQ; i++) [ FD ]
Line_7 $$ for (int i = 0; i < MAX_INVALID_SEQ; i++) -->Line_9 $$ r.nextBytes(garbage)[ CD ]
Line_8 $$ byte[] garbage = new byte[r.nextInt(MAX_GARBAGE_LENGTH)]-->Line_9 $$ r.nextBytes(garbage)[ FD ]
Line_2 $$ public void testFuzzSequences() throws IOException -->Line_5 $$ final int RANDOM_SEED = 123[ CD ]
Line_7 $$ for (int i = 0; i < MAX_INVALID_SEQ; i++) -->Line_8 $$ byte[] garbage = new byte[r.nextInt(MAX_GARBAGE_LENGTH)][ CD ]
Line_7 $$ for (int i = 0; i < MAX_INVALID_SEQ; i++) -->Line_10 $$ validateNoCrash(garbage)[ CD ]
Line_2 $$ public void testFuzzSequences() throws IOException -->Line_6 $$ Random r = new Random(RANDOM_SEED)[ CD ]
Line_3 $$ final int MAX_GARBAGE_LENGTH = 512-->Line_8 $$ byte[] garbage = new byte[r.nextInt(MAX_GARBAGE_LENGTH)][ FD ]
Line_2 $$ public void testFuzzSequences() throws IOException -->Line_7 $$ for (int i = 0; i < MAX_INVALID_SEQ; i++) [ CD ]
Line_6 $$ Random r = new Random(RANDOM_SEED)-->Line_9 $$ r.nextBytes(garbage)[ FD ]
Line_8 $$ byte[] garbage = new byte[r.nextInt(MAX_GARBAGE_LENGTH)]-->Line_10 $$ validateNoCrash(garbage)[ FD ]
