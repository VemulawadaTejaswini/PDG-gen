Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_13 $$ if (packet_len < 16)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_16 $$ if (useRandomPadding) [ CD ]
Line_4 $$ padd = 4-->Line_5 $$ if (padd > 64)[ FD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_42 $$ send_packet_header_buffer[3] = (byte) ((packet_len - 4))[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_6 $$ padd = 64[ FD ]
Line_3 $$ if (padd < 4)-->Line_4 $$ padd = 4[ CD ]
Line_5 $$ if (padd > 64)-->Line_6 $$ padd = 64[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_39 $$ send_packet_header_buffer[0] = (byte) ((packet_len - 4) >> 24)[ CD ]
Line_56 $$ if (log.isEnabled()) -->Line_57 $$ log.log(90, "Sent " + Packets.getMessageName(message[off] & 0xff) + " " + len + " bytes payload")[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_44 $$ cos.write(send_packet_header_buffer, 0, 5)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_3 $$ if (padd < 4)[ FD ]
Line_47 $$ if (send_mac != null) -->Line_48 $$ send_mac.initMac(send_seq_number)[ CD ]
Line_15 $$ int padd_len = packet_len - (5 + len)-->Line_17 $$ for (int i = 0; i < padd_len; i = i + 4) [ FD ]
Line_17 $$ for (int i = 0; i < padd_len; i = i + 4) -->Line_28 $$ send_padding_buffer[i + 2] = (byte) (r >> 16)[ CD ]
Line_11 $$ packet_len += (send_padd_blocksize - slack)-->Line_13 $$ if (packet_len < 16)[ FD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_10 $$ if (slack != 0) [ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_40 $$ send_packet_header_buffer[1] = (byte) ((packet_len - 4) >> 16)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_15 $$ int padd_len = packet_len - (5 + len)[ CD ]
Line_7 $$ int packet_len = 5 + len + padd-->Line_11 $$ packet_len += (send_padd_blocksize - slack)[ FD ]
Line_47 $$ if (send_mac != null) -->Line_53 $$ cos.writePlain(send_mac_buffer, 0, send_mac_buffer.length)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_45 $$ cos.write(message, off, len)[ CD ]
Line_15 $$ int padd_len = packet_len - (5 + len)-->Line_46 $$ cos.write(send_padding_buffer, 0, padd_len)[ FD ]
Line_16 $$ if (useRandomPadding) -->Line_17 $$ for (int i = 0; i < padd_len; i = i + 4) [ CD ]
Line_7 $$ int packet_len = 5 + len + padd-->Line_14 $$ packet_len = 16[ FD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_7 $$ int packet_len = 5 + len + padd[ CD ]
Line_11 $$ packet_len += (send_padd_blocksize - slack)-->Line_14 $$ packet_len = 16[ FD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_56 $$ if (log.isEnabled()) [ CD ]
Line_4 $$ padd = 4-->Line_6 $$ padd = 64[ FD ]
Line_10 $$ if (slack != 0) -->Line_11 $$ packet_len += (send_padd_blocksize - slack)[ CD ]
Line_3 $$ if (padd < 4)-->Line_5 $$ if (padd > 64)[ CD ]
Line_15 $$ int padd_len = packet_len - (5 + len)-->Line_51 $$ send_mac.update(send_padding_buffer, 0, padd_len)[ FD ]
Line_47 $$ if (send_mac != null) -->Line_51 $$ send_mac.update(send_padding_buffer, 0, padd_len)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_3 $$ if (padd < 4)[ CD ]
Line_47 $$ if (send_mac != null) -->Line_52 $$ send_mac.getMac(send_mac_buffer, 0)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_47 $$ if (send_mac != null) [ CD ]
Line_47 $$ if (send_mac != null) -->Line_50 $$ send_mac.update(message, off, len)[ CD ]
Line_17 $$ for (int i = 0; i < padd_len; i = i + 4) -->Line_29 $$ send_padding_buffer[i + 3] = (byte) (r >> 24)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_5 $$ if (padd > 64)[ FD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_55 $$ cos.flush()[ CD ]
Line_47 $$ if (send_mac != null) -->Line_49 $$ send_mac.update(send_packet_header_buffer, 0, 5)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_41 $$ send_packet_header_buffer[2] = (byte) ((packet_len - 4) >> 8)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_4 $$ padd = 4[ FD ]
Line_13 $$ if (packet_len < 16)-->Line_14 $$ packet_len = 16[ CD ]
Line_17 $$ for (int i = 0; i < padd_len; i = i + 4) -->Line_26 $$ send_padding_buffer[i] = (byte) r[ CD ]
Line_17 $$ for (int i = 0; i < padd_len; i = i + 4) -->Line_27 $$ send_padding_buffer[i + 1] = (byte) (r >> 8)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_50 $$ send_mac.update(message, off, len)[ FD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_43 $$ send_packet_header_buffer[4] = (byte) padd_len[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_45 $$ cos.write(message, off, len)[ FD ]
Line_7 $$ int packet_len = 5 + len + padd-->Line_13 $$ if (packet_len < 16)[ FD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_46 $$ cos.write(send_padding_buffer, 0, padd_len)[ CD ]
