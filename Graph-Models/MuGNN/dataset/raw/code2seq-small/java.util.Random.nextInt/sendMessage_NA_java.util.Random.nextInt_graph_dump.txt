Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_33 $$ cos.write(send_padding_buffer, 0, padd_len)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_32 $$ cos.write(message, off, len)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_5 $$ if (padd > 64)[ FD ]
Line_7 $$ int packet_len = 5 + len + padd-->Line_13 $$ packet_len = 16[ FD ]
Line_34 $$ if (send_mac != null) -->Line_40 $$ cos.writePlain(send_mac_buffer, 0, send_mac_buffer.length)[ CD ]
Line_34 $$ if (send_mac != null) -->Line_39 $$ send_mac.getMac(send_mac_buffer, 0)[ CD ]
Line_12 $$ if (packet_len < 16)-->Line_13 $$ packet_len = 16[ CD ]
Line_10 $$ packet_len += (send_padd_blocksize - slack)-->Line_12 $$ if (packet_len < 16)[ FD ]
Line_16 $$ for (int i = 0; i < padd_len; i = i + 4) -->Line_19 $$ send_padding_buffer[i + 1] = (byte) (r >> 8)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_3 $$ if (padd < 4)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_3 $$ if (padd < 4)[ FD ]
Line_7 $$ int packet_len = 5 + len + padd-->Line_12 $$ if (packet_len < 16)[ FD ]
Line_43 $$ if (log.isEnabled()) -->Line_44 $$ log.log(90, "Sent " + Packets.getMessageName(message[off] & 0xff) + " " + len + " bytes payload")[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_4 $$ padd = 4[ FD ]
Line_8 $$ int slack = packet_len % send_padd_blocksize-->Line_9 $$ if (slack != 0) [ FD ]
Line_15 $$ if (useRandomPadding) -->Line_16 $$ for (int i = 0; i < padd_len; i = i + 4) [ CD ]
Line_34 $$ if (send_mac != null) -->Line_38 $$ send_mac.update(send_padding_buffer, 0, padd_len)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_43 $$ if (log.isEnabled()) [ CD ]
Line_16 $$ for (int i = 0; i < padd_len; i = i + 4) -->Line_17 $$ int r = rnd.nextInt()[ CD ]
Line_14 $$ int padd_len = packet_len - (5 + len)-->Line_38 $$ send_mac.update(send_padding_buffer, 0, padd_len)[ FD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_29 $$ send_packet_header_buffer[3] = (byte) ((packet_len - 4))[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_6 $$ padd = 64[ FD ]
Line_14 $$ int padd_len = packet_len - (5 + len)-->Line_24 $$ for (int i = 0; i < padd_len; i++) send_padding_buffer[i] = 0[ FD ]
Line_4 $$ padd = 4-->Line_5 $$ if (padd > 64)[ FD ]
Line_16 $$ for (int i = 0; i < padd_len; i = i + 4) -->Line_18 $$ send_padding_buffer[i] = (byte) r[ CD ]
Line_14 $$ int padd_len = packet_len - (5 + len)-->Line_33 $$ cos.write(send_padding_buffer, 0, padd_len)[ FD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_9 $$ if (slack != 0) [ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_28 $$ send_packet_header_buffer[2] = (byte) ((packet_len - 4) >> 8)[ CD ]
Line_14 $$ int padd_len = packet_len - (5 + len)-->Line_16 $$ for (int i = 0; i < padd_len; i = i + 4) [ FD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_34 $$ if (send_mac != null) [ CD ]
Line_7 $$ int packet_len = 5 + len + padd-->Line_10 $$ packet_len += (send_padd_blocksize - slack)[ FD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_26 $$ send_packet_header_buffer[0] = (byte) ((packet_len - 4) >> 24)[ CD ]
Line_10 $$ packet_len += (send_padd_blocksize - slack)-->Line_13 $$ packet_len = 16[ FD ]
Line_3 $$ if (padd < 4)-->Line_5 $$ if (padd > 64)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_42 $$ cos.flush()[ CD ]
Line_4 $$ padd = 4-->Line_6 $$ padd = 64[ FD ]
Line_15 $$ if (useRandomPadding) -->Line_24 $$ for (int i = 0; i < padd_len; i++) send_padding_buffer[i] = 0[ CD ]
Line_34 $$ if (send_mac != null) -->Line_36 $$ send_mac.update(send_packet_header_buffer, 0, 5)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_30 $$ send_packet_header_buffer[4] = (byte) padd_len[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_7 $$ int packet_len = 5 + len + padd[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_14 $$ int padd_len = packet_len - (5 + len)[ CD ]
Line_5 $$ if (padd > 64)-->Line_6 $$ padd = 64[ CD ]
Line_16 $$ for (int i = 0; i < padd_len; i = i + 4) -->Line_20 $$ send_padding_buffer[i + 2] = (byte) (r >> 16)[ CD ]
Line_34 $$ if (send_mac != null) -->Line_37 $$ send_mac.update(message, off, len)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_15 $$ if (useRandomPadding) [ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_8 $$ int slack = packet_len % send_padd_blocksize[ CD ]
Line_16 $$ for (int i = 0; i < padd_len; i = i + 4) -->Line_24 $$ for (int i = 0; i < padd_len; i++) send_padding_buffer[i] = 0[ FD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_32 $$ cos.write(message, off, len)[ FD ]
Line_16 $$ for (int i = 0; i < padd_len; i = i + 4) -->Line_21 $$ send_padding_buffer[i + 3] = (byte) (r >> 24)[ CD ]
Line_34 $$ if (send_mac != null) -->Line_35 $$ send_mac.initMac(send_seq_number)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_27 $$ send_packet_header_buffer[1] = (byte) ((packet_len - 4) >> 16)[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_37 $$ send_mac.update(message, off, len)[ FD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_12 $$ if (packet_len < 16)[ CD ]
Line_9 $$ if (slack != 0) -->Line_10 $$ packet_len += (send_padd_blocksize - slack)[ CD ]
Line_3 $$ if (padd < 4)-->Line_4 $$ padd = 4[ CD ]
Line_2 $$ public void sendMessage(byte[] message, int off, int len, int padd) throws IOException -->Line_31 $$ cos.write(send_packet_header_buffer, 0, 5)[ CD ]
