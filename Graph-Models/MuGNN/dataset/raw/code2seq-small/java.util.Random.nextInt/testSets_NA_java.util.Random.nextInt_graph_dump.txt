Line_2 $$ public void testSets() -->Line_11 $$ testMergeIterator(reducer, lists)[ CD ]
Line_2 $$ public void testSets() -->Line_5 $$ Reducer<KeyedSet<Integer, UUID>, KeyedSet<Integer, UUID>> reducer = new Union<Integer, UUID>()[ CD ]
Line_6 $$ List<List<KeyedSet<Integer, UUID>>> lists = new NaturalListGenerator<KeyedSet<Integer, UUID>>(ITERATOR_COUNT, LIST_LENGTH) -->Line_8 $$ return new KeyedSet(r.nextInt(5 * LIST_LENGTH), UUIDGen.getTimeUUID())[ CD ]
Line_2 $$ public void testSets() -->Line_6 $$ List<List<KeyedSet<Integer, UUID>>> lists = new NaturalListGenerator<KeyedSet<Integer, UUID>>(ITERATOR_COUNT, LIST_LENGTH) [ CD ]
Line_2 $$ public void testSets() -->Line_3 $$ System.out.println("testSets")[ CD ]
Line_6 $$ List<List<KeyedSet<Integer, UUID>>> lists = new NaturalListGenerator<KeyedSet<Integer, UUID>>(ITERATOR_COUNT, LIST_LENGTH) -->Line_11 $$ testMergeIterator(reducer, lists)[ FD ]
Line_5 $$ Reducer<KeyedSet<Integer, UUID>, KeyedSet<Integer, UUID>> reducer = new Union<Integer, UUID>()-->Line_11 $$ testMergeIterator(reducer, lists)[ FD ]
Line_2 $$ public void testSets() -->Line_4 $$ final Random r = new Random()[ CD ]
Line_4 $$ final Random r = new Random()-->Line_8 $$ return new KeyedSet(r.nextInt(5 * LIST_LENGTH), UUIDGen.getTimeUUID())[ FD ]
