Line_6 $$ List<List<String>> lists = new NaturalListGenerator<String>(ITERATOR_COUNT, LIST_LENGTH) -->Line_12 $$ testMergeIterator(reducer, lists)[ FD ]
Line_6 $$ List<List<String>> lists = new NaturalListGenerator<String>(ITERATOR_COUNT, LIST_LENGTH) -->Line_9 $$ return "longish_prefix_" + (r.nextBoolean() ? r.nextInt(5 * LIST_LENGTH) : next++)[ CD ]
Line_2 $$ public void testCombinationStrings() -->Line_12 $$ testMergeIterator(reducer, lists)[ CD ]
Line_2 $$ public void testCombinationStrings() -->Line_4 $$ final Random r = new Random()[ CD ]
Line_5 $$ Reducer<String, Counted<String>> reducer = new Counter<String>()-->Line_12 $$ testMergeIterator(reducer, lists)[ FD ]
Line_4 $$ final Random r = new Random()-->Line_9 $$ return "longish_prefix_" + (r.nextBoolean() ? r.nextInt(5 * LIST_LENGTH) : next++)[ FD ]
Line_2 $$ public void testCombinationStrings() -->Line_6 $$ List<List<String>> lists = new NaturalListGenerator<String>(ITERATOR_COUNT, LIST_LENGTH) [ CD ]
Line_2 $$ public void testCombinationStrings() -->Line_5 $$ Reducer<String, Counted<String>> reducer = new Counter<String>()[ CD ]
Line_2 $$ public void testCombinationStrings() -->Line_3 $$ System.out.println("testCombinationStrings")[ CD ]
