Line_7 $$ File f = new File(System.getenv("TEMP") + File.separator + Integer.toString(new Random().nextInt()))-->Line_9 $$ f.deleteOnExit()[ FD ]
Line_10 $$ for (int i = 0; i < 5; i++) -->Line_17 $$ WindowsFailedSnapshotTracker.handleFailedSnapshot(new File(f, Integer.toString(i)))[ FD ]
Line_31 $$ File protectedFile = new File(protectedDir, ".safeFile")-->Line_36 $$ assert protectedFile.exists()[ FD ]
Line_29 $$ File protectedDir = new File(".safeDir")-->Line_30 $$ protectedDir.mkdir()[ FD ]
Line_10 $$ for (int i = 0; i < 5; i++) -->Line_11 $$ File subdir = new File(f, Integer.toString(i))[ CD ]
Line_26 $$ PrintWriter tempPrinter = new PrintWriter(new FileWriter(WindowsFailedSnapshotTracker.TODELETEFILE, true))-->Line_28 $$ tempPrinter.close()[ FD ]
Line_7 $$ File f = new File(System.getenv("TEMP") + File.separator + Integer.toString(new Random().nextInt()))-->Line_15 $$ checkTempFilePresence(f, true)[ FD ]
Line_10 $$ for (int i = 0; i < 5; i++) -->Line_11 $$ File subdir = new File(f, Integer.toString(i))[ FD ]
Line_7 $$ File f = new File(System.getenv("TEMP") + File.separator + Integer.toString(new Random().nextInt()))-->Line_23 $$ checkTempFilePresence(f, false)[ FD ]
Line_29 $$ File protectedDir = new File(".safeDir")-->Line_38 $$ protectedDir.delete()[ FD ]
Line_11 $$ File subdir = new File(f, Integer.toString(i))-->Line_12 $$ subdir.mkdir()[ FD ]
Line_29 $$ File protectedDir = new File(".safeDir")-->Line_35 $$ assert protectedDir.exists()[ FD ]
Line_29 $$ File protectedDir = new File(".safeDir")-->Line_33 $$ WindowsFailedSnapshotTracker.handleFailedSnapshot(protectedDir)[ FD ]
Line_7 $$ File f = new File(System.getenv("TEMP") + File.separator + Integer.toString(new Random().nextInt()))-->Line_8 $$ f.mkdir()[ FD ]
Line_10 $$ for (int i = 0; i < 5; i++) -->Line_12 $$ subdir.mkdir()[ CD ]
Line_31 $$ File protectedFile = new File(protectedDir, ".safeFile")-->Line_32 $$ protectedFile.createNewFile()[ FD ]
Line_31 $$ File protectedFile = new File(protectedDir, ".safeFile")-->Line_37 $$ protectedFile.delete()[ FD ]
Line_10 $$ for (int i = 0; i < 5; i++) -->Line_13 $$ for (int j = 0; j < 5; j++) new File(subdir, Integer.toString(j)).createNewFile()[ CD ]
Line_26 $$ PrintWriter tempPrinter = new PrintWriter(new FileWriter(WindowsFailedSnapshotTracker.TODELETEFILE, true))-->Line_27 $$ tempPrinter.println(".safeDir")[ FD ]
