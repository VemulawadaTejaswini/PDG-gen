Line_8 $$ ArrayList<Modification> mList = new ArrayList<Modification>()-->Line_50 $$ mList.add(appendNotClose)[ FD ]
Line_37 $$ Modification appendClose = new FileAppendClose(f, hdfs, BLOCKSIZE, appendNotClose)-->Line_51 $$ mList.add(appendClose)[ FD ]
Line_38 $$ Modification chmod = new FileChangePermission(node.fileList.get((node.nullFileIndex + 3) % node.fileList.size()), hdfs, genRandomPermission())-->Line_52 $$ mList.add(chmod)[ FD ]
Line_8 $$ ArrayList<Modification> mList = new ArrayList<Modification>()-->Line_58 $$ return mList.toArray(new Modification[mList.size()])[ FD ]
Line_8 $$ ArrayList<Modification> mList = new ArrayList<Modification>()-->Line_52 $$ mList.add(chmod)[ FD ]
Line_33 $$ Modification delete = new FileDeletion(node.fileList.get((node.nullFileIndex + 1) % node.fileList.size()), hdfs)-->Line_48 $$ mList.add(delete)[ FD ]
Line_8 $$ ArrayList<Modification> mList = new ArrayList<Modification>()-->Line_54 $$ mList.add(replication)[ FD ]
Line_9 $$ for (TestDirectoryTree.Node node : nodes) -->Line_12 $$ node.initFileList(hdfs, node.nodePath.getName(), BLOCKSIZE, REPLICATION, seed, 6)[ FD ]
Line_8 $$ ArrayList<Modification> mList = new ArrayList<Modification>()-->Line_51 $$ mList.add(appendClose)[ FD ]
Line_40 $$ Modification chown = new FileChown(node.fileList.get((node.nullFileIndex + 4) % node.fileList.size()), hdfs, userGroup[0], userGroup[1])-->Line_53 $$ mList.add(chown)[ FD ]
Line_36 $$ FileAppendNotClose appendNotClose = new FileAppendNotClose(f, hdfs, BLOCKSIZE)-->Line_50 $$ mList.add(appendNotClose)[ FD ]
Line_8 $$ ArrayList<Modification> mList = new ArrayList<Modification>()-->Line_56 $$ mList.add(dirRename)[ FD ]
Line_8 $$ ArrayList<Modification> mList = new ArrayList<Modification>()-->Line_48 $$ mList.add(delete)[ FD ]
Line_8 $$ ArrayList<Modification> mList = new ArrayList<Modification>()-->Line_47 $$ mList.add(create)[ FD ]
Line_8 $$ ArrayList<Modification> mList = new ArrayList<Modification>()-->Line_55 $$ mList.add(dirChange)[ FD ]
Line_35 $$ Modification append = new FileAppend(f, hdfs, BLOCKSIZE)-->Line_49 $$ mList.add(append)[ FD ]
Line_8 $$ ArrayList<Modification> mList = new ArrayList<Modification>()-->Line_53 $$ mList.add(chown)[ FD ]
Line_8 $$ ArrayList<Modification> mList = new ArrayList<Modification>()-->Line_49 $$ mList.add(append)[ FD ]
Line_41 $$ Modification replication = new FileChangeReplication(node.fileList.get((node.nullFileIndex + 5) % node.fileList.size()), hdfs, (short) (random.nextInt(REPLICATION) + 1))-->Line_54 $$ mList.add(replication)[ FD ]
Line_43 $$ Modification dirChange = new DirCreationOrDeletion(node.nodePath, hdfs, node, random.nextBoolean())-->Line_55 $$ mList.add(dirChange)[ FD ]
Line_46 $$ Modification dirRename = new DirRename(node.nodePath, hdfs, node, dstParent)-->Line_56 $$ mList.add(dirRename)[ FD ]
