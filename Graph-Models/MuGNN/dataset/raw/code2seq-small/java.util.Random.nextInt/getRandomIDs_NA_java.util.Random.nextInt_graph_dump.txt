Line_46 $$ String s = Integer.toString(upto++)-->Line_47 $$ return zeroPad.substring(zeroPad.length() - s.length()) + s[ FD ]
Line_3 $$ IDSource ids-->Line_10 $$ ids = new IDSource() [ FD ]
Line_4 $$ final Random random = getRandom()-->Line_72 $$ return Long.toString(random.nextLong() & 0x3ffffffffffffffL, radix)[ FD ]
Line_38 $$ if (VERBOSE) -->Line_39 $$ System.out.println("TEST: use zero-pad seuquential ids")[ CD ]
Line_2 $$ private IDSource getRandomIDs() -->Line_3 $$ IDSource ids[ CD ]
Line_17 $$ if (VERBOSE) -->Line_18 $$ System.out.println("TEST: use random realistic unicode ids")[ CD ]
Line_30 $$ ids = new IDSource() -->Line_33 $$ return Integer.toString(upto++)[ CD ]
Line_7 $$ if (VERBOSE) -->Line_8 $$ System.out.println("TEST: use random simple ids")[ CD ]
Line_4 $$ final Random random = getRandom()-->Line_67 $$ ids = new IDSource() [ FD ]
Line_41 $$ ids = new IDSource() -->Line_46 $$ String s = Integer.toString(upto++)[ CD ]
Line_55 $$ ids = new IDSource() -->Line_59 $$ return Long.toString(random.nextLong() & 0x3ffffffffffffffL, radix)[ CD ]
Line_2 $$ private IDSource getRandomIDs() -->Line_4 $$ final Random random = getRandom()[ CD ]
Line_4 $$ final Random random = getRandom()-->Line_22 $$ return TestUtil.randomRealisticUnicodeString(random)[ FD ]
Line_20 $$ ids = new IDSource() -->Line_22 $$ return TestUtil.randomRealisticUnicodeString(random)[ CD ]
Line_4 $$ final Random random = getRandom()-->Line_55 $$ ids = new IDSource() [ FD ]
Line_67 $$ ids = new IDSource() -->Line_72 $$ return Long.toString(random.nextLong() & 0x3ffffffffffffffL, radix)[ CD ]
Line_4 $$ final Random random = getRandom()-->Line_5 $$ switch(random.nextInt(6)) [ FD ]
Line_41 $$ ids = new IDSource() -->Line_47 $$ return zeroPad.substring(zeroPad.length() - s.length()) + s[ CD ]
Line_4 $$ final Random random = getRandom()-->Line_41 $$ ids = new IDSource() [ FD ]
Line_4 $$ final Random random = getRandom()-->Line_59 $$ return Long.toString(random.nextLong() & 0x3ffffffffffffffL, radix)[ FD ]
Line_27 $$ if (VERBOSE) -->Line_28 $$ System.out.println("TEST: use seuquential ids")[ CD ]
Line_10 $$ ids = new IDSource() -->Line_12 $$ return TestUtil.randomSimpleString(random)[ CD ]
Line_2 $$ private IDSource getRandomIDs() -->Line_79 $$ return ids[ CD ]
Line_4 $$ final Random random = getRandom()-->Line_12 $$ return TestUtil.randomSimpleString(random)[ FD ]
Line_64 $$ if (VERBOSE) -->Line_65 $$ System.out.println("TEST: use zero-pad random long ids")[ CD ]
Line_52 $$ if (VERBOSE) -->Line_53 $$ System.out.println("TEST: use random long ids")[ CD ]
