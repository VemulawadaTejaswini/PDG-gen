Line_27 $$ totalBytes += vlen-->Line_31 $$ reportStats(path, totalBytes)[ FD ]
Line_6 $$ BytesWritable value = new BytesWritable()-->Line_22 $$ fillBuffer(rng, value, valueBuffer, vlen)[ FD ]
Line_5 $$ BytesWritable key = new BytesWritable()-->Line_25 $$ appendable.append(key, value)[ FD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_30 $$ appendable.close()[ CD ]
Line_9 $$ Random rng = new Random(options.seed)-->Line_20 $$ int vlen = rng.nextInt(baseVlen) + baseVlen[ FD ]
Line_13 $$ for (long i = 0; true; ++i) -->Line_22 $$ fillBuffer(rng, value, valueBuffer, vlen)[ CD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_3 $$ int maxKlen = baseKlen * 2[ CD ]
Line_7 $$ byte[] keyBuffer = new byte[maxKlen]-->Line_21 $$ fillBuffer(rng, key, keyBuffer, klen)[ FD ]
Line_13 $$ for (long i = 0; true; ++i) -->Line_25 $$ appendable.append(key, value)[ CD ]
Line_13 $$ for (long i = 0; true; ++i) -->Line_23 $$ key.set(keyBuffer, 0, klen)[ CD ]
Line_19 $$ int klen = rng.nextInt(baseKlen) + baseKlen-->Line_23 $$ key.set(keyBuffer, 0, klen)[ FD ]
Line_6 $$ BytesWritable value = new BytesWritable()-->Line_24 $$ value.set(valueBuffer, 0, vlen)[ FD ]
Line_13 $$ for (long i = 0; true; ++i) -->Line_20 $$ int vlen = rng.nextInt(baseVlen) + baseVlen[ CD ]
Line_13 $$ for (long i = 0; true; ++i) -->Line_21 $$ fillBuffer(rng, key, keyBuffer, klen)[ CD ]
Line_26 $$ totalBytes += klen-->Line_31 $$ reportStats(path, totalBytes)[ FD ]
Line_10 $$ long totalBytes = 0-->Line_31 $$ reportStats(path, totalBytes)[ FD ]
Line_13 $$ for (long i = 0; true; ++i) -->Line_27 $$ totalBytes += vlen[ CD ]
Line_20 $$ int vlen = rng.nextInt(baseVlen) + baseVlen-->Line_27 $$ totalBytes += vlen[ FD ]
Line_19 $$ int klen = rng.nextInt(baseKlen) + baseKlen-->Line_26 $$ totalBytes += klen[ FD ]
Line_26 $$ totalBytes += klen-->Line_27 $$ totalBytes += vlen[ FD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_19 $$ int klen = rng.nextInt(baseKlen) + baseKlen[ FD ]
Line_9 $$ Random rng = new Random(options.seed)-->Line_21 $$ fillBuffer(rng, key, keyBuffer, klen)[ FD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_13 $$ for (long i = 0; true; ++i) [ CD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_15 $$ if (fs.getFileStatus(path).getLen() >= fileSize) [ FD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_9 $$ Random rng = new Random(options.seed)[ CD ]
Line_19 $$ int klen = rng.nextInt(baseKlen) + baseKlen-->Line_21 $$ fillBuffer(rng, key, keyBuffer, klen)[ FD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_20 $$ int vlen = rng.nextInt(baseVlen) + baseVlen[ FD ]
Line_5 $$ BytesWritable key = new BytesWritable()-->Line_21 $$ fillBuffer(rng, key, keyBuffer, klen)[ FD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_12 $$ startTime()[ CD ]
Line_9 $$ Random rng = new Random(options.seed)-->Line_22 $$ fillBuffer(rng, value, valueBuffer, vlen)[ FD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_25 $$ appendable.append(key, value)[ FD ]
Line_13 $$ for (long i = 0; true; ++i) -->Line_26 $$ totalBytes += klen[ CD ]
Line_9 $$ Random rng = new Random(options.seed)-->Line_19 $$ int klen = rng.nextInt(baseKlen) + baseKlen[ FD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_6 $$ BytesWritable value = new BytesWritable()[ CD ]
Line_5 $$ BytesWritable key = new BytesWritable()-->Line_23 $$ key.set(keyBuffer, 0, klen)[ FD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_5 $$ BytesWritable key = new BytesWritable()[ CD ]
Line_7 $$ byte[] keyBuffer = new byte[maxKlen]-->Line_23 $$ key.set(keyBuffer, 0, klen)[ FD ]
Line_13 $$ for (long i = 0; true; ++i) -->Line_24 $$ value.set(valueBuffer, 0, vlen)[ CD ]
Line_10 $$ long totalBytes = 0-->Line_26 $$ totalBytes += klen[ FD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_31 $$ reportStats(path, totalBytes)[ CD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_30 $$ appendable.close()[ FD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_31 $$ reportStats(path, totalBytes)[ FD ]
Line_10 $$ long totalBytes = 0-->Line_27 $$ totalBytes += vlen[ FD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_4 $$ int maxVlen = baseVlen * 2[ CD ]
Line_13 $$ for (long i = 0; true; ++i) -->Line_14 $$ if (i % 1000 == 0) [ CD ]
Line_8 $$ byte[] valueBuffer = new byte[maxVlen]-->Line_22 $$ fillBuffer(rng, value, valueBuffer, vlen)[ FD ]
Line_14 $$ if (i % 1000 == 0) -->Line_15 $$ if (fs.getFileStatus(path).getLen() >= fileSize) [ CD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_7 $$ byte[] keyBuffer = new byte[maxKlen][ CD ]
Line_8 $$ byte[] valueBuffer = new byte[maxVlen]-->Line_24 $$ value.set(valueBuffer, 0, vlen)[ FD ]
Line_20 $$ int vlen = rng.nextInt(baseVlen) + baseVlen-->Line_22 $$ fillBuffer(rng, value, valueBuffer, vlen)[ FD ]
Line_20 $$ int vlen = rng.nextInt(baseVlen) + baseVlen-->Line_24 $$ value.set(valueBuffer, 0, vlen)[ FD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_29 $$ stopTime()[ CD ]
Line_6 $$ BytesWritable value = new BytesWritable()-->Line_25 $$ appendable.append(key, value)[ FD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_11 $$ printlnWithTimestamp("Start writing: " + path.getName() + "...")[ CD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_8 $$ byte[] valueBuffer = new byte[maxVlen][ CD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_10 $$ long totalBytes = 0[ CD ]
Line_13 $$ for (long i = 0; true; ++i) -->Line_19 $$ int klen = rng.nextInt(baseKlen) + baseKlen[ CD ]
Line_2 $$ private void timeWrite(Path path, KVAppendable appendable, int baseKlen, int baseVlen, long fileSize) throws IOException -->Line_11 $$ printlnWithTimestamp("Start writing: " + path.getName() + "...")[ FD ]
