Line_11 $$ if (pages == null) -->Line_13 $$ Array<Rect> inputRects = new Array()[ CD ]
Line_35 $$ int x = 20, y = 20-->Line_53 $$ x += page.width + 20[ FD ]
Line_14 $$ for (int i = 0; i < 240; i++) -->Line_16 $$ rect.name = "rect" + i[ FD ]
Line_21 $$ for (int i = 0; i < 10; i++) -->Line_22 $$ Rect rect = new Rect()[ CD ]
Line_12 $$ Random random = new Random(1243)-->Line_18 $$ rect.width = 16 + random.nextInt(240)[ FD ]
Line_39 $$ for (int i = 0; i < page.outputRects.size; i++) -->Line_40 $$ Rect rect = page.outputRects.get(i)[ FD ]
Line_14 $$ for (int i = 0; i < 240; i++) -->Line_21 $$ for (int i = 0; i < 10; i++) [ FD ]
Line_35 $$ int x = 20, y = 20-->Line_51 $$ renderer.rect(x, y, page.width + settings.paddingX * 2, page.height + settings.paddingY * 2)[ FD ]
Line_14 $$ for (int i = 0; i < 240; i++) -->Line_16 $$ rect.name = "rect" + i[ CD ]
Line_14 $$ for (int i = 0; i < 240; i++) -->Line_17 $$ rect.height = 16 + random.nextInt(120)[ CD ]
Line_14 $$ for (int i = 0; i < 240; i++) -->Line_15 $$ Rect rect = new Rect()[ CD ]
Line_12 $$ Random random = new Random(1243)-->Line_17 $$ rect.height = 16 + random.nextInt(120)[ FD ]
Line_14 $$ for (int i = 0; i < 240; i++) -->Line_19 $$ inputRects.add(rect)[ CD ]
Line_46 $$ for (int i = 0; i < page.outputRects.size; i++) -->Line_47 $$ Rect rect = page.outputRects.get(i)[ FD ]
Line_11 $$ if (pages == null) -->Line_29 $$ pages = new MaxRectsPacker(settings).pack(inputRects)[ CD ]
Line_11 $$ if (pages == null) -->Line_32 $$ System.out.println((e - s) / 1e6f + " ms")[ CD ]
Line_21 $$ for (int i = 0; i < 10; i++) -->Line_47 $$ Rect rect = page.outputRects.get(i)[ FD ]
Line_21 $$ for (int i = 0; i < 10; i++) -->Line_25 $$ rect.width = 1 + random.nextInt(10)[ CD ]
Line_46 $$ for (int i = 0; i < page.outputRects.size; i++) -->Line_47 $$ Rect rect = page.outputRects.get(i)[ CD ]
Line_2 $$ public void render() -->Line_6 $$ settings.pot = false[ CD ]
Line_21 $$ for (int i = 0; i < 10; i++) -->Line_24 $$ rect.height = 400 + random.nextInt(340)[ CD ]
Line_15 $$ Rect rect = new Rect()-->Line_26 $$ inputRects.add(rect)[ FD ]
Line_13 $$ Array<Rect> inputRects = new Array()-->Line_26 $$ inputRects.add(rect)[ FD ]
Line_22 $$ Rect rect = new Rect()-->Line_26 $$ inputRects.add(rect)[ FD ]
Line_21 $$ for (int i = 0; i < 10; i++) -->Line_40 $$ Rect rect = page.outputRects.get(i)[ FD ]
Line_39 $$ for (int i = 0; i < page.outputRects.size; i++) -->Line_41 $$ renderer.rect(x + rect.x + settings.paddingX, y + rect.y + settings.paddingY, rect.width - settings.paddingX, rect.height - settings.paddingY)[ CD ]
Line_13 $$ Array<Rect> inputRects = new Array()-->Line_19 $$ inputRects.add(rect)[ FD ]
Line_21 $$ for (int i = 0; i < 10; i++) -->Line_23 $$ rect.name = "rect" + (40 + i)[ CD ]
Line_21 $$ for (int i = 0; i < 10; i++) -->Line_26 $$ inputRects.add(rect)[ CD ]
Line_2 $$ public void render() -->Line_5 $$ settings.fast = false[ CD ]
Line_11 $$ if (pages == null) -->Line_12 $$ Random random = new Random(1243)[ CD ]
Line_2 $$ public void render() -->Line_4 $$ Settings settings = new Settings()[ CD ]
Line_2 $$ public void render() -->Line_7 $$ settings.maxWidth = 1024[ CD ]
Line_21 $$ for (int i = 0; i < 10; i++) -->Line_39 $$ for (int i = 0; i < page.outputRects.size; i++) [ FD ]
Line_2 $$ public void render() -->Line_3 $$ Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT)[ CD ]
Line_12 $$ Random random = new Random(1243)-->Line_25 $$ rect.width = 1 + random.nextInt(10)[ FD ]
Line_11 $$ if (pages == null) -->Line_28 $$ long s = System.nanoTime()[ CD ]
Line_39 $$ for (int i = 0; i < page.outputRects.size; i++) -->Line_40 $$ Rect rect = page.outputRects.get(i)[ CD ]
Line_2 $$ public void render() -->Line_8 $$ settings.maxHeight = 1024[ CD ]
Line_21 $$ for (int i = 0; i < 10; i++) -->Line_46 $$ for (int i = 0; i < page.outputRects.size; i++) [ FD ]
Line_14 $$ for (int i = 0; i < 240; i++) -->Line_39 $$ for (int i = 0; i < page.outputRects.size; i++) [ FD ]
Line_11 $$ if (pages == null) -->Line_31 $$ System.out.println("fast: " + settings.fast)[ CD ]
Line_2 $$ public void render() -->Line_35 $$ int x = 20, y = 20[ CD ]
Line_39 $$ for (int i = 0; i < page.outputRects.size; i++) -->Line_47 $$ Rect rect = page.outputRects.get(i)[ FD ]
Line_2 $$ public void render() -->Line_11 $$ if (pages == null) [ CD ]
Line_14 $$ for (int i = 0; i < 240; i++) -->Line_40 $$ Rect rect = page.outputRects.get(i)[ FD ]
Line_2 $$ public void render() -->Line_9 $$ settings.rotation = false[ CD ]
Line_39 $$ for (int i = 0; i < page.outputRects.size; i++) -->Line_46 $$ for (int i = 0; i < page.outputRects.size; i++) [ FD ]
Line_11 $$ if (pages == null) -->Line_33 $$ System.out.println()[ CD ]
Line_14 $$ for (int i = 0; i < 240; i++) -->Line_47 $$ Rect rect = page.outputRects.get(i)[ FD ]
Line_11 $$ if (pages == null) -->Line_14 $$ for (int i = 0; i < 240; i++) [ CD ]
Line_2 $$ public void render() -->Line_10 $$ settings.paddingX = 0[ CD ]
Line_14 $$ for (int i = 0; i < 240; i++) -->Line_18 $$ rect.width = 16 + random.nextInt(240)[ CD ]
Line_46 $$ for (int i = 0; i < page.outputRects.size; i++) -->Line_48 $$ renderer.rect(x + rect.x + settings.paddingX, y + rect.y + settings.paddingY, rect.width - settings.paddingX, rect.height - settings.paddingY)[ CD ]
Line_11 $$ if (pages == null) -->Line_21 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_12 $$ Random random = new Random(1243)-->Line_24 $$ rect.height = 400 + random.nextInt(340)[ FD ]
Line_13 $$ Array<Rect> inputRects = new Array()-->Line_29 $$ pages = new MaxRectsPacker(settings).pack(inputRects)[ FD ]
Line_11 $$ if (pages == null) -->Line_30 $$ long e = System.nanoTime()[ CD ]
Line_14 $$ for (int i = 0; i < 240; i++) -->Line_46 $$ for (int i = 0; i < page.outputRects.size; i++) [ FD ]
Line_15 $$ Rect rect = new Rect()-->Line_19 $$ inputRects.add(rect)[ FD ]
