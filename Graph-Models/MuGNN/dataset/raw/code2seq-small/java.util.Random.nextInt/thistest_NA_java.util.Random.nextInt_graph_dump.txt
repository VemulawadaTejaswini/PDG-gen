Line_88 $$ if (count % 2 == 0) -->Line_95 $$ previous = blocks[idx][ CD ]
Line_39 $$ if (num % 3 == 1) -->Line_63 $$ byte[] buffer = new byte[length][ CD ]
Line_13 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(numDataNodes).build()-->Line_15 $$ FileSystem fs = cluster.getFileSystem()[ FD ]
Line_15 $$ FileSystem fs = cluster.getFileSystem()-->Line_117 $$ util.cleanup(fs, "/srcdat")[ FD ]
Line_31 $$ if (blocks[idx].getName().startsWith("blk_") && blocks[idx].getName().endsWith(".meta")) -->Line_32 $$ num++[ CD ]
Line_25 $$ File data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)-->Line_77 $$ assertTrue("data directory does not exist", data_dir.exists())[ FD ]
Line_81 $$ File previous = null-->Line_91 $$ assertTrue("Cannot corrupt meta file.", previous.renameTo(blocks[idx]))[ FD ]
Line_81 $$ File previous = null-->Line_92 $$ assertTrue("Cannot recreate empty meta file.", previous.createNewFile())[ FD ]
Line_93 $$ previous = null-->Line_92 $$ assertTrue("Cannot recreate empty meta file.", previous.createNewFile())[ FD ]
Line_39 $$ if (num % 3 == 1) -->Line_67 $$ file.close()[ CD ]
Line_30 $$ for (int idx = 0; idx < blocks.length; idx++) -->Line_31 $$ if (blocks[idx].getName().startsWith("blk_") && blocks[idx].getName().endsWith(".meta")) [ CD ]
Line_39 $$ if (num % 3 == 1) -->Line_45 $$ int newsize = random.nextInt((int) channel.size() / 2)[ CD ]
Line_44 $$ FileChannel channel = file.getChannel()-->Line_47 $$ channel.truncate(newsize)[ FD ]
Line_24 $$ String bpid = cluster.getNamesystem().getBlockPoolId()-->Line_76 $$ data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)[ FD ]
Line_39 $$ if (num % 3 == 1) -->Line_64 $$ random.nextBytes(buffer)[ CD ]
Line_31 $$ if (blocks[idx].getName().startsWith("blk_") && blocks[idx].getName().endsWith(".meta")) -->Line_33 $$ if (num % 3 == 0) [ CD ]
Line_25 $$ File data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)-->Line_27 $$ File[] blocks = data_dir.listFiles()[ FD ]
Line_88 $$ if (count % 2 == 0) -->Line_90 $$ assertTrue("Cannot remove file.", blocks[idx].delete())[ CD ]
Line_15 $$ FileSystem fs = cluster.getFileSystem()-->Line_17 $$ util.waitReplication(fs, "/srcdat", (short) 2)[ FD ]
Line_81 $$ File previous = null-->Line_95 $$ previous = blocks[idx][ FD ]
Line_15 $$ FileSystem fs = cluster.getFileSystem()-->Line_16 $$ util.createFiles(fs, "/srcdat", replFactor)[ FD ]
Line_44 $$ FileChannel channel = file.getChannel()-->Line_45 $$ int newsize = random.nextInt((int) channel.size() / 2)[ FD ]
Line_95 $$ previous = blocks[idx]-->Line_89 $$ System.out.println("Deliberately insertimg bad crc into files " + blocks[idx].getName() + " " + previous.getName())[ FD ]
Line_39 $$ if (num % 3 == 1) -->Line_47 $$ channel.truncate(newsize)[ CD ]
Line_93 $$ previous = null-->Line_91 $$ assertTrue("Cannot corrupt meta file.", previous.renameTo(blocks[idx]))[ FD ]
Line_60 $$ position = (long) random.nextInt((int) channel.size())-->Line_65 $$ channel.write(ByteBuffer.wrap(buffer), position)[ FD ]
Line_13 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(numDataNodes).build()-->Line_120 $$ cluster.shutdown()[ FD ]
Line_88 $$ if (count % 2 == 0) -->Line_89 $$ System.out.println("Deliberately insertimg bad crc into files " + blocks[idx].getName() + " " + previous.getName())[ CD ]
Line_13 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(numDataNodes).build()-->Line_119 $$ if (cluster != null) [ FD ]
Line_88 $$ if (count % 2 == 0) -->Line_91 $$ assertTrue("Cannot corrupt meta file.", previous.renameTo(blocks[idx]))[ CD ]
Line_39 $$ if (num % 3 == 1) -->Line_55 $$ long position = 0[ CD ]
Line_6 $$ MiniDFSCluster cluster = null-->Line_119 $$ if (cluster != null) [ FD ]
Line_93 $$ previous = null-->Line_95 $$ previous = blocks[idx][ FD ]
Line_93 $$ previous = null-->Line_89 $$ System.out.println("Deliberately insertimg bad crc into files " + blocks[idx].getName() + " " + previous.getName())[ FD ]
Line_29 $$ int num = 0-->Line_32 $$ num++[ FD ]
Line_9 $$ Random random = new Random()-->Line_60 $$ position = (long) random.nextInt((int) channel.size())[ FD ]
Line_76 $$ data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)-->Line_78 $$ blocks = data_dir.listFiles()[ FD ]
Line_33 $$ if (num % 3 == 0) -->Line_39 $$ if (num % 3 == 1) [ CD ]
Line_119 $$ if (cluster != null) -->Line_120 $$ cluster.shutdown()[ CD ]
Line_63 $$ byte[] buffer = new byte[length]-->Line_64 $$ random.nextBytes(buffer)[ FD ]
Line_9 $$ Random random = new Random()-->Line_64 $$ random.nextBytes(buffer)[ FD ]
Line_13 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(numDataNodes).build()-->Line_14 $$ cluster.waitActive()[ FD ]
Line_25 $$ File data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)-->Line_26 $$ assertTrue("data directory does not exist", data_dir.exists())[ FD ]
Line_55 $$ long position = 0-->Line_60 $$ position = (long) random.nextInt((int) channel.size())[ FD ]
Line_13 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(numDataNodes).build()-->Line_24 $$ String bpid = cluster.getNamesystem().getBlockPoolId()[ FD ]
Line_95 $$ previous = blocks[idx]-->Line_92 $$ assertTrue("Cannot recreate empty meta file.", previous.createNewFile())[ FD ]
Line_39 $$ if (num % 3 == 1) -->Line_46 $$ System.out.println("Deliberately truncating file " + blocks[idx].getName() + " to size " + newsize + " bytes.")[ CD ]
Line_81 $$ File previous = null-->Line_93 $$ previous = null[ FD ]
Line_39 $$ if (num % 3 == 1) -->Line_48 $$ file.close()[ CD ]
Line_25 $$ File data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)-->Line_78 $$ blocks = data_dir.listFiles()[ FD ]
Line_63 $$ byte[] buffer = new byte[length]-->Line_65 $$ channel.write(ByteBuffer.wrap(buffer), position)[ FD ]
Line_39 $$ if (num % 3 == 1) -->Line_65 $$ channel.write(ByteBuffer.wrap(buffer), position)[ CD ]
Line_24 $$ String bpid = cluster.getNamesystem().getBlockPoolId()-->Line_25 $$ File data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)[ FD ]
Line_44 $$ FileChannel channel = file.getChannel()-->Line_60 $$ position = (long) random.nextInt((int) channel.size())[ FD ]
Line_82 $$ for (int idx = 0; idx < blocks.length; idx++) -->Line_83 $$ if (blocks[idx].getName().startsWith("blk_") && blocks[idx].getName().endsWith(".meta")) [ CD ]
Line_9 $$ Random random = new Random()-->Line_62 $$ int length = random.nextInt((int) (channel.size() - position + 1))[ FD ]
Line_8 $$ short replFactor = 2-->Line_16 $$ util.createFiles(fs, "/srcdat", replFactor)[ FD ]
Line_30 $$ for (int idx = 0; idx < blocks.length; idx++) -->Line_82 $$ for (int idx = 0; idx < blocks.length; idx++) [ FD ]
Line_6 $$ MiniDFSCluster cluster = null-->Line_15 $$ FileSystem fs = cluster.getFileSystem()[ FD ]
Line_39 $$ if (num % 3 == 1) -->Line_54 $$ FileChannel channel = file.getChannel()[ CD ]
Line_39 $$ if (num % 3 == 1) -->Line_66 $$ System.out.println("Deliberately corrupting file " + blocks[idx].getName() + " at offset " + position + " length " + length)[ CD ]
Line_6 $$ MiniDFSCluster cluster = null-->Line_13 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(numDataNodes).build()[ FD ]
Line_88 $$ if (count % 2 == 0) -->Line_92 $$ assertTrue("Cannot recreate empty meta file.", previous.createNewFile())[ CD ]
Line_33 $$ if (num % 3 == 0) -->Line_38 $$ assertTrue("Cannot remove file.", blocks[idx].delete())[ CD ]
Line_76 $$ data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)-->Line_77 $$ assertTrue("data directory does not exist", data_dir.exists())[ FD ]
Line_39 $$ if (num % 3 == 1) -->Line_44 $$ FileChannel channel = file.getChannel()[ CD ]
Line_6 $$ MiniDFSCluster cluster = null-->Line_24 $$ String bpid = cluster.getNamesystem().getBlockPoolId()[ FD ]
Line_44 $$ FileChannel channel = file.getChannel()-->Line_65 $$ channel.write(ByteBuffer.wrap(buffer), position)[ FD ]
Line_6 $$ MiniDFSCluster cluster = null-->Line_14 $$ cluster.waitActive()[ FD ]
Line_39 $$ if (num % 3 == 1) -->Line_62 $$ int length = random.nextInt((int) (channel.size() - position + 1))[ CD ]
Line_45 $$ int newsize = random.nextInt((int) channel.size() / 2)-->Line_47 $$ channel.truncate(newsize)[ FD ]
Line_88 $$ if (count % 2 == 0) -->Line_93 $$ previous = null[ CD ]
Line_55 $$ long position = 0-->Line_65 $$ channel.write(ByteBuffer.wrap(buffer), position)[ FD ]
Line_83 $$ if (blocks[idx].getName().startsWith("blk_") && blocks[idx].getName().endsWith(".meta")) -->Line_88 $$ if (count % 2 == 0) [ CD ]
Line_95 $$ previous = blocks[idx]-->Line_91 $$ assertTrue("Cannot corrupt meta file.", previous.renameTo(blocks[idx]))[ FD ]
Line_9 $$ Random random = new Random()-->Line_45 $$ int newsize = random.nextInt((int) channel.size() / 2)[ FD ]
Line_27 $$ File[] blocks = data_dir.listFiles()-->Line_78 $$ blocks = data_dir.listFiles()[ FD ]
Line_44 $$ FileChannel channel = file.getChannel()-->Line_62 $$ int length = random.nextInt((int) (channel.size() - position + 1))[ FD ]
Line_25 $$ File data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)-->Line_76 $$ data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)[ FD ]
Line_81 $$ File previous = null-->Line_89 $$ System.out.println("Deliberately insertimg bad crc into files " + blocks[idx].getName() + " " + previous.getName())[ FD ]
Line_6 $$ MiniDFSCluster cluster = null-->Line_120 $$ cluster.shutdown()[ FD ]
Line_7 $$ int numDataNodes = 2-->Line_13 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(numDataNodes).build()[ FD ]
