Line_6 $$ final int fileSize = new Random().nextInt(1 << 20) + 1-->Line_12 $$ Assert.assertEquals(fileSize, summary.getLength())[ FD ]
Line_2 $$ public void testCreateFileAndMkdirs() throws IOException -->Line_5 $$ assertTrue(fileSys.mkdirs(test_dir))[ CD ]
Line_2 $$ public void testCreateFileAndMkdirs() throws IOException -->Line_14 $$ Path bad_dir = new Path(test_file, "another_dir")[ CD ]
Line_3 $$ Path test_dir = new Path(TEST_ROOT_DIR, "test_dir")-->Line_5 $$ assertTrue(fileSys.mkdirs(test_dir))[ FD ]
Line_2 $$ public void testCreateFileAndMkdirs() throws IOException -->Line_6 $$ final int fileSize = new Random().nextInt(1 << 20) + 1[ CD ]
Line_4 $$ Path test_file = new Path(test_dir, "file1")-->Line_7 $$ writeFile(fileSys, test_file, fileSize)[ FD ]
Line_4 $$ Path test_file = new Path(test_dir, "file1")-->Line_9 $$ final FileStatus status = fileSys.getFileStatus(test_file)[ FD ]
Line_6 $$ final int fileSize = new Random().nextInt(1 << 20) + 1-->Line_10 $$ Assert.assertEquals(fileSize, status.getLen())[ FD ]
Line_2 $$ public void testCreateFileAndMkdirs() throws IOException -->Line_10 $$ Assert.assertEquals(fileSize, status.getLen())[ CD ]
Line_2 $$ public void testCreateFileAndMkdirs() throws IOException -->Line_9 $$ final FileStatus status = fileSys.getFileStatus(test_file)[ CD ]
Line_2 $$ public void testCreateFileAndMkdirs() throws IOException -->Line_3 $$ Path test_dir = new Path(TEST_ROOT_DIR, "test_dir")[ CD ]
Line_2 $$ public void testCreateFileAndMkdirs() throws IOException -->Line_7 $$ writeFile(fileSys, test_file, fileSize)[ CD ]
Line_14 $$ Path bad_dir = new Path(test_file, "another_dir")-->Line_16 $$ fileSys.mkdirs(bad_dir)[ FD ]
Line_6 $$ final int fileSize = new Random().nextInt(1 << 20) + 1-->Line_7 $$ writeFile(fileSys, test_file, fileSize)[ FD ]
Line_11 $$ final ContentSummary summary = fileSys.getContentSummary(test_dir)-->Line_12 $$ Assert.assertEquals(fileSize, summary.getLength())[ FD ]
Line_3 $$ Path test_dir = new Path(TEST_ROOT_DIR, "test_dir")-->Line_11 $$ final ContentSummary summary = fileSys.getContentSummary(test_dir)[ FD ]
Line_2 $$ public void testCreateFileAndMkdirs() throws IOException -->Line_4 $$ Path test_file = new Path(test_dir, "file1")[ CD ]
Line_2 $$ public void testCreateFileAndMkdirs() throws IOException -->Line_12 $$ Assert.assertEquals(fileSize, summary.getLength())[ CD ]
Line_9 $$ final FileStatus status = fileSys.getFileStatus(test_file)-->Line_10 $$ Assert.assertEquals(fileSize, status.getLen())[ FD ]
Line_2 $$ public void testCreateFileAndMkdirs() throws IOException -->Line_11 $$ final ContentSummary summary = fileSys.getContentSummary(test_dir)[ CD ]
