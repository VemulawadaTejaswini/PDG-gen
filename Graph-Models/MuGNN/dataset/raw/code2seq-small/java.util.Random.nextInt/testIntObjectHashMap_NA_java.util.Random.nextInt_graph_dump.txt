Line_2 $$ public void testIntObjectHashMap() -->Line_33 $$ map.put(0, value)[ CD ]
Line_20 $$ dupesMap.forEachEntry(new TIntObjectProcedure<Object>() -->Line_27 $$ assertEquals(value, map.get(key))[ CD ]
Line_4 $$ final TIntObjectHashMap<Object> checkMap = new TIntObjectHashMap<Object>()-->Line_34 $$ checkMap.forEachEntry(new TIntObjectProcedure<Object>() [ FD ]
Line_34 $$ checkMap.forEachEntry(new TIntObjectProcedure<Object>() -->Line_38 $$ assertEquals(value, map.get(key))[ CD ]
Line_3 $$ final IntObjectHashMap map = new IntObjectHashMap()-->Line_42 $$ assertEquals(map.size(), checkMap.size())[ FD ]
Line_4 $$ final TIntObjectHashMap<Object> checkMap = new TIntObjectHashMap<Object>()-->Line_12 $$ checkMap.put(key, value)[ FD ]
Line_8 $$ int key = random.nextInt()-->Line_25 $$ map.put(key, value)[ FD ]
Line_2 $$ public void testIntObjectHashMap() -->Line_5 $$ final TIntObjectHashMap<Object> dupesMap = new TIntObjectHashMap<Object>()[ CD ]
Line_9 $$ String value = String.valueOf(random.nextInt())-->Line_11 $$ map.put(key, value)[ FD ]
Line_10 $$ if (!checkMap.contains(key)) -->Line_12 $$ checkMap.put(key, value)[ CD ]
Line_20 $$ dupesMap.forEachEntry(new TIntObjectProcedure<Object>() -->Line_28 $$ return true[ CD ]
Line_20 $$ dupesMap.forEachEntry(new TIntObjectProcedure<Object>() -->Line_24 $$ checkMap.put(key, value)[ CD ]
Line_8 $$ int key = random.nextInt()-->Line_38 $$ assertEquals(value, map.get(key))[ FD ]
Line_20 $$ dupesMap.forEachEntry(new TIntObjectProcedure<Object>() -->Line_25 $$ map.put(key, value)[ CD ]
Line_9 $$ String value = String.valueOf(random.nextInt())-->Line_25 $$ map.put(key, value)[ FD ]
Line_20 $$ dupesMap.forEachEntry(new TIntObjectProcedure<Object>() -->Line_33 $$ map.put(0, value)[ FD ]
Line_8 $$ int key = random.nextInt()-->Line_10 $$ if (!checkMap.contains(key)) [ FD ]
Line_7 $$ for (int i = 0; i < 1000000; ++i) -->Line_10 $$ if (!checkMap.contains(key)) [ CD ]
Line_10 $$ if (!checkMap.contains(key)) -->Line_11 $$ map.put(key, value)[ CD ]
Line_10 $$ if (!checkMap.contains(key)) -->Line_14 $$ assertEquals(value, map.get(key))[ CD ]
Line_3 $$ final IntObjectHashMap map = new IntObjectHashMap()-->Line_27 $$ assertEquals(value, map.get(key))[ FD ]
Line_2 $$ public void testIntObjectHashMap() -->Line_34 $$ checkMap.forEachEntry(new TIntObjectProcedure<Object>() [ CD ]
Line_3 $$ final IntObjectHashMap map = new IntObjectHashMap()-->Line_13 $$ assertEquals(map.size(), checkMap.size())[ FD ]
Line_20 $$ dupesMap.forEachEntry(new TIntObjectProcedure<Object>() -->Line_26 $$ assertEquals(map.size(), checkMap.size())[ CD ]
Line_9 $$ String value = String.valueOf(random.nextInt())-->Line_16 $$ dupesMap.put(key, value)[ FD ]
Line_3 $$ final IntObjectHashMap map = new IntObjectHashMap()-->Line_11 $$ map.put(key, value)[ FD ]
Line_9 $$ String value = String.valueOf(random.nextInt())-->Line_14 $$ assertEquals(value, map.get(key))[ FD ]
Line_9 $$ String value = String.valueOf(random.nextInt())-->Line_24 $$ checkMap.put(key, value)[ FD ]
Line_2 $$ public void testIntObjectHashMap() -->Line_3 $$ final IntObjectHashMap map = new IntObjectHashMap()[ CD ]
Line_3 $$ final IntObjectHashMap map = new IntObjectHashMap()-->Line_14 $$ assertEquals(value, map.get(key))[ FD ]
Line_20 $$ dupesMap.forEachEntry(new TIntObjectProcedure<Object>() -->Line_24 $$ checkMap.put(key, value)[ FD ]
Line_4 $$ final TIntObjectHashMap<Object> checkMap = new TIntObjectHashMap<Object>()-->Line_26 $$ assertEquals(map.size(), checkMap.size())[ FD ]
Line_6 $$ Random random = new Random()-->Line_8 $$ int key = random.nextInt()[ FD ]
Line_20 $$ dupesMap.forEachEntry(new TIntObjectProcedure<Object>() -->Line_38 $$ assertEquals(value, map.get(key))[ FD ]
Line_20 $$ dupesMap.forEachEntry(new TIntObjectProcedure<Object>() -->Line_32 $$ checkMap.put(0, value)[ FD ]
Line_4 $$ final TIntObjectHashMap<Object> checkMap = new TIntObjectHashMap<Object>()-->Line_42 $$ assertEquals(map.size(), checkMap.size())[ FD ]
Line_10 $$ if (!checkMap.contains(key)) -->Line_16 $$ dupesMap.put(key, value)[ CD ]
Line_2 $$ public void testIntObjectHashMap() -->Line_19 $$ dupesMap.put(0, "random string")[ CD ]
Line_9 $$ String value = String.valueOf(random.nextInt())-->Line_38 $$ assertEquals(value, map.get(key))[ FD ]
Line_9 $$ String value = String.valueOf(random.nextInt())-->Line_33 $$ map.put(0, value)[ FD ]
Line_3 $$ final IntObjectHashMap map = new IntObjectHashMap()-->Line_25 $$ map.put(key, value)[ FD ]
Line_3 $$ final IntObjectHashMap map = new IntObjectHashMap()-->Line_38 $$ assertEquals(value, map.get(key))[ FD ]
Line_5 $$ final TIntObjectHashMap<Object> dupesMap = new TIntObjectHashMap<Object>()-->Line_20 $$ dupesMap.forEachEntry(new TIntObjectProcedure<Object>() [ FD ]
Line_4 $$ final TIntObjectHashMap<Object> checkMap = new TIntObjectHashMap<Object>()-->Line_10 $$ if (!checkMap.contains(key)) [ FD ]
Line_6 $$ Random random = new Random()-->Line_9 $$ String value = String.valueOf(random.nextInt())[ FD ]
Line_20 $$ dupesMap.forEachEntry(new TIntObjectProcedure<Object>() -->Line_27 $$ assertEquals(value, map.get(key))[ FD ]
Line_4 $$ final TIntObjectHashMap<Object> checkMap = new TIntObjectHashMap<Object>()-->Line_13 $$ assertEquals(map.size(), checkMap.size())[ FD ]
Line_7 $$ for (int i = 0; i < 1000000; ++i) -->Line_9 $$ String value = String.valueOf(random.nextInt())[ CD ]
Line_2 $$ public void testIntObjectHashMap() -->Line_32 $$ checkMap.put(0, value)[ CD ]
Line_5 $$ final TIntObjectHashMap<Object> dupesMap = new TIntObjectHashMap<Object>()-->Line_16 $$ dupesMap.put(key, value)[ FD ]
Line_9 $$ String value = String.valueOf(random.nextInt())-->Line_12 $$ checkMap.put(key, value)[ FD ]
Line_10 $$ if (!checkMap.contains(key)) -->Line_13 $$ assertEquals(map.size(), checkMap.size())[ CD ]
Line_2 $$ public void testIntObjectHashMap() -->Line_20 $$ dupesMap.forEachEntry(new TIntObjectProcedure<Object>() [ CD ]
Line_2 $$ public void testIntObjectHashMap() -->Line_7 $$ for (int i = 0; i < 1000000; ++i) [ CD ]
Line_8 $$ int key = random.nextInt()-->Line_24 $$ checkMap.put(key, value)[ FD ]
Line_8 $$ int key = random.nextInt()-->Line_27 $$ assertEquals(value, map.get(key))[ FD ]
Line_2 $$ public void testIntObjectHashMap() -->Line_4 $$ final TIntObjectHashMap<Object> checkMap = new TIntObjectHashMap<Object>()[ CD ]
Line_8 $$ int key = random.nextInt()-->Line_14 $$ assertEquals(value, map.get(key))[ FD ]
Line_34 $$ checkMap.forEachEntry(new TIntObjectProcedure<Object>() -->Line_39 $$ return true[ CD ]
Line_2 $$ public void testIntObjectHashMap() -->Line_42 $$ assertEquals(map.size(), checkMap.size())[ CD ]
Line_20 $$ dupesMap.forEachEntry(new TIntObjectProcedure<Object>() -->Line_25 $$ map.put(key, value)[ FD ]
Line_9 $$ String value = String.valueOf(random.nextInt())-->Line_32 $$ checkMap.put(0, value)[ FD ]
Line_4 $$ final TIntObjectHashMap<Object> checkMap = new TIntObjectHashMap<Object>()-->Line_32 $$ checkMap.put(0, value)[ FD ]
Line_8 $$ int key = random.nextInt()-->Line_16 $$ dupesMap.put(key, value)[ FD ]
Line_8 $$ int key = random.nextInt()-->Line_11 $$ map.put(key, value)[ FD ]
Line_34 $$ checkMap.forEachEntry(new TIntObjectProcedure<Object>() -->Line_38 $$ assertEquals(value, map.get(key))[ FD ]
Line_4 $$ final TIntObjectHashMap<Object> checkMap = new TIntObjectHashMap<Object>()-->Line_24 $$ checkMap.put(key, value)[ FD ]
Line_5 $$ final TIntObjectHashMap<Object> dupesMap = new TIntObjectHashMap<Object>()-->Line_19 $$ dupesMap.put(0, "random string")[ FD ]
Line_3 $$ final IntObjectHashMap map = new IntObjectHashMap()-->Line_33 $$ map.put(0, value)[ FD ]
Line_7 $$ for (int i = 0; i < 1000000; ++i) -->Line_8 $$ int key = random.nextInt()[ CD ]
Line_2 $$ public void testIntObjectHashMap() -->Line_6 $$ Random random = new Random()[ CD ]
Line_8 $$ int key = random.nextInt()-->Line_12 $$ checkMap.put(key, value)[ FD ]
Line_9 $$ String value = String.valueOf(random.nextInt())-->Line_27 $$ assertEquals(value, map.get(key))[ FD ]
Line_3 $$ final IntObjectHashMap map = new IntObjectHashMap()-->Line_26 $$ assertEquals(map.size(), checkMap.size())[ FD ]
