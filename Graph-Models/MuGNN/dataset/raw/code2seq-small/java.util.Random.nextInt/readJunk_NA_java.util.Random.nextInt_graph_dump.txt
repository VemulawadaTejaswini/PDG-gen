Line_2 $$ private static void readJunk(DataInput in, Random r, long seed, int iter) throws IOException -->Line_3 $$ r.setSeed(seed)[ FD ]
Line_2 $$ private static void readJunk(DataInput in, Random r, long seed, int iter) throws IOException -->Line_4 $$ for (int i = 0; i < iter; ++i) [ CD ]
Line_2 $$ private static void readJunk(DataInput in, Random r, long seed, int iter) throws IOException -->Line_7 $$ assertEquals((byte) (r.nextInt() & 0xFF), in.readByte())[ FD ]
Line_2 $$ private static void readJunk(DataInput in, Random r, long seed, int iter) throws IOException -->Line_3 $$ r.setSeed(seed)[ CD ]
Line_2 $$ private static void readJunk(DataInput in, Random r, long seed, int iter) throws IOException -->Line_16 $$ assertEquals(r.nextLong(), in.readLong())[ FD ]
Line_2 $$ private static void readJunk(DataInput in, Random r, long seed, int iter) throws IOException -->Line_13 $$ assertEquals(r.nextInt(), in.readInt())[ FD ]
Line_2 $$ private static void readJunk(DataInput in, Random r, long seed, int iter) throws IOException -->Line_10 $$ assertEquals((short) (r.nextInt() & 0xFFFF), in.readShort())[ FD ]
Line_28 $$ byte[] b = new byte[len]-->Line_29 $$ in.readFully(b, 0, len)[ FD ]
Line_2 $$ private static void readJunk(DataInput in, Random r, long seed, int iter) throws IOException -->Line_22 $$ assertEquals(Float.floatToIntBits(r.nextFloat()), Float.floatToIntBits(in.readFloat()))[ FD ]
Line_2 $$ private static void readJunk(DataInput in, Random r, long seed, int iter) throws IOException -->Line_25 $$ int len = r.nextInt(1024)[ FD ]
Line_2 $$ private static void readJunk(DataInput in, Random r, long seed, int iter) throws IOException -->Line_29 $$ in.readFully(b, 0, len)[ FD ]
Line_2 $$ private static void readJunk(DataInput in, Random r, long seed, int iter) throws IOException -->Line_19 $$ assertEquals(Double.doubleToLongBits(r.nextDouble()), Double.doubleToLongBits(in.readDouble()))[ FD ]
Line_28 $$ byte[] b = new byte[len]-->Line_30 $$ assertArrayEquals(vb, b)[ FD ]
Line_2 $$ private static void readJunk(DataInput in, Random r, long seed, int iter) throws IOException -->Line_27 $$ r.nextBytes(vb)[ FD ]
Line_2 $$ private static void readJunk(DataInput in, Random r, long seed, int iter) throws IOException -->Line_5 $$ switch(r.nextInt(7)) [ FD ]
Line_26 $$ byte[] vb = new byte[len]-->Line_27 $$ r.nextBytes(vb)[ FD ]
Line_2 $$ private static void readJunk(DataInput in, Random r, long seed, int iter) throws IOException -->Line_4 $$ for (int i = 0; i < iter; ++i) [ FD ]
Line_26 $$ byte[] vb = new byte[len]-->Line_30 $$ assertArrayEquals(vb, b)[ FD ]
Line_25 $$ int len = r.nextInt(1024)-->Line_29 $$ in.readFully(b, 0, len)[ FD ]
