Line_11 $$ int id = RANDOM.nextInt(numEntities) + 1-->Line_17 $$ updatedIds.add(id)[ FD ]
Line_9 $$ Session s = sessionFactory.openSession()-->Line_10 $$ s.getTransaction().begin()[ FD ]
Line_7 $$ return withTx(tm, new Callable<Boolean>() -->Line_14 $$ family.setSecondName(newSecondName)[ CD ]
Line_7 $$ return withTx(tm, new Callable<Boolean>() -->Line_10 $$ s.getTransaction().begin()[ CD ]
Line_9 $$ Session s = sessionFactory.openSession()-->Line_15 $$ s.getTransaction().commit()[ FD ]
Line_7 $$ return withTx(tm, new Callable<Boolean>() -->Line_12 $$ Family family = (Family) s.load(Family.class, id)[ CD ]
Line_7 $$ return withTx(tm, new Callable<Boolean>() -->Line_18 $$ return true[ CD ]
Line_7 $$ return withTx(tm, new Callable<Boolean>() -->Line_13 $$ String newSecondName = "Arrizabalaga-" + run[ CD ]
Line_7 $$ return withTx(tm, new Callable<Boolean>() -->Line_9 $$ Session s = sessionFactory.openSession()[ CD ]
Line_12 $$ Family family = (Family) s.load(Family.class, id)-->Line_14 $$ family.setSecondName(newSecondName)[ FD ]
Line_9 $$ Session s = sessionFactory.openSession()-->Line_12 $$ Family family = (Family) s.load(Family.class, id)[ FD ]
Line_13 $$ String newSecondName = "Arrizabalaga-" + run-->Line_14 $$ family.setSecondName(newSecondName)[ FD ]
Line_9 $$ Session s = sessionFactory.openSession()-->Line_16 $$ s.close()[ FD ]
Line_2 $$ Operation updateOperation() -->Line_3 $$ return new Operation("UPDATE") [ CD ]
Line_7 $$ return withTx(tm, new Callable<Boolean>() -->Line_17 $$ updatedIds.add(id)[ CD ]
Line_7 $$ return withTx(tm, new Callable<Boolean>() -->Line_16 $$ s.close()[ CD ]
Line_11 $$ int id = RANDOM.nextInt(numEntities) + 1-->Line_12 $$ Family family = (Family) s.load(Family.class, id)[ FD ]
Line_7 $$ return withTx(tm, new Callable<Boolean>() -->Line_11 $$ int id = RANDOM.nextInt(numEntities) + 1[ CD ]
Line_7 $$ return withTx(tm, new Callable<Boolean>() -->Line_15 $$ s.getTransaction().commit()[ CD ]
Line_3 $$ return new Operation("UPDATE") -->Line_5 $$ return captureThrowables(new Callable<Boolean>() [ CD ]
Line_5 $$ return captureThrowables(new Callable<Boolean>() -->Line_7 $$ return withTx(tm, new Callable<Boolean>() [ CD ]
