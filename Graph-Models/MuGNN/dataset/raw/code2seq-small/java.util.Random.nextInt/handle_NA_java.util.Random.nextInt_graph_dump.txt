Line_3 $$ if (HttpMethod.GET == request.getMethod()) -->Line_5 $$ if (checkOrigin(request, response)) [ CD ]
Line_2 $$ public void handle(ServerHttpRequest request, ServerHttpResponse response) throws IOException -->Line_10 $$ if (HttpMethod.OPTIONS == request.getMethod()) [ FD ]
Line_7 $$ String content = String.format(INFO_CONTENT, random.nextInt(), isSessionCookieNeeded(), isWebSocketEnabled())-->Line_8 $$ response.getBody().write(content.getBytes())[ FD ]
Line_2 $$ public void handle(ServerHttpRequest request, ServerHttpResponse response) throws IOException -->Line_8 $$ response.getBody().write(content.getBytes())[ FD ]
Line_11 $$ if (checkOrigin(request, response)) -->Line_13 $$ response.setStatusCode(HttpStatus.NO_CONTENT)[ CD ]
Line_2 $$ public void handle(ServerHttpRequest request, ServerHttpResponse response) throws IOException -->Line_6 $$ response.getHeaders().setContentType(new MediaType("application", "json", UTF8_CHARSET))[ FD ]
Line_2 $$ public void handle(ServerHttpRequest request, ServerHttpResponse response) throws IOException -->Line_4 $$ addNoCacheHeaders(response)[ FD ]
Line_11 $$ if (checkOrigin(request, response)) -->Line_12 $$ addCacheHeaders(response)[ CD ]
Line_2 $$ public void handle(ServerHttpRequest request, ServerHttpResponse response) throws IOException -->Line_12 $$ addCacheHeaders(response)[ FD ]
Line_10 $$ if (HttpMethod.OPTIONS == request.getMethod()) -->Line_16 $$ sendMethodNotAllowed(response, HttpMethod.OPTIONS, HttpMethod.GET)[ CD ]
Line_3 $$ if (HttpMethod.GET == request.getMethod()) -->Line_4 $$ addNoCacheHeaders(response)[ CD ]
Line_5 $$ if (checkOrigin(request, response)) -->Line_8 $$ response.getBody().write(content.getBytes())[ CD ]
Line_2 $$ public void handle(ServerHttpRequest request, ServerHttpResponse response) throws IOException -->Line_11 $$ if (checkOrigin(request, response)) [ FD ]
Line_3 $$ if (HttpMethod.GET == request.getMethod()) -->Line_10 $$ if (HttpMethod.OPTIONS == request.getMethod()) [ CD ]
Line_2 $$ public void handle(ServerHttpRequest request, ServerHttpResponse response) throws IOException -->Line_13 $$ response.setStatusCode(HttpStatus.NO_CONTENT)[ FD ]
Line_2 $$ public void handle(ServerHttpRequest request, ServerHttpResponse response) throws IOException -->Line_3 $$ if (HttpMethod.GET == request.getMethod()) [ CD ]
Line_5 $$ if (checkOrigin(request, response)) -->Line_6 $$ response.getHeaders().setContentType(new MediaType("application", "json", UTF8_CHARSET))[ CD ]
Line_5 $$ if (checkOrigin(request, response)) -->Line_7 $$ String content = String.format(INFO_CONTENT, random.nextInt(), isSessionCookieNeeded(), isWebSocketEnabled())[ CD ]
Line_2 $$ public void handle(ServerHttpRequest request, ServerHttpResponse response) throws IOException -->Line_3 $$ if (HttpMethod.GET == request.getMethod()) [ FD ]
Line_2 $$ public void handle(ServerHttpRequest request, ServerHttpResponse response) throws IOException -->Line_16 $$ sendMethodNotAllowed(response, HttpMethod.OPTIONS, HttpMethod.GET)[ FD ]
Line_2 $$ public void handle(ServerHttpRequest request, ServerHttpResponse response) throws IOException -->Line_5 $$ if (checkOrigin(request, response)) [ FD ]
Line_10 $$ if (HttpMethod.OPTIONS == request.getMethod()) -->Line_11 $$ if (checkOrigin(request, response)) [ CD ]
