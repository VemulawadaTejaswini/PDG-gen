Line_3 $$ int size = Integer.MAX_VALUE / 4000-->Line_6 $$ randomBits.add(random.nextInt(size))[ FD ]
Line_7 $$ for (long randomBit : randomBits) bitset.set(randomBit)-->Line_10 $$ Assert.assertEquals(false, bitset.get(randomBit))[ FD ]
Line_7 $$ for (long randomBit : randomBits) bitset.set(randomBit)-->Line_8 $$ Assert.assertEquals(true, bitset.get(randomBit))[ FD ]
Line_2 $$ public void testBitClear() -->Line_3 $$ int size = Integer.MAX_VALUE / 4000[ CD ]
Line_4 $$ try (OffHeapBitSet bitset = new OffHeapBitSet(size)) -->Line_7 $$ bitset.set(randomBit)[ FD ]
Line_5 $$ List<Integer> randomBits = Lists.newArrayList()-->Line_6 $$ randomBits.add(random.nextInt(size))[ FD ]
Line_4 $$ try (OffHeapBitSet bitset = new OffHeapBitSet(size)) -->Line_8 $$ Assert.assertEquals(true, bitset.get(randomBit))[ FD ]
Line_7 $$ for (long randomBit : randomBits) bitset.set(randomBit)-->Line_9 $$ bitset.clear(randomBit)[ FD ]
Line_4 $$ try (OffHeapBitSet bitset = new OffHeapBitSet(size)) -->Line_10 $$ Assert.assertEquals(false, bitset.get(randomBit))[ FD ]
Line_4 $$ try (OffHeapBitSet bitset = new OffHeapBitSet(size)) -->Line_9 $$ bitset.clear(randomBit)[ FD ]
