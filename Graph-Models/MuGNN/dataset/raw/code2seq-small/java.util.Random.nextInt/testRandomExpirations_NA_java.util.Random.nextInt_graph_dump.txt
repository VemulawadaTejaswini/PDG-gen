Line_9 $$ int targetIdx = r.nextInt(2)-->Line_13 $$ LOG.info(String.format("Expiring session %x for svc %d", sessId, targetIdx))[ FD ]
Line_10 $$ ActiveStandbyElector target = cluster.getElector(targetIdx)-->Line_11 $$ long sessId = target.getZKSessionIdForTests()[ FD ]
Line_2 $$ public void testRandomExpirations() throws Exception -->Line_4 $$ long st = Time.now()[ CD ]
Line_2 $$ public void testRandomExpirations() throws Exception -->Line_5 $$ long runFor = STRESS_RUNTIME_SECS * 1000[ CD ]
Line_2 $$ public void testRandomExpirations() throws Exception -->Line_6 $$ Random r = new Random()[ CD ]
Line_7 $$ while (Time.now() - st < runFor) -->Line_8 $$ cluster.getTestContext().checkException()[ CD ]
Line_7 $$ while (Time.now() - st < runFor) -->Line_16 $$ Thread.sleep(r.nextInt(300))[ CD ]
Line_11 $$ long sessId = target.getZKSessionIdForTests()-->Line_12 $$ if (sessId != -1) [ FD ]
Line_6 $$ Random r = new Random()-->Line_16 $$ Thread.sleep(r.nextInt(300))[ FD ]
Line_6 $$ Random r = new Random()-->Line_9 $$ int targetIdx = r.nextInt(2)[ FD ]
Line_11 $$ long sessId = target.getZKSessionIdForTests()-->Line_14 $$ getServer(serverFactory).closeSession(sessId)[ FD ]
Line_11 $$ long sessId = target.getZKSessionIdForTests()-->Line_13 $$ LOG.info(String.format("Expiring session %x for svc %d", sessId, targetIdx))[ FD ]
Line_2 $$ public void testRandomExpirations() throws Exception -->Line_3 $$ cluster.start()[ CD ]
Line_7 $$ while (Time.now() - st < runFor) -->Line_9 $$ int targetIdx = r.nextInt(2)[ CD ]
Line_12 $$ if (sessId != -1) -->Line_14 $$ getServer(serverFactory).closeSession(sessId)[ CD ]
Line_7 $$ while (Time.now() - st < runFor) -->Line_10 $$ ActiveStandbyElector target = cluster.getElector(targetIdx)[ CD ]
Line_12 $$ if (sessId != -1) -->Line_13 $$ LOG.info(String.format("Expiring session %x for svc %d", sessId, targetIdx))[ CD ]
Line_7 $$ while (Time.now() - st < runFor) -->Line_11 $$ long sessId = target.getZKSessionIdForTests()[ CD ]
Line_2 $$ public void testRandomExpirations() throws Exception -->Line_7 $$ while (Time.now() - st < runFor) [ CD ]
Line_7 $$ while (Time.now() - st < runFor) -->Line_12 $$ if (sessId != -1) [ CD ]
Line_9 $$ int targetIdx = r.nextInt(2)-->Line_10 $$ ActiveStandbyElector target = cluster.getElector(targetIdx)[ FD ]
Line_5 $$ long runFor = STRESS_RUNTIME_SECS * 1000-->Line_7 $$ while (Time.now() - st < runFor) [ FD ]
