Line_11 $$ final int endOffset = random.nextInt(textLength + 1)-->Line_15 $$ foldingModel.addFoldRegion(Math.min(startOffset, endOffset), Math.max(startOffset, endOffset), ".")[ FD ]
Line_5 $$ if (document.isInBulkUpdate())-->Line_6 $$ return[ CD ]
Line_4 $$ DocumentEx document = ((EditorEx) editor).getDocument()-->Line_7 $$ int textLength = document.getTextLength()[ FD ]
Line_14 $$ final FoldingModel foldingModel = editor.getFoldingModel()-->Line_15 $$ foldingModel.runBatchFoldingOperation(() -> foldingModel.addFoldRegion(Math.min(startOffset, endOffset), Math.max(startOffset, endOffset), "."))[ FD ]
Line_7 $$ int textLength = document.getTextLength()-->Line_8 $$ if (textLength <= 0)[ FD ]
Line_14 $$ final FoldingModel foldingModel = editor.getFoldingModel()-->Line_15 $$ foldingModel.addFoldRegion(Math.min(startOffset, endOffset), Math.max(startOffset, endOffset), ".")[ FD ]
Line_11 $$ final int endOffset = random.nextInt(textLength + 1)-->Line_12 $$ if (startOffset == endOffset)[ FD ]
Line_12 $$ if (startOffset == endOffset)-->Line_13 $$ return[ CD ]
Line_4 $$ DocumentEx document = ((EditorEx) editor).getDocument()-->Line_5 $$ if (document.isInBulkUpdate())[ FD ]
Line_8 $$ if (textLength <= 0)-->Line_9 $$ return[ CD ]
Line_10 $$ final int startOffset = random.nextInt(textLength + 1)-->Line_12 $$ if (startOffset == endOffset)[ FD ]
Line_10 $$ final int startOffset = random.nextInt(textLength + 1)-->Line_15 $$ foldingModel.addFoldRegion(Math.min(startOffset, endOffset), Math.max(startOffset, endOffset), ".")[ FD ]
