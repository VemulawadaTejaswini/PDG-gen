Line_10 $$ final int endOffset = random.nextInt(textLength + 1)-->Line_14 $$ foldingModel.addFoldRegion(Math.min(startOffset, endOffset), Math.max(startOffset, endOffset), ".")[ FD ]
Line_10 $$ final int endOffset = random.nextInt(textLength + 1)-->Line_11 $$ if (startOffset == endOffset)[ FD ]
Line_2 $$ public void perform(final Editor editor, Random random) -->Line_10 $$ final int endOffset = random.nextInt(textLength + 1)[ FD ]
Line_2 $$ public void perform(final Editor editor, Random random) -->Line_13 $$ final FoldingModel foldingModel = editor.getFoldingModel()[ CD ]
Line_3 $$ DocumentEx document = ((EditorEx) editor).getDocument()-->Line_4 $$ if (document.isInBulkUpdate())[ FD ]
Line_9 $$ final int startOffset = random.nextInt(textLength + 1)-->Line_14 $$ foldingModel.addFoldRegion(Math.min(startOffset, endOffset), Math.max(startOffset, endOffset), ".")[ FD ]
Line_2 $$ public void perform(final Editor editor, Random random) -->Line_9 $$ final int startOffset = random.nextInt(textLength + 1)[ FD ]
Line_2 $$ public void perform(final Editor editor, Random random) -->Line_7 $$ if (textLength <= 0)[ CD ]
Line_2 $$ public void perform(final Editor editor, Random random) -->Line_13 $$ final FoldingModel foldingModel = editor.getFoldingModel()[ FD ]
Line_2 $$ public void perform(final Editor editor, Random random) -->Line_11 $$ if (startOffset == endOffset)[ CD ]
Line_2 $$ public void perform(final Editor editor, Random random) -->Line_9 $$ final int startOffset = random.nextInt(textLength + 1)[ CD ]
Line_4 $$ if (document.isInBulkUpdate())-->Line_5 $$ return[ CD ]
Line_2 $$ public void perform(final Editor editor, Random random) -->Line_10 $$ final int endOffset = random.nextInt(textLength + 1)[ CD ]
Line_6 $$ int textLength = document.getTextLength()-->Line_7 $$ if (textLength <= 0)[ FD ]
Line_2 $$ public void perform(final Editor editor, Random random) -->Line_3 $$ DocumentEx document = ((EditorEx) editor).getDocument()[ CD ]
Line_11 $$ if (startOffset == endOffset)-->Line_12 $$ return[ CD ]
Line_13 $$ final FoldingModel foldingModel = editor.getFoldingModel()-->Line_14 $$ foldingModel.addFoldRegion(Math.min(startOffset, endOffset), Math.max(startOffset, endOffset), ".")[ FD ]
Line_7 $$ if (textLength <= 0)-->Line_8 $$ return[ CD ]
Line_2 $$ public void perform(final Editor editor, Random random) -->Line_6 $$ int textLength = document.getTextLength()[ CD ]
Line_13 $$ final FoldingModel foldingModel = editor.getFoldingModel()-->Line_14 $$ foldingModel.runBatchFoldingOperation(() -> foldingModel.addFoldRegion(Math.min(startOffset, endOffset), Math.max(startOffset, endOffset), "."))[ FD ]
Line_3 $$ DocumentEx document = ((EditorEx) editor).getDocument()-->Line_6 $$ int textLength = document.getTextLength()[ FD ]
Line_9 $$ final int startOffset = random.nextInt(textLength + 1)-->Line_11 $$ if (startOffset == endOffset)[ FD ]
Line_2 $$ public void perform(final Editor editor, Random random) -->Line_14 $$ foldingModel.runBatchFoldingOperation(() -> foldingModel.addFoldRegion(Math.min(startOffset, endOffset), Math.max(startOffset, endOffset), "."))[ CD ]
Line_2 $$ public void perform(final Editor editor, Random random) -->Line_4 $$ if (document.isInBulkUpdate())[ CD ]
