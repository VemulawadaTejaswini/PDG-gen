Line_5 $$ Random rand = new Random(i)-->Line_6 $$ ApplicationId appId = ApplicationId.newInstance(0, rand.nextInt())[ FD ]
Line_6 $$ ApplicationId appId = ApplicationId.newInstance(0, rand.nextInt())-->Line_7 $$ appIds.add(appId)[ FD ]
Line_10 $$ for (int j = 1; j <= 10; ++j) -->Line_11 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, j)[ CD ]
Line_11 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, j)-->Line_15 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, k)[ FD ]
Line_14 $$ for (int k = 1; k <= 10; ++k) -->Line_16 $$ RMContainer container = createRMContainer(containerId)[ CD ]
Line_6 $$ ApplicationId appId = ApplicationId.newInstance(0, rand.nextInt())-->Line_11 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, j)[ FD ]
Line_16 $$ RMContainer container = createRMContainer(containerId)-->Line_18 $$ writer.containerFinished(container)[ FD ]
Line_4 $$ for (int i = 0; i < 10; ++i) -->Line_10 $$ for (int j = 1; j <= 10; ++j) [ CD ]
Line_2 $$ public void testParallelWrite() throws Exception -->Line_24 $$ for (int i = 0; i < MAX_RETRIES; ++i) [ CD ]
Line_12 $$ RMAppAttempt appAttempt = createRMAppAttempt(appAttemptId)-->Line_20 $$ writer.applicationAttemptFinished(appAttempt, RMAppAttemptState.FINISHED)[ FD ]
Line_11 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, j)-->Line_12 $$ RMAppAttempt appAttempt = createRMAppAttempt(appAttemptId)[ FD ]
Line_6 $$ ApplicationId appId = ApplicationId.newInstance(0, rand.nextInt())-->Line_33 $$ Assert.assertTrue(handledByOne(appId))[ FD ]
Line_4 $$ for (int i = 0; i < 10; ++i) -->Line_7 $$ appIds.add(appId)[ CD ]
Line_10 $$ for (int j = 1; j <= 10; ++j) -->Line_12 $$ RMAppAttempt appAttempt = createRMAppAttempt(appAttemptId)[ CD ]
Line_10 $$ for (int j = 1; j <= 10; ++j) -->Line_13 $$ writer.applicationAttemptStarted(appAttempt)[ CD ]
Line_3 $$ List<ApplicationId> appIds = new ArrayList<ApplicationId>()-->Line_7 $$ appIds.add(appId)[ FD ]
Line_6 $$ ApplicationId appId = ApplicationId.newInstance(0, rand.nextInt())-->Line_8 $$ RMApp app = createRMApp(appId)[ FD ]
Line_12 $$ RMAppAttempt appAttempt = createRMAppAttempt(appAttemptId)-->Line_13 $$ writer.applicationAttemptStarted(appAttempt)[ FD ]
Line_14 $$ for (int k = 1; k <= 10; ++k) -->Line_15 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, k)[ CD ]
Line_14 $$ for (int k = 1; k <= 10; ++k) -->Line_15 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, k)[ FD ]
Line_2 $$ public void testParallelWrite() throws Exception -->Line_4 $$ for (int i = 0; i < 10; ++i) [ CD ]
Line_15 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, k)-->Line_16 $$ RMContainer container = createRMContainer(containerId)[ FD ]
Line_14 $$ for (int k = 1; k <= 10; ++k) -->Line_18 $$ writer.containerFinished(container)[ CD ]
Line_4 $$ for (int i = 0; i < 10; ++i) -->Line_6 $$ ApplicationId appId = ApplicationId.newInstance(0, rand.nextInt())[ CD ]
Line_10 $$ for (int j = 1; j <= 10; ++j) -->Line_14 $$ for (int k = 1; k <= 10; ++k) [ CD ]
Line_10 $$ for (int j = 1; j <= 10; ++j) -->Line_20 $$ writer.applicationAttemptFinished(appAttempt, RMAppAttemptState.FINISHED)[ CD ]
Line_8 $$ RMApp app = createRMApp(appId)-->Line_9 $$ writer.applicationStarted(app)[ FD ]
Line_4 $$ for (int i = 0; i < 10; ++i) -->Line_24 $$ for (int i = 0; i < MAX_RETRIES; ++i) [ FD ]
Line_14 $$ for (int k = 1; k <= 10; ++k) -->Line_17 $$ writer.containerStarted(container)[ CD ]
Line_4 $$ for (int i = 0; i < 10; ++i) -->Line_22 $$ writer.applicationFinished(app, RMAppState.FINISHED)[ CD ]
Line_4 $$ for (int i = 0; i < 10; ++i) -->Line_8 $$ RMApp app = createRMApp(appId)[ CD ]
Line_8 $$ RMApp app = createRMApp(appId)-->Line_22 $$ writer.applicationFinished(app, RMAppState.FINISHED)[ FD ]
Line_2 $$ public void testParallelWrite() throws Exception -->Line_3 $$ List<ApplicationId> appIds = new ArrayList<ApplicationId>()[ CD ]
Line_10 $$ for (int j = 1; j <= 10; ++j) -->Line_11 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, j)[ FD ]
Line_24 $$ for (int i = 0; i < MAX_RETRIES; ++i) -->Line_25 $$ if (allEventsHandled(20 * 10 * 10 + 20 * 10 + 20)) [ CD ]
Line_16 $$ RMContainer container = createRMContainer(containerId)-->Line_17 $$ writer.containerStarted(container)[ FD ]
Line_25 $$ if (allEventsHandled(20 * 10 * 10 + 20 * 10 + 20)) -->Line_28 $$ Thread.sleep(500)[ CD ]
Line_4 $$ for (int i = 0; i < 10; ++i) -->Line_5 $$ Random rand = new Random(i)[ CD ]
Line_4 $$ for (int i = 0; i < 10; ++i) -->Line_9 $$ writer.applicationStarted(app)[ CD ]
Line_2 $$ public void testParallelWrite() throws Exception -->Line_31 $$ Assert.assertTrue(allEventsHandled(20 * 10 * 10 + 20 * 10 + 20))[ CD ]
Line_32 $$ for (ApplicationId appId : appIds) -->Line_33 $$ Assert.assertTrue(handledByOne(appId))[ FD ]
