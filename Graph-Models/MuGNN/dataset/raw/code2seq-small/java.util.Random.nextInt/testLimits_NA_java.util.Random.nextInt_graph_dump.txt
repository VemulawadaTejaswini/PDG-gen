Line_8 $$ final FileSystem fs = FileSystem.get(URI.create(nnUri), conf)-->Line_35 $$ ContentSummary summary = fs.getContentSummary(dstrootpath)[ FD ]
Line_8 $$ final FileSystem fs = FileSystem.get(URI.create(nnUri), conf)-->Line_69 $$ deldir(fs, dstrootdir)[ FD ]
Line_21 $$ String results = execCmd(shell, "-lsr", dstrootdir)-->Line_22 $$ results = removePrefix(results, dstrootdir)[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_6 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()[ FD ]
Line_62 $$ ContentSummary summary = fs.getContentSummary(dstrootpath)-->Line_64 $$ assertTrue(summary.getLength() - dstsize <= sizelimit)[ FD ]
Line_8 $$ final FileSystem fs = FileSystem.get(URI.create(nnUri), conf)-->Line_44 $$ final long totalsize = fs.getContentSummary(srcrootpath).getLength()[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_7 $$ final String nnUri = FileSystem.getDefaultUri(conf).toString()[ FD ]
Line_9 $$ final DistCpV1 distcp = new DistCpV1(conf)-->Line_58 $$ ToolRunner.run(distcp, args)[ FD ]
Line_35 $$ ContentSummary summary = fs.getContentSummary(dstrootpath)-->Line_37 $$ assertTrue(summary.getLength() <= sizelimit)[ FD ]
Line_8 $$ final FileSystem fs = FileSystem.get(URI.create(nnUri), conf)-->Line_27 $$ deldir(fs, srcrootdir)[ FD ]
Line_62 $$ ContentSummary summary = fs.getContentSummary(dstrootpath)-->Line_63 $$ System.out.println(i + ") summary.getLength()=" + summary.getLength())[ FD ]
Line_48 $$ final int parts = RAN.nextInt(NFILES / 3 - 1) + 2-->Line_57 $$ for (int i = 0; i <= parts; i++) [ FD ]
Line_57 $$ for (int i = 0; i <= parts; i++) -->Line_61 $$ assertTrue(dststat.length - dstfilecount <= filelimit)[ CD ]
Line_8 $$ final FileSystem fs = FileSystem.get(URI.create(nnUri), conf)-->Line_26 $$ deldir(fs, dstrootdir)[ FD ]
Line_13 $$ final String dstrootdir = "/dst_root"-->Line_59 $$ FileStatus[] dststat = getFileStatus(fs, dstrootdir, srcs, true)[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_74 $$ cluster.shutdown()[ FD ]
Line_55 $$ int dstfilecount = 0-->Line_66 $$ dstfilecount = dststat.length[ FD ]
Line_8 $$ final FileSystem fs = FileSystem.get(URI.create(nnUri), conf)-->Line_24 $$ FileStatus[] dststat = getFileStatus(fs, dstrootdir, files, true)[ FD ]
Line_13 $$ final String dstrootdir = "/dst_root"-->Line_69 $$ deldir(fs, dstrootdir)[ FD ]
Line_57 $$ for (int i = 0; i <= parts; i++) -->Line_65 $$ assertTrue(checkFiles(fs, dstrootdir, srcs, true))[ CD ]
Line_8 $$ final FileSystem fs = FileSystem.get(URI.create(nnUri), conf)-->Line_70 $$ deldir(fs, srcrootdir)[ FD ]
Line_13 $$ final String dstrootdir = "/dst_root"-->Line_24 $$ FileStatus[] dststat = getFileStatus(fs, dstrootdir, files, true)[ FD ]
Line_57 $$ for (int i = 0; i <= parts; i++) -->Line_59 $$ FileStatus[] dststat = getFileStatus(fs, dstrootdir, srcs, true)[ CD ]
Line_12 $$ final Path srcrootpath = new Path(srcrootdir)-->Line_32 $$ long sizelimit = fs.getContentSummary(srcrootpath).getLength() / 2[ FD ]
Line_2 $$ public void testLimits() throws Exception -->Line_4 $$ MiniDFSCluster cluster = null[ CD ]
Line_11 $$ final String srcrootdir = "/src_root"-->Line_39 $$ deldir(fs, srcrootdir)[ FD ]
Line_57 $$ for (int i = 0; i <= parts; i++) -->Line_58 $$ ToolRunner.run(distcp, args)[ CD ]
Line_8 $$ final FileSystem fs = FileSystem.get(URI.create(nnUri), conf)-->Line_39 $$ deldir(fs, srcrootdir)[ FD ]
Line_10 $$ final FsShell shell = new FsShell(conf)-->Line_21 $$ String results = execCmd(shell, "-lsr", dstrootdir)[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_8 $$ final FileSystem fs = FileSystem.get(URI.create(nnUri), conf)[ FD ]
Line_13 $$ final String dstrootdir = "/dst_root"-->Line_65 $$ assertTrue(checkFiles(fs, dstrootdir, srcs, true))[ FD ]
Line_11 $$ final String srcrootdir = "/src_root"-->Line_27 $$ deldir(fs, srcrootdir)[ FD ]
Line_13 $$ final String dstrootdir = "/dst_root"-->Line_22 $$ results = removePrefix(results, dstrootdir)[ FD ]
Line_9 $$ final DistCpV1 distcp = new DistCpV1(conf)-->Line_34 $$ ToolRunner.run(distcp, new String[] [ FD ]
Line_12 $$ final Path srcrootpath = new Path(srcrootdir)-->Line_44 $$ final long totalsize = fs.getContentSummary(srcrootpath).getLength()[ FD ]
Line_57 $$ for (int i = 0; i <= parts; i++) -->Line_60 $$ System.out.println(i + ") dststat.length=" + dststat.length)[ CD ]
Line_14 $$ final Path dstrootpath = new Path(dstrootdir)-->Line_35 $$ ContentSummary summary = fs.getContentSummary(dstrootpath)[ FD ]
Line_35 $$ ContentSummary summary = fs.getContentSummary(dstrootpath)-->Line_64 $$ assertTrue(summary.getLength() - dstsize <= sizelimit)[ FD ]
Line_13 $$ final String dstrootdir = "/dst_root"-->Line_26 $$ deldir(fs, dstrootdir)[ FD ]
Line_8 $$ final FileSystem fs = FileSystem.get(URI.create(nnUri), conf)-->Line_65 $$ assertTrue(checkFiles(fs, dstrootdir, srcs, true))[ FD ]
Line_8 $$ final FileSystem fs = FileSystem.get(URI.create(nnUri), conf)-->Line_47 $$ fs.mkdirs(dstrootpath)[ FD ]
Line_2 $$ public void testLimits() throws Exception -->Line_3 $$ Configuration conf = new Configuration()[ CD ]
Line_57 $$ for (int i = 0; i <= parts; i++) -->Line_64 $$ assertTrue(summary.getLength() - dstsize <= sizelimit)[ CD ]
Line_13 $$ final String dstrootdir = "/dst_root"-->Line_21 $$ String results = execCmd(shell, "-lsr", dstrootdir)[ FD ]
Line_62 $$ ContentSummary summary = fs.getContentSummary(dstrootpath)-->Line_67 $$ dstsize = summary.getLength()[ FD ]
Line_73 $$ if (cluster != null) -->Line_74 $$ cluster.shutdown()[ CD ]
Line_8 $$ final FileSystem fs = FileSystem.get(URI.create(nnUri), conf)-->Line_38 $$ deldir(fs, dstrootdir)[ FD ]
Line_57 $$ for (int i = 0; i <= parts; i++) -->Line_67 $$ dstsize = summary.getLength()[ CD ]
Line_7 $$ final String nnUri = FileSystem.getDefaultUri(conf).toString()-->Line_8 $$ final FileSystem fs = FileSystem.get(URI.create(nnUri), conf)[ FD ]
Line_57 $$ for (int i = 0; i <= parts; i++) -->Line_62 $$ ContentSummary summary = fs.getContentSummary(dstrootpath)[ CD ]
Line_57 $$ for (int i = 0; i <= parts; i++) -->Line_63 $$ System.out.println(i + ") summary.getLength()=" + summary.getLength())[ CD ]
Line_14 $$ final Path dstrootpath = new Path(dstrootdir)-->Line_47 $$ fs.mkdirs(dstrootpath)[ FD ]
Line_8 $$ final FileSystem fs = FileSystem.get(URI.create(nnUri), conf)-->Line_62 $$ ContentSummary summary = fs.getContentSummary(dstrootpath)[ FD ]
Line_35 $$ ContentSummary summary = fs.getContentSummary(dstrootpath)-->Line_67 $$ dstsize = summary.getLength()[ FD ]
Line_11 $$ final String srcrootdir = "/src_root"-->Line_70 $$ deldir(fs, srcrootdir)[ FD ]
Line_6 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_74 $$ cluster.shutdown()[ FD ]
Line_9 $$ final DistCpV1 distcp = new DistCpV1(conf)-->Line_20 $$ ToolRunner.run(distcp, new String[] [ FD ]
Line_18 $$ int filelimit = files.length / 2-->Line_25 $$ assertEquals(filelimit, dststat.length)[ FD ]
Line_6 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_73 $$ if (cluster != null) [ FD ]
Line_8 $$ final FileSystem fs = FileSystem.get(URI.create(nnUri), conf)-->Line_59 $$ FileStatus[] dststat = getFileStatus(fs, dstrootdir, srcs, true)[ FD ]
Line_57 $$ for (int i = 0; i <= parts; i++) -->Line_66 $$ dstfilecount = dststat.length[ CD ]
Line_35 $$ ContentSummary summary = fs.getContentSummary(dstrootpath)-->Line_63 $$ System.out.println(i + ") summary.getLength()=" + summary.getLength())[ FD ]
Line_14 $$ final Path dstrootpath = new Path(dstrootdir)-->Line_62 $$ ContentSummary summary = fs.getContentSummary(dstrootpath)[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_73 $$ if (cluster != null) [ FD ]
Line_56 $$ long dstsize = 0-->Line_67 $$ dstsize = summary.getLength()[ FD ]
Line_13 $$ final String dstrootdir = "/dst_root"-->Line_38 $$ deldir(fs, dstrootdir)[ FD ]
Line_8 $$ final FileSystem fs = FileSystem.get(URI.create(nnUri), conf)-->Line_32 $$ long sizelimit = fs.getContentSummary(srcrootpath).getLength() / 2[ FD ]
Line_54 $$ final String[] args = -->Line_58 $$ ToolRunner.run(distcp, args)[ FD ]
