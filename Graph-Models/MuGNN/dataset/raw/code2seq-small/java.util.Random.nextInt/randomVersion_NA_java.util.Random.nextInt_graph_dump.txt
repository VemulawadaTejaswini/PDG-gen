Line_5 $$ for (Field field : declaredFields) -->Line_6 $$ if ((field.getModifiers() & Modifier.STATIC) != 0 && field.getName().startsWith("V_") && field.getType() == Version.class) [ FD ]
Line_2 $$ private Version randomVersion(Random random) throws IllegalArgumentException, IllegalAccessException -->Line_10 $$ return (Version) versionFields.get(random.nextInt(versionFields.size())).get(Version.class)[ CD ]
Line_5 $$ for (Field field : declaredFields) -->Line_7 $$ versionFields.add(field)[ FD ]
Line_6 $$ if ((field.getModifiers() & Modifier.STATIC) != 0 && field.getName().startsWith("V_") && field.getType() == Version.class) -->Line_7 $$ versionFields.add(field)[ CD ]
Line_4 $$ List<Field> versionFields = new ArrayList()-->Line_7 $$ versionFields.add(field)[ FD ]
Line_4 $$ List<Field> versionFields = new ArrayList()-->Line_10 $$ return (Version) versionFields.get(random.nextInt(versionFields.size())).get(Version.class)[ FD ]
Line_2 $$ private Version randomVersion(Random random) throws IllegalArgumentException, IllegalAccessException -->Line_10 $$ return (Version) versionFields.get(random.nextInt(versionFields.size())).get(Version.class)[ FD ]
Line_2 $$ private Version randomVersion(Random random) throws IllegalArgumentException, IllegalAccessException -->Line_3 $$ Field[] declaredFields = Version.class.getFields()[ CD ]
Line_2 $$ private Version randomVersion(Random random) throws IllegalArgumentException, IllegalAccessException -->Line_4 $$ List<Field> versionFields = new ArrayList()[ CD ]
