Line_2 $$ void publishMetricsFromQueue() -->Line_4 $$ int n = retryCount[ CD ]
Line_16 $$ if (n > 0) -->Line_22 $$ retryDelay *= retryBackoff[ CD ]
Line_4 $$ int n = retryCount-->Line_11 $$ n = retryCount[ FD ]
Line_16 $$ if (n > 0) -->Line_18 $$ int awhile = rng.nextInt(retryWindow) + minDelay[ CD ]
Line_3 $$ int retryDelay = firstRetryDelay-->Line_22 $$ retryDelay *= retryBackoff[ FD ]
Line_11 $$ n = retryCount-->Line_28 $$ --n[ FD ]
Line_16 $$ if (n > 0) -->Line_30 $$ if (!inError) [ CD ]
Line_2 $$ void publishMetricsFromQueue() -->Line_7 $$ while (!stopping) [ CD ]
Line_18 $$ int awhile = rng.nextInt(retryWindow) + minDelay-->Line_24 $$ Thread.sleep(awhile)[ FD ]
Line_16 $$ if (n > 0) -->Line_17 $$ int retryWindow = Math.max(0, 1000 / 2 * retryDelay - minDelay)[ CD ]
Line_6 $$ Random rng = new Random(System.nanoTime())-->Line_18 $$ int awhile = rng.nextInt(retryWindow) + minDelay[ FD ]
Line_2 $$ void publishMetricsFromQueue() -->Line_6 $$ Random rng = new Random(System.nanoTime())[ CD ]
Line_16 $$ if (n > 0) -->Line_33 $$ queue.clear()[ CD ]
Line_10 $$ retryDelay = firstRetryDelay-->Line_22 $$ retryDelay *= retryBackoff[ FD ]
Line_19 $$ if (!inError) -->Line_20 $$ LOG.error("Got sink exception, retry in " + awhile + "ms", e)[ CD ]
Line_2 $$ void publishMetricsFromQueue() -->Line_5 $$ int minDelay = Math.min(500, retryDelay * 1000)[ CD ]
Line_30 $$ if (!inError) -->Line_31 $$ LOG.error("Got sink exception and over retry limit, " + "suppressing further error messages", e)[ CD ]
Line_3 $$ int retryDelay = firstRetryDelay-->Line_10 $$ retryDelay = firstRetryDelay[ FD ]
Line_16 $$ if (n > 0) -->Line_19 $$ if (!inError) [ CD ]
Line_4 $$ int n = retryCount-->Line_28 $$ --n[ FD ]
Line_16 $$ if (n > 0) -->Line_28 $$ --n[ CD ]
Line_11 $$ n = retryCount-->Line_16 $$ if (n > 0) [ FD ]
Line_2 $$ void publishMetricsFromQueue() -->Line_3 $$ int retryDelay = firstRetryDelay[ CD ]
Line_4 $$ int n = retryCount-->Line_16 $$ if (n > 0) [ FD ]
Line_17 $$ int retryWindow = Math.max(0, 1000 / 2 * retryDelay - minDelay)-->Line_18 $$ int awhile = rng.nextInt(retryWindow) + minDelay[ FD ]
