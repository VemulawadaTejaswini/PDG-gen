Line_26 $$ Thread t2 = new Thread(new Runnable() -->Line_28 $$ Random random = new Random()[ CD ]
Line_11 $$ final AtomicBoolean isFinished = new AtomicBoolean(false)-->Line_38 $$ do [ FD ]
Line_2 $$ public void test1() throws Exception -->Line_7 $$ final MavenIndexerWrapper indexer = MavenServerManager.getInstance().createIndexer()[ CD ]
Line_28 $$ Random random = new Random()-->Line_30 $$ int i = random.nextInt(100)[ FD ]
Line_12 $$ Thread t1 = new Thread(new Runnable() -->Line_42 $$ t1.join(100)[ FD ]
Line_11 $$ final AtomicBoolean isFinished = new AtomicBoolean(false)-->Line_22 $$ isFinished.set(true)[ FD ]
Line_2 $$ public void test1() throws Exception -->Line_44 $$ indices.close()[ CD ]
Line_9 $$ final MavenIndices indices = new MavenIndices(indexer, indicesDir, this)-->Line_10 $$ final MavenIndex index = indices.add("id", getRepositoryPath(), MavenIndex.Kind.LOCAL)[ FD ]
Line_3 $$ MavenCustomRepositoryHelper helper-->Line_4 $$ helper = new MavenCustomRepositoryHelper(myDir, "plugins", "local1", "local2")[ FD ]
Line_2 $$ public void test1() throws Exception -->Line_42 $$ t1.join(100)[ CD ]
Line_11 $$ final AtomicBoolean isFinished = new AtomicBoolean(false)-->Line_29 $$ while (!isFinished.get()) [ FD ]
Line_38 $$ do -->Line_40 $$ t2.join(100)[ CD ]
Line_2 $$ public void test1() throws Exception -->Line_38 $$ do [ CD ]
Line_2 $$ public void test1() throws Exception -->Line_5 $$ helper.copy("plugins", "local1")[ CD ]
Line_12 $$ Thread t1 = new Thread(new Runnable() -->Line_39 $$ t1.join(100)[ FD ]
Line_2 $$ public void test1() throws Exception -->Line_46 $$ t2.join()[ CD ]
Line_2 $$ public void test1() throws Exception -->Line_37 $$ t2.start()[ CD ]
Line_2 $$ public void test1() throws Exception -->Line_36 $$ t1.start()[ CD ]
Line_2 $$ public void test1() throws Exception -->Line_4 $$ helper = new MavenCustomRepositoryHelper(myDir, "plugins", "local1", "local2")[ CD ]
Line_4 $$ helper = new MavenCustomRepositoryHelper(myDir, "plugins", "local1", "local2")-->Line_5 $$ helper.copy("plugins", "local1")[ FD ]
Line_15 $$ for (int i = 0; i < 3; i++) -->Line_17 $$ indices.updateOrRepair(index, true, getMavenGeneralSettings(), EMPTY_MAVEN_PROCESS)[ CD ]
Line_2 $$ public void test1() throws Exception -->Line_11 $$ final AtomicBoolean isFinished = new AtomicBoolean(false)[ CD ]
Line_38 $$ do -->Line_39 $$ t1.join(100)[ CD ]
Line_3 $$ MavenCustomRepositoryHelper helper-->Line_6 $$ helper.copy("local2", "local1")[ FD ]
Line_10 $$ final MavenIndex index = indices.add("id", getRepositoryPath(), MavenIndex.Kind.LOCAL)-->Line_17 $$ indices.updateOrRepair(index, true, getMavenGeneralSettings(), EMPTY_MAVEN_PROCESS)[ FD ]
Line_2 $$ public void test1() throws Exception -->Line_8 $$ File indicesDir = new File(myDir, "indices")[ CD ]
Line_29 $$ while (!isFinished.get()) -->Line_30 $$ int i = random.nextInt(100)[ CD ]
Line_2 $$ public void test1() throws Exception -->Line_6 $$ helper.copy("local2", "local1")[ CD ]
Line_2 $$ public void test1() throws Exception -->Line_12 $$ Thread t1 = new Thread(new Runnable() [ CD ]
Line_15 $$ for (int i = 0; i < 3; i++) -->Line_16 $$ System.out.println("INDEXING #" + i)[ CD ]
Line_3 $$ MavenCustomRepositoryHelper helper-->Line_5 $$ helper.copy("plugins", "local1")[ FD ]
Line_4 $$ helper = new MavenCustomRepositoryHelper(myDir, "plugins", "local1", "local2")-->Line_6 $$ helper.copy("local2", "local1")[ FD ]
Line_2 $$ public void test1() throws Exception -->Line_43 $$ t2.join(100)[ CD ]
Line_2 $$ public void test1() throws Exception -->Line_45 $$ t1.join()[ CD ]
Line_29 $$ while (!isFinished.get()) -->Line_31 $$ System.out.println("Adding artifact #" + i)[ CD ]
Line_2 $$ public void test1() throws Exception -->Line_9 $$ final MavenIndices indices = new MavenIndices(indexer, indicesDir, this)[ CD ]
Line_2 $$ public void test1() throws Exception -->Line_3 $$ MavenCustomRepositoryHelper helper[ CD ]
Line_29 $$ while (!isFinished.get()) -->Line_32 $$ fail()[ CD ]
Line_9 $$ final MavenIndices indices = new MavenIndices(indexer, indicesDir, this)-->Line_44 $$ indices.close()[ FD ]
Line_9 $$ final MavenIndices indices = new MavenIndices(indexer, indicesDir, this)-->Line_17 $$ indices.updateOrRepair(index, true, getMavenGeneralSettings(), EMPTY_MAVEN_PROCESS)[ FD ]
Line_12 $$ Thread t1 = new Thread(new Runnable() -->Line_45 $$ t1.join()[ FD ]
Line_2 $$ public void test1() throws Exception -->Line_10 $$ final MavenIndex index = indices.add("id", getRepositoryPath(), MavenIndex.Kind.LOCAL)[ CD ]
Line_26 $$ Thread t2 = new Thread(new Runnable() -->Line_29 $$ while (!isFinished.get()) [ CD ]
Line_12 $$ Thread t1 = new Thread(new Runnable() -->Line_36 $$ t1.start()[ FD ]
