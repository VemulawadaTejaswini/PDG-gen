Line_10 $$ FileSystem fs = FileSystem.getLocal(conf)-->Line_33 $$ aMetadata = readMetadata(fs, blockCompressedFile)[ FD ]
Line_33 $$ aMetadata = readMetadata(fs, blockCompressedFile)-->Line_40 $$ aMetadata = readMetadata(fs, recordCompressedFile)[ FD ]
Line_10 $$ FileSystem fs = FileSystem.getLocal(conf)-->Line_19 $$ SequenceFile.Metadata aMetadata = readMetadata(fs, file)[ FD ]
Line_2 $$ public void testSequenceFileMetadata() throws Exception -->Line_6 $$ Path file = new Path(System.getProperty("test.build.data", ".") + "/test.seq.metadata")[ CD ]
Line_16 $$ int seed = new Random().nextInt()-->Line_18 $$ writeMetadataTest(fs, count, seed, file, CompressionType.NONE, null, theMetadata)[ FD ]
Line_19 $$ SequenceFile.Metadata aMetadata = readMetadata(fs, file)-->Line_43 $$ LOG.info("The retrieved metadata:\n" + aMetadata.toString())[ FD ]
Line_19 $$ SequenceFile.Metadata aMetadata = readMetadata(fs, file)-->Line_26 $$ aMetadata = readMetadata(fs, recordCompressedFile)[ FD ]
Line_11 $$ SequenceFile.Metadata theMetadata = new SequenceFile.Metadata()-->Line_42 $$ LOG.info("The original metadata:\n" + theMetadata.toString())[ FD ]
Line_11 $$ SequenceFile.Metadata theMetadata = new SequenceFile.Metadata()-->Line_34 $$ if (!theMetadata.equals(aMetadata)) [ FD ]
Line_41 $$ if (!theMetadata.equals(aMetadata)) -->Line_42 $$ LOG.info("The original metadata:\n" + theMetadata.toString())[ CD ]
Line_11 $$ SequenceFile.Metadata theMetadata = new SequenceFile.Metadata()-->Line_20 $$ if (!theMetadata.equals(aMetadata)) [ FD ]
Line_2 $$ public void testSequenceFileMetadata() throws Exception -->Line_13 $$ theMetadata.set(new Text("name_2"), new Text("value_2"))[ CD ]
Line_11 $$ SequenceFile.Metadata theMetadata = new SequenceFile.Metadata()-->Line_41 $$ if (!theMetadata.equals(aMetadata)) [ FD ]
Line_16 $$ int seed = new Random().nextInt()-->Line_32 $$ writeMetadataTest(fs, count, seed, blockCompressedFile, CompressionType.BLOCK, codec, theMetadata)[ FD ]
Line_33 $$ aMetadata = readMetadata(fs, blockCompressedFile)-->Line_34 $$ if (!theMetadata.equals(aMetadata)) [ FD ]
Line_19 $$ SequenceFile.Metadata aMetadata = readMetadata(fs, file)-->Line_29 $$ LOG.info("The retrieved metadata:\n" + aMetadata.toString())[ FD ]
Line_2 $$ public void testSequenceFileMetadata() throws Exception -->Line_5 $$ CompressionCodec codec = new DefaultCodec()[ CD ]
Line_2 $$ public void testSequenceFileMetadata() throws Exception -->Line_15 $$ theMetadata.set(new Text("name_4"), new Text("value_4"))[ CD ]
Line_11 $$ SequenceFile.Metadata theMetadata = new SequenceFile.Metadata()-->Line_18 $$ writeMetadataTest(fs, count, seed, file, CompressionType.NONE, null, theMetadata)[ FD ]
Line_19 $$ SequenceFile.Metadata aMetadata = readMetadata(fs, file)-->Line_40 $$ aMetadata = readMetadata(fs, recordCompressedFile)[ FD ]
Line_19 $$ SequenceFile.Metadata aMetadata = readMetadata(fs, file)-->Line_36 $$ LOG.info("The retrieved metadata:\n" + aMetadata.toString())[ FD ]
Line_11 $$ SequenceFile.Metadata theMetadata = new SequenceFile.Metadata()-->Line_12 $$ theMetadata.set(new Text("name_1"), new Text("value_1"))[ FD ]
Line_5 $$ CompressionCodec codec = new DefaultCodec()-->Line_32 $$ writeMetadataTest(fs, count, seed, blockCompressedFile, CompressionType.BLOCK, codec, theMetadata)[ FD ]
Line_26 $$ aMetadata = readMetadata(fs, recordCompressedFile)-->Line_36 $$ LOG.info("The retrieved metadata:\n" + aMetadata.toString())[ FD ]
Line_2 $$ public void testSequenceFileMetadata() throws Exception -->Line_12 $$ theMetadata.set(new Text("name_1"), new Text("value_1"))[ CD ]
Line_10 $$ FileSystem fs = FileSystem.getLocal(conf)-->Line_39 $$ sortMetadataTest(fs, file, sortedFile, theMetadata)[ FD ]
Line_2 $$ public void testSequenceFileMetadata() throws Exception -->Line_16 $$ int seed = new Random().nextInt()[ CD ]
Line_6 $$ Path file = new Path(System.getProperty("test.build.data", ".") + "/test.seq.metadata")-->Line_39 $$ sortMetadataTest(fs, file, sortedFile, theMetadata)[ FD ]
Line_40 $$ aMetadata = readMetadata(fs, recordCompressedFile)-->Line_41 $$ if (!theMetadata.equals(aMetadata)) [ FD ]
Line_2 $$ public void testSequenceFileMetadata() throws Exception -->Line_8 $$ Path recordCompressedFile = new Path(System.getProperty("test.build.data", ".") + "/test.rc.seq.metadata")[ CD ]
Line_26 $$ aMetadata = readMetadata(fs, recordCompressedFile)-->Line_34 $$ if (!theMetadata.equals(aMetadata)) [ FD ]
Line_7 $$ Path sortedFile = new Path(System.getProperty("test.build.data", ".") + "/test.sorted.seq.metadata")-->Line_39 $$ sortMetadataTest(fs, file, sortedFile, theMetadata)[ FD ]
Line_19 $$ SequenceFile.Metadata aMetadata = readMetadata(fs, file)-->Line_20 $$ if (!theMetadata.equals(aMetadata)) [ FD ]
Line_11 $$ SequenceFile.Metadata theMetadata = new SequenceFile.Metadata()-->Line_39 $$ sortMetadataTest(fs, file, sortedFile, theMetadata)[ FD ]
Line_10 $$ FileSystem fs = FileSystem.getLocal(conf)-->Line_26 $$ aMetadata = readMetadata(fs, recordCompressedFile)[ FD ]
Line_10 $$ FileSystem fs = FileSystem.getLocal(conf)-->Line_25 $$ writeMetadataTest(fs, count, seed, recordCompressedFile, CompressionType.RECORD, codec, theMetadata)[ FD ]
Line_33 $$ aMetadata = readMetadata(fs, blockCompressedFile)-->Line_41 $$ if (!theMetadata.equals(aMetadata)) [ FD ]
Line_40 $$ aMetadata = readMetadata(fs, recordCompressedFile)-->Line_43 $$ LOG.info("The retrieved metadata:\n" + aMetadata.toString())[ FD ]
Line_26 $$ aMetadata = readMetadata(fs, recordCompressedFile)-->Line_33 $$ aMetadata = readMetadata(fs, blockCompressedFile)[ FD ]
Line_10 $$ FileSystem fs = FileSystem.getLocal(conf)-->Line_18 $$ writeMetadataTest(fs, count, seed, file, CompressionType.NONE, null, theMetadata)[ FD ]
Line_34 $$ if (!theMetadata.equals(aMetadata)) -->Line_35 $$ LOG.info("The original metadata:\n" + theMetadata.toString())[ CD ]
Line_10 $$ FileSystem fs = FileSystem.getLocal(conf)-->Line_32 $$ writeMetadataTest(fs, count, seed, blockCompressedFile, CompressionType.BLOCK, codec, theMetadata)[ FD ]
Line_2 $$ public void testSequenceFileMetadata() throws Exception -->Line_4 $$ int count = 1024 * 10[ CD ]
Line_4 $$ int count = 1024 * 10-->Line_32 $$ writeMetadataTest(fs, count, seed, blockCompressedFile, CompressionType.BLOCK, codec, theMetadata)[ FD ]
Line_11 $$ SequenceFile.Metadata theMetadata = new SequenceFile.Metadata()-->Line_32 $$ writeMetadataTest(fs, count, seed, blockCompressedFile, CompressionType.BLOCK, codec, theMetadata)[ FD ]
Line_19 $$ SequenceFile.Metadata aMetadata = readMetadata(fs, file)-->Line_22 $$ LOG.info("The retrieved metadata:\n" + aMetadata.toString())[ FD ]
Line_6 $$ Path file = new Path(System.getProperty("test.build.data", ".") + "/test.seq.metadata")-->Line_18 $$ writeMetadataTest(fs, count, seed, file, CompressionType.NONE, null, theMetadata)[ FD ]
Line_20 $$ if (!theMetadata.equals(aMetadata)) -->Line_21 $$ LOG.info("The original metadata:\n" + theMetadata.toString())[ CD ]
Line_2 $$ public void testSequenceFileMetadata() throws Exception -->Line_7 $$ Path sortedFile = new Path(System.getProperty("test.build.data", ".") + "/test.sorted.seq.metadata")[ CD ]
Line_27 $$ if (!theMetadata.equals(aMetadata)) -->Line_28 $$ LOG.info("The original metadata:\n" + theMetadata.toString())[ CD ]
Line_10 $$ FileSystem fs = FileSystem.getLocal(conf)-->Line_47 $$ fs.close()[ FD ]
Line_27 $$ if (!theMetadata.equals(aMetadata)) -->Line_29 $$ LOG.info("The retrieved metadata:\n" + aMetadata.toString())[ CD ]
Line_8 $$ Path recordCompressedFile = new Path(System.getProperty("test.build.data", ".") + "/test.rc.seq.metadata")-->Line_25 $$ writeMetadataTest(fs, count, seed, recordCompressedFile, CompressionType.RECORD, codec, theMetadata)[ FD ]
Line_11 $$ SequenceFile.Metadata theMetadata = new SequenceFile.Metadata()-->Line_15 $$ theMetadata.set(new Text("name_4"), new Text("value_4"))[ FD ]
Line_34 $$ if (!theMetadata.equals(aMetadata)) -->Line_36 $$ LOG.info("The retrieved metadata:\n" + aMetadata.toString())[ CD ]
Line_11 $$ SequenceFile.Metadata theMetadata = new SequenceFile.Metadata()-->Line_13 $$ theMetadata.set(new Text("name_2"), new Text("value_2"))[ FD ]
Line_9 $$ Path blockCompressedFile = new Path(System.getProperty("test.build.data", ".") + "/test.bc.seq.metadata")-->Line_32 $$ writeMetadataTest(fs, count, seed, blockCompressedFile, CompressionType.BLOCK, codec, theMetadata)[ FD ]
Line_11 $$ SequenceFile.Metadata theMetadata = new SequenceFile.Metadata()-->Line_35 $$ LOG.info("The original metadata:\n" + theMetadata.toString())[ FD ]
Line_26 $$ aMetadata = readMetadata(fs, recordCompressedFile)-->Line_41 $$ if (!theMetadata.equals(aMetadata)) [ FD ]
Line_4 $$ int count = 1024 * 10-->Line_18 $$ writeMetadataTest(fs, count, seed, file, CompressionType.NONE, null, theMetadata)[ FD ]
Line_11 $$ SequenceFile.Metadata theMetadata = new SequenceFile.Metadata()-->Line_27 $$ if (!theMetadata.equals(aMetadata)) [ FD ]
Line_19 $$ SequenceFile.Metadata aMetadata = readMetadata(fs, file)-->Line_34 $$ if (!theMetadata.equals(aMetadata)) [ FD ]
Line_4 $$ int count = 1024 * 10-->Line_25 $$ writeMetadataTest(fs, count, seed, recordCompressedFile, CompressionType.RECORD, codec, theMetadata)[ FD ]
Line_26 $$ aMetadata = readMetadata(fs, recordCompressedFile)-->Line_40 $$ aMetadata = readMetadata(fs, recordCompressedFile)[ FD ]
Line_26 $$ aMetadata = readMetadata(fs, recordCompressedFile)-->Line_29 $$ LOG.info("The retrieved metadata:\n" + aMetadata.toString())[ FD ]
Line_11 $$ SequenceFile.Metadata theMetadata = new SequenceFile.Metadata()-->Line_25 $$ writeMetadataTest(fs, count, seed, recordCompressedFile, CompressionType.RECORD, codec, theMetadata)[ FD ]
Line_2 $$ public void testSequenceFileMetadata() throws Exception -->Line_10 $$ FileSystem fs = FileSystem.getLocal(conf)[ CD ]
Line_16 $$ int seed = new Random().nextInt()-->Line_25 $$ writeMetadataTest(fs, count, seed, recordCompressedFile, CompressionType.RECORD, codec, theMetadata)[ FD ]
Line_10 $$ FileSystem fs = FileSystem.getLocal(conf)-->Line_40 $$ aMetadata = readMetadata(fs, recordCompressedFile)[ FD ]
Line_2 $$ public void testSequenceFileMetadata() throws Exception -->Line_14 $$ theMetadata.set(new Text("name_3"), new Text("value_3"))[ CD ]
Line_11 $$ SequenceFile.Metadata theMetadata = new SequenceFile.Metadata()-->Line_28 $$ LOG.info("The original metadata:\n" + theMetadata.toString())[ FD ]
Line_11 $$ SequenceFile.Metadata theMetadata = new SequenceFile.Metadata()-->Line_21 $$ LOG.info("The original metadata:\n" + theMetadata.toString())[ FD ]
Line_11 $$ SequenceFile.Metadata theMetadata = new SequenceFile.Metadata()-->Line_14 $$ theMetadata.set(new Text("name_3"), new Text("value_3"))[ FD ]
Line_2 $$ public void testSequenceFileMetadata() throws Exception -->Line_3 $$ LOG.info("Testing SequenceFile with metadata")[ CD ]
Line_19 $$ SequenceFile.Metadata aMetadata = readMetadata(fs, file)-->Line_33 $$ aMetadata = readMetadata(fs, blockCompressedFile)[ FD ]
Line_33 $$ aMetadata = readMetadata(fs, blockCompressedFile)-->Line_43 $$ LOG.info("The retrieved metadata:\n" + aMetadata.toString())[ FD ]
Line_19 $$ SequenceFile.Metadata aMetadata = readMetadata(fs, file)-->Line_41 $$ if (!theMetadata.equals(aMetadata)) [ FD ]
Line_8 $$ Path recordCompressedFile = new Path(System.getProperty("test.build.data", ".") + "/test.rc.seq.metadata")-->Line_26 $$ aMetadata = readMetadata(fs, recordCompressedFile)[ FD ]
Line_8 $$ Path recordCompressedFile = new Path(System.getProperty("test.build.data", ".") + "/test.rc.seq.metadata")-->Line_40 $$ aMetadata = readMetadata(fs, recordCompressedFile)[ FD ]
Line_2 $$ public void testSequenceFileMetadata() throws Exception -->Line_11 $$ SequenceFile.Metadata theMetadata = new SequenceFile.Metadata()[ CD ]
Line_26 $$ aMetadata = readMetadata(fs, recordCompressedFile)-->Line_43 $$ LOG.info("The retrieved metadata:\n" + aMetadata.toString())[ FD ]
Line_41 $$ if (!theMetadata.equals(aMetadata)) -->Line_43 $$ LOG.info("The retrieved metadata:\n" + aMetadata.toString())[ CD ]
Line_20 $$ if (!theMetadata.equals(aMetadata)) -->Line_22 $$ LOG.info("The retrieved metadata:\n" + aMetadata.toString())[ CD ]
Line_6 $$ Path file = new Path(System.getProperty("test.build.data", ".") + "/test.seq.metadata")-->Line_19 $$ SequenceFile.Metadata aMetadata = readMetadata(fs, file)[ FD ]
Line_26 $$ aMetadata = readMetadata(fs, recordCompressedFile)-->Line_27 $$ if (!theMetadata.equals(aMetadata)) [ FD ]
Line_5 $$ CompressionCodec codec = new DefaultCodec()-->Line_25 $$ writeMetadataTest(fs, count, seed, recordCompressedFile, CompressionType.RECORD, codec, theMetadata)[ FD ]
Line_2 $$ public void testSequenceFileMetadata() throws Exception -->Line_49 $$ LOG.info("Successfully tested SequenceFile with metadata")[ CD ]
Line_33 $$ aMetadata = readMetadata(fs, blockCompressedFile)-->Line_36 $$ LOG.info("The retrieved metadata:\n" + aMetadata.toString())[ FD ]
Line_19 $$ SequenceFile.Metadata aMetadata = readMetadata(fs, file)-->Line_27 $$ if (!theMetadata.equals(aMetadata)) [ FD ]
Line_9 $$ Path blockCompressedFile = new Path(System.getProperty("test.build.data", ".") + "/test.bc.seq.metadata")-->Line_33 $$ aMetadata = readMetadata(fs, blockCompressedFile)[ FD ]
Line_2 $$ public void testSequenceFileMetadata() throws Exception -->Line_9 $$ Path blockCompressedFile = new Path(System.getProperty("test.build.data", ".") + "/test.bc.seq.metadata")[ CD ]
