Line_2 $$ public void testMD5Filter() throws Exception -->Line_6 $$ fs.delete(inDir, true)[ CD ]
Line_2 $$ public void testMD5Filter() throws Exception -->Line_4 $$ SequenceFileInputFilter.setFilterClass(job, SequenceFileInputFilter.MD5Filter.class)[ CD ]
Line_2 $$ public void testMD5Filter() throws Exception -->Line_3 $$ LOG.info("Testing MD5 Filter with frequency: 1000")[ CD ]
Line_7 $$ for (int length = 0; length < MAX_LENGTH; length += random.nextInt(MAX_LENGTH / 10) + 1) -->Line_8 $$ LOG.info("******Number of records: " + length)[ CD ]
Line_2 $$ public void testMD5Filter() throws Exception -->Line_12 $$ fs.delete(inDir, true)[ CD ]
Line_2 $$ public void testMD5Filter() throws Exception -->Line_7 $$ for (int length = 0; length < MAX_LENGTH; length += random.nextInt(MAX_LENGTH / 10) + 1) [ CD ]
Line_7 $$ for (int length = 0; length < MAX_LENGTH; length += random.nextInt(MAX_LENGTH / 10) + 1) -->Line_9 $$ createSequenceFile(length)[ CD ]
Line_2 $$ public void testMD5Filter() throws Exception -->Line_5 $$ SequenceFileInputFilter.MD5Filter.setFrequency(job.getConfiguration(), 1000)[ CD ]
Line_7 $$ for (int length = 0; length < MAX_LENGTH; length += random.nextInt(MAX_LENGTH / 10) + 1) -->Line_10 $$ LOG.info("Accepted " + countRecords(0) + " records")[ CD ]
Line_7 $$ for (int length = 0; length < MAX_LENGTH; length += random.nextInt(MAX_LENGTH / 10) + 1) -->Line_9 $$ createSequenceFile(length)[ FD ]
