Line_10 $$ for (int i = 0; i < ITERATIONS; i++) -->Line_11 $$ ApplicationManager.getApplication().runReadAction(() -> [ CD ]
Line_2 $$ public void testBigCustomFile() throws Throwable -->Line_7 $$ final XmlFile file = (XmlFile) PsiManager.getInstance(ourProject).findFile(bigXml)[ CD ]
Line_2 $$ public void testBigCustomFile() throws Throwable -->Line_4 $$ registerExtender(MyAllCustomElement.class, MyAllCustomExtender.class)[ CD ]
Line_10 $$ for (int i = 0; i < ITERATIONS; i++) -->Line_18 $$ if (random.nextInt(50) == 0) [ CD ]
Line_2 $$ public void testBigCustomFile() throws Throwable -->Line_3 $$ getDomManager().registerFileDescription(new DomFileDescription(MyAllCustomElement.class, "component"), myTestRootDisposable)[ CD ]
Line_18 $$ if (random.nextInt(50) == 0) -->Line_19 $$ SemService.getSemService(getProject()).clearCache()[ CD ]
Line_9 $$ final Random random = new Random()-->Line_18 $$ if (random.nextInt(50) == 0) [ FD ]
Line_7 $$ final XmlFile file = (XmlFile) PsiManager.getInstance(ourProject).findFile(bigXml)-->Line_12 $$ int offset = random.nextInt(file.getTextLength() - 10)[ FD ]
Line_2 $$ public void testBigCustomFile() throws Throwable -->Line_8 $$ runThreads(42, () -> [ CD ]
Line_7 $$ final XmlFile file = (XmlFile) PsiManager.getInstance(ourProject).findFile(bigXml)-->Line_13 $$ XmlTag tag = PsiTreeUtil.findElementOfClassAtOffset(file, offset, XmlTag.class, false)[ FD ]
Line_9 $$ final Random random = new Random()-->Line_12 $$ int offset = random.nextInt(file.getTextLength() - 10)[ FD ]
Line_2 $$ public void testBigCustomFile() throws Throwable -->Line_5 $$ VirtualFile bigXml = LocalFileSystem.getInstance().findFileByPath(PlatformTestUtil.getCommunityPath() + "/xml/dom-tests/testData/performance.xml")[ CD ]
Line_13 $$ XmlTag tag = PsiTreeUtil.findElementOfClassAtOffset(file, offset, XmlTag.class, false)-->Line_15 $$ DomElement element = DomUtil.getDomElement(tag)[ FD ]
Line_5 $$ VirtualFile bigXml = LocalFileSystem.getInstance().findFileByPath(PlatformTestUtil.getCommunityPath() + "/xml/dom-tests/testData/performance.xml")-->Line_7 $$ final XmlFile file = (XmlFile) PsiManager.getInstance(ourProject).findFile(bigXml)[ FD ]
Line_12 $$ int offset = random.nextInt(file.getTextLength() - 10)-->Line_13 $$ XmlTag tag = PsiTreeUtil.findElementOfClassAtOffset(file, offset, XmlTag.class, false)[ FD ]
