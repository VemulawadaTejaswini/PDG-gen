Line_13 $$ if (maxVersionIndex == -1) -->Line_15 $$ if (minVersionIndex > maxVersionIndex) [ CD ]
Line_9 $$ maxVersionIndex = SORTED_VERSIONS.indexOf(maxVersion)-->Line_15 $$ if (minVersionIndex > maxVersionIndex) [ FD ]
Line_2 $$ public static Version randomVersionBetween(Random random, Version minVersion, Version maxVersion) -->Line_4 $$ if (minVersion != null) [ CD ]
Line_5 $$ minVersionIndex = SORTED_VERSIONS.indexOf(minVersion)-->Line_11 $$ if (minVersionIndex == -1) [ FD ]
Line_2 $$ public static Version randomVersionBetween(Random random, Version minVersion, Version maxVersion) -->Line_8 $$ if (maxVersion != null) [ CD ]
Line_7 $$ int maxVersionIndex = SORTED_VERSIONS.size() - 1-->Line_9 $$ maxVersionIndex = SORTED_VERSIONS.indexOf(maxVersion)[ FD ]
Line_15 $$ if (minVersionIndex > maxVersionIndex) -->Line_18 $$ int range = maxVersionIndex + 1 - minVersionIndex[ CD ]
Line_2 $$ public static Version randomVersionBetween(Random random, Version minVersion, Version maxVersion) -->Line_19 $$ return SORTED_VERSIONS.get(minVersionIndex + random.nextInt(range))[ FD ]
Line_2 $$ public static Version randomVersionBetween(Random random, Version minVersion, Version maxVersion) -->Line_11 $$ if (minVersionIndex == -1) [ CD ]
Line_7 $$ int maxVersionIndex = SORTED_VERSIONS.size() - 1-->Line_15 $$ if (minVersionIndex > maxVersionIndex) [ FD ]
Line_2 $$ public static Version randomVersionBetween(Random random, Version minVersion, Version maxVersion) -->Line_8 $$ if (maxVersion != null) [ FD ]
Line_11 $$ if (minVersionIndex == -1) -->Line_13 $$ if (maxVersionIndex == -1) [ CD ]
Line_18 $$ int range = maxVersionIndex + 1 - minVersionIndex-->Line_19 $$ return SORTED_VERSIONS.get(minVersionIndex + random.nextInt(range))[ FD ]
Line_2 $$ public static Version randomVersionBetween(Random random, Version minVersion, Version maxVersion) -->Line_9 $$ maxVersionIndex = SORTED_VERSIONS.indexOf(maxVersion)[ FD ]
Line_8 $$ if (maxVersion != null) -->Line_9 $$ maxVersionIndex = SORTED_VERSIONS.indexOf(maxVersion)[ CD ]
Line_7 $$ int maxVersionIndex = SORTED_VERSIONS.size() - 1-->Line_13 $$ if (maxVersionIndex == -1) [ FD ]
Line_2 $$ public static Version randomVersionBetween(Random random, Version minVersion, Version maxVersion) -->Line_4 $$ if (minVersion != null) [ FD ]
Line_2 $$ public static Version randomVersionBetween(Random random, Version minVersion, Version maxVersion) -->Line_3 $$ int minVersionIndex = 0[ CD ]
Line_3 $$ int minVersionIndex = 0-->Line_11 $$ if (minVersionIndex == -1) [ FD ]
Line_9 $$ maxVersionIndex = SORTED_VERSIONS.indexOf(maxVersion)-->Line_13 $$ if (maxVersionIndex == -1) [ FD ]
Line_15 $$ if (minVersionIndex > maxVersionIndex) -->Line_19 $$ return SORTED_VERSIONS.get(minVersionIndex + random.nextInt(range))[ CD ]
Line_2 $$ public static Version randomVersionBetween(Random random, Version minVersion, Version maxVersion) -->Line_7 $$ int maxVersionIndex = SORTED_VERSIONS.size() - 1[ CD ]
Line_3 $$ int minVersionIndex = 0-->Line_15 $$ if (minVersionIndex > maxVersionIndex) [ FD ]
Line_3 $$ int minVersionIndex = 0-->Line_5 $$ minVersionIndex = SORTED_VERSIONS.indexOf(minVersion)[ FD ]
Line_2 $$ public static Version randomVersionBetween(Random random, Version minVersion, Version maxVersion) -->Line_5 $$ minVersionIndex = SORTED_VERSIONS.indexOf(minVersion)[ FD ]
Line_4 $$ if (minVersion != null) -->Line_5 $$ minVersionIndex = SORTED_VERSIONS.indexOf(minVersion)[ CD ]
Line_5 $$ minVersionIndex = SORTED_VERSIONS.indexOf(minVersion)-->Line_15 $$ if (minVersionIndex > maxVersionIndex) [ FD ]
