Line_9 $$ final ArrayList<FileStatus> files = new ArrayList<FileStatus>()-->Line_20 $$ assertTrue("Missed: " + rand, (NFILES / 2) * 1024 > rand - pool.getInputFiles(rand, files))[ FD ]
Line_9 $$ final ArrayList<FileStatus> files = new ArrayList<FileStatus>()-->Line_25 $$ assertEquals((NFILES / 2 * (NFILES / 2 + 1)) * 1024, pool.getInputFiles(Long.MAX_VALUE, files))[ FD ]
Line_7 $$ final FilePool pool = new FilePool(conf, base)-->Line_16 $$ assertEquals(expectedPoolSize, pool.getInputFiles(expectedPoolSize, files))[ FD ]
Line_7 $$ final FilePool pool = new FilePool(conf, base)-->Line_25 $$ assertEquals((NFILES / 2 * (NFILES / 2 + 1)) * 1024, pool.getInputFiles(Long.MAX_VALUE, files))[ FD ]
Line_7 $$ final FilePool pool = new FilePool(conf, base)-->Line_8 $$ pool.refresh()[ FD ]
Line_9 $$ final ArrayList<FileStatus> files = new ArrayList<FileStatus>()-->Line_24 $$ files.clear()[ FD ]
Line_4 $$ final Random r = new Random()-->Line_19 $$ final long rand = r.nextInt(expectedPoolSize)[ FD ]
Line_9 $$ final ArrayList<FileStatus> files = new ArrayList<FileStatus>()-->Line_16 $$ assertEquals(expectedPoolSize, pool.getInputFiles(expectedPoolSize, files))[ FD ]
Line_7 $$ final FilePool pool = new FilePool(conf, base)-->Line_23 $$ pool.refresh()[ FD ]
Line_9 $$ final ArrayList<FileStatus> files = new ArrayList<FileStatus>()-->Line_13 $$ assertEquals(NFILES - 4, files.size())[ FD ]
Line_7 $$ final FilePool pool = new FilePool(conf, base)-->Line_12 $$ assertEquals(expectedPoolSize, pool.getInputFiles(Long.MAX_VALUE, files))[ FD ]
Line_9 $$ final ArrayList<FileStatus> files = new ArrayList<FileStatus>()-->Line_12 $$ assertEquals(expectedPoolSize, pool.getInputFiles(Long.MAX_VALUE, files))[ FD ]
Line_7 $$ final FilePool pool = new FilePool(conf, base)-->Line_20 $$ assertTrue("Missed: " + rand, (NFILES / 2) * 1024 > rand - pool.getInputFiles(rand, files))[ FD ]
Line_5 $$ final Configuration conf = new Configuration()-->Line_6 $$ conf.setLong(FilePool.GRIDMIX_MIN_FILE, 3 * 1024)[ FD ]
Line_19 $$ final long rand = r.nextInt(expectedPoolSize)-->Line_20 $$ assertTrue("Missed: " + rand, (NFILES / 2) * 1024 > rand - pool.getInputFiles(rand, files))[ FD ]
