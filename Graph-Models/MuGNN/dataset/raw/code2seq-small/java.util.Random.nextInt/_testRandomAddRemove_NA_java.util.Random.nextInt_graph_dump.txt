Line_15 $$ if (gen.nextBoolean()) -->Line_16 $$ x = 0[ CD ]
Line_7 $$ DocumentEx document = (DocumentEx) EditorFactory.getInstance().createDocument(StringUtil.repeatSymbol(' ', N))-->Line_17 $$ y = document.getTextLength()[ FD ]
Line_24 $$ int size = candidates.size()-->Line_25 $$ int x = gen.nextInt(size)[ FD ]
Line_4 $$ for (int ti = 0; ; ti++) -->Line_10 $$ List<Pair<RangeMarker, TextRange>> dels = new ArrayList<Pair<RangeMarker, TextRange>>()[ CD ]
Line_19 $$ RangeMarkerEx r = (RangeMarkerEx) document.createRangeMarker(x, y)-->Line_20 $$ adds.add(Pair.create((RangeMarker) r, TextRange.create(r)))[ FD ]
Line_12 $$ for (int i = 0; i < 30; i++) -->Line_13 $$ int x = gen.nextInt(N)[ CD ]
Line_3 $$ int N = 100-->Line_13 $$ int x = gen.nextInt(N)[ FD ]
Line_2 $$ public void _testRandomAddRemove() -->Line_4 $$ for (int ti = 0; ; ti++) [ CD ]
Line_23 $$ while (!candidates.isEmpty()) -->Line_24 $$ int size = candidates.size()[ CD ]
Line_4 $$ for (int ti = 0; ; ti++) -->Line_6 $$ System.out.println(ti)[ FD ]
Line_26 $$ Pair<RangeMarker, TextRange> c = candidates.remove(x)-->Line_40 $$ int index = adds.indexOf(c)[ FD ]
Line_2 $$ public void _testRandomAddRemove() -->Line_3 $$ int N = 100[ CD ]
Line_13 $$ int x = gen.nextInt(N)-->Line_16 $$ x = 0[ FD ]
Line_12 $$ for (int i = 0; i < 30; i++) -->Line_19 $$ RangeMarkerEx r = (RangeMarkerEx) document.createRangeMarker(x, y)[ CD ]
Line_17 $$ y = document.getTextLength()-->Line_19 $$ RangeMarkerEx r = (RangeMarkerEx) document.createRangeMarker(x, y)[ FD ]
Line_8 $$ Random gen = new Random()-->Line_15 $$ if (gen.nextBoolean()) [ FD ]
Line_13 $$ int x = gen.nextInt(N)-->Line_26 $$ Pair<RangeMarker, TextRange> c = candidates.remove(x)[ FD ]
Line_23 $$ while (!candidates.isEmpty()) -->Line_30 $$ r.dispose()[ CD ]
Line_9 $$ List<Pair<RangeMarker, TextRange>> adds = new ArrayList<Pair<RangeMarker, TextRange>>()-->Line_20 $$ adds.add(Pair.create((RangeMarker) r, TextRange.create(r)))[ FD ]
Line_12 $$ for (int i = 0; i < 30; i++) -->Line_14 $$ int y = x + gen.nextInt(N - x)[ CD ]
Line_3 $$ int N = 100-->Line_7 $$ DocumentEx document = (DocumentEx) EditorFactory.getInstance().createDocument(StringUtil.repeatSymbol(' ', N))[ FD ]
Line_23 $$ while (!candidates.isEmpty()) -->Line_27 $$ RangeMarkerEx r = (RangeMarkerEx) c.first[ CD ]
Line_4 $$ for (int ti = 0; ; ti++) -->Line_8 $$ Random gen = new Random()[ CD ]
Line_7 $$ DocumentEx document = (DocumentEx) EditorFactory.getInstance().createDocument(StringUtil.repeatSymbol(' ', N))-->Line_19 $$ RangeMarkerEx r = (RangeMarkerEx) document.createRangeMarker(x, y)[ FD ]
Line_14 $$ int y = x + gen.nextInt(N - x)-->Line_17 $$ y = document.getTextLength()[ FD ]
Line_14 $$ int y = x + gen.nextInt(N - x)-->Line_19 $$ RangeMarkerEx r = (RangeMarkerEx) document.createRangeMarker(x, y)[ FD ]
Line_9 $$ List<Pair<RangeMarker, TextRange>> adds = new ArrayList<Pair<RangeMarker, TextRange>>()-->Line_40 $$ int index = adds.indexOf(c)[ FD ]
Line_4 $$ for (int ti = 0; ; ti++) -->Line_5 $$ if (ti % 10000 == 0)[ CD ]
Line_16 $$ x = 0-->Line_19 $$ RangeMarkerEx r = (RangeMarkerEx) document.createRangeMarker(x, y)[ FD ]
Line_27 $$ RangeMarkerEx r = (RangeMarkerEx) c.first-->Line_30 $$ r.dispose()[ FD ]
Line_9 $$ List<Pair<RangeMarker, TextRange>> adds = new ArrayList<Pair<RangeMarker, TextRange>>()-->Line_41 $$ assertSame(c, adds.get(index))[ FD ]
Line_16 $$ x = 0-->Line_26 $$ Pair<RangeMarker, TextRange> c = candidates.remove(x)[ FD ]
Line_4 $$ for (int ti = 0; ; ti++) -->Line_7 $$ DocumentEx document = (DocumentEx) EditorFactory.getInstance().createDocument(StringUtil.repeatSymbol(' ', N))[ CD ]
Line_19 $$ RangeMarkerEx r = (RangeMarkerEx) document.createRangeMarker(x, y)-->Line_30 $$ r.dispose()[ FD ]
Line_4 $$ for (int ti = 0; ; ti++) -->Line_9 $$ List<Pair<RangeMarker, TextRange>> adds = new ArrayList<Pair<RangeMarker, TextRange>>()[ CD ]
Line_15 $$ if (gen.nextBoolean()) -->Line_17 $$ y = document.getTextLength()[ CD ]
Line_8 $$ Random gen = new Random()-->Line_14 $$ int y = x + gen.nextInt(N - x)[ FD ]
Line_10 $$ List<Pair<RangeMarker, TextRange>> dels = new ArrayList<Pair<RangeMarker, TextRange>>()-->Line_29 $$ dels.add(c)[ FD ]
Line_13 $$ int x = gen.nextInt(N)-->Line_19 $$ RangeMarkerEx r = (RangeMarkerEx) document.createRangeMarker(x, y)[ FD ]
Line_12 $$ for (int i = 0; i < 30; i++) -->Line_15 $$ if (gen.nextBoolean()) [ CD ]
Line_23 $$ while (!candidates.isEmpty()) -->Line_28 $$ assertEquals(size - 1, candidates.size())[ CD ]
Line_5 $$ if (ti % 10000 == 0)-->Line_6 $$ System.out.println(ti)[ CD ]
Line_26 $$ Pair<RangeMarker, TextRange> c = candidates.remove(x)-->Line_41 $$ assertSame(c, adds.get(index))[ FD ]
Line_25 $$ int x = gen.nextInt(size)-->Line_26 $$ Pair<RangeMarker, TextRange> c = candidates.remove(x)[ FD ]
Line_23 $$ while (!candidates.isEmpty()) -->Line_26 $$ Pair<RangeMarker, TextRange> c = candidates.remove(x)[ CD ]
Line_8 $$ Random gen = new Random()-->Line_25 $$ int x = gen.nextInt(size)[ FD ]
Line_23 $$ while (!candidates.isEmpty()) -->Line_29 $$ dels.add(c)[ CD ]
Line_12 $$ for (int i = 0; i < 30; i++) -->Line_20 $$ adds.add(Pair.create((RangeMarker) r, TextRange.create(r)))[ CD ]
Line_23 $$ while (!candidates.isEmpty()) -->Line_25 $$ int x = gen.nextInt(size)[ CD ]
Line_26 $$ Pair<RangeMarker, TextRange> c = candidates.remove(x)-->Line_29 $$ dels.add(c)[ FD ]
Line_8 $$ Random gen = new Random()-->Line_13 $$ int x = gen.nextInt(N)[ FD ]
