Line_4 $$ BloomFilter bf3 = (BloomFilter) FilterFactory.getFilter(FilterTestHelper.ELEMENTS / 2, FilterTestHelper.MAX_FAILURE_RATE, true, oldBfHashOrder)-->Line_10 $$ bf3.add(key)[ FD ]
Line_2 $$ private static void compareBitSets(boolean oldBfHashOrder) -->Line_4 $$ BloomFilter bf3 = (BloomFilter) FilterFactory.getFilter(FilterTestHelper.ELEMENTS / 2, FilterTestHelper.MAX_FAILURE_RATE, true, oldBfHashOrder)[ FD ]
Line_2 $$ private static void compareBitSets(boolean oldBfHashOrder) -->Line_5 $$ RandomStringGenerator gen1 = new KeyGenerator.RandomStringGenerator(new Random().nextInt(), FilterTestHelper.ELEMENTS)[ CD ]
Line_7 $$ while (gen1.hasNext()) -->Line_10 $$ bf3.add(key)[ CD ]
Line_7 $$ while (gen1.hasNext()) -->Line_9 $$ bf2.add(key)[ CD ]
Line_2 $$ private static void compareBitSets(boolean oldBfHashOrder) -->Line_7 $$ while (gen1.hasNext()) [ CD ]
Line_3 $$ BloomFilter bf2 = (BloomFilter) FilterFactory.getFilter(FilterTestHelper.ELEMENTS / 2, FilterTestHelper.MAX_FAILURE_RATE, false, oldBfHashOrder)-->Line_9 $$ bf2.add(key)[ FD ]
Line_2 $$ private static void compareBitSets(boolean oldBfHashOrder) -->Line_4 $$ BloomFilter bf3 = (BloomFilter) FilterFactory.getFilter(FilterTestHelper.ELEMENTS / 2, FilterTestHelper.MAX_FAILURE_RATE, true, oldBfHashOrder)[ CD ]
Line_2 $$ private static void compareBitSets(boolean oldBfHashOrder) -->Line_6 $$ compare(bf2.bitset, bf3.bitset)[ CD ]
Line_7 $$ while (gen1.hasNext()) -->Line_8 $$ FilterKey key = FilterTestHelper.wrap(gen1.next())[ CD ]
Line_8 $$ FilterKey key = FilterTestHelper.wrap(gen1.next())-->Line_9 $$ bf2.add(key)[ FD ]
Line_8 $$ FilterKey key = FilterTestHelper.wrap(gen1.next())-->Line_10 $$ bf3.add(key)[ FD ]
Line_5 $$ RandomStringGenerator gen1 = new KeyGenerator.RandomStringGenerator(new Random().nextInt(), FilterTestHelper.ELEMENTS)-->Line_8 $$ FilterKey key = FilterTestHelper.wrap(gen1.next())[ FD ]
Line_2 $$ private static void compareBitSets(boolean oldBfHashOrder) -->Line_12 $$ compare(bf2.bitset, bf3.bitset)[ CD ]
Line_2 $$ private static void compareBitSets(boolean oldBfHashOrder) -->Line_3 $$ BloomFilter bf2 = (BloomFilter) FilterFactory.getFilter(FilterTestHelper.ELEMENTS / 2, FilterTestHelper.MAX_FAILURE_RATE, false, oldBfHashOrder)[ CD ]
Line_5 $$ RandomStringGenerator gen1 = new KeyGenerator.RandomStringGenerator(new Random().nextInt(), FilterTestHelper.ELEMENTS)-->Line_7 $$ while (gen1.hasNext()) [ FD ]
Line_2 $$ private static void compareBitSets(boolean oldBfHashOrder) -->Line_3 $$ BloomFilter bf2 = (BloomFilter) FilterFactory.getFilter(FilterTestHelper.ELEMENTS / 2, FilterTestHelper.MAX_FAILURE_RATE, false, oldBfHashOrder)[ FD ]
