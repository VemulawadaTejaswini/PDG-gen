Line_16 $$ boolean includesStart-->Line_20 $$ includesStart = span > 0 ? r.nextBoolean() : true[ FD ]
Line_9 $$ for (int i = 0; i < ITEMS; ++i) -->Line_11 $$ int sz = positions[i + 1] - pos[ CD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_3 $$ int[] positions = new int[ITEMS + 1][ CD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_21 $$ includesEnd = span > 0 ? r.nextBoolean() : true[ FD ]
Line_15 $$ int span-->Line_23 $$ span = 1 + r.nextInt(sz)[ FD ]
Line_7 $$ List<Unfiltered> content = new ArrayList(ITEMS)-->Line_39 $$ Collections.reverse(content)[ FD ]
Line_4 $$ for (int i = 0; i < ITEMS; ++i) positions[i] = r.nextInt(RANGE)-->Line_9 $$ for (int i = 0; i < ITEMS; ++i) [ FD ]
Line_16 $$ boolean includesStart-->Line_29 $$ content.add(new RangeTombstoneBoundMarker(boundFor(pos, true, includesStart), dt))[ FD ]
Line_14 $$ if (r.nextBoolean() || pos == prev) -->Line_15 $$ int span[ CD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_14 $$ if (r.nextBoolean() || pos == prev) [ FD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_27 $$ int deltime = r.nextInt(DEL_RANGE)[ FD ]
Line_20 $$ includesStart = span > 0 ? r.nextBoolean() : true-->Line_24 $$ includesStart = false[ FD ]
Line_14 $$ if (r.nextBoolean() || pos == prev) -->Line_18 $$ if (pos > prev) [ CD ]
Line_7 $$ List<Unfiltered> content = new ArrayList(ITEMS)-->Line_33 $$ content.add(emptyRowAt(pos, timeGenerator))[ FD ]
Line_7 $$ List<Unfiltered> content = new ArrayList(ITEMS)-->Line_43 $$ dumpList(content)[ FD ]
Line_10 $$ int pos = positions[i]-->Line_34 $$ prev = pos[ FD ]
Line_3 $$ int[] positions = new int[ITEMS + 1]-->Line_6 $$ Arrays.sort(positions)[ FD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_25 $$ includesEnd = r.nextBoolean()[ FD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_8 $$ int prev = -1[ CD ]
Line_31 $$ prev = pos + span - (includesEnd ? 0 : 1)-->Line_34 $$ prev = pos[ FD ]
Line_18 $$ if (pos > prev) -->Line_21 $$ includesEnd = span > 0 ? r.nextBoolean() : true[ CD ]
Line_14 $$ if (r.nextBoolean() || pos == prev) -->Line_30 $$ content.add(new RangeTombstoneBoundMarker(boundFor(pos + span, false, includesEnd), dt))[ CD ]
Line_31 $$ prev = pos + span - (includesEnd ? 0 : 1)-->Line_18 $$ if (pos > prev) [ FD ]
Line_17 $$ boolean includesEnd-->Line_30 $$ content.add(new RangeTombstoneBoundMarker(boundFor(pos + span, false, includesEnd), dt))[ FD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_37 $$ attachBoundaries(content)[ CD ]
Line_14 $$ if (r.nextBoolean() || pos == prev) -->Line_27 $$ int deltime = r.nextInt(DEL_RANGE)[ CD ]
Line_20 $$ includesStart = span > 0 ? r.nextBoolean() : true-->Line_29 $$ content.add(new RangeTombstoneBoundMarker(boundFor(pos, true, includesStart), dt))[ FD ]
Line_9 $$ for (int i = 0; i < ITEMS; ++i) -->Line_10 $$ int pos = positions[i][ CD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_42 $$ if (ITEMS <= 20)[ CD ]
Line_14 $$ if (r.nextBoolean() || pos == prev) -->Line_17 $$ boolean includesEnd[ CD ]
Line_34 $$ prev = pos-->Line_18 $$ if (pos > prev) [ FD ]
Line_18 $$ if (pos > prev) -->Line_23 $$ span = 1 + r.nextInt(sz)[ CD ]
Line_24 $$ includesStart = false-->Line_29 $$ content.add(new RangeTombstoneBoundMarker(boundFor(pos, true, includesStart), dt))[ FD ]
Line_10 $$ int pos = positions[i]-->Line_18 $$ if (pos > prev) [ FD ]
Line_7 $$ List<Unfiltered> content = new ArrayList(ITEMS)-->Line_37 $$ attachBoundaries(content)[ FD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_41 $$ verifyValid(content)[ CD ]
Line_17 $$ boolean includesEnd-->Line_21 $$ includesEnd = span > 0 ? r.nextBoolean() : true[ FD ]
Line_14 $$ if (r.nextBoolean() || pos == prev) -->Line_29 $$ content.add(new RangeTombstoneBoundMarker(boundFor(pos, true, includesStart), dt))[ CD ]
Line_38 $$ if (reversed) -->Line_39 $$ Collections.reverse(content)[ CD ]
Line_18 $$ if (pos > prev) -->Line_25 $$ includesEnd = r.nextBoolean()[ CD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_33 $$ content.add(emptyRowAt(pos, timeGenerator))[ FD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_4 $$ for (int i = 0; i < ITEMS; ++i) positions[i] = r.nextInt(RANGE)[ CD ]
Line_7 $$ List<Unfiltered> content = new ArrayList(ITEMS)-->Line_41 $$ verifyValid(content)[ FD ]
Line_16 $$ boolean includesStart-->Line_24 $$ includesStart = false[ FD ]
Line_14 $$ if (r.nextBoolean() || pos == prev) -->Line_16 $$ boolean includesStart[ CD ]
Line_11 $$ int sz = positions[i + 1] - pos-->Line_23 $$ span = 1 + r.nextInt(sz)[ FD ]
Line_7 $$ List<Unfiltered> content = new ArrayList(ITEMS)-->Line_29 $$ content.add(new RangeTombstoneBoundMarker(boundFor(pos, true, includesStart), dt))[ FD ]
Line_18 $$ if (pos > prev) -->Line_20 $$ includesStart = span > 0 ? r.nextBoolean() : true[ CD ]
Line_14 $$ if (r.nextBoolean() || pos == prev) -->Line_33 $$ content.add(emptyRowAt(pos, timeGenerator))[ CD ]
Line_8 $$ int prev = -1-->Line_31 $$ prev = pos + span - (includesEnd ? 0 : 1)[ FD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_7 $$ List<Unfiltered> content = new ArrayList(ITEMS)[ CD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_9 $$ for (int i = 0; i < ITEMS; ++i) [ CD ]
Line_9 $$ for (int i = 0; i < ITEMS; ++i) -->Line_14 $$ if (r.nextBoolean() || pos == prev) [ CD ]
Line_19 $$ span = r.nextInt(sz + 1)-->Line_23 $$ span = 1 + r.nextInt(sz)[ FD ]
Line_21 $$ includesEnd = span > 0 ? r.nextBoolean() : true-->Line_25 $$ includesEnd = r.nextBoolean()[ FD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_23 $$ span = 1 + r.nextInt(sz)[ FD ]
Line_7 $$ List<Unfiltered> content = new ArrayList(ITEMS)-->Line_30 $$ content.add(new RangeTombstoneBoundMarker(boundFor(pos + span, false, includesEnd), dt))[ FD ]
Line_14 $$ if (r.nextBoolean() || pos == prev) -->Line_28 $$ DeletionTime dt = new DeletionTime(deltime, deltime)[ CD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_44 $$ return content[ CD ]
Line_10 $$ int pos = positions[i]-->Line_29 $$ content.add(new RangeTombstoneBoundMarker(boundFor(pos, true, includesStart), dt))[ FD ]
Line_21 $$ includesEnd = span > 0 ? r.nextBoolean() : true-->Line_30 $$ content.add(new RangeTombstoneBoundMarker(boundFor(pos + span, false, includesEnd), dt))[ FD ]
Line_8 $$ int prev = -1-->Line_18 $$ if (pos > prev) [ FD ]
Line_42 $$ if (ITEMS <= 20)-->Line_43 $$ dumpList(content)[ CD ]
Line_18 $$ if (pos > prev) -->Line_19 $$ span = r.nextInt(sz + 1)[ CD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_38 $$ if (reversed) [ CD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_6 $$ Arrays.sort(positions)[ CD ]
Line_18 $$ if (pos > prev) -->Line_24 $$ includesStart = false[ CD ]
Line_14 $$ if (r.nextBoolean() || pos == prev) -->Line_34 $$ prev = pos[ CD ]
Line_14 $$ if (r.nextBoolean() || pos == prev) -->Line_31 $$ prev = pos + span - (includesEnd ? 0 : 1)[ CD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_19 $$ span = r.nextInt(sz + 1)[ FD ]
Line_17 $$ boolean includesEnd-->Line_25 $$ includesEnd = r.nextBoolean()[ FD ]
Line_9 $$ for (int i = 0; i < ITEMS; ++i) -->Line_12 $$ if (sz == 0 && pos == prev)[ CD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_20 $$ includesStart = span > 0 ? r.nextBoolean() : true[ FD ]
Line_15 $$ int span-->Line_19 $$ span = r.nextInt(sz + 1)[ FD ]
Line_2 $$ private List<Unfiltered> generateSource(Random r, Function<Integer, Integer> timeGenerator) -->Line_4 $$ positions[i] = r.nextInt(RANGE)[ FD ]
Line_8 $$ int prev = -1-->Line_34 $$ prev = pos[ FD ]
Line_10 $$ int pos = positions[i]-->Line_33 $$ content.add(emptyRowAt(pos, timeGenerator))[ FD ]
Line_25 $$ includesEnd = r.nextBoolean()-->Line_30 $$ content.add(new RangeTombstoneBoundMarker(boundFor(pos + span, false, includesEnd), dt))[ FD ]
