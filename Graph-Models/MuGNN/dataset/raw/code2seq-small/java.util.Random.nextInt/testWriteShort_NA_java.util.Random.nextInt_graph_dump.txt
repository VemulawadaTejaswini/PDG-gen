Line_8 $$ for (int i = 0; i < _COUNT; i++) -->Line_11 $$ shortBuffer.put(shorts[i])[ CD ]
Line_4 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(_COUNT * 2)-->Line_5 $$ byteBuffer.order(ByteOrder.BIG_ENDIAN)[ FD ]
Line_2 $$ public void testWriteShort() -->Line_14 $$ Assert.assertArrayEquals(byteBuffer.array(), bytes)[ CD ]
Line_4 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(_COUNT * 2)-->Line_14 $$ Assert.assertArrayEquals(byteBuffer.array(), bytes)[ FD ]
Line_3 $$ Serializer serializer = new Serializer()-->Line_13 $$ byte[] bytes = serializer.toByteBuffer().array()[ FD ]
Line_2 $$ public void testWriteShort() -->Line_4 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(_COUNT * 2)[ CD ]
Line_8 $$ for (int i = 0; i < _COUNT; i++) -->Line_10 $$ serializer.writeShort(shorts[i])[ CD ]
Line_6 $$ ShortBuffer shortBuffer = byteBuffer.asShortBuffer()-->Line_11 $$ shortBuffer.put(shorts[i])[ FD ]
Line_2 $$ public void testWriteShort() -->Line_5 $$ byteBuffer.order(ByteOrder.BIG_ENDIAN)[ CD ]
Line_8 $$ for (int i = 0; i < _COUNT; i++) -->Line_9 $$ shorts[i] = (short) _random.nextInt()[ CD ]
Line_2 $$ public void testWriteShort() -->Line_7 $$ short[] shorts = new short[_COUNT][ CD ]
Line_13 $$ byte[] bytes = serializer.toByteBuffer().array()-->Line_14 $$ Assert.assertArrayEquals(byteBuffer.array(), bytes)[ FD ]
Line_2 $$ public void testWriteShort() -->Line_6 $$ ShortBuffer shortBuffer = byteBuffer.asShortBuffer()[ CD ]
Line_4 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(_COUNT * 2)-->Line_6 $$ ShortBuffer shortBuffer = byteBuffer.asShortBuffer()[ FD ]
Line_2 $$ public void testWriteShort() -->Line_3 $$ Serializer serializer = new Serializer()[ CD ]
Line_2 $$ public void testWriteShort() -->Line_8 $$ for (int i = 0; i < _COUNT; i++) [ CD ]
Line_2 $$ public void testWriteShort() -->Line_13 $$ byte[] bytes = serializer.toByteBuffer().array()[ CD ]
Line_3 $$ Serializer serializer = new Serializer()-->Line_10 $$ serializer.writeShort(shorts[i])[ FD ]
