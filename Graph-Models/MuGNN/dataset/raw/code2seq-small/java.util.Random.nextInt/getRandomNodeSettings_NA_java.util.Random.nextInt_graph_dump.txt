Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_70 $$ if (random.nextBoolean()) [ CD ]
Line_3 $$ Random random = new Random(seed)-->Line_22 $$ if (random.nextInt(10) == 0) [ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_6 $$ builder.put(Transport.TRANSPORT_TCP_COMPRESS.getKey(), rarely(random))[ FD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_33 $$ builder.put(NettyTransport.WORKER_COUNT, random.nextInt(3) + 1)[ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_38 $$ if (random.nextBoolean()) [ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_45 $$ if (random.nextBoolean()) [ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_71 $$ builder.put(NettyTransport.PING_SCHEDULE, RandomInts.randomIntBetween(random, 100, 2000) + "ms")[ FD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_3 $$ Random random = new Random(seed)[ CD ]
Line_3 $$ Random random = new Random(seed)-->Line_28 $$ builder.put("indices.fielddata.cache.size", 1 + random.nextInt(1000), ByteSizeUnit.MB)[ FD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_34 $$ builder.put(NettyTransport.CONNECTIONS_PER_NODE_RECOVERY, random.nextInt(2) + 1)[ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_9 $$ builder.put("cache.recycler.page.type", RandomPicks.randomFrom(random, PageCacheRecycler.Type.values()))[ FD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_45 $$ if (random.nextBoolean()) [ CD ]
Line_3 $$ Random random = new Random(seed)-->Line_52 $$ if (random.nextInt(10) == 0) [ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_56 $$ builder.put(IndexStoreConfig.INDICES_STORE_THROTTLE_MAX_BYTES_PER_SEC_SETTING.getKey(), new ByteSizeValue(RandomInts.randomIntBetween(random, 10, 200), ByteSizeUnit.MB))[ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_39 $$ builder.put(MappingUpdatedAction.INDICES_MAPPING_DYNAMIC_TIMEOUT_SETTING.getKey(), new TimeValue(RandomInts.randomIntBetween(random, 10, 30), TimeUnit.SECONDS))[ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_51 $$ if (random.nextBoolean()) [ FD ]
Line_41 $$ if (random.nextInt(10) == 0) -->Line_43 $$ builder.put(HierarchyCircuitBreakerService.FIELDDATA_CIRCUIT_BREAKER_TYPE_SETTING.getKey(), "noop")[ CD ]
Line_3 $$ Random random = new Random(seed)-->Line_35 $$ builder.put(NettyTransport.CONNECTIONS_PER_NODE_BULK, random.nextInt(3) + 1)[ FD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_51 $$ if (random.nextBoolean()) [ CD ]
Line_26 $$ if (random.nextBoolean()) -->Line_27 $$ if (random.nextBoolean()) [ CD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_11 $$ if (random.nextInt(10) == 0) [ CD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_28 $$ builder.put("indices.fielddata.cache.size", 1 + random.nextInt(1000), ByteSizeUnit.MB)[ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_18 $$ if (random.nextBoolean()) [ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_74 $$ builder.put(ScriptService.SCRIPT_CACHE_SIZE_SETTING, RandomInts.randomIntBetween(random, -100, 2000))[ FD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_81 $$ return builder.build()[ CD ]
Line_3 $$ Random random = new Random(seed)-->Line_33 $$ builder.put(NettyTransport.WORKER_COUNT, random.nextInt(3) + 1)[ FD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_76 $$ if (random.nextBoolean()) [ CD ]
Line_3 $$ Random random = new Random(seed)-->Line_77 $$ builder.put(ScriptService.SCRIPT_CACHE_EXPIRE_SETTING, TimeValue.timeValueMillis(RandomInts.randomIntBetween(random, 750, 10000000)))[ FD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_48 $$ if (random.nextBoolean()) [ CD ]
Line_63 $$ if (random.nextInt(10) == 0) -->Line_67 $$ builder.put(RecoverySettings.INDICES_RECOVERY_MAX_BYTES_PER_SEC_SETTING.getKey(), new ByteSizeValue(RandomInts.randomIntBetween(random, 10, 200), ByteSizeUnit.MB))[ CD ]
Line_8 $$ if (random.nextBoolean()) -->Line_9 $$ builder.put("cache.recycler.page.type", RandomPicks.randomFrom(random, PageCacheRecycler.Type.values()))[ CD ]
Line_3 $$ Random random = new Random(seed)-->Line_46 $$ builder.put(IndexModule.QUERY_CACHE_TYPE, random.nextBoolean() ? IndexModule.INDEX_QUERY_CACHE : IndexModule.NONE_QUERY_CACHE)[ FD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_67 $$ builder.put(RecoverySettings.INDICES_RECOVERY_MAX_BYTES_PER_SEC_SETTING.getKey(), new ByteSizeValue(RandomInts.randomIntBetween(random, 10, 200), ByteSizeUnit.MB))[ FD ]
Line_38 $$ if (random.nextBoolean()) -->Line_39 $$ builder.put(MappingUpdatedAction.INDICES_MAPPING_DYNAMIC_TIMEOUT_SETTING.getKey(), new TimeValue(RandomInts.randomIntBetween(random, 10, 30), TimeUnit.SECONDS))[ CD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)[ FD ]
Line_45 $$ if (random.nextBoolean()) -->Line_46 $$ builder.put(IndexModule.QUERY_CACHE_TYPE, random.nextBoolean() ? IndexModule.INDEX_QUERY_CACHE : IndexModule.NONE_QUERY_CACHE)[ CD ]
Line_48 $$ if (random.nextBoolean()) -->Line_49 $$ builder.put(IndexModule.QUERY_CACHE_EVERYTHING, random.nextBoolean())[ CD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_74 $$ builder.put(ScriptService.SCRIPT_CACHE_SIZE_SETTING, RandomInts.randomIntBetween(random, -100, 2000))[ FD ]
Line_76 $$ if (random.nextBoolean()) -->Line_77 $$ builder.put(ScriptService.SCRIPT_CACHE_EXPIRE_SETTING, TimeValue.timeValueMillis(RandomInts.randomIntBetween(random, 750, 10000000)))[ CD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_22 $$ if (random.nextInt(10) == 0) [ CD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_42 $$ builder.put(HierarchyCircuitBreakerService.REQUEST_CIRCUIT_BREAKER_TYPE_SETTING.getKey(), "noop")[ FD ]
Line_41 $$ if (random.nextInt(10) == 0) -->Line_42 $$ builder.put(HierarchyCircuitBreakerService.REQUEST_CIRCUIT_BREAKER_TYPE_SETTING.getKey(), "noop")[ CD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_59 $$ if (random.nextBoolean()) [ CD ]
Line_3 $$ Random random = new Random(seed)-->Line_60 $$ builder.put(IndexStoreConfig.INDICES_STORE_THROTTLE_TYPE_SETTING.getKey(), RandomPicks.randomFrom(random, StoreRateLimiting.Type.values()))[ FD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_71 $$ builder.put(NettyTransport.PING_SCHEDULE, RandomInts.randomIntBetween(random, 100, 2000) + "ms")[ FD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_73 $$ if (random.nextBoolean()) [ CD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_77 $$ builder.put(ScriptService.SCRIPT_CACHE_EXPIRE_SETTING, TimeValue.timeValueMillis(RandomInts.randomIntBetween(random, 750, 10000000)))[ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_41 $$ if (random.nextInt(10) == 0) [ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_70 $$ if (random.nextBoolean()) [ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_49 $$ builder.put(IndexModule.QUERY_CACHE_EVERYTHING, random.nextBoolean())[ FD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_81 $$ return builder.build()[ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_8 $$ if (random.nextBoolean()) [ FD ]
Line_11 $$ if (random.nextInt(10) == 0) -->Line_14 $$ if (random.nextInt(10) != 0) [ CD ]
Line_3 $$ Random random = new Random(seed)-->Line_27 $$ if (random.nextBoolean()) [ FD ]
Line_59 $$ if (random.nextBoolean()) -->Line_60 $$ builder.put(IndexStoreConfig.INDICES_STORE_THROTTLE_TYPE_SETTING.getKey(), RandomPicks.randomFrom(random, StoreRateLimiting.Type.values()))[ CD ]
Line_51 $$ if (random.nextBoolean()) -->Line_52 $$ if (random.nextInt(10) == 0) [ CD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_49 $$ builder.put(IndexModule.QUERY_CACHE_EVERYTHING, random.nextBoolean())[ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_76 $$ if (random.nextBoolean()) [ FD ]
Line_70 $$ if (random.nextBoolean()) -->Line_71 $$ builder.put(NettyTransport.PING_SCHEDULE, RandomInts.randomIntBetween(random, 100, 2000) + "ms")[ CD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_62 $$ if (random.nextBoolean()) [ CD ]
Line_3 $$ Random random = new Random(seed)-->Line_11 $$ if (random.nextInt(10) == 0) [ FD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_8 $$ if (random.nextBoolean()) [ CD ]
Line_62 $$ if (random.nextBoolean()) -->Line_63 $$ if (random.nextInt(10) == 0) [ CD ]
Line_3 $$ Random random = new Random(seed)-->Line_26 $$ if (random.nextBoolean()) [ FD ]
Line_5 $$ if (isLocalTransportConfigured() == false) -->Line_6 $$ builder.put(Transport.TRANSPORT_TCP_COMPRESS.getKey(), rarely(random))[ CD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_36 $$ builder.put(NettyTransport.CONNECTIONS_PER_NODE_REG, random.nextInt(6) + 1)[ FD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_41 $$ if (random.nextInt(10) == 0) [ CD ]
Line_3 $$ Random random = new Random(seed)-->Line_67 $$ builder.put(RecoverySettings.INDICES_RECOVERY_MAX_BYTES_PER_SEC_SETTING.getKey(), new ByteSizeValue(RandomInts.randomIntBetween(random, 10, 200), ByteSizeUnit.MB))[ FD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_46 $$ builder.put(IndexModule.QUERY_CACHE_TYPE, random.nextBoolean() ? IndexModule.INDEX_QUERY_CACHE : IndexModule.NONE_QUERY_CACHE)[ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_59 $$ if (random.nextBoolean()) [ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_48 $$ if (random.nextBoolean()) [ FD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_39 $$ builder.put(MappingUpdatedAction.INDICES_MAPPING_DYNAMIC_TIMEOUT_SETTING.getKey(), new TimeValue(RandomInts.randomIntBetween(random, 10, 30), TimeUnit.SECONDS))[ FD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_43 $$ builder.put(HierarchyCircuitBreakerService.FIELDDATA_CIRCUIT_BREAKER_TYPE_SETTING.getKey(), "noop")[ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_36 $$ builder.put(NettyTransport.CONNECTIONS_PER_NODE_REG, random.nextInt(6) + 1)[ FD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_6 $$ builder.put(Transport.TRANSPORT_TCP_COMPRESS.getKey(), rarely(random))[ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_34 $$ builder.put(NettyTransport.CONNECTIONS_PER_NODE_RECOVERY, random.nextInt(2) + 1)[ FD ]
Line_3 $$ Random random = new Random(seed)-->Line_63 $$ if (random.nextInt(10) == 0) [ FD ]
Line_52 $$ if (random.nextInt(10) == 0) -->Line_56 $$ builder.put(IndexStoreConfig.INDICES_STORE_THROTTLE_MAX_BYTES_PER_SEC_SETTING.getKey(), new ByteSizeValue(RandomInts.randomIntBetween(random, 10, 200), ByteSizeUnit.MB))[ CD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_5 $$ if (isLocalTransportConfigured() == false) [ CD ]
Line_3 $$ Random random = new Random(seed)-->Line_14 $$ if (random.nextInt(10) != 0) [ FD ]
Line_27 $$ if (random.nextBoolean()) -->Line_28 $$ builder.put("indices.fielddata.cache.size", 1 + random.nextInt(1000), ByteSizeUnit.MB)[ CD ]
Line_73 $$ if (random.nextBoolean()) -->Line_74 $$ builder.put(ScriptService.SCRIPT_CACHE_SIZE_SETTING, RandomInts.randomIntBetween(random, -100, 2000))[ CD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_60 $$ builder.put(IndexStoreConfig.INDICES_STORE_THROTTLE_TYPE_SETTING.getKey(), RandomPicks.randomFrom(random, StoreRateLimiting.Type.values()))[ FD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_9 $$ builder.put("cache.recycler.page.type", RandomPicks.randomFrom(random, PageCacheRecycler.Type.values()))[ FD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)[ CD ]
Line_3 $$ Random random = new Random(seed)-->Line_62 $$ if (random.nextBoolean()) [ FD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_18 $$ if (random.nextBoolean()) [ CD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_35 $$ builder.put(NettyTransport.CONNECTIONS_PER_NODE_BULK, random.nextInt(3) + 1)[ FD ]
Line_4 $$ Builder builder = Settings.settingsBuilder().put(SETTING_CLUSTER_NODE_SEED, seed)-->Line_56 $$ builder.put(IndexStoreConfig.INDICES_STORE_THROTTLE_MAX_BYTES_PER_SEC_SETTING.getKey(), new ByteSizeValue(RandomInts.randomIntBetween(random, 10, 200), ByteSizeUnit.MB))[ FD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_38 $$ if (random.nextBoolean()) [ CD ]
Line_2 $$ private Settings getRandomNodeSettings(long seed) -->Line_26 $$ if (random.nextBoolean()) [ CD ]
Line_3 $$ Random random = new Random(seed)-->Line_73 $$ if (random.nextBoolean()) [ FD ]
