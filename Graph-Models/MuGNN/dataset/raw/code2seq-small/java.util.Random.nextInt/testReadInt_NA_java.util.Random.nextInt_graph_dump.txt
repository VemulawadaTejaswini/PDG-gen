Line_7 $$ for (int i = 0; i < _COUNT; i++) -->Line_12 $$ for (int i = 0; i < _COUNT; i++) [ FD ]
Line_5 $$ IntBuffer intBuffer = byteBuffer.asIntBuffer()-->Line_9 $$ intBuffer.put(ints[i])[ FD ]
Line_3 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(_COUNT * 4)-->Line_5 $$ IntBuffer intBuffer = byteBuffer.asIntBuffer()[ FD ]
Line_11 $$ Deserializer deserializer = new Deserializer(byteBuffer)-->Line_13 $$ Assert.assertEquals(ints[i], deserializer.readInt())[ FD ]
Line_2 $$ public void testReadInt() -->Line_3 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(_COUNT * 4)[ CD ]
Line_2 $$ public void testReadInt() -->Line_11 $$ Deserializer deserializer = new Deserializer(byteBuffer)[ CD ]
Line_2 $$ public void testReadInt() -->Line_4 $$ byteBuffer.order(ByteOrder.BIG_ENDIAN)[ CD ]
Line_3 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(_COUNT * 4)-->Line_4 $$ byteBuffer.order(ByteOrder.BIG_ENDIAN)[ FD ]
Line_7 $$ for (int i = 0; i < _COUNT; i++) -->Line_9 $$ intBuffer.put(ints[i])[ CD ]
Line_7 $$ for (int i = 0; i < _COUNT; i++) -->Line_8 $$ ints[i] = _random.nextInt()[ CD ]
Line_2 $$ public void testReadInt() -->Line_6 $$ int[] ints = new int[_COUNT][ CD ]
Line_2 $$ public void testReadInt() -->Line_7 $$ for (int i = 0; i < _COUNT; i++) [ CD ]
Line_2 $$ public void testReadInt() -->Line_5 $$ IntBuffer intBuffer = byteBuffer.asIntBuffer()[ CD ]
Line_12 $$ for (int i = 0; i < _COUNT; i++) -->Line_13 $$ Assert.assertEquals(ints[i], deserializer.readInt())[ CD ]
Line_2 $$ public void testReadInt() -->Line_12 $$ for (int i = 0; i < _COUNT; i++) [ CD ]
