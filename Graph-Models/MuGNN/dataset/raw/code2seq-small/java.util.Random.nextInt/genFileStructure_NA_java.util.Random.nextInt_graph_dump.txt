Line_11 $$ for (int i = 0; i < numOfFiles; i++) -->Line_14 $$ do [ CD ]
Line_13 $$ double fileSize-->Line_15 $$ fileSize = r.nextGaussian() + avgFileSize[ FD ]
Line_10 $$ int totalLeaves = leaves.size()-->Line_12 $$ int leaveNum = r.nextInt(totalLeaves)[ FD ]
Line_15 $$ fileSize = r.nextGaussian() + avgFileSize-->Line_14 $$ do [ FD ]
Line_11 $$ for (int i = 0; i < numOfFiles; i++) -->Line_12 $$ int leaveNum = r.nextInt(totalLeaves)[ CD ]
Line_13 $$ double fileSize-->Line_14 $$ do [ FD ]
Line_11 $$ for (int i = 0; i < numOfFiles; i++) -->Line_17 $$ leaves.get(leaveNum).addChild(new FileINode(FILE_NAME_PREFIX + i, fileSize))[ CD ]
Line_14 $$ do -->Line_15 $$ fileSize = r.nextGaussian() + avgFileSize[ CD ]
Line_9 $$ List<INode> leaves = getLeaves()-->Line_17 $$ leaves.get(leaveNum).addChild(new FileINode(FILE_NAME_PREFIX + i, fileSize))[ FD ]
Line_12 $$ int leaveNum = r.nextInt(totalLeaves)-->Line_17 $$ leaves.get(leaveNum).addChild(new FileINode(FILE_NAME_PREFIX + i, fileSize))[ FD ]
Line_9 $$ List<INode> leaves = getLeaves()-->Line_10 $$ int totalLeaves = leaves.size()[ FD ]
Line_11 $$ for (int i = 0; i < numOfFiles; i++) -->Line_13 $$ double fileSize[ CD ]
