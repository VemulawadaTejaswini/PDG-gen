Line_4 $$ final TokenSet set = TokenSet.create()-->Line_10 $$ assertFalse(set.contains(next))[ FD ]
Line_2 $$ public void performance() throws Exception -->Line_4 $$ final TokenSet set = TokenSet.create()[ CD ]
Line_2 $$ public void performance() throws Exception -->Line_6 $$ PlatformTestUtil.startPerformanceTest("TokenSet.contains() performance", 25, new ThrowableRunnable() [ CD ]
Line_2 $$ public void performance() throws Exception -->Line_3 $$ final IElementType[] elementTypes = IElementType.enumerate(IElementType.TRUE)[ CD ]
Line_8 $$ for (int i = 0; i < 1000000; i++) -->Line_10 $$ assertFalse(set.contains(next))[ CD ]
Line_6 $$ PlatformTestUtil.startPerformanceTest("TokenSet.contains() performance", 25, new ThrowableRunnable() -->Line_8 $$ for (int i = 0; i < 1000000; i++) [ CD ]
Line_2 $$ public void performance() throws Exception -->Line_5 $$ final int shift = new Random().nextInt(500000)[ CD ]
Line_8 $$ for (int i = 0; i < 1000000; i++) -->Line_9 $$ final IElementType next = elementTypes[((i + shift) % elementTypes.length)][ CD ]
Line_9 $$ final IElementType next = elementTypes[((i + shift) % elementTypes.length)]-->Line_10 $$ assertFalse(set.contains(next))[ FD ]
