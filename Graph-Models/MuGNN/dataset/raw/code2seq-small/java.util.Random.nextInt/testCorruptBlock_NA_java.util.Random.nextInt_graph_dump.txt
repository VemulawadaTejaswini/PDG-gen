Line_11 $$ int replicaCount = 0-->Line_55 $$ replicaCount = blocks.get(0).getLocations().length[ FD ]
Line_31 $$ if (blockFile != null && blockFile.exists()) -->Line_37 $$ raFile.write(badString.getBytes())[ CD ]
Line_9 $$ DFSClient dfsClient = null-->Line_47 $$ blocks = dfsClient.getNamenode().getBlockLocations(file1.toString(), 0, Long.MAX_VALUE)[ FD ]
Line_48 $$ replicaCount = blocks.get(0).getLocations().length-->Line_49 $$ while (replicaCount != factor) [ FD ]
Line_15 $$ MiniDFSCluster cluster = null-->Line_17 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()[ FD ]
Line_13 $$ String outStr = null-->Line_62 $$ assertTrue(outStr.contains("testCorruptBlock"))[ FD ]
Line_17 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_64 $$ if (cluster != null) [ FD ]
Line_20 $$ Path file1 = new Path("/testCorruptBlock")-->Line_54 $$ blocks = dfsClient.getNamenode().getBlockLocations(file1.toString(), 0, Long.MAX_VALUE)[ FD ]
Line_20 $$ Path file1 = new Path("/testCorruptBlock")-->Line_42 $$ IOUtils.copyBytes(fs.open(file1), new IOUtils.NullOutputStream(), conf, true)[ FD ]
Line_14 $$ short factor = 1-->Line_49 $$ while (replicaCount != factor) [ FD ]
Line_8 $$ FileSystem fs = null-->Line_21 $$ DFSTestUtil.createFile(fs, file1, 1024, factor, 0)[ FD ]
Line_10 $$ LocatedBlocks blocks = null-->Line_54 $$ blocks = dfsClient.getNamenode().getBlockLocations(file1.toString(), 0, Long.MAX_VALUE)[ FD ]
Line_20 $$ Path file1 = new Path("/testCorruptBlock")-->Line_21 $$ DFSTestUtil.createFile(fs, file1, 1024, factor, 0)[ FD ]
Line_31 $$ if (blockFile != null && blockFile.exists()) -->Line_34 $$ String badString = "BADBAD"[ CD ]
Line_15 $$ MiniDFSCluster cluster = null-->Line_18 $$ cluster.waitActive()[ FD ]
Line_13 $$ String outStr = null-->Line_28 $$ assertTrue(outStr.contains(NamenodeFsck.HEALTHY_STATUS))[ FD ]
Line_17 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_46 $$ dfsClient = new DFSClient(new InetSocketAddress("localhost", cluster.getNameNodePort()), conf)[ FD ]
Line_54 $$ blocks = dfsClient.getNamenode().getBlockLocations(file1.toString(), 0, Long.MAX_VALUE)-->Line_57 $$ assertTrue(blocks.get(0).isCorrupt())[ FD ]
Line_10 $$ LocatedBlocks blocks = null-->Line_48 $$ replicaCount = blocks.get(0).getLocations().length[ FD ]
Line_34 $$ String badString = "BADBAD"-->Line_37 $$ raFile.write(badString.getBytes())[ FD ]
Line_19 $$ fs = cluster.getFileSystem()-->Line_24 $$ ExtendedBlock block = DFSTestUtil.getFirstBlock(fs, file1)[ FD ]
Line_9 $$ DFSClient dfsClient = null-->Line_46 $$ dfsClient = new DFSClient(new InetSocketAddress("localhost", cluster.getNameNodePort()), conf)[ FD ]
Line_17 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_19 $$ fs = cluster.getFileSystem()[ FD ]
Line_15 $$ MiniDFSCluster cluster = null-->Line_46 $$ dfsClient = new DFSClient(new InetSocketAddress("localhost", cluster.getNameNodePort()), conf)[ FD ]
Line_31 $$ if (blockFile != null && blockFile.exists()) -->Line_38 $$ raFile.close()[ CD ]
Line_55 $$ replicaCount = blocks.get(0).getLocations().length-->Line_49 $$ while (replicaCount != factor) [ FD ]
Line_46 $$ dfsClient = new DFSClient(new InetSocketAddress("localhost", cluster.getNameNodePort()), conf)-->Line_54 $$ blocks = dfsClient.getNamenode().getBlockLocations(file1.toString(), 0, Long.MAX_VALUE)[ FD ]
Line_32 $$ RandomAccessFile raFile = new RandomAccessFile(blockFile, "rw")-->Line_36 $$ raFile.seek(rand)[ FD ]
Line_31 $$ if (blockFile != null && blockFile.exists()) -->Line_35 $$ int rand = random.nextInt((int) channel.size() / 2)[ CD ]
Line_35 $$ int rand = random.nextInt((int) channel.size() / 2)-->Line_36 $$ raFile.seek(rand)[ FD ]
Line_49 $$ while (replicaCount != factor) -->Line_55 $$ replicaCount = blocks.get(0).getLocations().length[ CD ]
Line_31 $$ if (blockFile != null && blockFile.exists()) -->Line_33 $$ FileChannel channel = raFile.getChannel()[ CD ]
Line_17 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_65 $$ cluster.shutdown()[ FD ]
Line_32 $$ RandomAccessFile raFile = new RandomAccessFile(blockFile, "rw")-->Line_33 $$ FileChannel channel = raFile.getChannel()[ FD ]
Line_31 $$ if (blockFile != null && blockFile.exists()) -->Line_32 $$ RandomAccessFile raFile = new RandomAccessFile(blockFile, "rw")[ CD ]
Line_64 $$ if (cluster != null) -->Line_65 $$ cluster.shutdown()[ CD ]
Line_4 $$ Configuration conf = new HdfsConfiguration()-->Line_5 $$ conf.setLong(DFSConfigKeys.DFS_BLOCKREPORT_INTERVAL_MSEC_KEY, 1000)[ FD ]
Line_9 $$ DFSClient dfsClient = null-->Line_54 $$ blocks = dfsClient.getNamenode().getBlockLocations(file1.toString(), 0, Long.MAX_VALUE)[ FD ]
Line_47 $$ blocks = dfsClient.getNamenode().getBlockLocations(file1.toString(), 0, Long.MAX_VALUE)-->Line_57 $$ assertTrue(blocks.get(0).isCorrupt())[ FD ]
Line_12 $$ Random random = new Random()-->Line_35 $$ int rand = random.nextInt((int) channel.size() / 2)[ FD ]
Line_4 $$ Configuration conf = new HdfsConfiguration()-->Line_42 $$ IOUtils.copyBytes(fs.open(file1), new IOUtils.NullOutputStream(), conf, true)[ FD ]
Line_19 $$ fs = cluster.getFileSystem()-->Line_42 $$ IOUtils.copyBytes(fs.open(file1), new IOUtils.NullOutputStream(), conf, true)[ FD ]
Line_13 $$ String outStr = null-->Line_60 $$ System.out.println(outStr)[ FD ]
Line_47 $$ blocks = dfsClient.getNamenode().getBlockLocations(file1.toString(), 0, Long.MAX_VALUE)-->Line_55 $$ replicaCount = blocks.get(0).getLocations().length[ FD ]
Line_14 $$ short factor = 1-->Line_21 $$ DFSTestUtil.createFile(fs, file1, 1024, factor, 0)[ FD ]
Line_15 $$ MiniDFSCluster cluster = null-->Line_64 $$ if (cluster != null) [ FD ]
Line_32 $$ RandomAccessFile raFile = new RandomAccessFile(blockFile, "rw")-->Line_38 $$ raFile.close()[ FD ]
Line_15 $$ MiniDFSCluster cluster = null-->Line_65 $$ cluster.shutdown()[ FD ]
Line_8 $$ FileSystem fs = null-->Line_24 $$ ExtendedBlock block = DFSTestUtil.getFirstBlock(fs, file1)[ FD ]
Line_10 $$ LocatedBlocks blocks = null-->Line_47 $$ blocks = dfsClient.getNamenode().getBlockLocations(file1.toString(), 0, Long.MAX_VALUE)[ FD ]
Line_20 $$ Path file1 = new Path("/testCorruptBlock")-->Line_47 $$ blocks = dfsClient.getNamenode().getBlockLocations(file1.toString(), 0, Long.MAX_VALUE)[ FD ]
Line_49 $$ while (replicaCount != factor) -->Line_54 $$ blocks = dfsClient.getNamenode().getBlockLocations(file1.toString(), 0, Long.MAX_VALUE)[ CD ]
Line_47 $$ blocks = dfsClient.getNamenode().getBlockLocations(file1.toString(), 0, Long.MAX_VALUE)-->Line_54 $$ blocks = dfsClient.getNamenode().getBlockLocations(file1.toString(), 0, Long.MAX_VALUE)[ FD ]
Line_54 $$ blocks = dfsClient.getNamenode().getBlockLocations(file1.toString(), 0, Long.MAX_VALUE)-->Line_55 $$ replicaCount = blocks.get(0).getLocations().length[ FD ]
Line_15 $$ MiniDFSCluster cluster = null-->Line_19 $$ fs = cluster.getFileSystem()[ FD ]
Line_19 $$ fs = cluster.getFileSystem()-->Line_21 $$ DFSTestUtil.createFile(fs, file1, 1024, factor, 0)[ FD ]
Line_10 $$ LocatedBlocks blocks = null-->Line_55 $$ replicaCount = blocks.get(0).getLocations().length[ FD ]
Line_13 $$ String outStr = null-->Line_61 $$ assertTrue(outStr.contains(NamenodeFsck.CORRUPT_STATUS))[ FD ]
Line_11 $$ int replicaCount = 0-->Line_49 $$ while (replicaCount != factor) [ FD ]
Line_33 $$ FileChannel channel = raFile.getChannel()-->Line_35 $$ int rand = random.nextInt((int) channel.size() / 2)[ FD ]
Line_13 $$ String outStr = null-->Line_27 $$ System.out.println(outStr)[ FD ]
Line_17 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(1).build()-->Line_18 $$ cluster.waitActive()[ FD ]
Line_20 $$ Path file1 = new Path("/testCorruptBlock")-->Line_24 $$ ExtendedBlock block = DFSTestUtil.getFirstBlock(fs, file1)[ FD ]
Line_46 $$ dfsClient = new DFSClient(new InetSocketAddress("localhost", cluster.getNameNodePort()), conf)-->Line_47 $$ blocks = dfsClient.getNamenode().getBlockLocations(file1.toString(), 0, Long.MAX_VALUE)[ FD ]
Line_11 $$ int replicaCount = 0-->Line_48 $$ replicaCount = blocks.get(0).getLocations().length[ FD ]
Line_8 $$ FileSystem fs = null-->Line_42 $$ IOUtils.copyBytes(fs.open(file1), new IOUtils.NullOutputStream(), conf, true)[ FD ]
Line_32 $$ RandomAccessFile raFile = new RandomAccessFile(blockFile, "rw")-->Line_37 $$ raFile.write(badString.getBytes())[ FD ]
Line_48 $$ replicaCount = blocks.get(0).getLocations().length-->Line_55 $$ replicaCount = blocks.get(0).getLocations().length[ FD ]
Line_47 $$ blocks = dfsClient.getNamenode().getBlockLocations(file1.toString(), 0, Long.MAX_VALUE)-->Line_48 $$ replicaCount = blocks.get(0).getLocations().length[ FD ]
Line_10 $$ LocatedBlocks blocks = null-->Line_57 $$ assertTrue(blocks.get(0).isCorrupt())[ FD ]
Line_8 $$ FileSystem fs = null-->Line_19 $$ fs = cluster.getFileSystem()[ FD ]
Line_31 $$ if (blockFile != null && blockFile.exists()) -->Line_36 $$ raFile.seek(rand)[ CD ]
