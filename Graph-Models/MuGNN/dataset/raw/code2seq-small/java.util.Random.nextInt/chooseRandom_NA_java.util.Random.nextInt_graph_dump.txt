Line_2 $$ private Node chooseRandom(String scope, String excludedScope) -->Line_20 $$ node = getNode(excludedScope)[ FD ]
Line_2 $$ private Node chooseRandom(String scope, String excludedScope) -->Line_8 $$ excludedScope = null[ FD ]
Line_2 $$ private Node chooseRandom(String scope, String excludedScope) -->Line_12 $$ if (!(node instanceof InnerNode)) [ CD ]
Line_2 $$ private Node chooseRandom(String scope, String excludedScope) -->Line_16 $$ int numOfDatanodes = innerNode.getNumOfLeaves()[ CD ]
Line_2 $$ private Node chooseRandom(String scope, String excludedScope) -->Line_17 $$ if (excludedScope == null) [ CD ]
Line_12 $$ if (!(node instanceof InnerNode)) -->Line_13 $$ return node[ CD ]
Line_8 $$ excludedScope = null-->Line_20 $$ node = getNode(excludedScope)[ FD ]
Line_2 $$ private Node chooseRandom(String scope, String excludedScope) -->Line_7 $$ if (!excludedScope.startsWith(scope)) [ FD ]
Line_11 $$ Node node = getNode(scope)-->Line_18 $$ node = null[ FD ]
Line_2 $$ private Node chooseRandom(String scope, String excludedScope) -->Line_31 $$ return innerNode.getLeaf(leaveIndex, node)[ CD ]
Line_17 $$ if (excludedScope == null) -->Line_21 $$ if (!(node instanceof InnerNode)) [ CD ]
Line_8 $$ excludedScope = null-->Line_17 $$ if (excludedScope == null) [ FD ]
Line_18 $$ node = null-->Line_31 $$ return innerNode.getLeaf(leaveIndex, node)[ FD ]
Line_11 $$ Node node = getNode(scope)-->Line_20 $$ node = getNode(excludedScope)[ FD ]
Line_21 $$ if (!(node instanceof InnerNode)) -->Line_22 $$ numOfDatanodes -= 1[ CD ]
Line_2 $$ private Node chooseRandom(String scope, String excludedScope) -->Line_11 $$ Node node = getNode(scope)[ CD ]
Line_17 $$ if (excludedScope == null) -->Line_18 $$ node = null[ CD ]
Line_16 $$ int numOfDatanodes = innerNode.getNumOfLeaves()-->Line_22 $$ numOfDatanodes -= 1[ FD ]
Line_2 $$ private Node chooseRandom(String scope, String excludedScope) -->Line_11 $$ Node node = getNode(scope)[ FD ]
Line_21 $$ if (!(node instanceof InnerNode)) -->Line_24 $$ numOfDatanodes -= ((InnerNode) node).getNumOfLeaves()[ CD ]
Line_2 $$ private Node chooseRandom(String scope, String excludedScope) -->Line_30 $$ int leaveIndex = getRandom().nextInt(numOfDatanodes)[ CD ]
Line_2 $$ private Node chooseRandom(String scope, String excludedScope) -->Line_3 $$ if (excludedScope != null) [ CD ]
Line_20 $$ node = getNode(excludedScope)-->Line_31 $$ return innerNode.getLeaf(leaveIndex, node)[ FD ]
Line_4 $$ if (scope.startsWith(excludedScope)) -->Line_5 $$ return null[ CD ]
Line_15 $$ InnerNode innerNode = (InnerNode) node-->Line_16 $$ int numOfDatanodes = innerNode.getNumOfLeaves()[ FD ]
Line_22 $$ numOfDatanodes -= 1-->Line_27 $$ if (numOfDatanodes == 0) [ FD ]
Line_22 $$ numOfDatanodes -= 1-->Line_24 $$ numOfDatanodes -= ((InnerNode) node).getNumOfLeaves()[ FD ]
Line_16 $$ int numOfDatanodes = innerNode.getNumOfLeaves()-->Line_30 $$ int leaveIndex = getRandom().nextInt(numOfDatanodes)[ FD ]
Line_7 $$ if (!excludedScope.startsWith(scope)) -->Line_8 $$ excludedScope = null[ CD ]
Line_17 $$ if (excludedScope == null) -->Line_20 $$ node = getNode(excludedScope)[ CD ]
Line_3 $$ if (excludedScope != null) -->Line_4 $$ if (scope.startsWith(excludedScope)) [ CD ]
Line_18 $$ node = null-->Line_20 $$ node = getNode(excludedScope)[ FD ]
Line_16 $$ int numOfDatanodes = innerNode.getNumOfLeaves()-->Line_27 $$ if (numOfDatanodes == 0) [ FD ]
Line_2 $$ private Node chooseRandom(String scope, String excludedScope) -->Line_28 $$ throw new InvalidTopologyException("Failed to find datanode (scope=\"" + String.valueOf(scope) + "\" excludedScope=\"" + String.valueOf(excludedScope) + "\").")[ FD ]
Line_8 $$ excludedScope = null-->Line_28 $$ throw new InvalidTopologyException("Failed to find datanode (scope=\"" + String.valueOf(scope) + "\" excludedScope=\"" + String.valueOf(excludedScope) + "\").")[ FD ]
Line_11 $$ Node node = getNode(scope)-->Line_31 $$ return innerNode.getLeaf(leaveIndex, node)[ FD ]
Line_3 $$ if (excludedScope != null) -->Line_7 $$ if (!excludedScope.startsWith(scope)) [ CD ]
Line_2 $$ private Node chooseRandom(String scope, String excludedScope) -->Line_17 $$ if (excludedScope == null) [ FD ]
Line_2 $$ private Node chooseRandom(String scope, String excludedScope) -->Line_27 $$ if (numOfDatanodes == 0) [ CD ]
Line_24 $$ numOfDatanodes -= ((InnerNode) node).getNumOfLeaves()-->Line_27 $$ if (numOfDatanodes == 0) [ FD ]
Line_16 $$ int numOfDatanodes = innerNode.getNumOfLeaves()-->Line_24 $$ numOfDatanodes -= ((InnerNode) node).getNumOfLeaves()[ FD ]
Line_30 $$ int leaveIndex = getRandom().nextInt(numOfDatanodes)-->Line_31 $$ return innerNode.getLeaf(leaveIndex, node)[ FD ]
Line_15 $$ InnerNode innerNode = (InnerNode) node-->Line_31 $$ return innerNode.getLeaf(leaveIndex, node)[ FD ]
Line_2 $$ private Node chooseRandom(String scope, String excludedScope) -->Line_3 $$ if (excludedScope != null) [ FD ]
Line_2 $$ private Node chooseRandom(String scope, String excludedScope) -->Line_15 $$ InnerNode innerNode = (InnerNode) node[ CD ]
Line_22 $$ numOfDatanodes -= 1-->Line_30 $$ int leaveIndex = getRandom().nextInt(numOfDatanodes)[ FD ]
Line_24 $$ numOfDatanodes -= ((InnerNode) node).getNumOfLeaves()-->Line_30 $$ int leaveIndex = getRandom().nextInt(numOfDatanodes)[ FD ]
Line_2 $$ private Node chooseRandom(String scope, String excludedScope) -->Line_4 $$ if (scope.startsWith(excludedScope)) [ FD ]
