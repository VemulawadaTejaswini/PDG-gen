Line_2 $$ private static void cancelAndRestartDaemonLater(@NotNull ProgressIndicator progress, @NotNull final Project project) throws ProcessCanceledException -->Line_10 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ FD ]
Line_2 $$ private static void cancelAndRestartDaemonLater(@NotNull ProgressIndicator progress, @NotNull final Project project) throws ProcessCanceledException -->Line_3 $$ progress.cancel()[ FD ]
Line_2 $$ private static void cancelAndRestartDaemonLater(@NotNull ProgressIndicator progress, @NotNull final Project project) throws ProcessCanceledException -->Line_9 $$ if (!project.isDisposed() && !application.isDisposed() && !application.isUnitTestMode()) [ FD ]
Line_4 $$ JobScheduler.getScheduler().schedule(new Runnable() -->Line_8 $$ Application application = ApplicationManager.getApplication()[ CD ]
Line_4 $$ JobScheduler.getScheduler().schedule(new Runnable() -->Line_9 $$ if (!project.isDisposed() && !application.isDisposed() && !application.isUnitTestMode()) [ CD ]
Line_2 $$ private static void cancelAndRestartDaemonLater(@NotNull ProgressIndicator progress, @NotNull final Project project) throws ProcessCanceledException -->Line_4 $$ JobScheduler.getScheduler().schedule(new Runnable() [ CD ]
Line_2 $$ private static void cancelAndRestartDaemonLater(@NotNull ProgressIndicator progress, @NotNull final Project project) throws ProcessCanceledException -->Line_14 $$ DaemonCodeAnalyzer.getInstance(project).restart()[ FD ]
Line_10 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_14 $$ DaemonCodeAnalyzer.getInstance(project).restart()[ CD ]
Line_2 $$ private static void cancelAndRestartDaemonLater(@NotNull ProgressIndicator progress, @NotNull final Project project) throws ProcessCanceledException -->Line_3 $$ progress.cancel()[ CD ]
Line_9 $$ if (!project.isDisposed() && !application.isDisposed() && !application.isUnitTestMode()) -->Line_10 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ CD ]
Line_8 $$ Application application = ApplicationManager.getApplication()-->Line_9 $$ if (!project.isDisposed() && !application.isDisposed() && !application.isUnitTestMode()) [ FD ]
