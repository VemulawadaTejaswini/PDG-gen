Line_17 $$ for (int i = 0; i < _COUNT; i++) -->Line_18 $$ newChars[i] = BigEndianCodec.getChar(bytes, i * 2)[ CD ]
Line_2 $$ public void testChar() -->Line_8 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(bytes.length)[ CD ]
Line_4 $$ for (int i = 0; i < _COUNT; i++) -->Line_11 $$ for (int i = 0; i < _COUNT; i++) [ FD ]
Line_11 $$ for (int i = 0; i < _COUNT; i++) -->Line_13 $$ BigEndianCodec.putChar(bytes, i * 2, chars[i])[ CD ]
Line_7 $$ byte[] bytes = new byte[_COUNT * 2]-->Line_13 $$ BigEndianCodec.putChar(bytes, i * 2, chars[i])[ FD ]
Line_7 $$ byte[] bytes = new byte[_COUNT * 2]-->Line_18 $$ newChars[i] = BigEndianCodec.getChar(bytes, i * 2)[ FD ]
Line_3 $$ char[] chars = new char[_COUNT]-->Line_20 $$ Assert.assertArrayEquals(chars, newChars)[ FD ]
Line_4 $$ for (int i = 0; i < _COUNT; i++) -->Line_5 $$ chars[i] = (char) _random.nextInt()[ CD ]
Line_11 $$ for (int i = 0; i < _COUNT; i++) -->Line_17 $$ for (int i = 0; i < _COUNT; i++) [ FD ]
Line_2 $$ public void testChar() -->Line_4 $$ for (int i = 0; i < _COUNT; i++) [ CD ]
Line_10 $$ CharBuffer charBuffer = byteBuffer.asCharBuffer()-->Line_12 $$ charBuffer.put(chars[i])[ FD ]
Line_2 $$ public void testChar() -->Line_15 $$ Assert.assertArrayEquals(byteBuffer.array(), bytes)[ CD ]
Line_2 $$ public void testChar() -->Line_7 $$ byte[] bytes = new byte[_COUNT * 2][ CD ]
Line_8 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(bytes.length)-->Line_9 $$ byteBuffer.order(ByteOrder.BIG_ENDIAN)[ FD ]
Line_16 $$ char[] newChars = new char[_COUNT]-->Line_20 $$ Assert.assertArrayEquals(chars, newChars)[ FD ]
Line_2 $$ public void testChar() -->Line_17 $$ for (int i = 0; i < _COUNT; i++) [ CD ]
Line_8 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(bytes.length)-->Line_15 $$ Assert.assertArrayEquals(byteBuffer.array(), bytes)[ FD ]
Line_2 $$ public void testChar() -->Line_10 $$ CharBuffer charBuffer = byteBuffer.asCharBuffer()[ CD ]
Line_8 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(bytes.length)-->Line_10 $$ CharBuffer charBuffer = byteBuffer.asCharBuffer()[ FD ]
Line_4 $$ for (int i = 0; i < _COUNT; i++) -->Line_17 $$ for (int i = 0; i < _COUNT; i++) [ FD ]
Line_2 $$ public void testChar() -->Line_11 $$ for (int i = 0; i < _COUNT; i++) [ CD ]
Line_2 $$ public void testChar() -->Line_9 $$ byteBuffer.order(ByteOrder.BIG_ENDIAN)[ CD ]
Line_2 $$ public void testChar() -->Line_16 $$ char[] newChars = new char[_COUNT][ CD ]
Line_11 $$ for (int i = 0; i < _COUNT; i++) -->Line_12 $$ charBuffer.put(chars[i])[ CD ]
Line_2 $$ public void testChar() -->Line_3 $$ char[] chars = new char[_COUNT][ CD ]
Line_7 $$ byte[] bytes = new byte[_COUNT * 2]-->Line_15 $$ Assert.assertArrayEquals(byteBuffer.array(), bytes)[ FD ]
Line_2 $$ public void testChar() -->Line_20 $$ Assert.assertArrayEquals(chars, newChars)[ CD ]
