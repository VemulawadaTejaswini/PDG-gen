Line_2 $$ private static long runThreads(final int[] ids, int threadCount, final int queryCount, final TestIteration testIteration) throws InterruptedException, ExecutionException -->Line_18 $$ return System.currentTimeMillis() - start[ CD ]
Line_2 $$ private static long runThreads(final int[] ids, int threadCount, final int queryCount, final TestIteration testIteration) throws InterruptedException, ExecutionException -->Line_6 $$ for (int i = 0; i < threadCount; i++) [ CD ]
Line_5 $$ Random seedRandom = new Random()-->Line_7 $$ final Random threadRandom = new Random(seedRandom.nextInt())[ FD ]
Line_2 $$ private static long runThreads(final int[] ids, int threadCount, final int queryCount, final TestIteration testIteration) throws InterruptedException, ExecutionException -->Line_3 $$ long start = System.currentTimeMillis()[ CD ]
Line_4 $$ List<Future<?>> futures = ContainerUtil.newArrayList()-->Line_9 $$ futures.add(ApplicationManager.getApplication().executeOnPooledThread(new Runnable() [ FD ]
Line_7 $$ final Random threadRandom = new Random(seedRandom.nextInt())-->Line_11 $$ testIteration.doTest(finalI, ids, threadRandom, queryCount)[ FD ]
Line_6 $$ for (int i = 0; i < threadCount; i++) -->Line_7 $$ final Random threadRandom = new Random(seedRandom.nextInt())[ CD ]
Line_2 $$ private static long runThreads(final int[] ids, int threadCount, final int queryCount, final TestIteration testIteration) throws InterruptedException, ExecutionException -->Line_4 $$ List<Future<?>> futures = ContainerUtil.newArrayList()[ CD ]
Line_6 $$ for (int i = 0; i < threadCount; i++) -->Line_8 $$ final int finalI = i[ CD ]
Line_9 $$ futures.add(ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_11 $$ testIteration.doTest(finalI, ids, threadRandom, queryCount)[ CD ]
Line_8 $$ final int finalI = i-->Line_11 $$ testIteration.doTest(finalI, ids, threadRandom, queryCount)[ FD ]
Line_6 $$ for (int i = 0; i < threadCount; i++) -->Line_9 $$ futures.add(ApplicationManager.getApplication().executeOnPooledThread(new Runnable() [ CD ]
Line_2 $$ private static long runThreads(final int[] ids, int threadCount, final int queryCount, final TestIteration testIteration) throws InterruptedException, ExecutionException -->Line_11 $$ testIteration.doTest(finalI, ids, threadRandom, queryCount)[ FD ]
Line_2 $$ private static long runThreads(final int[] ids, int threadCount, final int queryCount, final TestIteration testIteration) throws InterruptedException, ExecutionException -->Line_5 $$ Random seedRandom = new Random()[ CD ]
Line_2 $$ private static long runThreads(final int[] ids, int threadCount, final int queryCount, final TestIteration testIteration) throws InterruptedException, ExecutionException -->Line_6 $$ for (int i = 0; i < threadCount; i++) [ FD ]
