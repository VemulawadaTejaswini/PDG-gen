Line_12 $$ byte[] buf = new byte[10 * 1024]-->Line_32 $$ verifyRead(stm, buf, seekOff, toRead)[ FD ]
Line_11 $$ FileSystem fs = FileSystem.newInstance(conf)-->Line_22 $$ FSDataInputStream stm = fs.open(TEST_PATH)[ FD ]
Line_22 $$ FSDataInputStream stm = fs.open(TEST_PATH)-->Line_43 $$ stm.close()[ FD ]
Line_29 $$ int toRead = r.nextInt(Math.min(buf.length - seekOff, 32000))-->Line_31 $$ reads[i % reads.length] = toRead[ FD ]
Line_35 $$ StringBuilder sb = new StringBuilder()-->Line_38 $$ sb.append("seek @ ").append(seeks[j]).append("  ").append("read ").append(reads[j]).append("\n")[ FD ]
Line_37 $$ for (int j = 0; j < seeks.length; j++) -->Line_38 $$ sb.append("seek @ ").append(seeks[j]).append("  ").append("read ").append(reads[j]).append("\n")[ CD ]
Line_21 $$ Random r = new Random()-->Line_28 $$ int seekOff = r.nextInt(buf.length)[ FD ]
Line_21 $$ Random r = new Random()-->Line_29 $$ int toRead = r.nextInt(Math.min(buf.length - seekOff, 32000))[ FD ]
Line_35 $$ StringBuilder sb = new StringBuilder()-->Line_40 $$ System.err.println(sb.toString())[ FD ]
Line_8 $$ Configuration conf = new Configuration()-->Line_11 $$ FileSystem fs = FileSystem.newInstance(conf)[ FD ]
Line_12 $$ byte[] buf = new byte[10 * 1024]-->Line_13 $$ new Random().nextBytes(buf)[ FD ]
Line_27 $$ for (int i = 0; i < 1000; i++) -->Line_28 $$ int seekOff = r.nextInt(buf.length)[ CD ]
Line_27 $$ for (int i = 0; i < 1000; i++) -->Line_29 $$ int toRead = r.nextInt(Math.min(buf.length - seekOff, 32000))[ CD ]
Line_35 $$ StringBuilder sb = new StringBuilder()-->Line_36 $$ sb.append("Sequence of actions:\n")[ FD ]
Line_29 $$ int toRead = r.nextInt(Math.min(buf.length - seekOff, 32000))-->Line_32 $$ verifyRead(stm, buf, seekOff, toRead)[ FD ]
Line_27 $$ for (int i = 0; i < 1000; i++) -->Line_30 $$ seeks[i % seeks.length] = seekOff[ CD ]
Line_28 $$ int seekOff = r.nextInt(buf.length)-->Line_32 $$ verifyRead(stm, buf, seekOff, toRead)[ FD ]
Line_28 $$ int seekOff = r.nextInt(buf.length)-->Line_30 $$ seeks[i % seeks.length] = seekOff[ FD ]
Line_8 $$ Configuration conf = new Configuration()-->Line_9 $$ conf.setClass("fs.file.impl", RawLocalFileSystem.class, FileSystem.class)[ FD ]
Line_12 $$ byte[] buf = new byte[10 * 1024]-->Line_17 $$ stream.write(buf)[ FD ]
Line_27 $$ for (int i = 0; i < 1000; i++) -->Line_32 $$ verifyRead(stm, buf, seekOff, toRead)[ CD ]
Line_8 $$ Configuration conf = new Configuration()-->Line_10 $$ conf.setInt(CommonConfigurationKeysPublic.IO_FILE_BUFFER_SIZE_KEY, 4096)[ FD ]
Line_27 $$ for (int i = 0; i < 1000; i++) -->Line_31 $$ reads[i % reads.length] = toRead[ CD ]
Line_22 $$ FSDataInputStream stm = fs.open(TEST_PATH)-->Line_32 $$ verifyRead(stm, buf, seekOff, toRead)[ FD ]
