Line_4 $$ Map<Block, Long> map = new HashMap<Block, Long>()-->Line_12 $$ map.put(new Block(blkids[i], 0, blkids[i]), blkids[i])[ FD ]
Line_16 $$ Block b = new Block(blkids[i], 0, GenerationStamp.GRANDFATHER_GENERATION_STAMP)-->Line_17 $$ Long v = map.get(b)[ FD ]
Line_5 $$ final Random RAN = new Random()-->Line_6 $$ final long seed = RAN.nextLong()[ FD ]
Line_5 $$ final Random RAN = new Random()-->Line_8 $$ RAN.setSeed(seed)[ FD ]
Line_6 $$ final long seed = RAN.nextLong()-->Line_8 $$ RAN.setSeed(seed)[ FD ]
Line_17 $$ Long v = map.get(b)-->Line_19 $$ assertEquals(blkids[i], v.longValue())[ FD ]
Line_10 $$ for (int i = 0; i < blkids.length; i++) -->Line_15 $$ for (int i = 0; i < blkids.length; i++) [ FD ]
Line_10 $$ for (int i = 0; i < blkids.length; i++) -->Line_12 $$ map.put(new Block(blkids[i], 0, blkids[i]), blkids[i])[ CD ]
Line_15 $$ for (int i = 0; i < blkids.length; i++) -->Line_18 $$ System.out.println(b + " => " + v)[ CD ]
Line_5 $$ final Random RAN = new Random()-->Line_11 $$ blkids[i] = 1000L + RAN.nextInt(100000)[ FD ]
Line_15 $$ for (int i = 0; i < blkids.length; i++) -->Line_17 $$ Long v = map.get(b)[ CD ]
Line_4 $$ Map<Block, Long> map = new HashMap<Block, Long>()-->Line_14 $$ System.out.println("map=" + map.toString().replace(",", "\n  "))[ FD ]
Line_15 $$ for (int i = 0; i < blkids.length; i++) -->Line_16 $$ Block b = new Block(blkids[i], 0, GenerationStamp.GRANDFATHER_GENERATION_STAMP)[ CD ]
Line_15 $$ for (int i = 0; i < blkids.length; i++) -->Line_19 $$ assertEquals(blkids[i], v.longValue())[ CD ]
Line_4 $$ Map<Block, Long> map = new HashMap<Block, Long>()-->Line_17 $$ Long v = map.get(b)[ FD ]
Line_10 $$ for (int i = 0; i < blkids.length; i++) -->Line_11 $$ blkids[i] = 1000L + RAN.nextInt(100000)[ CD ]
