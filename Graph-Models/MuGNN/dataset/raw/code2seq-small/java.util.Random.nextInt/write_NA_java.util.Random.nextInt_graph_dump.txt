Line_3 $$ if (0 == len) -->Line_4 $$ return[ CD ]
Line_7 $$ if (!disableRead) -->Line_8 $$ WritableUtils.writeVInt(out, len)[ CD ]
Line_19 $$ written += write-->Line_21 $$ assertEquals(len, written)[ FD ]
Line_7 $$ if (!disableRead) -->Line_9 $$ written -= WritableUtils.getVIntSize(len)[ CD ]
Line_11 $$ if (len > 1024) -->Line_23 $$ for (int i = written; i < len; ++i) [ CD ]
Line_16 $$ do -->Line_18 $$ out.write(b, 0, write)[ CD ]
Line_6 $$ int written = 0-->Line_19 $$ written += write[ FD ]
Line_2 $$ public void write(DataOutput out) throws IOException -->Line_3 $$ if (0 == len) [ CD ]
Line_2 $$ public void write(DataOutput out) throws IOException -->Line_6 $$ int written = 0[ CD ]
Line_19 $$ written += write-->Line_16 $$ do [ FD ]
Line_6 $$ int written = 0-->Line_16 $$ do [ FD ]
Line_9 $$ written -= WritableUtils.getVIntSize(len)-->Line_19 $$ written += write[ FD ]
Line_2 $$ public void write(DataOutput out) throws IOException -->Line_8 $$ WritableUtils.writeVInt(out, len)[ FD ]
Line_11 $$ if (len > 1024) -->Line_21 $$ assertEquals(len, written)[ CD ]
Line_17 $$ final int write = Math.min(len - written, r.nextInt(len))-->Line_18 $$ out.write(b, 0, write)[ FD ]
Line_6 $$ int written = 0-->Line_9 $$ written -= WritableUtils.getVIntSize(len)[ FD ]
Line_2 $$ public void write(DataOutput out) throws IOException -->Line_7 $$ if (!disableRead) [ CD ]
Line_16 $$ do -->Line_19 $$ written += write[ CD ]
Line_9 $$ written -= WritableUtils.getVIntSize(len)-->Line_16 $$ do [ FD ]
Line_9 $$ written -= WritableUtils.getVIntSize(len)-->Line_21 $$ assertEquals(len, written)[ FD ]
Line_2 $$ public void write(DataOutput out) throws IOException -->Line_11 $$ if (len > 1024) [ CD ]
Line_11 $$ if (len > 1024) -->Line_15 $$ Arrays.fill(b, fillChar)[ CD ]
Line_16 $$ do -->Line_17 $$ final int write = Math.min(len - written, r.nextInt(len))[ CD ]
Line_17 $$ final int write = Math.min(len - written, r.nextInt(len))-->Line_19 $$ written += write[ FD ]
Line_2 $$ public void write(DataOutput out) throws IOException -->Line_24 $$ out.write(fillChar)[ FD ]
Line_11 $$ if (len > 1024) -->Line_16 $$ do [ CD ]
Line_2 $$ public void write(DataOutput out) throws IOException -->Line_18 $$ out.write(b, 0, write)[ FD ]
Line_6 $$ int written = 0-->Line_21 $$ assertEquals(len, written)[ FD ]
Line_23 $$ for (int i = written; i < len; ++i) -->Line_24 $$ out.write(fillChar)[ CD ]
Line_11 $$ if (len > 1024) -->Line_12 $$ if (null == b || b.length < len) [ CD ]
