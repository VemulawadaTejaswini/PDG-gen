Line_12 $$ if (len > 1024) -->Line_17 $$ do [ CD ]
Line_18 $$ final int write = Math.min(len - written, r.nextInt(len))-->Line_19 $$ out.write(b, 0, write)[ FD ]
Line_12 $$ if (len > 1024) -->Line_24 $$ for (int i = written; i < len; ++i) [ CD ]
Line_7 $$ int written = 0-->Line_22 $$ assertEquals(len, written)[ FD ]
Line_10 $$ written -= WritableUtils.getVIntSize(len)-->Line_17 $$ do [ FD ]
Line_10 $$ written -= WritableUtils.getVIntSize(len)-->Line_22 $$ assertEquals(len, written)[ FD ]
Line_20 $$ written += write-->Line_22 $$ assertEquals(len, written)[ FD ]
Line_12 $$ if (len > 1024) -->Line_22 $$ assertEquals(len, written)[ CD ]
Line_10 $$ written -= WritableUtils.getVIntSize(len)-->Line_20 $$ written += write[ FD ]
Line_20 $$ written += write-->Line_17 $$ do [ FD ]
Line_18 $$ final int write = Math.min(len - written, r.nextInt(len))-->Line_20 $$ written += write[ FD ]
Line_7 $$ int written = 0-->Line_20 $$ written += write[ FD ]
Line_7 $$ int written = 0-->Line_10 $$ written -= WritableUtils.getVIntSize(len)[ FD ]
Line_8 $$ if (!disableRead) -->Line_9 $$ WritableUtils.writeVInt(out, len)[ CD ]
Line_8 $$ if (!disableRead) -->Line_10 $$ written -= WritableUtils.getVIntSize(len)[ CD ]
Line_17 $$ do -->Line_18 $$ final int write = Math.min(len - written, r.nextInt(len))[ CD ]
Line_4 $$ if (0 == len) -->Line_5 $$ return[ CD ]
Line_7 $$ int written = 0-->Line_17 $$ do [ FD ]
Line_17 $$ do -->Line_20 $$ written += write[ CD ]
Line_12 $$ if (len > 1024) -->Line_13 $$ if (null == b || b.length < len) [ CD ]
Line_24 $$ for (int i = written; i < len; ++i) -->Line_25 $$ out.write(fillChar)[ CD ]
Line_12 $$ if (len > 1024) -->Line_16 $$ Arrays.fill(b, fillChar)[ CD ]
Line_17 $$ do -->Line_19 $$ out.write(b, 0, write)[ CD ]
