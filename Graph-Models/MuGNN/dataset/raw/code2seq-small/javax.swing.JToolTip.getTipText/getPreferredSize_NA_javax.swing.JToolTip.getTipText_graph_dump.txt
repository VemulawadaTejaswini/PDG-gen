Line_2 $$ public Dimension getPreferredSize(JComponent c) -->Line_3 $$ FontMetrics metrics = c.getFontMetrics(c.getFont())[ CD ]
Line_14 $$ if (width > maxWidth) -->Line_15 $$ maxWidth = width[ CD ]
Line_5 $$ if (tipText == null) -->Line_6 $$ tipText = ""[ CD ]
Line_3 $$ FontMetrics metrics = c.getFontMetrics(c.getFont())-->Line_18 $$ int height = metrics.getHeight() * ((lines.length < 1) ? 1 : lines.length)[ FD ]
Line_2 $$ public Dimension getPreferredSize(JComponent c) -->Line_10 $$ final String[] lines = LineTokenizer.tokenize(tipText.toCharArray(), false)[ CD ]
Line_3 $$ FontMetrics metrics = c.getFontMetrics(c.getFont())-->Line_13 $$ int width = SwingUtilities.computeStringWidth(metrics, line)[ FD ]
Line_11 $$ for (String line : lines) -->Line_13 $$ int width = SwingUtilities.computeStringWidth(metrics, line)[ FD ]
Line_6 $$ tipText = ""-->Line_10 $$ final String[] lines = LineTokenizer.tokenize(tipText.toCharArray(), false)[ FD ]
Line_4 $$ String tipText = ((JToolTip) c).getTipText()-->Line_10 $$ final String[] lines = LineTokenizer.tokenize(tipText.toCharArray(), false)[ FD ]
Line_8 $$ int maxWidth = 0-->Line_14 $$ if (width > maxWidth) [ FD ]
Line_2 $$ public Dimension getPreferredSize(JComponent c) -->Line_19 $$ return new Dimension(maxWidth + 6, height + 4)[ CD ]
Line_8 $$ int maxWidth = 0-->Line_15 $$ maxWidth = width[ FD ]
Line_13 $$ int width = SwingUtilities.computeStringWidth(metrics, line)-->Line_15 $$ maxWidth = width[ FD ]
Line_4 $$ String tipText = ((JToolTip) c).getTipText()-->Line_5 $$ if (tipText == null) [ FD ]
Line_2 $$ public Dimension getPreferredSize(JComponent c) -->Line_5 $$ if (tipText == null) [ CD ]
Line_2 $$ public Dimension getPreferredSize(JComponent c) -->Line_3 $$ FontMetrics metrics = c.getFontMetrics(c.getFont())[ FD ]
Line_2 $$ public Dimension getPreferredSize(JComponent c) -->Line_18 $$ int height = metrics.getHeight() * ((lines.length < 1) ? 1 : lines.length)[ CD ]
Line_13 $$ int width = SwingUtilities.computeStringWidth(metrics, line)-->Line_14 $$ if (width > maxWidth) [ FD ]
Line_4 $$ String tipText = ((JToolTip) c).getTipText()-->Line_6 $$ tipText = ""[ FD ]
Line_11 $$ for (String line : lines) -->Line_12 $$ myLines.add(line)[ FD ]
Line_2 $$ public Dimension getPreferredSize(JComponent c) -->Line_9 $$ myLines.clear()[ CD ]
Line_2 $$ public Dimension getPreferredSize(JComponent c) -->Line_8 $$ int maxWidth = 0[ CD ]
Line_2 $$ public Dimension getPreferredSize(JComponent c) -->Line_4 $$ String tipText = ((JToolTip) c).getTipText()[ CD ]
