Line_4 $$ List<String> pathComponents = FileUtil.splitPath(reportedPath)-->Line_7 $$ String currentPathComponent = pathComponents.get(i)[ FD ]
Line_3 $$ List<String> results = ContainerUtil.newSmartList(reportedPath)-->Line_17 $$ results.add(new File(mappedPath, fileSuffix).getPath())[ FD ]
Line_2 $$ private Collection<String> applyMapping(String reportedPath) -->Line_4 $$ List<String> pathComponents = FileUtil.splitPath(reportedPath)[ FD ]
Line_11 $$ runningPath = new File(runningPath, currentPathComponent)-->Line_13 $$ Collection<String> mappedPaths = myPathMapping.get(runningPath.getPath())[ FD ]
Line_2 $$ private Collection<String> applyMapping(String reportedPath) -->Line_3 $$ List<String> results = ContainerUtil.newSmartList(reportedPath)[ FD ]
Line_5 $$ File runningPath = null-->Line_9 $$ runningPath = new File(currentPathComponent.isEmpty() ? "/" : currentPathComponent)[ FD ]
Line_5 $$ File runningPath = null-->Line_13 $$ Collection<String> mappedPaths = myPathMapping.get(runningPath.getPath())[ FD ]
Line_6 $$ for (int i = 0; i < pathComponents.size(); ++i) -->Line_7 $$ String currentPathComponent = pathComponents.get(i)[ FD ]
Line_9 $$ runningPath = new File(currentPathComponent.isEmpty() ? "/" : currentPathComponent)-->Line_8 $$ if (runningPath == null) [ FD ]
Line_8 $$ if (runningPath == null) -->Line_11 $$ runningPath = new File(runningPath, currentPathComponent)[ CD ]
Line_6 $$ for (int i = 0; i < pathComponents.size(); ++i) -->Line_7 $$ String currentPathComponent = pathComponents.get(i)[ CD ]
Line_6 $$ for (int i = 0; i < pathComponents.size(); ++i) -->Line_8 $$ if (runningPath == null) [ CD ]
Line_9 $$ runningPath = new File(currentPathComponent.isEmpty() ? "/" : currentPathComponent)-->Line_11 $$ runningPath = new File(runningPath, currentPathComponent)[ FD ]
Line_5 $$ File runningPath = null-->Line_11 $$ runningPath = new File(runningPath, currentPathComponent)[ FD ]
Line_2 $$ private Collection<String> applyMapping(String reportedPath) -->Line_3 $$ List<String> results = ContainerUtil.newSmartList(reportedPath)[ CD ]
Line_8 $$ if (runningPath == null) -->Line_9 $$ runningPath = new File(currentPathComponent.isEmpty() ? "/" : currentPathComponent)[ CD ]
Line_4 $$ List<String> pathComponents = FileUtil.splitPath(reportedPath)-->Line_6 $$ for (int i = 0; i < pathComponents.size(); ++i) [ FD ]
Line_2 $$ private Collection<String> applyMapping(String reportedPath) -->Line_5 $$ File runningPath = null[ CD ]
Line_6 $$ for (int i = 0; i < pathComponents.size(); ++i) -->Line_13 $$ Collection<String> mappedPaths = myPathMapping.get(runningPath.getPath())[ CD ]
Line_2 $$ private Collection<String> applyMapping(String reportedPath) -->Line_4 $$ List<String> pathComponents = FileUtil.splitPath(reportedPath)[ CD ]
Line_2 $$ private Collection<String> applyMapping(String reportedPath) -->Line_6 $$ for (int i = 0; i < pathComponents.size(); ++i) [ CD ]
Line_2 $$ private Collection<String> applyMapping(String reportedPath) -->Line_20 $$ return results[ CD ]
Line_11 $$ runningPath = new File(runningPath, currentPathComponent)-->Line_8 $$ if (runningPath == null) [ FD ]
Line_7 $$ String currentPathComponent = pathComponents.get(i)-->Line_9 $$ runningPath = new File(currentPathComponent.isEmpty() ? "/" : currentPathComponent)[ FD ]
Line_5 $$ File runningPath = null-->Line_8 $$ if (runningPath == null) [ FD ]
Line_9 $$ runningPath = new File(currentPathComponent.isEmpty() ? "/" : currentPathComponent)-->Line_13 $$ Collection<String> mappedPaths = myPathMapping.get(runningPath.getPath())[ FD ]
