Line_40 $$ if (myValueDescriptor.isString()) -->Line_42 $$ return[ CD ]
Line_17 $$ final String typeName = type.componentTypeName()-->Line_20 $$ int max = Math.min(size, CommonClassNames.JAVA_LANG_STRING.equals(typeName) ? 5 : 10)[ FD ]
Line_23 $$ int i = 0-->Line_27 $$ i++[ FD ]
Line_12 $$ final JavaValue container = (JavaValue) node.getValueContainer()-->Line_15 $$ final ArrayType type = (ArrayType) container.getDescriptor().getType()[ FD ]
Line_5 $$ if (myError != null) -->Line_11 $$ if (compact && node.getValueContainer() instanceof JavaValue) [ CD ]
Line_18 $$ if (TypeConversionUtil.isPrimitive(typeName) || CommonClassNames.JAVA_LANG_STRING.equals(typeName)) -->Line_20 $$ int max = Math.min(size, CommonClassNames.JAVA_LANG_STRING.equals(typeName) ? 5 : 10)[ CD ]
Line_13 $$ if (container.getDescriptor().isArray()) -->Line_16 $$ if (type != null) [ CD ]
Line_30 $$ if (vals.size() < size) -->Line_31 $$ more = ", + " + (size - vals.size()) + " more"[ CD ]
Line_11 $$ if (compact && node.getValueContainer() instanceof JavaValue) -->Line_12 $$ final JavaValue container = (JavaValue) node.getValueContainer()[ CD ]
Line_18 $$ if (TypeConversionUtil.isPrimitive(typeName) || CommonClassNames.JAVA_LANG_STRING.equals(typeName)) -->Line_29 $$ String more = ""[ CD ]
Line_13 $$ if (container.getDescriptor().isArray()) -->Line_14 $$ final ArrayReference value = (ArrayReference) container.getDescriptor().getValue()[ CD ]
Line_12 $$ final JavaValue container = (JavaValue) node.getValueContainer()-->Line_13 $$ if (container.getDescriptor().isArray()) [ FD ]
Line_43 $$ if (myValueDescriptor.getLastRenderer() instanceof ToStringRenderer || myValueDescriptor.getLastRenderer() instanceof ToStringBasedRenderer) -->Line_44 $$ value = StringUtil.wrapWithDoubleQuote(truncateToMaxLength(myValue))[ CD ]
Line_15 $$ final ArrayType type = (ArrayType) container.getDescriptor().getType()-->Line_16 $$ if (type != null) [ FD ]
Line_29 $$ String more = ""-->Line_31 $$ more = ", + " + (size - vals.size()) + " more"[ FD ]
Line_18 $$ if (TypeConversionUtil.isPrimitive(typeName) || CommonClassNames.JAVA_LANG_STRING.equals(typeName)) -->Line_24 $$ final List<String> vals = new ArrayList<String>(max)[ CD ]
Line_16 $$ if (type != null) -->Line_17 $$ final String typeName = type.componentTypeName()[ CD ]
Line_18 $$ if (TypeConversionUtil.isPrimitive(typeName) || CommonClassNames.JAVA_LANG_STRING.equals(typeName)) -->Line_19 $$ int size = value.length()[ CD ]
Line_5 $$ if (myError != null) -->Line_40 $$ if (myValueDescriptor.isString()) [ CD ]
Line_19 $$ int size = value.length()-->Line_30 $$ if (vals.size() < size) [ FD ]
Line_14 $$ final ArrayReference value = (ArrayReference) container.getDescriptor().getValue()-->Line_44 $$ value = StringUtil.wrapWithDoubleQuote(truncateToMaxLength(myValue))[ FD ]
Line_4 $$ boolean compact = node != null-->Line_11 $$ if (compact && node.getValueContainer() instanceof JavaValue) [ FD ]
Line_14 $$ final ArrayReference value = (ArrayReference) container.getDescriptor().getValue()-->Line_19 $$ int size = value.length()[ FD ]
Line_40 $$ if (myValueDescriptor.isString()) -->Line_43 $$ if (myValueDescriptor.getLastRenderer() instanceof ToStringRenderer || myValueDescriptor.getLastRenderer() instanceof ToStringBasedRenderer) [ CD ]
Line_15 $$ final ArrayType type = (ArrayType) container.getDescriptor().getType()-->Line_17 $$ final String typeName = type.componentTypeName()[ FD ]
Line_18 $$ if (TypeConversionUtil.isPrimitive(typeName) || CommonClassNames.JAVA_LANG_STRING.equals(typeName)) -->Line_30 $$ if (vals.size() < size) [ CD ]
Line_25 $$ while (i < values.size()) -->Line_26 $$ vals.add(StringUtil.first(values.get(i).toString(), 15, true))[ CD ]
Line_40 $$ if (myValueDescriptor.isString()) -->Line_41 $$ renderer.renderStringValue(myValue, "\"", XValueNode.MAX_VALUE_LENGTH)[ CD ]
Line_45 $$ if (myValueDescriptor.getLastRenderer() instanceof CompoundReferenceRenderer) -->Line_46 $$ value = truncateToMaxLength(myValue)[ CD ]
Line_13 $$ if (container.getDescriptor().isArray()) -->Line_15 $$ final ArrayType type = (ArrayType) container.getDescriptor().getType()[ CD ]
Line_17 $$ final String typeName = type.componentTypeName()-->Line_18 $$ if (TypeConversionUtil.isPrimitive(typeName) || CommonClassNames.JAVA_LANG_STRING.equals(typeName)) [ FD ]
Line_24 $$ final List<String> vals = new ArrayList<String>(max)-->Line_30 $$ if (vals.size() < size) [ FD ]
Line_24 $$ final List<String> vals = new ArrayList<String>(max)-->Line_33 $$ renderer.renderValue("[ FD ]
Line_43 $$ if (myValueDescriptor.getLastRenderer() instanceof ToStringRenderer || myValueDescriptor.getLastRenderer() instanceof ToStringBasedRenderer) -->Line_45 $$ if (myValueDescriptor.getLastRenderer() instanceof CompoundReferenceRenderer) [ CD ]
Line_18 $$ if (TypeConversionUtil.isPrimitive(typeName) || CommonClassNames.JAVA_LANG_STRING.equals(typeName)) -->Line_33 $$ renderer.renderValue("[ CD ]
Line_44 $$ value = StringUtil.wrapWithDoubleQuote(truncateToMaxLength(myValue))-->Line_46 $$ value = truncateToMaxLength(myValue)[ FD ]
Line_25 $$ while (i < values.size()) -->Line_27 $$ i++[ CD ]
Line_5 $$ if (myError != null) -->Line_6 $$ if (myValue.endsWith(myError)) [ CD ]
Line_18 $$ if (TypeConversionUtil.isPrimitive(typeName) || CommonClassNames.JAVA_LANG_STRING.equals(typeName)) -->Line_34 $$ return[ CD ]
Line_44 $$ value = StringUtil.wrapWithDoubleQuote(truncateToMaxLength(myValue))-->Line_48 $$ renderer.renderValue(value)[ FD ]
Line_46 $$ value = truncateToMaxLength(myValue)-->Line_48 $$ renderer.renderValue(value)[ FD ]
Line_14 $$ final ArrayReference value = (ArrayReference) container.getDescriptor().getValue()-->Line_48 $$ renderer.renderValue(value)[ FD ]
Line_6 $$ if (myValue.endsWith(myError)) -->Line_7 $$ renderer.renderValue(myValue.substring(0, myValue.length() - myError.length()))[ CD ]
Line_16 $$ if (type != null) -->Line_18 $$ if (TypeConversionUtil.isPrimitive(typeName) || CommonClassNames.JAVA_LANG_STRING.equals(typeName)) [ CD ]
Line_18 $$ if (TypeConversionUtil.isPrimitive(typeName) || CommonClassNames.JAVA_LANG_STRING.equals(typeName)) -->Line_23 $$ int i = 0[ CD ]
Line_24 $$ final List<String> vals = new ArrayList<String>(max)-->Line_26 $$ vals.add(StringUtil.first(values.get(i).toString(), 15, true))[ FD ]
Line_14 $$ final ArrayReference value = (ArrayReference) container.getDescriptor().getValue()-->Line_46 $$ value = truncateToMaxLength(myValue)[ FD ]
Line_5 $$ if (myError != null) -->Line_9 $$ renderer.renderError(myError)[ CD ]
Line_19 $$ int size = value.length()-->Line_20 $$ int max = Math.min(size, CommonClassNames.JAVA_LANG_STRING.equals(typeName) ? 5 : 10)[ FD ]
Line_24 $$ final List<String> vals = new ArrayList<String>(max)-->Line_31 $$ more = ", + " + (size - vals.size()) + " more"[ FD ]
Line_23 $$ int i = 0-->Line_25 $$ while (i < values.size()) [ FD ]
Line_23 $$ int i = 0-->Line_26 $$ vals.add(StringUtil.first(values.get(i).toString(), 15, true))[ FD ]
Line_18 $$ if (TypeConversionUtil.isPrimitive(typeName) || CommonClassNames.JAVA_LANG_STRING.equals(typeName)) -->Line_25 $$ while (i < values.size()) [ CD ]
Line_5 $$ if (myError != null) -->Line_48 $$ renderer.renderValue(value)[ CD ]
Line_12 $$ final JavaValue container = (JavaValue) node.getValueContainer()-->Line_14 $$ final ArrayReference value = (ArrayReference) container.getDescriptor().getValue()[ FD ]
Line_11 $$ if (compact && node.getValueContainer() instanceof JavaValue) -->Line_13 $$ if (container.getDescriptor().isArray()) [ CD ]
