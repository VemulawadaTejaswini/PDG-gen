Line_19 $$ ConfigurableWebBindingInitializer initializer = (ConfigurableWebBindingInitializer) adapter.getWebBindingInitializer()-->Line_20 $$ assertNotNull(initializer)[ FD ]
Line_14 $$ if (converter instanceof MappingJackson2XmlHttpMessageConverter) -->Line_15 $$ assertEquals(XmlMapper.class, objectMapper.getClass())[ CD ]
Line_9 $$ if (converter instanceof AbstractJackson2HttpMessageConverter) -->Line_11 $$ assertFalse(objectMapper.getDeserializationConfig().isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))[ CD ]
Line_4 $$ ApplicationContext context = initContext(WebConfig.class)-->Line_5 $$ RequestMappingHandlerAdapter adapter = context.getBean(RequestMappingHandlerAdapter.class)[ FD ]
Line_9 $$ if (converter instanceof AbstractJackson2HttpMessageConverter) -->Line_14 $$ if (converter instanceof MappingJackson2XmlHttpMessageConverter) [ CD ]
Line_9 $$ if (converter instanceof AbstractJackson2HttpMessageConverter) -->Line_12 $$ assertFalse(objectMapper.getSerializationConfig().isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))[ CD ]
Line_9 $$ if (converter instanceof AbstractJackson2HttpMessageConverter) -->Line_13 $$ assertFalse(objectMapper.getDeserializationConfig().isEnabled(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES))[ CD ]
Line_19 $$ ConfigurableWebBindingInitializer initializer = (ConfigurableWebBindingInitializer) adapter.getWebBindingInitializer()-->Line_24 $$ Validator validator = initializer.getValidator()[ FD ]
Line_9 $$ if (converter instanceof AbstractJackson2HttpMessageConverter) -->Line_10 $$ ObjectMapper objectMapper = ((AbstractJackson2HttpMessageConverter) converter).getObjectMapper()[ CD ]
Line_5 $$ RequestMappingHandlerAdapter adapter = context.getBean(RequestMappingHandlerAdapter.class)-->Line_6 $$ List<HttpMessageConverter<?>> converters = adapter.getMessageConverters()[ FD ]
Line_5 $$ RequestMappingHandlerAdapter adapter = context.getBean(RequestMappingHandlerAdapter.class)-->Line_19 $$ ConfigurableWebBindingInitializer initializer = (ConfigurableWebBindingInitializer) adapter.getWebBindingInitializer()[ FD ]
Line_8 $$ for (HttpMessageConverter<?> converter : converters) -->Line_14 $$ if (converter instanceof MappingJackson2XmlHttpMessageConverter) [ FD ]
Line_24 $$ Validator validator = initializer.getValidator()-->Line_25 $$ assertNotNull(validator)[ FD ]
Line_8 $$ for (HttpMessageConverter<?> converter : converters) -->Line_9 $$ if (converter instanceof AbstractJackson2HttpMessageConverter) [ FD ]
Line_10 $$ ObjectMapper objectMapper = ((AbstractJackson2HttpMessageConverter) converter).getObjectMapper()-->Line_11 $$ assertFalse(objectMapper.getDeserializationConfig().isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))[ FD ]
Line_6 $$ List<HttpMessageConverter<?>> converters = adapter.getMessageConverters()-->Line_7 $$ assertEquals(9, converters.size())[ FD ]
Line_10 $$ ObjectMapper objectMapper = ((AbstractJackson2HttpMessageConverter) converter).getObjectMapper()-->Line_12 $$ assertFalse(objectMapper.getSerializationConfig().isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))[ FD ]
Line_21 $$ ConversionService conversionService = initializer.getConversionService()-->Line_22 $$ assertNotNull(conversionService)[ FD ]
Line_10 $$ ObjectMapper objectMapper = ((AbstractJackson2HttpMessageConverter) converter).getObjectMapper()-->Line_15 $$ assertEquals(XmlMapper.class, objectMapper.getClass())[ FD ]
Line_19 $$ ConfigurableWebBindingInitializer initializer = (ConfigurableWebBindingInitializer) adapter.getWebBindingInitializer()-->Line_21 $$ ConversionService conversionService = initializer.getConversionService()[ FD ]
Line_10 $$ ObjectMapper objectMapper = ((AbstractJackson2HttpMessageConverter) converter).getObjectMapper()-->Line_13 $$ assertFalse(objectMapper.getDeserializationConfig().isEnabled(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES))[ FD ]
