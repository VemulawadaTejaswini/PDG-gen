Line_2 $$ private void addPropertySource(ResourcePropertySource propertySource) -->Line_14 $$ composite.addPropertySource(propertySource.withResourceName())[ FD ]
Line_5 $$ if (propertySources.contains(name) && this.propertySourceNames.contains(name)) -->Line_6 $$ PropertySource<?> existing = propertySources.get(name)[ CD ]
Line_7 $$ if (existing instanceof CompositePropertySource) -->Line_10 $$ if (existing instanceof ResourcePropertySource) [ CD ]
Line_2 $$ private void addPropertySource(ResourcePropertySource propertySource) -->Line_23 $$ propertySources.addBefore(firstProcessed, propertySource)[ FD ]
Line_3 $$ String name = propertySource.getName()-->Line_26 $$ this.propertySourceNames.add(name)[ FD ]
Line_7 $$ if (existing instanceof CompositePropertySource) -->Line_16 $$ propertySources.replace(name, composite)[ CD ]
Line_4 $$ MutablePropertySources propertySources = ((ConfigurableEnvironment) this.environment).getPropertySources()-->Line_5 $$ if (propertySources.contains(name) && this.propertySourceNames.contains(name)) [ FD ]
Line_13 $$ CompositePropertySource composite = new CompositePropertySource(name)-->Line_14 $$ composite.addPropertySource(propertySource.withResourceName())[ FD ]
Line_2 $$ private void addPropertySource(ResourcePropertySource propertySource) -->Line_26 $$ this.propertySourceNames.add(name)[ CD ]
Line_13 $$ CompositePropertySource composite = new CompositePropertySource(name)-->Line_16 $$ propertySources.replace(name, composite)[ FD ]
Line_5 $$ if (propertySources.contains(name) && this.propertySourceNames.contains(name)) -->Line_7 $$ if (existing instanceof CompositePropertySource) [ CD ]
Line_7 $$ if (existing instanceof CompositePropertySource) -->Line_15 $$ composite.addPropertySource(existing)[ CD ]
Line_7 $$ if (existing instanceof CompositePropertySource) -->Line_14 $$ composite.addPropertySource(propertySource.withResourceName())[ CD ]
Line_13 $$ CompositePropertySource composite = new CompositePropertySource(name)-->Line_15 $$ composite.addPropertySource(existing)[ FD ]
Line_6 $$ PropertySource<?> existing = propertySources.get(name)-->Line_10 $$ if (existing instanceof ResourcePropertySource) [ FD ]
Line_7 $$ if (existing instanceof CompositePropertySource) -->Line_8 $$ ((CompositePropertySource) existing).addFirstPropertySource(propertySource.withResourceName())[ CD ]
Line_7 $$ if (existing instanceof CompositePropertySource) -->Line_13 $$ CompositePropertySource composite = new CompositePropertySource(name)[ CD ]
Line_19 $$ if (this.propertySourceNames.isEmpty()) -->Line_22 $$ String firstProcessed = this.propertySourceNames.get(this.propertySourceNames.size() - 1)[ CD ]
Line_6 $$ PropertySource<?> existing = propertySources.get(name)-->Line_7 $$ if (existing instanceof CompositePropertySource) [ FD ]
Line_2 $$ private void addPropertySource(ResourcePropertySource propertySource) -->Line_4 $$ MutablePropertySources propertySources = ((ConfigurableEnvironment) this.environment).getPropertySources()[ CD ]
Line_2 $$ private void addPropertySource(ResourcePropertySource propertySource) -->Line_3 $$ String name = propertySource.getName()[ CD ]
Line_11 $$ existing = ((ResourcePropertySource) existing).withResourceName()-->Line_15 $$ composite.addPropertySource(existing)[ FD ]
Line_2 $$ private void addPropertySource(ResourcePropertySource propertySource) -->Line_8 $$ ((CompositePropertySource) existing).addFirstPropertySource(propertySource.withResourceName())[ FD ]
Line_10 $$ if (existing instanceof ResourcePropertySource) -->Line_11 $$ existing = ((ResourcePropertySource) existing).withResourceName()[ CD ]
Line_4 $$ MutablePropertySources propertySources = ((ConfigurableEnvironment) this.environment).getPropertySources()-->Line_16 $$ propertySources.replace(name, composite)[ FD ]
Line_4 $$ MutablePropertySources propertySources = ((ConfigurableEnvironment) this.environment).getPropertySources()-->Line_23 $$ propertySources.addBefore(firstProcessed, propertySource)[ FD ]
Line_4 $$ MutablePropertySources propertySources = ((ConfigurableEnvironment) this.environment).getPropertySources()-->Line_20 $$ propertySources.addLast(propertySource)[ FD ]
Line_19 $$ if (this.propertySourceNames.isEmpty()) -->Line_20 $$ propertySources.addLast(propertySource)[ CD ]
Line_4 $$ MutablePropertySources propertySources = ((ConfigurableEnvironment) this.environment).getPropertySources()-->Line_6 $$ PropertySource<?> existing = propertySources.get(name)[ FD ]
Line_2 $$ private void addPropertySource(ResourcePropertySource propertySource) -->Line_3 $$ String name = propertySource.getName()[ FD ]
Line_3 $$ String name = propertySource.getName()-->Line_5 $$ if (propertySources.contains(name) && this.propertySourceNames.contains(name)) [ FD ]
Line_5 $$ if (propertySources.contains(name) && this.propertySourceNames.contains(name)) -->Line_19 $$ if (this.propertySourceNames.isEmpty()) [ CD ]
Line_2 $$ private void addPropertySource(ResourcePropertySource propertySource) -->Line_5 $$ if (propertySources.contains(name) && this.propertySourceNames.contains(name)) [ CD ]
Line_3 $$ String name = propertySource.getName()-->Line_16 $$ propertySources.replace(name, composite)[ FD ]
Line_6 $$ PropertySource<?> existing = propertySources.get(name)-->Line_15 $$ composite.addPropertySource(existing)[ FD ]
Line_19 $$ if (this.propertySourceNames.isEmpty()) -->Line_23 $$ propertySources.addBefore(firstProcessed, propertySource)[ CD ]
Line_2 $$ private void addPropertySource(ResourcePropertySource propertySource) -->Line_20 $$ propertySources.addLast(propertySource)[ FD ]
Line_22 $$ String firstProcessed = this.propertySourceNames.get(this.propertySourceNames.size() - 1)-->Line_23 $$ propertySources.addBefore(firstProcessed, propertySource)[ FD ]
Line_3 $$ String name = propertySource.getName()-->Line_6 $$ PropertySource<?> existing = propertySources.get(name)[ FD ]
Line_6 $$ PropertySource<?> existing = propertySources.get(name)-->Line_11 $$ existing = ((ResourcePropertySource) existing).withResourceName()[ FD ]
