Line_2 $$ public void testRemoveUnfinishedLeftovers_multipleFolders_partialNonFinalRecord_first() throws Throwable -->Line_3 $$ testRemoveUnfinishedLeftovers_multipleFolders_errorConditions( txn -> [ CD ]
Line_6 $$ String sstableRecord = LogRecord.make(LogRecord.Type.ADD, Collections.emptyList(), 0, "abc").raw-->Line_9 $$ FileUtils.append(logFiles.get(1), sstableRecord)[ FD ]
Line_6 $$ String sstableRecord = LogRecord.make(LogRecord.Type.ADD, Collections.emptyList(), 0, "abc").raw-->Line_7 $$ int toChop = sstableRecord.length() / 2[ FD ]
Line_6 $$ String sstableRecord = LogRecord.make(LogRecord.Type.ADD, Collections.emptyList(), 0, "abc").raw-->Line_8 $$ FileUtils.append(logFiles.get(0), sstableRecord.substring(0, sstableRecord.length() - toChop))[ FD ]
Line_10 $$ String finalRecord = LogRecord.makeCommit(System.currentTimeMillis()).raw-->Line_11 $$ FileUtils.append(logFiles.get(0), finalRecord)[ FD ]
Line_4 $$ List<File> logFiles = txn.logFiles()-->Line_9 $$ FileUtils.append(logFiles.get(1), sstableRecord)[ FD ]
Line_10 $$ String finalRecord = LogRecord.makeCommit(System.currentTimeMillis()).raw-->Line_12 $$ FileUtils.append(logFiles.get(1), finalRecord)[ FD ]
Line_4 $$ List<File> logFiles = txn.logFiles()-->Line_5 $$ Assert.assertEquals(2, logFiles.size())[ FD ]
Line_4 $$ List<File> logFiles = txn.logFiles()-->Line_11 $$ FileUtils.append(logFiles.get(0), finalRecord)[ FD ]
Line_4 $$ List<File> logFiles = txn.logFiles()-->Line_12 $$ FileUtils.append(logFiles.get(1), finalRecord)[ FD ]
Line_4 $$ List<File> logFiles = txn.logFiles()-->Line_8 $$ FileUtils.append(logFiles.get(0), sstableRecord.substring(0, sstableRecord.length() - toChop))[ FD ]
