Line_3 $$ final Employee employee1 = new Employee()-->Line_11 $$ employee1.setDepartment(dept1)[ FD ]
Line_27 $$ s = openSession()-->Line_42 $$ s.delete(employee2)[ FD ]
Line_29 $$ List list = s.createQuery("select e.department from Employee e left join e.department").list()-->Line_35 $$ dept = (Department) list.get(0)[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_45 $$ s.close()[ CD ]
Line_31 $$ final Department dept-->Line_33 $$ dept = (Department) list.get(1)[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_13 $$ employee2.setFirstName("John")[ CD ]
Line_18 $$ Session s = openSession()-->Line_22 $$ s.persist(employee1)[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_22 $$ s.persist(employee1)[ CD ]
Line_18 $$ Session s = openSession()-->Line_41 $$ s.delete(dept)[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_40 $$ s.delete(title1)[ CD ]
Line_18 $$ Session s = openSession()-->Line_20 $$ s.persist(title1)[ FD ]
Line_3 $$ final Employee employee1 = new Employee()-->Line_10 $$ employee1.setTitle(title1)[ FD ]
Line_18 $$ Session s = openSession()-->Line_42 $$ s.delete(employee2)[ FD ]
Line_18 $$ Session s = openSession()-->Line_26 $$ s.close()[ FD ]
Line_15 $$ final Title title2 = new Title()-->Line_23 $$ s.persist(title2)[ FD ]
Line_27 $$ s = openSession()-->Line_40 $$ s.delete(title1)[ FD ]
Line_32 $$ if (list.get(0) == null) -->Line_35 $$ dept = (Department) list.get(0)[ CD ]
Line_15 $$ final Title title2 = new Title()-->Line_17 $$ employee2.setTitle(title2)[ FD ]
Line_29 $$ List list = s.createQuery("select e.department from Employee e left join e.department").list()-->Line_36 $$ assertNull(list.get(1))[ FD ]
Line_27 $$ s = openSession()-->Line_43 $$ s.delete(title2)[ FD ]
Line_12 $$ final Employee employee2 = new Employee()-->Line_14 $$ employee2.setLastName("Doe")[ FD ]
Line_3 $$ final Employee employee1 = new Employee()-->Line_39 $$ s.delete(employee1)[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_32 $$ if (list.get(0) == null) [ CD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_24 $$ s.persist(employee2)[ CD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_43 $$ s.delete(title2)[ CD ]
Line_15 $$ final Title title2 = new Title()-->Line_16 $$ title2.setDescription("John's title")[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_28 $$ s.getTransaction().begin()[ CD ]
Line_3 $$ final Employee employee1 = new Employee()-->Line_22 $$ s.persist(employee1)[ FD ]
Line_8 $$ final Department dept1 = new Department()-->Line_9 $$ dept1.setDeptName("Jane's department")[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_23 $$ s.persist(title2)[ CD ]
Line_18 $$ Session s = openSession()-->Line_23 $$ s.persist(title2)[ FD ]
Line_18 $$ Session s = openSession()-->Line_25 $$ s.getTransaction().commit()[ FD ]
Line_27 $$ s = openSession()-->Line_39 $$ s.delete(employee1)[ FD ]
Line_33 $$ dept = (Department) list.get(1)-->Line_41 $$ s.delete(dept)[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_41 $$ s.delete(dept)[ CD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_4 $$ employee1.setFirstName("Jane")[ CD ]
Line_31 $$ final Department dept-->Line_41 $$ s.delete(dept)[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_21 $$ s.persist(dept1)[ CD ]
Line_29 $$ List list = s.createQuery("select e.department from Employee e left join e.department").list()-->Line_32 $$ if (list.get(0) == null) [ FD ]
Line_18 $$ Session s = openSession()-->Line_44 $$ s.getTransaction().commit()[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_42 $$ s.delete(employee2)[ CD ]
Line_12 $$ final Employee employee2 = new Employee()-->Line_24 $$ s.persist(employee2)[ FD ]
Line_33 $$ dept = (Department) list.get(1)-->Line_38 $$ assertEquals(dept1.getDeptName(), dept.getDeptName())[ FD ]
Line_12 $$ final Employee employee2 = new Employee()-->Line_42 $$ s.delete(employee2)[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_29 $$ List list = s.createQuery("select e.department from Employee e left join e.department").list()[ CD ]
Line_12 $$ final Employee employee2 = new Employee()-->Line_13 $$ employee2.setFirstName("John")[ FD ]
Line_31 $$ final Department dept-->Line_38 $$ assertEquals(dept1.getDeptName(), dept.getDeptName())[ FD ]
Line_6 $$ final Title title1 = new Title()-->Line_7 $$ title1.setDescription("Jane's description")[ FD ]
Line_31 $$ final Department dept-->Line_35 $$ dept = (Department) list.get(0)[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_10 $$ employee1.setTitle(title1)[ CD ]
Line_18 $$ Session s = openSession()-->Line_43 $$ s.delete(title2)[ FD ]
Line_8 $$ final Department dept1 = new Department()-->Line_21 $$ s.persist(dept1)[ FD ]
Line_35 $$ dept = (Department) list.get(0)-->Line_41 $$ s.delete(dept)[ FD ]
Line_6 $$ final Title title1 = new Title()-->Line_20 $$ s.persist(title1)[ FD ]
Line_29 $$ List list = s.createQuery("select e.department from Employee e left join e.department").list()-->Line_33 $$ dept = (Department) list.get(1)[ FD ]
Line_27 $$ s = openSession()-->Line_41 $$ s.delete(dept)[ FD ]
Line_6 $$ final Title title1 = new Title()-->Line_40 $$ s.delete(title1)[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_5 $$ employee1.setLastName("Doe")[ CD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_20 $$ s.persist(title1)[ CD ]
Line_29 $$ List list = s.createQuery("select e.department from Employee e left join e.department").list()-->Line_30 $$ assertEquals(2, list.size())[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_12 $$ final Employee employee2 = new Employee()[ CD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_38 $$ assertEquals(dept1.getDeptName(), dept.getDeptName())[ CD ]
Line_18 $$ Session s = openSession()-->Line_39 $$ s.delete(employee1)[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_11 $$ employee1.setDepartment(dept1)[ CD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_30 $$ assertEquals(2, list.size())[ CD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_25 $$ s.getTransaction().commit()[ CD ]
Line_32 $$ if (list.get(0) == null) -->Line_33 $$ dept = (Department) list.get(1)[ CD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_14 $$ employee2.setLastName("Doe")[ CD ]
Line_12 $$ final Employee employee2 = new Employee()-->Line_17 $$ employee2.setTitle(title2)[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_31 $$ final Department dept[ CD ]
Line_15 $$ final Title title2 = new Title()-->Line_43 $$ s.delete(title2)[ FD ]
Line_27 $$ s = openSession()-->Line_44 $$ s.getTransaction().commit()[ FD ]
Line_18 $$ Session s = openSession()-->Line_21 $$ s.persist(dept1)[ FD ]
Line_8 $$ final Department dept1 = new Department()-->Line_38 $$ assertEquals(dept1.getDeptName(), dept.getDeptName())[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_39 $$ s.delete(employee1)[ CD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_15 $$ final Title title2 = new Title()[ CD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_16 $$ title2.setDescription("John's title")[ CD ]
Line_18 $$ Session s = openSession()-->Line_19 $$ s.getTransaction().begin()[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_19 $$ s.getTransaction().begin()[ CD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_17 $$ employee2.setTitle(title2)[ CD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_6 $$ final Title title1 = new Title()[ CD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_8 $$ final Department dept1 = new Department()[ CD ]
Line_33 $$ dept = (Department) list.get(1)-->Line_35 $$ dept = (Department) list.get(0)[ FD ]
Line_3 $$ final Employee employee1 = new Employee()-->Line_4 $$ employee1.setFirstName("Jane")[ FD ]
Line_6 $$ final Title title1 = new Title()-->Line_10 $$ employee1.setTitle(title1)[ FD ]
Line_18 $$ Session s = openSession()-->Line_24 $$ s.persist(employee2)[ FD ]
Line_27 $$ s = openSession()-->Line_28 $$ s.getTransaction().begin()[ FD ]
Line_27 $$ s = openSession()-->Line_45 $$ s.close()[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_18 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_26 $$ s.close()[ CD ]
Line_8 $$ final Department dept1 = new Department()-->Line_11 $$ employee1.setDepartment(dept1)[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_9 $$ dept1.setDeptName("Jane's department")[ CD ]
Line_3 $$ final Employee employee1 = new Employee()-->Line_5 $$ employee1.setLastName("Doe")[ FD ]
Line_18 $$ Session s = openSession()-->Line_27 $$ s = openSession()[ FD ]
Line_35 $$ dept = (Department) list.get(0)-->Line_38 $$ assertEquals(dept1.getDeptName(), dept.getDeptName())[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_44 $$ s.getTransaction().commit()[ CD ]
Line_27 $$ s = openSession()-->Line_29 $$ List list = s.createQuery("select e.department from Employee e left join e.department").list()[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_27 $$ s = openSession()[ CD ]
Line_32 $$ if (list.get(0) == null) -->Line_36 $$ assertNull(list.get(1))[ CD ]
Line_18 $$ Session s = openSession()-->Line_45 $$ s.close()[ FD ]
Line_18 $$ Session s = openSession()-->Line_40 $$ s.delete(title1)[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_3 $$ final Employee employee1 = new Employee()[ CD ]
Line_18 $$ Session s = openSession()-->Line_28 $$ s.getTransaction().begin()[ FD ]
Line_2 $$ public void testExplicitToOneOuterJoin() -->Line_7 $$ title1.setDescription("Jane's description")[ CD ]
Line_18 $$ Session s = openSession()-->Line_29 $$ List list = s.createQuery("select e.department from Employee e left join e.department").list()[ FD ]
