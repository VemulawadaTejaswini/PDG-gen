Line_2 $$ protected void updateImportScopeIds(PortletPreferences portletPreferences, String key, long companyGroupId, long plid) throws Exception -->Line_4 $$ if (oldValues == null) [ CD ]
Line_7 $$ Layout layout = _layoutLocalService.getLayout(plid)-->Line_13 $$ if (!AssetPublisherUtil.isScopeIdSelectable(PermissionThreadLocal.getPermissionChecker(), newValue, companyGroupId, layout, false)) [ FD ]
Line_2 $$ protected void updateImportScopeIds(PortletPreferences portletPreferences, String key, long companyGroupId, long plid) throws Exception -->Line_31 $$ portletPreferences.setValues(key, newValues.toArray(new String[newValues.size()]))[ FD ]
Line_18 $$ if (_log.isInfoEnabled()) -->Line_19 $$ _log.info("Ignoring scope " + newValue + " because the " + "referenced group was not found", nsge)[ CD ]
Line_2 $$ protected void updateImportScopeIds(PortletPreferences portletPreferences, String key, long companyGroupId, long plid) throws Exception -->Line_7 $$ Layout layout = _layoutLocalService.getLayout(plid)[ CD ]
Line_8 $$ String companyGroupScopeId = AssetPublisherUtil.SCOPE_ID_GROUP_PREFIX + companyGroupId-->Line_11 $$ String newValue = StringUtil.replace(oldValue, "[$COMPANY_GROUP_SCOPE_ID$]", companyGroupScopeId)[ FD ]
Line_2 $$ protected void updateImportScopeIds(PortletPreferences portletPreferences, String key, long companyGroupId, long plid) throws Exception -->Line_3 $$ String[] oldValues = portletPreferences.getValues(key, null)[ FD ]
Line_2 $$ protected void updateImportScopeIds(PortletPreferences portletPreferences, String key, long companyGroupId, long plid) throws Exception -->Line_31 $$ portletPreferences.setValues(key, newValues.toArray(new String[newValues.size()]))[ CD ]
Line_4 $$ if (oldValues == null) -->Line_5 $$ return[ CD ]
Line_11 $$ String newValue = StringUtil.replace(oldValue, "[$COMPANY_GROUP_SCOPE_ID$]", companyGroupScopeId)-->Line_16 $$ newValues.add(newValue)[ FD ]
Line_2 $$ protected void updateImportScopeIds(PortletPreferences portletPreferences, String key, long companyGroupId, long plid) throws Exception -->Line_3 $$ String[] oldValues = portletPreferences.getValues(key, null)[ CD ]
Line_3 $$ String[] oldValues = portletPreferences.getValues(key, null)-->Line_4 $$ if (oldValues == null) [ FD ]
Line_10 $$ for (String oldValue : oldValues) -->Line_11 $$ String newValue = StringUtil.replace(oldValue, "[$COMPANY_GROUP_SCOPE_ID$]", companyGroupScopeId)[ FD ]
Line_9 $$ List<String> newValues = new ArrayList(oldValues.length)-->Line_31 $$ portletPreferences.setValues(key, newValues.toArray(new String[newValues.size()]))[ FD ]
Line_26 $$ if (_log.isInfoEnabled()) -->Line_27 $$ _log.info("Ignoring scope " + newValue + " because the " + "referenced parent group no longer allows " + "sharing content with child sites", pe)[ CD ]
Line_11 $$ String newValue = StringUtil.replace(oldValue, "[$COMPANY_GROUP_SCOPE_ID$]", companyGroupScopeId)-->Line_13 $$ if (!AssetPublisherUtil.isScopeIdSelectable(PermissionThreadLocal.getPermissionChecker(), newValue, companyGroupId, layout, false)) [ FD ]
Line_2 $$ protected void updateImportScopeIds(PortletPreferences portletPreferences, String key, long companyGroupId, long plid) throws Exception -->Line_9 $$ List<String> newValues = new ArrayList(oldValues.length)[ CD ]
Line_2 $$ protected void updateImportScopeIds(PortletPreferences portletPreferences, String key, long companyGroupId, long plid) throws Exception -->Line_7 $$ Layout layout = _layoutLocalService.getLayout(plid)[ FD ]
Line_22 $$ if (_log.isInfoEnabled()) -->Line_23 $$ _log.info("Ignoring scope " + newValue + " because the " + "referenced layout was not found", nsle)[ CD ]
Line_2 $$ protected void updateImportScopeIds(PortletPreferences portletPreferences, String key, long companyGroupId, long plid) throws Exception -->Line_13 $$ if (!AssetPublisherUtil.isScopeIdSelectable(PermissionThreadLocal.getPermissionChecker(), newValue, companyGroupId, layout, false)) [ FD ]
Line_2 $$ protected void updateImportScopeIds(PortletPreferences portletPreferences, String key, long companyGroupId, long plid) throws Exception -->Line_8 $$ String companyGroupScopeId = AssetPublisherUtil.SCOPE_ID_GROUP_PREFIX + companyGroupId[ CD ]
Line_9 $$ List<String> newValues = new ArrayList(oldValues.length)-->Line_16 $$ newValues.add(newValue)[ FD ]
