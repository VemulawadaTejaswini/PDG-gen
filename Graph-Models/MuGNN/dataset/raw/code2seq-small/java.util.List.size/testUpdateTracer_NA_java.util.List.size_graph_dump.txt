Line_3 $$ ClusterSettings settings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS)-->Line_5 $$ settings.addSettingsUpdateConsumer(TransportService.TRACE_LOG_INCLUDE_SETTING, ref::<>set)[ FD ]
Line_2 $$ public void testUpdateTracer() -->Line_9 $$ assertTrue(ref.get().contains("internal:index/shard/recovery/*"))[ CD ]
Line_2 $$ public void testUpdateTracer() -->Line_6 $$ settings.applySettings(Settings.builder().putArray("transport.tracer.include", "internal:index/shard/recovery/*", "internal:gateway/local*").build())[ CD ]
Line_3 $$ ClusterSettings settings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS)-->Line_6 $$ settings.applySettings(Settings.builder().putArray("transport.tracer.include", "internal:index/shard/recovery/*", "internal:gateway/local*").build())[ FD ]
Line_4 $$ AtomicReference<List<String>> ref = new AtomicReference()-->Line_9 $$ assertTrue(ref.get().contains("internal:index/shard/recovery/*"))[ FD ]
Line_4 $$ AtomicReference<List<String>> ref = new AtomicReference()-->Line_8 $$ assertEquals(ref.get().size(), 2)[ FD ]
Line_2 $$ public void testUpdateTracer() -->Line_5 $$ settings.addSettingsUpdateConsumer(TransportService.TRACE_LOG_INCLUDE_SETTING, ref::<>set)[ CD ]
Line_2 $$ public void testUpdateTracer() -->Line_3 $$ ClusterSettings settings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS)[ CD ]
Line_2 $$ public void testUpdateTracer() -->Line_7 $$ assertNotNull(ref.get().size())[ CD ]
Line_2 $$ public void testUpdateTracer() -->Line_8 $$ assertEquals(ref.get().size(), 2)[ CD ]
Line_4 $$ AtomicReference<List<String>> ref = new AtomicReference()-->Line_10 $$ assertTrue(ref.get().contains("internal:gateway/local*"))[ FD ]
Line_2 $$ public void testUpdateTracer() -->Line_10 $$ assertTrue(ref.get().contains("internal:gateway/local*"))[ CD ]
Line_2 $$ public void testUpdateTracer() -->Line_4 $$ AtomicReference<List<String>> ref = new AtomicReference()[ CD ]
Line_4 $$ AtomicReference<List<String>> ref = new AtomicReference()-->Line_7 $$ assertNotNull(ref.get().size())[ FD ]
