Line_2 $$ public void testQueryForListWithParamMapAndEmptyResult() throws Exception -->Line_3 $$ given(resultSet.next()).willReturn(false)[ CD ]
Line_2 $$ public void testQueryForListWithParamMapAndEmptyResult() throws Exception -->Line_5 $$ parms.addValue("id", 3)[ CD ]
Line_2 $$ public void testQueryForListWithParamMapAndEmptyResult() throws Exception -->Line_4 $$ MapSqlParameterSource parms = new MapSqlParameterSource()[ CD ]
Line_4 $$ MapSqlParameterSource parms = new MapSqlParameterSource()-->Line_6 $$ List<Map<String, Object>> li = template.queryForList("SELECT AGE FROM CUSTMR WHERE ID < :id", parms)[ FD ]
Line_2 $$ public void testQueryForListWithParamMapAndEmptyResult() throws Exception -->Line_8 $$ verify(connection).prepareStatement("SELECT AGE FROM CUSTMR WHERE ID < ?")[ CD ]
Line_6 $$ List<Map<String, Object>> li = template.queryForList("SELECT AGE FROM CUSTMR WHERE ID < :id", parms)-->Line_7 $$ assertEquals("All rows returned", 0, li.size())[ FD ]
Line_2 $$ public void testQueryForListWithParamMapAndEmptyResult() throws Exception -->Line_9 $$ verify(preparedStatement).setObject(1, 3)[ CD ]
Line_2 $$ public void testQueryForListWithParamMapAndEmptyResult() throws Exception -->Line_7 $$ assertEquals("All rows returned", 0, li.size())[ CD ]
Line_2 $$ public void testQueryForListWithParamMapAndEmptyResult() throws Exception -->Line_6 $$ List<Map<String, Object>> li = template.queryForList("SELECT AGE FROM CUSTMR WHERE ID < :id", parms)[ CD ]
Line_4 $$ MapSqlParameterSource parms = new MapSqlParameterSource()-->Line_5 $$ parms.addValue("id", 3)[ FD ]
