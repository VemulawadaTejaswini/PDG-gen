Line_2 $$ public void testGetComponentAdapterDoesntDuplicateAdapters() throws Exception -->Line_3 $$ MutablePicoContainer picoContainer = new ExtensionsAreaImpl("foo", null, new DefaultPicoContainer(), new Extensions.SimpleLogProvider()).getPicoContainer()[ CD ]
Line_3 $$ MutablePicoContainer picoContainer = new ExtensionsAreaImpl("foo", null, new DefaultPicoContainer(), new Extensions.SimpleLogProvider()).getPicoContainer()-->Line_4 $$ picoContainer.registerComponentImplementation("runnable", ExtensionsAreaTest.class)[ FD ]
Line_5 $$ List adapters = picoContainer.getComponentAdaptersOfType(ExtensionsAreaTest.class)-->Line_6 $$ assertEquals(1, adapters.size())[ FD ]
Line_2 $$ public void testGetComponentAdapterDoesntDuplicateAdapters() throws Exception -->Line_5 $$ List adapters = picoContainer.getComponentAdaptersOfType(ExtensionsAreaTest.class)[ CD ]
Line_2 $$ public void testGetComponentAdapterDoesntDuplicateAdapters() throws Exception -->Line_4 $$ picoContainer.registerComponentImplementation("runnable", ExtensionsAreaTest.class)[ CD ]
Line_3 $$ MutablePicoContainer picoContainer = new ExtensionsAreaImpl("foo", null, new DefaultPicoContainer(), new Extensions.SimpleLogProvider()).getPicoContainer()-->Line_5 $$ List adapters = picoContainer.getComponentAdaptersOfType(ExtensionsAreaTest.class)[ FD ]
Line_2 $$ public void testGetComponentAdapterDoesntDuplicateAdapters() throws Exception -->Line_6 $$ assertEquals(1, adapters.size())[ CD ]
