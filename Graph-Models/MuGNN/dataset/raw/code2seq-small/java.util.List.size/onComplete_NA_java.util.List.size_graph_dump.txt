Line_2 $$ public ParserState onComplete() -->Line_19 $$ return state[ CD ]
Line_2 $$ public ParserState onComplete() -->Line_3 $$ if (getHasArgument() && values.isEmpty()) [ CD ]
Line_6 $$ ParsedCommandLineOption parsedOption = commandLine.addOption(optionString.option, option)-->Line_11 $$ parsedOption.addArgument(value)[ FD ]
Line_13 $$ if (option.getDeprecationWarning() != null) -->Line_14 $$ deprecationPrinter.println("The " + optionString + " option is deprecated - " + option.getDeprecationWarning())[ CD ]
Line_2 $$ public ParserState onComplete() -->Line_13 $$ if (option.getDeprecationWarning() != null) [ CD ]
Line_2 $$ public ParserState onComplete() -->Line_6 $$ ParsedCommandLineOption parsedOption = commandLine.addOption(optionString.option, option)[ CD ]
Line_6 $$ ParsedCommandLineOption parsedOption = commandLine.addOption(optionString.option, option)-->Line_7 $$ if (values.size() + parsedOption.getValues().size() > 1 && !option.getAllowsMultipleArguments()) [ FD ]
Line_10 $$ for (String value : values) -->Line_11 $$ parsedOption.addArgument(value)[ FD ]
Line_16 $$ for (CommandLineOption otherOption : option.getGroupWith()) -->Line_17 $$ commandLine.removeOption(otherOption)[ FD ]
Line_2 $$ public ParserState onComplete() -->Line_7 $$ if (values.size() + parsedOption.getValues().size() > 1 && !option.getAllowsMultipleArguments()) [ CD ]
