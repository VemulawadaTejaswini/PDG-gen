Line_2 $$ public void testResolveVariableWithResource() -->Line_5 $$ List<String> requestedLocations = _mockResourceManager.getRequestedLocations()[ CD ]
Line_5 $$ List<String> requestedLocations = _mockResourceManager.getRequestedLocations()-->Line_6 $$ Assert.assertEquals(1, requestedLocations.size())[ FD ]
Line_2 $$ public void testResolveVariableWithResource() -->Line_4 $$ Assert.assertEquals(_mockResourceManager.getContent(), value)[ CD ]
Line_5 $$ List<String> requestedLocations = _mockResourceManager.getRequestedLocations()-->Line_7 $$ Assert.assertEquals("template.ftl", requestedLocations.get(0))[ FD ]
Line_2 $$ public void testResolveVariableWithResource() -->Line_3 $$ String value = _locationVariableResolver.resolve("$[ CD ]
Line_2 $$ public void testResolveVariableWithResource() -->Line_7 $$ Assert.assertEquals("template.ftl", requestedLocations.get(0))[ CD ]
Line_3 $$ String value = _locationVariableResolver.resolve("$-->Line_4 $$ Assert.assertEquals(_mockResourceManager.getContent(), value)[ FD ]
Line_2 $$ public void testResolveVariableWithResource() -->Line_6 $$ Assert.assertEquals(1, requestedLocations.size())[ CD ]
