Line_2 $$ private void initialize(SelectClause selectClause) -->Line_22 $$ int size = fromElementList.size()[ CD ]
Line_31 $$ for (int i = 0; i < size; i++) -->Line_34 $$ if (entityPersisters[i] == null) [ CD ]
Line_2 $$ private void initialize(SelectClause selectClause) -->Line_3 $$ List fromElementList = selectClause.getFromElementsForLoad()[ FD ]
Line_2 $$ private void initialize(SelectClause selectClause) -->Line_3 $$ List fromElementList = selectClause.getFromElementsForLoad()[ CD ]
Line_2 $$ private void initialize(SelectClause selectClause) -->Line_4 $$ hasScalars = selectClause.isScalarSelect()[ FD ]
Line_31 $$ for (int i = 0; i < size; i++) -->Line_32 $$ final FromElement element = (FromElement) fromElementList.get(i)[ FD ]
Line_15 $$ for (int i = 0; i < length; i++) -->Line_16 $$ FromElement collectionFromElement = (FromElement) collectionFromElements.get(i)[ CD ]
Line_16 $$ FromElement collectionFromElement = (FromElement) collectionFromElements.get(i)-->Line_17 $$ collectionPersisters[i] = collectionFromElement.getQueryableCollection()[ FD ]
Line_49 $$ if (element.getDataType().isEntityType()) -->Line_50 $$ EntityType entityType = (EntityType) element.getDataType()[ CD ]
Line_31 $$ for (int i = 0; i < size; i++) -->Line_37 $$ entityEagerPropertyFetches[i] = element.isAllPropertyFetch()[ CD ]
Line_32 $$ final FromElement element = (FromElement) fromElementList.get(i)-->Line_50 $$ EntityType entityType = (EntityType) element.getDataType()[ FD ]
Line_15 $$ for (int i = 0; i < length; i++) -->Line_31 $$ for (int i = 0; i < size; i++) [ FD ]
Line_2 $$ private void initialize(SelectClause selectClause) -->Line_6 $$ queryReturnTypes = selectClause.getQueryReturnTypes()[ CD ]
Line_3 $$ List fromElementList = selectClause.getFromElementsForLoad()-->Line_32 $$ final FromElement element = (FromElement) fromElementList.get(i)[ FD ]
Line_2 $$ private void initialize(SelectClause selectClause) -->Line_10 $$ if (collectionFromElements != null && collectionFromElements.size() != 0) [ CD ]
Line_15 $$ for (int i = 0; i < length; i++) -->Line_19 $$ collectionSuffixes[i] = collectionFromElement.getCollectionSuffix()[ CD ]
Line_15 $$ for (int i = 0; i < length; i++) -->Line_16 $$ FromElement collectionFromElement = (FromElement) collectionFromElements.get(i)[ FD ]
Line_32 $$ final FromElement element = (FromElement) fromElementList.get(i)-->Line_38 $$ sqlAliases[i] = element.getTableAlias()[ FD ]
Line_10 $$ if (collectionFromElements != null && collectionFromElements.size() != 0) -->Line_15 $$ for (int i = 0; i < length; i++) [ CD ]
Line_31 $$ for (int i = 0; i < size; i++) -->Line_32 $$ final FromElement element = (FromElement) fromElementList.get(i)[ CD ]
Line_2 $$ private void initialize(SelectClause selectClause) -->Line_7 $$ aggregatedSelectExpression = selectClause.getAggregatedSelectExpression()[ FD ]
Line_15 $$ for (int i = 0; i < length; i++) -->Line_41 $$ sqlAliasSuffixes[i] = (size == 1) ? "" : Integer.toString(i) + "_"[ FD ]
Line_32 $$ final FromElement element = (FromElement) fromElementList.get(i)-->Line_47 $$ if (element.isFetch()) [ FD ]
Line_32 $$ final FromElement element = (FromElement) fromElementList.get(i)-->Line_49 $$ if (element.getDataType().isEntityType()) [ FD ]
Line_31 $$ for (int i = 0; i < size; i++) -->Line_43 $$ if (includeInSelect[i]) [ CD ]
Line_2 $$ private void initialize(SelectClause selectClause) -->Line_7 $$ aggregatedSelectExpression = selectClause.getAggregatedSelectExpression()[ CD ]
Line_2 $$ private void initialize(SelectClause selectClause) -->Line_8 $$ queryReturnAliases = selectClause.getQueryReturnAliases()[ CD ]
Line_49 $$ if (element.getDataType().isEntityType()) -->Line_54 $$ ownerAssociationTypes[i] = entityType[ CD ]
Line_9 $$ List collectionFromElements = selectClause.getCollectionFromElements()-->Line_16 $$ FromElement collectionFromElement = (FromElement) collectionFromElements.get(i)[ FD ]
Line_32 $$ final FromElement element = (FromElement) fromElementList.get(i)-->Line_42 $$ includeInSelect[i] = !element.isFetch()[ FD ]
Line_32 $$ final FromElement element = (FromElement) fromElementList.get(i)-->Line_33 $$ entityPersisters[i] = (Queryable) element.getEntityPersister()[ FD ]
Line_9 $$ List collectionFromElements = selectClause.getCollectionFromElements()-->Line_11 $$ int length = collectionFromElements.size()[ FD ]
Line_2 $$ private void initialize(SelectClause selectClause) -->Line_9 $$ List collectionFromElements = selectClause.getCollectionFromElements()[ FD ]
Line_22 $$ int size = fromElementList.size()-->Line_31 $$ for (int i = 0; i < size; i++) [ FD ]
Line_31 $$ for (int i = 0; i < size; i++) -->Line_42 $$ includeInSelect[i] = !element.isFetch()[ CD ]
Line_15 $$ for (int i = 0; i < length; i++) -->Line_32 $$ final FromElement element = (FromElement) fromElementList.get(i)[ FD ]
Line_50 $$ EntityType entityType = (EntityType) element.getDataType()-->Line_51 $$ if (entityType.isOneToOne()) [ FD ]
Line_49 $$ if (element.getDataType().isEntityType()) -->Line_51 $$ if (entityType.isOneToOne()) [ CD ]
Line_31 $$ for (int i = 0; i < size; i++) -->Line_47 $$ if (element.isFetch()) [ CD ]
Line_9 $$ List collectionFromElements = selectClause.getCollectionFromElements()-->Line_10 $$ if (collectionFromElements != null && collectionFromElements.size() != 0) [ FD ]
Line_32 $$ final FromElement element = (FromElement) fromElementList.get(i)-->Line_35 $$ throw new IllegalStateException("No entity persister for " + element.toString())[ FD ]
Line_32 $$ final FromElement element = (FromElement) fromElementList.get(i)-->Line_39 $$ entityAliases[i] = element.getClassAlias()[ FD ]
Line_31 $$ for (int i = 0; i < size; i++) -->Line_41 $$ sqlAliasSuffixes[i] = (size == 1) ? "" : Integer.toString(i) + "_"[ CD ]
Line_31 $$ for (int i = 0; i < size; i++) -->Line_39 $$ entityAliases[i] = element.getClassAlias()[ CD ]
Line_31 $$ for (int i = 0; i < size; i++) -->Line_40 $$ sqlAliasByEntityAlias.put(entityAliases[i], sqlAliases[i])[ CD ]
Line_2 $$ private void initialize(SelectClause selectClause) -->Line_5 $$ scalarColumnNames = selectClause.getColumnNames()[ FD ]
Line_31 $$ for (int i = 0; i < size; i++) -->Line_43 $$ if (includeInSelect[i]) [ FD ]
Line_32 $$ final FromElement element = (FromElement) fromElementList.get(i)-->Line_48 $$ if (element.isCollectionJoin() || element.getQueryableCollection() != null) [ FD ]
Line_2 $$ private void initialize(SelectClause selectClause) -->Line_31 $$ for (int i = 0; i < size; i++) [ CD ]
Line_50 $$ EntityType entityType = (EntityType) element.getDataType()-->Line_54 $$ ownerAssociationTypes[i] = entityType[ FD ]
Line_31 $$ for (int i = 0; i < size; i++) -->Line_41 $$ sqlAliasSuffixes[i] = (size == 1) ? "" : Integer.toString(i) + "_"[ FD ]
Line_3 $$ List fromElementList = selectClause.getFromElementsForLoad()-->Line_18 $$ collectionOwners[i] = fromElementList.indexOf(collectionFromElement.getOrigin())[ FD ]
Line_2 $$ private void initialize(SelectClause selectClause) -->Line_9 $$ List collectionFromElements = selectClause.getCollectionFromElements()[ CD ]
Line_15 $$ for (int i = 0; i < length; i++) -->Line_43 $$ if (includeInSelect[i]) [ FD ]
Line_2 $$ private void initialize(SelectClause selectClause) -->Line_58 $$ defaultLockModes = ArrayHelper.fillArray(LockMode.NONE, size)[ CD ]
Line_11 $$ int length = collectionFromElements.size()-->Line_15 $$ for (int i = 0; i < length; i++) [ FD ]
Line_51 $$ if (entityType.isOneToOne()) -->Line_52 $$ owners[i] = fromElementList.indexOf(element.getOrigin())[ CD ]
Line_22 $$ int size = fromElementList.size()-->Line_58 $$ defaultLockModes = ArrayHelper.fillArray(LockMode.NONE, size)[ FD ]
Line_31 $$ for (int i = 0; i < size; i++) -->Line_33 $$ entityPersisters[i] = (Queryable) element.getEntityPersister()[ CD ]
Line_2 $$ private void initialize(SelectClause selectClause) -->Line_5 $$ scalarColumnNames = selectClause.getColumnNames()[ CD ]
Line_15 $$ for (int i = 0; i < length; i++) -->Line_18 $$ collectionOwners[i] = fromElementList.indexOf(collectionFromElement.getOrigin())[ CD ]
Line_47 $$ if (element.isFetch()) -->Line_48 $$ if (element.isCollectionJoin() || element.getQueryableCollection() != null) [ CD ]
Line_32 $$ final FromElement element = (FromElement) fromElementList.get(i)-->Line_52 $$ owners[i] = fromElementList.indexOf(element.getOrigin())[ FD ]
Line_31 $$ for (int i = 0; i < size; i++) -->Line_38 $$ sqlAliases[i] = element.getTableAlias()[ CD ]
Line_32 $$ final FromElement element = (FromElement) fromElementList.get(i)-->Line_37 $$ entityEagerPropertyFetches[i] = element.isAllPropertyFetch()[ FD ]
Line_2 $$ private void initialize(SelectClause selectClause) -->Line_4 $$ hasScalars = selectClause.isScalarSelect()[ CD ]
Line_2 $$ private void initialize(SelectClause selectClause) -->Line_8 $$ queryReturnAliases = selectClause.getQueryReturnAliases()[ FD ]
Line_3 $$ List fromElementList = selectClause.getFromElementsForLoad()-->Line_22 $$ int size = fromElementList.size()[ FD ]
Line_3 $$ List fromElementList = selectClause.getFromElementsForLoad()-->Line_52 $$ owners[i] = fromElementList.indexOf(element.getOrigin())[ FD ]
Line_31 $$ for (int i = 0; i < size; i++) -->Line_46 $$ owners[i] = -1[ CD ]
Line_16 $$ FromElement collectionFromElement = (FromElement) collectionFromElements.get(i)-->Line_19 $$ collectionSuffixes[i] = collectionFromElement.getCollectionSuffix()[ FD ]
Line_48 $$ if (element.isCollectionJoin() || element.getQueryableCollection() != null) -->Line_49 $$ if (element.getDataType().isEntityType()) [ CD ]
Line_15 $$ for (int i = 0; i < length; i++) -->Line_17 $$ collectionPersisters[i] = collectionFromElement.getQueryableCollection()[ CD ]
Line_10 $$ if (collectionFromElements != null && collectionFromElements.size() != 0) -->Line_11 $$ int length = collectionFromElements.size()[ CD ]
Line_16 $$ FromElement collectionFromElement = (FromElement) collectionFromElements.get(i)-->Line_18 $$ collectionOwners[i] = fromElementList.indexOf(collectionFromElement.getOrigin())[ FD ]
Line_2 $$ private void initialize(SelectClause selectClause) -->Line_6 $$ queryReturnTypes = selectClause.getQueryReturnTypes()[ FD ]
