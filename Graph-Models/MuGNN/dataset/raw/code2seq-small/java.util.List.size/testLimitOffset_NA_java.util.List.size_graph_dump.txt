Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()-->Line_27 $$ result = session.createSQLQuery("select * from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()[ FD ]
Line_18 $$ result = session.createQuery("select distinct description from DataPoint order by description").setFirstResult(2).setMaxResults(3).list()-->Line_27 $$ result = session.createSQLQuery("select * from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()[ FD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_14 $$ assertEquals(2, ((DataPoint) result.get(1)).getSequence())[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_27 $$ result = session.createSQLQuery("select * from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()[ CD ]
Line_2 $$ public void testLimitOffset() -->Line_22 $$ assertEquals("Description: 4", result.get(2))[ CD ]
Line_15 $$ result = generateBaseCriteria(session).setFirstResult(99).setMaxResults(Integer.MAX_VALUE - 200).list()-->Line_17 $$ assertEquals(99, ((DataPoint) result.get(0)).getSequence())[ FD ]
Line_6 $$ List result-->Line_17 $$ assertEquals(99, ((DataPoint) result.get(0)).getSequence())[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_16 $$ assertEquals(1, result.size())[ CD ]
Line_2 $$ public void testLimitOffset() -->Line_23 $$ result = session.createSQLQuery("select description, xval, yval from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()[ CD ]
Line_15 $$ result = generateBaseCriteria(session).setFirstResult(99).setMaxResults(Integer.MAX_VALUE - 200).list()-->Line_24 $$ assertEquals(5, result.size())[ FD ]
Line_15 $$ result = generateBaseCriteria(session).setFirstResult(99).setMaxResults(Integer.MAX_VALUE - 200).list()-->Line_21 $$ assertEquals("Description: 3", result.get(1))[ FD ]
Line_6 $$ List result-->Line_24 $$ assertEquals(5, result.size())[ FD ]
Line_6 $$ List result-->Line_14 $$ assertEquals(2, ((DataPoint) result.get(1)).getSequence())[ FD ]
Line_6 $$ List result-->Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()[ FD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_8 $$ assertEquals(20, result.size())[ FD ]
Line_6 $$ List result-->Line_19 $$ assertEquals(3, result.size())[ FD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_25 $$ Object[] row = (Object[]) result.get(0)[ FD ]
Line_23 $$ result = session.createSQLQuery("select description, xval, yval from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()-->Line_25 $$ Object[] row = (Object[]) result.get(0)[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_31 $$ cleanupTestData()[ CD ]
Line_6 $$ List result-->Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_25 $$ Object[] row = (Object[]) result.get(0)[ CD ]
Line_6 $$ List result-->Line_22 $$ assertEquals("Description: 4", result.get(2))[ FD ]
Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()-->Line_24 $$ assertEquals(5, result.size())[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_14 $$ assertEquals(2, ((DataPoint) result.get(1)).getSequence())[ CD ]
Line_2 $$ public void testLimitOffset() -->Line_20 $$ assertEquals("Description: 2", result.get(0))[ CD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_20 $$ assertEquals("Description: 2", result.get(0))[ FD ]
Line_6 $$ List result-->Line_27 $$ result = session.createSQLQuery("select * from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()[ FD ]
Line_6 $$ List result-->Line_9 $$ assertEquals(0, ((DataPoint) result.get(0)).getSequence())[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_26 $$ assertTrue(row[0] instanceof String)[ CD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_13 $$ assertEquals(1, ((DataPoint) result.get(0)).getSequence())[ FD ]
Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()-->Line_28 $$ assertEquals(5, result.size())[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_5 $$ session.beginTransaction()[ CD ]
Line_2 $$ public void testLimitOffset() -->Line_30 $$ session.close()[ CD ]
Line_4 $$ Session session = openSession()-->Line_29 $$ session.getTransaction().commit()[ FD ]
Line_15 $$ result = generateBaseCriteria(session).setFirstResult(99).setMaxResults(Integer.MAX_VALUE - 200).list()-->Line_20 $$ assertEquals("Description: 2", result.get(0))[ FD ]
Line_18 $$ result = session.createQuery("select distinct description from DataPoint order by description").setFirstResult(2).setMaxResults(3).list()-->Line_24 $$ assertEquals(5, result.size())[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_21 $$ assertEquals("Description: 3", result.get(1))[ CD ]
Line_6 $$ List result-->Line_16 $$ assertEquals(1, result.size())[ FD ]
Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()-->Line_21 $$ assertEquals("Description: 3", result.get(1))[ FD ]
Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()-->Line_15 $$ result = generateBaseCriteria(session).setFirstResult(99).setMaxResults(Integer.MAX_VALUE - 200).list()[ FD ]
Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()-->Line_17 $$ assertEquals(99, ((DataPoint) result.get(0)).getSequence())[ FD ]
Line_6 $$ List result-->Line_15 $$ result = generateBaseCriteria(session).setFirstResult(99).setMaxResults(Integer.MAX_VALUE - 200).list()[ FD ]
Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()-->Line_20 $$ assertEquals("Description: 2", result.get(0))[ FD ]
Line_6 $$ List result-->Line_12 $$ assertEquals(20, result.size())[ FD ]
Line_15 $$ result = generateBaseCriteria(session).setFirstResult(99).setMaxResults(Integer.MAX_VALUE - 200).list()-->Line_16 $$ assertEquals(1, result.size())[ FD ]
Line_27 $$ result = session.createSQLQuery("select * from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()-->Line_28 $$ assertEquals(5, result.size())[ FD ]
Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()-->Line_19 $$ assertEquals(3, result.size())[ FD ]
Line_4 $$ Session session = openSession()-->Line_27 $$ result = session.createSQLQuery("select * from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()[ FD ]
Line_15 $$ result = generateBaseCriteria(session).setFirstResult(99).setMaxResults(Integer.MAX_VALUE - 200).list()-->Line_23 $$ result = session.createSQLQuery("select description, xval, yval from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()[ FD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_12 $$ assertEquals(20, result.size())[ FD ]
Line_18 $$ result = session.createQuery("select distinct description from DataPoint order by description").setFirstResult(2).setMaxResults(3).list()-->Line_21 $$ assertEquals("Description: 3", result.get(1))[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_6 $$ List result[ CD ]
Line_4 $$ Session session = openSession()-->Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_12 $$ assertEquals(20, result.size())[ CD ]
Line_2 $$ public void testLimitOffset() -->Line_17 $$ assertEquals(99, ((DataPoint) result.get(0)).getSequence())[ CD ]
Line_6 $$ List result-->Line_20 $$ assertEquals("Description: 2", result.get(0))[ FD ]
Line_6 $$ List result-->Line_10 $$ assertEquals(1, ((DataPoint) result.get(1)).getSequence())[ FD ]
Line_6 $$ List result-->Line_21 $$ assertEquals("Description: 3", result.get(1))[ FD ]
Line_6 $$ List result-->Line_25 $$ Object[] row = (Object[]) result.get(0)[ FD ]
Line_23 $$ result = session.createSQLQuery("select description, xval, yval from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()-->Line_27 $$ result = session.createSQLQuery("select * from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()[ FD ]
Line_15 $$ result = generateBaseCriteria(session).setFirstResult(99).setMaxResults(Integer.MAX_VALUE - 200).list()-->Line_27 $$ result = session.createSQLQuery("select * from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()[ FD ]
Line_18 $$ result = session.createQuery("select distinct description from DataPoint order by description").setFirstResult(2).setMaxResults(3).list()-->Line_28 $$ assertEquals(5, result.size())[ FD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_9 $$ assertEquals(0, ((DataPoint) result.get(0)).getSequence())[ FD ]
Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()-->Line_23 $$ result = session.createSQLQuery("select description, xval, yval from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_9 $$ assertEquals(0, ((DataPoint) result.get(0)).getSequence())[ CD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_28 $$ assertEquals(5, result.size())[ FD ]
Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()-->Line_16 $$ assertEquals(1, result.size())[ FD ]
Line_15 $$ result = generateBaseCriteria(session).setFirstResult(99).setMaxResults(Integer.MAX_VALUE - 200).list()-->Line_22 $$ assertEquals("Description: 4", result.get(2))[ FD ]
Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()-->Line_25 $$ Object[] row = (Object[]) result.get(0)[ FD ]
Line_18 $$ result = session.createQuery("select distinct description from DataPoint order by description").setFirstResult(2).setMaxResults(3).list()-->Line_20 $$ assertEquals("Description: 2", result.get(0))[ FD ]
Line_18 $$ result = session.createQuery("select distinct description from DataPoint order by description").setFirstResult(2).setMaxResults(3).list()-->Line_25 $$ Object[] row = (Object[]) result.get(0)[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_18 $$ result = session.createQuery("select distinct description from DataPoint order by description").setFirstResult(2).setMaxResults(3).list()[ CD ]
Line_4 $$ Session session = openSession()-->Line_30 $$ session.close()[ FD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_21 $$ assertEquals("Description: 3", result.get(1))[ FD ]
Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()-->Line_12 $$ assertEquals(20, result.size())[ FD ]
Line_4 $$ Session session = openSession()-->Line_5 $$ session.beginTransaction()[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_15 $$ result = generateBaseCriteria(session).setFirstResult(99).setMaxResults(Integer.MAX_VALUE - 200).list()[ CD ]
Line_23 $$ result = session.createSQLQuery("select description, xval, yval from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()-->Line_24 $$ assertEquals(5, result.size())[ FD ]
Line_6 $$ List result-->Line_13 $$ assertEquals(1, ((DataPoint) result.get(0)).getSequence())[ FD ]
Line_18 $$ result = session.createQuery("select distinct description from DataPoint order by description").setFirstResult(2).setMaxResults(3).list()-->Line_22 $$ assertEquals("Description: 4", result.get(2))[ FD ]
Line_6 $$ List result-->Line_8 $$ assertEquals(20, result.size())[ FD ]
Line_18 $$ result = session.createQuery("select distinct description from DataPoint order by description").setFirstResult(2).setMaxResults(3).list()-->Line_19 $$ assertEquals(3, result.size())[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_24 $$ assertEquals(5, result.size())[ CD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_22 $$ assertEquals("Description: 4", result.get(2))[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_3 $$ prepareTestData()[ CD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_16 $$ assertEquals(1, result.size())[ FD ]
Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()-->Line_14 $$ assertEquals(2, ((DataPoint) result.get(1)).getSequence())[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_4 $$ Session session = openSession()[ CD ]
Line_15 $$ result = generateBaseCriteria(session).setFirstResult(99).setMaxResults(Integer.MAX_VALUE - 200).list()-->Line_28 $$ assertEquals(5, result.size())[ FD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_15 $$ result = generateBaseCriteria(session).setFirstResult(99).setMaxResults(Integer.MAX_VALUE - 200).list()[ FD ]
Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()-->Line_22 $$ assertEquals("Description: 4", result.get(2))[ FD ]
Line_6 $$ List result-->Line_18 $$ result = session.createQuery("select distinct description from DataPoint order by description").setFirstResult(2).setMaxResults(3).list()[ FD ]
Line_15 $$ result = generateBaseCriteria(session).setFirstResult(99).setMaxResults(Integer.MAX_VALUE - 200).list()-->Line_18 $$ result = session.createQuery("select distinct description from DataPoint order by description").setFirstResult(2).setMaxResults(3).list()[ FD ]
Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()-->Line_13 $$ assertEquals(1, ((DataPoint) result.get(0)).getSequence())[ FD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_19 $$ assertEquals(3, result.size())[ FD ]
Line_18 $$ result = session.createQuery("select distinct description from DataPoint order by description").setFirstResult(2).setMaxResults(3).list()-->Line_23 $$ result = session.createSQLQuery("select description, xval, yval from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()[ FD ]
Line_4 $$ Session session = openSession()-->Line_15 $$ result = generateBaseCriteria(session).setFirstResult(99).setMaxResults(Integer.MAX_VALUE - 200).list()[ FD ]
Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()-->Line_18 $$ result = session.createQuery("select distinct description from DataPoint order by description").setFirstResult(2).setMaxResults(3).list()[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_29 $$ session.getTransaction().commit()[ CD ]
Line_2 $$ public void testLimitOffset() -->Line_8 $$ assertEquals(20, result.size())[ CD ]
Line_4 $$ Session session = openSession()-->Line_18 $$ result = session.createQuery("select distinct description from DataPoint order by description").setFirstResult(2).setMaxResults(3).list()[ FD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_23 $$ result = session.createSQLQuery("select description, xval, yval from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()[ FD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_10 $$ assertEquals(1, ((DataPoint) result.get(1)).getSequence())[ FD ]
Line_23 $$ result = session.createSQLQuery("select description, xval, yval from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()-->Line_28 $$ assertEquals(5, result.size())[ FD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_27 $$ result = session.createSQLQuery("select * from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_28 $$ assertEquals(5, result.size())[ CD ]
Line_2 $$ public void testLimitOffset() -->Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()[ CD ]
Line_4 $$ Session session = openSession()-->Line_23 $$ result = session.createSQLQuery("select description, xval, yval from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()[ FD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_17 $$ assertEquals(99, ((DataPoint) result.get(0)).getSequence())[ FD ]
Line_6 $$ List result-->Line_23 $$ result = session.createSQLQuery("select description, xval, yval from DataPoint order by xval, yval").setFirstResult(2).setMaxResults(5).list()[ FD ]
Line_4 $$ Session session = openSession()-->Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()[ FD ]
Line_2 $$ public void testLimitOffset() -->Line_10 $$ assertEquals(1, ((DataPoint) result.get(1)).getSequence())[ CD ]
Line_2 $$ public void testLimitOffset() -->Line_13 $$ assertEquals(1, ((DataPoint) result.get(0)).getSequence())[ CD ]
Line_2 $$ public void testLimitOffset() -->Line_19 $$ assertEquals(3, result.size())[ CD ]
Line_2 $$ public void testLimitOffset() -->Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()[ CD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_11 $$ result = generateBaseCriteria(session).setFirstResult(1).setMaxResults(20).list()[ FD ]
Line_15 $$ result = generateBaseCriteria(session).setFirstResult(99).setMaxResults(Integer.MAX_VALUE - 200).list()-->Line_25 $$ Object[] row = (Object[]) result.get(0)[ FD ]
Line_15 $$ result = generateBaseCriteria(session).setFirstResult(99).setMaxResults(Integer.MAX_VALUE - 200).list()-->Line_19 $$ assertEquals(3, result.size())[ FD ]
Line_6 $$ List result-->Line_28 $$ assertEquals(5, result.size())[ FD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_18 $$ result = session.createQuery("select distinct description from DataPoint order by description").setFirstResult(2).setMaxResults(3).list()[ FD ]
Line_7 $$ result = generateBaseHQLQuery(session).setFirstResult(0).setMaxResults(20).list()-->Line_24 $$ assertEquals(5, result.size())[ FD ]
