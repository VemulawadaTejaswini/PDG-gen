Line_5 $$ List<String> names = new ArrayList(interfaces.size())-->Line_9 $$ names.add(interfaceClassName)[ FD ]
Line_6 $$ for (Class<?> interfaceClass : interfaces) -->Line_7 $$ String interfaceClassName = interfaceClass.getName()[ FD ]
Line_3 $$ Set<Class<?>> interfaces = OSGiBeanProperties.Service.interfaces(bean)-->Line_4 $$ interfaces.add(bean.getClass())[ FD ]
Line_2 $$ private void _registerService(BundleContext bundleContext, String beanName, Object bean) -->Line_3 $$ Set<Class<?>> interfaces = OSGiBeanProperties.Service.interfaces(bean)[ CD ]
Line_2 $$ private void _registerService(BundleContext bundleContext, String beanName, Object bean) -->Line_3 $$ Set<Class<?>> interfaces = OSGiBeanProperties.Service.interfaces(bean)[ FD ]
Line_2 $$ private void _registerService(BundleContext bundleContext, String beanName, Object bean) -->Line_5 $$ List<String> names = new ArrayList(interfaces.size())[ CD ]
Line_8 $$ if (!_isIgnoredInterface(interfaceClassName)) -->Line_9 $$ names.add(interfaceClassName)[ CD ]
Line_2 $$ private void _registerService(BundleContext bundleContext, String beanName, Object bean) -->Line_12 $$ if (names.isEmpty()) [ CD ]
Line_12 $$ if (names.isEmpty()) -->Line_13 $$ return[ CD ]
Line_7 $$ String interfaceClassName = interfaceClass.getName()-->Line_8 $$ if (!_isIgnoredInterface(interfaceClassName)) [ FD ]
Line_2 $$ private void _registerService(BundleContext bundleContext, String beanName, Object bean) -->Line_15 $$ bundleContext.registerService(names.toArray(new String[names.size()]), bean, _getProperties(bean, beanName))[ CD ]
Line_2 $$ private void _registerService(BundleContext bundleContext, String beanName, Object bean) -->Line_15 $$ bundleContext.registerService(names.toArray(new String[names.size()]), bean, _getProperties(bean, beanName))[ FD ]
Line_5 $$ List<String> names = new ArrayList(interfaces.size())-->Line_15 $$ bundleContext.registerService(names.toArray(new String[names.size()]), bean, _getProperties(bean, beanName))[ FD ]
Line_2 $$ private void _registerService(BundleContext bundleContext, String beanName, Object bean) -->Line_4 $$ interfaces.add(bean.getClass())[ CD ]
Line_3 $$ Set<Class<?>> interfaces = OSGiBeanProperties.Service.interfaces(bean)-->Line_5 $$ List<String> names = new ArrayList(interfaces.size())[ FD ]
Line_2 $$ private void _registerService(BundleContext bundleContext, String beanName, Object bean) -->Line_4 $$ interfaces.add(bean.getClass())[ FD ]
Line_7 $$ String interfaceClassName = interfaceClass.getName()-->Line_9 $$ names.add(interfaceClassName)[ FD ]
Line_5 $$ List<String> names = new ArrayList(interfaces.size())-->Line_12 $$ if (names.isEmpty()) [ FD ]
