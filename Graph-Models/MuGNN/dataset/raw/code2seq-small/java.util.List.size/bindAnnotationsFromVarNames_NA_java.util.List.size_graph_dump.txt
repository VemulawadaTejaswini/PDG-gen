Line_2 $$ private void bindAnnotationsFromVarNames(List<String> varNames) -->Line_6 $$ throw new AmbiguousBindingException("Found " + varNames.size() + " potential annotation variable(s), and " + numAnnotationSlots + " potential argument slots")[ FD ]
Line_5 $$ if (numAnnotationSlots > 1) -->Line_7 $$ if (numAnnotationSlots == 1) [ CD ]
Line_4 $$ int numAnnotationSlots = countNumberOfUnboundAnnotationArguments()-->Line_7 $$ if (numAnnotationSlots == 1) [ FD ]
Line_2 $$ private void bindAnnotationsFromVarNames(List<String> varNames) -->Line_9 $$ findAndBind(Annotation.class, varNames.get(0))[ FD ]
Line_2 $$ private void bindAnnotationsFromVarNames(List<String> varNames) -->Line_3 $$ if (!varNames.isEmpty()) [ CD ]
Line_2 $$ private void bindAnnotationsFromVarNames(List<String> varNames) -->Line_11 $$ throw new IllegalArgumentException("Found " + varNames.size() + " candidate annotation binding variables" + " but only one potential argument binding slot")[ FD ]
Line_2 $$ private void bindAnnotationsFromVarNames(List<String> varNames) -->Line_3 $$ if (!varNames.isEmpty()) [ FD ]
Line_2 $$ private void bindAnnotationsFromVarNames(List<String> varNames) -->Line_8 $$ if (varNames.size() == 1) [ FD ]
Line_8 $$ if (varNames.size() == 1) -->Line_9 $$ findAndBind(Annotation.class, varNames.get(0))[ CD ]
Line_4 $$ int numAnnotationSlots = countNumberOfUnboundAnnotationArguments()-->Line_5 $$ if (numAnnotationSlots > 1) [ FD ]
Line_3 $$ if (!varNames.isEmpty()) -->Line_4 $$ int numAnnotationSlots = countNumberOfUnboundAnnotationArguments()[ CD ]
Line_7 $$ if (numAnnotationSlots == 1) -->Line_8 $$ if (varNames.size() == 1) [ CD ]
Line_3 $$ if (!varNames.isEmpty()) -->Line_5 $$ if (numAnnotationSlots > 1) [ CD ]
