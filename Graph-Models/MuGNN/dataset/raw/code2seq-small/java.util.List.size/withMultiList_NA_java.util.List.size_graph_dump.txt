Line_3 $$ List list = new ArrayList()-->Line_6 $$ this.bean.setSomeList(list)[ FD ]
Line_14 $$ SAXReader reader = new SAXReader()-->Line_15 $$ Document document = reader.read(new StringReader(output))[ FD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_9 $$ this.tag.setItemValue("isoCode")[ CD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_27 $$ assertEquals("AT node not selected", "selected", e.attribute("selected").getValue())[ CD ]
Line_23 $$ Element e = (Element) selectElement.selectSingleNode("option[@value = 'UK']")-->Line_24 $$ assertEquals("UK node not selected", "selected", e.attribute("selected").getValue())[ FD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_3 $$ List list = new ArrayList()[ CD ]
Line_26 $$ e = (Element) selectElement.selectSingleNode("option[@value = 'AT']")-->Line_27 $$ assertEquals("AT node not selected", "selected", e.attribute("selected").getValue())[ FD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_11 $$ assertEquals(Tag.SKIP_BODY, result)[ CD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_14 $$ SAXReader reader = new SAXReader()[ CD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_19 $$ assertEquals("select", selectElement.getName())[ CD ]
Line_23 $$ Element e = (Element) selectElement.selectSingleNode("option[@value = 'UK']")-->Line_28 $$ assertEquals("Austria(AT)", e.getText())[ FD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_26 $$ e = (Element) selectElement.selectSingleNode("option[@value = 'AT']")[ CD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_7 $$ this.tag.setPath("someList")[ CD ]
Line_12 $$ String output = getOutput()-->Line_13 $$ output = "<doc>" + output + "</doc>"[ FD ]
Line_23 $$ Element e = (Element) selectElement.selectSingleNode("option[@value = 'UK']")-->Line_27 $$ assertEquals("AT node not selected", "selected", e.attribute("selected").getValue())[ FD ]
Line_18 $$ Element selectElement = rootElement.element("select")-->Line_20 $$ assertEquals("someList", selectElement.attribute("name").getValue())[ FD ]
Line_18 $$ Element selectElement = rootElement.element("select")-->Line_23 $$ Element e = (Element) selectElement.selectSingleNode("option[@value = 'UK']")[ FD ]
Line_16 $$ Element rootElement = document.getRootElement()-->Line_18 $$ Element selectElement = rootElement.element("select")[ FD ]
Line_18 $$ Element selectElement = rootElement.element("select")-->Line_19 $$ assertEquals("select", selectElement.getName())[ FD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_8 $$ this.tag.setItems(Country.getCountries())[ CD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_10 $$ int result = this.tag.doStartTag()[ CD ]
Line_18 $$ Element selectElement = rootElement.element("select")-->Line_26 $$ e = (Element) selectElement.selectSingleNode("option[@value = 'AT']")[ FD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_18 $$ Element selectElement = rootElement.element("select")[ CD ]
Line_16 $$ Element rootElement = document.getRootElement()-->Line_17 $$ assertEquals(2, rootElement.elements().size())[ FD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_17 $$ assertEquals(2, rootElement.elements().size())[ CD ]
Line_10 $$ int result = this.tag.doStartTag()-->Line_11 $$ assertEquals(Tag.SKIP_BODY, result)[ FD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_25 $$ assertEquals("United Kingdom(UK)", e.getText())[ CD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_4 $$ list.add(Country.COUNTRY_UK)[ CD ]
Line_3 $$ List list = new ArrayList()-->Line_5 $$ list.add(Country.COUNTRY_AT)[ FD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_5 $$ list.add(Country.COUNTRY_AT)[ CD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_6 $$ this.bean.setSomeList(list)[ CD ]
Line_26 $$ e = (Element) selectElement.selectSingleNode("option[@value = 'AT']")-->Line_28 $$ assertEquals("Austria(AT)", e.getText())[ FD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_16 $$ Element rootElement = document.getRootElement()[ CD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_21 $$ List children = selectElement.elements()[ CD ]
Line_18 $$ Element selectElement = rootElement.element("select")-->Line_21 $$ List children = selectElement.elements()[ FD ]
Line_21 $$ List children = selectElement.elements()-->Line_22 $$ assertEquals("Incorrect number of children", 4, children.size())[ FD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_12 $$ String output = getOutput()[ CD ]
Line_3 $$ List list = new ArrayList()-->Line_4 $$ list.add(Country.COUNTRY_UK)[ FD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_13 $$ output = "<doc>" + output + "</doc>"[ CD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_24 $$ assertEquals("UK node not selected", "selected", e.attribute("selected").getValue())[ CD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_20 $$ assertEquals("someList", selectElement.attribute("name").getValue())[ CD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_23 $$ Element e = (Element) selectElement.selectSingleNode("option[@value = 'UK']")[ CD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_15 $$ Document document = reader.read(new StringReader(output))[ CD ]
Line_23 $$ Element e = (Element) selectElement.selectSingleNode("option[@value = 'UK']")-->Line_26 $$ e = (Element) selectElement.selectSingleNode("option[@value = 'AT']")[ FD ]
Line_15 $$ Document document = reader.read(new StringReader(output))-->Line_16 $$ Element rootElement = document.getRootElement()[ FD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_28 $$ assertEquals("Austria(AT)", e.getText())[ CD ]
Line_23 $$ Element e = (Element) selectElement.selectSingleNode("option[@value = 'UK']")-->Line_25 $$ assertEquals("United Kingdom(UK)", e.getText())[ FD ]
Line_2 $$ public void withMultiList() throws Exception -->Line_22 $$ assertEquals("Incorrect number of children", 4, children.size())[ CD ]
