Line_19 $$ List<Type> types = columnTypes.build()-->Line_27 $$ Type type = types.get(i)[ FD ]
Line_6 $$ ImmutableList.Builder<Type> columnTypes = ImmutableList.builder()-->Line_36 $$ return new CassandraOutputTableHandle(connectorId, schemaName, tableName, columnNames.build(), columnTypes.build(), tableMetadata.isSampled(), tableMetadata.getOwner())[ FD ]
Line_7 $$ ImmutableList.Builder<ExtraColumnMetadata> columnExtra = ImmutableList.builder()-->Line_23 $$ columnExtra.add(new ExtraColumnMetadata(SAMPLE_WEIGHT_COLUMN_NAME, true))[ FD ]
Line_20 $$ StringBuilder queryBuilder = new StringBuilder(String.format("CREATE TABLE \"%s\".\"%s\"(id uuid primary key", schemaName, tableName))-->Line_28 $$ queryBuilder.append(", ").append(name).append(" ").append(toCassandraType(type).name().toLowerCase(ENGLISH))[ FD ]
Line_9 $$ for (ColumnMetadata column : tableMetadata.getColumns()) -->Line_12 $$ columnExtra.add(new ExtraColumnMetadata(column.getName(), column.isHidden()))[ FD ]
Line_25 $$ for (int i = 0; i < columns.size(); i++) -->Line_27 $$ Type type = types.get(i)[ CD ]
Line_5 $$ ImmutableList.Builder<String> columnNames = ImmutableList.builder()-->Line_10 $$ columnNames.add(column.getName())[ FD ]
Line_21 $$ if (tableMetadata.isSampled()) -->Line_22 $$ queryBuilder.append(", ").append(SAMPLE_WEIGHT_COLUMN_NAME).append(" ").append(BIGINT.name().toLowerCase(ENGLISH))[ CD ]
Line_17 $$ String tableName = table.getTableName()-->Line_20 $$ StringBuilder queryBuilder = new StringBuilder(String.format("CREATE TABLE \"%s\".\"%s\"(id uuid primary key", schemaName, tableName))[ FD ]
Line_16 $$ String schemaName = schemaProvider.getCaseSensitiveSchemaName(table.getSchemaName())-->Line_20 $$ StringBuilder queryBuilder = new StringBuilder(String.format("CREATE TABLE \"%s\".\"%s\"(id uuid primary key", schemaName, tableName))[ FD ]
Line_25 $$ for (int i = 0; i < columns.size(); i++) -->Line_27 $$ Type type = types.get(i)[ FD ]
Line_9 $$ for (ColumnMetadata column : tableMetadata.getColumns()) -->Line_11 $$ columnTypes.add(column.getType())[ FD ]
Line_20 $$ StringBuilder queryBuilder = new StringBuilder(String.format("CREATE TABLE \"%s\".\"%s\"(id uuid primary key", schemaName, tableName))-->Line_22 $$ queryBuilder.append(", ").append(SAMPLE_WEIGHT_COLUMN_NAME).append(" ").append(BIGINT.name().toLowerCase(ENGLISH))[ FD ]
Line_25 $$ for (int i = 0; i < columns.size(); i++) -->Line_28 $$ queryBuilder.append(", ").append(name).append(" ").append(toCassandraType(type).name().toLowerCase(ENGLISH))[ CD ]
Line_7 $$ ImmutableList.Builder<ExtraColumnMetadata> columnExtra = ImmutableList.builder()-->Line_8 $$ columnExtra.add(new ExtraColumnMetadata("id", true))[ FD ]
Line_9 $$ for (ColumnMetadata column : tableMetadata.getColumns()) -->Line_10 $$ columnNames.add(column.getName())[ FD ]
Line_5 $$ ImmutableList.Builder<String> columnNames = ImmutableList.builder()-->Line_18 $$ List<String> columns = columnNames.build()[ FD ]
Line_6 $$ ImmutableList.Builder<Type> columnTypes = ImmutableList.builder()-->Line_11 $$ columnTypes.add(column.getType())[ FD ]
Line_20 $$ StringBuilder queryBuilder = new StringBuilder(String.format("CREATE TABLE \"%s\".\"%s\"(id uuid primary key", schemaName, tableName))-->Line_30 $$ queryBuilder.append(") ")[ FD ]
Line_25 $$ for (int i = 0; i < columns.size(); i++) -->Line_26 $$ String name = columns.get(i)[ FD ]
Line_21 $$ if (tableMetadata.isSampled()) -->Line_23 $$ columnExtra.add(new ExtraColumnMetadata(SAMPLE_WEIGHT_COLUMN_NAME, true))[ CD ]
Line_20 $$ StringBuilder queryBuilder = new StringBuilder(String.format("CREATE TABLE \"%s\".\"%s\"(id uuid primary key", schemaName, tableName))-->Line_33 $$ queryBuilder.append("WITH comment='").append(CassandraSession.PRESTO_COMMENT_METADATA).append(" ").append(columnMetadata).append("'")[ FD ]
Line_18 $$ List<String> columns = columnNames.build()-->Line_26 $$ String name = columns.get(i)[ FD ]
Line_25 $$ for (int i = 0; i < columns.size(); i++) -->Line_26 $$ String name = columns.get(i)[ CD ]
Line_27 $$ Type type = types.get(i)-->Line_28 $$ queryBuilder.append(", ").append(name).append(" ").append(toCassandraType(type).name().toLowerCase(ENGLISH))[ FD ]
Line_7 $$ ImmutableList.Builder<ExtraColumnMetadata> columnExtra = ImmutableList.builder()-->Line_12 $$ columnExtra.add(new ExtraColumnMetadata(column.getName(), column.isHidden()))[ FD ]
Line_5 $$ ImmutableList.Builder<String> columnNames = ImmutableList.builder()-->Line_36 $$ return new CassandraOutputTableHandle(connectorId, schemaName, tableName, columnNames.build(), columnTypes.build(), tableMetadata.isSampled(), tableMetadata.getOwner())[ FD ]
Line_18 $$ List<String> columns = columnNames.build()-->Line_25 $$ for (int i = 0; i < columns.size(); i++) [ FD ]
Line_26 $$ String name = columns.get(i)-->Line_28 $$ queryBuilder.append(", ").append(name).append(" ").append(toCassandraType(type).name().toLowerCase(ENGLISH))[ FD ]
Line_6 $$ ImmutableList.Builder<Type> columnTypes = ImmutableList.builder()-->Line_19 $$ List<Type> types = columnTypes.build()[ FD ]
