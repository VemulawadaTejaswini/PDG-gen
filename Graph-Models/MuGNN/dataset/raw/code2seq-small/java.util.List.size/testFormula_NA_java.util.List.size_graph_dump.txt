Line_5 $$ s = openSession()-->Line_6 $$ tx = s.beginTransaction()[ FD ]
Line_25 $$ result = s.createCriteria(Rock.class).list()-->Line_27 $$ s.delete(result.get(0))[ FD ]
Line_19 $$ List result = s.createCriteria(Noise.class).list()-->Line_29 $$ assertEquals(0, result.size())[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_21 $$ assertEquals(1, result.size())[ CD ]
Line_10 $$ Noise white = new Noise()-->Line_23 $$ assertNull(white.getType())[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_31 $$ s.close()[ CD ]
Line_2 $$ public void testFormula() throws Exception -->Line_15 $$ tx.commit()[ CD ]
Line_17 $$ s = openSession()-->Line_19 $$ List result = s.createCriteria(Noise.class).list()[ FD ]
Line_3 $$ Session s-->Line_5 $$ s = openSession()[ FD ]
Line_17 $$ s = openSession()-->Line_24 $$ s.delete(white)[ FD ]
Line_4 $$ Transaction tx-->Line_15 $$ tx.commit()[ FD ]
Line_3 $$ Session s-->Line_28 $$ result = s.createCriteria(Funk.class).list()[ FD ]
Line_3 $$ Session s-->Line_17 $$ s = openSession()[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_30 $$ tx.commit()[ CD ]
Line_10 $$ Noise white = new Noise()-->Line_11 $$ white.setAvgBeat(0)[ FD ]
Line_3 $$ Session s-->Line_18 $$ tx = s.beginTransaction()[ FD ]
Line_4 $$ Transaction tx-->Line_18 $$ tx = s.beginTransaction()[ FD ]
Line_25 $$ result = s.createCriteria(Rock.class).list()-->Line_28 $$ result = s.createCriteria(Funk.class).list()[ FD ]
Line_17 $$ s = openSession()-->Line_28 $$ result = s.createCriteria(Funk.class).list()[ FD ]
Line_3 $$ Session s-->Line_27 $$ s.delete(result.get(0))[ FD ]
Line_7 $$ Rock guns = new Rock()-->Line_9 $$ guns.setType(2)[ FD ]
Line_19 $$ List result = s.createCriteria(Noise.class).list()-->Line_27 $$ s.delete(result.get(0))[ FD ]
Line_3 $$ Session s-->Line_14 $$ s.persist(white)[ FD ]
Line_5 $$ s = openSession()-->Line_24 $$ s.delete(white)[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_12 $$ white.setType(null)[ CD ]
Line_5 $$ s = openSession()-->Line_13 $$ s.persist(guns)[ FD ]
Line_25 $$ result = s.createCriteria(Rock.class).list()-->Line_29 $$ assertEquals(0, result.size())[ FD ]
Line_6 $$ tx = s.beginTransaction()-->Line_18 $$ tx = s.beginTransaction()[ FD ]
Line_17 $$ s = openSession()-->Line_18 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_23 $$ assertNull(white.getType())[ CD ]
Line_2 $$ public void testFormula() throws Exception -->Line_19 $$ List result = s.createCriteria(Noise.class).list()[ CD ]
Line_18 $$ tx = s.beginTransaction()-->Line_30 $$ tx.commit()[ FD ]
Line_7 $$ Rock guns = new Rock()-->Line_13 $$ s.persist(guns)[ FD ]
Line_17 $$ s = openSession()-->Line_27 $$ s.delete(result.get(0))[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_16 $$ s.close()[ CD ]
Line_6 $$ tx = s.beginTransaction()-->Line_30 $$ tx.commit()[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_27 $$ s.delete(result.get(0))[ CD ]
Line_2 $$ public void testFormula() throws Exception -->Line_11 $$ white.setAvgBeat(0)[ CD ]
Line_5 $$ s = openSession()-->Line_19 $$ List result = s.createCriteria(Noise.class).list()[ FD ]
Line_5 $$ s = openSession()-->Line_16 $$ s.close()[ FD ]
Line_19 $$ List result = s.createCriteria(Noise.class).list()-->Line_20 $$ assertNotNull(result)[ FD ]
Line_10 $$ Noise white = new Noise()-->Line_24 $$ s.delete(white)[ FD ]
Line_19 $$ List result = s.createCriteria(Noise.class).list()-->Line_21 $$ assertEquals(1, result.size())[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_3 $$ Session s[ CD ]
Line_22 $$ white = (Noise) result.get(0)-->Line_24 $$ s.delete(white)[ FD ]
Line_19 $$ List result = s.createCriteria(Noise.class).list()-->Line_25 $$ result = s.createCriteria(Rock.class).list()[ FD ]
Line_10 $$ Noise white = new Noise()-->Line_22 $$ white = (Noise) result.get(0)[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_25 $$ result = s.createCriteria(Rock.class).list()[ CD ]
Line_2 $$ public void testFormula() throws Exception -->Line_22 $$ white = (Noise) result.get(0)[ CD ]
Line_2 $$ public void testFormula() throws Exception -->Line_18 $$ tx = s.beginTransaction()[ CD ]
Line_2 $$ public void testFormula() throws Exception -->Line_13 $$ s.persist(guns)[ CD ]
Line_3 $$ Session s-->Line_24 $$ s.delete(white)[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_14 $$ s.persist(white)[ CD ]
Line_4 $$ Transaction tx-->Line_6 $$ tx = s.beginTransaction()[ FD ]
Line_19 $$ List result = s.createCriteria(Noise.class).list()-->Line_28 $$ result = s.createCriteria(Funk.class).list()[ FD ]
Line_5 $$ s = openSession()-->Line_18 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_29 $$ assertEquals(0, result.size())[ CD ]
Line_4 $$ Transaction tx-->Line_30 $$ tx.commit()[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_9 $$ guns.setType(2)[ CD ]
Line_2 $$ public void testFormula() throws Exception -->Line_17 $$ s = openSession()[ CD ]
Line_5 $$ s = openSession()-->Line_17 $$ s = openSession()[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_24 $$ s.delete(white)[ CD ]
Line_3 $$ Session s-->Line_25 $$ result = s.createCriteria(Rock.class).list()[ FD ]
Line_5 $$ s = openSession()-->Line_31 $$ s.close()[ FD ]
Line_5 $$ s = openSession()-->Line_25 $$ result = s.createCriteria(Rock.class).list()[ FD ]
Line_3 $$ Session s-->Line_31 $$ s.close()[ FD ]
Line_25 $$ result = s.createCriteria(Rock.class).list()-->Line_26 $$ assertEquals(1, result.size())[ FD ]
Line_17 $$ s = openSession()-->Line_31 $$ s.close()[ FD ]
Line_17 $$ s = openSession()-->Line_25 $$ result = s.createCriteria(Rock.class).list()[ FD ]
Line_5 $$ s = openSession()-->Line_28 $$ result = s.createCriteria(Funk.class).list()[ FD ]
Line_10 $$ Noise white = new Noise()-->Line_12 $$ white.setType(null)[ FD ]
Line_19 $$ List result = s.createCriteria(Noise.class).list()-->Line_26 $$ assertEquals(1, result.size())[ FD ]
Line_28 $$ result = s.createCriteria(Funk.class).list()-->Line_29 $$ assertEquals(0, result.size())[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_26 $$ assertEquals(1, result.size())[ CD ]
Line_2 $$ public void testFormula() throws Exception -->Line_20 $$ assertNotNull(result)[ CD ]
Line_2 $$ public void testFormula() throws Exception -->Line_7 $$ Rock guns = new Rock()[ CD ]
Line_2 $$ public void testFormula() throws Exception -->Line_10 $$ Noise white = new Noise()[ CD ]
Line_6 $$ tx = s.beginTransaction()-->Line_15 $$ tx.commit()[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_8 $$ guns.setAvgBeat(90)[ CD ]
Line_5 $$ s = openSession()-->Line_27 $$ s.delete(result.get(0))[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_28 $$ result = s.createCriteria(Funk.class).list()[ CD ]
Line_3 $$ Session s-->Line_6 $$ tx = s.beginTransaction()[ FD ]
Line_3 $$ Session s-->Line_13 $$ s.persist(guns)[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_4 $$ Transaction tx[ CD ]
Line_5 $$ s = openSession()-->Line_14 $$ s.persist(white)[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_5 $$ s = openSession()[ CD ]
Line_7 $$ Rock guns = new Rock()-->Line_8 $$ guns.setAvgBeat(90)[ FD ]
Line_2 $$ public void testFormula() throws Exception -->Line_6 $$ tx = s.beginTransaction()[ CD ]
Line_19 $$ List result = s.createCriteria(Noise.class).list()-->Line_22 $$ white = (Noise) result.get(0)[ FD ]
Line_3 $$ Session s-->Line_19 $$ List result = s.createCriteria(Noise.class).list()[ FD ]
Line_3 $$ Session s-->Line_16 $$ s.close()[ FD ]
Line_10 $$ Noise white = new Noise()-->Line_14 $$ s.persist(white)[ FD ]
Line_22 $$ white = (Noise) result.get(0)-->Line_23 $$ assertNull(white.getType())[ FD ]
