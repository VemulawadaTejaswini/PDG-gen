Line_2 $$ protected void testPaging(String sql, int start, int end, int expectedResultSize) -->Line_3 $$ Session session = null[ CD ]
Line_3 $$ Session session = null-->Line_6 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_3 $$ Session session = null-->Line_11 $$ _sessionFactory.closeSession(session)[ FD ]
Line_2 $$ protected void testPaging(String sql, int start, int end, int expectedResultSize) -->Line_9 $$ Assert.assertEquals(expectedResultSize, result.size())[ FD ]
Line_6 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_7 $$ List<?> result = QueryUtil.list(q, _sessionFactory.getDialect(), start, end)[ FD ]
Line_5 $$ session = _sessionFactory.openSession()-->Line_6 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected void testPaging(String sql, int start, int end, int expectedResultSize) -->Line_6 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected void testPaging(String sql, int start, int end, int expectedResultSize) -->Line_7 $$ List<?> result = QueryUtil.list(q, _sessionFactory.getDialect(), start, end)[ FD ]
Line_7 $$ List<?> result = QueryUtil.list(q, _sessionFactory.getDialect(), start, end)-->Line_9 $$ Assert.assertEquals(expectedResultSize, result.size())[ FD ]
Line_5 $$ session = _sessionFactory.openSession()-->Line_11 $$ _sessionFactory.closeSession(session)[ FD ]
Line_3 $$ Session session = null-->Line_5 $$ session = _sessionFactory.openSession()[ FD ]
Line_7 $$ List<?> result = QueryUtil.list(q, _sessionFactory.getDialect(), start, end)-->Line_8 $$ Assert.assertNotNull(result)[ FD ]
