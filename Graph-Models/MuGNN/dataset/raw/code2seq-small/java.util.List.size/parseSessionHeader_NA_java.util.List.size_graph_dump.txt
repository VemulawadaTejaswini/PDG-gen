Line_11 $$ name = nameParts.get(0)-->Line_19 $$ assertRequest(!name.isEmpty(), "Invalid %s header", PRESTO_SESSION)[ FD ]
Line_2 $$ private static void parseSessionHeader(String header, Multimap<String, Entry<String, String>> sessionPropertiesByCatalog, SessionPropertyManager sessionPropertyManager) -->Line_21 $$ PropertyMetadata<?> metadata = sessionPropertyManager.getSessionPropertyMetadata(fullPropertyName)[ FD ]
Line_2 $$ private static void parseSessionHeader(String header, Multimap<String, Entry<String, String>> sessionPropertiesByCatalog, SessionPropertyManager sessionPropertyManager) -->Line_27 $$ sessionPropertiesByCatalog.put(catalog, Maps.immutableEntry(name, value))[ FD ]
Line_2 $$ private static void parseSessionHeader(String header, Multimap<String, Entry<String, String>> sessionPropertiesByCatalog, SessionPropertyManager sessionPropertyManager) -->Line_20 $$ String value = nameValue.get(1)[ CD ]
Line_20 $$ String value = nameValue.get(1)-->Line_27 $$ sessionPropertiesByCatalog.put(catalog, Maps.immutableEntry(name, value))[ FD ]
Line_2 $$ private static void parseSessionHeader(String header, Multimap<String, Entry<String, String>> sessionPropertiesByCatalog, SessionPropertyManager sessionPropertyManager) -->Line_3 $$ List<String> nameValue = Splitter.on('=').limit(2).trimResults().splitToList(header)[ FD ]
Line_10 $$ catalog = null-->Line_27 $$ sessionPropertiesByCatalog.put(catalog, Maps.immutableEntry(name, value))[ FD ]
Line_12 $$ if (nameParts.size() == 2) -->Line_14 $$ name = nameParts.get(1)[ CD ]
Line_8 $$ List<String> nameParts = Splitter.on('.').splitToList(fullPropertyName)-->Line_14 $$ name = nameParts.get(1)[ FD ]
Line_13 $$ catalog = nameParts.get(0)-->Line_18 $$ assertRequest(catalog == null || !catalog.isEmpty(), "Invalid %s header", PRESTO_SESSION)[ FD ]
Line_2 $$ private static void parseSessionHeader(String header, Multimap<String, Entry<String, String>> sessionPropertiesByCatalog, SessionPropertyManager sessionPropertyManager) -->Line_18 $$ assertRequest(catalog == null || !catalog.isEmpty(), "Invalid %s header", PRESTO_SESSION)[ CD ]
Line_7 $$ String name-->Line_27 $$ sessionPropertiesByCatalog.put(catalog, Maps.immutableEntry(name, value))[ FD ]
Line_20 $$ String value = nameValue.get(1)-->Line_23 $$ sessionPropertyManager.decodeProperty(fullPropertyName, value, metadata.getJavaType())[ FD ]
Line_21 $$ PropertyMetadata<?> metadata = sessionPropertyManager.getSessionPropertyMetadata(fullPropertyName)-->Line_23 $$ sessionPropertyManager.decodeProperty(fullPropertyName, value, metadata.getJavaType())[ FD ]
Line_9 $$ if (nameParts.size() == 1) -->Line_11 $$ name = nameParts.get(0)[ CD ]
Line_2 $$ private static void parseSessionHeader(String header, Multimap<String, Entry<String, String>> sessionPropertiesByCatalog, SessionPropertyManager sessionPropertyManager) -->Line_19 $$ assertRequest(!name.isEmpty(), "Invalid %s header", PRESTO_SESSION)[ CD ]
Line_5 $$ String fullPropertyName = nameValue.get(0)-->Line_21 $$ PropertyMetadata<?> metadata = sessionPropertyManager.getSessionPropertyMetadata(fullPropertyName)[ FD ]
Line_2 $$ private static void parseSessionHeader(String header, Multimap<String, Entry<String, String>> sessionPropertiesByCatalog, SessionPropertyManager sessionPropertyManager) -->Line_9 $$ if (nameParts.size() == 1) [ CD ]
Line_8 $$ List<String> nameParts = Splitter.on('.').splitToList(fullPropertyName)-->Line_9 $$ if (nameParts.size() == 1) [ FD ]
Line_2 $$ private static void parseSessionHeader(String header, Multimap<String, Entry<String, String>> sessionPropertiesByCatalog, SessionPropertyManager sessionPropertyManager) -->Line_27 $$ sessionPropertiesByCatalog.put(catalog, Maps.immutableEntry(name, value))[ CD ]
Line_6 $$ String catalog-->Line_27 $$ sessionPropertiesByCatalog.put(catalog, Maps.immutableEntry(name, value))[ FD ]
Line_13 $$ catalog = nameParts.get(0)-->Line_27 $$ sessionPropertiesByCatalog.put(catalog, Maps.immutableEntry(name, value))[ FD ]
Line_2 $$ private static void parseSessionHeader(String header, Multimap<String, Entry<String, String>> sessionPropertiesByCatalog, SessionPropertyManager sessionPropertyManager) -->Line_3 $$ List<String> nameValue = Splitter.on('=').limit(2).trimResults().splitToList(header)[ CD ]
Line_2 $$ private static void parseSessionHeader(String header, Multimap<String, Entry<String, String>> sessionPropertiesByCatalog, SessionPropertyManager sessionPropertyManager) -->Line_5 $$ String fullPropertyName = nameValue.get(0)[ CD ]
Line_9 $$ if (nameParts.size() == 1) -->Line_10 $$ catalog = null[ CD ]
Line_2 $$ private static void parseSessionHeader(String header, Multimap<String, Entry<String, String>> sessionPropertiesByCatalog, SessionPropertyManager sessionPropertyManager) -->Line_8 $$ List<String> nameParts = Splitter.on('.').splitToList(fullPropertyName)[ CD ]
Line_2 $$ private static void parseSessionHeader(String header, Multimap<String, Entry<String, String>> sessionPropertiesByCatalog, SessionPropertyManager sessionPropertyManager) -->Line_6 $$ String catalog[ CD ]
Line_3 $$ List<String> nameValue = Splitter.on('=').limit(2).trimResults().splitToList(header)-->Line_5 $$ String fullPropertyName = nameValue.get(0)[ FD ]
Line_10 $$ catalog = null-->Line_13 $$ catalog = nameParts.get(0)[ FD ]
Line_7 $$ String name-->Line_19 $$ assertRequest(!name.isEmpty(), "Invalid %s header", PRESTO_SESSION)[ FD ]
Line_10 $$ catalog = null-->Line_18 $$ assertRequest(catalog == null || !catalog.isEmpty(), "Invalid %s header", PRESTO_SESSION)[ FD ]
Line_11 $$ name = nameParts.get(0)-->Line_27 $$ sessionPropertiesByCatalog.put(catalog, Maps.immutableEntry(name, value))[ FD ]
Line_7 $$ String name-->Line_11 $$ name = nameParts.get(0)[ FD ]
Line_7 $$ String name-->Line_14 $$ name = nameParts.get(1)[ FD ]
Line_3 $$ List<String> nameValue = Splitter.on('=').limit(2).trimResults().splitToList(header)-->Line_20 $$ String value = nameValue.get(1)[ FD ]
Line_11 $$ name = nameParts.get(0)-->Line_14 $$ name = nameParts.get(1)[ FD ]
Line_3 $$ List<String> nameValue = Splitter.on('=').limit(2).trimResults().splitToList(header)-->Line_4 $$ assertRequest(nameValue.size() == 2, "Invalid %s header", PRESTO_SESSION)[ FD ]
Line_8 $$ List<String> nameParts = Splitter.on('.').splitToList(fullPropertyName)-->Line_12 $$ if (nameParts.size() == 2) [ FD ]
Line_5 $$ String fullPropertyName = nameValue.get(0)-->Line_8 $$ List<String> nameParts = Splitter.on('.').splitToList(fullPropertyName)[ FD ]
Line_2 $$ private static void parseSessionHeader(String header, Multimap<String, Entry<String, String>> sessionPropertiesByCatalog, SessionPropertyManager sessionPropertyManager) -->Line_23 $$ sessionPropertyManager.decodeProperty(fullPropertyName, value, metadata.getJavaType())[ FD ]
Line_9 $$ if (nameParts.size() == 1) -->Line_12 $$ if (nameParts.size() == 2) [ CD ]
Line_14 $$ name = nameParts.get(1)-->Line_19 $$ assertRequest(!name.isEmpty(), "Invalid %s header", PRESTO_SESSION)[ FD ]
Line_5 $$ String fullPropertyName = nameValue.get(0)-->Line_23 $$ sessionPropertyManager.decodeProperty(fullPropertyName, value, metadata.getJavaType())[ FD ]
Line_2 $$ private static void parseSessionHeader(String header, Multimap<String, Entry<String, String>> sessionPropertiesByCatalog, SessionPropertyManager sessionPropertyManager) -->Line_4 $$ assertRequest(nameValue.size() == 2, "Invalid %s header", PRESTO_SESSION)[ CD ]
Line_8 $$ List<String> nameParts = Splitter.on('.').splitToList(fullPropertyName)-->Line_13 $$ catalog = nameParts.get(0)[ FD ]
Line_8 $$ List<String> nameParts = Splitter.on('.').splitToList(fullPropertyName)-->Line_11 $$ name = nameParts.get(0)[ FD ]
Line_12 $$ if (nameParts.size() == 2) -->Line_13 $$ catalog = nameParts.get(0)[ CD ]
Line_6 $$ String catalog-->Line_10 $$ catalog = null[ FD ]
Line_14 $$ name = nameParts.get(1)-->Line_27 $$ sessionPropertiesByCatalog.put(catalog, Maps.immutableEntry(name, value))[ FD ]
Line_2 $$ private static void parseSessionHeader(String header, Multimap<String, Entry<String, String>> sessionPropertiesByCatalog, SessionPropertyManager sessionPropertyManager) -->Line_7 $$ String name[ CD ]
Line_6 $$ String catalog-->Line_18 $$ assertRequest(catalog == null || !catalog.isEmpty(), "Invalid %s header", PRESTO_SESSION)[ FD ]
Line_6 $$ String catalog-->Line_13 $$ catalog = nameParts.get(0)[ FD ]
Line_2 $$ private static void parseSessionHeader(String header, Multimap<String, Entry<String, String>> sessionPropertiesByCatalog, SessionPropertyManager sessionPropertyManager) -->Line_21 $$ PropertyMetadata<?> metadata = sessionPropertyManager.getSessionPropertyMetadata(fullPropertyName)[ CD ]
