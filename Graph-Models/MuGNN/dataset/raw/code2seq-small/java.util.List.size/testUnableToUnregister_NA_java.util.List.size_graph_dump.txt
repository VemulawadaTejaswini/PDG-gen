Line_5 $$ EmbeddedChannel embeddedChannel = new EmbeddedChannel(new NettyFabricAgentRegistrationChannelHandler(fabricAgentRegistry, repositoryParentPath, new DefaultEventExecutorGroup(1), 0, 0, 0))-->Line_23 $$ embeddedChannel.close()[ FD ]
Line_28 $$ fabricAgents = fabricAgentRegistry.getFabricAgents()-->Line_29 $$ Assert.assertTrue(fabricAgents.isEmpty())[ FD ]
Line_8 $$ List<FabricAgent> fabricAgents = fabricAgentRegistry.getFabricAgents()-->Line_9 $$ Assert.assertEquals(1, fabricAgents.size())[ FD ]
Line_2 $$ public void testUnableToUnregister() throws IOException -->Line_3 $$ FabricAgentRegistry fabricAgentRegistry = new FabricAgentRegistry(new LocalFabricAgent(new EmbeddedProcessExecutor()))[ CD ]
Line_5 $$ EmbeddedChannel embeddedChannel = new EmbeddedChannel(new NettyFabricAgentRegistrationChannelHandler(fabricAgentRegistry, repositoryParentPath, new DefaultEventExecutorGroup(1), 0, 0, 0))-->Line_12 $$ embeddedChannel.close()[ FD ]
Line_2 $$ public void testUnableToUnregister() throws IOException -->Line_5 $$ EmbeddedChannel embeddedChannel = new EmbeddedChannel(new NettyFabricAgentRegistrationChannelHandler(fabricAgentRegistry, repositoryParentPath, new DefaultEventExecutorGroup(1), 0, 0, 0))[ CD ]
Line_8 $$ List<FabricAgent> fabricAgents = fabricAgentRegistry.getFabricAgents()-->Line_28 $$ fabricAgents = fabricAgentRegistry.getFabricAgents()[ FD ]
Line_8 $$ List<FabricAgent> fabricAgents = fabricAgentRegistry.getFabricAgents()-->Line_11 $$ fabricAgentRegistry.unregisterFabricAgent(fabricAgents.get(0), null)[ FD ]
Line_3 $$ FabricAgentRegistry fabricAgentRegistry = new FabricAgentRegistry(new LocalFabricAgent(new EmbeddedProcessExecutor()))-->Line_8 $$ List<FabricAgent> fabricAgents = fabricAgentRegistry.getFabricAgents()[ FD ]
Line_2 $$ public void testUnableToUnregister() throws IOException -->Line_16 $$ embeddedChannel = new EmbeddedChannel(new NettyFabricAgentRegistrationChannelHandler(fabricAgentRegistry, repositoryParentPath, new DefaultEventExecutorGroup(1), 0, 0, 0))[ CD ]
Line_5 $$ EmbeddedChannel embeddedChannel = new EmbeddedChannel(new NettyFabricAgentRegistrationChannelHandler(fabricAgentRegistry, repositoryParentPath, new DefaultEventExecutorGroup(1), 0, 0, 0))-->Line_10 $$ Assert.assertSame(fabricAgents.get(0), NettyChannelAttributes.getNettyFabricAgentStub(embeddedChannel))[ FD ]
Line_8 $$ List<FabricAgent> fabricAgents = fabricAgentRegistry.getFabricAgents()-->Line_20 $$ Assert.assertEquals(1, fabricAgents.size())[ FD ]
Line_26 $$ LogRecord logRecord = logRecords.get(0)-->Line_27 $$ Assert.assertEquals("Unable to unregister fabric agent on " + embeddedChannel, logRecord.getMessage())[ FD ]
Line_13 $$ fabricAgents = fabricAgentRegistry.getFabricAgents()-->Line_29 $$ Assert.assertTrue(fabricAgents.isEmpty())[ FD ]
Line_2 $$ public void testUnableToUnregister() throws IOException -->Line_4 $$ Path repositoryParentPath = FileServerTestUtil.registerForCleanUp(Files.createDirectory(Paths.get("RepositoryParentPath")))[ CD ]
Line_8 $$ List<FabricAgent> fabricAgents = fabricAgentRegistry.getFabricAgents()-->Line_14 $$ Assert.assertTrue(fabricAgents.isEmpty())[ FD ]
Line_3 $$ FabricAgentRegistry fabricAgentRegistry = new FabricAgentRegistry(new LocalFabricAgent(new EmbeddedProcessExecutor()))-->Line_11 $$ fabricAgentRegistry.unregisterFabricAgent(fabricAgents.get(0), null)[ FD ]
Line_5 $$ EmbeddedChannel embeddedChannel = new EmbeddedChannel(new NettyFabricAgentRegistrationChannelHandler(fabricAgentRegistry, repositoryParentPath, new DefaultEventExecutorGroup(1), 0, 0, 0))-->Line_21 $$ Assert.assertSame(fabricAgents.get(0), NettyChannelAttributes.getNettyFabricAgentStub(embeddedChannel))[ FD ]
Line_3 $$ FabricAgentRegistry fabricAgentRegistry = new FabricAgentRegistry(new LocalFabricAgent(new EmbeddedProcessExecutor()))-->Line_28 $$ fabricAgents = fabricAgentRegistry.getFabricAgents()[ FD ]
Line_3 $$ FabricAgentRegistry fabricAgentRegistry = new FabricAgentRegistry(new LocalFabricAgent(new EmbeddedProcessExecutor()))-->Line_19 $$ List<FabricAgent> fabricAgents = fabricAgentRegistry.getFabricAgents()[ FD ]
Line_3 $$ FabricAgentRegistry fabricAgentRegistry = new FabricAgentRegistry(new LocalFabricAgent(new EmbeddedProcessExecutor()))-->Line_22 $$ fabricAgentRegistry.unregisterFabricAgent(fabricAgents.get(0), null)[ FD ]
Line_24 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_25 $$ Assert.assertEquals(1, logRecords.size())[ FD ]
Line_16 $$ embeddedChannel = new EmbeddedChannel(new NettyFabricAgentRegistrationChannelHandler(fabricAgentRegistry, repositoryParentPath, new DefaultEventExecutorGroup(1), 0, 0, 0))-->Line_21 $$ Assert.assertSame(fabricAgents.get(0), NettyChannelAttributes.getNettyFabricAgentStub(embeddedChannel))[ FD ]
Line_8 $$ List<FabricAgent> fabricAgents = fabricAgentRegistry.getFabricAgents()-->Line_10 $$ Assert.assertSame(fabricAgents.get(0), NettyChannelAttributes.getNettyFabricAgentStub(embeddedChannel))[ FD ]
Line_3 $$ FabricAgentRegistry fabricAgentRegistry = new FabricAgentRegistry(new LocalFabricAgent(new EmbeddedProcessExecutor()))-->Line_13 $$ fabricAgents = fabricAgentRegistry.getFabricAgents()[ FD ]
Line_16 $$ embeddedChannel = new EmbeddedChannel(new NettyFabricAgentRegistrationChannelHandler(fabricAgentRegistry, repositoryParentPath, new DefaultEventExecutorGroup(1), 0, 0, 0))-->Line_23 $$ embeddedChannel.close()[ FD ]
Line_6 $$ try (CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(NettyFabricAgentRegistrationChannelHandler.class.getName(), Level.OFF)) -->Line_24 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ FD ]
Line_13 $$ fabricAgents = fabricAgentRegistry.getFabricAgents()-->Line_21 $$ Assert.assertSame(fabricAgents.get(0), NettyChannelAttributes.getNettyFabricAgentStub(embeddedChannel))[ FD ]
Line_8 $$ List<FabricAgent> fabricAgents = fabricAgentRegistry.getFabricAgents()-->Line_13 $$ fabricAgents = fabricAgentRegistry.getFabricAgents()[ FD ]
Line_8 $$ List<FabricAgent> fabricAgents = fabricAgentRegistry.getFabricAgents()-->Line_21 $$ Assert.assertSame(fabricAgents.get(0), NettyChannelAttributes.getNettyFabricAgentStub(embeddedChannel))[ FD ]
Line_13 $$ fabricAgents = fabricAgentRegistry.getFabricAgents()-->Line_20 $$ Assert.assertEquals(1, fabricAgents.size())[ FD ]
Line_8 $$ List<FabricAgent> fabricAgents = fabricAgentRegistry.getFabricAgents()-->Line_22 $$ fabricAgentRegistry.unregisterFabricAgent(fabricAgents.get(0), null)[ FD ]
Line_16 $$ embeddedChannel = new EmbeddedChannel(new NettyFabricAgentRegistrationChannelHandler(fabricAgentRegistry, repositoryParentPath, new DefaultEventExecutorGroup(1), 0, 0, 0))-->Line_18 $$ embeddedChannel.writeInbound(new NettyFabricAgentConfig(new File("RepositoryFolder")))[ FD ]
Line_5 $$ EmbeddedChannel embeddedChannel = new EmbeddedChannel(new NettyFabricAgentRegistrationChannelHandler(fabricAgentRegistry, repositoryParentPath, new DefaultEventExecutorGroup(1), 0, 0, 0))-->Line_7 $$ embeddedChannel.writeInbound(new NettyFabricAgentConfig(new File("RepositoryFolder")))[ FD ]
Line_5 $$ EmbeddedChannel embeddedChannel = new EmbeddedChannel(new NettyFabricAgentRegistrationChannelHandler(fabricAgentRegistry, repositoryParentPath, new DefaultEventExecutorGroup(1), 0, 0, 0))-->Line_18 $$ embeddedChannel.writeInbound(new NettyFabricAgentConfig(new File("RepositoryFolder")))[ FD ]
Line_13 $$ fabricAgents = fabricAgentRegistry.getFabricAgents()-->Line_22 $$ fabricAgentRegistry.unregisterFabricAgent(fabricAgents.get(0), null)[ FD ]
Line_13 $$ fabricAgents = fabricAgentRegistry.getFabricAgents()-->Line_14 $$ Assert.assertTrue(fabricAgents.isEmpty())[ FD ]
Line_13 $$ fabricAgents = fabricAgentRegistry.getFabricAgents()-->Line_28 $$ fabricAgents = fabricAgentRegistry.getFabricAgents()[ FD ]
Line_8 $$ List<FabricAgent> fabricAgents = fabricAgentRegistry.getFabricAgents()-->Line_29 $$ Assert.assertTrue(fabricAgents.isEmpty())[ FD ]
Line_24 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_26 $$ LogRecord logRecord = logRecords.get(0)[ FD ]
Line_5 $$ EmbeddedChannel embeddedChannel = new EmbeddedChannel(new NettyFabricAgentRegistrationChannelHandler(fabricAgentRegistry, repositoryParentPath, new DefaultEventExecutorGroup(1), 0, 0, 0))-->Line_16 $$ embeddedChannel = new EmbeddedChannel(new NettyFabricAgentRegistrationChannelHandler(fabricAgentRegistry, repositoryParentPath, new DefaultEventExecutorGroup(1), 0, 0, 0))[ FD ]
