Line_2 $$ protected void processRequiredDeploymentContexts(Analyzer analyzer) -->Line_19 $$ analyzer.setProperty(Constants.REQUIRE_BUNDLE, sb.toString())[ CD ]
Line_7 $$ StringBundler sb = new StringBundler((6 * requiredDeploymentContexts.size()) - 1)-->Line_16 $$ sb.append(StringPool.COMMA)[ FD ]
Line_8 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) -->Line_11 $$ sb.append(StringPool.SEMICOLON)[ CD ]
Line_2 $$ protected void processRequiredDeploymentContexts(Analyzer analyzer) -->Line_8 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) [ CD ]
Line_3 $$ List<String> requiredDeploymentContexts = _pluginPackage.getRequiredDeploymentContexts()-->Line_4 $$ if (ListUtil.isEmpty(requiredDeploymentContexts)) [ FD ]
Line_2 $$ protected void processRequiredDeploymentContexts(Analyzer analyzer) -->Line_3 $$ List<String> requiredDeploymentContexts = _pluginPackage.getRequiredDeploymentContexts()[ CD ]
Line_3 $$ List<String> requiredDeploymentContexts = _pluginPackage.getRequiredDeploymentContexts()-->Line_9 $$ String requiredDeploymentContext = requiredDeploymentContexts.get(i)[ FD ]
Line_8 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) -->Line_10 $$ sb.append(requiredDeploymentContext)[ CD ]
Line_7 $$ StringBundler sb = new StringBundler((6 * requiredDeploymentContexts.size()) - 1)-->Line_19 $$ analyzer.setProperty(Constants.REQUIRE_BUNDLE, sb.toString())[ FD ]
Line_7 $$ StringBundler sb = new StringBundler((6 * requiredDeploymentContexts.size()) - 1)-->Line_13 $$ sb.append(StringPool.EQUAL)[ FD ]
Line_3 $$ List<String> requiredDeploymentContexts = _pluginPackage.getRequiredDeploymentContexts()-->Line_7 $$ StringBundler sb = new StringBundler((6 * requiredDeploymentContexts.size()) - 1)[ FD ]
Line_15 $$ if ((i + 1) < requiredDeploymentContexts.size()) -->Line_16 $$ sb.append(StringPool.COMMA)[ CD ]
Line_8 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) -->Line_12 $$ sb.append(Constants.BUNDLE_VERSION_ATTRIBUTE)[ CD ]
Line_4 $$ if (ListUtil.isEmpty(requiredDeploymentContexts)) -->Line_5 $$ return[ CD ]
Line_7 $$ StringBundler sb = new StringBundler((6 * requiredDeploymentContexts.size()) - 1)-->Line_14 $$ sb.append(_bundleVersion)[ FD ]
Line_8 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) -->Line_14 $$ sb.append(_bundleVersion)[ CD ]
Line_8 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) -->Line_9 $$ String requiredDeploymentContext = requiredDeploymentContexts.get(i)[ FD ]
Line_3 $$ List<String> requiredDeploymentContexts = _pluginPackage.getRequiredDeploymentContexts()-->Line_15 $$ if ((i + 1) < requiredDeploymentContexts.size()) [ FD ]
Line_2 $$ protected void processRequiredDeploymentContexts(Analyzer analyzer) -->Line_4 $$ if (ListUtil.isEmpty(requiredDeploymentContexts)) [ CD ]
Line_7 $$ StringBundler sb = new StringBundler((6 * requiredDeploymentContexts.size()) - 1)-->Line_10 $$ sb.append(requiredDeploymentContext)[ FD ]
Line_8 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) -->Line_15 $$ if ((i + 1) < requiredDeploymentContexts.size()) [ CD ]
Line_8 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) -->Line_13 $$ sb.append(StringPool.EQUAL)[ CD ]
Line_3 $$ List<String> requiredDeploymentContexts = _pluginPackage.getRequiredDeploymentContexts()-->Line_8 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) [ FD ]
Line_9 $$ String requiredDeploymentContext = requiredDeploymentContexts.get(i)-->Line_10 $$ sb.append(requiredDeploymentContext)[ FD ]
Line_2 $$ protected void processRequiredDeploymentContexts(Analyzer analyzer) -->Line_7 $$ StringBundler sb = new StringBundler((6 * requiredDeploymentContexts.size()) - 1)[ CD ]
Line_7 $$ StringBundler sb = new StringBundler((6 * requiredDeploymentContexts.size()) - 1)-->Line_12 $$ sb.append(Constants.BUNDLE_VERSION_ATTRIBUTE)[ FD ]
Line_7 $$ StringBundler sb = new StringBundler((6 * requiredDeploymentContexts.size()) - 1)-->Line_11 $$ sb.append(StringPool.SEMICOLON)[ FD ]
Line_2 $$ protected void processRequiredDeploymentContexts(Analyzer analyzer) -->Line_19 $$ analyzer.setProperty(Constants.REQUIRE_BUNDLE, sb.toString())[ FD ]
Line_8 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) -->Line_9 $$ String requiredDeploymentContext = requiredDeploymentContexts.get(i)[ CD ]
