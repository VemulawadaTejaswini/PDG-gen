Line_2 $$ public void testPersistCollections() throws Exception -->Line_67 $$ txn.commit()[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_77 $$ baz.getBag().remove("duplicate")[ CD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_145 $$ assertTrue(baz.getTopGlarchez().size() == 2)[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_133 $$ FooComponent fooComp = (FooComponent) baz.getFooComponentToFoo().keySet().iterator().next()[ FD ]
Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))-->Line_164 $$ int rows = s3.doReturningWork(new AbstractReturningWork<Integer>() [ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_93 $$ baz.setTopGlarchez(new TreeMap())[ CD ]
Line_51 $$ s = openSession()-->Line_142 $$ s = openSession()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_105 $$ map = new HashMap()[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_111 $$ txn = s.beginTransaction()[ CD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_154 $$ assertTrue(baz.getCascadingBars().size() == 1)[ CD ]
Line_101 $$ map = new HashMap()-->Line_105 $$ map = new HashMap()[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_163 $$ s3.delete(baz.getTopGlarchez().get('H'))[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_59 $$ assertTrue("collection removed", baz.getStringArray().length == 0)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_47 $$ List list = s.createQuery("select foo from Baz baz join baz.fooSet foo").list()[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_5 $$ assertEquals(0l, s.createQuery("select count(*) from Bar").iterate().next())[ CD ]
Line_52 $$ txn = s.beginTransaction()-->Line_67 $$ txn.commit()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_82 $$ assertEquals(1, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_32 $$ baz.getCustoms().add(new String[] [ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_133 $$ FooComponent fooComp = (FooComponent) baz.getFooComponentToFoo().keySet().iterator().next()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_56 $$ assertTrue("component of component in collection", baz.getComponents()[1].getSubcomponent() != null)[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_69 $$ s = openSession()-->Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_22 $$ txn = s.beginTransaction()-->Line_67 $$ txn.commit()[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_139 $$ baz.getTopGlarchez().put('G', g2)[ FD ]
Line_85 $$ Bar bar = new Bar()-->Line_90 $$ baz.getTopFoos().add(bar)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_124 $$ assertTrue(baz.getTopGlarchez().size() == 1)[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_70 $$ txn = s.beginTransaction()[ FD ]
Line_69 $$ s = openSession()-->Line_81 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_38 $$ assertTrue(baz.getStringGlarchMap().size() == 1)[ CD ]
Line_101 $$ map = new HashMap()-->Line_102 $$ map.put(new FooComponent("name", 123, null, null), bar)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_131 $$ Iterator iter = baz.getFooToGlarch().keySet().iterator()[ FD ]
Line_80 $$ s = openSession()-->Line_136 $$ s.save(g2)[ FD ]
Line_22 $$ txn = s.beginTransaction()-->Line_143 $$ txn = s.beginTransaction()[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_134 $$ assertTrue(((fooComp.getCount() == 123 && fooComp.getName().equals("name")) || (fooComp.getCount() == 12 && fooComp.getName().equals("nameName"))) && (baz.getFooComponentToFoo().get(fooComp) instanceof BarProxy))[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_110 $$ s = openSession()-->Line_141 $$ s.close()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_129 $$ assertTrue(baz.getFooComponentToFoo().size() == 2)[ FD ]
Line_94 $$ GlarchProxy g = new Glarch()-->Line_98 $$ map.put(bar, g)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_122 $$ assertTrue(Hibernate.isInitialized(baz.getFooToGlarch()))[ FD ]
Line_94 $$ GlarchProxy g = new Glarch()-->Line_137 $$ g = (GlarchProxy) baz.getTopGlarchez().get('G')[ FD ]
Line_22 $$ txn = s.beginTransaction()-->Line_52 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_162 $$ s3.delete(baz.getTopGlarchez().get('G'))[ CD ]
Line_69 $$ s = openSession()-->Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_93 $$ baz.setTopGlarchez(new TreeMap())[ FD ]
Line_3 $$ Session s = openSession()-->Line_50 $$ s.close()[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_113 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_134 $$ assertTrue(((fooComp.getCount() == 123 && fooComp.getName().equals("name")) || (fooComp.getCount() == 12 && fooComp.getName().equals("nameName"))) && (baz.getFooComponentToFoo().get(fooComp) instanceof BarProxy))[ CD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_113 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_96 $$ baz.getTopGlarchez().put('G', g)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_137 $$ g = (GlarchProxy) baz.getTopGlarchez().get('G')[ CD ]
Line_149 $$ s = openSession()-->Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_162 $$ s3.delete(baz.getTopGlarchez().get('G'))[ FD ]
Line_81 $$ txn = s.beginTransaction()-->Line_147 $$ txn.commit()[ FD ]
Line_80 $$ s = openSession()-->Line_95 $$ s.save(g)[ FD ]
Line_28 $$ Foo foo2 = new Foo()-->Line_29 $$ s.save(foo2)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_60 $$ assertTrue("changed element", baz.getStringList().get(0).equals("new value"))[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_21 $$ s = openSession()-->Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_104 $$ baz.setFooComponentToFoo(map)[ FD ]
Line_3 $$ Session s = openSession()-->Line_148 $$ s.close()[ FD ]
Line_51 $$ s = openSession()-->Line_109 $$ s.close()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_97 $$ HashMap map = new HashMap()[ CD ]
Line_39 $$ if (!(getDialect() instanceof MySQLDialect) && !(getDialect() instanceof HSQLDialect) && !(getDialect() instanceof PointbaseDialect)) -->Line_41 $$ assertTrue("collection.elements find", list.size() == 2)[ CD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_62 $$ assertTrue("array element change", baz.getTimeArray()[2] != null)[ FD ]
Line_3 $$ Session s = openSession()-->Line_110 $$ s = openSession()[ FD ]
Line_85 $$ Bar bar = new Bar()-->Line_106 $$ map.put(bar, g)[ FD ]
Line_21 $$ s = openSession()-->Line_110 $$ s = openSession()[ FD ]
Line_69 $$ s = openSession()-->Line_79 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_6 $$ assertEquals(0l, s.createQuery("select count(*) from Bar b").iterate().next())[ FD ]
Line_51 $$ s = openSession()-->Line_141 $$ s.close()[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_59 $$ assertTrue("collection removed", baz.getStringArray().length == 0)[ FD ]
Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_76 $$ baz.getStringSet().remove("two")[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_126 $$ assertTrue(baz.getStringSet().size() == 1)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_3 $$ Session s = openSession()[ CD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_126 $$ assertTrue(baz.getStringSet().size() == 1)[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_154 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_20 $$ s.close()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_155 $$ txn.commit()[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_135 $$ Glarch g2 = new Glarch()[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_102 $$ map.put(new FooComponent("name", 123, null, null), bar)[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_131 $$ Iterator iter = baz.getFooToGlarch().keySet().iterator()[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_154 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_88 $$ s.save(bar2)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_163 $$ s3.delete(baz.getTopGlarchez().get('H'))[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_95 $$ s.save(g)[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_160 $$ assertEquals(3, ((Long) s3.createQuery("select count(*) from Bar").iterate().next()).longValue())[ CD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_96 $$ baz.getTopGlarchez().put('G', g)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_16 $$ sgm.put("a", new Glarch())[ CD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_125 $$ assertTrue(baz.getTopFoos().iterator().next() != null)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_154 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_21 $$ s = openSession()-->Line_82 $$ assertEquals(1, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_3 $$ Session s = openSession()-->Line_29 $$ s.save(foo2)[ FD ]
Line_69 $$ s = openSession()-->Line_111 $$ txn = s.beginTransaction()[ FD ]
Line_137 $$ g = (GlarchProxy) baz.getTopGlarchez().get('G')-->Line_138 $$ baz.getTopGlarchez().put('H', g)[ FD ]
Line_164 $$ int rows = s3.doReturningWork(new AbstractReturningWork<Integer>() -->Line_166 $$ final String sql = "update " + getDialect().openQuote() + "glarchez" + getDialect().closeQuote() + " set baz_map_id=null where baz_map_index='a'"[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_101 $$ map = new HashMap()[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_10 $$ baz.setDefaults()[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_129 $$ assertTrue(baz.getFooComponentToFoo().size() == 2)[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_145 $$ assertTrue(baz.getTopGlarchez().size() == 2)[ CD ]
Line_22 $$ txn = s.beginTransaction()-->Line_108 $$ txn.commit()[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_145 $$ assertTrue(baz.getTopGlarchez().size() == 2)[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_159 $$ baz = (Baz) s3.load(Baz.class, baz.getCode())[ FD ]
Line_43 $$ if (!(getDialect() instanceof SAPDBDialect)) -->Line_45 $$ assertTrue("collection.elements find", list.size() == 2)[ CD ]
Line_52 $$ txn = s.beginTransaction()-->Line_70 $$ txn = s.beginTransaction()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_74 $$ assertTrue(baz.getStringSet().last().equals("two"))[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_104 $$ baz.setFooComponentToFoo(map)[ CD ]
Line_97 $$ HashMap map = new HashMap()-->Line_98 $$ map.put(bar, g)[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_131 $$ Iterator iter = baz.getFooToGlarch().keySet().iterator()[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_124 $$ assertTrue(baz.getTopGlarchez().size() == 1)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_69 $$ s = openSession()[ CD ]
Line_80 $$ s = openSession()-->Line_81 $$ txn = s.beginTransaction()[ FD ]
Line_69 $$ s = openSession()-->Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_11 $$ baz.setStringArray(new String[] [ FD ]
Line_167 $$ Statement st = connection.createStatement()-->Line_168 $$ return st.executeUpdate(sql)[ FD ]
Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))-->Line_159 $$ baz = (Baz) s3.load(Baz.class, baz.getCode())[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_162 $$ s3.delete(baz.getTopGlarchez().get('G'))[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_149 $$ s = openSession()[ CD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_22 $$ txn = s.beginTransaction()[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1][ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ CD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_139 $$ baz.getTopGlarchez().put('G', g2)[ FD ]
Line_51 $$ s = openSession()-->Line_111 $$ txn = s.beginTransaction()[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_139 $$ baz.getTopGlarchez().put('G', g2)[ FD ]
Line_21 $$ s = openSession()-->Line_70 $$ txn = s.beginTransaction()[ FD ]
Line_97 $$ HashMap map = new HashMap()-->Line_101 $$ map = new HashMap()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_99 $$ map.put(bar2, g)[ CD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_154 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_159 $$ baz = (Baz) s3.load(Baz.class, baz.getCode())[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_173 $$ FooProxy[] arr = baz.getFooArray()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_153 $$ assertTrue(baz.getTopGlarchez().size() == 2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_52 $$ txn = s.beginTransaction()[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_96 $$ baz.getTopGlarchez().put('G', g)[ FD ]
Line_150 $$ txn = s.beginTransaction()-->Line_155 $$ txn.commit()[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_38 $$ assertTrue(baz.getStringGlarchMap().size() == 1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_108 $$ txn.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_111 $$ txn = s.beginTransaction()-->Line_150 $$ txn = s.beginTransaction()[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_74 $$ assertTrue(baz.getStringSet().last().equals("two"))[ FD ]
Line_70 $$ txn = s.beginTransaction()-->Line_143 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_37 $$ baz.getTimeArray()[2] = time[ CD ]
Line_51 $$ s = openSession()-->Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_9 $$ s.save(baz)[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_107 $$ baz.setGlarchToFoo(map)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_138 $$ baz.getTopGlarchez().put('H', g)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_8 $$ Baz baz = new Baz()[ CD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_89 $$ baz.setTopFoos(new HashSet())[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_122 $$ assertTrue(Hibernate.isInitialized(baz.getFooToGlarch()))[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_162 $$ s3.delete(baz.getTopGlarchez().get('G'))[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_90 $$ baz.getTopFoos().add(bar)[ FD ]
Line_51 $$ s = openSession()-->Line_149 $$ s = openSession()[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_161 $$ s3.delete(baz)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_141 $$ s.close()[ CD ]
Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_173 $$ FooProxy[] arr = baz.getFooArray()[ FD ]
Line_3 $$ Session s = openSession()-->Line_23 $$ assertEquals(1L, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_91 $$ baz.getTopFoos().add(bar2)[ CD ]
Line_159 $$ baz = (Baz) s3.load(Baz.class, baz.getCode())-->Line_161 $$ s3.delete(baz)[ FD ]
Line_69 $$ s = openSession()-->Line_143 $$ txn = s.beginTransaction()[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_127 $$ assertTrue(baz.getBag().size() == 4)[ FD ]
Line_15 $$ HashMap sgm = new HashMap()-->Line_17 $$ sgm.put("b", new Glarch())[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_20 $$ s.close()[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_127 $$ assertTrue(baz.getBag().size() == 4)[ CD ]
Line_97 $$ HashMap map = new HashMap()-->Line_100 $$ baz.setFooToGlarch(map)[ FD ]
Line_3 $$ Session s = openSession()-->Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_130 $$ assertTrue(baz.getGlarchToFoo().size() == 1)[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_163 $$ s3.delete(baz.getTopGlarchez().get('H'))[ FD ]
Line_39 $$ if (!(getDialect() instanceof MySQLDialect) && !(getDialect() instanceof HSQLDialect) && !(getDialect() instanceof PointbaseDialect)) -->Line_40 $$ List list = s.createQuery("select foo from Foo foo, Baz baz where foo in elements(baz.fooArray) and 3 = some elements(baz.intArray) and 4 > all indices(baz.intArray)").list()[ CD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_137 $$ g = (GlarchProxy) baz.getTopGlarchez().get('G')[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_35 $$ baz.setStringSet(new TreeSet())[ CD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_61 $$ assertTrue("replaced set", baz.getStringSet().size() == 0)[ FD ]
Line_51 $$ s = openSession()-->Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_128 $$ assertTrue(baz.getFooToGlarch().size() == 2)[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_143 $$ txn = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_151 $$ assertEquals(3, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_97 $$ HashMap map = new HashMap()-->Line_106 $$ map.put(bar, g)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_75 $$ assertTrue(baz.getBag().size() == 5)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_63 $$ assertTrue(baz.getCascadingBars().size() == 1)[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_163 $$ s3.delete(baz.getTopGlarchez().get('H'))[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_48 $$ assertTrue("association.elements find", list.size() == 1)[ CD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_124 $$ assertTrue(baz.getTopGlarchez().size() == 1)[ FD ]
Line_133 $$ FooComponent fooComp = (FooComponent) baz.getFooComponentToFoo().keySet().iterator().next()-->Line_134 $$ assertTrue(((fooComp.getCount() == 123 && fooComp.getName().equals("name")) || (fooComp.getCount() == 12 && fooComp.getName().equals("nameName"))) && (baz.getFooComponentToFoo().get(fooComp) instanceof BarProxy))[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_35 $$ baz.setStringSet(new TreeSet())[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_126 $$ assertTrue(baz.getStringSet().size() == 1)[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_72 $$ assertTrue(baz.getStringSet().size() == 2)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_63 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_22 $$ txn = s.beginTransaction()-->Line_78 $$ txn.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_149 $$ s = openSession()-->Line_150 $$ txn = s.beginTransaction()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_100 $$ baz.setFooToGlarch(map)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_161 $$ s3.delete(baz)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_124 $$ assertTrue(baz.getTopGlarchez().size() == 1)[ FD ]
Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_162 $$ s3.delete(baz.getTopGlarchez().get('G'))[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_153 $$ assertTrue(baz.getTopGlarchez().size() == 2)[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_158 $$ txn2 = s3.beginTransaction()[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_72 $$ assertTrue(baz.getStringSet().size() == 2)[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_13 $$ bars.add(new Bar())[ CD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_113 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_40 $$ List list = s.createQuery("select foo from Foo foo, Baz baz where foo in elements(baz.fooArray) and 3 = some elements(baz.intArray) and 4 > all indices(baz.intArray)").list()[ FD ]
Line_69 $$ s = openSession()-->Line_150 $$ txn = s.beginTransaction()[ FD ]
Line_80 $$ s = openSession()-->Line_150 $$ txn = s.beginTransaction()[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_137 $$ g = (GlarchProxy) baz.getTopGlarchez().get('G')[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_75 $$ assertTrue(baz.getBag().size() == 5)[ CD ]
Line_143 $$ txn = s.beginTransaction()-->Line_155 $$ txn.commit()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_89 $$ baz.setTopFoos(new HashSet())[ CD ]
Line_21 $$ s = openSession()-->Line_47 $$ List list = s.createQuery("select foo from Baz baz join baz.fooSet foo").list()[ FD ]
Line_80 $$ s = openSession()-->Line_110 $$ s = openSession()[ FD ]
Line_97 $$ HashMap map = new HashMap()-->Line_104 $$ baz.setFooComponentToFoo(map)[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_134 $$ assertTrue(((fooComp.getCount() == 123 && fooComp.getName().equals("name")) || (fooComp.getCount() == 12 && fooComp.getName().equals("nameName"))) && (baz.getFooComponentToFoo().get(fooComp) instanceof BarProxy))[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_66 $$ baz.getBag().add("three")[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_15 $$ HashMap sgm = new HashMap()[ CD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_67 $$ txn.commit()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_55 $$ assertTrue("collection of custom types - added element", baz.getCustoms().size() == 4 && baz.getCustoms().get(0) != null)[ CD ]
Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_163 $$ s3.delete(baz.getTopGlarchez().get('H'))[ FD ]
Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_163 $$ s3.delete(baz.getTopGlarchez().get('H'))[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_72 $$ assertTrue(baz.getStringSet().size() == 2)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_104 $$ baz.setFooComponentToFoo(map)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_7 $$ assertFalse(s.createQuery("from Glarch g").iterate().hasNext())[ CD ]
Line_51 $$ s = openSession()-->Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_86 $$ Bar bar2 = new Bar()-->Line_88 $$ s.save(bar2)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_30 $$ baz.setFooArray(new Foo[] [ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_116 $$ assertEquals(3, ((Long) s2.createQuery("select count(*) from Bar").iterate().next()).longValue())[ CD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_110 $$ s = openSession()-->Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))[ FD ]
Line_22 $$ txn = s.beginTransaction()-->Line_155 $$ txn.commit()[ FD ]
Line_69 $$ s = openSession()-->Line_157 $$ s.close()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_140 $$ txn.commit()[ CD ]
Line_80 $$ s = openSession()-->Line_157 $$ s.close()[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_146 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_88 $$ s.save(bar2)[ CD ]
Line_52 $$ txn = s.beginTransaction()-->Line_81 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_110 $$ s = openSession()[ CD ]
Line_69 $$ s = openSession()-->Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_72 $$ assertTrue(baz.getStringSet().size() == 2)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_55 $$ assertTrue("collection of custom types - added element", baz.getCustoms().size() == 4 && baz.getCustoms().get(0) != null)[ FD ]
Line_51 $$ s = openSession()-->Line_148 $$ s.close()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_73 $$ assertTrue(baz.getStringSet().first().equals("one"))[ CD ]
Line_114 $$ Session s2 = openSession()-->Line_121 $$ s2.close()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_28 $$ Foo foo2 = new Foo()[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_145 $$ assertTrue(baz.getTopGlarchez().size() == 2)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_75 $$ assertTrue(baz.getBag().size() == 5)[ FD ]
Line_21 $$ s = openSession()-->Line_69 $$ s = openSession()[ FD ]
Line_21 $$ s = openSession()-->Line_109 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_111 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ CD ]
Line_21 $$ s = openSession()-->Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_146 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_164 $$ int rows = s3.doReturningWork(new AbstractReturningWork<Integer>() [ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_125 $$ assertTrue(baz.getTopFoos().iterator().next() != null)[ FD ]
Line_159 $$ baz = (Baz) s3.load(Baz.class, baz.getCode())-->Line_163 $$ s3.delete(baz.getTopGlarchez().get('H'))[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_52 $$ txn = s.beginTransaction()[ CD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_64 $$ baz.getStringSet().add("two")[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_146 $$ assertTrue(baz.getCascadingBars().size() == 1)[ CD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_153 $$ assertTrue(baz.getTopGlarchez().size() == 2)[ FD ]
Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_154 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_129 $$ assertTrue(baz.getFooComponentToFoo().size() == 2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_95 $$ s.save(g)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_150 $$ txn = s.beginTransaction()[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_85 $$ Bar bar = new Bar()[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_43 $$ if (!(getDialect() instanceof SAPDBDialect)) [ CD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_59 $$ assertTrue("collection removed", baz.getStringArray().length == 0)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_18 $$ baz.setStringGlarchMap(sgm)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_133 $$ FooComponent fooComp = (FooComponent) baz.getFooComponentToFoo().keySet().iterator().next()[ CD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_104 $$ baz.setFooComponentToFoo(map)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_133 $$ FooComponent fooComp = (FooComponent) baz.getFooComponentToFoo().keySet().iterator().next()[ FD ]
Line_36 $$ Time time = new java.sql.Time(12345)-->Line_37 $$ baz.getTimeArray()[2] = time[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_127 $$ assertTrue(baz.getBag().size() == 4)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_30 $$ baz.setFooArray(new Foo[] [ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ CD ]
Line_52 $$ txn = s.beginTransaction()-->Line_147 $$ txn.commit()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_161 $$ s3.delete(baz)[ CD ]
Line_15 $$ HashMap sgm = new HashMap()-->Line_16 $$ sgm.put("a", new Glarch())[ FD ]
Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_153 $$ assertTrue(baz.getTopGlarchez().size() == 2)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_98 $$ map.put(bar, g)[ CD ]
Line_12 $$ Set bars = new HashSet()-->Line_13 $$ bars.add(new Bar())[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_73 $$ assertTrue(baz.getStringSet().first().equals("one"))[ FD ]
Line_97 $$ HashMap map = new HashMap()-->Line_99 $$ map.put(bar2, g)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_123 $$ assertTrue(baz.getTopFoos().size() == 2)[ CD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_145 $$ assertTrue(baz.getTopGlarchez().size() == 2)[ FD ]
Line_110 $$ s = openSession()-->Line_143 $$ txn = s.beginTransaction()[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_131 $$ Iterator iter = baz.getFooToGlarch().keySet().iterator()[ FD ]
Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_162 $$ s3.delete(baz.getTopGlarchez().get('G'))[ FD ]
Line_85 $$ Bar bar = new Bar()-->Line_87 $$ s.save(bar)[ FD ]
Line_40 $$ List list = s.createQuery("select foo from Foo foo, Baz baz where foo in elements(baz.fooArray) and 3 = some elements(baz.intArray) and 4 > all indices(baz.intArray)").list()-->Line_41 $$ assertTrue("collection.elements find", list.size() == 2)[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_129 $$ assertTrue(baz.getFooComponentToFoo().size() == 2)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_79 $$ s.close()[ CD ]
Line_70 $$ txn = s.beginTransaction()-->Line_81 $$ txn = s.beginTransaction()[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_77 $$ baz.getBag().remove("duplicate")[ FD ]
Line_21 $$ s = openSession()-->Line_52 $$ txn = s.beginTransaction()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_55 $$ assertTrue("collection of custom types - added element", baz.getCustoms().size() == 4 && baz.getCustoms().get(0) != null)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_60 $$ assertTrue("changed element", baz.getStringList().get(0).equals("new value"))[ CD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_159 $$ baz = (Baz) s3.load(Baz.class, baz.getCode())[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_104 $$ baz.setFooComponentToFoo(map)[ FD ]
Line_105 $$ map = new HashMap()-->Line_106 $$ map.put(bar, g)[ FD ]
Line_80 $$ s = openSession()-->Line_141 $$ s.close()[ FD ]
Line_149 $$ s = openSession()-->Line_157 $$ s.close()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ CD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_133 $$ FooComponent fooComp = (FooComponent) baz.getFooComponentToFoo().keySet().iterator().next()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_137 $$ g = (GlarchProxy) baz.getTopGlarchez().get('G')[ FD ]
Line_21 $$ s = openSession()-->Line_29 $$ s.save(foo2)[ FD ]
Line_21 $$ s = openSession()-->Line_51 $$ s = openSession()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_38 $$ assertTrue(baz.getStringGlarchMap().size() == 1)[ FD ]
Line_110 $$ s = openSession()-->Line_136 $$ s.save(g2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_82 $$ assertEquals(1, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_34 $$ baz.getStringList().set(0, "new value")[ FD ]
Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_154 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))-->Line_162 $$ s3.delete(baz.getTopGlarchez().get('G'))[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_106 $$ map.put(bar, g)[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_93 $$ baz.setTopGlarchez(new TreeMap())[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_53 $$ assertEquals(1, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ CD ]
Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_161 $$ s3.delete(baz)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_139 $$ baz.getTopGlarchez().put('G', g2)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_37 $$ baz.getTimeArray()[2] = time[ FD ]
Line_164 $$ int rows = s3.doReturningWork(new AbstractReturningWork<Integer>() -->Line_168 $$ return st.executeUpdate(sql)[ CD ]
Line_21 $$ s = openSession()-->Line_27 $$ s.save(foo)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_49 $$ txn.commit()[ CD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_173 $$ FooProxy[] arr = baz.getFooArray()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_131 $$ Iterator iter = baz.getFooToGlarch().keySet().iterator()[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_33 $$ baz.setStringArray(null)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_35 $$ baz.setStringSet(new TreeSet())[ FD ]
Line_3 $$ Session s = openSession()-->Line_80 $$ s = openSession()[ FD ]
Line_51 $$ s = openSession()-->Line_52 $$ txn = s.beginTransaction()[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_76 $$ baz.getStringSet().remove("two")[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_117 $$ Baz baz2 = (Baz) s2.createQuery("select baz from Baz baz order by baz").list().get(0)[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_129 $$ assertTrue(baz.getFooComponentToFoo().size() == 2)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_123 $$ assertTrue(baz.getTopFoos().size() == 2)[ FD ]
Line_80 $$ s = openSession()-->Line_148 $$ s.close()[ FD ]
Line_149 $$ s = openSession()-->Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_32 $$ baz.getCustoms().add(new String[] [ CD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_84 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_142 $$ s = openSession()-->Line_148 $$ s.close()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_51 $$ s = openSession()[ CD ]
Line_80 $$ s = openSession()-->Line_88 $$ s.save(bar2)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_121 $$ s2.close()[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_26 $$ Foo foo = new Foo()[ CD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_89 $$ baz.setTopFoos(new HashSet())[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_138 $$ baz.getTopGlarchez().put('H', g)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_153 $$ assertTrue(baz.getTopGlarchez().size() == 2)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_60 $$ assertTrue("changed element", baz.getStringList().get(0).equals("new value"))[ FD ]
Line_81 $$ txn = s.beginTransaction()-->Line_155 $$ txn.commit()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_174 $$ assertTrue("new array of objects", arr.length == 4 && arr[1].getKey().equals(foo.getKey()))[ CD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_33 $$ baz.setStringArray(null)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_163 $$ s3.delete(baz.getTopGlarchez().get('H'))[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_105 $$ map = new HashMap()-->Line_107 $$ baz.setGlarchToFoo(map)[ FD ]
Line_22 $$ txn = s.beginTransaction()-->Line_111 $$ txn = s.beginTransaction()[ FD ]
Line_21 $$ s = openSession()-->Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1][ FD ]
Line_51 $$ s = openSession()-->Line_79 $$ s.close()[ FD ]
Line_51 $$ s = openSession()-->Line_81 $$ txn = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_153 $$ assertTrue(baz.getTopGlarchez().size() == 2)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_100 $$ baz.setFooToGlarch(map)[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_72 $$ assertTrue(baz.getStringSet().size() == 2)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_31 $$ baz.getFooSet().add(foo)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_130 $$ assertTrue(baz.getGlarchToFoo().size() == 1)[ CD ]
Line_142 $$ s = openSession()-->Line_151 $$ assertEquals(3, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_184 $$ s3.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_53 $$ assertEquals(1, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_73 $$ assertTrue(baz.getStringSet().first().equals("one"))[ FD ]
Line_131 $$ Iterator iter = baz.getFooToGlarch().keySet().iterator()-->Line_132 $$ assertTrue(iter.next() instanceof BarProxy)[ FD ]
Line_149 $$ s = openSession()-->Line_151 $$ assertEquals(3, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_125 $$ assertTrue(baz.getTopFoos().iterator().next() != null)[ FD ]
Line_21 $$ s = openSession()-->Line_53 $$ assertEquals(1, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_97 $$ HashMap map = new HashMap()-->Line_105 $$ map = new HashMap()[ FD ]
Line_22 $$ txn = s.beginTransaction()-->Line_70 $$ txn = s.beginTransaction()[ FD ]
Line_94 $$ GlarchProxy g = new Glarch()-->Line_96 $$ baz.getTopGlarchez().put('G', g)[ FD ]
Line_21 $$ s = openSession()-->Line_148 $$ s.close()[ FD ]
Line_81 $$ txn = s.beginTransaction()-->Line_111 $$ txn = s.beginTransaction()[ FD ]
Line_21 $$ s = openSession()-->Line_23 $$ assertEquals(1L, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_155 $$ txn.commit()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_74 $$ assertTrue(baz.getStringSet().last().equals("two"))[ CD ]
Line_80 $$ s = openSession()-->Line_142 $$ s = openSession()[ FD ]
Line_164 $$ int rows = s3.doReturningWork(new AbstractReturningWork<Integer>() -->Line_167 $$ Statement st = connection.createStatement()[ FD ]
Line_51 $$ s = openSession()-->Line_150 $$ txn = s.beginTransaction()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_22 $$ txn = s.beginTransaction()-->Line_140 $$ txn.commit()[ FD ]
Line_51 $$ s = openSession()-->Line_69 $$ s = openSession()[ FD ]
Line_110 $$ s = openSession()-->Line_148 $$ s.close()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_81 $$ txn = s.beginTransaction()[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_147 $$ txn.commit()[ CD ]
Line_3 $$ Session s = openSession()-->Line_21 $$ s = openSession()[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_89 $$ baz.setTopFoos(new HashSet())[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_65 $$ baz.getStringSet().add("one")[ FD ]
Line_70 $$ txn = s.beginTransaction()-->Line_150 $$ txn = s.beginTransaction()[ FD ]
Line_97 $$ HashMap map = new HashMap()-->Line_107 $$ baz.setGlarchToFoo(map)[ FD ]
Line_3 $$ Session s = openSession()-->Line_68 $$ s.close()[ FD ]
Line_111 $$ txn = s.beginTransaction()-->Line_143 $$ txn = s.beginTransaction()[ FD ]
Line_21 $$ s = openSession()-->Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_145 $$ assertTrue(baz.getTopGlarchez().size() == 2)[ FD ]
Line_142 $$ s = openSession()-->Line_149 $$ s = openSession()[ FD ]
Line_21 $$ s = openSession()-->Line_81 $$ txn = s.beginTransaction()[ FD ]
Line_80 $$ s = openSession()-->Line_143 $$ txn = s.beginTransaction()[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_146 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_80 $$ s = openSession()-->Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_70 $$ txn = s.beginTransaction()-->Line_108 $$ txn.commit()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_91 $$ baz.getTopFoos().add(bar2)[ FD ]
Line_52 $$ txn = s.beginTransaction()-->Line_140 $$ txn.commit()[ FD ]
Line_51 $$ s = openSession()-->Line_143 $$ txn = s.beginTransaction()[ FD ]
Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))-->Line_172 $$ assertEquals(2, doDelete(s3, "from Bar bar"))[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_126 $$ assertTrue(baz.getStringSet().size() == 1)[ CD ]
Line_81 $$ txn = s.beginTransaction()-->Line_143 $$ txn = s.beginTransaction()[ FD ]
Line_51 $$ s = openSession()-->Line_110 $$ s = openSession()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_31 $$ baz.getFooSet().add(foo)[ CD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_130 $$ assertTrue(baz.getGlarchToFoo().size() == 1)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_173 $$ FooProxy[] arr = baz.getFooArray()[ FD ]
Line_26 $$ Foo foo = new Foo()-->Line_31 $$ baz.getFooSet().add(foo)[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_73 $$ assertTrue(baz.getStringSet().first().equals("one"))[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_120 $$ txn2.commit()[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_114 $$ Session s2 = openSession()[ CD ]
Line_21 $$ s = openSession()-->Line_150 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_113 $$ assertTrue(baz.getCascadingBars().size() == 1)[ CD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_126 $$ assertTrue(baz.getStringSet().size() == 1)[ FD ]
Line_69 $$ s = openSession()-->Line_141 $$ s.close()[ FD ]
Line_143 $$ txn = s.beginTransaction()-->Line_147 $$ txn.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_7 $$ assertFalse(s.createQuery("from Glarch g").iterate().hasNext())[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_92 $$ assertTrue(baz.getCascadingBars().size() == 1)[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_66 $$ baz.getBag().add("three")[ CD ]
Line_94 $$ GlarchProxy g = new Glarch()-->Line_95 $$ s.save(g)[ FD ]
Line_69 $$ s = openSession()-->Line_80 $$ s = openSession()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_70 $$ txn = s.beginTransaction()[ CD ]
Line_21 $$ s = openSession()-->Line_111 $$ txn = s.beginTransaction()[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_162 $$ s3.delete(baz.getTopGlarchez().get('G'))[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_92 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_26 $$ Foo foo = new Foo()-->Line_58 $$ assertTrue("set of objects", ((FooProxy) baz.getFooSet().iterator().next()).getKey().equals(foo.getKey()))[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_96 $$ baz.getTopGlarchez().put('G', g)[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_122 $$ assertTrue(Hibernate.isInitialized(baz.getFooToGlarch()))[ FD ]
Line_85 $$ Bar bar = new Bar()-->Line_103 $$ map.put(new FooComponent("nameName", 12, null, null), bar)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_133 $$ FooComponent fooComp = (FooComponent) baz.getFooComponentToFoo().keySet().iterator().next()[ FD ]
Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))-->Line_163 $$ s3.delete(baz.getTopGlarchez().get('H'))[ FD ]
Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))-->Line_160 $$ assertEquals(3, ((Long) s3.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_173 $$ FooProxy[] arr = baz.getFooArray()[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_66 $$ baz.getBag().add("three")[ FD ]
Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))-->Line_179 $$ s3.load(Qux.class, new Long(666))[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_81 $$ txn = s.beginTransaction()[ FD ]
Line_21 $$ s = openSession()-->Line_40 $$ List list = s.createQuery("select foo from Foo foo, Baz baz where foo in elements(baz.fooArray) and 3 = some elements(baz.intArray) and 4 > all indices(baz.intArray)").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_142 $$ s = openSession()[ FD ]
Line_21 $$ s = openSession()-->Line_136 $$ s.save(g2)[ FD ]
Line_159 $$ baz = (Baz) s3.load(Baz.class, baz.getCode())-->Line_162 $$ s3.delete(baz.getTopGlarchez().get('G'))[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_12 $$ Set bars = new HashSet()-->Line_14 $$ baz.setCascadingBars(bars)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_123 $$ assertTrue(baz.getTopFoos().size() == 2)[ FD ]
Line_110 $$ s = openSession()-->Line_150 $$ txn = s.beginTransaction()[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_147 $$ txn.commit()[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_153 $$ assertTrue(baz.getTopGlarchez().size() == 2)[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_154 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_146 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_145 $$ assertTrue(baz.getTopGlarchez().size() == 2)[ FD ]
Line_51 $$ s = openSession()-->Line_70 $$ txn = s.beginTransaction()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_76 $$ baz.getStringSet().remove("two")[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_107 $$ baz.setGlarchToFoo(map)[ CD ]
Line_70 $$ txn = s.beginTransaction()-->Line_140 $$ txn.commit()[ FD ]
Line_40 $$ List list = s.createQuery("select foo from Foo foo, Baz baz where foo in elements(baz.fooArray) and 3 = some elements(baz.intArray) and 4 > all indices(baz.intArray)").list()-->Line_45 $$ assertTrue("collection.elements find", list.size() == 2)[ FD ]
Line_117 $$ Baz baz2 = (Baz) s2.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_118 $$ Object o = baz2.getFooComponentToFoo().get(new FooComponent("name", 123, null, null))[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_124 $$ assertTrue(baz.getTopGlarchez().size() == 1)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_128 $$ assertTrue(baz.getFooToGlarch().size() == 2)[ FD ]
Line_69 $$ s = openSession()-->Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_154 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_21 $$ s = openSession()-->Line_88 $$ s.save(bar2)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_77 $$ baz.getBag().remove("duplicate")[ FD ]
Line_52 $$ txn = s.beginTransaction()-->Line_143 $$ txn = s.beginTransaction()[ FD ]
Line_115 $$ Transaction txn2 = s2.beginTransaction()-->Line_158 $$ txn2 = s3.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_109 $$ s.close()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))-->Line_182 $$ s3.disconnect()[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_159 $$ baz = (Baz) s3.load(Baz.class, baz.getCode())[ FD ]
Line_22 $$ txn = s.beginTransaction()-->Line_81 $$ txn = s.beginTransaction()[ FD ]
Line_43 $$ if (!(getDialect() instanceof SAPDBDialect)) -->Line_44 $$ List list = s.createQuery("select distinct foo from Baz baz join baz.fooArray foo").list()[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_161 $$ s3.delete(baz)[ FD ]
Line_135 $$ Glarch g2 = new Glarch()-->Line_139 $$ baz.getTopGlarchez().put('G', g2)[ FD ]
Line_114 $$ Session s2 = openSession()-->Line_116 $$ assertEquals(3, ((Long) s2.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_51 $$ s = openSession()-->Line_82 $$ assertEquals(1, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_64 $$ baz.getStringSet().add("two")[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_126 $$ assertTrue(baz.getStringSet().size() == 1)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_93 $$ baz.setTopGlarchez(new TreeMap())[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_130 $$ assertTrue(baz.getGlarchToFoo().size() == 1)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_104 $$ baz.setFooComponentToFoo(map)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_107 $$ baz.setGlarchToFoo(map)[ FD ]
Line_143 $$ txn = s.beginTransaction()-->Line_150 $$ txn = s.beginTransaction()[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_127 $$ assertTrue(baz.getBag().size() == 4)[ FD ]
Line_86 $$ Bar bar2 = new Bar()-->Line_99 $$ map.put(bar2, g)[ FD ]
Line_52 $$ txn = s.beginTransaction()-->Line_150 $$ txn = s.beginTransaction()[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_19 $$ txn.commit()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_125 $$ assertTrue(baz.getTopFoos().iterator().next() != null)[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_62 $$ assertTrue("array element change", baz.getTimeArray()[2] != null)[ FD ]
Line_80 $$ s = openSession()-->Line_109 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_87 $$ s.save(bar)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_6 $$ assertEquals(0l, s.createQuery("select count(*) from Bar b").iterate().next())[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1][ CD ]
Line_3 $$ Session s = openSession()-->Line_143 $$ txn = s.beginTransaction()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_32 $$ baz.getCustoms().add(new String[] [ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_100 $$ baz.setFooToGlarch(map)[ FD ]
Line_21 $$ s = openSession()-->Line_141 $$ s.close()[ FD ]
Line_21 $$ s = openSession()-->Line_149 $$ s = openSession()[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_134 $$ assertTrue(((fooComp.getCount() == 123 && fooComp.getName().equals("name")) || (fooComp.getCount() == 12 && fooComp.getName().equals("nameName"))) && (baz.getFooComponentToFoo().get(fooComp) instanceof BarProxy))[ FD ]
Line_80 $$ s = openSession()-->Line_149 $$ s = openSession()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_108 $$ txn.commit()[ CD ]
Line_69 $$ s = openSession()-->Line_88 $$ s.save(bar2)[ FD ]
Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))-->Line_184 $$ s3.close()[ FD ]
Line_51 $$ s = openSession()-->Line_68 $$ s.close()[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_113 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_26 $$ Foo foo = new Foo()-->Line_174 $$ assertTrue("new array of objects", arr.length == 4 && arr[1].getKey().equals(foo.getKey()))[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_27 $$ s.save(foo)[ CD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction txn = s.beginTransaction()[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_137 $$ g = (GlarchProxy) baz.getTopGlarchez().get('G')[ FD ]
Line_69 $$ s = openSession()-->Line_95 $$ s.save(g)[ FD ]
Line_70 $$ txn = s.beginTransaction()-->Line_111 $$ txn = s.beginTransaction()[ FD ]
Line_110 $$ s = openSession()-->Line_111 $$ txn = s.beginTransaction()[ FD ]
Line_70 $$ txn = s.beginTransaction()-->Line_155 $$ txn.commit()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_136 $$ s.save(g2)[ CD ]
Line_142 $$ s = openSession()-->Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_63 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_36 $$ Time time = new java.sql.Time(12345)[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_58 $$ assertTrue("set of objects", ((FooProxy) baz.getFooSet().iterator().next()).getKey().equals(foo.getKey()))[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_30 $$ baz.setFooArray(new Foo[] [ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_118 $$ Object o = baz2.getFooComponentToFoo().get(new FooComponent("name", 123, null, null))[ CD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_161 $$ s3.delete(baz)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_74 $$ assertTrue(baz.getStringSet().last().equals("two"))[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_55 $$ assertTrue("collection of custom types - added element", baz.getCustoms().size() == 4 && baz.getCustoms().get(0) != null)[ FD ]
Line_3 $$ Session s = openSession()-->Line_22 $$ txn = s.beginTransaction()[ FD ]
Line_51 $$ s = openSession()-->Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_86 $$ Bar bar2 = new Bar()-->Line_91 $$ baz.getTopFoos().add(bar2)[ FD ]
Line_69 $$ s = openSession()-->Line_87 $$ s.save(bar)[ FD ]
Line_117 $$ Baz baz2 = (Baz) s2.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_119 $$ assertTrue(o == baz2.getFooComponentToFoo().get(new FooComponent("nameName", 12, null, null)) && o != null)[ FD ]
Line_51 $$ s = openSession()-->Line_157 $$ s.close()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_78 $$ txn.commit()[ CD ]
Line_40 $$ List list = s.createQuery("select foo from Foo foo, Baz baz where foo in elements(baz.fooArray) and 3 = some elements(baz.intArray) and 4 > all indices(baz.intArray)").list()-->Line_48 $$ assertTrue("association.elements find", list.size() == 1)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_130 $$ assertTrue(baz.getGlarchToFoo().size() == 1)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_139 $$ baz.getTopGlarchez().put('G', g2)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_31 $$ baz.getFooSet().add(foo)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_94 $$ GlarchProxy g = new Glarch()[ CD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_125 $$ assertTrue(baz.getTopFoos().iterator().next() != null)[ FD ]
Line_3 $$ Session s = openSession()-->Line_47 $$ List list = s.createQuery("select foo from Baz baz join baz.fooSet foo").list()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_56 $$ assertTrue("component of component in collection", baz.getComponents()[1].getSubcomponent() != null)[ FD ]
Line_110 $$ s = openSession()-->Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_76 $$ baz.getStringSet().remove("two")[ CD ]
Line_51 $$ s = openSession()-->Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_93 $$ baz.setTopGlarchez(new TreeMap())[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_96 $$ baz.getTopGlarchez().put('G', g)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_113 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_52 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_87 $$ s.save(bar)[ CD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_123 $$ assertTrue(baz.getTopFoos().size() == 2)[ FD ]
Line_21 $$ s = openSession()-->Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_122 $$ assertTrue(Hibernate.isInitialized(baz.getFooToGlarch()))[ FD ]
Line_21 $$ s = openSession()-->Line_87 $$ s.save(bar)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_80 $$ s = openSession()-->Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_100 $$ baz.setFooToGlarch(map)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_63 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_21 $$ s = openSession()-->Line_44 $$ List list = s.createQuery("select distinct foo from Baz baz join baz.fooArray foo").list()[ FD ]
Line_80 $$ s = openSession()-->Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_94 $$ GlarchProxy g = new Glarch()-->Line_99 $$ map.put(bar2, g)[ FD ]
Line_176 $$ if (arr[i] != null)-->Line_177 $$ s3.delete(arr[i])[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_151 $$ assertEquals(3, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_64 $$ baz.getStringSet().add("two")[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_138 $$ baz.getTopGlarchez().put('H', g)[ FD ]
Line_101 $$ map = new HashMap()-->Line_103 $$ map.put(new FooComponent("nameName", 12, null, null), bar)[ FD ]
Line_97 $$ HashMap map = new HashMap()-->Line_103 $$ map.put(new FooComponent("nameName", 12, null, null), bar)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_138 $$ baz.getTopGlarchez().put('H', g)[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_139 $$ baz.getTopGlarchez().put('G', g2)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_58 $$ assertTrue("set of objects", ((FooProxy) baz.getFooSet().iterator().next()).getKey().equals(foo.getKey()))[ CD ]
Line_142 $$ s = openSession()-->Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_110 $$ s = openSession()-->Line_149 $$ s = openSession()[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_78 $$ txn.commit()[ FD ]
Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))-->Line_177 $$ s3.delete(arr[i])[ FD ]
Line_85 $$ Bar bar = new Bar()-->Line_102 $$ map.put(new FooComponent("name", 123, null, null), bar)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_100 $$ baz.setFooToGlarch(map)[ FD ]
Line_110 $$ s = openSession()-->Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_64 $$ baz.getStringSet().add("two")[ CD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_159 $$ baz = (Baz) s3.load(Baz.class, baz.getCode())[ FD ]
Line_114 $$ Session s2 = openSession()-->Line_115 $$ Transaction txn2 = s2.beginTransaction()[ FD ]
Line_69 $$ s = openSession()-->Line_82 $$ assertEquals(1, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_80 $$ s = openSession()-->Line_111 $$ txn = s.beginTransaction()[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_25 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_134 $$ assertTrue(((fooComp.getCount() == 123 && fooComp.getName().equals("name")) || (fooComp.getCount() == 12 && fooComp.getName().equals("nameName"))) && (baz.getFooComponentToFoo().get(fooComp) instanceof BarProxy))[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_29 $$ s.save(foo2)[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_34 $$ baz.getStringList().set(0, "new value")[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_163 $$ s3.delete(baz.getTopGlarchez().get('H'))[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_56 $$ assertTrue("component of component in collection", baz.getComponents()[1].getSubcomponent() != null)[ FD ]
Line_51 $$ s = openSession()-->Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_51 $$ s = openSession()-->Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_81 $$ txn = s.beginTransaction()-->Line_140 $$ txn.commit()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_33 $$ baz.setStringArray(null)[ CD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_74 $$ assertTrue(baz.getStringSet().last().equals("two"))[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_113 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_181 $$ txn2.commit()[ CD ]
Line_80 $$ s = openSession()-->Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_81 $$ txn = s.beginTransaction()-->Line_108 $$ txn.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_84 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_128 $$ assertTrue(baz.getFooToGlarch().size() == 2)[ FD ]
Line_22 $$ txn = s.beginTransaction()-->Line_49 $$ txn.commit()[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_130 $$ assertTrue(baz.getGlarchToFoo().size() == 1)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_131 $$ Iterator iter = baz.getFooToGlarch().keySet().iterator()[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_137 $$ g = (GlarchProxy) baz.getTopGlarchez().get('G')[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_92 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_70 $$ txn = s.beginTransaction()[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_134 $$ assertTrue(((fooComp.getCount() == 123 && fooComp.getName().equals("name")) || (fooComp.getCount() == 12 && fooComp.getName().equals("nameName"))) && (baz.getFooComponentToFoo().get(fooComp) instanceof BarProxy))[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_157 $$ s.close()[ CD ]
Line_52 $$ txn = s.beginTransaction()-->Line_78 $$ txn.commit()[ FD ]
Line_51 $$ s = openSession()-->Line_87 $$ s.save(bar)[ FD ]
Line_114 $$ Session s2 = openSession()-->Line_117 $$ Baz baz2 = (Baz) s2.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_140 $$ txn.commit()[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_153 $$ assertTrue(baz.getTopGlarchez().size() == 2)[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_161 $$ s3.delete(baz)[ FD ]
Line_69 $$ s = openSession()-->Line_148 $$ s.close()[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_127 $$ assertTrue(baz.getBag().size() == 4)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_66 $$ baz.getBag().add("three")[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_161 $$ s3.delete(baz)[ FD ]
Line_3 $$ Session s = openSession()-->Line_150 $$ txn = s.beginTransaction()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_146 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_14 $$ baz.setCascadingBars(bars)[ CD ]
Line_3 $$ Session s = openSession()-->Line_27 $$ s.save(foo)[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_123 $$ assertTrue(baz.getTopFoos().size() == 2)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ CD ]
Line_110 $$ s = openSession()-->Line_151 $$ assertEquals(3, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_90 $$ baz.getTopFoos().add(bar)[ FD ]
Line_115 $$ Transaction txn2 = s2.beginTransaction()-->Line_181 $$ txn2.commit()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_122 $$ assertTrue(Hibernate.isInitialized(baz.getFooToGlarch()))[ CD ]
Line_3 $$ Session s = openSession()-->Line_5 $$ assertEquals(0l, s.createQuery("select count(*) from Bar").iterate().next())[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_163 $$ s3.delete(baz.getTopGlarchez().get('H'))[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_150 $$ txn = s.beginTransaction()[ FD ]
Line_69 $$ s = openSession()-->Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))[ FD ]
Line_3 $$ Session s = openSession()-->Line_44 $$ List list = s.createQuery("select distinct foo from Baz baz join baz.fooArray foo").list()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_80 $$ s = openSession()[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_179 $$ s3.load(Qux.class, new Long(666))[ CD ]
Line_70 $$ txn = s.beginTransaction()-->Line_147 $$ txn.commit()[ FD ]
Line_142 $$ s = openSession()-->Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))[ FD ]
Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_173 $$ FooProxy[] arr = baz.getFooArray()[ FD ]
Line_111 $$ txn = s.beginTransaction()-->Line_155 $$ txn.commit()[ FD ]
Line_51 $$ s = openSession()-->Line_53 $$ assertEquals(1, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_21 $$ s = openSession()-->Line_157 $$ s.close()[ FD ]
Line_101 $$ map = new HashMap()-->Line_106 $$ map.put(bar, g)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_91 $$ baz.getTopFoos().add(bar2)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_122 $$ assertTrue(Hibernate.isInitialized(baz.getFooToGlarch()))[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_93 $$ baz.setTopGlarchez(new TreeMap())[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_9 $$ s.save(baz)[ FD ]
Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_159 $$ baz = (Baz) s3.load(Baz.class, baz.getCode())[ FD ]
Line_21 $$ s = openSession()-->Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_84 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_129 $$ assertTrue(baz.getFooComponentToFoo().size() == 2)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_4 $$ Transaction txn = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_81 $$ txn = s.beginTransaction()[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_61 $$ assertTrue("replaced set", baz.getStringSet().size() == 0)[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_162 $$ s3.delete(baz.getTopGlarchez().get('G'))[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_173 $$ FooProxy[] arr = baz.getFooArray()[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_76 $$ baz.getStringSet().remove("two")[ FD ]
Line_51 $$ s = openSession()-->Line_88 $$ s.save(bar2)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_175 $$ for (int i = 1; i < arr.length; i++) [ CD ]
Line_94 $$ GlarchProxy g = new Glarch()-->Line_138 $$ baz.getTopGlarchez().put('H', g)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_57 $$ assertTrue(baz.getComponents()[1].getBaz() == baz)[ FD ]
Line_142 $$ s = openSession()-->Line_157 $$ s.close()[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_128 $$ assertTrue(baz.getFooToGlarch().size() == 2)[ FD ]
Line_69 $$ s = openSession()-->Line_149 $$ s = openSession()[ FD ]
Line_115 $$ Transaction txn2 = s2.beginTransaction()-->Line_120 $$ txn2.commit()[ FD ]
Line_52 $$ txn = s.beginTransaction()-->Line_155 $$ txn.commit()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_18 $$ baz.setStringGlarchMap(sgm)[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_90 $$ baz.getTopFoos().add(bar)[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_84 $$ assertTrue(baz.getCascadingBars().size() == 1)[ CD ]
Line_51 $$ s = openSession()-->Line_95 $$ s.save(g)[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_111 $$ txn = s.beginTransaction()[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_131 $$ Iterator iter = baz.getFooToGlarch().keySet().iterator()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_134 $$ assertTrue(((fooComp.getCount() == 123 && fooComp.getName().equals("name")) || (fooComp.getCount() == 12 && fooComp.getName().equals("nameName"))) && (baz.getFooComponentToFoo().get(fooComp) instanceof BarProxy))[ FD ]
Line_21 $$ s = openSession()-->Line_143 $$ txn = s.beginTransaction()[ FD ]
Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))-->Line_183 $$ Session s4 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s3))[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_56 $$ assertTrue("component of component in collection", baz.getComponents()[1].getSubcomponent() != null)[ FD ]
Line_81 $$ txn = s.beginTransaction()-->Line_150 $$ txn = s.beginTransaction()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_159 $$ baz = (Baz) s3.load(Baz.class, baz.getCode())[ FD ]
Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_161 $$ s3.delete(baz)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_125 $$ assertTrue(baz.getTopFoos().iterator().next() != null)[ FD ]
Line_164 $$ int rows = s3.doReturningWork(new AbstractReturningWork<Integer>() -->Line_167 $$ Statement st = connection.createStatement()[ CD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_159 $$ baz = (Baz) s3.load(Baz.class, baz.getCode())[ FD ]
Line_69 $$ s = openSession()-->Line_142 $$ s = openSession()[ FD ]
Line_135 $$ Glarch g2 = new Glarch()-->Line_136 $$ s.save(g2)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_61 $$ assertTrue("replaced set", baz.getStringSet().size() == 0)[ CD ]
Line_52 $$ txn = s.beginTransaction()-->Line_108 $$ txn.commit()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_34 $$ baz.getStringList().set(0, "new value")[ FD ]
Line_69 $$ s = openSession()-->Line_110 $$ s = openSession()[ FD ]
Line_69 $$ s = openSession()-->Line_136 $$ s.save(g2)[ FD ]
Line_110 $$ s = openSession()-->Line_142 $$ s = openSession()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_132 $$ for (int i = 0; i < 2; i++) assertTrue(iter.next() instanceof BarProxy)[ CD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_138 $$ baz.getTopGlarchez().put('H', g)[ FD ]
Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))-->Line_158 $$ txn2 = s3.beginTransaction()[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_107 $$ baz.setGlarchToFoo(map)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_77 $$ baz.getBag().remove("duplicate")[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_107 $$ baz.setGlarchToFoo(map)[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_90 $$ baz.getTopFoos().add(bar)[ FD ]
Line_52 $$ txn = s.beginTransaction()-->Line_111 $$ txn = s.beginTransaction()[ FD ]
Line_110 $$ s = openSession()-->Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_123 $$ assertTrue(baz.getTopFoos().size() == 2)[ FD ]
Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_159 $$ baz = (Baz) s3.load(Baz.class, baz.getCode())[ FD ]
Line_3 $$ Session s = openSession()-->Line_141 $$ s.close()[ FD ]
Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_23 $$ assertEquals(1L, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_65 $$ baz.getStringSet().add("one")[ CD ]
Line_158 $$ txn2 = s3.beginTransaction()-->Line_181 $$ txn2.commit()[ FD ]
Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))-->Line_180 $$ assertEquals(1, doDelete(s3, "from Glarch g"))[ FD ]
Line_3 $$ Session s = openSession()-->Line_136 $$ s.save(g2)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_92 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_159 $$ baz = (Baz) s3.load(Baz.class, baz.getCode())-->Line_173 $$ FooProxy[] arr = baz.getFooArray()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_50 $$ s.close()[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_90 $$ baz.getTopFoos().add(bar)[ FD ]
Line_15 $$ HashMap sgm = new HashMap()-->Line_18 $$ baz.setStringGlarchMap(sgm)[ FD ]
Line_21 $$ s = openSession()-->Line_22 $$ txn = s.beginTransaction()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_92 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_127 $$ assertTrue(baz.getBag().size() == 4)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_17 $$ sgm.put("b", new Glarch())[ CD ]
Line_3 $$ Session s = openSession()-->Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1][ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_22 $$ txn = s.beginTransaction()[ CD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_173 $$ FooProxy[] arr = baz.getFooArray()[ FD ]
Line_51 $$ s = openSession()-->Line_80 $$ s = openSession()[ FD ]
Line_166 $$ final String sql = "update " + getDialect().openQuote() + "glarchez" + getDialect().closeQuote() + " set baz_map_id=null where baz_map_index='a'"-->Line_168 $$ return st.executeUpdate(sql)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_39 $$ if (!(getDialect() instanceof MySQLDialect) && !(getDialect() instanceof HSQLDialect) && !(getDialect() instanceof PointbaseDialect)) [ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_65 $$ baz.getStringSet().add("one")[ FD ]
Line_21 $$ s = openSession()-->Line_95 $$ s.save(g)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_77 $$ baz.getBag().remove("duplicate")[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_57 $$ assertTrue(baz.getComponents()[1].getBaz() == baz)[ FD ]
Line_3 $$ Session s = openSession()-->Line_79 $$ s.close()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_138 $$ baz.getTopGlarchez().put('H', g)[ CD ]
Line_21 $$ s = openSession()-->Line_79 $$ s.close()[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_14 $$ baz.setCascadingBars(bars)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_58 $$ assertTrue("set of objects", ((FooProxy) baz.getFooSet().iterator().next()).getKey().equals(foo.getKey()))[ FD ]
Line_21 $$ s = openSession()-->Line_151 $$ assertEquals(3, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_62 $$ assertTrue("array element change", baz.getTimeArray()[2] != null)[ CD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_60 $$ assertTrue("changed element", baz.getStringList().get(0).equals("new value"))[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_89 $$ baz.setTopFoos(new HashSet())[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_75 $$ assertTrue(baz.getBag().size() == 5)[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_84 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_122 $$ assertTrue(Hibernate.isInitialized(baz.getFooToGlarch()))[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_128 $$ assertTrue(baz.getFooToGlarch().size() == 2)[ CD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_92 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_26 $$ Foo foo = new Foo()-->Line_27 $$ s.save(foo)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_68 $$ s.close()[ CD ]
Line_21 $$ s = openSession()-->Line_68 $$ s.close()[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_91 $$ baz.getTopFoos().add(bar2)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_128 $$ assertTrue(baz.getFooToGlarch().size() == 2)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_185 $$ assertTrue(s4.load(Qux.class, new Long(666)) != null)[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_86 $$ Bar bar2 = new Bar()[ CD ]
Line_97 $$ HashMap map = new HashMap()-->Line_102 $$ map.put(new FooComponent("name", 123, null, null), bar)[ FD ]
Line_3 $$ Session s = openSession()-->Line_149 $$ s = openSession()[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_126 $$ assertTrue(baz.getStringSet().size() == 1)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_96 $$ baz.getTopGlarchez().put('G', g)[ CD ]
Line_22 $$ txn = s.beginTransaction()-->Line_150 $$ txn = s.beginTransaction()[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_162 $$ s3.delete(baz.getTopGlarchez().get('G'))[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_125 $$ assertTrue(baz.getTopFoos().iterator().next() != null)[ FD ]
Line_21 $$ s = openSession()-->Line_50 $$ s.close()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_57 $$ assertTrue(baz.getComponents()[1].getBaz() == baz)[ CD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_128 $$ assertTrue(baz.getFooToGlarch().size() == 2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_157 $$ s.close()[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_62 $$ assertTrue("array element change", baz.getTimeArray()[2] != null)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_19 $$ txn.commit()[ CD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_123 $$ assertTrue(baz.getTopFoos().size() == 2)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_100 $$ baz.setFooToGlarch(map)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_9 $$ s.save(baz)[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_84 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_65 $$ baz.getStringSet().add("one")[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_124 $$ assertTrue(baz.getTopGlarchez().size() == 1)[ CD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_138 $$ baz.getTopGlarchez().put('H', g)[ FD ]
Line_111 $$ txn = s.beginTransaction()-->Line_147 $$ txn.commit()[ FD ]
Line_175 $$ for (int i = 1; i < arr.length; i++) -->Line_176 $$ if (arr[i] != null)[ CD ]
Line_142 $$ s = openSession()-->Line_143 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_180 $$ assertEquals(1, doDelete(s3, "from Glarch g"))[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_144 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_172 $$ assertEquals(2, doDelete(s3, "from Bar bar"))[ CD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_91 $$ baz.getTopFoos().add(bar2)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_37 $$ baz.getTimeArray()[2] = time[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_57 $$ assertTrue(baz.getComponents()[1].getBaz() == baz)[ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_133 $$ FooComponent fooComp = (FooComponent) baz.getFooComponentToFoo().keySet().iterator().next()[ FD ]
Line_80 $$ s = openSession()-->Line_151 $$ assertEquals(3, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_182 $$ s3.disconnect()[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_171 $$ assertTrue(rows == 1)[ CD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_124 $$ assertTrue(baz.getTopGlarchez().size() == 1)[ FD ]
Line_101 $$ map = new HashMap()-->Line_107 $$ baz.setGlarchToFoo(map)[ FD ]
Line_69 $$ s = openSession()-->Line_70 $$ txn = s.beginTransaction()[ FD ]
Line_132 $$ for (int i = 0; i < 2; i++) assertTrue(iter.next() instanceof BarProxy)-->Line_175 $$ for (int i = 1; i < arr.length; i++) [ FD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_127 $$ assertTrue(baz.getBag().size() == 4)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_61 $$ assertTrue("replaced set", baz.getStringSet().size() == 0)[ FD ]
Line_70 $$ txn = s.beginTransaction()-->Line_78 $$ txn.commit()[ FD ]
Line_80 $$ s = openSession()-->Line_87 $$ s.save(bar)[ FD ]
Line_69 $$ s = openSession()-->Line_151 $$ assertEquals(3, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_186 $$ s4.close()[ CD ]
Line_110 $$ s = openSession()-->Line_157 $$ s.close()[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_130 $$ assertTrue(baz.getGlarchToFoo().size() == 1)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_112 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_59 $$ assertTrue("collection removed", baz.getStringArray().length == 0)[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_10 $$ baz.setDefaults()[ FD ]
Line_21 $$ s = openSession()-->Line_80 $$ s = openSession()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_115 $$ Transaction txn2 = s2.beginTransaction()[ CD ]
Line_21 $$ s = openSession()-->Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_145 $$ assertTrue(baz.getTopGlarchez().size() == 2)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_137 $$ g = (GlarchProxy) baz.getTopGlarchez().get('G')[ FD ]
Line_111 $$ txn = s.beginTransaction()-->Line_140 $$ txn.commit()[ FD ]
Line_142 $$ s = openSession()-->Line_150 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_12 $$ Set bars = new HashSet()[ CD ]
Line_8 $$ Baz baz = new Baz()-->Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))-->Line_161 $$ s3.delete(baz)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_139 $$ baz.getTopGlarchez().put('G', g2)[ CD ]
Line_85 $$ Bar bar = new Bar()-->Line_98 $$ map.put(bar, g)[ FD ]
Line_8 $$ Baz baz = new Baz()-->Line_91 $$ baz.getTopFoos().add(bar2)[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_129 $$ assertTrue(baz.getFooComponentToFoo().size() == 2)[ FD ]
Line_51 $$ s = openSession()-->Line_136 $$ s.save(g2)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_107 $$ baz.setGlarchToFoo(map)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_90 $$ baz.getTopFoos().add(bar)[ FD ]
Line_83 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_146 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_101 $$ map = new HashMap()-->Line_104 $$ baz.setFooComponentToFoo(map)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_21 $$ s = openSession()[ CD ]
Line_80 $$ s = openSession()-->Line_82 $$ assertEquals(1, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_69 $$ s = openSession()-->Line_109 $$ s.close()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_109 $$ s.close()[ CD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_89 $$ baz.setTopFoos(new HashSet())[ FD ]
Line_51 $$ s = openSession()-->Line_151 $$ assertEquals(3, ((Long) s.createQuery("select count(*) from Bar").iterate().next()).longValue())[ FD ]
Line_22 $$ txn = s.beginTransaction()-->Line_147 $$ txn.commit()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_173 $$ FooProxy[] arr = baz.getFooArray()[ CD ]
Line_21 $$ s = openSession()-->Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_119 $$ assertTrue(o == baz2.getFooComponentToFoo().get(new FooComponent("nameName", 12, null, null)) && o != null)[ CD ]
Line_21 $$ s = openSession()-->Line_142 $$ s = openSession()[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_49 $$ txn.commit()[ FD ]
Line_80 $$ s = openSession()-->Line_156 $$ final Session s3 = (Session) SerializationHelper.deserialize(SerializationHelper.serialize(s))[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_58 $$ assertTrue("set of objects", ((FooProxy) baz.getFooSet().iterator().next()).getKey().equals(foo.getKey()))[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_148 $$ s.close()[ CD ]
Line_71 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_25 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_152 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_153 $$ assertTrue(baz.getTopGlarchez().size() == 2)[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_11 $$ baz.setStringArray(new String[] [ CD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_73 $$ assertTrue(baz.getStringSet().first().equals("one"))[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_25 $$ assertTrue(baz.getCascadingBars().size() == 1)[ CD ]
Line_3 $$ Session s = openSession()-->Line_51 $$ s = openSession()[ FD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_103 $$ map.put(new FooComponent("nameName", 12, null, null), bar)[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_142 $$ s = openSession()[ CD ]
Line_2 $$ public void testPersistCollections() throws Exception -->Line_143 $$ txn = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_69 $$ s = openSession()[ FD ]
Line_54 $$ baz = (Baz) s.createQuery("select baz from Baz baz order by baz").list().get(0)-->Line_146 $$ assertTrue(baz.getCascadingBars().size() == 1)[ FD ]
Line_94 $$ GlarchProxy g = new Glarch()-->Line_106 $$ map.put(bar, g)[ FD ]
Line_24 $$ baz = (Baz) ((Object[]) s.createQuery("select baz, baz from Baz baz").list().get(0))[1]-->Line_75 $$ assertTrue(baz.getBag().size() == 5)[ FD ]
