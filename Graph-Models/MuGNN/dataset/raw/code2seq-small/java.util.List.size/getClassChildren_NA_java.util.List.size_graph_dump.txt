Line_8 $$ List<T> result = new ArrayList<T>()-->Line_16 $$ return result.toArray(factory.create(result.size()))[ FD ]
Line_2 $$ protected <T extends PsiElement> T[] getClassChildren(TokenSet elementTypes, ArrayFactory<T> factory) -->Line_5 $$ if (classStub != null) [ CD ]
Line_2 $$ protected <T extends PsiElement> T[] getClassChildren(TokenSet elementTypes, ArrayFactory<T> factory) -->Line_6 $$ return classStub.getChildrenByType(elementTypes, factory)[ FD ]
Line_2 $$ protected <T extends PsiElement> T[] getClassChildren(TokenSet elementTypes, ArrayFactory<T> factory) -->Line_16 $$ return result.toArray(factory.create(result.size()))[ FD ]
Line_2 $$ protected <T extends PsiElement> T[] getClassChildren(TokenSet elementTypes, ArrayFactory<T> factory) -->Line_11 $$ if (elementTypes.contains(element.getNode().getElementType())) [ FD ]
Line_2 $$ protected <T extends PsiElement> T[] getClassChildren(TokenSet elementTypes, ArrayFactory<T> factory) -->Line_16 $$ return result.toArray(factory.create(result.size()))[ CD ]
Line_10 $$ for (PsiElement element : statementList.getChildren()) -->Line_11 $$ if (elementTypes.contains(element.getNode().getElementType())) [ FD ]
Line_5 $$ if (classStub != null) -->Line_6 $$ return classStub.getChildrenByType(elementTypes, factory)[ CD ]
Line_9 $$ final PyStatementList statementList = getStatementList()-->Line_10 $$ for (PsiElement element : statementList.getChildren()) [ FD ]
Line_2 $$ protected <T extends PsiElement> T[] getClassChildren(TokenSet elementTypes, ArrayFactory<T> factory) -->Line_9 $$ final PyStatementList statementList = getStatementList()[ CD ]
Line_2 $$ protected <T extends PsiElement> T[] getClassChildren(TokenSet elementTypes, ArrayFactory<T> factory) -->Line_8 $$ List<T> result = new ArrayList<T>()[ CD ]
