Line_9 $$ Animal mother = new Animal()-->Line_10 $$ mother.setBodyWeight(10.0f)[ FD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_15 $$ session.persist(mother)[ CD ]
Line_3 $$ Session session = openSession()-->Line_4 $$ Transaction t = session.beginTransaction()[ FD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_16 $$ List list = session.createQuery("from Animal a where a.mother.bodyWeight < 2.0 or a.mother.bodyWeight > 9.0").list()[ CD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_10 $$ mother.setBodyWeight(10.0f)[ CD ]
Line_16 $$ List list = session.createQuery("from Animal a where a.mother.bodyWeight < 2.0 or a.mother.bodyWeight > 9.0").list()-->Line_17 $$ assertEquals(list.size(), 2)[ FD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_18 $$ list = session.createQuery("from Animal a where a.mother.bodyWeight > 2.0 and a.mother.bodyWeight > 9.0").list()[ CD ]
Line_5 $$ Animal a = new Animal()-->Line_11 $$ mother.addOffspring(a)[ FD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_14 $$ session.persist(b)[ CD ]
Line_3 $$ Session session = openSession()-->Line_13 $$ session.persist(a)[ FD ]
Line_9 $$ Animal mother = new Animal()-->Line_15 $$ session.persist(mother)[ FD ]
Line_8 $$ Animal b = new Animal()-->Line_14 $$ session.persist(b)[ FD ]
Line_3 $$ Session session = openSession()-->Line_16 $$ List list = session.createQuery("from Animal a where a.mother.bodyWeight < 2.0 or a.mother.bodyWeight > 9.0").list()[ FD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_20 $$ session.delete(b)[ CD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_5 $$ Animal a = new Animal()[ CD ]
Line_3 $$ Session session = openSession()-->Line_15 $$ session.persist(mother)[ FD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_3 $$ Session session = openSession()[ CD ]
Line_18 $$ list = session.createQuery("from Animal a where a.mother.bodyWeight > 2.0 and a.mother.bodyWeight > 9.0").list()-->Line_19 $$ assertEquals(list.size(), 2)[ FD ]
Line_5 $$ Animal a = new Animal()-->Line_21 $$ session.delete(a)[ FD ]
Line_3 $$ Session session = openSession()-->Line_22 $$ session.delete(mother)[ FD ]
Line_3 $$ Session session = openSession()-->Line_24 $$ session.close()[ FD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_19 $$ assertEquals(list.size(), 2)[ CD ]
Line_3 $$ Session session = openSession()-->Line_18 $$ list = session.createQuery("from Animal a where a.mother.bodyWeight > 2.0 and a.mother.bodyWeight > 9.0").list()[ FD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_7 $$ a.setBodyWeight(1.5f)[ CD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_9 $$ Animal mother = new Animal()[ CD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_22 $$ session.delete(mother)[ CD ]
Line_5 $$ Animal a = new Animal()-->Line_7 $$ a.setBodyWeight(1.5f)[ FD ]
Line_9 $$ Animal mother = new Animal()-->Line_11 $$ mother.addOffspring(a)[ FD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_13 $$ session.persist(a)[ CD ]
Line_5 $$ Animal a = new Animal()-->Line_13 $$ session.persist(a)[ FD ]
Line_3 $$ Session session = openSession()-->Line_14 $$ session.persist(b)[ FD ]
Line_9 $$ Animal mother = new Animal()-->Line_22 $$ session.delete(mother)[ FD ]
Line_3 $$ Session session = openSession()-->Line_21 $$ session.delete(a)[ FD ]
Line_4 $$ Transaction t = session.beginTransaction()-->Line_23 $$ t.commit()[ FD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_6 $$ a.setBodyWeight(0.5f)[ CD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_21 $$ session.delete(a)[ CD ]
Line_16 $$ List list = session.createQuery("from Animal a where a.mother.bodyWeight < 2.0 or a.mother.bodyWeight > 9.0").list()-->Line_19 $$ assertEquals(list.size(), 2)[ FD ]
Line_9 $$ Animal mother = new Animal()-->Line_12 $$ mother.addOffspring(b)[ FD ]
Line_16 $$ List list = session.createQuery("from Animal a where a.mother.bodyWeight < 2.0 or a.mother.bodyWeight > 9.0").list()-->Line_18 $$ list = session.createQuery("from Animal a where a.mother.bodyWeight > 2.0 and a.mother.bodyWeight > 9.0").list()[ FD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_23 $$ t.commit()[ CD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_24 $$ session.close()[ CD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_4 $$ Transaction t = session.beginTransaction()[ CD ]
Line_5 $$ Animal a = new Animal()-->Line_6 $$ a.setBodyWeight(0.5f)[ FD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_8 $$ Animal b = new Animal()[ CD ]
Line_3 $$ Session session = openSession()-->Line_20 $$ session.delete(b)[ FD ]
Line_8 $$ Animal b = new Animal()-->Line_20 $$ session.delete(b)[ FD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_11 $$ mother.addOffspring(a)[ CD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_17 $$ assertEquals(list.size(), 2)[ CD ]
Line_2 $$ public void testImplicitJoin() throws Exception -->Line_12 $$ mother.addOffspring(b)[ CD ]
Line_8 $$ Animal b = new Animal()-->Line_12 $$ mother.addOffspring(b)[ FD ]
