Line_24 $$ s = openSession()-->Line_36 $$ s.lock(list.get(1), LockMode.UPGRADE)[ FD ]
Line_8 $$ Fum f1 = new Fum(fumKey("f1"))-->Line_16 $$ f1.setFum("f1")[ FD ]
Line_6 $$ Qux q = new Qux()-->Line_28 $$ s.delete(q)[ FD ]
Line_13 $$ List list = new LinkedList()-->Line_34 $$ assertTrue("deleted owner", list.size() == 2)[ FD ]
Line_33 $$ list = s.createQuery("from Fum fum where not fum.fum='FRIEND'").list()-->Line_34 $$ assertTrue("deleted owner", list.size() == 2)[ FD ]
Line_13 $$ List list = new LinkedList()-->Line_19 $$ q.setMoreFums(list)[ FD ]
Line_33 $$ list = s.createQuery("from Fum fum where not fum.fum='FRIEND'").list()-->Line_36 $$ s.lock(list.get(1), LockMode.UPGRADE)[ FD ]
Line_26 $$ q = (Qux) s.load(Qux.class, q.getKey(), LockMode.UPGRADE)-->Line_28 $$ s.delete(q)[ FD ]
Line_10 $$ Set set = new HashSet()-->Line_11 $$ set.add(f1)[ FD ]
Line_4 $$ Session s = openSession()-->Line_33 $$ list = s.createQuery("from Fum fum where not fum.fum='FRIEND'").list()[ FD ]
Line_24 $$ s = openSession()-->Line_30 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_26 $$ q = (Qux) s.load(Qux.class, q.getKey(), LockMode.UPGRADE)[ FD ]
Line_8 $$ Fum f1 = new Fum(fumKey("f1"))-->Line_20 $$ s.save(f1)[ FD ]
Line_37 $$ Iterator iter = list.iterator()-->Line_39 $$ s.delete(iter.next())[ FD ]
Line_4 $$ Session s = openSession()-->Line_23 $$ s.close()[ FD ]
Line_13 $$ List list = new LinkedList()-->Line_33 $$ list = s.createQuery("from Fum fum where not fum.fum='FRIEND'").list()[ FD ]
Line_24 $$ s = openSession()-->Line_39 $$ s.delete(iter.next())[ FD ]
Line_24 $$ s = openSession()-->Line_41 $$ s.getTransaction().commit()[ FD ]
Line_31 $$ s = openSession()-->Line_41 $$ s.getTransaction().commit()[ FD ]
Line_31 $$ s = openSession()-->Line_36 $$ s.lock(list.get(1), LockMode.UPGRADE)[ FD ]
Line_31 $$ s = openSession()-->Line_42 $$ s.close()[ FD ]
Line_24 $$ s = openSession()-->Line_25 $$ s.beginTransaction()[ FD ]
Line_6 $$ Qux q = new Qux()-->Line_19 $$ q.setMoreFums(list)[ FD ]
Line_24 $$ s = openSession()-->Line_27 $$ s.lock(q, LockMode.UPGRADE)[ FD ]
Line_6 $$ Qux q = new Qux()-->Line_7 $$ s.save(q)[ FD ]
Line_9 $$ Fum f2 = new Fum(fumKey("f2"))-->Line_15 $$ list.add(f2)[ FD ]
Line_24 $$ s = openSession()-->Line_31 $$ s = openSession()[ FD ]
Line_24 $$ s = openSession()-->Line_35 $$ s.lock(list.get(0), LockMode.UPGRADE)[ FD ]
Line_4 $$ Session s = openSession()-->Line_28 $$ s.delete(q)[ FD ]
Line_24 $$ s = openSession()-->Line_32 $$ s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_7 $$ s.save(q)[ FD ]
Line_37 $$ Iterator iter = list.iterator()-->Line_38 $$ while (iter.hasNext()) [ FD ]
Line_10 $$ Set set = new HashSet()-->Line_18 $$ q.setFums(set)[ FD ]
Line_13 $$ List list = new LinkedList()-->Line_37 $$ Iterator iter = list.iterator()[ FD ]
Line_24 $$ s = openSession()-->Line_42 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_24 $$ s = openSession()[ FD ]
Line_13 $$ List list = new LinkedList()-->Line_36 $$ s.lock(list.get(1), LockMode.UPGRADE)[ FD ]
Line_31 $$ s = openSession()-->Line_33 $$ list = s.createQuery("from Fum fum where not fum.fum='FRIEND'").list()[ FD ]
Line_9 $$ Fum f2 = new Fum(fumKey("f2"))-->Line_21 $$ s.save(f2)[ FD ]
Line_26 $$ q = (Qux) s.load(Qux.class, q.getKey(), LockMode.UPGRADE)-->Line_27 $$ s.lock(q, LockMode.UPGRADE)[ FD ]
Line_24 $$ s = openSession()-->Line_29 $$ s.getTransaction().commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_36 $$ s.lock(list.get(1), LockMode.UPGRADE)[ FD ]
Line_4 $$ Session s = openSession()-->Line_30 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_21 $$ s.save(f2)[ FD ]
Line_4 $$ Session s = openSession()-->Line_35 $$ s.lock(list.get(0), LockMode.UPGRADE)[ FD ]
Line_13 $$ List list = new LinkedList()-->Line_15 $$ list.add(f2)[ FD ]
Line_31 $$ s = openSession()-->Line_32 $$ s.beginTransaction()[ FD ]
Line_24 $$ s = openSession()-->Line_33 $$ list = s.createQuery("from Fum fum where not fum.fum='FRIEND'").list()[ FD ]
Line_33 $$ list = s.createQuery("from Fum fum where not fum.fum='FRIEND'").list()-->Line_37 $$ Iterator iter = list.iterator()[ FD ]
Line_31 $$ s = openSession()-->Line_39 $$ s.delete(iter.next())[ FD ]
Line_4 $$ Session s = openSession()-->Line_20 $$ s.save(f1)[ FD ]
Line_24 $$ s = openSession()-->Line_26 $$ q = (Qux) s.load(Qux.class, q.getKey(), LockMode.UPGRADE)[ FD ]
Line_8 $$ Fum f1 = new Fum(fumKey("f1"))-->Line_11 $$ set.add(f1)[ FD ]
Line_13 $$ List list = new LinkedList()-->Line_35 $$ s.lock(list.get(0), LockMode.UPGRADE)[ FD ]
Line_38 $$ while (iter.hasNext()) -->Line_39 $$ s.delete(iter.next())[ CD ]
Line_13 $$ List list = new LinkedList()-->Line_14 $$ list.add(f1)[ FD ]
Line_4 $$ Session s = openSession()-->Line_32 $$ s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_29 $$ s.getTransaction().commit()[ FD ]
Line_9 $$ Fum f2 = new Fum(fumKey("f2"))-->Line_17 $$ f2.setFum("f2")[ FD ]
Line_4 $$ Session s = openSession()-->Line_39 $$ s.delete(iter.next())[ FD ]
Line_31 $$ s = openSession()-->Line_35 $$ s.lock(list.get(0), LockMode.UPGRADE)[ FD ]
Line_8 $$ Fum f1 = new Fum(fumKey("f1"))-->Line_14 $$ list.add(f1)[ FD ]
Line_10 $$ Set set = new HashSet()-->Line_12 $$ set.add(f2)[ FD ]
Line_6 $$ Qux q = new Qux()-->Line_27 $$ s.lock(q, LockMode.UPGRADE)[ FD ]
Line_33 $$ list = s.createQuery("from Fum fum where not fum.fum='FRIEND'").list()-->Line_35 $$ s.lock(list.get(0), LockMode.UPGRADE)[ FD ]
Line_9 $$ Fum f2 = new Fum(fumKey("f2"))-->Line_12 $$ set.add(f2)[ FD ]
Line_6 $$ Qux q = new Qux()-->Line_18 $$ q.setFums(set)[ FD ]
Line_4 $$ Session s = openSession()-->Line_22 $$ s.getTransaction().commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_27 $$ s.lock(q, LockMode.UPGRADE)[ FD ]
Line_6 $$ Qux q = new Qux()-->Line_26 $$ q = (Qux) s.load(Qux.class, q.getKey(), LockMode.UPGRADE)[ FD ]
Line_4 $$ Session s = openSession()-->Line_31 $$ s = openSession()[ FD ]
Line_4 $$ Session s = openSession()-->Line_42 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_25 $$ s.beginTransaction()[ FD ]
Line_24 $$ s = openSession()-->Line_28 $$ s.delete(q)[ FD ]
Line_4 $$ Session s = openSession()-->Line_41 $$ s.getTransaction().commit()[ FD ]
