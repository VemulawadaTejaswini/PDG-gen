Line_5 $$ Session s = openSession()-->Line_48 $$ s.createQuery("delete Employee where manager is not null").executeUpdate()[ FD ]
Line_5 $$ Session s = openSession()-->Line_44 $$ s.close()[ FD ]
Line_12 $$ results = s.createQuery("from Person").list()-->Line_15 $$ results = s.createQuery("from Employee").list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_51 $$ s.close()[ FD ]
Line_5 $$ Session s = openSession()-->Line_14 $$ s.clear()[ FD ]
Line_24 $$ if (p.getName().equals("John Doe")) -->Line_25 $$ Employee john = (Employee) p[ CD ]
Line_7 $$ Transaction t = s.beginTransaction()-->Line_43 $$ t.commit()[ FD ]
Line_5 $$ Session s = openSession()-->Line_18 $$ results = new ArrayList(new HashSet(s.createQuery("from Person as p left join fetch p.minions").list()))[ FD ]
Line_10 $$ List results-->Line_32 $$ assertEquals("Incorrect qry result count", 2, results.size())[ FD ]
Line_11 $$ Iterator itr-->Line_20 $$ itr = results.iterator()[ FD ]
Line_31 $$ results = new ArrayList(new HashSet(s.createQuery("from Employee as p left join fetch p.minions").list()))-->Line_32 $$ assertEquals("Incorrect qry result count", 2, results.size())[ FD ]
Line_18 $$ results = new ArrayList(new HashSet(s.createQuery("from Person as p left join fetch p.minions").list()))-->Line_31 $$ results = new ArrayList(new HashSet(s.createQuery("from Employee as p left join fetch p.minions").list()))[ FD ]
Line_15 $$ results = s.createQuery("from Employee").list()-->Line_18 $$ results = new ArrayList(new HashSet(s.createQuery("from Person as p left join fetch p.minions").list()))[ FD ]
Line_18 $$ results = new ArrayList(new HashSet(s.createQuery("from Person as p left join fetch p.minions").list()))-->Line_19 $$ assertEquals("Incorrect qry result count", 4, results.size())[ FD ]
Line_10 $$ List results-->Line_20 $$ itr = results.iterator()[ FD ]
Line_12 $$ results = s.createQuery("from Person").list()-->Line_16 $$ assertEquals("Incorrect qry result count", 2, results.size())[ FD ]
Line_5 $$ Session s = openSession()-->Line_15 $$ results = s.createQuery("from Employee").list()[ FD ]
Line_10 $$ List results-->Line_19 $$ assertEquals("Incorrect qry result count", 4, results.size())[ FD ]
Line_7 $$ Transaction t = s.beginTransaction()-->Line_46 $$ t = s.beginTransaction()[ FD ]
Line_15 $$ results = s.createQuery("from Employee").list()-->Line_32 $$ assertEquals("Incorrect qry result count", 2, results.size())[ FD ]
Line_5 $$ Session s = openSession()-->Line_9 $$ s.clear()[ FD ]
Line_45 $$ s = openSession()-->Line_49 $$ s.createQuery("delete Person").executeUpdate()[ FD ]
Line_5 $$ Session s = openSession()-->Line_46 $$ t = s.beginTransaction()[ FD ]
Line_24 $$ if (p.getName().equals("John Doe")) -->Line_26 $$ assertEquals("Incorrect fecthed minions count", 1, john.getMinions().size())[ CD ]
Line_46 $$ t = s.beginTransaction()-->Line_50 $$ t.commit()[ FD ]
Line_10 $$ List results-->Line_15 $$ results = s.createQuery("from Employee").list()[ FD ]
Line_33 $$ itr = results.iterator()-->Line_34 $$ while (itr.hasNext()) [ FD ]
Line_25 $$ Employee john = (Employee) p-->Line_26 $$ assertEquals("Incorrect fecthed minions count", 1, john.getMinions().size())[ FD ]
Line_20 $$ itr = results.iterator()-->Line_34 $$ while (itr.hasNext()) [ FD ]
Line_7 $$ Transaction t = s.beginTransaction()-->Line_50 $$ t.commit()[ FD ]
Line_5 $$ Session s = openSession()-->Line_7 $$ Transaction t = s.beginTransaction()[ FD ]
Line_34 $$ while (itr.hasNext()) -->Line_37 $$ if (p.getName().equals("John Doe")) [ CD ]
Line_45 $$ s = openSession()-->Line_46 $$ t = s.beginTransaction()[ FD ]
Line_15 $$ results = s.createQuery("from Employee").list()-->Line_16 $$ assertEquals("Incorrect qry result count", 2, results.size())[ FD ]
Line_15 $$ results = s.createQuery("from Employee").list()-->Line_19 $$ assertEquals("Incorrect qry result count", 4, results.size())[ FD ]
Line_5 $$ Session s = openSession()-->Line_12 $$ results = s.createQuery("from Person").list()[ FD ]
Line_12 $$ results = s.createQuery("from Person").list()-->Line_33 $$ itr = results.iterator()[ FD ]
Line_5 $$ Session s = openSession()-->Line_45 $$ s = openSession()[ FD ]
Line_5 $$ Session s = openSession()-->Line_31 $$ results = new ArrayList(new HashSet(s.createQuery("from Employee as p left join fetch p.minions").list()))[ FD ]
Line_10 $$ List results-->Line_13 $$ assertEquals("Incorrect qry result count", 4, results.size())[ FD ]
Line_10 $$ List results-->Line_33 $$ itr = results.iterator()[ FD ]
Line_38 $$ Employee john = (Employee) p-->Line_39 $$ assertEquals("Incorrect fecthed minions count", 1, john.getMinions().size())[ FD ]
Line_11 $$ Iterator itr-->Line_21 $$ while (itr.hasNext()) [ FD ]
Line_18 $$ results = new ArrayList(new HashSet(s.createQuery("from Person as p left join fetch p.minions").list()))-->Line_20 $$ itr = results.iterator()[ FD ]
Line_5 $$ Session s = openSession()-->Line_30 $$ s.clear()[ FD ]
Line_5 $$ Session s = openSession()-->Line_6 $$ s.enableFilter("region").setParameter("userRegion", "US")[ FD ]
Line_10 $$ List results-->Line_12 $$ results = s.createQuery("from Person").list()[ FD ]
Line_10 $$ List results-->Line_31 $$ results = new ArrayList(new HashSet(s.createQuery("from Employee as p left join fetch p.minions").list()))[ FD ]
Line_15 $$ results = s.createQuery("from Employee").list()-->Line_20 $$ itr = results.iterator()[ FD ]
Line_37 $$ if (p.getName().equals("John Doe")) -->Line_39 $$ assertEquals("Incorrect fecthed minions count", 1, john.getMinions().size())[ CD ]
Line_31 $$ results = new ArrayList(new HashSet(s.createQuery("from Employee as p left join fetch p.minions").list()))-->Line_33 $$ itr = results.iterator()[ FD ]
Line_45 $$ s = openSession()-->Line_48 $$ s.createQuery("delete Employee where manager is not null").executeUpdate()[ FD ]
Line_5 $$ Session s = openSession()-->Line_17 $$ s.clear()[ FD ]
Line_18 $$ results = new ArrayList(new HashSet(s.createQuery("from Person as p left join fetch p.minions").list()))-->Line_33 $$ itr = results.iterator()[ FD ]
Line_25 $$ Employee john = (Employee) p-->Line_39 $$ assertEquals("Incorrect fecthed minions count", 1, john.getMinions().size())[ FD ]
Line_12 $$ results = s.createQuery("from Person").list()-->Line_13 $$ assertEquals("Incorrect qry result count", 4, results.size())[ FD ]
Line_37 $$ if (p.getName().equals("John Doe")) -->Line_38 $$ Employee john = (Employee) p[ CD ]
Line_10 $$ List results-->Line_18 $$ results = new ArrayList(new HashSet(s.createQuery("from Person as p left join fetch p.minions").list()))[ FD ]
Line_5 $$ Session s = openSession()-->Line_49 $$ s.createQuery("delete Person").executeUpdate()[ FD ]
Line_15 $$ results = s.createQuery("from Employee").list()-->Line_31 $$ results = new ArrayList(new HashSet(s.createQuery("from Employee as p left join fetch p.minions").list()))[ FD ]
Line_10 $$ List results-->Line_16 $$ assertEquals("Incorrect qry result count", 2, results.size())[ FD ]
Line_15 $$ results = s.createQuery("from Employee").list()-->Line_33 $$ itr = results.iterator()[ FD ]
Line_12 $$ results = s.createQuery("from Person").list()-->Line_31 $$ results = new ArrayList(new HashSet(s.createQuery("from Employee as p left join fetch p.minions").list()))[ FD ]
Line_12 $$ results = s.createQuery("from Person").list()-->Line_18 $$ results = new ArrayList(new HashSet(s.createQuery("from Person as p left join fetch p.minions").list()))[ FD ]
Line_12 $$ results = s.createQuery("from Person").list()-->Line_32 $$ assertEquals("Incorrect qry result count", 2, results.size())[ FD ]
Line_20 $$ itr = results.iterator()-->Line_21 $$ while (itr.hasNext()) [ FD ]
Line_5 $$ Session s = openSession()-->Line_8 $$ prepareTestData(s)[ FD ]
Line_18 $$ results = new ArrayList(new HashSet(s.createQuery("from Person as p left join fetch p.minions").list()))-->Line_32 $$ assertEquals("Incorrect qry result count", 2, results.size())[ FD ]
Line_11 $$ Iterator itr-->Line_34 $$ while (itr.hasNext()) [ FD ]
Line_21 $$ while (itr.hasNext()) -->Line_24 $$ if (p.getName().equals("John Doe")) [ CD ]
Line_45 $$ s = openSession()-->Line_47 $$ s.createQuery("delete Customer where contactOwner is not null").executeUpdate()[ FD ]
Line_12 $$ results = s.createQuery("from Person").list()-->Line_19 $$ assertEquals("Incorrect qry result count", 4, results.size())[ FD ]
Line_45 $$ s = openSession()-->Line_51 $$ s.close()[ FD ]
Line_20 $$ itr = results.iterator()-->Line_33 $$ itr = results.iterator()[ FD ]
Line_12 $$ results = s.createQuery("from Person").list()-->Line_20 $$ itr = results.iterator()[ FD ]
Line_11 $$ Iterator itr-->Line_33 $$ itr = results.iterator()[ FD ]
Line_5 $$ Session s = openSession()-->Line_47 $$ s.createQuery("delete Customer where contactOwner is not null").executeUpdate()[ FD ]
