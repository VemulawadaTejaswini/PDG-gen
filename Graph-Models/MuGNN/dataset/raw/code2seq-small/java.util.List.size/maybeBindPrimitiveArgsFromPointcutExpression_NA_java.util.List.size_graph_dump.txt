Line_13 $$ i += body.numTokensConsumed-->Line_21 $$ if (isUnbound(i) && this.argumentTypes[i].isPrimitive()) [ FD ]
Line_2 $$ private void maybeBindPrimitiveArgsFromPointcutExpression() -->Line_4 $$ if (numUnboundPrimitives > 1) [ CD ]
Line_7 $$ if (numUnboundPrimitives == 1) -->Line_17 $$ if (varNames.size() > 1) [ CD ]
Line_8 $$ List<String> varNames = new ArrayList<String>()-->Line_19 $$ if (varNames.size() == 1) [ FD ]
Line_9 $$ String[] tokens = StringUtils.tokenizeToStringArray(this.pointcutExpression, " ")-->Line_12 $$ PointcutBody body = getPointcutBody(tokens, i)[ FD ]
Line_8 $$ List<String> varNames = new ArrayList<String>()-->Line_14 $$ maybeExtractVariableNamesFromArgs(body.text, varNames)[ FD ]
Line_11 $$ if (tokens[i].equals("args") || tokens[i].startsWith("args(")) -->Line_12 $$ PointcutBody body = getPointcutBody(tokens, i)[ CD ]
Line_17 $$ if (varNames.size() > 1) -->Line_19 $$ if (varNames.size() == 1) [ CD ]
Line_8 $$ List<String> varNames = new ArrayList<String>()-->Line_22 $$ bindParameterName(i, varNames.get(0))[ FD ]
Line_8 $$ List<String> varNames = new ArrayList<String>()-->Line_18 $$ throw new AmbiguousBindingException("Found " + varNames.size() + " candidate variable names but only one candidate binding slot when matching primitive args")[ FD ]
Line_11 $$ if (tokens[i].equals("args") || tokens[i].startsWith("args(")) -->Line_14 $$ maybeExtractVariableNamesFromArgs(body.text, varNames)[ CD ]
Line_20 $$ for (int i = 0; i < this.argumentTypes.length; i++) -->Line_21 $$ if (isUnbound(i) && this.argumentTypes[i].isPrimitive()) [ CD ]
Line_10 $$ for (int i = 0; i < tokens.length; i++) -->Line_21 $$ if (isUnbound(i) && this.argumentTypes[i].isPrimitive()) [ FD ]
Line_8 $$ List<String> varNames = new ArrayList<String>()-->Line_17 $$ if (varNames.size() > 1) [ FD ]
Line_7 $$ if (numUnboundPrimitives == 1) -->Line_8 $$ List<String> varNames = new ArrayList<String>()[ CD ]
Line_13 $$ i += body.numTokensConsumed-->Line_22 $$ bindParameterName(i, varNames.get(0))[ FD ]
Line_3 $$ int numUnboundPrimitives = countNumberOfUnboundPrimitiveArguments()-->Line_4 $$ if (numUnboundPrimitives > 1) [ FD ]
Line_13 $$ i += body.numTokensConsumed-->Line_12 $$ PointcutBody body = getPointcutBody(tokens, i)[ FD ]
Line_10 $$ for (int i = 0; i < tokens.length; i++) -->Line_12 $$ PointcutBody body = getPointcutBody(tokens, i)[ FD ]
Line_13 $$ i += body.numTokensConsumed-->Line_20 $$ for (int i = 0; i < this.argumentTypes.length; i++) [ FD ]
Line_13 $$ i += body.numTokensConsumed-->Line_10 $$ for (int i = 0; i < tokens.length; i++) [ FD ]
Line_10 $$ for (int i = 0; i < tokens.length; i++) -->Line_11 $$ if (tokens[i].equals("args") || tokens[i].startsWith("args(")) [ CD ]
Line_20 $$ for (int i = 0; i < this.argumentTypes.length; i++) -->Line_21 $$ if (isUnbound(i) && this.argumentTypes[i].isPrimitive()) [ FD ]
Line_10 $$ for (int i = 0; i < tokens.length; i++) -->Line_13 $$ i += body.numTokensConsumed[ FD ]
Line_7 $$ if (numUnboundPrimitives == 1) -->Line_10 $$ for (int i = 0; i < tokens.length; i++) [ CD ]
Line_20 $$ for (int i = 0; i < this.argumentTypes.length; i++) -->Line_22 $$ bindParameterName(i, varNames.get(0))[ FD ]
Line_10 $$ for (int i = 0; i < tokens.length; i++) -->Line_22 $$ bindParameterName(i, varNames.get(0))[ FD ]
Line_7 $$ if (numUnboundPrimitives == 1) -->Line_9 $$ String[] tokens = StringUtils.tokenizeToStringArray(this.pointcutExpression, " ")[ CD ]
Line_3 $$ int numUnboundPrimitives = countNumberOfUnboundPrimitiveArguments()-->Line_7 $$ if (numUnboundPrimitives == 1) [ FD ]
Line_2 $$ private void maybeBindPrimitiveArgsFromPointcutExpression() -->Line_7 $$ if (numUnboundPrimitives == 1) [ CD ]
Line_2 $$ private void maybeBindPrimitiveArgsFromPointcutExpression() -->Line_3 $$ int numUnboundPrimitives = countNumberOfUnboundPrimitiveArguments()[ CD ]
Line_10 $$ for (int i = 0; i < tokens.length; i++) -->Line_20 $$ for (int i = 0; i < this.argumentTypes.length; i++) [ FD ]
Line_19 $$ if (varNames.size() == 1) -->Line_20 $$ for (int i = 0; i < this.argumentTypes.length; i++) [ CD ]
Line_21 $$ if (isUnbound(i) && this.argumentTypes[i].isPrimitive()) -->Line_22 $$ bindParameterName(i, varNames.get(0))[ CD ]
Line_11 $$ if (tokens[i].equals("args") || tokens[i].startsWith("args(")) -->Line_13 $$ i += body.numTokensConsumed[ CD ]
