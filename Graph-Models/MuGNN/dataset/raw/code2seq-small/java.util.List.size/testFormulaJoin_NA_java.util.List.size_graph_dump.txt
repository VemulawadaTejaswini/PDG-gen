Line_48 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master").list()-->Line_54 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master m join fetch m.detail").list()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_5 $$ Master master = new Master()[ CD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction tx = s.beginTransaction()[ FD ]
Line_31 $$ s = openSession()-->Line_45 $$ s.close()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_48 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master").list()[ CD ]
Line_2 $$ public void testFormulaJoin() -->Line_46 $$ s = openSession()[ CD ]
Line_7 $$ Detail current = new Detail()-->Line_10 $$ current.setDetails("details of master 1 blah blah")[ FD ]
Line_26 $$ tx = s.beginTransaction()-->Line_41 $$ tx = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_32 $$ tx = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_30 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_47 $$ tx = s.beginTransaction()[ FD ]
Line_4 $$ Transaction tx = s.beginTransaction()-->Line_26 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_29 $$ tx.commit()[ CD ]
Line_47 $$ tx = s.beginTransaction()-->Line_50 $$ tx.commit()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_28 $$ assertEquals(l.size(), 1)[ CD ]
Line_13 $$ Detail past = new Detail()-->Line_16 $$ past.setDetails("old details of master 1 yada yada")[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_56 $$ s.createQuery("delete from Detail").executeUpdate()[ CD ]
Line_2 $$ public void testFormulaJoin() -->Line_8 $$ current.setCurrentVersion(true)[ CD ]
Line_40 $$ s = openSession()-->Line_54 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master m join fetch m.detail").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_33 $$ l = s.createQuery("from Master m left join fetch m.detail").list()[ FD ]
Line_41 $$ tx = s.beginTransaction()-->Line_44 $$ tx.commit()[ FD ]
Line_32 $$ tx = s.beginTransaction()-->Line_58 $$ tx.commit()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_23 $$ if (getDialect() instanceof PostgreSQLDialect || getDialect() instanceof PostgreSQL81Dialect)[ CD ]
Line_42 $$ l = s.createQuery("from Master m join fetch m.detail").list()-->Line_49 $$ assertEquals(l.size(), 2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_26 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_45 $$ s.close()[ CD ]
Line_2 $$ public void testFormulaJoin() -->Line_17 $$ past.setMaster(master)[ CD ]
Line_33 $$ l = s.createQuery("from Master m left join fetch m.detail").list()-->Line_49 $$ assertEquals(l.size(), 2)[ FD ]
Line_4 $$ Transaction tx = s.beginTransaction()-->Line_47 $$ tx = s.beginTransaction()[ FD ]
Line_33 $$ l = s.createQuery("from Master m left join fetch m.detail").list()-->Line_48 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master").list()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_25 $$ s = openSession()[ CD ]
Line_54 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master m join fetch m.detail").list()-->Line_55 $$ assertEquals(l.size(), 2)[ FD ]
Line_4 $$ Transaction tx = s.beginTransaction()-->Line_53 $$ tx = s.beginTransaction()[ FD ]
Line_41 $$ tx = s.beginTransaction()-->Line_50 $$ tx.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_39 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_51 $$ s.close()[ FD ]
Line_52 $$ s = openSession()-->Line_59 $$ s.close()[ FD ]
Line_25 $$ s = openSession()-->Line_31 $$ s = openSession()[ FD ]
Line_13 $$ Detail past = new Detail()-->Line_14 $$ past.setCurrentVersion(false)[ FD ]
Line_4 $$ Transaction tx = s.beginTransaction()-->Line_29 $$ tx.commit()[ FD ]
Line_31 $$ s = openSession()-->Line_32 $$ tx = s.beginTransaction()[ FD ]
Line_31 $$ s = openSession()-->Line_51 $$ s.close()[ FD ]
Line_5 $$ Master master = new Master()-->Line_18 $$ s.persist(master)[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_37 $$ assertTrue(m == m.getDetail().getMaster())[ CD ]
Line_33 $$ l = s.createQuery("from Master m left join fetch m.detail").list()-->Line_55 $$ assertEquals(l.size(), 2)[ FD ]
Line_31 $$ s = openSession()-->Line_40 $$ s = openSession()[ FD ]
Line_25 $$ s = openSession()-->Line_48 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master").list()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_16 $$ past.setDetails("old details of master 1 yada yada")[ CD ]
Line_3 $$ Session s = openSession()-->Line_41 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_39 $$ s.close()[ CD ]
Line_25 $$ s = openSession()-->Line_59 $$ s.close()[ FD ]
Line_25 $$ s = openSession()-->Line_40 $$ s = openSession()[ FD ]
Line_31 $$ s = openSession()-->Line_39 $$ s.close()[ FD ]
Line_26 $$ tx = s.beginTransaction()-->Line_44 $$ tx.commit()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_11 $$ current.setMaster(master)[ CD ]
Line_25 $$ s = openSession()-->Line_27 $$ List l = s.createQuery("from Master m left join m.detail d").list()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_19 $$ s.persist(past)[ CD ]
Line_26 $$ tx = s.beginTransaction()-->Line_38 $$ tx.commit()[ FD ]
Line_27 $$ List l = s.createQuery("from Master m left join m.detail d").list()-->Line_42 $$ l = s.createQuery("from Master m join fetch m.detail").list()[ FD ]
Line_32 $$ tx = s.beginTransaction()-->Line_53 $$ tx = s.beginTransaction()[ FD ]
Line_25 $$ s = openSession()-->Line_45 $$ s.close()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_4 $$ Transaction tx = s.beginTransaction()[ CD ]
Line_2 $$ public void testFormulaJoin() -->Line_47 $$ tx = s.beginTransaction()[ CD ]
Line_46 $$ s = openSession()-->Line_51 $$ s.close()[ FD ]
Line_4 $$ Transaction tx = s.beginTransaction()-->Line_38 $$ tx.commit()[ FD ]
Line_31 $$ s = openSession()-->Line_54 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master m join fetch m.detail").list()[ FD ]
Line_25 $$ s = openSession()-->Line_41 $$ tx = s.beginTransaction()[ FD ]
Line_46 $$ s = openSession()-->Line_56 $$ s.createQuery("delete from Detail").executeUpdate()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_59 $$ s.close()[ CD ]
Line_2 $$ public void testFormulaJoin() -->Line_31 $$ s = openSession()[ CD ]
Line_52 $$ s = openSession()-->Line_57 $$ s.createQuery("delete from Master").executeUpdate()[ FD ]
Line_52 $$ s = openSession()-->Line_54 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master m join fetch m.detail").list()[ FD ]
Line_31 $$ s = openSession()-->Line_41 $$ tx = s.beginTransaction()[ FD ]
Line_48 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master").list()-->Line_55 $$ assertEquals(l.size(), 2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_52 $$ s = openSession()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_57 $$ s.createQuery("delete from Master").executeUpdate()[ CD ]
Line_27 $$ List l = s.createQuery("from Master m left join m.detail d").list()-->Line_28 $$ assertEquals(l.size(), 1)[ FD ]
Line_40 $$ s = openSession()-->Line_42 $$ l = s.createQuery("from Master m join fetch m.detail").list()[ FD ]
Line_42 $$ l = s.createQuery("from Master m join fetch m.detail").list()-->Line_48 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master").list()[ FD ]
Line_31 $$ s = openSession()-->Line_33 $$ l = s.createQuery("from Master m left join fetch m.detail").list()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_14 $$ past.setCurrentVersion(false)[ CD ]
Line_40 $$ s = openSession()-->Line_48 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master").list()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_27 $$ List l = s.createQuery("from Master m left join m.detail d").list()[ CD ]
Line_2 $$ public void testFormulaJoin() -->Line_20 $$ s.persist(current)[ CD ]
Line_13 $$ Detail past = new Detail()-->Line_17 $$ past.setMaster(master)[ FD ]
Line_31 $$ s = openSession()-->Line_42 $$ l = s.createQuery("from Master m join fetch m.detail").list()[ FD ]
Line_25 $$ s = openSession()-->Line_56 $$ s.createQuery("delete from Detail").executeUpdate()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_22 $$ s.close()[ CD ]
Line_26 $$ tx = s.beginTransaction()-->Line_50 $$ tx.commit()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_6 $$ master.setName("master 1")[ CD ]
Line_2 $$ public void testFormulaJoin() -->Line_40 $$ s = openSession()[ CD ]
Line_41 $$ tx = s.beginTransaction()-->Line_58 $$ tx.commit()[ FD ]
Line_46 $$ s = openSession()-->Line_47 $$ tx = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_48 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_54 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master m join fetch m.detail").list()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_7 $$ Detail current = new Detail()[ CD ]
Line_33 $$ l = s.createQuery("from Master m left join fetch m.detail").list()-->Line_42 $$ l = s.createQuery("from Master m join fetch m.detail").list()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_30 $$ s.close()[ CD ]
Line_25 $$ s = openSession()-->Line_52 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_27 $$ List l = s.createQuery("from Master m left join m.detail d").list()[ FD ]
Line_25 $$ s = openSession()-->Line_54 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master m join fetch m.detail").list()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_10 $$ current.setDetails("details of master 1 blah blah")[ CD ]
Line_31 $$ s = openSession()-->Line_52 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_59 $$ s.close()[ FD ]
Line_52 $$ s = openSession()-->Line_53 $$ tx = s.beginTransaction()[ FD ]
Line_4 $$ Transaction tx = s.beginTransaction()-->Line_41 $$ tx = s.beginTransaction()[ FD ]
Line_40 $$ s = openSession()-->Line_51 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_20 $$ s.persist(current)[ FD ]
Line_4 $$ Transaction tx = s.beginTransaction()-->Line_21 $$ tx.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_31 $$ s = openSession()[ FD ]
Line_25 $$ s = openSession()-->Line_46 $$ s = openSession()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_51 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_53 $$ tx = s.beginTransaction()[ FD ]
Line_26 $$ tx = s.beginTransaction()-->Line_58 $$ tx.commit()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_38 $$ tx.commit()[ CD ]
Line_3 $$ Session s = openSession()-->Line_46 $$ s = openSession()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_3 $$ Session s = openSession()[ CD ]
Line_31 $$ s = openSession()-->Line_59 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_57 $$ s.createQuery("delete from Master").executeUpdate()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_35 $$ Master m = (Master) l.get(0)[ CD ]
Line_3 $$ Session s = openSession()-->Line_42 $$ l = s.createQuery("from Master m join fetch m.detail").list()[ FD ]
Line_27 $$ List l = s.createQuery("from Master m left join m.detail d").list()-->Line_49 $$ assertEquals(l.size(), 2)[ FD ]
Line_25 $$ s = openSession()-->Line_26 $$ tx = s.beginTransaction()[ FD ]
Line_25 $$ s = openSession()-->Line_30 $$ s.close()[ FD ]
Line_25 $$ s = openSession()-->Line_53 $$ tx = s.beginTransaction()[ FD ]
Line_31 $$ s = openSession()-->Line_53 $$ tx = s.beginTransaction()[ FD ]
Line_27 $$ List l = s.createQuery("from Master m left join m.detail d").list()-->Line_54 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master m join fetch m.detail").list()[ FD ]
Line_4 $$ Transaction tx = s.beginTransaction()-->Line_44 $$ tx.commit()[ FD ]
Line_13 $$ Detail past = new Detail()-->Line_15 $$ past.setVersion(1)[ FD ]
Line_27 $$ List l = s.createQuery("from Master m left join m.detail d").list()-->Line_35 $$ Master m = (Master) l.get(0)[ FD ]
Line_27 $$ List l = s.createQuery("from Master m left join m.detail d").list()-->Line_48 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master").list()[ FD ]
Line_31 $$ s = openSession()-->Line_56 $$ s.createQuery("delete from Detail").executeUpdate()[ FD ]
Line_52 $$ s = openSession()-->Line_56 $$ s.createQuery("delete from Detail").executeUpdate()[ FD ]
Line_3 $$ Session s = openSession()-->Line_56 $$ s.createQuery("delete from Detail").executeUpdate()[ FD ]
Line_7 $$ Detail current = new Detail()-->Line_20 $$ s.persist(current)[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_36 $$ assertEquals("master 1", m.getDetail().getMaster().getName())[ CD ]
Line_46 $$ s = openSession()-->Line_54 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master m join fetch m.detail").list()[ FD ]
Line_40 $$ s = openSession()-->Line_56 $$ s.createQuery("delete from Detail").executeUpdate()[ FD ]
Line_32 $$ tx = s.beginTransaction()-->Line_41 $$ tx = s.beginTransaction()[ FD ]
Line_32 $$ tx = s.beginTransaction()-->Line_44 $$ tx.commit()[ FD ]
Line_40 $$ s = openSession()-->Line_46 $$ s = openSession()[ FD ]
Line_4 $$ Transaction tx = s.beginTransaction()-->Line_50 $$ tx.commit()[ FD ]
Line_33 $$ l = s.createQuery("from Master m left join fetch m.detail").list()-->Line_54 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master m join fetch m.detail").list()[ FD ]
Line_42 $$ l = s.createQuery("from Master m join fetch m.detail").list()-->Line_55 $$ assertEquals(l.size(), 2)[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_12 $$ master.setDetail(current)[ CD ]
Line_2 $$ public void testFormulaJoin() -->Line_13 $$ Detail past = new Detail()[ CD ]
Line_40 $$ s = openSession()-->Line_52 $$ s = openSession()[ FD ]
Line_46 $$ s = openSession()-->Line_48 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master").list()[ FD ]
Line_32 $$ tx = s.beginTransaction()-->Line_47 $$ tx = s.beginTransaction()[ FD ]
Line_25 $$ s = openSession()-->Line_33 $$ l = s.createQuery("from Master m left join fetch m.detail").list()[ FD ]
Line_25 $$ s = openSession()-->Line_42 $$ l = s.createQuery("from Master m join fetch m.detail").list()[ FD ]
Line_46 $$ s = openSession()-->Line_52 $$ s = openSession()[ FD ]
Line_35 $$ Master m = (Master) l.get(0)-->Line_36 $$ assertEquals("master 1", m.getDetail().getMaster().getName())[ FD ]
Line_33 $$ l = s.createQuery("from Master m left join fetch m.detail").list()-->Line_34 $$ assertEquals(l.size(), 1)[ FD ]
Line_46 $$ s = openSession()-->Line_53 $$ tx = s.beginTransaction()[ FD ]
Line_41 $$ tx = s.beginTransaction()-->Line_47 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_54 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master m join fetch m.detail").list()[ CD ]
Line_7 $$ Detail current = new Detail()-->Line_12 $$ master.setDetail(current)[ FD ]
Line_7 $$ Detail current = new Detail()-->Line_9 $$ current.setVersion(2)[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_52 $$ s = openSession()[ CD ]
Line_26 $$ tx = s.beginTransaction()-->Line_32 $$ tx = s.beginTransaction()[ FD ]
Line_31 $$ s = openSession()-->Line_57 $$ s.createQuery("delete from Master").executeUpdate()[ FD ]
Line_26 $$ tx = s.beginTransaction()-->Line_47 $$ tx = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_45 $$ s.close()[ FD ]
Line_40 $$ s = openSession()-->Line_47 $$ tx = s.beginTransaction()[ FD ]
Line_40 $$ s = openSession()-->Line_59 $$ s.close()[ FD ]
Line_31 $$ s = openSession()-->Line_46 $$ s = openSession()[ FD ]
Line_25 $$ s = openSession()-->Line_57 $$ s.createQuery("delete from Master").executeUpdate()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_26 $$ tx = s.beginTransaction()[ CD ]
Line_2 $$ public void testFormulaJoin() -->Line_34 $$ assertEquals(l.size(), 1)[ CD ]
Line_40 $$ s = openSession()-->Line_45 $$ s.close()[ FD ]
Line_40 $$ s = openSession()-->Line_53 $$ tx = s.beginTransaction()[ FD ]
Line_32 $$ tx = s.beginTransaction()-->Line_50 $$ tx.commit()[ FD ]
Line_42 $$ l = s.createQuery("from Master m join fetch m.detail").list()-->Line_54 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master m join fetch m.detail").list()[ FD ]
Line_40 $$ s = openSession()-->Line_57 $$ s.createQuery("delete from Master").executeUpdate()[ FD ]
Line_4 $$ Transaction tx = s.beginTransaction()-->Line_58 $$ tx.commit()[ FD ]
Line_33 $$ l = s.createQuery("from Master m left join fetch m.detail").list()-->Line_35 $$ Master m = (Master) l.get(0)[ FD ]
Line_31 $$ s = openSession()-->Line_48 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master").list()[ FD ]
Line_46 $$ s = openSession()-->Line_57 $$ s.createQuery("delete from Master").executeUpdate()[ FD ]
Line_23 $$ if (getDialect() instanceof PostgreSQLDialect || getDialect() instanceof PostgreSQL81Dialect)-->Line_24 $$ return[ CD ]
Line_7 $$ Detail current = new Detail()-->Line_8 $$ current.setCurrentVersion(true)[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_18 $$ s.persist(master)[ CD ]
Line_31 $$ s = openSession()-->Line_47 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_41 $$ tx = s.beginTransaction()[ CD ]
Line_2 $$ public void testFormulaJoin() -->Line_9 $$ current.setVersion(2)[ CD ]
Line_13 $$ Detail past = new Detail()-->Line_19 $$ s.persist(past)[ FD ]
Line_27 $$ List l = s.createQuery("from Master m left join m.detail d").list()-->Line_43 $$ assertEquals(l.size(), 1)[ FD ]
Line_26 $$ tx = s.beginTransaction()-->Line_29 $$ tx.commit()[ FD ]
Line_25 $$ s = openSession()-->Line_51 $$ s.close()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_58 $$ tx.commit()[ CD ]
Line_5 $$ Master master = new Master()-->Line_6 $$ master.setName("master 1")[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_42 $$ l = s.createQuery("from Master m join fetch m.detail").list()[ CD ]
Line_33 $$ l = s.createQuery("from Master m left join fetch m.detail").list()-->Line_43 $$ assertEquals(l.size(), 1)[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_43 $$ assertEquals(l.size(), 1)[ CD ]
Line_47 $$ tx = s.beginTransaction()-->Line_53 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_44 $$ tx.commit()[ CD ]
Line_25 $$ s = openSession()-->Line_47 $$ tx = s.beginTransaction()[ FD ]
Line_27 $$ List l = s.createQuery("from Master m left join m.detail d").list()-->Line_55 $$ assertEquals(l.size(), 2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_19 $$ s.persist(past)[ FD ]
Line_26 $$ tx = s.beginTransaction()-->Line_53 $$ tx = s.beginTransaction()[ FD ]
Line_47 $$ tx = s.beginTransaction()-->Line_58 $$ tx.commit()[ FD ]
Line_5 $$ Master master = new Master()-->Line_11 $$ current.setMaster(master)[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_33 $$ l = s.createQuery("from Master m left join fetch m.detail").list()[ CD ]
Line_4 $$ Transaction tx = s.beginTransaction()-->Line_32 $$ tx = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_40 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_22 $$ s.close()[ FD ]
Line_25 $$ s = openSession()-->Line_39 $$ s.close()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_53 $$ tx = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_25 $$ s = openSession()[ FD ]
Line_41 $$ tx = s.beginTransaction()-->Line_53 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_32 $$ tx = s.beginTransaction()[ CD ]
Line_25 $$ s = openSession()-->Line_32 $$ tx = s.beginTransaction()[ FD ]
Line_35 $$ Master m = (Master) l.get(0)-->Line_37 $$ assertTrue(m == m.getDetail().getMaster())[ FD ]
Line_32 $$ tx = s.beginTransaction()-->Line_38 $$ tx.commit()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_55 $$ assertEquals(l.size(), 2)[ CD ]
Line_27 $$ List l = s.createQuery("from Master m left join m.detail d").list()-->Line_33 $$ l = s.createQuery("from Master m left join fetch m.detail").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_18 $$ s.persist(master)[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_15 $$ past.setVersion(1)[ CD ]
Line_2 $$ public void testFormulaJoin() -->Line_49 $$ assertEquals(l.size(), 2)[ CD ]
Line_40 $$ s = openSession()-->Line_41 $$ tx = s.beginTransaction()[ FD ]
Line_46 $$ s = openSession()-->Line_59 $$ s.close()[ FD ]
Line_5 $$ Master master = new Master()-->Line_17 $$ past.setMaster(master)[ FD ]
Line_42 $$ l = s.createQuery("from Master m join fetch m.detail").list()-->Line_43 $$ assertEquals(l.size(), 1)[ FD ]
Line_5 $$ Master master = new Master()-->Line_12 $$ master.setDetail(current)[ FD ]
Line_27 $$ List l = s.createQuery("from Master m left join m.detail d").list()-->Line_34 $$ assertEquals(l.size(), 1)[ FD ]
Line_48 $$ l = s.createQuery("from Detail d join fetch d.currentMaster.master").list()-->Line_49 $$ assertEquals(l.size(), 2)[ FD ]
Line_7 $$ Detail current = new Detail()-->Line_11 $$ current.setMaster(master)[ FD ]
Line_53 $$ tx = s.beginTransaction()-->Line_58 $$ tx.commit()[ FD ]
Line_2 $$ public void testFormulaJoin() -->Line_50 $$ tx.commit()[ CD ]
Line_2 $$ public void testFormulaJoin() -->Line_21 $$ tx.commit()[ CD ]
