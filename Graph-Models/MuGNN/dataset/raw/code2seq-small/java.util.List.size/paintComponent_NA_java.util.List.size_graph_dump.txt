Line_6 $$ final int top = i.top + (d.height - i.top - i.bottom - HEIGHT) / 2-->Line_8 $$ g.fillRect(left, top, WIDTH, HEIGHT)[ FD ]
Line_15 $$ for (int r = 0; r < myRecentColors.size(); r++) -->Line_16 $$ int row = r / 10[ CD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_15 $$ for (int r = 0; r < myRecentColors.size(); r++) [ CD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_19 $$ g.setColor(color)[ FD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_9 $$ g.setColor(Color.GRAY)[ FD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_7 $$ g.setColor(Color.WHITE)[ CD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_10 $$ g.drawLine(left + 1, i.top + HEIGHT / 2, left + WIDTH - 3, i.top + HEIGHT / 2)[ FD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_5 $$ final int left = i.left + (d.width - i.left - i.right - WIDTH) / 2[ CD ]
Line_18 $$ Color color = myRecentColors.get(r)-->Line_19 $$ g.setColor(color)[ FD ]
Line_15 $$ for (int r = 0; r < myRecentColors.size(); r++) -->Line_17 $$ int col = r % 10[ CD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_20 $$ g.fillRect(left + 2 + col * 30 + col + 1, top + 2 + row * 30 + row + 1, 28, 28)[ FD ]
Line_15 $$ for (int r = 0; r < myRecentColors.size(); r++) -->Line_18 $$ Color color = myRecentColors.get(r)[ CD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_3 $$ final Insets i = getInsets()[ CD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_7 $$ g.setColor(Color.WHITE)[ FD ]
Line_15 $$ for (int r = 0; r < myRecentColors.size(); r++) -->Line_19 $$ g.setColor(color)[ CD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_8 $$ g.fillRect(left, top, WIDTH, HEIGHT)[ CD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_6 $$ final int top = i.top + (d.height - i.top - i.bottom - HEIGHT) / 2[ CD ]
Line_15 $$ for (int r = 0; r < myRecentColors.size(); r++) -->Line_20 $$ g.fillRect(left + 2 + col * 30 + col + 1, top + 2 + row * 30 + row + 1, 28, 28)[ CD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_10 $$ g.drawLine(left + 1, i.top + HEIGHT / 2, left + WIDTH - 3, i.top + HEIGHT / 2)[ CD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_11 $$ g.drawRect(left + 1, top + 1, WIDTH - 3, HEIGHT - 3)[ FD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_8 $$ g.fillRect(left, top, WIDTH, HEIGHT)[ FD ]
Line_12 $$ for (int k = 1; k < 10; k++) -->Line_13 $$ g.drawLine(left + 1 + k * 31, top + 1, left + 1 + k * 31, top + HEIGHT - 3)[ CD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_13 $$ g.drawLine(left + 1 + k * 31, top + 1, left + 1 + k * 31, top + HEIGHT - 3)[ FD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_4 $$ final Dimension d = getSize()[ CD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_11 $$ g.drawRect(left + 1, top + 1, WIDTH - 3, HEIGHT - 3)[ CD ]
Line_15 $$ for (int r = 0; r < myRecentColors.size(); r++) -->Line_18 $$ Color color = myRecentColors.get(r)[ FD ]
Line_5 $$ final int left = i.left + (d.width - i.left - i.right - WIDTH) / 2-->Line_8 $$ g.fillRect(left, top, WIDTH, HEIGHT)[ FD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_9 $$ g.setColor(Color.GRAY)[ CD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_12 $$ for (int k = 1; k < 10; k++) [ CD ]
