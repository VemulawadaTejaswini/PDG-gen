Line_2 $$ private static Cassandra.Client getClientFromAddressList(Configuration conf, String[] addresses, int port) throws IOException -->Line_13 $$ if (client == null) [ CD ]
Line_5 $$ for (String address : addresses) -->Line_7 $$ client = createConnection(conf, address, port)[ FD ]
Line_7 $$ client = createConnection(conf, address, port)-->Line_13 $$ if (client == null) [ FD ]
Line_13 $$ if (client == null) -->Line_14 $$ logger.error("failed to connect to any initial addresses")[ CD ]
Line_2 $$ private static Cassandra.Client getClientFromAddressList(Configuration conf, String[] addresses, int port) throws IOException -->Line_3 $$ Cassandra.Client client = null[ CD ]
Line_2 $$ private static Cassandra.Client getClientFromAddressList(Configuration conf, String[] addresses, int port) throws IOException -->Line_7 $$ client = createConnection(conf, address, port)[ FD ]
Line_4 $$ List<IOException> exceptions = new ArrayList<IOException>()-->Line_18 $$ throw exceptions.get(exceptions.size() - 1)[ FD ]
Line_3 $$ Cassandra.Client client = null-->Line_7 $$ client = createConnection(conf, address, port)[ FD ]
Line_4 $$ List<IOException> exceptions = new ArrayList<IOException>()-->Line_10 $$ exceptions.add(ioe)[ FD ]
Line_3 $$ Cassandra.Client client = null-->Line_13 $$ if (client == null) [ FD ]
Line_2 $$ private static Cassandra.Client getClientFromAddressList(Configuration conf, String[] addresses, int port) throws IOException -->Line_20 $$ return client[ CD ]
Line_15 $$ for (IOException ioe : exceptions) -->Line_16 $$ logger.error("", ioe)[ FD ]
Line_2 $$ private static Cassandra.Client getClientFromAddressList(Configuration conf, String[] addresses, int port) throws IOException -->Line_4 $$ List<IOException> exceptions = new ArrayList<IOException>()[ CD ]
