Line_13 $$ MyBean result = results.get(0)-->Line_18 $$ assertTrue(result.isBool())[ FD ]
Line_13 $$ MyBean result = results.get(0)-->Line_19 $$ assertArrayEquals(new byte[] [ FD ]
Line_5 $$ ParameterizedTypeReference<List<MyBean>> beansList = new ParameterizedTypeReference<List<MyBean>>() -->Line_11 $$ List<MyBean> results = (List<MyBean>) converter.read(beansList.getType(), null, inputMessage)[ FD ]
Line_8 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(body.getBytes("UTF-8"))-->Line_9 $$ inputMessage.getHeaders().setContentType(new MediaType("application", "json"))[ FD ]
Line_7 $$ String body = "[-->Line_8 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(body.getBytes("UTF-8"))[ FD ]
Line_13 $$ MyBean result = results.get(0)-->Line_15 $$ assertEquals(42, result.getNumber())[ FD ]
Line_13 $$ MyBean result = results.get(0)-->Line_16 $$ assertEquals(42F, result.getFraction(), 0F)[ FD ]
Line_10 $$ MappingJackson2HttpMessageConverter converter = new MappingJackson2HttpMessageConverter()-->Line_11 $$ List<MyBean> results = (List<MyBean>) converter.read(beansList.getType(), null, inputMessage)[ FD ]
Line_13 $$ MyBean result = results.get(0)-->Line_14 $$ assertEquals("Foo", result.getString())[ FD ]
Line_11 $$ List<MyBean> results = (List<MyBean>) converter.read(beansList.getType(), null, inputMessage)-->Line_12 $$ assertEquals(1, results.size())[ FD ]
Line_8 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(body.getBytes("UTF-8"))-->Line_11 $$ List<MyBean> results = (List<MyBean>) converter.read(beansList.getType(), null, inputMessage)[ FD ]
Line_11 $$ List<MyBean> results = (List<MyBean>) converter.read(beansList.getType(), null, inputMessage)-->Line_13 $$ MyBean result = results.get(0)[ FD ]
Line_13 $$ MyBean result = results.get(0)-->Line_17 $$ assertArrayEquals(new String[] [ FD ]
