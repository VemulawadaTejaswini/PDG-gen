Line_2 $$ private void assertChanges(List<Change> actual, List<GitTestChange> expected) -->Line_4 $$ for (int i = 0; i < actual.size(); i++) [ FD ]
Line_2 $$ private void assertChanges(List<Change> actual, List<GitTestChange> expected) -->Line_3 $$ assertEquals(expected.size(), actual.size())[ CD ]
Line_2 $$ private void assertChanges(List<Change> actual, List<GitTestChange> expected) -->Line_6 $$ GitTestChange expectedChange = expected.get(i)[ FD ]
Line_2 $$ private void assertChanges(List<Change> actual, List<GitTestChange> expected) -->Line_4 $$ for (int i = 0; i < actual.size(); i++) [ CD ]
Line_5 $$ Change actualChange = actual.get(i)-->Line_7 $$ assertChange(actualChange, expectedChange)[ FD ]
Line_6 $$ GitTestChange expectedChange = expected.get(i)-->Line_7 $$ assertChange(actualChange, expectedChange)[ FD ]
Line_4 $$ for (int i = 0; i < actual.size(); i++) -->Line_5 $$ Change actualChange = actual.get(i)[ CD ]
Line_4 $$ for (int i = 0; i < actual.size(); i++) -->Line_6 $$ GitTestChange expectedChange = expected.get(i)[ FD ]
Line_2 $$ private void assertChanges(List<Change> actual, List<GitTestChange> expected) -->Line_3 $$ assertEquals(expected.size(), actual.size())[ FD ]
Line_4 $$ for (int i = 0; i < actual.size(); i++) -->Line_6 $$ GitTestChange expectedChange = expected.get(i)[ CD ]
Line_4 $$ for (int i = 0; i < actual.size(); i++) -->Line_7 $$ assertChange(actualChange, expectedChange)[ CD ]
Line_2 $$ private void assertChanges(List<Change> actual, List<GitTestChange> expected) -->Line_5 $$ Change actualChange = actual.get(i)[ FD ]
Line_4 $$ for (int i = 0; i < actual.size(); i++) -->Line_5 $$ Change actualChange = actual.get(i)[ FD ]
