Line_7 $$ List<String> source = new LinkedList<String>()-->Line_18 $$ List<Integer> target = new ArrayList<Integer>(source.size())[ FD ]
Line_11 $$ TypeDescriptor td = new TypeDescriptor(getClass().getField("list"))-->Line_13 $$ conversionService.convert(source, TypeDescriptor.forObject(source), td)[ FD ]
Line_5 $$ StopWatch watch = new StopWatch("list<string> -> list<integer> conversionPerformance")-->Line_15 $$ watch.stop()[ FD ]
Line_17 $$ for (int i = 0; i < 4000000; i++) -->Line_18 $$ List<Integer> target = new ArrayList<Integer>(source.size())[ CD ]
Line_18 $$ List<Integer> target = new ArrayList<Integer>(source.size())-->Line_20 $$ target.add(Integer.valueOf(element))[ FD ]
Line_19 $$ for (String element : source) -->Line_20 $$ target.add(Integer.valueOf(element))[ FD ]
Line_7 $$ List<String> source = new LinkedList<String>()-->Line_13 $$ conversionService.convert(source, TypeDescriptor.forObject(source), td)[ FD ]
Line_12 $$ for (int i = 0; i < 1000000; i++) -->Line_17 $$ for (int i = 0; i < 4000000; i++) [ FD ]
Line_12 $$ for (int i = 0; i < 1000000; i++) -->Line_13 $$ conversionService.convert(source, TypeDescriptor.forObject(source), td)[ CD ]
Line_5 $$ StopWatch watch = new StopWatch("list<string> -> list<integer> conversionPerformance")-->Line_23 $$ watch.stop()[ FD ]
Line_5 $$ StopWatch watch = new StopWatch("list<string> -> list<integer> conversionPerformance")-->Line_6 $$ watch.start("convert 4,000,000 with conversion service")[ FD ]
Line_7 $$ List<String> source = new LinkedList<String>()-->Line_10 $$ source.add("3")[ FD ]
Line_5 $$ StopWatch watch = new StopWatch("list<string> -> list<integer> conversionPerformance")-->Line_16 $$ watch.start("convert 4,000,000 manually")[ FD ]
Line_7 $$ List<String> source = new LinkedList<String>()-->Line_8 $$ source.add("1")[ FD ]
Line_7 $$ List<String> source = new LinkedList<String>()-->Line_9 $$ source.add("2")[ FD ]
