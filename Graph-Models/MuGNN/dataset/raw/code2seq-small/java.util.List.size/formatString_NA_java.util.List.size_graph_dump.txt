Line_2 $$ public static String formatString(List<String>... strings) -->Line_9 $$ formatString(strings, i, buffer)[ FD ]
Line_3 $$ final StringBuilder buffer = new StringBuilder()-->Line_9 $$ formatString(strings, i, buffer)[ FD ]
Line_2 $$ public static String formatString(List<String>... strings) -->Line_3 $$ final StringBuilder buffer = new StringBuilder()[ CD ]
Line_2 $$ public static String formatString(List<String>... strings) -->Line_5 $$ if (size > 0) [ CD ]
Line_5 $$ if (size > 0) -->Line_7 $$ for (int i = 1; i < size; i++) [ CD ]
Line_7 $$ for (int i = 1; i < size; i++) -->Line_8 $$ buffer.append(',')[ CD ]
Line_4 $$ final int size = strings[0].size()-->Line_5 $$ if (size > 0) [ FD ]
Line_3 $$ final StringBuilder buffer = new StringBuilder()-->Line_6 $$ formatString(strings, 0, buffer)[ FD ]
Line_4 $$ final int size = strings[0].size()-->Line_7 $$ for (int i = 1; i < size; i++) [ FD ]
Line_2 $$ public static String formatString(List<String>... strings) -->Line_4 $$ final int size = strings[0].size()[ CD ]
Line_2 $$ public static String formatString(List<String>... strings) -->Line_6 $$ formatString(strings, 0, buffer)[ FD ]
Line_3 $$ final StringBuilder buffer = new StringBuilder()-->Line_8 $$ buffer.append(',')[ FD ]
Line_3 $$ final StringBuilder buffer = new StringBuilder()-->Line_12 $$ return buffer.toString()[ FD ]
Line_2 $$ public static String formatString(List<String>... strings) -->Line_12 $$ return buffer.toString()[ CD ]
Line_7 $$ for (int i = 1; i < size; i++) -->Line_9 $$ formatString(strings, i, buffer)[ CD ]
Line_5 $$ if (size > 0) -->Line_6 $$ formatString(strings, 0, buffer)[ CD ]
Line_7 $$ for (int i = 1; i < size; i++) -->Line_9 $$ formatString(strings, i, buffer)[ FD ]
