Line_8 $$ List<BidiRun> runList = new ArrayList<BidiRun>()-->Line_14 $$ runList.add(run.subRun(view, line, startOffset, endOffset, quickEvaluationListener))[ FD ]
Line_4 $$ final BidiRun[] runs-->Line_6 $$ runs = new BidiRun[0][ FD ]
Line_5 $$ if (startOffset == endOffset) -->Line_8 $$ List<BidiRun> runList = new ArrayList<BidiRun>()[ CD ]
Line_2 $$ Iterator<VisualFragment> getFragmentsInVisualOrder(@NotNull final EditorView view, final int line, final float startX, final int startVisualColumn, final int startOffset, int endOffset, @Nullable Runnable quickEvaluationListener) -->Line_10 $$ if (run.endOffset <= startOffset)[ FD ]
Line_8 $$ List<BidiRun> runList = new ArrayList<BidiRun>()-->Line_16 $$ runs = runList.toArray(new BidiRun[runList.size()])[ FD ]
Line_5 $$ if (startOffset == endOffset) -->Line_6 $$ runs = new BidiRun[0][ CD ]
Line_9 $$ for (BidiRun run : getRunsInLogicalOrder()) -->Line_14 $$ runList.add(run.subRun(view, line, startOffset, endOffset, quickEvaluationListener))[ FD ]
Line_5 $$ if (startOffset == endOffset) -->Line_17 $$ if (runs.length > 1) [ CD ]
Line_6 $$ runs = new BidiRun[0]-->Line_16 $$ runs = runList.toArray(new BidiRun[runList.size()])[ FD ]
Line_2 $$ Iterator<VisualFragment> getFragmentsInVisualOrder(@NotNull final EditorView view, final int line, final float startX, final int startVisualColumn, final int startOffset, int endOffset, @Nullable Runnable quickEvaluationListener) -->Line_21 $$ final int startLogicalColumn = view.getLogicalPositionCache().offsetToLogicalColumn(line, startOffset)[ CD ]
Line_2 $$ Iterator<VisualFragment> getFragmentsInVisualOrder(@NotNull final EditorView view, final int line, final float startX, final int startVisualColumn, final int startOffset, int endOffset, @Nullable Runnable quickEvaluationListener) -->Line_4 $$ final BidiRun[] runs[ CD ]
Line_2 $$ Iterator<VisualFragment> getFragmentsInVisualOrder(@NotNull final EditorView view, final int line, final float startX, final int startVisualColumn, final int startOffset, int endOffset, @Nullable Runnable quickEvaluationListener) -->Line_22 $$ return new VisualOrderIterator(view, line, startX, startVisualColumn, startLogicalColumn, startOffset, runs)[ CD ]
Line_6 $$ runs = new BidiRun[0]-->Line_18 $$ reorderRunsVisually(runs)[ FD ]
Line_2 $$ Iterator<VisualFragment> getFragmentsInVisualOrder(@NotNull final EditorView view, final int line, final float startX, final int startVisualColumn, final int startOffset, int endOffset, @Nullable Runnable quickEvaluationListener) -->Line_12 $$ if (run.startOffset >= endOffset)[ FD ]
Line_2 $$ Iterator<VisualFragment> getFragmentsInVisualOrder(@NotNull final EditorView view, final int line, final float startX, final int startVisualColumn, final int startOffset, int endOffset, @Nullable Runnable quickEvaluationListener) -->Line_5 $$ if (startOffset == endOffset) [ CD ]
Line_4 $$ final BidiRun[] runs-->Line_18 $$ reorderRunsVisually(runs)[ FD ]
Line_2 $$ Iterator<VisualFragment> getFragmentsInVisualOrder(@NotNull final EditorView view, final int line, final float startX, final int startVisualColumn, final int startOffset, int endOffset, @Nullable Runnable quickEvaluationListener) -->Line_21 $$ final int startLogicalColumn = view.getLogicalPositionCache().offsetToLogicalColumn(line, startOffset)[ FD ]
Line_4 $$ final BidiRun[] runs-->Line_16 $$ runs = runList.toArray(new BidiRun[runList.size()])[ FD ]
Line_2 $$ Iterator<VisualFragment> getFragmentsInVisualOrder(@NotNull final EditorView view, final int line, final float startX, final int startVisualColumn, final int startOffset, int endOffset, @Nullable Runnable quickEvaluationListener) -->Line_5 $$ if (startOffset == endOffset) [ FD ]
Line_17 $$ if (runs.length > 1) -->Line_18 $$ reorderRunsVisually(runs)[ CD ]
Line_16 $$ runs = runList.toArray(new BidiRun[runList.size()])-->Line_18 $$ reorderRunsVisually(runs)[ FD ]
Line_5 $$ if (startOffset == endOffset) -->Line_16 $$ runs = runList.toArray(new BidiRun[runList.size()])[ CD ]
Line_2 $$ Iterator<VisualFragment> getFragmentsInVisualOrder(@NotNull final EditorView view, final int line, final float startX, final int startVisualColumn, final int startOffset, int endOffset, @Nullable Runnable quickEvaluationListener) -->Line_14 $$ runList.add(run.subRun(view, line, startOffset, endOffset, quickEvaluationListener))[ FD ]
