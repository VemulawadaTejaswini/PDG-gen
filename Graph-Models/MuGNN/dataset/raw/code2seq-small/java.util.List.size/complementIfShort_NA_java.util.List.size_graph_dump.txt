Line_6 $$ final BeforeAfter<List<String>> first = steps.get(0)-->Line_21 $$ first.getBefore().add(firstContext)[ FD ]
Line_19 $$ if (!contextAfter.isEmpty()) -->Line_21 $$ first.getBefore().add(firstContext)[ CD ]
Line_2 $$ private boolean complementIfShort(final SplitHunk hunk) -->Line_10 $$ final List<String> contextBefore = hunk.getContextBefore()[ FD ]
Line_12 $$ final String firstContext = contextBefore.get(contextBefore.size() - 1)-->Line_13 $$ first.getBefore().add(0, firstContext)[ FD ]
Line_10 $$ final List<String> contextBefore = hunk.getContextBefore()-->Line_12 $$ final String firstContext = contextBefore.get(contextBefore.size() - 1)[ FD ]
Line_18 $$ final List<String> contextAfter = hunk.getContextAfter()-->Line_23 $$ contextAfter.remove(0)[ FD ]
Line_12 $$ final String firstContext = contextBefore.get(contextBefore.size() - 1)-->Line_21 $$ first.getBefore().add(firstContext)[ FD ]
Line_3 $$ final List<BeforeAfter<List<String>>> steps = hunk.getPatchSteps()-->Line_4 $$ if (steps.size() > 1)[ FD ]
Line_18 $$ final List<String> contextAfter = hunk.getContextAfter()-->Line_19 $$ if (!contextAfter.isEmpty()) [ FD ]
Line_11 $$ if (!contextBefore.isEmpty()) -->Line_12 $$ final String firstContext = contextBefore.get(contextBefore.size() - 1)[ CD ]
Line_7 $$ final boolean complementFirst = first.getBefore().isEmpty() || first.getAfter().isEmpty() || first.getBefore().size() == 1 || first.getAfter().size() == 1-->Line_8 $$ if (!complementFirst)[ FD ]
Line_10 $$ final List<String> contextBefore = hunk.getContextBefore()-->Line_11 $$ if (!contextBefore.isEmpty()) [ FD ]
Line_4 $$ if (steps.size() > 1)-->Line_5 $$ return false[ CD ]
Line_2 $$ private boolean complementIfShort(final SplitHunk hunk) -->Line_19 $$ if (!contextAfter.isEmpty()) [ CD ]
Line_11 $$ if (!contextBefore.isEmpty()) -->Line_15 $$ contextBefore.remove(contextBefore.size() - 1)[ CD ]
Line_19 $$ if (!contextAfter.isEmpty()) -->Line_23 $$ contextAfter.remove(0)[ CD ]
Line_12 $$ final String firstContext = contextBefore.get(contextBefore.size() - 1)-->Line_22 $$ first.getAfter().add(firstContext)[ FD ]
Line_11 $$ if (!contextBefore.isEmpty()) -->Line_13 $$ first.getBefore().add(0, firstContext)[ CD ]
Line_6 $$ final BeforeAfter<List<String>> first = steps.get(0)-->Line_14 $$ first.getAfter().add(0, firstContext)[ FD ]
Line_6 $$ final BeforeAfter<List<String>> first = steps.get(0)-->Line_7 $$ final boolean complementFirst = first.getBefore().isEmpty() || first.getAfter().isEmpty() || first.getBefore().size() == 1 || first.getAfter().size() == 1[ FD ]
Line_2 $$ private boolean complementIfShort(final SplitHunk hunk) -->Line_18 $$ final List<String> contextAfter = hunk.getContextAfter()[ FD ]
Line_2 $$ private boolean complementIfShort(final SplitHunk hunk) -->Line_3 $$ final List<BeforeAfter<List<String>>> steps = hunk.getPatchSteps()[ FD ]
Line_19 $$ if (!contextAfter.isEmpty()) -->Line_22 $$ first.getAfter().add(firstContext)[ CD ]
Line_12 $$ final String firstContext = contextBefore.get(contextBefore.size() - 1)-->Line_14 $$ first.getAfter().add(0, firstContext)[ FD ]
Line_2 $$ private boolean complementIfShort(final SplitHunk hunk) -->Line_7 $$ final boolean complementFirst = first.getBefore().isEmpty() || first.getAfter().isEmpty() || first.getBefore().size() == 1 || first.getAfter().size() == 1[ CD ]
Line_2 $$ private boolean complementIfShort(final SplitHunk hunk) -->Line_10 $$ final List<String> contextBefore = hunk.getContextBefore()[ CD ]
Line_2 $$ private boolean complementIfShort(final SplitHunk hunk) -->Line_11 $$ if (!contextBefore.isEmpty()) [ CD ]
Line_11 $$ if (!contextBefore.isEmpty()) -->Line_14 $$ first.getAfter().add(0, firstContext)[ CD ]
Line_6 $$ final BeforeAfter<List<String>> first = steps.get(0)-->Line_13 $$ first.getBefore().add(0, firstContext)[ FD ]
Line_2 $$ private boolean complementIfShort(final SplitHunk hunk) -->Line_18 $$ final List<String> contextAfter = hunk.getContextAfter()[ CD ]
Line_2 $$ private boolean complementIfShort(final SplitHunk hunk) -->Line_8 $$ if (!complementFirst)[ CD ]
Line_3 $$ final List<BeforeAfter<List<String>>> steps = hunk.getPatchSteps()-->Line_6 $$ final BeforeAfter<List<String>> first = steps.get(0)[ FD ]
Line_10 $$ final List<String> contextBefore = hunk.getContextBefore()-->Line_15 $$ contextBefore.remove(contextBefore.size() - 1)[ FD ]
Line_19 $$ if (!contextAfter.isEmpty()) -->Line_20 $$ final String firstContext = contextAfter.get(0)[ CD ]
Line_18 $$ final List<String> contextAfter = hunk.getContextAfter()-->Line_20 $$ final String firstContext = contextAfter.get(0)[ FD ]
Line_2 $$ private boolean complementIfShort(final SplitHunk hunk) -->Line_3 $$ final List<BeforeAfter<List<String>>> steps = hunk.getPatchSteps()[ CD ]
Line_2 $$ private boolean complementIfShort(final SplitHunk hunk) -->Line_4 $$ if (steps.size() > 1)[ CD ]
Line_8 $$ if (!complementFirst)-->Line_9 $$ return false[ CD ]
Line_2 $$ private boolean complementIfShort(final SplitHunk hunk) -->Line_6 $$ final BeforeAfter<List<String>> first = steps.get(0)[ CD ]
Line_11 $$ if (!contextBefore.isEmpty()) -->Line_16 $$ return true[ CD ]
Line_2 $$ private boolean complementIfShort(final SplitHunk hunk) -->Line_26 $$ return false[ CD ]
Line_6 $$ final BeforeAfter<List<String>> first = steps.get(0)-->Line_22 $$ first.getAfter().add(firstContext)[ FD ]
Line_19 $$ if (!contextAfter.isEmpty()) -->Line_24 $$ return true[ CD ]
