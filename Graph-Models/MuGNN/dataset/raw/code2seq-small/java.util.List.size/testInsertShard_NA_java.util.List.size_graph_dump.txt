Line_7 $$ List<Map<String, Object>> shards = dbi.withHandle( handle -> handle.select(sql, shardId))-->Line_8 $$ assertEquals(shards.size(), 1)[ FD ]
Line_4 $$ long tableId = createTable("test")-->Line_5 $$ long shardId = dao.insertShard(UUID.randomUUID(), tableId, 13, 42, 84)[ FD ]
Line_7 $$ List<Map<String, Object>> shards = dbi.withHandle( handle -> handle.select(sql, shardId))-->Line_9 $$ Map<String, Object> shard = shards.get(0)[ FD ]
Line_4 $$ long tableId = createTable("test")-->Line_10 $$ assertEquals(shard.get("table_id"), tableId)[ FD ]
Line_5 $$ long shardId = dao.insertShard(UUID.randomUUID(), tableId, 13, 42, 84)-->Line_7 $$ handle.select(sql, shardId)[ FD ]
Line_6 $$ String sql = "SELECT table_id, row_count, compressed_size, uncompressed_size " + "FROM shards WHERE shard_id = ?"-->Line_7 $$ handle.select(sql, shardId)[ FD ]
Line_9 $$ Map<String, Object> shard = shards.get(0)-->Line_11 $$ assertEquals(shard.get("row_count"), 13L)[ FD ]
Line_9 $$ Map<String, Object> shard = shards.get(0)-->Line_13 $$ assertEquals(shard.get("uncompressed_size"), 84L)[ FD ]
Line_9 $$ Map<String, Object> shard = shards.get(0)-->Line_12 $$ assertEquals(shard.get("compressed_size"), 42L)[ FD ]
Line_9 $$ Map<String, Object> shard = shards.get(0)-->Line_10 $$ assertEquals(shard.get("table_id"), tableId)[ FD ]
