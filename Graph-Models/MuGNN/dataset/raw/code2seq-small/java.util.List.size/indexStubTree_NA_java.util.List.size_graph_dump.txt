Line_5 $$ for (int i = 0, plainListSize = plainList.size(); i < plainListSize; i++) -->Line_6 $$ final Stub stub = plainList.get(i)[ FD ]
Line_5 $$ for (int i = 0, plainListSize = plainList.size(); i < plainListSize; i++) -->Line_7 $$ sink.myStubIdx = i[ CD ]
Line_2 $$ public Map<StubIndexKey, Map<Object, int[]>> indexStubTree() -->Line_4 $$ final List<T> plainList = getPlainListFromAllRoots()[ CD ]
Line_4 $$ final List<T> plainList = getPlainListFromAllRoots()-->Line_5 $$ for (int i = 0, plainListSize = plainList.size(); i < plainListSize; i++) [ FD ]
Line_5 $$ for (int i = 0, plainListSize = plainList.size(); i < plainListSize; i++) -->Line_7 $$ sink.myStubIdx = i[ FD ]
Line_3 $$ StubIndexSink sink = new StubIndexSink()-->Line_8 $$ StubSerializationUtil.getSerializer(stub).indexStub(stub, sink)[ FD ]
Line_3 $$ StubIndexSink sink = new StubIndexSink()-->Line_10 $$ return sink.getResult()[ FD ]
Line_2 $$ public Map<StubIndexKey, Map<Object, int[]>> indexStubTree() -->Line_3 $$ StubIndexSink sink = new StubIndexSink()[ CD ]
Line_2 $$ public Map<StubIndexKey, Map<Object, int[]>> indexStubTree() -->Line_5 $$ for (int i = 0, plainListSize = plainList.size(); i < plainListSize; i++) [ CD ]
Line_5 $$ for (int i = 0, plainListSize = plainList.size(); i < plainListSize; i++) -->Line_8 $$ StubSerializationUtil.getSerializer(stub).indexStub(stub, sink)[ CD ]
Line_5 $$ for (int i = 0, plainListSize = plainList.size(); i < plainListSize; i++) -->Line_6 $$ final Stub stub = plainList.get(i)[ CD ]
Line_4 $$ final List<T> plainList = getPlainListFromAllRoots()-->Line_6 $$ final Stub stub = plainList.get(i)[ FD ]
Line_2 $$ public Map<StubIndexKey, Map<Object, int[]>> indexStubTree() -->Line_10 $$ return sink.getResult()[ CD ]
Line_6 $$ final Stub stub = plainList.get(i)-->Line_8 $$ StubSerializationUtil.getSerializer(stub).indexStub(stub, sink)[ FD ]
