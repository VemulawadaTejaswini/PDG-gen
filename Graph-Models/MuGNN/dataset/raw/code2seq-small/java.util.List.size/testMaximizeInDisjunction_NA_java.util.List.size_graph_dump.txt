Line_2 $$ public void testMaximizeInDisjunction() -->Line_9 $$ List<?> beforeDeletionRevisions = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, false, false).add(disjunction).addOrder(AuditEntity.property("id").asc()).getResultList()[ CD ]
Line_2 $$ public void testMaximizeInDisjunction() -->Line_4 $$ AuditDisjunction disjunction = AuditEntity.disjunction()[ CD ]
Line_2 $$ public void testMaximizeInDisjunction() -->Line_18 $$ Assert.assertEquals(RevisionType.ADD, result2[2])[ CD ]
Line_2 $$ public void testMaximizeInDisjunction() -->Line_11 $$ Object[] result1 = (Object[]) beforeDeletionRevisions.get(0)[ CD ]
Line_2 $$ public void testMaximizeInDisjunction() -->Line_14 $$ Assert.assertEquals(3, ((SequenceIdRevisionEntity) result1[1]).getId())[ CD ]
Line_2 $$ public void testMaximizeInDisjunction() -->Line_12 $$ Object[] result2 = (Object[]) beforeDeletionRevisions.get(1)[ CD ]
Line_2 $$ public void testMaximizeInDisjunction() -->Line_17 $$ Assert.assertEquals(3, ((SequenceIdRevisionEntity) result2[1]).getId())[ CD ]
Line_2 $$ public void testMaximizeInDisjunction() -->Line_13 $$ Assert.assertEquals(new StrIntTestEntity("b", 20, id2), result1[0])[ CD ]
Line_2 $$ public void testMaximizeInDisjunction() -->Line_15 $$ Assert.assertEquals(RevisionType.ADD, result1[2])[ CD ]
Line_4 $$ AuditDisjunction disjunction = AuditEntity.disjunction()-->Line_9 $$ List<?> beforeDeletionRevisions = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, false, false).add(disjunction).addOrder(AuditEntity.property("id").asc()).getResultList()[ FD ]
Line_2 $$ public void testMaximizeInDisjunction() -->Line_16 $$ Assert.assertEquals(new StrIntTestEntity("c", 30, id3), result2[0])[ CD ]
Line_4 $$ AuditDisjunction disjunction = AuditEntity.disjunction()-->Line_7 $$ disjunction.add(crit)[ FD ]
Line_2 $$ public void testMaximizeInDisjunction() -->Line_10 $$ Assert.assertEquals(2, beforeDeletionRevisions.size())[ CD ]
Line_9 $$ List<?> beforeDeletionRevisions = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, false, false).add(disjunction).addOrder(AuditEntity.property("id").asc()).getResultList()-->Line_10 $$ Assert.assertEquals(2, beforeDeletionRevisions.size())[ FD ]
Line_2 $$ public void testMaximizeInDisjunction() -->Line_3 $$ List<Integer> queryIds = Arrays.asList(id2, id3)[ CD ]
Line_5 $$ for (Integer id : queryIds) -->Line_6 $$ AuditCriterion crit = AuditEntity.revisionNumber().maximize().add(AuditEntity.id().eq(id)).add(AuditEntity.revisionType().ne(RevisionType.DEL))[ FD ]
Line_6 $$ AuditCriterion crit = AuditEntity.revisionNumber().maximize().add(AuditEntity.id().eq(id)).add(AuditEntity.revisionType().ne(RevisionType.DEL))-->Line_7 $$ disjunction.add(crit)[ FD ]
Line_9 $$ List<?> beforeDeletionRevisions = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, false, false).add(disjunction).addOrder(AuditEntity.property("id").asc()).getResultList()-->Line_12 $$ Object[] result2 = (Object[]) beforeDeletionRevisions.get(1)[ FD ]
Line_9 $$ List<?> beforeDeletionRevisions = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, false, false).add(disjunction).addOrder(AuditEntity.property("id").asc()).getResultList()-->Line_11 $$ Object[] result1 = (Object[]) beforeDeletionRevisions.get(0)[ FD ]
