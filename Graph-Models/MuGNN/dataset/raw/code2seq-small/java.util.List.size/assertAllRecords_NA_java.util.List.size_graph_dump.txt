Line_4 $$ for (int i = 0; i < actualRecords.size(); i++) -->Line_5 $$ assertRecord(actualRecords.get(i), expectedRecords.get(i), nameStatusOption)[ CD ]
Line_2 $$ private void assertAllRecords(List<GitLogRecord> actualRecords, List<GitTestLogRecord> expectedRecords, NameStatus nameStatusOption) throws VcsException -->Line_3 $$ assertEquals(actualRecords.size(), expectedRecords.size())[ CD ]
Line_2 $$ private void assertAllRecords(List<GitLogRecord> actualRecords, List<GitTestLogRecord> expectedRecords, NameStatus nameStatusOption) throws VcsException -->Line_5 $$ assertRecord(actualRecords.get(i), expectedRecords.get(i), nameStatusOption)[ FD ]
Line_2 $$ private void assertAllRecords(List<GitLogRecord> actualRecords, List<GitTestLogRecord> expectedRecords, NameStatus nameStatusOption) throws VcsException -->Line_4 $$ for (int i = 0; i < actualRecords.size(); i++) [ CD ]
Line_2 $$ private void assertAllRecords(List<GitLogRecord> actualRecords, List<GitTestLogRecord> expectedRecords, NameStatus nameStatusOption) throws VcsException -->Line_3 $$ assertEquals(actualRecords.size(), expectedRecords.size())[ FD ]
Line_2 $$ private void assertAllRecords(List<GitLogRecord> actualRecords, List<GitTestLogRecord> expectedRecords, NameStatus nameStatusOption) throws VcsException -->Line_4 $$ for (int i = 0; i < actualRecords.size(); i++) [ FD ]
Line_4 $$ for (int i = 0; i < actualRecords.size(); i++) -->Line_5 $$ assertRecord(actualRecords.get(i), expectedRecords.get(i), nameStatusOption)[ FD ]
