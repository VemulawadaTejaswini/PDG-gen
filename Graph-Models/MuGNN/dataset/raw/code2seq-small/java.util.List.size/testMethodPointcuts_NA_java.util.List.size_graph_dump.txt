Line_3 $$ ITestBean tb = (ITestBean) factory.getBean("pointcuts")-->Line_8 $$ tb.setAge(1)[ FD ]
Line_3 $$ ITestBean tb = (ITestBean) factory.getBean("pointcuts")-->Line_9 $$ tb.getAge()[ FD ]
Line_2 $$ public void testMethodPointcuts() -->Line_13 $$ assertTrue(PointcutForVoid.methodNames.get(0).equals("setAge"))[ CD ]
Line_2 $$ public void testMethodPointcuts() -->Line_5 $$ assertTrue("No methods intercepted", PointcutForVoid.methodNames.isEmpty())[ CD ]
Line_3 $$ ITestBean tb = (ITestBean) factory.getBean("pointcuts")-->Line_6 $$ tb.getAge()[ FD ]
Line_2 $$ public void testMethodPointcuts() -->Line_7 $$ assertTrue("Not void: shouldn't have intercepted", PointcutForVoid.methodNames.isEmpty())[ CD ]
Line_3 $$ ITestBean tb = (ITestBean) factory.getBean("pointcuts")-->Line_10 $$ tb.setName("Tristan")[ FD ]
Line_2 $$ public void testMethodPointcuts() -->Line_12 $$ assertEquals("Recorded wrong number of invocations", 2, PointcutForVoid.methodNames.size())[ CD ]
Line_3 $$ ITestBean tb = (ITestBean) factory.getBean("pointcuts")-->Line_11 $$ tb.toString()[ FD ]
Line_2 $$ public void testMethodPointcuts() -->Line_4 $$ PointcutForVoid.reset()[ CD ]
Line_2 $$ public void testMethodPointcuts() -->Line_8 $$ tb.setAge(1)[ CD ]
Line_2 $$ public void testMethodPointcuts() -->Line_9 $$ tb.getAge()[ CD ]
Line_2 $$ public void testMethodPointcuts() -->Line_14 $$ assertTrue(PointcutForVoid.methodNames.get(1).equals("setName"))[ CD ]
Line_2 $$ public void testMethodPointcuts() -->Line_10 $$ tb.setName("Tristan")[ CD ]
Line_2 $$ public void testMethodPointcuts() -->Line_11 $$ tb.toString()[ CD ]
Line_2 $$ public void testMethodPointcuts() -->Line_3 $$ ITestBean tb = (ITestBean) factory.getBean("pointcuts")[ CD ]
Line_2 $$ public void testMethodPointcuts() -->Line_6 $$ tb.getAge()[ CD ]
