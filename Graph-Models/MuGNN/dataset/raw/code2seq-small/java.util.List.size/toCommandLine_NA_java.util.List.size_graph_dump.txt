Line_11 $$ if (parameter.contains("\"")) -->Line_13 $$ if (parameter.isEmpty()) [ CD ]
Line_14 $$ parameter = "\"\""-->Line_23 $$ commandLine.add(parameter)[ FD ]
Line_12 $$ parameter = StringUtil.replace(parameter, "\"", "\\\"")-->Line_14 $$ parameter = "\"\""[ FD ]
Line_20 $$ if (isQuoted(parameter, SPECIAL_QUOTE)) -->Line_21 $$ parameter = quote(parameter.substring(1, parameter.length() - 1), '"')[ CD ]
Line_17 $$ if (winShell && StringUtil.containsAnyChar(parameter, WIN_SHELL_SPECIALS)) -->Line_18 $$ parameter = quote(parameter, SPECIAL_QUOTE)[ CD ]
Line_9 $$ for (String parameter : parameters) -->Line_14 $$ parameter = "\"\""[ FD ]
Line_9 $$ for (String parameter : parameters) -->Line_12 $$ parameter = StringUtil.replace(parameter, "\"", "\\\"")[ FD ]
Line_5 $$ List<String> commandLine = ContainerUtil.newArrayListWithCapacity(parameters.size() + 1)-->Line_23 $$ commandLine.add(parameter)[ FD ]
Line_12 $$ parameter = StringUtil.replace(parameter, "\"", "\\\"")-->Line_23 $$ commandLine.add(parameter)[ FD ]
Line_9 $$ for (String parameter : parameters) -->Line_11 $$ if (parameter.contains("\"")) [ FD ]
Line_14 $$ parameter = "\"\""-->Line_20 $$ if (isQuoted(parameter, SPECIAL_QUOTE)) [ FD ]
Line_9 $$ for (String parameter : parameters) -->Line_23 $$ commandLine.add(parameter)[ FD ]
Line_21 $$ parameter = quote(parameter.substring(1, parameter.length() - 1), '"')-->Line_23 $$ commandLine.add(parameter)[ FD ]
Line_12 $$ parameter = StringUtil.replace(parameter, "\"", "\\\"")-->Line_20 $$ if (isQuoted(parameter, SPECIAL_QUOTE)) [ FD ]
Line_18 $$ parameter = quote(parameter, SPECIAL_QUOTE)-->Line_21 $$ parameter = quote(parameter.substring(1, parameter.length() - 1), '"')[ FD ]
Line_8 $$ boolean winShell = isWindows && isWinShell(command)-->Line_17 $$ if (winShell && StringUtil.containsAnyChar(parameter, WIN_SHELL_SPECIALS)) [ FD ]
Line_9 $$ for (String parameter : parameters) -->Line_17 $$ if (winShell && StringUtil.containsAnyChar(parameter, WIN_SHELL_SPECIALS)) [ FD ]
Line_9 $$ for (String parameter : parameters) -->Line_18 $$ parameter = quote(parameter, SPECIAL_QUOTE)[ FD ]
Line_13 $$ if (parameter.isEmpty()) -->Line_14 $$ parameter = "\"\""[ CD ]
Line_9 $$ for (String parameter : parameters) -->Line_20 $$ if (isQuoted(parameter, SPECIAL_QUOTE)) [ FD ]
Line_12 $$ parameter = StringUtil.replace(parameter, "\"", "\\\"")-->Line_18 $$ parameter = quote(parameter, SPECIAL_QUOTE)[ FD ]
Line_9 $$ for (String parameter : parameters) -->Line_21 $$ parameter = quote(parameter.substring(1, parameter.length() - 1), '"')[ FD ]
Line_14 $$ parameter = "\"\""-->Line_17 $$ if (winShell && StringUtil.containsAnyChar(parameter, WIN_SHELL_SPECIALS)) [ FD ]
Line_14 $$ parameter = "\"\""-->Line_18 $$ parameter = quote(parameter, SPECIAL_QUOTE)[ FD ]
Line_11 $$ if (parameter.contains("\"")) -->Line_12 $$ parameter = StringUtil.replace(parameter, "\"", "\\\"")[ CD ]
Line_5 $$ List<String> commandLine = ContainerUtil.newArrayListWithCapacity(parameters.size() + 1)-->Line_6 $$ commandLine.add(FileUtilRt.toSystemDependentName(command, platform.fileSeparator))[ FD ]
Line_18 $$ parameter = quote(parameter, SPECIAL_QUOTE)-->Line_20 $$ if (isQuoted(parameter, SPECIAL_QUOTE)) [ FD ]
Line_14 $$ parameter = "\"\""-->Line_21 $$ parameter = quote(parameter.substring(1, parameter.length() - 1), '"')[ FD ]
Line_18 $$ parameter = quote(parameter, SPECIAL_QUOTE)-->Line_23 $$ commandLine.add(parameter)[ FD ]
Line_12 $$ parameter = StringUtil.replace(parameter, "\"", "\\\"")-->Line_13 $$ if (parameter.isEmpty()) [ FD ]
Line_10 $$ if (isWindows) -->Line_11 $$ if (parameter.contains("\"")) [ CD ]
Line_12 $$ parameter = StringUtil.replace(parameter, "\"", "\\\"")-->Line_17 $$ if (winShell && StringUtil.containsAnyChar(parameter, WIN_SHELL_SPECIALS)) [ FD ]
Line_9 $$ for (String parameter : parameters) -->Line_13 $$ if (parameter.isEmpty()) [ FD ]
Line_12 $$ parameter = StringUtil.replace(parameter, "\"", "\\\"")-->Line_21 $$ parameter = quote(parameter.substring(1, parameter.length() - 1), '"')[ FD ]
