Line_9 $$ if (attributeNames.size() < 1) -->Line_11 $$ if (attributeNames.size() > 1) [ CD ]
Line_2 $$ protected static void validateHasPrimaryAttributeName(Element element, List<String> multiplePrimaryAttributeNames, List<String> primaryAttributeNames, String filePath) -->Line_12 $$ if (Validator.isNull(multiplePrimaryAttributeNames)) [ FD ]
Line_4 $$ for (String primaryAttributeName : primaryAttributeNames) -->Line_5 $$ if (Validator.isNotNull(element.attributeValue(primaryAttributeName))) [ FD ]
Line_3 $$ List<String> attributeNames = new ArrayList()-->Line_11 $$ if (attributeNames.size() > 1) [ FD ]
Line_5 $$ if (Validator.isNotNull(element.attributeValue(primaryAttributeName))) -->Line_6 $$ attributeNames.add(primaryAttributeName)[ CD ]
Line_12 $$ if (Validator.isNull(multiplePrimaryAttributeNames)) -->Line_13 $$ _exceptions.add(new Exception("Too many attributes\n" + filePath + ":" + element.attributeValue("line-number")))[ CD ]
Line_2 $$ protected static void validateHasPrimaryAttributeName(Element element, List<String> multiplePrimaryAttributeNames, List<String> primaryAttributeNames, String filePath) -->Line_5 $$ if (Validator.isNotNull(element.attributeValue(primaryAttributeName))) [ FD ]
Line_2 $$ protected static void validateHasPrimaryAttributeName(Element element, List<String> multiplePrimaryAttributeNames, List<String> primaryAttributeNames, String filePath) -->Line_15 $$ validateHasMultiplePrimaryAttributeNames(element, attributeNames, multiplePrimaryAttributeNames, filePath)[ FD ]
Line_4 $$ for (String primaryAttributeName : primaryAttributeNames) -->Line_6 $$ attributeNames.add(primaryAttributeName)[ FD ]
Line_3 $$ List<String> attributeNames = new ArrayList()-->Line_6 $$ attributeNames.add(primaryAttributeName)[ FD ]
Line_12 $$ if (Validator.isNull(multiplePrimaryAttributeNames)) -->Line_15 $$ validateHasMultiplePrimaryAttributeNames(element, attributeNames, multiplePrimaryAttributeNames, filePath)[ CD ]
Line_9 $$ if (attributeNames.size() < 1) -->Line_10 $$ _exceptions.add(new Exception("Invalid or missing attribute\n" + filePath + ":" + element.attributeValue("line-number")))[ CD ]
Line_2 $$ protected static void validateHasPrimaryAttributeName(Element element, List<String> multiplePrimaryAttributeNames, List<String> primaryAttributeNames, String filePath) -->Line_3 $$ List<String> attributeNames = new ArrayList()[ CD ]
Line_2 $$ protected static void validateHasPrimaryAttributeName(Element element, List<String> multiplePrimaryAttributeNames, List<String> primaryAttributeNames, String filePath) -->Line_10 $$ _exceptions.add(new Exception("Invalid or missing attribute\n" + filePath + ":" + element.attributeValue("line-number")))[ FD ]
Line_11 $$ if (attributeNames.size() > 1) -->Line_12 $$ if (Validator.isNull(multiplePrimaryAttributeNames)) [ CD ]
Line_2 $$ protected static void validateHasPrimaryAttributeName(Element element, List<String> multiplePrimaryAttributeNames, List<String> primaryAttributeNames, String filePath) -->Line_9 $$ if (attributeNames.size() < 1) [ CD ]
Line_3 $$ List<String> attributeNames = new ArrayList()-->Line_9 $$ if (attributeNames.size() < 1) [ FD ]
Line_2 $$ protected static void validateHasPrimaryAttributeName(Element element, List<String> multiplePrimaryAttributeNames, List<String> primaryAttributeNames, String filePath) -->Line_13 $$ _exceptions.add(new Exception("Too many attributes\n" + filePath + ":" + element.attributeValue("line-number")))[ FD ]
Line_3 $$ List<String> attributeNames = new ArrayList()-->Line_15 $$ validateHasMultiplePrimaryAttributeNames(element, attributeNames, multiplePrimaryAttributeNames, filePath)[ FD ]
