Line_5 $$ s = openSession()-->Line_6 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_9 $$ Supplier emi = new Supplier()[ CD ]
Line_4 $$ Transaction tx-->Line_16 $$ tx.commit()[ FD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_23 $$ s.close()[ CD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_20 $$ List result = s.createCriteria(Supplier.class).createAlias("suppStores", "s").add(Restrictions.eq("s.name", "Fnac")).list()[ CD ]
Line_18 $$ s = openSession()-->Line_20 $$ List result = s.createCriteria(Supplier.class).createAlias("suppStores", "s").add(Restrictions.eq("s.name", "Fnac")).list()[ FD ]
Line_19 $$ tx = s.beginTransaction()-->Line_22 $$ tx.commit()[ FD ]
Line_5 $$ s = openSession()-->Line_15 $$ s.persist(fnac)[ FD ]
Line_6 $$ tx = s.beginTransaction()-->Line_22 $$ tx.commit()[ FD ]
Line_5 $$ s = openSession()-->Line_17 $$ s.close()[ FD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_13 $$ fnac.getSuppliers().add(emi)[ CD ]
Line_9 $$ Supplier emi = new Supplier()-->Line_10 $$ emi.setName("Emmanuel")[ FD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_14 $$ emi.getSuppStores().add(fnac)[ CD ]
Line_9 $$ Supplier emi = new Supplier()-->Line_14 $$ emi.getSuppStores().add(fnac)[ FD ]
Line_4 $$ Transaction tx-->Line_6 $$ tx = s.beginTransaction()[ FD ]
Line_3 $$ Session s-->Line_20 $$ List result = s.createCriteria(Supplier.class).createAlias("suppStores", "s").add(Restrictions.eq("s.name", "Fnac")).list()[ FD ]
Line_3 $$ Session s-->Line_6 $$ tx = s.beginTransaction()[ FD ]
Line_9 $$ Supplier emi = new Supplier()-->Line_11 $$ emi.setSuppStores(new HashSet<Store>())[ FD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_16 $$ tx.commit()[ CD ]
Line_6 $$ tx = s.beginTransaction()-->Line_19 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_12 $$ fnac.setSuppliers(new HashSet<Supplier>())[ CD ]
Line_6 $$ tx = s.beginTransaction()-->Line_16 $$ tx.commit()[ FD ]
Line_7 $$ Store fnac = new Store()-->Line_13 $$ fnac.getSuppliers().add(emi)[ FD ]
Line_5 $$ s = openSession()-->Line_18 $$ s = openSession()[ FD ]
Line_20 $$ List result = s.createCriteria(Supplier.class).createAlias("suppStores", "s").add(Restrictions.eq("s.name", "Fnac")).list()-->Line_21 $$ assertEquals(1, result.size())[ FD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_19 $$ tx = s.beginTransaction()[ CD ]
Line_3 $$ Session s-->Line_5 $$ s = openSession()[ FD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_11 $$ emi.setSuppStores(new HashSet<Store>())[ CD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_22 $$ tx.commit()[ CD ]
Line_3 $$ Session s-->Line_19 $$ tx = s.beginTransaction()[ FD ]
Line_7 $$ Store fnac = new Store()-->Line_12 $$ fnac.setSuppliers(new HashSet<Supplier>())[ FD ]
Line_18 $$ s = openSession()-->Line_19 $$ tx = s.beginTransaction()[ FD ]
Line_4 $$ Transaction tx-->Line_19 $$ tx = s.beginTransaction()[ FD ]
Line_7 $$ Store fnac = new Store()-->Line_14 $$ emi.getSuppStores().add(fnac)[ FD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_6 $$ tx = s.beginTransaction()[ CD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_5 $$ s = openSession()[ CD ]
Line_9 $$ Supplier emi = new Supplier()-->Line_13 $$ fnac.getSuppliers().add(emi)[ FD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_3 $$ Session s[ CD ]
Line_7 $$ Store fnac = new Store()-->Line_8 $$ fnac.setName("Fnac")[ FD ]
Line_3 $$ Session s-->Line_18 $$ s = openSession()[ FD ]
Line_3 $$ Session s-->Line_15 $$ s.persist(fnac)[ FD ]
Line_18 $$ s = openSession()-->Line_23 $$ s.close()[ FD ]
Line_3 $$ Session s-->Line_17 $$ s.close()[ FD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_17 $$ s.close()[ CD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_18 $$ s = openSession()[ CD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_7 $$ Store fnac = new Store()[ CD ]
Line_7 $$ Store fnac = new Store()-->Line_15 $$ s.persist(fnac)[ FD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_21 $$ assertEquals(1, result.size())[ CD ]
Line_4 $$ Transaction tx-->Line_22 $$ tx.commit()[ FD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_10 $$ emi.setName("Emmanuel")[ CD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_4 $$ Transaction tx[ CD ]
Line_5 $$ s = openSession()-->Line_20 $$ List result = s.createCriteria(Supplier.class).createAlias("suppStores", "s").add(Restrictions.eq("s.name", "Fnac")).list()[ FD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_15 $$ s.persist(fnac)[ CD ]
Line_2 $$ public void testCanUseCriteriaQuery() throws Exception -->Line_8 $$ fnac.setName("Fnac")[ CD ]
Line_3 $$ Session s-->Line_23 $$ s.close()[ FD ]
Line_5 $$ s = openSession()-->Line_23 $$ s.close()[ FD ]
Line_5 $$ s = openSession()-->Line_19 $$ tx = s.beginTransaction()[ FD ]
