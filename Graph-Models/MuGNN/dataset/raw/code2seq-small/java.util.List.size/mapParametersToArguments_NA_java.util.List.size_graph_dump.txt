Line_2 $$ private static ArgInfo<PsiElement>[] mapParametersToArguments(@NotNull GrClosureSignature signature, @NotNull List<InnerArg> innerArgs, boolean hasNamedArgs, boolean partial, @NotNull PsiElement context) -->Line_16 $$ for (; i < innerMap.length; i++) [ CD ]
Line_12 $$ if (hasNamedArgs) -->Line_13 $$ map[i] = new ArgInfo<PsiElement>(innerMap[i].args.iterator().next().list, true, innerArgs.get(i).type)[ CD ]
Line_18 $$ if (innerArg == null) -->Line_19 $$ map[i] = null[ CD ]
Line_2 $$ private static ArgInfo<PsiElement>[] mapParametersToArguments(@NotNull GrClosureSignature signature, @NotNull List<InnerArg> innerArgs, boolean hasNamedArgs, boolean partial, @NotNull PsiElement context) -->Line_13 $$ map[i] = new ArgInfo<PsiElement>(innerMap[i].args.iterator().next().list, true, innerArgs.get(i).type)[ FD ]
Line_3 $$ final ArgInfo<InnerArg>[] innerMap = mapParametersToArguments(signature, innerArgs.toArray(new InnerArg[innerArgs.size()]), new Function<InnerArg, PsiType>() -->Line_8 $$ if (innerMap == null)[ FD ]
Line_17 $$ final ArgInfo<InnerArg> innerArg = innerMap[i]-->Line_18 $$ if (innerArg == null) [ FD ]
Line_3 $$ final ArgInfo<InnerArg>[] innerMap = mapParametersToArguments(signature, innerArgs.toArray(new InnerArg[innerArgs.size()]), new Function<InnerArg, PsiType>() -->Line_5 $$ return o.type[ CD ]
Line_21 $$ List<PsiElement> argList = new ArrayList<PsiElement>()-->Line_25 $$ boolean multiArg = innerArg.isMultiArg || argList.size() > 1[ FD ]
Line_16 $$ for (; i < innerMap.length; i++) -->Line_18 $$ if (innerArg == null) [ CD ]
Line_8 $$ if (innerMap == null)-->Line_9 $$ return null[ CD ]
Line_2 $$ private static ArgInfo<PsiElement>[] mapParametersToArguments(@NotNull GrClosureSignature signature, @NotNull List<InnerArg> innerArgs, boolean hasNamedArgs, boolean partial, @NotNull PsiElement context) -->Line_3 $$ final ArgInfo<InnerArg>[] innerMap = mapParametersToArguments(signature, innerArgs.toArray(new InnerArg[innerArgs.size()]), new Function<InnerArg, PsiType>() [ FD ]
Line_2 $$ private static ArgInfo<PsiElement>[] mapParametersToArguments(@NotNull GrClosureSignature signature, @NotNull List<InnerArg> innerArgs, boolean hasNamedArgs, boolean partial, @NotNull PsiElement context) -->Line_12 $$ if (hasNamedArgs) [ CD ]
Line_18 $$ if (innerArg == null) -->Line_21 $$ List<PsiElement> argList = new ArrayList<PsiElement>()[ CD ]
Line_2 $$ private static ArgInfo<PsiElement>[] mapParametersToArguments(@NotNull GrClosureSignature signature, @NotNull List<InnerArg> innerArgs, boolean hasNamedArgs, boolean partial, @NotNull PsiElement context) -->Line_29 $$ return map[ CD ]
Line_18 $$ if (innerArg == null) -->Line_26 $$ map[i] = new ArgInfo<PsiElement>(argList, multiArg, innerArg.type)[ CD ]
Line_21 $$ List<PsiElement> argList = new ArrayList<PsiElement>()-->Line_23 $$ argList.addAll(arg.list)[ FD ]
Line_16 $$ for (; i < innerMap.length; i++) -->Line_17 $$ final ArgInfo<InnerArg> innerArg = innerMap[i][ CD ]
Line_2 $$ private static ArgInfo<PsiElement>[] mapParametersToArguments(@NotNull GrClosureSignature signature, @NotNull List<InnerArg> innerArgs, boolean hasNamedArgs, boolean partial, @NotNull PsiElement context) -->Line_3 $$ final ArgInfo<InnerArg>[] innerMap = mapParametersToArguments(signature, innerArgs.toArray(new InnerArg[innerArgs.size()]), new Function<InnerArg, PsiType>() [ CD ]
Line_18 $$ if (innerArg == null) -->Line_25 $$ boolean multiArg = innerArg.isMultiArg || argList.size() > 1[ CD ]
Line_2 $$ private static ArgInfo<PsiElement>[] mapParametersToArguments(@NotNull GrClosureSignature signature, @NotNull List<InnerArg> innerArgs, boolean hasNamedArgs, boolean partial, @NotNull PsiElement context) -->Line_8 $$ if (innerMap == null)[ CD ]
