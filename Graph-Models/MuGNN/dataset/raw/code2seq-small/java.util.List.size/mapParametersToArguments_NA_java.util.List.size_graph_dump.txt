Line_3 $$ final ArgInfo<InnerArg>[] innerMap = mapParametersToArguments(signature, innerArgs.toArray(new InnerArg[innerArgs.size()]), new Function<InnerArg, PsiType>() -->Line_10 $$ if (innerMap == null)[ FD ]
Line_3 $$ final ArgInfo<InnerArg>[] innerMap = mapParametersToArguments(signature, innerArgs.toArray(new InnerArg[innerArgs.size()]), new Function<InnerArg, PsiType>() -->Line_7 $$ return o.type[ CD ]
Line_18 $$ for (; i < innerMap.length; i++) -->Line_19 $$ final ArgInfo<InnerArg> innerArg = innerMap[i][ CD ]
Line_2 $$ private static ArgInfo<PsiElement>[] mapParametersToArguments(@NotNull GrClosureSignature signature, @NotNull List<InnerArg> innerArgs, boolean hasNamedArgs, boolean partial, @NotNull PsiElement context) -->Line_18 $$ for (; i < innerMap.length; i++) [ CD ]
Line_2 $$ private static ArgInfo<PsiElement>[] mapParametersToArguments(@NotNull GrClosureSignature signature, @NotNull List<InnerArg> innerArgs, boolean hasNamedArgs, boolean partial, @NotNull PsiElement context) -->Line_15 $$ map[i] = new ArgInfo<PsiElement>(innerMap[i].args.iterator().next().list, true, innerArgs.get(i).type)[ FD ]
Line_2 $$ private static ArgInfo<PsiElement>[] mapParametersToArguments(@NotNull GrClosureSignature signature, @NotNull List<InnerArg> innerArgs, boolean hasNamedArgs, boolean partial, @NotNull PsiElement context) -->Line_3 $$ final ArgInfo<InnerArg>[] innerMap = mapParametersToArguments(signature, innerArgs.toArray(new InnerArg[innerArgs.size()]), new Function<InnerArg, PsiType>() [ FD ]
Line_23 $$ List<PsiElement> argList = new ArrayList<PsiElement>()-->Line_25 $$ argList.addAll(arg.list)[ FD ]
Line_14 $$ if (hasNamedArgs) -->Line_15 $$ map[i] = new ArgInfo<PsiElement>(innerMap[i].args.iterator().next().list, true, innerArgs.get(i).type)[ CD ]
Line_19 $$ final ArgInfo<InnerArg> innerArg = innerMap[i]-->Line_20 $$ if (innerArg == null) [ FD ]
Line_2 $$ private static ArgInfo<PsiElement>[] mapParametersToArguments(@NotNull GrClosureSignature signature, @NotNull List<InnerArg> innerArgs, boolean hasNamedArgs, boolean partial, @NotNull PsiElement context) -->Line_14 $$ if (hasNamedArgs) [ CD ]
Line_20 $$ if (innerArg == null) -->Line_21 $$ map[i] = null[ CD ]
Line_2 $$ private static ArgInfo<PsiElement>[] mapParametersToArguments(@NotNull GrClosureSignature signature, @NotNull List<InnerArg> innerArgs, boolean hasNamedArgs, boolean partial, @NotNull PsiElement context) -->Line_10 $$ if (innerMap == null)[ CD ]
Line_2 $$ private static ArgInfo<PsiElement>[] mapParametersToArguments(@NotNull GrClosureSignature signature, @NotNull List<InnerArg> innerArgs, boolean hasNamedArgs, boolean partial, @NotNull PsiElement context) -->Line_3 $$ final ArgInfo<InnerArg>[] innerMap = mapParametersToArguments(signature, innerArgs.toArray(new InnerArg[innerArgs.size()]), new Function<InnerArg, PsiType>() [ CD ]
Line_20 $$ if (innerArg == null) -->Line_27 $$ boolean multiArg = innerArg.isMultiArg || argList.size() > 1[ CD ]
Line_18 $$ for (; i < innerMap.length; i++) -->Line_20 $$ if (innerArg == null) [ CD ]
Line_20 $$ if (innerArg == null) -->Line_28 $$ map[i] = new ArgInfo<PsiElement>(argList, multiArg, innerArg.type)[ CD ]
Line_20 $$ if (innerArg == null) -->Line_23 $$ List<PsiElement> argList = new ArrayList<PsiElement>()[ CD ]
Line_2 $$ private static ArgInfo<PsiElement>[] mapParametersToArguments(@NotNull GrClosureSignature signature, @NotNull List<InnerArg> innerArgs, boolean hasNamedArgs, boolean partial, @NotNull PsiElement context) -->Line_31 $$ return map[ CD ]
Line_23 $$ List<PsiElement> argList = new ArrayList<PsiElement>()-->Line_27 $$ boolean multiArg = innerArg.isMultiArg || argList.size() > 1[ FD ]
Line_10 $$ if (innerMap == null)-->Line_11 $$ return null[ CD ]
