Line_20 $$ if (fileSetObjects != null) -->Line_21 $$ for (int i = 0, len = valueObjects.size(); i < len; ++i) [ CD ]
Line_21 $$ for (int i = 0, len = valueObjects.size(); i < len; ++i) -->Line_22 $$ removeValue(inputId, fileSetObjects.get(i), valueObjects.get(i))[ CD ]
Line_5 $$ List<Object> fileSetObjects = null-->Line_20 $$ if (fileSetObjects != null) [ FD ]
Line_2 $$ public void removeAssociatedValue(int inputId) -->Line_7 $$ for (final ValueIterator<Value> valueIterator = getValueIterator(); valueIterator.hasNext(); ) [ CD ]
Line_13 $$ if (DebugAssertions.DEBUG) -->Line_14 $$ LOG.error("Expected only one value per-inputId for " + ourDebugIndexInfo.get(), String.valueOf(fileSetObjects.get(0)), String.valueOf(value))[ CD ]
Line_11 $$ fileSetObjects = new SmartList<Object>()-->Line_20 $$ if (fileSetObjects != null) [ FD ]
Line_5 $$ List<Object> fileSetObjects = null-->Line_14 $$ LOG.error("Expected only one value per-inputId for " + ourDebugIndexInfo.get(), String.valueOf(fileSetObjects.get(0)), String.valueOf(value))[ FD ]
Line_2 $$ public void removeAssociatedValue(int inputId) -->Line_22 $$ removeValue(inputId, fileSetObjects.get(i), valueObjects.get(i))[ FD ]
Line_8 $$ final Value value = valueIterator.next()-->Line_14 $$ LOG.error("Expected only one value per-inputId for " + ourDebugIndexInfo.get(), String.valueOf(fileSetObjects.get(0)), String.valueOf(value))[ FD ]
Line_11 $$ fileSetObjects = new SmartList<Object>()-->Line_22 $$ removeValue(inputId, fileSetObjects.get(i), valueObjects.get(i))[ FD ]
Line_2 $$ public void removeAssociatedValue(int inputId) -->Line_6 $$ List<Value> valueObjects = null[ CD ]
Line_6 $$ List<Value> valueObjects = null-->Line_21 $$ for (int i = 0, len = valueObjects.size(); i < len; ++i) [ FD ]
Line_5 $$ List<Object> fileSetObjects = null-->Line_11 $$ fileSetObjects = new SmartList<Object>()[ FD ]
Line_10 $$ if (fileSetObjects == null) -->Line_13 $$ if (DebugAssertions.DEBUG) [ CD ]
Line_2 $$ public void removeAssociatedValue(int inputId) -->Line_9 $$ if (valueIterator.getValueAssociationPredicate().contains(inputId)) [ FD ]
Line_5 $$ List<Object> fileSetObjects = null-->Line_22 $$ removeValue(inputId, fileSetObjects.get(i), valueObjects.get(i))[ FD ]
Line_11 $$ fileSetObjects = new SmartList<Object>()-->Line_10 $$ if (fileSetObjects == null) [ FD ]
Line_7 $$ for (final ValueIterator<Value> valueIterator = getValueIterator(); valueIterator.hasNext(); ) -->Line_9 $$ if (valueIterator.getValueAssociationPredicate().contains(inputId)) [ CD ]
Line_6 $$ List<Value> valueObjects = null-->Line_12 $$ valueObjects = new SmartList<Value>()[ FD ]
Line_10 $$ if (fileSetObjects == null) -->Line_11 $$ fileSetObjects = new SmartList<Object>()[ CD ]
Line_11 $$ fileSetObjects = new SmartList<Object>()-->Line_16 $$ fileSetObjects.add(valueIterator.getFileSetObject())[ FD ]
Line_9 $$ if (valueIterator.getValueAssociationPredicate().contains(inputId)) -->Line_17 $$ valueObjects.add(value)[ CD ]
Line_21 $$ for (int i = 0, len = valueObjects.size(); i < len; ++i) -->Line_22 $$ removeValue(inputId, fileSetObjects.get(i), valueObjects.get(i))[ FD ]
Line_12 $$ valueObjects = new SmartList<Value>()-->Line_21 $$ for (int i = 0, len = valueObjects.size(); i < len; ++i) [ FD ]
Line_7 $$ for (final ValueIterator<Value> valueIterator = getValueIterator(); valueIterator.hasNext(); ) -->Line_8 $$ final Value value = valueIterator.next()[ FD ]
Line_7 $$ for (final ValueIterator<Value> valueIterator = getValueIterator(); valueIterator.hasNext(); ) -->Line_9 $$ if (valueIterator.getValueAssociationPredicate().contains(inputId)) [ FD ]
Line_11 $$ fileSetObjects = new SmartList<Object>()-->Line_14 $$ LOG.error("Expected only one value per-inputId for " + ourDebugIndexInfo.get(), String.valueOf(fileSetObjects.get(0)), String.valueOf(value))[ FD ]
Line_9 $$ if (valueIterator.getValueAssociationPredicate().contains(inputId)) -->Line_16 $$ fileSetObjects.add(valueIterator.getFileSetObject())[ CD ]
Line_8 $$ final Value value = valueIterator.next()-->Line_17 $$ valueObjects.add(value)[ FD ]
Line_7 $$ for (final ValueIterator<Value> valueIterator = getValueIterator(); valueIterator.hasNext(); ) -->Line_16 $$ fileSetObjects.add(valueIterator.getFileSetObject())[ FD ]
Line_5 $$ List<Object> fileSetObjects = null-->Line_10 $$ if (fileSetObjects == null) [ FD ]
Line_3 $$ if (myInputIdMapping == null)-->Line_4 $$ return[ CD ]
Line_5 $$ List<Object> fileSetObjects = null-->Line_16 $$ fileSetObjects.add(valueIterator.getFileSetObject())[ FD ]
Line_7 $$ for (final ValueIterator<Value> valueIterator = getValueIterator(); valueIterator.hasNext(); ) -->Line_8 $$ final Value value = valueIterator.next()[ CD ]
Line_6 $$ List<Value> valueObjects = null-->Line_22 $$ removeValue(inputId, fileSetObjects.get(i), valueObjects.get(i))[ FD ]
Line_6 $$ List<Value> valueObjects = null-->Line_17 $$ valueObjects.add(value)[ FD ]
Line_2 $$ public void removeAssociatedValue(int inputId) -->Line_20 $$ if (fileSetObjects != null) [ CD ]
Line_2 $$ public void removeAssociatedValue(int inputId) -->Line_3 $$ if (myInputIdMapping == null)[ CD ]
Line_9 $$ if (valueIterator.getValueAssociationPredicate().contains(inputId)) -->Line_10 $$ if (fileSetObjects == null) [ CD ]
Line_12 $$ valueObjects = new SmartList<Value>()-->Line_22 $$ removeValue(inputId, fileSetObjects.get(i), valueObjects.get(i))[ FD ]
Line_12 $$ valueObjects = new SmartList<Value>()-->Line_17 $$ valueObjects.add(value)[ FD ]
Line_10 $$ if (fileSetObjects == null) -->Line_12 $$ valueObjects = new SmartList<Value>()[ CD ]
Line_2 $$ public void removeAssociatedValue(int inputId) -->Line_5 $$ List<Object> fileSetObjects = null[ CD ]
