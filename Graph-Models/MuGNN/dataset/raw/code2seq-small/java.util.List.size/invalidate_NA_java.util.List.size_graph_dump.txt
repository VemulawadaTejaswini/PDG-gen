Line_25 $$ f = info.getBlockFile()-->Line_27 $$ if (f == null) [ FD ]
Line_10 $$ final List<String> errors = new ArrayList<String>()-->Line_32 $$ errors.add("Failed to delete replica " + invalidBlks[i] + ". No volume for this replica, file=" + f)[ FD ]
Line_15 $$ final ReplicaInfo info = volumeMap.get(bpid, invalidBlks[i])-->Line_16 $$ if (info == null) [ FD ]
Line_10 $$ final List<String> errors = new ArrayList<String>()-->Line_37 $$ errors.add("Failed to delete replica " + invalidBlks[i] + ". Parent not found for file " + f)[ FD ]
Line_54 $$ for (int i = 0; i < errors.size(); i++) -->Line_55 $$ b.append("\n").append(i).append(") ").append(errors.get(i))[ CD ]
Line_15 $$ final ReplicaInfo info = volumeMap.get(bpid, invalidBlks[i])-->Line_26 $$ v = (FsVolumeImpl) info.getVolume()[ FD ]
Line_35 $$ File parent = f.getParentFile()-->Line_36 $$ if (parent == null) [ FD ]
Line_26 $$ v = (FsVolumeImpl) info.getVolume()-->Line_31 $$ if (v == null) [ FD ]
Line_13 $$ final FsVolumeImpl v-->Line_26 $$ v = (FsVolumeImpl) info.getVolume()[ FD ]
Line_13 $$ final FsVolumeImpl v-->Line_31 $$ if (v == null) [ FD ]
Line_15 $$ final ReplicaInfo info = volumeMap.get(bpid, invalidBlks[i])-->Line_21 $$ if (info.getGenerationStamp() != invalidBlks[i].getGenerationStamp()) [ FD ]
Line_12 $$ final File f-->Line_25 $$ f = info.getBlockFile()[ FD ]
Line_11 $$ for (int i = 0; i < invalidBlks.length; i++) -->Line_54 $$ for (int i = 0; i < errors.size(); i++) [ FD ]
Line_10 $$ final List<String> errors = new ArrayList<String>()-->Line_22 $$ errors.add("Failed to delete replica " + invalidBlks[i] + ": GenerationStamp not matched, info=" + info)[ FD ]
Line_10 $$ final List<String> errors = new ArrayList<String>()-->Line_52 $$ if (!errors.isEmpty()) [ FD ]
Line_52 $$ if (!errors.isEmpty()) -->Line_53 $$ StringBuilder b = new StringBuilder("Failed to delete ").append(errors.size()).append(" (out of ").append(invalidBlks.length).append(") replica(s):")[ CD ]
Line_52 $$ if (!errors.isEmpty()) -->Line_54 $$ for (int i = 0; i < errors.size(); i++) [ CD ]
Line_53 $$ StringBuilder b = new StringBuilder("Failed to delete ").append(errors.size()).append(" (out of ").append(invalidBlks.length).append(") replica(s):")-->Line_55 $$ b.append("\n").append(i).append(") ").append(errors.get(i))[ FD ]
Line_31 $$ if (v == null) -->Line_32 $$ errors.add("Failed to delete replica " + invalidBlks[i] + ". No volume for this replica, file=" + f)[ CD ]
Line_53 $$ StringBuilder b = new StringBuilder("Failed to delete ").append(errors.size()).append(" (out of ").append(invalidBlks.length).append(") replica(s):")-->Line_57 $$ throw new IOException(b.toString())[ FD ]
Line_12 $$ final File f-->Line_35 $$ File parent = f.getParentFile()[ FD ]
Line_54 $$ for (int i = 0; i < errors.size(); i++) -->Line_55 $$ b.append("\n").append(i).append(") ").append(errors.get(i))[ FD ]
Line_12 $$ final File f-->Line_27 $$ if (f == null) [ FD ]
Line_10 $$ final List<String> errors = new ArrayList<String>()-->Line_53 $$ StringBuilder b = new StringBuilder("Failed to delete ").append(errors.size()).append(" (out of ").append(invalidBlks.length).append(") replica(s):")[ FD ]
Line_11 $$ for (int i = 0; i < invalidBlks.length; i++) -->Line_13 $$ final FsVolumeImpl v[ CD ]
Line_15 $$ final ReplicaInfo info = volumeMap.get(bpid, invalidBlks[i])-->Line_25 $$ f = info.getBlockFile()[ FD ]
Line_36 $$ if (parent == null) -->Line_37 $$ errors.add("Failed to delete replica " + invalidBlks[i] + ". Parent not found for file " + f)[ CD ]
Line_27 $$ if (f == null) -->Line_28 $$ errors.add("Failed to delete replica " + invalidBlks[i] + ": File not found, volume=" + v)[ CD ]
Line_21 $$ if (info.getGenerationStamp() != invalidBlks[i].getGenerationStamp()) -->Line_22 $$ errors.add("Failed to delete replica " + invalidBlks[i] + ": GenerationStamp not matched, info=" + info)[ CD ]
Line_11 $$ for (int i = 0; i < invalidBlks.length; i++) -->Line_55 $$ b.append("\n").append(i).append(") ").append(errors.get(i))[ FD ]
Line_10 $$ final List<String> errors = new ArrayList<String>()-->Line_28 $$ errors.add("Failed to delete replica " + invalidBlks[i] + ": File not found, volume=" + v)[ FD ]
Line_10 $$ final List<String> errors = new ArrayList<String>()-->Line_54 $$ for (int i = 0; i < errors.size(); i++) [ FD ]
Line_10 $$ final List<String> errors = new ArrayList<String>()-->Line_55 $$ b.append("\n").append(i).append(") ").append(errors.get(i))[ FD ]
Line_11 $$ for (int i = 0; i < invalidBlks.length; i++) -->Line_12 $$ final File f[ CD ]
Line_25 $$ f = info.getBlockFile()-->Line_35 $$ File parent = f.getParentFile()[ FD ]
