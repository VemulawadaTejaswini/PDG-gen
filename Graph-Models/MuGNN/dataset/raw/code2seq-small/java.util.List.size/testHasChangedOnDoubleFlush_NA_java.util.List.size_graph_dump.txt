Line_2 $$ public void testHasChangedOnDoubleFlush() -->Line_5 $$ assertEquals(makeList(1, 2), extractRevisionNumbers(list))[ CD ]
Line_3 $$ List list = queryForPropertyHasChanged(BasicTestEntity1.class, id, "str1")-->Line_8 $$ assertEquals(makeList(1, 2), extractRevisionNumbers(list))[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(BasicTestEntity1.class, id, "str1")-->Line_5 $$ assertEquals(makeList(1, 2), extractRevisionNumbers(list))[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(BasicTestEntity1.class, id, "str1")-->Line_6 $$ list = queryForPropertyHasChanged(BasicTestEntity1.class, id, "long1")[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(BasicTestEntity1.class, id, "str1")-->Line_4 $$ assertEquals(2, list.size())[ FD ]
Line_6 $$ list = queryForPropertyHasChanged(BasicTestEntity1.class, id, "long1")-->Line_7 $$ assertEquals(2, list.size())[ FD ]
Line_2 $$ public void testHasChangedOnDoubleFlush() -->Line_4 $$ assertEquals(2, list.size())[ CD ]
Line_2 $$ public void testHasChangedOnDoubleFlush() -->Line_8 $$ assertEquals(makeList(1, 2), extractRevisionNumbers(list))[ CD ]
Line_2 $$ public void testHasChangedOnDoubleFlush() -->Line_3 $$ List list = queryForPropertyHasChanged(BasicTestEntity1.class, id, "str1")[ CD ]
Line_6 $$ list = queryForPropertyHasChanged(BasicTestEntity1.class, id, "long1")-->Line_8 $$ assertEquals(makeList(1, 2), extractRevisionNumbers(list))[ FD ]
Line_2 $$ public void testHasChangedOnDoubleFlush() -->Line_7 $$ assertEquals(2, list.size())[ CD ]
Line_3 $$ List list = queryForPropertyHasChanged(BasicTestEntity1.class, id, "str1")-->Line_7 $$ assertEquals(2, list.size())[ FD ]
Line_2 $$ public void testHasChangedOnDoubleFlush() -->Line_6 $$ list = queryForPropertyHasChanged(BasicTestEntity1.class, id, "long1")[ CD ]
