Line_7 $$ for (int i = 0; i < n; i++) -->Line_8 $$ b.append(lines.get(i).trim().toString())[ CD ]
Line_4 $$ final StringBuilder b = new StringBuilder()-->Line_8 $$ b.append(lines.get(i).trim().toString())[ FD ]
Line_5 $$ List<Substring> lines = splitLines()-->Line_8 $$ b.append(lines.get(i).trim().toString())[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_9 $$ if (i < n - 1) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_8 $$ b.append(lines.get(i).trim().toString())[ FD ]
Line_4 $$ final StringBuilder b = new StringBuilder()-->Line_10 $$ b.append(separator)[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_9 $$ if (i < n - 1) [ FD ]
Line_9 $$ if (i < n - 1) -->Line_10 $$ b.append(separator)[ CD ]
Line_6 $$ final int n = lines.size()-->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_4 $$ final StringBuilder b = new StringBuilder()-->Line_13 $$ return b.toString()[ FD ]
Line_5 $$ List<Substring> lines = splitLines()-->Line_6 $$ final int n = lines.size()[ FD ]
