Line_2 $$ public void testQueryForListWithArgsAndEmptyResult() throws Exception -->Line_8 $$ verify(this.resultSet).close()[ CD ]
Line_5 $$ List<Map<String, Object>> li = this.template.queryForList(sql, new Object[] -->Line_6 $$ assertEquals("All rows returned", 0, li.size())[ FD ]
Line_2 $$ public void testQueryForListWithArgsAndEmptyResult() throws Exception -->Line_4 $$ given(this.resultSet.next()).willReturn(false)[ CD ]
Line_2 $$ public void testQueryForListWithArgsAndEmptyResult() throws Exception -->Line_7 $$ verify(this.preparedStatement).setObject(1, 3)[ CD ]
Line_2 $$ public void testQueryForListWithArgsAndEmptyResult() throws Exception -->Line_3 $$ String sql = "SELECT AGE FROM CUSTMR WHERE ID < ?"[ CD ]
Line_2 $$ public void testQueryForListWithArgsAndEmptyResult() throws Exception -->Line_5 $$ List<Map<String, Object>> li = this.template.queryForList(sql, new Object[] [ CD ]
Line_2 $$ public void testQueryForListWithArgsAndEmptyResult() throws Exception -->Line_6 $$ assertEquals("All rows returned", 0, li.size())[ CD ]
Line_3 $$ String sql = "SELECT AGE FROM CUSTMR WHERE ID < ?"-->Line_5 $$ List<Map<String, Object>> li = this.template.queryForList(sql, new Object[] [ FD ]
Line_2 $$ public void testQueryForListWithArgsAndEmptyResult() throws Exception -->Line_9 $$ verify(this.preparedStatement).close()[ CD ]
