Line_2 $$ public void testScalarValues() throws Exception -->Line_46 $$ assertFalse(iter.hasNext())[ CD ]
Line_49 $$ s = openSession()-->Line_59 $$ s.delete(jboss)[ FD ]
Line_20 $$ s = openSession()-->Line_22 $$ Iterator iter = s.getNamedQuery("orgNamesAndOrgs").list().iterator()[ FD ]
Line_13 $$ result = s.getNamedQuery("orgNamesOnly").setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_15 $$ assertEquals(2, result.size())[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_29 $$ assertEquals(((Organization) o[1]).getName(), "JBoss")[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_18 $$ t.commit()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_58 $$ s.delete(ifa)[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_6 $$ Organization jboss = new Organization("JBoss")[ CD ]
Line_6 $$ Organization jboss = new Organization("JBoss")-->Line_8 $$ Serializable idJBoss = s.save(jboss)[ FD ]
Line_3 $$ Session s = openSession()-->Line_13 $$ result = s.getNamedQuery("orgNamesOnly").setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()[ FD ]
Line_14 $$ Map m = (Map) result.get(0)-->Line_16 $$ assertEquals(1, m.size())[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_34 $$ iter = s.getNamedQuery("orgsAndOrgNames").list().iterator()[ CD ]
Line_20 $$ s = openSession()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_52 $$ o = (Object[]) iter.next()-->Line_55 $$ o = (Object[]) iter.next()[ FD ]
Line_32 $$ s = openSession()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_15 $$ assertEquals(2, result.size())[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_47 $$ t.commit()[ FD ]
Line_22 $$ Iterator iter = s.getNamedQuery("orgNamesAndOrgs").list().iterator()-->Line_51 $$ iter = s.getNamedQuery("orgIdsAndOrgNames").list().iterator()[ FD ]
Line_33 $$ t = s.beginTransaction()-->Line_47 $$ t.commit()[ FD ]
Line_10 $$ List result = s.getNamedQuery("orgNamesOnly").list()-->Line_14 $$ Map m = (Map) result.get(0)[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_20 $$ s = openSession()[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_8 $$ Serializable idJBoss = s.save(jboss)[ CD ]
Line_3 $$ Session s = openSession()-->Line_10 $$ List result = s.getNamedQuery("orgNamesOnly").list()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_51 $$ iter = s.getNamedQuery("orgIdsAndOrgNames").list().iterator()[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_28 $$ assertEquals(o[0], "JBoss")[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_38 $$ assertEquals("expecting scalar result second", String.class, row[1].getClass())[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_52 $$ o = (Object[]) iter.next()[ CD ]
Line_23 $$ Object[] o = (Object[]) iter.next()-->Line_27 $$ o = (Object[]) iter.next()[ FD ]
Line_13 $$ result = s.getNamedQuery("orgNamesOnly").setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_14 $$ Map m = (Map) result.get(0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_21 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_51 $$ iter = s.getNamedQuery("orgIdsAndOrgNames").list().iterator()[ FD ]
Line_3 $$ Session s = openSession()-->Line_20 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction t = s.beginTransaction()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_59 $$ s.delete(jboss)[ CD ]
Line_20 $$ s = openSession()-->Line_21 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_32 $$ s = openSession()[ FD ]
Line_34 $$ iter = s.getNamedQuery("orgsAndOrgNames").list().iterator()-->Line_41 $$ row = (Object[]) iter.next()[ FD ]
Line_3 $$ Session s = openSession()-->Line_8 $$ Serializable idJBoss = s.save(jboss)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_21 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_49 $$ s = openSession()[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_10 $$ List result = s.getNamedQuery("orgNamesOnly").list()[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_40 $$ assertEquals(row[1], "IFA")[ CD ]
Line_22 $$ Iterator iter = s.getNamedQuery("orgNamesAndOrgs").list().iterator()-->Line_23 $$ Object[] o = (Object[]) iter.next()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_60 $$ t.commit()[ CD ]
Line_21 $$ t = s.beginTransaction()-->Line_47 $$ t.commit()[ FD ]
Line_10 $$ List result = s.getNamedQuery("orgNamesOnly").list()-->Line_13 $$ result = s.getNamedQuery("orgNamesOnly").setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_58 $$ s.delete(ifa)[ FD ]
Line_32 $$ s = openSession()-->Line_61 $$ s.close()[ FD ]
Line_20 $$ s = openSession()-->Line_48 $$ s.close()[ FD ]
Line_51 $$ iter = s.getNamedQuery("orgIdsAndOrgNames").list().iterator()-->Line_55 $$ o = (Object[]) iter.next()[ FD ]
Line_34 $$ iter = s.getNamedQuery("orgsAndOrgNames").list().iterator()-->Line_46 $$ assertFalse(iter.hasNext())[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_18 $$ t.commit()[ CD ]
Line_27 $$ o = (Object[]) iter.next()-->Line_55 $$ o = (Object[]) iter.next()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_9 $$ s.flush()[ CD ]
Line_22 $$ Iterator iter = s.getNamedQuery("orgNamesAndOrgs").list().iterator()-->Line_27 $$ o = (Object[]) iter.next()[ FD ]
Line_49 $$ s = openSession()-->Line_61 $$ s.close()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_56 $$ assertEquals(o[1], "JBoss")[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_19 $$ s.close()[ CD ]
Line_27 $$ o = (Object[]) iter.next()-->Line_52 $$ o = (Object[]) iter.next()[ FD ]
Line_3 $$ Session s = openSession()-->Line_31 $$ s.close()[ FD ]
Line_32 $$ s = openSession()-->Line_51 $$ iter = s.getNamedQuery("orgIdsAndOrgNames").list().iterator()[ FD ]
Line_32 $$ s = openSession()-->Line_33 $$ t = s.beginTransaction()[ FD ]
Line_23 $$ Object[] o = (Object[]) iter.next()-->Line_55 $$ o = (Object[]) iter.next()[ FD ]
Line_10 $$ List result = s.getNamedQuery("orgNamesOnly").list()-->Line_15 $$ assertEquals(2, result.size())[ FD ]
Line_20 $$ s = openSession()-->Line_51 $$ iter = s.getNamedQuery("orgIdsAndOrgNames").list().iterator()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_13 $$ result = s.getNamedQuery("orgNamesOnly").setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()[ CD ]
Line_49 $$ s = openSession()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Organization ifa = new Organization("IFA")-->Line_7 $$ Serializable idIfa = s.save(ifa)[ FD ]
Line_3 $$ Session s = openSession()-->Line_22 $$ Iterator iter = s.getNamedQuery("orgNamesAndOrgs").list().iterator()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_44 $$ assertEquals(((Organization) row[0]).getName(), "JBoss")[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_61 $$ s.close()[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_25 $$ assertEquals(o[0], "IFA")[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_43 $$ assertEquals("expecting scalar result second", String.class, row[1].getClass())[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_53 $$ assertEquals(o[1], "IFA")[ CD ]
Line_3 $$ Session s = openSession()-->Line_61 $$ s.close()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_42 $$ assertEquals("expecting non-scalar result first", Organization.class, row[0].getClass())[ CD ]
Line_5 $$ Organization ifa = new Organization("IFA")-->Line_58 $$ s.delete(ifa)[ FD ]
Line_49 $$ s = openSession()-->Line_51 $$ iter = s.getNamedQuery("orgIdsAndOrgNames").list().iterator()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_22 $$ Iterator iter = s.getNamedQuery("orgNamesAndOrgs").list().iterator()[ CD ]
Line_21 $$ t = s.beginTransaction()-->Line_30 $$ t.commit()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_32 $$ s = openSession()[ CD ]
Line_7 $$ Serializable idIfa = s.save(ifa)-->Line_54 $$ assertEquals(o[0], idIfa)[ FD ]
Line_22 $$ Iterator iter = s.getNamedQuery("orgNamesAndOrgs").list().iterator()-->Line_34 $$ iter = s.getNamedQuery("orgsAndOrgNames").list().iterator()[ FD ]
Line_20 $$ s = openSession()-->Line_61 $$ s.close()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_35 $$ Object[] row = (Object[]) iter.next()-->Line_41 $$ row = (Object[]) iter.next()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_3 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_11 $$ assertTrue(result.contains("IFA"))[ CD ]
Line_3 $$ Session s = openSession()-->Line_48 $$ s.close()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_24 $$ assertEquals("expecting 2 values", 2, o.length)[ CD ]
Line_3 $$ Session s = openSession()-->Line_59 $$ s.delete(jboss)[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_39 $$ assertEquals(((Organization) row[0]).getName(), "IFA")[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_35 $$ Object[] row = (Object[]) iter.next()[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_45 $$ assertEquals(row[1], "JBoss")[ CD ]
Line_34 $$ iter = s.getNamedQuery("orgsAndOrgNames").list().iterator()-->Line_52 $$ o = (Object[]) iter.next()[ FD ]
Line_49 $$ s = openSession()-->Line_58 $$ s.delete(ifa)[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_33 $$ t = s.beginTransaction()[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_26 $$ assertEquals(((Organization) o[1]).getName(), "IFA")[ CD ]
Line_21 $$ t = s.beginTransaction()-->Line_33 $$ t = s.beginTransaction()[ FD ]
Line_21 $$ t = s.beginTransaction()-->Line_60 $$ t.commit()[ FD ]
Line_50 $$ t = s.beginTransaction()-->Line_60 $$ t.commit()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_17 $$ assertTrue(m.containsKey("NAME"))[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_23 $$ Object[] o = (Object[]) iter.next()[ CD ]
Line_6 $$ Organization jboss = new Organization("JBoss")-->Line_59 $$ s.delete(jboss)[ FD ]
Line_34 $$ iter = s.getNamedQuery("orgsAndOrgNames").list().iterator()-->Line_35 $$ Object[] row = (Object[]) iter.next()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_31 $$ s.close()[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_12 $$ assertTrue(result.contains("JBoss"))[ CD ]
Line_20 $$ s = openSession()-->Line_31 $$ s.close()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_54 $$ assertEquals(o[0], idIfa)[ CD ]
Line_32 $$ s = openSession()-->Line_48 $$ s.close()[ FD ]
Line_22 $$ Iterator iter = s.getNamedQuery("orgNamesAndOrgs").list().iterator()-->Line_55 $$ o = (Object[]) iter.next()[ FD ]
Line_3 $$ Session s = openSession()-->Line_19 $$ s.close()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_16 $$ assertEquals(1, m.size())[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_21 $$ t = s.beginTransaction()[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_47 $$ t.commit()[ CD ]
Line_3 $$ Session s = openSession()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_14 $$ Map m = (Map) result.get(0)[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_36 $$ assertEquals("expecting 2 values", 2, row.length)[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_57 $$ assertEquals(o[0], idJBoss)[ CD ]
Line_20 $$ s = openSession()-->Line_49 $$ s = openSession()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_55 $$ o = (Object[]) iter.next()[ CD ]
Line_22 $$ Iterator iter = s.getNamedQuery("orgNamesAndOrgs").list().iterator()-->Line_35 $$ Object[] row = (Object[]) iter.next()[ FD ]
Line_20 $$ s = openSession()-->Line_33 $$ t = s.beginTransaction()[ FD ]
Line_14 $$ Map m = (Map) result.get(0)-->Line_17 $$ assertTrue(m.containsKey("NAME"))[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_30 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_9 $$ s.flush()[ FD ]
Line_20 $$ s = openSession()-->Line_59 $$ s.delete(jboss)[ FD ]
Line_34 $$ iter = s.getNamedQuery("orgsAndOrgNames").list().iterator()-->Line_55 $$ o = (Object[]) iter.next()[ FD ]
Line_3 $$ Session s = openSession()-->Line_33 $$ t = s.beginTransaction()[ FD ]
Line_23 $$ Object[] o = (Object[]) iter.next()-->Line_52 $$ o = (Object[]) iter.next()[ FD ]
Line_22 $$ Iterator iter = s.getNamedQuery("orgNamesAndOrgs").list().iterator()-->Line_52 $$ o = (Object[]) iter.next()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_33 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_7 $$ Serializable idIfa = s.save(ifa)[ FD ]
Line_32 $$ s = openSession()-->Line_58 $$ s.delete(ifa)[ FD ]
Line_21 $$ t = s.beginTransaction()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_7 $$ Serializable idIfa = s.save(ifa)[ CD ]
Line_32 $$ s = openSession()-->Line_59 $$ s.delete(jboss)[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_30 $$ t.commit()[ CD ]
Line_10 $$ List result = s.getNamedQuery("orgNamesOnly").list()-->Line_11 $$ assertTrue(result.contains("IFA"))[ FD ]
Line_33 $$ t = s.beginTransaction()-->Line_60 $$ t.commit()[ FD ]
Line_33 $$ t = s.beginTransaction()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_8 $$ Serializable idJBoss = s.save(jboss)-->Line_57 $$ assertEquals(o[0], idJBoss)[ FD ]
Line_20 $$ s = openSession()-->Line_58 $$ s.delete(ifa)[ FD ]
Line_22 $$ Iterator iter = s.getNamedQuery("orgNamesAndOrgs").list().iterator()-->Line_46 $$ assertFalse(iter.hasNext())[ FD ]
Line_51 $$ iter = s.getNamedQuery("orgIdsAndOrgNames").list().iterator()-->Line_52 $$ o = (Object[]) iter.next()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_4 $$ Transaction t = s.beginTransaction()[ CD ]
Line_20 $$ s = openSession()-->Line_32 $$ s = openSession()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_41 $$ row = (Object[]) iter.next()[ CD ]
Line_10 $$ List result = s.getNamedQuery("orgNamesOnly").list()-->Line_12 $$ assertTrue(result.contains("JBoss"))[ FD ]
Line_22 $$ Iterator iter = s.getNamedQuery("orgNamesAndOrgs").list().iterator()-->Line_41 $$ row = (Object[]) iter.next()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_50 $$ t = s.beginTransaction()[ CD ]
Line_20 $$ s = openSession()-->Line_34 $$ iter = s.getNamedQuery("orgsAndOrgNames").list().iterator()[ FD ]
Line_34 $$ iter = s.getNamedQuery("orgsAndOrgNames").list().iterator()-->Line_51 $$ iter = s.getNamedQuery("orgIdsAndOrgNames").list().iterator()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_48 $$ s.close()[ CD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_27 $$ o = (Object[]) iter.next()[ CD ]
Line_32 $$ s = openSession()-->Line_49 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_49 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_34 $$ iter = s.getNamedQuery("orgsAndOrgNames").list().iterator()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_5 $$ Organization ifa = new Organization("IFA")[ CD ]
Line_32 $$ s = openSession()-->Line_34 $$ iter = s.getNamedQuery("orgsAndOrgNames").list().iterator()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_60 $$ t.commit()[ FD ]
Line_2 $$ public void testScalarValues() throws Exception -->Line_37 $$ assertEquals("expecting non-scalar result first", Organization.class, row[0].getClass())[ CD ]
