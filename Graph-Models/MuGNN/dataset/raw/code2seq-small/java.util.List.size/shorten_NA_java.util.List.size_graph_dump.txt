Line_2 $$ public static String shorten(String name, ShortNameType type) -->Line_8 $$ if (!name.contains(" ") && name.contains("@")) [ FD ]
Line_3 $$ if (name != null) -->Line_5 $$ if (0 < ind[0] && ind[0] < ind[1] && ind[1] < ind[2]) [ CD ]
Line_3 $$ if (name != null) -->Line_16 $$ final List<String> strings = StringUtil.split(name.replace('.', ' ').replace('_', ' ').replace('-', ' '), " ")[ CD ]
Line_8 $$ if (!name.contains(" ") && name.contains("@")) -->Line_9 $$ final String firstPart = name.substring(0, name.indexOf('@')).replace('.', ' ').replace('_', ' ').replace('-', ' ')[ CD ]
Line_16 $$ final List<String> strings = StringUtil.split(name.replace('.', ' ').replace('_', ' ').replace('-', ' '), " ")-->Line_18 $$ return StringUtil.capitalize(type == ShortNameType.FIRSTNAME ? strings.get(0) : strings.get(strings.size() - 1))[ FD ]
Line_10 $$ if (firstPart.length() < name.length()) -->Line_11 $$ return shorten(firstPart, type)[ CD ]
Line_9 $$ final String firstPart = name.substring(0, name.indexOf('@')).replace('.', ' ').replace('_', ' ').replace('-', ' ')-->Line_11 $$ return shorten(firstPart, type)[ FD ]
Line_2 $$ public static String shorten(String name, ShortNameType type) -->Line_11 $$ return shorten(firstPart, type)[ FD ]
Line_3 $$ if (name != null) -->Line_4 $$ final int[] ind = [ CD ]
Line_2 $$ public static String shorten(String name, ShortNameType type) -->Line_3 $$ if (name != null) [ FD ]
Line_2 $$ public static String shorten(String name, ShortNameType type) -->Line_21 $$ return name[ CD ]
Line_3 $$ if (name != null) -->Line_17 $$ if (strings.size() > 1) [ CD ]
Line_3 $$ if (name != null) -->Line_8 $$ if (!name.contains(" ") && name.contains("@")) [ CD ]
Line_10 $$ if (firstPart.length() < name.length()) -->Line_13 $$ return firstPart[ CD ]
Line_17 $$ if (strings.size() > 1) -->Line_18 $$ return StringUtil.capitalize(type == ShortNameType.FIRSTNAME ? strings.get(0) : strings.get(strings.size() - 1))[ CD ]
Line_2 $$ public static String shorten(String name, ShortNameType type) -->Line_3 $$ if (name != null) [ CD ]
Line_2 $$ public static String shorten(String name, ShortNameType type) -->Line_9 $$ final String firstPart = name.substring(0, name.indexOf('@')).replace('.', ' ').replace('_', ' ').replace('-', ' ')[ FD ]
Line_2 $$ public static String shorten(String name, ShortNameType type) -->Line_16 $$ final List<String> strings = StringUtil.split(name.replace('.', ' ').replace('_', ' ').replace('-', ' '), " ")[ FD ]
Line_16 $$ final List<String> strings = StringUtil.split(name.replace('.', ' ').replace('_', ' ').replace('-', ' '), " ")-->Line_17 $$ if (strings.size() > 1) [ FD ]
Line_2 $$ public static String shorten(String name, ShortNameType type) -->Line_6 $$ return shorten(name.substring(0, ind[0]).trim(), type)[ FD ]
Line_5 $$ if (0 < ind[0] && ind[0] < ind[1] && ind[1] < ind[2]) -->Line_6 $$ return shorten(name.substring(0, ind[0]).trim(), type)[ CD ]
Line_8 $$ if (!name.contains(" ") && name.contains("@")) -->Line_10 $$ if (firstPart.length() < name.length()) [ CD ]
Line_2 $$ public static String shorten(String name, ShortNameType type) -->Line_10 $$ if (firstPart.length() < name.length()) [ FD ]
Line_2 $$ public static String shorten(String name, ShortNameType type) -->Line_4 $$ final int[] ind = [ FD ]
Line_9 $$ final String firstPart = name.substring(0, name.indexOf('@')).replace('.', ' ').replace('_', ' ').replace('-', ' ')-->Line_10 $$ if (firstPart.length() < name.length()) [ FD ]
