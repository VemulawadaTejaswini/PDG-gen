Line_3 $$ Session s = openSession()-->Line_11 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_18 $$ thing.setName(null)[ CD ]
Line_10 $$ s = openSession()-->Line_20 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_21 $$ s.update(thing)[ CD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_28 $$ thing = (Thing) things.get(0)[ CD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_20 $$ t = s.beginTransaction()[ CD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_14 $$ thing = (Thing) things.get(0)[ CD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_31 $$ t.commit()[ CD ]
Line_10 $$ s = openSession()-->Line_11 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_10 $$ s = openSession()[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_17 $$ s.close()[ CD ]
Line_19 $$ s = openSession()-->Line_30 $$ s.delete(thing)[ FD ]
Line_5 $$ Thing thing = new Thing()-->Line_29 $$ assertNull(thing.getName())[ FD ]
Line_10 $$ s = openSession()-->Line_25 $$ t = s.beginTransaction()[ FD ]
Line_10 $$ s = openSession()-->Line_21 $$ s.update(thing)[ FD ]
Line_10 $$ s = openSession()-->Line_12 $$ List things = s.createQuery("from Thing").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_12 $$ List things = s.createQuery("from Thing").list()[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_15 $$ assertEquals("one", thing.getName())[ CD ]
Line_14 $$ thing = (Thing) things.get(0)-->Line_21 $$ s.update(thing)[ FD ]
Line_11 $$ t = s.beginTransaction()-->Line_31 $$ t.commit()[ FD ]
Line_24 $$ s = openSession()-->Line_32 $$ s.close()[ FD ]
Line_19 $$ s = openSession()-->Line_21 $$ s.update(thing)[ FD ]
Line_24 $$ s = openSession()-->Line_25 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_13 $$ assertEquals(1, things.size())[ CD ]
Line_5 $$ Thing thing = new Thing()-->Line_18 $$ thing.setName(null)[ FD ]
Line_5 $$ Thing thing = new Thing()-->Line_7 $$ s.save(thing)[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction t = s.beginTransaction()[ FD ]
Line_12 $$ List things = s.createQuery("from Thing").list()-->Line_27 $$ assertEquals(1, things.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_20 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Thing thing = new Thing()-->Line_6 $$ thing.setName("one")[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_3 $$ Session s = openSession()[ CD ]
Line_24 $$ s = openSession()-->Line_26 $$ things = s.createQuery("from Thing").list()[ FD ]
Line_10 $$ s = openSession()-->Line_26 $$ things = s.createQuery("from Thing").list()[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_10 $$ s = openSession()[ CD ]
Line_26 $$ things = s.createQuery("from Thing").list()-->Line_27 $$ assertEquals(1, things.size())[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_16 $$ t.commit()[ CD ]
Line_3 $$ Session s = openSession()-->Line_26 $$ things = s.createQuery("from Thing").list()[ FD ]
Line_11 $$ t = s.beginTransaction()-->Line_25 $$ t = s.beginTransaction()[ FD ]
Line_25 $$ t = s.beginTransaction()-->Line_31 $$ t.commit()[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_29 $$ assertNull(thing.getName())[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_31 $$ t.commit()[ FD ]
Line_28 $$ thing = (Thing) things.get(0)-->Line_30 $$ s.delete(thing)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_11 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_24 $$ s = openSession()[ FD ]
Line_10 $$ s = openSession()-->Line_32 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_32 $$ s.close()[ FD ]
Line_5 $$ Thing thing = new Thing()-->Line_21 $$ s.update(thing)[ FD ]
Line_11 $$ t = s.beginTransaction()-->Line_22 $$ t.commit()[ FD ]
Line_5 $$ Thing thing = new Thing()-->Line_15 $$ assertEquals("one", thing.getName())[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_26 $$ things = s.createQuery("from Thing").list()[ CD ]
Line_10 $$ s = openSession()-->Line_24 $$ s = openSession()[ FD ]
Line_12 $$ List things = s.createQuery("from Thing").list()-->Line_13 $$ assertEquals(1, things.size())[ FD ]
Line_19 $$ s = openSession()-->Line_26 $$ things = s.createQuery("from Thing").list()[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_6 $$ thing.setName("one")[ CD ]
Line_14 $$ thing = (Thing) things.get(0)-->Line_15 $$ assertEquals("one", thing.getName())[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_11 $$ t = s.beginTransaction()[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_8 $$ t.commit()[ FD ]
Line_20 $$ t = s.beginTransaction()-->Line_25 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_9 $$ s.close()[ CD ]
Line_14 $$ thing = (Thing) things.get(0)-->Line_29 $$ assertNull(thing.getName())[ FD ]
Line_5 $$ Thing thing = new Thing()-->Line_30 $$ s.delete(thing)[ FD ]
Line_19 $$ s = openSession()-->Line_20 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_5 $$ Thing thing = new Thing()[ CD ]
Line_11 $$ t = s.beginTransaction()-->Line_20 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_27 $$ assertEquals(1, things.size())[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_25 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_25 $$ t = s.beginTransaction()[ CD ]
Line_20 $$ t = s.beginTransaction()-->Line_22 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_7 $$ s.save(thing)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_16 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_21 $$ s.update(thing)[ FD ]
Line_3 $$ Session s = openSession()-->Line_17 $$ s.close()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_20 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_32 $$ s.close()[ CD ]
Line_20 $$ t = s.beginTransaction()-->Line_31 $$ t.commit()[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_7 $$ s.save(thing)[ CD ]
Line_5 $$ Thing thing = new Thing()-->Line_28 $$ thing = (Thing) things.get(0)[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_8 $$ t.commit()[ CD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_19 $$ s = openSession()[ CD ]
Line_3 $$ Session s = openSession()-->Line_9 $$ s.close()[ FD ]
Line_5 $$ Thing thing = new Thing()-->Line_14 $$ thing = (Thing) things.get(0)[ FD ]
Line_10 $$ s = openSession()-->Line_23 $$ s.close()[ FD ]
Line_24 $$ s = openSession()-->Line_30 $$ s.delete(thing)[ FD ]
Line_10 $$ s = openSession()-->Line_19 $$ s = openSession()[ FD ]
Line_28 $$ thing = (Thing) things.get(0)-->Line_29 $$ assertNull(thing.getName())[ FD ]
Line_10 $$ s = openSession()-->Line_17 $$ s.close()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_22 $$ t.commit()[ FD ]
Line_26 $$ things = s.createQuery("from Thing").list()-->Line_28 $$ thing = (Thing) things.get(0)[ FD ]
Line_14 $$ thing = (Thing) things.get(0)-->Line_18 $$ thing.setName(null)[ FD ]
Line_3 $$ Session s = openSession()-->Line_19 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_23 $$ s.close()[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_23 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_30 $$ s.delete(thing)[ FD ]
Line_11 $$ t = s.beginTransaction()-->Line_16 $$ t.commit()[ FD ]
Line_14 $$ thing = (Thing) things.get(0)-->Line_30 $$ s.delete(thing)[ FD ]
Line_12 $$ List things = s.createQuery("from Thing").list()-->Line_28 $$ thing = (Thing) things.get(0)[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_30 $$ s.delete(thing)[ CD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_4 $$ Transaction t = s.beginTransaction()[ CD ]
Line_10 $$ s = openSession()-->Line_30 $$ s.delete(thing)[ FD ]
Line_19 $$ s = openSession()-->Line_24 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_25 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_24 $$ s = openSession()[ CD ]
Line_19 $$ s = openSession()-->Line_23 $$ s.close()[ FD ]
Line_14 $$ thing = (Thing) things.get(0)-->Line_28 $$ thing = (Thing) things.get(0)[ FD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_22 $$ t.commit()[ CD ]
Line_2 $$ public void testUpdateNonNullOptionalJoinToNullDetached() throws Exception -->Line_12 $$ List things = s.createQuery("from Thing").list()[ CD ]
Line_19 $$ s = openSession()-->Line_32 $$ s.close()[ FD ]
Line_19 $$ s = openSession()-->Line_25 $$ t = s.beginTransaction()[ FD ]
Line_12 $$ List things = s.createQuery("from Thing").list()-->Line_14 $$ thing = (Thing) things.get(0)[ FD ]
Line_12 $$ List things = s.createQuery("from Thing").list()-->Line_26 $$ things = s.createQuery("from Thing").list()[ FD ]
