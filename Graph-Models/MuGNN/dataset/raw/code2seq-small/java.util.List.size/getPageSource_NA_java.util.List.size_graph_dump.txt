Line_22 $$ if (index == null) -->Line_26 $$ includedColumns.put(index, columnTypes.get(i))[ CD ]
Line_10 $$ ImmutableList.Builder<Integer> columnIndexes = ImmutableList.builder()-->Line_14 $$ columnIndexes.add(OrcPageSource.ROWID_COLUMN)[ FD ]
Line_12 $$ long columnId = columnIds.get(i)-->Line_21 $$ Integer index = indexMap.get(columnId)[ FD ]
Line_11 $$ for (int i = 0; i < columnIds.size(); i++) -->Line_13 $$ if (isShardRowIdColumn(columnId)) [ CD ]
Line_10 $$ ImmutableList.Builder<Integer> columnIndexes = ImmutableList.builder()-->Line_23 $$ columnIndexes.add(OrcPageSource.NULL_COLUMN)[ FD ]
Line_22 $$ if (index == null) -->Line_25 $$ columnIndexes.add(index)[ CD ]
Line_10 $$ ImmutableList.Builder<Integer> columnIndexes = ImmutableList.builder()-->Line_25 $$ columnIndexes.add(index)[ FD ]
Line_9 $$ ImmutableMap.Builder<Integer, Type> includedColumns = ImmutableMap.builder()-->Line_30 $$ OrcRecordReader recordReader = reader.createRecordReader(includedColumns.build(), predicate, UTC, systemMemoryUsage)[ FD ]
Line_11 $$ for (int i = 0; i < columnIds.size(); i++) -->Line_17 $$ if (isShardUuidColumn(columnId)) [ CD ]
Line_12 $$ long columnId = columnIds.get(i)-->Line_13 $$ if (isShardRowIdColumn(columnId)) [ FD ]
Line_11 $$ for (int i = 0; i < columnIds.size(); i++) -->Line_12 $$ long columnId = columnIds.get(i)[ CD ]
Line_11 $$ for (int i = 0; i < columnIds.size(); i++) -->Line_21 $$ Integer index = indexMap.get(columnId)[ CD ]
Line_11 $$ for (int i = 0; i < columnIds.size(); i++) -->Line_26 $$ includedColumns.put(index, columnTypes.get(i))[ FD ]
Line_22 $$ if (index == null) -->Line_23 $$ columnIndexes.add(OrcPageSource.NULL_COLUMN)[ CD ]
Line_11 $$ for (int i = 0; i < columnIds.size(); i++) -->Line_22 $$ if (index == null) [ CD ]
Line_12 $$ long columnId = columnIds.get(i)-->Line_17 $$ if (isShardUuidColumn(columnId)) [ FD ]
Line_11 $$ for (int i = 0; i < columnIds.size(); i++) -->Line_12 $$ long columnId = columnIds.get(i)[ FD ]
Line_29 $$ OrcPredicate predicate = getPredicate(effectivePredicate, indexMap)-->Line_30 $$ OrcRecordReader recordReader = reader.createRecordReader(includedColumns.build(), predicate, UTC, systemMemoryUsage)[ FD ]
Line_21 $$ Integer index = indexMap.get(columnId)-->Line_25 $$ columnIndexes.add(index)[ FD ]
Line_5 $$ AggregatedMemoryContext systemMemoryUsage = new AggregatedMemoryContext()-->Line_30 $$ OrcRecordReader recordReader = reader.createRecordReader(includedColumns.build(), predicate, UTC, systemMemoryUsage)[ FD ]
Line_21 $$ Integer index = indexMap.get(columnId)-->Line_22 $$ if (index == null) [ FD ]
Line_7 $$ OrcReader reader = new OrcReader(dataSource, new OrcMetadataReader(), readerAttributes.getMaxMergeDistance(), readerAttributes.getMaxReadSize())-->Line_8 $$ Map<Long, Integer> indexMap = columnIdIndex(reader.getColumnNames())[ FD ]
Line_17 $$ if (isShardUuidColumn(columnId)) -->Line_18 $$ columnIndexes.add(OrcPageSource.SHARD_UUID_COLUMN)[ CD ]
Line_31 $$ Optional<ShardRewriter> shardRewriter = Optional.empty()-->Line_33 $$ shardRewriter = Optional.of(createShardRewriter(transactionId.getAsLong(), shardUuid))[ FD ]
Line_21 $$ Integer index = indexMap.get(columnId)-->Line_26 $$ includedColumns.put(index, columnTypes.get(i))[ FD ]
Line_32 $$ if (transactionId.isPresent()) -->Line_33 $$ shardRewriter = Optional.of(createShardRewriter(transactionId.getAsLong(), shardUuid))[ CD ]
Line_9 $$ ImmutableMap.Builder<Integer, Type> includedColumns = ImmutableMap.builder()-->Line_26 $$ includedColumns.put(index, columnTypes.get(i))[ FD ]
Line_8 $$ Map<Long, Integer> indexMap = columnIdIndex(reader.getColumnNames())-->Line_29 $$ OrcPredicate predicate = getPredicate(effectivePredicate, indexMap)[ FD ]
Line_8 $$ Map<Long, Integer> indexMap = columnIdIndex(reader.getColumnNames())-->Line_21 $$ Integer index = indexMap.get(columnId)[ FD ]
Line_7 $$ OrcReader reader = new OrcReader(dataSource, new OrcMetadataReader(), readerAttributes.getMaxMergeDistance(), readerAttributes.getMaxReadSize())-->Line_30 $$ OrcRecordReader recordReader = reader.createRecordReader(includedColumns.build(), predicate, UTC, systemMemoryUsage)[ FD ]
Line_13 $$ if (isShardRowIdColumn(columnId)) -->Line_14 $$ columnIndexes.add(OrcPageSource.ROWID_COLUMN)[ CD ]
Line_10 $$ ImmutableList.Builder<Integer> columnIndexes = ImmutableList.builder()-->Line_18 $$ columnIndexes.add(OrcPageSource.SHARD_UUID_COLUMN)[ FD ]
Line_10 $$ ImmutableList.Builder<Integer> columnIndexes = ImmutableList.builder()-->Line_35 $$ return new OrcPageSource(shardRewriter, recordReader, dataSource, columnIds, columnTypes, columnIndexes.build(), shardUuid, systemMemoryUsage)[ FD ]
Line_4 $$ OrcDataSource dataSource = openShard(shardUuid, readerAttributes)-->Line_38 $$ dataSource.close()[ FD ]
