Line_24 $$ if (!(getDialect() instanceof MySQLDialect) && !(getDialect() instanceof PostgreSQLDialect) && !(getDialect() instanceof PostgreSQL81Dialect)) -->Line_33 $$ assertEquals(1, objects.size())[ CD ]
Line_5 $$ Transaction tx = session.beginTransaction()-->Line_16 $$ tx = session.beginTransaction()[ FD ]
Line_17 $$ List objects = session.createCriteria(TestObject.class).add(Restrictions.like("text", pattern)).list()-->Line_33 $$ assertEquals(1, objects.size())[ FD ]
Line_4 $$ Session session = openSession()-->Line_36 $$ session.close()[ FD ]
Line_4 $$ Session session = openSession()-->Line_29 $$ session.clear()[ FD ]
Line_6 $$ TestObject obj = new TestObject()-->Line_8 $$ obj.setText("XyZ " + uniq + " blablabla")[ FD ]
Line_4 $$ Session session = openSession()-->Line_5 $$ Transaction tx = session.beginTransaction()[ FD ]
Line_4 $$ Session session = openSession()-->Line_17 $$ List objects = session.createCriteria(TestObject.class).add(Restrictions.like("text", pattern)).list()[ FD ]
Line_4 $$ Session session = openSession()-->Line_23 $$ session.clear()[ FD ]
Line_4 $$ Session session = openSession()-->Line_19 $$ session.clear()[ FD ]
Line_6 $$ TestObject obj = new TestObject()-->Line_9 $$ session.save(obj)[ FD ]
Line_4 $$ Session session = openSession()-->Line_12 $$ session.close()[ FD ]
Line_16 $$ tx = session.beginTransaction()-->Line_35 $$ tx.rollback()[ FD ]
Line_5 $$ Transaction tx = session.beginTransaction()-->Line_35 $$ tx.rollback()[ FD ]
Line_4 $$ Session session = openSession()-->Line_9 $$ session.save(obj)[ FD ]
Line_17 $$ List objects = session.createCriteria(TestObject.class).add(Restrictions.like("text", pattern)).list()-->Line_22 $$ assertEquals(1, objects.size())[ FD ]
Line_5 $$ Transaction tx = session.beginTransaction()-->Line_11 $$ tx.commit()[ FD ]
Line_17 $$ List objects = session.createCriteria(TestObject.class).add(Restrictions.like("text", pattern)).list()-->Line_18 $$ assertEquals(1, objects.size())[ FD ]
Line_24 $$ if (!(getDialect() instanceof MySQLDialect) && !(getDialect() instanceof PostgreSQLDialect) && !(getDialect() instanceof PostgreSQL81Dialect)) -->Line_29 $$ session.clear()[ CD ]
Line_4 $$ Session session = openSession()-->Line_10 $$ session.flush()[ FD ]
Line_13 $$ String pattern = "XyZ " + uniq + "%"-->Line_17 $$ List objects = session.createCriteria(TestObject.class).add(Restrictions.like("text", pattern)).list()[ FD ]
Line_24 $$ if (!(getDialect() instanceof MySQLDialect) && !(getDialect() instanceof PostgreSQLDialect) && !(getDialect() instanceof PostgreSQL81Dialect)) -->Line_28 $$ assertEquals(1, objects.size())[ CD ]
Line_4 $$ Session session = openSession()-->Line_16 $$ tx = session.beginTransaction()[ FD ]
Line_17 $$ List objects = session.createCriteria(TestObject.class).add(Restrictions.like("text", pattern)).list()-->Line_28 $$ assertEquals(1, objects.size())[ FD ]
