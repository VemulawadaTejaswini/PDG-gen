Line_15 $$ List<String> checksumLines = Files.readAllLines(checksumFile, StandardCharsets.UTF_8)-->Line_17 $$ throw new ElasticsearchCorruptionException("invalid format for checksum file (" + hashFunc.name() + "), expected 1 line, got: " + checksumLines.size())[ FD ]
Line_15 $$ List<String> checksumLines = Files.readAllLines(checksumFile, StandardCharsets.UTF_8)-->Line_16 $$ if (checksumLines.size() != 1) [ FD ]
Line_13 $$ if (download(checksumURL, checksumFile, progress, timeout)) -->Line_15 $$ List<String> checksumLines = Files.readAllLines(checksumFile, StandardCharsets.UTF_8)[ CD ]
Line_13 $$ if (download(checksumURL, checksumFile, progress, timeout)) -->Line_16 $$ if (checksumLines.size() != 1) [ CD ]
Line_13 $$ if (download(checksumURL, checksumFile, progress, timeout)) -->Line_21 $$ if (fileHex.equals(checksumHex) == false) [ CD ]
Line_15 $$ List<String> checksumLines = Files.readAllLines(checksumFile, StandardCharsets.UTF_8)-->Line_19 $$ String checksumHex = checksumLines.get(0)[ FD ]
Line_13 $$ if (download(checksumURL, checksumFile, progress, timeout)) -->Line_20 $$ String fileHex = hashFunc.checksum(fileBytes)[ CD ]
Line_13 $$ if (download(checksumURL, checksumFile, progress, timeout)) -->Line_24 $$ return true[ CD ]
Line_19 $$ String checksumHex = checksumLines.get(0)-->Line_21 $$ if (fileHex.equals(checksumHex) == false) [ FD ]
Line_14 $$ byte[] fileBytes = Files.readAllBytes(originalFile)-->Line_20 $$ String fileHex = hashFunc.checksum(fileBytes)[ FD ]
Line_20 $$ String fileHex = hashFunc.checksum(fileBytes)-->Line_21 $$ if (fileHex.equals(checksumHex) == false) [ FD ]
Line_13 $$ if (download(checksumURL, checksumFile, progress, timeout)) -->Line_19 $$ String checksumHex = checksumLines.get(0)[ CD ]
Line_13 $$ if (download(checksumURL, checksumFile, progress, timeout)) -->Line_14 $$ byte[] fileBytes = Files.readAllBytes(originalFile)[ CD ]
