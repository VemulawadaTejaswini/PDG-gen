Line_29 $$ if (values.size() == 1) -->Line_30 $$ sb.append(" = ").append(column.type.getString(first.startValue))[ CD ]
Line_6 $$ for (int i = 0; i < clusteringSize; i++) -->Line_9 $$ for (int j = 0; j < slices.length; j++) [ CD ]
Line_6 $$ for (int i = 0; i < clusteringSize; i++) -->Line_16 $$ for (int i = 0; i < clusteringSize; i++) [ FD ]
Line_2 $$ public String toCQLString(CFMetaData metadata) -->Line_17 $$ ColumnDefinition column = metadata.clusteringColumns().get(i)[ FD ]
Line_18 $$ List<ComponentOfSlice> componentInfo = columnComponents.get(i)-->Line_21 $$ ComponentOfSlice first = componentInfo.get(0)[ FD ]
Line_2 $$ public String toCQLString(CFMetaData metadata) -->Line_6 $$ for (int i = 0; i < clusteringSize; i++) [ CD ]
Line_16 $$ for (int i = 0; i < clusteringSize; i++) -->Line_21 $$ ComponentOfSlice first = componentInfo.get(0)[ CD ]
Line_21 $$ ComponentOfSlice first = componentInfo.get(0)-->Line_22 $$ if (first.isEQ()) [ FD ]
Line_44 $$ if (first.endValue != null) -->Line_45 $$ if (needAnd)[ CD ]
Line_18 $$ List<ComponentOfSlice> componentInfo = columnComponents.get(i)-->Line_28 $$ values.add(componentInfo.get(j).startValue)[ FD ]
Line_2 $$ public String toCQLString(CFMetaData metadata) -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_42 $$ sb.append(column.name).append(first.startInclusive ? " >= " : " > ").append(column.type.getString(first.startValue))[ FD ]
Line_29 $$ if (values.size() == 1) -->Line_32 $$ sb.append(" IN (")[ CD ]
Line_6 $$ for (int i = 0; i < clusteringSize; i++) -->Line_17 $$ ColumnDefinition column = metadata.clusteringColumns().get(i)[ FD ]
Line_28 $$ for (int j = 0; j < componentInfo.size(); j++) values.add(componentInfo.get(j).startValue)-->Line_34 $$ sb.append(j++ == 0 ? "" : ", ").append(column.type.getString(value))[ FD ]
Line_38 $$ if (first.startValue != null) -->Line_39 $$ if (needAnd)[ CD ]
Line_44 $$ if (first.endValue != null) -->Line_48 $$ sb.append(column.name).append(first.endInclusive ? " <= " : " < ").append(column.type.getString(first.endValue))[ CD ]
Line_44 $$ if (first.endValue != null) -->Line_47 $$ needAnd = true[ CD ]
Line_15 $$ boolean needAnd = false-->Line_25 $$ needAnd = true[ FD ]
Line_16 $$ for (int i = 0; i < clusteringSize; i++) -->Line_17 $$ ColumnDefinition column = metadata.clusteringColumns().get(i)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_30 $$ sb.append(" = ").append(column.type.getString(first.startValue))[ FD ]
Line_23 $$ if (needAnd)-->Line_24 $$ sb.append(" AND ")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_46 $$ sb.append(" AND ")[ FD ]
Line_25 $$ needAnd = true-->Line_41 $$ needAnd = true[ FD ]
Line_6 $$ for (int i = 0; i < clusteringSize; i++) -->Line_10 $$ ComponentOfSlice c = ComponentOfSlice.fromSlice(i, slices[j])[ FD ]
Line_41 $$ needAnd = true-->Line_47 $$ needAnd = true[ FD ]
Line_10 $$ ComponentOfSlice c = ComponentOfSlice.fromSlice(i, slices[j])-->Line_12 $$ perSlice.add(c)[ FD ]
Line_22 $$ if (first.isEQ()) -->Line_44 $$ if (first.endValue != null) [ CD ]
Line_9 $$ for (int j = 0; j < slices.length; j++) -->Line_28 $$ values.add(componentInfo.get(j).startValue)[ FD ]
Line_9 $$ for (int j = 0; j < slices.length; j++) -->Line_34 $$ sb.append(j++ == 0 ? "" : ", ").append(column.type.getString(value))[ FD ]
Line_45 $$ if (needAnd)-->Line_46 $$ sb.append(" AND ")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_35 $$ sb.append(")")[ FD ]
Line_10 $$ ComponentOfSlice c = ComponentOfSlice.fromSlice(i, slices[j])-->Line_11 $$ if (c != null)[ FD ]
Line_9 $$ for (int j = 0; j < slices.length; j++) -->Line_11 $$ if (c != null)[ CD ]
Line_11 $$ if (c != null)-->Line_12 $$ perSlice.add(c)[ CD ]
Line_6 $$ for (int i = 0; i < clusteringSize; i++) -->Line_7 $$ List<ComponentOfSlice> perSlice = new ArrayList()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_40 $$ sb.append(" AND ")[ FD ]
Line_2 $$ public String toCQLString(CFMetaData metadata) -->Line_52 $$ return sb.toString()[ CD ]
Line_2 $$ public String toCQLString(CFMetaData metadata) -->Line_15 $$ boolean needAnd = false[ CD ]
Line_16 $$ for (int i = 0; i < clusteringSize; i++) -->Line_19 $$ if (componentInfo.isEmpty())[ CD ]
Line_7 $$ List<ComponentOfSlice> perSlice = new ArrayList()-->Line_12 $$ perSlice.add(c)[ FD ]
Line_6 $$ for (int i = 0; i < clusteringSize; i++) -->Line_18 $$ List<ComponentOfSlice> componentInfo = columnComponents.get(i)[ FD ]
Line_5 $$ List<List<ComponentOfSlice>> columnComponents = new ArrayList(clusteringSize)-->Line_18 $$ List<ComponentOfSlice> componentInfo = columnComponents.get(i)[ FD ]
Line_27 $$ Set<ByteBuffer> values = new LinkedHashSet()-->Line_28 $$ values.add(componentInfo.get(j).startValue)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_32 $$ sb.append(" IN (")[ FD ]
Line_9 $$ for (int j = 0; j < slices.length; j++) -->Line_28 $$ for (int j = 0; j < componentInfo.size(); j++) values.add(componentInfo.get(j).startValue)[ FD ]
Line_39 $$ if (needAnd)-->Line_40 $$ sb.append(" AND ")[ CD ]
Line_22 $$ if (first.isEQ()) -->Line_23 $$ if (needAnd)[ CD ]
Line_5 $$ List<List<ComponentOfSlice>> columnComponents = new ArrayList(clusteringSize)-->Line_8 $$ columnComponents.add(perSlice)[ FD ]
Line_7 $$ List<ComponentOfSlice> perSlice = new ArrayList()-->Line_8 $$ columnComponents.add(perSlice)[ FD ]
Line_2 $$ public String toCQLString(CFMetaData metadata) -->Line_4 $$ int clusteringSize = metadata.clusteringColumns().size()[ FD ]
Line_16 $$ for (int i = 0; i < clusteringSize; i++) -->Line_17 $$ ColumnDefinition column = metadata.clusteringColumns().get(i)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_26 $$ sb.append(column.name)[ FD ]
Line_4 $$ int clusteringSize = metadata.clusteringColumns().size()-->Line_16 $$ for (int i = 0; i < clusteringSize; i++) [ FD ]
Line_16 $$ for (int i = 0; i < clusteringSize; i++) -->Line_18 $$ List<ComponentOfSlice> componentInfo = columnComponents.get(i)[ CD ]
Line_22 $$ if (first.isEQ()) -->Line_26 $$ sb.append(column.name)[ CD ]
Line_22 $$ if (first.isEQ()) -->Line_25 $$ needAnd = true[ CD ]
Line_2 $$ public String toCQLString(CFMetaData metadata) -->Line_16 $$ for (int i = 0; i < clusteringSize; i++) [ CD ]
Line_25 $$ needAnd = true-->Line_47 $$ needAnd = true[ FD ]
Line_38 $$ if (first.startValue != null) -->Line_42 $$ sb.append(column.name).append(first.startInclusive ? " >= " : " > ").append(column.type.getString(first.startValue))[ CD ]
Line_22 $$ if (first.isEQ()) -->Line_27 $$ Set<ByteBuffer> values = new LinkedHashSet()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_24 $$ sb.append(" AND ")[ FD ]
Line_22 $$ if (first.isEQ()) -->Line_29 $$ if (values.size() == 1) [ CD ]
Line_27 $$ Set<ByteBuffer> values = new LinkedHashSet()-->Line_29 $$ if (values.size() == 1) [ FD ]
Line_2 $$ public String toCQLString(CFMetaData metadata) -->Line_5 $$ List<List<ComponentOfSlice>> columnComponents = new ArrayList(clusteringSize)[ CD ]
Line_16 $$ for (int i = 0; i < clusteringSize; i++) -->Line_18 $$ List<ComponentOfSlice> componentInfo = columnComponents.get(i)[ FD ]
Line_22 $$ if (first.isEQ()) -->Line_38 $$ if (first.startValue != null) [ CD ]
Line_38 $$ if (first.startValue != null) -->Line_41 $$ needAnd = true[ CD ]
Line_2 $$ public String toCQLString(CFMetaData metadata) -->Line_4 $$ int clusteringSize = metadata.clusteringColumns().size()[ CD ]
Line_22 $$ if (first.isEQ()) -->Line_28 $$ for (int j = 0; j < componentInfo.size(); j++) values.add(componentInfo.get(j).startValue)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_48 $$ sb.append(column.name).append(first.endInclusive ? " <= " : " < ").append(column.type.getString(first.endValue))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_52 $$ return sb.toString()[ FD ]
Line_15 $$ boolean needAnd = false-->Line_47 $$ needAnd = true[ FD ]
Line_16 $$ for (int i = 0; i < clusteringSize; i++) -->Line_22 $$ if (first.isEQ()) [ CD ]
Line_4 $$ int clusteringSize = metadata.clusteringColumns().size()-->Line_6 $$ for (int i = 0; i < clusteringSize; i++) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_34 $$ sb.append(j++ == 0 ? "" : ", ").append(column.type.getString(value))[ FD ]
Line_15 $$ boolean needAnd = false-->Line_41 $$ needAnd = true[ FD ]
Line_18 $$ List<ComponentOfSlice> componentInfo = columnComponents.get(i)-->Line_28 $$ for (int j = 0; j < componentInfo.size(); j++) values.add(componentInfo.get(j).startValue)[ FD ]
Line_29 $$ if (values.size() == 1) -->Line_35 $$ sb.append(")")[ CD ]
Line_9 $$ for (int j = 0; j < slices.length; j++) -->Line_10 $$ ComponentOfSlice c = ComponentOfSlice.fromSlice(i, slices[j])[ CD ]
Line_18 $$ List<ComponentOfSlice> componentInfo = columnComponents.get(i)-->Line_19 $$ if (componentInfo.isEmpty())[ FD ]
Line_6 $$ for (int i = 0; i < clusteringSize; i++) -->Line_8 $$ columnComponents.add(perSlice)[ CD ]
