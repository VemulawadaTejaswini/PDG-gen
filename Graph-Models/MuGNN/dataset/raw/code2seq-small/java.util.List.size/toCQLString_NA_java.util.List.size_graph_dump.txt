Line_8 $$ for (int i = 0; i < clusteringSize; i++) -->Line_12 $$ ComponentOfSlice c = ComponentOfSlice.fromSlice(i, slices[j])[ FD ]
Line_8 $$ for (int i = 0; i < clusteringSize; i++) -->Line_18 $$ for (int i = 0; i < clusteringSize; i++) [ FD ]
Line_18 $$ for (int i = 0; i < clusteringSize; i++) -->Line_19 $$ ColumnDefinition column = metadata.clusteringColumns().get(i)[ FD ]
Line_56 $$ if (first.endValue != null) -->Line_59 $$ needAnd = true[ CD ]
Line_39 $$ if (values.size() == 1) -->Line_40 $$ sb.append(" = ").append(column.type.getString(first.startValue))[ CD ]
Line_57 $$ if (needAnd)-->Line_58 $$ sb.append(" AND ")[ CD ]
Line_18 $$ for (int i = 0; i < clusteringSize; i++) -->Line_20 $$ List<ComponentOfSlice> componentInfo = columnComponents.get(i)[ CD ]
Line_18 $$ for (int i = 0; i < clusteringSize; i++) -->Line_19 $$ ColumnDefinition column = metadata.clusteringColumns().get(i)[ CD ]
Line_8 $$ for (int i = 0; i < clusteringSize; i++) -->Line_19 $$ ColumnDefinition column = metadata.clusteringColumns().get(i)[ FD ]
Line_2 $$ public String toCQLString(CFMetaData metadata) -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_8 $$ for (int i = 0; i < clusteringSize; i++) -->Line_11 $$ for (int j = 0; j < slices.length; j++) [ CD ]
Line_37 $$ Set<ByteBuffer> values = new LinkedHashSet()-->Line_39 $$ if (values.size() == 1) [ FD ]
Line_56 $$ if (first.endValue != null) -->Line_57 $$ if (needAnd)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_60 $$ sb.append(column.name).append(first.endInclusive ? " <= " : " < ").append(column.type.getString(first.endValue))[ FD ]
Line_8 $$ for (int i = 0; i < clusteringSize; i++) -->Line_20 $$ List<ComponentOfSlice> componentInfo = columnComponents.get(i)[ FD ]
Line_32 $$ if (first.isEQ()) -->Line_35 $$ needAnd = true[ CD ]
Line_7 $$ List<List<ComponentOfSlice>> columnComponents = new ArrayList(clusteringSize)-->Line_20 $$ List<ComponentOfSlice> componentInfo = columnComponents.get(i)[ FD ]
Line_9 $$ List<ComponentOfSlice> perSlice = new ArrayList()-->Line_10 $$ columnComponents.add(perSlice)[ FD ]
Line_9 $$ List<ComponentOfSlice> perSlice = new ArrayList()-->Line_14 $$ perSlice.add(c)[ FD ]
Line_32 $$ if (first.isEQ()) -->Line_33 $$ if (needAnd)[ CD ]
Line_17 $$ boolean needAnd = false-->Line_59 $$ needAnd = true[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_58 $$ sb.append(" AND ")[ FD ]
Line_32 $$ if (first.isEQ()) -->Line_37 $$ Set<ByteBuffer> values = new LinkedHashSet()[ CD ]
Line_18 $$ for (int i = 0; i < clusteringSize; i++) -->Line_32 $$ if (first.isEQ()) [ CD ]
Line_37 $$ Set<ByteBuffer> values = new LinkedHashSet()-->Line_38 $$ values.add(componentInfo.get(j).startValue)[ FD ]
Line_2 $$ public String toCQLString(CFMetaData metadata) -->Line_17 $$ boolean needAnd = false[ CD ]
Line_8 $$ for (int i = 0; i < clusteringSize; i++) -->Line_10 $$ columnComponents.add(perSlice)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_52 $$ sb.append(" AND ")[ FD ]
Line_17 $$ boolean needAnd = false-->Line_53 $$ needAnd = true[ FD ]
Line_12 $$ ComponentOfSlice c = ComponentOfSlice.fromSlice(i, slices[j])-->Line_13 $$ if (c != null)[ FD ]
Line_20 $$ List<ComponentOfSlice> componentInfo = columnComponents.get(i)-->Line_21 $$ if (componentInfo.isEmpty())[ FD ]
Line_35 $$ needAnd = true-->Line_59 $$ needAnd = true[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_54 $$ sb.append(column.name).append(first.startInclusive ? " >= " : " > ").append(column.type.getString(first.startValue))[ FD ]
Line_32 $$ if (first.isEQ()) -->Line_38 $$ for (int j = 0; j < componentInfo.size(); j++) values.add(componentInfo.get(j).startValue)[ CD ]
Line_32 $$ if (first.isEQ()) -->Line_36 $$ sb.append(column.name)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_44 $$ sb.append(j++ == 0 ? "" : ", ").append(column.type.getString(value))[ FD ]
Line_38 $$ for (int j = 0; j < componentInfo.size(); j++) values.add(componentInfo.get(j).startValue)-->Line_44 $$ sb.append(j++ == 0 ? "" : ", ").append(column.type.getString(value))[ FD ]
Line_7 $$ List<List<ComponentOfSlice>> columnComponents = new ArrayList(clusteringSize)-->Line_10 $$ columnComponents.add(perSlice)[ FD ]
Line_32 $$ if (first.isEQ()) -->Line_56 $$ if (first.endValue != null) [ CD ]
Line_53 $$ needAnd = true-->Line_59 $$ needAnd = true[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_42 $$ sb.append(" IN (")[ FD ]
Line_17 $$ boolean needAnd = false-->Line_35 $$ needAnd = true[ FD ]
Line_20 $$ List<ComponentOfSlice> componentInfo = columnComponents.get(i)-->Line_38 $$ values.add(componentInfo.get(j).startValue)[ FD ]
Line_11 $$ for (int j = 0; j < slices.length; j++) -->Line_38 $$ values.add(componentInfo.get(j).startValue)[ FD ]
Line_18 $$ for (int i = 0; i < clusteringSize; i++) -->Line_20 $$ List<ComponentOfSlice> componentInfo = columnComponents.get(i)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_34 $$ sb.append(" AND ")[ FD ]
Line_11 $$ for (int j = 0; j < slices.length; j++) -->Line_38 $$ for (int j = 0; j < componentInfo.size(); j++) values.add(componentInfo.get(j).startValue)[ FD ]
Line_2 $$ public String toCQLString(CFMetaData metadata) -->Line_7 $$ List<List<ComponentOfSlice>> columnComponents = new ArrayList(clusteringSize)[ CD ]
Line_11 $$ for (int j = 0; j < slices.length; j++) -->Line_44 $$ sb.append(j++ == 0 ? "" : ", ").append(column.type.getString(value))[ FD ]
Line_2 $$ public String toCQLString(CFMetaData metadata) -->Line_18 $$ for (int i = 0; i < clusteringSize; i++) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_45 $$ sb.append(")")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_64 $$ return sb.toString()[ FD ]
Line_11 $$ for (int j = 0; j < slices.length; j++) -->Line_13 $$ if (c != null)[ CD ]
Line_18 $$ for (int i = 0; i < clusteringSize; i++) -->Line_21 $$ if (componentInfo.isEmpty())[ CD ]
Line_8 $$ for (int i = 0; i < clusteringSize; i++) -->Line_9 $$ List<ComponentOfSlice> perSlice = new ArrayList()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_36 $$ sb.append(column.name)[ FD ]
Line_33 $$ if (needAnd)-->Line_34 $$ sb.append(" AND ")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_40 $$ sb.append(" = ").append(column.type.getString(first.startValue))[ FD ]
Line_11 $$ for (int j = 0; j < slices.length; j++) -->Line_12 $$ ComponentOfSlice c = ComponentOfSlice.fromSlice(i, slices[j])[ CD ]
Line_12 $$ ComponentOfSlice c = ComponentOfSlice.fromSlice(i, slices[j])-->Line_14 $$ perSlice.add(c)[ FD ]
Line_20 $$ List<ComponentOfSlice> componentInfo = columnComponents.get(i)-->Line_38 $$ for (int j = 0; j < componentInfo.size(); j++) values.add(componentInfo.get(j).startValue)[ FD ]
Line_39 $$ if (values.size() == 1) -->Line_42 $$ sb.append(" IN (")[ CD ]
Line_51 $$ if (needAnd)-->Line_52 $$ sb.append(" AND ")[ CD ]
Line_13 $$ if (c != null)-->Line_14 $$ perSlice.add(c)[ CD ]
Line_56 $$ if (first.endValue != null) -->Line_60 $$ sb.append(column.name).append(first.endInclusive ? " <= " : " < ").append(column.type.getString(first.endValue))[ CD ]
Line_2 $$ public String toCQLString(CFMetaData metadata) -->Line_8 $$ for (int i = 0; i < clusteringSize; i++) [ CD ]
Line_32 $$ if (first.isEQ()) -->Line_39 $$ if (values.size() == 1) [ CD ]
Line_2 $$ public String toCQLString(CFMetaData metadata) -->Line_64 $$ return sb.toString()[ CD ]
Line_35 $$ needAnd = true-->Line_53 $$ needAnd = true[ FD ]
Line_2 $$ public String toCQLString(CFMetaData metadata) -->Line_19 $$ ColumnDefinition column = metadata.clusteringColumns().get(i)[ FD ]
Line_39 $$ if (values.size() == 1) -->Line_45 $$ sb.append(")")[ CD ]
