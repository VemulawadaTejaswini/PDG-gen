Line_7 $$ BufferedReader br = new BufferedReader(new InputStreamReader(PluginManagerCore.class.getResourceAsStream("/brokenPlugins.txt")))-->Line_10 $$ while ((s = br.readLine()) != null) [ FD ]
Line_10 $$ while ((s = br.readLine()) != null) -->Line_11 $$ s = s.trim()[ CD ]
Line_9 $$ String s-->Line_14 $$ List<String> tokens = ParametersListUtil.parse(s)[ FD ]
Line_14 $$ List<String> tokens = ParametersListUtil.parse(s)-->Line_17 $$ if (tokens.size() == 1) [ FD ]
Line_10 $$ while ((s = br.readLine()) != null) -->Line_21 $$ List<String> versions = tokens.subList(1, tokens.size())[ CD ]
Line_10 $$ while ((s = br.readLine()) != null) -->Line_17 $$ if (tokens.size() == 1) [ CD ]
Line_14 $$ List<String> tokens = ParametersListUtil.parse(s)-->Line_21 $$ List<String> versions = tokens.subList(1, tokens.size())[ FD ]
Line_4 $$ if (ourBrokenPluginVersions == null) -->Line_5 $$ ourBrokenPluginVersions = MultiMap.createSet()[ CD ]
Line_10 $$ while ((s = br.readLine()) != null) -->Line_14 $$ List<String> tokens = ParametersListUtil.parse(s)[ CD ]
Line_9 $$ String s-->Line_11 $$ s = s.trim()[ FD ]
Line_10 $$ while ((s = br.readLine()) != null) -->Line_15 $$ if (tokens.isEmpty())[ CD ]
Line_10 $$ while ((s = br.readLine()) != null) -->Line_22 $$ ourBrokenPluginVersions.putValues(pluginId, versions)[ CD ]
Line_4 $$ if (ourBrokenPluginVersions == null) -->Line_6 $$ if (System.getProperty("idea.ignore.disabled.plugins") == null && !isUnitTestMode()) [ CD ]
Line_14 $$ List<String> tokens = ParametersListUtil.parse(s)-->Line_15 $$ if (tokens.isEmpty())[ FD ]
Line_10 $$ while ((s = br.readLine()) != null) -->Line_14 $$ List<String> tokens = ParametersListUtil.parse(s)[ FD ]
Line_7 $$ BufferedReader br = new BufferedReader(new InputStreamReader(PluginManagerCore.class.getResourceAsStream("/brokenPlugins.txt")))-->Line_27 $$ StreamUtil.closeStream(br)[ FD ]
Line_11 $$ s = s.trim()-->Line_14 $$ List<String> tokens = ParametersListUtil.parse(s)[ FD ]
Line_11 $$ s = s.trim()-->Line_12 $$ if (s.startsWith("//"))[ FD ]
Line_14 $$ List<String> tokens = ParametersListUtil.parse(s)-->Line_20 $$ String pluginId = tokens.get(0)[ FD ]
Line_6 $$ if (System.getProperty("idea.ignore.disabled.plugins") == null && !isUnitTestMode()) -->Line_7 $$ BufferedReader br = new BufferedReader(new InputStreamReader(PluginManagerCore.class.getResourceAsStream("/brokenPlugins.txt")))[ CD ]
Line_10 $$ while ((s = br.readLine()) != null) -->Line_11 $$ s = s.trim()[ FD ]
Line_20 $$ String pluginId = tokens.get(0)-->Line_22 $$ ourBrokenPluginVersions.putValues(pluginId, versions)[ FD ]
Line_21 $$ List<String> versions = tokens.subList(1, tokens.size())-->Line_22 $$ ourBrokenPluginVersions.putValues(pluginId, versions)[ FD ]
Line_10 $$ while ((s = br.readLine()) != null) -->Line_12 $$ if (s.startsWith("//"))[ CD ]
Line_9 $$ String s-->Line_10 $$ while ((s = br.readLine()) != null) [ FD ]
Line_10 $$ while ((s = br.readLine()) != null) -->Line_12 $$ if (s.startsWith("//"))[ FD ]
Line_9 $$ String s-->Line_12 $$ if (s.startsWith("//"))[ FD ]
Line_10 $$ while ((s = br.readLine()) != null) -->Line_20 $$ String pluginId = tokens.get(0)[ CD ]
