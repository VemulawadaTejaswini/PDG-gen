Line_4 $$ InetSocketAddress address = InetSocketAddress.createUnresolved("localhost", 8040)-->Line_7 $$ mockExec.startLocalizer(nmPrivateCTokensPath, address, "test", "application_0", "12345", dirsHandler.getLocalDirs(), dirsHandler.getLogDirs())[ FD ]
Line_8 $$ List<String> result = readMockParams()-->Line_17 $$ Assert.assertEquals(result.get(12), "test")[ FD ]
Line_8 $$ List<String> result = readMockParams()-->Line_12 $$ Assert.assertEquals(result.get(2), "0")[ FD ]
Line_8 $$ List<String> result = readMockParams()-->Line_15 $$ Assert.assertEquals(result.get(8), "-classpath")[ FD ]
Line_8 $$ List<String> result = readMockParams()-->Line_18 $$ Assert.assertEquals(result.get(13), "application_0")[ FD ]
Line_8 $$ List<String> result = readMockParams()-->Line_9 $$ Assert.assertEquals(result.size(), 17)[ FD ]
Line_8 $$ List<String> result = readMockParams()-->Line_13 $$ Assert.assertEquals(result.get(3), "application_0")[ FD ]
Line_8 $$ List<String> result = readMockParams()-->Line_11 $$ Assert.assertEquals(result.get(1), "test")[ FD ]
Line_8 $$ List<String> result = readMockParams()-->Line_19 $$ Assert.assertEquals(result.get(14), "12345")[ FD ]
Line_8 $$ List<String> result = readMockParams()-->Line_20 $$ Assert.assertEquals(result.get(15), "localhost")[ FD ]
Line_8 $$ List<String> result = readMockParams()-->Line_21 $$ Assert.assertEquals(result.get(16), "8040")[ FD ]
Line_8 $$ List<String> result = readMockParams()-->Line_10 $$ Assert.assertEquals(result.get(0), YarnConfiguration.DEFAULT_NM_NONSECURE_MODE_LOCAL_USER)[ FD ]
Line_8 $$ List<String> result = readMockParams()-->Line_14 $$ Assert.assertEquals(result.get(4), "/bin/nmPrivateCTokensPath")[ FD ]
Line_8 $$ List<String> result = readMockParams()-->Line_16 $$ Assert.assertEquals(result.get(11), "org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ContainerLocalizer")[ FD ]
Line_5 $$ Path nmPrivateCTokensPath = new Path("file:///bin/nmPrivateCTokensPath")-->Line_7 $$ mockExec.startLocalizer(nmPrivateCTokensPath, address, "test", "application_0", "12345", dirsHandler.getLocalDirs(), dirsHandler.getLogDirs())[ FD ]
