Line_2 $$ private static ClassLoader createSceneLoader(SceneBuilderInfo info) throws Exception -->Line_27 $$ if (urls.isEmpty()) [ CD ]
Line_9 $$ if (libFile.isFile() && libFile.getName().endsWith(".jar")) -->Line_24 $$ urls.add(libFile.toURI().toURL())[ CD ]
Line_2 $$ private static ClassLoader createSceneLoader(SceneBuilderInfo info) throws Exception -->Line_50 $$ return new URLClassLoader(urls.toArray(new URL[urls.size()]), SceneBuilderCreatorImpl.class.getClassLoader())[ CD ]
Line_34 $$ final File localEmbedder = new File(parent, "FXBuilderEmbedder")-->Line_35 $$ if (localEmbedder.exists()) [ FD ]
Line_35 $$ if (localEmbedder.exists()) -->Line_36 $$ urls.add(localEmbedder.toURI().toURL())[ CD ]
Line_46 $$ final File javaFxJar = new File(new File(new File(rtPath).getParentFile(), "ext"), "jfxrt.jar")-->Line_48 $$ urls.add(javaFxJar.toURI().toURL())[ FD ]
Line_3 $$ List<URL> urls = new ArrayList<URL>()-->Line_27 $$ if (urls.isEmpty()) [ FD ]
Line_3 $$ List<URL> urls = new ArrayList<URL>()-->Line_32 $$ urls.add(new File(new File(parent).getParent(), "embedder.jar").toURI().toURL())[ FD ]
Line_14 $$ if (version != null) -->Line_16 $$ if (index != -1) [ CD ]
Line_10 $$ if (libFile.getName().equalsIgnoreCase("SceneBuilderApp.jar")) -->Line_12 $$ String version = appJar.getManifest().getMainAttributes().getValue("Implementation-Version")[ CD ]
Line_35 $$ if (localEmbedder.exists()) -->Line_38 $$ File home = new File(PathManager.getHomePath(), "community")[ CD ]
Line_38 $$ File home = new File(PathManager.getHomePath(), "community")-->Line_39 $$ if (!home.exists()) [ FD ]
Line_10 $$ if (libFile.getName().equalsIgnoreCase("SceneBuilderApp.jar")) -->Line_20 $$ if (StringUtil.compareVersionNumbers(version, "2.0") < 0) [ CD ]
Line_31 $$ if (SceneBuilderCreatorImpl.class.getClassLoader() instanceof PluginClassLoader) -->Line_35 $$ if (localEmbedder.exists()) [ CD ]
Line_8 $$ for (File libFile : files) -->Line_9 $$ if (libFile.isFile() && libFile.getName().endsWith(".jar")) [ FD ]
Line_16 $$ if (index != -1) -->Line_17 $$ version = version.substring(0, index)[ CD ]
Line_8 $$ for (File libFile : files) -->Line_24 $$ urls.add(libFile.toURI().toURL())[ FD ]
Line_2 $$ private static ClassLoader createSceneLoader(SceneBuilderInfo info) throws Exception -->Line_31 $$ if (SceneBuilderCreatorImpl.class.getClassLoader() instanceof PluginClassLoader) [ CD ]
Line_8 $$ for (File libFile : files) -->Line_10 $$ if (libFile.getName().equalsIgnoreCase("SceneBuilderApp.jar")) [ FD ]
Line_34 $$ final File localEmbedder = new File(parent, "FXBuilderEmbedder")-->Line_36 $$ urls.add(localEmbedder.toURI().toURL())[ FD ]
Line_2 $$ private static ClassLoader createSceneLoader(SceneBuilderInfo info) throws Exception -->Line_47 $$ if (javaFxJar.isFile()) [ CD ]
Line_3 $$ List<URL> urls = new ArrayList<URL>()-->Line_24 $$ urls.add(libFile.toURI().toURL())[ FD ]
Line_3 $$ List<URL> urls = new ArrayList<URL>()-->Line_50 $$ return new URLClassLoader(urls.toArray(new URL[urls.size()]), SceneBuilderCreatorImpl.class.getClassLoader())[ FD ]
Line_2 $$ private static ClassLoader createSceneLoader(SceneBuilderInfo info) throws Exception -->Line_46 $$ final File javaFxJar = new File(new File(new File(rtPath).getParentFile(), "ext"), "jfxrt.jar")[ CD ]
Line_35 $$ if (localEmbedder.exists()) -->Line_39 $$ if (!home.exists()) [ CD ]
Line_17 $$ version = version.substring(0, index)-->Line_20 $$ if (StringUtil.compareVersionNumbers(version, "2.0") < 0) [ FD ]
Line_3 $$ List<URL> urls = new ArrayList<URL>()-->Line_42 $$ urls.add(new File(home, "plugins/JavaFX/FxBuilderEmbedder/lib/embedder.jar").toURI().toURL())[ FD ]
Line_15 $$ int index = version.indexOf(" ")-->Line_17 $$ version = version.substring(0, index)[ FD ]
Line_38 $$ File home = new File(PathManager.getHomePath(), "community")-->Line_40 $$ home = new File(PathManager.getHomePath())[ FD ]
Line_10 $$ if (libFile.getName().equalsIgnoreCase("SceneBuilderApp.jar")) -->Line_11 $$ JarFile appJar = new JarFile(libFile)[ CD ]
Line_15 $$ int index = version.indexOf(" ")-->Line_16 $$ if (index != -1) [ FD ]
Line_12 $$ String version = appJar.getManifest().getMainAttributes().getValue("Implementation-Version")-->Line_20 $$ if (StringUtil.compareVersionNumbers(version, "2.0") < 0) [ FD ]
Line_2 $$ private static ClassLoader createSceneLoader(SceneBuilderInfo info) throws Exception -->Line_5 $$ if (files == null) [ CD ]
Line_2 $$ private static ClassLoader createSceneLoader(SceneBuilderInfo info) throws Exception -->Line_45 $$ final String rtPath = PathUtil.getJarPathForClass(String.class)[ CD ]
Line_2 $$ private static ClassLoader createSceneLoader(SceneBuilderInfo info) throws Exception -->Line_3 $$ List<URL> urls = new ArrayList<URL>()[ CD ]
Line_14 $$ if (version != null) -->Line_15 $$ int index = version.indexOf(" ")[ CD ]
Line_2 $$ private static ClassLoader createSceneLoader(SceneBuilderInfo info) throws Exception -->Line_4 $$ File[] files = new File(info.libPath).listFiles()[ CD ]
Line_10 $$ if (libFile.getName().equalsIgnoreCase("SceneBuilderApp.jar")) -->Line_13 $$ appJar.close()[ CD ]
Line_11 $$ JarFile appJar = new JarFile(libFile)-->Line_13 $$ appJar.close()[ FD ]
Line_11 $$ JarFile appJar = new JarFile(libFile)-->Line_12 $$ String version = appJar.getManifest().getMainAttributes().getValue("Implementation-Version")[ FD ]
Line_12 $$ String version = appJar.getManifest().getMainAttributes().getValue("Implementation-Version")-->Line_15 $$ int index = version.indexOf(" ")[ FD ]
Line_46 $$ final File javaFxJar = new File(new File(new File(rtPath).getParentFile(), "ext"), "jfxrt.jar")-->Line_47 $$ if (javaFxJar.isFile()) [ FD ]
Line_10 $$ if (libFile.getName().equalsIgnoreCase("SceneBuilderApp.jar")) -->Line_14 $$ if (version != null) [ CD ]
Line_2 $$ private static ClassLoader createSceneLoader(SceneBuilderInfo info) throws Exception -->Line_30 $$ final String parent = new File(PathUtil.getJarPathForClass(SceneBuilderCreatorImpl.class)).getParent()[ CD ]
Line_9 $$ if (libFile.isFile() && libFile.getName().endsWith(".jar")) -->Line_10 $$ if (libFile.getName().equalsIgnoreCase("SceneBuilderApp.jar")) [ CD ]
Line_35 $$ if (localEmbedder.exists()) -->Line_42 $$ urls.add(new File(home, "plugins/JavaFX/FxBuilderEmbedder/lib/embedder.jar").toURI().toURL())[ CD ]
Line_31 $$ if (SceneBuilderCreatorImpl.class.getClassLoader() instanceof PluginClassLoader) -->Line_34 $$ final File localEmbedder = new File(parent, "FXBuilderEmbedder")[ CD ]
Line_4 $$ File[] files = new File(info.libPath).listFiles()-->Line_5 $$ if (files == null) [ FD ]
Line_12 $$ String version = appJar.getManifest().getMainAttributes().getValue("Implementation-Version")-->Line_17 $$ version = version.substring(0, index)[ FD ]
Line_39 $$ if (!home.exists()) -->Line_40 $$ home = new File(PathManager.getHomePath())[ CD ]
Line_47 $$ if (javaFxJar.isFile()) -->Line_48 $$ urls.add(javaFxJar.toURI().toURL())[ CD ]
Line_12 $$ String version = appJar.getManifest().getMainAttributes().getValue("Implementation-Version")-->Line_14 $$ if (version != null) [ FD ]
Line_3 $$ List<URL> urls = new ArrayList<URL>()-->Line_36 $$ urls.add(localEmbedder.toURI().toURL())[ FD ]
Line_3 $$ List<URL> urls = new ArrayList<URL>()-->Line_48 $$ urls.add(javaFxJar.toURI().toURL())[ FD ]
Line_31 $$ if (SceneBuilderCreatorImpl.class.getClassLoader() instanceof PluginClassLoader) -->Line_32 $$ urls.add(new File(new File(parent).getParent(), "embedder.jar").toURI().toURL())[ CD ]
