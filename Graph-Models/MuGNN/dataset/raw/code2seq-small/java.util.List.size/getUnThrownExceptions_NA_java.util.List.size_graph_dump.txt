Line_14 $$ if (element != null)-->Line_15 $$ result.add(element)[ CD ]
Line_5 $$ if (getRefManager().isOfflineView()) -->Line_6 $$ LOG.debug("Should not traverse graph offline")[ CD ]
Line_8 $$ if (myUnThrownExceptions == null)-->Line_9 $$ return null[ CD ]
Line_11 $$ List<PsiClass> result = new ArrayList<PsiClass>(myUnThrownExceptions.size())-->Line_17 $$ return result.toArray(new PsiClass[result.size()])[ FD ]
Line_12 $$ for (String exception : myUnThrownExceptions) -->Line_13 $$ PsiClass element = facade.findClass(exception, GlobalSearchScope.allScope(myManager.getProject()))[ FD ]
Line_13 $$ PsiClass element = facade.findClass(exception, GlobalSearchScope.allScope(myManager.getProject()))-->Line_14 $$ if (element != null)[ FD ]
Line_11 $$ List<PsiClass> result = new ArrayList<PsiClass>(myUnThrownExceptions.size())-->Line_15 $$ result.add(element)[ FD ]
Line_13 $$ PsiClass element = facade.findClass(exception, GlobalSearchScope.allScope(myManager.getProject()))-->Line_15 $$ result.add(element)[ FD ]
Line_10 $$ JavaPsiFacade facade = JavaPsiFacade.getInstance(myManager.getProject())-->Line_13 $$ PsiClass element = facade.findClass(exception, GlobalSearchScope.allScope(myManager.getProject()))[ FD ]
