Line_11 $$ source = getAnalyzer().tokenStream(field, termStr)-->Line_17 $$ CharTermAttribute termAtt = source.addAttribute(CharTermAttribute.class)[ FD ]
Line_11 $$ source = getAnalyzer().tokenStream(field, termStr)-->Line_29 $$ IOUtils.closeWhileHandlingException(source)[ FD ]
Line_11 $$ source = getAnalyzer().tokenStream(field, termStr)-->Line_12 $$ source.reset()[ FD ]
Line_11 $$ source = getAnalyzer().tokenStream(field, termStr)-->Line_28 $$ if (source != null) [ FD ]
Line_6 $$ List<String> tlist-->Line_25 $$ tlist.add(termAtt.toString())[ FD ]
Line_17 $$ CharTermAttribute termAtt = source.addAttribute(CharTermAttribute.class)-->Line_25 $$ tlist.add(termAtt.toString())[ FD ]
Line_16 $$ tlist = new ArrayList()-->Line_33 $$ return super.getPrefixQuery(field, tlist.get(0))[ FD ]
Line_2 $$ private Query getPossiblyAnalyzedPrefixQuery(String field, String termStr) throws ParseException -->Line_14 $$ return super.getPrefixQuery(field, termStr)[ FD ]
Line_2 $$ private Query getPossiblyAnalyzedPrefixQuery(String field, String termStr) throws ParseException -->Line_38 $$ clauses.add(new BooleanClause(super.getPrefixQuery(field, token), BooleanClause.Occur.SHOULD))[ FD ]
Line_32 $$ if (tlist.size() == 1) -->Line_33 $$ return super.getPrefixQuery(field, tlist.get(0))[ CD ]
Line_11 $$ source = getAnalyzer().tokenStream(field, termStr)-->Line_20 $$ if (!source.incrementToken())[ FD ]
Line_28 $$ if (source != null) -->Line_29 $$ IOUtils.closeWhileHandlingException(source)[ CD ]
Line_6 $$ List<String> tlist-->Line_16 $$ tlist = new ArrayList()[ FD ]
Line_32 $$ if (tlist.size() == 1) -->Line_40 $$ return getBooleanQuery(clauses, true)[ CD ]
Line_3 $$ if (!settings.analyzeWildcard()) -->Line_4 $$ return super.getPrefixQuery(field, termStr)[ CD ]
Line_2 $$ private Query getPossiblyAnalyzedPrefixQuery(String field, String termStr) throws ParseException -->Line_3 $$ if (!settings.analyzeWildcard()) [ CD ]
Line_2 $$ private Query getPossiblyAnalyzedPrefixQuery(String field, String termStr) throws ParseException -->Line_33 $$ return super.getPrefixQuery(field, tlist.get(0))[ FD ]
Line_2 $$ private Query getPossiblyAnalyzedPrefixQuery(String field, String termStr) throws ParseException -->Line_4 $$ return super.getPrefixQuery(field, termStr)[ FD ]
Line_6 $$ List<String> tlist-->Line_32 $$ if (tlist.size() == 1) [ FD ]
Line_37 $$ for (String token : tlist) -->Line_38 $$ clauses.add(new BooleanClause(super.getPrefixQuery(field, token), BooleanClause.Occur.SHOULD))[ FD ]
Line_16 $$ tlist = new ArrayList()-->Line_32 $$ if (tlist.size() == 1) [ FD ]
Line_2 $$ private Query getPossiblyAnalyzedPrefixQuery(String field, String termStr) throws ParseException -->Line_32 $$ if (tlist.size() == 1) [ CD ]
Line_6 $$ List<String> tlist-->Line_33 $$ return super.getPrefixQuery(field, tlist.get(0))[ FD ]
Line_18 $$ while (true) -->Line_25 $$ tlist.add(termAtt.toString())[ CD ]
Line_16 $$ tlist = new ArrayList()-->Line_25 $$ tlist.add(termAtt.toString())[ FD ]
Line_2 $$ private Query getPossiblyAnalyzedPrefixQuery(String field, String termStr) throws ParseException -->Line_6 $$ List<String> tlist[ CD ]
Line_2 $$ private Query getPossiblyAnalyzedPrefixQuery(String field, String termStr) throws ParseException -->Line_11 $$ source = getAnalyzer().tokenStream(field, termStr)[ FD ]
