Line_12 $$ if (parts.size() == 2) -->Line_13 $$ catalogName = parts.get(0)[ CD ]
Line_8 $$ List<String> parts = schema.get().getParts()-->Line_13 $$ catalogName = parts.get(0)[ FD ]
Line_26 $$ Expression predicate = equal(nameReference("table_schema"), new StringLiteral(schemaName))-->Line_32 $$ Query query = simpleQuery(selectList(aliasedName("table_name", "Table")), from(catalogName, TABLE_TABLES), predicate, ordering(ascending("table_name")))[ FD ]
Line_7 $$ if (schema.isPresent()) -->Line_8 $$ List<String> parts = schema.get().getParts()[ CD ]
Line_4 $$ String catalogName = session.getCatalog().orElse(null)-->Line_32 $$ Query query = simpleQuery(selectList(aliasedName("table_name", "Table")), from(catalogName, TABLE_TABLES), predicate, ordering(ascending("table_name")))[ FD ]
Line_27 $$ Optional<String> likePattern = showTables.getLikePattern()-->Line_28 $$ if (likePattern.isPresent()) [ FD ]
Line_13 $$ catalogName = parts.get(0)-->Line_32 $$ Query query = simpleQuery(selectList(aliasedName("table_name", "Table")), from(catalogName, TABLE_TABLES), predicate, ordering(ascending("table_name")))[ FD ]
Line_5 $$ String schemaName = session.getSchema().orElse(null)-->Line_23 $$ if (!metadata.listSchemaNames(session, catalogName).contains(schemaName)) [ FD ]
Line_7 $$ if (schema.isPresent()) -->Line_9 $$ if (parts.size() > 2) [ CD ]
Line_15 $$ schemaName = schema.get().getSuffix()-->Line_23 $$ if (!metadata.listSchemaNames(session, catalogName).contains(schemaName)) [ FD ]
Line_6 $$ Optional<QualifiedName> schema = showTables.getSchema()-->Line_8 $$ List<String> parts = schema.get().getParts()[ FD ]
Line_7 $$ if (schema.isPresent()) -->Line_12 $$ if (parts.size() == 2) [ CD ]
Line_32 $$ Query query = simpleQuery(selectList(aliasedName("table_name", "Table")), from(catalogName, TABLE_TABLES), predicate, ordering(ascending("table_name")))-->Line_33 $$ return process(query, context)[ FD ]
Line_8 $$ List<String> parts = schema.get().getParts()-->Line_12 $$ if (parts.size() == 2) [ FD ]
Line_6 $$ Optional<QualifiedName> schema = showTables.getSchema()-->Line_15 $$ schemaName = schema.get().getSuffix()[ FD ]
Line_28 $$ if (likePattern.isPresent()) -->Line_30 $$ predicate = logicalAnd(predicate, likePredicate)[ CD ]
Line_6 $$ Optional<QualifiedName> schema = showTables.getSchema()-->Line_7 $$ if (schema.isPresent()) [ FD ]
Line_8 $$ List<String> parts = schema.get().getParts()-->Line_9 $$ if (parts.size() > 2) [ FD ]
Line_7 $$ if (schema.isPresent()) -->Line_15 $$ schemaName = schema.get().getSuffix()[ CD ]
Line_13 $$ catalogName = parts.get(0)-->Line_23 $$ if (!metadata.listSchemaNames(session, catalogName).contains(schemaName)) [ FD ]
Line_29 $$ Expression likePredicate = new LikePredicate(nameReference("table_name"), new StringLiteral(likePattern.get()), null)-->Line_30 $$ predicate = logicalAnd(predicate, likePredicate)[ FD ]
Line_4 $$ String catalogName = session.getCatalog().orElse(null)-->Line_23 $$ if (!metadata.listSchemaNames(session, catalogName).contains(schemaName)) [ FD ]
Line_5 $$ String schemaName = session.getSchema().orElse(null)-->Line_15 $$ schemaName = schema.get().getSuffix()[ FD ]
Line_13 $$ catalogName = parts.get(0)-->Line_17 $$ if (catalogName == null) [ FD ]
Line_27 $$ Optional<String> likePattern = showTables.getLikePattern()-->Line_29 $$ Expression likePredicate = new LikePredicate(nameReference("table_name"), new StringLiteral(likePattern.get()), null)[ FD ]
Line_26 $$ Expression predicate = equal(nameReference("table_schema"), new StringLiteral(schemaName))-->Line_30 $$ predicate = logicalAnd(predicate, likePredicate)[ FD ]
Line_28 $$ if (likePattern.isPresent()) -->Line_29 $$ Expression likePredicate = new LikePredicate(nameReference("table_name"), new StringLiteral(likePattern.get()), null)[ CD ]
Line_30 $$ predicate = logicalAnd(predicate, likePredicate)-->Line_32 $$ Query query = simpleQuery(selectList(aliasedName("table_name", "Table")), from(catalogName, TABLE_TABLES), predicate, ordering(ascending("table_name")))[ FD ]
Line_5 $$ String schemaName = session.getSchema().orElse(null)-->Line_20 $$ if (schemaName == null) [ FD ]
Line_15 $$ schemaName = schema.get().getSuffix()-->Line_20 $$ if (schemaName == null) [ FD ]
Line_4 $$ String catalogName = session.getCatalog().orElse(null)-->Line_17 $$ if (catalogName == null) [ FD ]
Line_4 $$ String catalogName = session.getCatalog().orElse(null)-->Line_13 $$ catalogName = parts.get(0)[ FD ]
