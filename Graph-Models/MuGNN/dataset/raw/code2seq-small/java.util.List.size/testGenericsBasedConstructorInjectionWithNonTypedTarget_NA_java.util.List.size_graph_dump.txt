Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_7 $$ bpp.setBeanFactory(bf)[ FD ]
Line_9 $$ RootBeanDefinition bd = new RootBeanDefinition(RepositoryConstructorInjectionBean.class)-->Line_11 $$ bf.registerBeanDefinition("annotatedBean", bd)[ FD ]
Line_12 $$ GenericRepository gr = new GenericRepository()-->Line_20 $$ assertSame(gr, bean.integerRepositoryArray[0])[ FD ]
Line_12 $$ GenericRepository gr = new GenericRepository()-->Line_15 $$ assertSame(gr, bean.stringRepository)[ FD ]
Line_12 $$ GenericRepository gr = new GenericRepository()-->Line_23 $$ assertSame(gr, bean.stringRepositoryList.get(0))[ FD ]
Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_11 $$ bf.registerBeanDefinition("annotatedBean", bd)[ FD ]
Line_12 $$ GenericRepository gr = new GenericRepository()-->Line_28 $$ assertSame(gr, bean.integerRepositoryMap.get("genericRepo"))[ FD ]
Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_8 $$ bf.addBeanPostProcessor(bpp)[ FD ]
Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_14 $$ RepositoryConstructorInjectionBean bean = (RepositoryConstructorInjectionBean) bf.getBean("annotatedBean")[ FD ]
Line_6 $$ AutowiredAnnotationBeanPostProcessor bpp = new AutowiredAnnotationBeanPostProcessor()-->Line_8 $$ bf.addBeanPostProcessor(bpp)[ FD ]
Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_13 $$ bf.registerSingleton("genericRepo", gr)[ FD ]
Line_12 $$ GenericRepository gr = new GenericRepository()-->Line_13 $$ bf.registerSingleton("genericRepo", gr)[ FD ]
Line_12 $$ GenericRepository gr = new GenericRepository()-->Line_27 $$ assertSame(gr, bean.stringRepositoryMap.get("genericRepo"))[ FD ]
Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_5 $$ bf.setAutowireCandidateResolver(new QualifierAnnotationAutowireCandidateResolver())[ FD ]
Line_12 $$ GenericRepository gr = new GenericRepository()-->Line_19 $$ assertSame(gr, bean.stringRepositoryArray[0])[ FD ]
Line_12 $$ GenericRepository gr = new GenericRepository()-->Line_24 $$ assertSame(gr, bean.integerRepositoryList.get(0))[ FD ]
Line_9 $$ RootBeanDefinition bd = new RootBeanDefinition(RepositoryConstructorInjectionBean.class)-->Line_10 $$ bd.setScope(RootBeanDefinition.SCOPE_PROTOTYPE)[ FD ]
Line_6 $$ AutowiredAnnotationBeanPostProcessor bpp = new AutowiredAnnotationBeanPostProcessor()-->Line_7 $$ bpp.setBeanFactory(bf)[ FD ]
Line_12 $$ GenericRepository gr = new GenericRepository()-->Line_16 $$ assertSame(gr, bean.integerRepository)[ FD ]
