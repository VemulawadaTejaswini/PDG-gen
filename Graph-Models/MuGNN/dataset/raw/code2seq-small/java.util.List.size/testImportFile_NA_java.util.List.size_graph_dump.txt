Line_2 $$ public void testImportFile() throws Exception -->Line_3 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_5 $$ final List<?> humans = s.createQuery("from " + Human.class.getName()).list()[ CD ]
Line_3 $$ Session s = openSession()-->Line_5 $$ final List<?> humans = s.createQuery("from " + Human.class.getName()).list()[ FD ]
Line_7 $$ final List<?> dogs = s.createQuery("from " + Dog.class.getName()).list()-->Line_8 $$ assertEquals("dogs.sql not imported", 3, dogs.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_16 $$ s.close()[ FD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_16 $$ s.close()[ CD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_7 $$ final List<?> dogs = s.createQuery("from " + Dog.class.getName()).list()[ CD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_6 $$ assertEquals("humans.sql not imported", 3, humans.size())[ CD ]
Line_3 $$ Session s = openSession()-->Line_10 $$ s.delete(entity)[ FD ]
Line_3 $$ Session s = openSession()-->Line_13 $$ s.delete(entity)[ FD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_4 $$ final Transaction tx = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ final Transaction tx = s.beginTransaction()[ FD ]
Line_9 $$ for (Object entity : dogs) -->Line_10 $$ s.delete(entity)[ FD ]
Line_4 $$ final Transaction tx = s.beginTransaction()-->Line_15 $$ tx.commit()[ FD ]
Line_9 $$ for (Object entity : dogs) -->Line_13 $$ s.delete(entity)[ FD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_15 $$ tx.commit()[ CD ]
Line_5 $$ final List<?> humans = s.createQuery("from " + Human.class.getName()).list()-->Line_6 $$ assertEquals("humans.sql not imported", 3, humans.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_7 $$ final List<?> dogs = s.createQuery("from " + Dog.class.getName()).list()[ FD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_8 $$ assertEquals("dogs.sql not imported", 3, dogs.size())[ CD ]
