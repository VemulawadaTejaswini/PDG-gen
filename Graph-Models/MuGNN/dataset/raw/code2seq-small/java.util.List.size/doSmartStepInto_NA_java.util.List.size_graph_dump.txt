Line_2 $$ private static <V extends XSmartStepIntoVariant> void doSmartStepInto(final XSmartStepIntoHandler<V> handler, XSourcePosition position, final XDebugSession session, Editor editor) -->Line_3 $$ List<V> variants = handler.computeSmartStepVariants(position)[ CD ]
Line_2 $$ private static <V extends XSmartStepIntoVariant> void doSmartStepInto(final XSmartStepIntoHandler<V> handler, XSourcePosition position, final XDebugSession session, Editor editor) -->Line_11 $$ ListPopup popup = JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<V>(handler.getPopupTitle(position), variants) [ FD ]
Line_4 $$ if (variants.isEmpty()) -->Line_5 $$ session.stepInto()[ CD ]
Line_2 $$ private static <V extends XSmartStepIntoVariant> void doSmartStepInto(final XSmartStepIntoHandler<V> handler, XSourcePosition position, final XDebugSession session, Editor editor) -->Line_8 $$ session.smartStepInto(handler, variants.get(0))[ FD ]
Line_11 $$ ListPopup popup = JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<V>(handler.getPopupTitle(position), variants) -->Line_16 $$ return value.getText()[ FD ]
Line_2 $$ private static <V extends XSmartStepIntoVariant> void doSmartStepInto(final XSmartStepIntoHandler<V> handler, XSourcePosition position, final XDebugSession session, Editor editor) -->Line_23 $$ DebuggerUIUtil.showPopupForEditorLine(popup, editor, position.getLine())[ CD ]
Line_2 $$ private static <V extends XSmartStepIntoVariant> void doSmartStepInto(final XSmartStepIntoHandler<V> handler, XSourcePosition position, final XDebugSession session, Editor editor) -->Line_23 $$ DebuggerUIUtil.showPopupForEditorLine(popup, editor, position.getLine())[ FD ]
Line_11 $$ ListPopup popup = JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<V>(handler.getPopupTitle(position), variants) -->Line_13 $$ return aValue.getIcon()[ FD ]
Line_3 $$ List<V> variants = handler.computeSmartStepVariants(position)-->Line_7 $$ if (variants.size() == 1) [ FD ]
Line_11 $$ ListPopup popup = JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<V>(handler.getPopupTitle(position), variants) -->Line_23 $$ DebuggerUIUtil.showPopupForEditorLine(popup, editor, position.getLine())[ FD ]
Line_3 $$ List<V> variants = handler.computeSmartStepVariants(position)-->Line_4 $$ if (variants.isEmpty()) [ FD ]
Line_11 $$ ListPopup popup = JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<V>(handler.getPopupTitle(position), variants) -->Line_19 $$ session.smartStepInto(handler, selectedValue)[ FD ]
Line_7 $$ if (variants.size() == 1) -->Line_8 $$ session.smartStepInto(handler, variants.get(0))[ CD ]
Line_2 $$ private static <V extends XSmartStepIntoVariant> void doSmartStepInto(final XSmartStepIntoHandler<V> handler, XSourcePosition position, final XDebugSession session, Editor editor) -->Line_3 $$ List<V> variants = handler.computeSmartStepVariants(position)[ FD ]
Line_2 $$ private static <V extends XSmartStepIntoVariant> void doSmartStepInto(final XSmartStepIntoHandler<V> handler, XSourcePosition position, final XDebugSession session, Editor editor) -->Line_11 $$ ListPopup popup = JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<V>(handler.getPopupTitle(position), variants) [ CD ]
Line_11 $$ ListPopup popup = JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<V>(handler.getPopupTitle(position), variants) -->Line_20 $$ return FINAL_CHOICE[ CD ]
Line_7 $$ if (variants.size() == 1) -->Line_9 $$ return[ CD ]
Line_4 $$ if (variants.isEmpty()) -->Line_7 $$ if (variants.size() == 1) [ CD ]
Line_2 $$ private static <V extends XSmartStepIntoVariant> void doSmartStepInto(final XSmartStepIntoHandler<V> handler, XSourcePosition position, final XDebugSession session, Editor editor) -->Line_5 $$ session.stepInto()[ FD ]
Line_11 $$ ListPopup popup = JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<V>(handler.getPopupTitle(position), variants) -->Line_13 $$ return aValue.getIcon()[ CD ]
Line_11 $$ ListPopup popup = JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<V>(handler.getPopupTitle(position), variants) -->Line_16 $$ return value.getText()[ CD ]
Line_11 $$ ListPopup popup = JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<V>(handler.getPopupTitle(position), variants) -->Line_19 $$ session.smartStepInto(handler, selectedValue)[ CD ]
Line_4 $$ if (variants.isEmpty()) -->Line_6 $$ return[ CD ]
Line_2 $$ private static <V extends XSmartStepIntoVariant> void doSmartStepInto(final XSmartStepIntoHandler<V> handler, XSourcePosition position, final XDebugSession session, Editor editor) -->Line_4 $$ if (variants.isEmpty()) [ CD ]
Line_2 $$ private static <V extends XSmartStepIntoVariant> void doSmartStepInto(final XSmartStepIntoHandler<V> handler, XSourcePosition position, final XDebugSession session, Editor editor) -->Line_19 $$ session.smartStepInto(handler, selectedValue)[ FD ]
Line_3 $$ List<V> variants = handler.computeSmartStepVariants(position)-->Line_8 $$ session.smartStepInto(handler, variants.get(0))[ FD ]
