Line_2 $$ public static int proposeZippedListLength(Iterable one, Iterable two, boolean fill1, boolean fill2) -->Line_6 $$ if (one instanceof List)[ CD ]
Line_2 $$ public static int proposeZippedListLength(Iterable one, Iterable two, boolean fill1, boolean fill2) -->Line_10 $$ if (fill1 && fill2)[ FD ]
Line_4 $$ int size2 = 0-->Line_9 $$ size2 = ((List) two).size()[ FD ]
Line_15 $$ approx_size = size1-->Line_18 $$ if (approx_size == 0)[ FD ]
Line_5 $$ int approx_size = 0-->Line_17 $$ approx_size = size2[ FD ]
Line_17 $$ approx_size = size2-->Line_18 $$ if (approx_size == 0)[ FD ]
Line_6 $$ if (one instanceof List)-->Line_7 $$ size1 = ((List) one).size()[ CD ]
Line_18 $$ if (approx_size == 0)-->Line_19 $$ approx_size = 10[ CD ]
Line_3 $$ int size1 = 0-->Line_7 $$ size1 = ((List) one).size()[ FD ]
Line_7 $$ size1 = ((List) one).size()-->Line_13 $$ approx_size = Math.min(size1, size2)[ FD ]
Line_11 $$ approx_size = Math.max(size1, size2)-->Line_15 $$ approx_size = size1[ FD ]
Line_17 $$ approx_size = size2-->Line_19 $$ approx_size = 10[ FD ]
Line_13 $$ approx_size = Math.min(size1, size2)-->Line_17 $$ approx_size = size2[ FD ]
Line_2 $$ public static int proposeZippedListLength(Iterable one, Iterable two, boolean fill1, boolean fill2) -->Line_14 $$ if (fill1 && !fill2)[ CD ]
Line_2 $$ public static int proposeZippedListLength(Iterable one, Iterable two, boolean fill1, boolean fill2) -->Line_8 $$ if (two instanceof List)[ CD ]
Line_2 $$ public static int proposeZippedListLength(Iterable one, Iterable two, boolean fill1, boolean fill2) -->Line_5 $$ int approx_size = 0[ CD ]
Line_2 $$ public static int proposeZippedListLength(Iterable one, Iterable two, boolean fill1, boolean fill2) -->Line_18 $$ if (approx_size == 0)[ CD ]
Line_13 $$ approx_size = Math.min(size1, size2)-->Line_19 $$ approx_size = 10[ FD ]
Line_15 $$ approx_size = size1-->Line_19 $$ approx_size = 10[ FD ]
Line_2 $$ public static int proposeZippedListLength(Iterable one, Iterable two, boolean fill1, boolean fill2) -->Line_12 $$ if (!fill1 && !fill2)[ CD ]
Line_2 $$ public static int proposeZippedListLength(Iterable one, Iterable two, boolean fill1, boolean fill2) -->Line_14 $$ if (fill1 && !fill2)[ FD ]
Line_5 $$ int approx_size = 0-->Line_11 $$ approx_size = Math.max(size1, size2)[ FD ]
Line_2 $$ public static int proposeZippedListLength(Iterable one, Iterable two, boolean fill1, boolean fill2) -->Line_4 $$ int size2 = 0[ CD ]
Line_9 $$ size2 = ((List) two).size()-->Line_11 $$ approx_size = Math.max(size1, size2)[ FD ]
Line_4 $$ int size2 = 0-->Line_13 $$ approx_size = Math.min(size1, size2)[ FD ]
Line_7 $$ size1 = ((List) one).size()-->Line_15 $$ approx_size = size1[ FD ]
Line_16 $$ if (!fill1 && fill2)-->Line_17 $$ approx_size = size2[ CD ]
Line_4 $$ int size2 = 0-->Line_17 $$ approx_size = size2[ FD ]
Line_2 $$ public static int proposeZippedListLength(Iterable one, Iterable two, boolean fill1, boolean fill2) -->Line_20 $$ return approx_size[ CD ]
Line_3 $$ int size1 = 0-->Line_13 $$ approx_size = Math.min(size1, size2)[ FD ]
Line_2 $$ public static int proposeZippedListLength(Iterable one, Iterable two, boolean fill1, boolean fill2) -->Line_10 $$ if (fill1 && fill2)[ CD ]
Line_5 $$ int approx_size = 0-->Line_18 $$ if (approx_size == 0)[ FD ]
Line_2 $$ public static int proposeZippedListLength(Iterable one, Iterable two, boolean fill1, boolean fill2) -->Line_16 $$ if (!fill1 && fill2)[ FD ]
Line_2 $$ public static int proposeZippedListLength(Iterable one, Iterable two, boolean fill1, boolean fill2) -->Line_16 $$ if (!fill1 && fill2)[ CD ]
Line_12 $$ if (!fill1 && !fill2)-->Line_13 $$ approx_size = Math.min(size1, size2)[ CD ]
Line_11 $$ approx_size = Math.max(size1, size2)-->Line_19 $$ approx_size = 10[ FD ]
Line_5 $$ int approx_size = 0-->Line_13 $$ approx_size = Math.min(size1, size2)[ FD ]
Line_2 $$ public static int proposeZippedListLength(Iterable one, Iterable two, boolean fill1, boolean fill2) -->Line_3 $$ int size1 = 0[ CD ]
Line_5 $$ int approx_size = 0-->Line_19 $$ approx_size = 10[ FD ]
Line_13 $$ approx_size = Math.min(size1, size2)-->Line_15 $$ approx_size = size1[ FD ]
Line_15 $$ approx_size = size1-->Line_17 $$ approx_size = size2[ FD ]
Line_11 $$ approx_size = Math.max(size1, size2)-->Line_13 $$ approx_size = Math.min(size1, size2)[ FD ]
Line_14 $$ if (fill1 && !fill2)-->Line_15 $$ approx_size = size1[ CD ]
Line_4 $$ int size2 = 0-->Line_11 $$ approx_size = Math.max(size1, size2)[ FD ]
Line_9 $$ size2 = ((List) two).size()-->Line_13 $$ approx_size = Math.min(size1, size2)[ FD ]
Line_13 $$ approx_size = Math.min(size1, size2)-->Line_18 $$ if (approx_size == 0)[ FD ]
Line_2 $$ public static int proposeZippedListLength(Iterable one, Iterable two, boolean fill1, boolean fill2) -->Line_6 $$ if (one instanceof List)[ FD ]
Line_2 $$ public static int proposeZippedListLength(Iterable one, Iterable two, boolean fill1, boolean fill2) -->Line_8 $$ if (two instanceof List)[ FD ]
Line_2 $$ public static int proposeZippedListLength(Iterable one, Iterable two, boolean fill1, boolean fill2) -->Line_12 $$ if (!fill1 && !fill2)[ FD ]
Line_11 $$ approx_size = Math.max(size1, size2)-->Line_17 $$ approx_size = size2[ FD ]
Line_5 $$ int approx_size = 0-->Line_15 $$ approx_size = size1[ FD ]
Line_9 $$ size2 = ((List) two).size()-->Line_17 $$ approx_size = size2[ FD ]
Line_11 $$ approx_size = Math.max(size1, size2)-->Line_18 $$ if (approx_size == 0)[ FD ]
Line_7 $$ size1 = ((List) one).size()-->Line_11 $$ approx_size = Math.max(size1, size2)[ FD ]
Line_3 $$ int size1 = 0-->Line_11 $$ approx_size = Math.max(size1, size2)[ FD ]
Line_10 $$ if (fill1 && fill2)-->Line_11 $$ approx_size = Math.max(size1, size2)[ CD ]
Line_8 $$ if (two instanceof List)-->Line_9 $$ size2 = ((List) two).size()[ CD ]
Line_3 $$ int size1 = 0-->Line_15 $$ approx_size = size1[ FD ]
