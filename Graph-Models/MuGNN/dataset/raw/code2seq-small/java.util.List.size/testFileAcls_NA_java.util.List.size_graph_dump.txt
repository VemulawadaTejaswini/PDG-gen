Line_2 $$ public void testFileAcls() throws Exception -->Line_24 $$ putCmd(path, "SETACL", aclSpec)[ CD ]
Line_30 $$ aclEntries = getAclEntries(statusJson)-->Line_33 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ FD ]
Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_49 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_22 $$ aclEntries = getAclEntries(statusJson)-->Line_37 $$ Assert.assertTrue(aclEntries.size() == 3)[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_51 $$ statusJson = getStatus(path, "GETFILESTATUS")[ CD ]
Line_11 $$ String statusJson-->Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_10 $$ final String path = dir + "/test"-->Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_52 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_11 $$ String statusJson-->Line_49 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_5 $$ final String aclGroup1 = "group::r--"-->Line_46 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ FD ]
Line_11 $$ String statusJson-->Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_28 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ CD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_28 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")[ CD ]
Line_11 $$ String statusJson-->Line_52 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_30 $$ aclEntries = getAclEntries(statusJson)-->Line_36 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_12 $$ List<String> aclEntries-->Line_49 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_53 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_52 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_51 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_52 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_22 $$ aclEntries = getAclEntries(statusJson)-->Line_31 $$ Assert.assertTrue(aclEntries.size() == 2)[ FD ]
Line_42 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_54 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_48 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_11 $$ String statusJson[ CD ]
Line_11 $$ String statusJson-->Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_15 $$ fs.mkdirs(new Path(dir))[ CD ]
Line_22 $$ aclEntries = getAclEntries(statusJson)-->Line_23 $$ Assert.assertTrue(aclEntries.size() == 0)[ FD ]
Line_10 $$ final String path = dir + "/test"-->Line_42 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_39 $$ Assert.assertTrue(aclEntries.contains(aclUser2))[ CD ]
Line_10 $$ final String path = dir + "/test"-->Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_42 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_26 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ CD ]
Line_43 $$ aclEntries = getAclEntries(statusJson)-->Line_49 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_30 $$ aclEntries = getAclEntries(statusJson)-->Line_32 $$ Assert.assertTrue(aclEntries.contains(aclUser1))[ FD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_53 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_11 $$ String statusJson-->Line_30 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_11 $$ String statusJson-->Line_18 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_30 $$ aclEntries = getAclEntries(statusJson)-->Line_31 $$ Assert.assertTrue(aclEntries.size() == 2)[ FD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_18 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_6 $$ final String aclSpec = "aclspec=user::rwx," + aclUser1 + "," + aclGroup1 + ",other::---"-->Line_24 $$ putCmd(path, "SETACL", aclSpec)[ FD ]
Line_12 $$ List<String> aclEntries-->Line_44 $$ Assert.assertTrue(aclEntries.size() == 2)[ FD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_22 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_22 $$ aclEntries = getAclEntries(statusJson)-->Line_33 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ FD ]
Line_43 $$ aclEntries = getAclEntries(statusJson)-->Line_46 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ FD ]
Line_12 $$ List<String> aclEntries-->Line_22 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_48 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_53 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")[ CD ]
Line_10 $$ final String path = dir + "/test"-->Line_41 $$ putCmd(path, "REMOVEACLENTRIES", remAclSpec)[ FD ]
Line_11 $$ String statusJson-->Line_22 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_43 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_11 $$ String statusJson-->Line_53 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_11 $$ String statusJson-->Line_28 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_20 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_5 $$ final String aclGroup1 = "group::r--"[ CD ]
Line_43 $$ aclEntries = getAclEntries(statusJson)-->Line_50 $$ Assert.assertTrue(aclEntries.size() == 0)[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")[ CD ]
Line_12 $$ List<String> aclEntries-->Line_40 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ FD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_53 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_54 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")[ CD ]
Line_4 $$ final String aclUser2 = "user:bar:r--"-->Line_45 $$ Assert.assertTrue(aclEntries.contains(aclUser2))[ FD ]
Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_43 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_11 $$ String statusJson-->Line_36 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_42 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_12 $$ List<String> aclEntries-->Line_30 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_51 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_53 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_36 $$ aclEntries = getAclEntries(statusJson)-->Line_39 $$ Assert.assertTrue(aclEntries.contains(aclUser2))[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_6 $$ final String aclSpec = "aclspec=user::rwx," + aclUser1 + "," + aclGroup1 + ",other::---"[ CD ]
Line_36 $$ aclEntries = getAclEntries(statusJson)-->Line_38 $$ Assert.assertTrue(aclEntries.contains(aclUser1))[ FD ]
Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_53 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_10 $$ final String path = dir + "/test"-->Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_30 $$ aclEntries = getAclEntries(statusJson)-->Line_46 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ FD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_48 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_9 $$ final String dir = "/aclFileTest"-->Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_26 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_13 $$ createHttpFSServer(false)[ CD ]
Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_36 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_22 $$ aclEntries = getAclEntries(statusJson)-->Line_38 $$ Assert.assertTrue(aclEntries.contains(aclUser1))[ FD ]
Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_3 $$ final String aclUser1 = "user:foo:rw-"-->Line_38 $$ Assert.assertTrue(aclEntries.contains(aclUser1))[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_9 $$ final String dir = "/aclFileTest"[ CD ]
Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_28 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_22 $$ aclEntries = getAclEntries(statusJson)-->Line_30 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_12 $$ List<String> aclEntries-->Line_39 $$ Assert.assertTrue(aclEntries.contains(aclUser2))[ FD ]
Line_43 $$ aclEntries = getAclEntries(statusJson)-->Line_44 $$ Assert.assertTrue(aclEntries.size() == 2)[ FD ]
Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_54 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_43 $$ aclEntries = getAclEntries(statusJson)-->Line_45 $$ Assert.assertTrue(aclEntries.contains(aclUser2))[ FD ]
Line_12 $$ List<String> aclEntries-->Line_23 $$ Assert.assertTrue(aclEntries.size() == 0)[ FD ]
Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_49 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_41 $$ putCmd(path, "REMOVEACLENTRIES", remAclSpec)[ CD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_51 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_8 $$ final String remAclSpec = "aclspec=" + aclUser1-->Line_41 $$ putCmd(path, "REMOVEACLENTRIES", remAclSpec)[ FD ]
Line_22 $$ aclEntries = getAclEntries(statusJson)-->Line_44 $$ Assert.assertTrue(aclEntries.size() == 2)[ FD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_36 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_30 $$ aclEntries = getAclEntries(statusJson)-->Line_43 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_42 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_49 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")[ CD ]
Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_36 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_12 $$ List<String> aclEntries-->Line_36 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_43 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_43 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_11 $$ String statusJson-->Line_42 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_12 $$ List<String> aclEntries[ CD ]
Line_36 $$ aclEntries = getAclEntries(statusJson)-->Line_37 $$ Assert.assertTrue(aclEntries.size() == 3)[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_45 $$ Assert.assertTrue(aclEntries.contains(aclUser2))[ CD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_7 $$ final String modAclSpec = "aclspec=" + aclUser2[ CD ]
Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_42 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_37 $$ Assert.assertTrue(aclEntries.size() == 3)[ CD ]
Line_12 $$ List<String> aclEntries-->Line_45 $$ Assert.assertTrue(aclEntries.contains(aclUser2))[ FD ]
Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_52 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_54 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_51 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_40 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ CD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_49 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_11 $$ String statusJson-->Line_54 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_36 $$ aclEntries = getAclEntries(statusJson)-->Line_40 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ FD ]
Line_11 $$ String statusJson-->Line_20 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")[ CD ]
Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_42 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_53 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_26 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_49 $$ aclEntries = getAclEntries(statusJson)[ CD ]
Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_49 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_31 $$ Assert.assertTrue(aclEntries.size() == 2)[ CD ]
Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_30 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_30 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_54 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_22 $$ aclEntries = getAclEntries(statusJson)-->Line_46 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")[ CD ]
Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_48 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_36 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_36 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_26 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_36 $$ aclEntries = getAclEntries(statusJson)-->Line_46 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ FD ]
Line_9 $$ final String dir = "/aclFileTest"-->Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_43 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_4 $$ final String aclUser2 = "user:bar:r--"[ CD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_36 $$ aclEntries = getAclEntries(statusJson)[ CD ]
Line_5 $$ final String aclGroup1 = "group::r--"-->Line_40 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ FD ]
Line_30 $$ aclEntries = getAclEntries(statusJson)-->Line_45 $$ Assert.assertTrue(aclEntries.contains(aclUser2))[ FD ]
Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_48 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_52 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_14 $$ FileSystem fs = FileSystem.get(TestHdfsHelper.getHdfsConf())-->Line_15 $$ fs.mkdirs(new Path(dir))[ FD ]
Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_26 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_10 $$ final String path = dir + "/test"-->Line_16 $$ createWithHttp(path, null)[ FD ]
Line_30 $$ aclEntries = getAclEntries(statusJson)-->Line_44 $$ Assert.assertTrue(aclEntries.size() == 2)[ FD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_30 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_12 $$ List<String> aclEntries-->Line_38 $$ Assert.assertTrue(aclEntries.contains(aclUser1))[ FD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_22 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_30 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_42 $$ statusJson = getStatus(path, "GETACLSTATUS")[ CD ]
Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_51 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_52 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_42 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_52 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_8 $$ final String remAclSpec = "aclspec=" + aclUser1[ CD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_46 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ CD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_3 $$ final String aclUser1 = "user:foo:rw-"[ CD ]
Line_10 $$ final String path = dir + "/test"-->Line_48 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_54 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ CD ]
Line_30 $$ aclEntries = getAclEntries(statusJson)-->Line_39 $$ Assert.assertTrue(aclEntries.contains(aclUser2))[ FD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_54 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_52 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_48 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_49 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_10 $$ final String path = dir + "/test"-->Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_22 $$ aclEntries = getAclEntries(statusJson)-->Line_39 $$ Assert.assertTrue(aclEntries.contains(aclUser2))[ FD ]
Line_9 $$ final String dir = "/aclFileTest"-->Line_53 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_49 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_42 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_30 $$ aclEntries = getAclEntries(statusJson)-->Line_40 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ FD ]
Line_12 $$ List<String> aclEntries-->Line_50 $$ Assert.assertTrue(aclEntries.size() == 0)[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_14 $$ FileSystem fs = FileSystem.get(TestHdfsHelper.getHdfsConf())[ CD ]
Line_10 $$ final String path = dir + "/test"-->Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_20 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_22 $$ aclEntries = getAclEntries(statusJson)-->Line_36 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_42 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_11 $$ String statusJson-->Line_43 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_43 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_48 $$ statusJson = getStatus(path, "GETACLSTATUS")[ CD ]
Line_42 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_43 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_51 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_12 $$ List<String> aclEntries-->Line_32 $$ Assert.assertTrue(aclEntries.contains(aclUser1))[ FD ]
Line_11 $$ String statusJson-->Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_43 $$ aclEntries = getAclEntries(statusJson)[ CD ]
Line_10 $$ final String path = dir + "/test"-->Line_34 $$ putCmd(path, "MODIFYACLENTRIES", modAclSpec)[ FD ]
Line_36 $$ aclEntries = getAclEntries(statusJson)-->Line_49 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_49 $$ aclEntries = getAclEntries(statusJson)-->Line_50 $$ Assert.assertTrue(aclEntries.size() == 0)[ FD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_51 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_54 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_30 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_33 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ CD ]
Line_11 $$ String statusJson-->Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_30 $$ aclEntries = getAclEntries(statusJson)[ CD ]
Line_42 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_48 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_22 $$ aclEntries = getAclEntries(statusJson)-->Line_32 $$ Assert.assertTrue(aclEntries.contains(aclUser1))[ FD ]
Line_22 $$ aclEntries = getAclEntries(statusJson)-->Line_40 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ FD ]
Line_10 $$ final String path = dir + "/test"-->Line_47 $$ putCmd(path, "REMOVEACL", null)[ FD ]
Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_53 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_53 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_54 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_28 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_48 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_7 $$ final String modAclSpec = "aclspec=" + aclUser2-->Line_34 $$ putCmd(path, "MODIFYACLENTRIES", modAclSpec)[ FD ]
Line_36 $$ aclEntries = getAclEntries(statusJson)-->Line_44 $$ Assert.assertTrue(aclEntries.size() == 2)[ FD ]
Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_48 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_42 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_53 $$ statusJson = getStatus(dir, "LISTSTATUS")[ CD ]
Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_43 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_20 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ CD ]
Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_49 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_22 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_22 $$ aclEntries = getAclEntries(statusJson)-->Line_45 $$ Assert.assertTrue(aclEntries.contains(aclUser2))[ FD ]
Line_11 $$ String statusJson-->Line_48 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_10 $$ final String path = dir + "/test"[ CD ]
Line_10 $$ final String path = dir + "/test"-->Line_51 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_52 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_18 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ CD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_22 $$ aclEntries = getAclEntries(statusJson)[ CD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_32 $$ Assert.assertTrue(aclEntries.contains(aclUser1))[ CD ]
Line_12 $$ List<String> aclEntries-->Line_33 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ FD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_49 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_11 $$ String statusJson-->Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_48 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_51 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_53 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_36 $$ aclEntries = getAclEntries(statusJson)-->Line_45 $$ Assert.assertTrue(aclEntries.contains(aclUser2))[ FD ]
Line_22 $$ aclEntries = getAclEntries(statusJson)-->Line_50 $$ Assert.assertTrue(aclEntries.size() == 0)[ FD ]
Line_10 $$ final String path = dir + "/test"-->Line_24 $$ putCmd(path, "SETACL", aclSpec)[ FD ]
Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_52 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_28 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_36 $$ aclEntries = getAclEntries(statusJson)-->Line_43 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_30 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_11 $$ String statusJson-->Line_26 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_48 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_54 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_4 $$ final String aclUser2 = "user:bar:r--"-->Line_39 $$ Assert.assertTrue(aclEntries.contains(aclUser2))[ FD ]
Line_30 $$ aclEntries = getAclEntries(statusJson)-->Line_38 $$ Assert.assertTrue(aclEntries.contains(aclUser1))[ FD ]
Line_12 $$ List<String> aclEntries-->Line_43 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_36 $$ aclEntries = getAclEntries(statusJson)-->Line_50 $$ Assert.assertTrue(aclEntries.size() == 0)[ FD ]
Line_29 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_51 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_35 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_51 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_22 $$ aclEntries = getAclEntries(statusJson)-->Line_49 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_11 $$ String statusJson-->Line_51 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_44 $$ Assert.assertTrue(aclEntries.size() == 2)[ CD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_48 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_52 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ CD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_50 $$ Assert.assertTrue(aclEntries.size() == 0)[ CD ]
Line_22 $$ aclEntries = getAclEntries(statusJson)-->Line_43 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_23 $$ Assert.assertTrue(aclEntries.size() == 0)[ CD ]
Line_42 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_51 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_47 $$ putCmd(path, "REMOVEACL", null)[ CD ]
Line_17 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_27 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_12 $$ List<String> aclEntries-->Line_31 $$ Assert.assertTrue(aclEntries.size() == 2)[ FD ]
Line_11 $$ String statusJson-->Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_30 $$ aclEntries = getAclEntries(statusJson)-->Line_37 $$ Assert.assertTrue(aclEntries.size() == 3)[ FD ]
Line_12 $$ List<String> aclEntries-->Line_46 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_16 $$ createWithHttp(path, null)[ CD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")[ FD ]
Line_42 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_53 $$ statusJson = getStatus(dir, "LISTSTATUS")[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_34 $$ putCmd(path, "MODIFYACLENTRIES", modAclSpec)[ CD ]
Line_30 $$ aclEntries = getAclEntries(statusJson)-->Line_50 $$ Assert.assertTrue(aclEntries.size() == 0)[ FD ]
Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_36 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_12 $$ List<String> aclEntries-->Line_37 $$ Assert.assertTrue(aclEntries.size() == 3)[ FD ]
Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_48 $$ statusJson = getStatus(path, "GETACLSTATUS")[ FD ]
Line_51 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_54 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_30 $$ aclEntries = getAclEntries(statusJson)-->Line_49 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_21 $$ statusJson = getStatus(path, "GETACLSTATUS")-->Line_36 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_19 $$ statusJson = getStatus(dir, "LISTSTATUS")-->Line_54 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_25 $$ statusJson = getStatus(path, "GETFILESTATUS")-->Line_28 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_5 $$ final String aclGroup1 = "group::r--"-->Line_33 $$ Assert.assertTrue(aclEntries.contains(aclGroup1))[ FD ]
Line_2 $$ public void testFileAcls() throws Exception -->Line_38 $$ Assert.assertTrue(aclEntries.contains(aclUser1))[ CD ]
Line_3 $$ final String aclUser1 = "user:foo:rw-"-->Line_32 $$ Assert.assertTrue(aclEntries.contains(aclUser1))[ FD ]
