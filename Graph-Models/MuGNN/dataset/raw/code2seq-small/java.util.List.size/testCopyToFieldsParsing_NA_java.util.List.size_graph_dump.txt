Line_16 $$ serializedMap = parser.map()-->Line_18 $$ Map<String, Object> copyTestMap = (Map<String, Object>) serializedMap.get("copy_test")[ FD ]
Line_27 $$ ParseContext.Document doc = parsedDoc.rootDoc()-->Line_31 $$ assertThat(doc.getFields("another_field").length, equalTo(2))[ FD ]
Line_20 $$ List<String> copyToList = (List<String>) copyTestMap.get("copy_to")-->Line_22 $$ assertThat(copyToList.get(0).toString(), equalTo("another_field"))[ FD ]
Line_18 $$ Map<String, Object> copyTestMap = (Map<String, Object>) serializedMap.get("copy_test")-->Line_19 $$ assertThat(copyTestMap.get("type").toString(), is("string"))[ FD ]
Line_8 $$ FieldMapper fieldMapper = docMapper.mappers().getMapper("copy_test")-->Line_46 $$ assertThat(fieldMapper, instanceOf(LongFieldMapper.class))[ FD ]
Line_26 $$ ParsedDocument parsedDoc = docMapper.parse("test", "type1", "1", json)-->Line_42 $$ assertNotNull(parsedDoc.dynamicMappingsUpdate())[ FD ]
Line_20 $$ List<String> copyToList = (List<String>) copyTestMap.get("copy_to")-->Line_21 $$ assertThat(copyToList.size(), equalTo(2))[ FD ]
Line_4 $$ String mapping = jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("copy_test").field("type", "string").array("copy_to", "another_field", "cyclic_test").endObject().startObject("another_field").field("type", "string").endObject().startObject("cyclic_test").field("type", "string").array("copy_to", "copy_test").endObject().startObject("int_to_str_test").field("type", "integer").field("doc_values", false).array("copy_to", "another_field", "new_field").endObject().endObject().endObject().endObject().string()-->Line_6 $$ client().admin().indices().preparePutMapping("test").setType("type1").setSource(mapping).get()[ FD ]
Line_27 $$ ParseContext.Document doc = parsedDoc.rootDoc()-->Line_38 $$ assertThat(doc.getFields("int_to_str_test")[0].numericValue().intValue(), equalTo(42))[ FD ]
Line_26 $$ ParsedDocument parsedDoc = docMapper.parse("test", "type1", "1", json)-->Line_27 $$ ParseContext.Document doc = parsedDoc.rootDoc()[ FD ]
Line_14 $$ Map<String, Object> serializedMap-->Line_16 $$ serializedMap = parser.map()[ FD ]
Line_20 $$ List<String> copyToList = (List<String>) copyTestMap.get("copy_to")-->Line_23 $$ assertThat(copyToList.get(1).toString(), equalTo("cyclic_test"))[ FD ]
Line_8 $$ FieldMapper fieldMapper = docMapper.mappers().getMapper("copy_test")-->Line_45 $$ fieldMapper = docMapper.mappers().getMapper("new_field")[ FD ]
Line_27 $$ ParseContext.Document doc = parsedDoc.rootDoc()-->Line_41 $$ assertThat(doc.getFields("new_field")[0].numericValue().intValue(), equalTo(42))[ FD ]
Line_26 $$ ParsedDocument parsedDoc = docMapper.parse("test", "type1", "1", json)-->Line_43 $$ client().admin().indices().preparePutMapping("test").setType("type1").setSource(parsedDoc.dynamicMappingsUpdate().toString()).get()[ FD ]
Line_7 $$ DocumentMapper docMapper = index.mapperService().documentMapper("type1")-->Line_44 $$ docMapper = index.mapperService().documentMapper("type1")[ FD ]
Line_44 $$ docMapper = index.mapperService().documentMapper("type1")-->Line_45 $$ fieldMapper = docMapper.mappers().getMapper("new_field")[ FD ]
Line_11 $$ XContentBuilder builder = jsonBuilder().startObject()-->Line_13 $$ builder.close()[ FD ]
Line_5 $$ IndexService index = createIndex("test")-->Line_44 $$ docMapper = index.mapperService().documentMapper("type1")[ FD ]
Line_27 $$ ParseContext.Document doc = parsedDoc.rootDoc()-->Line_34 $$ assertThat(doc.getFields("cyclic_test").length, equalTo(2))[ FD ]
Line_27 $$ ParseContext.Document doc = parsedDoc.rootDoc()-->Line_33 $$ assertThat(doc.getFields("another_field")[1].stringValue(), equalTo("42"))[ FD ]
Line_11 $$ XContentBuilder builder = jsonBuilder().startObject()-->Line_12 $$ stringFieldMapper.toXContent(builder, ToXContent.EMPTY_PARAMS).endObject()[ FD ]
Line_14 $$ Map<String, Object> serializedMap-->Line_18 $$ Map<String, Object> copyTestMap = (Map<String, Object>) serializedMap.get("copy_test")[ FD ]
Line_7 $$ DocumentMapper docMapper = index.mapperService().documentMapper("type1")-->Line_45 $$ fieldMapper = docMapper.mappers().getMapper("new_field")[ FD ]
Line_15 $$ try (XContentParser parser = JsonXContent.jsonXContent.createParser(builder.bytes())) -->Line_16 $$ serializedMap = parser.map()[ FD ]
Line_45 $$ fieldMapper = docMapper.mappers().getMapper("new_field")-->Line_46 $$ assertThat(fieldMapper, instanceOf(LongFieldMapper.class))[ FD ]
Line_18 $$ Map<String, Object> copyTestMap = (Map<String, Object>) serializedMap.get("copy_test")-->Line_20 $$ List<String> copyToList = (List<String>) copyTestMap.get("copy_to")[ FD ]
Line_5 $$ IndexService index = createIndex("test")-->Line_7 $$ DocumentMapper docMapper = index.mapperService().documentMapper("type1")[ FD ]
Line_7 $$ DocumentMapper docMapper = index.mapperService().documentMapper("type1")-->Line_8 $$ FieldMapper fieldMapper = docMapper.mappers().getMapper("copy_test")[ FD ]
Line_7 $$ DocumentMapper docMapper = index.mapperService().documentMapper("type1")-->Line_26 $$ ParsedDocument parsedDoc = docMapper.parse("test", "type1", "1", json)[ FD ]
Line_27 $$ ParseContext.Document doc = parsedDoc.rootDoc()-->Line_37 $$ assertThat(doc.getFields("int_to_str_test").length, equalTo(1))[ FD ]
Line_11 $$ XContentBuilder builder = jsonBuilder().startObject()-->Line_15 $$ try (XContentParser parser = JsonXContent.jsonXContent.createParser(builder.bytes())) [ FD ]
Line_27 $$ ParseContext.Document doc = parsedDoc.rootDoc()-->Line_29 $$ assertThat(doc.getFields("copy_test")[0].stringValue(), equalTo("foo"))[ FD ]
Line_27 $$ ParseContext.Document doc = parsedDoc.rootDoc()-->Line_35 $$ assertThat(doc.getFields("cyclic_test")[0].stringValue(), equalTo("foo"))[ FD ]
Line_27 $$ ParseContext.Document doc = parsedDoc.rootDoc()-->Line_32 $$ assertThat(doc.getFields("another_field")[0].stringValue(), equalTo("foo"))[ FD ]
Line_27 $$ ParseContext.Document doc = parsedDoc.rootDoc()-->Line_30 $$ assertThat(doc.getFields("copy_test")[1].stringValue(), equalTo("bar"))[ FD ]
Line_27 $$ ParseContext.Document doc = parsedDoc.rootDoc()-->Line_36 $$ assertThat(doc.getFields("cyclic_test")[1].stringValue(), equalTo("bar"))[ FD ]
Line_27 $$ ParseContext.Document doc = parsedDoc.rootDoc()-->Line_28 $$ assertThat(doc.getFields("copy_test").length, equalTo(2))[ FD ]
