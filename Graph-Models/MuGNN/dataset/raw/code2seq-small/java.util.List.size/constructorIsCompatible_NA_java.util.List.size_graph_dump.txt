Line_9 $$ if (!TypeConversionUtil.isAssignable(constructorParams[i].getType(), params.get(i).parameter.type)) -->Line_10 $$ return false[ CD ]
Line_8 $$ for (int i = 0; i < constructorParams.length; i++) -->Line_9 $$ if (!TypeConversionUtil.isAssignable(constructorParams[i].getType(), params.get(i).parameter.type)) [ FD ]
Line_3 $$ final PsiParameterList parameterList = constructor.getParameterList()-->Line_4 $$ final PsiParameter[] constructorParams = parameterList.getParameters()[ FD ]
Line_8 $$ for (int i = 0; i < constructorParams.length; i++) -->Line_9 $$ if (!TypeConversionUtil.isAssignable(constructorParams[i].getType(), params.get(i).parameter.type)) [ CD ]
Line_2 $$ private static boolean constructorIsCompatible(PsiMethod constructor, List<ParameterChunk> params) -->Line_5 $$ if (constructorParams.length != params.size()) [ CD ]
Line_5 $$ if (constructorParams.length != params.size()) -->Line_6 $$ return false[ CD ]
Line_2 $$ private static boolean constructorIsCompatible(PsiMethod constructor, List<ParameterChunk> params) -->Line_9 $$ if (!TypeConversionUtil.isAssignable(constructorParams[i].getType(), params.get(i).parameter.type)) [ FD ]
Line_2 $$ private static boolean constructorIsCompatible(PsiMethod constructor, List<ParameterChunk> params) -->Line_4 $$ final PsiParameter[] constructorParams = parameterList.getParameters()[ CD ]
Line_2 $$ private static boolean constructorIsCompatible(PsiMethod constructor, List<ParameterChunk> params) -->Line_8 $$ for (int i = 0; i < constructorParams.length; i++) [ CD ]
Line_2 $$ private static boolean constructorIsCompatible(PsiMethod constructor, List<ParameterChunk> params) -->Line_5 $$ if (constructorParams.length != params.size()) [ FD ]
Line_2 $$ private static boolean constructorIsCompatible(PsiMethod constructor, List<ParameterChunk> params) -->Line_3 $$ final PsiParameterList parameterList = constructor.getParameterList()[ CD ]
Line_2 $$ private static boolean constructorIsCompatible(PsiMethod constructor, List<ParameterChunk> params) -->Line_3 $$ final PsiParameterList parameterList = constructor.getParameterList()[ FD ]
Line_2 $$ private static boolean constructorIsCompatible(PsiMethod constructor, List<ParameterChunk> params) -->Line_13 $$ return true[ CD ]
