Line_5 $$ for (int i = 0; i < abstractValuetypes.length; ++i) -->Line_7 $$ abstract_base_valuetypes.add(vdi.id())[ CD ]
Line_2 $$ private String[] addAbstractBaseValuetypes(ContainerAnalysis ca) throws RMIIIOPViolationException, IRConstructionException -->Line_3 $$ ValueAnalysis[] abstractValuetypes = ca.getAbstractBaseValuetypes()[ CD ]
Line_2 $$ private String[] addAbstractBaseValuetypes(ContainerAnalysis ca) throws RMIIIOPViolationException, IRConstructionException -->Line_9 $$ String[] strArr = new String[abstract_base_valuetypes.size()][ CD ]
Line_4 $$ List abstract_base_valuetypes = new ArrayList()-->Line_7 $$ abstract_base_valuetypes.add(vdi.id())[ FD ]
Line_4 $$ List abstract_base_valuetypes = new ArrayList()-->Line_9 $$ String[] strArr = new String[abstract_base_valuetypes.size()][ FD ]
Line_2 $$ private String[] addAbstractBaseValuetypes(ContainerAnalysis ca) throws RMIIIOPViolationException, IRConstructionException -->Line_5 $$ for (int i = 0; i < abstractValuetypes.length; ++i) [ CD ]
Line_4 $$ List abstract_base_valuetypes = new ArrayList()-->Line_10 $$ return (String[]) abstract_base_valuetypes.toArray(strArr)[ FD ]
Line_5 $$ for (int i = 0; i < abstractValuetypes.length; ++i) -->Line_6 $$ ValueDefImpl vdi = addValue(abstractValuetypes[i])[ CD ]
Line_9 $$ String[] strArr = new String[abstract_base_valuetypes.size()]-->Line_10 $$ return (String[]) abstract_base_valuetypes.toArray(strArr)[ FD ]
Line_6 $$ ValueDefImpl vdi = addValue(abstractValuetypes[i])-->Line_7 $$ abstract_base_valuetypes.add(vdi.id())[ FD ]
Line_2 $$ private String[] addAbstractBaseValuetypes(ContainerAnalysis ca) throws RMIIIOPViolationException, IRConstructionException -->Line_10 $$ return (String[]) abstract_base_valuetypes.toArray(strArr)[ CD ]
Line_2 $$ private String[] addAbstractBaseValuetypes(ContainerAnalysis ca) throws RMIIIOPViolationException, IRConstructionException -->Line_4 $$ List abstract_base_valuetypes = new ArrayList()[ CD ]
Line_2 $$ private String[] addAbstractBaseValuetypes(ContainerAnalysis ca) throws RMIIIOPViolationException, IRConstructionException -->Line_3 $$ ValueAnalysis[] abstractValuetypes = ca.getAbstractBaseValuetypes()[ FD ]
