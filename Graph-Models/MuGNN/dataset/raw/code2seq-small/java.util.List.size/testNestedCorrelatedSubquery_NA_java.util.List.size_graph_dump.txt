Line_5 $$ Session session = openSession()-->Line_6 $$ Transaction t = session.beginTransaction()[ FD ]
Line_15 $$ Enrolment enrolment = new Enrolment()-->Line_17 $$ enrolment.setCourseCode(course.getCourseCode())[ FD ]
Line_5 $$ Session session = openSession()-->Line_41 $$ session.close()[ FD ]
Line_5 $$ Session session = openSession()-->Line_26 $$ session.clear()[ FD ]
Line_11 $$ Student gavin = new Student()-->Line_12 $$ gavin.setName("Gavin King")[ FD ]
Line_11 $$ Student gavin = new Student()-->Line_20 $$ enrolment.setStudent(gavin)[ FD ]
Line_15 $$ Enrolment enrolment = new Enrolment()-->Line_21 $$ enrolment.setStudentNumber(gavin.getStudentNumber())[ FD ]
Line_11 $$ Student gavin = new Student()-->Line_21 $$ enrolment.setStudentNumber(gavin.getStudentNumber())[ FD ]
Line_5 $$ Session session = openSession()-->Line_24 $$ session.persist(enrolment)[ FD ]
Line_5 $$ Session session = openSession()-->Line_10 $$ session.persist(course)[ FD ]
Line_15 $$ Enrolment enrolment = new Enrolment()-->Line_18 $$ enrolment.setSemester((short) 1)[ FD ]
Line_7 $$ Course course = new Course()-->Line_22 $$ session.persist(course)[ FD ]
Line_15 $$ Enrolment enrolment = new Enrolment()-->Line_19 $$ enrolment.setYear((short) 1999)[ FD ]
Line_7 $$ Course course = new Course()-->Line_17 $$ enrolment.setCourseCode(course.getCourseCode())[ FD ]
Line_32 $$ DetachedCriteria subQuery = DetachedCriteria.forClass(Enrolment.class, "enrolment")-->Line_33 $$ subQuery.add(Subqueries.propertyEq("enrolment.year", nestedSubQuery))[ FD ]
Line_32 $$ DetachedCriteria subQuery = DetachedCriteria.forClass(Enrolment.class, "enrolment")-->Line_35 $$ mainCriteria.add(Subqueries.exists(subQuery))[ FD ]
Line_29 $$ DetachedCriteria nestedSubQuery = DetachedCriteria.forClass(Enrolment.class, "maxStudentEnrolment")-->Line_30 $$ nestedSubQuery.add(Restrictions.eqProperty("student.preferredCourse", "maxStudentEnrolment.course"))[ FD ]
Line_11 $$ Student gavin = new Student()-->Line_39 $$ assertEquals(gavin.getStudentNumber(), ((Student) results.get(0)).getStudentNumber())[ FD ]
Line_11 $$ Student gavin = new Student()-->Line_13 $$ gavin.setStudentNumber(232)[ FD ]
Line_29 $$ DetachedCriteria nestedSubQuery = DetachedCriteria.forClass(Enrolment.class, "maxStudentEnrolment")-->Line_31 $$ nestedSubQuery.setProjection(Projections.max("maxStudentEnrolment.year"))[ FD ]
Line_6 $$ Transaction t = session.beginTransaction()-->Line_40 $$ t.rollback()[ FD ]
Line_15 $$ Enrolment enrolment = new Enrolment()-->Line_16 $$ enrolment.setCourse(course)[ FD ]
Line_5 $$ Session session = openSession()-->Line_23 $$ session.persist(gavin)[ FD ]
Line_15 $$ Enrolment enrolment = new Enrolment()-->Line_24 $$ session.persist(enrolment)[ FD ]
Line_32 $$ DetachedCriteria subQuery = DetachedCriteria.forClass(Enrolment.class, "enrolment")-->Line_34 $$ subQuery.setProjection(Projections.property("student"))[ FD ]
Line_7 $$ Course course = new Course()-->Line_9 $$ course.setDescription("Hibernate Training")[ FD ]
Line_7 $$ Course course = new Course()-->Line_8 $$ course.setCourseCode("HIB")[ FD ]
Line_11 $$ Student gavin = new Student()-->Line_23 $$ session.persist(gavin)[ FD ]
Line_7 $$ Course course = new Course()-->Line_10 $$ session.persist(course)[ FD ]
Line_7 $$ Course course = new Course()-->Line_14 $$ gavin.setPreferredCourse(course)[ FD ]
Line_11 $$ Student gavin = new Student()-->Line_14 $$ gavin.setPreferredCourse(course)[ FD ]
Line_29 $$ DetachedCriteria nestedSubQuery = DetachedCriteria.forClass(Enrolment.class, "maxStudentEnrolment")-->Line_33 $$ subQuery.add(Subqueries.propertyEq("enrolment.year", nestedSubQuery))[ FD ]
Line_15 $$ Enrolment enrolment = new Enrolment()-->Line_20 $$ enrolment.setStudent(gavin)[ FD ]
Line_5 $$ Session session = openSession()-->Line_22 $$ session.persist(course)[ FD ]
Line_5 $$ Session session = openSession()-->Line_25 $$ session.flush()[ FD ]
Line_7 $$ Course course = new Course()-->Line_16 $$ enrolment.setCourse(course)[ FD ]
