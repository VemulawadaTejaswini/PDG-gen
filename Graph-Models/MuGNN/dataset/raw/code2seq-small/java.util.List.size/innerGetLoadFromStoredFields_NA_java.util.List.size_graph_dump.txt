Line_50 $$ if (value instanceof List) -->Line_53 $$ fields.put(field, new GetField(field, Collections.singletonList(value)))[ CD ]
Line_2 $$ private GetResult innerGetLoadFromStoredFields(String type, String id, String[] gFields, FetchSourceContext fetchSourceContext, Engine.GetResult get, DocumentMapper docMapper, boolean ignoreErrorsOnGeneratedFields) -->Line_15 $$ fieldVisitor.postProcess(docMapper)[ FD ]
Line_2 $$ private GetResult innerGetLoadFromStoredFields(String type, String id, String[] gFields, FetchSourceContext fetchSourceContext, Engine.GetResult get, DocumentMapper docMapper, boolean ignoreErrorsOnGeneratedFields) -->Line_58 $$ if (!fetchSourceContext.fetchSource()) [ CD ]
Line_58 $$ if (!fetchSourceContext.fetchSource()) -->Line_59 $$ source = null[ CD ]
Line_6 $$ FieldsVisitor fieldVisitor = buildFieldsVisitors(gFields, fetchSourceContext)-->Line_9 $$ docIdAndVersion.context.reader().document(docIdAndVersion.docId, fieldVisitor)[ FD ]
Line_16 $$ fields = new HashMap(fieldVisitor.fields().size())-->Line_48 $$ fields = new HashMap(2)[ FD ]
Line_63 $$ Tuple<XContentType, Map<String, Object>> typeMapTuple = XContentHelper.convertToMap(source, true)-->Line_65 $$ sourceAsMap = typeMapTuple.v2()[ FD ]
Line_25 $$ Object value = null-->Line_50 $$ if (value instanceof List) [ FD ]
Line_2 $$ private GetResult innerGetLoadFromStoredFields(String type, String id, String[] gFields, FetchSourceContext fetchSourceContext, Engine.GetResult get, DocumentMapper docMapper, boolean ignoreErrorsOnGeneratedFields) -->Line_6 $$ FieldsVisitor fieldVisitor = buildFieldsVisitors(gFields, fetchSourceContext)[ FD ]
Line_3 $$ Map<String, GetField> fields = null-->Line_16 $$ fields = new HashMap(fieldVisitor.fields().size())[ FD ]
Line_23 $$ SearchLookup searchLookup = null-->Line_38 $$ List<Object> values = searchLookup.source().extractRawValues(field)[ FD ]
Line_16 $$ fields = new HashMap(fieldVisitor.fields().size())-->Line_53 $$ fields.put(field, new GetField(field, Collections.singletonList(value)))[ FD ]
Line_47 $$ if (fields == null) -->Line_48 $$ fields = new HashMap(2)[ CD ]
Line_23 $$ SearchLookup searchLookup = null-->Line_34 $$ LeafSearchLookup leafSearchLookup = searchLookup.getLeafSearchLookup(docIdAndVersion.context)[ FD ]
Line_4 $$ BytesReference source = null-->Line_35 $$ searchLookup.source().setSource(source)[ FD ]
Line_32 $$ if (searchLookup == null) -->Line_34 $$ LeafSearchLookup leafSearchLookup = searchLookup.getLeafSearchLookup(docIdAndVersion.context)[ CD ]
Line_2 $$ private GetResult innerGetLoadFromStoredFields(String type, String id, String[] gFields, FetchSourceContext fetchSourceContext, Engine.GetResult get, DocumentMapper docMapper, boolean ignoreErrorsOnGeneratedFields) -->Line_66 $$ sourceAsMap = XContentMapValues.filter(sourceAsMap, fetchSourceContext.includes(), fetchSourceContext.excludes())[ FD ]
Line_60 $$ if (fetchSourceContext.includes().length > 0 || fetchSourceContext.excludes().length > 0) -->Line_65 $$ sourceAsMap = typeMapTuple.v2()[ CD ]
Line_65 $$ sourceAsMap = typeMapTuple.v2()-->Line_68 $$ source = XContentFactory.contentBuilder(sourceContentType).map(sourceAsMap).bytes()[ FD ]
Line_32 $$ if (searchLookup == null) -->Line_35 $$ searchLookup.source().setSource(source)[ CD ]
Line_25 $$ Object value = null-->Line_53 $$ fields.put(field, new GetField(field, Collections.singletonList(value)))[ FD ]
Line_23 $$ SearchLookup searchLookup = null-->Line_33 $$ searchLookup = new SearchLookup(mapperService, null, new String[] [ FD ]
Line_38 $$ List<Object> values = searchLookup.source().extractRawValues(field)-->Line_40 $$ for (int i = 0; i < values.size(); i++) [ FD ]
Line_16 $$ fields = new HashMap(fieldVisitor.fields().size())-->Line_47 $$ if (fields == null) [ FD ]
Line_26 $$ FieldMapper fieldMapper = docMapper.mappers().smartNameFieldMapper(field)-->Line_27 $$ if (fieldMapper == null) [ FD ]
Line_25 $$ Object value = null-->Line_46 $$ if (value != null) [ FD ]
Line_7 $$ if (fieldVisitor != null) -->Line_14 $$ if (!fieldVisitor.fields().isEmpty()) [ CD ]
Line_16 $$ fields = new HashMap(fieldVisitor.fields().size())-->Line_51 $$ fields.put(field, new GetField(field, (List) value))[ FD ]
Line_3 $$ Map<String, GetField> fields = null-->Line_48 $$ fields = new HashMap(2)[ FD ]
Line_2 $$ private GetResult innerGetLoadFromStoredFields(String type, String id, String[] gFields, FetchSourceContext fetchSourceContext, Engine.GetResult get, DocumentMapper docMapper, boolean ignoreErrorsOnGeneratedFields) -->Line_5 $$ Versions.DocIdAndVersion docIdAndVersion = get.docIdAndVersion()[ CD ]
Line_13 $$ source = fieldVisitor.source()-->Line_59 $$ source = null[ FD ]
Line_31 $$ if (!fieldMapper.fieldType().stored() && !fieldMapper.isGenerated()) -->Line_32 $$ if (searchLookup == null) [ CD ]
Line_2 $$ private GetResult innerGetLoadFromStoredFields(String type, String id, String[] gFields, FetchSourceContext fetchSourceContext, Engine.GetResult get, DocumentMapper docMapper, boolean ignoreErrorsOnGeneratedFields) -->Line_3 $$ Map<String, GetField> fields = null[ CD ]
Line_40 $$ for (int i = 0; i < values.size(); i++) -->Line_41 $$ values.set(i, fieldMapper.fieldType().valueForSearch(values.get(i)))[ CD ]
Line_2 $$ private GetResult innerGetLoadFromStoredFields(String type, String id, String[] gFields, FetchSourceContext fetchSourceContext, Engine.GetResult get, DocumentMapper docMapper, boolean ignoreErrorsOnGeneratedFields) -->Line_7 $$ if (fieldVisitor != null) [ CD ]
Line_60 $$ if (fetchSourceContext.includes().length > 0 || fetchSourceContext.excludes().length > 0) -->Line_63 $$ Tuple<XContentType, Map<String, Object>> typeMapTuple = XContentHelper.convertToMap(source, true)[ CD ]
Line_3 $$ Map<String, GetField> fields = null-->Line_18 $$ fields.put(entry.getKey(), new GetField(entry.getKey(), entry.getValue()))[ FD ]
Line_27 $$ if (fieldMapper == null) -->Line_31 $$ if (!fieldMapper.fieldType().stored() && !fieldMapper.isGenerated()) [ CD ]
Line_23 $$ SearchLookup searchLookup = null-->Line_32 $$ if (searchLookup == null) [ FD ]
Line_61 $$ Map<String, Object> sourceAsMap-->Line_68 $$ source = XContentFactory.contentBuilder(sourceContentType).map(sourceAsMap).bytes()[ FD ]
Line_26 $$ FieldMapper fieldMapper = docMapper.mappers().smartNameFieldMapper(field)-->Line_41 $$ values.set(i, fieldMapper.fieldType().valueForSearch(values.get(i)))[ FD ]
Line_2 $$ private GetResult innerGetLoadFromStoredFields(String type, String id, String[] gFields, FetchSourceContext fetchSourceContext, Engine.GetResult get, DocumentMapper docMapper, boolean ignoreErrorsOnGeneratedFields) -->Line_22 $$ if (gFields != null && gFields.length > 0) [ CD ]
Line_2 $$ private GetResult innerGetLoadFromStoredFields(String type, String id, String[] gFields, FetchSourceContext fetchSourceContext, Engine.GetResult get, DocumentMapper docMapper, boolean ignoreErrorsOnGeneratedFields) -->Line_5 $$ Versions.DocIdAndVersion docIdAndVersion = get.docIdAndVersion()[ FD ]
Line_33 $$ searchLookup = new SearchLookup(mapperService, null, new String[] -->Line_34 $$ LeafSearchLookup leafSearchLookup = searchLookup.getLeafSearchLookup(docIdAndVersion.context)[ FD ]
Line_31 $$ if (!fieldMapper.fieldType().stored() && !fieldMapper.isGenerated()) -->Line_38 $$ List<Object> values = searchLookup.source().extractRawValues(field)[ CD ]
Line_16 $$ fields = new HashMap(fieldVisitor.fields().size())-->Line_18 $$ fields.put(entry.getKey(), new GetField(entry.getKey(), entry.getValue()))[ FD ]
Line_32 $$ if (searchLookup == null) -->Line_33 $$ searchLookup = new SearchLookup(mapperService, null, new String[] [ CD ]
Line_63 $$ Tuple<XContentType, Map<String, Object>> typeMapTuple = XContentHelper.convertToMap(source, true)-->Line_64 $$ sourceContentType = typeMapTuple.v1()[ FD ]
Line_3 $$ Map<String, GetField> fields = null-->Line_53 $$ fields.put(field, new GetField(field, Collections.singletonList(value)))[ FD ]
Line_6 $$ FieldsVisitor fieldVisitor = buildFieldsVisitors(gFields, fetchSourceContext)-->Line_15 $$ fieldVisitor.postProcess(docMapper)[ FD ]
Line_14 $$ if (!fieldVisitor.fields().isEmpty()) -->Line_16 $$ fields = new HashMap(fieldVisitor.fields().size())[ CD ]
Line_66 $$ sourceAsMap = XContentMapValues.filter(sourceAsMap, fetchSourceContext.includes(), fetchSourceContext.excludes())-->Line_68 $$ source = XContentFactory.contentBuilder(sourceContentType).map(sourceAsMap).bytes()[ FD ]
Line_2 $$ private GetResult innerGetLoadFromStoredFields(String type, String id, String[] gFields, FetchSourceContext fetchSourceContext, Engine.GetResult get, DocumentMapper docMapper, boolean ignoreErrorsOnGeneratedFields) -->Line_28 $$ if (docMapper.objectMappers().get(field) != null) [ FD ]
Line_60 $$ if (fetchSourceContext.includes().length > 0 || fetchSourceContext.excludes().length > 0) -->Line_64 $$ sourceContentType = typeMapTuple.v1()[ CD ]
Line_46 $$ if (value != null) -->Line_47 $$ if (fields == null) [ CD ]
Line_60 $$ if (fetchSourceContext.includes().length > 0 || fetchSourceContext.excludes().length > 0) -->Line_61 $$ Map<String, Object> sourceAsMap[ CD ]
Line_34 $$ LeafSearchLookup leafSearchLookup = searchLookup.getLeafSearchLookup(docIdAndVersion.context)-->Line_36 $$ leafSearchLookup.setDocument(docIdAndVersion.docId)[ FD ]
Line_32 $$ if (searchLookup == null) -->Line_36 $$ leafSearchLookup.setDocument(docIdAndVersion.docId)[ CD ]
Line_24 $$ for (String field : gFields) -->Line_51 $$ fields.put(field, new GetField(field, (List) value))[ FD ]
Line_2 $$ private GetResult innerGetLoadFromStoredFields(String type, String id, String[] gFields, FetchSourceContext fetchSourceContext, Engine.GetResult get, DocumentMapper docMapper, boolean ignoreErrorsOnGeneratedFields) -->Line_60 $$ if (fetchSourceContext.includes().length > 0 || fetchSourceContext.excludes().length > 0) [ FD ]
Line_2 $$ private GetResult innerGetLoadFromStoredFields(String type, String id, String[] gFields, FetchSourceContext fetchSourceContext, Engine.GetResult get, DocumentMapper docMapper, boolean ignoreErrorsOnGeneratedFields) -->Line_73 $$ return new GetResult(shardId.index().name(), type, id, get.version(), get.exists(), source, fields)[ FD ]
Line_40 $$ for (int i = 0; i < values.size(); i++) -->Line_41 $$ values.set(i, fieldMapper.fieldType().valueForSearch(values.get(i)))[ FD ]
Line_2 $$ private GetResult innerGetLoadFromStoredFields(String type, String id, String[] gFields, FetchSourceContext fetchSourceContext, Engine.GetResult get, DocumentMapper docMapper, boolean ignoreErrorsOnGeneratedFields) -->Line_26 $$ FieldMapper fieldMapper = docMapper.mappers().smartNameFieldMapper(field)[ FD ]
Line_38 $$ List<Object> values = searchLookup.source().extractRawValues(field)-->Line_39 $$ if (!values.isEmpty()) [ FD ]
Line_2 $$ private GetResult innerGetLoadFromStoredFields(String type, String id, String[] gFields, FetchSourceContext fetchSourceContext, Engine.GetResult get, DocumentMapper docMapper, boolean ignoreErrorsOnGeneratedFields) -->Line_4 $$ BytesReference source = null[ CD ]
Line_2 $$ private GetResult innerGetLoadFromStoredFields(String type, String id, String[] gFields, FetchSourceContext fetchSourceContext, Engine.GetResult get, DocumentMapper docMapper, boolean ignoreErrorsOnGeneratedFields) -->Line_58 $$ if (!fetchSourceContext.fetchSource()) [ FD ]
Line_62 $$ XContentType sourceContentType = null-->Line_64 $$ sourceContentType = typeMapTuple.v1()[ FD ]
Line_24 $$ for (String field : gFields) -->Line_38 $$ List<Object> values = searchLookup.source().extractRawValues(field)[ FD ]
Line_39 $$ if (!values.isEmpty()) -->Line_40 $$ for (int i = 0; i < values.size(); i++) [ CD ]
Line_6 $$ FieldsVisitor fieldVisitor = buildFieldsVisitors(gFields, fetchSourceContext)-->Line_17 $$ for (Map.Entry<String, List<Object>> entry : fieldVisitor.fields().entrySet()) [ FD ]
Line_13 $$ source = fieldVisitor.source()-->Line_68 $$ source = XContentFactory.contentBuilder(sourceContentType).map(sourceAsMap).bytes()[ FD ]
Line_61 $$ Map<String, Object> sourceAsMap-->Line_66 $$ sourceAsMap = XContentMapValues.filter(sourceAsMap, fetchSourceContext.includes(), fetchSourceContext.excludes())[ FD ]
Line_6 $$ FieldsVisitor fieldVisitor = buildFieldsVisitors(gFields, fetchSourceContext)-->Line_13 $$ source = fieldVisitor.source()[ FD ]
Line_7 $$ if (fieldVisitor != null) -->Line_13 $$ source = fieldVisitor.source()[ CD ]
Line_59 $$ source = null-->Line_68 $$ source = XContentFactory.contentBuilder(sourceContentType).map(sourceAsMap).bytes()[ FD ]
Line_2 $$ private GetResult innerGetLoadFromStoredFields(String type, String id, String[] gFields, FetchSourceContext fetchSourceContext, Engine.GetResult get, DocumentMapper docMapper, boolean ignoreErrorsOnGeneratedFields) -->Line_6 $$ FieldsVisitor fieldVisitor = buildFieldsVisitors(gFields, fetchSourceContext)[ CD ]
Line_6 $$ FieldsVisitor fieldVisitor = buildFieldsVisitors(gFields, fetchSourceContext)-->Line_7 $$ if (fieldVisitor != null) [ FD ]
Line_6 $$ FieldsVisitor fieldVisitor = buildFieldsVisitors(gFields, fetchSourceContext)-->Line_14 $$ if (!fieldVisitor.fields().isEmpty()) [ FD ]
Line_23 $$ SearchLookup searchLookup = null-->Line_35 $$ searchLookup.source().setSource(source)[ FD ]
Line_60 $$ if (fetchSourceContext.includes().length > 0 || fetchSourceContext.excludes().length > 0) -->Line_66 $$ sourceAsMap = XContentMapValues.filter(sourceAsMap, fetchSourceContext.includes(), fetchSourceContext.excludes())[ CD ]
Line_61 $$ Map<String, Object> sourceAsMap-->Line_65 $$ sourceAsMap = typeMapTuple.v2()[ FD ]
Line_14 $$ if (!fieldVisitor.fields().isEmpty()) -->Line_15 $$ fieldVisitor.postProcess(docMapper)[ CD ]
Line_22 $$ if (gFields != null && gFields.length > 0) -->Line_23 $$ SearchLookup searchLookup = null[ CD ]
Line_48 $$ fields = new HashMap(2)-->Line_53 $$ fields.put(field, new GetField(field, Collections.singletonList(value)))[ FD ]
Line_2 $$ private GetResult innerGetLoadFromStoredFields(String type, String id, String[] gFields, FetchSourceContext fetchSourceContext, Engine.GetResult get, DocumentMapper docMapper, boolean ignoreErrorsOnGeneratedFields) -->Line_73 $$ return new GetResult(shardId.index().name(), type, id, get.version(), get.exists(), source, fields)[ CD ]
Line_50 $$ if (value instanceof List) -->Line_51 $$ fields.put(field, new GetField(field, (List) value))[ CD ]
Line_26 $$ FieldMapper fieldMapper = docMapper.mappers().smartNameFieldMapper(field)-->Line_31 $$ if (!fieldMapper.fieldType().stored() && !fieldMapper.isGenerated()) [ FD ]
Line_13 $$ source = fieldVisitor.source()-->Line_35 $$ searchLookup.source().setSource(source)[ FD ]
Line_64 $$ sourceContentType = typeMapTuple.v1()-->Line_68 $$ source = XContentFactory.contentBuilder(sourceContentType).map(sourceAsMap).bytes()[ FD ]
Line_24 $$ for (String field : gFields) -->Line_26 $$ FieldMapper fieldMapper = docMapper.mappers().smartNameFieldMapper(field)[ FD ]
Line_17 $$ for (Map.Entry<String, List<Object>> entry : fieldVisitor.fields().entrySet()) -->Line_18 $$ fields.put(entry.getKey(), new GetField(entry.getKey(), entry.getValue()))[ FD ]
Line_39 $$ if (!values.isEmpty()) -->Line_43 $$ value = values[ CD ]
Line_60 $$ if (fetchSourceContext.includes().length > 0 || fetchSourceContext.excludes().length > 0) -->Line_62 $$ XContentType sourceContentType = null[ CD ]
Line_27 $$ if (fieldMapper == null) -->Line_28 $$ if (docMapper.objectMappers().get(field) != null) [ CD ]
Line_3 $$ Map<String, GetField> fields = null-->Line_47 $$ if (fields == null) [ FD ]
Line_31 $$ if (!fieldMapper.fieldType().stored() && !fieldMapper.isGenerated()) -->Line_39 $$ if (!values.isEmpty()) [ CD ]
Line_58 $$ if (!fetchSourceContext.fetchSource()) -->Line_60 $$ if (fetchSourceContext.includes().length > 0 || fetchSourceContext.excludes().length > 0) [ CD ]
Line_38 $$ List<Object> values = searchLookup.source().extractRawValues(field)-->Line_41 $$ values.set(i, fieldMapper.fieldType().valueForSearch(values.get(i)))[ FD ]
Line_3 $$ Map<String, GetField> fields = null-->Line_51 $$ fields.put(field, new GetField(field, (List) value))[ FD ]
Line_62 $$ XContentType sourceContentType = null-->Line_68 $$ source = XContentFactory.contentBuilder(sourceContentType).map(sourceAsMap).bytes()[ FD ]
Line_6 $$ FieldsVisitor fieldVisitor = buildFieldsVisitors(gFields, fetchSourceContext)-->Line_16 $$ fields = new HashMap(fieldVisitor.fields().size())[ FD ]
Line_24 $$ for (String field : gFields) -->Line_53 $$ fields.put(field, new GetField(field, Collections.singletonList(value)))[ FD ]
Line_46 $$ if (value != null) -->Line_50 $$ if (value instanceof List) [ CD ]
Line_38 $$ List<Object> values = searchLookup.source().extractRawValues(field)-->Line_43 $$ value = values[ FD ]
Line_4 $$ BytesReference source = null-->Line_13 $$ source = fieldVisitor.source()[ FD ]
Line_13 $$ source = fieldVisitor.source()-->Line_63 $$ Tuple<XContentType, Map<String, Object>> typeMapTuple = XContentHelper.convertToMap(source, true)[ FD ]
Line_4 $$ BytesReference source = null-->Line_68 $$ source = XContentFactory.contentBuilder(sourceContentType).map(sourceAsMap).bytes()[ FD ]
Line_48 $$ fields = new HashMap(2)-->Line_51 $$ fields.put(field, new GetField(field, (List) value))[ FD ]
Line_33 $$ searchLookup = new SearchLookup(mapperService, null, new String[] -->Line_38 $$ List<Object> values = searchLookup.source().extractRawValues(field)[ FD ]
Line_43 $$ value = values-->Line_46 $$ if (value != null) [ FD ]
Line_33 $$ searchLookup = new SearchLookup(mapperService, null, new String[] -->Line_35 $$ searchLookup.source().setSource(source)[ FD ]
Line_43 $$ value = values-->Line_50 $$ if (value instanceof List) [ FD ]
Line_59 $$ source = null-->Line_63 $$ Tuple<XContentType, Map<String, Object>> typeMapTuple = XContentHelper.convertToMap(source, true)[ FD ]
Line_4 $$ BytesReference source = null-->Line_63 $$ Tuple<XContentType, Map<String, Object>> typeMapTuple = XContentHelper.convertToMap(source, true)[ FD ]
Line_65 $$ sourceAsMap = typeMapTuple.v2()-->Line_66 $$ sourceAsMap = XContentMapValues.filter(sourceAsMap, fetchSourceContext.includes(), fetchSourceContext.excludes())[ FD ]
Line_24 $$ for (String field : gFields) -->Line_28 $$ if (docMapper.objectMappers().get(field) != null) [ FD ]
Line_25 $$ Object value = null-->Line_43 $$ value = values[ FD ]
Line_4 $$ BytesReference source = null-->Line_59 $$ source = null[ FD ]
Line_43 $$ value = values-->Line_53 $$ fields.put(field, new GetField(field, Collections.singletonList(value)))[ FD ]
