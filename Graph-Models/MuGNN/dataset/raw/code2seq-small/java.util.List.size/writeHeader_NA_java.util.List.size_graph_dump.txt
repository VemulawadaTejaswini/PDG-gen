Line_2 $$ private BytesReference writeHeader(int numFieldsWritten, boolean getTermStatistics, boolean getFieldStatistics, boolean scores) throws IOException -->Line_3 $$ BytesStreamOutput header = new BytesStreamOutput()[ CD ]
Line_3 $$ BytesStreamOutput header = new BytesStreamOutput()-->Line_7 $$ header.writeBoolean(getFieldStatistics)[ FD ]
Line_2 $$ private BytesReference writeHeader(int numFieldsWritten, boolean getTermStatistics, boolean getFieldStatistics, boolean scores) throws IOException -->Line_9 $$ header.writeVInt(numFieldsWritten)[ FD ]
Line_3 $$ BytesStreamOutput header = new BytesStreamOutput()-->Line_9 $$ header.writeVInt(numFieldsWritten)[ FD ]
Line_2 $$ private BytesReference writeHeader(int numFieldsWritten, boolean getTermStatistics, boolean getFieldStatistics, boolean scores) throws IOException -->Line_14 $$ header.close()[ CD ]
Line_2 $$ private BytesReference writeHeader(int numFieldsWritten, boolean getTermStatistics, boolean getFieldStatistics, boolean scores) throws IOException -->Line_7 $$ header.writeBoolean(getFieldStatistics)[ CD ]
Line_2 $$ private BytesReference writeHeader(int numFieldsWritten, boolean getTermStatistics, boolean getFieldStatistics, boolean scores) throws IOException -->Line_9 $$ header.writeVInt(numFieldsWritten)[ CD ]
Line_2 $$ private BytesReference writeHeader(int numFieldsWritten, boolean getTermStatistics, boolean getFieldStatistics, boolean scores) throws IOException -->Line_6 $$ header.writeBoolean(getTermStatistics)[ FD ]
Line_2 $$ private BytesReference writeHeader(int numFieldsWritten, boolean getTermStatistics, boolean getFieldStatistics, boolean scores) throws IOException -->Line_7 $$ header.writeBoolean(getFieldStatistics)[ FD ]
Line_2 $$ private BytesReference writeHeader(int numFieldsWritten, boolean getTermStatistics, boolean getFieldStatistics, boolean scores) throws IOException -->Line_8 $$ header.writeBoolean(scores)[ CD ]
Line_10 $$ for (int i = 0; i < fields.size(); i++) -->Line_11 $$ header.writeString(fields.get(i))[ CD ]
Line_10 $$ for (int i = 0; i < fields.size(); i++) -->Line_12 $$ header.writeVLong(fieldOffset.get(i).longValue())[ FD ]
Line_10 $$ for (int i = 0; i < fields.size(); i++) -->Line_12 $$ header.writeVLong(fieldOffset.get(i).longValue())[ CD ]
Line_2 $$ private BytesReference writeHeader(int numFieldsWritten, boolean getTermStatistics, boolean getFieldStatistics, boolean scores) throws IOException -->Line_6 $$ header.writeBoolean(getTermStatistics)[ CD ]
Line_2 $$ private BytesReference writeHeader(int numFieldsWritten, boolean getTermStatistics, boolean getFieldStatistics, boolean scores) throws IOException -->Line_10 $$ for (int i = 0; i < fields.size(); i++) [ CD ]
Line_10 $$ for (int i = 0; i < fields.size(); i++) -->Line_11 $$ header.writeString(fields.get(i))[ FD ]
Line_3 $$ BytesStreamOutput header = new BytesStreamOutput()-->Line_14 $$ header.close()[ FD ]
Line_2 $$ private BytesReference writeHeader(int numFieldsWritten, boolean getTermStatistics, boolean getFieldStatistics, boolean scores) throws IOException -->Line_15 $$ return header.bytes()[ CD ]
Line_3 $$ BytesStreamOutput header = new BytesStreamOutput()-->Line_8 $$ header.writeBoolean(scores)[ FD ]
Line_2 $$ private BytesReference writeHeader(int numFieldsWritten, boolean getTermStatistics, boolean getFieldStatistics, boolean scores) throws IOException -->Line_4 $$ header.writeString(HEADER)[ CD ]
Line_2 $$ private BytesReference writeHeader(int numFieldsWritten, boolean getTermStatistics, boolean getFieldStatistics, boolean scores) throws IOException -->Line_8 $$ header.writeBoolean(scores)[ FD ]
Line_2 $$ private BytesReference writeHeader(int numFieldsWritten, boolean getTermStatistics, boolean getFieldStatistics, boolean scores) throws IOException -->Line_5 $$ header.writeInt(CURRENT_VERSION)[ CD ]
Line_3 $$ BytesStreamOutput header = new BytesStreamOutput()-->Line_6 $$ header.writeBoolean(getTermStatistics)[ FD ]
Line_3 $$ BytesStreamOutput header = new BytesStreamOutput()-->Line_15 $$ return header.bytes()[ FD ]
Line_3 $$ BytesStreamOutput header = new BytesStreamOutput()-->Line_5 $$ header.writeInt(CURRENT_VERSION)[ FD ]
Line_3 $$ BytesStreamOutput header = new BytesStreamOutput()-->Line_12 $$ header.writeVLong(fieldOffset.get(i).longValue())[ FD ]
Line_3 $$ BytesStreamOutput header = new BytesStreamOutput()-->Line_11 $$ header.writeString(fields.get(i))[ FD ]
Line_3 $$ BytesStreamOutput header = new BytesStreamOutput()-->Line_4 $$ header.writeString(HEADER)[ FD ]
