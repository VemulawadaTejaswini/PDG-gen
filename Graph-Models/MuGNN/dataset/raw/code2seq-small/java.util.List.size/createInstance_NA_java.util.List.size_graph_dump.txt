Line_9 $$ if (this.targetListClass != null) -->Line_10 $$ result = BeanUtils.instantiateClass(this.targetListClass)[ CD ]
Line_10 $$ result = BeanUtils.instantiateClass(this.targetListClass)-->Line_21 $$ result.add(converter.convertIfNecessary(elem, valueType))[ FD ]
Line_9 $$ if (this.targetListClass != null) -->Line_12 $$ result = new ArrayList<Object>(this.sourceList.size())[ CD ]
Line_14 $$ Class<?> valueType = null-->Line_16 $$ valueType = GenericCollectionTypeResolver.getCollectionType(this.targetListClass)[ FD ]
Line_18 $$ if (valueType != null) -->Line_24 $$ result.addAll(this.sourceList)[ CD ]
Line_16 $$ valueType = GenericCollectionTypeResolver.getCollectionType(this.targetListClass)-->Line_18 $$ if (valueType != null) [ FD ]
Line_14 $$ Class<?> valueType = null-->Line_21 $$ result.add(converter.convertIfNecessary(elem, valueType))[ FD ]
Line_8 $$ List<Object> result = null-->Line_12 $$ result = new ArrayList<Object>(this.sourceList.size())[ FD ]
Line_12 $$ result = new ArrayList<Object>(this.sourceList.size())-->Line_21 $$ result.add(converter.convertIfNecessary(elem, valueType))[ FD ]
Line_8 $$ List<Object> result = null-->Line_10 $$ result = BeanUtils.instantiateClass(this.targetListClass)[ FD ]
Line_15 $$ if (this.targetListClass != null) -->Line_16 $$ valueType = GenericCollectionTypeResolver.getCollectionType(this.targetListClass)[ CD ]
Line_10 $$ result = BeanUtils.instantiateClass(this.targetListClass)-->Line_24 $$ result.addAll(this.sourceList)[ FD ]
Line_8 $$ List<Object> result = null-->Line_21 $$ result.add(converter.convertIfNecessary(elem, valueType))[ FD ]
Line_12 $$ result = new ArrayList<Object>(this.sourceList.size())-->Line_24 $$ result.addAll(this.sourceList)[ FD ]
Line_8 $$ List<Object> result = null-->Line_24 $$ result.addAll(this.sourceList)[ FD ]
Line_14 $$ Class<?> valueType = null-->Line_18 $$ if (valueType != null) [ FD ]
Line_10 $$ result = BeanUtils.instantiateClass(this.targetListClass)-->Line_12 $$ result = new ArrayList<Object>(this.sourceList.size())[ FD ]
Line_18 $$ if (valueType != null) -->Line_19 $$ TypeConverter converter = getBeanTypeConverter()[ CD ]
Line_20 $$ for (Object elem : this.sourceList) -->Line_21 $$ result.add(converter.convertIfNecessary(elem, valueType))[ FD ]
Line_16 $$ valueType = GenericCollectionTypeResolver.getCollectionType(this.targetListClass)-->Line_21 $$ result.add(converter.convertIfNecessary(elem, valueType))[ FD ]
Line_19 $$ TypeConverter converter = getBeanTypeConverter()-->Line_21 $$ result.add(converter.convertIfNecessary(elem, valueType))[ FD ]
