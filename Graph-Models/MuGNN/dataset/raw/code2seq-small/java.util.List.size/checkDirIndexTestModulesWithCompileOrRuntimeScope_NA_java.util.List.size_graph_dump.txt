Line_25 $$ List<Module> m6OwnerModules = orderEntriesToOwnerModules(m6OrderEntries)-->Line_27 $$ assertOrderedElementsAreEqual(m6OwnerModules, Arrays.asList(modules.get(0), modules.get(1), modules.get(4), modules.get(5)))[ FD ]
Line_42 $$ OrderEntry jmockE1 = jmockOrderEntries.get(1)-->Line_44 $$ assertInstanceOf(jmockE1, LibraryOrderEntry.class)[ FD ]
Line_13 $$ List<Module> ownerModules = orderEntriesToOwnerModules(orderEntries)-->Line_15 $$ assertOrderedElementsAreEqual(ownerModules, Arrays.asList(modules.get(0), modules.get(1), modules.get(2), modules.get(3)))[ FD ]
Line_20 $$ VirtualFile m6javaDir = VfsUtil.findFileByIoFile(new File(getProjectPath(), "m6/src/main/java"), true)-->Line_21 $$ assertNotNull(m6javaDir)[ FD ]
Line_32 $$ VirtualFile jmockDir = VfsUtil.findFileByIoFile(new File(getRepositoryPath(), "jmock/jmock/1.0/jmock-1.0.jar"), true)-->Line_33 $$ assertNotNull(jmockDir)[ FD ]
Line_42 $$ OrderEntry jmockE1 = jmockOrderEntries.get(1)-->Line_43 $$ assertEquals(modules.get(2), jmockE1.getOwnerModule())[ FD ]
Line_34 $$ VirtualFile jmockJar = JarFileSystem.getInstance().getJarRootForLocalFile(jmockDir)-->Line_35 $$ assertNotNull(jmockJar)[ FD ]
Line_39 $$ OrderEntry jmockE0 = jmockOrderEntries.get(0)-->Line_41 $$ assertInstanceOf(jmockE0, LibraryOrderEntry.class)[ FD ]
Line_32 $$ VirtualFile jmockDir = VfsUtil.findFileByIoFile(new File(getRepositoryPath(), "jmock/jmock/1.0/jmock-1.0.jar"), true)-->Line_34 $$ VirtualFile jmockJar = JarFileSystem.getInstance().getJarRootForLocalFile(jmockDir)[ FD ]
Line_39 $$ OrderEntry jmockE0 = jmockOrderEntries.get(0)-->Line_40 $$ assertEquals(modules.get(1), jmockE0.getOwnerModule())[ FD ]
Line_26 $$ List<Module> m6DepModules = orderEntriesToDepModules(m6OrderEntries)-->Line_28 $$ assertOrderedElementsAreEqual(m6DepModules, Arrays.asList(modules.get(5), modules.get(5), modules.get(5), null))[ FD ]
Line_8 $$ VirtualFile m3JavaDir = VfsUtil.findFileByIoFile(new File(getProjectPath(), "m3/src/main/java"), true)-->Line_9 $$ assertNotNull(m3JavaDir)[ FD ]
Line_14 $$ List<Module> depModules = orderEntriesToDepModules(orderEntries)-->Line_16 $$ assertOrderedElementsAreEqual(depModules, Arrays.asList(modules.get(2), modules.get(2), null, modules.get(2)))[ FD ]
