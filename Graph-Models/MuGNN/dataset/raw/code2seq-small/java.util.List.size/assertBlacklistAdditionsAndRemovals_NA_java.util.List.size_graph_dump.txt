Line_2 $$ private static void assertBlacklistAdditionsAndRemovals(int expectedAdditions, int expectedRemovals, MyResourceManager rm) -->Line_4 $$ Assert.assertEquals(expectedRemovals, rm.getMyFifoScheduler().lastBlacklistRemovals.size())[ CD ]
Line_2 $$ private static void assertBlacklistAdditionsAndRemovals(int expectedAdditions, int expectedRemovals, MyResourceManager rm) -->Line_4 $$ Assert.assertEquals(expectedRemovals, rm.getMyFifoScheduler().lastBlacklistRemovals.size())[ FD ]
Line_2 $$ private static void assertBlacklistAdditionsAndRemovals(int expectedAdditions, int expectedRemovals, MyResourceManager rm) -->Line_3 $$ Assert.assertEquals(expectedAdditions, rm.getMyFifoScheduler().lastBlacklistAdditions.size())[ FD ]
Line_2 $$ private static void assertBlacklistAdditionsAndRemovals(int expectedAdditions, int expectedRemovals, MyResourceManager rm) -->Line_3 $$ Assert.assertEquals(expectedAdditions, rm.getMyFifoScheduler().lastBlacklistAdditions.size())[ CD ]
