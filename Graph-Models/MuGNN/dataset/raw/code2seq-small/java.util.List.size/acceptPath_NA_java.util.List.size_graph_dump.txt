Line_3 $$ final String path = relativePath.replace('\\', '/')-->Line_13 $$ if (excludePattern.matcher(path).matches()) [ FD ]
Line_7 $$ accepted = true-->Line_14 $$ accepted = false[ FD ]
Line_2 $$ public boolean acceptPath(final String relativePath) -->Line_19 $$ return accepted[ CD ]
Line_12 $$ for (Pattern excludePattern : myExcludePatterns) -->Line_13 $$ if (excludePattern.matcher(path).matches()) [ FD ]
Line_4 $$ boolean accepted = myIncludePatterns.size() == 0-->Line_14 $$ accepted = false[ FD ]
Line_5 $$ for (Pattern includePattern : myIncludePatterns) -->Line_6 $$ if (includePattern.matcher(path).matches()) [ FD ]
Line_2 $$ public boolean acceptPath(final String relativePath) -->Line_3 $$ final String path = relativePath.replace('\\', '/')[ FD ]
Line_3 $$ final String path = relativePath.replace('\\', '/')-->Line_6 $$ if (includePattern.matcher(path).matches()) [ FD ]
Line_2 $$ public boolean acceptPath(final String relativePath) -->Line_3 $$ final String path = relativePath.replace('\\', '/')[ CD ]
Line_6 $$ if (includePattern.matcher(path).matches()) -->Line_7 $$ accepted = true[ CD ]
Line_2 $$ public boolean acceptPath(final String relativePath) -->Line_4 $$ boolean accepted = myIncludePatterns.size() == 0[ CD ]
Line_13 $$ if (excludePattern.matcher(path).matches()) -->Line_14 $$ accepted = false[ CD ]
Line_2 $$ public boolean acceptPath(final String relativePath) -->Line_11 $$ if (accepted) [ CD ]
Line_4 $$ boolean accepted = myIncludePatterns.size() == 0-->Line_7 $$ accepted = true[ FD ]
