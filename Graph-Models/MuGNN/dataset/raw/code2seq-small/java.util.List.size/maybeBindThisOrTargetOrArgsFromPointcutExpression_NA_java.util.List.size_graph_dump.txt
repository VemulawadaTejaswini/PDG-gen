Line_31 $$ for (int j = 0; j < this.parameterNameBindings.length; j++) -->Line_32 $$ if (isUnbound(j)) [ FD ]
Line_8 $$ for (int i = 0; i < tokens.length; i++) -->Line_11 $$ i += body.numTokensConsumed[ FD ]
Line_12 $$ String varName = maybeExtractVariableName(body.text)-->Line_13 $$ if (varName != null) [ FD ]
Line_12 $$ String varName = maybeExtractVariableName(body.text)-->Line_22 $$ if (!alreadyBound(varName)) [ FD ]
Line_11 $$ i += body.numTokensConsumed-->Line_17 $$ PointcutBody body = getPointcutBody(tokens, i)[ FD ]
Line_6 $$ List<String> varNames = new ArrayList<String>()-->Line_14 $$ varNames.add(varName)[ FD ]
Line_2 $$ private void maybeBindThisOrTargetOrArgsFromPointcutExpression() -->Line_28 $$ if (varNames.size() > 1) [ CD ]
Line_9 $$ if (tokens[i].equals("this") || tokens[i].startsWith("this(") || tokens[i].equals("target") || tokens[i].startsWith("target(")) -->Line_13 $$ if (varName != null) [ CD ]
Line_12 $$ String varName = maybeExtractVariableName(body.text)-->Line_14 $$ varNames.add(varName)[ FD ]
Line_6 $$ List<String> varNames = new ArrayList<String>()-->Line_30 $$ if (varNames.size() == 1) [ FD ]
Line_16 $$ if (tokens[i].equals("args") || tokens[i].startsWith("args(")) -->Line_20 $$ maybeExtractVariableNamesFromArgs(body.text, candidateVarNames)[ CD ]
Line_16 $$ if (tokens[i].equals("args") || tokens[i].startsWith("args(")) -->Line_19 $$ List<String> candidateVarNames = new ArrayList<String>()[ CD ]
Line_13 $$ if (varName != null) -->Line_14 $$ varNames.add(varName)[ CD ]
Line_31 $$ for (int j = 0; j < this.parameterNameBindings.length; j++) -->Line_32 $$ if (isUnbound(j)) [ CD ]
Line_30 $$ if (varNames.size() == 1) -->Line_31 $$ for (int j = 0; j < this.parameterNameBindings.length; j++) [ CD ]
Line_11 $$ i += body.numTokensConsumed-->Line_8 $$ for (int i = 0; i < tokens.length; i++) [ FD ]
Line_16 $$ if (tokens[i].equals("args") || tokens[i].startsWith("args(")) -->Line_18 $$ i += body.numTokensConsumed[ CD ]
Line_8 $$ for (int i = 0; i < tokens.length; i++) -->Line_9 $$ if (tokens[i].equals("this") || tokens[i].startsWith("this(") || tokens[i].equals("target") || tokens[i].startsWith("target(")) [ CD ]
Line_9 $$ if (tokens[i].equals("this") || tokens[i].startsWith("this(") || tokens[i].equals("target") || tokens[i].startsWith("target(")) -->Line_11 $$ i += body.numTokensConsumed[ CD ]
Line_9 $$ if (tokens[i].equals("this") || tokens[i].startsWith("this(") || tokens[i].equals("target") || tokens[i].startsWith("target(")) -->Line_10 $$ PointcutBody body = getPointcutBody(tokens, i)[ CD ]
Line_22 $$ if (!alreadyBound(varName)) -->Line_23 $$ varNames.add(varName)[ CD ]
Line_6 $$ List<String> varNames = new ArrayList<String>()-->Line_28 $$ if (varNames.size() > 1) [ FD ]
Line_31 $$ for (int j = 0; j < this.parameterNameBindings.length; j++) -->Line_33 $$ bindParameterName(j, varNames.get(0))[ FD ]
Line_18 $$ i += body.numTokensConsumed-->Line_8 $$ for (int i = 0; i < tokens.length; i++) [ FD ]
Line_7 $$ String[] tokens = StringUtils.tokenizeToStringArray(this.pointcutExpression, " ")-->Line_10 $$ PointcutBody body = getPointcutBody(tokens, i)[ FD ]
Line_8 $$ for (int i = 0; i < tokens.length; i++) -->Line_10 $$ PointcutBody body = getPointcutBody(tokens, i)[ FD ]
Line_6 $$ List<String> varNames = new ArrayList<String>()-->Line_33 $$ bindParameterName(j, varNames.get(0))[ FD ]
Line_11 $$ i += body.numTokensConsumed-->Line_18 $$ i += body.numTokensConsumed[ FD ]
Line_12 $$ String varName = maybeExtractVariableName(body.text)-->Line_23 $$ varNames.add(varName)[ FD ]
Line_28 $$ if (varNames.size() > 1) -->Line_30 $$ if (varNames.size() == 1) [ CD ]
Line_8 $$ for (int i = 0; i < tokens.length; i++) -->Line_17 $$ PointcutBody body = getPointcutBody(tokens, i)[ FD ]
Line_2 $$ private void maybeBindThisOrTargetOrArgsFromPointcutExpression() -->Line_6 $$ List<String> varNames = new ArrayList<String>()[ CD ]
Line_2 $$ private void maybeBindThisOrTargetOrArgsFromPointcutExpression() -->Line_8 $$ for (int i = 0; i < tokens.length; i++) [ CD ]
Line_9 $$ if (tokens[i].equals("this") || tokens[i].startsWith("this(") || tokens[i].equals("target") || tokens[i].startsWith("target(")) -->Line_16 $$ if (tokens[i].equals("args") || tokens[i].startsWith("args(")) [ CD ]
Line_11 $$ i += body.numTokensConsumed-->Line_10 $$ PointcutBody body = getPointcutBody(tokens, i)[ FD ]
Line_9 $$ if (tokens[i].equals("this") || tokens[i].startsWith("this(") || tokens[i].equals("target") || tokens[i].startsWith("target(")) -->Line_12 $$ String varName = maybeExtractVariableName(body.text)[ CD ]
Line_16 $$ if (tokens[i].equals("args") || tokens[i].startsWith("args(")) -->Line_17 $$ PointcutBody body = getPointcutBody(tokens, i)[ CD ]
Line_6 $$ List<String> varNames = new ArrayList<String>()-->Line_23 $$ varNames.add(varName)[ FD ]
Line_2 $$ private void maybeBindThisOrTargetOrArgsFromPointcutExpression() -->Line_7 $$ String[] tokens = StringUtils.tokenizeToStringArray(this.pointcutExpression, " ")[ CD ]
Line_32 $$ if (isUnbound(j)) -->Line_33 $$ bindParameterName(j, varNames.get(0))[ CD ]
Line_2 $$ private void maybeBindThisOrTargetOrArgsFromPointcutExpression() -->Line_3 $$ if (this.numberOfRemainingUnboundArguments > 1) [ CD ]
Line_19 $$ List<String> candidateVarNames = new ArrayList<String>()-->Line_20 $$ maybeExtractVariableNamesFromArgs(body.text, candidateVarNames)[ FD ]
Line_18 $$ i += body.numTokensConsumed-->Line_10 $$ PointcutBody body = getPointcutBody(tokens, i)[ FD ]
Line_18 $$ i += body.numTokensConsumed-->Line_17 $$ PointcutBody body = getPointcutBody(tokens, i)[ FD ]
Line_6 $$ List<String> varNames = new ArrayList<String>()-->Line_29 $$ throw new AmbiguousBindingException("Found " + varNames.size() + " candidate this(), target() or args() variables but only one unbound argument slot")[ FD ]
Line_8 $$ for (int i = 0; i < tokens.length; i++) -->Line_18 $$ i += body.numTokensConsumed[ FD ]
Line_7 $$ String[] tokens = StringUtils.tokenizeToStringArray(this.pointcutExpression, " ")-->Line_17 $$ PointcutBody body = getPointcutBody(tokens, i)[ FD ]
