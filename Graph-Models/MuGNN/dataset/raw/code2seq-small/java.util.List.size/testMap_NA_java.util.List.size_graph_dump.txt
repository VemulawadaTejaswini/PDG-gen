Line_21 $$ if (map.size() == 1) -->Line_25 $$ numShardsRun++[ CD ]
Line_16 $$ for (Object object : aggregationList) -->Line_17 $$ assertThat(object, notNullValue())[ FD ]
Line_2 $$ public void testMap() -->Line_14 $$ assertThat(aggregationList.size(), equalTo(getNumShards("idx").numPrimaries))[ CD ]
Line_15 $$ int numShardsRun = 0-->Line_28 $$ assertThat(numShardsRun, greaterThan(0))[ FD ]
Line_9 $$ ScriptedMetric scriptedMetricAggregation = (ScriptedMetric) aggregation-->Line_12 $$ assertThat(scriptedMetricAggregation.aggregation(), instanceOf(ArrayList.class))[ FD ]
Line_15 $$ int numShardsRun = 0-->Line_25 $$ numShardsRun++[ FD ]
Line_2 $$ public void testMap() -->Line_12 $$ assertThat(scriptedMetricAggregation.aggregation(), instanceOf(ArrayList.class))[ CD ]
Line_19 $$ Map<String, Object> map = (Map<String, Object>) object-->Line_20 $$ assertThat(map.size(), lessThanOrEqualTo(1))[ FD ]
Line_6 $$ Aggregation aggregation = response.getAggregations().get("scripted")-->Line_8 $$ assertThat(aggregation, instanceOf(ScriptedMetric.class))[ FD ]
Line_21 $$ if (map.size() == 1) -->Line_23 $$ assertThat(map.get("count"), instanceOf(Number.class))[ CD ]
Line_3 $$ SearchResponse response = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(scriptedMetric("scripted").mapScript(new Script("_agg['count'] = 1"))).execute().actionGet()-->Line_5 $$ assertThat(response.getHits().getTotalHits(), equalTo(numDocs))[ FD ]
Line_2 $$ public void testMap() -->Line_7 $$ assertThat(aggregation, notNullValue())[ CD ]
Line_2 $$ public void testMap() -->Line_13 $$ List<?> aggregationList = (List<?>) scriptedMetricAggregation.aggregation()[ CD ]
Line_9 $$ ScriptedMetric scriptedMetricAggregation = (ScriptedMetric) aggregation-->Line_13 $$ List<?> aggregationList = (List<?>) scriptedMetricAggregation.aggregation()[ FD ]
Line_2 $$ public void testMap() -->Line_28 $$ assertThat(numShardsRun, greaterThan(0))[ CD ]
Line_3 $$ SearchResponse response = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(scriptedMetric("scripted").mapScript(new Script("_agg['count'] = 1"))).execute().actionGet()-->Line_6 $$ Aggregation aggregation = response.getAggregations().get("scripted")[ FD ]
Line_16 $$ for (Object object : aggregationList) -->Line_18 $$ assertThat(object, instanceOf(Map.class))[ FD ]
Line_13 $$ List<?> aggregationList = (List<?>) scriptedMetricAggregation.aggregation()-->Line_14 $$ assertThat(aggregationList.size(), equalTo(getNumShards("idx").numPrimaries))[ FD ]
Line_21 $$ if (map.size() == 1) -->Line_22 $$ assertThat(map.get("count"), notNullValue())[ CD ]
Line_19 $$ Map<String, Object> map = (Map<String, Object>) object-->Line_23 $$ assertThat(map.get("count"), instanceOf(Number.class))[ FD ]
Line_19 $$ Map<String, Object> map = (Map<String, Object>) object-->Line_22 $$ assertThat(map.get("count"), notNullValue())[ FD ]
Line_2 $$ public void testMap() -->Line_4 $$ assertSearchResponse(response)[ CD ]
Line_2 $$ public void testMap() -->Line_6 $$ Aggregation aggregation = response.getAggregations().get("scripted")[ CD ]
Line_2 $$ public void testMap() -->Line_11 $$ assertThat(scriptedMetricAggregation.aggregation(), notNullValue())[ CD ]
Line_2 $$ public void testMap() -->Line_9 $$ ScriptedMetric scriptedMetricAggregation = (ScriptedMetric) aggregation[ CD ]
Line_9 $$ ScriptedMetric scriptedMetricAggregation = (ScriptedMetric) aggregation-->Line_11 $$ assertThat(scriptedMetricAggregation.aggregation(), notNullValue())[ FD ]
Line_21 $$ if (map.size() == 1) -->Line_24 $$ assertThat((Number) map.get("count"), equalTo((Number) 1))[ CD ]
Line_2 $$ public void testMap() -->Line_5 $$ assertThat(response.getHits().getTotalHits(), equalTo(numDocs))[ CD ]
Line_6 $$ Aggregation aggregation = response.getAggregations().get("scripted")-->Line_7 $$ assertThat(aggregation, notNullValue())[ FD ]
Line_3 $$ SearchResponse response = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(scriptedMetric("scripted").mapScript(new Script("_agg['count'] = 1"))).execute().actionGet()-->Line_4 $$ assertSearchResponse(response)[ FD ]
Line_2 $$ public void testMap() -->Line_8 $$ assertThat(aggregation, instanceOf(ScriptedMetric.class))[ CD ]
Line_9 $$ ScriptedMetric scriptedMetricAggregation = (ScriptedMetric) aggregation-->Line_10 $$ assertThat(scriptedMetricAggregation.getName(), equalTo("scripted"))[ FD ]
Line_2 $$ public void testMap() -->Line_10 $$ assertThat(scriptedMetricAggregation.getName(), equalTo("scripted"))[ CD ]
Line_2 $$ public void testMap() -->Line_3 $$ SearchResponse response = client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(scriptedMetric("scripted").mapScript(new Script("_agg['count'] = 1"))).execute().actionGet()[ CD ]
Line_19 $$ Map<String, Object> map = (Map<String, Object>) object-->Line_24 $$ assertThat((Number) map.get("count"), equalTo((Number) 1))[ FD ]
Line_19 $$ Map<String, Object> map = (Map<String, Object>) object-->Line_21 $$ if (map.size() == 1) [ FD ]
Line_2 $$ public void testMap() -->Line_15 $$ int numShardsRun = 0[ CD ]
