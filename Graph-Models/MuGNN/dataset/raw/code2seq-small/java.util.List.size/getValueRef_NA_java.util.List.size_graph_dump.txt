Line_32 $$ int idx = 0-->Line_47 $$ idx++[ FD ]
Line_50 $$ if (arrayElementType == null) -->Line_51 $$ arrayElementType = Object.class[ CD ]
Line_49 $$ if (operandIsArray) -->Line_53 $$ Object resultArray = Array.newInstance(arrayElementType, result.size())[ CD ]
Line_38 $$ Object value = this.children[0].getValueInternal(state).getValue()-->Line_40 $$ arrayElementType = determineCommonType(arrayElementType, value.getClass())[ FD ]
Line_15 $$ List<Object> result = new ArrayList<Object>()-->Line_53 $$ Object resultArray = Array.newInstance(arrayElementType, result.size())[ FD ]
Line_49 $$ if (operandIsArray) -->Line_54 $$ System.arraycopy(result.toArray(), 0, resultArray, 0, result.size())[ CD ]
Line_49 $$ if (operandIsArray) -->Line_55 $$ return new ValueRef.TypedValueHolderValueRef(new TypedValue(resultArray), this)[ CD ]
Line_29 $$ if (operand instanceof Iterable || operandIsArray) -->Line_57 $$ return new ValueRef.TypedValueHolderValueRef(new TypedValue(result), this)[ CD ]
Line_4 $$ TypedValue op = state.getActiveContextObject()-->Line_5 $$ Object operand = op.getValue()[ FD ]
Line_40 $$ arrayElementType = determineCommonType(arrayElementType, value.getClass())-->Line_51 $$ arrayElementType = Object.class[ FD ]
Line_60 $$ if (this.nullSafe) -->Line_61 $$ return ValueRef.NullValueRef.INSTANCE[ CD ]
Line_33 $$ Class<?> arrayElementType = null-->Line_50 $$ if (arrayElementType == null) [ FD ]
Line_33 $$ Class<?> arrayElementType = null-->Line_40 $$ arrayElementType = determineCommonType(arrayElementType, value.getClass())[ FD ]
Line_6 $$ boolean operandIsArray = ObjectUtils.isArray(operand)-->Line_29 $$ if (operand instanceof Iterable || operandIsArray) [ FD ]
Line_5 $$ Object operand = op.getValue()-->Line_6 $$ boolean operandIsArray = ObjectUtils.isArray(operand)[ FD ]
Line_59 $$ if (operand == null) -->Line_60 $$ if (this.nullSafe) [ CD ]
Line_33 $$ Class<?> arrayElementType = null-->Line_53 $$ Object resultArray = Array.newInstance(arrayElementType, result.size())[ FD ]
Line_5 $$ Object operand = op.getValue()-->Line_65 $$ throw new SpelEvaluationException(getStartPosition(), SpelMessage.PROJECTION_NOT_SUPPORTED_ON_TYPE, operand.getClass().getName())[ FD ]
Line_15 $$ List<Object> result = new ArrayList<Object>()-->Line_20 $$ result.add(this.children[0].getValueInternal(state).getValue())[ FD ]
Line_5 $$ Object operand = op.getValue()-->Line_30 $$ Iterable<?> data = (operand instanceof Iterable ? (Iterable<?>) operand : Arrays.asList(ObjectUtils.toObjectArray(operand)))[ FD ]
Line_53 $$ Object resultArray = Array.newInstance(arrayElementType, result.size())-->Line_54 $$ System.arraycopy(result.toArray(), 0, resultArray, 0, result.size())[ FD ]
Line_39 $$ if (value != null && operandIsArray) -->Line_40 $$ arrayElementType = determineCommonType(arrayElementType, value.getClass())[ CD ]
Line_15 $$ List<Object> result = new ArrayList<Object>()-->Line_54 $$ System.arraycopy(result.toArray(), 0, resultArray, 0, result.size())[ FD ]
Line_6 $$ boolean operandIsArray = ObjectUtils.isArray(operand)-->Line_39 $$ if (value != null && operandIsArray) [ FD ]
Line_38 $$ Object value = this.children[0].getValueInternal(state).getValue()-->Line_42 $$ result.add(value)[ FD ]
Line_29 $$ if (operand instanceof Iterable || operandIsArray) -->Line_33 $$ Class<?> arrayElementType = null[ CD ]
Line_33 $$ Class<?> arrayElementType = null-->Line_51 $$ arrayElementType = Object.class[ FD ]
Line_5 $$ Object operand = op.getValue()-->Line_59 $$ if (operand == null) [ FD ]
Line_29 $$ if (operand instanceof Iterable || operandIsArray) -->Line_32 $$ int idx = 0[ CD ]
Line_32 $$ int idx = 0-->Line_37 $$ state.enterScope("index", idx)[ FD ]
Line_14 $$ Map<?, ?> mapData = (Map<?, ?>) operand-->Line_16 $$ for (Map.Entry<?, ?> entry : mapData.entrySet()) [ FD ]
Line_40 $$ arrayElementType = determineCommonType(arrayElementType, value.getClass())-->Line_53 $$ Object resultArray = Array.newInstance(arrayElementType, result.size())[ FD ]
Line_49 $$ if (operandIsArray) -->Line_50 $$ if (arrayElementType == null) [ CD ]
Line_15 $$ List<Object> result = new ArrayList<Object>()-->Line_42 $$ result.add(value)[ FD ]
Line_29 $$ if (operand instanceof Iterable || operandIsArray) -->Line_30 $$ Iterable<?> data = (operand instanceof Iterable ? (Iterable<?>) operand : Arrays.asList(ObjectUtils.toObjectArray(operand)))[ CD ]
Line_51 $$ arrayElementType = Object.class-->Line_53 $$ Object resultArray = Array.newInstance(arrayElementType, result.size())[ FD ]
Line_29 $$ if (operand instanceof Iterable || operandIsArray) -->Line_49 $$ if (operandIsArray) [ CD ]
Line_40 $$ arrayElementType = determineCommonType(arrayElementType, value.getClass())-->Line_50 $$ if (arrayElementType == null) [ FD ]
