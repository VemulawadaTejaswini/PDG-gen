Line_18 $$ Class<?> testClass = bootstrapContext.getTestClass()-->Line_33 $$ logger.debug(String.format("Instantiating TestContextBootstrapper for test class [%s] from class [%s]", testClass.getName(), clazz.getName()))[ FD ]
Line_23 $$ if (values != null) -->Line_24 $$ if (values.size() != 1) [ CD ]
Line_23 $$ if (values != null) -->Line_30 $$ clazz = (Class<? extends TestContextBootstrapper>) ClassUtils.forName(DEFAULT_TEST_CONTEXT_BOOTSTRAPPER_CLASS_NAME, BootstrapUtils.class.getClassLoader())[ CD ]
Line_22 $$ List<Object> values = (attributesMultiMap == null ? null : attributesMultiMap.get(AnnotationUtils.VALUE))-->Line_25 $$ String msg = String.format("Configuration error: found multiple declarations of @BootstrapWith on test class [%s] with values %s", testClass.getName(), values)[ FD ]
Line_22 $$ List<Object> values = (attributesMultiMap == null ? null : attributesMultiMap.get(AnnotationUtils.VALUE))-->Line_28 $$ clazz = (Class<? extends TestContextBootstrapper>) values.get(0)[ FD ]
Line_30 $$ clazz = (Class<? extends TestContextBootstrapper>) ClassUtils.forName(DEFAULT_TEST_CONTEXT_BOOTSTRAPPER_CLASS_NAME, BootstrapUtils.class.getClassLoader())-->Line_33 $$ logger.debug(String.format("Instantiating TestContextBootstrapper for test class [%s] from class [%s]", testClass.getName(), clazz.getName()))[ FD ]
Line_22 $$ List<Object> values = (attributesMultiMap == null ? null : attributesMultiMap.get(AnnotationUtils.VALUE))-->Line_23 $$ if (values != null) [ FD ]
Line_19 $$ Class<? extends TestContextBootstrapper> clazz = null-->Line_28 $$ clazz = (Class<? extends TestContextBootstrapper>) values.get(0)[ FD ]
Line_35 $$ TestContextBootstrapper testContextBootstrapper = instantiateClass(clazz, TestContextBootstrapper.class)-->Line_36 $$ testContextBootstrapper.setBootstrapContext(bootstrapContext)[ FD ]
Line_28 $$ clazz = (Class<? extends TestContextBootstrapper>) values.get(0)-->Line_30 $$ clazz = (Class<? extends TestContextBootstrapper>) ClassUtils.forName(DEFAULT_TEST_CONTEXT_BOOTSTRAPPER_CLASS_NAME, BootstrapUtils.class.getClassLoader())[ FD ]
Line_19 $$ Class<? extends TestContextBootstrapper> clazz = null-->Line_35 $$ TestContextBootstrapper testContextBootstrapper = instantiateClass(clazz, TestContextBootstrapper.class)[ FD ]
Line_18 $$ Class<?> testClass = bootstrapContext.getTestClass()-->Line_25 $$ String msg = String.format("Configuration error: found multiple declarations of @BootstrapWith on test class [%s] with values %s", testClass.getName(), values)[ FD ]
Line_21 $$ MultiValueMap<String, Object> attributesMultiMap = AnnotatedElementUtils.getAllAnnotationAttributes(testClass, BootstrapWith.class.getName())-->Line_22 $$ List<Object> values = (attributesMultiMap == null ? null : attributesMultiMap.get(AnnotationUtils.VALUE))[ FD ]
Line_24 $$ if (values.size() != 1) -->Line_25 $$ String msg = String.format("Configuration error: found multiple declarations of @BootstrapWith on test class [%s] with values %s", testClass.getName(), values)[ CD ]
Line_23 $$ if (values != null) -->Line_28 $$ clazz = (Class<? extends TestContextBootstrapper>) values.get(0)[ CD ]
Line_28 $$ clazz = (Class<? extends TestContextBootstrapper>) values.get(0)-->Line_33 $$ logger.debug(String.format("Instantiating TestContextBootstrapper for test class [%s] from class [%s]", testClass.getName(), clazz.getName()))[ FD ]
Line_18 $$ Class<?> testClass = bootstrapContext.getTestClass()-->Line_21 $$ MultiValueMap<String, Object> attributesMultiMap = AnnotatedElementUtils.getAllAnnotationAttributes(testClass, BootstrapWith.class.getName())[ FD ]
Line_19 $$ Class<? extends TestContextBootstrapper> clazz = null-->Line_33 $$ logger.debug(String.format("Instantiating TestContextBootstrapper for test class [%s] from class [%s]", testClass.getName(), clazz.getName()))[ FD ]
Line_30 $$ clazz = (Class<? extends TestContextBootstrapper>) ClassUtils.forName(DEFAULT_TEST_CONTEXT_BOOTSTRAPPER_CLASS_NAME, BootstrapUtils.class.getClassLoader())-->Line_35 $$ TestContextBootstrapper testContextBootstrapper = instantiateClass(clazz, TestContextBootstrapper.class)[ FD ]
Line_22 $$ List<Object> values = (attributesMultiMap == null ? null : attributesMultiMap.get(AnnotationUtils.VALUE))-->Line_24 $$ if (values.size() != 1) [ FD ]
Line_19 $$ Class<? extends TestContextBootstrapper> clazz = null-->Line_30 $$ clazz = (Class<? extends TestContextBootstrapper>) ClassUtils.forName(DEFAULT_TEST_CONTEXT_BOOTSTRAPPER_CLASS_NAME, BootstrapUtils.class.getClassLoader())[ FD ]
Line_32 $$ if (logger.isDebugEnabled()) -->Line_33 $$ logger.debug(String.format("Instantiating TestContextBootstrapper for test class [%s] from class [%s]", testClass.getName(), clazz.getName()))[ CD ]
Line_28 $$ clazz = (Class<? extends TestContextBootstrapper>) values.get(0)-->Line_35 $$ TestContextBootstrapper testContextBootstrapper = instantiateClass(clazz, TestContextBootstrapper.class)[ FD ]
