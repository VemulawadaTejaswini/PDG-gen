Line_18 $$ DataPoint dpLast = (DataPoint) s.get(DataPoint.class, dp.getId())-->Line_19 $$ assertFalse(s.isReadOnly(dpLast))[ FD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_21 $$ int i = 0[ CD ]
Line_15 $$ s = openSession()-->Line_28 $$ assertFalse(s.isReadOnly(dp))[ FD ]
Line_8 $$ dp = new DataPoint()-->Line_30 $$ assertTrue(s.isReadOnly(dp))[ FD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_4 $$ s.setCacheMode(CacheMode.IGNORE)[ CD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_14 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_11 $$ s.save(dp)[ FD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_39 $$ s.clear()[ CD ]
Line_3 $$ Session s = openSession()-->Line_23 $$ s.setDefaultReadOnly(false)[ FD ]
Line_15 $$ s = openSession()-->Line_40 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_18 $$ DataPoint dpLast = (DataPoint) s.get(DataPoint.class, dp.getId())[ CD ]
Line_3 $$ Session s = openSession()-->Line_17 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_24 $$ int nExpectedChanges = 0[ CD ]
Line_3 $$ Session s = openSession()-->Line_20 $$ s.setDefaultReadOnly(true)[ FD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_41 $$ List list = s.createQuery("from DataPoint where description='done!'").list()[ CD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_40 $$ t = s.beginTransaction()[ CD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_42 $$ assertEquals(nExpectedChanges, list.size())[ CD ]
Line_26 $$ dp = (DataPoint) sr.get(0)-->Line_30 $$ assertTrue(s.isReadOnly(dp))[ FD ]
Line_17 $$ t = s.beginTransaction()-->Line_44 $$ t.commit()[ FD ]
Line_15 $$ s = openSession()-->Line_16 $$ s.setCacheMode(CacheMode.IGNORE)[ FD ]
Line_32 $$ if (++i == 50) -->Line_33 $$ s.setReadOnly(dp, false)[ CD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_38 $$ t.commit()[ CD ]
Line_21 $$ int i = 0-->Line_32 $$ if (++i == 50) [ FD ]
Line_32 $$ if (++i == 50) -->Line_34 $$ nExpectedChanges = (dp == dpLast ? 1 : 2)[ CD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_17 $$ t = s.beginTransaction()[ CD ]
Line_8 $$ dp = new DataPoint()-->Line_28 $$ assertFalse(s.isReadOnly(dp))[ FD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_45 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_5 $$ Transaction t = s.beginTransaction()[ FD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_43 $$ s.createQuery("delete from DataPoint").executeUpdate()[ CD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_7 $$ for (int i = 0; i < 100; i++) [ CD ]
Line_25 $$ while (sr.next()) -->Line_36 $$ dp.setDescription("done!")[ CD ]
Line_17 $$ t = s.beginTransaction()-->Line_40 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ DataPoint dp = null-->Line_11 $$ s.save(dp)[ FD ]
Line_8 $$ dp = new DataPoint()-->Line_9 $$ dp.setX(new BigDecimal(i * 0.1d).setScale(19, BigDecimal.ROUND_DOWN))[ FD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_16 $$ s.setCacheMode(CacheMode.IGNORE)[ CD ]
Line_6 $$ DataPoint dp = null-->Line_36 $$ dp.setDescription("done!")[ FD ]
Line_18 $$ DataPoint dpLast = (DataPoint) s.get(DataPoint.class, dp.getId())-->Line_27 $$ if (dp.getId() == dpLast.getId()) [ FD ]
Line_15 $$ s = openSession()-->Line_17 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ DataPoint dp = null-->Line_18 $$ DataPoint dpLast = (DataPoint) s.get(DataPoint.class, dp.getId())[ FD ]
Line_3 $$ Session s = openSession()-->Line_15 $$ s = openSession()[ FD ]
Line_24 $$ int nExpectedChanges = 0-->Line_34 $$ nExpectedChanges = (dp == dpLast ? 1 : 2)[ FD ]
Line_15 $$ s = openSession()-->Line_45 $$ s.close()[ FD ]
Line_6 $$ DataPoint dp = null-->Line_9 $$ dp.setX(new BigDecimal(i * 0.1d).setScale(19, BigDecimal.ROUND_DOWN))[ FD ]
Line_6 $$ DataPoint dp = null-->Line_27 $$ if (dp.getId() == dpLast.getId()) [ FD ]
Line_15 $$ s = openSession()-->Line_22 $$ ScrollableResults sr = s.createQuery("from DataPoint dp order by dp.x asc").scroll(ScrollMode.FORWARD_ONLY)[ FD ]
Line_26 $$ dp = (DataPoint) sr.get(0)-->Line_36 $$ dp.setDescription("done!")[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_40 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_17 $$ t = s.beginTransaction()[ FD ]
Line_41 $$ List list = s.createQuery("from DataPoint where description='done!'").list()-->Line_42 $$ assertEquals(nExpectedChanges, list.size())[ FD ]
Line_7 $$ for (int i = 0; i < 100; i++) -->Line_11 $$ s.save(dp)[ CD ]
Line_6 $$ DataPoint dp = null-->Line_30 $$ assertTrue(s.isReadOnly(dp))[ FD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_5 $$ Transaction t = s.beginTransaction()[ CD ]
Line_7 $$ for (int i = 0; i < 100; i++) -->Line_8 $$ dp = new DataPoint()[ CD ]
Line_3 $$ Session s = openSession()-->Line_14 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_28 $$ assertFalse(s.isReadOnly(dp))[ FD ]
Line_6 $$ DataPoint dp = null-->Line_10 $$ dp.setY(new BigDecimal(Math.cos(dp.getX().doubleValue())).setScale(19, BigDecimal.ROUND_DOWN))[ FD ]
Line_25 $$ while (sr.next()) -->Line_32 $$ if (++i == 50) [ CD ]
Line_15 $$ s = openSession()-->Line_41 $$ List list = s.createQuery("from DataPoint where description='done!'").list()[ FD ]
Line_15 $$ s = openSession()-->Line_30 $$ assertTrue(s.isReadOnly(dp))[ FD ]
Line_26 $$ dp = (DataPoint) sr.get(0)-->Line_33 $$ s.setReadOnly(dp, false)[ FD ]
Line_7 $$ for (int i = 0; i < 100; i++) -->Line_10 $$ dp.setY(new BigDecimal(Math.cos(dp.getX().doubleValue())).setScale(19, BigDecimal.ROUND_DOWN))[ CD ]
Line_8 $$ dp = new DataPoint()-->Line_26 $$ dp = (DataPoint) sr.get(0)[ FD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_19 $$ assertFalse(s.isReadOnly(dpLast))[ CD ]
Line_7 $$ for (int i = 0; i < 100; i++) -->Line_32 $$ if (++i == 50) [ FD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_3 $$ Session s = openSession()[ CD ]
Line_6 $$ DataPoint dp = null-->Line_28 $$ assertFalse(s.isReadOnly(dp))[ FD ]
Line_26 $$ dp = (DataPoint) sr.get(0)-->Line_27 $$ if (dp.getId() == dpLast.getId()) [ FD ]
Line_17 $$ t = s.beginTransaction()-->Line_38 $$ t.commit()[ FD ]
Line_22 $$ ScrollableResults sr = s.createQuery("from DataPoint dp order by dp.x asc").scroll(ScrollMode.FORWARD_ONLY)-->Line_26 $$ dp = (DataPoint) sr.get(0)[ FD ]
Line_8 $$ dp = new DataPoint()-->Line_10 $$ dp.setY(new BigDecimal(Math.cos(dp.getX().doubleValue())).setScale(19, BigDecimal.ROUND_DOWN))[ FD ]
Line_15 $$ s = openSession()-->Line_19 $$ assertFalse(s.isReadOnly(dpLast))[ FD ]
Line_6 $$ DataPoint dp = null-->Line_8 $$ dp = new DataPoint()[ FD ]
Line_34 $$ nExpectedChanges = (dp == dpLast ? 1 : 2)-->Line_42 $$ assertEquals(nExpectedChanges, list.size())[ FD ]
Line_40 $$ t = s.beginTransaction()-->Line_44 $$ t.commit()[ FD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_22 $$ ScrollableResults sr = s.createQuery("from DataPoint dp order by dp.x asc").scroll(ScrollMode.FORWARD_ONLY)[ CD ]
Line_3 $$ Session s = openSession()-->Line_41 $$ List list = s.createQuery("from DataPoint where description='done!'").list()[ FD ]
Line_6 $$ DataPoint dp = null-->Line_33 $$ s.setReadOnly(dp, false)[ FD ]
Line_3 $$ Session s = openSession()-->Line_22 $$ ScrollableResults sr = s.createQuery("from DataPoint dp order by dp.x asc").scroll(ScrollMode.FORWARD_ONLY)[ FD ]
Line_25 $$ while (sr.next()) -->Line_27 $$ if (dp.getId() == dpLast.getId()) [ CD ]
Line_27 $$ if (dp.getId() == dpLast.getId()) -->Line_30 $$ assertTrue(s.isReadOnly(dp))[ CD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_15 $$ s = openSession()[ CD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ s.setCacheMode(CacheMode.IGNORE)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_13 $$ t.commit()[ FD ]
Line_8 $$ dp = new DataPoint()-->Line_11 $$ s.save(dp)[ FD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_13 $$ t.commit()[ CD ]
Line_27 $$ if (dp.getId() == dpLast.getId()) -->Line_28 $$ assertFalse(s.isReadOnly(dp))[ CD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_20 $$ s.setDefaultReadOnly(true)[ CD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_23 $$ s.setDefaultReadOnly(false)[ CD ]
Line_15 $$ s = openSession()-->Line_39 $$ s.clear()[ FD ]
Line_3 $$ Session s = openSession()-->Line_18 $$ DataPoint dpLast = (DataPoint) s.get(DataPoint.class, dp.getId())[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_38 $$ t.commit()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_44 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_43 $$ s.createQuery("delete from DataPoint").executeUpdate()[ FD ]
Line_3 $$ Session s = openSession()-->Line_19 $$ assertFalse(s.isReadOnly(dpLast))[ FD ]
Line_26 $$ dp = (DataPoint) sr.get(0)-->Line_28 $$ assertFalse(s.isReadOnly(dp))[ FD ]
Line_3 $$ Session s = openSession()-->Line_45 $$ s.close()[ FD ]
Line_8 $$ dp = new DataPoint()-->Line_33 $$ s.setReadOnly(dp, false)[ FD ]
Line_3 $$ Session s = openSession()-->Line_40 $$ t = s.beginTransaction()[ FD ]
Line_8 $$ dp = new DataPoint()-->Line_36 $$ dp.setDescription("done!")[ FD ]
Line_3 $$ Session s = openSession()-->Line_39 $$ s.clear()[ FD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_44 $$ t.commit()[ CD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_25 $$ while (sr.next()) [ CD ]
Line_15 $$ s = openSession()-->Line_33 $$ s.setReadOnly(dp, false)[ FD ]
Line_15 $$ s = openSession()-->Line_43 $$ s.createQuery("delete from DataPoint").executeUpdate()[ FD ]
Line_7 $$ for (int i = 0; i < 100; i++) -->Line_9 $$ dp.setX(new BigDecimal(i * 0.1d).setScale(19, BigDecimal.ROUND_DOWN))[ CD ]
Line_25 $$ while (sr.next()) -->Line_26 $$ dp = (DataPoint) sr.get(0)[ CD ]
Line_24 $$ int nExpectedChanges = 0-->Line_42 $$ assertEquals(nExpectedChanges, list.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_33 $$ s.setReadOnly(dp, false)[ FD ]
Line_15 $$ s = openSession()-->Line_18 $$ DataPoint dpLast = (DataPoint) s.get(DataPoint.class, dp.getId())[ FD ]
Line_8 $$ dp = new DataPoint()-->Line_27 $$ if (dp.getId() == dpLast.getId()) [ FD ]
Line_3 $$ Session s = openSession()-->Line_30 $$ assertTrue(s.isReadOnly(dp))[ FD ]
Line_2 $$ public void testReadOnlyModeWithExistingModifiableEntity() -->Line_6 $$ DataPoint dp = null[ CD ]
Line_3 $$ Session s = openSession()-->Line_16 $$ s.setCacheMode(CacheMode.IGNORE)[ FD ]
Line_8 $$ dp = new DataPoint()-->Line_18 $$ DataPoint dpLast = (DataPoint) s.get(DataPoint.class, dp.getId())[ FD ]
Line_15 $$ s = openSession()-->Line_23 $$ s.setDefaultReadOnly(false)[ FD ]
Line_15 $$ s = openSession()-->Line_20 $$ s.setDefaultReadOnly(true)[ FD ]
Line_22 $$ ScrollableResults sr = s.createQuery("from DataPoint dp order by dp.x asc").scroll(ScrollMode.FORWARD_ONLY)-->Line_25 $$ while (sr.next()) [ FD ]
Line_6 $$ DataPoint dp = null-->Line_26 $$ dp = (DataPoint) sr.get(0)[ FD ]
