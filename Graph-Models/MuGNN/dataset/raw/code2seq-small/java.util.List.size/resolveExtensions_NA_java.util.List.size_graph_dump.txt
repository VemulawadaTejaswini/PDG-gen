Line_2 $$ public void resolveExtensions() -->Line_4 $$ MappingMediaTypeFileExtensionResolver resolver = new MappingMediaTypeFileExtensionResolver(mapping)[ CD ]
Line_5 $$ List<String> extensions = resolver.resolveFileExtensions(MediaType.APPLICATION_JSON)-->Line_7 $$ assertEquals("json", extensions.get(0))[ FD ]
Line_2 $$ public void resolveExtensions() -->Line_6 $$ assertEquals(1, extensions.size())[ CD ]
Line_2 $$ public void resolveExtensions() -->Line_5 $$ List<String> extensions = resolver.resolveFileExtensions(MediaType.APPLICATION_JSON)[ CD ]
Line_2 $$ public void resolveExtensions() -->Line_7 $$ assertEquals("json", extensions.get(0))[ CD ]
Line_5 $$ List<String> extensions = resolver.resolveFileExtensions(MediaType.APPLICATION_JSON)-->Line_6 $$ assertEquals(1, extensions.size())[ FD ]
Line_2 $$ public void resolveExtensions() -->Line_3 $$ Map<String, MediaType> mapping = Collections.singletonMap("json", MediaType.APPLICATION_JSON)[ CD ]
Line_4 $$ MappingMediaTypeFileExtensionResolver resolver = new MappingMediaTypeFileExtensionResolver(mapping)-->Line_5 $$ List<String> extensions = resolver.resolveFileExtensions(MediaType.APPLICATION_JSON)[ FD ]
