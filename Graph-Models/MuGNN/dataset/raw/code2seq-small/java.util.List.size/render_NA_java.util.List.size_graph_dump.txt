Line_4 $$ if (myError != null) -->Line_9 $$ if (remotes.isEmpty() || remotes.size() > 1) [ CD ]
Line_4 $$ if (myError != null) -->Line_16 $$ if (!remotes.isEmpty()) [ CD ]
Line_8 $$ List<String> remotes = getRemotes()-->Line_16 $$ if (!remotes.isEmpty()) [ FD ]
Line_16 $$ if (!remotes.isEmpty()) -->Line_23 $$ if (target != null && target.isNewBranchCreated()) [ CD ]
Line_7 $$ String currentRemote = myRemoteRenderer.getText()-->Line_14 $$ renderer.append(currentRemote, targetTextAttributes)[ FD ]
Line_8 $$ List<String> remotes = getRemotes()-->Line_11 $$ myRemoteRenderer.setTransparent(!remotes.isEmpty() && !isActive)[ FD ]
Line_18 $$ if (forceRenderedText != null) -->Line_19 $$ renderer.append(forceRenderedText)[ CD ]
Line_2 $$ public void render(@NotNull ColoredTreeCellRenderer renderer, boolean isSelected, boolean isActive, @Nullable String forceRenderedText) -->Line_28 $$ myTargetRenderer.render(renderer)[ FD ]
Line_2 $$ public void render(@NotNull ColoredTreeCellRenderer renderer, boolean isSelected, boolean isActive, @Nullable String forceRenderedText) -->Line_26 $$ myTargetRenderer.setSelected(isSelected)[ FD ]
Line_2 $$ public void render(@NotNull ColoredTreeCellRenderer renderer, boolean isSelected, boolean isActive, @Nullable String forceRenderedText) -->Line_10 $$ myRemoteRenderer.setSelected(isSelected)[ FD ]
Line_4 $$ if (myError != null) -->Line_7 $$ String currentRemote = myRemoteRenderer.getText()[ CD ]
Line_2 $$ public void render(@NotNull ColoredTreeCellRenderer renderer, boolean isSelected, boolean isActive, @Nullable String forceRenderedText) -->Line_5 $$ renderer.append(myError, PushLogTreeUtil.addTransparencyIfNeeded(SimpleTextAttributes.ERROR_ATTRIBUTES, isActive))[ FD ]
Line_16 $$ if (!remotes.isEmpty()) -->Line_22 $$ GitPushTarget target = getValue()[ CD ]
Line_16 $$ if (!remotes.isEmpty()) -->Line_28 $$ myTargetRenderer.render(renderer)[ CD ]
Line_3 $$ SimpleTextAttributes targetTextAttributes = PushLogTreeUtil.addTransparencyIfNeeded(SimpleTextAttributes.REGULAR_ATTRIBUTES, isActive)-->Line_14 $$ renderer.append(currentRemote, targetTextAttributes)[ FD ]
Line_3 $$ SimpleTextAttributes targetTextAttributes = PushLogTreeUtil.addTransparencyIfNeeded(SimpleTextAttributes.REGULAR_ATTRIBUTES, isActive)-->Line_17 $$ renderer.append(SEPARATOR, targetTextAttributes)[ FD ]
Line_18 $$ if (forceRenderedText != null) -->Line_20 $$ return[ CD ]
Line_2 $$ public void render(@NotNull ColoredTreeCellRenderer renderer, boolean isSelected, boolean isActive, @Nullable String forceRenderedText) -->Line_27 $$ myTargetRenderer.setTransparent(!isActive)[ FD ]
Line_9 $$ if (remotes.isEmpty() || remotes.size() > 1) -->Line_10 $$ myRemoteRenderer.setSelected(isSelected)[ CD ]
Line_16 $$ if (!remotes.isEmpty()) -->Line_27 $$ myTargetRenderer.setTransparent(!isActive)[ CD ]
Line_4 $$ if (myError != null) -->Line_5 $$ renderer.append(myError, PushLogTreeUtil.addTransparencyIfNeeded(SimpleTextAttributes.ERROR_ATTRIBUTES, isActive))[ CD ]
Line_16 $$ if (!remotes.isEmpty()) -->Line_26 $$ myTargetRenderer.setSelected(isSelected)[ CD ]
Line_16 $$ if (!remotes.isEmpty()) -->Line_18 $$ if (forceRenderedText != null) [ CD ]
Line_2 $$ public void render(@NotNull ColoredTreeCellRenderer renderer, boolean isSelected, boolean isActive, @Nullable String forceRenderedText) -->Line_18 $$ if (forceRenderedText != null) [ FD ]
Line_9 $$ if (remotes.isEmpty() || remotes.size() > 1) -->Line_11 $$ myRemoteRenderer.setTransparent(!remotes.isEmpty() && !isActive)[ CD ]
Line_9 $$ if (remotes.isEmpty() || remotes.size() > 1) -->Line_12 $$ myRemoteRenderer.render(renderer)[ CD ]
Line_23 $$ if (target != null && target.isNewBranchCreated()) -->Line_24 $$ renderer.append("+", PushLogTreeUtil.addTransparencyIfNeeded(SimpleTextAttributes.SYNTHETIC_ATTRIBUTES, isActive), this)[ CD ]
Line_2 $$ public void render(@NotNull ColoredTreeCellRenderer renderer, boolean isSelected, boolean isActive, @Nullable String forceRenderedText) -->Line_14 $$ renderer.append(currentRemote, targetTextAttributes)[ FD ]
Line_4 $$ if (myError != null) -->Line_8 $$ List<String> remotes = getRemotes()[ CD ]
Line_2 $$ public void render(@NotNull ColoredTreeCellRenderer renderer, boolean isSelected, boolean isActive, @Nullable String forceRenderedText) -->Line_11 $$ myRemoteRenderer.setTransparent(!remotes.isEmpty() && !isActive)[ FD ]
Line_8 $$ List<String> remotes = getRemotes()-->Line_9 $$ if (remotes.isEmpty() || remotes.size() > 1) [ FD ]
Line_2 $$ public void render(@NotNull ColoredTreeCellRenderer renderer, boolean isSelected, boolean isActive, @Nullable String forceRenderedText) -->Line_12 $$ myRemoteRenderer.render(renderer)[ FD ]
Line_22 $$ GitPushTarget target = getValue()-->Line_23 $$ if (target != null && target.isNewBranchCreated()) [ FD ]
Line_16 $$ if (!remotes.isEmpty()) -->Line_17 $$ renderer.append(SEPARATOR, targetTextAttributes)[ CD ]
Line_2 $$ public void render(@NotNull ColoredTreeCellRenderer renderer, boolean isSelected, boolean isActive, @Nullable String forceRenderedText) -->Line_4 $$ if (myError != null) [ CD ]
Line_2 $$ public void render(@NotNull ColoredTreeCellRenderer renderer, boolean isSelected, boolean isActive, @Nullable String forceRenderedText) -->Line_17 $$ renderer.append(SEPARATOR, targetTextAttributes)[ FD ]
Line_2 $$ public void render(@NotNull ColoredTreeCellRenderer renderer, boolean isSelected, boolean isActive, @Nullable String forceRenderedText) -->Line_24 $$ renderer.append("+", PushLogTreeUtil.addTransparencyIfNeeded(SimpleTextAttributes.SYNTHETIC_ATTRIBUTES, isActive), this)[ FD ]
Line_2 $$ public void render(@NotNull ColoredTreeCellRenderer renderer, boolean isSelected, boolean isActive, @Nullable String forceRenderedText) -->Line_3 $$ SimpleTextAttributes targetTextAttributes = PushLogTreeUtil.addTransparencyIfNeeded(SimpleTextAttributes.REGULAR_ATTRIBUTES, isActive)[ FD ]
Line_2 $$ public void render(@NotNull ColoredTreeCellRenderer renderer, boolean isSelected, boolean isActive, @Nullable String forceRenderedText) -->Line_19 $$ renderer.append(forceRenderedText)[ FD ]
Line_2 $$ public void render(@NotNull ColoredTreeCellRenderer renderer, boolean isSelected, boolean isActive, @Nullable String forceRenderedText) -->Line_3 $$ SimpleTextAttributes targetTextAttributes = PushLogTreeUtil.addTransparencyIfNeeded(SimpleTextAttributes.REGULAR_ATTRIBUTES, isActive)[ CD ]
Line_9 $$ if (remotes.isEmpty() || remotes.size() > 1) -->Line_14 $$ renderer.append(currentRemote, targetTextAttributes)[ CD ]
