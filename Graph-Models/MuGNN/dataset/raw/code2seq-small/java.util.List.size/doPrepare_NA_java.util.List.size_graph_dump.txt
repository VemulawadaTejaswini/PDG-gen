Line_3 $$ final List<String> errorMessages = new ArrayList<String>()-->Line_13 $$ if (!doPrepare(aModule, errorMessages, successMessages)) [ FD ]
Line_6 $$ compilerManager.make(compilerManager.createModulesCompileScope(pluginModules.toArray(new Module[pluginModules.size()]), true), new CompileStatusNotification() -->Line_8 $$ if (aborted || errors != 0)[ FD ]
Line_3 $$ final List<String> errorMessages = new ArrayList<String>()-->Line_18 $$ Messages.showErrorDialog(errorMessages.iterator().next(), DevKitBundle.message("error.occurred"))[ FD ]
Line_2 $$ public void doPrepare(final List<Module> pluginModules, final Project project) -->Line_5 $$ final CompilerManager compilerManager = CompilerManager.getInstance(project)[ CD ]
Line_6 $$ compilerManager.make(compilerManager.createModulesCompileScope(pluginModules.toArray(new Module[pluginModules.size()]), true), new CompileStatusNotification() -->Line_8 $$ if (aborted || errors != 0)[ CD ]
Line_2 $$ public void doPrepare(final List<Module> pluginModules, final Project project) -->Line_3 $$ final List<String> errorMessages = new ArrayList<String>()[ CD ]
Line_21 $$ for (String message : successMessages) -->Line_25 $$ messageBuf.append(message)[ FD ]
Line_8 $$ if (aborted || errors != 0)-->Line_9 $$ return[ CD ]
Line_20 $$ StringBuilder messageBuf = new StringBuilder()-->Line_28 $$ NOTIFICATION_GROUP.createNotification(title, messageBuf.toString(), NotificationType.INFORMATION, null).notify(project)[ FD ]
Line_5 $$ final CompilerManager compilerManager = CompilerManager.getInstance(project)-->Line_6 $$ compilerManager.make(compilerManager.createModulesCompileScope(pluginModules.toArray(new Module[pluginModules.size()]), true), new CompileStatusNotification() [ FD ]
Line_6 $$ compilerManager.make(compilerManager.createModulesCompileScope(pluginModules.toArray(new Module[pluginModules.size()]), true), new CompileStatusNotification() -->Line_10 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ CD ]
Line_20 $$ StringBuilder messageBuf = new StringBuilder()-->Line_22 $$ if (messageBuf.length() != 0) [ FD ]
Line_27 $$ final String title = pluginModules.size() == 1 ? DevKitBundle.message("success.deployment.message", pluginModules.get(0).getName()) : DevKitBundle.message("success.deployment.message.all")-->Line_28 $$ NOTIFICATION_GROUP.createNotification(title, messageBuf.toString(), NotificationType.INFORMATION, null).notify(project)[ FD ]
Line_2 $$ public void doPrepare(final List<Module> pluginModules, final Project project) -->Line_6 $$ compilerManager.make(compilerManager.createModulesCompileScope(pluginModules.toArray(new Module[pluginModules.size()]), true), new CompileStatusNotification() [ CD ]
Line_19 $$ if (!successMessages.isEmpty()) -->Line_27 $$ final String title = pluginModules.size() == 1 ? DevKitBundle.message("success.deployment.message", pluginModules.get(0).getName()) : DevKitBundle.message("success.deployment.message.all")[ CD ]
Line_20 $$ StringBuilder messageBuf = new StringBuilder()-->Line_25 $$ messageBuf.append(message)[ FD ]
Line_22 $$ if (messageBuf.length() != 0) -->Line_23 $$ messageBuf.append('\n')[ CD ]
Line_13 $$ if (!doPrepare(aModule, errorMessages, successMessages)) -->Line_14 $$ return[ CD ]
Line_19 $$ if (!successMessages.isEmpty()) -->Line_20 $$ StringBuilder messageBuf = new StringBuilder()[ CD ]
Line_17 $$ if (!errorMessages.isEmpty()) -->Line_18 $$ Messages.showErrorDialog(errorMessages.iterator().next(), DevKitBundle.message("error.occurred"))[ CD ]
Line_4 $$ final List<String> successMessages = new ArrayList<String>()-->Line_13 $$ if (!doPrepare(aModule, errorMessages, successMessages)) [ FD ]
Line_3 $$ final List<String> errorMessages = new ArrayList<String>()-->Line_17 $$ if (!errorMessages.isEmpty()) [ FD ]
Line_17 $$ if (!errorMessages.isEmpty()) -->Line_19 $$ if (!successMessages.isEmpty()) [ CD ]
Line_2 $$ public void doPrepare(final List<Module> pluginModules, final Project project) -->Line_5 $$ final CompilerManager compilerManager = CompilerManager.getInstance(project)[ FD ]
Line_20 $$ StringBuilder messageBuf = new StringBuilder()-->Line_23 $$ messageBuf.append('\n')[ FD ]
Line_4 $$ final List<String> successMessages = new ArrayList<String>()-->Line_19 $$ if (!successMessages.isEmpty()) [ FD ]
Line_2 $$ public void doPrepare(final List<Module> pluginModules, final Project project) -->Line_27 $$ final String title = pluginModules.size() == 1 ? DevKitBundle.message("success.deployment.message", pluginModules.get(0).getName()) : DevKitBundle.message("success.deployment.message.all")[ FD ]
Line_19 $$ if (!successMessages.isEmpty()) -->Line_28 $$ NOTIFICATION_GROUP.createNotification(title, messageBuf.toString(), NotificationType.INFORMATION, null).notify(project)[ CD ]
Line_10 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_17 $$ if (!errorMessages.isEmpty()) [ CD ]
Line_2 $$ public void doPrepare(final List<Module> pluginModules, final Project project) -->Line_28 $$ NOTIFICATION_GROUP.createNotification(title, messageBuf.toString(), NotificationType.INFORMATION, null).notify(project)[ FD ]
Line_2 $$ public void doPrepare(final List<Module> pluginModules, final Project project) -->Line_4 $$ final List<String> successMessages = new ArrayList<String>()[ CD ]
Line_2 $$ public void doPrepare(final List<Module> pluginModules, final Project project) -->Line_10 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ FD ]
Line_12 $$ for (Module aModule : pluginModules) -->Line_13 $$ if (!doPrepare(aModule, errorMessages, successMessages)) [ FD ]
Line_2 $$ public void doPrepare(final List<Module> pluginModules, final Project project) -->Line_6 $$ compilerManager.make(compilerManager.createModulesCompileScope(pluginModules.toArray(new Module[pluginModules.size()]), true), new CompileStatusNotification() [ FD ]
