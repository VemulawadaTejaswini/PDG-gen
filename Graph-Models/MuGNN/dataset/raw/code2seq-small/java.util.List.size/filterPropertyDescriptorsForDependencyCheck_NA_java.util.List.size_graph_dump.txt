Line_11 $$ for (Iterator<PropertyDescriptor> it = pds.iterator(); it.hasNext(); ) -->Line_14 $$ it.remove()[ FD ]
Line_13 $$ if (isExcludedFromDependencyCheck(pd)) -->Line_14 $$ it.remove()[ CD ]
Line_10 $$ List<PropertyDescriptor> pds = new LinkedList<PropertyDescriptor>(Arrays.asList(bw.getPropertyDescriptors()))-->Line_11 $$ for (Iterator<PropertyDescriptor> it = pds.iterator(); it.hasNext(); ) [ FD ]
Line_12 $$ PropertyDescriptor pd = it.next()-->Line_13 $$ if (isExcludedFromDependencyCheck(pd)) [ FD ]
Line_10 $$ List<PropertyDescriptor> pds = new LinkedList<PropertyDescriptor>(Arrays.asList(bw.getPropertyDescriptors()))-->Line_17 $$ return pds.toArray(new PropertyDescriptor[pds.size()])[ FD ]
Line_11 $$ for (Iterator<PropertyDescriptor> it = pds.iterator(); it.hasNext(); ) -->Line_13 $$ if (isExcludedFromDependencyCheck(pd)) [ CD ]
Line_11 $$ for (Iterator<PropertyDescriptor> it = pds.iterator(); it.hasNext(); ) -->Line_12 $$ PropertyDescriptor pd = it.next()[ CD ]
Line_11 $$ for (Iterator<PropertyDescriptor> it = pds.iterator(); it.hasNext(); ) -->Line_12 $$ PropertyDescriptor pd = it.next()[ FD ]
