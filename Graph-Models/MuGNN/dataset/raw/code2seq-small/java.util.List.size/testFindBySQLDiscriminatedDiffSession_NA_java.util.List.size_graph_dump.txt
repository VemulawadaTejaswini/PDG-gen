Line_2 $$ public void testFindBySQLDiscriminatedDiffSession() throws Exception -->Line_18 $$ List list = query.list()[ CD ]
Line_2 $$ public void testFindBySQLDiscriminatedDiffSession() throws Exception -->Line_19 $$ assertNotNull(list)[ CD ]
Line_2 $$ public void testFindBySQLDiscriminatedDiffSession() throws Exception -->Line_10 $$ B savedB = new B()[ CD ]
Line_10 $$ B savedB = new B()-->Line_11 $$ session.save(savedB)[ FD ]
Line_8 $$ A savedA = new A()-->Line_9 $$ session.save(savedA)[ FD ]
Line_3 $$ Session session = openSession()-->Line_15 $$ session = openSession()[ FD ]
Line_3 $$ Session session = openSession()-->Line_22 $$ session.close()[ FD ]
Line_3 $$ Session session = openSession()-->Line_13 $$ int count = session.createQuery("from A").list().size()[ FD ]
Line_15 $$ session = openSession()-->Line_21 $$ session.getTransaction().commit()[ FD ]
Line_15 $$ session = openSession()-->Line_17 $$ Query query = session.createSQLQuery("select identifier_column as [ FD ]
Line_18 $$ List list = query.list()-->Line_20 $$ assertEquals(count, list.size())[ FD ]
Line_2 $$ public void testFindBySQLDiscriminatedDiffSession() throws Exception -->Line_11 $$ session.save(savedB)[ CD ]
Line_15 $$ session = openSession()-->Line_22 $$ session.close()[ FD ]
Line_3 $$ Session session = openSession()-->Line_21 $$ session.getTransaction().commit()[ FD ]
Line_3 $$ Session session = openSession()-->Line_9 $$ session.save(savedA)[ FD ]
Line_3 $$ Session session = openSession()-->Line_16 $$ session.beginTransaction()[ FD ]
Line_3 $$ Session session = openSession()-->Line_11 $$ session.save(savedB)[ FD ]
Line_3 $$ Session session = openSession()-->Line_4 $$ session.beginTransaction()[ FD ]
Line_2 $$ public void testFindBySQLDiscriminatedDiffSession() throws Exception -->Line_20 $$ assertEquals(count, list.size())[ CD ]
Line_3 $$ Session session = openSession()-->Line_5 $$ for (Object entity : session.createQuery("from A").list()) [ FD ]
Line_2 $$ public void testFindBySQLDiscriminatedDiffSession() throws Exception -->Line_8 $$ A savedA = new A()[ CD ]
Line_17 $$ Query query = session.createSQLQuery("select identifier_column as -->Line_18 $$ List list = query.list()[ FD ]
Line_2 $$ public void testFindBySQLDiscriminatedDiffSession() throws Exception -->Line_4 $$ session.beginTransaction()[ CD ]
Line_2 $$ public void testFindBySQLDiscriminatedDiffSession() throws Exception -->Line_15 $$ session = openSession()[ CD ]
Line_3 $$ Session session = openSession()-->Line_17 $$ Query query = session.createSQLQuery("select identifier_column as [ FD ]
Line_2 $$ public void testFindBySQLDiscriminatedDiffSession() throws Exception -->Line_9 $$ session.save(savedA)[ CD ]
Line_2 $$ public void testFindBySQLDiscriminatedDiffSession() throws Exception -->Line_3 $$ Session session = openSession()[ CD ]
Line_2 $$ public void testFindBySQLDiscriminatedDiffSession() throws Exception -->Line_17 $$ Query query = session.createSQLQuery("select identifier_column as [ CD ]
Line_2 $$ public void testFindBySQLDiscriminatedDiffSession() throws Exception -->Line_22 $$ session.close()[ CD ]
Line_2 $$ public void testFindBySQLDiscriminatedDiffSession() throws Exception -->Line_16 $$ session.beginTransaction()[ CD ]
Line_3 $$ Session session = openSession()-->Line_12 $$ session.getTransaction().commit()[ FD ]
Line_3 $$ Session session = openSession()-->Line_14 $$ session.close()[ FD ]
Line_2 $$ public void testFindBySQLDiscriminatedDiffSession() throws Exception -->Line_21 $$ session.getTransaction().commit()[ CD ]
Line_15 $$ session = openSession()-->Line_16 $$ session.beginTransaction()[ FD ]
Line_5 $$ for (Object entity : session.createQuery("from A").list()) -->Line_6 $$ session.delete(entity)[ FD ]
Line_2 $$ public void testFindBySQLDiscriminatedDiffSession() throws Exception -->Line_13 $$ int count = session.createQuery("from A").list().size()[ CD ]
Line_2 $$ public void testFindBySQLDiscriminatedDiffSession() throws Exception -->Line_14 $$ session.close()[ CD ]
Line_13 $$ int count = session.createQuery("from A").list().size()-->Line_20 $$ assertEquals(count, list.size())[ FD ]
Line_3 $$ Session session = openSession()-->Line_6 $$ session.delete(entity)[ FD ]
Line_2 $$ public void testFindBySQLDiscriminatedDiffSession() throws Exception -->Line_12 $$ session.getTransaction().commit()[ CD ]
Line_18 $$ List list = query.list()-->Line_19 $$ assertNotNull(list)[ FD ]
