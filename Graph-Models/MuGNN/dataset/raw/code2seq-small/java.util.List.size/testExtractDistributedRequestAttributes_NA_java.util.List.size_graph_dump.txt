Line_2 $$ public void testExtractDistributedRequestAttributes() -->Line_8 $$ mockHttpServletRequest.setAttribute(distributedSerializable, distributedSerializable)[ CD ]
Line_3 $$ String distributedSerializable = "DISTRIBUTED_SERIALIZABLE"-->Line_8 $$ mockHttpServletRequest.setAttribute(distributedSerializable, distributedSerializable)[ FD ]
Line_2 $$ public void testExtractDistributedRequestAttributes() -->Line_3 $$ String distributedSerializable = "DISTRIBUTED_SERIALIZABLE"[ CD ]
Line_5 $$ final String distributedNonserializable = "DISTRIBUTED_NONSERIALIZABLE"-->Line_6 $$ DistributedRegistry.registerDistributed(distributedNonserializable, Direction.DUPLEX, MatchType.EXACT)[ FD ]
Line_3 $$ String distributedSerializable = "DISTRIBUTED_SERIALIZABLE"-->Line_28 $$ Assert.assertEquals(distributedSerializable, distributedRequestAttributes.get(distributedSerializable))[ FD ]
Line_2 $$ public void testExtractDistributedRequestAttributes() -->Line_4 $$ DistributedRegistry.registerDistributed(distributedSerializable, Direction.DUPLEX, MatchType.EXACT)[ CD ]
Line_9 $$ mockHttpServletRequest.setAttribute(distributedNonserializable, new Object() -->Line_11 $$ return distributedNonserializable[ CD ]
Line_2 $$ public void testExtractDistributedRequestAttributes() -->Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()[ CD ]
Line_2 $$ public void testExtractDistributedRequestAttributes() -->Line_5 $$ final String distributedNonserializable = "DISTRIBUTED_NONSERIALIZABLE"[ CD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_9 $$ mockHttpServletRequest.setAttribute(distributedNonserializable, new Object() [ FD ]
Line_3 $$ String distributedSerializable = "DISTRIBUTED_SERIALIZABLE"-->Line_21 $$ Assert.assertEquals(distributedSerializable, distributedRequestAttributes.get(distributedSerializable))[ FD ]
Line_3 $$ String distributedSerializable = "DISTRIBUTED_SERIALIZABLE"-->Line_4 $$ DistributedRegistry.registerDistributed(distributedSerializable, Direction.DUPLEX, MatchType.EXACT)[ FD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_15 $$ mockHttpServletRequest.setAttribute(nondistributed, nondistributed)[ FD ]
Line_3 $$ String distributedSerializable = "DISTRIBUTED_SERIALIZABLE"-->Line_37 $$ Assert.assertEquals(distributedSerializable, distributedRequestAttributes.get(distributedSerializable))[ FD ]
Line_2 $$ public void testExtractDistributedRequestAttributes() -->Line_15 $$ mockHttpServletRequest.setAttribute(nondistributed, nondistributed)[ CD ]
Line_5 $$ final String distributedNonserializable = "DISTRIBUTED_NONSERIALIZABLE"-->Line_9 $$ mockHttpServletRequest.setAttribute(distributedNonserializable, new Object() [ FD ]
Line_2 $$ public void testExtractDistributedRequestAttributes() -->Line_6 $$ DistributedRegistry.registerDistributed(distributedNonserializable, Direction.DUPLEX, MatchType.EXACT)[ CD ]
Line_2 $$ public void testExtractDistributedRequestAttributes() -->Line_9 $$ mockHttpServletRequest.setAttribute(distributedNonserializable, new Object() [ CD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_8 $$ mockHttpServletRequest.setAttribute(distributedSerializable, distributedSerializable)[ FD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_30 $$ distributedRequestAttributes = SPIAgentSerializable.extractDistributedRequestAttributes(mockHttpServletRequest, Direction.DUPLEX)[ FD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_18 $$ Map<String, Serializable> distributedRequestAttributes = SPIAgentSerializable.extractDistributedRequestAttributes(mockHttpServletRequest, Direction.DUPLEX)[ FD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_23 $$ distributedRequestAttributes = SPIAgentSerializable.extractDistributedRequestAttributes(mockHttpServletRequest, Direction.DUPLEX)[ FD ]
