Line_34 $$ t = s.beginTransaction()-->Line_51 $$ t.commit()[ FD ]
Line_9 $$ Item i = new Item()-->Line_11 $$ i.setDescription("A really top-quality, full-featured widget.")[ FD ]
Line_7 $$ Transaction t = s.beginTransaction()-->Line_51 $$ t.commit()[ FD ]
Line_19 $$ t = s.beginTransaction()-->Line_40 $$ t.commit()[ FD ]
Line_6 $$ Session s = openSession()-->Line_7 $$ Transaction t = s.beginTransaction()[ FD ]
Line_6 $$ Session s = openSession()-->Line_18 $$ s = openSession()[ FD ]
Line_18 $$ s = openSession()-->Line_26 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_14 $$ s.close()[ CD ]
Line_6 $$ Session s = openSession()-->Line_20 $$ List result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_5 $$ final String queryString = "from Item i where i.name='widget'"-->Line_20 $$ List result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_46 $$ s = openSession()[ CD ]
Line_6 $$ Session s = openSession()-->Line_14 $$ s.close()[ FD ]
Line_38 $$ i = (Item) result.get(0)-->Line_50 $$ s.delete(i)[ FD ]
Line_19 $$ t = s.beginTransaction()-->Line_47 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_38 $$ i = (Item) result.get(0)[ CD ]
Line_6 $$ Session s = openSession()-->Line_8 $$ s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_6 $$ Session s = openSession()-->Line_26 $$ t = s.beginTransaction()[ FD ]
Line_7 $$ Transaction t = s.beginTransaction()-->Line_47 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Session s = openSession()-->Line_30 $$ s.close()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_43 $$ assertEquals(qs.getCacheMissCount(), 2)[ CD ]
Line_18 $$ s = openSession()-->Line_48 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_25 $$ s = openSession()[ CD ]
Line_6 $$ Session s = openSession()-->Line_25 $$ s = openSession()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_49 $$ i = (Item) s.get(Item.class, new Long(i.getId()))[ CD ]
Line_18 $$ s = openSession()-->Line_20 $$ List result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_6 $$ Session s = openSession()-->Line_12 $$ s.save(i)[ FD ]
Line_18 $$ s = openSession()-->Line_27 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_34 $$ t = s.beginTransaction()-->Line_47 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_20 $$ List result = s.createQuery(queryString).setCacheable(true).list()[ CD ]
Line_38 $$ i = (Item) result.get(0)-->Line_49 $$ i = (Item) s.get(Item.class, new Long(i.getId()))[ FD ]
Line_6 $$ Session s = openSession()-->Line_48 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_16 $$ EntityStatistics es = s.getSessionFactory().getStatistics().getEntityStatistics(Item.class.getName())[ CD ]
Line_26 $$ t = s.beginTransaction()-->Line_47 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Session s = openSession()-->Line_16 $$ EntityStatistics es = s.getSessionFactory().getStatistics().getEntityStatistics(Item.class.getName())[ FD ]
Line_9 $$ Item i = new Item()-->Line_50 $$ s.delete(i)[ FD ]
Line_6 $$ Session s = openSession()-->Line_47 $$ t = s.beginTransaction()[ FD ]
Line_18 $$ s = openSession()-->Line_41 $$ s.close()[ FD ]
Line_20 $$ List result = s.createQuery(queryString).setCacheable(true).list()-->Line_21 $$ assertEquals(result.size(), 1)[ FD ]
Line_6 $$ Session s = openSession()-->Line_49 $$ i = (Item) s.get(Item.class, new Long(i.getId()))[ FD ]
Line_18 $$ s = openSession()-->Line_50 $$ s.delete(i)[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_52 $$ s.close()[ CD ]
Line_25 $$ s = openSession()-->Line_41 $$ s.close()[ FD ]
Line_25 $$ s = openSession()-->Line_44 $$ assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(), 0)[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_44 $$ assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(), 0)[ CD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_9 $$ Item i = new Item()[ CD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_53 $$ assertEquals(qs.getCacheHitCount(), 2)[ CD ]
Line_18 $$ s = openSession()-->Line_19 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_27 $$ result = s.createQuery(queryString).setCacheable(true).list()[ CD ]
Line_5 $$ final String queryString = "from Item i where i.name='widget'"-->Line_15 $$ QueryStatistics qs = s.getSessionFactory().getStatistics().getQueryStatistics(queryString)[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_35 $$ result = s.createQuery(queryString).setCacheable(true).list()[ CD ]
Line_33 $$ s = openSession()-->Line_44 $$ assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(), 0)[ FD ]
Line_33 $$ s = openSession()-->Line_48 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_26 $$ t = s.beginTransaction()-->Line_51 $$ t.commit()[ FD ]
Line_18 $$ s = openSession()-->Line_49 $$ i = (Item) s.get(Item.class, new Long(i.getId()))[ FD ]
Line_25 $$ s = openSession()-->Line_50 $$ s.delete(i)[ FD ]
Line_5 $$ final String queryString = "from Item i where i.name='widget'"-->Line_8 $$ s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_18 $$ s = openSession()-->Line_35 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_36 $$ assertEquals(result.size(), 1)[ CD ]
Line_6 $$ Session s = openSession()-->Line_34 $$ t = s.beginTransaction()[ FD ]
Line_25 $$ s = openSession()-->Line_34 $$ t = s.beginTransaction()[ FD ]
Line_7 $$ Transaction t = s.beginTransaction()-->Line_26 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_37 $$ assertTrue(Hibernate.isInitialized(result.get(0)))[ CD ]
Line_33 $$ s = openSession()-->Line_41 $$ s.close()[ FD ]
Line_6 $$ Session s = openSession()-->Line_44 $$ assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(), 0)[ FD ]
Line_5 $$ final String queryString = "from Item i where i.name='widget'"-->Line_27 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_18 $$ s = openSession()-->Line_33 $$ s = openSession()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_30 $$ s.close()[ CD ]
Line_6 $$ Session s = openSession()-->Line_35 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_15 $$ QueryStatistics qs = s.getSessionFactory().getStatistics().getQueryStatistics(queryString)-->Line_43 $$ assertEquals(qs.getCacheMissCount(), 2)[ FD ]
Line_18 $$ s = openSession()-->Line_34 $$ t = s.beginTransaction()[ FD ]
Line_25 $$ s = openSession()-->Line_35 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_5 $$ final String queryString = "from Item i where i.name='widget'"-->Line_35 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_20 $$ List result = s.createQuery(queryString).setCacheable(true).list()-->Line_48 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_19 $$ t = s.beginTransaction()-->Line_51 $$ t.commit()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_50 $$ s.delete(i)[ CD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_15 $$ QueryStatistics qs = s.getSessionFactory().getStatistics().getQueryStatistics(queryString)[ CD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_24 $$ assertEquals(qs.getCacheHitCount(), 0)[ CD ]
Line_27 $$ result = s.createQuery(queryString).setCacheable(true).list()-->Line_37 $$ assertTrue(Hibernate.isInitialized(result.get(0)))[ FD ]
Line_9 $$ Item i = new Item()-->Line_49 $$ i = (Item) s.get(Item.class, new Long(i.getId()))[ FD ]
Line_25 $$ s = openSession()-->Line_46 $$ s = openSession()[ FD ]
Line_9 $$ Item i = new Item()-->Line_38 $$ i = (Item) result.get(0)[ FD ]
Line_7 $$ Transaction t = s.beginTransaction()-->Line_22 $$ t.commit()[ FD ]
Line_33 $$ s = openSession()-->Line_47 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_41 $$ s.close()[ CD ]
Line_6 $$ Session s = openSession()-->Line_15 $$ QueryStatistics qs = s.getSessionFactory().getStatistics().getQueryStatistics(queryString)[ FD ]
Line_27 $$ result = s.createQuery(queryString).setCacheable(true).list()-->Line_38 $$ i = (Item) result.get(0)[ FD ]
Line_15 $$ QueryStatistics qs = s.getSessionFactory().getStatistics().getQueryStatistics(queryString)-->Line_24 $$ assertEquals(qs.getCacheHitCount(), 0)[ FD ]
Line_19 $$ t = s.beginTransaction()-->Line_29 $$ t.commit()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_8 $$ s.createQuery(queryString).setCacheable(true).list()[ CD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_23 $$ s.close()[ CD ]
Line_18 $$ s = openSession()-->Line_32 $$ assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(), 0)[ FD ]
Line_38 $$ i = (Item) result.get(0)-->Line_39 $$ i.setName("Widget")[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_45 $$ Thread.sleep(200)[ CD ]
Line_33 $$ s = openSession()-->Line_49 $$ i = (Item) s.get(Item.class, new Long(i.getId()))[ FD ]
Line_15 $$ QueryStatistics qs = s.getSessionFactory().getStatistics().getQueryStatistics(queryString)-->Line_54 $$ assertEquals(qs.getCacheMissCount(), 3)[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_5 $$ final String queryString = "from Item i where i.name='widget'"[ CD ]
Line_46 $$ s = openSession()-->Line_48 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_25 $$ s = openSession()-->Line_30 $$ s.close()[ FD ]
Line_6 $$ Session s = openSession()-->Line_23 $$ s.close()[ FD ]
Line_25 $$ s = openSession()-->Line_26 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ final String queryString = "from Item i where i.name='widget'"-->Line_48 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_6 $$ Session s = openSession()-->Line_27 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_31 $$ assertEquals(qs.getCacheHitCount(), 1)[ CD ]
Line_7 $$ Transaction t = s.beginTransaction()-->Line_40 $$ t.commit()[ FD ]
Line_26 $$ t = s.beginTransaction()-->Line_34 $$ t = s.beginTransaction()[ FD ]
Line_46 $$ s = openSession()-->Line_52 $$ s.close()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_39 $$ i.setName("Widget")[ CD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_40 $$ t.commit()[ CD ]
Line_16 $$ EntityStatistics es = s.getSessionFactory().getStatistics().getEntityStatistics(Item.class.getName())-->Line_57 $$ assertEquals(es.getFetchCount(), 0)[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_51 $$ t.commit()[ CD ]
Line_9 $$ Item i = new Item()-->Line_39 $$ i.setName("Widget")[ FD ]
Line_19 $$ t = s.beginTransaction()-->Line_26 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Session s = openSession()-->Line_46 $$ s = openSession()[ FD ]
Line_20 $$ List result = s.createQuery(queryString).setCacheable(true).list()-->Line_35 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_25 $$ s = openSession()-->Line_49 $$ i = (Item) s.get(Item.class, new Long(i.getId()))[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_3 $$ sessionFactory().getCache().evictQueryRegions()[ CD ]
Line_19 $$ t = s.beginTransaction()-->Line_34 $$ t = s.beginTransaction()[ FD ]
Line_15 $$ QueryStatistics qs = s.getSessionFactory().getStatistics().getQueryStatistics(queryString)-->Line_42 $$ assertEquals(qs.getCacheHitCount(), 2)[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_22 $$ t.commit()[ CD ]
Line_18 $$ s = openSession()-->Line_46 $$ s = openSession()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_11 $$ i.setDescription("A really top-quality, full-featured widget.")[ CD ]
Line_7 $$ Transaction t = s.beginTransaction()-->Line_19 $$ t = s.beginTransaction()[ FD ]
Line_15 $$ QueryStatistics qs = s.getSessionFactory().getStatistics().getQueryStatistics(queryString)-->Line_56 $$ assertEquals(qs.getExecutionCount(), 3)[ FD ]
Line_25 $$ s = openSession()-->Line_33 $$ s = openSession()[ FD ]
Line_7 $$ Transaction t = s.beginTransaction()-->Line_29 $$ t.commit()[ FD ]
Line_27 $$ result = s.createQuery(queryString).setCacheable(true).list()-->Line_36 $$ assertEquals(result.size(), 1)[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_13 $$ t.commit()[ CD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_26 $$ t = s.beginTransaction()[ CD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_10 $$ i.setName("widget")[ CD ]
Line_27 $$ result = s.createQuery(queryString).setCacheable(true).list()-->Line_35 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_25 $$ s = openSession()-->Line_27 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_25 $$ s = openSession()-->Line_47 $$ t = s.beginTransaction()[ FD ]
Line_25 $$ s = openSession()-->Line_48 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_18 $$ s = openSession()-->Line_23 $$ s.close()[ FD ]
Line_46 $$ s = openSession()-->Line_50 $$ s.delete(i)[ FD ]
Line_18 $$ s = openSession()-->Line_52 $$ s.close()[ FD ]
Line_15 $$ QueryStatistics qs = s.getSessionFactory().getStatistics().getQueryStatistics(queryString)-->Line_55 $$ assertEquals(qs.getCachePutCount(), 3)[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_56 $$ assertEquals(qs.getExecutionCount(), 3)[ CD ]
Line_49 $$ i = (Item) s.get(Item.class, new Long(i.getId()))-->Line_50 $$ s.delete(i)[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_48 $$ result = s.createQuery(queryString).setCacheable(true).list()[ CD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_17 $$ Thread.sleep(200)[ CD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_18 $$ s = openSession()[ CD ]
Line_18 $$ s = openSession()-->Line_25 $$ s = openSession()[ FD ]
Line_6 $$ Session s = openSession()-->Line_32 $$ assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(), 0)[ FD ]
Line_26 $$ t = s.beginTransaction()-->Line_29 $$ t.commit()[ FD ]
Line_33 $$ s = openSession()-->Line_34 $$ t = s.beginTransaction()[ FD ]
Line_46 $$ s = openSession()-->Line_47 $$ t = s.beginTransaction()[ FD ]
Line_35 $$ result = s.createQuery(queryString).setCacheable(true).list()-->Line_48 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_46 $$ s = openSession()-->Line_49 $$ i = (Item) s.get(Item.class, new Long(i.getId()))[ FD ]
Line_6 $$ Session s = openSession()-->Line_52 $$ s.close()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_55 $$ assertEquals(qs.getCachePutCount(), 3)[ CD ]
Line_25 $$ s = openSession()-->Line_52 $$ s.close()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_19 $$ t = s.beginTransaction()[ CD ]
Line_47 $$ t = s.beginTransaction()-->Line_51 $$ t.commit()[ FD ]
Line_15 $$ QueryStatistics qs = s.getSessionFactory().getStatistics().getQueryStatistics(queryString)-->Line_31 $$ assertEquals(qs.getCacheHitCount(), 1)[ FD ]
Line_7 $$ Transaction t = s.beginTransaction()-->Line_13 $$ t.commit()[ FD ]
Line_7 $$ Transaction t = s.beginTransaction()-->Line_34 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_54 $$ assertEquals(qs.getCacheMissCount(), 3)[ CD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_7 $$ Transaction t = s.beginTransaction()[ CD ]
Line_27 $$ result = s.createQuery(queryString).setCacheable(true).list()-->Line_48 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_33 $$ s = openSession()-->Line_50 $$ s.delete(i)[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_21 $$ assertEquals(result.size(), 1)[ CD ]
Line_33 $$ s = openSession()-->Line_35 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_32 $$ assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(), 0)[ CD ]
Line_20 $$ List result = s.createQuery(queryString).setCacheable(true).list()-->Line_28 $$ assertEquals(result.size(), 1)[ FD ]
Line_18 $$ s = openSession()-->Line_30 $$ s.close()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_6 $$ Session s = openSession()[ CD ]
Line_6 $$ Session s = openSession()-->Line_41 $$ s.close()[ FD ]
Line_25 $$ s = openSession()-->Line_32 $$ assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(), 0)[ FD ]
Line_20 $$ List result = s.createQuery(queryString).setCacheable(true).list()-->Line_37 $$ assertTrue(Hibernate.isInitialized(result.get(0)))[ FD ]
Line_35 $$ result = s.createQuery(queryString).setCacheable(true).list()-->Line_38 $$ i = (Item) result.get(0)[ FD ]
Line_15 $$ QueryStatistics qs = s.getSessionFactory().getStatistics().getQueryStatistics(queryString)-->Line_53 $$ assertEquals(qs.getCacheHitCount(), 2)[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_4 $$ sessionFactory().getStatistics().clear()[ CD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_29 $$ t.commit()[ CD ]
Line_34 $$ t = s.beginTransaction()-->Line_40 $$ t.commit()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_28 $$ assertEquals(result.size(), 1)[ CD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_33 $$ s = openSession()[ CD ]
Line_9 $$ Item i = new Item()-->Line_12 $$ s.save(i)[ FD ]
Line_26 $$ t = s.beginTransaction()-->Line_40 $$ t.commit()[ FD ]
Line_6 $$ Session s = openSession()-->Line_50 $$ s.delete(i)[ FD ]
Line_33 $$ s = openSession()-->Line_52 $$ s.close()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_42 $$ assertEquals(qs.getCacheHitCount(), 2)[ CD ]
Line_6 $$ Session s = openSession()-->Line_33 $$ s = openSession()[ FD ]
Line_33 $$ s = openSession()-->Line_46 $$ s = openSession()[ FD ]
Line_18 $$ s = openSession()-->Line_47 $$ t = s.beginTransaction()[ FD ]
Line_27 $$ result = s.createQuery(queryString).setCacheable(true).list()-->Line_28 $$ assertEquals(result.size(), 1)[ FD ]
Line_19 $$ t = s.beginTransaction()-->Line_22 $$ t.commit()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_34 $$ t = s.beginTransaction()[ CD ]
Line_18 $$ s = openSession()-->Line_44 $$ assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(), 0)[ FD ]
Line_35 $$ result = s.createQuery(queryString).setCacheable(true).list()-->Line_36 $$ assertEquals(result.size(), 1)[ FD ]
Line_20 $$ List result = s.createQuery(queryString).setCacheable(true).list()-->Line_27 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_57 $$ assertEquals(es.getFetchCount(), 0)[ CD ]
Line_20 $$ List result = s.createQuery(queryString).setCacheable(true).list()-->Line_36 $$ assertEquals(result.size(), 1)[ FD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_12 $$ s.save(i)[ CD ]
Line_2 $$ public void testQueryCacheInvalidation() throws Exception -->Line_47 $$ t = s.beginTransaction()[ CD ]
Line_35 $$ result = s.createQuery(queryString).setCacheable(true).list()-->Line_37 $$ assertTrue(Hibernate.isInitialized(result.get(0)))[ FD ]
Line_9 $$ Item i = new Item()-->Line_10 $$ i.setName("widget")[ FD ]
Line_20 $$ List result = s.createQuery(queryString).setCacheable(true).list()-->Line_38 $$ i = (Item) result.get(0)[ FD ]
Line_6 $$ Session s = openSession()-->Line_19 $$ t = s.beginTransaction()[ FD ]
