Line_4 $$ for (int i = 1; i < in.size(); i++) -->Line_11 $$ --i[ FD ]
Line_6 $$ for (int j = i - 1; j >= 0; --j) -->Line_7 $$ final T parent = in.get(j)[ FD ]
Line_2 $$ public void doFilter(final List<T> in) -->Line_3 $$ sortAscending(in)[ CD ]
Line_4 $$ for (int i = 1; i < in.size(); i++) -->Line_5 $$ final T child = in.get(i)[ FD ]
Line_5 $$ final T child = in.get(i)-->Line_9 $$ onRemove(child)[ FD ]
Line_7 $$ final T parent = in.get(j)-->Line_8 $$ if (isAncestor(parent, child)) [ FD ]
Line_2 $$ public void doFilter(final List<T> in) -->Line_3 $$ sortAscending(in)[ FD ]
Line_6 $$ for (int j = i - 1; j >= 0; --j) -->Line_7 $$ final T parent = in.get(j)[ CD ]
Line_4 $$ for (int i = 1; i < in.size(); i++) -->Line_5 $$ final T child = in.get(i)[ CD ]
Line_2 $$ public void doFilter(final List<T> in) -->Line_4 $$ for (int i = 1; i < in.size(); i++) [ CD ]
Line_2 $$ public void doFilter(final List<T> in) -->Line_10 $$ in.remove(i)[ FD ]
Line_2 $$ public void doFilter(final List<T> in) -->Line_5 $$ final T child = in.get(i)[ FD ]
Line_6 $$ for (int j = i - 1; j >= 0; --j) -->Line_8 $$ if (isAncestor(parent, child)) [ CD ]
Line_8 $$ if (isAncestor(parent, child)) -->Line_11 $$ --i[ CD ]
Line_2 $$ public void doFilter(final List<T> in) -->Line_4 $$ for (int i = 1; i < in.size(); i++) [ FD ]
Line_2 $$ public void doFilter(final List<T> in) -->Line_7 $$ final T parent = in.get(j)[ FD ]
Line_4 $$ for (int i = 1; i < in.size(); i++) -->Line_10 $$ in.remove(i)[ FD ]
Line_8 $$ if (isAncestor(parent, child)) -->Line_10 $$ in.remove(i)[ CD ]
Line_5 $$ final T child = in.get(i)-->Line_8 $$ if (isAncestor(parent, child)) [ FD ]
Line_4 $$ for (int i = 1; i < in.size(); i++) -->Line_6 $$ for (int j = i - 1; j >= 0; --j) [ CD ]
Line_8 $$ if (isAncestor(parent, child)) -->Line_9 $$ onRemove(child)[ CD ]
