Line_2 $$ private void assertListener(MockMBeanExporterListener listener) throws MalformedObjectNameException -->Line_4 $$ assertEquals("Incorrect number of registrations", 1, listener.getRegistered().size())[ FD ]
Line_2 $$ private void assertListener(MockMBeanExporterListener listener) throws MalformedObjectNameException -->Line_5 $$ assertEquals("Incorrect number of unregistrations", 1, listener.getUnregistered().size())[ FD ]
Line_2 $$ private void assertListener(MockMBeanExporterListener listener) throws MalformedObjectNameException -->Line_6 $$ assertEquals("Incorrect ObjectName in register", desired, listener.getRegistered().get(0))[ FD ]
Line_2 $$ private void assertListener(MockMBeanExporterListener listener) throws MalformedObjectNameException -->Line_7 $$ assertEquals("Incorrect ObjectName in unregister", desired, listener.getUnregistered().get(0))[ CD ]
Line_3 $$ ObjectName desired = ObjectNameManager.getInstance(OBJECT_NAME)-->Line_6 $$ assertEquals("Incorrect ObjectName in register", desired, listener.getRegistered().get(0))[ FD ]
Line_2 $$ private void assertListener(MockMBeanExporterListener listener) throws MalformedObjectNameException -->Line_4 $$ assertEquals("Incorrect number of registrations", 1, listener.getRegistered().size())[ CD ]
Line_2 $$ private void assertListener(MockMBeanExporterListener listener) throws MalformedObjectNameException -->Line_3 $$ ObjectName desired = ObjectNameManager.getInstance(OBJECT_NAME)[ CD ]
Line_3 $$ ObjectName desired = ObjectNameManager.getInstance(OBJECT_NAME)-->Line_7 $$ assertEquals("Incorrect ObjectName in unregister", desired, listener.getUnregistered().get(0))[ FD ]
Line_2 $$ private void assertListener(MockMBeanExporterListener listener) throws MalformedObjectNameException -->Line_7 $$ assertEquals("Incorrect ObjectName in unregister", desired, listener.getUnregistered().get(0))[ FD ]
Line_2 $$ private void assertListener(MockMBeanExporterListener listener) throws MalformedObjectNameException -->Line_6 $$ assertEquals("Incorrect ObjectName in register", desired, listener.getRegistered().get(0))[ CD ]
Line_2 $$ private void assertListener(MockMBeanExporterListener listener) throws MalformedObjectNameException -->Line_5 $$ assertEquals("Incorrect number of unregistrations", 1, listener.getUnregistered().size())[ CD ]
