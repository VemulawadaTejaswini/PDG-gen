Line_5 $$ psToUse = nativeJdbcExtractor.getNativePreparedStatement(ps)-->Line_34 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, in)[ FD ]
Line_11 $$ if (in instanceof SqlParameterValue) -->Line_19 $$ declaredParameter = declaredParameters.get(i)[ CD ]
Line_2 $$ public void setValues(PreparedStatement ps) throws SQLException -->Line_7 $$ int sqlColIndx = 1[ CD ]
Line_19 $$ declaredParameter = declaredParameters.get(i)-->Line_30 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, entry)[ FD ]
Line_9 $$ Object in = this.parameters.get(i)-->Line_34 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, in)[ FD ]
Line_21 $$ if (in instanceof Collection && declaredParameter.getSqlType() != Types.ARRAY) -->Line_34 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, in)[ CD ]
Line_2 $$ public void setValues(PreparedStatement ps) throws SQLException -->Line_3 $$ PreparedStatement psToUse = ps[ CD ]
Line_19 $$ declaredParameter = declaredParameters.get(i)-->Line_34 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, in)[ FD ]
Line_11 $$ if (in instanceof SqlParameterValue) -->Line_14 $$ declaredParameter = paramValue[ CD ]
Line_21 $$ if (in instanceof Collection && declaredParameter.getSqlType() != Types.ARRAY) -->Line_22 $$ Collection<?> entries = (Collection<?>) in[ CD ]
Line_8 $$ for (int i = 0; i < this.parameters.size(); i++) -->Line_9 $$ Object in = this.parameters.get(i)[ FD ]
Line_12 $$ SqlParameterValue paramValue = (SqlParameterValue) in-->Line_13 $$ in = paramValue.getValue()[ FD ]
Line_11 $$ if (in instanceof SqlParameterValue) -->Line_16 $$ if (declaredParameters.size() <= i) [ CD ]
Line_4 $$ if (nativeJdbcExtractor != null) -->Line_5 $$ psToUse = nativeJdbcExtractor.getNativePreparedStatement(ps)[ CD ]
Line_9 $$ Object in = this.parameters.get(i)-->Line_11 $$ if (in instanceof SqlParameterValue) [ FD ]
Line_14 $$ declaredParameter = paramValue-->Line_19 $$ declaredParameter = declaredParameters.get(i)[ FD ]
Line_14 $$ declaredParameter = paramValue-->Line_27 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, argValue)[ FD ]
Line_5 $$ psToUse = nativeJdbcExtractor.getNativePreparedStatement(ps)-->Line_30 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, entry)[ FD ]
Line_23 $$ for (Object entry : entries) -->Line_24 $$ if (entry instanceof Object[]) [ FD ]
Line_10 $$ SqlParameter declaredParameter-->Line_27 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, argValue)[ FD ]
Line_23 $$ for (Object entry : entries) -->Line_30 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, entry)[ FD ]
Line_26 $$ for (Object argValue : valueArray) -->Line_27 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, argValue)[ FD ]
Line_19 $$ declaredParameter = declaredParameters.get(i)-->Line_21 $$ if (in instanceof Collection && declaredParameter.getSqlType() != Types.ARRAY) [ FD ]
Line_8 $$ for (int i = 0; i < this.parameters.size(); i++) -->Line_11 $$ if (in instanceof SqlParameterValue) [ CD ]
Line_3 $$ PreparedStatement psToUse = ps-->Line_30 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, entry)[ FD ]
Line_10 $$ SqlParameter declaredParameter-->Line_21 $$ if (in instanceof Collection && declaredParameter.getSqlType() != Types.ARRAY) [ FD ]
Line_3 $$ PreparedStatement psToUse = ps-->Line_5 $$ psToUse = nativeJdbcExtractor.getNativePreparedStatement(ps)[ FD ]
Line_14 $$ declaredParameter = paramValue-->Line_21 $$ if (in instanceof Collection && declaredParameter.getSqlType() != Types.ARRAY) [ FD ]
Line_7 $$ int sqlColIndx = 1-->Line_27 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, argValue)[ FD ]
Line_14 $$ declaredParameter = paramValue-->Line_30 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, entry)[ FD ]
Line_10 $$ SqlParameter declaredParameter-->Line_14 $$ declaredParameter = paramValue[ FD ]
Line_14 $$ declaredParameter = paramValue-->Line_34 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, in)[ FD ]
Line_3 $$ PreparedStatement psToUse = ps-->Line_27 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, argValue)[ FD ]
Line_5 $$ psToUse = nativeJdbcExtractor.getNativePreparedStatement(ps)-->Line_27 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, argValue)[ FD ]
Line_8 $$ for (int i = 0; i < this.parameters.size(); i++) -->Line_19 $$ declaredParameter = declaredParameters.get(i)[ FD ]
Line_24 $$ if (entry instanceof Object[]) -->Line_30 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, entry)[ CD ]
Line_11 $$ if (in instanceof SqlParameterValue) -->Line_12 $$ SqlParameterValue paramValue = (SqlParameterValue) in[ CD ]
Line_2 $$ public void setValues(PreparedStatement ps) throws SQLException -->Line_4 $$ if (nativeJdbcExtractor != null) [ CD ]
Line_7 $$ int sqlColIndx = 1-->Line_30 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, entry)[ FD ]
Line_3 $$ PreparedStatement psToUse = ps-->Line_34 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, in)[ FD ]
Line_13 $$ in = paramValue.getValue()-->Line_11 $$ if (in instanceof SqlParameterValue) [ FD ]
Line_10 $$ SqlParameter declaredParameter-->Line_19 $$ declaredParameter = declaredParameters.get(i)[ FD ]
Line_24 $$ if (entry instanceof Object[]) -->Line_25 $$ Object[] valueArray = ((Object[]) entry)[ CD ]
Line_8 $$ for (int i = 0; i < this.parameters.size(); i++) -->Line_10 $$ SqlParameter declaredParameter[ CD ]
Line_9 $$ Object in = this.parameters.get(i)-->Line_13 $$ in = paramValue.getValue()[ FD ]
Line_12 $$ SqlParameterValue paramValue = (SqlParameterValue) in-->Line_14 $$ declaredParameter = paramValue[ FD ]
Line_10 $$ SqlParameter declaredParameter-->Line_30 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, entry)[ FD ]
Line_10 $$ SqlParameter declaredParameter-->Line_34 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, in)[ FD ]
Line_8 $$ for (int i = 0; i < this.parameters.size(); i++) -->Line_9 $$ Object in = this.parameters.get(i)[ CD ]
Line_19 $$ declaredParameter = declaredParameters.get(i)-->Line_27 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, argValue)[ FD ]
Line_2 $$ public void setValues(PreparedStatement ps) throws SQLException -->Line_5 $$ psToUse = nativeJdbcExtractor.getNativePreparedStatement(ps)[ FD ]
Line_11 $$ if (in instanceof SqlParameterValue) -->Line_13 $$ in = paramValue.getValue()[ CD ]
Line_8 $$ for (int i = 0; i < this.parameters.size(); i++) -->Line_21 $$ if (in instanceof Collection && declaredParameter.getSqlType() != Types.ARRAY) [ CD ]
Line_8 $$ for (int i = 0; i < this.parameters.size(); i++) -->Line_16 $$ if (declaredParameters.size() <= i) [ FD ]
Line_13 $$ in = paramValue.getValue()-->Line_34 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, in)[ FD ]
Line_7 $$ int sqlColIndx = 1-->Line_34 $$ StatementCreatorUtils.setParameterValue(psToUse, sqlColIndx++, declaredParameter, in)[ FD ]
Line_2 $$ public void setValues(PreparedStatement ps) throws SQLException -->Line_8 $$ for (int i = 0; i < this.parameters.size(); i++) [ CD ]
