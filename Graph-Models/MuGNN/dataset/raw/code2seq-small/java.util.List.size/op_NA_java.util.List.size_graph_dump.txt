Line_35 $$ if (!Strings.isNullOrEmpty(user)) -->Line_36 $$ kvs.add("user=" + user)[ CD ]
Line_38 $$ if (kvs.size() == 0) -->Line_39 $$ AUDIT_LOG.info("[ CD ]
Line_2 $$ private void op(OpStatus opStatus, final KMS.KMSOp op, final String user, final String key, final String extraMsg) -->Line_29 $$ if (op != null) [ FD ]
Line_2 $$ private void op(OpStatus opStatus, final KMS.KMSOp op, final String user, final String key, final String extraMsg) -->Line_42 $$ AUDIT_LOG.info("[ FD ]
Line_29 $$ if (op != null) -->Line_30 $$ kvs.add("op=" + op)[ CD ]
Line_5 $$ if (opStatus == OpStatus.UNAUTHORIZED) -->Line_6 $$ cache.invalidate(cacheKey)[ CD ]
Line_3 $$ if (!Strings.isNullOrEmpty(user) && !Strings.isNullOrEmpty(key) && (op != null) && AGGREGATE_OPS_WHITELIST.contains(op)) -->Line_4 $$ String cacheKey = createCacheKey(user, key, op)[ CD ]
Line_3 $$ if (!Strings.isNullOrEmpty(user) && !Strings.isNullOrEmpty(key) && (op != null) && AGGREGATE_OPS_WHITELIST.contains(op)) -->Line_29 $$ if (op != null) [ CD ]
Line_38 $$ if (kvs.size() == 0) -->Line_42 $$ AUDIT_LOG.info("[ CD ]
Line_2 $$ private void op(OpStatus opStatus, final KMS.KMSOp op, final String user, final String key, final String extraMsg) -->Line_5 $$ if (opStatus == OpStatus.UNAUTHORIZED) [ FD ]
Line_3 $$ if (!Strings.isNullOrEmpty(user) && !Strings.isNullOrEmpty(key) && (op != null) && AGGREGATE_OPS_WHITELIST.contains(op)) -->Line_38 $$ if (kvs.size() == 0) [ CD ]
Line_2 $$ private void op(OpStatus opStatus, final KMS.KMSOp op, final String user, final String key, final String extraMsg) -->Line_7 $$ AUDIT_LOG.info("UNAUTHORIZED[op=[ FD ]
Line_2 $$ private void op(OpStatus opStatus, final KMS.KMSOp op, final String user, final String key, final String extraMsg) -->Line_3 $$ if (!Strings.isNullOrEmpty(user) && !Strings.isNullOrEmpty(key) && (op != null) && AGGREGATE_OPS_WHITELIST.contains(op)) [ CD ]
Line_4 $$ String cacheKey = createCacheKey(user, key, op)-->Line_10 $$ AuditEvent event = cache.get(cacheKey, new Callable<AuditEvent>() [ FD ]
Line_3 $$ if (!Strings.isNullOrEmpty(user) && !Strings.isNullOrEmpty(key) && (op != null) && AGGREGATE_OPS_WHITELIST.contains(op)) -->Line_32 $$ if (!Strings.isNullOrEmpty(key)) [ CD ]
Line_3 $$ if (!Strings.isNullOrEmpty(user) && !Strings.isNullOrEmpty(key) && (op != null) && AGGREGATE_OPS_WHITELIST.contains(op)) -->Line_5 $$ if (opStatus == OpStatus.UNAUTHORIZED) [ CD ]
Line_10 $$ AuditEvent event = cache.get(cacheKey, new Callable<AuditEvent>() -->Line_20 $$ event.getAccessCount().incrementAndGet()[ FD ]
Line_10 $$ AuditEvent event = cache.get(cacheKey, new Callable<AuditEvent>() -->Line_21 $$ logEvent(event)[ FD ]
Line_3 $$ if (!Strings.isNullOrEmpty(user) && !Strings.isNullOrEmpty(key) && (op != null) && AGGREGATE_OPS_WHITELIST.contains(op)) -->Line_35 $$ if (!Strings.isNullOrEmpty(user)) [ CD ]
Line_32 $$ if (!Strings.isNullOrEmpty(key)) -->Line_33 $$ kvs.add("key=" + key)[ CD ]
Line_5 $$ if (opStatus == OpStatus.UNAUTHORIZED) -->Line_7 $$ AUDIT_LOG.info("UNAUTHORIZED[op=[ CD ]
Line_2 $$ private void op(OpStatus opStatus, final KMS.KMSOp op, final String user, final String key, final String extraMsg) -->Line_3 $$ if (!Strings.isNullOrEmpty(user) && !Strings.isNullOrEmpty(key) && (op != null) && AGGREGATE_OPS_WHITELIST.contains(op)) [ FD ]
Line_2 $$ private void op(OpStatus opStatus, final KMS.KMSOp op, final String user, final String key, final String extraMsg) -->Line_4 $$ String cacheKey = createCacheKey(user, key, op)[ FD ]
Line_2 $$ private void op(OpStatus opStatus, final KMS.KMSOp op, final String user, final String key, final String extraMsg) -->Line_39 $$ AUDIT_LOG.info("[ FD ]
Line_38 $$ if (kvs.size() == 0) -->Line_41 $$ String join = Joiner.on(", ").join(kvs)[ CD ]
Line_4 $$ String cacheKey = createCacheKey(user, key, op)-->Line_6 $$ cache.invalidate(cacheKey)[ FD ]
Line_2 $$ private void op(OpStatus opStatus, final KMS.KMSOp op, final String user, final String key, final String extraMsg) -->Line_32 $$ if (!Strings.isNullOrEmpty(key)) [ FD ]
Line_10 $$ AuditEvent event = cache.get(cacheKey, new Callable<AuditEvent>() -->Line_14 $$ return new AuditEvent(key, user, op, extraMsg)[ CD ]
Line_2 $$ private void op(OpStatus opStatus, final KMS.KMSOp op, final String user, final String key, final String extraMsg) -->Line_35 $$ if (!Strings.isNullOrEmpty(user)) [ FD ]
