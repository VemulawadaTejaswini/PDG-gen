Line_2 $$ private void prepareProjectSettings(@NotNull SystemSettings s) -->Line_9 $$ List<ProjectSettings> settings = ContainerUtilRt.newArrayList(s.getLinkedProjectsSettings())[ FD ]
Line_27 $$ myProjectsList.addListSelectionListener(new ListSelectionListener() -->Line_29 $$ if (e.getValueIsAdjusting()) [ CD ]
Line_2 $$ private void prepareProjectSettings(@NotNull SystemSettings s) -->Line_5 $$ myProjectsList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION)[ CD ]
Line_2 $$ private void prepareProjectSettings(@NotNull SystemSettings s) -->Line_6 $$ addTitle(ExternalSystemBundle.message("settings.title.linked.projects", myExternalSystemId.getReadableName()))[ CD ]
Line_27 $$ myProjectsList.addListSelectionListener(new ListSelectionListener() -->Line_40 $$ myActiveProjectSettingsControl.showUi(true)[ CD ]
Line_9 $$ List<ProjectSettings> settings = ContainerUtilRt.newArrayList(s.getLinkedProjectsSettings())-->Line_10 $$ myProjectsList.setVisibleRowCount(Math.max(3, Math.min(5, settings.size())))[ FD ]
Line_29 $$ if (e.getValueIsAdjusting()) -->Line_30 $$ return[ CD ]
Line_2 $$ private void prepareProjectSettings(@NotNull SystemSettings s) -->Line_27 $$ myProjectsList.addListSelectionListener(new ListSelectionListener() [ CD ]
Line_32 $$ int i = myProjectsList.getSelectedIndex()-->Line_39 $$ myActiveProjectSettingsControl = myProjectSettingsControls.get(i)[ FD ]
Line_2 $$ private void prepareProjectSettings(@NotNull SystemSettings s) -->Line_10 $$ myProjectsList.setVisibleRowCount(Math.max(3, Math.min(5, settings.size())))[ CD ]
Line_27 $$ myProjectsList.addListSelectionListener(new ListSelectionListener() -->Line_39 $$ myActiveProjectSettingsControl = myProjectSettingsControls.get(i)[ CD ]
Line_27 $$ myProjectsList.addListSelectionListener(new ListSelectionListener() -->Line_36 $$ if (myActiveProjectSettingsControl != null) [ CD ]
Line_36 $$ if (myActiveProjectSettingsControl != null) -->Line_37 $$ myActiveProjectSettingsControl.showUi(false)[ CD ]
Line_2 $$ private void prepareProjectSettings(@NotNull SystemSettings s) -->Line_43 $$ if (!myProjectsModel.isEmpty()) [ CD ]
Line_2 $$ private void prepareProjectSettings(@NotNull SystemSettings s) -->Line_7 $$ myComponent.add(new JBScrollPane(myProjectsList), ExternalSystemUiUtil.getFillLineConstraints(1))[ CD ]
Line_43 $$ if (!myProjectsModel.isEmpty()) -->Line_44 $$ myProjectsList.setSelectedIndex(0)[ CD ]
Line_33 $$ if (i < 0) -->Line_34 $$ return[ CD ]
Line_11 $$ ContainerUtil.sort(settings, new Comparator<ProjectSettings>() -->Line_13 $$ return getProjectName(s1.getExternalProjectPath()).compareTo(getProjectName(s2.getExternalProjectPath()))[ CD ]
Line_27 $$ myProjectsList.addListSelectionListener(new ListSelectionListener() -->Line_33 $$ if (i < 0) [ CD ]
Line_2 $$ private void prepareProjectSettings(@NotNull SystemSettings s) -->Line_8 $$ addTitle(ExternalSystemBundle.message("settings.title.project.settings"))[ CD ]
Line_27 $$ myProjectsList.addListSelectionListener(new ListSelectionListener() -->Line_29 $$ if (e.getValueIsAdjusting()) [ FD ]
Line_2 $$ private void prepareProjectSettings(@NotNull SystemSettings s) -->Line_9 $$ List<ProjectSettings> settings = ContainerUtilRt.newArrayList(s.getLinkedProjectsSettings())[ CD ]
Line_9 $$ List<ProjectSettings> settings = ContainerUtilRt.newArrayList(s.getLinkedProjectsSettings())-->Line_11 $$ ContainerUtil.sort(settings, new Comparator<ProjectSettings>() [ FD ]
Line_32 $$ int i = myProjectsList.getSelectedIndex()-->Line_33 $$ if (i < 0) [ FD ]
Line_2 $$ private void prepareProjectSettings(@NotNull SystemSettings s) -->Line_16 $$ myProjectSettingsControls.clear()[ CD ]
Line_2 $$ private void prepareProjectSettings(@NotNull SystemSettings s) -->Line_11 $$ ContainerUtil.sort(settings, new Comparator<ProjectSettings>() [ CD ]
Line_22 $$ if (control instanceof AbstractExternalProjectSettingsControl<?>) -->Line_23 $$ ((AbstractExternalProjectSettingsControl) control).setCurrentProject(myProject)[ CD ]
Line_11 $$ ContainerUtil.sort(settings, new Comparator<ProjectSettings>() -->Line_13 $$ return getProjectName(s1.getExternalProjectPath()).compareTo(getProjectName(s2.getExternalProjectPath()))[ FD ]
Line_27 $$ myProjectsList.addListSelectionListener(new ListSelectionListener() -->Line_32 $$ int i = myProjectsList.getSelectedIndex()[ CD ]
