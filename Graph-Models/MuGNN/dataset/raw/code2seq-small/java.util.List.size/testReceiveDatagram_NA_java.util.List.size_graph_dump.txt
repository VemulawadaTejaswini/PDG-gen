Line_123 $$ Datagram ackResponseDatagram = IntrabandTestUtil.readDatagramFully(scatteringByteChannel)-->Line_124 $$ Assert.assertEquals(sequenceId, DatagramHelper.getSequenceId(ackResponseDatagram))[ FD ]
Line_10 $$ SelectionKeyRegistrationReference registrationReference = (SelectionKeyRegistrationReference) _selectorIntraband.registerChannel(writePipe.source(), readPipe.sink())-->Line_160 $$ _unregisterChannels(registrationReference)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_149 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_126 $$ ByteBuffer dataByteBuffer = ackResponseDatagram.getDataByteBuffer()-->Line_157 $$ Assert.assertArrayEquals(_data, dataByteBuffer.array())[ FD ]
Line_8 $$ GatheringByteChannel gatheringByteChannel = writePipe.sink()-->Line_17 $$ DatagramHelper.writeTo(DatagramHelper.createACKResponseDatagram(sequenceId), gatheringByteChannel)[ FD ]
Line_6 $$ Pipe readPipe = Pipe.open()-->Line_10 $$ SelectionKeyRegistrationReference registrationReference = (SelectionKeyRegistrationReference) _selectorIntraband.registerChannel(writePipe.source(), readPipe.sink())[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_106 $$ DatagramHelper.writeTo(Datagram.createResponseDatagram(requestDatagram, _data), gatheringByteChannel)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_84 $$ DatagramHelper.setTimeout(requestDatagram, 10000)[ FD ]
Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_98 $$ DatagramHelper.setCompletionTypes(requestDatagram, EnumSet.noneOf(CompletionType.class))[ FD ]
Line_67 $$ recordCompletionHandler = new RecordCompletionHandler()-->Line_82 $$ DatagramHelper.setCompletionHandler(requestDatagram, recordCompletionHandler)[ FD ]
Line_67 $$ recordCompletionHandler = new RecordCompletionHandler()-->Line_100 $$ DatagramHelper.setCompletionHandler(requestDatagram, recordCompletionHandler)[ FD ]
Line_8 $$ GatheringByteChannel gatheringByteChannel = writePipe.sink()-->Line_106 $$ DatagramHelper.writeTo(Datagram.createResponseDatagram(requestDatagram, _data), gatheringByteChannel)[ FD ]
Line_11 $$ long sequenceId = 100-->Line_154 $$ Assert.assertEquals(sequenceId, DatagramHelper.getSequenceId(receiveDatagram))[ FD ]
Line_35 $$ RecordCompletionHandler<Object> recordCompletionHandler = new RecordCompletionHandler()-->Line_67 $$ recordCompletionHandler = new RecordCompletionHandler()[ FD ]
Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_116 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_68 $$ DatagramHelper.setCompletionHandler(requestDatagram, recordCompletionHandler)[ FD ]
Line_153 $$ Datagram receiveDatagram = recordDatagramReceiveHandler.getReceiveDatagram()-->Line_154 $$ Assert.assertEquals(sequenceId, DatagramHelper.getSequenceId(receiveDatagram))[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_98 $$ DatagramHelper.setCompletionTypes(requestDatagram, EnumSet.noneOf(CompletionType.class))[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_59 $$ DatagramHelper.writeTo(Datagram.createResponseDatagram(requestDatagram, _data), gatheringByteChannel)[ FD ]
Line_99 $$ recordCompletionHandler = new RecordCompletionHandler()-->Line_100 $$ DatagramHelper.setCompletionHandler(requestDatagram, recordCompletionHandler)[ FD ]
Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_149 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_35 $$ RecordCompletionHandler<Object> recordCompletionHandler = new RecordCompletionHandler()-->Line_100 $$ DatagramHelper.setCompletionHandler(requestDatagram, recordCompletionHandler)[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_133 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_11 $$ long sequenceId = 100-->Line_133 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_67 $$ recordCompletionHandler = new RecordCompletionHandler()-->Line_68 $$ DatagramHelper.setCompletionHandler(requestDatagram, recordCompletionHandler)[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_144 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_83 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_132 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_143 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)[ FD ]
Line_132 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_149 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_132 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)[ FD ]
Line_11 $$ long sequenceId = 100-->Line_70 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_103 $$ BaseIntrabandHelper.addResponseWaitingDatagram(_selectorIntraband, requestDatagram)[ FD ]
Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_106 $$ DatagramHelper.writeTo(Datagram.createResponseDatagram(requestDatagram, _data), gatheringByteChannel)[ FD ]
Line_8 $$ GatheringByteChannel gatheringByteChannel = writePipe.sink()-->Line_136 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_88 $$ DatagramHelper.writeTo(Datagram.createResponseDatagram(requestDatagram, _data), gatheringByteChannel)[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_88 $$ DatagramHelper.writeTo(Datagram.createResponseDatagram(requestDatagram, _data), gatheringByteChannel)[ FD ]
Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_101 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_101 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_11 $$ long sequenceId = 100-->Line_116 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_8 $$ GatheringByteChannel gatheringByteChannel = writePipe.sink()-->Line_59 $$ DatagramHelper.writeTo(Datagram.createResponseDatagram(requestDatagram, _data), gatheringByteChannel)[ FD ]
Line_7 $$ Pipe writePipe = Pipe.open()-->Line_10 $$ SelectionKeyRegistrationReference registrationReference = (SelectionKeyRegistrationReference) _selectorIntraband.registerChannel(writePipe.source(), readPipe.sink())[ FD ]
Line_81 $$ recordCompletionHandler = new RecordCompletionHandler()-->Line_99 $$ recordCompletionHandler = new RecordCompletionHandler()[ FD ]
Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_100 $$ DatagramHelper.setCompletionHandler(requestDatagram, recordCompletionHandler)[ FD ]
Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_144 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_119 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_126 $$ ByteBuffer dataByteBuffer = ackResponseDatagram.getDataByteBuffer()-->Line_127 $$ Assert.assertEquals(0, dataByteBuffer.capacity())[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_73 $$ DatagramHelper.writeTo(Datagram.createResponseDatagram(requestDatagram, _data), gatheringByteChannel)[ FD ]
Line_35 $$ RecordCompletionHandler<Object> recordCompletionHandler = new RecordCompletionHandler()-->Line_82 $$ DatagramHelper.setCompletionHandler(requestDatagram, recordCompletionHandler)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_133 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_66 $$ DatagramHelper.setAttachment(requestDatagram, new Object())[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)[ FD ]
Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_102 $$ DatagramHelper.setTimeout(requestDatagram, 10000)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)[ FD ]
Line_132 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_133 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_11 $$ long sequenceId = 100-->Line_17 $$ DatagramHelper.writeTo(DatagramHelper.createACKResponseDatagram(sequenceId), gatheringByteChannel)[ FD ]
Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_115 $$ DatagramHelper.setAckRequest(requestDatagram)[ FD ]
Line_35 $$ RecordCompletionHandler<Object> recordCompletionHandler = new RecordCompletionHandler()-->Line_36 $$ DatagramHelper.setCompletionHandler(requestDatagram, recordCompletionHandler)[ FD ]
Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_114 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_119 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_126 $$ ByteBuffer dataByteBuffer = ackResponseDatagram.getDataByteBuffer()-->Line_156 $$ dataByteBuffer = receiveDatagram.getDataByteBuffer()[ FD ]
Line_81 $$ recordCompletionHandler = new RecordCompletionHandler()-->Line_100 $$ DatagramHelper.setCompletionHandler(requestDatagram, recordCompletionHandler)[ FD ]
Line_145 $$ RecordDatagramReceiveHandler recordDatagramReceiveHandler = new RecordDatagramReceiveHandler()-->Line_153 $$ Datagram receiveDatagram = recordDatagramReceiveHandler.getReceiveDatagram()[ FD ]
Line_6 $$ Pipe readPipe = Pipe.open()-->Line_9 $$ ScatteringByteChannel scatteringByteChannel = readPipe.source()[ FD ]
Line_153 $$ Datagram receiveDatagram = recordDatagramReceiveHandler.getReceiveDatagram()-->Line_155 $$ Assert.assertEquals(_TYPE, receiveDatagram.getType())[ FD ]
Line_11 $$ long sequenceId = 100-->Line_27 $$ DatagramHelper.writeTo(DatagramHelper.createACKResponseDatagram(sequenceId), gatheringByteChannel)[ FD ]
Line_35 $$ RecordCompletionHandler<Object> recordCompletionHandler = new RecordCompletionHandler()-->Line_41 $$ recordCompletionHandler.waitUntilDelivered()[ FD ]
Line_143 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_149 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_7 $$ Pipe writePipe = Pipe.open()-->Line_8 $$ GatheringByteChannel gatheringByteChannel = writePipe.sink()[ FD ]
Line_8 $$ GatheringByteChannel gatheringByteChannel = writePipe.sink()-->Line_119 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_156 $$ dataByteBuffer = receiveDatagram.getDataByteBuffer()-->Line_157 $$ Assert.assertArrayEquals(_data, dataByteBuffer.array())[ FD ]
Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_136 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_143 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_85 $$ BaseIntrabandHelper.addResponseWaitingDatagram(_selectorIntraband, requestDatagram)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_136 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_100 $$ DatagramHelper.setCompletionHandler(requestDatagram, recordCompletionHandler)[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_103 $$ BaseIntrabandHelper.addResponseWaitingDatagram(_selectorIntraband, requestDatagram)[ FD ]
Line_114 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_136 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_98 $$ DatagramHelper.setCompletionTypes(requestDatagram, EnumSet.noneOf(CompletionType.class))[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_84 $$ DatagramHelper.setTimeout(requestDatagram, 10000)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_101 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_67 $$ recordCompletionHandler = new RecordCompletionHandler()-->Line_99 $$ recordCompletionHandler = new RecordCompletionHandler()[ FD ]
Line_35 $$ RecordCompletionHandler<Object> recordCompletionHandler = new RecordCompletionHandler()-->Line_81 $$ recordCompletionHandler = new RecordCompletionHandler()[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_143 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)[ FD ]
Line_11 $$ long sequenceId = 100-->Line_40 $$ DatagramHelper.writeTo(DatagramHelper.createACKResponseDatagram(sequenceId), gatheringByteChannel)[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_116 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_116 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_80 $$ DatagramHelper.setCompletionTypes(requestDatagram, EnumSet.noneOf(CompletionType.class))[ FD ]
Line_143 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_144 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_11 $$ long sequenceId = 100-->Line_83 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_11 $$ long sequenceId = 100-->Line_58 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_71 $$ DatagramHelper.setTimeout(requestDatagram, 10000)[ FD ]
Line_123 $$ Datagram ackResponseDatagram = IntrabandTestUtil.readDatagramFully(scatteringByteChannel)-->Line_125 $$ Assert.assertTrue(DatagramHelper.isAckResponse(ackResponseDatagram))[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_115 $$ DatagramHelper.setAckRequest(requestDatagram)[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_82 $$ DatagramHelper.setCompletionHandler(requestDatagram, recordCompletionHandler)[ FD ]
Line_11 $$ long sequenceId = 100-->Line_144 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_114 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_132 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_75 $$ Assert.assertSame(DatagramHelper.getAttachment(requestDatagram), recordCompletionHandler.getAttachment())[ FD ]
Line_132 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_144 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_8 $$ GatheringByteChannel gatheringByteChannel = writePipe.sink()-->Line_161 $$ gatheringByteChannel.close()[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_100 $$ DatagramHelper.setCompletionHandler(requestDatagram, recordCompletionHandler)[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_114 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)[ FD ]
Line_114 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_149 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_8 $$ GatheringByteChannel gatheringByteChannel = writePipe.sink()-->Line_27 $$ DatagramHelper.writeTo(DatagramHelper.createACKResponseDatagram(sequenceId), gatheringByteChannel)[ FD ]
Line_9 $$ ScatteringByteChannel scatteringByteChannel = readPipe.source()-->Line_123 $$ Datagram ackResponseDatagram = IntrabandTestUtil.readDatagramFully(scatteringByteChannel)[ FD ]
Line_35 $$ RecordCompletionHandler<Object> recordCompletionHandler = new RecordCompletionHandler()-->Line_68 $$ DatagramHelper.setCompletionHandler(requestDatagram, recordCompletionHandler)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_80 $$ DatagramHelper.setCompletionTypes(requestDatagram, EnumSet.noneOf(CompletionType.class))[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_69 $$ DatagramHelper.setCompletionTypes(requestDatagram, EnumSet.of(CompletionType.REPLIED))[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_82 $$ DatagramHelper.setCompletionHandler(requestDatagram, recordCompletionHandler)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_144 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_114 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_144 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_85 $$ BaseIntrabandHelper.addResponseWaitingDatagram(_selectorIntraband, requestDatagram)[ FD ]
Line_8 $$ GatheringByteChannel gatheringByteChannel = writePipe.sink()-->Line_47 $$ DatagramHelper.writeTo(Datagram.createResponseDatagram(requestDatagram, _data), gatheringByteChannel)[ FD ]
Line_35 $$ RecordCompletionHandler<Object> recordCompletionHandler = new RecordCompletionHandler()-->Line_42 $$ Assert.assertSame(DatagramHelper.getAttachment(requestDatagram), recordCompletionHandler.getAttachment())[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_58 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_119 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_11 $$ long sequenceId = 100-->Line_37 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_106 $$ DatagramHelper.writeTo(Datagram.createResponseDatagram(requestDatagram, _data), gatheringByteChannel)[ FD ]
Line_114 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_133 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_9 $$ ScatteringByteChannel scatteringByteChannel = readPipe.source()-->Line_162 $$ scatteringByteChannel.close()[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_132 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)[ FD ]
Line_35 $$ RecordCompletionHandler<Object> recordCompletionHandler = new RecordCompletionHandler()-->Line_75 $$ Assert.assertSame(DatagramHelper.getAttachment(requestDatagram), recordCompletionHandler.getAttachment())[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_149 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_133 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_114 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_115 $$ DatagramHelper.setAckRequest(requestDatagram)[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_83 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_145 $$ RecordDatagramReceiveHandler recordDatagramReceiveHandler = new RecordDatagramReceiveHandler()-->Line_146 $$ _selectorIntraband.registerDatagramReceiveHandler(_TYPE, recordDatagramReceiveHandler)[ FD ]
Line_67 $$ recordCompletionHandler = new RecordCompletionHandler()-->Line_81 $$ recordCompletionHandler = new RecordCompletionHandler()[ FD ]
Line_132 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_136 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_11 $$ long sequenceId = 100-->Line_124 $$ Assert.assertEquals(sequenceId, DatagramHelper.getSequenceId(ackResponseDatagram))[ FD ]
Line_35 $$ RecordCompletionHandler<Object> recordCompletionHandler = new RecordCompletionHandler()-->Line_99 $$ recordCompletionHandler = new RecordCompletionHandler()[ FD ]
Line_114 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_116 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_115 $$ DatagramHelper.setAckRequest(requestDatagram)[ FD ]
Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_143 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)[ FD ]
Line_114 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_143 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)[ FD ]
Line_153 $$ Datagram receiveDatagram = recordDatagramReceiveHandler.getReceiveDatagram()-->Line_156 $$ dataByteBuffer = receiveDatagram.getDataByteBuffer()[ FD ]
Line_97 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_103 $$ BaseIntrabandHelper.addResponseWaitingDatagram(_selectorIntraband, requestDatagram)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_132 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_72 $$ BaseIntrabandHelper.addResponseWaitingDatagram(_selectorIntraband, requestDatagram)[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_102 $$ DatagramHelper.setTimeout(requestDatagram, 10000)[ FD ]
Line_114 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_119 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_11 $$ long sequenceId = 100-->Line_101 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_81 $$ recordCompletionHandler = new RecordCompletionHandler()-->Line_82 $$ DatagramHelper.setCompletionHandler(requestDatagram, recordCompletionHandler)[ FD ]
Line_67 $$ recordCompletionHandler = new RecordCompletionHandler()-->Line_74 $$ recordCompletionHandler.waitUntilReplied()[ FD ]
Line_79 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_136 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_8 $$ GatheringByteChannel gatheringByteChannel = writePipe.sink()-->Line_73 $$ DatagramHelper.writeTo(Datagram.createResponseDatagram(requestDatagram, _data), gatheringByteChannel)[ FD ]
Line_8 $$ GatheringByteChannel gatheringByteChannel = writePipe.sink()-->Line_149 $$ DatagramHelper.writeTo(requestDatagram, gatheringByteChannel)[ FD ]
Line_35 $$ RecordCompletionHandler<Object> recordCompletionHandler = new RecordCompletionHandler()-->Line_74 $$ recordCompletionHandler.waitUntilReplied()[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_102 $$ DatagramHelper.setTimeout(requestDatagram, 10000)[ FD ]
Line_8 $$ GatheringByteChannel gatheringByteChannel = writePipe.sink()-->Line_88 $$ DatagramHelper.writeTo(Datagram.createResponseDatagram(requestDatagram, _data), gatheringByteChannel)[ FD ]
Line_67 $$ recordCompletionHandler = new RecordCompletionHandler()-->Line_75 $$ Assert.assertSame(DatagramHelper.getAttachment(requestDatagram), recordCompletionHandler.getAttachment())[ FD ]
Line_123 $$ Datagram ackResponseDatagram = IntrabandTestUtil.readDatagramFully(scatteringByteChannel)-->Line_126 $$ ByteBuffer dataByteBuffer = ackResponseDatagram.getDataByteBuffer()[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_70 $$ DatagramHelper.setSequenceId(requestDatagram, sequenceId)[ FD ]
Line_8 $$ GatheringByteChannel gatheringByteChannel = writePipe.sink()-->Line_40 $$ DatagramHelper.writeTo(DatagramHelper.createACKResponseDatagram(sequenceId), gatheringByteChannel)[ FD ]
Line_57 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)-->Line_114 $$ requestDatagram = Datagram.createRequestDatagram(_TYPE, _data)[ FD ]
