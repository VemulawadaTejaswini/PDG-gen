Line_4 $$ if (emailAddresses != null) -->Line_7 $$ if (!emailAddresses.isEmpty()) [ CD ]
Line_9 $$ for (int i = 0; i < emailAddresses.size(); i++) -->Line_11 $$ sb.append(emailAddress)[ CD ]
Line_2 $$ public void addForward(long companyId, long userId, List<Filter> filters, List<String> emailAddresses, boolean leaveCopy) -->Line_9 $$ for (int i = 0; i < emailAddresses.size(); i++) [ FD ]
Line_7 $$ if (!emailAddresses.isEmpty()) -->Line_9 $$ for (int i = 0; i < emailAddresses.size(); i++) [ CD ]
Line_8 $$ StringBundler sb = new StringBundler(emailAddresses.size() * 2)-->Line_12 $$ sb.append("\n")[ FD ]
Line_10 $$ String emailAddress = emailAddresses.get(i)-->Line_11 $$ sb.append(emailAddress)[ FD ]
Line_8 $$ StringBundler sb = new StringBundler(emailAddresses.size() * 2)-->Line_11 $$ sb.append(emailAddress)[ FD ]
Line_6 $$ File file = new File(home + "/" + userId + "/.forward")-->Line_16 $$ file.delete()[ FD ]
Line_9 $$ for (int i = 0; i < emailAddresses.size(); i++) -->Line_12 $$ sb.append("\n")[ CD ]
Line_2 $$ public void addForward(long companyId, long userId, List<Filter> filters, List<String> emailAddresses, boolean leaveCopy) -->Line_4 $$ if (emailAddresses != null) [ FD ]
Line_2 $$ public void addForward(long companyId, long userId, List<Filter> filters, List<String> emailAddresses, boolean leaveCopy) -->Line_8 $$ StringBundler sb = new StringBundler(emailAddresses.size() * 2)[ FD ]
Line_2 $$ public void addForward(long companyId, long userId, List<Filter> filters, List<String> emailAddresses, boolean leaveCopy) -->Line_7 $$ if (!emailAddresses.isEmpty()) [ FD ]
Line_7 $$ if (!emailAddresses.isEmpty()) -->Line_16 $$ file.delete()[ CD ]
Line_8 $$ StringBundler sb = new StringBundler(emailAddresses.size() * 2)-->Line_14 $$ FileUtil.write(file, sb.toString())[ FD ]
Line_4 $$ if (emailAddresses != null) -->Line_5 $$ String home = PropsUtil.get(PropsKeys.MAIL_HOOK_SENDMAIL_HOME)[ CD ]
Line_6 $$ File file = new File(home + "/" + userId + "/.forward")-->Line_14 $$ FileUtil.write(file, sb.toString())[ FD ]
Line_4 $$ if (emailAddresses != null) -->Line_6 $$ File file = new File(home + "/" + userId + "/.forward")[ CD ]
Line_9 $$ for (int i = 0; i < emailAddresses.size(); i++) -->Line_10 $$ String emailAddress = emailAddresses.get(i)[ FD ]
Line_7 $$ if (!emailAddresses.isEmpty()) -->Line_8 $$ StringBundler sb = new StringBundler(emailAddresses.size() * 2)[ CD ]
Line_2 $$ public void addForward(long companyId, long userId, List<Filter> filters, List<String> emailAddresses, boolean leaveCopy) -->Line_10 $$ String emailAddress = emailAddresses.get(i)[ FD ]
Line_7 $$ if (!emailAddresses.isEmpty()) -->Line_14 $$ FileUtil.write(file, sb.toString())[ CD ]
Line_9 $$ for (int i = 0; i < emailAddresses.size(); i++) -->Line_10 $$ String emailAddress = emailAddresses.get(i)[ CD ]
