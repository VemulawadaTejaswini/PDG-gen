Line_17 $$ session = openSession()-->Line_28 $$ session.getTransaction().commit()[ FD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_25 $$ List list = query.list()[ CD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_26 $$ assertNotNull(list)[ CD ]
Line_3 $$ Session session = openSession()-->Line_28 $$ session.getTransaction().commit()[ FD ]
Line_3 $$ Session session = openSession()-->Line_13 $$ session.flush()[ FD ]
Line_17 $$ session = openSession()-->Line_18 $$ session.beginTransaction()[ FD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_3 $$ Session session = openSession()[ CD ]
Line_8 $$ A savedA = new A()-->Line_9 $$ savedA.setName("Max")[ FD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_10 $$ session.save(savedA)[ CD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_12 $$ session.save(savedB)[ CD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_13 $$ session.flush()[ CD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_19 $$ Query query[ CD ]
Line_19 $$ Query query-->Line_21 $$ query = session.createSQLQuery("select identifier_column as [ FD ]
Line_21 $$ query = session.createSQLQuery("select identifier_column as -->Line_25 $$ List list = query.list()[ FD ]
Line_11 $$ B savedB = new B()-->Line_12 $$ session.save(savedB)[ FD ]
Line_3 $$ Session session = openSession()-->Line_14 $$ int count = session.createQuery("from A").list().size()[ FD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_18 $$ session.beginTransaction()[ CD ]
Line_17 $$ session = openSession()-->Line_21 $$ query = session.createSQLQuery("select identifier_column as [ FD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_27 $$ assertEquals(1, list.size())[ CD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_29 $$ session.close()[ CD ]
Line_3 $$ Session session = openSession()-->Line_17 $$ session = openSession()[ FD ]
Line_3 $$ Session session = openSession()-->Line_4 $$ session.beginTransaction()[ FD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_15 $$ session.getTransaction().commit()[ CD ]
Line_3 $$ Session session = openSession()-->Line_16 $$ session.close()[ FD ]
Line_3 $$ Session session = openSession()-->Line_18 $$ session.beginTransaction()[ FD ]
Line_20 $$ if (getDialect() instanceof TimesTenDialect) -->Line_23 $$ query = session.createSQLQuery("select identifier_column as [ CD ]
Line_3 $$ Session session = openSession()-->Line_5 $$ for (Object entity : session.createQuery("from A").list()) [ FD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_20 $$ if (getDialect() instanceof TimesTenDialect) [ CD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_14 $$ int count = session.createQuery("from A").list().size()[ CD ]
Line_25 $$ List list = query.list()-->Line_27 $$ assertEquals(1, list.size())[ FD ]
Line_19 $$ Query query-->Line_25 $$ List list = query.list()[ FD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_11 $$ B savedB = new B()[ CD ]
Line_3 $$ Session session = openSession()-->Line_23 $$ query = session.createSQLQuery("select identifier_column as [ FD ]
Line_17 $$ session = openSession()-->Line_29 $$ session.close()[ FD ]
Line_19 $$ Query query-->Line_23 $$ query = session.createSQLQuery("select identifier_column as [ FD ]
Line_25 $$ List list = query.list()-->Line_26 $$ assertNotNull(list)[ FD ]
Line_8 $$ A savedA = new A()-->Line_10 $$ session.save(savedA)[ FD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_17 $$ session = openSession()[ CD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_4 $$ session.beginTransaction()[ CD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_8 $$ A savedA = new A()[ CD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_9 $$ savedA.setName("Max")[ CD ]
Line_3 $$ Session session = openSession()-->Line_10 $$ session.save(savedA)[ FD ]
Line_3 $$ Session session = openSession()-->Line_12 $$ session.save(savedB)[ FD ]
Line_3 $$ Session session = openSession()-->Line_21 $$ query = session.createSQLQuery("select identifier_column as [ FD ]
Line_21 $$ query = session.createSQLQuery("select identifier_column as -->Line_23 $$ query = session.createSQLQuery("select identifier_column as [ FD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_28 $$ session.getTransaction().commit()[ CD ]
Line_5 $$ for (Object entity : session.createQuery("from A").list()) -->Line_6 $$ session.delete(entity)[ FD ]
Line_17 $$ session = openSession()-->Line_23 $$ query = session.createSQLQuery("select identifier_column as [ FD ]
Line_3 $$ Session session = openSession()-->Line_6 $$ session.delete(entity)[ FD ]
Line_2 $$ public void testEscapedJDBC() throws HibernateException, SQLException -->Line_16 $$ session.close()[ CD ]
Line_23 $$ query = session.createSQLQuery("select identifier_column as -->Line_25 $$ List list = query.list()[ FD ]
Line_20 $$ if (getDialect() instanceof TimesTenDialect) -->Line_21 $$ query = session.createSQLQuery("select identifier_column as [ CD ]
Line_3 $$ Session session = openSession()-->Line_15 $$ session.getTransaction().commit()[ FD ]
Line_3 $$ Session session = openSession()-->Line_29 $$ session.close()[ FD ]
