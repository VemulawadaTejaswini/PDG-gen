Line_15 $$ for (FileStatus fileStatus : listOfFileBlocks) -->Line_16 $$ if (SwiftObjectPath.fromPath(uri, fileStatus.getPath()).equals(SwiftObjectPath.fromPath(uri, file.getPath()))) [ FD ]
Line_13 $$ List<URI> locations = new ArrayList<URI>()-->Line_24 $$ if (locations.isEmpty()) [ FD ]
Line_24 $$ if (locations.isEmpty()) -->Line_28 $$ String[] topology = [ CD ]
Line_22 $$ locations = store.getObjectLocation(file.getPath())-->Line_32 $$ final String[] hosts = new String[locations.size()][ FD ]
Line_33 $$ int i = 0-->Line_37 $$ i++[ FD ]
Line_14 $$ if (listOfFileBlocks.length > 1) -->Line_22 $$ locations = store.getObjectLocation(file.getPath())[ CD ]
Line_13 $$ List<URI> locations = new ArrayList<URI>()-->Line_32 $$ final String[] hosts = new String[locations.size()][ FD ]
Line_9 $$ if (file.getLen() <= start) -->Line_10 $$ return new BlockLocation[0][ CD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_12 $$ final FileStatus[] listOfFileBlocks = store.listSubPaths(file.getPath(), false, true)[ CD ]
Line_13 $$ List<URI> locations = new ArrayList<URI>()-->Line_19 $$ locations.addAll(store.getObjectLocation(fileStatus.getPath()))[ FD ]
Line_22 $$ locations = store.getObjectLocation(file.getPath())-->Line_24 $$ if (locations.isEmpty()) [ FD ]
Line_24 $$ if (locations.isEmpty()) -->Line_27 $$ String[] host = [ CD ]
Line_24 $$ if (locations.isEmpty()) -->Line_25 $$ LOG.debug("No locations returned for " + file.getPath())[ CD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_12 $$ final FileStatus[] listOfFileBlocks = store.listSubPaths(file.getPath(), false, true)[ FD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_39 $$ return new BlockLocation[] [ FD ]
Line_34 $$ for (URI location : locations) -->Line_35 $$ hosts[i] = location.getHost()[ FD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_14 $$ if (listOfFileBlocks.length > 1) [ CD ]
Line_13 $$ List<URI> locations = new ArrayList<URI>()-->Line_22 $$ locations = store.getObjectLocation(file.getPath())[ FD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_9 $$ if (file.getLen() <= start) [ FD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_9 $$ if (file.getLen() <= start) [ CD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_6 $$ if (start < 0 || len < 0) [ CD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_16 $$ if (SwiftObjectPath.fromPath(uri, fileStatus.getPath()).equals(SwiftObjectPath.fromPath(uri, file.getPath()))) [ FD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_29 $$ return new BlockLocation[] [ FD ]
Line_22 $$ locations = store.getObjectLocation(file.getPath())-->Line_31 $$ final String[] names = new String[locations.size()][ FD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_39 $$ return new BlockLocation[] [ CD ]
Line_34 $$ for (URI location : locations) -->Line_36 $$ names[i] = location.getAuthority()[ FD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_33 $$ int i = 0[ CD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_24 $$ if (locations.isEmpty()) [ CD ]
Line_3 $$ if (file == null) -->Line_4 $$ return null[ CD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_3 $$ if (file == null) [ CD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_25 $$ LOG.debug("No locations returned for " + file.getPath())[ FD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_31 $$ final String[] names = new String[locations.size()][ CD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_13 $$ List<URI> locations = new ArrayList<URI>()[ CD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_3 $$ if (file == null) [ FD ]
Line_15 $$ for (FileStatus fileStatus : listOfFileBlocks) -->Line_19 $$ locations.addAll(store.getObjectLocation(fileStatus.getPath()))[ FD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_32 $$ final String[] hosts = new String[locations.size()][ CD ]
Line_24 $$ if (locations.isEmpty()) -->Line_26 $$ String[] name = [ CD ]
Line_24 $$ if (locations.isEmpty()) -->Line_29 $$ return new BlockLocation[] [ CD ]
Line_13 $$ List<URI> locations = new ArrayList<URI>()-->Line_31 $$ final String[] names = new String[locations.size()][ FD ]
Line_2 $$ public BlockLocation[] getFileBlockLocations(FileStatus file, long start, long len) throws IOException -->Line_22 $$ locations = store.getObjectLocation(file.getPath())[ FD ]
