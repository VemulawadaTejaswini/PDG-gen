Line_2 $$ public ResultMessage processPrepared(CQLStatement statement, QueryState queryState, QueryOptions options) throws RequestExecutionException, RequestValidationException -->Line_10 $$ metrics.preparedStatementsExecuted.inc()[ CD ]
Line_2 $$ public ResultMessage processPrepared(CQLStatement statement, QueryState queryState, QueryOptions options) throws RequestExecutionException, RequestValidationException -->Line_5 $$ if (variables.size() != statement.getBoundTerms())[ FD ]
Line_2 $$ public ResultMessage processPrepared(CQLStatement statement, QueryState queryState, QueryOptions options) throws RequestExecutionException, RequestValidationException -->Line_11 $$ return processStatement(statement, queryState, options)[ FD ]
Line_2 $$ public ResultMessage processPrepared(CQLStatement statement, QueryState queryState, QueryOptions options) throws RequestExecutionException, RequestValidationException -->Line_6 $$ throw new InvalidRequestException(String.format("there were %d markers(?) in CQL but %d bound variables", statement.getBoundTerms(), variables.size()))[ FD ]
Line_2 $$ public ResultMessage processPrepared(CQLStatement statement, QueryState queryState, QueryOptions options) throws RequestExecutionException, RequestValidationException -->Line_3 $$ List<ByteBuffer> variables = options.getValues()[ CD ]
Line_2 $$ public ResultMessage processPrepared(CQLStatement statement, QueryState queryState, QueryOptions options) throws RequestExecutionException, RequestValidationException -->Line_4 $$ if (!(variables.isEmpty() && (statement.getBoundTerms() == 0))) [ CD ]
Line_3 $$ List<ByteBuffer> variables = options.getValues()-->Line_8 $$ for (int i = 0; i < variables.size(); i++) logger.trace("[[ FD ]
Line_2 $$ public ResultMessage processPrepared(CQLStatement statement, QueryState queryState, QueryOptions options) throws RequestExecutionException, RequestValidationException -->Line_4 $$ if (!(variables.isEmpty() && (statement.getBoundTerms() == 0))) [ FD ]
Line_3 $$ List<ByteBuffer> variables = options.getValues()-->Line_5 $$ if (variables.size() != statement.getBoundTerms())[ FD ]
Line_3 $$ List<ByteBuffer> variables = options.getValues()-->Line_4 $$ if (!(variables.isEmpty() && (statement.getBoundTerms() == 0))) [ FD ]
Line_3 $$ List<ByteBuffer> variables = options.getValues()-->Line_8 $$ logger.trace("[[ FD ]
Line_7 $$ if (logger.isTraceEnabled())-->Line_8 $$ for (int i = 0; i < variables.size(); i++) logger.trace("[[ CD ]
Line_4 $$ if (!(variables.isEmpty() && (statement.getBoundTerms() == 0))) -->Line_5 $$ if (variables.size() != statement.getBoundTerms())[ CD ]
Line_2 $$ public ResultMessage processPrepared(CQLStatement statement, QueryState queryState, QueryOptions options) throws RequestExecutionException, RequestValidationException -->Line_11 $$ return processStatement(statement, queryState, options)[ CD ]
Line_3 $$ List<ByteBuffer> variables = options.getValues()-->Line_6 $$ throw new InvalidRequestException(String.format("there were %d markers(?) in CQL but %d bound variables", statement.getBoundTerms(), variables.size()))[ FD ]
Line_2 $$ public ResultMessage processPrepared(CQLStatement statement, QueryState queryState, QueryOptions options) throws RequestExecutionException, RequestValidationException -->Line_3 $$ List<ByteBuffer> variables = options.getValues()[ FD ]
Line_4 $$ if (!(variables.isEmpty() && (statement.getBoundTerms() == 0))) -->Line_7 $$ if (logger.isTraceEnabled())[ CD ]
