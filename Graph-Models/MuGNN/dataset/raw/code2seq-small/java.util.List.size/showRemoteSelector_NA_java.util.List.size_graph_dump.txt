Line_7 $$ ListPopup popup = new ListPopupImpl(new BaseListPopupStep<String>(null, remotes) -->Line_12 $$ if (myFireOnChangeAction != null && !myTargetEditor.isShowing()) [ CD ]
Line_7 $$ ListPopup popup = new ListPopupImpl(new BaseListPopupStep<String>(null, remotes) -->Line_11 $$ myRemoteRenderer.updateLinkText(selectedValue)[ FD ]
Line_7 $$ ListPopup popup = new ListPopupImpl(new BaseListPopupStep<String>(null, remotes) -->Line_30 $$ popup.show(new RelativePoint(component, point))[ FD ]
Line_2 $$ private void showRemoteSelector(@NotNull Component component, @NotNull Point point) -->Line_3 $$ final List<String> remotes = getRemotes()[ CD ]
Line_7 $$ ListPopup popup = new ListPopupImpl(new BaseListPopupStep<String>(null, remotes) -->Line_22 $$ super.cancel(e)[ CD ]
Line_7 $$ ListPopup popup = new ListPopupImpl(new BaseListPopupStep<String>(null, remotes) -->Line_11 $$ myRemoteRenderer.updateLinkText(selectedValue)[ CD ]
Line_23 $$ if (myTargetEditor.isShowing()) -->Line_26 $$ IdeFocusManager.getInstance(myProject).requestFocus(myTargetEditor, true)[ CD ]
Line_4 $$ if (remotes.size() <= 1) -->Line_5 $$ return[ CD ]
Line_7 $$ ListPopup popup = new ListPopupImpl(new BaseListPopupStep<String>(null, remotes) -->Line_16 $$ return super.onChosen(selectedValue, finalChoice)[ FD ]
Line_7 $$ ListPopup popup = new ListPopupImpl(new BaseListPopupStep<String>(null, remotes) -->Line_22 $$ super.cancel(e)[ FD ]
Line_7 $$ ListPopup popup = new ListPopupImpl(new BaseListPopupStep<String>(null, remotes) -->Line_16 $$ return super.onChosen(selectedValue, finalChoice)[ CD ]
Line_7 $$ ListPopup popup = new ListPopupImpl(new BaseListPopupStep<String>(null, remotes) -->Line_23 $$ if (myTargetEditor.isShowing()) [ CD ]
Line_2 $$ private void showRemoteSelector(@NotNull Component component, @NotNull Point point) -->Line_30 $$ popup.show(new RelativePoint(component, point))[ CD ]
Line_2 $$ private void showRemoteSelector(@NotNull Component component, @NotNull Point point) -->Line_4 $$ if (remotes.size() <= 1) [ CD ]
Line_3 $$ final List<String> remotes = getRemotes()-->Line_4 $$ if (remotes.size() <= 1) [ FD ]
Line_2 $$ private void showRemoteSelector(@NotNull Component component, @NotNull Point point) -->Line_7 $$ ListPopup popup = new ListPopupImpl(new BaseListPopupStep<String>(null, remotes) [ CD ]
