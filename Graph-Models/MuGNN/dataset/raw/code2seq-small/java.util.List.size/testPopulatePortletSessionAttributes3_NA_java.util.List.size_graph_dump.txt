Line_2 $$ public void testPopulatePortletSessionAttributes3() -->Line_14 $$ Assert.assertEquals(2, names.size())[ CD ]
Line_2 $$ public void testPopulatePortletSessionAttributes3() -->Line_4 $$ attributes.put(SPI.SPI_INSTANCE_PUBLICATION_KEY, new MockSPI())[ CD ]
Line_2 $$ public void testPopulatePortletSessionAttributes3() -->Line_5 $$ final List<String> names = new ArrayList()[ CD ]
Line_6 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() -->Line_9 $$ return super.getAttribute(name)[ FD ]
Line_3 $$ ConcurrentMap<String, Object> attributes = LocalProcessLauncher.ProcessContext.getAttributes()-->Line_4 $$ attributes.put(SPI.SPI_INSTANCE_PUBLICATION_KEY, new MockSPI())[ FD ]
Line_5 $$ final List<String> names = new ArrayList()-->Line_15 $$ Assert.assertEquals(WebKeys.PORTLET_SESSION, names.get(0))[ FD ]
Line_6 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() -->Line_8 $$ names.add(name)[ FD ]
Line_5 $$ final List<String> names = new ArrayList()-->Line_8 $$ names.add(name)[ FD ]
Line_2 $$ public void testPopulatePortletSessionAttributes3() -->Line_3 $$ ConcurrentMap<String, Object> attributes = LocalProcessLauncher.ProcessContext.getAttributes()[ CD ]
Line_2 $$ public void testPopulatePortletSessionAttributes3() -->Line_13 $$ SPIAgentRequest.populatePortletSessionAttributes(mockHttpServletRequest, mockHttpSession)[ CD ]
Line_2 $$ public void testPopulatePortletSessionAttributes3() -->Line_18 $$ Assert.assertFalse(enumeration.hasMoreElements())[ CD ]
Line_2 $$ public void testPopulatePortletSessionAttributes3() -->Line_6 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() [ CD ]
Line_5 $$ final List<String> names = new ArrayList()-->Line_16 $$ Assert.assertEquals(WebKeys.SPI_AGENT_REQUEST, names.get(1))[ FD ]
Line_6 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() -->Line_9 $$ return super.getAttribute(name)[ CD ]
Line_6 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() -->Line_13 $$ SPIAgentRequest.populatePortletSessionAttributes(mockHttpServletRequest, mockHttpSession)[ FD ]
Line_2 $$ public void testPopulatePortletSessionAttributes3() -->Line_15 $$ Assert.assertEquals(WebKeys.PORTLET_SESSION, names.get(0))[ CD ]
Line_5 $$ final List<String> names = new ArrayList()-->Line_14 $$ Assert.assertEquals(2, names.size())[ FD ]
Line_6 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() -->Line_8 $$ names.add(name)[ CD ]
Line_2 $$ public void testPopulatePortletSessionAttributes3() -->Line_19 $$ enumeration = mockHttpSession.getAttributeNames()[ CD ]
Line_6 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest() -->Line_17 $$ Enumeration<String> enumeration = mockHttpServletRequest.getAttributeNames()[ FD ]
Line_2 $$ public void testPopulatePortletSessionAttributes3() -->Line_17 $$ Enumeration<String> enumeration = mockHttpServletRequest.getAttributeNames()[ CD ]
Line_2 $$ public void testPopulatePortletSessionAttributes3() -->Line_20 $$ Assert.assertFalse(enumeration.hasMoreElements())[ CD ]
Line_2 $$ public void testPopulatePortletSessionAttributes3() -->Line_16 $$ Assert.assertEquals(WebKeys.SPI_AGENT_REQUEST, names.get(1))[ CD ]
