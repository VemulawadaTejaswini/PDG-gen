Line_13 $$ final List<String> keysOrder = new ArrayList<String>(propertyKeys)-->Line_23 $$ final String key = keysOrder.get(trimmedIndex)[ FD ]
Line_3 $$ if (getSelectedNodes().size() != 1) -->Line_4 $$ return[ CD ]
Line_7 $$ if (selectedProperty == null) -->Line_8 $$ return[ CD ]
Line_2 $$ public void selectNextIncompleteProperty() -->Line_7 $$ if (selectedProperty == null) [ CD ]
Line_23 $$ final String key = keysOrder.get(trimmedIndex)-->Line_25 $$ selectProperty(key)[ FD ]
Line_13 $$ final List<String> keysOrder = new ArrayList<String>(propertyKeys)-->Line_15 $$ Collections.sort(keysOrder)[ FD ]
Line_21 $$ for (int i = 1; i < keysOrder.size(); i++) -->Line_22 $$ int trimmedIndex = (i + idx) % keysOrder.size()[ CD ]
Line_6 $$ final IProperty selectedProperty = getSelectedProperty()-->Line_17 $$ final String currentKey = selectedProperty.getKey()[ FD ]
Line_2 $$ public void selectNextIncompleteProperty() -->Line_3 $$ if (getSelectedNodes().size() != 1) [ CD ]
Line_24 $$ if (!incompletePropertyInspection.isPropertyComplete(key, myResourceBundle)) -->Line_25 $$ selectProperty(key)[ CD ]
Line_13 $$ final List<String> keysOrder = new ArrayList<String>(propertyKeys)-->Line_22 $$ int trimmedIndex = (i + idx) % keysOrder.size()[ FD ]
Line_2 $$ public void selectNextIncompleteProperty() -->Line_19 $$ LOG.assertTrue(idx != -1)[ CD ]
Line_21 $$ for (int i = 1; i < keysOrder.size(); i++) -->Line_24 $$ if (!incompletePropertyInspection.isPropertyComplete(key, myResourceBundle)) [ CD ]
Line_23 $$ final String key = keysOrder.get(trimmedIndex)-->Line_24 $$ if (!incompletePropertyInspection.isPropertyComplete(key, myResourceBundle)) [ FD ]
Line_20 $$ final IncompletePropertyInspection incompletePropertyInspection = IncompletePropertyInspection.getInstance(myResourceBundle.getDefaultPropertiesFile().getContainingFile())-->Line_24 $$ if (!incompletePropertyInspection.isPropertyComplete(key, myResourceBundle)) [ FD ]
Line_2 $$ public void selectNextIncompleteProperty() -->Line_10 $$ final ResourceBundleFileStructureViewElement root = (ResourceBundleFileStructureViewElement) myStructureViewComponent.getTreeModel().getRoot()[ CD ]
Line_6 $$ final IProperty selectedProperty = getSelectedProperty()-->Line_7 $$ if (selectedProperty == null) [ FD ]
Line_2 $$ public void selectNextIncompleteProperty() -->Line_12 $$ final boolean isAlphaSorted = myStructureViewComponent.isActionActive(Sorter.ALPHA_SORTER_ID)[ CD ]
Line_14 $$ if (isAlphaSorted) -->Line_15 $$ Collections.sort(keysOrder)[ CD ]
Line_2 $$ public void selectNextIncompleteProperty() -->Line_20 $$ final IncompletePropertyInspection incompletePropertyInspection = IncompletePropertyInspection.getInstance(myResourceBundle.getDefaultPropertiesFile().getContainingFile())[ CD ]
Line_24 $$ if (!incompletePropertyInspection.isPropertyComplete(key, myResourceBundle)) -->Line_26 $$ return[ CD ]
Line_17 $$ final String currentKey = selectedProperty.getKey()-->Line_18 $$ final int idx = keysOrder.indexOf(currentKey)[ FD ]
Line_2 $$ public void selectNextIncompleteProperty() -->Line_17 $$ final String currentKey = selectedProperty.getKey()[ CD ]
Line_13 $$ final List<String> keysOrder = new ArrayList<String>(propertyKeys)-->Line_21 $$ for (int i = 1; i < keysOrder.size(); i++) [ FD ]
Line_2 $$ public void selectNextIncompleteProperty() -->Line_14 $$ if (isAlphaSorted) [ CD ]
Line_2 $$ public void selectNextIncompleteProperty() -->Line_6 $$ final IProperty selectedProperty = getSelectedProperty()[ CD ]
Line_10 $$ final ResourceBundleFileStructureViewElement root = (ResourceBundleFileStructureViewElement) myStructureViewComponent.getTreeModel().getRoot()-->Line_11 $$ final Set<String> propertyKeys = ResourceBundleFileStructureViewElement.getPropertiesMap(myResourceBundle, root.isShowOnlyIncomplete()).keySet()[ FD ]
Line_21 $$ for (int i = 1; i < keysOrder.size(); i++) -->Line_23 $$ final String key = keysOrder.get(trimmedIndex)[ CD ]
Line_13 $$ final List<String> keysOrder = new ArrayList<String>(propertyKeys)-->Line_18 $$ final int idx = keysOrder.indexOf(currentKey)[ FD ]
Line_2 $$ public void selectNextIncompleteProperty() -->Line_11 $$ final Set<String> propertyKeys = ResourceBundleFileStructureViewElement.getPropertiesMap(myResourceBundle, root.isShowOnlyIncomplete()).keySet()[ CD ]
Line_2 $$ public void selectNextIncompleteProperty() -->Line_18 $$ final int idx = keysOrder.indexOf(currentKey)[ CD ]
Line_2 $$ public void selectNextIncompleteProperty() -->Line_21 $$ for (int i = 1; i < keysOrder.size(); i++) [ CD ]
Line_2 $$ public void selectNextIncompleteProperty() -->Line_13 $$ final List<String> keysOrder = new ArrayList<String>(propertyKeys)[ CD ]
Line_22 $$ int trimmedIndex = (i + idx) % keysOrder.size()-->Line_23 $$ final String key = keysOrder.get(trimmedIndex)[ FD ]
