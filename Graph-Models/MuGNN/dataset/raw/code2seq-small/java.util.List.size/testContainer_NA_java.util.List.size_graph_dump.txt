Line_6 $$ Container c = new Container()-->Line_22 $$ c.setManyToMany(m2m)[ FD ]
Line_4 $$ Session s = openSession()-->Line_138 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_50 $$ s = openSession()-->Line_87 $$ ccic2.setSimple((Simple) s.load(Simple.class, new Long(0)))[ FD ]
Line_29 $$ ccic = new Container.ContainerInnerClass()-->Line_43 $$ ccic.setMany(many)[ FD ]
Line_50 $$ s = openSession()-->Line_131 $$ doDelete(s, "from Simple")[ FD ]
Line_4 $$ Session s = openSession()-->Line_47 $$ s.save(c)[ FD ]
Line_6 $$ Container c = new Container()-->Line_61 $$ System.out.println(c.getOneToMany())[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_79 $$ c.getOneToMany().set(1, o1)[ FD ]
Line_6 $$ Container c = new Container()-->Line_95 $$ System.out.println(c.getManyToMany())[ FD ]
Line_17 $$ List m2m = new ArrayList()-->Line_20 $$ m2m.add(y)[ FD ]
Line_51 $$ t = s.beginTransaction()-->Line_134 $$ t.commit()[ FD ]
Line_51 $$ t = s.beginTransaction()-->Line_59 $$ t = s.beginTransaction()[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_6 $$ Container c = new Container()-->Line_119 $$ assertTrue(((Container.ContainerInnerClass) c.getComponents().get(0)).getName().equals("a different name"))[ FD ]
Line_58 $$ s = openSession()-->Line_92 $$ t = s.beginTransaction()[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_77 $$ Object o2 = c.getOneToMany().remove(2)[ FD ]
Line_6 $$ Container c = new Container()-->Line_67 $$ assertTrue(c.getComponents().size() == 3)[ FD ]
Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_118 $$ assertTrue(c.getComposites().size() == 2)[ FD ]
Line_23 $$ List comps = new ArrayList()-->Line_27 $$ comps.add(ccic)[ FD ]
Line_6 $$ Container c = new Container()-->Line_139 $$ assertTrue(c.getComponents().size() == 0)[ FD ]
Line_50 $$ s = openSession()-->Line_110 $$ t = s.beginTransaction()[ FD ]
Line_109 $$ s = openSession()-->Line_136 $$ s = openSession()[ FD ]
Line_91 $$ s = openSession()-->Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_91 $$ s = openSession()-->Line_132 $$ doDelete(s, "from Many")[ FD ]
Line_6 $$ Container c = new Container()-->Line_62 $$ System.out.println(c.getManyToMany())[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_112 $$ System.out.println(c.getOneToMany())[ FD ]
Line_109 $$ s = openSession()-->Line_133 $$ doDelete(s, "from One")[ FD ]
Line_92 $$ t = s.beginTransaction()-->Line_134 $$ t.commit()[ FD ]
Line_9 $$ Simple y = new Simple(Long.valueOf(0))-->Line_16 $$ o2m.add(y)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_94 $$ System.out.println(c.getOneToMany())[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_113 $$ System.out.println(c.getManyToMany())[ FD ]
Line_6 $$ Container c = new Container()-->Line_142 $$ assertTrue(c.getManyToMany().size() == 0)[ FD ]
Line_24 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_32 $$ comps.add(ccic)[ FD ]
Line_6 $$ Container c = new Container()-->Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_70 $$ assertTrue(c.getManyToMany().size() == 3)[ FD ]
Line_50 $$ s = openSession()-->Line_145 $$ s.close()[ FD ]
Line_138 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_143 $$ s.delete(c)[ FD ]
Line_59 $$ t = s.beginTransaction()-->Line_144 $$ t.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_87 $$ ccic2.setSimple((Simple) s.load(Simple.class, new Long(0)))[ FD ]
Line_58 $$ s = openSession()-->Line_108 $$ s.close()[ FD ]
Line_58 $$ s = openSession()-->Line_131 $$ doDelete(s, "from Simple")[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_141 $$ assertTrue(c.getOneToMany().size() == 0)[ FD ]
Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_130 $$ c.getComponents().clear()[ FD ]
Line_17 $$ List m2m = new ArrayList()-->Line_18 $$ m2m.add(x)[ FD ]
Line_4 $$ Session s = openSession()-->Line_57 $$ s.close()[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_96 $$ System.out.println(c.getComponents())[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_72 $$ assertTrue(c.getOneToMany().get(2) != null)[ FD ]
Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_140 $$ assertTrue(c.getComposites().size() == 0)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_59 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Container c = new Container()-->Line_115 $$ System.out.println(c.getComposites())[ FD ]
Line_23 $$ List comps = new ArrayList()-->Line_28 $$ comps.add(null)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_129 $$ c.getComposites().clear()[ FD ]
Line_6 $$ Container c = new Container()-->Line_114 $$ System.out.println(c.getComponents())[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_114 $$ System.out.println(c.getComponents())[ FD ]
Line_91 $$ s = openSession()-->Line_109 $$ s = openSession()[ FD ]
Line_120 $$ Iterator iter = c.getComposites().iterator()-->Line_122 $$ while (iter.hasNext()) [ FD ]
Line_6 $$ Container c = new Container()-->Line_105 $$ ((Container.ContainerInnerClass) c.getComponents().get(0)).setName("a different name")[ FD ]
Line_29 $$ ccic = new Container.ContainerInnerClass()-->Line_34 $$ compos.add(ccic)[ FD ]
Line_4 $$ Session s = openSession()-->Line_58 $$ s = openSession()[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_139 $$ assertTrue(c.getComponents().size() == 0)[ FD ]
Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_142 $$ assertTrue(c.getManyToMany().size() == 0)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_76 $$ Object o1 = c.getOneToMany().get(0)[ FD ]
Line_50 $$ s = openSession()-->Line_54 $$ List res = s.createQuery("select c, s from ContainerX as c join c.components as ce join ce.simple as s where ce.name='foo'").list()[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_95 $$ System.out.println(c.getManyToMany())[ FD ]
Line_50 $$ s = openSession()-->Line_59 $$ t = s.beginTransaction()[ FD ]
Line_120 $$ Iterator iter = c.getComposites().iterator()-->Line_123 $$ if (((Container.ContainerInnerClass) iter.next()).getName().equals("once again"))[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_143 $$ s.delete(c)[ FD ]
Line_138 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_142 $$ assertTrue(c.getManyToMany().size() == 0)[ FD ]
Line_110 $$ t = s.beginTransaction()-->Line_137 $$ t = s.beginTransaction()[ FD ]
Line_76 $$ Object o1 = c.getOneToMany().get(0)-->Line_79 $$ c.getOneToMany().set(1, o1)[ FD ]
Line_58 $$ s = openSession()-->Line_110 $$ t = s.beginTransaction()[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_106 $$ ((Container.ContainerInnerClass) c.getComposites().iterator().next()).setName("once again")[ FD ]
Line_58 $$ s = openSession()-->Line_90 $$ s.close()[ FD ]
Line_58 $$ s = openSession()-->Line_59 $$ t = s.beginTransaction()[ FD ]
Line_50 $$ s = openSession()-->Line_51 $$ t = s.beginTransaction()[ FD ]
Line_109 $$ s = openSession()-->Line_138 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_58 $$ s = openSession()-->Line_135 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ Transaction t = s.beginTransaction()[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_69 $$ assertTrue(c.getOneToMany().size() == 3)[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_13 $$ List o2m = new ArrayList()-->Line_16 $$ o2m.add(y)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_102 $$ assertTrue(c.getManyToMany().size() == 3)[ FD ]
Line_91 $$ s = openSession()-->Line_137 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Container c = new Container()-->Line_104 $$ assertTrue(c.getOneToMany().get(1) != null)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_107 $$ t.commit()[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_141 $$ assertTrue(c.getOneToMany().size() == 0)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_113 $$ System.out.println(c.getManyToMany())[ FD ]
Line_38 $$ Many many = new Many()-->Line_42 $$ many.setOne(one)[ FD ]
Line_4 $$ Session s = openSession()-->Line_50 $$ s = openSession()[ FD ]
Line_4 $$ Session s = openSession()-->Line_52 $$ Long count = (Long) s.createQuery("select count(*) from ContainerX as c join c.components as ce join ce.simple as s where ce.name='foo'").uniqueResult()[ FD ]
Line_29 $$ ccic = new Container.ContainerInnerClass()-->Line_32 $$ comps.add(ccic)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_127 $$ c.getOneToMany().clear()[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_120 $$ Iterator iter = c.getComposites().iterator()[ FD ]
Line_122 $$ while (iter.hasNext()) -->Line_123 $$ if (((Container.ContainerInnerClass) iter.next()).getName().equals("once again"))[ CD ]
Line_6 $$ Container c = new Container()-->Line_96 $$ System.out.println(c.getComponents())[ FD ]
Line_91 $$ s = openSession()-->Line_92 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Container c = new Container()-->Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_91 $$ s = openSession()[ FD ]
Line_7 $$ Simple x = new Simple(Long.valueOf(1))-->Line_11 $$ s.save(x)[ FD ]
Line_137 $$ t = s.beginTransaction()-->Line_144 $$ t.commit()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_56 $$ t.commit()[ FD ]
Line_110 $$ t = s.beginTransaction()-->Line_144 $$ t.commit()[ FD ]
Line_91 $$ s = openSession()-->Line_145 $$ s.close()[ FD ]
Line_6 $$ Container c = new Container()-->Line_78 $$ c.getOneToMany().set(0, o2)[ FD ]
Line_54 $$ List res = s.createQuery("select c, s from ContainerX as c join c.components as ce join ce.simple as s where ce.name='foo'").list()-->Line_55 $$ assertTrue(res.size() == 1)[ FD ]
Line_29 $$ ccic = new Container.ContainerInnerClass()-->Line_31 $$ ccic.setSimple(y)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_140 $$ assertTrue(c.getComposites().size() == 0)[ FD ]
Line_83 $$ Container.ContainerInnerClass ccic2 = new Container.ContainerInnerClass()-->Line_84 $$ ccic2.setName("foo")[ FD ]
Line_50 $$ s = openSession()-->Line_109 $$ s = openSession()[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_82 $$ c.getManyToMany().set(0, c.getManyToMany().get(2))[ FD ]
Line_91 $$ s = openSession()-->Line_135 $$ s.close()[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_63 $$ System.out.println(c.getComponents())[ FD ]
Line_76 $$ Object o1 = c.getOneToMany().get(0)-->Line_81 $$ c.getComponents().set(0, o1)[ FD ]
Line_6 $$ Container c = new Container()-->Line_69 $$ assertTrue(c.getOneToMany().size() == 3)[ FD ]
Line_109 $$ s = openSession()-->Line_131 $$ doDelete(s, "from Simple")[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_104 $$ assertTrue(c.getOneToMany().get(1) != null)[ FD ]
Line_13 $$ List o2m = new ArrayList()-->Line_14 $$ o2m.add(x)[ FD ]
Line_59 $$ t = s.beginTransaction()-->Line_107 $$ t.commit()[ FD ]
Line_6 $$ Container c = new Container()-->Line_127 $$ c.getOneToMany().clear()[ FD ]
Line_24 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_66 $$ assertTrue(ccic.getMany().getOne() == ccic.getOne())[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_103 $$ assertTrue(c.getOneToMany().get(0) != null)[ FD ]
Line_4 $$ Session s = openSession()-->Line_110 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_48 $$ t.commit()[ FD ]
Line_50 $$ s = openSession()-->Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_50 $$ s = openSession()-->Line_58 $$ s = openSession()[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_94 $$ System.out.println(c.getOneToMany())[ FD ]
Line_138 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_141 $$ assertTrue(c.getOneToMany().size() == 0)[ FD ]
Line_4 $$ Session s = openSession()-->Line_45 $$ s.save(one)[ FD ]
Line_7 $$ Simple x = new Simple(Long.valueOf(1))-->Line_26 $$ ccic.setSimple(x)[ FD ]
Line_24 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_43 $$ ccic.setMany(many)[ FD ]
Line_92 $$ t = s.beginTransaction()-->Line_137 $$ t = s.beginTransaction()[ FD ]
Line_50 $$ s = openSession()-->Line_57 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_137 $$ t = s.beginTransaction()[ FD ]
Line_50 $$ s = openSession()-->Line_133 $$ doDelete(s, "from One")[ FD ]
Line_73 $$ for (int i = 0; i < 3; i++) -->Line_74 $$ assertTrue(c.getManyToMany().get(i) == c.getOneToMany().get(i))[ CD ]
Line_4 $$ Session s = openSession()-->Line_132 $$ doDelete(s, "from Many")[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_97 $$ System.out.println(c.getComposites())[ FD ]
Line_4 $$ Session s = openSession()-->Line_133 $$ doDelete(s, "from One")[ FD ]
Line_51 $$ t = s.beginTransaction()-->Line_110 $$ t = s.beginTransaction()[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_138 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_101 $$ assertTrue(c.getOneToMany().size() == 2)[ FD ]
Line_109 $$ s = openSession()-->Line_137 $$ t = s.beginTransaction()[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_127 $$ c.getOneToMany().clear()[ FD ]
Line_38 $$ Many many = new Many()-->Line_43 $$ ccic.setMany(many)[ FD ]
Line_50 $$ s = openSession()-->Line_137 $$ t = s.beginTransaction()[ FD ]
Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_115 $$ System.out.println(c.getComposites())[ FD ]
Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_139 $$ assertTrue(c.getComponents().size() == 0)[ FD ]
Line_6 $$ Container c = new Container()-->Line_102 $$ assertTrue(c.getManyToMany().size() == 3)[ FD ]
Line_6 $$ Container c = new Container()-->Line_63 $$ System.out.println(c.getComponents())[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_106 $$ ((Container.ContainerInnerClass) c.getComposites().iterator().next()).setName("once again")[ FD ]
Line_136 $$ s = openSession()-->Line_145 $$ s.close()[ FD ]
Line_24 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_31 $$ ccic.setSimple(y)[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_114 $$ System.out.println(c.getComponents())[ FD ]
Line_6 $$ Container c = new Container()-->Line_74 $$ assertTrue(c.getManyToMany().get(i) == c.getOneToMany().get(i))[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_103 $$ assertTrue(c.getOneToMany().get(0) != null)[ FD ]
Line_58 $$ s = openSession()-->Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_59 $$ t = s.beginTransaction()-->Line_92 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_144 $$ t.commit()[ FD ]
Line_51 $$ t = s.beginTransaction()-->Line_107 $$ t.commit()[ FD ]
Line_58 $$ s = openSession()-->Line_145 $$ s.close()[ FD ]
Line_24 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_29 $$ ccic = new Container.ContainerInnerClass()[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_100 $$ assertTrue(c.getComposites().size() == 2)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_65 $$ ccic = (Container.ContainerInnerClass) c.getComponents().get(2)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_128 $$ c.getManyToMany().clear()[ FD ]
Line_91 $$ s = openSession()-->Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_29 $$ ccic = new Container.ContainerInnerClass()-->Line_65 $$ ccic = (Container.ContainerInnerClass) c.getComponents().get(2)[ FD ]
Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_114 $$ System.out.println(c.getComponents())[ FD ]
Line_109 $$ s = openSession()-->Line_145 $$ s.close()[ FD ]
Line_136 $$ s = openSession()-->Line_143 $$ s.delete(c)[ FD ]
Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_141 $$ assertTrue(c.getOneToMany().size() == 0)[ FD ]
Line_24 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_26 $$ ccic.setSimple(x)[ FD ]
Line_4 $$ Session s = openSession()-->Line_131 $$ doDelete(s, "from Simple")[ FD ]
Line_6 $$ Container c = new Container()-->Line_128 $$ c.getManyToMany().clear()[ FD ]
Line_24 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_34 $$ compos.add(ccic)[ FD ]
Line_50 $$ s = openSession()-->Line_92 $$ t = s.beginTransaction()[ FD ]
Line_58 $$ s = openSession()-->Line_132 $$ doDelete(s, "from Many")[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_50 $$ s = openSession()-->Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_58 $$ s = openSession()-->Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_37 $$ One one = new One()-->Line_85 $$ ccic2.setOne(one)[ FD ]
Line_4 $$ Session s = openSession()-->Line_108 $$ s.close()[ FD ]
Line_6 $$ Container c = new Container()-->Line_129 $$ c.getComposites().clear()[ FD ]
Line_4 $$ Session s = openSession()-->Line_54 $$ List res = s.createQuery("select c, s from ContainerX as c join c.components as ce join ce.simple as s where ce.name='foo'").list()[ FD ]
Line_91 $$ s = openSession()-->Line_138 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_101 $$ assertTrue(c.getOneToMany().size() == 2)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_139 $$ assertTrue(c.getComponents().size() == 0)[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_96 $$ System.out.println(c.getComponents())[ FD ]
Line_58 $$ s = openSession()-->Line_138 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_119 $$ assertTrue(((Container.ContainerInnerClass) c.getComponents().get(0)).getName().equals("a different name"))[ FD ]
Line_6 $$ Container c = new Container()-->Line_82 $$ c.getManyToMany().set(0, c.getManyToMany().get(2))[ FD ]
Line_51 $$ t = s.beginTransaction()-->Line_137 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Container c = new Container()-->Line_65 $$ ccic = (Container.ContainerInnerClass) c.getComponents().get(2)[ FD ]
Line_58 $$ s = openSession()-->Line_87 $$ ccic2.setSimple((Simple) s.load(Simple.class, new Long(0)))[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_112 $$ System.out.println(c.getOneToMany())[ FD ]
Line_77 $$ Object o2 = c.getOneToMany().remove(2)-->Line_78 $$ c.getOneToMany().set(0, o2)[ FD ]
Line_6 $$ Container c = new Container()-->Line_141 $$ assertTrue(c.getOneToMany().size() == 0)[ FD ]
Line_80 $$ o1 = c.getComponents().remove(2)-->Line_81 $$ c.getComponents().set(0, o1)[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_128 $$ c.getManyToMany().clear()[ FD ]
Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_120 $$ Iterator iter = c.getComposites().iterator()[ FD ]
Line_4 $$ Session s = openSession()-->Line_136 $$ s = openSession()[ FD ]
Line_91 $$ s = openSession()-->Line_108 $$ s.close()[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_97 $$ System.out.println(c.getComposites())[ FD ]
Line_38 $$ Many many = new Many()-->Line_40 $$ manies.add(many)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_81 $$ c.getComponents().set(0, o1)[ FD ]
Line_29 $$ ccic = new Container.ContainerInnerClass()-->Line_44 $$ ccic.setOne(one)[ FD ]
Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_129 $$ c.getComposites().clear()[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_130 $$ c.getComponents().clear()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_134 $$ t.commit()[ FD ]
Line_92 $$ t = s.beginTransaction()-->Line_110 $$ t = s.beginTransaction()[ FD ]
Line_50 $$ s = openSession()-->Line_143 $$ s.delete(c)[ FD ]
Line_59 $$ t = s.beginTransaction()-->Line_137 $$ t = s.beginTransaction()[ FD ]
Line_39 $$ HashSet manies = new HashSet()-->Line_40 $$ manies.add(many)[ FD ]
Line_9 $$ Simple y = new Simple(Long.valueOf(0))-->Line_31 $$ ccic.setSimple(y)[ FD ]
Line_6 $$ Container c = new Container()-->Line_80 $$ o1 = c.getComponents().remove(2)[ FD ]
Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_143 $$ s.delete(c)[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_115 $$ System.out.println(c.getComposites())[ FD ]
Line_6 $$ Container c = new Container()-->Line_106 $$ ((Container.ContainerInnerClass) c.getComposites().iterator().next()).setName("once again")[ FD ]
Line_51 $$ t = s.beginTransaction()-->Line_92 $$ t = s.beginTransaction()[ FD ]
Line_58 $$ s = openSession()-->Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_113 $$ System.out.println(c.getManyToMany())[ FD ]
Line_6 $$ Container c = new Container()-->Line_118 $$ assertTrue(c.getComposites().size() == 2)[ FD ]
Line_50 $$ s = openSession()-->Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_119 $$ assertTrue(((Container.ContainerInnerClass) c.getComponents().get(0)).getName().equals("a different name"))[ FD ]
Line_4 $$ Session s = openSession()-->Line_145 $$ s.close()[ FD ]
Line_6 $$ Container c = new Container()-->Line_81 $$ c.getComponents().set(0, o1)[ FD ]
Line_7 $$ Simple x = new Simple(Long.valueOf(1))-->Line_18 $$ m2m.add(x)[ FD ]
Line_17 $$ List m2m = new ArrayList()-->Line_22 $$ c.setManyToMany(m2m)[ FD ]
Line_138 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_139 $$ assertTrue(c.getComponents().size() == 0)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_142 $$ assertTrue(c.getManyToMany().size() == 0)[ FD ]
Line_4 $$ Session s = openSession()-->Line_90 $$ s.close()[ FD ]
Line_38 $$ Many many = new Many()-->Line_86 $$ ccic2.setMany(many)[ FD ]
Line_58 $$ s = openSession()-->Line_143 $$ s.delete(c)[ FD ]
Line_33 $$ HashSet compos = new HashSet()-->Line_35 $$ c.setComposites(compos)[ FD ]
Line_4 $$ Session s = openSession()-->Line_49 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_11 $$ s.save(x)[ FD ]
Line_6 $$ Container c = new Container()-->Line_35 $$ c.setComposites(compos)[ FD ]
Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_128 $$ c.getManyToMany().clear()[ FD ]
Line_83 $$ Container.ContainerInnerClass ccic2 = new Container.ContainerInnerClass()-->Line_85 $$ ccic2.setOne(one)[ FD ]
Line_83 $$ Container.ContainerInnerClass ccic2 = new Container.ContainerInnerClass()-->Line_88 $$ c.getComposites().add(ccic2)[ FD ]
Line_136 $$ s = openSession()-->Line_137 $$ t = s.beginTransaction()[ FD ]
Line_23 $$ List comps = new ArrayList()-->Line_36 $$ c.setComponents(comps)[ FD ]
Line_50 $$ s = openSession()-->Line_90 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_51 $$ t = s.beginTransaction()[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_142 $$ assertTrue(c.getManyToMany().size() == 0)[ FD ]
Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_127 $$ c.getOneToMany().clear()[ FD ]
Line_6 $$ Container c = new Container()-->Line_77 $$ Object o2 = c.getOneToMany().remove(2)[ FD ]
Line_7 $$ Simple x = new Simple(Long.valueOf(1))-->Line_14 $$ o2m.add(x)[ FD ]
Line_58 $$ s = openSession()-->Line_91 $$ s = openSession()[ FD ]
Line_91 $$ s = openSession()-->Line_143 $$ s.delete(c)[ FD ]
Line_6 $$ Container c = new Container()-->Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_124 $$ found = true-->Line_126 $$ assertTrue(found)[ FD ]
Line_29 $$ ccic = new Container.ContainerInnerClass()-->Line_30 $$ ccic.setName("bar")[ FD ]
Line_38 $$ Many many = new Many()-->Line_46 $$ s.save(many)[ FD ]
Line_52 $$ Long count = (Long) s.createQuery("select count(*) from ContainerX as c join c.components as ce join ce.simple as s where ce.name='foo'").uniqueResult()-->Line_53 $$ assertTrue(count.intValue() == 1)[ FD ]
Line_50 $$ s = openSession()-->Line_91 $$ s = openSession()[ FD ]
Line_51 $$ t = s.beginTransaction()-->Line_144 $$ t.commit()[ FD ]
Line_109 $$ s = openSession()-->Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_29 $$ ccic = new Container.ContainerInnerClass()-->Line_66 $$ assertTrue(ccic.getMany().getOne() == ccic.getOne())[ FD ]
Line_24 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_44 $$ ccic.setOne(one)[ FD ]
Line_58 $$ s = openSession()-->Line_137 $$ t = s.beginTransaction()[ FD ]
Line_51 $$ t = s.beginTransaction()-->Line_89 $$ t.commit()[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_100 $$ assertTrue(c.getComposites().size() == 2)[ FD ]
Line_92 $$ t = s.beginTransaction()-->Line_144 $$ t.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_59 $$ t = s.beginTransaction()[ FD ]
Line_58 $$ s = openSession()-->Line_136 $$ s = openSession()[ FD ]
Line_6 $$ Container c = new Container()-->Line_79 $$ c.getOneToMany().set(1, o1)[ FD ]
Line_24 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_65 $$ ccic = (Container.ContainerInnerClass) c.getComponents().get(2)[ FD ]
Line_50 $$ s = openSession()-->Line_136 $$ s = openSession()[ FD ]
Line_6 $$ Container c = new Container()-->Line_143 $$ s.delete(c)[ FD ]
Line_121 $$ boolean found = false-->Line_126 $$ assertTrue(found)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_118 $$ assertTrue(c.getComposites().size() == 2)[ FD ]
Line_59 $$ t = s.beginTransaction()-->Line_134 $$ t.commit()[ FD ]
Line_91 $$ s = openSession()-->Line_131 $$ doDelete(s, "from Simple")[ FD ]
Line_50 $$ s = openSession()-->Line_108 $$ s.close()[ FD ]
Line_136 $$ s = openSession()-->Line_138 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_9 $$ Simple y = new Simple(Long.valueOf(0))-->Line_20 $$ m2m.add(y)[ FD ]
Line_6 $$ Container c = new Container()-->Line_47 $$ s.save(c)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_138 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_65 $$ ccic = (Container.ContainerInnerClass) c.getComponents().get(2)-->Line_66 $$ assertTrue(ccic.getMany().getOne() == ccic.getOne())[ FD ]
Line_6 $$ Container c = new Container()-->Line_70 $$ assertTrue(c.getManyToMany().size() == 3)[ FD ]
Line_92 $$ t = s.beginTransaction()-->Line_107 $$ t.commit()[ FD ]
Line_6 $$ Container c = new Container()-->Line_120 $$ Iterator iter = c.getComposites().iterator()[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_88 $$ c.getComposites().add(ccic2)[ FD ]
Line_58 $$ s = openSession()-->Line_109 $$ s = openSession()[ FD ]
Line_9 $$ Simple y = new Simple(Long.valueOf(0))-->Line_12 $$ s.save(y)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_64 $$ System.out.println(c.getComposites())[ FD ]
Line_13 $$ List o2m = new ArrayList()-->Line_21 $$ c.setOneToMany(o2m)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_80 $$ o1 = c.getComponents().remove(2)[ FD ]
Line_6 $$ Container c = new Container()-->Line_71 $$ assertTrue(c.getOneToMany().get(0) != null)[ FD ]
Line_123 $$ if (((Container.ContainerInnerClass) iter.next()).getName().equals("once again"))-->Line_124 $$ found = true[ CD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_143 $$ s.delete(c)[ FD ]
Line_109 $$ s = openSession()-->Line_135 $$ s.close()[ FD ]
Line_37 $$ One one = new One()-->Line_42 $$ many.setOne(one)[ FD ]
Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_112 $$ System.out.println(c.getOneToMany())[ FD ]
Line_6 $$ Container c = new Container()-->Line_138 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_140 $$ assertTrue(c.getComposites().size() == 0)[ FD ]
Line_138 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_140 $$ assertTrue(c.getComposites().size() == 0)[ FD ]
Line_4 $$ Session s = openSession()-->Line_12 $$ s.save(y)[ FD ]
Line_76 $$ Object o1 = c.getOneToMany().get(0)-->Line_80 $$ o1 = c.getComponents().remove(2)[ FD ]
Line_6 $$ Container c = new Container()-->Line_101 $$ assertTrue(c.getOneToMany().size() == 2)[ FD ]
Line_6 $$ Container c = new Container()-->Line_103 $$ assertTrue(c.getOneToMany().get(0) != null)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_92 $$ t = s.beginTransaction()[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_102 $$ assertTrue(c.getManyToMany().size() == 3)[ FD ]
Line_109 $$ s = openSession()-->Line_110 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Container c = new Container()-->Line_97 $$ System.out.println(c.getComposites())[ FD ]
Line_91 $$ s = openSession()-->Line_110 $$ t = s.beginTransaction()[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_119 $$ assertTrue(((Container.ContainerInnerClass) c.getComponents().get(0)).getName().equals("a different name"))[ FD ]
Line_6 $$ Container c = new Container()-->Line_76 $$ Object o1 = c.getOneToMany().get(0)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_120 $$ Iterator iter = c.getComposites().iterator()[ FD ]
Line_23 $$ List comps = new ArrayList()-->Line_32 $$ comps.add(ccic)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_104 $$ assertTrue(c.getOneToMany().get(1) != null)[ FD ]
Line_50 $$ s = openSession()-->Line_132 $$ doDelete(s, "from Many")[ FD ]
Line_37 $$ One one = new One()-->Line_44 $$ ccic.setOne(one)[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_129 $$ c.getComposites().clear()[ FD ]
Line_50 $$ s = openSession()-->Line_52 $$ Long count = (Long) s.createQuery("select count(*) from ContainerX as c join c.components as ce join ce.simple as s where ce.name='foo'").uniqueResult()[ FD ]
Line_24 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_30 $$ ccic.setName("bar")[ FD ]
Line_6 $$ Container c = new Container()-->Line_68 $$ assertTrue(c.getComposites().size() == 1)[ FD ]
Line_110 $$ t = s.beginTransaction()-->Line_134 $$ t.commit()[ FD ]
Line_83 $$ Container.ContainerInnerClass ccic2 = new Container.ContainerInnerClass()-->Line_87 $$ ccic2.setSimple((Simple) s.load(Simple.class, new Long(0)))[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_62 $$ System.out.println(c.getManyToMany())[ FD ]
Line_109 $$ s = openSession()-->Line_143 $$ s.delete(c)[ FD ]
Line_7 $$ Simple x = new Simple(Long.valueOf(1))-->Line_8 $$ x.setCount(123)[ FD ]
Line_58 $$ s = openSession()-->Line_133 $$ doDelete(s, "from One")[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_68 $$ assertTrue(c.getComposites().size() == 1)[ FD ]
Line_59 $$ t = s.beginTransaction()-->Line_89 $$ t.commit()[ FD ]
Line_91 $$ s = openSession()-->Line_133 $$ doDelete(s, "from One")[ FD ]
Line_4 $$ Session s = openSession()-->Line_46 $$ s.save(many)[ FD ]
Line_4 $$ Session s = openSession()-->Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_6 $$ Container c = new Container()-->Line_88 $$ c.getComposites().add(ccic2)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_67 $$ assertTrue(c.getComponents().size() == 3)[ FD ]
Line_4 $$ Session s = openSession()-->Line_109 $$ s = openSession()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_110 $$ t = s.beginTransaction()[ FD ]
Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_138 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_92 $$ t = s.beginTransaction()[ FD ]
Line_50 $$ s = openSession()-->Line_135 $$ s.close()[ FD ]
Line_59 $$ t = s.beginTransaction()-->Line_110 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_89 $$ t.commit()[ FD ]
Line_39 $$ HashSet manies = new HashSet()-->Line_41 $$ one.setManies(manies)[ FD ]
Line_24 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_27 $$ comps.add(ccic)[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_95 $$ System.out.println(c.getManyToMany())[ FD ]
Line_17 $$ List m2m = new ArrayList()-->Line_19 $$ m2m.add(null)[ FD ]
Line_6 $$ Container c = new Container()-->Line_36 $$ c.setComponents(comps)[ FD ]
Line_6 $$ Container c = new Container()-->Line_100 $$ assertTrue(c.getComposites().size() == 2)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_137 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Container c = new Container()-->Line_140 $$ assertTrue(c.getComposites().size() == 0)[ FD ]
Line_4 $$ Session s = openSession()-->Line_111 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_61 $$ System.out.println(c.getOneToMany())[ FD ]
Line_6 $$ Container c = new Container()-->Line_130 $$ c.getComponents().clear()[ FD ]
Line_83 $$ Container.ContainerInnerClass ccic2 = new Container.ContainerInnerClass()-->Line_86 $$ ccic2.setMany(many)[ FD ]
Line_37 $$ One one = new One()-->Line_45 $$ s.save(one)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_115 $$ System.out.println(c.getComposites())[ FD ]
Line_4 $$ Session s = openSession()-->Line_135 $$ s.close()[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_105 $$ ((Container.ContainerInnerClass) c.getComponents().get(0)).setName("a different name")[ FD ]
Line_6 $$ Container c = new Container()-->Line_112 $$ System.out.println(c.getOneToMany())[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_78 $$ c.getOneToMany().set(0, o2)[ FD ]
Line_13 $$ List o2m = new ArrayList()-->Line_15 $$ o2m.add(null)[ FD ]
Line_33 $$ HashSet compos = new HashSet()-->Line_34 $$ compos.add(ccic)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_51 $$ t = s.beginTransaction()[ FD ]
Line_9 $$ Simple y = new Simple(Long.valueOf(0))-->Line_10 $$ y.setCount(456)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_71 $$ assertTrue(c.getOneToMany().get(0) != null)[ FD ]
Line_51 $$ t = s.beginTransaction()-->Line_56 $$ t.commit()[ FD ]
Line_109 $$ s = openSession()-->Line_132 $$ doDelete(s, "from Many")[ FD ]
Line_6 $$ Container c = new Container()-->Line_113 $$ System.out.println(c.getManyToMany())[ FD ]
Line_91 $$ s = openSession()-->Line_136 $$ s = openSession()[ FD ]
Line_24 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_25 $$ ccic.setName("foo")[ FD ]
Line_6 $$ Container c = new Container()-->Line_72 $$ assertTrue(c.getOneToMany().get(2) != null)[ FD ]
Line_50 $$ s = openSession()-->Line_138 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_130 $$ c.getComponents().clear()[ FD ]
Line_6 $$ Container c = new Container()-->Line_94 $$ System.out.println(c.getOneToMany())[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_105 $$ ((Container.ContainerInnerClass) c.getComponents().get(0)).setName("a different name")[ FD ]
Line_93 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_118 $$ assertTrue(c.getComposites().size() == 2)[ FD ]
Line_4 $$ Session s = openSession()-->Line_143 $$ s.delete(c)[ FD ]
Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_74 $$ assertTrue(c.getManyToMany().get(i) == c.getOneToMany().get(i))[ FD ]
Line_4 $$ Session s = openSession()-->Line_60 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_73 $$ for (int i = 0; i < 3; i++) -->Line_74 $$ assertTrue(c.getManyToMany().get(i) == c.getOneToMany().get(i))[ FD ]
Line_121 $$ boolean found = false-->Line_124 $$ found = true[ FD ]
Line_6 $$ Container c = new Container()-->Line_21 $$ c.setOneToMany(o2m)[ FD ]
Line_6 $$ Container c = new Container()-->Line_64 $$ System.out.println(c.getComposites())[ FD ]
Line_37 $$ One one = new One()-->Line_41 $$ one.setManies(manies)[ FD ]
