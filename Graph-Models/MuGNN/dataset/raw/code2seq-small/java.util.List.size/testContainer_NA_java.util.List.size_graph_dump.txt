Line_2 $$ public void testContainer() throws Exception -->Line_11 $$ s.save(y)[ CD ]
Line_5 $$ Container c = new Container()-->Line_104 $$ ((Container.ContainerInnerClass) c.getComposites().iterator().next()).setName("once again")[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_140 $$ s.delete(c)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_95 $$ System.out.println(c.getComponents())[ FD ]
Line_32 $$ HashSet compos = new HashSet()-->Line_34 $$ c.setComposites(compos)[ FD ]
Line_8 $$ Simple y = new Simple(Long.valueOf(0))-->Line_19 $$ m2m.add(y)[ FD ]
Line_5 $$ Container c = new Container()-->Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_49 $$ s = openSession()-->Line_57 $$ s = openSession()[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_93 $$ System.out.println(c.getOneToMany())[ FD ]
Line_57 $$ s = openSession()-->Line_132 $$ s.close()[ FD ]
Line_36 $$ One one = new One()-->Line_41 $$ many.setOne(one)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_77 $$ c.getOneToMany().set(0, o2)[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_110 $$ System.out.println(c.getOneToMany())[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_132 $$ s.close()[ CD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_104 $$ ((Container.ContainerInnerClass) c.getComposites().iterator().next()).setName("once again")[ FD ]
Line_49 $$ s = openSession()-->Line_130 $$ doDelete(s, "from One")[ FD ]
Line_36 $$ One one = new One()-->Line_84 $$ ccic2.setOne(one)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_25 $$ ccic.setSimple(x)[ CD ]
Line_3 $$ Session s = openSession()-->Line_44 $$ s.save(one)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_86 $$ ccic2.setSimple((Simple) s.load(Simple.class, new Long(0)))[ CD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_135 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_89 $$ s.close()[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_44 $$ s.save(one)[ CD ]
Line_57 $$ s = openSession()-->Line_86 $$ ccic2.setSimple((Simple) s.load(Simple.class, new Long(0)))[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_119 $$ while (iter.hasNext()) [ CD ]
Line_22 $$ List comps = new ArrayList()-->Line_31 $$ comps.add(ccic)[ FD ]
Line_23 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_33 $$ compos.add(ccic)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_4 $$ Transaction t = s.beginTransaction()[ CD ]
Line_36 $$ One one = new One()-->Line_40 $$ one.setManies(manies)[ FD ]
Line_3 $$ Session s = openSession()-->Line_90 $$ s = openSession()[ FD ]
Line_120 $$ if (((Container.ContainerInnerClass) iter.next()).getName().equals("once again"))-->Line_121 $$ found = true[ CD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_98 $$ assertTrue(c.getComposites().size() == 2)[ FD ]
Line_23 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_25 $$ ccic.setSimple(x)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_103 $$ ((Container.ContainerInnerClass) c.getComponents().get(0)).setName("a different name")[ CD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_137 $$ assertTrue(c.getComposites().size() == 0)[ FD ]
Line_5 $$ Container c = new Container()-->Line_103 $$ ((Container.ContainerInnerClass) c.getComponents().get(0)).setName("a different name")[ FD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_110 $$ System.out.println(c.getOneToMany())[ FD ]
Line_23 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_42 $$ ccic.setMany(many)[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_112 $$ System.out.println(c.getComponents())[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_105 $$ t.commit()[ CD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_114 $$ assertTrue(c.getComponents().size() == 1)[ FD ]
Line_5 $$ Container c = new Container()-->Line_96 $$ System.out.println(c.getComposites())[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_70 $$ assertTrue(c.getOneToMany().get(0) != null)[ CD ]
Line_49 $$ s = openSession()-->Line_56 $$ s.close()[ FD ]
Line_75 $$ Object o1 = c.getOneToMany().get(0)-->Line_80 $$ c.getComponents().set(0, o1)[ FD ]
Line_50 $$ t = s.beginTransaction()-->Line_88 $$ t.commit()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_102 $$ assertTrue(c.getOneToMany().get(1) != null)[ CD ]
Line_107 $$ s = openSession()-->Line_134 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ CD ]
Line_135 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_139 $$ assertTrue(c.getManyToMany().size() == 0)[ FD ]
Line_49 $$ s = openSession()-->Line_135 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_96 $$ System.out.println(c.getComposites())[ FD ]
Line_5 $$ Container c = new Container()-->Line_78 $$ c.getOneToMany().set(1, o1)[ FD ]
Line_37 $$ Many many = new Many()-->Line_39 $$ manies.add(many)[ FD ]
Line_5 $$ Container c = new Container()-->Line_101 $$ assertTrue(c.getOneToMany().get(0) != null)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_110 $$ System.out.println(c.getOneToMany())[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_139 $$ assertTrue(c.getManyToMany().size() == 0)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_19 $$ m2m.add(y)[ CD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_115 $$ assertTrue(c.getComposites().size() == 2)[ FD ]
Line_5 $$ Container c = new Container()-->Line_114 $$ assertTrue(c.getComponents().size() == 1)[ FD ]
Line_50 $$ t = s.beginTransaction()-->Line_58 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Container c = new Container()-->Line_63 $$ System.out.println(c.getComposites())[ FD ]
Line_3 $$ Session s = openSession()-->Line_132 $$ s.close()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_93 $$ System.out.println(c.getOneToMany())[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_54 $$ assertTrue(res.size() == 1)[ CD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_114 $$ assertTrue(c.getComponents().size() == 1)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_135 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_3 $$ Session s = openSession()-->Line_46 $$ s.save(c)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_28 $$ ccic = new Container.ContainerInnerClass()[ CD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_136 $$ assertTrue(c.getComponents().size() == 0)[ FD ]
Line_28 $$ ccic = new Container.ContainerInnerClass()-->Line_42 $$ ccic.setMany(many)[ FD ]
Line_5 $$ Container c = new Container()-->Line_71 $$ assertTrue(c.getOneToMany().get(2) != null)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_78 $$ c.getOneToMany().set(1, o1)[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_137 $$ assertTrue(c.getComposites().size() == 0)[ FD ]
Line_90 $$ s = openSession()-->Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_108 $$ t = s.beginTransaction()[ CD ]
Line_36 $$ One one = new One()-->Line_44 $$ s.save(one)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_40 $$ one.setManies(manies)[ CD ]
Line_107 $$ s = openSession()-->Line_142 $$ s.close()[ FD ]
Line_5 $$ Container c = new Container()-->Line_111 $$ System.out.println(c.getManyToMany())[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_75 $$ Object o1 = c.getOneToMany().get(0)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_66 $$ assertTrue(c.getComponents().size() == 3)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_129 $$ doDelete(s, "from Many")[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_58 $$ t = s.beginTransaction()[ CD ]
Line_8 $$ Simple y = new Simple(Long.valueOf(0))-->Line_9 $$ y.setCount(456)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_36 $$ One one = new One()[ CD ]
Line_82 $$ Container.ContainerInnerClass ccic2 = new Container.ContainerInnerClass()-->Line_84 $$ ccic2.setOne(one)[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_95 $$ System.out.println(c.getComponents())[ FD ]
Line_28 $$ ccic = new Container.ContainerInnerClass()-->Line_29 $$ ccic.setName("bar")[ FD ]
Line_57 $$ s = openSession()-->Line_133 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_10 $$ s.save(x)[ FD ]
Line_12 $$ List o2m = new ArrayList()-->Line_20 $$ c.setOneToMany(o2m)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_100 $$ assertTrue(c.getManyToMany().size() == 3)[ CD ]
Line_38 $$ HashSet manies = new HashSet()-->Line_40 $$ one.setManies(manies)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_64 $$ ccic = (Container.ContainerInnerClass) c.getComponents().get(2)[ CD ]
Line_51 $$ Long count = (Long) s.createQuery("select count(*) from ContainerX as c join c.components as ce join ce.simple as s where ce.name='foo'").uniqueResult()-->Line_52 $$ assertTrue(count.intValue() == 1)[ FD ]
Line_6 $$ Simple x = new Simple(Long.valueOf(1))-->Line_7 $$ x.setCount(123)[ FD ]
Line_28 $$ ccic = new Container.ContainerInnerClass()-->Line_33 $$ compos.add(ccic)[ FD ]
Line_117 $$ Iterator iter = c.getComposites().iterator()-->Line_120 $$ if (((Container.ContainerInnerClass) iter.next()).getName().equals("once again"))[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_35 $$ c.setComponents(comps)[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_31 $$ comps.add(ccic)[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_9 $$ y.setCount(456)[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_133 $$ s = openSession()[ CD ]
Line_50 $$ t = s.beginTransaction()-->Line_105 $$ t.commit()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_17 $$ m2m.add(x)[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_107 $$ s = openSession()[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_112 $$ System.out.println(c.getComponents())[ CD ]
Line_3 $$ Session s = openSession()-->Line_51 $$ Long count = (Long) s.createQuery("select count(*) from ContainerX as c join c.components as ce join ce.simple as s where ce.name='foo'").uniqueResult()[ FD ]
Line_5 $$ Container c = new Container()-->Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_46 $$ s.save(c)[ CD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_127 $$ c.getComponents().clear()[ FD ]
Line_90 $$ s = openSession()-->Line_106 $$ s.close()[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_111 $$ System.out.println(c.getManyToMany())[ FD ]
Line_5 $$ Container c = new Container()-->Line_115 $$ assertTrue(c.getComposites().size() == 2)[ FD ]
Line_49 $$ s = openSession()-->Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_5 $$ Container c = new Container()-->Line_61 $$ System.out.println(c.getManyToMany())[ FD ]
Line_36 $$ One one = new One()-->Line_43 $$ ccic.setOne(one)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_113 $$ System.out.println(c.getComposites())[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_33 $$ compos.add(ccic)[ CD ]
Line_22 $$ List comps = new ArrayList()-->Line_35 $$ c.setComponents(comps)[ FD ]
Line_23 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_24 $$ ccic.setName("foo")[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_97 $$ assertTrue(c.getComponents().size() == 1)[ FD ]
Line_90 $$ s = openSession()-->Line_107 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_106 $$ s.close()[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_126 $$ c.getComposites().clear()[ FD ]
Line_90 $$ s = openSession()-->Line_133 $$ s = openSession()[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_102 $$ assertTrue(c.getOneToMany().get(1) != null)[ FD ]
Line_5 $$ Container c = new Container()-->Line_79 $$ o1 = c.getComponents().remove(2)[ FD ]
Line_12 $$ List o2m = new ArrayList()-->Line_14 $$ o2m.add(null)[ FD ]
Line_16 $$ List m2m = new ArrayList()-->Line_17 $$ m2m.add(x)[ FD ]
Line_5 $$ Container c = new Container()-->Line_110 $$ System.out.println(c.getOneToMany())[ FD ]
Line_133 $$ s = openSession()-->Line_142 $$ s.close()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_131 $$ t.commit()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_18 $$ m2m.add(null)[ CD ]
Line_3 $$ Session s = openSession()-->Line_53 $$ List res = s.createQuery("select c, s from ContainerX as c join c.components as ce join ce.simple as s where ce.name='foo'").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_67 $$ assertTrue(c.getComposites().size() == 1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_140 $$ s.delete(c)[ FD ]
Line_75 $$ Object o1 = c.getOneToMany().get(0)-->Line_78 $$ c.getOneToMany().set(1, o1)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_117 $$ Iterator iter = c.getComposites().iterator()[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_117 $$ Iterator iter = c.getComposites().iterator()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_47 $$ t.commit()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_14 $$ o2m.add(null)[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_55 $$ t.commit()[ CD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_140 $$ s.delete(c)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_118 $$ boolean found = false[ CD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_70 $$ assertTrue(c.getOneToMany().get(0) != null)[ FD ]
Line_5 $$ Container c = new Container()-->Line_98 $$ assertTrue(c.getComposites().size() == 2)[ FD ]
Line_49 $$ s = openSession()-->Line_128 $$ doDelete(s, "from Simple")[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction t = s.beginTransaction()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_127 $$ c.getComponents().clear()[ CD ]
Line_5 $$ Container c = new Container()-->Line_136 $$ assertTrue(c.getComponents().size() == 0)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_61 $$ System.out.println(c.getManyToMany())[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_8 $$ Simple y = new Simple(Long.valueOf(0))[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_76 $$ Object o2 = c.getOneToMany().remove(2)[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_57 $$ s = openSession()[ CD ]
Line_5 $$ Container c = new Container()-->Line_80 $$ c.getComponents().set(0, o1)[ FD ]
Line_5 $$ Container c = new Container()-->Line_76 $$ Object o2 = c.getOneToMany().remove(2)[ FD ]
Line_91 $$ t = s.beginTransaction()-->Line_141 $$ t.commit()[ FD ]
Line_76 $$ Object o2 = c.getOneToMany().remove(2)-->Line_77 $$ c.getOneToMany().set(0, o2)[ FD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_138 $$ assertTrue(c.getOneToMany().size() == 0)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_7 $$ x.setCount(123)[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_41 $$ many.setOne(one)[ CD ]
Line_107 $$ s = openSession()-->Line_140 $$ s.delete(c)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_80 $$ c.getComponents().set(0, o1)[ CD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_114 $$ assertTrue(c.getComponents().size() == 1)[ FD ]
Line_133 $$ s = openSession()-->Line_135 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_5 $$ Container c = new Container()-->Line_64 $$ ccic = (Container.ContainerInnerClass) c.getComponents().get(2)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_116 $$ assertTrue(((Container.ContainerInnerClass) c.getComponents().get(0)).getName().equals("a different name"))[ FD ]
Line_72 $$ for (int i = 0; i < 3; i++) -->Line_73 $$ assertTrue(c.getManyToMany().get(i) == c.getOneToMany().get(i))[ CD ]
Line_3 $$ Session s = openSession()-->Line_91 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Container c = new Container()-->Line_68 $$ assertTrue(c.getOneToMany().size() == 3)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_94 $$ System.out.println(c.getManyToMany())[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_105 $$ t.commit()[ FD ]
Line_32 $$ HashSet compos = new HashSet()-->Line_33 $$ compos.add(ccic)[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_116 $$ assertTrue(((Container.ContainerInnerClass) c.getComponents().get(0)).getName().equals("a different name"))[ FD ]
Line_118 $$ boolean found = false-->Line_123 $$ assertTrue(found)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_69 $$ assertTrue(c.getManyToMany().size() == 3)[ FD ]
Line_12 $$ List o2m = new ArrayList()-->Line_13 $$ o2m.add(x)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_91 $$ t = s.beginTransaction()[ CD ]
Line_50 $$ t = s.beginTransaction()-->Line_131 $$ t.commit()[ FD ]
Line_5 $$ Container c = new Container()-->Line_137 $$ assertTrue(c.getComposites().size() == 0)[ FD ]
Line_5 $$ Container c = new Container()-->Line_21 $$ c.setManyToMany(m2m)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_111 $$ System.out.println(c.getManyToMany())[ CD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_102 $$ assertTrue(c.getOneToMany().get(1) != null)[ FD ]
Line_49 $$ s = openSession()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_139 $$ assertTrue(c.getManyToMany().size() == 0)[ FD ]
Line_49 $$ s = openSession()-->Line_140 $$ s.delete(c)[ FD ]
Line_49 $$ s = openSession()-->Line_107 $$ s = openSession()[ FD ]
Line_57 $$ s = openSession()-->Line_130 $$ doDelete(s, "from One")[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_98 $$ assertTrue(c.getComposites().size() == 2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_140 $$ s.delete(c)[ CD ]
Line_49 $$ s = openSession()-->Line_86 $$ ccic2.setSimple((Simple) s.load(Simple.class, new Long(0)))[ FD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_136 $$ assertTrue(c.getComponents().size() == 0)[ FD ]
Line_90 $$ s = openSession()-->Line_108 $$ t = s.beginTransaction()[ FD ]
Line_8 $$ Simple y = new Simple(Long.valueOf(0))-->Line_11 $$ s.save(y)[ FD ]
Line_133 $$ s = openSession()-->Line_140 $$ s.delete(c)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_115 $$ assertTrue(c.getComposites().size() == 2)[ FD ]
Line_90 $$ s = openSession()-->Line_142 $$ s.close()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_51 $$ Long count = (Long) s.createQuery("select count(*) from ContainerX as c join c.components as ce join ce.simple as s where ce.name='foo'").uniqueResult()[ CD ]
Line_28 $$ ccic = new Container.ContainerInnerClass()-->Line_64 $$ ccic = (Container.ContainerInnerClass) c.getComponents().get(2)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_85 $$ ccic2.setMany(many)[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_52 $$ assertTrue(count.intValue() == 1)[ CD ]
Line_107 $$ s = openSession()-->Line_130 $$ doDelete(s, "from One")[ FD ]
Line_90 $$ s = openSession()-->Line_128 $$ doDelete(s, "from Simple")[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_58 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_104 $$ ((Container.ContainerInnerClass) c.getComposites().iterator().next()).setName("once again")[ CD ]
Line_50 $$ t = s.beginTransaction()-->Line_141 $$ t.commit()[ FD ]
Line_5 $$ Container c = new Container()-->Line_87 $$ c.getComposites().add(ccic2)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_97 $$ assertTrue(c.getComponents().size() == 1)[ CD ]
Line_135 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_137 $$ assertTrue(c.getComposites().size() == 0)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_5 $$ Container c = new Container()-->Line_62 $$ System.out.println(c.getComponents())[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_126 $$ c.getComposites().clear()[ CD ]
Line_135 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_140 $$ s.delete(c)[ FD ]
Line_3 $$ Session s = openSession()-->Line_133 $$ s = openSession()[ FD ]
Line_58 $$ t = s.beginTransaction()-->Line_105 $$ t.commit()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_116 $$ assertTrue(((Container.ContainerInnerClass) c.getComponents().get(0)).getName().equals("a different name"))[ CD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_93 $$ System.out.println(c.getOneToMany())[ FD ]
Line_5 $$ Container c = new Container()-->Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_13 $$ o2m.add(x)[ CD ]
Line_91 $$ t = s.beginTransaction()-->Line_105 $$ t.commit()[ FD ]
Line_57 $$ s = openSession()-->Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_113 $$ System.out.println(c.getComposites())[ FD ]
Line_49 $$ s = openSession()-->Line_134 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_82 $$ Container.ContainerInnerClass ccic2 = new Container.ContainerInnerClass()[ CD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_77 $$ c.getOneToMany().set(0, o2)[ FD ]
Line_133 $$ s = openSession()-->Line_134 $$ t = s.beginTransaction()[ FD ]
Line_37 $$ Many many = new Many()-->Line_85 $$ ccic2.setMany(many)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_47 $$ t.commit()[ CD ]
Line_5 $$ Container c = new Container()-->Line_139 $$ assertTrue(c.getManyToMany().size() == 0)[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_125 $$ c.getManyToMany().clear()[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_97 $$ assertTrue(c.getComponents().size() == 1)[ FD ]
Line_5 $$ Container c = new Container()-->Line_94 $$ System.out.println(c.getManyToMany())[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_20 $$ c.setOneToMany(o2m)[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_42 $$ ccic.setMany(many)[ CD ]
Line_49 $$ s = openSession()-->Line_106 $$ s.close()[ FD ]
Line_49 $$ s = openSession()-->Line_51 $$ Long count = (Long) s.createQuery("select count(*) from ContainerX as c join c.components as ce join ce.simple as s where ce.name='foo'").uniqueResult()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_60 $$ System.out.println(c.getOneToMany())[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_53 $$ List res = s.createQuery("select c, s from ContainerX as c join c.components as ce join ce.simple as s where ce.name='foo'").list()[ CD ]
Line_23 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_65 $$ assertTrue(ccic.getMany().getOne() == ccic.getOne())[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_81 $$ c.getManyToMany().set(0, c.getManyToMany().get(2))[ FD ]
Line_5 $$ Container c = new Container()-->Line_81 $$ c.getManyToMany().set(0, c.getManyToMany().get(2))[ FD ]
Line_3 $$ Session s = openSession()-->Line_49 $$ s = openSession()[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_111 $$ System.out.println(c.getManyToMany())[ FD ]
Line_5 $$ Container c = new Container()-->Line_117 $$ Iterator iter = c.getComposites().iterator()[ FD ]
Line_3 $$ Session s = openSession()-->Line_89 $$ s.close()[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_139 $$ assertTrue(c.getManyToMany().size() == 0)[ FD ]
Line_5 $$ Container c = new Container()-->Line_112 $$ System.out.println(c.getComponents())[ FD ]
Line_107 $$ s = openSession()-->Line_128 $$ doDelete(s, "from Simple")[ FD ]
Line_5 $$ Container c = new Container()-->Line_100 $$ assertTrue(c.getManyToMany().size() == 3)[ FD ]
Line_5 $$ Container c = new Container()-->Line_20 $$ c.setOneToMany(o2m)[ FD ]
Line_90 $$ s = openSession()-->Line_132 $$ s.close()[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_63 $$ System.out.println(c.getComposites())[ FD ]
Line_58 $$ t = s.beginTransaction()-->Line_131 $$ t.commit()[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_126 $$ c.getComposites().clear()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_106 $$ s.close()[ CD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_101 $$ assertTrue(c.getOneToMany().get(0) != null)[ FD ]
Line_49 $$ s = openSession()-->Line_91 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_135 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ CD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_96 $$ System.out.println(c.getComposites())[ FD ]
Line_58 $$ t = s.beginTransaction()-->Line_108 $$ t = s.beginTransaction()[ FD ]
Line_49 $$ s = openSession()-->Line_133 $$ s = openSession()[ FD ]
Line_23 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_31 $$ comps.add(ccic)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_88 $$ t.commit()[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_66 $$ assertTrue(c.getComponents().size() == 3)[ CD ]
Line_108 $$ t = s.beginTransaction()-->Line_131 $$ t.commit()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_15 $$ o2m.add(y)[ CD ]
Line_5 $$ Container c = new Container()-->Line_116 $$ assertTrue(((Container.ContainerInnerClass) c.getComponents().get(0)).getName().equals("a different name"))[ FD ]
Line_8 $$ Simple y = new Simple(Long.valueOf(0))-->Line_15 $$ o2m.add(y)[ FD ]
Line_49 $$ s = openSession()-->Line_90 $$ s = openSession()[ FD ]
Line_57 $$ s = openSession()-->Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_68 $$ assertTrue(c.getOneToMany().size() == 3)[ CD ]
Line_117 $$ Iterator iter = c.getComposites().iterator()-->Line_119 $$ while (iter.hasNext()) [ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_127 $$ c.getComponents().clear()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_83 $$ ccic2.setName("foo")[ CD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_112 $$ System.out.println(c.getComponents())[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_10 $$ s.save(x)[ CD ]
Line_28 $$ ccic = new Container.ContainerInnerClass()-->Line_30 $$ ccic.setSimple(y)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_34 $$ c.setComposites(compos)[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_87 $$ c.getComposites().add(ccic2)[ CD ]
Line_5 $$ Container c = new Container()-->Line_77 $$ c.getOneToMany().set(0, o2)[ FD ]
Line_49 $$ s = openSession()-->Line_142 $$ s.close()[ FD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_117 $$ Iterator iter = c.getComposites().iterator()[ FD ]
Line_58 $$ t = s.beginTransaction()-->Line_88 $$ t.commit()[ FD ]
Line_57 $$ s = openSession()-->Line_140 $$ s.delete(c)[ FD ]
Line_6 $$ Simple x = new Simple(Long.valueOf(1))-->Line_17 $$ m2m.add(x)[ FD ]
Line_23 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_43 $$ ccic.setOne(one)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_113 $$ System.out.println(c.getComposites())[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_131 $$ t.commit()[ CD ]
Line_91 $$ t = s.beginTransaction()-->Line_131 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_135 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_114 $$ assertTrue(c.getComponents().size() == 1)[ CD ]
Line_3 $$ Session s = openSession()-->Line_57 $$ s = openSession()[ FD ]
Line_57 $$ s = openSession()-->Line_106 $$ s.close()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_50 $$ t = s.beginTransaction()[ CD ]
Line_23 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_64 $$ ccic = (Container.ContainerInnerClass) c.getComponents().get(2)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_67 $$ assertTrue(c.getComposites().size() == 1)[ CD ]
Line_6 $$ Simple x = new Simple(Long.valueOf(1))-->Line_13 $$ o2m.add(x)[ FD ]
Line_57 $$ s = openSession()-->Line_89 $$ s.close()[ FD ]
Line_57 $$ s = openSession()-->Line_142 $$ s.close()[ FD ]
Line_108 $$ t = s.beginTransaction()-->Line_134 $$ t = s.beginTransaction()[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_138 $$ assertTrue(c.getOneToMany().size() == 0)[ FD ]
Line_16 $$ List m2m = new ArrayList()-->Line_21 $$ c.setManyToMany(m2m)[ FD ]
Line_6 $$ Simple x = new Simple(Long.valueOf(1))-->Line_10 $$ s.save(x)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_108 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Container c = new Container()-->Line_127 $$ c.getComponents().clear()[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_135 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_63 $$ System.out.println(c.getComposites())[ CD ]
Line_5 $$ Container c = new Container()-->Line_95 $$ System.out.println(c.getComponents())[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_81 $$ c.getManyToMany().set(0, c.getManyToMany().get(2))[ CD ]
Line_107 $$ s = openSession()-->Line_132 $$ s.close()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_94 $$ System.out.println(c.getManyToMany())[ CD ]
Line_23 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_26 $$ comps.add(ccic)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_22 $$ List comps = new ArrayList()-->Line_26 $$ comps.add(ccic)[ FD ]
Line_58 $$ t = s.beginTransaction()-->Line_134 $$ t = s.beginTransaction()[ FD ]
Line_50 $$ t = s.beginTransaction()-->Line_108 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Simple x = new Simple(Long.valueOf(1))-->Line_25 $$ ccic.setSimple(x)[ FD ]
Line_5 $$ Container c = new Container()-->Line_67 $$ assertTrue(c.getComposites().size() == 1)[ FD ]
Line_82 $$ Container.ContainerInnerClass ccic2 = new Container.ContainerInnerClass()-->Line_85 $$ ccic2.setMany(many)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_56 $$ s.close()[ CD ]
Line_5 $$ Container c = new Container()-->Line_124 $$ c.getOneToMany().clear()[ FD ]
Line_16 $$ List m2m = new ArrayList()-->Line_18 $$ m2m.add(null)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_95 $$ System.out.println(c.getComponents())[ CD ]
Line_49 $$ s = openSession()-->Line_129 $$ doDelete(s, "from Many")[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_141 $$ t.commit()[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_22 $$ List comps = new ArrayList()[ CD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_111 $$ System.out.println(c.getManyToMany())[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_68 $$ assertTrue(c.getOneToMany().size() == 3)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_73 $$ assertTrue(c.getManyToMany().get(i) == c.getOneToMany().get(i))[ FD ]
Line_5 $$ Container c = new Container()-->Line_135 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_64 $$ ccic = (Container.ContainerInnerClass) c.getComponents().get(2)-->Line_65 $$ assertTrue(ccic.getMany().getOne() == ccic.getOne())[ FD ]
Line_22 $$ List comps = new ArrayList()-->Line_27 $$ comps.add(null)[ FD ]
Line_38 $$ HashSet manies = new HashSet()-->Line_39 $$ manies.add(many)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_27 $$ comps.add(null)[ CD ]
Line_107 $$ s = openSession()-->Line_135 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_57 $$ s = openSession()-->Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_16 $$ List m2m = new ArrayList()-->Line_19 $$ m2m.add(y)[ FD ]
Line_107 $$ s = openSession()-->Line_108 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_56 $$ s.close()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_96 $$ System.out.println(c.getComposites())[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_128 $$ doDelete(s, "from Simple")[ CD ]
Line_28 $$ ccic = new Container.ContainerInnerClass()-->Line_31 $$ comps.add(ccic)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_69 $$ assertTrue(c.getManyToMany().size() == 3)[ CD ]
Line_49 $$ s = openSession()-->Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_136 $$ assertTrue(c.getComponents().size() == 0)[ CD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_104 $$ ((Container.ContainerInnerClass) c.getComposites().iterator().next()).setName("once again")[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_24 $$ ccic.setName("foo")[ CD ]
Line_49 $$ s = openSession()-->Line_108 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_101 $$ assertTrue(c.getOneToMany().get(0) != null)[ CD ]
Line_91 $$ t = s.beginTransaction()-->Line_108 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Container c = new Container()-->Line_126 $$ c.getComposites().clear()[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_103 $$ ((Container.ContainerInnerClass) c.getComponents().get(0)).setName("a different name")[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_32 $$ HashSet compos = new HashSet()[ CD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_57 $$ s = openSession()-->Line_128 $$ doDelete(s, "from Simple")[ FD ]
Line_57 $$ s = openSession()-->Line_91 $$ t = s.beginTransaction()[ FD ]
Line_57 $$ s = openSession()-->Line_135 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_57 $$ s = openSession()-->Line_58 $$ t = s.beginTransaction()[ FD ]
Line_90 $$ s = openSession()-->Line_91 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Container c = new Container()-->Line_113 $$ System.out.println(c.getComposites())[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_29 $$ ccic.setName("bar")[ CD ]
Line_5 $$ Container c = new Container()-->Line_102 $$ assertTrue(c.getOneToMany().get(1) != null)[ FD ]
Line_90 $$ s = openSession()-->Line_130 $$ doDelete(s, "from One")[ FD ]
Line_82 $$ Container.ContainerInnerClass ccic2 = new Container.ContainerInnerClass()-->Line_86 $$ ccic2.setSimple((Simple) s.load(Simple.class, new Long(0)))[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_110 $$ System.out.println(c.getOneToMany())[ FD ]
Line_75 $$ Object o1 = c.getOneToMany().get(0)-->Line_79 $$ o1 = c.getComponents().remove(2)[ FD ]
Line_5 $$ Container c = new Container()-->Line_138 $$ assertTrue(c.getOneToMany().size() == 0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_128 $$ doDelete(s, "from Simple")[ FD ]
Line_37 $$ Many many = new Many()-->Line_45 $$ s.save(many)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_136 $$ assertTrue(c.getComponents().size() == 0)[ FD ]
Line_5 $$ Container c = new Container()-->Line_140 $$ s.delete(c)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_87 $$ c.getComposites().add(ccic2)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_79 $$ o1 = c.getComponents().remove(2)[ CD ]
Line_90 $$ s = openSession()-->Line_140 $$ s.delete(c)[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_113 $$ System.out.println(c.getComposites())[ FD ]
Line_5 $$ Container c = new Container()-->Line_35 $$ c.setComponents(comps)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_5 $$ Container c = new Container()[ CD ]
Line_90 $$ s = openSession()-->Line_134 $$ t = s.beginTransaction()[ FD ]
Line_23 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_30 $$ ccic.setSimple(y)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_90 $$ s = openSession()[ CD ]
Line_8 $$ Simple y = new Simple(Long.valueOf(0))-->Line_30 $$ ccic.setSimple(y)[ FD ]
Line_37 $$ Many many = new Many()-->Line_41 $$ many.setOne(one)[ FD ]
Line_90 $$ s = openSession()-->Line_129 $$ doDelete(s, "from Many")[ FD ]
Line_5 $$ Container c = new Container()-->Line_125 $$ c.getManyToMany().clear()[ FD ]
Line_50 $$ t = s.beginTransaction()-->Line_55 $$ t.commit()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_38 $$ HashSet manies = new HashSet()[ CD ]
Line_107 $$ s = openSession()-->Line_129 $$ doDelete(s, "from Many")[ FD ]
Line_90 $$ s = openSession()-->Line_135 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_28 $$ ccic = new Container.ContainerInnerClass()-->Line_65 $$ assertTrue(ccic.getMany().getOne() == ccic.getOne())[ FD ]
Line_37 $$ Many many = new Many()-->Line_42 $$ ccic.setMany(many)[ FD ]
Line_5 $$ Container c = new Container()-->Line_70 $$ assertTrue(c.getOneToMany().get(0) != null)[ FD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_116 $$ assertTrue(((Container.ContainerInnerClass) c.getComponents().get(0)).getName().equals("a different name"))[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_75 $$ Object o1 = c.getOneToMany().get(0)[ CD ]
Line_91 $$ t = s.beginTransaction()-->Line_134 $$ t = s.beginTransaction()[ FD ]
Line_49 $$ s = openSession()-->Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_139 $$ assertTrue(c.getManyToMany().size() == 0)[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_39 $$ manies.add(many)[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_99 $$ assertTrue(c.getOneToMany().size() == 2)[ CD ]
Line_3 $$ Session s = openSession()-->Line_142 $$ s.close()[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_101 $$ assertTrue(c.getOneToMany().get(0) != null)[ FD ]
Line_28 $$ ccic = new Container.ContainerInnerClass()-->Line_43 $$ ccic.setOne(one)[ FD ]
Line_72 $$ for (int i = 0; i < 3; i++) -->Line_73 $$ assertTrue(c.getManyToMany().get(i) == c.getOneToMany().get(i))[ FD ]
Line_50 $$ t = s.beginTransaction()-->Line_134 $$ t = s.beginTransaction()[ FD ]
Line_108 $$ t = s.beginTransaction()-->Line_141 $$ t.commit()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_62 $$ System.out.println(c.getComponents())[ CD ]
Line_135 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_138 $$ assertTrue(c.getOneToMany().size() == 0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_129 $$ doDelete(s, "from Many")[ FD ]
Line_90 $$ s = openSession()-->Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_126 $$ c.getComposites().clear()[ FD ]
Line_3 $$ Session s = openSession()-->Line_86 $$ ccic2.setSimple((Simple) s.load(Simple.class, new Long(0)))[ FD ]
Line_57 $$ s = openSession()-->Line_108 $$ t = s.beginTransaction()[ FD ]
Line_57 $$ s = openSession()-->Line_134 $$ t = s.beginTransaction()[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_112 $$ System.out.println(c.getComponents())[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_16 $$ List m2m = new ArrayList()[ CD ]
Line_49 $$ s = openSession()-->Line_89 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_108 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_43 $$ ccic.setOne(one)[ CD ]
Line_58 $$ t = s.beginTransaction()-->Line_141 $$ t.commit()[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_125 $$ c.getManyToMany().clear()[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_100 $$ assertTrue(c.getManyToMany().size() == 3)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_76 $$ Object o2 = c.getOneToMany().remove(2)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_142 $$ s.close()[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_48 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_134 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_45 $$ s.save(many)[ CD ]
Line_5 $$ Container c = new Container()-->Line_69 $$ assertTrue(c.getManyToMany().size() == 3)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_130 $$ doDelete(s, "from One")[ CD ]
Line_3 $$ Session s = openSession()-->Line_130 $$ doDelete(s, "from One")[ FD ]
Line_23 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_29 $$ ccic.setName("bar")[ FD ]
Line_23 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()-->Line_28 $$ ccic = new Container.ContainerInnerClass()[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_71 $$ assertTrue(c.getOneToMany().get(2) != null)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_79 $$ o1 = c.getComponents().remove(2)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_3 $$ Session s = openSession()[ CD ]
Line_57 $$ s = openSession()-->Line_129 $$ doDelete(s, "from Many")[ FD ]
Line_12 $$ List o2m = new ArrayList()-->Line_15 $$ o2m.add(y)[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_115 $$ assertTrue(c.getComposites().size() == 2)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_49 $$ s = openSession()[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_37 $$ Many many = new Many()[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_12 $$ List o2m = new ArrayList()[ CD ]
Line_5 $$ Container c = new Container()-->Line_46 $$ s.save(c)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_26 $$ comps.add(ccic)[ CD ]
Line_3 $$ Session s = openSession()-->Line_45 $$ s.save(many)[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_124 $$ c.getOneToMany().clear()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_124 $$ c.getOneToMany().clear()[ CD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_138 $$ assertTrue(c.getOneToMany().size() == 0)[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_99 $$ assertTrue(c.getOneToMany().size() == 2)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_91 $$ t = s.beginTransaction()[ FD ]
Line_57 $$ s = openSession()-->Line_90 $$ s = openSession()[ FD ]
Line_135 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_136 $$ assertTrue(c.getComponents().size() == 0)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_124 $$ c.getOneToMany().clear()[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_60 $$ System.out.println(c.getOneToMany())[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_78 $$ c.getOneToMany().set(1, o1)[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_123 $$ assertTrue(found)[ CD ]
Line_49 $$ s = openSession()-->Line_58 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Container c = new Container()-->Line_60 $$ System.out.println(c.getOneToMany())[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_72 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_127 $$ c.getComponents().clear()[ FD ]
Line_79 $$ o1 = c.getComponents().remove(2)-->Line_80 $$ c.getComponents().set(0, o1)[ FD ]
Line_119 $$ while (iter.hasNext()) -->Line_120 $$ if (((Container.ContainerInnerClass) iter.next()).getName().equals("once again"))[ CD ]
Line_3 $$ Session s = openSession()-->Line_48 $$ s.close()[ FD ]
Line_49 $$ s = openSession()-->Line_132 $$ s.close()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_6 $$ Simple x = new Simple(Long.valueOf(1))[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_71 $$ assertTrue(c.getOneToMany().get(2) != null)[ CD ]
Line_82 $$ Container.ContainerInnerClass ccic2 = new Container.ContainerInnerClass()-->Line_83 $$ ccic2.setName("foo")[ FD ]
Line_5 $$ Container c = new Container()-->Line_73 $$ assertTrue(c.getManyToMany().get(i) == c.getOneToMany().get(i))[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_134 $$ t = s.beginTransaction()[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_23 $$ Container.ContainerInnerClass ccic = new Container.ContainerInnerClass()[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_125 $$ c.getManyToMany().clear()[ CD ]
Line_134 $$ t = s.beginTransaction()-->Line_141 $$ t.commit()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_21 $$ c.setManyToMany(m2m)[ CD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_94 $$ System.out.println(c.getManyToMany())[ FD ]
Line_5 $$ Container c = new Container()-->Line_97 $$ assertTrue(c.getComponents().size() == 1)[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_99 $$ assertTrue(c.getOneToMany().size() == 2)[ FD ]
Line_107 $$ s = openSession()-->Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_64 $$ ccic = (Container.ContainerInnerClass) c.getComponents().get(2)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_141 $$ t.commit()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_134 $$ t = s.beginTransaction()[ FD ]
Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_100 $$ assertTrue(c.getManyToMany().size() == 3)[ FD ]
Line_82 $$ Container.ContainerInnerClass ccic2 = new Container.ContainerInnerClass()-->Line_87 $$ c.getComposites().add(ccic2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Container c = new Container()-->Line_34 $$ c.setComposites(compos)[ FD ]
Line_5 $$ Container c = new Container()-->Line_99 $$ assertTrue(c.getOneToMany().size() == 2)[ FD ]
Line_107 $$ s = openSession()-->Line_133 $$ s = openSession()[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_62 $$ System.out.println(c.getComponents())[ FD ]
Line_57 $$ s = openSession()-->Line_107 $$ s = openSession()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_61 $$ System.out.println(c.getManyToMany())[ CD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_124 $$ c.getOneToMany().clear()[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_80 $$ c.getComponents().set(0, o1)[ FD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_140 $$ s.delete(c)[ FD ]
Line_3 $$ Session s = openSession()-->Line_107 $$ s = openSession()[ FD ]
Line_118 $$ boolean found = false-->Line_121 $$ found = true[ FD ]
Line_58 $$ t = s.beginTransaction()-->Line_91 $$ t = s.beginTransaction()[ FD ]
Line_49 $$ s = openSession()-->Line_53 $$ List res = s.createQuery("select c, s from ContainerX as c join c.components as ce join ce.simple as s where ce.name='foo'").list()[ FD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_125 $$ c.getManyToMany().clear()[ FD ]
Line_109 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_137 $$ assertTrue(c.getComposites().size() == 0)[ FD ]
Line_5 $$ Container c = new Container()-->Line_75 $$ Object o1 = c.getOneToMany().get(0)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_88 $$ t.commit()[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_84 $$ ccic2.setOne(one)[ CD ]
Line_5 $$ Container c = new Container()-->Line_93 $$ System.out.println(c.getOneToMany())[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_138 $$ assertTrue(c.getOneToMany().size() == 0)[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_30 $$ ccic.setSimple(y)[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_65 $$ assertTrue(ccic.getMany().getOne() == ccic.getOne())[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_117 $$ Iterator iter = c.getComposites().iterator()[ CD ]
Line_2 $$ public void testContainer() throws Exception -->Line_137 $$ assertTrue(c.getComposites().size() == 0)[ CD ]
Line_121 $$ found = true-->Line_123 $$ assertTrue(found)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_115 $$ assertTrue(c.getComposites().size() == 2)[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_55 $$ t.commit()[ FD ]
Line_50 $$ t = s.beginTransaction()-->Line_91 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Container c = new Container()-->Line_66 $$ assertTrue(c.getComponents().size() == 3)[ FD ]
Line_2 $$ public void testContainer() throws Exception -->Line_98 $$ assertTrue(c.getComposites().size() == 2)[ CD ]
Line_3 $$ Session s = openSession()-->Line_92 $$ c = (Container) s.load(Container.class, new Long(c.getId()))[ FD ]
Line_59 $$ c = (Container) s.load(Container.class, new Long(c.getId()))-->Line_103 $$ ((Container.ContainerInnerClass) c.getComponents().get(0)).setName("a different name")[ FD ]
Line_3 $$ Session s = openSession()-->Line_11 $$ s.save(y)[ FD ]
Line_53 $$ List res = s.createQuery("select c, s from ContainerX as c join c.components as ce join ce.simple as s where ce.name='foo'").list()-->Line_54 $$ assertTrue(res.size() == 1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_58 $$ t = s.beginTransaction()[ FD ]
