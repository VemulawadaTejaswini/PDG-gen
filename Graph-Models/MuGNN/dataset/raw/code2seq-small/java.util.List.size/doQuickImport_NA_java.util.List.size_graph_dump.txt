Line_4 $$ final List<String> projects = getBuilder().getList()-->Line_5 $$ if (projects == null || projects.size() != 1) [ FD ]
Line_2 $$ public boolean doQuickImport(VirtualFile file, final WizardContext wizardContext) -->Line_3 $$ getBuilder().setRootDirectory(file.getParent().getPath())[ FD ]
Line_2 $$ public boolean doQuickImport(VirtualFile file, final WizardContext wizardContext) -->Line_3 $$ getBuilder().setRootDirectory(file.getParent().getPath())[ CD ]
Line_2 $$ public boolean doQuickImport(VirtualFile file, final WizardContext wizardContext) -->Line_8 $$ getBuilder().setList(projects)[ CD ]
Line_2 $$ public boolean doQuickImport(VirtualFile file, final WizardContext wizardContext) -->Line_4 $$ final List<String> projects = getBuilder().getList()[ CD ]
Line_5 $$ if (projects == null || projects.size() != 1) -->Line_6 $$ return false[ CD ]
Line_4 $$ final List<String> projects = getBuilder().getList()-->Line_8 $$ getBuilder().setList(projects)[ FD ]
Line_2 $$ public boolean doQuickImport(VirtualFile file, final WizardContext wizardContext) -->Line_9 $$ wizardContext.setProjectName(EclipseProjectFinder.findProjectName(projects.get(0)))[ FD ]
Line_2 $$ public boolean doQuickImport(VirtualFile file, final WizardContext wizardContext) -->Line_5 $$ if (projects == null || projects.size() != 1) [ CD ]
Line_4 $$ final List<String> projects = getBuilder().getList()-->Line_9 $$ wizardContext.setProjectName(EclipseProjectFinder.findProjectName(projects.get(0)))[ FD ]
Line_2 $$ public boolean doQuickImport(VirtualFile file, final WizardContext wizardContext) -->Line_9 $$ wizardContext.setProjectName(EclipseProjectFinder.findProjectName(projects.get(0)))[ CD ]
Line_2 $$ public boolean doQuickImport(VirtualFile file, final WizardContext wizardContext) -->Line_10 $$ return true[ CD ]
