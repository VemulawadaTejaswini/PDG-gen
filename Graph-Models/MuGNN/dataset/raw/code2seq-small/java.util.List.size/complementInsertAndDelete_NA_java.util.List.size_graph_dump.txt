Line_9 $$ if (complementFirst && !contextBefore.isEmpty()) -->Line_11 $$ first.getBefore().add(0, firstContext)[ CD ]
Line_4 $$ final BeforeAfter<List<String>> first = steps.get(0)-->Line_12 $$ first.getAfter().add(0, firstContext)[ FD ]
Line_16 $$ if (complementLast && !contextAfter.isEmpty()) -->Line_20 $$ contextAfter.remove(0)[ CD ]
Line_8 $$ final List<String> contextBefore = hunk.getContextBefore()-->Line_9 $$ if (complementFirst && !contextBefore.isEmpty()) [ FD ]
Line_16 $$ if (complementLast && !contextAfter.isEmpty()) -->Line_17 $$ final String firstContext = contextAfter.get(0)[ CD ]
Line_10 $$ final String firstContext = contextBefore.get(contextBefore.size() - 1)-->Line_19 $$ last.getAfter().add(firstContext)[ FD ]
Line_3 $$ final List<BeforeAfter<List<String>>> steps = hunk.getPatchSteps()-->Line_4 $$ final BeforeAfter<List<String>> first = steps.get(0)[ FD ]
Line_15 $$ final List<String> contextAfter = hunk.getContextAfter()-->Line_20 $$ contextAfter.remove(0)[ FD ]
Line_2 $$ private void complementInsertAndDelete(final SplitHunk hunk) -->Line_3 $$ final List<BeforeAfter<List<String>>> steps = hunk.getPatchSteps()[ FD ]
Line_2 $$ private void complementInsertAndDelete(final SplitHunk hunk) -->Line_7 $$ final boolean complementLast = last.getBefore().isEmpty() || last.getAfter().isEmpty()[ CD ]
Line_6 $$ final boolean complementFirst = first.getBefore().isEmpty() || first.getAfter().isEmpty()-->Line_9 $$ if (complementFirst && !contextBefore.isEmpty()) [ FD ]
Line_8 $$ final List<String> contextBefore = hunk.getContextBefore()-->Line_13 $$ contextBefore.remove(contextBefore.size() - 1)[ FD ]
Line_2 $$ private void complementInsertAndDelete(final SplitHunk hunk) -->Line_6 $$ final boolean complementFirst = first.getBefore().isEmpty() || first.getAfter().isEmpty()[ CD ]
Line_16 $$ if (complementLast && !contextAfter.isEmpty()) -->Line_18 $$ last.getBefore().add(firstContext)[ CD ]
Line_2 $$ private void complementInsertAndDelete(final SplitHunk hunk) -->Line_8 $$ final List<String> contextBefore = hunk.getContextBefore()[ FD ]
Line_9 $$ if (complementFirst && !contextBefore.isEmpty()) -->Line_13 $$ contextBefore.remove(contextBefore.size() - 1)[ CD ]
Line_5 $$ final BeforeAfter<List<String>> last = steps.get(steps.size() - 1)-->Line_18 $$ last.getBefore().add(firstContext)[ FD ]
Line_5 $$ final BeforeAfter<List<String>> last = steps.get(steps.size() - 1)-->Line_19 $$ last.getAfter().add(firstContext)[ FD ]
Line_10 $$ final String firstContext = contextBefore.get(contextBefore.size() - 1)-->Line_12 $$ first.getAfter().add(0, firstContext)[ FD ]
Line_2 $$ private void complementInsertAndDelete(final SplitHunk hunk) -->Line_16 $$ if (complementLast && !contextAfter.isEmpty()) [ CD ]
Line_3 $$ final List<BeforeAfter<List<String>>> steps = hunk.getPatchSteps()-->Line_5 $$ final BeforeAfter<List<String>> last = steps.get(steps.size() - 1)[ FD ]
Line_2 $$ private void complementInsertAndDelete(final SplitHunk hunk) -->Line_5 $$ final BeforeAfter<List<String>> last = steps.get(steps.size() - 1)[ CD ]
Line_4 $$ final BeforeAfter<List<String>> first = steps.get(0)-->Line_6 $$ final boolean complementFirst = first.getBefore().isEmpty() || first.getAfter().isEmpty()[ FD ]
Line_9 $$ if (complementFirst && !contextBefore.isEmpty()) -->Line_12 $$ first.getAfter().add(0, firstContext)[ CD ]
Line_2 $$ private void complementInsertAndDelete(final SplitHunk hunk) -->Line_4 $$ final BeforeAfter<List<String>> first = steps.get(0)[ CD ]
Line_2 $$ private void complementInsertAndDelete(final SplitHunk hunk) -->Line_3 $$ final List<BeforeAfter<List<String>>> steps = hunk.getPatchSteps()[ CD ]
Line_10 $$ final String firstContext = contextBefore.get(contextBefore.size() - 1)-->Line_11 $$ first.getBefore().add(0, firstContext)[ FD ]
Line_15 $$ final List<String> contextAfter = hunk.getContextAfter()-->Line_16 $$ if (complementLast && !contextAfter.isEmpty()) [ FD ]
Line_8 $$ final List<String> contextBefore = hunk.getContextBefore()-->Line_10 $$ final String firstContext = contextBefore.get(contextBefore.size() - 1)[ FD ]
Line_2 $$ private void complementInsertAndDelete(final SplitHunk hunk) -->Line_15 $$ final List<String> contextAfter = hunk.getContextAfter()[ CD ]
Line_10 $$ final String firstContext = contextBefore.get(contextBefore.size() - 1)-->Line_18 $$ last.getBefore().add(firstContext)[ FD ]
Line_16 $$ if (complementLast && !contextAfter.isEmpty()) -->Line_19 $$ last.getAfter().add(firstContext)[ CD ]
Line_2 $$ private void complementInsertAndDelete(final SplitHunk hunk) -->Line_15 $$ final List<String> contextAfter = hunk.getContextAfter()[ FD ]
Line_5 $$ final BeforeAfter<List<String>> last = steps.get(steps.size() - 1)-->Line_7 $$ final boolean complementLast = last.getBefore().isEmpty() || last.getAfter().isEmpty()[ FD ]
Line_2 $$ private void complementInsertAndDelete(final SplitHunk hunk) -->Line_9 $$ if (complementFirst && !contextBefore.isEmpty()) [ CD ]
Line_2 $$ private void complementInsertAndDelete(final SplitHunk hunk) -->Line_8 $$ final List<String> contextBefore = hunk.getContextBefore()[ CD ]
Line_7 $$ final boolean complementLast = last.getBefore().isEmpty() || last.getAfter().isEmpty()-->Line_16 $$ if (complementLast && !contextAfter.isEmpty()) [ FD ]
Line_4 $$ final BeforeAfter<List<String>> first = steps.get(0)-->Line_11 $$ first.getBefore().add(0, firstContext)[ FD ]
Line_15 $$ final List<String> contextAfter = hunk.getContextAfter()-->Line_17 $$ final String firstContext = contextAfter.get(0)[ FD ]
Line_9 $$ if (complementFirst && !contextBefore.isEmpty()) -->Line_10 $$ final String firstContext = contextBefore.get(contextBefore.size() - 1)[ CD ]
