Line_43 $$ T state = null-->Line_63 $$ state = fromXContent(parser)[ FD ]
Line_64 $$ if (state == null) -->Line_65 $$ logger.debug("[ CD ]
Line_26 $$ if (matcher.matches()) -->Line_32 $$ PathAndStateId pav = new PathAndStateId(stateFile, stateId, legacy)[ CD ]
Line_26 $$ if (matcher.matches()) -->Line_28 $$ maxStateId = Math.max(maxStateId, stateId)[ CD ]
Line_43 $$ T state = null-->Line_68 $$ state = read(stateFile)[ FD ]
Line_42 $$ final List<Throwable> exceptions = new ArrayList()-->Line_73 $$ exceptions.add(e)[ FD ]
Line_55 $$ if (pathAndStateId.legacy) -->Line_62 $$ parser = XContentHelper.createParser(new BytesArray(data))[ CD ]
Line_58 $$ if (data.length == 0) -->Line_59 $$ logger.debug("[ CD ]
Line_27 $$ final long stateId = Long.parseLong(matcher.group(1))-->Line_28 $$ maxStateId = Math.max(maxStateId, stateId)[ FD ]
Line_53 $$ final long id = pathAndStateId.id-->Line_69 $$ logger.trace("state id [[ FD ]
Line_54 $$ final XContentParser parser-->Line_63 $$ state = fromXContent(parser)[ FD ]
Line_26 $$ if (matcher.matches()) -->Line_33 $$ logger.trace("found state file: [ CD ]
Line_26 $$ if (matcher.matches()) -->Line_29 $$ final boolean legacy = MetaDataStateFormat.STATE_FILE_EXTENSION.equals(matcher.group(2)) == false[ CD ]
Line_43 $$ T state = null-->Line_64 $$ if (state == null) [ FD ]
Line_26 $$ if (matcher.matches()) -->Line_27 $$ final long stateId = Long.parseLong(matcher.group(1))[ CD ]
Line_55 $$ if (pathAndStateId.legacy) -->Line_68 $$ state = read(stateFile)[ CD ]
Line_55 $$ if (pathAndStateId.legacy) -->Line_58 $$ if (data.length == 0) [ CD ]
Line_26 $$ if (matcher.matches()) -->Line_34 $$ files.add(pav)[ CD ]
Line_12 $$ List<PathAndStateId> files = new ArrayList()-->Line_79 $$ if (files.size() > 0) [ FD ]
Line_32 $$ PathAndStateId pav = new PathAndStateId(stateFile, stateId, legacy)-->Line_33 $$ logger.trace("found state file: [ FD ]
Line_13 $$ long maxStateId = -1-->Line_28 $$ maxStateId = Math.max(maxStateId, stateId)[ FD ]
Line_50 $$ for (PathAndStateId pathAndStateId : pathAndStateIds) -->Line_55 $$ if (pathAndStateId.legacy) [ FD ]
Line_54 $$ final XContentParser parser-->Line_62 $$ parser = XContentHelper.createParser(new BytesArray(data))[ FD ]
Line_55 $$ if (pathAndStateId.legacy) -->Line_69 $$ logger.trace("state id [[ CD ]
Line_12 $$ List<PathAndStateId> files = new ArrayList()-->Line_34 $$ files.add(pav)[ FD ]
Line_63 $$ state = fromXContent(parser)-->Line_68 $$ state = read(stateFile)[ FD ]
Line_55 $$ if (pathAndStateId.legacy) -->Line_63 $$ state = fromXContent(parser)[ CD ]
Line_25 $$ final Matcher matcher = stateFilePattern.matcher(stateFile.getFileName().toString())-->Line_27 $$ final long stateId = Long.parseLong(matcher.group(1))[ FD ]
Line_25 $$ final Matcher matcher = stateFilePattern.matcher(stateFile.getFileName().toString())-->Line_29 $$ final boolean legacy = MetaDataStateFormat.STATE_FILE_EXTENSION.equals(matcher.group(2)) == false[ FD ]
Line_25 $$ final Matcher matcher = stateFilePattern.matcher(stateFile.getFileName().toString())-->Line_26 $$ if (matcher.matches()) [ FD ]
Line_62 $$ parser = XContentHelper.createParser(new BytesArray(data))-->Line_63 $$ state = fromXContent(parser)[ FD ]
Line_63 $$ state = fromXContent(parser)-->Line_64 $$ if (state == null) [ FD ]
Line_55 $$ if (pathAndStateId.legacy) -->Line_64 $$ if (state == null) [ CD ]
Line_32 $$ PathAndStateId pav = new PathAndStateId(stateFile, stateId, legacy)-->Line_34 $$ files.add(pav)[ FD ]
