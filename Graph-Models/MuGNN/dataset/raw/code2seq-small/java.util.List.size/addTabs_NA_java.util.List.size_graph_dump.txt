Line_11 $$ int i2 = STANDARD_TABS_ORDER.indexOf(o2)-->Line_12 $$ if (i2 == -1)[ FD ]
Line_8 $$ int i1 = STANDARD_TABS_ORDER.indexOf(o1)-->Line_9 $$ if (i1 == -1)[ FD ]
Line_8 $$ int i1 = STANDARD_TABS_ORDER.indexOf(o1)-->Line_14 $$ if (i1 != i2) [ FD ]
Line_11 $$ int i2 = STANDARD_TABS_ORDER.indexOf(o2)-->Line_14 $$ if (i1 != i2) [ FD ]
Line_12 $$ if (i2 == -1)-->Line_13 $$ i2 = STANDARD_TABS_ORDER.size()[ CD ]
Line_4 $$ Collections.sort(sortedTabs, new Comparator<String>() -->Line_9 $$ if (i1 == -1)[ CD ]
Line_14 $$ if (i1 != i2) -->Line_15 $$ return i1 - i2[ CD ]
Line_4 $$ Collections.sort(sortedTabs, new Comparator<String>() -->Line_8 $$ int i1 = STANDARD_TABS_ORDER.indexOf(o1)[ FD ]
Line_4 $$ Collections.sort(sortedTabs, new Comparator<String>() -->Line_11 $$ int i2 = STANDARD_TABS_ORDER.indexOf(o2)[ FD ]
Line_10 $$ i1 = STANDARD_TABS_ORDER.size()-->Line_14 $$ if (i1 != i2) [ FD ]
Line_4 $$ Collections.sort(sortedTabs, new Comparator<String>() -->Line_14 $$ if (i1 != i2) [ CD ]
Line_3 $$ List<String> sortedTabs = new ArrayList<String>(myMainPanels.keySet())-->Line_4 $$ Collections.sort(sortedTabs, new Comparator<String>() [ FD ]
Line_4 $$ Collections.sort(sortedTabs, new Comparator<String>() -->Line_17 $$ return o1.compareTo(o2)[ CD ]
Line_11 $$ int i2 = STANDARD_TABS_ORDER.indexOf(o2)-->Line_13 $$ i2 = STANDARD_TABS_ORDER.size()[ FD ]
Line_4 $$ Collections.sort(sortedTabs, new Comparator<String>() -->Line_8 $$ int i1 = STANDARD_TABS_ORDER.indexOf(o1)[ CD ]
Line_2 $$ public void addTabs(TabbedPaneWrapper tabbedPane) -->Line_21 $$ tabbedPane.addTab(tab, myMainPanels.get(tab))[ FD ]
Line_9 $$ if (i1 == -1)-->Line_10 $$ i1 = STANDARD_TABS_ORDER.size()[ CD ]
Line_4 $$ Collections.sort(sortedTabs, new Comparator<String>() -->Line_17 $$ return o1.compareTo(o2)[ FD ]
Line_2 $$ public void addTabs(TabbedPaneWrapper tabbedPane) -->Line_3 $$ List<String> sortedTabs = new ArrayList<String>(myMainPanels.keySet())[ CD ]
Line_13 $$ i2 = STANDARD_TABS_ORDER.size()-->Line_14 $$ if (i1 != i2) [ FD ]
Line_8 $$ int i1 = STANDARD_TABS_ORDER.indexOf(o1)-->Line_10 $$ i1 = STANDARD_TABS_ORDER.size()[ FD ]
Line_2 $$ public void addTabs(TabbedPaneWrapper tabbedPane) -->Line_4 $$ Collections.sort(sortedTabs, new Comparator<String>() [ CD ]
Line_4 $$ Collections.sort(sortedTabs, new Comparator<String>() -->Line_12 $$ if (i2 == -1)[ CD ]
Line_4 $$ Collections.sort(sortedTabs, new Comparator<String>() -->Line_11 $$ int i2 = STANDARD_TABS_ORDER.indexOf(o2)[ CD ]
