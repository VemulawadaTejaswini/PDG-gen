Line_8 $$ MultiGetRequestBuilder multiGetRequestBuilder = indexDocs(client(), processor, numDocs)-->Line_17 $$ assertMultiGetResponse(multiGetRequestBuilder.get(), numDocs)[ FD ]
Line_5 $$ int numDocs = randomIntBetween(10, 100)-->Line_17 $$ assertMultiGetResponse(multiGetRequestBuilder.get(), numDocs)[ FD ]
Line_2 $$ public void testBulkProcessorFlush() throws InterruptedException -->Line_3 $$ final CountDownLatch latch = new CountDownLatch(1)[ CD ]
Line_5 $$ int numDocs = randomIntBetween(10, 100)-->Line_8 $$ MultiGetRequestBuilder multiGetRequestBuilder = indexDocs(client(), processor, numDocs)[ FD ]
Line_3 $$ final CountDownLatch latch = new CountDownLatch(1)-->Line_9 $$ assertThat(latch.await(randomInt(500), TimeUnit.MILLISECONDS), equalTo(false))[ FD ]
Line_4 $$ BulkProcessorTestListener listener = new BulkProcessorTestListener(latch)-->Line_6 $$ try (BulkProcessor processor = //let's make sure that this bulk won't be automatically flushed[ FD ]
Line_2 $$ public void testBulkProcessorFlush() throws InterruptedException -->Line_5 $$ int numDocs = randomIntBetween(10, 100)[ CD ]
Line_3 $$ final CountDownLatch latch = new CountDownLatch(1)-->Line_12 $$ latch.await()[ FD ]
Line_5 $$ int numDocs = randomIntBetween(10, 100)-->Line_16 $$ assertResponseItems(listener.bulkItems, numDocs)[ FD ]
Line_6 $$ try (BulkProcessor processor = //let's make sure that this bulk won't be automatically flushed-->Line_8 $$ MultiGetRequestBuilder multiGetRequestBuilder = indexDocs(client(), processor, numDocs)[ FD ]
Line_2 $$ public void testBulkProcessorFlush() throws InterruptedException -->Line_4 $$ BulkProcessorTestListener listener = new BulkProcessorTestListener(latch)[ CD ]
