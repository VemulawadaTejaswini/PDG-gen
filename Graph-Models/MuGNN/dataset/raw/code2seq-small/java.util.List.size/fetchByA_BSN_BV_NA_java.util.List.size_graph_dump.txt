Line_13 $$ Object[] finderArgs = new Object[] -->Line_74 $$ finderCache.removeResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs)[ FD ]
Line_51 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_52 $$ qPos.add(appId)[ FD ]
Line_19 $$ Module module = (Module) result-->Line_20 $$ if ((appId != module.getAppId()) || !Validator.equals(bundleSymbolicName, module.getBundleSymbolicName()) || !Validator.equals(bundleVersion, module.getBundleVersion())) [ FD ]
Line_80 $$ if (result instanceof List<?>) -->Line_81 $$ return null[ CD ]
Line_49 $$ session = openSession()-->Line_50 $$ Query q = session.createQuery(sql)[ FD ]
Line_67 $$ result = module-->Line_80 $$ if (result instanceof List<?>) [ FD ]
Line_19 $$ Module module = (Module) result-->Line_67 $$ result = module[ FD ]
Line_25 $$ StringBundler query = new StringBundler(5)-->Line_32 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLESYMBOLICNAME_3)[ FD ]
Line_21 $$ result = null-->Line_80 $$ if (result instanceof List<?>) [ FD ]
Line_51 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_57 $$ qPos.add(bundleVersion)[ FD ]
Line_31 $$ if (bundleSymbolicName.equals(StringPool.BLANK)) -->Line_35 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLESYMBOLICNAME_2)[ CD ]
Line_21 $$ result = null-->Line_24 $$ if (result == null) [ FD ]
Line_59 $$ List<Module> list = q.list()-->Line_60 $$ if (list.isEmpty()) [ FD ]
Line_24 $$ if (result == null) -->Line_47 $$ Session session = null[ CD ]
Line_59 $$ List<Module> list = q.list()-->Line_61 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, list)[ FD ]
Line_25 $$ StringBundler query = new StringBundler(5)-->Line_44 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLEVERSION_2)[ FD ]
Line_40 $$ if (bundleVersion.equals(StringPool.BLANK)) -->Line_43 $$ bindBundleVersion = true[ CD ]
Line_53 $$ if (bindBundleSymbolicName) -->Line_54 $$ qPos.add(bundleSymbolicName)[ CD ]
Line_13 $$ Object[] finderArgs = new Object[] -->Line_64 $$ _log.warn("ModulePersistenceImpl.fetchByA_BSN_BV(long, String, String, boolean) with parameters (" + StringUtil.merge(finderArgs) + ") yields a result set with more than 1 result. This violates the logical unique restriction. There is no order guarantee on which result is returned by this finder.")[ FD ]
Line_60 $$ if (list.isEmpty()) -->Line_68 $$ cacheResult(module)[ CD ]
Line_19 $$ Module module = (Module) result-->Line_69 $$ if ((module.getAppId() != appId) || (module.getBundleSymbolicName() == null) || !module.getBundleSymbolicName().equals(bundleSymbolicName) || (module.getBundleVersion() == null) || !module.getBundleVersion().equals(bundleVersion)) [ FD ]
Line_47 $$ Session session = null-->Line_77 $$ closeSession(session)[ FD ]
Line_46 $$ String sql = query.toString()-->Line_50 $$ Query q = session.createQuery(sql)[ FD ]
Line_63 $$ if ((list.size() > 1) && _log.isWarnEnabled()) -->Line_64 $$ _log.warn("ModulePersistenceImpl.fetchByA_BSN_BV(long, String, String, boolean) with parameters (" + StringUtil.merge(finderArgs) + ") yields a result set with more than 1 result. This violates the logical unique restriction. There is no order guarantee on which result is returned by this finder.")[ CD ]
Line_18 $$ if (result instanceof Module) -->Line_19 $$ Module module = (Module) result[ CD ]
Line_38 $$ if (bundleVersion == null) -->Line_39 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLEVERSION_1)[ CD ]
Line_28 $$ boolean bindBundleSymbolicName = false-->Line_34 $$ bindBundleSymbolicName = true[ FD ]
Line_56 $$ if (bindBundleVersion) -->Line_57 $$ qPos.add(bundleVersion)[ CD ]
Line_47 $$ Session session = null-->Line_49 $$ session = openSession()[ FD ]
Line_59 $$ List<Module> list = q.list()-->Line_66 $$ Module module = list.get(0)[ FD ]
Line_37 $$ boolean bindBundleVersion = false-->Line_43 $$ bindBundleVersion = true[ FD ]
Line_16 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, this)-->Line_67 $$ result = module[ FD ]
Line_69 $$ if ((module.getAppId() != appId) || (module.getBundleSymbolicName() == null) || !module.getBundleSymbolicName().equals(bundleSymbolicName) || (module.getBundleVersion() == null) || !module.getBundleVersion().equals(bundleVersion)) -->Line_70 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, module)[ CD ]
Line_19 $$ Module module = (Module) result-->Line_68 $$ cacheResult(module)[ FD ]
Line_14 $$ Object result = null-->Line_18 $$ if (result instanceof Module) [ FD ]
Line_25 $$ StringBundler query = new StringBundler(5)-->Line_39 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLEVERSION_1)[ FD ]
Line_14 $$ Object result = null-->Line_80 $$ if (result instanceof List<?>) [ FD ]
Line_25 $$ StringBundler query = new StringBundler(5)-->Line_46 $$ String sql = query.toString()[ FD ]
Line_50 $$ Query q = session.createQuery(sql)-->Line_59 $$ List<Module> list = q.list()[ FD ]
Line_49 $$ session = openSession()-->Line_77 $$ closeSession(session)[ FD ]
Line_16 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, this)-->Line_18 $$ if (result instanceof Module) [ FD ]
Line_25 $$ StringBundler query = new StringBundler(5)-->Line_27 $$ query.append(_FINDER_COLUMN_A_BSN_BV_APPID_2)[ FD ]
Line_59 $$ List<Module> list = q.list()-->Line_63 $$ if ((list.size() > 1) && _log.isWarnEnabled()) [ FD ]
Line_24 $$ if (result == null) -->Line_38 $$ if (bundleVersion == null) [ CD ]
Line_40 $$ if (bundleVersion.equals(StringPool.BLANK)) -->Line_41 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLEVERSION_3)[ CD ]
Line_19 $$ Module module = (Module) result-->Line_70 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, module)[ FD ]
Line_29 $$ if (bundleSymbolicName == null) -->Line_31 $$ if (bundleSymbolicName.equals(StringPool.BLANK)) [ CD ]
Line_60 $$ if (list.isEmpty()) -->Line_63 $$ if ((list.size() > 1) && _log.isWarnEnabled()) [ CD ]
Line_38 $$ if (bundleVersion == null) -->Line_40 $$ if (bundleVersion.equals(StringPool.BLANK)) [ CD ]
Line_40 $$ if (bundleVersion.equals(StringPool.BLANK)) -->Line_44 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLEVERSION_2)[ CD ]
Line_25 $$ StringBundler query = new StringBundler(5)-->Line_26 $$ query.append(_SQL_SELECT_MODULE_WHERE)[ FD ]
Line_60 $$ if (list.isEmpty()) -->Line_67 $$ result = module[ CD ]
Line_25 $$ StringBundler query = new StringBundler(5)-->Line_41 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLEVERSION_3)[ FD ]
Line_14 $$ Object result = null-->Line_67 $$ result = module[ FD ]
Line_14 $$ Object result = null-->Line_24 $$ if (result == null) [ FD ]
Line_60 $$ if (list.isEmpty()) -->Line_69 $$ if ((module.getAppId() != appId) || (module.getBundleSymbolicName() == null) || !module.getBundleSymbolicName().equals(bundleSymbolicName) || (module.getBundleVersion() == null) || !module.getBundleVersion().equals(bundleVersion)) [ CD ]
Line_24 $$ if (result == null) -->Line_27 $$ query.append(_FINDER_COLUMN_A_BSN_BV_APPID_2)[ CD ]
Line_60 $$ if (list.isEmpty()) -->Line_61 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, list)[ CD ]
Line_24 $$ if (result == null) -->Line_28 $$ boolean bindBundleSymbolicName = false[ CD ]
Line_16 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, this)-->Line_21 $$ result = null[ FD ]
Line_13 $$ Object[] finderArgs = new Object[] -->Line_70 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, module)[ FD ]
Line_25 $$ StringBundler query = new StringBundler(5)-->Line_35 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLESYMBOLICNAME_2)[ FD ]
Line_80 $$ if (result instanceof List<?>) -->Line_83 $$ return (Module) result[ CD ]
Line_14 $$ Object result = null-->Line_16 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, this)[ FD ]
Line_20 $$ if ((appId != module.getAppId()) || !Validator.equals(bundleSymbolicName, module.getBundleSymbolicName()) || !Validator.equals(bundleVersion, module.getBundleVersion())) -->Line_21 $$ result = null[ CD ]
Line_25 $$ StringBundler query = new StringBundler(5)-->Line_30 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLESYMBOLICNAME_1)[ FD ]
Line_24 $$ if (result == null) -->Line_37 $$ boolean bindBundleVersion = false[ CD ]
Line_31 $$ if (bundleSymbolicName.equals(StringPool.BLANK)) -->Line_32 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLESYMBOLICNAME_3)[ CD ]
Line_14 $$ Object result = null-->Line_21 $$ result = null[ FD ]
Line_15 $$ if (retrieveFromCache) -->Line_16 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, this)[ CD ]
Line_31 $$ if (bundleSymbolicName.equals(StringPool.BLANK)) -->Line_34 $$ bindBundleSymbolicName = true[ CD ]
Line_21 $$ result = null-->Line_67 $$ result = module[ FD ]
Line_47 $$ Session session = null-->Line_50 $$ Query q = session.createQuery(sql)[ FD ]
Line_24 $$ if (result == null) -->Line_29 $$ if (bundleSymbolicName == null) [ CD ]
Line_24 $$ if (result == null) -->Line_26 $$ query.append(_SQL_SELECT_MODULE_WHERE)[ CD ]
Line_50 $$ Query q = session.createQuery(sql)-->Line_51 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_16 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, this)-->Line_24 $$ if (result == null) [ FD ]
Line_13 $$ Object[] finderArgs = new Object[] -->Line_61 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, list)[ FD ]
Line_24 $$ if (result == null) -->Line_25 $$ StringBundler query = new StringBundler(5)[ CD ]
Line_16 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, this)-->Line_80 $$ if (result instanceof List<?>) [ FD ]
Line_60 $$ if (list.isEmpty()) -->Line_66 $$ Module module = list.get(0)[ CD ]
Line_29 $$ if (bundleSymbolicName == null) -->Line_30 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLESYMBOLICNAME_1)[ CD ]
Line_24 $$ if (result == null) -->Line_46 $$ String sql = query.toString()[ CD ]
Line_13 $$ Object[] finderArgs = new Object[] -->Line_16 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, this)[ FD ]
Line_18 $$ if (result instanceof Module) -->Line_20 $$ if ((appId != module.getAppId()) || !Validator.equals(bundleSymbolicName, module.getBundleSymbolicName()) || !Validator.equals(bundleVersion, module.getBundleVersion())) [ CD ]
Line_51 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_54 $$ qPos.add(bundleSymbolicName)[ FD ]
