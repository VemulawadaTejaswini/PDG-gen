Line_9 $$ Module module = (Module) result-->Line_58 $$ cacheResult(module)[ FD ]
Line_4 $$ Object result = null-->Line_57 $$ result = module[ FD ]
Line_15 $$ StringBundler query = new StringBundler(5)-->Line_22 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLESYMBOLICNAME_3)[ FD ]
Line_6 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, this)-->Line_8 $$ if (result instanceof Module) [ FD ]
Line_49 $$ List<Module> list = q.list()-->Line_51 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, list)[ FD ]
Line_2 $$ public Module fetchByA_BSN_BV(long appId, String bundleSymbolicName, String bundleVersion, boolean retrieveFromCache) -->Line_30 $$ if (bundleVersion.equals(StringPool.BLANK)) [ FD ]
Line_49 $$ List<Module> list = q.list()-->Line_50 $$ if (list.isEmpty()) [ FD ]
Line_2 $$ public Module fetchByA_BSN_BV(long appId, String bundleSymbolicName, String bundleVersion, boolean retrieveFromCache) -->Line_47 $$ qPos.add(bundleVersion)[ FD ]
Line_70 $$ if (result instanceof List<?>) -->Line_73 $$ return (Module) result[ CD ]
Line_2 $$ public Module fetchByA_BSN_BV(long appId, String bundleSymbolicName, String bundleVersion, boolean retrieveFromCache) -->Line_3 $$ Object[] finderArgs = new Object[] [ CD ]
Line_2 $$ public Module fetchByA_BSN_BV(long appId, String bundleSymbolicName, String bundleVersion, boolean retrieveFromCache) -->Line_44 $$ qPos.add(bundleSymbolicName)[ FD ]
Line_50 $$ if (list.isEmpty()) -->Line_53 $$ if ((list.size() > 1) && _log.isWarnEnabled()) [ CD ]
Line_2 $$ public Module fetchByA_BSN_BV(long appId, String bundleSymbolicName, String bundleVersion, boolean retrieveFromCache) -->Line_4 $$ Object result = null[ CD ]
Line_39 $$ session = openSession()-->Line_67 $$ closeSession(session)[ FD ]
Line_14 $$ if (result == null) -->Line_15 $$ StringBundler query = new StringBundler(5)[ CD ]
Line_46 $$ if (bindBundleVersion) -->Line_47 $$ qPos.add(bundleVersion)[ CD ]
Line_53 $$ if ((list.size() > 1) && _log.isWarnEnabled()) -->Line_54 $$ _log.warn("ModulePersistenceImpl.fetchByA_BSN_BV(long, String, String, boolean) with parameters (" + StringUtil.merge(finderArgs) + ") yields a result set with more than 1 result. This violates the logical unique restriction. There is no order guarantee on which result is returned by this finder.")[ CD ]
Line_8 $$ if (result instanceof Module) -->Line_9 $$ Module module = (Module) result[ CD ]
Line_9 $$ Module module = (Module) result-->Line_59 $$ if ((module.getAppId() != appId) || (module.getBundleSymbolicName() == null) || !module.getBundleSymbolicName().equals(bundleSymbolicName) || (module.getBundleVersion() == null) || !module.getBundleVersion().equals(bundleVersion)) [ FD ]
Line_57 $$ result = module-->Line_70 $$ if (result instanceof List<?>) [ FD ]
Line_14 $$ if (result == null) -->Line_18 $$ boolean bindBundleSymbolicName = false[ CD ]
Line_50 $$ if (list.isEmpty()) -->Line_56 $$ Module module = list.get(0)[ CD ]
Line_2 $$ public Module fetchByA_BSN_BV(long appId, String bundleSymbolicName, String bundleVersion, boolean retrieveFromCache) -->Line_8 $$ if (result instanceof Module) [ CD ]
Line_50 $$ if (list.isEmpty()) -->Line_58 $$ cacheResult(module)[ CD ]
Line_37 $$ Session session = null-->Line_67 $$ closeSession(session)[ FD ]
Line_2 $$ public Module fetchByA_BSN_BV(long appId, String bundleSymbolicName, String bundleVersion, boolean retrieveFromCache) -->Line_14 $$ if (result == null) [ CD ]
Line_49 $$ List<Module> list = q.list()-->Line_53 $$ if ((list.size() > 1) && _log.isWarnEnabled()) [ FD ]
Line_19 $$ if (bundleSymbolicName == null) -->Line_20 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLESYMBOLICNAME_1)[ CD ]
Line_11 $$ result = null-->Line_14 $$ if (result == null) [ FD ]
Line_8 $$ if (result instanceof Module) -->Line_10 $$ if ((appId != module.getAppId()) || !Validator.equals(bundleSymbolicName, module.getBundleSymbolicName()) || !Validator.equals(bundleVersion, module.getBundleVersion())) [ CD ]
Line_10 $$ if ((appId != module.getAppId()) || !Validator.equals(bundleSymbolicName, module.getBundleSymbolicName()) || !Validator.equals(bundleVersion, module.getBundleVersion())) -->Line_11 $$ result = null[ CD ]
Line_4 $$ Object result = null-->Line_6 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, this)[ FD ]
Line_2 $$ public Module fetchByA_BSN_BV(long appId, String bundleSymbolicName, String bundleVersion, boolean retrieveFromCache) -->Line_70 $$ if (result instanceof List<?>) [ CD ]
Line_14 $$ if (result == null) -->Line_17 $$ query.append(_FINDER_COLUMN_A_BSN_BV_APPID_2)[ CD ]
Line_14 $$ if (result == null) -->Line_28 $$ if (bundleVersion == null) [ CD ]
Line_36 $$ String sql = query.toString()-->Line_40 $$ Query q = session.createQuery(sql)[ FD ]
Line_9 $$ Module module = (Module) result-->Line_10 $$ if ((appId != module.getAppId()) || !Validator.equals(bundleSymbolicName, module.getBundleSymbolicName()) || !Validator.equals(bundleVersion, module.getBundleVersion())) [ FD ]
Line_41 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_44 $$ qPos.add(bundleSymbolicName)[ FD ]
Line_50 $$ if (list.isEmpty()) -->Line_57 $$ result = module[ CD ]
Line_2 $$ public Module fetchByA_BSN_BV(long appId, String bundleSymbolicName, String bundleVersion, boolean retrieveFromCache) -->Line_19 $$ if (bundleSymbolicName == null) [ FD ]
Line_15 $$ StringBundler query = new StringBundler(5)-->Line_29 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLEVERSION_1)[ FD ]
Line_6 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, this)-->Line_14 $$ if (result == null) [ FD ]
Line_2 $$ public Module fetchByA_BSN_BV(long appId, String bundleSymbolicName, String bundleVersion, boolean retrieveFromCache) -->Line_28 $$ if (bundleVersion == null) [ FD ]
Line_43 $$ if (bindBundleSymbolicName) -->Line_44 $$ qPos.add(bundleSymbolicName)[ CD ]
Line_3 $$ Object[] finderArgs = new Object[] -->Line_64 $$ finderCache.removeResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs)[ FD ]
Line_4 $$ Object result = null-->Line_70 $$ if (result instanceof List<?>) [ FD ]
Line_41 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_47 $$ qPos.add(bundleVersion)[ FD ]
Line_14 $$ if (result == null) -->Line_36 $$ String sql = query.toString()[ CD ]
Line_30 $$ if (bundleVersion.equals(StringPool.BLANK)) -->Line_33 $$ bindBundleVersion = true[ CD ]
Line_40 $$ Query q = session.createQuery(sql)-->Line_41 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_37 $$ Session session = null-->Line_39 $$ session = openSession()[ FD ]
Line_11 $$ result = null-->Line_57 $$ result = module[ FD ]
Line_4 $$ Object result = null-->Line_11 $$ result = null[ FD ]
Line_15 $$ StringBundler query = new StringBundler(5)-->Line_16 $$ query.append(_SQL_SELECT_MODULE_WHERE)[ FD ]
Line_39 $$ session = openSession()-->Line_40 $$ Query q = session.createQuery(sql)[ FD ]
Line_40 $$ Query q = session.createQuery(sql)-->Line_49 $$ List<Module> list = q.list()[ FD ]
Line_6 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, this)-->Line_57 $$ result = module[ FD ]
Line_3 $$ Object[] finderArgs = new Object[] -->Line_60 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, module)[ FD ]
Line_6 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, this)-->Line_11 $$ result = null[ FD ]
Line_14 $$ if (result == null) -->Line_27 $$ boolean bindBundleVersion = false[ CD ]
Line_2 $$ public Module fetchByA_BSN_BV(long appId, String bundleSymbolicName, String bundleVersion, boolean retrieveFromCache) -->Line_5 $$ if (retrieveFromCache) [ CD ]
Line_27 $$ boolean bindBundleVersion = false-->Line_33 $$ bindBundleVersion = true[ FD ]
Line_70 $$ if (result instanceof List<?>) -->Line_71 $$ return null[ CD ]
Line_14 $$ if (result == null) -->Line_16 $$ query.append(_SQL_SELECT_MODULE_WHERE)[ CD ]
Line_37 $$ Session session = null-->Line_40 $$ Query q = session.createQuery(sql)[ FD ]
Line_50 $$ if (list.isEmpty()) -->Line_51 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, list)[ CD ]
Line_3 $$ Object[] finderArgs = new Object[] -->Line_6 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, this)[ FD ]
Line_2 $$ public Module fetchByA_BSN_BV(long appId, String bundleSymbolicName, String bundleVersion, boolean retrieveFromCache) -->Line_10 $$ if ((appId != module.getAppId()) || !Validator.equals(bundleSymbolicName, module.getBundleSymbolicName()) || !Validator.equals(bundleVersion, module.getBundleVersion())) [ FD ]
Line_9 $$ Module module = (Module) result-->Line_60 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, module)[ FD ]
Line_5 $$ if (retrieveFromCache) -->Line_6 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, this)[ CD ]
Line_15 $$ StringBundler query = new StringBundler(5)-->Line_25 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLESYMBOLICNAME_2)[ FD ]
Line_2 $$ public Module fetchByA_BSN_BV(long appId, String bundleSymbolicName, String bundleVersion, boolean retrieveFromCache) -->Line_21 $$ if (bundleSymbolicName.equals(StringPool.BLANK)) [ FD ]
Line_28 $$ if (bundleVersion == null) -->Line_29 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLEVERSION_1)[ CD ]
Line_4 $$ Object result = null-->Line_8 $$ if (result instanceof Module) [ FD ]
Line_50 $$ if (list.isEmpty()) -->Line_59 $$ if ((module.getAppId() != appId) || (module.getBundleSymbolicName() == null) || !module.getBundleSymbolicName().equals(bundleSymbolicName) || (module.getBundleVersion() == null) || !module.getBundleVersion().equals(bundleVersion)) [ CD ]
Line_6 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, this)-->Line_70 $$ if (result instanceof List<?>) [ FD ]
Line_41 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_42 $$ qPos.add(appId)[ FD ]
Line_2 $$ public Module fetchByA_BSN_BV(long appId, String bundleSymbolicName, String bundleVersion, boolean retrieveFromCache) -->Line_42 $$ qPos.add(appId)[ FD ]
Line_21 $$ if (bundleSymbolicName.equals(StringPool.BLANK)) -->Line_25 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLESYMBOLICNAME_2)[ CD ]
Line_15 $$ StringBundler query = new StringBundler(5)-->Line_17 $$ query.append(_FINDER_COLUMN_A_BSN_BV_APPID_2)[ FD ]
Line_14 $$ if (result == null) -->Line_37 $$ Session session = null[ CD ]
Line_15 $$ StringBundler query = new StringBundler(5)-->Line_36 $$ String sql = query.toString()[ FD ]
Line_3 $$ Object[] finderArgs = new Object[] -->Line_54 $$ _log.warn("ModulePersistenceImpl.fetchByA_BSN_BV(long, String, String, boolean) with parameters (" + StringUtil.merge(finderArgs) + ") yields a result set with more than 1 result. This violates the logical unique restriction. There is no order guarantee on which result is returned by this finder.")[ FD ]
Line_15 $$ StringBundler query = new StringBundler(5)-->Line_20 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLESYMBOLICNAME_1)[ FD ]
Line_19 $$ if (bundleSymbolicName == null) -->Line_21 $$ if (bundleSymbolicName.equals(StringPool.BLANK)) [ CD ]
Line_59 $$ if ((module.getAppId() != appId) || (module.getBundleSymbolicName() == null) || !module.getBundleSymbolicName().equals(bundleSymbolicName) || (module.getBundleVersion() == null) || !module.getBundleVersion().equals(bundleVersion)) -->Line_60 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, module)[ CD ]
Line_28 $$ if (bundleVersion == null) -->Line_30 $$ if (bundleVersion.equals(StringPool.BLANK)) [ CD ]
Line_2 $$ public Module fetchByA_BSN_BV(long appId, String bundleSymbolicName, String bundleVersion, boolean retrieveFromCache) -->Line_59 $$ if ((module.getAppId() != appId) || (module.getBundleSymbolicName() == null) || !module.getBundleSymbolicName().equals(bundleSymbolicName) || (module.getBundleVersion() == null) || !module.getBundleVersion().equals(bundleVersion)) [ FD ]
Line_30 $$ if (bundleVersion.equals(StringPool.BLANK)) -->Line_31 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLEVERSION_3)[ CD ]
Line_49 $$ List<Module> list = q.list()-->Line_56 $$ Module module = list.get(0)[ FD ]
Line_4 $$ Object result = null-->Line_14 $$ if (result == null) [ FD ]
Line_21 $$ if (bundleSymbolicName.equals(StringPool.BLANK)) -->Line_22 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLESYMBOLICNAME_3)[ CD ]
Line_18 $$ boolean bindBundleSymbolicName = false-->Line_24 $$ bindBundleSymbolicName = true[ FD ]
Line_21 $$ if (bundleSymbolicName.equals(StringPool.BLANK)) -->Line_24 $$ bindBundleSymbolicName = true[ CD ]
Line_15 $$ StringBundler query = new StringBundler(5)-->Line_34 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLEVERSION_2)[ FD ]
Line_15 $$ StringBundler query = new StringBundler(5)-->Line_31 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLEVERSION_3)[ FD ]
Line_14 $$ if (result == null) -->Line_19 $$ if (bundleSymbolicName == null) [ CD ]
Line_30 $$ if (bundleVersion.equals(StringPool.BLANK)) -->Line_34 $$ query.append(_FINDER_COLUMN_A_BSN_BV_BUNDLEVERSION_2)[ CD ]
Line_9 $$ Module module = (Module) result-->Line_57 $$ result = module[ FD ]
Line_11 $$ result = null-->Line_70 $$ if (result instanceof List<?>) [ FD ]
Line_3 $$ Object[] finderArgs = new Object[] -->Line_51 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_BSN_BV, finderArgs, list)[ FD ]
