Line_2 $$ public void testEmbeddableThatExtendsMappedSuperclass() -->Line_13 $$ Assert.assertNull(entityRev1.getValue().getCode())[ CD ]
Line_2 $$ public void testEmbeddableThatExtendsMappedSuperclass() -->Line_10 $$ em.getTransaction().commit()[ CD ]
Line_6 $$ AuditReader reader = AuditReaderFactory.get(em)-->Line_9 $$ EntityWithEmbeddableWithDeclaredData entityRev1 = reader.find(EntityWithEmbeddableWithDeclaredData.class, id, revs.get(0))[ FD ]
Line_2 $$ public void testEmbeddableThatExtendsMappedSuperclass() -->Line_5 $$ EntityWithEmbeddableWithDeclaredData entityLoaded = em.find(EntityWithEmbeddableWithDeclaredData.class, id)[ CD ]
Line_3 $$ EntityManager em = getEntityManager()-->Line_4 $$ em.getTransaction().begin()[ FD ]
Line_2 $$ public void testEmbeddableThatExtendsMappedSuperclass() -->Line_6 $$ AuditReader reader = AuditReaderFactory.get(em)[ CD ]
Line_5 $$ EntityWithEmbeddableWithDeclaredData entityLoaded = em.find(EntityWithEmbeddableWithDeclaredData.class, id)-->Line_11 $$ Assert.assertEquals(entityLoaded.getName(), entityRev1.getName())[ FD ]
Line_2 $$ public void testEmbeddableThatExtendsMappedSuperclass() -->Line_9 $$ EntityWithEmbeddableWithDeclaredData entityRev1 = reader.find(EntityWithEmbeddableWithDeclaredData.class, id, revs.get(0))[ CD ]
Line_2 $$ public void testEmbeddableThatExtendsMappedSuperclass() -->Line_12 $$ Assert.assertEquals(entityLoaded.getValue().getCodeart(), entityRev1.getValue().getCodeart())[ CD ]
Line_2 $$ public void testEmbeddableThatExtendsMappedSuperclass() -->Line_8 $$ Assert.assertEquals(1, revs.size())[ CD ]
Line_3 $$ EntityManager em = getEntityManager()-->Line_6 $$ AuditReader reader = AuditReaderFactory.get(em)[ FD ]
Line_9 $$ EntityWithEmbeddableWithDeclaredData entityRev1 = reader.find(EntityWithEmbeddableWithDeclaredData.class, id, revs.get(0))-->Line_13 $$ Assert.assertNull(entityRev1.getValue().getCode())[ FD ]
Line_2 $$ public void testEmbeddableThatExtendsMappedSuperclass() -->Line_7 $$ List<Number> revs = reader.getRevisions(EntityWithEmbeddableWithDeclaredData.class, id)[ CD ]
Line_3 $$ EntityManager em = getEntityManager()-->Line_10 $$ em.getTransaction().commit()[ FD ]
Line_2 $$ public void testEmbeddableThatExtendsMappedSuperclass() -->Line_11 $$ Assert.assertEquals(entityLoaded.getName(), entityRev1.getName())[ CD ]
Line_7 $$ List<Number> revs = reader.getRevisions(EntityWithEmbeddableWithDeclaredData.class, id)-->Line_8 $$ Assert.assertEquals(1, revs.size())[ FD ]
Line_2 $$ public void testEmbeddableThatExtendsMappedSuperclass() -->Line_3 $$ EntityManager em = getEntityManager()[ CD ]
Line_9 $$ EntityWithEmbeddableWithDeclaredData entityRev1 = reader.find(EntityWithEmbeddableWithDeclaredData.class, id, revs.get(0))-->Line_12 $$ Assert.assertEquals(entityLoaded.getValue().getCodeart(), entityRev1.getValue().getCodeart())[ FD ]
Line_5 $$ EntityWithEmbeddableWithDeclaredData entityLoaded = em.find(EntityWithEmbeddableWithDeclaredData.class, id)-->Line_12 $$ Assert.assertEquals(entityLoaded.getValue().getCodeart(), entityRev1.getValue().getCodeart())[ FD ]
Line_6 $$ AuditReader reader = AuditReaderFactory.get(em)-->Line_7 $$ List<Number> revs = reader.getRevisions(EntityWithEmbeddableWithDeclaredData.class, id)[ FD ]
Line_7 $$ List<Number> revs = reader.getRevisions(EntityWithEmbeddableWithDeclaredData.class, id)-->Line_9 $$ EntityWithEmbeddableWithDeclaredData entityRev1 = reader.find(EntityWithEmbeddableWithDeclaredData.class, id, revs.get(0))[ FD ]
Line_3 $$ EntityManager em = getEntityManager()-->Line_5 $$ EntityWithEmbeddableWithDeclaredData entityLoaded = em.find(EntityWithEmbeddableWithDeclaredData.class, id)[ FD ]
Line_2 $$ public void testEmbeddableThatExtendsMappedSuperclass() -->Line_4 $$ em.getTransaction().begin()[ CD ]
Line_9 $$ EntityWithEmbeddableWithDeclaredData entityRev1 = reader.find(EntityWithEmbeddableWithDeclaredData.class, id, revs.get(0))-->Line_11 $$ Assert.assertEquals(entityLoaded.getName(), entityRev1.getName())[ FD ]
