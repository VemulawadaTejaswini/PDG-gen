Line_14 $$ for (VirtualFile file : fileContents) -->Line_19 $$ byteContents.add(file.contentsToByteArray())[ FD ]
Line_2 $$ public MergeRequest createBinaryMergeRequestFromFiles(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<VirtualFile> fileContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_3 $$ if (fileContents.size() != 3)[ FD ]
Line_8 $$ FileContent outputContent = myContentFactory.createFile(project, output)-->Line_9 $$ if (outputContent == null)[ FD ]
Line_14 $$ for (VirtualFile file : fileContents) -->Line_17 $$ throw new InvalidDiffRequestException("Can't create content: " + file.getPresentableUrl())[ FD ]
Line_2 $$ public MergeRequest createBinaryMergeRequestFromFiles(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<VirtualFile> fileContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_5 $$ if (contentTitles.size() != 3)[ FD ]
Line_2 $$ public MergeRequest createBinaryMergeRequestFromFiles(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<VirtualFile> fileContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_3 $$ if (fileContents.size() != 3)[ CD ]
Line_15 $$ FileContent content = myContentFactory.createFile(project, file)-->Line_18 $$ contents.add(content)[ FD ]
Line_13 $$ List<byte[]> byteContents = new ArrayList<byte[]>(3)-->Line_19 $$ byteContents.add(file.contentsToByteArray())[ FD ]
Line_2 $$ public MergeRequest createBinaryMergeRequestFromFiles(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<VirtualFile> fileContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_5 $$ if (contentTitles.size() != 3)[ CD ]
Line_2 $$ public MergeRequest createBinaryMergeRequestFromFiles(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<VirtualFile> fileContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_10 $$ throw new InvalidDiffRequestException("Can't create output content: " + output.getPresentableUrl())[ FD ]
Line_2 $$ public MergeRequest createBinaryMergeRequestFromFiles(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<VirtualFile> fileContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_8 $$ FileContent outputContent = myContentFactory.createFile(project, output)[ FD ]
Line_12 $$ List<DiffContent> contents = new ArrayList<DiffContent>(3)-->Line_18 $$ contents.add(content)[ FD ]
Line_2 $$ public MergeRequest createBinaryMergeRequestFromFiles(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<VirtualFile> fileContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_11 $$ byte[] originalContent = output.contentsToByteArray()[ FD ]
Line_15 $$ FileContent content = myContentFactory.createFile(project, file)-->Line_16 $$ if (content == null)[ FD ]
Line_14 $$ for (VirtualFile file : fileContents) -->Line_15 $$ FileContent content = myContentFactory.createFile(project, file)[ FD ]
Line_2 $$ public MergeRequest createBinaryMergeRequestFromFiles(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<VirtualFile> fileContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_15 $$ FileContent content = myContentFactory.createFile(project, file)[ FD ]
