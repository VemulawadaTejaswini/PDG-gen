Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_21 $$ assertThat(listener.bulkFailures.size(), equalTo(0))[ CD ]
Line_4 $$ int numDocs = randomIntBetween(10, 100)-->Line_23 $$ assertMultiGetResponse(multiGetRequestBuilder.get(), numDocs)[ FD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_9 $$ assertThat(processor.awaitClose(1, TimeUnit.MINUTES), is(true))[ CD ]
Line_5 $$ BulkProcessor processor = //let's make sure that the bulk action limit trips, one single execution will index all the documents-->Line_18 $$ assertThat(processor.isOpen(), is(false))[ FD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_7 $$ MultiGetRequestBuilder multiGetRequestBuilder = indexDocs(client(), processor, numDocs)[ CD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_4 $$ int numDocs = randomIntBetween(10, 100)[ CD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_19 $$ assertThat(listener.beforeCounts.get(), greaterThanOrEqualTo(1))[ CD ]
Line_5 $$ BulkProcessor processor = //let's make sure that the bulk action limit trips, one single execution will index all the documents-->Line_9 $$ assertThat(processor.awaitClose(1, TimeUnit.MINUTES), is(true))[ FD ]
Line_4 $$ int numDocs = randomIntBetween(10, 100)-->Line_22 $$ assertResponseItems(listener.bulkItems, numDocs)[ FD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_3 $$ BulkProcessorTestListener listener = new BulkProcessorTestListener()[ CD ]
Line_4 $$ int numDocs = randomIntBetween(10, 100)-->Line_5 $$ BulkProcessor processor = //let's make sure that the bulk action limit trips, one single execution will index all the documents[ FD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_22 $$ assertResponseItems(listener.bulkItems, numDocs)[ CD ]
Line_5 $$ BulkProcessor processor = //let's make sure that the bulk action limit trips, one single execution will index all the documents-->Line_15 $$ processor.close()[ FD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_5 $$ BulkProcessor processor = //let's make sure that the bulk action limit trips, one single execution will index all the documents[ CD ]
Line_4 $$ int numDocs = randomIntBetween(10, 100)-->Line_7 $$ MultiGetRequestBuilder multiGetRequestBuilder = indexDocs(client(), processor, numDocs)[ FD ]
Line_5 $$ BulkProcessor processor = //let's make sure that the bulk action limit trips, one single execution will index all the documents-->Line_13 $$ assertThat(processor.awaitClose(1, TimeUnit.MINUTES), is(true))[ FD ]
Line_5 $$ BulkProcessor processor = //let's make sure that the bulk action limit trips, one single execution will index all the documents-->Line_7 $$ MultiGetRequestBuilder multiGetRequestBuilder = indexDocs(client(), processor, numDocs)[ FD ]
Line_5 $$ BulkProcessor processor = //let's make sure that the bulk action limit trips, one single execution will index all the documents-->Line_8 $$ assertThat(processor.isOpen(), is(true))[ FD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_10 $$ if (randomBoolean()) [ CD ]
Line_7 $$ MultiGetRequestBuilder multiGetRequestBuilder = indexDocs(client(), processor, numDocs)-->Line_23 $$ assertMultiGetResponse(multiGetRequestBuilder.get(), numDocs)[ FD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_20 $$ assertThat(listener.afterCounts.get(), greaterThanOrEqualTo(1))[ CD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_23 $$ assertMultiGetResponse(multiGetRequestBuilder.get(), numDocs)[ CD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_18 $$ assertThat(processor.isOpen(), is(false))[ CD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_8 $$ assertThat(processor.isOpen(), is(true))[ CD ]
Line_3 $$ BulkProcessorTestListener listener = new BulkProcessorTestListener()-->Line_5 $$ BulkProcessor processor = //let's make sure that the bulk action limit trips, one single execution will index all the documents[ FD ]
