Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_5 $$ BulkProcessor processor = BulkProcessor.builder(client(), listener).setName("foo").setConcurrentRequests(randomIntBetween(0, 1)).setBulkActions(numDocs).setFlushInterval(TimeValue.timeValueHours(24)).setBulkSize(new ByteSizeValue(randomIntBetween(1, 10), RandomPicks.randomFrom(getRandom(), ByteSizeUnit.values()))).build()[ CD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_9 $$ assertThat(processor.awaitClose(1, TimeUnit.MINUTES), is(true))[ CD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_22 $$ assertMultiGetResponse(multiGetRequestBuilder.get(), numDocs)[ CD ]
Line_10 $$ if (randomBoolean()) -->Line_11 $$ if (randomBoolean()) [ CD ]
Line_4 $$ int numDocs = randomIntBetween(10, 100)-->Line_21 $$ assertResponseItems(listener.bulkItems, numDocs)[ FD ]
Line_11 $$ if (randomBoolean()) -->Line_14 $$ processor.close()[ CD ]
Line_5 $$ BulkProcessor processor = BulkProcessor.builder(client(), listener).setName("foo").setConcurrentRequests(randomIntBetween(0, 1)).setBulkActions(numDocs).setFlushInterval(TimeValue.timeValueHours(24)).setBulkSize(new ByteSizeValue(randomIntBetween(1, 10), RandomPicks.randomFrom(getRandom(), ByteSizeUnit.values()))).build()-->Line_7 $$ MultiGetRequestBuilder multiGetRequestBuilder = indexDocs(client(), processor, numDocs)[ FD ]
Line_3 $$ BulkProcessorTestListener listener = new BulkProcessorTestListener()-->Line_5 $$ BulkProcessor processor = BulkProcessor.builder(client(), listener).setName("foo").setConcurrentRequests(randomIntBetween(0, 1)).setBulkActions(numDocs).setFlushInterval(TimeValue.timeValueHours(24)).setBulkSize(new ByteSizeValue(randomIntBetween(1, 10), RandomPicks.randomFrom(getRandom(), ByteSizeUnit.values()))).build()[ FD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_17 $$ assertThat(processor.isOpen(), is(false))[ CD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_20 $$ assertThat(listener.bulkFailures.size(), equalTo(0))[ CD ]
Line_4 $$ int numDocs = randomIntBetween(10, 100)-->Line_22 $$ assertMultiGetResponse(multiGetRequestBuilder.get(), numDocs)[ FD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_7 $$ MultiGetRequestBuilder multiGetRequestBuilder = indexDocs(client(), processor, numDocs)[ CD ]
Line_5 $$ BulkProcessor processor = BulkProcessor.builder(client(), listener).setName("foo").setConcurrentRequests(randomIntBetween(0, 1)).setBulkActions(numDocs).setFlushInterval(TimeValue.timeValueHours(24)).setBulkSize(new ByteSizeValue(randomIntBetween(1, 10), RandomPicks.randomFrom(getRandom(), ByteSizeUnit.values()))).build()-->Line_17 $$ assertThat(processor.isOpen(), is(false))[ FD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_10 $$ if (randomBoolean()) [ CD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_19 $$ assertThat(listener.afterCounts.get(), greaterThanOrEqualTo(1))[ CD ]
Line_5 $$ BulkProcessor processor = BulkProcessor.builder(client(), listener).setName("foo").setConcurrentRequests(randomIntBetween(0, 1)).setBulkActions(numDocs).setFlushInterval(TimeValue.timeValueHours(24)).setBulkSize(new ByteSizeValue(randomIntBetween(1, 10), RandomPicks.randomFrom(getRandom(), ByteSizeUnit.values()))).build()-->Line_14 $$ processor.close()[ FD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_4 $$ int numDocs = randomIntBetween(10, 100)[ CD ]
Line_7 $$ MultiGetRequestBuilder multiGetRequestBuilder = indexDocs(client(), processor, numDocs)-->Line_22 $$ assertMultiGetResponse(multiGetRequestBuilder.get(), numDocs)[ FD ]
Line_4 $$ int numDocs = randomIntBetween(10, 100)-->Line_5 $$ BulkProcessor processor = BulkProcessor.builder(client(), listener).setName("foo").setConcurrentRequests(randomIntBetween(0, 1)).setBulkActions(numDocs).setFlushInterval(TimeValue.timeValueHours(24)).setBulkSize(new ByteSizeValue(randomIntBetween(1, 10), RandomPicks.randomFrom(getRandom(), ByteSizeUnit.values()))).build()[ FD ]
Line_11 $$ if (randomBoolean()) -->Line_12 $$ assertThat(processor.awaitClose(1, TimeUnit.MINUTES), is(true))[ CD ]
Line_5 $$ BulkProcessor processor = BulkProcessor.builder(client(), listener).setName("foo").setConcurrentRequests(randomIntBetween(0, 1)).setBulkActions(numDocs).setFlushInterval(TimeValue.timeValueHours(24)).setBulkSize(new ByteSizeValue(randomIntBetween(1, 10), RandomPicks.randomFrom(getRandom(), ByteSizeUnit.values()))).build()-->Line_9 $$ assertThat(processor.awaitClose(1, TimeUnit.MINUTES), is(true))[ FD ]
Line_5 $$ BulkProcessor processor = BulkProcessor.builder(client(), listener).setName("foo").setConcurrentRequests(randomIntBetween(0, 1)).setBulkActions(numDocs).setFlushInterval(TimeValue.timeValueHours(24)).setBulkSize(new ByteSizeValue(randomIntBetween(1, 10), RandomPicks.randomFrom(getRandom(), ByteSizeUnit.values()))).build()-->Line_12 $$ assertThat(processor.awaitClose(1, TimeUnit.MINUTES), is(true))[ FD ]
Line_5 $$ BulkProcessor processor = BulkProcessor.builder(client(), listener).setName("foo").setConcurrentRequests(randomIntBetween(0, 1)).setBulkActions(numDocs).setFlushInterval(TimeValue.timeValueHours(24)).setBulkSize(new ByteSizeValue(randomIntBetween(1, 10), RandomPicks.randomFrom(getRandom(), ByteSizeUnit.values()))).build()-->Line_8 $$ assertThat(processor.isOpen(), is(true))[ FD ]
Line_4 $$ int numDocs = randomIntBetween(10, 100)-->Line_7 $$ MultiGetRequestBuilder multiGetRequestBuilder = indexDocs(client(), processor, numDocs)[ FD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_18 $$ assertThat(listener.beforeCounts.get(), greaterThanOrEqualTo(1))[ CD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_8 $$ assertThat(processor.isOpen(), is(true))[ CD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_21 $$ assertResponseItems(listener.bulkItems, numDocs)[ CD ]
Line_2 $$ public void testBulkProcessorWaitOnClose() throws Exception -->Line_3 $$ BulkProcessorTestListener listener = new BulkProcessorTestListener()[ CD ]
