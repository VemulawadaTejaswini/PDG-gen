Line_2 $$ public void testIndexTemplateWithAliasNameEqualToTemplatePattern() -->Line_4 $$ request.template("foobar")[ CD ]
Line_3 $$ PutRequest request = new PutRequest("api", "foobar_template")-->Line_5 $$ request.aliases(Collections.singleton(new Alias("foobar")))[ FD ]
Line_6 $$ List<Throwable> errors = putTemplate(request)-->Line_7 $$ assertThat(errors.size(), equalTo(1))[ FD ]
Line_2 $$ public void testIndexTemplateWithAliasNameEqualToTemplatePattern() -->Line_7 $$ assertThat(errors.size(), equalTo(1))[ CD ]
Line_2 $$ public void testIndexTemplateWithAliasNameEqualToTemplatePattern() -->Line_9 $$ assertThat(errors.get(0).getMessage(), equalTo("Alias [foobar] cannot be the same as the template pattern [foobar]"))[ CD ]
Line_3 $$ PutRequest request = new PutRequest("api", "foobar_template")-->Line_6 $$ List<Throwable> errors = putTemplate(request)[ FD ]
Line_2 $$ public void testIndexTemplateWithAliasNameEqualToTemplatePattern() -->Line_3 $$ PutRequest request = new PutRequest("api", "foobar_template")[ CD ]
Line_2 $$ public void testIndexTemplateWithAliasNameEqualToTemplatePattern() -->Line_6 $$ List<Throwable> errors = putTemplate(request)[ CD ]
Line_3 $$ PutRequest request = new PutRequest("api", "foobar_template")-->Line_4 $$ request.template("foobar")[ FD ]
Line_6 $$ List<Throwable> errors = putTemplate(request)-->Line_9 $$ assertThat(errors.get(0).getMessage(), equalTo("Alias [foobar] cannot be the same as the template pattern [foobar]"))[ FD ]
Line_2 $$ public void testIndexTemplateWithAliasNameEqualToTemplatePattern() -->Line_8 $$ assertThat(errors.get(0), instanceOf(IllegalArgumentException.class))[ CD ]
Line_2 $$ public void testIndexTemplateWithAliasNameEqualToTemplatePattern() -->Line_5 $$ request.aliases(Collections.singleton(new Alias("foobar")))[ CD ]
Line_6 $$ List<Throwable> errors = putTemplate(request)-->Line_8 $$ assertThat(errors.get(0), instanceOf(IllegalArgumentException.class))[ FD ]
