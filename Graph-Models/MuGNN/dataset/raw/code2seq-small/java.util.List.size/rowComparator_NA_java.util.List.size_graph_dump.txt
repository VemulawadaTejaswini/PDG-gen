Line_2 $$ private static Comparator<List<Object>> rowComparator(int precision) -->Line_3 $$ final Comparator<Object> comparator = Ordering.from(columnComparator(precision)).nullsFirst()[ FD ]
Line_10 $$ int r = comparator.compare(a.get(i), b.get(i))-->Line_11 $$ if (r != 0) [ FD ]
Line_2 $$ private static Comparator<List<Object>> rowComparator(int precision) -->Line_3 $$ final Comparator<Object> comparator = Ordering.from(columnComparator(precision)).nullsFirst()[ CD ]
Line_4 $$ return new Comparator<List<Object>>() -->Line_9 $$ for (int i = 0; i < a.size(); i++) [ FD ]
Line_4 $$ return new Comparator<List<Object>>() -->Line_7 $$ return Integer.compare(a.size(), b.size())[ FD ]
Line_11 $$ if (r != 0) -->Line_12 $$ return r[ CD ]
Line_6 $$ if (a.size() != b.size()) -->Line_7 $$ return Integer.compare(a.size(), b.size())[ CD ]
Line_2 $$ private static Comparator<List<Object>> rowComparator(int precision) -->Line_4 $$ return new Comparator<List<Object>>() [ CD ]
Line_9 $$ for (int i = 0; i < a.size(); i++) -->Line_11 $$ if (r != 0) [ CD ]
Line_4 $$ return new Comparator<List<Object>>() -->Line_10 $$ int r = comparator.compare(a.get(i), b.get(i))[ FD ]
Line_9 $$ for (int i = 0; i < a.size(); i++) -->Line_10 $$ int r = comparator.compare(a.get(i), b.get(i))[ CD ]
Line_4 $$ return new Comparator<List<Object>>() -->Line_15 $$ return 0[ CD ]
Line_3 $$ final Comparator<Object> comparator = Ordering.from(columnComparator(precision)).nullsFirst()-->Line_10 $$ int r = comparator.compare(a.get(i), b.get(i))[ FD ]
Line_4 $$ return new Comparator<List<Object>>() -->Line_9 $$ for (int i = 0; i < a.size(); i++) [ CD ]
Line_9 $$ for (int i = 0; i < a.size(); i++) -->Line_10 $$ int r = comparator.compare(a.get(i), b.get(i))[ FD ]
Line_4 $$ return new Comparator<List<Object>>() -->Line_6 $$ if (a.size() != b.size()) [ CD ]
Line_4 $$ return new Comparator<List<Object>>() -->Line_6 $$ if (a.size() != b.size()) [ FD ]
