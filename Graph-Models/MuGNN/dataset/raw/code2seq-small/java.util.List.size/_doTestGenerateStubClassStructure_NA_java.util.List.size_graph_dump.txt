Line_25 $$ Constructor<?> constructor = constructors[0]-->Line_26 $$ Assert.assertArrayEquals(new Class<?>[] [ FD ]
Line_3 $$ Class<?> stubClass = IntrabandProxyUtil.generateStubClass(_classLoader, clazz, skeletonId)-->Line_17 $$ _assertDeclaredField(stubClass, "_intraband", Modifier.PRIVATE | Modifier.FINAL, Intraband.class)[ FD ]
Line_3 $$ Class<?> stubClass = IntrabandProxyUtil.generateStubClass(_classLoader, clazz, skeletonId)-->Line_43 $$ Method[] declaredMethods = stubClass.getDeclaredMethods()[ FD ]
Line_3 $$ Class<?> stubClass = IntrabandProxyUtil.generateStubClass(_classLoader, clazz, skeletonId)-->Line_18 $$ _assertDeclaredField(stubClass, "_registrationReference", Modifier.PRIVATE | Modifier.FINAL, RegistrationReference.class)[ FD ]
Line_40 $$ for (Method emptyMethod : emptyMethods) -->Line_41 $$ _assertDeclaredMethod(stubClass, emptyMethod.getName(), emptyMethod.getParameterTypes(), Modifier.PUBLIC, emptyMethod.getReturnType(), emptyMethod.getExceptionTypes())[ FD ]
Line_3 $$ Class<?> stubClass = IntrabandProxyUtil.generateStubClass(_classLoader, clazz, skeletonId)-->Line_7 $$ Assert.assertArrayEquals(new Class<?>[] [ FD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_17 $$ _assertDeclaredField(stubClass, "_intraband", Modifier.PRIVATE | Modifier.FINAL, Intraband.class)[ CD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_39 $$ List<Method> emptyMethods = _getEmptyMethods(clazz)[ FD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_44 $$ Assert.assertEquals(3 + idMethods.size() + proxyMethods.size() + emptyMethods.size(), declaredMethods.length)[ CD ]
Line_6 $$ if (clazz.isInterface()) -->Line_9 $$ Assert.assertArrayEquals(clazz.getInterfaces(), stubClass.getInterfaces())[ CD ]
Line_3 $$ Class<?> stubClass = IntrabandProxyUtil.generateStubClass(_classLoader, clazz, skeletonId)-->Line_19 $$ _assertDeclaredField(stubClass, "_exceptionHandler", Modifier.PRIVATE | Modifier.FINAL, ExceptionHandler.class)[ FD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_31 $$ List<Method> idMethods = _getIdMethods(clazz)[ FD ]
Line_3 $$ Class<?> stubClass = IntrabandProxyUtil.generateStubClass(_classLoader, clazz, skeletonId)-->Line_29 $$ _assertDeclaredMethod(stubClass, "_syncSend", new Class<?>[] [ FD ]
Line_3 $$ Class<?> stubClass = IntrabandProxyUtil.generateStubClass(_classLoader, clazz, skeletonId)-->Line_30 $$ _assertDeclaredMethod(stubClass, "_send", new Class<?>[] [ FD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_14 $$ _assertDeclaredField(stubClass, "_id", Modifier.PRIVATE | Modifier.FINAL, String.class)[ CD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_3 $$ Class<?> stubClass = IntrabandProxyUtil.generateStubClass(_classLoader, clazz, skeletonId)[ FD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_19 $$ _assertDeclaredField(stubClass, "_exceptionHandler", Modifier.PRIVATE | Modifier.FINAL, ExceptionHandler.class)[ CD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_39 $$ List<Method> emptyMethods = _getEmptyMethods(clazz)[ CD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_3 $$ Class<?> stubClass = IntrabandProxyUtil.generateStubClass(_classLoader, clazz, skeletonId)[ CD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_35 $$ List<Method> proxyMethods = _getProxyMethods(clazz)[ CD ]
Line_35 $$ List<Method> proxyMethods = _getProxyMethods(clazz)-->Line_44 $$ Assert.assertEquals(3 + idMethods.size() + proxyMethods.size() + emptyMethods.size(), declaredMethods.length)[ FD ]
Line_39 $$ List<Method> emptyMethods = _getEmptyMethods(clazz)-->Line_44 $$ Assert.assertEquals(3 + idMethods.size() + proxyMethods.size() + emptyMethods.size(), declaredMethods.length)[ FD ]
Line_3 $$ Class<?> stubClass = IntrabandProxyUtil.generateStubClass(_classLoader, clazz, skeletonId)-->Line_33 $$ _assertDeclaredMethod(stubClass, idMethod.getName(), idMethod.getParameterTypes(), Modifier.PUBLIC, idMethod.getReturnType(), idMethod.getExceptionTypes())[ FD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_30 $$ _assertDeclaredMethod(stubClass, "_send", new Class<?>[] [ CD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_35 $$ List<Method> proxyMethods = _getProxyMethods(clazz)[ FD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_20 $$ Field[] fields = stubClass.getDeclaredFields()[ CD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_25 $$ Constructor<?> constructor = constructors[0][ CD ]
Line_3 $$ Class<?> stubClass = IntrabandProxyUtil.generateStubClass(_classLoader, clazz, skeletonId)-->Line_20 $$ Field[] fields = stubClass.getDeclaredFields()[ FD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_26 $$ Assert.assertArrayEquals(new Class<?>[] [ CD ]
Line_32 $$ for (Method idMethod : idMethods) -->Line_33 $$ _assertDeclaredMethod(stubClass, idMethod.getName(), idMethod.getParameterTypes(), Modifier.PUBLIC, idMethod.getReturnType(), idMethod.getExceptionTypes())[ FD ]
Line_3 $$ Class<?> stubClass = IntrabandProxyUtil.generateStubClass(_classLoader, clazz, skeletonId)-->Line_41 $$ _assertDeclaredMethod(stubClass, emptyMethod.getName(), emptyMethod.getParameterTypes(), Modifier.PUBLIC, emptyMethod.getReturnType(), emptyMethod.getExceptionTypes())[ FD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_6 $$ if (clazz.isInterface()) [ FD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_9 $$ Assert.assertArrayEquals(clazz.getInterfaces(), stubClass.getInterfaces())[ FD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_13 $$ Assert.assertArrayEquals(_buildProxyMethodSignatures(clazz), IntrabandProxyUtil.getProxyMethodSignatures(stubClass))[ FD ]
Line_36 $$ for (Method proxyMethod : proxyMethods) -->Line_37 $$ _assertDeclaredMethod(stubClass, proxyMethod.getName(), proxyMethod.getParameterTypes(), (proxyMethod.getModifiers() & ~Modifier.ABSTRACT), proxyMethod.getReturnType(), proxyMethod.getExceptionTypes())[ FD ]
Line_3 $$ Class<?> stubClass = IntrabandProxyUtil.generateStubClass(_classLoader, clazz, skeletonId)-->Line_13 $$ Assert.assertArrayEquals(_buildProxyMethodSignatures(clazz), IntrabandProxyUtil.getProxyMethodSignatures(stubClass))[ FD ]
Line_6 $$ if (clazz.isInterface()) -->Line_7 $$ Assert.assertArrayEquals(new Class<?>[] [ CD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_13 $$ Assert.assertArrayEquals(_buildProxyMethodSignatures(clazz), IntrabandProxyUtil.getProxyMethodSignatures(stubClass))[ CD ]
Line_3 $$ Class<?> stubClass = IntrabandProxyUtil.generateStubClass(_classLoader, clazz, skeletonId)-->Line_9 $$ Assert.assertArrayEquals(clazz.getInterfaces(), stubClass.getInterfaces())[ FD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_43 $$ Method[] declaredMethods = stubClass.getDeclaredMethods()[ CD ]
Line_3 $$ Class<?> stubClass = IntrabandProxyUtil.generateStubClass(_classLoader, clazz, skeletonId)-->Line_14 $$ _assertDeclaredField(stubClass, "_id", Modifier.PRIVATE | Modifier.FINAL, String.class)[ FD ]
Line_15 $$ Field proxyTypeField = _assertDeclaredField(stubClass, "_PROXY_TYPE", Modifier.PRIVATE | Modifier.STATIC | Modifier.FINAL, byte.class)-->Line_16 $$ Assert.assertEquals(SystemDataType.PROXY.getValue(), proxyTypeField.getByte(null))[ FD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_15 $$ Field proxyTypeField = _assertDeclaredField(stubClass, "_PROXY_TYPE", Modifier.PRIVATE | Modifier.STATIC | Modifier.FINAL, byte.class)[ CD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_29 $$ _assertDeclaredMethod(stubClass, "_syncSend", new Class<?>[] [ CD ]
Line_3 $$ Class<?> stubClass = IntrabandProxyUtil.generateStubClass(_classLoader, clazz, skeletonId)-->Line_37 $$ _assertDeclaredMethod(stubClass, proxyMethod.getName(), proxyMethod.getParameterTypes(), (proxyMethod.getModifiers() & ~Modifier.ABSTRACT), proxyMethod.getReturnType(), proxyMethod.getExceptionTypes())[ FD ]
Line_3 $$ Class<?> stubClass = IntrabandProxyUtil.generateStubClass(_classLoader, clazz, skeletonId)-->Line_15 $$ Field proxyTypeField = _assertDeclaredField(stubClass, "_PROXY_TYPE", Modifier.PRIVATE | Modifier.STATIC | Modifier.FINAL, byte.class)[ FD ]
Line_31 $$ List<Method> idMethods = _getIdMethods(clazz)-->Line_44 $$ Assert.assertEquals(3 + idMethods.size() + proxyMethods.size() + emptyMethods.size(), declaredMethods.length)[ FD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_21 $$ Assert.assertEquals(6, fields.length)[ CD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_18 $$ _assertDeclaredField(stubClass, "_registrationReference", Modifier.PRIVATE | Modifier.FINAL, RegistrationReference.class)[ CD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_24 $$ Assert.assertEquals(1, constructors.length)[ CD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_16 $$ Assert.assertEquals(SystemDataType.PROXY.getValue(), proxyTypeField.getByte(null))[ CD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_31 $$ List<Method> idMethods = _getIdMethods(clazz)[ CD ]
Line_2 $$ private void _doTestGenerateStubClassStructure(Class<?> clazz, String skeletonId) throws Exception -->Line_6 $$ if (clazz.isInterface()) [ CD ]
