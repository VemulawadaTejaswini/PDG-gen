Line_10 $$ if (entry instanceof LibraryOrderEntry) -->Line_13 $$ if (entry instanceof ModuleOrderEntry) [ CD ]
Line_35 $$ boolean c1 = preferred.contains(file1)-->Line_39 $$ if (c2 && !c1)[ FD ]
Line_17 $$ Comparator<Module> comparator = new Comparator<Module>() -->Line_21 $$ return o1.getName().compareTo(o2.getName())[ CD ]
Line_4 $$ List<Module> modulesLibraryUsedIn = new ArrayList<Module>()-->Line_25 $$ List<Module> uniquesList = ContainerUtil.removeDuplicatesFromSorted(modulesLibraryUsedIn, comparator)[ FD ]
Line_39 $$ if (c2 && !c1)-->Line_40 $$ return -1[ CD ]
Line_4 $$ List<Module> modulesLibraryUsedIn = new ArrayList<Module>()-->Line_24 $$ Collections.sort(modulesLibraryUsedIn, comparator)[ FD ]
Line_6 $$ for (OrderEntry entry : orderEntries) -->Line_12 $$ modulesLibraryUsedIn.add(entry.getOwnerModule())[ FD ]
Line_6 $$ for (OrderEntry entry : orderEntries) -->Line_13 $$ if (entry instanceof ModuleOrderEntry) [ FD ]
Line_36 $$ boolean c2 = preferred.contains(file2)-->Line_37 $$ if (c1 && !c2)[ FD ]
Line_5 $$ LibraryOrderEntry lib = null-->Line_28 $$ if (lib != null) [ FD ]
Line_7 $$ if (entry instanceof JdkOrderEntry) -->Line_8 $$ return getScopeForSdk((JdkOrderEntry) entry)[ CD ]
Line_10 $$ if (entry instanceof LibraryOrderEntry) -->Line_11 $$ lib = (LibraryOrderEntry) entry[ CD ]
Line_17 $$ Comparator<Module> comparator = new Comparator<Module>() -->Line_24 $$ Collections.sort(modulesLibraryUsedIn, comparator)[ FD ]
Line_6 $$ for (OrderEntry entry : orderEntries) -->Line_10 $$ if (entry instanceof LibraryOrderEntry) [ FD ]
Line_35 $$ boolean c1 = preferred.contains(file1)-->Line_37 $$ if (c1 && !c2)[ FD ]
Line_36 $$ boolean c2 = preferred.contains(file2)-->Line_39 $$ if (c2 && !c1)[ FD ]
Line_5 $$ LibraryOrderEntry lib = null-->Line_11 $$ lib = (LibraryOrderEntry) entry[ FD ]
Line_37 $$ if (c1 && !c2)-->Line_38 $$ return 1[ CD ]
Line_4 $$ List<Module> modulesLibraryUsedIn = new ArrayList<Module>()-->Line_12 $$ modulesLibraryUsedIn.add(entry.getOwnerModule())[ FD ]
Line_11 $$ lib = (LibraryOrderEntry) entry-->Line_28 $$ if (lib != null) [ FD ]
Line_17 $$ Comparator<Module> comparator = new Comparator<Module>() -->Line_21 $$ return o1.getName().compareTo(o2.getName())[ FD ]
Line_6 $$ for (OrderEntry entry : orderEntries) -->Line_7 $$ if (entry instanceof JdkOrderEntry) [ FD ]
Line_13 $$ if (entry instanceof ModuleOrderEntry) -->Line_14 $$ modulesLibraryUsedIn.add(entry.getOwnerModule())[ CD ]
Line_4 $$ List<Module> modulesLibraryUsedIn = new ArrayList<Module>()-->Line_14 $$ modulesLibraryUsedIn.add(entry.getOwnerModule())[ FD ]
Line_10 $$ if (entry instanceof LibraryOrderEntry) -->Line_12 $$ modulesLibraryUsedIn.add(entry.getOwnerModule())[ CD ]
Line_6 $$ for (OrderEntry entry : orderEntries) -->Line_14 $$ modulesLibraryUsedIn.add(entry.getOwnerModule())[ FD ]
Line_17 $$ Comparator<Module> comparator = new Comparator<Module>() -->Line_25 $$ List<Module> uniquesList = ContainerUtil.removeDuplicatesFromSorted(modulesLibraryUsedIn, comparator)[ FD ]
