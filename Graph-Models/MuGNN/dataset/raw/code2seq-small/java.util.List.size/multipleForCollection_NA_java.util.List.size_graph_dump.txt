Line_7 $$ int result = this.tag.doStartTag()-->Line_8 $$ assertEquals(Tag.SKIP_BODY, result)[ FD ]
Line_15 $$ Element selectElement = rootElement.element("select")-->Line_18 $$ assertEquals("multiple", selectElement.attribute("multiple").getValue())[ FD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_12 $$ Document document = reader.read(new StringReader(output))[ CD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_21 $$ Element inputElement = rootElement.element("input")[ CD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_6 $$ this.tag.setItemValue("isoCode")[ CD ]
Line_11 $$ SAXReader reader = new SAXReader()-->Line_12 $$ Document document = reader.read(new StringReader(output))[ FD ]
Line_13 $$ Element rootElement = document.getRootElement()-->Line_15 $$ Element selectElement = rootElement.element("select")[ FD ]
Line_15 $$ Element selectElement = rootElement.element("select")-->Line_16 $$ assertEquals("select", selectElement.getName())[ FD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_19 $$ List children = selectElement.elements()[ CD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_22 $$ assertNotNull(inputElement)[ CD ]
Line_15 $$ Element selectElement = rootElement.element("select")-->Line_19 $$ List children = selectElement.elements()[ FD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_20 $$ assertEquals("Incorrect number of children", 4, children.size())[ CD ]
Line_21 $$ Element inputElement = rootElement.element("input")-->Line_22 $$ assertNotNull(inputElement)[ FD ]
Line_19 $$ List children = selectElement.elements()-->Line_20 $$ assertEquals("Incorrect number of children", 4, children.size())[ FD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_5 $$ this.tag.setItems(Country.getCountries())[ CD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_8 $$ assertEquals(Tag.SKIP_BODY, result)[ CD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_14 $$ assertEquals(2, rootElement.elements().size())[ CD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_4 $$ this.tag.setPath("someList")[ CD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_16 $$ assertEquals("select", selectElement.getName())[ CD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_7 $$ int result = this.tag.doStartTag()[ CD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_18 $$ assertEquals("multiple", selectElement.attribute("multiple").getValue())[ CD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_3 $$ this.bean.setSomeList(new ArrayList())[ CD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_10 $$ output = "<doc>" + output + "</doc>"[ CD ]
Line_15 $$ Element selectElement = rootElement.element("select")-->Line_17 $$ assertEquals("someList", selectElement.attribute("name").getValue())[ FD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_9 $$ String output = getOutput()[ CD ]
Line_13 $$ Element rootElement = document.getRootElement()-->Line_14 $$ assertEquals(2, rootElement.elements().size())[ FD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_13 $$ Element rootElement = document.getRootElement()[ CD ]
Line_13 $$ Element rootElement = document.getRootElement()-->Line_21 $$ Element inputElement = rootElement.element("input")[ FD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_11 $$ SAXReader reader = new SAXReader()[ CD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_15 $$ Element selectElement = rootElement.element("select")[ CD ]
Line_2 $$ public void multipleForCollection() throws Exception -->Line_17 $$ assertEquals("someList", selectElement.attribute("name").getValue())[ CD ]
Line_9 $$ String output = getOutput()-->Line_10 $$ output = "<doc>" + output + "</doc>"[ FD ]
Line_12 $$ Document document = reader.read(new StringReader(output))-->Line_13 $$ Element rootElement = document.getRootElement()[ FD ]
