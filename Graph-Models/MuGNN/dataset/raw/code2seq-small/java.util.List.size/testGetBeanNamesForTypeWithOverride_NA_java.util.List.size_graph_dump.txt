Line_4 $$ List<String> names = Arrays.asList(BeanFactoryUtils.beanNamesForTypeIncludingAncestors(this.listableBeanFactory, ITestBean.class))-->Line_8 $$ assertTrue(names.contains("test3"))[ FD ]
Line_4 $$ List<String> names = Arrays.asList(BeanFactoryUtils.beanNamesForTypeIncludingAncestors(this.listableBeanFactory, ITestBean.class))-->Line_9 $$ assertTrue(names.contains("testFactory1"))[ FD ]
Line_4 $$ List<String> names = Arrays.asList(BeanFactoryUtils.beanNamesForTypeIncludingAncestors(this.listableBeanFactory, ITestBean.class))-->Line_10 $$ assertTrue(names.contains("testFactory2"))[ FD ]
Line_4 $$ List<String> names = Arrays.asList(BeanFactoryUtils.beanNamesForTypeIncludingAncestors(this.listableBeanFactory, ITestBean.class))-->Line_7 $$ assertTrue(names.contains("test"))[ FD ]
