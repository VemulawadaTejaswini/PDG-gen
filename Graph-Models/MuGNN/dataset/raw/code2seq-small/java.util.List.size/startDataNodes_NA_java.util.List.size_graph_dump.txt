Line_115 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)-->Line_134 $$ if (dn == null)[ FD ]
Line_152 $$ List<? extends FsVolumeSpi> volumes = dns[i].getFSDataset().getVolumes()-->Line_156 $$ FsVolumeImpl volume = (FsVolumeImpl) volumes.get(j)[ FD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_144 $$ dataNodes.add(new DataNodeProperties(dn, newconf, dnArgs, secureResources, dn.getIpcPort()))[ CD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_110 $$ final int maxRetriesOnSasl = conf.getInt(IPC_CLIENT_CONNECT_MAX_RETRIES_ON_SASL_KEY, IPC_CLIENT_CONNECT_MAX_RETRIES_ON_SASL_DEFAULT)[ CD ]
Line_79 $$ String dirs = makeDataNodeDirs(i, storageTypes == null ? null : storageTypes[i])-->Line_81 $$ conf.set(DFS_DATANODE_DATA_DIR_KEY, dirs)[ FD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_92 $$ if (racks != null) [ CD ]
Line_112 $$ DataNode dn = null-->Line_134 $$ if (dn == null)[ FD ]
Line_72 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_74 $$ dnConf.addResource(dnConfOverlays[i])[ FD ]
Line_72 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_90 $$ LOG.info("Starting DataNode " + i + " with hostname set to: " + dnConf.get(DFSConfigKeys.DFS_DATANODE_HOST_NAME_KEY))[ FD ]
Line_83 $$ if (simulatedCapacities != null) -->Line_85 $$ dnConf.setLong(SimulatedFSDataset.CONFIG_PROPERTY_CAPACITY, simulatedCapacities[i - curDatanodesNum])[ CD ]
Line_92 $$ if (racks != null) -->Line_93 $$ String name = hosts[i - curDatanodesNum][ CD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_111 $$ int numRetries = 0[ CD ]
Line_115 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)-->Line_144 $$ dataNodes.add(new DataNodeProperties(dn, newconf, dnArgs, secureResources, dn.getIpcPort()))[ FD ]
Line_78 $$ if (manageDfsDirs) -->Line_79 $$ String dirs = makeDataNodeDirs(i, storageTypes == null ? null : storageTypes[i])[ CD ]
Line_155 $$ for (int j = 0; j < volumes.size(); ++j) -->Line_156 $$ FsVolumeImpl volume = (FsVolumeImpl) volumes.get(j)[ FD ]
Line_155 $$ for (int j = 0; j < volumes.size(); ++j) -->Line_156 $$ FsVolumeImpl volume = (FsVolumeImpl) volumes.get(j)[ CD ]
Line_102 $$ SecureResources secureResources = null-->Line_115 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)[ FD ]
Line_112 $$ DataNode dn = null-->Line_144 $$ dataNodes.add(new DataNodeProperties(dn, newconf, dnArgs, secureResources, dn.getIpcPort()))[ FD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_83 $$ if (simulatedCapacities != null) [ CD ]
Line_83 $$ if (simulatedCapacities != null) -->Line_84 $$ SimulatedFSDataset.setFactory(dnConf)[ CD ]
Line_58 $$ hosts = new String[numDataNodes]-->Line_99 $$ if (hosts != null) [ FD ]
Line_34 $$ if (operation == StartupOption.RECOVER) -->Line_35 $$ return[ CD ]
Line_72 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_87 $$ LOG.info("Starting DataNode " + i + " with " + DFSConfigKeys.DFS_DATANODE_DATA_DIR_KEY + ": " + dnConf.get(DFSConfigKeys.DFS_DATANODE_DATA_DIR_KEY))[ FD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_79 $$ String dirs = makeDataNodeDirs(i, storageTypes == null ? null : storageTypes[i])[ FD ]
Line_152 $$ List<? extends FsVolumeSpi> volumes = dns[i].getFSDataset().getVolumes()-->Line_155 $$ for (int j = 0; j < volumes.size(); ++j) [ FD ]
Line_69 $$ String[] dnArgs = (operation == null || operation != StartupOption.ROLLBACK) ? null : new String[] -->Line_115 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)[ FD ]
Line_78 $$ if (manageDfsDirs) -->Line_81 $$ conf.set(DFS_DATANODE_DATA_DIR_KEY, dirs)[ CD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_88 $$ if (hosts != null) [ CD ]
Line_99 $$ if (hosts != null) -->Line_100 $$ NetUtils.addStaticResolution(hosts[i - curDatanodesNum], "localhost")[ CD ]
Line_88 $$ if (hosts != null) -->Line_89 $$ dnConf.set(DFSConfigKeys.DFS_DATANODE_HOST_NAME_KEY, hosts[i - curDatanodesNum])[ CD ]
Line_152 $$ List<? extends FsVolumeSpi> volumes = dns[i].getFSDataset().getVolumes()-->Line_154 $$ assert volumes.size() == storagesPerDatanode[ FD ]
Line_151 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; ++i) -->Line_152 $$ List<? extends FsVolumeSpi> volumes = dns[i].getFSDataset().getVolumes()[ CD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_87 $$ LOG.info("Starting DataNode " + i + " with " + DFSConfigKeys.DFS_DATANODE_DATA_DIR_KEY + ": " + dnConf.get(DFSConfigKeys.DFS_DATANODE_DATA_DIR_KEY))[ CD ]
Line_155 $$ for (int j = 0; j < volumes.size(); ++j) -->Line_157 $$ volume.setCapacityForTesting(storageCapacities[i][j])[ CD ]
Line_59 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_151 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; ++i) [ FD ]
Line_139 $$ if (racks != null) -->Line_140 $$ LOG.info("Adding node with service : " + service + " to rack " + racks[i - curDatanodesNum])[ CD ]
Line_151 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; ++i) -->Line_155 $$ for (int j = 0; j < volumes.size(); ++j) [ CD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_72 $$ Configuration dnConf = new HdfsConfiguration(conf)[ CD ]
Line_37 $$ if (checkDataNodeHostConfig) -->Line_40 $$ conf.set(DFS_DATANODE_HOST_NAME_KEY, "127.0.0.1")[ CD ]
Line_72 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_115 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)[ FD ]
Line_111 $$ int numRetries = 0-->Line_128 $$ ++numRetries[ FD ]
Line_59 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_60 $$ hosts[i - curDatanodesNum] = "host" + i + ".foo.com"[ CD ]
Line_92 $$ if (racks != null) -->Line_94 $$ LOG.info("Adding node with hostname : " + name + " to rack " + racks[i - curDatanodesNum])[ CD ]
Line_59 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_79 $$ String dirs = makeDataNodeDirs(i, storageTypes == null ? null : storageTypes[i])[ FD ]
Line_102 $$ SecureResources secureResources = null-->Line_105 $$ secureResources = SecureDataNodeStarter.getSecureResources(dnConf)[ FD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_145 $$ dns[i - curDatanodesNum] = dn[ CD ]
Line_112 $$ DataNode dn = null-->Line_145 $$ dns[i - curDatanodesNum] = dn[ FD ]
Line_72 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_89 $$ dnConf.set(DFSConfigKeys.DFS_DATANODE_HOST_NAME_KEY, hosts[i - curDatanodesNum])[ FD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_102 $$ SecureResources secureResources = null[ CD ]
Line_79 $$ String dirs = makeDataNodeDirs(i, storageTypes == null ? null : storageTypes[i])-->Line_80 $$ dnConf.set(DFS_DATANODE_DATA_DIR_KEY, dirs)[ FD ]
Line_156 $$ FsVolumeImpl volume = (FsVolumeImpl) volumes.get(j)-->Line_157 $$ volume.setCapacityForTesting(storageCapacities[i][j])[ FD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_99 $$ if (hosts != null) [ CD ]
Line_72 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_80 $$ dnConf.set(DFS_DATANODE_DATA_DIR_KEY, dirs)[ FD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_73 $$ if (dnConfOverlays != null) [ CD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_78 $$ if (manageDfsDirs) [ CD ]
Line_88 $$ if (hosts != null) -->Line_90 $$ LOG.info("Starting DataNode " + i + " with hostname set to: " + dnConf.get(DFSConfigKeys.DFS_DATANODE_HOST_NAME_KEY))[ CD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_112 $$ DataNode dn = null[ CD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_103 $$ if (UserGroupInformation.isSecurityEnabled() && conf.get(DFS_DATA_TRANSFER_PROTECTION_KEY) == null) [ CD ]
Line_115 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)-->Line_143 $$ dn.runDatanodeDaemon()[ FD ]
Line_58 $$ hosts = new String[numDataNodes]-->Line_88 $$ if (hosts != null) [ FD ]
Line_105 $$ secureResources = SecureDataNodeStarter.getSecureResources(dnConf)-->Line_115 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)[ FD ]
Line_121 $$ if (UserGroupInformation.isSecurityEnabled() && numRetries < maxRetriesOnSasl) -->Line_128 $$ ++numRetries[ CD ]
Line_37 $$ if (checkDataNodeHostConfig) -->Line_38 $$ conf.setIfUnset(DFS_DATANODE_HOST_NAME_KEY, "127.0.0.1")[ CD ]
Line_72 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_105 $$ secureResources = SecureDataNodeStarter.getSecureResources(dnConf)[ FD ]
Line_72 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_84 $$ SimulatedFSDataset.setFactory(dnConf)[ FD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_143 $$ dn.runDatanodeDaemon()[ CD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_151 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; ++i) [ FD ]
Line_93 $$ String name = hosts[i - curDatanodesNum]-->Line_95 $$ StaticMapping.addNodeToRack(name, racks[i - curDatanodesNum])[ FD ]
Line_59 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) [ FD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_134 $$ if (dn == null)[ CD ]
Line_78 $$ if (manageDfsDirs) -->Line_80 $$ dnConf.set(DFS_DATANODE_DATA_DIR_KEY, dirs)[ CD ]
Line_92 $$ if (racks != null) -->Line_95 $$ StaticMapping.addNodeToRack(name, racks[i - curDatanodesNum])[ CD ]
Line_115 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)-->Line_145 $$ dns[i - curDatanodesNum] = dn[ FD ]
Line_72 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_85 $$ dnConf.setLong(SimulatedFSDataset.CONFIG_PROPERTY_CAPACITY, simulatedCapacities[i - curDatanodesNum])[ FD ]
Line_112 $$ DataNode dn = null-->Line_143 $$ dn.runDatanodeDaemon()[ FD ]
Line_112 $$ DataNode dn = null-->Line_115 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)[ FD ]
Line_72 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_135 $$ throw new IOException("Cannot start DataNode in " + dnConf.get(DFS_DATANODE_DATA_DIR_KEY))[ FD ]
Line_73 $$ if (dnConfOverlays != null) -->Line_74 $$ dnConf.addResource(dnConfOverlays[i])[ CD ]
Line_42 $$ int curDatanodesNum = dataNodes.size()-->Line_147 $$ curDatanodesNum += numDataNodes[ FD ]
Line_139 $$ if (racks != null) -->Line_141 $$ StaticMapping.addNodeToRack(service, racks[i - curDatanodesNum])[ CD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_113 $$ while (true) [ CD ]
Line_71 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_139 $$ if (racks != null) [ CD ]
Line_150 $$ if (storageCapacities != null) -->Line_151 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; ++i) [ CD ]
