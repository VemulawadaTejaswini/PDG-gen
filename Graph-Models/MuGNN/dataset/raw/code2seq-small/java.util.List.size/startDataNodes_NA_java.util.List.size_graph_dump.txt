Line_70 $$ secureResources = SecureDataNodeStarter.getSecureResources(dnConf)-->Line_80 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)[ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_33 $$ if (dnConfOverlays != null && numDataNodes > dnConfOverlays.length) [ CD ]
Line_14 $$ int curDatanodesNum = dataNodes.size()-->Line_107 $$ curDatanodesNum += numDataNodes[ FD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_63 $$ Configuration newconf = new HdfsConfiguration(dnConf)[ CD ]
Line_112 $$ List<? extends FsVolumeSpi> volumes = dns[i].getFSDataset().getVolumes()-->Line_114 $$ assert volumes.size() == storagesPerDatanode[ FD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_64 $$ if (hosts != null) [ CD ]
Line_54 $$ if (hosts != null) -->Line_55 $$ dnConf.set(DFSConfigKeys.DFS_DATANODE_HOST_NAME_KEY, hosts[i - curDatanodesNum])[ CD ]
Line_9 $$ if (checkDataNodeHostConfig) -->Line_10 $$ conf.setIfUnset(DFS_DATANODE_HOST_NAME_KEY, "127.0.0.1")[ CD ]
Line_44 $$ if (manageDfsDirs) -->Line_46 $$ dnConf.set(DFS_DATANODE_DATA_DIR_KEY, dirs)[ CD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_47 $$ conf.set(DFS_DATANODE_DATA_DIR_KEY, dirs)[ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_24 $$ if (racks != null && hosts == null) [ CD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_99 $$ if (racks != null) [ CD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_103 $$ dn.runDatanodeDaemon()[ CD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_6 $$ if (operation == StartupOption.RECOVER) [ FD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_98 $$ String service = SecurityUtil.buildTokenService(dn.getXferAddress()).toString()[ CD ]
Line_24 $$ if (racks != null && hosts == null) -->Line_26 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) [ CD ]
Line_39 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_43 $$ setupDatanodeAddress(dnConf, setupHostsFile, checkDataNodeAddrConfig)[ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_25 $$ hosts = new String[numDataNodes][ FD ]
Line_39 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_97 $$ throw new IOException("Cannot start DataNode in " + dnConf.get(DFS_DATANODE_DATA_DIR_KEY))[ FD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_49 $$ if (simulatedCapacities != null) [ CD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_107 $$ curDatanodesNum += numDataNodes[ CD ]
Line_44 $$ if (manageDfsDirs) -->Line_47 $$ conf.set(DFS_DATANODE_DATA_DIR_KEY, dirs)[ CD ]
Line_36 $$ String[] dnArgs = (operation == null || operation != StartupOption.ROLLBACK) ? null : new String[] -->Line_80 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)[ FD ]
Line_80 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)-->Line_103 $$ dn.runDatanodeDaemon()[ FD ]
Line_64 $$ if (hosts != null) -->Line_65 $$ NetUtils.addStaticResolution(hosts[i - curDatanodesNum], "localhost")[ CD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_64 $$ if (hosts != null) [ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_30 $$ if (simulatedCapacities != null && numDataNodes > simulatedCapacities.length) [ CD ]
Line_44 $$ if (manageDfsDirs) -->Line_45 $$ String dirs = makeDataNodeDirs(i, storageTypes == null ? null : storageTypes[i])[ CD ]
Line_24 $$ if (racks != null && hosts == null) -->Line_25 $$ hosts = new String[numDataNodes][ CD ]
Line_76 $$ int numRetries = 0-->Line_90 $$ ++numRetries[ FD ]
Line_39 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_80 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)[ FD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_53 $$ LOG.info("Starting DataNode " + i + " with " + DFSConfigKeys.DFS_DATANODE_DATA_DIR_KEY + ": " + dnConf.get(DFSConfigKeys.DFS_DATANODE_DATA_DIR_KEY))[ CD ]
Line_115 $$ for (int j = 0; j < volumes.size(); ++j) -->Line_116 $$ FsVolumeImpl volume = (FsVolumeImpl) volumes.get(j)[ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_12 $$ conf.set(DFS_DATANODE_HOST_NAME_KEY, "127.0.0.1")[ FD ]
Line_115 $$ for (int j = 0; j < volumes.size(); ++j) -->Line_116 $$ FsVolumeImpl volume = (FsVolumeImpl) volumes.get(j)[ CD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_16 $$ conf.setLong(DFS_BLOCKREPORT_INITIAL_DELAY_KEY, 0)[ FD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_111 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; ++i) [ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) [ CD ]
Line_39 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_55 $$ dnConf.set(DFSConfigKeys.DFS_DATANODE_HOST_NAME_KEY, hosts[i - curDatanodesNum])[ FD ]
Line_77 $$ DataNode dn = null-->Line_98 $$ String service = SecurityUtil.buildTokenService(dn.getXferAddress()).toString()[ FD ]
Line_116 $$ FsVolumeImpl volume = (FsVolumeImpl) volumes.get(j)-->Line_117 $$ volume.setCapacityForTesting(storageCapacities[i][j])[ FD ]
Line_77 $$ DataNode dn = null-->Line_96 $$ if (dn == null)[ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_107 $$ curDatanodesNum += numDataNodes[ FD ]
Line_26 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_111 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; ++i) [ FD ]
Line_110 $$ if (storageCapacities != null) -->Line_111 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; ++i) [ CD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_75 $$ final int maxRetriesOnSasl = conf.getInt(IPC_CLIENT_CONNECT_MAX_RETRIES_ON_SASL_KEY, IPC_CLIENT_CONNECT_MAX_RETRIES_ON_SASL_DEFAULT)[ CD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_67 $$ SecureResources secureResources = null[ CD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_110 $$ if (storageCapacities != null) [ FD ]
Line_39 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_56 $$ LOG.info("Starting DataNode " + i + " with hostname set to: " + dnConf.get(DFSConfigKeys.DFS_DATANODE_HOST_NAME_KEY))[ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_21 $$ if (hosts != null && numDataNodes > hosts.length) [ CD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_77 $$ DataNode dn = null[ CD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_6 $$ if (operation == StartupOption.RECOVER) [ CD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_43 $$ setupDatanodeAddress(dnConf, setupHostsFile, checkDataNodeAddrConfig)[ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_10 $$ conf.setIfUnset(DFS_DATANODE_HOST_NAME_KEY, "127.0.0.1")[ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_99 $$ if (racks != null) [ FD ]
Line_39 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_51 $$ dnConf.setLong(SimulatedFSDataset.CONFIG_PROPERTY_CAPACITY, simulatedCapacities[i - curDatanodesNum])[ FD ]
Line_80 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)-->Line_98 $$ String service = SecurityUtil.buildTokenService(dn.getXferAddress()).toString()[ FD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_78 $$ while (true) [ CD ]
Line_99 $$ if (racks != null) -->Line_101 $$ StaticMapping.addNodeToRack(service, racks[i - curDatanodesNum])[ CD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_68 $$ if (UserGroupInformation.isSecurityEnabled() && conf.get(DFS_DATA_TRANSFER_PROTECTION_KEY) == null) [ CD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_104 $$ dataNodes.add(new DataNodeProperties(dn, newconf, dnArgs, secureResources, dn.getIpcPort()))[ CD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_45 $$ String dirs = makeDataNodeDirs(i, storageTypes == null ? null : storageTypes[i])[ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_75 $$ final int maxRetriesOnSasl = conf.getInt(IPC_CLIENT_CONNECT_MAX_RETRIES_ON_SASL_KEY, IPC_CLIENT_CONNECT_MAX_RETRIES_ON_SASL_DEFAULT)[ FD ]
Line_26 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_27 $$ hosts[i - curDatanodesNum] = "host" + i + ".foo.com"[ CD ]
Line_67 $$ SecureResources secureResources = null-->Line_70 $$ secureResources = SecureDataNodeStarter.getSecureResources(dnConf)[ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_15 $$ if (conf.get(DFS_BLOCKREPORT_INITIAL_DELAY_KEY) == null) [ CD ]
Line_77 $$ DataNode dn = null-->Line_105 $$ dns[i - curDatanodesNum] = dn[ FD ]
Line_59 $$ String name = hosts[i - curDatanodesNum]-->Line_61 $$ StaticMapping.addNodeToRack(name, racks[i - curDatanodesNum])[ FD ]
Line_58 $$ if (racks != null) -->Line_59 $$ String name = hosts[i - curDatanodesNum][ CD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_54 $$ if (hosts != null) [ FD ]
Line_39 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_46 $$ dnConf.set(DFS_DATANODE_DATA_DIR_KEY, dirs)[ FD ]
Line_25 $$ hosts = new String[numDataNodes]-->Line_64 $$ if (hosts != null) [ FD ]
Line_99 $$ if (racks != null) -->Line_100 $$ LOG.info("Adding node with service : " + service + " to rack " + racks[i - curDatanodesNum])[ CD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_43 $$ setupDatanodeAddress(dnConf, setupHostsFile, checkDataNodeAddrConfig)[ CD ]
Line_77 $$ DataNode dn = null-->Line_104 $$ dataNodes.add(new DataNodeProperties(dn, newconf, dnArgs, secureResources, dn.getIpcPort()))[ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_37 $$ DataNode[] dns = new DataNode[numDataNodes][ CD ]
Line_58 $$ if (racks != null) -->Line_60 $$ LOG.info("Adding node with hostname : " + name + " to rack " + racks[i - curDatanodesNum])[ CD ]
Line_67 $$ SecureResources secureResources = null-->Line_80 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)[ FD ]
Line_80 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)-->Line_96 $$ if (dn == null)[ FD ]
Line_80 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)-->Line_105 $$ dns[i - curDatanodesNum] = dn[ FD ]
Line_77 $$ DataNode dn = null-->Line_80 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)[ FD ]
Line_15 $$ if (conf.get(DFS_BLOCKREPORT_INITIAL_DELAY_KEY) == null) -->Line_16 $$ conf.setLong(DFS_BLOCKREPORT_INITIAL_DELAY_KEY, 0)[ CD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_58 $$ if (racks != null) [ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_40 $$ if (dnConfOverlays != null) [ FD ]
Line_39 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_50 $$ SimulatedFSDataset.setFactory(dnConf)[ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_49 $$ if (simulatedCapacities != null) [ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_110 $$ if (storageCapacities != null) [ CD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_39 $$ Configuration dnConf = new HdfsConfiguration(conf)[ CD ]
Line_6 $$ if (operation == StartupOption.RECOVER) -->Line_7 $$ return[ CD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_36 $$ String[] dnArgs = (operation == null || operation != StartupOption.ROLLBACK) ? null : new String[] [ CD ]
Line_112 $$ List<? extends FsVolumeSpi> volumes = dns[i].getFSDataset().getVolumes()-->Line_115 $$ for (int j = 0; j < volumes.size(); ++j) [ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_9 $$ if (checkDataNodeHostConfig) [ CD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_96 $$ if (dn == null)[ CD ]
Line_40 $$ if (dnConfOverlays != null) -->Line_41 $$ dnConf.addResource(dnConfOverlays[i])[ CD ]
Line_112 $$ List<? extends FsVolumeSpi> volumes = dns[i].getFSDataset().getVolumes()-->Line_116 $$ FsVolumeImpl volume = (FsVolumeImpl) volumes.get(j)[ FD ]
Line_111 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; ++i) -->Line_115 $$ for (int j = 0; j < volumes.size(); ++j) [ CD ]
Line_39 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_70 $$ secureResources = SecureDataNodeStarter.getSecureResources(dnConf)[ FD ]
Line_9 $$ if (checkDataNodeHostConfig) -->Line_12 $$ conf.set(DFS_DATANODE_HOST_NAME_KEY, "127.0.0.1")[ CD ]
Line_25 $$ hosts = new String[numDataNodes]-->Line_54 $$ if (hosts != null) [ FD ]
Line_39 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_53 $$ LOG.info("Starting DataNode " + i + " with " + DFSConfigKeys.DFS_DATANODE_DATA_DIR_KEY + ": " + dnConf.get(DFSConfigKeys.DFS_DATANODE_DATA_DIR_KEY))[ FD ]
Line_49 $$ if (simulatedCapacities != null) -->Line_51 $$ dnConf.setLong(SimulatedFSDataset.CONFIG_PROPERTY_CAPACITY, simulatedCapacities[i - curDatanodesNum])[ CD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_108 $$ this.numDataNodes += numDataNodes[ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_15 $$ if (conf.get(DFS_BLOCKREPORT_INITIAL_DELAY_KEY) == null) [ FD ]
Line_77 $$ DataNode dn = null-->Line_103 $$ dn.runDatanodeDaemon()[ FD ]
Line_39 $$ Configuration dnConf = new HdfsConfiguration(conf)-->Line_41 $$ dnConf.addResource(dnConfOverlays[i])[ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_14 $$ int curDatanodesNum = dataNodes.size()[ CD ]
Line_111 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; ++i) -->Line_112 $$ List<? extends FsVolumeSpi> volumes = dns[i].getFSDataset().getVolumes()[ CD ]
Line_83 $$ if (UserGroupInformation.isSecurityEnabled() && numRetries < maxRetriesOnSasl) -->Line_90 $$ ++numRetries[ CD ]
Line_58 $$ if (racks != null) -->Line_61 $$ StaticMapping.addNodeToRack(name, racks[i - curDatanodesNum])[ CD ]
Line_26 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) [ FD ]
Line_26 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_45 $$ String dirs = makeDataNodeDirs(i, storageTypes == null ? null : storageTypes[i])[ FD ]
Line_45 $$ String dirs = makeDataNodeDirs(i, storageTypes == null ? null : storageTypes[i])-->Line_46 $$ dnConf.set(DFS_DATANODE_DATA_DIR_KEY, dirs)[ FD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_44 $$ if (manageDfsDirs) [ CD ]
Line_45 $$ String dirs = makeDataNodeDirs(i, storageTypes == null ? null : storageTypes[i])-->Line_47 $$ conf.set(DFS_DATANODE_DATA_DIR_KEY, dirs)[ FD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_58 $$ if (racks != null) [ CD ]
Line_80 $$ dn = DataNode.instantiateDataNode(dnArgs, dnConf, secureResources)-->Line_104 $$ dataNodes.add(new DataNodeProperties(dn, newconf, dnArgs, secureResources, dn.getIpcPort()))[ FD ]
Line_49 $$ if (simulatedCapacities != null) -->Line_50 $$ SimulatedFSDataset.setFactory(dnConf)[ CD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_36 $$ String[] dnArgs = (operation == null || operation != StartupOption.ROLLBACK) ? null : new String[] [ FD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_54 $$ if (hosts != null) [ CD ]
Line_54 $$ if (hosts != null) -->Line_56 $$ LOG.info("Starting DataNode " + i + " with hostname set to: " + dnConf.get(DFSConfigKeys.DFS_DATANODE_HOST_NAME_KEY))[ CD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_18 $$ if (racks != null && numDataNodes > racks.length) [ CD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_40 $$ if (dnConfOverlays != null) [ CD ]
Line_115 $$ for (int j = 0; j < volumes.size(); ++j) -->Line_117 $$ volume.setCapacityForTesting(storageCapacities[i][j])[ CD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_68 $$ if (UserGroupInformation.isSecurityEnabled() && conf.get(DFS_DATA_TRANSFER_PROTECTION_KEY) == null) [ FD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_108 $$ this.numDataNodes += numDataNodes[ CD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_105 $$ dns[i - curDatanodesNum] = dn[ CD ]
Line_38 $$ for (int i = curDatanodesNum; i < curDatanodesNum + numDataNodes; i++) -->Line_76 $$ int numRetries = 0[ CD ]
Line_2 $$ public synchronized void startDataNodes(Configuration conf, int numDataNodes, StorageType[][] storageTypes, boolean manageDfsDirs, StartupOption operation, String[] racks, String[] hosts, long[][] storageCapacities, long[] simulatedCapacities, boolean setupHostsFile, boolean checkDataNodeAddrConfig, boolean checkDataNodeHostConfig, Configuration[] dnConfOverlays) throws IOException -->Line_109 $$ waitActive()[ CD ]
