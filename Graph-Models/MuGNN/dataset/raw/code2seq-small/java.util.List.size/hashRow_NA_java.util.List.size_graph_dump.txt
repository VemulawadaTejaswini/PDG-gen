Line_4 $$ for (int i = 0; i < hashChannels.size(); i++) -->Line_6 $$ Type type = types.get(hashChannel)[ CD ]
Line_6 $$ Type type = types.get(hashChannel)-->Line_8 $$ result = result * 31 + TypeUtils.hashPosition(type, block, position)[ FD ]
Line_3 $$ int result = 0-->Line_8 $$ result = result * 31 + TypeUtils.hashPosition(type, block, position)[ FD ]
Line_2 $$ public int hashRow(int position, Block... blocks) -->Line_8 $$ result = result * 31 + TypeUtils.hashPosition(type, block, position)[ FD ]
Line_4 $$ for (int i = 0; i < hashChannels.size(); i++) -->Line_8 $$ result = result * 31 + TypeUtils.hashPosition(type, block, position)[ CD ]
Line_4 $$ for (int i = 0; i < hashChannels.size(); i++) -->Line_5 $$ int hashChannel = hashChannels.get(i)[ CD ]
Line_2 $$ public int hashRow(int position, Block... blocks) -->Line_4 $$ for (int i = 0; i < hashChannels.size(); i++) [ CD ]
Line_2 $$ public int hashRow(int position, Block... blocks) -->Line_3 $$ int result = 0[ CD ]
Line_4 $$ for (int i = 0; i < hashChannels.size(); i++) -->Line_5 $$ int hashChannel = hashChannels.get(i)[ FD ]
Line_2 $$ public int hashRow(int position, Block... blocks) -->Line_10 $$ return result[ CD ]
Line_5 $$ int hashChannel = hashChannels.get(i)-->Line_6 $$ Type type = types.get(hashChannel)[ FD ]
Line_4 $$ for (int i = 0; i < hashChannels.size(); i++) -->Line_7 $$ Block block = blocks[i][ CD ]
Line_7 $$ Block block = blocks[i]-->Line_8 $$ result = result * 31 + TypeUtils.hashPosition(type, block, position)[ FD ]
