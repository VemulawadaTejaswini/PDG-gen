Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_4 $$ final ExecutionTarget active = ExecutionTargetManager.getActiveTarget(project)[ CD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_58 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)[ FD ]
Line_47 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_61 $$ manager.makeStable(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_4 $$ final ExecutionTarget active = ExecutionTargetManager.getActiveTarget(project)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_53 $$ if (settings.isTemporary() || dynamic) [ CD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_3 $$ final List<ActionWrapper> result = new ArrayList<ActionWrapper>()[ CD ]
Line_3 $$ final List<ActionWrapper> result = new ArrayList<ActionWrapper>()-->Line_6 $$ result.add(new ActionWrapper(eachTarget.getDisplayName(), eachTarget.getIcon()) [ FD ]
Line_6 $$ result.add(new ActionWrapper(eachTarget.getDisplayName(), eachTarget.getIcon()) -->Line_18 $$ manager.setSelectedConfiguration(settings)[ CD ]
Line_6 $$ result.add(new ActionWrapper(eachTarget.getDisplayName(), eachTarget.getIcon()) -->Line_20 $$ ExecutionUtil.runConfiguration(settings, action.getExecutor())[ CD ]
Line_32 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_49 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_14 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_36 $$ manager.setSelectedConfiguration(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_36 $$ manager.setSelectedConfiguration(settings)[ FD ]
Line_48 $$ if (dynamic)-->Line_49 $$ manager.setTemporaryConfiguration(settings)[ CD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_20 $$ ExecutionUtil.runConfiguration(settings, action.getExecutor())[ FD ]
Line_6 $$ result.add(new ActionWrapper(eachTarget.getDisplayName(), eachTarget.getIcon()) -->Line_19 $$ ExecutionTargetManager.setActiveTarget(project, eachTarget)[ CD ]
Line_54 $$ result.add(new ActionWrapper("Save configuration", AllIcons.Actions.Menu_saveall) -->Line_59 $$ if (dynamic)[ CD ]
Line_33 $$ if (dynamic) -->Line_34 $$ manager.setTemporaryConfiguration(settings)[ CD ]
Line_5 $$ for (final ExecutionTarget eachTarget : ExecutionTargetManager.getTargetsToChooseFor(project, settings)) -->Line_19 $$ ExecutionTargetManager.setActiveTarget(project, eachTarget)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_47 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)[ FD ]
Line_14 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_60 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_34 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_3 $$ final List<ActionWrapper> result = new ArrayList<ActionWrapper>()-->Line_28 $$ result.add(new ActionWrapper(executor.getActionName(), executor.getIcon(), isFirst) [ FD ]
Line_54 $$ result.add(new ActionWrapper("Save configuration", AllIcons.Actions.Menu_saveall) -->Line_58 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)[ CD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_32 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)[ FD ]
Line_47 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_49 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_54 $$ result.add(new ActionWrapper("Save configuration", AllIcons.Actions.Menu_saveall) -->Line_61 $$ manager.makeStable(settings)[ CD ]
Line_32 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_61 $$ manager.makeStable(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_5 $$ for (final ExecutionTarget eachTarget : ExecutionTargetManager.getTargetsToChooseFor(project, settings)) [ FD ]
Line_28 $$ result.add(new ActionWrapper(executor.getActionName(), executor.getIcon(), isFirst) -->Line_32 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)[ CD ]
Line_14 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_49 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_53 $$ if (settings.isTemporary() || dynamic) -->Line_54 $$ result.add(new ActionWrapper("Save configuration", AllIcons.Actions.Menu_saveall) [ CD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_14 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)[ FD ]
Line_3 $$ final List<ActionWrapper> result = new ArrayList<ActionWrapper>()-->Line_65 $$ return result.toArray(new ActionWrapper[result.size()])[ FD ]
Line_28 $$ result.add(new ActionWrapper(executor.getActionName(), executor.getIcon(), isFirst) -->Line_33 $$ if (dynamic) [ CD ]
Line_32 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_34 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_3 $$ final List<ActionWrapper> result = new ArrayList<ActionWrapper>()-->Line_54 $$ result.add(new ActionWrapper("Save configuration", AllIcons.Actions.Menu_saveall) [ FD ]
Line_58 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_61 $$ manager.makeStable(settings)[ FD ]
Line_43 $$ result.add(new ActionWrapper("Edit...", AllIcons.Actions.EditSource, true) -->Line_47 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)[ CD ]
Line_14 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_61 $$ manager.makeStable(settings)[ FD ]
Line_15 $$ if (dynamic) -->Line_16 $$ manager.setTemporaryConfiguration(settings)[ CD ]
Line_14 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_18 $$ manager.setSelectedConfiguration(settings)[ FD ]
Line_14 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_34 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_58 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_60 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_28 $$ result.add(new ActionWrapper(executor.getActionName(), executor.getIcon(), isFirst) -->Line_37 $$ ExecutionUtil.runConfiguration(settings, executor)[ CD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_60 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_43 $$ result.add(new ActionWrapper("Edit...", AllIcons.Actions.EditSource, true) [ CD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_53 $$ if (settings.isTemporary() || dynamic) [ FD ]
Line_43 $$ result.add(new ActionWrapper("Edit...", AllIcons.Actions.EditSource, true) -->Line_48 $$ if (dynamic)[ CD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_61 $$ manager.makeStable(settings)[ FD ]
Line_6 $$ result.add(new ActionWrapper(eachTarget.getDisplayName(), eachTarget.getIcon()) -->Line_15 $$ if (dynamic) [ CD ]
Line_6 $$ result.add(new ActionWrapper(eachTarget.getDisplayName(), eachTarget.getIcon()) -->Line_14 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)[ CD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_49 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_50 $$ action.editConfiguration(project, settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_65 $$ return result.toArray(new ActionWrapper[result.size()])[ CD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_19 $$ ExecutionTargetManager.setActiveTarget(project, eachTarget)[ FD ]
Line_14 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_16 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_43 $$ result.add(new ActionWrapper("Edit...", AllIcons.Actions.EditSource, true) -->Line_50 $$ action.editConfiguration(project, settings)[ CD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_37 $$ ExecutionUtil.runConfiguration(settings, executor)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_26 $$ final ProgramRunner runner = RunnerRegistry.getInstance().getRunner(executor.getId(), settings.getConfiguration())[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_18 $$ manager.setSelectedConfiguration(settings)[ FD ]
Line_27 $$ if (runner != null) -->Line_28 $$ result.add(new ActionWrapper(executor.getActionName(), executor.getIcon(), isFirst) [ CD ]
Line_3 $$ final List<ActionWrapper> result = new ArrayList<ActionWrapper>()-->Line_43 $$ result.add(new ActionWrapper("Edit...", AllIcons.Actions.EditSource, true) [ FD ]
Line_5 $$ for (final ExecutionTarget eachTarget : ExecutionTargetManager.getTargetsToChooseFor(project, settings)) -->Line_6 $$ result.add(new ActionWrapper(eachTarget.getDisplayName(), eachTarget.getIcon()) [ FD ]
Line_4 $$ final ExecutionTarget active = ExecutionTargetManager.getActiveTarget(project)-->Line_9 $$ setChecked(eachTarget.equals(active))[ FD ]
Line_47 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_60 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_59 $$ if (dynamic)-->Line_60 $$ manager.setTemporaryConfiguration(settings)[ CD ]
Line_5 $$ for (final ExecutionTarget eachTarget : ExecutionTargetManager.getTargetsToChooseFor(project, settings)) -->Line_9 $$ setChecked(eachTarget.equals(active))[ FD ]
Line_32 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_60 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_16 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_32 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_36 $$ manager.setSelectedConfiguration(settings)[ FD ]
Line_28 $$ result.add(new ActionWrapper(executor.getActionName(), executor.getIcon(), isFirst) -->Line_36 $$ manager.setSelectedConfiguration(settings)[ CD ]
