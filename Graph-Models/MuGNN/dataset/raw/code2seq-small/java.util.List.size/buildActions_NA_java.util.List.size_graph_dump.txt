Line_27 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_52 $$ manager.makeStable(settings)[ FD ]
Line_11 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_15 $$ manager.setSelectedConfiguration(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_46 $$ if (settings.isTemporary() || dynamic) [ FD ]
Line_47 $$ result.add(new ActionWrapper("Save configuration", AllIcons.Actions.Menu_saveall) -->Line_49 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)[ CD ]
Line_25 $$ result.add(new ActionWrapper(executor.getActionName(), executor.getIcon(), isFirst) -->Line_31 $$ manager.setSelectedConfiguration(settings)[ CD ]
Line_6 $$ result.add(new ActionWrapper(eachTarget.getDisplayName(), eachTarget.getIcon()) -->Line_16 $$ ExecutionTargetManager.setActiveTarget(project, eachTarget)[ CD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_23 $$ final ProgramRunner runner = RunnerRegistry.getInstance().getRunner(executor.getId(), settings.getConfiguration())[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_46 $$ if (settings.isTemporary() || dynamic) [ CD ]
Line_6 $$ result.add(new ActionWrapper(eachTarget.getDisplayName(), eachTarget.getIcon()) -->Line_11 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)[ CD ]
Line_6 $$ result.add(new ActionWrapper(eachTarget.getDisplayName(), eachTarget.getIcon()) -->Line_12 $$ if (dynamic) [ CD ]
Line_47 $$ result.add(new ActionWrapper("Save configuration", AllIcons.Actions.Menu_saveall) -->Line_50 $$ if (dynamic)[ CD ]
Line_38 $$ result.add(new ActionWrapper("Edit...", AllIcons.Actions.EditSource, true) -->Line_41 $$ if (dynamic)[ CD ]
Line_47 $$ result.add(new ActionWrapper("Save configuration", AllIcons.Actions.Menu_saveall) -->Line_52 $$ manager.makeStable(settings)[ CD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_3 $$ final List<ActionWrapper> result = new ArrayList<ActionWrapper>()[ CD ]
Line_3 $$ final List<ActionWrapper> result = new ArrayList<ActionWrapper>()-->Line_25 $$ result.add(new ActionWrapper(executor.getActionName(), executor.getIcon(), isFirst) [ FD ]
Line_40 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_42 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_5 $$ for (final ExecutionTarget eachTarget : ExecutionTargetManager.getTargetsToChooseFor(project, settings)) [ FD ]
Line_11 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_42 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_17 $$ ExecutionUtil.runConfiguration(settings, action.getExecutor())[ FD ]
Line_5 $$ for (final ExecutionTarget eachTarget : ExecutionTargetManager.getTargetsToChooseFor(project, settings)) -->Line_8 $$ setChecked(eachTarget.equals(active))[ FD ]
Line_38 $$ result.add(new ActionWrapper("Edit...", AllIcons.Actions.EditSource, true) -->Line_40 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)[ CD ]
Line_11 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_31 $$ manager.setSelectedConfiguration(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_43 $$ action.editConfiguration(project, settings)[ FD ]
Line_25 $$ result.add(new ActionWrapper(executor.getActionName(), executor.getIcon(), isFirst) -->Line_27 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)[ CD ]
Line_49 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_51 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_40 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_52 $$ manager.makeStable(settings)[ FD ]
Line_40 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_51 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_49 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_52 $$ manager.makeStable(settings)[ FD ]
Line_46 $$ if (settings.isTemporary() || dynamic) -->Line_47 $$ result.add(new ActionWrapper("Save configuration", AllIcons.Actions.Menu_saveall) [ CD ]
Line_25 $$ result.add(new ActionWrapper(executor.getActionName(), executor.getIcon(), isFirst) -->Line_28 $$ if (dynamic) [ CD ]
Line_5 $$ for (final ExecutionTarget eachTarget : ExecutionTargetManager.getTargetsToChooseFor(project, settings)) -->Line_6 $$ result.add(new ActionWrapper(eachTarget.getDisplayName(), eachTarget.getIcon()) [ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_15 $$ manager.setSelectedConfiguration(settings)[ FD ]
Line_27 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_29 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_38 $$ result.add(new ActionWrapper("Edit...", AllIcons.Actions.EditSource, true) -->Line_43 $$ action.editConfiguration(project, settings)[ CD ]
Line_27 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_31 $$ manager.setSelectedConfiguration(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_32 $$ ExecutionUtil.runConfiguration(settings, executor)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_52 $$ manager.makeStable(settings)[ FD ]
Line_27 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_51 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_16 $$ ExecutionTargetManager.setActiveTarget(project, eachTarget)[ FD ]
Line_50 $$ if (dynamic)-->Line_51 $$ manager.setTemporaryConfiguration(settings)[ CD ]
Line_11 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_13 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_29 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_38 $$ result.add(new ActionWrapper("Edit...", AllIcons.Actions.EditSource, true) [ CD ]
Line_27 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_42 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_51 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_40 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_56 $$ return result.toArray(new ActionWrapper[result.size()])[ CD ]
Line_25 $$ result.add(new ActionWrapper(executor.getActionName(), executor.getIcon(), isFirst) -->Line_32 $$ ExecutionUtil.runConfiguration(settings, executor)[ CD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_49 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_13 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_4 $$ final ExecutionTarget active = ExecutionTargetManager.getActiveTarget(project)[ FD ]
Line_11 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_51 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_28 $$ if (dynamic) -->Line_29 $$ manager.setTemporaryConfiguration(settings)[ CD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_31 $$ manager.setSelectedConfiguration(settings)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_4 $$ final ExecutionTarget active = ExecutionTargetManager.getActiveTarget(project)[ CD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_11 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)[ FD ]
Line_3 $$ final List<ActionWrapper> result = new ArrayList<ActionWrapper>()-->Line_6 $$ result.add(new ActionWrapper(eachTarget.getDisplayName(), eachTarget.getIcon()) [ FD ]
Line_6 $$ result.add(new ActionWrapper(eachTarget.getDisplayName(), eachTarget.getIcon()) -->Line_15 $$ manager.setSelectedConfiguration(settings)[ CD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_27 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)[ FD ]
Line_12 $$ if (dynamic) -->Line_13 $$ manager.setTemporaryConfiguration(settings)[ CD ]
Line_6 $$ result.add(new ActionWrapper(eachTarget.getDisplayName(), eachTarget.getIcon()) -->Line_17 $$ ExecutionUtil.runConfiguration(settings, action.getExecutor())[ CD ]
Line_24 $$ if (runner != null) -->Line_25 $$ result.add(new ActionWrapper(executor.getActionName(), executor.getIcon(), isFirst) [ CD ]
Line_11 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_29 $$ manager.setTemporaryConfiguration(settings)[ FD ]
Line_41 $$ if (dynamic)-->Line_42 $$ manager.setTemporaryConfiguration(settings)[ CD ]
Line_11 $$ final RunManagerEx manager = RunManagerEx.getInstanceEx(project)-->Line_52 $$ manager.makeStable(settings)[ FD ]
Line_3 $$ final List<ActionWrapper> result = new ArrayList<ActionWrapper>()-->Line_56 $$ return result.toArray(new ActionWrapper[result.size()])[ FD ]
Line_4 $$ final ExecutionTarget active = ExecutionTargetManager.getActiveTarget(project)-->Line_8 $$ setChecked(eachTarget.equals(active))[ FD ]
Line_3 $$ final List<ActionWrapper> result = new ArrayList<ActionWrapper>()-->Line_47 $$ result.add(new ActionWrapper("Save configuration", AllIcons.Actions.Menu_saveall) [ FD ]
Line_3 $$ final List<ActionWrapper> result = new ArrayList<ActionWrapper>()-->Line_38 $$ result.add(new ActionWrapper("Edit...", AllIcons.Actions.EditSource, true) [ FD ]
Line_5 $$ for (final ExecutionTarget eachTarget : ExecutionTargetManager.getTargetsToChooseFor(project, settings)) -->Line_16 $$ ExecutionTargetManager.setActiveTarget(project, eachTarget)[ FD ]
Line_2 $$ private static ActionWrapper[] buildActions(@NotNull final Project project, final ChooseRunConfigurationPopup action, @NotNull final RunnerAndConfigurationSettings settings, final boolean dynamic) -->Line_42 $$ manager.setTemporaryConfiguration(settings)[ FD ]
