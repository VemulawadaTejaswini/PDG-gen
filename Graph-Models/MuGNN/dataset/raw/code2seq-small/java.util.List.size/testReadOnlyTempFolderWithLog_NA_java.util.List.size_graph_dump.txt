Line_7 $$ try (CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(FIFOUtil.class.getName(), Level.WARNING)) -->Line_8 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ FD ]
Line_19 $$ LogRecord logRecord = logRecords.get(0)-->Line_20 $$ Assert.assertEquals("Unable to detect FIFO support", logRecord.getMessage())[ FD ]
Line_19 $$ LogRecord logRecord = logRecords.get(0)-->Line_21 $$ Throwable throwable = logRecord.getThrown()[ FD ]
Line_21 $$ Throwable throwable = logRecord.getThrown()-->Line_23 $$ String message = throwable.getMessage()[ FD ]
Line_23 $$ String message = throwable.getMessage()-->Line_24 $$ Assert.assertTrue(message.startsWith("Unable to create FIFO with command \"mkfifo\", " + "external process returned "))[ FD ]
Line_11 $$ String oldTmpDirName = System.getProperty("java.io.tmpdir")-->Line_16 $$ System.setProperty("java.io.tmpdir", oldTmpDirName)[ FD ]
Line_9 $$ File newTmpDir = new File("newTmpDir")-->Line_10 $$ newTmpDir.delete()[ FD ]
Line_4 $$ if (!_shouldTest()) -->Line_5 $$ return[ CD ]
Line_8 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_18 $$ Assert.assertEquals(1, logRecords.size())[ FD ]
Line_21 $$ Throwable throwable = logRecord.getThrown()-->Line_22 $$ Assert.assertEquals(Exception.class, throwable.getClass())[ FD ]
Line_8 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_19 $$ LogRecord logRecord = logRecords.get(0)[ FD ]
Line_9 $$ File newTmpDir = new File("newTmpDir")-->Line_12 $$ System.setProperty("java.io.tmpdir", newTmpDir.getAbsolutePath())[ FD ]
