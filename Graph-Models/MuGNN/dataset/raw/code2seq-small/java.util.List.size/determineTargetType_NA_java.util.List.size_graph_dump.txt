Line_2 $$ private void determineTargetType(DeclaredType type, String propertyName, String explicitTargetEntity, String[] types) -->Line_4 $$ if (typeArguments.size() == 0 && explicitTargetEntity == null) [ CD ]
Line_2 $$ private void determineTargetType(DeclaredType type, String propertyName, String explicitTargetEntity, String[] types) -->Line_3 $$ List<? extends TypeMirror> typeArguments = type.getTypeArguments()[ CD ]
Line_2 $$ private void determineTargetType(DeclaredType type, String propertyName, String explicitTargetEntity, String[] types) -->Line_7 $$ if (explicitTargetEntity == null) [ FD ]
Line_2 $$ private void determineTargetType(DeclaredType type, String propertyName, String explicitTargetEntity, String[] types) -->Line_10 $$ types[0] = explicitTargetEntity[ FD ]
Line_3 $$ List<? extends TypeMirror> typeArguments = type.getTypeArguments()-->Line_8 $$ types[0] = TypeUtils.extractClosestRealTypeAsString(typeArguments.get(0), context)[ FD ]
Line_3 $$ List<? extends TypeMirror> typeArguments = type.getTypeArguments()-->Line_4 $$ if (typeArguments.size() == 0 && explicitTargetEntity == null) [ FD ]
Line_7 $$ if (explicitTargetEntity == null) -->Line_8 $$ types[0] = TypeUtils.extractClosestRealTypeAsString(typeArguments.get(0), context)[ CD ]
Line_7 $$ if (explicitTargetEntity == null) -->Line_10 $$ types[0] = explicitTargetEntity[ CD ]
Line_2 $$ private void determineTargetType(DeclaredType type, String propertyName, String explicitTargetEntity, String[] types) -->Line_3 $$ List<? extends TypeMirror> typeArguments = type.getTypeArguments()[ FD ]
Line_2 $$ private void determineTargetType(DeclaredType type, String propertyName, String explicitTargetEntity, String[] types) -->Line_7 $$ if (explicitTargetEntity == null) [ CD ]
