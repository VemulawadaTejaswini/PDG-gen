Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_6 $$ mapping.setConf(conf)[ CD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_11 $$ l1.add("n2")[ CD ]
Line_8 $$ List<String> l1 = new ArrayList<String>(3)-->Line_11 $$ l1.add("n2")[ FD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_12 $$ List<String> resolved = mapping.resolve(l1)[ CD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_22 $$ assertNull(topology, switchMap.get("unknown"))[ CD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_5 $$ conf.set(StaticMapping.KEY_HADOOP_CONFIGURED_NODE_MAPPING, "n1=/r1,n2=/r2")[ CD ]
Line_4 $$ Configuration conf = new Configuration()-->Line_6 $$ mapping.setConf(conf)[ FD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_13 $$ assertEquals(3, resolved.size())[ CD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_21 $$ assertEquals(topology, "/r1", switchMap.get("n1"))[ CD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_20 $$ assertEquals(topology, 2, switchMap.size())[ CD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_17 $$ Map<String, String> switchMap = mapping.getSwitchMap()[ CD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_15 $$ assertEquals(NetworkTopology.DEFAULT_RACK, resolved.get(1))[ CD ]
Line_18 $$ String topology = mapping.dumpTopology()-->Line_22 $$ assertNull(topology, switchMap.get("unknown"))[ FD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_8 $$ List<String> l1 = new ArrayList<String>(3)[ CD ]
Line_3 $$ StaticMapping mapping = newInstance()-->Line_18 $$ String topology = mapping.dumpTopology()[ FD ]
Line_17 $$ Map<String, String> switchMap = mapping.getSwitchMap()-->Line_20 $$ assertEquals(topology, 2, switchMap.size())[ FD ]
Line_3 $$ StaticMapping mapping = newInstance()-->Line_7 $$ assertSingleSwitch(mapping)[ FD ]
Line_3 $$ StaticMapping mapping = newInstance()-->Line_6 $$ mapping.setConf(conf)[ FD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_10 $$ l1.add("unknown")[ CD ]
Line_12 $$ List<String> resolved = mapping.resolve(l1)-->Line_14 $$ assertEquals("/r1", resolved.get(0))[ FD ]
Line_12 $$ List<String> resolved = mapping.resolve(l1)-->Line_15 $$ assertEquals(NetworkTopology.DEFAULT_RACK, resolved.get(1))[ FD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_14 $$ assertEquals("/r1", resolved.get(0))[ CD ]
Line_17 $$ Map<String, String> switchMap = mapping.getSwitchMap()-->Line_22 $$ assertNull(topology, switchMap.get("unknown"))[ FD ]
Line_3 $$ StaticMapping mapping = newInstance()-->Line_12 $$ List<String> resolved = mapping.resolve(l1)[ FD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_9 $$ l1.add("n1")[ CD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_19 $$ LOG.info(topology)[ CD ]
Line_4 $$ Configuration conf = new Configuration()-->Line_5 $$ conf.set(StaticMapping.KEY_HADOOP_CONFIGURED_NODE_MAPPING, "n1=/r1,n2=/r2")[ FD ]
Line_8 $$ List<String> l1 = new ArrayList<String>(3)-->Line_12 $$ List<String> resolved = mapping.resolve(l1)[ FD ]
Line_3 $$ StaticMapping mapping = newInstance()-->Line_17 $$ Map<String, String> switchMap = mapping.getSwitchMap()[ FD ]
Line_18 $$ String topology = mapping.dumpTopology()-->Line_20 $$ assertEquals(topology, 2, switchMap.size())[ FD ]
Line_8 $$ List<String> l1 = new ArrayList<String>(3)-->Line_9 $$ l1.add("n1")[ FD ]
Line_8 $$ List<String> l1 = new ArrayList<String>(3)-->Line_10 $$ l1.add("unknown")[ FD ]
Line_18 $$ String topology = mapping.dumpTopology()-->Line_21 $$ assertEquals(topology, "/r1", switchMap.get("n1"))[ FD ]
Line_12 $$ List<String> resolved = mapping.resolve(l1)-->Line_13 $$ assertEquals(3, resolved.size())[ FD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_16 $$ assertEquals("/r2", resolved.get(2))[ CD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_7 $$ assertSingleSwitch(mapping)[ CD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_4 $$ Configuration conf = new Configuration()[ CD ]
Line_12 $$ List<String> resolved = mapping.resolve(l1)-->Line_16 $$ assertEquals("/r2", resolved.get(2))[ FD ]
Line_18 $$ String topology = mapping.dumpTopology()-->Line_19 $$ LOG.info(topology)[ FD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_3 $$ StaticMapping mapping = newInstance()[ CD ]
Line_17 $$ Map<String, String> switchMap = mapping.getSwitchMap()-->Line_21 $$ assertEquals(topology, "/r1", switchMap.get("n1"))[ FD ]
Line_2 $$ public void testReadNodesFromConfig() throws Throwable -->Line_18 $$ String topology = mapping.dumpTopology()[ CD ]
