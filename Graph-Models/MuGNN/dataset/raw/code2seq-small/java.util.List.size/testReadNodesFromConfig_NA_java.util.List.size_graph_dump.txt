Line_25 $$ String topology = mapping.dumpTopology()-->Line_29 $$ assertNull(topology, switchMap.get("unknown"))[ FD ]
Line_19 $$ List<String> resolved = mapping.resolve(l1)-->Line_22 $$ assertEquals(NetworkTopology.DEFAULT_RACK, resolved.get(1))[ FD ]
Line_7 $$ StaticMapping mapping = newInstance()-->Line_24 $$ Map<String, String> switchMap = mapping.getSwitchMap()[ FD ]
Line_24 $$ Map<String, String> switchMap = mapping.getSwitchMap()-->Line_27 $$ assertEquals(topology, 2, switchMap.size())[ FD ]
Line_15 $$ List<String> l1 = new ArrayList<String>(3)-->Line_16 $$ l1.add("n1")[ FD ]
Line_25 $$ String topology = mapping.dumpTopology()-->Line_28 $$ assertEquals(topology, "/r1", switchMap.get("n1"))[ FD ]
Line_19 $$ List<String> resolved = mapping.resolve(l1)-->Line_21 $$ assertEquals("/r1", resolved.get(0))[ FD ]
Line_15 $$ List<String> l1 = new ArrayList<String>(3)-->Line_18 $$ l1.add("n2")[ FD ]
Line_8 $$ Configuration conf = new Configuration()-->Line_10 $$ mapping.setConf(conf)[ FD ]
Line_25 $$ String topology = mapping.dumpTopology()-->Line_27 $$ assertEquals(topology, 2, switchMap.size())[ FD ]
Line_7 $$ StaticMapping mapping = newInstance()-->Line_25 $$ String topology = mapping.dumpTopology()[ FD ]
Line_15 $$ List<String> l1 = new ArrayList<String>(3)-->Line_19 $$ List<String> resolved = mapping.resolve(l1)[ FD ]
Line_7 $$ StaticMapping mapping = newInstance()-->Line_19 $$ List<String> resolved = mapping.resolve(l1)[ FD ]
Line_24 $$ Map<String, String> switchMap = mapping.getSwitchMap()-->Line_29 $$ assertNull(topology, switchMap.get("unknown"))[ FD ]
Line_19 $$ List<String> resolved = mapping.resolve(l1)-->Line_23 $$ assertEquals("/r2", resolved.get(2))[ FD ]
Line_8 $$ Configuration conf = new Configuration()-->Line_9 $$ conf.set(StaticMapping.KEY_HADOOP_CONFIGURED_NODE_MAPPING, "n1=/r1,n2=/r2")[ FD ]
Line_15 $$ List<String> l1 = new ArrayList<String>(3)-->Line_17 $$ l1.add("unknown")[ FD ]
Line_7 $$ StaticMapping mapping = newInstance()-->Line_10 $$ mapping.setConf(conf)[ FD ]
Line_24 $$ Map<String, String> switchMap = mapping.getSwitchMap()-->Line_28 $$ assertEquals(topology, "/r1", switchMap.get("n1"))[ FD ]
Line_25 $$ String topology = mapping.dumpTopology()-->Line_26 $$ LOG.info(topology)[ FD ]
Line_19 $$ List<String> resolved = mapping.resolve(l1)-->Line_20 $$ assertEquals(3, resolved.size())[ FD ]
