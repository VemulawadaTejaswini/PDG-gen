Line_27 $$ while (true) -->Line_39 $$ if (tasks.isEmpty())[ CD ]
Line_49 $$ for (int level = 0; level < levels; level++) -->Line_50 $$ List<SSTableReader> sstables = manifest.getLevel(level)[ FD ]
Line_6 $$ Keyspace keyspace = Keyspace.open(ksname)-->Line_7 $$ ColumnFamilyStore store = keyspace.getColumnFamilyStore(cfname)[ FD ]
Line_7 $$ ColumnFamilyStore store = keyspace.getColumnFamilyStore(cfname)-->Line_8 $$ store.disableAutoCompaction()[ FD ]
Line_29 $$ final AbstractCompactionTask nextTask = lcs.getNextBackgroundTask(Integer.MIN_VALUE)-->Line_30 $$ if (nextTask == null)[ FD ]
Line_27 $$ while (true) -->Line_28 $$ while (true) [ CD ]
Line_28 $$ while (true) -->Line_32 $$ tasks.add(new Runnable() [ CD ]
Line_7 $$ ColumnFamilyStore store = keyspace.getColumnFamilyStore(cfname)-->Line_22 $$ store.forceBlockingFlush()[ FD ]
Line_7 $$ ColumnFamilyStore store = keyspace.getColumnFamilyStore(cfname)-->Line_9 $$ LeveledCompactionStrategy lcs = (LeveledCompactionStrategy) store.getCompactionStrategyManager().getStrategies().get(1)[ FD ]
Line_18 $$ UpdateBuilder builder = UpdateBuilder.create(store.metadata, key)-->Line_19 $$ builder.newRow("column" + c).add("val", value)[ FD ]
Line_18 $$ UpdateBuilder builder = UpdateBuilder.create(store.metadata, key)-->Line_20 $$ Mutation rm = new Mutation(builder.build())[ FD ]
Line_26 $$ List<Runnable> tasks = new ArrayList<Runnable>()-->Line_41 $$ List<Future<?>> futures = new ArrayList<Future<?>>(tasks.size())[ FD ]
Line_29 $$ final AbstractCompactionTask nextTask = lcs.getNextBackgroundTask(Integer.MIN_VALUE)-->Line_35 $$ nextTask.execute(null)[ FD ]
Line_9 $$ LeveledCompactionStrategy lcs = (LeveledCompactionStrategy) store.getCompactionStrategyManager().getStrategies().get(1)-->Line_29 $$ final AbstractCompactionTask nextTask = lcs.getNextBackgroundTask(Integer.MIN_VALUE)[ FD ]
Line_28 $$ while (true) -->Line_29 $$ final AbstractCompactionTask nextTask = lcs.getNextBackgroundTask(Integer.MIN_VALUE)[ CD ]
Line_4 $$ String ksname = KEYSPACE1-->Line_6 $$ Keyspace keyspace = Keyspace.open(ksname)[ FD ]
Line_27 $$ while (true) -->Line_44 $$ tasks.clear()[ CD ]
Line_26 $$ List<Runnable> tasks = new ArrayList<Runnable>()-->Line_32 $$ tasks.add(new Runnable() [ FD ]
Line_14 $$ int columns = 10-->Line_19 $$ for (int c = 0; c < columns; c++) builder.newRow("column" + c).add("val", value)[ FD ]
Line_5 $$ String cfname = "StandardLeveled"-->Line_7 $$ ColumnFamilyStore store = keyspace.getColumnFamilyStore(cfname)[ FD ]
Line_26 $$ List<Runnable> tasks = new ArrayList<Runnable>()-->Line_44 $$ tasks.clear()[ FD ]
Line_49 $$ for (int level = 0; level < levels; level++) -->Line_50 $$ List<SSTableReader> sstables = manifest.getLevel(level)[ CD ]
Line_27 $$ while (true) -->Line_43 $$ FBUtilities.waitOnFutures(futures)[ CD ]
Line_49 $$ for (int level = 0; level < levels; level++) -->Line_57 $$ if (level > 0) [ FD ]
Line_28 $$ while (true) -->Line_30 $$ if (nextTask == null)[ CD ]
Line_32 $$ tasks.add(new Runnable() -->Line_35 $$ nextTask.execute(null)[ CD ]
Line_26 $$ List<Runnable> tasks = new ArrayList<Runnable>()-->Line_39 $$ if (tasks.isEmpty())[ FD ]
Line_17 $$ DecoratedKey key = Util.dk(String.valueOf(r))-->Line_18 $$ UpdateBuilder builder = UpdateBuilder.create(store.metadata, key)[ FD ]
