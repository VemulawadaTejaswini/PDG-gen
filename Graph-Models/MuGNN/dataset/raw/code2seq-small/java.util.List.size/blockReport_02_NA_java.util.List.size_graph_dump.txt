Line_22 $$ List<LocatedBlock> lBlocks = cluster.getNameNodeRpc().getBlockLocations(filePath.toString(), FILE_START, FILE_SIZE).getLocatedBlocks()-->Line_24 $$ int newRemoveIndex = rand.nextInt(lBlocks.size())[ FD ]
Line_15 $$ Path filePath = new Path("/" + METHOD_NAME + ".dat")-->Line_22 $$ List<LocatedBlock> lBlocks = cluster.getNameNodeRpc().getBlockLocations(filePath.toString(), FILE_START, FILE_SIZE).getLocatedBlocks()[ FD ]
Line_41 $$ if (!f.delete()) -->Line_42 $$ LOG.warn("Couldn't delete " + b.getBlockName())[ CD ]
Line_21 $$ List<Integer> removedIndex = new ArrayList<Integer>()-->Line_23 $$ while (removedIndex.size() != 2) [ FD ]
Line_28 $$ for (Integer aRemovedIndex : removedIndex) -->Line_29 $$ blocks2Remove.add(lBlocks.get(aRemovedIndex).getBlock())[ FD ]
Line_52 $$ StorageBlockReport[] reports = getBlockReports(dn0, poolId, false, false)-->Line_53 $$ sendBlockReports(dnR, poolId, reports)[ FD ]
Line_24 $$ int newRemoveIndex = rand.nextInt(lBlocks.size())-->Line_26 $$ removedIndex.add(newRemoveIndex)[ FD ]
Line_35 $$ for (ExtendedBlock b : blocks2Remove) -->Line_37 $$ LOG.debug("Removing the block " + b.getBlockName())[ FD ]
Line_31 $$ if (LOG.isDebugEnabled()) -->Line_32 $$ LOG.debug("Number of blocks allocated " + lBlocks.size())[ CD ]
Line_25 $$ if (!removedIndex.contains(newRemoveIndex))-->Line_26 $$ removedIndex.add(newRemoveIndex)[ CD ]
Line_35 $$ for (ExtendedBlock b : blocks2Remove) -->Line_39 $$ for (File f : findAllFiles(dataDir, new MyFileFilter(b.getBlockName(), true))) [ FD ]
Line_51 $$ DatanodeRegistration dnR = dn0.getDNRegistrationForBP(poolId)-->Line_53 $$ sendBlockReports(dnR, poolId, reports)[ FD ]
Line_24 $$ int newRemoveIndex = rand.nextInt(lBlocks.size())-->Line_25 $$ if (!removedIndex.contains(newRemoveIndex))[ FD ]
Line_21 $$ List<Integer> removedIndex = new ArrayList<Integer>()-->Line_25 $$ if (!removedIndex.contains(newRemoveIndex))[ FD ]
Line_34 $$ final DataNode dn0 = cluster.getDataNodes().get(DN_N0)-->Line_40 $$ DataNodeTestUtils.getFSDataset(dn0).unfinalizeBlock(b)[ FD ]
Line_35 $$ for (ExtendedBlock b : blocks2Remove) -->Line_42 $$ LOG.warn("Couldn't delete " + b.getBlockName())[ FD ]
Line_34 $$ final DataNode dn0 = cluster.getDataNodes().get(DN_N0)-->Line_52 $$ StorageBlockReport[] reports = getBlockReports(dn0, poolId, false, false)[ FD ]
Line_22 $$ List<LocatedBlock> lBlocks = cluster.getNameNodeRpc().getBlockLocations(filePath.toString(), FILE_START, FILE_SIZE).getLocatedBlocks()-->Line_29 $$ blocks2Remove.add(lBlocks.get(aRemovedIndex).getBlock())[ FD ]
Line_34 $$ final DataNode dn0 = cluster.getDataNodes().get(DN_N0)-->Line_51 $$ DatanodeRegistration dnR = dn0.getDNRegistrationForBP(poolId)[ FD ]
Line_39 $$ for (File f : findAllFiles(dataDir, new MyFileFilter(b.getBlockName(), true))) -->Line_44 $$ LOG.debug("Deleted file " + f.toString())[ FD ]
Line_36 $$ if (LOG.isDebugEnabled()) -->Line_37 $$ LOG.debug("Removing the block " + b.getBlockName())[ CD ]
Line_20 $$ List<ExtendedBlock> blocks2Remove = new ArrayList<ExtendedBlock>()-->Line_57 $$ assertEquals("Wrong number of UnderReplicatedBlocks is found", blocks2Remove.size(), cluster.getNamesystem().getUnderReplicatedBlocks())[ FD ]
Line_21 $$ List<Integer> removedIndex = new ArrayList<Integer>()-->Line_26 $$ removedIndex.add(newRemoveIndex)[ FD ]
Line_20 $$ List<ExtendedBlock> blocks2Remove = new ArrayList<ExtendedBlock>()-->Line_56 $$ assertEquals("Wrong number of MissingBlocks is found", blocks2Remove.size(), cluster.getNamesystem().getMissingBlocksCount())[ FD ]
Line_23 $$ while (removedIndex.size() != 2) -->Line_25 $$ if (!removedIndex.contains(newRemoveIndex))[ CD ]
Line_15 $$ Path filePath = new Path("/" + METHOD_NAME + ".dat")-->Line_16 $$ DFSTestUtil.createFile(fs, filePath, FILE_SIZE, REPL_FACTOR, rand.nextLong())[ FD ]
Line_20 $$ List<ExtendedBlock> blocks2Remove = new ArrayList<ExtendedBlock>()-->Line_29 $$ blocks2Remove.add(lBlocks.get(aRemovedIndex).getBlock())[ FD ]
Line_23 $$ while (removedIndex.size() != 2) -->Line_24 $$ int newRemoveIndex = rand.nextInt(lBlocks.size())[ CD ]
Line_39 $$ for (File f : findAllFiles(dataDir, new MyFileFilter(b.getBlockName(), true))) -->Line_41 $$ if (!f.delete()) [ FD ]
Line_35 $$ for (ExtendedBlock b : blocks2Remove) -->Line_40 $$ DataNodeTestUtils.getFSDataset(dn0).unfinalizeBlock(b)[ FD ]
Line_41 $$ if (!f.delete()) -->Line_44 $$ LOG.debug("Deleted file " + f.toString())[ CD ]
Line_22 $$ List<LocatedBlock> lBlocks = cluster.getNameNodeRpc().getBlockLocations(filePath.toString(), FILE_START, FILE_SIZE).getLocatedBlocks()-->Line_32 $$ LOG.debug("Number of blocks allocated " + lBlocks.size())[ FD ]
