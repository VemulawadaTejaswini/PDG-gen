Line_6 $$ List<MediaType> result = MediaType.parseMediaTypes(accept.get(0))-->Line_8 $$ assertEquals("text/html", result.get(0).toString())[ FD ]
Line_2 $$ public void acceptHeader() -->Line_9 $$ assertEquals("application/xml", result.get(1).toString())[ CD ]
Line_5 $$ List<String> accept = Collections.list(request.getHeaders("Accept"))-->Line_7 $$ assertEquals(1, accept.size())[ FD ]
Line_2 $$ public void acceptHeader() -->Line_4 $$ MockHttpServletRequest request = this.builder.buildRequest(this.servletContext)[ CD ]
Line_2 $$ public void acceptHeader() -->Line_3 $$ this.builder.accept(MediaType.TEXT_HTML, MediaType.APPLICATION_XML)[ CD ]
Line_2 $$ public void acceptHeader() -->Line_7 $$ assertEquals(1, accept.size())[ CD ]
Line_6 $$ List<MediaType> result = MediaType.parseMediaTypes(accept.get(0))-->Line_9 $$ assertEquals("application/xml", result.get(1).toString())[ FD ]
Line_2 $$ public void acceptHeader() -->Line_6 $$ List<MediaType> result = MediaType.parseMediaTypes(accept.get(0))[ CD ]
Line_5 $$ List<String> accept = Collections.list(request.getHeaders("Accept"))-->Line_6 $$ List<MediaType> result = MediaType.parseMediaTypes(accept.get(0))[ FD ]
Line_2 $$ public void acceptHeader() -->Line_8 $$ assertEquals("text/html", result.get(0).toString())[ CD ]
Line_4 $$ MockHttpServletRequest request = this.builder.buildRequest(this.servletContext)-->Line_5 $$ List<String> accept = Collections.list(request.getHeaders("Accept"))[ FD ]
Line_2 $$ public void acceptHeader() -->Line_5 $$ List<String> accept = Collections.list(request.getHeaders("Accept"))[ CD ]
