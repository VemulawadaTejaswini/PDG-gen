Line_19 $$ if (areDynamicNonLazyAssociationsChecked()) -->Line_20 $$ assertTrue(Hibernate.isInitialized(((Student) resultList.get(0)).getEnrolments()))[ CD ]
Line_13 $$ List resultList = (List) results-->Line_14 $$ assertEquals(2, resultList.size())[ FD ]
Line_4 $$ HqlExecutor hqlExecutor = new HqlExecutor() -->Line_7 $$ return s.createQuery("from Student s left join fetch s.enrolments e order by s.studentNumber")[ FD ]
Line_10 $$ ResultChecker checker = new ResultChecker() -->Line_17 $$ assertEquals(shermanExpected, resultList.get(1))[ CD ]
Line_10 $$ ResultChecker checker = new ResultChecker() -->Line_18 $$ assertNull(((Student) resultList.get(1)).getPreferredCourse())[ CD ]
Line_10 $$ ResultChecker checker = new ResultChecker() -->Line_14 $$ assertEquals(2, resultList.size())[ CD ]
Line_13 $$ List resultList = (List) results-->Line_15 $$ assertEquals(yogiExpected, resultList.get(0))[ FD ]
Line_10 $$ ResultChecker checker = new ResultChecker() -->Line_19 $$ if (areDynamicNonLazyAssociationsChecked()) [ CD ]
Line_19 $$ if (areDynamicNonLazyAssociationsChecked()) -->Line_22 $$ assertTrue(Hibernate.isInitialized(((Student) resultList.get(1)).getEnrolments()))[ CD ]
Line_13 $$ List resultList = (List) results-->Line_18 $$ assertNull(((Student) resultList.get(1)).getPreferredCourse())[ FD ]
Line_10 $$ ResultChecker checker = new ResultChecker() -->Line_16 $$ assertEquals(yogiExpected.getPreferredCourse().getCourseCode(), ((Student) resultList.get(0)).getPreferredCourse().getCourseCode())[ CD ]
Line_13 $$ List resultList = (List) results-->Line_20 $$ assertTrue(Hibernate.isInitialized(((Student) resultList.get(0)).getEnrolments()))[ FD ]
Line_13 $$ List resultList = (List) results-->Line_21 $$ assertEquals(yogiExpected.getEnrolments(), ((Student) resultList.get(0)).getEnrolments())[ FD ]
Line_10 $$ ResultChecker checker = new ResultChecker() -->Line_13 $$ List resultList = (List) results[ CD ]
Line_13 $$ List resultList = (List) results-->Line_17 $$ assertEquals(shermanExpected, resultList.get(1))[ FD ]
Line_19 $$ if (areDynamicNonLazyAssociationsChecked()) -->Line_23 $$ assertEquals(shermanExpected.getEnrolments(), (((Student) resultList.get(1)).getEnrolments()))[ CD ]
Line_13 $$ List resultList = (List) results-->Line_16 $$ assertEquals(yogiExpected.getPreferredCourse().getCourseCode(), ((Student) resultList.get(0)).getPreferredCourse().getCourseCode())[ FD ]
Line_10 $$ ResultChecker checker = new ResultChecker() -->Line_15 $$ assertEquals(yogiExpected, resultList.get(0))[ CD ]
Line_13 $$ List resultList = (List) results-->Line_22 $$ assertTrue(Hibernate.isInitialized(((Student) resultList.get(1)).getEnrolments()))[ FD ]
Line_4 $$ HqlExecutor hqlExecutor = new HqlExecutor() -->Line_27 $$ runTest(hqlExecutor, null, checker, false)[ FD ]
Line_4 $$ HqlExecutor hqlExecutor = new HqlExecutor() -->Line_7 $$ return s.createQuery("from Student s left join fetch s.enrolments e order by s.studentNumber")[ CD ]
Line_19 $$ if (areDynamicNonLazyAssociationsChecked()) -->Line_21 $$ assertEquals(yogiExpected.getEnrolments(), ((Student) resultList.get(0)).getEnrolments())[ CD ]
Line_13 $$ List resultList = (List) results-->Line_23 $$ assertEquals(shermanExpected.getEnrolments(), (((Student) resultList.get(1)).getEnrolments()))[ FD ]
