Line_12 $$ Animal child2 = new Animal()-->Line_14 $$ s.persist(child2)[ FD ]
Line_8 $$ for (int i = 0; i < parentCount; i++) -->Line_11 $$ s.persist(child1)[ CD ]
Line_8 $$ for (int i = 0; i < parentCount; i++) -->Line_15 $$ Animal parent = new Animal()[ CD ]
Line_25 $$ t = s.beginTransaction()-->Line_35 $$ t.commit()[ FD ]
Line_15 $$ Animal parent = new Animal()-->Line_16 $$ parent.setDescription("collection fetch distinction (parent" + i + ")")[ FD ]
Line_9 $$ Animal child1 = new Animal()-->Line_10 $$ child1.setDescription("collection fetch distinction (child1 - parent" + i + ")")[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_41 $$ t.commit()[ FD ]
Line_33 $$ Animal firstReturn = (Animal) results.get(0)-->Line_34 $$ assertEquals("firstResult not applied correctly", "123-5", firstReturn.getSerialNumber())[ FD ]
Line_15 $$ Animal parent = new Animal()-->Line_17 $$ parent.setSerialNumber("123-" + i)[ FD ]
Line_7 $$ int parentCount = 30-->Line_8 $$ for (int i = 0; i < parentCount; i++) [ FD ]
Line_37 $$ s = openSession()-->Line_39 $$ s.createQuery("delete Animal where mother is not null").executeUpdate()[ FD ]
Line_37 $$ s = openSession()-->Line_38 $$ t = s.beginTransaction()[ FD ]
Line_8 $$ for (int i = 0; i < parentCount; i++) -->Line_10 $$ child1.setDescription("collection fetch distinction (child1 - parent" + i + ")")[ CD ]
Line_8 $$ for (int i = 0; i < parentCount; i++) -->Line_16 $$ parent.setDescription("collection fetch distinction (parent" + i + ")")[ CD ]
Line_24 $$ s = openSession()-->Line_42 $$ s.close()[ FD ]
Line_9 $$ Animal child1 = new Animal()-->Line_11 $$ s.persist(child1)[ FD ]
Line_15 $$ Animal parent = new Animal()-->Line_19 $$ parent.addOffspring(child2)[ FD ]
Line_15 $$ Animal parent = new Animal()-->Line_18 $$ parent.addOffspring(child1)[ FD ]
Line_28 $$ results = s.createQuery("select distinct p from Animal p inner join fetch p.offspring").list()-->Line_29 $$ assertEquals("duplicate list() returns", 30, results.size())[ FD ]
Line_12 $$ Animal child2 = new Animal()-->Line_19 $$ parent.addOffspring(child2)[ FD ]
Line_8 $$ for (int i = 0; i < parentCount; i++) -->Line_14 $$ s.persist(child2)[ CD ]
Line_38 $$ t = s.beginTransaction()-->Line_41 $$ t.commit()[ FD ]
Line_24 $$ s = openSession()-->Line_25 $$ t = s.beginTransaction()[ FD ]
Line_15 $$ Animal parent = new Animal()-->Line_20 $$ s.persist(parent)[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_25 $$ t = s.beginTransaction()[ FD ]
Line_8 $$ for (int i = 0; i < parentCount; i++) -->Line_19 $$ parent.addOffspring(child2)[ CD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_22 $$ t.commit()[ FD ]
Line_24 $$ s = openSession()-->Line_28 $$ results = s.createQuery("select distinct p from Animal p inner join fetch p.offspring").list()[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_38 $$ t = s.beginTransaction()[ FD ]
Line_37 $$ s = openSession()-->Line_42 $$ s.close()[ FD ]
Line_24 $$ s = openSession()-->Line_40 $$ s.createQuery("delete Animal").executeUpdate()[ FD ]
Line_8 $$ for (int i = 0; i < parentCount; i++) -->Line_9 $$ Animal child1 = new Animal()[ CD ]
Line_8 $$ for (int i = 0; i < parentCount; i++) -->Line_12 $$ Animal child2 = new Animal()[ CD ]
Line_37 $$ s = openSession()-->Line_40 $$ s.createQuery("delete Animal").executeUpdate()[ FD ]
Line_9 $$ Animal child1 = new Animal()-->Line_18 $$ parent.addOffspring(child1)[ FD ]
Line_28 $$ results = s.createQuery("select distinct p from Animal p inner join fetch p.offspring").list()-->Line_33 $$ Animal firstReturn = (Animal) results.get(0)[ FD ]
Line_24 $$ s = openSession()-->Line_36 $$ s.close()[ FD ]
Line_25 $$ t = s.beginTransaction()-->Line_41 $$ t.commit()[ FD ]
Line_28 $$ results = s.createQuery("select distinct p from Animal p inner join fetch p.offspring").list()-->Line_32 $$ assertEquals("duplicate returns", 20, results.size())[ FD ]
Line_24 $$ s = openSession()-->Line_37 $$ s = openSession()[ FD ]
Line_24 $$ s = openSession()-->Line_39 $$ s.createQuery("delete Animal where mother is not null").executeUpdate()[ FD ]
Line_8 $$ for (int i = 0; i < parentCount; i++) -->Line_20 $$ s.persist(parent)[ CD ]
Line_8 $$ for (int i = 0; i < parentCount; i++) -->Line_13 $$ child2.setDescription("collection fetch distinction (child2 - parent " + i + ")")[ CD ]
Line_8 $$ for (int i = 0; i < parentCount; i++) -->Line_17 $$ parent.setSerialNumber("123-" + i)[ CD ]
Line_25 $$ t = s.beginTransaction()-->Line_38 $$ t = s.beginTransaction()[ FD ]
Line_12 $$ Animal child2 = new Animal()-->Line_13 $$ child2.setDescription("collection fetch distinction (child2 - parent " + i + ")")[ FD ]
Line_8 $$ for (int i = 0; i < parentCount; i++) -->Line_18 $$ parent.addOffspring(child1)[ CD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_35 $$ t.commit()[ FD ]
Line_24 $$ s = openSession()-->Line_38 $$ t = s.beginTransaction()[ FD ]
