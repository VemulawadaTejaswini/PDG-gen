Line_2 $$ public void addRowFilterTo(RowFilter filter, SecondaryIndexManager indexManager, QueryOptions options) throws InvalidRequestException -->Line_5 $$ List<ByteBuffer> eks = bindAndGet(entryKeys, options)[ CD ]
Line_2 $$ public void addRowFilterTo(RowFilter filter, SecondaryIndexManager indexManager, QueryOptions options) throws InvalidRequestException -->Line_5 $$ List<ByteBuffer> eks = bindAndGet(entryKeys, options)[ FD ]
Line_2 $$ public void addRowFilterTo(RowFilter filter, SecondaryIndexManager indexManager, QueryOptions options) throws InvalidRequestException -->Line_6 $$ List<ByteBuffer> evs = bindAndGet(entryValues, options)[ FD ]
Line_5 $$ List<ByteBuffer> eks = bindAndGet(entryKeys, options)-->Line_8 $$ for (int i = 0; i < eks.size(); i++) filter.addMapEquality(columnDef, eks.get(i), Operator.EQ, evs.get(i))[ FD ]
Line_6 $$ List<ByteBuffer> evs = bindAndGet(entryValues, options)-->Line_8 $$ filter.addMapEquality(columnDef, eks.get(i), Operator.EQ, evs.get(i))[ FD ]
Line_2 $$ public void addRowFilterTo(RowFilter filter, SecondaryIndexManager indexManager, QueryOptions options) throws InvalidRequestException -->Line_4 $$ for (ByteBuffer key : bindAndGet(keys, options)) filter.add(columnDef, Operator.CONTAINS_KEY, key)[ FD ]
Line_2 $$ public void addRowFilterTo(RowFilter filter, SecondaryIndexManager indexManager, QueryOptions options) throws InvalidRequestException -->Line_8 $$ for (int i = 0; i < eks.size(); i++) filter.addMapEquality(columnDef, eks.get(i), Operator.EQ, evs.get(i))[ CD ]
Line_5 $$ List<ByteBuffer> eks = bindAndGet(entryKeys, options)-->Line_8 $$ filter.addMapEquality(columnDef, eks.get(i), Operator.EQ, evs.get(i))[ FD ]
Line_6 $$ List<ByteBuffer> evs = bindAndGet(entryValues, options)-->Line_7 $$ assert eks.size() == evs.size()[ FD ]
Line_2 $$ public void addRowFilterTo(RowFilter filter, SecondaryIndexManager indexManager, QueryOptions options) throws InvalidRequestException -->Line_6 $$ List<ByteBuffer> evs = bindAndGet(entryValues, options)[ CD ]
Line_2 $$ public void addRowFilterTo(RowFilter filter, SecondaryIndexManager indexManager, QueryOptions options) throws InvalidRequestException -->Line_8 $$ filter.addMapEquality(columnDef, eks.get(i), Operator.EQ, evs.get(i))[ FD ]
Line_2 $$ public void addRowFilterTo(RowFilter filter, SecondaryIndexManager indexManager, QueryOptions options) throws InvalidRequestException -->Line_4 $$ filter.add(columnDef, Operator.CONTAINS_KEY, key)[ FD ]
Line_2 $$ public void addRowFilterTo(RowFilter filter, SecondaryIndexManager indexManager, QueryOptions options) throws InvalidRequestException -->Line_3 $$ for (ByteBuffer value : bindAndGet(values, options)) filter.add(columnDef, Operator.CONTAINS, value)[ FD ]
Line_2 $$ public void addRowFilterTo(RowFilter filter, SecondaryIndexManager indexManager, QueryOptions options) throws InvalidRequestException -->Line_3 $$ filter.add(columnDef, Operator.CONTAINS, value)[ FD ]
Line_5 $$ List<ByteBuffer> eks = bindAndGet(entryKeys, options)-->Line_7 $$ assert eks.size() == evs.size()[ FD ]
