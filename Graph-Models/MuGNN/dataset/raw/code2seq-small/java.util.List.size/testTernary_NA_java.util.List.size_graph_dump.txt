Line_10 $$ Site melb = new Site("Melbourne")-->Line_20 $$ tim.getManagerBySite().put(melb, tom)[ FD ]
Line_23 $$ s = openSession()-->Line_72 $$ s.close()[ FD ]
Line_41 $$ l = s.createQuery("from Employee e join e.managerBySite m where m.name='Tom'").list()-->Line_42 $$ assertEquals(l.size(), 2)[ FD ]
Line_4 $$ Session s = openSession()-->Line_66 $$ s.delete(emp)[ FD ]
Line_49 $$ Set set = new HashSet(l)-->Line_51 $$ Iterator iter = set.iterator()[ FD ]
Line_28 $$ bob = (Employee) s.get(Employee.class, "Bob")-->Line_30 $$ assertTrue(tom.getUnderlings().contains(bob))[ FD ]
Line_24 $$ t = s.beginTransaction()-->Line_43 $$ t.commit()[ FD ]
Line_53 $$ while (iter.hasNext()) -->Line_54 $$ Map map = ((Employee) iter.next()).getManagerBySite()[ CD ]
Line_4 $$ Session s = openSession()-->Line_59 $$ l = s.createQuery("from Employee e left join e.managerBySite m left join m.managerBySite m2").list()[ FD ]
Line_6 $$ Employee bob = new Employee("Bob")-->Line_28 $$ bob = (Employee) s.get(Employee.class, "Bob")[ FD ]
Line_37 $$ s = openSession()-->Line_68 $$ for (Object entity : s.createQuery("from Site").list()) [ FD ]
Line_54 $$ Map map = ((Employee) iter.next()).getManagerBySite()-->Line_55 $$ assertTrue(Hibernate.isInitialized(map))[ FD ]
Line_23 $$ s = openSession()-->Line_46 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Employee bob = new Employee("Bob")-->Line_32 $$ assertSame(bob.getManagerBySite().get(melb), tom)[ FD ]
Line_41 $$ l = s.createQuery("from Employee e join e.managerBySite m where m.name='Tom'").list()-->Line_62 $$ Iterator itr = l.iterator()[ FD ]
Line_63 $$ while (itr.hasNext()) -->Line_65 $$ emp.setManagerBySite(new HashMap())[ CD ]
Line_23 $$ s = openSession()-->Line_44 $$ s.close()[ FD ]
Line_7 $$ Employee tom = new Employee("Tom")-->Line_20 $$ tim.getManagerBySite().put(melb, tom)[ FD ]
Line_23 $$ s = openSession()-->Line_24 $$ t = s.beginTransaction()[ FD ]
Line_51 $$ Iterator iter = set.iterator()-->Line_53 $$ while (iter.hasNext()) [ FD ]
Line_7 $$ Employee tom = new Employee("Tom")-->Line_18 $$ bob.getManagerBySite().put(melb, tom)[ FD ]
Line_7 $$ Employee tom = new Employee("Tom")-->Line_27 $$ assertEquals(tom.getUnderlings().size(), 2)[ FD ]
Line_25 $$ tom = (Employee) s.get(Employee.class, "Tom")-->Line_30 $$ assertTrue(tom.getUnderlings().contains(bob))[ FD ]
Line_6 $$ Employee bob = new Employee("Bob")-->Line_30 $$ assertTrue(tom.getUnderlings().contains(bob))[ FD ]
Line_37 $$ s = openSession()-->Line_45 $$ s = openSession()[ FD ]
Line_28 $$ bob = (Employee) s.get(Employee.class, "Bob")-->Line_32 $$ assertSame(bob.getManagerBySite().get(melb), tom)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_38 $$ t = s.beginTransaction()[ FD ]
Line_39 $$ List l = s.createQuery("from Employee e join e.managerBySite m where m.name='Bob'").list()-->Line_47 $$ l = s.createQuery("from Employee e left join fetch e.managerBySite").list()[ FD ]
Line_46 $$ t = s.beginTransaction()-->Line_71 $$ t.commit()[ FD ]
Line_11 $$ Site geel = new Site("Geelong")-->Line_19 $$ bob.getManagerBySite().put(geel, jim)[ FD ]
Line_10 $$ Site melb = new Site("Melbourne")-->Line_33 $$ assertTrue(melb.getEmployees().contains(bob))[ FD ]
Line_4 $$ Session s = openSession()-->Line_22 $$ s.close()[ FD ]
Line_53 $$ while (iter.hasNext()) -->Line_56 $$ total += map.size()[ CD ]
Line_47 $$ l = s.createQuery("from Employee e left join fetch e.managerBySite").list()-->Line_48 $$ assertEquals(l.size(), 5)[ FD ]
Line_24 $$ t = s.beginTransaction()-->Line_71 $$ t.commit()[ FD ]
Line_6 $$ Employee bob = new Employee("Bob")-->Line_12 $$ s.persist(bob)[ FD ]
Line_23 $$ s = openSession()-->Line_37 $$ s = openSession()[ FD ]
Line_49 $$ Set set = new HashSet(l)-->Line_50 $$ assertEquals(set.size(), 4)[ FD ]
Line_7 $$ Employee tom = new Employee("Tom")-->Line_34 $$ assertTrue(melb.getManagers().contains(tom))[ FD ]
Line_25 $$ tom = (Employee) s.get(Employee.class, "Tom")-->Line_26 $$ assertFalse(Hibernate.isInitialized(tom.getUnderlings()))[ FD ]
Line_37 $$ s = openSession()-->Line_38 $$ t = s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_13 $$ s.persist(tom)[ FD ]
Line_39 $$ List l = s.createQuery("from Employee e join e.managerBySite m where m.name='Bob'").list()-->Line_48 $$ assertEquals(l.size(), 5)[ FD ]
Line_52 $$ int total = 0-->Line_56 $$ total += map.size()[ FD ]
Line_45 $$ s = openSession()-->Line_66 $$ s.delete(emp)[ FD ]
Line_59 $$ l = s.createQuery("from Employee e left join e.managerBySite m left join m.managerBySite m2").list()-->Line_62 $$ Iterator itr = l.iterator()[ FD ]
Line_7 $$ Employee tom = new Employee("Tom")-->Line_13 $$ s.persist(tom)[ FD ]
Line_25 $$ tom = (Employee) s.get(Employee.class, "Tom")-->Line_32 $$ assertSame(bob.getManagerBySite().get(melb), tom)[ FD ]
Line_10 $$ Site melb = new Site("Melbourne")-->Line_16 $$ s.persist(melb)[ FD ]
Line_31 $$ melb = (Site) s.get(Site.class, "Melbourne")-->Line_34 $$ assertTrue(melb.getManagers().contains(tom))[ FD ]
Line_47 $$ l = s.createQuery("from Employee e left join fetch e.managerBySite").list()-->Line_59 $$ l = s.createQuery("from Employee e left join e.managerBySite m left join m.managerBySite m2").list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_15 $$ s.persist(tim)[ FD ]
Line_10 $$ Site melb = new Site("Melbourne")-->Line_31 $$ melb = (Site) s.get(Site.class, "Melbourne")[ FD ]
Line_23 $$ s = openSession()-->Line_41 $$ l = s.createQuery("from Employee e join e.managerBySite m where m.name='Tom'").list()[ FD ]
Line_37 $$ s = openSession()-->Line_44 $$ s.close()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_24 $$ t = s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_14 $$ s.persist(jim)[ FD ]
Line_45 $$ s = openSession()-->Line_59 $$ l = s.createQuery("from Employee e left join e.managerBySite m left join m.managerBySite m2").list()[ FD ]
Line_45 $$ s = openSession()-->Line_68 $$ for (Object entity : s.createQuery("from Site").list()) [ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_35 $$ t.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_28 $$ bob = (Employee) s.get(Employee.class, "Bob")[ FD ]
Line_23 $$ s = openSession()-->Line_45 $$ s = openSession()[ FD ]
Line_37 $$ s = openSession()-->Line_72 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_24 $$ t = s.beginTransaction()[ FD ]
Line_24 $$ t = s.beginTransaction()-->Line_38 $$ t = s.beginTransaction()[ FD ]
Line_64 $$ Employee emp = (Employee) itr.next()-->Line_66 $$ s.delete(emp)[ FD ]
Line_68 $$ for (Object entity : s.createQuery("from Site").list()) -->Line_69 $$ s.delete(entity)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_71 $$ t.commit()[ FD ]
Line_45 $$ s = openSession()-->Line_46 $$ t = s.beginTransaction()[ FD ]
Line_47 $$ l = s.createQuery("from Employee e left join fetch e.managerBySite").list()-->Line_62 $$ Iterator itr = l.iterator()[ FD ]
Line_62 $$ Iterator itr = l.iterator()-->Line_64 $$ Employee emp = (Employee) itr.next()[ FD ]
Line_6 $$ Employee bob = new Employee("Bob")-->Line_29 $$ assertFalse(Hibernate.isInitialized(bob.getManagerBySite()))[ FD ]
Line_6 $$ Employee bob = new Employee("Bob")-->Line_18 $$ bob.getManagerBySite().put(melb, tom)[ FD ]
Line_9 $$ Employee tim = new Employee("Tim")-->Line_20 $$ tim.getManagerBySite().put(melb, tom)[ FD ]
Line_37 $$ s = openSession()-->Line_69 $$ s.delete(entity)[ FD ]
Line_8 $$ Employee jim = new Employee("Jim")-->Line_19 $$ bob.getManagerBySite().put(geel, jim)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_46 $$ t = s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_68 $$ for (Object entity : s.createQuery("from Site").list()) [ FD ]
Line_23 $$ s = openSession()-->Line_25 $$ tom = (Employee) s.get(Employee.class, "Tom")[ FD ]
Line_7 $$ Employee tom = new Employee("Tom")-->Line_32 $$ assertSame(bob.getManagerBySite().get(melb), tom)[ FD ]
Line_4 $$ Session s = openSession()-->Line_47 $$ l = s.createQuery("from Employee e left join fetch e.managerBySite").list()[ FD ]
Line_10 $$ Site melb = new Site("Melbourne")-->Line_18 $$ bob.getManagerBySite().put(melb, tom)[ FD ]
Line_4 $$ Session s = openSession()-->Line_39 $$ List l = s.createQuery("from Employee e join e.managerBySite m where m.name='Bob'").list()[ FD ]
Line_6 $$ Employee bob = new Employee("Bob")-->Line_33 $$ assertTrue(melb.getEmployees().contains(bob))[ FD ]
Line_63 $$ while (itr.hasNext()) -->Line_66 $$ s.delete(emp)[ CD ]
Line_37 $$ s = openSession()-->Line_59 $$ l = s.createQuery("from Employee e left join e.managerBySite m left join m.managerBySite m2").list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_25 $$ tom = (Employee) s.get(Employee.class, "Tom")[ FD ]
Line_38 $$ t = s.beginTransaction()-->Line_46 $$ t = s.beginTransaction()[ FD ]
Line_23 $$ s = openSession()-->Line_66 $$ s.delete(emp)[ FD ]
Line_37 $$ s = openSession()-->Line_46 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Employee bob = new Employee("Bob")-->Line_19 $$ bob.getManagerBySite().put(geel, jim)[ FD ]
Line_24 $$ t = s.beginTransaction()-->Line_46 $$ t = s.beginTransaction()[ FD ]
Line_37 $$ s = openSession()-->Line_41 $$ l = s.createQuery("from Employee e join e.managerBySite m where m.name='Tom'").list()[ FD ]
Line_62 $$ Iterator itr = l.iterator()-->Line_63 $$ while (itr.hasNext()) [ FD ]
Line_41 $$ l = s.createQuery("from Employee e join e.managerBySite m where m.name='Tom'").list()-->Line_48 $$ assertEquals(l.size(), 5)[ FD ]
Line_23 $$ s = openSession()-->Line_31 $$ melb = (Site) s.get(Site.class, "Melbourne")[ FD ]
Line_23 $$ s = openSession()-->Line_39 $$ List l = s.createQuery("from Employee e join e.managerBySite m where m.name='Bob'").list()[ FD ]
Line_37 $$ s = openSession()-->Line_47 $$ l = s.createQuery("from Employee e left join fetch e.managerBySite").list()[ FD ]
Line_45 $$ s = openSession()-->Line_47 $$ l = s.createQuery("from Employee e left join fetch e.managerBySite").list()[ FD ]
Line_63 $$ while (itr.hasNext()) -->Line_64 $$ Employee emp = (Employee) itr.next()[ CD ]
Line_53 $$ while (iter.hasNext()) -->Line_55 $$ assertTrue(Hibernate.isInitialized(map))[ CD ]
Line_45 $$ s = openSession()-->Line_69 $$ s.delete(entity)[ FD ]
Line_25 $$ tom = (Employee) s.get(Employee.class, "Tom")-->Line_34 $$ assertTrue(melb.getManagers().contains(tom))[ FD ]
Line_4 $$ Session s = openSession()-->Line_44 $$ s.close()[ FD ]
Line_11 $$ Site geel = new Site("Geelong")-->Line_17 $$ s.persist(geel)[ FD ]
Line_4 $$ Session s = openSession()-->Line_37 $$ s = openSession()[ FD ]
Line_23 $$ s = openSession()-->Line_36 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_46 $$ t = s.beginTransaction()[ FD ]
Line_38 $$ t = s.beginTransaction()-->Line_43 $$ t.commit()[ FD ]
Line_7 $$ Employee tom = new Employee("Tom")-->Line_30 $$ assertTrue(tom.getUnderlings().contains(bob))[ FD ]
Line_31 $$ melb = (Site) s.get(Site.class, "Melbourne")-->Line_33 $$ assertTrue(melb.getEmployees().contains(bob))[ FD ]
Line_38 $$ t = s.beginTransaction()-->Line_71 $$ t.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_45 $$ s = openSession()[ FD ]
Line_23 $$ s = openSession()-->Line_28 $$ bob = (Employee) s.get(Employee.class, "Bob")[ FD ]
Line_23 $$ s = openSession()-->Line_59 $$ l = s.createQuery("from Employee e left join e.managerBySite m left join m.managerBySite m2").list()[ FD ]
Line_10 $$ Site melb = new Site("Melbourne")-->Line_32 $$ assertSame(bob.getManagerBySite().get(melb), tom)[ FD ]
Line_23 $$ s = openSession()-->Line_69 $$ s.delete(entity)[ FD ]
Line_4 $$ Session s = openSession()-->Line_41 $$ l = s.createQuery("from Employee e join e.managerBySite m where m.name='Tom'").list()[ FD ]
Line_45 $$ s = openSession()-->Line_72 $$ s.close()[ FD ]
Line_54 $$ Map map = ((Employee) iter.next()).getManagerBySite()-->Line_56 $$ total += map.size()[ FD ]
Line_28 $$ bob = (Employee) s.get(Employee.class, "Bob")-->Line_33 $$ assertTrue(melb.getEmployees().contains(bob))[ FD ]
Line_24 $$ t = s.beginTransaction()-->Line_35 $$ t.commit()[ FD ]
Line_37 $$ s = openSession()-->Line_66 $$ s.delete(emp)[ FD ]
Line_39 $$ List l = s.createQuery("from Employee e join e.managerBySite m where m.name='Bob'").list()-->Line_59 $$ l = s.createQuery("from Employee e left join e.managerBySite m left join m.managerBySite m2").list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ Transaction t = s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_72 $$ s.close()[ FD ]
Line_41 $$ l = s.createQuery("from Employee e join e.managerBySite m where m.name='Tom'").list()-->Line_47 $$ l = s.createQuery("from Employee e left join fetch e.managerBySite").list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_23 $$ s = openSession()[ FD ]
Line_7 $$ Employee tom = new Employee("Tom")-->Line_26 $$ assertFalse(Hibernate.isInitialized(tom.getUnderlings()))[ FD ]
Line_39 $$ List l = s.createQuery("from Employee e join e.managerBySite m where m.name='Bob'").list()-->Line_42 $$ assertEquals(l.size(), 2)[ FD ]
Line_64 $$ Employee emp = (Employee) itr.next()-->Line_65 $$ emp.setManagerBySite(new HashMap())[ FD ]
Line_23 $$ s = openSession()-->Line_47 $$ l = s.createQuery("from Employee e left join fetch e.managerBySite").list()[ FD ]
Line_39 $$ List l = s.createQuery("from Employee e join e.managerBySite m where m.name='Bob'").list()-->Line_41 $$ l = s.createQuery("from Employee e join e.managerBySite m where m.name='Tom'").list()[ FD ]
Line_37 $$ s = openSession()-->Line_39 $$ List l = s.createQuery("from Employee e join e.managerBySite m where m.name='Bob'").list()[ FD ]
Line_23 $$ s = openSession()-->Line_38 $$ t = s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_12 $$ s.persist(bob)[ FD ]
Line_4 $$ Session s = openSession()-->Line_16 $$ s.persist(melb)[ FD ]
Line_9 $$ Employee tim = new Employee("Tim")-->Line_15 $$ s.persist(tim)[ FD ]
Line_39 $$ List l = s.createQuery("from Employee e join e.managerBySite m where m.name='Bob'").list()-->Line_40 $$ assertEquals(l.size(), 0)[ FD ]
Line_4 $$ Session s = openSession()-->Line_17 $$ s.persist(geel)[ FD ]
Line_7 $$ Employee tom = new Employee("Tom")-->Line_25 $$ tom = (Employee) s.get(Employee.class, "Tom")[ FD ]
Line_10 $$ Site melb = new Site("Melbourne")-->Line_34 $$ assertTrue(melb.getManagers().contains(tom))[ FD ]
Line_41 $$ l = s.createQuery("from Employee e join e.managerBySite m where m.name='Tom'").list()-->Line_59 $$ l = s.createQuery("from Employee e left join e.managerBySite m left join m.managerBySite m2").list()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_43 $$ t.commit()[ FD ]
Line_39 $$ List l = s.createQuery("from Employee e join e.managerBySite m where m.name='Bob'").list()-->Line_62 $$ Iterator itr = l.iterator()[ FD ]
Line_28 $$ bob = (Employee) s.get(Employee.class, "Bob")-->Line_29 $$ assertFalse(Hibernate.isInitialized(bob.getManagerBySite()))[ FD ]
Line_23 $$ s = openSession()-->Line_68 $$ for (Object entity : s.createQuery("from Site").list()) [ FD ]
Line_25 $$ tom = (Employee) s.get(Employee.class, "Tom")-->Line_27 $$ assertEquals(tom.getUnderlings().size(), 2)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_21 $$ t.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_36 $$ s.close()[ FD ]
Line_31 $$ melb = (Site) s.get(Site.class, "Melbourne")-->Line_32 $$ assertSame(bob.getManagerBySite().get(melb), tom)[ FD ]
Line_8 $$ Employee jim = new Employee("Jim")-->Line_14 $$ s.persist(jim)[ FD ]
Line_4 $$ Session s = openSession()-->Line_31 $$ melb = (Site) s.get(Site.class, "Melbourne")[ FD ]
Line_51 $$ Iterator iter = set.iterator()-->Line_54 $$ Map map = ((Employee) iter.next()).getManagerBySite()[ FD ]
Line_4 $$ Session s = openSession()-->Line_38 $$ t = s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_69 $$ s.delete(entity)[ FD ]
