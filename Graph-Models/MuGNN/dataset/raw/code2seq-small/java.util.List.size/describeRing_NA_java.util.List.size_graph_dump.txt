Line_2 $$ private List<TokenRange> describeRing(String keyspace, boolean includeOnlyLocalDC) throws InvalidRequestException -->Line_3 $$ if (!Schema.instance.getKeyspaces().contains(keyspace))[ CD ]
Line_16 $$ for (InetAddress endpoint : addresses) -->Line_20 $$ details.rack = DatabaseDescriptor.getEndpointSnitch().getRack(endpoint)[ FD ]
Line_12 $$ List<InetAddress> addresses = entry.getValue()-->Line_14 $$ List<String> rpc_endpoints = new ArrayList(addresses.size())[ FD ]
Line_2 $$ private List<TokenRange> describeRing(String keyspace, boolean includeOnlyLocalDC) throws InvalidRequestException -->Line_5 $$ if (keyspace == null || Keyspace.open(keyspace).getReplicationStrategy() instanceof LocalStrategy)[ CD ]
Line_2 $$ private List<TokenRange> describeRing(String keyspace, boolean includeOnlyLocalDC) throws InvalidRequestException -->Line_8 $$ Token.TokenFactory tf = getTokenFactory()[ CD ]
Line_14 $$ List<String> rpc_endpoints = new ArrayList(addresses.size())-->Line_25 $$ TokenRange tr = new TokenRange(tf.toString(range.left.getToken()), tf.toString(range.right.getToken()), endpoints).setEndpoint_details(epDetails).setRpc_endpoints(rpc_endpoints)[ FD ]
Line_14 $$ List<String> rpc_endpoints = new ArrayList(addresses.size())-->Line_22 $$ rpc_endpoints.add(getRpcaddress(endpoint))[ FD ]
Line_16 $$ for (InetAddress endpoint : addresses) -->Line_18 $$ details.host = endpoint.getHostAddress()[ FD ]
Line_2 $$ private List<TokenRange> describeRing(String keyspace, boolean includeOnlyLocalDC) throws InvalidRequestException -->Line_9 $$ Map<Range<Token>, List<InetAddress>> rangeToAddressMap = includeOnlyLocalDC ? getRangeToAddressMapInLocalDC(keyspace) : getRangeToAddressMap(keyspace)[ CD ]
Line_16 $$ for (InetAddress endpoint : addresses) -->Line_19 $$ details.datacenter = DatabaseDescriptor.getEndpointSnitch().getDatacenter(endpoint)[ FD ]
Line_17 $$ EndpointDetails details = new EndpointDetails()-->Line_23 $$ epDetails.add(details)[ FD ]
Line_10 $$ for (Map.Entry<Range<Token>, List<InetAddress>> entry : rangeToAddressMap.entrySet()) -->Line_12 $$ List<InetAddress> addresses = entry.getValue()[ FD ]
Line_9 $$ Map<Range<Token>, List<InetAddress>> rangeToAddressMap = includeOnlyLocalDC ? getRangeToAddressMapInLocalDC(keyspace) : getRangeToAddressMap(keyspace)-->Line_10 $$ for (Map.Entry<Range<Token>, List<InetAddress>> entry : rangeToAddressMap.entrySet()) [ FD ]
Line_15 $$ List<EndpointDetails> epDetails = new ArrayList(addresses.size())-->Line_23 $$ epDetails.add(details)[ FD ]
Line_2 $$ private List<TokenRange> describeRing(String keyspace, boolean includeOnlyLocalDC) throws InvalidRequestException -->Line_7 $$ List<TokenRange> ranges = new ArrayList()[ CD ]
Line_25 $$ TokenRange tr = new TokenRange(tf.toString(range.left.getToken()), tf.toString(range.right.getToken()), endpoints).setEndpoint_details(epDetails).setRpc_endpoints(rpc_endpoints)-->Line_26 $$ ranges.add(tr)[ FD ]
Line_7 $$ List<TokenRange> ranges = new ArrayList()-->Line_26 $$ ranges.add(tr)[ FD ]
Line_16 $$ for (InetAddress endpoint : addresses) -->Line_22 $$ rpc_endpoints.add(getRpcaddress(endpoint))[ FD ]
Line_2 $$ private List<TokenRange> describeRing(String keyspace, boolean includeOnlyLocalDC) throws InvalidRequestException -->Line_5 $$ if (keyspace == null || Keyspace.open(keyspace).getReplicationStrategy() instanceof LocalStrategy)[ FD ]
Line_8 $$ Token.TokenFactory tf = getTokenFactory()-->Line_25 $$ TokenRange tr = new TokenRange(tf.toString(range.left.getToken()), tf.toString(range.right.getToken()), endpoints).setEndpoint_details(epDetails).setRpc_endpoints(rpc_endpoints)[ FD ]
Line_15 $$ List<EndpointDetails> epDetails = new ArrayList(addresses.size())-->Line_25 $$ TokenRange tr = new TokenRange(tf.toString(range.left.getToken()), tf.toString(range.right.getToken()), endpoints).setEndpoint_details(epDetails).setRpc_endpoints(rpc_endpoints)[ FD ]
Line_12 $$ List<InetAddress> addresses = entry.getValue()-->Line_15 $$ List<EndpointDetails> epDetails = new ArrayList(addresses.size())[ FD ]
Line_2 $$ private List<TokenRange> describeRing(String keyspace, boolean includeOnlyLocalDC) throws InvalidRequestException -->Line_28 $$ return ranges[ CD ]
Line_2 $$ private List<TokenRange> describeRing(String keyspace, boolean includeOnlyLocalDC) throws InvalidRequestException -->Line_9 $$ Map<Range<Token>, List<InetAddress>> rangeToAddressMap = includeOnlyLocalDC ? getRangeToAddressMapInLocalDC(keyspace) : getRangeToAddressMap(keyspace)[ FD ]
Line_12 $$ List<InetAddress> addresses = entry.getValue()-->Line_13 $$ List<String> endpoints = new ArrayList(addresses.size())[ FD ]
Line_2 $$ private List<TokenRange> describeRing(String keyspace, boolean includeOnlyLocalDC) throws InvalidRequestException -->Line_3 $$ if (!Schema.instance.getKeyspaces().contains(keyspace))[ FD ]
Line_10 $$ for (Map.Entry<Range<Token>, List<InetAddress>> entry : rangeToAddressMap.entrySet()) -->Line_11 $$ Range<Token> range = entry.getKey()[ FD ]
Line_13 $$ List<String> endpoints = new ArrayList(addresses.size())-->Line_21 $$ endpoints.add(details.host)[ FD ]
