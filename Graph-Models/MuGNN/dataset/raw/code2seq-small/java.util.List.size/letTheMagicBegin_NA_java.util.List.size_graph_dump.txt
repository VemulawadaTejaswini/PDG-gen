Line_10 $$ if (manager instanceof ExternalSystemAutoImportAware) -->Line_11 $$ aware = combine(defaultImportAware, (ExternalSystemAutoImportAware) manager)[ CD ]
Line_6 $$ for (ExternalSystemManager<?, ?, ?, ?, ?> manager : managers) -->Line_10 $$ if (manager instanceof ExternalSystemAutoImportAware) [ FD ]
Line_9 $$ final ExternalSystemAutoImportAware aware-->Line_11 $$ aware = combine(defaultImportAware, (ExternalSystemAutoImportAware) manager)[ FD ]
Line_6 $$ for (ExternalSystemManager<?, ?, ?, ?, ?> manager : managers) -->Line_15 $$ autoImportAware.add(new MyEntry(manager.getSystemId(), systemSettings, aware))[ FD ]
Line_19 $$ final MessageBus messageBus = project.getMessageBus()-->Line_20 $$ messageBus.connect(project).subscribe(VirtualFileManager.VFS_CHANGES, autoImporter)[ FD ]
Line_4 $$ List<MyEntry> autoImportAware = ContainerUtilRt.newArrayList()-->Line_15 $$ autoImportAware.add(new MyEntry(manager.getSystemId(), systemSettings, aware))[ FD ]
Line_8 $$ ExternalSystemAutoImportAware defaultImportAware = createDefault(systemSettings)-->Line_11 $$ aware = combine(defaultImportAware, (ExternalSystemAutoImportAware) manager)[ FD ]
Line_18 $$ ExternalSystemAutoImporter autoImporter = new ExternalSystemAutoImporter(project, ServiceManager.getService(ProjectDataManager.class), entries)-->Line_20 $$ messageBus.connect(project).subscribe(VirtualFileManager.VFS_CHANGES, autoImporter)[ FD ]
Line_8 $$ ExternalSystemAutoImportAware defaultImportAware = createDefault(systemSettings)-->Line_13 $$ aware = defaultImportAware[ FD ]
Line_6 $$ for (ExternalSystemManager<?, ?, ?, ?, ?> manager : managers) -->Line_7 $$ AbstractExternalSystemSettings<?, ?, ?> systemSettings = manager.getSettingsProvider().fun(project)[ FD ]
Line_18 $$ ExternalSystemAutoImporter autoImporter = new ExternalSystemAutoImporter(project, ServiceManager.getService(ProjectDataManager.class), entries)-->Line_21 $$ EditorFactory.getInstance().getEventMulticaster().addDocumentListener(autoImporter, project)[ FD ]
Line_11 $$ aware = combine(defaultImportAware, (ExternalSystemAutoImportAware) manager)-->Line_13 $$ aware = defaultImportAware[ FD ]
Line_7 $$ AbstractExternalSystemSettings<?, ?, ?> systemSettings = manager.getSettingsProvider().fun(project)-->Line_8 $$ ExternalSystemAutoImportAware defaultImportAware = createDefault(systemSettings)[ FD ]
Line_9 $$ final ExternalSystemAutoImportAware aware-->Line_13 $$ aware = defaultImportAware[ FD ]
Line_10 $$ if (manager instanceof ExternalSystemAutoImportAware) -->Line_13 $$ aware = defaultImportAware[ CD ]
Line_4 $$ List<MyEntry> autoImportAware = ContainerUtilRt.newArrayList()-->Line_17 $$ MyEntry[] entries = autoImportAware.toArray(new MyEntry[autoImportAware.size()])[ FD ]
