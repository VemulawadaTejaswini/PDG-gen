Line_2 $$ public static void letTheMagicBegin(@NotNull Project project) -->Line_4 $$ Collection<ExternalSystemManager<?, ?, ?, ?, ?>> managers = ExternalSystemApiUtil.getAllManagers()[ CD ]
Line_2 $$ public static void letTheMagicBegin(@NotNull Project project) -->Line_20 $$ EditorFactory.getInstance().getEventMulticaster().addDocumentListener(autoImporter, project)[ CD ]
Line_9 $$ if (manager instanceof ExternalSystemAutoImportAware) -->Line_10 $$ aware = combine(defaultImportAware, (ExternalSystemAutoImportAware) manager)[ CD ]
Line_3 $$ List<MyEntry> autoImportAware = ContainerUtilRt.newArrayList()-->Line_14 $$ autoImportAware.add(new MyEntry(manager.getSystemId(), systemSettings, aware))[ FD ]
Line_10 $$ aware = combine(defaultImportAware, (ExternalSystemAutoImportAware) manager)-->Line_12 $$ aware = defaultImportAware[ FD ]
Line_2 $$ public static void letTheMagicBegin(@NotNull Project project) -->Line_20 $$ EditorFactory.getInstance().getEventMulticaster().addDocumentListener(autoImporter, project)[ FD ]
Line_8 $$ final ExternalSystemAutoImportAware aware-->Line_12 $$ aware = defaultImportAware[ FD ]
Line_7 $$ ExternalSystemAutoImportAware defaultImportAware = createDefault(systemSettings)-->Line_12 $$ aware = defaultImportAware[ FD ]
Line_9 $$ if (manager instanceof ExternalSystemAutoImportAware) -->Line_12 $$ aware = defaultImportAware[ CD ]
Line_6 $$ AbstractExternalSystemSettings<?, ?, ?> systemSettings = manager.getSettingsProvider().fun(project)-->Line_7 $$ ExternalSystemAutoImportAware defaultImportAware = createDefault(systemSettings)[ FD ]
Line_5 $$ for (ExternalSystemManager<?, ?, ?, ?, ?> manager : managers) -->Line_9 $$ if (manager instanceof ExternalSystemAutoImportAware) [ FD ]
Line_7 $$ ExternalSystemAutoImportAware defaultImportAware = createDefault(systemSettings)-->Line_10 $$ aware = combine(defaultImportAware, (ExternalSystemAutoImportAware) manager)[ FD ]
Line_5 $$ for (ExternalSystemManager<?, ?, ?, ?, ?> manager : managers) -->Line_6 $$ AbstractExternalSystemSettings<?, ?, ?> systemSettings = manager.getSettingsProvider().fun(project)[ FD ]
Line_2 $$ public static void letTheMagicBegin(@NotNull Project project) -->Line_19 $$ messageBus.connect(project).subscribe(VirtualFileManager.VFS_CHANGES, autoImporter)[ CD ]
Line_2 $$ public static void letTheMagicBegin(@NotNull Project project) -->Line_16 $$ MyEntry[] entries = autoImportAware.toArray(new MyEntry[autoImportAware.size()])[ CD ]
Line_2 $$ public static void letTheMagicBegin(@NotNull Project project) -->Line_17 $$ ExternalSystemAutoImporter autoImporter = new ExternalSystemAutoImporter(project, ServiceManager.getService(ProjectDataManager.class), entries)[ CD ]
Line_2 $$ public static void letTheMagicBegin(@NotNull Project project) -->Line_19 $$ messageBus.connect(project).subscribe(VirtualFileManager.VFS_CHANGES, autoImporter)[ FD ]
Line_2 $$ public static void letTheMagicBegin(@NotNull Project project) -->Line_6 $$ AbstractExternalSystemSettings<?, ?, ?> systemSettings = manager.getSettingsProvider().fun(project)[ FD ]
Line_2 $$ public static void letTheMagicBegin(@NotNull Project project) -->Line_18 $$ final MessageBus messageBus = project.getMessageBus()[ FD ]
Line_3 $$ List<MyEntry> autoImportAware = ContainerUtilRt.newArrayList()-->Line_16 $$ MyEntry[] entries = autoImportAware.toArray(new MyEntry[autoImportAware.size()])[ FD ]
Line_2 $$ public static void letTheMagicBegin(@NotNull Project project) -->Line_18 $$ final MessageBus messageBus = project.getMessageBus()[ CD ]
Line_17 $$ ExternalSystemAutoImporter autoImporter = new ExternalSystemAutoImporter(project, ServiceManager.getService(ProjectDataManager.class), entries)-->Line_19 $$ messageBus.connect(project).subscribe(VirtualFileManager.VFS_CHANGES, autoImporter)[ FD ]
Line_18 $$ final MessageBus messageBus = project.getMessageBus()-->Line_19 $$ messageBus.connect(project).subscribe(VirtualFileManager.VFS_CHANGES, autoImporter)[ FD ]
Line_2 $$ public static void letTheMagicBegin(@NotNull Project project) -->Line_3 $$ List<MyEntry> autoImportAware = ContainerUtilRt.newArrayList()[ CD ]
Line_8 $$ final ExternalSystemAutoImportAware aware-->Line_10 $$ aware = combine(defaultImportAware, (ExternalSystemAutoImportAware) manager)[ FD ]
Line_17 $$ ExternalSystemAutoImporter autoImporter = new ExternalSystemAutoImporter(project, ServiceManager.getService(ProjectDataManager.class), entries)-->Line_20 $$ EditorFactory.getInstance().getEventMulticaster().addDocumentListener(autoImporter, project)[ FD ]
Line_5 $$ for (ExternalSystemManager<?, ?, ?, ?, ?> manager : managers) -->Line_14 $$ autoImportAware.add(new MyEntry(manager.getSystemId(), systemSettings, aware))[ FD ]
