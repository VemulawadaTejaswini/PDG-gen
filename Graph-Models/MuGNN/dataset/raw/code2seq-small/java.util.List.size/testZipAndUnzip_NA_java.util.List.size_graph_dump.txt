Line_12 $$ String message = logRecord.getMessage()-->Line_13 $$ Assert.assertTrue(message.startsWith("Zipped"))[ FD ]
Line_11 $$ LogRecord logRecord = logRecords.remove(0)-->Line_12 $$ String message = logRecord.getMessage()[ FD ]
Line_7 $$ Path folderPath = FileServerTestUtil.createFolderWithFiles(Paths.get(folderName))-->Line_23 $$ FileServerTestUtil.assertFileEquals(folderPath, unzipFolderPath)[ FD ]
Line_11 $$ LogRecord logRecord = logRecords.remove(0)-->Line_21 $$ message = logRecord.getMessage()[ FD ]
Line_6 $$ try (CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(FileHelperUtil.class.getName(), Level.FINEST)) -->Line_29 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ FD ]
Line_9 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_19 $$ Assert.assertEquals(1, logRecords.size())[ FD ]
Line_20 $$ logRecord = logRecords.remove(0)-->Line_21 $$ message = logRecord.getMessage()[ FD ]
Line_7 $$ Path folderPath = FileServerTestUtil.createFolderWithFiles(Paths.get(folderName))-->Line_28 $$ Path zipFilePath = FileServerTestUtil.registerForCleanUp(FileHelperUtil.zip(folderPath, FileHelperUtil.TEMP_DIR_PATH, CompressionLevel.BEST_COMPRESSION))[ FD ]
Line_18 $$ Path unzipFolderPath = FileServerTestUtil.registerForCleanUp(FileHelperUtil.unzip(zipFilePath, FileHelperUtil.TEMP_DIR_PATH))-->Line_23 $$ FileServerTestUtil.assertFileEquals(folderPath, unzipFolderPath)[ FD ]
Line_7 $$ Path folderPath = FileServerTestUtil.createFolderWithFiles(Paths.get(folderName))-->Line_33 $$ FileServerTestUtil.assertFileEquals(folderPath, fileSystem.getPath("/"))[ FD ]
Line_9 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_30 $$ Assert.assertTrue(logRecords.isEmpty())[ FD ]
Line_12 $$ String message = logRecord.getMessage()-->Line_22 $$ Assert.assertTrue(message.startsWith("Unzipped"))[ FD ]
Line_14 $$ try (FileSystem fileSystem = FileSystems.newFileSystem(zipFilePath, null)) -->Line_15 $$ Files.createDirectory(fileSystem.getPath("EmptyFolder"))[ FD ]
Line_7 $$ Path folderPath = FileServerTestUtil.createFolderWithFiles(Paths.get(folderName))-->Line_37 $$ FileServerTestUtil.assertFileEquals(folderPath, unzipFolderPath)[ FD ]
Line_12 $$ String message = logRecord.getMessage()-->Line_21 $$ message = logRecord.getMessage()[ FD ]
Line_14 $$ try (FileSystem fileSystem = FileSystems.newFileSystem(zipFilePath, null)) -->Line_33 $$ FileServerTestUtil.assertFileEquals(folderPath, fileSystem.getPath("/"))[ FD ]
Line_9 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_36 $$ Assert.assertTrue(logRecords.isEmpty())[ FD ]
Line_7 $$ Path folderPath = FileServerTestUtil.createFolderWithFiles(Paths.get(folderName))-->Line_16 $$ FileServerTestUtil.assertFileEquals(folderPath, fileSystem.getPath("/"))[ FD ]
Line_9 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_10 $$ Assert.assertEquals(1, logRecords.size())[ FD ]
Line_8 $$ Path zipFilePath = FileServerTestUtil.registerForCleanUp(FileHelperUtil.zip(folderPath, FileHelperUtil.TEMP_DIR_PATH, CompressionLevel.BEST_COMPRESSION))-->Line_31 $$ try (FileSystem fileSystem = FileSystems.newFileSystem(zipFilePath, null)) [ FD ]
Line_9 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_11 $$ LogRecord logRecord = logRecords.remove(0)[ FD ]
Line_9 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_20 $$ logRecord = logRecords.remove(0)[ FD ]
Line_14 $$ try (FileSystem fileSystem = FileSystems.newFileSystem(zipFilePath, null)) -->Line_16 $$ FileServerTestUtil.assertFileEquals(folderPath, fileSystem.getPath("/"))[ FD ]
Line_11 $$ LogRecord logRecord = logRecords.remove(0)-->Line_20 $$ logRecord = logRecords.remove(0)[ FD ]
Line_21 $$ message = logRecord.getMessage()-->Line_22 $$ Assert.assertTrue(message.startsWith("Unzipped"))[ FD ]
Line_18 $$ Path unzipFolderPath = FileServerTestUtil.registerForCleanUp(FileHelperUtil.unzip(zipFilePath, FileHelperUtil.TEMP_DIR_PATH))-->Line_37 $$ FileServerTestUtil.assertFileEquals(folderPath, unzipFolderPath)[ FD ]
Line_7 $$ Path folderPath = FileServerTestUtil.createFolderWithFiles(Paths.get(folderName))-->Line_8 $$ Path zipFilePath = FileServerTestUtil.registerForCleanUp(FileHelperUtil.zip(folderPath, FileHelperUtil.TEMP_DIR_PATH, CompressionLevel.BEST_COMPRESSION))[ FD ]
Line_8 $$ Path zipFilePath = FileServerTestUtil.registerForCleanUp(FileHelperUtil.zip(folderPath, FileHelperUtil.TEMP_DIR_PATH, CompressionLevel.BEST_COMPRESSION))-->Line_14 $$ try (FileSystem fileSystem = FileSystems.newFileSystem(zipFilePath, null)) [ FD ]
Line_14 $$ try (FileSystem fileSystem = FileSystems.newFileSystem(zipFilePath, null)) -->Line_32 $$ Files.createDirectory(fileSystem.getPath("EmptyFolder"))[ FD ]
Line_8 $$ Path zipFilePath = FileServerTestUtil.registerForCleanUp(FileHelperUtil.zip(folderPath, FileHelperUtil.TEMP_DIR_PATH, CompressionLevel.BEST_COMPRESSION))-->Line_35 $$ Path unzipFolderPath = FileServerTestUtil.registerForCleanUp(FileHelperUtil.unzip(zipFilePath, FileHelperUtil.TEMP_DIR_PATH))[ FD ]
Line_8 $$ Path zipFilePath = FileServerTestUtil.registerForCleanUp(FileHelperUtil.zip(folderPath, FileHelperUtil.TEMP_DIR_PATH, CompressionLevel.BEST_COMPRESSION))-->Line_18 $$ Path unzipFolderPath = FileServerTestUtil.registerForCleanUp(FileHelperUtil.unzip(zipFilePath, FileHelperUtil.TEMP_DIR_PATH))[ FD ]
Line_6 $$ try (CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(FileHelperUtil.class.getName(), Level.FINEST)) -->Line_9 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ FD ]
