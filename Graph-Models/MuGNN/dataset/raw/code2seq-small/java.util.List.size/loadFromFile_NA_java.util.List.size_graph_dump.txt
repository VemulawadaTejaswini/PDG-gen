Line_2 $$ private boolean loadFromFile() throws IOException -->Line_41 $$ return false[ CD ]
Line_5 $$ DataInputStream input = new DataInputStream(new BufferedInputStream(new FileInputStream(myFile)))-->Line_22 $$ T instance = myKeyDescriptor.read(input)[ FD ]
Line_22 $$ T instance = myKeyDescriptor.read(input)-->Line_24 $$ elements.add(instance)[ FD ]
Line_17 $$ Map<T, Integer> elementToIdMap = new THashMap<T, Integer>()-->Line_28 $$ myInstanceToId.putAll(elementToIdMap)[ FD ]
Line_3 $$ if (!myTriedToLoadFile && myInstances.size() == 0 && myFile.exists()) -->Line_16 $$ List<T> elements = new ArrayList<T>()[ CD ]
Line_20 $$ if (savedVersion == myVersion) -->Line_29 $$ return true[ CD ]
Line_20 $$ if (savedVersion == myVersion) -->Line_21 $$ while (input.available() > 0) [ CD ]
Line_7 $$ if (vfsVersion != FSRecords.getCreationTimestamp()) -->Line_13 $$ FileUtil.deleteWithRenaming(myFile)[ CD ]
Line_5 $$ DataInputStream input = new DataInputStream(new BufferedInputStream(new FileInputStream(myFile)))-->Line_6 $$ long vfsVersion = DataInputOutputUtil.readTIME(input)[ FD ]
Line_7 $$ if (vfsVersion != FSRecords.getCreationTimestamp()) -->Line_14 $$ return false[ CD ]
Line_21 $$ while (input.available() > 0) -->Line_24 $$ elements.add(instance)[ CD ]
Line_5 $$ DataInputStream input = new DataInputStream(new BufferedInputStream(new FileInputStream(myFile)))-->Line_10 $$ input.close()[ FD ]
Line_21 $$ while (input.available() > 0) -->Line_25 $$ elementToIdMap.put(instance, elements.size())[ CD ]
Line_17 $$ Map<T, Integer> elementToIdMap = new THashMap<T, Integer>()-->Line_25 $$ elementToIdMap.put(instance, elements.size())[ FD ]
Line_16 $$ List<T> elements = new ArrayList<T>()-->Line_25 $$ elementToIdMap.put(instance, elements.size())[ FD ]
Line_20 $$ if (savedVersion == myVersion) -->Line_28 $$ myInstanceToId.putAll(elementToIdMap)[ CD ]
Line_6 $$ long vfsVersion = DataInputOutputUtil.readTIME(input)-->Line_7 $$ if (vfsVersion != FSRecords.getCreationTimestamp()) [ FD ]
Line_3 $$ if (!myTriedToLoadFile && myInstances.size() == 0 && myFile.exists()) -->Line_18 $$ int savedVersion = DataInputOutputUtil.readINT(input)[ CD ]
Line_5 $$ DataInputStream input = new DataInputStream(new BufferedInputStream(new FileInputStream(myFile)))-->Line_36 $$ input.close()[ FD ]
Line_16 $$ List<T> elements = new ArrayList<T>()-->Line_27 $$ myInstances.addAll(elements)[ FD ]
Line_22 $$ T instance = myKeyDescriptor.read(input)-->Line_25 $$ elementToIdMap.put(instance, elements.size())[ FD ]
Line_3 $$ if (!myTriedToLoadFile && myInstances.size() == 0 && myFile.exists()) -->Line_6 $$ long vfsVersion = DataInputOutputUtil.readTIME(input)[ CD ]
Line_16 $$ List<T> elements = new ArrayList<T>()-->Line_24 $$ elements.add(instance)[ FD ]
Line_3 $$ if (!myTriedToLoadFile && myInstances.size() == 0 && myFile.exists()) -->Line_17 $$ Map<T, Integer> elementToIdMap = new THashMap<T, Integer>()[ CD ]
Line_21 $$ while (input.available() > 0) -->Line_22 $$ T instance = myKeyDescriptor.read(input)[ CD ]
Line_20 $$ if (savedVersion == myVersion) -->Line_27 $$ myInstances.addAll(elements)[ CD ]
Line_3 $$ if (!myTriedToLoadFile && myInstances.size() == 0 && myFile.exists()) -->Line_7 $$ if (vfsVersion != FSRecords.getCreationTimestamp()) [ CD ]
Line_5 $$ DataInputStream input = new DataInputStream(new BufferedInputStream(new FileInputStream(myFile)))-->Line_21 $$ while (input.available() > 0) [ FD ]
Line_3 $$ if (!myTriedToLoadFile && myInstances.size() == 0 && myFile.exists()) -->Line_5 $$ DataInputStream input = new DataInputStream(new BufferedInputStream(new FileInputStream(myFile)))[ CD ]
Line_5 $$ DataInputStream input = new DataInputStream(new BufferedInputStream(new FileInputStream(myFile)))-->Line_18 $$ int savedVersion = DataInputOutputUtil.readINT(input)[ FD ]
Line_18 $$ int savedVersion = DataInputOutputUtil.readINT(input)-->Line_20 $$ if (savedVersion == myVersion) [ FD ]
Line_2 $$ private boolean loadFromFile() throws IOException -->Line_3 $$ if (!myTriedToLoadFile && myInstances.size() == 0 && myFile.exists()) [ CD ]
