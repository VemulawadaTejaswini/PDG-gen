Line_11 $$ for (Iterator it = orders.iterator(); it.hasNext(); ) -->Line_14 $$ OrderLine ol = (OrderLine) map.get("ol")[ CD ]
Line_6 $$ Criteria subCriteria = rootCriteria.createCriteria("orderLines", "ol", JoinFragment.LEFT_OUTER_JOIN, Restrictions.or(Restrictions.isNull("ol.articleId"), Restrictions.eq("ol.articleId", "1000")))-->Line_8 $$ assertNotSame(rootCriteria, subCriteria)[ FD ]
Line_5 $$ Criteria rootCriteria = s.createCriteria(Order.class, "o")-->Line_6 $$ Criteria subCriteria = rootCriteria.createCriteria("orderLines", "ol", JoinFragment.LEFT_OUTER_JOIN, Restrictions.or(Restrictions.isNull("ol.articleId"), Restrictions.eq("ol.articleId", "1000")))[ FD ]
Line_15 $$ if (order1.getOrderId() == o.getOrderId()) -->Line_18 $$ assertEquals("1000", ol.getArticleId())[ CD ]
Line_15 $$ if (order1.getOrderId() == o.getOrderId()) -->Line_19 $$ if (order2.getOrderId() == o.getOrderId()) [ CD ]
Line_11 $$ for (Iterator it = orders.iterator(); it.hasNext(); ) -->Line_15 $$ if (order1.getOrderId() == o.getOrderId()) [ CD ]
Line_22 $$ if (order3.getOrderId() == o.getOrderId()) -->Line_26 $$ fail("unknown order")[ CD ]
Line_2 $$ public void testSubcriteriaWithClauseAliasToEntityMap() -->Line_11 $$ for (Iterator it = orders.iterator(); it.hasNext(); ) [ CD ]
Line_13 $$ Order o = (Order) map.get("o")-->Line_15 $$ if (order1.getOrderId() == o.getOrderId()) [ FD ]
Line_15 $$ if (order1.getOrderId() == o.getOrderId()) -->Line_17 $$ assertNotNull(ol)[ CD ]
Line_14 $$ OrderLine ol = (OrderLine) map.get("ol")-->Line_21 $$ assertNull(ol)[ FD ]
Line_22 $$ if (order3.getOrderId() == o.getOrderId()) -->Line_24 $$ assertNull(ol)[ CD ]
Line_22 $$ if (order3.getOrderId() == o.getOrderId()) -->Line_23 $$ assertEquals(order3.getLines().size(), o.getLines().size())[ CD ]
Line_3 $$ Session s = openSession()-->Line_30 $$ s.close()[ FD ]
Line_19 $$ if (order2.getOrderId() == o.getOrderId()) -->Line_20 $$ assertTrue(o.getLines().isEmpty())[ CD ]
Line_2 $$ public void testSubcriteriaWithClauseAliasToEntityMap() -->Line_5 $$ Criteria rootCriteria = s.createCriteria(Order.class, "o")[ CD ]
Line_13 $$ Order o = (Order) map.get("o")-->Line_16 $$ assertEquals(order1.getLines().size(), o.getLines().size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_29 $$ s.getTransaction().commit()[ FD ]
Line_14 $$ OrderLine ol = (OrderLine) map.get("ol")-->Line_17 $$ assertNotNull(ol)[ FD ]
Line_14 $$ OrderLine ol = (OrderLine) map.get("ol")-->Line_18 $$ assertEquals("1000", ol.getArticleId())[ FD ]
Line_13 $$ Order o = (Order) map.get("o")-->Line_19 $$ if (order2.getOrderId() == o.getOrderId()) [ FD ]
Line_2 $$ public void testSubcriteriaWithClauseAliasToEntityMap() -->Line_4 $$ s.getTransaction().begin()[ CD ]
Line_14 $$ OrderLine ol = (OrderLine) map.get("ol")-->Line_24 $$ assertNull(ol)[ FD ]
Line_19 $$ if (order2.getOrderId() == o.getOrderId()) -->Line_21 $$ assertNull(ol)[ CD ]
Line_12 $$ Map map = (Map) it.next()-->Line_13 $$ Order o = (Order) map.get("o")[ FD ]
Line_11 $$ for (Iterator it = orders.iterator(); it.hasNext(); ) -->Line_12 $$ Map map = (Map) it.next()[ FD ]
Line_2 $$ public void testSubcriteriaWithClauseAliasToEntityMap() -->Line_6 $$ Criteria subCriteria = rootCriteria.createCriteria("orderLines", "ol", JoinFragment.LEFT_OUTER_JOIN, Restrictions.or(Restrictions.isNull("ol.articleId"), Restrictions.eq("ol.articleId", "1000")))[ CD ]
Line_2 $$ public void testSubcriteriaWithClauseAliasToEntityMap() -->Line_8 $$ assertNotSame(rootCriteria, subCriteria)[ CD ]
Line_5 $$ Criteria rootCriteria = s.createCriteria(Order.class, "o")-->Line_8 $$ assertNotSame(rootCriteria, subCriteria)[ FD ]
Line_2 $$ public void testSubcriteriaWithClauseAliasToEntityMap() -->Line_29 $$ s.getTransaction().commit()[ CD ]
Line_9 $$ List orders = rootCriteria.setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).list()-->Line_10 $$ assertEquals(3, orders.size())[ FD ]
Line_13 $$ Order o = (Order) map.get("o")-->Line_22 $$ if (order3.getOrderId() == o.getOrderId()) [ FD ]
Line_9 $$ List orders = rootCriteria.setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).list()-->Line_11 $$ for (Iterator it = orders.iterator(); it.hasNext(); ) [ FD ]
Line_11 $$ for (Iterator it = orders.iterator(); it.hasNext(); ) -->Line_12 $$ Map map = (Map) it.next()[ CD ]
Line_12 $$ Map map = (Map) it.next()-->Line_14 $$ OrderLine ol = (OrderLine) map.get("ol")[ FD ]
Line_13 $$ Order o = (Order) map.get("o")-->Line_20 $$ assertTrue(o.getLines().isEmpty())[ FD ]
Line_2 $$ public void testSubcriteriaWithClauseAliasToEntityMap() -->Line_9 $$ List orders = rootCriteria.setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).list()[ CD ]
Line_2 $$ public void testSubcriteriaWithClauseAliasToEntityMap() -->Line_3 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testSubcriteriaWithClauseAliasToEntityMap() -->Line_10 $$ assertEquals(3, orders.size())[ CD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ s.getTransaction().begin()[ FD ]
Line_13 $$ Order o = (Order) map.get("o")-->Line_23 $$ assertEquals(order3.getLines().size(), o.getLines().size())[ FD ]
Line_5 $$ Criteria rootCriteria = s.createCriteria(Order.class, "o")-->Line_9 $$ List orders = rootCriteria.setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_5 $$ Criteria rootCriteria = s.createCriteria(Order.class, "o")[ FD ]
Line_11 $$ for (Iterator it = orders.iterator(); it.hasNext(); ) -->Line_13 $$ Order o = (Order) map.get("o")[ CD ]
Line_15 $$ if (order1.getOrderId() == o.getOrderId()) -->Line_16 $$ assertEquals(order1.getLines().size(), o.getLines().size())[ CD ]
Line_19 $$ if (order2.getOrderId() == o.getOrderId()) -->Line_22 $$ if (order3.getOrderId() == o.getOrderId()) [ CD ]
Line_2 $$ public void testSubcriteriaWithClauseAliasToEntityMap() -->Line_30 $$ s.close()[ CD ]
