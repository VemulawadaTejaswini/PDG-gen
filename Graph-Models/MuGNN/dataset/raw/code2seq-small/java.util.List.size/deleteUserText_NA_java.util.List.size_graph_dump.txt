Line_7 $$ final int startOffset-->Line_18 $$ startOffset = getStartOffset(offset, info, deferredOffset)[ FD ]
Line_2 $$ private void deleteUserText(int offset, int length) -->Line_22 $$ editor.getCaretModel().moveToOffset(offset)[ FD ]
Line_8 $$ final int endOffset-->Line_29 $$ document.deleteString(startOffset, endOffset)[ FD ]
Line_5 $$ final Editor editor = consoleView.myEditor-->Line_22 $$ editor.getCaretModel().moveToOffset(offset)[ FD ]
Line_2 $$ private void deleteUserText(int offset, int length) -->Line_18 $$ startOffset = getStartOffset(offset, info, deferredOffset)[ FD ]
Line_6 $$ final Document document = editor.getDocument()-->Line_29 $$ document.deleteString(startOffset, endOffset)[ FD ]
Line_20 $$ if (startOffset == -1 || endOffset == -1 || endOffset <= startOffset || startOffset < deferredOffset) -->Line_21 $$ editor.getSelectionModel().removeSelection()[ CD ]
Line_8 $$ final int endOffset-->Line_19 $$ endOffset = getEndOffset(offset + length, info)[ FD ]
Line_15 $$ if (myBuffer.getUserInputLength() == 0)-->Line_16 $$ return[ CD ]
Line_5 $$ final Editor editor = consoleView.myEditor-->Line_34 $$ editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE)[ FD ]
Line_2 $$ private void deleteUserText(int offset, int length) -->Line_5 $$ final Editor editor = consoleView.myEditor[ CD ]
Line_18 $$ startOffset = getStartOffset(offset, info, deferredOffset)-->Line_33 $$ editor.getCaretModel().moveToOffset(startOffset)[ FD ]
Line_10 $$ if (consoleView.myTokens.isEmpty())-->Line_11 $$ return[ CD ]
Line_4 $$ ConsoleBuffer buffer = consoleView.myBuffer-->Line_17 $$ final int deferredOffset = myContentSize - buffer.getLength() - buffer.getUserInputLength()[ FD ]
Line_19 $$ endOffset = getEndOffset(offset + length, info)-->Line_29 $$ document.deleteString(startOffset, endOffset)[ FD ]
Line_2 $$ private void deleteUserText(int offset, int length) -->Line_34 $$ editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE)[ CD ]
Line_20 $$ if (startOffset == -1 || endOffset == -1 || endOffset <= startOffset || startOffset < deferredOffset) -->Line_23 $$ return[ CD ]
Line_7 $$ final int startOffset-->Line_33 $$ editor.getCaretModel().moveToOffset(startOffset)[ FD ]
Line_5 $$ final Editor editor = consoleView.myEditor-->Line_6 $$ final Document document = editor.getDocument()[ FD ]
Line_17 $$ final int deferredOffset = myContentSize - buffer.getLength() - buffer.getUserInputLength()-->Line_18 $$ startOffset = getStartOffset(offset, info, deferredOffset)[ FD ]
Line_18 $$ startOffset = getStartOffset(offset, info, deferredOffset)-->Line_29 $$ document.deleteString(startOffset, endOffset)[ FD ]
Line_12 $$ final TokenInfo info = consoleView.myTokens.get(consoleView.myTokens.size() - 1)-->Line_18 $$ startOffset = getStartOffset(offset, info, deferredOffset)[ FD ]
Line_2 $$ private void deleteUserText(int offset, int length) -->Line_7 $$ final int startOffset[ CD ]
Line_4 $$ ConsoleBuffer buffer = consoleView.myBuffer-->Line_25 $$ buffer.removeUserText(startOffset - deferredOffset, endOffset - deferredOffset)[ FD ]
Line_7 $$ final int startOffset-->Line_29 $$ document.deleteString(startOffset, endOffset)[ FD ]
Line_2 $$ private void deleteUserText(int offset, int length) -->Line_3 $$ ConsoleViewImpl consoleView = this[ CD ]
Line_2 $$ private void deleteUserText(int offset, int length) -->Line_8 $$ final int endOffset[ CD ]
Line_2 $$ private void deleteUserText(int offset, int length) -->Line_6 $$ final Document document = editor.getDocument()[ CD ]
Line_2 $$ private void deleteUserText(int offset, int length) -->Line_4 $$ ConsoleBuffer buffer = consoleView.myBuffer[ CD ]
Line_5 $$ final Editor editor = consoleView.myEditor-->Line_33 $$ editor.getCaretModel().moveToOffset(startOffset)[ FD ]
Line_5 $$ final Editor editor = consoleView.myEditor-->Line_21 $$ editor.getSelectionModel().removeSelection()[ FD ]
Line_2 $$ private void deleteUserText(int offset, int length) -->Line_35 $$ editor.getSelectionModel().removeSelection()[ CD ]
Line_13 $$ if (info.contentType != ConsoleViewContentType.USER_INPUT)-->Line_14 $$ return[ CD ]
Line_12 $$ final TokenInfo info = consoleView.myTokens.get(consoleView.myTokens.size() - 1)-->Line_19 $$ endOffset = getEndOffset(offset + length, info)[ FD ]
Line_2 $$ private void deleteUserText(int offset, int length) -->Line_33 $$ editor.getCaretModel().moveToOffset(startOffset)[ CD ]
Line_5 $$ final Editor editor = consoleView.myEditor-->Line_35 $$ editor.getSelectionModel().removeSelection()[ FD ]
Line_20 $$ if (startOffset == -1 || endOffset == -1 || endOffset <= startOffset || startOffset < deferredOffset) -->Line_22 $$ editor.getCaretModel().moveToOffset(offset)[ CD ]
