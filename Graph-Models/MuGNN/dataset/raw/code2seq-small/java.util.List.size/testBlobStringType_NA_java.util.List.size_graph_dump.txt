Line_7 $$ BlobStringType type = new BlobStringType(lobHandler, null)-->Line_12 $$ assertEquals("content", type.deepCopy("content"))[ FD ]
Line_7 $$ BlobStringType type = new BlobStringType(lobHandler, null)-->Line_9 $$ assertEquals(Types.BLOB, type.sqlTypes()[0])[ FD ]
Line_18 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_19 $$ assertEquals(1, synchs.size())[ FD ]
Line_5 $$ byte[] contentBytes = content.getBytes()-->Line_25 $$ verify(lobCreator).setBlobAsBytes(ps, 1, contentBytes)[ FD ]
Line_4 $$ String content = "content"-->Line_17 $$ type.nullSafeSet(ps, content, 1)[ FD ]
Line_7 $$ BlobStringType type = new BlobStringType(lobHandler, null)-->Line_11 $$ assertTrue(type.equals("content", "content"))[ FD ]
Line_18 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_20 $$ ((TransactionSynchronization) synchs.get(0)).beforeCompletion()[ FD ]
Line_7 $$ BlobStringType type = new BlobStringType(lobHandler, null)-->Line_17 $$ type.nullSafeSet(ps, content, 1)[ FD ]
Line_18 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_21 $$ ((TransactionSynchronization) synchs.get(0)).afterCompletion(TransactionSynchronization.STATUS_COMMITTED)[ FD ]
Line_7 $$ BlobStringType type = new BlobStringType(lobHandler, null)-->Line_10 $$ assertEquals(String.class, type.returnedClass())[ FD ]
Line_7 $$ BlobStringType type = new BlobStringType(lobHandler, null)-->Line_8 $$ assertEquals(1, type.sqlTypes().length)[ FD ]
Line_7 $$ BlobStringType type = new BlobStringType(lobHandler, null)-->Line_14 $$ assertEquals(content, type.nullSafeGet(rs, new String[] [ FD ]
Line_4 $$ String content = "content"-->Line_5 $$ byte[] contentBytes = content.getBytes()[ FD ]
Line_4 $$ String content = "content"-->Line_14 $$ assertEquals(content, type.nullSafeGet(rs, new String[] [ FD ]
Line_7 $$ BlobStringType type = new BlobStringType(lobHandler, null)-->Line_13 $$ assertFalse(type.isMutable())[ FD ]
Line_5 $$ byte[] contentBytes = content.getBytes()-->Line_6 $$ given(lobHandler.getBlobAsBytes(rs, "column")).willReturn(contentBytes)[ FD ]
