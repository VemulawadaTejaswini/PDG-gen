Line_6 $$ BlobStringType type = new BlobStringType(lobHandler, null)-->Line_9 $$ assertEquals(String.class, type.returnedClass())[ FD ]
Line_4 $$ byte[] contentBytes = content.getBytes()-->Line_24 $$ verify(lobCreator).setBlobAsBytes(ps, 1, contentBytes)[ FD ]
Line_2 $$ public void testBlobStringType() throws Exception -->Line_8 $$ assertEquals(Types.BLOB, type.sqlTypes()[0])[ CD ]
Line_6 $$ BlobStringType type = new BlobStringType(lobHandler, null)-->Line_16 $$ type.nullSafeSet(ps, content, 1)[ FD ]
Line_17 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_20 $$ ((TransactionSynchronization) synchs.get(0)).afterCompletion(TransactionSynchronization.STATUS_COMMITTED)[ FD ]
Line_6 $$ BlobStringType type = new BlobStringType(lobHandler, null)-->Line_7 $$ assertEquals(1, type.sqlTypes().length)[ FD ]
Line_2 $$ public void testBlobStringType() throws Exception -->Line_13 $$ assertEquals(content, type.nullSafeGet(rs, new String[] [ CD ]
Line_6 $$ BlobStringType type = new BlobStringType(lobHandler, null)-->Line_11 $$ assertEquals("content", type.deepCopy("content"))[ FD ]
Line_17 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_18 $$ assertEquals(1, synchs.size())[ FD ]
Line_6 $$ BlobStringType type = new BlobStringType(lobHandler, null)-->Line_8 $$ assertEquals(Types.BLOB, type.sqlTypes()[0])[ FD ]
Line_2 $$ public void testBlobStringType() throws Exception -->Line_9 $$ assertEquals(String.class, type.returnedClass())[ CD ]
Line_2 $$ public void testBlobStringType() throws Exception -->Line_11 $$ assertEquals("content", type.deepCopy("content"))[ CD ]
Line_6 $$ BlobStringType type = new BlobStringType(lobHandler, null)-->Line_13 $$ assertEquals(content, type.nullSafeGet(rs, new String[] [ FD ]
Line_2 $$ public void testBlobStringType() throws Exception -->Line_14 $$ TransactionSynchronizationManager.initSynchronization()[ CD ]
Line_3 $$ String content = "content"-->Line_16 $$ type.nullSafeSet(ps, content, 1)[ FD ]
Line_2 $$ public void testBlobStringType() throws Exception -->Line_7 $$ assertEquals(1, type.sqlTypes().length)[ CD ]
Line_17 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_19 $$ ((TransactionSynchronization) synchs.get(0)).beforeCompletion()[ FD ]
Line_2 $$ public void testBlobStringType() throws Exception -->Line_12 $$ assertFalse(type.isMutable())[ CD ]
Line_2 $$ public void testBlobStringType() throws Exception -->Line_5 $$ given(lobHandler.getBlobAsBytes(rs, "column")).willReturn(contentBytes)[ CD ]
Line_3 $$ String content = "content"-->Line_4 $$ byte[] contentBytes = content.getBytes()[ FD ]
Line_6 $$ BlobStringType type = new BlobStringType(lobHandler, null)-->Line_12 $$ assertFalse(type.isMutable())[ FD ]
Line_2 $$ public void testBlobStringType() throws Exception -->Line_3 $$ String content = "content"[ CD ]
Line_2 $$ public void testBlobStringType() throws Exception -->Line_6 $$ BlobStringType type = new BlobStringType(lobHandler, null)[ CD ]
Line_3 $$ String content = "content"-->Line_13 $$ assertEquals(content, type.nullSafeGet(rs, new String[] [ FD ]
Line_2 $$ public void testBlobStringType() throws Exception -->Line_10 $$ assertTrue(type.equals("content", "content"))[ CD ]
Line_2 $$ public void testBlobStringType() throws Exception -->Line_24 $$ verify(lobCreator).setBlobAsBytes(ps, 1, contentBytes)[ CD ]
Line_6 $$ BlobStringType type = new BlobStringType(lobHandler, null)-->Line_10 $$ assertTrue(type.equals("content", "content"))[ FD ]
Line_4 $$ byte[] contentBytes = content.getBytes()-->Line_5 $$ given(lobHandler.getBlobAsBytes(rs, "column")).willReturn(contentBytes)[ FD ]
Line_2 $$ public void testBlobStringType() throws Exception -->Line_4 $$ byte[] contentBytes = content.getBytes()[ CD ]
