Line_26 $$ noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()-->Line_31 $$ noticeableFuture.get()[ FD ]
Line_8 $$ Channel channel = NettyTestUtil.createEmptyEmbeddedChannel()-->Line_11 $$ nettyFabricWorkerExecutionChannelHandler.sendResult(channel, 0, StringPool.BLANK, null)[ FD ]
Line_12 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_13 $$ Assert.assertEquals(1, logRecords.size())[ FD ]
Line_19 $$ NettyFabricWorkerStub<Serializable> nettyFabricWorkerStub = installNettyFabricWorkerStub()-->Line_26 $$ noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()[ FD ]
Line_20 $$ NoticeableFuture<Serializable> noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()-->Line_23 $$ Assert.assertEquals(StringPool.BLANK, noticeableFuture.get())[ FD ]
Line_8 $$ Channel channel = NettyTestUtil.createEmptyEmbeddedChannel()-->Line_9 $$ channel.close()[ FD ]
Line_27 $$ Throwable throwable = new Throwable()-->Line_34 $$ Assert.assertSame(throwable, ee.getCause())[ FD ]
Line_12 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_14 $$ LogRecord logRecord = logRecords.get(0)[ FD ]
Line_10 $$ try (CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(NettyFabricWorkerExecutionChannelHandler.class.getName(), Level.SEVERE)) -->Line_12 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ FD ]
Line_20 $$ NoticeableFuture<Serializable> noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()-->Line_26 $$ noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()[ FD ]
Line_19 $$ NettyFabricWorkerStub<Serializable> nettyFabricWorkerStub = installNettyFabricWorkerStub()-->Line_20 $$ NoticeableFuture<Serializable> noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()[ FD ]
Line_20 $$ NoticeableFuture<Serializable> noticeableFuture = nettyFabricWorkerStub.getProcessNoticeableFuture()-->Line_31 $$ noticeableFuture.get()[ FD ]
Line_14 $$ LogRecord logRecord = logRecords.get(0)-->Line_15 $$ Assert.assertEquals("Unable to send back fabric worker result " + "[ FD ]
Line_27 $$ Throwable throwable = new Throwable()-->Line_28 $$ nettyFabricWorkerExecutionChannelHandler.sendResult(_embeddedChannel, 0, null, throwable)[ FD ]
