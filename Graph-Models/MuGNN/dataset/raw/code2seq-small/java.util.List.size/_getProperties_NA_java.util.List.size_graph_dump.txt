Line_5 $$ List<Properties> propertiesList = new ArrayList()-->Line_15 $$ propertiesList.add(props)[ FD ]
Line_8 $$ level = PORTAL_MAX_DIR_LEVEL-->Line_10 $$ for (int i = 0; i <= level; i++) [ FD ]
Line_2 $$ private Properties _getProperties() throws Exception -->Line_6 $$ int level = 2[ CD ]
Line_36 $$ if (key.contains("excludes")) -->Line_42 $$ if (!properties.containsKey(key)) [ CD ]
Line_23 $$ properties = propertiesList.get(0)-->Line_37 $$ String existingValue = properties.getProperty(key)[ FD ]
Line_27 $$ for (int i = 1; i < propertiesList.size(); i++) -->Line_28 $$ Properties props = propertiesList.get(i)[ FD ]
Line_32 $$ String value = props.getProperty(key)-->Line_33 $$ if (Validator.isNull(value)) [ FD ]
Line_2 $$ private Properties _getProperties() throws Exception -->Line_4 $$ Properties properties = new Properties()[ CD ]
Line_5 $$ List<Properties> propertiesList = new ArrayList()-->Line_27 $$ for (int i = 1; i < propertiesList.size(); i++) [ FD ]
Line_28 $$ Properties props = propertiesList.get(i)-->Line_29 $$ Enumeration<String> enu = (Enumeration<String>) props.propertyNames()[ FD ]
Line_36 $$ if (key.contains("excludes")) -->Line_38 $$ if (Validator.isNotNull(existingValue)) [ CD ]
Line_5 $$ List<Properties> propertiesList = new ArrayList()-->Line_23 $$ properties = propertiesList.get(0)[ FD ]
Line_38 $$ if (Validator.isNotNull(existingValue)) -->Line_39 $$ value = existingValue + StringPool.COMMA + value[ CD ]
Line_32 $$ String value = props.getProperty(key)-->Line_39 $$ value = existingValue + StringPool.COMMA + value[ FD ]
Line_13 $$ Properties props = new Properties()-->Line_32 $$ String value = props.getProperty(key)[ FD ]
Line_2 $$ private Properties _getProperties() throws Exception -->Line_5 $$ List<Properties> propertiesList = new ArrayList()[ CD ]
Line_4 $$ Properties properties = new Properties()-->Line_37 $$ String existingValue = properties.getProperty(key)[ FD ]
Line_10 $$ for (int i = 0; i <= level; i++) -->Line_28 $$ Properties props = propertiesList.get(i)[ FD ]
Line_5 $$ List<Properties> propertiesList = new ArrayList()-->Line_20 $$ if (propertiesList.isEmpty()) [ FD ]
Line_31 $$ String key = enu.nextElement()-->Line_32 $$ String value = props.getProperty(key)[ FD ]
Line_4 $$ Properties properties = new Properties()-->Line_41 $$ properties.put(key, value)[ FD ]
Line_31 $$ String key = enu.nextElement()-->Line_36 $$ if (key.contains("excludes")) [ FD ]
Line_39 $$ value = existingValue + StringPool.COMMA + value-->Line_41 $$ properties.put(key, value)[ FD ]
Line_27 $$ for (int i = 1; i < propertiesList.size(); i++) -->Line_28 $$ Properties props = propertiesList.get(i)[ CD ]
Line_5 $$ List<Properties> propertiesList = new ArrayList()-->Line_28 $$ Properties props = propertiesList.get(i)[ FD ]
Line_29 $$ Enumeration<String> enu = (Enumeration<String>) props.propertyNames()-->Line_31 $$ String key = enu.nextElement()[ FD ]
Line_4 $$ Properties properties = new Properties()-->Line_23 $$ properties = propertiesList.get(0)[ FD ]
Line_2 $$ private Properties _getProperties() throws Exception -->Line_3 $$ String fileName = "source-formatter.properties"[ CD ]
Line_32 $$ String value = props.getProperty(key)-->Line_41 $$ properties.put(key, value)[ FD ]
Line_23 $$ properties = propertiesList.get(0)-->Line_42 $$ if (!properties.containsKey(key)) [ FD ]
Line_30 $$ while (enu.hasMoreElements()) -->Line_31 $$ String key = enu.nextElement()[ CD ]
Line_2 $$ private Properties _getProperties() throws Exception -->Line_27 $$ for (int i = 1; i < propertiesList.size(); i++) [ CD ]
Line_2 $$ private Properties _getProperties() throws Exception -->Line_10 $$ for (int i = 0; i <= level; i++) [ CD ]
Line_13 $$ Properties props = new Properties()-->Line_29 $$ Enumeration<String> enu = (Enumeration<String>) props.propertyNames()[ FD ]
Line_28 $$ Properties props = propertiesList.get(i)-->Line_32 $$ String value = props.getProperty(key)[ FD ]
Line_36 $$ if (key.contains("excludes")) -->Line_37 $$ String existingValue = properties.getProperty(key)[ CD ]
Line_4 $$ Properties properties = new Properties()-->Line_43 $$ properties.put(key, value)[ FD ]
Line_39 $$ value = existingValue + StringPool.COMMA + value-->Line_33 $$ if (Validator.isNull(value)) [ FD ]
Line_23 $$ properties = propertiesList.get(0)-->Line_43 $$ properties.put(key, value)[ FD ]
Line_30 $$ while (enu.hasMoreElements()) -->Line_36 $$ if (key.contains("excludes")) [ CD ]
Line_39 $$ value = existingValue + StringPool.COMMA + value-->Line_43 $$ properties.put(key, value)[ FD ]
Line_2 $$ private Properties _getProperties() throws Exception -->Line_7 $$ if (portalSource) [ CD ]
Line_5 $$ List<Properties> propertiesList = new ArrayList()-->Line_24 $$ if (propertiesList.size() == 1) [ FD ]
Line_30 $$ while (enu.hasMoreElements()) -->Line_32 $$ String value = props.getProperty(key)[ CD ]
Line_37 $$ String existingValue = properties.getProperty(key)-->Line_38 $$ if (Validator.isNotNull(existingValue)) [ FD ]
Line_10 $$ for (int i = 0; i <= level; i++) -->Line_18 $$ fileName = "../" + fileName[ CD ]
Line_36 $$ if (key.contains("excludes")) -->Line_41 $$ properties.put(key, value)[ CD ]
Line_31 $$ String key = enu.nextElement()-->Line_42 $$ if (!properties.containsKey(key)) [ FD ]
Line_6 $$ int level = 2-->Line_10 $$ for (int i = 0; i <= level; i++) [ FD ]
Line_27 $$ for (int i = 1; i < propertiesList.size(); i++) -->Line_30 $$ while (enu.hasMoreElements()) [ CD ]
Line_2 $$ private Properties _getProperties() throws Exception -->Line_23 $$ properties = propertiesList.get(0)[ CD ]
Line_27 $$ for (int i = 1; i < propertiesList.size(); i++) -->Line_29 $$ Enumeration<String> enu = (Enumeration<String>) props.propertyNames()[ CD ]
Line_13 $$ Properties props = new Properties()-->Line_14 $$ props.load(inputStream)[ FD ]
Line_13 $$ Properties props = new Properties()-->Line_15 $$ propertiesList.add(props)[ FD ]
Line_31 $$ String key = enu.nextElement()-->Line_43 $$ properties.put(key, value)[ FD ]
Line_12 $$ InputStream inputStream = new FileInputStream(fileName)-->Line_14 $$ props.load(inputStream)[ FD ]
Line_23 $$ properties = propertiesList.get(0)-->Line_41 $$ properties.put(key, value)[ FD ]
Line_31 $$ String key = enu.nextElement()-->Line_41 $$ properties.put(key, value)[ FD ]
Line_29 $$ Enumeration<String> enu = (Enumeration<String>) props.propertyNames()-->Line_30 $$ while (enu.hasMoreElements()) [ FD ]
Line_10 $$ for (int i = 0; i <= level; i++) -->Line_27 $$ for (int i = 1; i < propertiesList.size(); i++) [ FD ]
Line_3 $$ String fileName = "source-formatter.properties"-->Line_18 $$ fileName = "../" + fileName[ FD ]
Line_6 $$ int level = 2-->Line_8 $$ level = PORTAL_MAX_DIR_LEVEL[ FD ]
Line_7 $$ if (portalSource) -->Line_8 $$ level = PORTAL_MAX_DIR_LEVEL[ CD ]
Line_2 $$ private Properties _getProperties() throws Exception -->Line_20 $$ if (propertiesList.isEmpty()) [ CD ]
Line_2 $$ private Properties _getProperties() throws Exception -->Line_24 $$ if (propertiesList.size() == 1) [ CD ]
Line_24 $$ if (propertiesList.size() == 1) -->Line_25 $$ return properties[ CD ]
Line_30 $$ while (enu.hasMoreElements()) -->Line_33 $$ if (Validator.isNull(value)) [ CD ]
Line_32 $$ String value = props.getProperty(key)-->Line_43 $$ properties.put(key, value)[ FD ]
Line_2 $$ private Properties _getProperties() throws Exception -->Line_47 $$ return properties[ CD ]
Line_20 $$ if (propertiesList.isEmpty()) -->Line_21 $$ return properties[ CD ]
Line_31 $$ String key = enu.nextElement()-->Line_37 $$ String existingValue = properties.getProperty(key)[ FD ]
Line_4 $$ Properties properties = new Properties()-->Line_42 $$ if (!properties.containsKey(key)) [ FD ]
Line_42 $$ if (!properties.containsKey(key)) -->Line_43 $$ properties.put(key, value)[ CD ]
