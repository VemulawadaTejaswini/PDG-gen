Line_12 $$ final Config cfg = myComponent.getConfig()-->Line_19 $$ lowestOffset = highlightElement(editor, element, cfg, lowestOffset)[ FD ]
Line_30 $$ SwingUtilities.invokeLater(new Runnable() -->Line_36 $$ statusBar.setInfo(list.size() + " XPath " + s + " found (press Escape to remove the highlighting)")[ CD ]
Line_12 $$ final Config cfg = myComponent.getConfig()-->Line_26 $$ if (cfg.isScrollToFirst() && lowestOffset != Integer.MAX_VALUE) [ FD ]
Line_17 $$ final PsiElement element = (PsiElement) o-->Line_18 $$ if (element.getContainingFile() == contextNode.getContainingFile()) [ FD ]
Line_13 $$ int lowestOffset = Integer.MAX_VALUE-->Line_19 $$ lowestOffset = highlightElement(editor, element, cfg, lowestOffset)[ FD ]
Line_19 $$ lowestOffset = highlightElement(editor, element, cfg, lowestOffset)-->Line_27 $$ editor.getScrollingModel().scrollTo(editor.offsetToLogicalPosition(lowestOffset), ScrollType.MAKE_VISIBLE)[ FD ]
Line_16 $$ if (o instanceof PsiElement) -->Line_18 $$ if (element.getContainingFile() == contextNode.getContainingFile()) [ CD ]
Line_13 $$ int lowestOffset = Integer.MAX_VALUE-->Line_28 $$ editor.getCaretModel().moveToOffset(lowestOffset)[ FD ]
Line_34 $$ final StatusBar statusBar = WindowManager.getInstance().getStatusBar(editor.getProject())-->Line_36 $$ statusBar.setInfo(list.size() + " XPath " + s + " found (press Escape to remove the highlighting)")[ FD ]
Line_30 $$ SwingUtilities.invokeLater(new Runnable() -->Line_34 $$ final StatusBar statusBar = WindowManager.getInstance().getStatusBar(editor.getProject())[ CD ]
Line_16 $$ if (o instanceof PsiElement) -->Line_17 $$ final PsiElement element = (PsiElement) o[ CD ]
Line_17 $$ final PsiElement element = (PsiElement) o-->Line_19 $$ lowestOffset = highlightElement(editor, element, cfg, lowestOffset)[ FD ]
Line_19 $$ lowestOffset = highlightElement(editor, element, cfg, lowestOffset)-->Line_28 $$ editor.getCaretModel().moveToOffset(lowestOffset)[ FD ]
Line_26 $$ if (cfg.isScrollToFirst() && lowestOffset != Integer.MAX_VALUE) -->Line_27 $$ editor.getScrollingModel().scrollTo(editor.offsetToLogicalPosition(lowestOffset), ScrollType.MAKE_VISIBLE)[ CD ]
Line_13 $$ int lowestOffset = Integer.MAX_VALUE-->Line_27 $$ editor.getScrollingModel().scrollTo(editor.offsetToLogicalPosition(lowestOffset), ScrollType.MAKE_VISIBLE)[ FD ]
Line_30 $$ SwingUtilities.invokeLater(new Runnable() -->Line_35 $$ final String s = StringUtil.pluralize("match", list.size())[ CD ]
Line_18 $$ if (element.getContainingFile() == contextNode.getContainingFile()) -->Line_19 $$ lowestOffset = highlightElement(editor, element, cfg, lowestOffset)[ CD ]
Line_16 $$ if (o instanceof PsiElement) -->Line_22 $$ LOG.info("Don't know what to do with " + o + " in a list context")[ CD ]
Line_26 $$ if (cfg.isScrollToFirst() && lowestOffset != Integer.MAX_VALUE) -->Line_28 $$ editor.getCaretModel().moveToOffset(lowestOffset)[ CD ]
Line_14 $$ for (final Object o : list) -->Line_16 $$ if (o instanceof PsiElement) [ FD ]
