Line_2 $$ public void testDynamicQueryByPrimaryKeyExisting() throws Exception -->Line_5 $$ dynamicQuery.add(RestrictionsFactoryUtil.eq("moduleId", newModule.getModuleId()))[ CD ]
Line_6 $$ List<Module> result = _persistence.findWithDynamicQuery(dynamicQuery)-->Line_7 $$ Assert.assertEquals(1, result.size())[ FD ]
Line_2 $$ public void testDynamicQueryByPrimaryKeyExisting() throws Exception -->Line_6 $$ List<Module> result = _persistence.findWithDynamicQuery(dynamicQuery)[ CD ]
Line_2 $$ public void testDynamicQueryByPrimaryKeyExisting() throws Exception -->Line_9 $$ Assert.assertEquals(existingModule, newModule)[ CD ]
Line_3 $$ Module newModule = addModule()-->Line_9 $$ Assert.assertEquals(existingModule, newModule)[ FD ]
Line_2 $$ public void testDynamicQueryByPrimaryKeyExisting() throws Exception -->Line_3 $$ Module newModule = addModule()[ CD ]
Line_6 $$ List<Module> result = _persistence.findWithDynamicQuery(dynamicQuery)-->Line_8 $$ Module existingModule = result.get(0)[ FD ]
Line_2 $$ public void testDynamicQueryByPrimaryKeyExisting() throws Exception -->Line_8 $$ Module existingModule = result.get(0)[ CD ]
Line_8 $$ Module existingModule = result.get(0)-->Line_9 $$ Assert.assertEquals(existingModule, newModule)[ FD ]
Line_2 $$ public void testDynamicQueryByPrimaryKeyExisting() throws Exception -->Line_7 $$ Assert.assertEquals(1, result.size())[ CD ]
Line_3 $$ Module newModule = addModule()-->Line_5 $$ dynamicQuery.add(RestrictionsFactoryUtil.eq("moduleId", newModule.getModuleId()))[ FD ]
Line_4 $$ DynamicQuery dynamicQuery = DynamicQueryFactoryUtil.forClass(Module.class, _dynamicQueryClassLoader)-->Line_6 $$ List<Module> result = _persistence.findWithDynamicQuery(dynamicQuery)[ FD ]
Line_2 $$ public void testDynamicQueryByPrimaryKeyExisting() throws Exception -->Line_4 $$ DynamicQuery dynamicQuery = DynamicQueryFactoryUtil.forClass(Module.class, _dynamicQueryClassLoader)[ CD ]
Line_4 $$ DynamicQuery dynamicQuery = DynamicQueryFactoryUtil.forClass(Module.class, _dynamicQueryClassLoader)-->Line_5 $$ dynamicQuery.add(RestrictionsFactoryUtil.eq("moduleId", newModule.getModuleId()))[ FD ]
