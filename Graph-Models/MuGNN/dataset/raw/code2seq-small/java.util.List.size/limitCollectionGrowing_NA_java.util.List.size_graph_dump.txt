Line_6 $$ Expression expression = parser.parseExpression("foo[2]")-->Line_7 $$ expression.setValue(ctx, "2")[ FD ]
Line_3 $$ TestClass instance = new TestClass()-->Line_14 $$ assertThat(instance.getFoo().size(), equalTo(3))[ FD ]
Line_5 $$ SpelExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true, 3))-->Line_9 $$ expression = parser.parseExpression("foo[3]")[ FD ]
Line_6 $$ Expression expression = parser.parseExpression("foo[2]")-->Line_9 $$ expression = parser.parseExpression("foo[3]")[ FD ]
Line_3 $$ TestClass instance = new TestClass()-->Line_8 $$ assertThat(instance.getFoo().size(), equalTo(3))[ FD ]
Line_4 $$ StandardEvaluationContext ctx = new StandardEvaluationContext(instance)-->Line_7 $$ expression.setValue(ctx, "2")[ FD ]
Line_9 $$ expression = parser.parseExpression("foo[3]")-->Line_11 $$ expression.setValue(ctx, "3")[ FD ]
Line_5 $$ SpelExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true, 3))-->Line_6 $$ Expression expression = parser.parseExpression("foo[2]")[ FD ]
Line_2 $$ public void limitCollectionGrowing() throws Exception -->Line_9 $$ expression = parser.parseExpression("foo[3]")[ CD ]
Line_2 $$ public void limitCollectionGrowing() throws Exception -->Line_6 $$ Expression expression = parser.parseExpression("foo[2]")[ CD ]
Line_4 $$ StandardEvaluationContext ctx = new StandardEvaluationContext(instance)-->Line_11 $$ expression.setValue(ctx, "3")[ FD ]
Line_2 $$ public void limitCollectionGrowing() throws Exception -->Line_8 $$ assertThat(instance.getFoo().size(), equalTo(3))[ CD ]
Line_2 $$ public void limitCollectionGrowing() throws Exception -->Line_7 $$ expression.setValue(ctx, "2")[ CD ]
Line_2 $$ public void limitCollectionGrowing() throws Exception -->Line_5 $$ SpelExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true, 3))[ CD ]
Line_2 $$ public void limitCollectionGrowing() throws Exception -->Line_4 $$ StandardEvaluationContext ctx = new StandardEvaluationContext(instance)[ CD ]
Line_6 $$ Expression expression = parser.parseExpression("foo[2]")-->Line_11 $$ expression.setValue(ctx, "3")[ FD ]
Line_2 $$ public void limitCollectionGrowing() throws Exception -->Line_3 $$ TestClass instance = new TestClass()[ CD ]
