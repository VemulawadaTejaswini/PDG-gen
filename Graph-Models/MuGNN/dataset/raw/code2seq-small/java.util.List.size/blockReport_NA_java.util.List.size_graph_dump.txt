Line_16 $$ cmd = impl.blockReport(PBHelper.convert(request.getRegistration()), request.getBlockPoolId(), report)-->Line_21 $$ if (cmd != null) [ FD ]
Line_16 $$ cmd = impl.blockReport(PBHelper.convert(request.getRegistration()), request.getBlockPoolId(), report)-->Line_22 $$ builder.setCmd(PBHelper.convert(cmd))[ FD ]
Line_4 $$ DatanodeCommand cmd = null-->Line_21 $$ if (cmd != null) [ FD ]
Line_10 $$ for (int i = 0; i < blockIds.size(); i++) -->Line_11 $$ blocks[i] = blockIds.get(i)[ FD ]
Line_8 $$ List<Long> blockIds = s.getBlocksList()-->Line_10 $$ for (int i = 0; i < blockIds.size(); i++) [ FD ]
Line_4 $$ DatanodeCommand cmd = null-->Line_16 $$ cmd = impl.blockReport(PBHelper.convert(request.getRegistration()), request.getBlockPoolId(), report)[ FD ]
Line_20 $$ BlockReportResponseProto.Builder builder = BlockReportResponseProto.newBuilder()-->Line_24 $$ return builder.build()[ FD ]
Line_5 $$ StorageBlockReport[] report = new StorageBlockReport[request.getReportsCount()]-->Line_16 $$ cmd = impl.blockReport(PBHelper.convert(request.getRegistration()), request.getBlockPoolId(), report)[ FD ]
Line_8 $$ List<Long> blockIds = s.getBlocksList()-->Line_9 $$ long[] blocks = new long[blockIds.size()][ FD ]
Line_8 $$ List<Long> blockIds = s.getBlocksList()-->Line_11 $$ blocks[i] = blockIds.get(i)[ FD ]
Line_6 $$ int index = 0-->Line_13 $$ report[index++] = new StorageBlockReport(PBHelper.convert(s.getStorage()), blocks)[ FD ]
Line_20 $$ BlockReportResponseProto.Builder builder = BlockReportResponseProto.newBuilder()-->Line_22 $$ builder.setCmd(PBHelper.convert(cmd))[ FD ]
Line_7 $$ for (StorageBlockReportProto s : request.getReportsList()) -->Line_8 $$ List<Long> blockIds = s.getBlocksList()[ FD ]
Line_4 $$ DatanodeCommand cmd = null-->Line_22 $$ builder.setCmd(PBHelper.convert(cmd))[ FD ]
Line_7 $$ for (StorageBlockReportProto s : request.getReportsList()) -->Line_13 $$ report[index++] = new StorageBlockReport(PBHelper.convert(s.getStorage()), blocks)[ FD ]
Line_21 $$ if (cmd != null) -->Line_22 $$ builder.setCmd(PBHelper.convert(cmd))[ CD ]
Line_10 $$ for (int i = 0; i < blockIds.size(); i++) -->Line_11 $$ blocks[i] = blockIds.get(i)[ CD ]
