Line_15 $$ cmd = impl.blockReport(PBHelper.convert(request.getRegistration()), request.getBlockPoolId(), report)-->Line_20 $$ if (cmd != null) [ FD ]
Line_19 $$ BlockReportResponseProto.Builder builder = BlockReportResponseProto.newBuilder()-->Line_21 $$ builder.setCmd(PBHelper.convert(cmd))[ FD ]
Line_9 $$ for (int i = 0; i < blockIds.size(); i++) -->Line_10 $$ blocks[i] = blockIds.get(i)[ FD ]
Line_3 $$ DatanodeCommand cmd = null-->Line_15 $$ cmd = impl.blockReport(PBHelper.convert(request.getRegistration()), request.getBlockPoolId(), report)[ FD ]
Line_7 $$ List<Long> blockIds = s.getBlocksList()-->Line_8 $$ long[] blocks = new long[blockIds.size()][ FD ]
Line_4 $$ StorageBlockReport[] report = new StorageBlockReport[request.getReportsCount()]-->Line_15 $$ cmd = impl.blockReport(PBHelper.convert(request.getRegistration()), request.getBlockPoolId(), report)[ FD ]
Line_2 $$ public BlockReportResponseProto blockReport(RpcController controller, BlockReportRequestProto request) throws ServiceException -->Line_15 $$ cmd = impl.blockReport(PBHelper.convert(request.getRegistration()), request.getBlockPoolId(), report)[ FD ]
Line_7 $$ List<Long> blockIds = s.getBlocksList()-->Line_9 $$ for (int i = 0; i < blockIds.size(); i++) [ FD ]
Line_2 $$ public BlockReportResponseProto blockReport(RpcController controller, BlockReportRequestProto request) throws ServiceException -->Line_19 $$ BlockReportResponseProto.Builder builder = BlockReportResponseProto.newBuilder()[ CD ]
Line_3 $$ DatanodeCommand cmd = null-->Line_20 $$ if (cmd != null) [ FD ]
Line_20 $$ if (cmd != null) -->Line_21 $$ builder.setCmd(PBHelper.convert(cmd))[ CD ]
Line_2 $$ public BlockReportResponseProto blockReport(RpcController controller, BlockReportRequestProto request) throws ServiceException -->Line_3 $$ DatanodeCommand cmd = null[ CD ]
Line_3 $$ DatanodeCommand cmd = null-->Line_21 $$ builder.setCmd(PBHelper.convert(cmd))[ FD ]
Line_2 $$ public BlockReportResponseProto blockReport(RpcController controller, BlockReportRequestProto request) throws ServiceException -->Line_4 $$ StorageBlockReport[] report = new StorageBlockReport[request.getReportsCount()][ FD ]
Line_6 $$ for (StorageBlockReportProto s : request.getReportsList()) -->Line_7 $$ List<Long> blockIds = s.getBlocksList()[ FD ]
Line_9 $$ for (int i = 0; i < blockIds.size(); i++) -->Line_10 $$ blocks[i] = blockIds.get(i)[ CD ]
Line_15 $$ cmd = impl.blockReport(PBHelper.convert(request.getRegistration()), request.getBlockPoolId(), report)-->Line_21 $$ builder.setCmd(PBHelper.convert(cmd))[ FD ]
Line_2 $$ public BlockReportResponseProto blockReport(RpcController controller, BlockReportRequestProto request) throws ServiceException -->Line_20 $$ if (cmd != null) [ CD ]
Line_2 $$ public BlockReportResponseProto blockReport(RpcController controller, BlockReportRequestProto request) throws ServiceException -->Line_6 $$ for (StorageBlockReportProto s : request.getReportsList()) [ FD ]
Line_5 $$ int index = 0-->Line_12 $$ report[index++] = new StorageBlockReport(PBHelper.convert(s.getStorage()), blocks)[ FD ]
Line_2 $$ public BlockReportResponseProto blockReport(RpcController controller, BlockReportRequestProto request) throws ServiceException -->Line_23 $$ return builder.build()[ CD ]
Line_2 $$ public BlockReportResponseProto blockReport(RpcController controller, BlockReportRequestProto request) throws ServiceException -->Line_4 $$ StorageBlockReport[] report = new StorageBlockReport[request.getReportsCount()][ CD ]
Line_7 $$ List<Long> blockIds = s.getBlocksList()-->Line_10 $$ blocks[i] = blockIds.get(i)[ FD ]
Line_2 $$ public BlockReportResponseProto blockReport(RpcController controller, BlockReportRequestProto request) throws ServiceException -->Line_5 $$ int index = 0[ CD ]
Line_19 $$ BlockReportResponseProto.Builder builder = BlockReportResponseProto.newBuilder()-->Line_23 $$ return builder.build()[ FD ]
Line_6 $$ for (StorageBlockReportProto s : request.getReportsList()) -->Line_12 $$ report[index++] = new StorageBlockReport(PBHelper.convert(s.getStorage()), blocks)[ FD ]
