Line_154 $$ FilterMappingMetaData filterMapping = new FilterMappingMetaData()-->Line_155 $$ filterMapping.setFilterName(filter.getName())[ FD ]
Line_87 $$ if (urlPatterns.size() > 0) -->Line_89 $$ servletMappings.add(servletMapping)[ CD ]
Line_54 $$ Descriptions descriptions = getDescription(initParamDescription.asString())-->Line_136 $$ if (descriptions != null) [ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_259 $$ if (annotation.value() == null) [ FD ]
Line_238 $$ annotationMD = new AnnotationMetaData()-->Line_382 $$ annotationMD.setServletSecurity(servletSecurity)[ FD ]
Line_22 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_326 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_38 $$ AnnotationValue initParamsValue = annotation.value("initParams")-->Line_120 $$ if (initParamsValue != null) [ FD ]
Line_225 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_273 $$ if (annotations == null) [ FD ]
Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_285 $$ annotationMD = new AnnotationMetaData()[ FD ]
Line_22 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_111 $$ filter.setName(classInfo.toString())[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_145 $$ AnnotationValue descriptionValue = annotation.value("description")[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_330 $$ AnnotationValue httpConstraintValue = annotation.value()[ FD ]
Line_34 $$ AnnotationValue asyncSupported = annotation.value("asyncSupported")-->Line_36 $$ servlet.setAsyncSupported(asyncSupported.asBoolean())[ FD ]
Line_361 $$ AnnotationValue httpMethodConstraintERSValue = httpMethodConstraint.value("emptyRoleSemantic")-->Line_363 $$ methodConstraint.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(httpMethodConstraintERSValue.asEnum()))[ FD ]
Line_134 $$ if (initParamDescription != null) -->Line_136 $$ if (descriptions != null) [ CD ]
Line_81 $$ urlPatternsValue = annotation.value()-->Line_161 $$ for (String urlPattern : urlPatternsValue.asStringArray()) [ FD ]
Line_24 $$ AnnotationValue nameValue = annotation.value("name")-->Line_110 $$ if (nameValue == null || nameValue.asString().isEmpty()) [ FD ]
Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_306 $$ annotationMD.setMultipartConfig(multipartConfig)[ FD ]
Line_285 $$ annotationMD = new AnnotationMetaData()-->Line_325 $$ annotationMD = new AnnotationMetaData()[ FD ]
Line_150 $$ if (descriptionGroup != null) -->Line_151 $$ filter.setDescriptionGroup(descriptionGroup)[ CD ]
Line_204 $$ ListenerMetaData listener = new ListenerMetaData()-->Line_215 $$ listener.setDescriptionGroup(descriptionGroup)[ FD ]
Line_120 $$ if (initParamsValue != null) -->Line_122 $$ if (initParamsAnnotations != null && initParamsAnnotations.length > 0) [ CD ]
Line_333 $$ AnnotationInstance httpConstraint = httpConstraintValue.asNested()-->Line_342 $$ AnnotationValue rolesAllowedValue = httpConstraint.value("rolesAllowed")[ FD ]
Line_238 $$ annotationMD = new AnnotationMetaData()-->Line_284 $$ if (annotationMD == null) [ FD ]
Line_98 $$ if (webFilterAnnotations != null && webFilterAnnotations.size() > 0) -->Line_197 $$ metaData.setFilterMappings(filterMappings)[ CD ]
Line_53 $$ if (initParamDescription != null) -->Line_54 $$ Descriptions descriptions = getDescription(initParamDescription.asString())[ CD ]
Line_34 $$ AnnotationValue asyncSupported = annotation.value("asyncSupported")-->Line_117 $$ filter.setAsyncSupported(asyncSupported.asBoolean())[ FD ]
Line_50 $$ AnnotationValue initParamDescription = initParamsAnnotation.value("description")-->Line_134 $$ if (initParamDescription != null) [ FD ]
Line_42 $$ List<ParamValueMetaData> initParams = new ArrayList<ParamValueMetaData>()-->Line_59 $$ initParams.add(initParam)[ FD ]
Line_227 $$ annotations = new AnnotationsMetaData()-->Line_314 $$ annotations = new AnnotationsMetaData()[ FD ]
Line_271 $$ if (multipartConfigAnnotations != null && multipartConfigAnnotations.size() > 0) -->Line_273 $$ if (annotations == null) [ CD ]
Line_13 $$ if (webServletAnnotations != null && webServletAnnotations.size() > 0) -->Line_14 $$ ServletsMetaData servlets = new ServletsMetaData()[ CD ]
Line_350 $$ AnnotationValue httpMethodConstraintsValue = annotation.value("httpMethodConstraints")-->Line_352 $$ AnnotationInstance[] httpMethodConstraints = httpMethodConstraintsValue.asNestedArray()[ FD ]
Line_98 $$ if (webFilterAnnotations != null && webFilterAnnotations.size() > 0) -->Line_196 $$ metaData.setFilters(filters)[ CD ]
Line_69 $$ if (descriptionGroup != null) -->Line_70 $$ servlet.setDescriptionGroup(descriptionGroup)[ CD ]
Line_358 $$ if (httpMethodConstraintValue != null) -->Line_359 $$ methodConstraint.setMethod(httpMethodConstraintValue.asString())[ CD ]
Line_74 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_88 $$ servletMapping.setUrlPatterns(urlPatterns)[ FD ]
Line_333 $$ AnnotationInstance httpConstraint = httpConstraintValue.asNested()-->Line_338 $$ AnnotationValue httpConstraintTGValue = httpConstraint.value("transportGuarantee")[ FD ]
Line_289 $$ MultipartConfigMetaData multipartConfig = new MultipartConfigMetaData()-->Line_300 $$ multipartConfig.setMaxRequestSize(maxRequestSizeValue.asLong())[ FD ]
Line_157 $$ List<String> servletNames = new ArrayList<String>()-->Line_180 $$ if (servletNames.size() > 0) [ FD ]
Line_333 $$ AnnotationInstance httpConstraint = httpConstraintValue.asNested()-->Line_334 $$ AnnotationValue httpConstraintERSValue = httpConstraint.value()[ FD ]
Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_284 $$ if (annotationMD == null) [ FD ]
Line_284 $$ if (annotationMD == null) -->Line_287 $$ annotations.add(annotationMD)[ CD ]
Line_31 $$ if (loadOnStartup != null && loadOnStartup.asInt() >= 0) -->Line_32 $$ servlet.setLoadOnStartupInt(loadOnStartup.asInt())[ CD ]
Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_287 $$ annotations.add(annotationMD)[ FD ]
Line_285 $$ annotationMD = new AnnotationMetaData()-->Line_287 $$ annotations.add(annotationMD)[ FD ]
Line_24 $$ AnnotationValue nameValue = annotation.value("name")-->Line_113 $$ filter.setName(nameValue.asString())[ FD ]
Line_254 $$ if (securityRoles == null) -->Line_256 $$ metaData.setSecurityRoles(securityRoles)[ CD ]
Line_46 $$ AnnotationValue initParamValue = initParamsAnnotation.value()-->Line_52 $$ initParam.setParamValue(initParamValue.asString())[ FD ]
Line_22 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_283 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_65 $$ AnnotationValue displayNameValue = annotation.value("displayName")[ FD ]
Line_30 $$ AnnotationValue loadOnStartup = annotation.value("loadOnStartup")-->Line_31 $$ if (loadOnStartup != null && loadOnStartup.asInt() >= 0) [ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_318 $$ AnnotationTarget target = annotation.target()[ FD ]
Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_238 $$ annotationMD = new AnnotationMetaData()[ FD ]
Line_22 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_210 $$ listener.setListenerClass(classInfo.toString())[ FD ]
Line_237 $$ if (annotationMD == null) -->Line_238 $$ annotationMD = new AnnotationMetaData()[ CD ]
Line_75 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_167 $$ for (String urlPattern : urlPatternsValue.asStringArray()) [ FD ]
Line_15 $$ List<ServletMappingMetaData> servletMappings = new ArrayList<ServletMappingMetaData>()-->Line_94 $$ metaData.setServletMappings(servletMappings)[ FD ]
Line_274 $$ annotations = new AnnotationsMetaData()-->Line_327 $$ annotations.add(annotationMD)[ FD ]
Line_176 $$ for (String servletName : servletNamesValue.asStringArray()) -->Line_177 $$ servletNames.add(servletName)[ FD ]
Line_357 $$ AnnotationValue httpMethodConstraintValue = httpMethodConstraint.value()-->Line_359 $$ methodConstraint.setMethod(httpMethodConstraintValue.asString())[ FD ]
Line_44 $$ ParamValueMetaData initParam = new ParamValueMetaData()-->Line_59 $$ initParams.add(initParam)[ FD ]
Line_342 $$ AnnotationValue rolesAllowedValue = httpConstraint.value("rolesAllowed")-->Line_343 $$ if (rolesAllowedValue != null) [ FD ]
Line_165 $$ urlPatternsValue = annotation.value()-->Line_167 $$ for (String urlPattern : urlPatternsValue.asStringArray()) [ FD ]
Line_289 $$ MultipartConfigMetaData multipartConfig = new MultipartConfigMetaData()-->Line_304 $$ multipartConfig.setFileSizeThreshold(fileSizeThresholdValue.asInt())[ FD ]
Line_331 $$ List<String> rolesAllowed = new ArrayList<String>()-->Line_376 $$ methodConstraint.setRolesAllowed(rolesAllowed)[ FD ]
Line_74 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_87 $$ if (urlPatterns.size() > 0) [ FD ]
Line_238 $$ annotationMD = new AnnotationMetaData()-->Line_325 $$ annotationMD = new AnnotationMetaData()[ FD ]
Line_225 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_314 $$ annotations = new AnnotationsMetaData()[ FD ]
Line_110 $$ if (nameValue == null || nameValue.asString().isEmpty()) -->Line_113 $$ filter.setName(nameValue.asString())[ CD ]
Line_285 $$ annotationMD = new AnnotationMetaData()-->Line_286 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_331 $$ List<String> rolesAllowed = new ArrayList<String>()-->Line_345 $$ rolesAllowed.add(role)[ FD ]
Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_286 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_75 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_76 $$ if (urlPatternsValue != null) [ FD ]
Line_298 $$ AnnotationValue maxRequestSizeValue = annotation.value("maxRequestSize")-->Line_299 $$ if (maxRequestSizeValue != null && maxRequestSizeValue.asLong() != -1L) [ FD ]
Line_18 $$ AnnotationTarget target = annotation.target()-->Line_322 $$ ClassInfo classInfo = ClassInfo.class.cast(target)[ FD ]
Line_116 $$ if (asyncSupported != null) -->Line_117 $$ filter.setAsyncSupported(asyncSupported.asBoolean())[ CD ]
Line_68 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())-->Line_214 $$ if (descriptionGroup != null) [ FD ]
Line_158 $$ List<DispatcherType> dispatchers = new ArrayList<DispatcherType>()-->Line_189 $$ if (dispatchers.size() > 0) [ FD ]
Line_225 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_275 $$ metaData.setAnnotations(annotations)[ FD ]
Line_329 $$ ServletSecurityMetaData servletSecurity = new ServletSecurityMetaData()-->Line_340 $$ servletSecurity.setTransportGuarantee(TransportGuaranteeType.valueOf(httpConstraintTGValue.asEnum()))[ FD ]
Line_15 $$ List<ServletMappingMetaData> servletMappings = new ArrayList<ServletMappingMetaData>()-->Line_89 $$ servletMappings.add(servletMapping)[ FD ]
Line_74 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_171 $$ if (urlPatterns.size() > 0) [ FD ]
Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_324 $$ if (annotationMD == null) [ FD ]
Line_157 $$ List<String> servletNames = new ArrayList<String>()-->Line_177 $$ servletNames.add(servletName)[ FD ]
Line_313 $$ if (annotations == null) -->Line_315 $$ metaData.setAnnotations(annotations)[ CD ]
Line_329 $$ ServletSecurityMetaData servletSecurity = new ServletSecurityMetaData()-->Line_349 $$ servletSecurity.setRolesAllowed(rolesAllowed)[ FD ]
Line_225 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_313 $$ if (annotations == null) [ FD ]
Line_238 $$ annotationMD = new AnnotationMetaData()-->Line_286 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_302 $$ AnnotationValue fileSizeThresholdValue = annotation.value("fileSizeThreshold")-->Line_303 $$ if (fileSizeThresholdValue != null && fileSizeThresholdValue.asInt() != 0) [ FD ]
Line_44 $$ ParamValueMetaData initParam = new ParamValueMetaData()-->Line_52 $$ initParam.setParamValue(initParamValue.asString())[ FD ]
Line_324 $$ if (annotationMD == null) -->Line_325 $$ annotationMD = new AnnotationMetaData()[ CD ]
Line_22 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_108 $$ filter.setFilterClass(classInfo.toString())[ FD ]
Line_294 $$ AnnotationValue maxFileSizeValue = annotation.value("maxFileSize")-->Line_295 $$ if (maxFileSizeValue != null && maxFileSizeValue.asLong() != -1L) [ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_38 $$ AnnotationValue initParamsValue = annotation.value("initParams")[ FD ]
Line_18 $$ AnnotationTarget target = annotation.target()-->Line_48 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidWebInitParamAnnotation(target))[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_174 $$ AnnotationValue servletNamesValue = annotation.value("servletNames")[ FD ]
Line_75 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_161 $$ for (String urlPattern : urlPatternsValue.asStringArray()) [ FD ]
Line_212 $$ if (descriptionValue != null) -->Line_214 $$ if (descriptionGroup != null) [ CD ]
Line_17 $$ ServletMetaData servlet = new ServletMetaData()-->Line_91 $$ servlets.add(servlet)[ FD ]
Line_254 $$ if (securityRoles == null) -->Line_255 $$ securityRoles = new SecurityRolesMetaData()[ CD ]
Line_284 $$ if (annotationMD == null) -->Line_286 $$ annotationMD.setClassName(classInfo.toString())[ CD ]
Line_274 $$ annotations = new AnnotationsMetaData()-->Line_314 $$ annotations = new AnnotationsMetaData()[ FD ]
Line_356 $$ HttpMethodConstraintMetaData methodConstraint = new HttpMethodConstraintMetaData()-->Line_377 $$ methodConstraints.add(methodConstraint)[ FD ]
Line_253 $$ SecurityRolesMetaData securityRoles = metaData.getSecurityRoles()-->Line_265 $$ securityRoles.add(sr)[ FD ]
Line_38 $$ AnnotationValue initParamsValue = annotation.value("initParams")-->Line_40 $$ AnnotationInstance[] initParamsAnnotations = initParamsValue.asNestedArray()[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_205 $$ AnnotationTarget target = annotation.target()[ FD ]
Line_30 $$ AnnotationValue loadOnStartup = annotation.value("loadOnStartup")-->Line_32 $$ servlet.setLoadOnStartupInt(loadOnStartup.asInt())[ FD ]
Line_18 $$ AnnotationTarget target = annotation.target()-->Line_280 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidMultipartConfigAnnotation(target))[ FD ]
Line_18 $$ AnnotationTarget target = annotation.target()-->Line_320 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidServletSecurityAnnotation(target))[ FD ]
Line_18 $$ AnnotationTarget target = annotation.target()-->Line_282 $$ ClassInfo classInfo = ClassInfo.class.cast(target)[ FD ]
Line_154 $$ FilterMappingMetaData filterMapping = new FilterMappingMetaData()-->Line_172 $$ filterMapping.setUrlPatterns(urlPatterns)[ FD ]
Line_263 $$ SecurityRoleMetaData sr = new SecurityRoleMetaData()-->Line_265 $$ securityRoles.add(sr)[ FD ]
Line_227 $$ annotations = new AnnotationsMetaData()-->Line_273 $$ if (annotations == null) [ FD ]
Line_284 $$ if (annotationMD == null) -->Line_285 $$ annotationMD = new AnnotationMetaData()[ CD ]
Line_74 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_172 $$ filterMapping.setUrlPatterns(urlPatterns)[ FD ]
Line_18 $$ AnnotationTarget target = annotation.target()-->Line_105 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidWebFilterAnnotation(target))[ FD ]
Line_13 $$ if (webServletAnnotations != null && webServletAnnotations.size() > 0) -->Line_15 $$ List<ServletMappingMetaData> servletMappings = new ArrayList<ServletMappingMetaData>()[ CD ]
Line_238 $$ annotationMD = new AnnotationMetaData()-->Line_287 $$ annotations.add(annotationMD)[ FD ]
Line_214 $$ if (descriptionGroup != null) -->Line_215 $$ listener.setDescriptionGroup(descriptionGroup)[ CD ]
Line_10 $$ Web30MetaData metaData = new Web30MetaData()-->Line_312 $$ AnnotationsMetaData annotations = metaData.getAnnotations()[ FD ]
Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_327 $$ annotations.add(annotationMD)[ FD ]
Line_68 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())-->Line_151 $$ filter.setDescriptionGroup(descriptionGroup)[ FD ]
Line_41 $$ if (initParamsAnnotations != null && initParamsAnnotations.length > 0) -->Line_61 $$ servlet.setInitParam(initParams)[ CD ]
Line_355 $$ for (AnnotationInstance httpMethodConstraint : httpMethodConstraints) -->Line_357 $$ AnnotationValue httpMethodConstraintValue = httpMethodConstraint.value()[ FD ]
Line_72 $$ ServletMappingMetaData servletMapping = new ServletMappingMetaData()-->Line_88 $$ servletMapping.setUrlPatterns(urlPatterns)[ FD ]
Line_355 $$ for (AnnotationInstance httpMethodConstraint : httpMethodConstraints) -->Line_369 $$ AnnotationValue rolesAllowedValue = httpMethodConstraint.value("rolesAllowed")[ FD ]
Line_189 $$ if (dispatchers.size() > 0) -->Line_190 $$ filterMapping.setDispatchers(dispatchers)[ CD ]
Line_224 $$ if (runAsAnnotations != null && runAsAnnotations.size() > 0) -->Line_225 $$ AnnotationsMetaData annotations = metaData.getAnnotations()[ CD ]
Line_273 $$ if (annotations == null) -->Line_275 $$ metaData.setAnnotations(annotations)[ CD ]
Line_13 $$ if (webServletAnnotations != null && webServletAnnotations.size() > 0) -->Line_94 $$ metaData.setServletMappings(servletMappings)[ CD ]
Line_18 $$ AnnotationTarget target = annotation.target()-->Line_107 $$ ClassInfo classInfo = ClassInfo.class.cast(target)[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_103 $$ AnnotationTarget target = annotation.target()[ FD ]
Line_332 $$ if (httpConstraintValue != null) -->Line_343 $$ if (rolesAllowedValue != null) [ CD ]
Line_102 $$ FilterMetaData filter = new FilterMetaData()-->Line_155 $$ filterMapping.setFilterName(filter.getName())[ FD ]
Line_42 $$ List<ParamValueMetaData> initParams = new ArrayList<ParamValueMetaData>()-->Line_61 $$ servlet.setInitParam(initParams)[ FD ]
Line_102 $$ FilterMetaData filter = new FilterMetaData()-->Line_111 $$ filter.setName(classInfo.toString())[ FD ]
Line_100 $$ List<FilterMappingMetaData> filterMappings = new ArrayList<FilterMappingMetaData>()-->Line_193 $$ filterMappings.add(filterMapping)[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_159 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")[ FD ]
Line_201 $$ if (webListenerAnnotations != null && webListenerAnnotations.size() > 0) -->Line_220 $$ metaData.setListeners(listeners)[ CD ]
Line_332 $$ if (httpConstraintValue != null) -->Line_342 $$ AnnotationValue rolesAllowedValue = httpConstraint.value("rolesAllowed")[ CD ]
Line_10 $$ Web30MetaData metaData = new Web30MetaData()-->Line_272 $$ AnnotationsMetaData annotations = metaData.getAnnotations()[ FD ]
Line_74 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_192 $$ if (urlPatterns.size() > 0 || servletNames.size() > 0) [ FD ]
Line_10 $$ Web30MetaData metaData = new Web30MetaData()-->Line_225 $$ AnnotationsMetaData annotations = metaData.getAnnotations()[ FD ]
Line_39 $$ if (initParamsValue != null) -->Line_40 $$ AnnotationInstance[] initParamsAnnotations = initParamsValue.asNestedArray()[ CD ]
Line_99 $$ FiltersMetaData filters = new FiltersMetaData()-->Line_153 $$ filters.add(filter)[ FD ]
Line_39 $$ if (initParamsValue != null) -->Line_41 $$ if (initParamsAnnotations != null && initParamsAnnotations.length > 0) [ CD ]
Line_314 $$ annotations = new AnnotationsMetaData()-->Line_315 $$ metaData.setAnnotations(annotations)[ FD ]
Line_253 $$ SecurityRolesMetaData securityRoles = metaData.getSecurityRoles()-->Line_255 $$ securityRoles = new SecurityRolesMetaData()[ FD ]
Line_17 $$ ServletMetaData servlet = new ServletMetaData()-->Line_73 $$ servletMapping.setServletName(servlet.getName())[ FD ]
Line_81 $$ urlPatternsValue = annotation.value()-->Line_83 $$ for (String urlPattern : urlPatternsValue.asStringArray()) [ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_290 $$ AnnotationValue locationValue = annotation.value("location")[ FD ]
Line_331 $$ List<String> rolesAllowed = new ArrayList<String>()-->Line_370 $$ rolesAllowed = new ArrayList<String>()[ FD ]
Line_10 $$ Web30MetaData metaData = new Web30MetaData()-->Line_275 $$ metaData.setAnnotations(annotations)[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_81 $$ urlPatternsValue = annotation.value()[ FD ]
Line_98 $$ if (webFilterAnnotations != null && webFilterAnnotations.size() > 0) -->Line_100 $$ List<FilterMappingMetaData> filterMappings = new ArrayList<FilterMappingMetaData>()[ CD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_350 $$ AnnotationValue httpMethodConstraintsValue = annotation.value("httpMethodConstraints")[ FD ]
Line_245 $$ RunAsMetaData runAs = new RunAsMetaData()-->Line_247 $$ annotationMD.setRunAs(runAs)[ FD ]
Line_22 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_286 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_102 $$ FilterMetaData filter = new FilterMetaData()-->Line_153 $$ filters.add(filter)[ FD ]
Line_237 $$ if (annotationMD == null) -->Line_239 $$ annotationMD.setClassName(classInfo.toString())[ CD ]
Line_331 $$ List<String> rolesAllowed = new ArrayList<String>()-->Line_373 $$ rolesAllowed.add(role)[ FD ]
Line_299 $$ if (maxRequestSizeValue != null && maxRequestSizeValue.asLong() != -1L) -->Line_300 $$ multipartConfig.setMaxRequestSize(maxRequestSizeValue.asLong())[ CD ]
Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_240 $$ annotations.add(annotationMD)[ FD ]
Line_314 $$ annotations = new AnnotationsMetaData()-->Line_327 $$ annotations.add(annotationMD)[ FD ]
Line_353 $$ if (httpMethodConstraints.length > 0) -->Line_379 $$ servletSecurity.setHttpMethodConstraints(methodConstraints)[ CD ]
Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_382 $$ annotationMD.setServletSecurity(servletSecurity)[ FD ]
Line_74 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_162 $$ urlPatterns.add(urlPattern)[ FD ]
Line_34 $$ AnnotationValue asyncSupported = annotation.value("asyncSupported")-->Line_116 $$ if (asyncSupported != null) [ FD ]
Line_54 $$ Descriptions descriptions = getDescription(initParamDescription.asString())-->Line_55 $$ if (descriptions != null) [ FD ]
Line_274 $$ annotations = new AnnotationsMetaData()-->Line_323 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_110 $$ if (nameValue == null || nameValue.asString().isEmpty()) -->Line_111 $$ filter.setName(classInfo.toString())[ CD ]
Line_226 $$ if (annotations == null) -->Line_227 $$ annotations = new AnnotationsMetaData()[ CD ]
Line_238 $$ annotationMD = new AnnotationMetaData()-->Line_240 $$ annotations.add(annotationMD)[ FD ]
Line_303 $$ if (fileSizeThresholdValue != null && fileSizeThresholdValue.asInt() != 0) -->Line_304 $$ multipartConfig.setFileSizeThreshold(fileSizeThresholdValue.asInt())[ CD ]
Line_68 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())-->Line_150 $$ if (descriptionGroup != null) [ FD ]
Line_18 $$ AnnotationTarget target = annotation.target()-->Line_20 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidWebServletAnnotation(target))[ FD ]
Line_311 $$ if (servletSecurityAnnotations != null && servletSecurityAnnotations.size() > 0) -->Line_313 $$ if (annotations == null) [ CD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_148 $$ AnnotationValue largeIconValue = annotation.value("largeIcon")[ FD ]
Line_81 $$ urlPatternsValue = annotation.value()-->Line_167 $$ for (String urlPattern : urlPatternsValue.asStringArray()) [ FD ]
Line_365 $$ AnnotationValue httpMethodConstraintTGValue = httpMethodConstraint.value("transportGuarantee")-->Line_367 $$ methodConstraint.setTransportGuarantee(TransportGuaranteeType.valueOf(httpMethodConstraintTGValue.asEnum()))[ FD ]
Line_13 $$ if (webServletAnnotations != null && webServletAnnotations.size() > 0) -->Line_93 $$ metaData.setServlets(servlets)[ CD ]
Line_238 $$ annotationMD = new AnnotationMetaData()-->Line_324 $$ if (annotationMD == null) [ FD ]
Line_17 $$ ServletMetaData servlet = new ServletMetaData()-->Line_32 $$ servlet.setLoadOnStartupInt(loadOnStartup.asInt())[ FD ]
Line_10 $$ Web30MetaData metaData = new Web30MetaData()-->Line_253 $$ SecurityRolesMetaData securityRoles = metaData.getSecurityRoles()[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_231 $$ AnnotationTarget target = annotation.target()[ FD ]
Line_224 $$ if (runAsAnnotations != null && runAsAnnotations.size() > 0) -->Line_226 $$ if (annotations == null) [ CD ]
Line_10 $$ Web30MetaData metaData = new Web30MetaData()-->Line_228 $$ metaData.setAnnotations(annotations)[ FD ]
Line_100 $$ List<FilterMappingMetaData> filterMappings = new ArrayList<FilterMappingMetaData>()-->Line_197 $$ metaData.setFilterMappings(filterMappings)[ FD ]
Line_75 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_81 $$ urlPatternsValue = annotation.value()[ FD ]
Line_154 $$ FilterMappingMetaData filterMapping = new FilterMappingMetaData()-->Line_190 $$ filterMapping.setDispatchers(dispatchers)[ FD ]
Line_34 $$ AnnotationValue asyncSupported = annotation.value("asyncSupported")-->Line_35 $$ if (asyncSupported != null) [ FD ]
Line_342 $$ AnnotationValue rolesAllowedValue = httpConstraint.value("rolesAllowed")-->Line_371 $$ if (rolesAllowedValue != null) [ FD ]
Line_263 $$ SecurityRoleMetaData sr = new SecurityRoleMetaData()-->Line_264 $$ sr.setRoleName(role)[ FD ]
Line_102 $$ FilterMetaData filter = new FilterMetaData()-->Line_108 $$ filter.setFilterClass(classInfo.toString())[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_246 $$ runAs.setRoleName(annotation.value().asString())[ FD ]
Line_74 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_78 $$ urlPatterns.add(urlPattern)[ FD ]
Line_204 $$ ListenerMetaData listener = new ListenerMetaData()-->Line_218 $$ listeners.add(listener)[ FD ]
Line_274 $$ annotations = new AnnotationsMetaData()-->Line_313 $$ if (annotations == null) [ FD ]
Line_183 $$ AnnotationValue dispatcherTypesValue = annotation.value("dispatcherTypes")-->Line_185 $$ for (String dispatcherValue : dispatcherTypesValue.asEnumArray()) [ FD ]
Line_238 $$ annotationMD = new AnnotationMetaData()-->Line_327 $$ annotations.add(annotationMD)[ FD ]
Line_227 $$ annotations = new AnnotationsMetaData()-->Line_275 $$ metaData.setAnnotations(annotations)[ FD ]
Line_75 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_77 $$ for (String urlPattern : urlPatternsValue.asStringArray()) [ FD ]
Line_44 $$ ParamValueMetaData initParam = new ParamValueMetaData()-->Line_132 $$ initParam.setParamName(initParamName.asString())[ FD ]
Line_81 $$ urlPatternsValue = annotation.value()-->Line_165 $$ urlPatternsValue = annotation.value()[ FD ]
Line_43 $$ for (AnnotationInstance initParamsAnnotation : initParamsAnnotations) -->Line_131 $$ AnnotationValue initParamDescription = initParamsAnnotation.value("description")[ FD ]
Line_285 $$ annotationMD = new AnnotationMetaData()-->Line_326 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_290 $$ AnnotationValue locationValue = annotation.value("location")-->Line_291 $$ if (locationValue != null && locationValue.asString().length() > 0) [ FD ]
Line_66 $$ AnnotationValue smallIconValue = annotation.value("smallIcon")-->Line_68 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())[ FD ]
Line_10 $$ Web30MetaData metaData = new Web30MetaData()-->Line_94 $$ metaData.setServletMappings(servletMappings)[ FD ]
Line_351 $$ if (httpMethodConstraintsValue != null) -->Line_352 $$ AnnotationInstance[] httpMethodConstraints = httpMethodConstraintsValue.asNestedArray()[ CD ]
Line_253 $$ SecurityRolesMetaData securityRoles = metaData.getSecurityRoles()-->Line_256 $$ metaData.setSecurityRoles(securityRoles)[ FD ]
Line_44 $$ ParamValueMetaData initParam = new ParamValueMetaData()-->Line_51 $$ initParam.setParamName(initParamName.asString())[ FD ]
Line_10 $$ Web30MetaData metaData = new Web30MetaData()-->Line_196 $$ metaData.setFilters(filters)[ FD ]
Line_136 $$ if (descriptions != null) -->Line_137 $$ initParam.setDescriptions(descriptions)[ CD ]
Line_87 $$ if (urlPatterns.size() > 0) -->Line_88 $$ servletMapping.setUrlPatterns(urlPatterns)[ CD ]
Line_17 $$ ServletMetaData servlet = new ServletMetaData()-->Line_23 $$ servlet.setServletClass(classInfo.toString())[ FD ]
Line_158 $$ List<DispatcherType> dispatchers = new ArrayList<DispatcherType>()-->Line_190 $$ filterMapping.setDispatchers(dispatchers)[ FD ]
Line_154 $$ FilterMappingMetaData filterMapping = new FilterMappingMetaData()-->Line_181 $$ filterMapping.setServletNames(servletNames)[ FD ]
Line_154 $$ FilterMappingMetaData filterMapping = new FilterMappingMetaData()-->Line_193 $$ filterMappings.add(filterMapping)[ FD ]
Line_17 $$ ServletMetaData servlet = new ServletMetaData()-->Line_28 $$ servlet.setName(nameValue.asString())[ FD ]
Line_44 $$ ParamValueMetaData initParam = new ParamValueMetaData()-->Line_137 $$ initParam.setDescriptions(descriptions)[ FD ]
Line_325 $$ annotationMD = new AnnotationMetaData()-->Line_382 $$ annotationMD.setServletSecurity(servletSecurity)[ FD ]
Line_329 $$ ServletSecurityMetaData servletSecurity = new ServletSecurityMetaData()-->Line_379 $$ servletSecurity.setHttpMethodConstraints(methodConstraints)[ FD ]
Line_183 $$ AnnotationValue dispatcherTypesValue = annotation.value("dispatcherTypes")-->Line_184 $$ if (dispatcherTypesValue != null) [ FD ]
Line_38 $$ AnnotationValue initParamsValue = annotation.value("initParams")-->Line_121 $$ AnnotationInstance[] initParamsAnnotations = initParamsValue.asNestedArray()[ FD ]
Line_74 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_168 $$ urlPatterns.add(urlPattern)[ FD ]
Line_332 $$ if (httpConstraintValue != null) -->Line_333 $$ AnnotationInstance httpConstraint = httpConstraintValue.asNested()[ CD ]
Line_22 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_323 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_102 $$ FilterMetaData filter = new FilterMetaData()-->Line_142 $$ filter.setInitParam(initParams)[ FD ]
Line_25 $$ if (nameValue == null || nameValue.asString().isEmpty()) -->Line_26 $$ servlet.setName(classInfo.toString())[ CD ]
Line_35 $$ if (asyncSupported != null) -->Line_36 $$ servlet.setAsyncSupported(asyncSupported.asBoolean())[ CD ]
Line_225 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_327 $$ annotations.add(annotationMD)[ FD ]
Line_332 $$ if (httpConstraintValue != null) -->Line_339 $$ if (httpConstraintTGValue != null) [ CD ]
Line_75 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_83 $$ for (String urlPattern : urlPatternsValue.asStringArray()) [ FD ]
Line_334 $$ AnnotationValue httpConstraintERSValue = httpConstraint.value()-->Line_335 $$ if (httpConstraintERSValue != null) [ FD ]
Line_325 $$ annotationMD = new AnnotationMetaData()-->Line_326 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_18 $$ AnnotationTarget target = annotation.target()-->Line_22 $$ ClassInfo classInfo = ClassInfo.class.cast(target)[ FD ]
Line_122 $$ if (initParamsAnnotations != null && initParamsAnnotations.length > 0) -->Line_142 $$ filter.setInitParam(initParams)[ CD ]
Line_289 $$ MultipartConfigMetaData multipartConfig = new MultipartConfigMetaData()-->Line_306 $$ annotationMD.setMultipartConfig(multipartConfig)[ FD ]
Line_334 $$ AnnotationValue httpConstraintERSValue = httpConstraint.value()-->Line_336 $$ servletSecurity.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(httpConstraintERSValue.asEnum()))[ FD ]
Line_313 $$ if (annotations == null) -->Line_314 $$ annotations = new AnnotationsMetaData()[ CD ]
Line_227 $$ annotations = new AnnotationsMetaData()-->Line_327 $$ annotations.add(annotationMD)[ FD ]
Line_67 $$ AnnotationValue largeIconValue = annotation.value("largeIcon")-->Line_149 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())[ FD ]
Line_64 $$ AnnotationValue descriptionValue = annotation.value("description")-->Line_213 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup(descriptionValue.asString())[ FD ]
Line_289 $$ MultipartConfigMetaData multipartConfig = new MultipartConfigMetaData()-->Line_296 $$ multipartConfig.setMaxFileSize(maxFileSizeValue.asLong())[ FD ]
Line_77 $$ for (String urlPattern : urlPatternsValue.asStringArray()) -->Line_162 $$ urlPatterns.add(urlPattern)[ FD ]
Line_227 $$ annotations = new AnnotationsMetaData()-->Line_313 $$ if (annotations == null) [ FD ]
Line_274 $$ annotations = new AnnotationsMetaData()-->Line_287 $$ annotations.add(annotationMD)[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_165 $$ urlPatternsValue = annotation.value()[ FD ]
Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_326 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_238 $$ annotationMD = new AnnotationMetaData()-->Line_306 $$ annotationMD.setMultipartConfig(multipartConfig)[ FD ]
Line_225 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_323 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_146 $$ AnnotationValue displayNameValue = annotation.value("displayName")[ FD ]
Line_314 $$ annotations = new AnnotationsMetaData()-->Line_323 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_81 $$ urlPatternsValue = annotation.value()-->Line_160 $$ if (urlPatternsValue != null) [ FD ]
Line_81 $$ urlPatternsValue = annotation.value()-->Line_82 $$ if (urlPatternsValue != null) [ FD ]
Line_42 $$ List<ParamValueMetaData> initParams = new ArrayList<ParamValueMetaData>()-->Line_142 $$ filter.setInitParam(initParams)[ FD ]
Line_75 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_166 $$ if (urlPatternsValue != null) [ FD ]
Line_226 $$ if (annotations == null) -->Line_228 $$ metaData.setAnnotations(annotations)[ CD ]
Line_10 $$ Web30MetaData metaData = new Web30MetaData()-->Line_256 $$ metaData.setSecurityRoles(securityRoles)[ FD ]
Line_17 $$ ServletMetaData servlet = new ServletMetaData()-->Line_26 $$ servlet.setName(classInfo.toString())[ FD ]
Line_77 $$ for (String urlPattern : urlPatternsValue.asStringArray()) -->Line_168 $$ urlPatterns.add(urlPattern)[ FD ]
Line_285 $$ annotationMD = new AnnotationMetaData()-->Line_382 $$ annotationMD.setServletSecurity(servletSecurity)[ FD ]
Line_22 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_26 $$ servlet.setName(classInfo.toString())[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_260 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidDeclareRolesAnnotation(annotation.target()))[ FD ]
Line_274 $$ annotations = new AnnotationsMetaData()-->Line_283 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_109 $$ AnnotationValue nameValue = annotation.value("filterName")[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_298 $$ AnnotationValue maxRequestSizeValue = annotation.value("maxRequestSize")[ FD ]
Line_74 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_84 $$ urlPatterns.add(urlPattern)[ FD ]
Line_356 $$ HttpMethodConstraintMetaData methodConstraint = new HttpMethodConstraintMetaData()-->Line_376 $$ methodConstraint.setRolesAllowed(rolesAllowed)[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_66 $$ AnnotationValue smallIconValue = annotation.value("smallIcon")[ FD ]
Line_225 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_226 $$ if (annotations == null) [ FD ]
Line_291 $$ if (locationValue != null && locationValue.asString().length() > 0) -->Line_292 $$ multipartConfig.setLocation(locationValue.asString())[ CD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_34 $$ AnnotationValue asyncSupported = annotation.value("asyncSupported")[ FD ]
Line_18 $$ AnnotationTarget target = annotation.target()-->Line_129 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidWebInitParamAnnotation(target))[ FD ]
Line_204 $$ ListenerMetaData listener = new ListenerMetaData()-->Line_210 $$ listener.setListenerClass(classInfo.toString())[ FD ]
Line_324 $$ if (annotationMD == null) -->Line_327 $$ annotations.add(annotationMD)[ CD ]
Line_339 $$ if (httpConstraintTGValue != null) -->Line_340 $$ servletSecurity.setTransportGuarantee(TransportGuaranteeType.valueOf(httpConstraintTGValue.asEnum()))[ CD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_262 $$ for (String role : annotation.value().asStringArray()) [ FD ]
Line_192 $$ if (urlPatterns.size() > 0 || servletNames.size() > 0) -->Line_193 $$ filterMappings.add(filterMapping)[ CD ]
Line_262 $$ for (String role : annotation.value().asStringArray()) -->Line_264 $$ sr.setRoleName(role)[ FD ]
Line_22 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_239 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_46 $$ AnnotationValue initParamValue = initParamsAnnotation.value()-->Line_133 $$ initParam.setParamValue(initParamValue.asString())[ FD ]
Line_330 $$ AnnotationValue httpConstraintValue = annotation.value()-->Line_333 $$ AnnotationInstance httpConstraint = httpConstraintValue.asNested()[ FD ]
Line_67 $$ AnnotationValue largeIconValue = annotation.value("largeIcon")-->Line_68 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())[ FD ]
Line_227 $$ annotations = new AnnotationsMetaData()-->Line_228 $$ metaData.setAnnotations(annotations)[ FD ]
Line_102 $$ FilterMetaData filter = new FilterMetaData()-->Line_151 $$ filter.setDescriptionGroup(descriptionGroup)[ FD ]
Line_289 $$ MultipartConfigMetaData multipartConfig = new MultipartConfigMetaData()-->Line_292 $$ multipartConfig.setLocation(locationValue.asString())[ FD ]
Line_342 $$ AnnotationValue rolesAllowedValue = httpConstraint.value("rolesAllowed")-->Line_372 $$ for (String role : rolesAllowedValue.asStringArray()) [ FD ]
Line_14 $$ ServletsMetaData servlets = new ServletsMetaData()-->Line_91 $$ servlets.add(servlet)[ FD ]
Line_43 $$ for (AnnotationInstance initParamsAnnotation : initParamsAnnotations) -->Line_50 $$ AnnotationValue initParamDescription = initParamsAnnotation.value("description")[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_119 $$ AnnotationValue initParamsValue = annotation.value("initParams")[ FD ]
Line_355 $$ for (AnnotationInstance httpMethodConstraint : httpMethodConstraints) -->Line_361 $$ AnnotationValue httpMethodConstraintERSValue = httpMethodConstraint.value("emptyRoleSemantic")[ FD ]
Line_98 $$ if (webFilterAnnotations != null && webFilterAnnotations.size() > 0) -->Line_99 $$ FiltersMetaData filters = new FiltersMetaData()[ CD ]
Line_45 $$ AnnotationValue initParamName = initParamsAnnotation.value("name")-->Line_132 $$ initParam.setParamName(initParamName.asString())[ FD ]
Line_255 $$ securityRoles = new SecurityRolesMetaData()-->Line_265 $$ securityRoles.add(sr)[ FD ]
Line_357 $$ AnnotationValue httpMethodConstraintValue = httpMethodConstraint.value()-->Line_358 $$ if (httpMethodConstraintValue != null) [ FD ]
Line_202 $$ List<ListenerMetaData> listeners = new ArrayList<ListenerMetaData>()-->Line_220 $$ metaData.setListeners(listeners)[ FD ]
Line_262 $$ for (String role : annotation.value().asStringArray()) -->Line_373 $$ rolesAllowed.add(role)[ FD ]
Line_174 $$ AnnotationValue servletNamesValue = annotation.value("servletNames")-->Line_175 $$ if (servletNamesValue != null) [ FD ]
Line_120 $$ if (initParamsValue != null) -->Line_121 $$ AnnotationInstance[] initParamsAnnotations = initParamsValue.asNestedArray()[ CD ]
Line_227 $$ annotations = new AnnotationsMetaData()-->Line_315 $$ metaData.setAnnotations(annotations)[ FD ]
Line_285 $$ annotationMD = new AnnotationMetaData()-->Line_324 $$ if (annotationMD == null) [ FD ]
Line_17 $$ ServletMetaData servlet = new ServletMetaData()-->Line_36 $$ servlet.setAsyncSupported(asyncSupported.asBoolean())[ FD ]
Line_274 $$ annotations = new AnnotationsMetaData()-->Line_315 $$ metaData.setAnnotations(annotations)[ FD ]
Line_351 $$ if (httpMethodConstraintsValue != null) -->Line_353 $$ if (httpMethodConstraints.length > 0) [ CD ]
Line_294 $$ AnnotationValue maxFileSizeValue = annotation.value("maxFileSize")-->Line_296 $$ multipartConfig.setMaxFileSize(maxFileSizeValue.asLong())[ FD ]
Line_68 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())-->Line_70 $$ servlet.setDescriptionGroup(descriptionGroup)[ FD ]
Line_225 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_240 $$ annotations.add(annotationMD)[ FD ]
Line_353 $$ if (httpMethodConstraints.length > 0) -->Line_354 $$ List<HttpMethodConstraintMetaData> methodConstraints = new ArrayList<HttpMethodConstraintMetaData>()[ CD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_211 $$ AnnotationValue descriptionValue = annotation.value()[ FD ]
Line_252 $$ if (declareRolesAnnotations != null && declareRolesAnnotations.size() > 0) -->Line_253 $$ SecurityRolesMetaData securityRoles = metaData.getSecurityRoles()[ CD ]
Line_332 $$ if (httpConstraintValue != null) -->Line_334 $$ AnnotationValue httpConstraintERSValue = httpConstraint.value()[ CD ]
Line_354 $$ List<HttpMethodConstraintMetaData> methodConstraints = new ArrayList<HttpMethodConstraintMetaData>()-->Line_379 $$ servletSecurity.setHttpMethodConstraints(methodConstraints)[ FD ]
Line_165 $$ urlPatternsValue = annotation.value()-->Line_166 $$ if (urlPatternsValue != null) [ FD ]
Line_174 $$ AnnotationValue servletNamesValue = annotation.value("servletNames")-->Line_176 $$ for (String servletName : servletNamesValue.asStringArray()) [ FD ]
Line_10 $$ Web30MetaData metaData = new Web30MetaData()-->Line_197 $$ metaData.setFilterMappings(filterMappings)[ FD ]
Line_311 $$ if (servletSecurityAnnotations != null && servletSecurityAnnotations.size() > 0) -->Line_312 $$ AnnotationsMetaData annotations = metaData.getAnnotations()[ CD ]
Line_365 $$ AnnotationValue httpMethodConstraintTGValue = httpMethodConstraint.value("transportGuarantee")-->Line_366 $$ if (httpMethodConstraintTGValue != null) [ FD ]
Line_44 $$ ParamValueMetaData initParam = new ParamValueMetaData()-->Line_133 $$ initParam.setParamValue(initParamValue.asString())[ FD ]
Line_227 $$ annotations = new AnnotationsMetaData()-->Line_240 $$ annotations.add(annotationMD)[ FD ]
Line_72 $$ ServletMappingMetaData servletMapping = new ServletMappingMetaData()-->Line_73 $$ servletMapping.setServletName(servlet.getName())[ FD ]
Line_50 $$ AnnotationValue initParamDescription = initParamsAnnotation.value("description")-->Line_54 $$ Descriptions descriptions = getDescription(initParamDescription.asString())[ FD ]
Line_366 $$ if (httpMethodConstraintTGValue != null) -->Line_367 $$ methodConstraint.setTransportGuarantee(TransportGuaranteeType.valueOf(httpMethodConstraintTGValue.asEnum()))[ CD ]
Line_329 $$ ServletSecurityMetaData servletSecurity = new ServletSecurityMetaData()-->Line_336 $$ servletSecurity.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(httpConstraintERSValue.asEnum()))[ FD ]
Line_201 $$ if (webListenerAnnotations != null && webListenerAnnotations.size() > 0) -->Line_202 $$ List<ListenerMetaData> listeners = new ArrayList<ListenerMetaData>()[ CD ]
Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_247 $$ annotationMD.setRunAs(runAs)[ FD ]
Line_158 $$ List<DispatcherType> dispatchers = new ArrayList<DispatcherType>()-->Line_186 $$ dispatchers.add(DispatcherType.valueOf(dispatcherValue))[ FD ]
Line_238 $$ annotationMD = new AnnotationMetaData()-->Line_285 $$ annotationMD = new AnnotationMetaData()[ FD ]
Line_25 $$ if (nameValue == null || nameValue.asString().isEmpty()) -->Line_28 $$ servlet.setName(nameValue.asString())[ CD ]
Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_325 $$ annotationMD = new AnnotationMetaData()[ FD ]
Line_262 $$ for (String role : annotation.value().asStringArray()) -->Line_345 $$ rolesAllowed.add(role)[ FD ]
Line_285 $$ annotationMD = new AnnotationMetaData()-->Line_327 $$ annotations.add(annotationMD)[ FD ]
Line_225 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_228 $$ metaData.setAnnotations(annotations)[ FD ]
Line_285 $$ annotationMD = new AnnotationMetaData()-->Line_306 $$ annotationMD.setMultipartConfig(multipartConfig)[ FD ]
Line_225 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_227 $$ annotations = new AnnotationsMetaData()[ FD ]
Line_295 $$ if (maxFileSizeValue != null && maxFileSizeValue.asLong() != -1L) -->Line_296 $$ multipartConfig.setMaxFileSize(maxFileSizeValue.asLong())[ CD ]
Line_350 $$ AnnotationValue httpMethodConstraintsValue = annotation.value("httpMethodConstraints")-->Line_351 $$ if (httpMethodConstraintsValue != null) [ FD ]
Line_65 $$ AnnotationValue displayNameValue = annotation.value("displayName")-->Line_149 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())[ FD ]
Line_77 $$ for (String urlPattern : urlPatternsValue.asStringArray()) -->Line_78 $$ urlPatterns.add(urlPattern)[ FD ]
Line_45 $$ AnnotationValue initParamName = initParamsAnnotation.value("name")-->Line_51 $$ initParam.setParamName(initParamName.asString())[ FD ]
Line_18 $$ AnnotationTarget target = annotation.target()-->Line_209 $$ ClassInfo classInfo = ClassInfo.class.cast(target)[ FD ]
Line_55 $$ if (descriptions != null) -->Line_56 $$ initParam.setDescriptions(descriptions)[ CD ]
Line_10 $$ Web30MetaData metaData = new Web30MetaData()-->Line_220 $$ metaData.setListeners(listeners)[ FD ]
Line_255 $$ securityRoles = new SecurityRolesMetaData()-->Line_256 $$ metaData.setSecurityRoles(securityRoles)[ FD ]
Line_245 $$ RunAsMetaData runAs = new RunAsMetaData()-->Line_246 $$ runAs.setRoleName(annotation.value().asString())[ FD ]
Line_227 $$ annotations = new AnnotationsMetaData()-->Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_64 $$ AnnotationValue descriptionValue = annotation.value("description")-->Line_212 $$ if (descriptionValue != null) [ FD ]
Line_225 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_274 $$ annotations = new AnnotationsMetaData()[ FD ]
Line_238 $$ annotationMD = new AnnotationMetaData()-->Line_239 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_238 $$ annotationMD = new AnnotationMetaData()-->Line_326 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_53 $$ if (initParamDescription != null) -->Line_55 $$ if (descriptions != null) [ CD ]
Line_10 $$ Web30MetaData metaData = new Web30MetaData()-->Line_315 $$ metaData.setAnnotations(annotations)[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_242 $$ if (annotation.value() == null) [ FD ]
Line_324 $$ if (annotationMD == null) -->Line_326 $$ annotationMD.setClassName(classInfo.toString())[ CD ]
Line_157 $$ List<String> servletNames = new ArrayList<String>()-->Line_181 $$ filterMapping.setServletNames(servletNames)[ FD ]
Line_227 $$ annotations = new AnnotationsMetaData()-->Line_287 $$ annotations.add(annotationMD)[ FD ]
Line_274 $$ annotations = new AnnotationsMetaData()-->Line_275 $$ metaData.setAnnotations(annotations)[ FD ]
Line_237 $$ if (annotationMD == null) -->Line_240 $$ annotations.add(annotationMD)[ CD ]
Line_225 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_315 $$ metaData.setAnnotations(annotations)[ FD ]
Line_332 $$ if (httpConstraintValue != null) -->Line_335 $$ if (httpConstraintERSValue != null) [ CD ]
Line_66 $$ AnnotationValue smallIconValue = annotation.value("smallIcon")-->Line_149 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())[ FD ]
Line_22 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_23 $$ servlet.setServletClass(classInfo.toString())[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_75 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")[ FD ]
Line_227 $$ annotations = new AnnotationsMetaData()-->Line_323 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_102 $$ FilterMetaData filter = new FilterMetaData()-->Line_117 $$ filter.setAsyncSupported(asyncSupported.asBoolean())[ FD ]
Line_185 $$ for (String dispatcherValue : dispatcherTypesValue.asEnumArray()) -->Line_186 $$ dispatchers.add(DispatcherType.valueOf(dispatcherValue))[ FD ]
Line_24 $$ AnnotationValue nameValue = annotation.value("name")-->Line_25 $$ if (nameValue == null || nameValue.asString().isEmpty()) [ FD ]
Line_361 $$ AnnotationValue httpMethodConstraintERSValue = httpMethodConstraint.value("emptyRoleSemantic")-->Line_362 $$ if (httpMethodConstraintERSValue != null) [ FD ]
Line_356 $$ HttpMethodConstraintMetaData methodConstraint = new HttpMethodConstraintMetaData()-->Line_367 $$ methodConstraint.setTransportGuarantee(TransportGuaranteeType.valueOf(httpMethodConstraintTGValue.asEnum()))[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_302 $$ AnnotationValue fileSizeThresholdValue = annotation.value("fileSizeThreshold")[ FD ]
Line_225 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_283 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_338 $$ AnnotationValue httpConstraintTGValue = httpConstraint.value("transportGuarantee")-->Line_340 $$ servletSecurity.setTransportGuarantee(TransportGuaranteeType.valueOf(httpConstraintTGValue.asEnum()))[ FD ]
Line_331 $$ List<String> rolesAllowed = new ArrayList<String>()-->Line_349 $$ servletSecurity.setRolesAllowed(rolesAllowed)[ FD ]
Line_329 $$ ServletSecurityMetaData servletSecurity = new ServletSecurityMetaData()-->Line_382 $$ annotationMD.setServletSecurity(servletSecurity)[ FD ]
Line_99 $$ FiltersMetaData filters = new FiltersMetaData()-->Line_196 $$ metaData.setFilters(filters)[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_30 $$ AnnotationValue loadOnStartup = annotation.value("loadOnStartup")[ FD ]
Line_17 $$ ServletMetaData servlet = new ServletMetaData()-->Line_70 $$ servlet.setDescriptionGroup(descriptionGroup)[ FD ]
Line_44 $$ ParamValueMetaData initParam = new ParamValueMetaData()-->Line_56 $$ initParam.setDescriptions(descriptions)[ FD ]
Line_370 $$ rolesAllowed = new ArrayList<String>()-->Line_376 $$ methodConstraint.setRolesAllowed(rolesAllowed)[ FD ]
Line_225 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_147 $$ AnnotationValue smallIconValue = annotation.value("smallIcon")[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_24 $$ AnnotationValue nameValue = annotation.value("name")[ FD ]
Line_354 $$ List<HttpMethodConstraintMetaData> methodConstraints = new ArrayList<HttpMethodConstraintMetaData>()-->Line_377 $$ methodConstraints.add(methodConstraint)[ FD ]
Line_75 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_165 $$ urlPatternsValue = annotation.value()[ FD ]
Line_302 $$ AnnotationValue fileSizeThresholdValue = annotation.value("fileSizeThreshold")-->Line_304 $$ multipartConfig.setFileSizeThreshold(fileSizeThresholdValue.asInt())[ FD ]
Line_202 $$ List<ListenerMetaData> listeners = new ArrayList<ListenerMetaData>()-->Line_218 $$ listeners.add(listener)[ FD ]
Line_75 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_82 $$ if (urlPatternsValue != null) [ FD ]
Line_10 $$ Web30MetaData metaData = new Web30MetaData()-->Line_93 $$ metaData.setServlets(servlets)[ FD ]
Line_81 $$ urlPatternsValue = annotation.value()-->Line_166 $$ if (urlPatternsValue != null) [ FD ]
Line_18 $$ AnnotationTarget target = annotation.target()-->Line_243 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidRunAsAnnotation(target))[ FD ]
Line_72 $$ ServletMappingMetaData servletMapping = new ServletMappingMetaData()-->Line_89 $$ servletMappings.add(servletMapping)[ FD ]
Line_271 $$ if (multipartConfigAnnotations != null && multipartConfigAnnotations.size() > 0) -->Line_272 $$ AnnotationsMetaData annotations = metaData.getAnnotations()[ CD ]
Line_43 $$ for (AnnotationInstance initParamsAnnotation : initParamsAnnotations) -->Line_46 $$ AnnotationValue initParamValue = initParamsAnnotation.value()[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_278 $$ AnnotationTarget target = annotation.target()[ FD ]
Line_252 $$ if (declareRolesAnnotations != null && declareRolesAnnotations.size() > 0) -->Line_254 $$ if (securityRoles == null) [ CD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_18 $$ AnnotationTarget target = annotation.target()[ FD ]
Line_180 $$ if (servletNames.size() > 0) -->Line_181 $$ filterMapping.setServletNames(servletNames)[ CD ]
Line_43 $$ for (AnnotationInstance initParamsAnnotation : initParamsAnnotations) -->Line_126 $$ AnnotationValue initParamName = initParamsAnnotation.value("name")[ FD ]
Line_50 $$ AnnotationValue initParamDescription = initParamsAnnotation.value("description")-->Line_135 $$ Descriptions descriptions = getDescription(initParamDescription.asString())[ FD ]
Line_238 $$ annotationMD = new AnnotationMetaData()-->Line_247 $$ annotationMD.setRunAs(runAs)[ FD ]
Line_54 $$ Descriptions descriptions = getDescription(initParamDescription.asString())-->Line_56 $$ initParam.setDescriptions(descriptions)[ FD ]
Line_227 $$ annotations = new AnnotationsMetaData()-->Line_283 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_54 $$ Descriptions descriptions = getDescription(initParamDescription.asString())-->Line_137 $$ initParam.setDescriptions(descriptions)[ FD ]
Line_362 $$ if (httpMethodConstraintERSValue != null) -->Line_363 $$ methodConstraint.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(httpMethodConstraintERSValue.asEnum()))[ CD ]
Line_330 $$ AnnotationValue httpConstraintValue = annotation.value()-->Line_332 $$ if (httpConstraintValue != null) [ FD ]
Line_44 $$ ParamValueMetaData initParam = new ParamValueMetaData()-->Line_140 $$ initParams.add(initParam)[ FD ]
Line_212 $$ if (descriptionValue != null) -->Line_213 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup(descriptionValue.asString())[ CD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_67 $$ AnnotationValue largeIconValue = annotation.value("largeIcon")[ FD ]
Line_77 $$ for (String urlPattern : urlPatternsValue.asStringArray()) -->Line_84 $$ urlPatterns.add(urlPattern)[ FD ]
Line_42 $$ List<ParamValueMetaData> initParams = new ArrayList<ParamValueMetaData>()-->Line_140 $$ initParams.add(initParam)[ FD ]
Line_342 $$ AnnotationValue rolesAllowedValue = httpConstraint.value("rolesAllowed")-->Line_344 $$ for (String role : rolesAllowedValue.asStringArray()) [ FD ]
Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_237 $$ if (annotationMD == null) [ FD ]
Line_332 $$ if (httpConstraintValue != null) -->Line_338 $$ AnnotationValue httpConstraintTGValue = httpConstraint.value("transportGuarantee")[ CD ]
Line_24 $$ AnnotationValue nameValue = annotation.value("name")-->Line_28 $$ servlet.setName(nameValue.asString())[ FD ]
Line_134 $$ if (initParamDescription != null) -->Line_135 $$ Descriptions descriptions = getDescription(initParamDescription.asString())[ CD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_294 $$ AnnotationValue maxFileSizeValue = annotation.value("maxFileSize")[ FD ]
Line_22 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_356 $$ HttpMethodConstraintMetaData methodConstraint = new HttpMethodConstraintMetaData()-->Line_363 $$ methodConstraint.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(httpMethodConstraintERSValue.asEnum()))[ FD ]
Line_356 $$ HttpMethodConstraintMetaData methodConstraint = new HttpMethodConstraintMetaData()-->Line_359 $$ methodConstraint.setMethod(httpMethodConstraintValue.asString())[ FD ]
Line_17 $$ ServletMetaData servlet = new ServletMetaData()-->Line_61 $$ servlet.setInitParam(initParams)[ FD ]
Line_75 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_160 $$ if (urlPatternsValue != null) [ FD ]
Line_253 $$ SecurityRolesMetaData securityRoles = metaData.getSecurityRoles()-->Line_254 $$ if (securityRoles == null) [ FD ]
Line_290 $$ AnnotationValue locationValue = annotation.value("location")-->Line_292 $$ multipartConfig.setLocation(locationValue.asString())[ FD ]
Line_325 $$ annotationMD = new AnnotationMetaData()-->Line_327 $$ annotations.add(annotationMD)[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_183 $$ AnnotationValue dispatcherTypesValue = annotation.value("dispatcherTypes")[ FD ]
Line_335 $$ if (httpConstraintERSValue != null) -->Line_336 $$ servletSecurity.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(httpConstraintERSValue.asEnum()))[ CD ]
Line_65 $$ AnnotationValue displayNameValue = annotation.value("displayName")-->Line_68 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())[ FD ]
Line_225 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_287 $$ annotations.add(annotationMD)[ FD ]
Line_298 $$ AnnotationValue maxRequestSizeValue = annotation.value("maxRequestSize")-->Line_300 $$ multipartConfig.setMaxRequestSize(maxRequestSizeValue.asLong())[ FD ]
Line_171 $$ if (urlPatterns.size() > 0) -->Line_172 $$ filterMapping.setUrlPatterns(urlPatterns)[ CD ]
Line_68 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())-->Line_69 $$ if (descriptionGroup != null) [ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_64 $$ AnnotationValue descriptionValue = annotation.value("description")[ FD ]
Line_157 $$ List<String> servletNames = new ArrayList<String>()-->Line_192 $$ if (urlPatterns.size() > 0 || servletNames.size() > 0) [ FD ]
Line_43 $$ for (AnnotationInstance initParamsAnnotation : initParamsAnnotations) -->Line_45 $$ AnnotationValue initParamName = initParamsAnnotation.value("name")[ FD ]
Line_14 $$ ServletsMetaData servlets = new ServletsMetaData()-->Line_93 $$ metaData.setServlets(servlets)[ FD ]
Line_50 $$ AnnotationValue initParamDescription = initParamsAnnotation.value("description")-->Line_53 $$ if (initParamDescription != null) [ FD ]
Line_236 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_239 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_64 $$ AnnotationValue descriptionValue = annotation.value("description")-->Line_68 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())[ FD ]
Line_18 $$ AnnotationTarget target = annotation.target()-->Line_235 $$ ClassInfo classInfo = ClassInfo.class.cast(target)[ FD ]
Line_338 $$ AnnotationValue httpConstraintTGValue = httpConstraint.value("transportGuarantee")-->Line_339 $$ if (httpConstraintTGValue != null) [ FD ]
Line_64 $$ AnnotationValue descriptionValue = annotation.value("description")-->Line_149 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())[ FD ]
Line_355 $$ for (AnnotationInstance httpMethodConstraint : httpMethodConstraints) -->Line_365 $$ AnnotationValue httpMethodConstraintTGValue = httpMethodConstraint.value("transportGuarantee")[ FD ]
Line_41 $$ if (initParamsAnnotations != null && initParamsAnnotations.length > 0) -->Line_42 $$ List<ParamValueMetaData> initParams = new ArrayList<ParamValueMetaData>()[ CD ]
Line_102 $$ FilterMetaData filter = new FilterMetaData()-->Line_113 $$ filter.setName(nameValue.asString())[ FD ]
Line_18 $$ AnnotationTarget target = annotation.target()-->Line_207 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidWebListenerAnnotation(target))[ FD ]
Line_273 $$ if (annotations == null) -->Line_274 $$ annotations = new AnnotationsMetaData()[ CD ]
Line_38 $$ AnnotationValue initParamsValue = annotation.value("initParams")-->Line_39 $$ if (initParamsValue != null) [ FD ]
Line_68 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())-->Line_215 $$ listener.setDescriptionGroup(descriptionGroup)[ FD ]
Line_227 $$ annotations = new AnnotationsMetaData()-->Line_274 $$ annotations = new AnnotationsMetaData()[ FD ]
Line_370 $$ rolesAllowed = new ArrayList<String>()-->Line_373 $$ rolesAllowed.add(role)[ FD ]
Line_16 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_115 $$ AnnotationValue asyncSupported = annotation.value("asyncSupported")[ FD ]
Line_43 $$ for (AnnotationInstance initParamsAnnotation : initParamsAnnotations) -->Line_127 $$ AnnotationValue initParamValue = initParamsAnnotation.value()[ FD ]
