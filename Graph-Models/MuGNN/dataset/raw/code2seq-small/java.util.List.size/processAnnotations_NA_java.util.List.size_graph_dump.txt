Line_14 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_312 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_344 $$ if (httpMethodConstraintValue != null) -->Line_345 $$ methodConstraint.setMethod(httpMethodConstraintValue.asString())[ CD ]
Line_214 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_316 $$ AnnotationValue httpConstraintValue = annotation.value()[ FD ]
Line_141 $$ if (descriptionGroup != null) -->Line_142 $$ filter.setDescriptionGroup(descriptionGroup)[ CD ]
Line_9 $$ ServletMetaData servlet = new ServletMetaData()-->Line_15 $$ servlet.setServletClass(classInfo.toString())[ FD ]
Line_216 $$ annotations = new AnnotationsMetaData()-->Line_274 $$ annotations.add(annotationMD)[ FD ]
Line_325 $$ if (httpConstraintTGValue != null) -->Line_326 $$ servletSecurity.setTransportGuarantee(TransportGuaranteeType.valueOf(httpConstraintTGValue.asEnum()))[ CD ]
Line_3 $$ Web30MetaData metaData = new Web30MetaData()-->Line_86 $$ metaData.setServletMappings(servletMappings)[ FD ]
Line_214 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_229 $$ annotations.add(annotationMD)[ FD ]
Line_171 $$ if (servletNames.size() > 0) -->Line_172 $$ filterMapping.setServletNames(servletNames)[ CD ]
Line_67 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_158 $$ for (String urlPattern : urlPatternsValue.asStringArray()) [ FD ]
Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_236 $$ annotationMD.setRunAs(runAs)[ FD ]
Line_3 $$ Web30MetaData metaData = new Web30MetaData()-->Line_188 $$ metaData.setFilterMappings(filterMappings)[ FD ]
Line_36 $$ ParamValueMetaData initParam = new ParamValueMetaData()-->Line_43 $$ initParam.setParamName(initParamName.asString())[ FD ]
Line_149 $$ List<DispatcherType> dispatchers = new ArrayList<DispatcherType>()-->Line_181 $$ filterMapping.setDispatchers(dispatchers)[ FD ]
Line_348 $$ if (httpMethodConstraintERSValue != null) -->Line_349 $$ methodConstraint.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(httpMethodConstraintERSValue.asEnum()))[ CD ]
Line_107 $$ if (asyncSupported != null) -->Line_108 $$ filter.setAsyncSupported(asyncSupported.asBoolean())[ CD ]
Line_191 $$ if (webListenerAnnotations != null && webListenerAnnotations.size() > 0) -->Line_192 $$ List<ListenerMetaData> listeners = new ArrayList<ListenerMetaData>()[ CD ]
Line_296 $$ final List<AnnotationInstance> servletSecurityAnnotations = index.getAnnotations(servletSecurity)-->Line_297 $$ if (servletSecurityAnnotations != null && servletSecurityAnnotations.size() > 0) [ FD ]
Line_315 $$ ServletSecurityMetaData servletSecurity = new ServletSecurityMetaData()-->Line_326 $$ servletSecurity.setTransportGuarantee(TransportGuaranteeType.valueOf(httpConstraintTGValue.asEnum()))[ FD ]
Line_272 $$ annotationMD = new AnnotationMetaData()-->Line_274 $$ annotations.add(annotationMD)[ FD ]
Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_273 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_321 $$ if (httpConstraintERSValue != null) -->Line_322 $$ servletSecurity.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(httpConstraintERSValue.asEnum()))[ CD ]
Line_64 $$ ServletMappingMetaData servletMapping = new ServletMappingMetaData()-->Line_81 $$ servletMappings.add(servletMapping)[ FD ]
Line_281 $$ AnnotationValue maxFileSizeValue = annotation.value("maxFileSize")-->Line_282 $$ if (maxFileSizeValue != null && maxFileSizeValue.asLong() != -1L) [ FD ]
Line_10 $$ AnnotationTarget target = annotation.target()-->Line_40 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidWebInitParamAnnotation(target))[ FD ]
Line_261 $$ annotations = new AnnotationsMetaData()-->Line_300 $$ annotations = new AnnotationsMetaData()[ FD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_240 $$ if (declareRolesAnnotations != null && declareRolesAnnotations.size() > 0) [ CD ]
Line_328 $$ AnnotationValue rolesAllowedValue = httpConstraint.value("rolesAllowed")-->Line_357 $$ if (rolesAllowedValue != null) [ FD ]
Line_56 $$ AnnotationValue descriptionValue = annotation.value("description")-->Line_60 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())[ FD ]
Line_317 $$ List<String> rolesAllowed = new ArrayList<String>()-->Line_356 $$ rolesAllowed = new ArrayList<String>()[ FD ]
Line_64 $$ ServletMappingMetaData servletMapping = new ServletMappingMetaData()-->Line_80 $$ servletMapping.setUrlPatterns(urlPatterns)[ FD ]
Line_285 $$ AnnotationValue maxRequestSizeValue = annotation.value("maxRequestSize")-->Line_287 $$ multipartConfig.setMaxRequestSize(maxRequestSizeValue.asLong())[ FD ]
Line_10 $$ AnnotationTarget target = annotation.target()-->Line_96 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidWebFilterAnnotation(target))[ FD ]
Line_10 $$ AnnotationTarget target = annotation.target()-->Line_269 $$ ClassInfo classInfo = ClassInfo.class.cast(target)[ FD ]
Line_316 $$ AnnotationValue httpConstraintValue = annotation.value()-->Line_318 $$ if (httpConstraintValue != null) [ FD ]
Line_64 $$ ServletMappingMetaData servletMapping = new ServletMappingMetaData()-->Line_65 $$ servletMapping.setServletName(servlet.getName())[ FD ]
Line_3 $$ Web30MetaData metaData = new Web30MetaData()-->Line_214 $$ AnnotationsMetaData annotations = metaData.getAnnotations()[ FD ]
Line_5 $$ if (webServletAnnotations != null && webServletAnnotations.size() > 0) -->Line_6 $$ ServletsMetaData servlets = new ServletsMetaData()[ CD ]
Line_286 $$ if (maxRequestSizeValue != null && maxRequestSizeValue.asLong() != -1L) -->Line_287 $$ multipartConfig.setMaxRequestSize(maxRequestSizeValue.asLong())[ CD ]
Line_242 $$ if (securityRoles == null) -->Line_243 $$ securityRoles = new SecurityRolesMetaData()[ CD ]
Line_258 $$ if (multipartConfigAnnotations != null && multipartConfigAnnotations.size() > 0) -->Line_259 $$ AnnotationsMetaData annotations = metaData.getAnnotations()[ CD ]
Line_240 $$ if (declareRolesAnnotations != null && declareRolesAnnotations.size() > 0) -->Line_241 $$ SecurityRolesMetaData securityRoles = metaData.getSecurityRoles()[ CD ]
Line_148 $$ List<String> servletNames = new ArrayList<String>()-->Line_171 $$ if (servletNames.size() > 0) [ FD ]
Line_347 $$ AnnotationValue httpMethodConstraintERSValue = httpMethodConstraint.value("emptyRoleSemantic")-->Line_349 $$ methodConstraint.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(httpMethodConstraintERSValue.asEnum()))[ FD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_191 $$ if (webListenerAnnotations != null && webListenerAnnotations.size() > 0) [ CD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_139 $$ AnnotationValue largeIconValue = annotation.value("largeIcon")[ FD ]
Line_66 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_76 $$ urlPatterns.add(urlPattern)[ FD ]
Line_69 $$ for (String urlPattern : urlPatternsValue.asStringArray()) -->Line_159 $$ urlPatterns.add(urlPattern)[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_22 $$ AnnotationValue loadOnStartup = annotation.value("loadOnStartup")[ FD ]
Line_212 $$ final List<AnnotationInstance> runAsAnnotations = index.getAnnotations(runAs)-->Line_213 $$ if (runAsAnnotations != null && runAsAnnotations.size() > 0) [ FD ]
Line_216 $$ annotations = new AnnotationsMetaData()-->Line_260 $$ if (annotations == null) [ FD ]
Line_214 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_260 $$ if (annotations == null) [ FD ]
Line_46 $$ Descriptions descriptions = getDescription(initParamDescription.asString())-->Line_127 $$ if (descriptions != null) [ FD ]
Line_341 $$ for (AnnotationInstance httpMethodConstraint : httpMethodConstraints) -->Line_355 $$ AnnotationValue rolesAllowedValue = httpMethodConstraint.value("rolesAllowed")[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_16 $$ AnnotationValue nameValue = annotation.value("name")[ FD ]
Line_227 $$ annotationMD = new AnnotationMetaData()-->Line_312 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_67 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_73 $$ urlPatternsValue = annotation.value()[ FD ]
Line_241 $$ SecurityRolesMetaData securityRoles = metaData.getSecurityRoles()-->Line_253 $$ securityRoles.add(sr)[ FD ]
Line_311 $$ annotationMD = new AnnotationMetaData()-->Line_313 $$ annotations.add(annotationMD)[ FD ]
Line_73 $$ urlPatternsValue = annotation.value()-->Line_158 $$ for (String urlPattern : urlPatternsValue.asStringArray()) [ FD ]
Line_180 $$ if (dispatchers.size() > 0) -->Line_181 $$ filterMapping.setDispatchers(dispatchers)[ CD ]
Line_234 $$ RunAsMetaData runAs = new RunAsMetaData()-->Line_236 $$ annotationMD.setRunAs(runAs)[ FD ]
Line_318 $$ if (httpConstraintValue != null) -->Line_328 $$ AnnotationValue rolesAllowedValue = httpConstraint.value("rolesAllowed")[ CD ]
Line_67 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_157 $$ if (urlPatternsValue != null) [ FD ]
Line_66 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_70 $$ urlPatterns.add(urlPattern)[ FD ]
Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_368 $$ annotationMD.setServletSecurity(servletSecurity)[ FD ]
Line_37 $$ AnnotationValue initParamName = initParamsAnnotation.value("name")-->Line_123 $$ initParam.setParamName(initParamName.asString())[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_248 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidDeclareRolesAnnotation(annotation.target()))[ FD ]
Line_276 $$ MultipartConfigMetaData multipartConfig = new MultipartConfigMetaData()-->Line_291 $$ multipartConfig.setFileSizeThreshold(fileSizeThresholdValue.asInt())[ FD ]
Line_90 $$ FiltersMetaData filters = new FiltersMetaData()-->Line_187 $$ metaData.setFilters(filters)[ FD ]
Line_271 $$ if (annotationMD == null) -->Line_272 $$ annotationMD = new AnnotationMetaData()[ CD ]
Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_312 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_35 $$ for (AnnotationInstance initParamsAnnotation : initParamsAnnotations) -->Line_122 $$ AnnotationValue initParamDescription = initParamsAnnotation.value("description")[ FD ]
Line_67 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_156 $$ urlPatternsValue = annotation.value()[ FD ]
Line_101 $$ if (nameValue == null || nameValue.asString().isEmpty()) -->Line_102 $$ filter.setName(classInfo.toString())[ CD ]
Line_311 $$ annotationMD = new AnnotationMetaData()-->Line_312 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_297 $$ if (servletSecurityAnnotations != null && servletSecurityAnnotations.size() > 0) -->Line_299 $$ if (annotations == null) [ CD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_220 $$ AnnotationTarget target = annotation.target()[ FD ]
Line_57 $$ AnnotationValue displayNameValue = annotation.value("displayName")-->Line_140 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())[ FD ]
Line_320 $$ AnnotationValue httpConstraintERSValue = httpConstraint.value()-->Line_321 $$ if (httpConstraintERSValue != null) [ FD ]
Line_67 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_74 $$ if (urlPatternsValue != null) [ FD ]
Line_45 $$ if (initParamDescription != null) -->Line_46 $$ Descriptions descriptions = getDescription(initParamDescription.asString())[ CD ]
Line_318 $$ if (httpConstraintValue != null) -->Line_321 $$ if (httpConstraintERSValue != null) [ CD ]
Line_190 $$ final List<AnnotationInstance> webListenerAnnotations = index.getAnnotations(webListener)-->Line_191 $$ if (webListenerAnnotations != null && webListenerAnnotations.size() > 0) [ FD ]
Line_341 $$ for (AnnotationInstance httpMethodConstraint : httpMethodConstraints) -->Line_343 $$ AnnotationValue httpMethodConstraintValue = httpMethodConstraint.value()[ FD ]
Line_261 $$ annotations = new AnnotationsMetaData()-->Line_270 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_340 $$ List<HttpMethodConstraintMetaData> methodConstraints = new ArrayList<HttpMethodConstraintMetaData>()-->Line_363 $$ methodConstraints.add(methodConstraint)[ FD ]
Line_33 $$ if (initParamsAnnotations != null && initParamsAnnotations.length > 0) -->Line_53 $$ servlet.setInitParam(initParams)[ CD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_156 $$ urlPatternsValue = annotation.value()[ FD ]
Line_5 $$ if (webServletAnnotations != null && webServletAnnotations.size() > 0) -->Line_86 $$ metaData.setServletMappings(servletMappings)[ CD ]
Line_216 $$ annotations = new AnnotationsMetaData()-->Line_229 $$ annotations.add(annotationMD)[ FD ]
Line_127 $$ if (descriptions != null) -->Line_128 $$ initParam.setDescriptions(descriptions)[ CD ]
Line_342 $$ HttpMethodConstraintMetaData methodConstraint = new HttpMethodConstraintMetaData()-->Line_349 $$ methodConstraint.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(httpMethodConstraintERSValue.asEnum()))[ FD ]
Line_227 $$ annotationMD = new AnnotationMetaData()-->Line_272 $$ annotationMD = new AnnotationMetaData()[ FD ]
Line_36 $$ ParamValueMetaData initParam = new ParamValueMetaData()-->Line_124 $$ initParam.setParamValue(initParamValue.asString())[ FD ]
Line_10 $$ AnnotationTarget target = annotation.target()-->Line_306 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidServletSecurityAnnotation(target))[ FD ]
Line_67 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_69 $$ for (String urlPattern : urlPatternsValue.asStringArray()) [ FD ]
Line_324 $$ AnnotationValue httpConstraintTGValue = httpConstraint.value("transportGuarantee")-->Line_326 $$ servletSecurity.setTransportGuarantee(TransportGuaranteeType.valueOf(httpConstraintTGValue.asEnum()))[ FD ]
Line_356 $$ rolesAllowed = new ArrayList<String>()-->Line_362 $$ methodConstraint.setRolesAllowed(rolesAllowed)[ FD ]
Line_6 $$ ServletsMetaData servlets = new ServletsMetaData()-->Line_85 $$ metaData.setServlets(servlets)[ FD ]
Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_313 $$ annotations.add(annotationMD)[ FD ]
Line_337 $$ if (httpMethodConstraintsValue != null) -->Line_339 $$ if (httpMethodConstraints.length > 0) [ CD ]
Line_61 $$ if (descriptionGroup != null) -->Line_62 $$ servlet.setDescriptionGroup(descriptionGroup)[ CD ]
Line_22 $$ AnnotationValue loadOnStartup = annotation.value("loadOnStartup")-->Line_24 $$ servlet.setLoadOnStartupInt(loadOnStartup.asInt())[ FD ]
Line_310 $$ if (annotationMD == null) -->Line_313 $$ annotations.add(annotationMD)[ CD ]
Line_60 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())-->Line_142 $$ filter.setDescriptionGroup(descriptionGroup)[ FD ]
Line_156 $$ urlPatternsValue = annotation.value()-->Line_157 $$ if (urlPatternsValue != null) [ FD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_257 $$ final List<AnnotationInstance> multipartConfigAnnotations = index.getAnnotations(multipartConfig)[ CD ]
Line_125 $$ if (initParamDescription != null) -->Line_126 $$ Descriptions descriptions = getDescription(initParamDescription.asString())[ CD ]
Line_227 $$ annotationMD = new AnnotationMetaData()-->Line_293 $$ annotationMD.setMultipartConfig(multipartConfig)[ FD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_258 $$ if (multipartConfigAnnotations != null && multipartConfigAnnotations.size() > 0) [ CD ]
Line_226 $$ if (annotationMD == null) -->Line_227 $$ annotationMD = new AnnotationMetaData()[ CD ]
Line_14 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_273 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_35 $$ for (AnnotationInstance initParamsAnnotation : initParamsAnnotations) -->Line_37 $$ AnnotationValue initParamName = initParamsAnnotation.value("name")[ FD ]
Line_316 $$ AnnotationValue httpConstraintValue = annotation.value()-->Line_319 $$ AnnotationInstance httpConstraint = httpConstraintValue.asNested()[ FD ]
Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_274 $$ annotations.add(annotationMD)[ FD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_296 $$ final List<AnnotationInstance> servletSecurityAnnotations = index.getAnnotations(servletSecurity)[ FD ]
Line_36 $$ ParamValueMetaData initParam = new ParamValueMetaData()-->Line_128 $$ initParam.setDescriptions(descriptions)[ FD ]
Line_35 $$ for (AnnotationInstance initParamsAnnotation : initParamsAnnotations) -->Line_38 $$ AnnotationValue initParamValue = initParamsAnnotation.value()[ FD ]
Line_10 $$ AnnotationTarget target = annotation.target()-->Line_98 $$ ClassInfo classInfo = ClassInfo.class.cast(target)[ FD ]
Line_227 $$ annotationMD = new AnnotationMetaData()-->Line_310 $$ if (annotationMD == null) [ FD ]
Line_194 $$ ListenerMetaData listener = new ListenerMetaData()-->Line_208 $$ listeners.add(listener)[ FD ]
Line_36 $$ ParamValueMetaData initParam = new ParamValueMetaData()-->Line_131 $$ initParams.add(initParam)[ FD ]
Line_22 $$ AnnotationValue loadOnStartup = annotation.value("loadOnStartup")-->Line_23 $$ if (loadOnStartup != null && loadOnStartup.asInt() >= 0) [ FD ]
Line_14 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_228 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_91 $$ List<FilterMappingMetaData> filterMappings = new ArrayList<FilterMappingMetaData>()-->Line_188 $$ metaData.setFilterMappings(filterMappings)[ FD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_257 $$ final List<AnnotationInstance> multipartConfigAnnotations = index.getAnnotations(multipartConfig)[ FD ]
Line_66 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_80 $$ servletMapping.setUrlPatterns(urlPatterns)[ FD ]
Line_216 $$ annotations = new AnnotationsMetaData()-->Line_299 $$ if (annotations == null) [ FD ]
Line_213 $$ if (runAsAnnotations != null && runAsAnnotations.size() > 0) -->Line_215 $$ if (annotations == null) [ CD ]
Line_191 $$ if (webListenerAnnotations != null && webListenerAnnotations.size() > 0) -->Line_210 $$ metaData.setListeners(listeners)[ CD ]
Line_34 $$ List<ParamValueMetaData> initParams = new ArrayList<ParamValueMetaData>()-->Line_131 $$ initParams.add(initParam)[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_277 $$ AnnotationValue locationValue = annotation.value("location")[ FD ]
Line_214 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_300 $$ annotations = new AnnotationsMetaData()[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_304 $$ AnnotationTarget target = annotation.target()[ FD ]
Line_261 $$ annotations = new AnnotationsMetaData()-->Line_299 $$ if (annotations == null) [ FD ]
Line_276 $$ MultipartConfigMetaData multipartConfig = new MultipartConfigMetaData()-->Line_293 $$ annotationMD.setMultipartConfig(multipartConfig)[ FD ]
Line_3 $$ Web30MetaData metaData = new Web30MetaData()-->Line_241 $$ SecurityRolesMetaData securityRoles = metaData.getSecurityRoles()[ FD ]
Line_148 $$ List<String> servletNames = new ArrayList<String>()-->Line_183 $$ if (urlPatterns.size() > 0 || servletNames.size() > 0) [ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_100 $$ AnnotationValue nameValue = annotation.value("filterName")[ FD ]
Line_328 $$ AnnotationValue rolesAllowedValue = httpConstraint.value("rolesAllowed")-->Line_358 $$ for (String role : rolesAllowedValue.asStringArray()) [ FD ]
Line_174 $$ AnnotationValue dispatcherTypesValue = annotation.value("dispatcherTypes")-->Line_175 $$ if (dispatcherTypesValue != null) [ FD ]
Line_272 $$ annotationMD = new AnnotationMetaData()-->Line_313 $$ annotations.add(annotationMD)[ FD ]
Line_91 $$ List<FilterMappingMetaData> filterMappings = new ArrayList<FilterMappingMetaData>()-->Line_184 $$ filterMappings.add(filterMapping)[ FD ]
Line_46 $$ Descriptions descriptions = getDescription(initParamDescription.asString())-->Line_48 $$ initParam.setDescriptions(descriptions)[ FD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_239 $$ final List<AnnotationInstance> declareRolesAnnotations = index.getAnnotations(declareRoles)[ FD ]
Line_271 $$ if (annotationMD == null) -->Line_274 $$ annotations.add(annotationMD)[ CD ]
Line_46 $$ Descriptions descriptions = getDescription(initParamDescription.asString())-->Line_128 $$ initParam.setDescriptions(descriptions)[ FD ]
Line_261 $$ annotations = new AnnotationsMetaData()-->Line_309 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_138 $$ AnnotationValue smallIconValue = annotation.value("smallIcon")[ FD ]
Line_282 $$ if (maxFileSizeValue != null && maxFileSizeValue.asLong() != -1L) -->Line_283 $$ multipartConfig.setMaxFileSize(maxFileSizeValue.asLong())[ CD ]
Line_6 $$ ServletsMetaData servlets = new ServletsMetaData()-->Line_83 $$ servlets.add(servlet)[ FD ]
Line_14 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_7 $$ List<ServletMappingMetaData> servletMappings = new ArrayList<ServletMappingMetaData>()-->Line_81 $$ servletMappings.add(servletMapping)[ FD ]
Line_258 $$ if (multipartConfigAnnotations != null && multipartConfigAnnotations.size() > 0) -->Line_260 $$ if (annotations == null) [ CD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_26 $$ AnnotationValue asyncSupported = annotation.value("asyncSupported")[ FD ]
Line_324 $$ AnnotationValue httpConstraintTGValue = httpConstraint.value("transportGuarantee")-->Line_325 $$ if (httpConstraintTGValue != null) [ FD ]
Line_93 $$ FilterMetaData filter = new FilterMetaData()-->Line_142 $$ filter.setDescriptionGroup(descriptionGroup)[ FD ]
Line_10 $$ AnnotationTarget target = annotation.target()-->Line_14 $$ ClassInfo classInfo = ClassInfo.class.cast(target)[ FD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_212 $$ final List<AnnotationInstance> runAsAnnotations = index.getAnnotations(runAs)[ FD ]
Line_125 $$ if (initParamDescription != null) -->Line_127 $$ if (descriptions != null) [ CD ]
Line_79 $$ if (urlPatterns.size() > 0) -->Line_80 $$ servletMapping.setUrlPatterns(urlPatterns)[ CD ]
Line_226 $$ if (annotationMD == null) -->Line_229 $$ annotations.add(annotationMD)[ CD ]
Line_310 $$ if (annotationMD == null) -->Line_311 $$ annotationMD = new AnnotationMetaData()[ CD ]
Line_194 $$ ListenerMetaData listener = new ListenerMetaData()-->Line_205 $$ listener.setDescriptionGroup(descriptionGroup)[ FD ]
Line_145 $$ FilterMappingMetaData filterMapping = new FilterMappingMetaData()-->Line_163 $$ filterMapping.setUrlPatterns(urlPatterns)[ FD ]
Line_276 $$ MultipartConfigMetaData multipartConfig = new MultipartConfigMetaData()-->Line_287 $$ multipartConfig.setMaxRequestSize(maxRequestSizeValue.asLong())[ FD ]
Line_342 $$ HttpMethodConstraintMetaData methodConstraint = new HttpMethodConstraintMetaData()-->Line_363 $$ methodConstraints.add(methodConstraint)[ FD ]
Line_23 $$ if (loadOnStartup != null && loadOnStartup.asInt() >= 0) -->Line_24 $$ servlet.setLoadOnStartupInt(loadOnStartup.asInt())[ CD ]
Line_33 $$ if (initParamsAnnotations != null && initParamsAnnotations.length > 0) -->Line_34 $$ List<ParamValueMetaData> initParams = new ArrayList<ParamValueMetaData>()[ CD ]
Line_73 $$ urlPatternsValue = annotation.value()-->Line_74 $$ if (urlPatternsValue != null) [ FD ]
Line_145 $$ FilterMappingMetaData filterMapping = new FilterMappingMetaData()-->Line_172 $$ filterMapping.setServletNames(servletNames)[ FD ]
Line_241 $$ SecurityRolesMetaData securityRoles = metaData.getSecurityRoles()-->Line_243 $$ securityRoles = new SecurityRolesMetaData()[ FD ]
Line_328 $$ AnnotationValue rolesAllowedValue = httpConstraint.value("rolesAllowed")-->Line_330 $$ for (String role : rolesAllowedValue.asStringArray()) [ FD ]
Line_239 $$ final List<AnnotationInstance> declareRolesAnnotations = index.getAnnotations(declareRoles)-->Line_240 $$ if (declareRolesAnnotations != null && declareRolesAnnotations.size() > 0) [ FD ]
Line_242 $$ if (securityRoles == null) -->Line_244 $$ metaData.setSecurityRoles(securityRoles)[ CD ]
Line_10 $$ AnnotationTarget target = annotation.target()-->Line_197 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidWebListenerAnnotation(target))[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_201 $$ AnnotationValue descriptionValue = annotation.value()[ FD ]
Line_93 $$ FilterMetaData filter = new FilterMetaData()-->Line_144 $$ filters.add(filter)[ FD ]
Line_183 $$ if (urlPatterns.size() > 0 || servletNames.size() > 0) -->Line_184 $$ filterMappings.add(filterMapping)[ CD ]
Line_30 $$ AnnotationValue initParamsValue = annotation.value("initParams")-->Line_112 $$ AnnotationInstance[] initParamsAnnotations = initParamsValue.asNestedArray()[ FD ]
Line_42 $$ AnnotationValue initParamDescription = initParamsAnnotation.value("description")-->Line_126 $$ Descriptions descriptions = getDescription(initParamDescription.asString())[ FD ]
Line_3 $$ Web30MetaData metaData = new Web30MetaData()-->Line_301 $$ metaData.setAnnotations(annotations)[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_150 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")[ FD ]
Line_56 $$ AnnotationValue descriptionValue = annotation.value("description")-->Line_202 $$ if (descriptionValue != null) [ FD ]
Line_3 $$ Web30MetaData metaData = new Web30MetaData()-->Line_262 $$ metaData.setAnnotations(annotations)[ FD ]
Line_34 $$ List<ParamValueMetaData> initParams = new ArrayList<ParamValueMetaData>()-->Line_51 $$ initParams.add(initParam)[ FD ]
Line_243 $$ securityRoles = new SecurityRolesMetaData()-->Line_253 $$ securityRoles.add(sr)[ FD ]
Line_271 $$ if (annotationMD == null) -->Line_273 $$ annotationMD.setClassName(classInfo.toString())[ CD ]
Line_214 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_215 $$ if (annotations == null) [ FD ]
Line_214 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_270 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_35 $$ for (AnnotationInstance initParamsAnnotation : initParamsAnnotations) -->Line_117 $$ AnnotationValue initParamName = initParamsAnnotation.value("name")[ FD ]
Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_228 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_235 $$ runAs.setRoleName(annotation.value().asString())[ FD ]
Line_14 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_99 $$ filter.setFilterClass(classInfo.toString())[ FD ]
Line_216 $$ annotations = new AnnotationsMetaData()-->Line_261 $$ annotations = new AnnotationsMetaData()[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_136 $$ AnnotationValue descriptionValue = annotation.value("description")[ FD ]
Line_289 $$ AnnotationValue fileSizeThresholdValue = annotation.value("fileSizeThreshold")-->Line_290 $$ if (fileSizeThresholdValue != null && fileSizeThresholdValue.asInt() != 0) [ FD ]
Line_227 $$ annotationMD = new AnnotationMetaData()-->Line_274 $$ annotations.add(annotationMD)[ FD ]
Line_73 $$ urlPatternsValue = annotation.value()-->Line_157 $$ if (urlPatternsValue != null) [ FD ]
Line_351 $$ AnnotationValue httpMethodConstraintTGValue = httpMethodConstraint.value("transportGuarantee")-->Line_353 $$ methodConstraint.setTransportGuarantee(TransportGuaranteeType.valueOf(httpMethodConstraintTGValue.asEnum()))[ FD ]
Line_42 $$ AnnotationValue initParamDescription = initParamsAnnotation.value("description")-->Line_125 $$ if (initParamDescription != null) [ FD ]
Line_36 $$ ParamValueMetaData initParam = new ParamValueMetaData()-->Line_123 $$ initParam.setParamName(initParamName.asString())[ FD ]
Line_216 $$ annotations = new AnnotationsMetaData()-->Line_313 $$ annotations.add(annotationMD)[ FD ]
Line_73 $$ urlPatternsValue = annotation.value()-->Line_152 $$ for (String urlPattern : urlPatternsValue.asStringArray()) [ FD ]
Line_250 $$ for (String role : annotation.value().asStringArray()) -->Line_331 $$ rolesAllowed.add(role)[ FD ]
Line_111 $$ if (initParamsValue != null) -->Line_112 $$ AnnotationInstance[] initParamsAnnotations = initParamsValue.asNestedArray()[ CD ]
Line_272 $$ annotationMD = new AnnotationMetaData()-->Line_311 $$ annotationMD = new AnnotationMetaData()[ FD ]
Line_227 $$ annotationMD = new AnnotationMetaData()-->Line_313 $$ annotations.add(annotationMD)[ FD ]
Line_9 $$ ServletMetaData servlet = new ServletMetaData()-->Line_65 $$ servletMapping.setServletName(servlet.getName())[ FD ]
Line_289 $$ AnnotationValue fileSizeThresholdValue = annotation.value("fileSizeThreshold")-->Line_291 $$ multipartConfig.setFileSizeThreshold(fileSizeThresholdValue.asInt())[ FD ]
Line_318 $$ if (httpConstraintValue != null) -->Line_325 $$ if (httpConstraintTGValue != null) [ CD ]
Line_310 $$ if (annotationMD == null) -->Line_312 $$ annotationMD.setClassName(classInfo.toString())[ CD ]
Line_339 $$ if (httpMethodConstraints.length > 0) -->Line_340 $$ List<HttpMethodConstraintMetaData> methodConstraints = new ArrayList<HttpMethodConstraintMetaData>()[ CD ]
Line_42 $$ AnnotationValue initParamDescription = initParamsAnnotation.value("description")-->Line_46 $$ Descriptions descriptions = getDescription(initParamDescription.asString())[ FD ]
Line_93 $$ FilterMetaData filter = new FilterMetaData()-->Line_133 $$ filter.setInitParam(initParams)[ FD ]
Line_9 $$ ServletMetaData servlet = new ServletMetaData()-->Line_24 $$ servlet.setLoadOnStartupInt(loadOnStartup.asInt())[ FD ]
Line_34 $$ List<ParamValueMetaData> initParams = new ArrayList<ParamValueMetaData>()-->Line_53 $$ servlet.setInitParam(initParams)[ FD ]
Line_272 $$ annotationMD = new AnnotationMetaData()-->Line_310 $$ if (annotationMD == null) [ FD ]
Line_3 $$ Web30MetaData metaData = new Web30MetaData()-->Line_244 $$ metaData.setSecurityRoles(securityRoles)[ FD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_89 $$ if (webFilterAnnotations != null && webFilterAnnotations.size() > 0) [ CD ]
Line_251 $$ SecurityRoleMetaData sr = new SecurityRoleMetaData()-->Line_253 $$ securityRoles.add(sr)[ FD ]
Line_14 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_309 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_318 $$ if (httpConstraintValue != null) -->Line_319 $$ AnnotationInstance httpConstraint = httpConstraintValue.asNested()[ CD ]
Line_336 $$ AnnotationValue httpMethodConstraintsValue = annotation.value("httpMethodConstraints")-->Line_337 $$ if (httpMethodConstraintsValue != null) [ FD ]
Line_319 $$ AnnotationInstance httpConstraint = httpConstraintValue.asNested()-->Line_324 $$ AnnotationValue httpConstraintTGValue = httpConstraint.value("transportGuarantee")[ FD ]
Line_93 $$ FilterMetaData filter = new FilterMetaData()-->Line_146 $$ filterMapping.setFilterName(filter.getName())[ FD ]
Line_66 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_159 $$ urlPatterns.add(urlPattern)[ FD ]
Line_36 $$ ParamValueMetaData initParam = new ParamValueMetaData()-->Line_51 $$ initParams.add(initParam)[ FD ]
Line_272 $$ annotationMD = new AnnotationMetaData()-->Line_312 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_300 $$ annotations = new AnnotationsMetaData()-->Line_301 $$ metaData.setAnnotations(annotations)[ FD ]
Line_73 $$ urlPatternsValue = annotation.value()-->Line_151 $$ if (urlPatternsValue != null) [ FD ]
Line_93 $$ FilterMetaData filter = new FilterMetaData()-->Line_108 $$ filter.setAsyncSupported(asyncSupported.asBoolean())[ FD ]
Line_73 $$ urlPatternsValue = annotation.value()-->Line_156 $$ urlPatternsValue = annotation.value()[ FD ]
Line_30 $$ AnnotationValue initParamsValue = annotation.value("initParams")-->Line_31 $$ if (initParamsValue != null) [ FD ]
Line_176 $$ for (String dispatcherValue : dispatcherTypesValue.asEnumArray()) -->Line_177 $$ dispatchers.add(DispatcherType.valueOf(dispatcherValue))[ FD ]
Line_202 $$ if (descriptionValue != null) -->Line_204 $$ if (descriptionGroup != null) [ CD ]
Line_101 $$ if (nameValue == null || nameValue.asString().isEmpty()) -->Line_104 $$ filter.setName(nameValue.asString())[ CD ]
Line_342 $$ HttpMethodConstraintMetaData methodConstraint = new HttpMethodConstraintMetaData()-->Line_345 $$ methodConstraint.setMethod(httpMethodConstraintValue.asString())[ FD ]
Line_339 $$ if (httpMethodConstraints.length > 0) -->Line_365 $$ servletSecurity.setHttpMethodConstraints(methodConstraints)[ CD ]
Line_214 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_217 $$ metaData.setAnnotations(annotations)[ FD ]
Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_272 $$ annotationMD = new AnnotationMetaData()[ FD ]
Line_66 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_162 $$ if (urlPatterns.size() > 0) [ FD ]
Line_317 $$ List<String> rolesAllowed = new ArrayList<String>()-->Line_362 $$ methodConstraint.setRolesAllowed(rolesAllowed)[ FD ]
Line_69 $$ for (String urlPattern : urlPatternsValue.asStringArray()) -->Line_153 $$ urlPatterns.add(urlPattern)[ FD ]
Line_69 $$ for (String urlPattern : urlPatternsValue.asStringArray()) -->Line_76 $$ urlPatterns.add(urlPattern)[ FD ]
Line_214 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_299 $$ if (annotations == null) [ FD ]
Line_58 $$ AnnotationValue smallIconValue = annotation.value("smallIcon")-->Line_60 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())[ FD ]
Line_7 $$ List<ServletMappingMetaData> servletMappings = new ArrayList<ServletMappingMetaData>()-->Line_86 $$ metaData.setServletMappings(servletMappings)[ FD ]
Line_4 $$ final List<AnnotationInstance> webServletAnnotations = index.getAnnotations(webServlet)-->Line_5 $$ if (webServletAnnotations != null && webServletAnnotations.size() > 0) [ FD ]
Line_45 $$ if (initParamDescription != null) -->Line_47 $$ if (descriptions != null) [ CD ]
Line_67 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_152 $$ for (String urlPattern : urlPatternsValue.asStringArray()) [ FD ]
Line_319 $$ AnnotationInstance httpConstraint = httpConstraintValue.asNested()-->Line_328 $$ AnnotationValue rolesAllowedValue = httpConstraint.value("rolesAllowed")[ FD ]
Line_347 $$ AnnotationValue httpMethodConstraintERSValue = httpMethodConstraint.value("emptyRoleSemantic")-->Line_348 $$ if (httpMethodConstraintERSValue != null) [ FD ]
Line_167 $$ for (String servletName : servletNamesValue.asStringArray()) -->Line_168 $$ servletNames.add(servletName)[ FD ]
Line_174 $$ AnnotationValue dispatcherTypesValue = annotation.value("dispatcherTypes")-->Line_176 $$ for (String dispatcherValue : dispatcherTypesValue.asEnumArray()) [ FD ]
Line_27 $$ if (asyncSupported != null) -->Line_28 $$ servlet.setAsyncSupported(asyncSupported.asBoolean())[ CD ]
Line_3 $$ Web30MetaData metaData = new Web30MetaData()-->Line_217 $$ metaData.setAnnotations(annotations)[ FD ]
Line_89 $$ if (webFilterAnnotations != null && webFilterAnnotations.size() > 0) -->Line_91 $$ List<FilterMappingMetaData> filterMappings = new ArrayList<FilterMappingMetaData>()[ CD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_59 $$ AnnotationValue largeIconValue = annotation.value("largeIcon")[ FD ]
Line_165 $$ AnnotationValue servletNamesValue = annotation.value("servletNames")-->Line_166 $$ if (servletNamesValue != null) [ FD ]
Line_30 $$ AnnotationValue initParamsValue = annotation.value("initParams")-->Line_111 $$ if (initParamsValue != null) [ FD ]
Line_215 $$ if (annotations == null) -->Line_217 $$ metaData.setAnnotations(annotations)[ CD ]
Line_89 $$ if (webFilterAnnotations != null && webFilterAnnotations.size() > 0) -->Line_188 $$ metaData.setFilterMappings(filterMappings)[ CD ]
Line_318 $$ if (httpConstraintValue != null) -->Line_324 $$ AnnotationValue httpConstraintTGValue = httpConstraint.value("transportGuarantee")[ CD ]
Line_276 $$ MultipartConfigMetaData multipartConfig = new MultipartConfigMetaData()-->Line_283 $$ multipartConfig.setMaxFileSize(maxFileSizeValue.asLong())[ FD ]
Line_341 $$ for (AnnotationInstance httpMethodConstraint : httpMethodConstraints) -->Line_347 $$ AnnotationValue httpMethodConstraintERSValue = httpMethodConstraint.value("emptyRoleSemantic")[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_137 $$ AnnotationValue displayNameValue = annotation.value("displayName")[ FD ]
Line_10 $$ AnnotationTarget target = annotation.target()-->Line_232 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidRunAsAnnotation(target))[ FD ]
Line_14 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_18 $$ servlet.setName(classInfo.toString())[ FD ]
Line_26 $$ AnnotationValue asyncSupported = annotation.value("asyncSupported")-->Line_28 $$ servlet.setAsyncSupported(asyncSupported.asBoolean())[ FD ]
Line_113 $$ if (initParamsAnnotations != null && initParamsAnnotations.length > 0) -->Line_133 $$ filter.setInitParam(initParams)[ CD ]
Line_300 $$ annotations = new AnnotationsMetaData()-->Line_313 $$ annotations.add(annotationMD)[ FD ]
Line_214 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_216 $$ annotations = new AnnotationsMetaData()[ FD ]
Line_241 $$ SecurityRolesMetaData securityRoles = metaData.getSecurityRoles()-->Line_242 $$ if (securityRoles == null) [ FD ]
Line_216 $$ annotations = new AnnotationsMetaData()-->Line_300 $$ annotations = new AnnotationsMetaData()[ FD ]
Line_216 $$ annotations = new AnnotationsMetaData()-->Line_262 $$ metaData.setAnnotations(annotations)[ FD ]
Line_3 $$ Web30MetaData metaData = new Web30MetaData()-->Line_298 $$ AnnotationsMetaData annotations = metaData.getAnnotations()[ FD ]
Line_277 $$ AnnotationValue locationValue = annotation.value("location")-->Line_279 $$ multipartConfig.setLocation(locationValue.asString())[ FD ]
Line_250 $$ for (String role : annotation.value().asStringArray()) -->Line_359 $$ rolesAllowed.add(role)[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_285 $$ AnnotationValue maxRequestSizeValue = annotation.value("maxRequestSize")[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_336 $$ AnnotationValue httpMethodConstraintsValue = annotation.value("httpMethodConstraints")[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_110 $$ AnnotationValue initParamsValue = annotation.value("initParams")[ FD ]
Line_26 $$ AnnotationValue asyncSupported = annotation.value("asyncSupported")-->Line_108 $$ filter.setAsyncSupported(asyncSupported.asBoolean())[ FD ]
Line_336 $$ AnnotationValue httpMethodConstraintsValue = annotation.value("httpMethodConstraints")-->Line_338 $$ AnnotationInstance[] httpMethodConstraints = httpMethodConstraintsValue.asNestedArray()[ FD ]
Line_281 $$ AnnotationValue maxFileSizeValue = annotation.value("maxFileSize")-->Line_283 $$ multipartConfig.setMaxFileSize(maxFileSizeValue.asLong())[ FD ]
Line_9 $$ ServletMetaData servlet = new ServletMetaData()-->Line_28 $$ servlet.setAsyncSupported(asyncSupported.asBoolean())[ FD ]
Line_42 $$ AnnotationValue initParamDescription = initParamsAnnotation.value("description")-->Line_45 $$ if (initParamDescription != null) [ FD ]
Line_202 $$ if (descriptionValue != null) -->Line_203 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup(descriptionValue.asString())[ CD ]
Line_260 $$ if (annotations == null) -->Line_262 $$ metaData.setAnnotations(annotations)[ CD ]
Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_310 $$ if (annotationMD == null) [ FD ]
Line_315 $$ ServletSecurityMetaData servletSecurity = new ServletSecurityMetaData()-->Line_365 $$ servletSecurity.setHttpMethodConstraints(methodConstraints)[ FD ]
Line_37 $$ AnnotationValue initParamName = initParamsAnnotation.value("name")-->Line_43 $$ initParam.setParamName(initParamName.asString())[ FD ]
Line_226 $$ if (annotationMD == null) -->Line_228 $$ annotationMD.setClassName(classInfo.toString())[ CD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_212 $$ final List<AnnotationInstance> runAsAnnotations = index.getAnnotations(runAs)[ CD ]
Line_227 $$ annotationMD = new AnnotationMetaData()-->Line_236 $$ annotationMD.setRunAs(runAs)[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_195 $$ AnnotationTarget target = annotation.target()[ FD ]
Line_192 $$ List<ListenerMetaData> listeners = new ArrayList<ListenerMetaData>()-->Line_210 $$ metaData.setListeners(listeners)[ FD ]
Line_337 $$ if (httpMethodConstraintsValue != null) -->Line_338 $$ AnnotationInstance[] httpMethodConstraints = httpMethodConstraintsValue.asNestedArray()[ CD ]
Line_93 $$ FilterMetaData filter = new FilterMetaData()-->Line_99 $$ filter.setFilterClass(classInfo.toString())[ FD ]
Line_9 $$ ServletMetaData servlet = new ServletMetaData()-->Line_53 $$ servlet.setInitParam(initParams)[ FD ]
Line_315 $$ ServletSecurityMetaData servletSecurity = new ServletSecurityMetaData()-->Line_322 $$ servletSecurity.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(httpConstraintERSValue.asEnum()))[ FD ]
Line_227 $$ annotationMD = new AnnotationMetaData()-->Line_368 $$ annotationMD.setServletSecurity(servletSecurity)[ FD ]
Line_257 $$ final List<AnnotationInstance> multipartConfigAnnotations = index.getAnnotations(multipartConfig)-->Line_258 $$ if (multipartConfigAnnotations != null && multipartConfigAnnotations.size() > 0) [ FD ]
Line_250 $$ for (String role : annotation.value().asStringArray()) -->Line_252 $$ sr.setRoleName(role)[ FD ]
Line_9 $$ ServletMetaData servlet = new ServletMetaData()-->Line_62 $$ servlet.setDescriptionGroup(descriptionGroup)[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_281 $$ AnnotationValue maxFileSizeValue = annotation.value("maxFileSize")[ FD ]
Line_342 $$ HttpMethodConstraintMetaData methodConstraint = new HttpMethodConstraintMetaData()-->Line_353 $$ methodConstraint.setTransportGuarantee(TransportGuaranteeType.valueOf(httpMethodConstraintTGValue.asEnum()))[ FD ]
Line_356 $$ rolesAllowed = new ArrayList<String>()-->Line_359 $$ rolesAllowed.add(role)[ FD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_3 $$ Web30MetaData metaData = new Web30MetaData()[ CD ]
Line_60 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())-->Line_141 $$ if (descriptionGroup != null) [ FD ]
Line_214 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_261 $$ annotations = new AnnotationsMetaData()[ FD ]
Line_10 $$ AnnotationTarget target = annotation.target()-->Line_12 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidWebServletAnnotation(target))[ FD ]
Line_290 $$ if (fileSizeThresholdValue != null && fileSizeThresholdValue.asInt() != 0) -->Line_291 $$ multipartConfig.setFileSizeThreshold(fileSizeThresholdValue.asInt())[ CD ]
Line_88 $$ final List<AnnotationInstance> webFilterAnnotations = index.getAnnotations(webFilter)-->Line_89 $$ if (webFilterAnnotations != null && webFilterAnnotations.size() > 0) [ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_67 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")[ FD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_297 $$ if (servletSecurityAnnotations != null && servletSecurityAnnotations.size() > 0) [ CD ]
Line_60 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())-->Line_62 $$ servlet.setDescriptionGroup(descriptionGroup)[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_231 $$ if (annotation.value() == null) [ FD ]
Line_315 $$ ServletSecurityMetaData servletSecurity = new ServletSecurityMetaData()-->Line_335 $$ servletSecurity.setRolesAllowed(rolesAllowed)[ FD ]
Line_192 $$ List<ListenerMetaData> listeners = new ArrayList<ListenerMetaData>()-->Line_208 $$ listeners.add(listener)[ FD ]
Line_317 $$ List<String> rolesAllowed = new ArrayList<String>()-->Line_331 $$ rolesAllowed.add(role)[ FD ]
Line_9 $$ ServletMetaData servlet = new ServletMetaData()-->Line_18 $$ servlet.setName(classInfo.toString())[ FD ]
Line_278 $$ if (locationValue != null && locationValue.asString().length() > 0) -->Line_279 $$ multipartConfig.setLocation(locationValue.asString())[ CD ]
Line_227 $$ annotationMD = new AnnotationMetaData()-->Line_271 $$ if (annotationMD == null) [ FD ]
Line_227 $$ annotationMD = new AnnotationMetaData()-->Line_273 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_342 $$ HttpMethodConstraintMetaData methodConstraint = new HttpMethodConstraintMetaData()-->Line_362 $$ methodConstraint.setRolesAllowed(rolesAllowed)[ FD ]
Line_66 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_153 $$ urlPatterns.add(urlPattern)[ FD ]
Line_36 $$ ParamValueMetaData initParam = new ParamValueMetaData()-->Line_44 $$ initParam.setParamValue(initParamValue.asString())[ FD ]
Line_89 $$ if (webFilterAnnotations != null && webFilterAnnotations.size() > 0) -->Line_187 $$ metaData.setFilters(filters)[ CD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_296 $$ final List<AnnotationInstance> servletSecurityAnnotations = index.getAnnotations(servletSecurity)[ CD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_213 $$ if (runAsAnnotations != null && runAsAnnotations.size() > 0) [ CD ]
Line_320 $$ AnnotationValue httpConstraintERSValue = httpConstraint.value()-->Line_322 $$ servletSecurity.setEmptyRoleSemantic(EmptyRoleSemanticType.valueOf(httpConstraintERSValue.asEnum()))[ FD ]
Line_14 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_270 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_5 $$ if (webServletAnnotations != null && webServletAnnotations.size() > 0) [ CD ]
Line_215 $$ if (annotations == null) -->Line_216 $$ annotations = new AnnotationsMetaData()[ CD ]
Line_261 $$ annotations = new AnnotationsMetaData()-->Line_274 $$ annotations.add(annotationMD)[ FD ]
Line_5 $$ if (webServletAnnotations != null && webServletAnnotations.size() > 0) -->Line_85 $$ metaData.setServlets(servlets)[ CD ]
Line_34 $$ List<ParamValueMetaData> initParams = new ArrayList<ParamValueMetaData>()-->Line_133 $$ filter.setInitParam(initParams)[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_265 $$ AnnotationTarget target = annotation.target()[ FD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_190 $$ final List<AnnotationInstance> webListenerAnnotations = index.getAnnotations(webListener)[ CD ]
Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_229 $$ annotations.add(annotationMD)[ FD ]
Line_3 $$ Web30MetaData metaData = new Web30MetaData()-->Line_259 $$ AnnotationsMetaData annotations = metaData.getAnnotations()[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_58 $$ AnnotationValue smallIconValue = annotation.value("smallIcon")[ FD ]
Line_47 $$ if (descriptions != null) -->Line_48 $$ initParam.setDescriptions(descriptions)[ CD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_106 $$ AnnotationValue asyncSupported = annotation.value("asyncSupported")[ FD ]
Line_214 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_301 $$ metaData.setAnnotations(annotations)[ FD ]
Line_272 $$ annotationMD = new AnnotationMetaData()-->Line_368 $$ annotationMD.setServletSecurity(servletSecurity)[ FD ]
Line_243 $$ securityRoles = new SecurityRolesMetaData()-->Line_244 $$ metaData.setSecurityRoles(securityRoles)[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_94 $$ AnnotationTarget target = annotation.target()[ FD ]
Line_60 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())-->Line_61 $$ if (descriptionGroup != null) [ FD ]
Line_145 $$ FilterMappingMetaData filterMapping = new FilterMappingMetaData()-->Line_184 $$ filterMappings.add(filterMapping)[ FD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_4 $$ final List<AnnotationInstance> webServletAnnotations = index.getAnnotations(webServlet)[ CD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_239 $$ final List<AnnotationInstance> declareRolesAnnotations = index.getAnnotations(declareRoles)[ CD ]
Line_3 $$ Web30MetaData metaData = new Web30MetaData()-->Line_187 $$ metaData.setFilters(filters)[ FD ]
Line_299 $$ if (annotations == null) -->Line_300 $$ annotations = new AnnotationsMetaData()[ CD ]
Line_145 $$ FilterMappingMetaData filterMapping = new FilterMappingMetaData()-->Line_146 $$ filterMapping.setFilterName(filter.getName())[ FD ]
Line_260 $$ if (annotations == null) -->Line_261 $$ annotations = new AnnotationsMetaData()[ CD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_30 $$ AnnotationValue initParamsValue = annotation.value("initParams")[ FD ]
Line_214 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_309 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_148 $$ List<String> servletNames = new ArrayList<String>()-->Line_172 $$ filterMapping.setServletNames(servletNames)[ FD ]
Line_234 $$ RunAsMetaData runAs = new RunAsMetaData()-->Line_235 $$ runAs.setRoleName(annotation.value().asString())[ FD ]
Line_343 $$ AnnotationValue httpMethodConstraintValue = httpMethodConstraint.value()-->Line_345 $$ methodConstraint.setMethod(httpMethodConstraintValue.asString())[ FD ]
Line_241 $$ SecurityRolesMetaData securityRoles = metaData.getSecurityRoles()-->Line_244 $$ metaData.setSecurityRoles(securityRoles)[ FD ]
Line_67 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_68 $$ if (urlPatternsValue != null) [ FD ]
Line_10 $$ AnnotationTarget target = annotation.target()-->Line_199 $$ ClassInfo classInfo = ClassInfo.class.cast(target)[ FD ]
Line_261 $$ annotations = new AnnotationsMetaData()-->Line_313 $$ annotations.add(annotationMD)[ FD ]
Line_285 $$ AnnotationValue maxRequestSizeValue = annotation.value("maxRequestSize")-->Line_286 $$ if (maxRequestSizeValue != null && maxRequestSizeValue.asLong() != -1L) [ FD ]
Line_10 $$ AnnotationTarget target = annotation.target()-->Line_267 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidMultipartConfigAnnotation(target))[ FD ]
Line_328 $$ AnnotationValue rolesAllowedValue = httpConstraint.value("rolesAllowed")-->Line_329 $$ if (rolesAllowedValue != null) [ FD ]
Line_67 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_151 $$ if (urlPatternsValue != null) [ FD ]
Line_351 $$ AnnotationValue httpMethodConstraintTGValue = httpMethodConstraint.value("transportGuarantee")-->Line_352 $$ if (httpMethodConstraintTGValue != null) [ FD ]
Line_317 $$ List<String> rolesAllowed = new ArrayList<String>()-->Line_359 $$ rolesAllowed.add(role)[ FD ]
Line_26 $$ AnnotationValue asyncSupported = annotation.value("asyncSupported")-->Line_27 $$ if (asyncSupported != null) [ FD ]
Line_149 $$ List<DispatcherType> dispatchers = new ArrayList<DispatcherType>()-->Line_177 $$ dispatchers.add(DispatcherType.valueOf(dispatcherValue))[ FD ]
Line_31 $$ if (initParamsValue != null) -->Line_32 $$ AnnotationInstance[] initParamsAnnotations = initParamsValue.asNestedArray()[ CD ]
Line_16 $$ AnnotationValue nameValue = annotation.value("name")-->Line_20 $$ servlet.setName(nameValue.asString())[ FD ]
Line_67 $$ AnnotationValue urlPatternsValue = annotation.value("urlPatterns")-->Line_75 $$ for (String urlPattern : urlPatternsValue.asStringArray()) [ FD ]
Line_3 $$ Web30MetaData metaData = new Web30MetaData()-->Line_85 $$ metaData.setServlets(servlets)[ FD ]
Line_16 $$ AnnotationValue nameValue = annotation.value("name")-->Line_104 $$ filter.setName(nameValue.asString())[ FD ]
Line_213 $$ if (runAsAnnotations != null && runAsAnnotations.size() > 0) -->Line_214 $$ AnnotationsMetaData annotations = metaData.getAnnotations()[ CD ]
Line_315 $$ ServletSecurityMetaData servletSecurity = new ServletSecurityMetaData()-->Line_368 $$ annotationMD.setServletSecurity(servletSecurity)[ FD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_88 $$ final List<AnnotationInstance> webFilterAnnotations = index.getAnnotations(webFilter)[ FD ]
Line_17 $$ if (nameValue == null || nameValue.asString().isEmpty()) -->Line_18 $$ servlet.setName(classInfo.toString())[ CD ]
Line_352 $$ if (httpMethodConstraintTGValue != null) -->Line_353 $$ methodConstraint.setTransportGuarantee(TransportGuaranteeType.valueOf(httpMethodConstraintTGValue.asEnum()))[ CD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_88 $$ final List<AnnotationInstance> webFilterAnnotations = index.getAnnotations(webFilter)[ CD ]
Line_60 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())-->Line_205 $$ listener.setDescriptionGroup(descriptionGroup)[ FD ]
Line_10 $$ AnnotationTarget target = annotation.target()-->Line_120 $$ throw new DeploymentUnitProcessingException(UndertowLogger.ROOT_LOGGER.invalidWebInitParamAnnotation(target))[ FD ]
Line_251 $$ SecurityRoleMetaData sr = new SecurityRoleMetaData()-->Line_252 $$ sr.setRoleName(role)[ FD ]
Line_9 $$ ServletMetaData servlet = new ServletMetaData()-->Line_83 $$ servlets.add(servlet)[ FD ]
Line_214 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_313 $$ annotations.add(annotationMD)[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_57 $$ AnnotationValue displayNameValue = annotation.value("displayName")[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_247 $$ if (annotation.value() == null) [ FD ]
Line_9 $$ ServletMetaData servlet = new ServletMetaData()-->Line_20 $$ servlet.setName(nameValue.asString())[ FD ]
Line_36 $$ ParamValueMetaData initParam = new ParamValueMetaData()-->Line_48 $$ initParam.setDescriptions(descriptions)[ FD ]
Line_57 $$ AnnotationValue displayNameValue = annotation.value("displayName")-->Line_60 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())[ FD ]
Line_90 $$ FiltersMetaData filters = new FiltersMetaData()-->Line_144 $$ filters.add(filter)[ FD ]
Line_194 $$ ListenerMetaData listener = new ListenerMetaData()-->Line_200 $$ listener.setListenerClass(classInfo.toString())[ FD ]
Line_10 $$ AnnotationTarget target = annotation.target()-->Line_308 $$ ClassInfo classInfo = ClassInfo.class.cast(target)[ FD ]
Line_10 $$ AnnotationTarget target = annotation.target()-->Line_224 $$ ClassInfo classInfo = ClassInfo.class.cast(target)[ FD ]
Line_31 $$ if (initParamsValue != null) -->Line_33 $$ if (initParamsAnnotations != null && initParamsAnnotations.length > 0) [ CD ]
Line_93 $$ FilterMetaData filter = new FilterMetaData()-->Line_102 $$ filter.setName(classInfo.toString())[ FD ]
Line_35 $$ for (AnnotationInstance initParamsAnnotation : initParamsAnnotations) -->Line_42 $$ AnnotationValue initParamDescription = initParamsAnnotation.value("description")[ FD ]
Line_340 $$ List<HttpMethodConstraintMetaData> methodConstraints = new ArrayList<HttpMethodConstraintMetaData>()-->Line_365 $$ servletSecurity.setHttpMethodConstraints(methodConstraints)[ FD ]
Line_17 $$ if (nameValue == null || nameValue.asString().isEmpty()) -->Line_20 $$ servlet.setName(nameValue.asString())[ CD ]
Line_145 $$ FilterMappingMetaData filterMapping = new FilterMappingMetaData()-->Line_181 $$ filterMapping.setDispatchers(dispatchers)[ FD ]
Line_16 $$ AnnotationValue nameValue = annotation.value("name")-->Line_17 $$ if (nameValue == null || nameValue.asString().isEmpty()) [ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_73 $$ urlPatternsValue = annotation.value()[ FD ]
Line_56 $$ AnnotationValue descriptionValue = annotation.value("description")-->Line_140 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())[ FD ]
Line_299 $$ if (annotations == null) -->Line_301 $$ metaData.setAnnotations(annotations)[ CD ]
Line_216 $$ annotations = new AnnotationsMetaData()-->Line_270 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_300 $$ annotations = new AnnotationsMetaData()-->Line_309 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_56 $$ AnnotationValue descriptionValue = annotation.value("description")[ FD ]
Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_226 $$ if (annotationMD == null) [ FD ]
Line_93 $$ FilterMetaData filter = new FilterMetaData()-->Line_104 $$ filter.setName(nameValue.asString())[ FD ]
Line_59 $$ AnnotationValue largeIconValue = annotation.value("largeIcon")-->Line_140 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())[ FD ]
Line_60 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())-->Line_204 $$ if (descriptionGroup != null) [ FD ]
Line_272 $$ annotationMD = new AnnotationMetaData()-->Line_273 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_38 $$ AnnotationValue initParamValue = initParamsAnnotation.value()-->Line_124 $$ initParam.setParamValue(initParamValue.asString())[ FD ]
Line_318 $$ if (httpConstraintValue != null) -->Line_320 $$ AnnotationValue httpConstraintERSValue = httpConstraint.value()[ CD ]
Line_318 $$ if (httpConstraintValue != null) -->Line_329 $$ if (rolesAllowedValue != null) [ CD ]
Line_89 $$ if (webFilterAnnotations != null && webFilterAnnotations.size() > 0) -->Line_90 $$ FiltersMetaData filters = new FiltersMetaData()[ CD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_371 $$ return metaData[ CD ]
Line_261 $$ annotations = new AnnotationsMetaData()-->Line_301 $$ metaData.setAnnotations(annotations)[ FD ]
Line_14 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_102 $$ filter.setName(classInfo.toString())[ FD ]
Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_271 $$ if (annotationMD == null) [ FD ]
Line_204 $$ if (descriptionGroup != null) -->Line_205 $$ listener.setDescriptionGroup(descriptionGroup)[ CD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_289 $$ AnnotationValue fileSizeThresholdValue = annotation.value("fileSizeThreshold")[ FD ]
Line_66 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_183 $$ if (urlPatterns.size() > 0 || servletNames.size() > 0) [ FD ]
Line_214 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_262 $$ metaData.setAnnotations(annotations)[ FD ]
Line_216 $$ annotations = new AnnotationsMetaData()-->Line_217 $$ metaData.setAnnotations(annotations)[ FD ]
Line_311 $$ annotationMD = new AnnotationMetaData()-->Line_368 $$ annotationMD.setServletSecurity(servletSecurity)[ FD ]
Line_35 $$ for (AnnotationInstance initParamsAnnotation : initParamsAnnotations) -->Line_118 $$ AnnotationValue initParamValue = initParamsAnnotation.value()[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_10 $$ AnnotationTarget target = annotation.target()[ FD ]
Line_148 $$ List<String> servletNames = new ArrayList<String>()-->Line_168 $$ servletNames.add(servletName)[ FD ]
Line_227 $$ annotationMD = new AnnotationMetaData()-->Line_228 $$ annotationMD.setClassName(classInfo.toString())[ FD ]
Line_261 $$ annotations = new AnnotationsMetaData()-->Line_262 $$ metaData.setAnnotations(annotations)[ FD ]
Line_111 $$ if (initParamsValue != null) -->Line_113 $$ if (initParamsAnnotations != null && initParamsAnnotations.length > 0) [ CD ]
Line_165 $$ AnnotationValue servletNamesValue = annotation.value("servletNames")-->Line_167 $$ for (String servletName : servletNamesValue.asStringArray()) [ FD ]
Line_56 $$ AnnotationValue descriptionValue = annotation.value("description")-->Line_203 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup(descriptionValue.asString())[ FD ]
Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_227 $$ annotationMD = new AnnotationMetaData()[ FD ]
Line_5 $$ if (webServletAnnotations != null && webServletAnnotations.size() > 0) -->Line_7 $$ List<ServletMappingMetaData> servletMappings = new ArrayList<ServletMappingMetaData>()[ CD ]
Line_3 $$ Web30MetaData metaData = new Web30MetaData()-->Line_210 $$ metaData.setListeners(listeners)[ FD ]
Line_277 $$ AnnotationValue locationValue = annotation.value("location")-->Line_278 $$ if (locationValue != null && locationValue.asString().length() > 0) [ FD ]
Line_73 $$ urlPatternsValue = annotation.value()-->Line_75 $$ for (String urlPattern : urlPatternsValue.asStringArray()) [ FD ]
Line_79 $$ if (urlPatterns.size() > 0) -->Line_81 $$ servletMappings.add(servletMapping)[ CD ]
Line_26 $$ AnnotationValue asyncSupported = annotation.value("asyncSupported")-->Line_107 $$ if (asyncSupported != null) [ FD ]
Line_59 $$ AnnotationValue largeIconValue = annotation.value("largeIcon")-->Line_60 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())[ FD ]
Line_272 $$ annotationMD = new AnnotationMetaData()-->Line_293 $$ annotationMD.setMultipartConfig(multipartConfig)[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_165 $$ AnnotationValue servletNamesValue = annotation.value("servletNames")[ FD ]
Line_216 $$ annotations = new AnnotationsMetaData()-->Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_240 $$ if (declareRolesAnnotations != null && declareRolesAnnotations.size() > 0) -->Line_242 $$ if (securityRoles == null) [ CD ]
Line_297 $$ if (servletSecurityAnnotations != null && servletSecurityAnnotations.size() > 0) -->Line_298 $$ AnnotationsMetaData annotations = metaData.getAnnotations()[ CD ]
Line_216 $$ annotations = new AnnotationsMetaData()-->Line_301 $$ metaData.setAnnotations(annotations)[ FD ]
Line_38 $$ AnnotationValue initParamValue = initParamsAnnotation.value()-->Line_44 $$ initParam.setParamValue(initParamValue.asString())[ FD ]
Line_227 $$ annotationMD = new AnnotationMetaData()-->Line_229 $$ annotations.add(annotationMD)[ FD ]
Line_162 $$ if (urlPatterns.size() > 0) -->Line_163 $$ filterMapping.setUrlPatterns(urlPatterns)[ CD ]
Line_343 $$ AnnotationValue httpMethodConstraintValue = httpMethodConstraint.value()-->Line_344 $$ if (httpMethodConstraintValue != null) [ FD ]
Line_16 $$ AnnotationValue nameValue = annotation.value("name")-->Line_101 $$ if (nameValue == null || nameValue.asString().isEmpty()) [ FD ]
Line_319 $$ AnnotationInstance httpConstraint = httpConstraintValue.asNested()-->Line_320 $$ AnnotationValue httpConstraintERSValue = httpConstraint.value()[ FD ]
Line_317 $$ List<String> rolesAllowed = new ArrayList<String>()-->Line_335 $$ servletSecurity.setRolesAllowed(rolesAllowed)[ FD ]
Line_214 $$ AnnotationsMetaData annotations = metaData.getAnnotations()-->Line_274 $$ annotations.add(annotationMD)[ FD ]
Line_66 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_79 $$ if (urlPatterns.size() > 0) [ FD ]
Line_227 $$ annotationMD = new AnnotationMetaData()-->Line_311 $$ annotationMD = new AnnotationMetaData()[ FD ]
Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_293 $$ annotationMD.setMultipartConfig(multipartConfig)[ FD ]
Line_276 $$ MultipartConfigMetaData multipartConfig = new MultipartConfigMetaData()-->Line_279 $$ multipartConfig.setLocation(locationValue.asString())[ FD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_190 $$ final List<AnnotationInstance> webListenerAnnotations = index.getAnnotations(webListener)[ FD ]
Line_58 $$ AnnotationValue smallIconValue = annotation.value("smallIcon")-->Line_140 $$ DescriptionGroupMetaData descriptionGroup = getDescriptionGroup((descriptionValue == null) ? "" : descriptionValue.asString(), (displayNameValue == null) ? "" : displayNameValue.asString(), (smallIconValue == null) ? "" : smallIconValue.asString(), (largeIconValue == null) ? "" : largeIconValue.asString())[ FD ]
Line_14 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_200 $$ listener.setListenerClass(classInfo.toString())[ FD ]
Line_225 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())-->Line_311 $$ annotationMD = new AnnotationMetaData()[ FD ]
Line_14 $$ ClassInfo classInfo = ClassInfo.class.cast(target)-->Line_15 $$ servlet.setServletClass(classInfo.toString())[ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_174 $$ AnnotationValue dispatcherTypesValue = annotation.value("dispatcherTypes")[ FD ]
Line_30 $$ AnnotationValue initParamsValue = annotation.value("initParams")-->Line_32 $$ AnnotationInstance[] initParamsAnnotations = initParamsValue.asNestedArray()[ FD ]
Line_149 $$ List<DispatcherType> dispatchers = new ArrayList<DispatcherType>()-->Line_180 $$ if (dispatchers.size() > 0) [ FD ]
Line_216 $$ annotations = new AnnotationsMetaData()-->Line_309 $$ AnnotationMetaData annotationMD = annotations.get(classInfo.toString())[ FD ]
Line_156 $$ urlPatternsValue = annotation.value()-->Line_158 $$ for (String urlPattern : urlPatternsValue.asStringArray()) [ FD ]
Line_8 $$ for (final AnnotationInstance annotation : webServletAnnotations) -->Line_250 $$ for (String role : annotation.value().asStringArray()) [ FD ]
Line_69 $$ for (String urlPattern : urlPatternsValue.asStringArray()) -->Line_70 $$ urlPatterns.add(urlPattern)[ FD ]
Line_341 $$ for (AnnotationInstance httpMethodConstraint : httpMethodConstraints) -->Line_351 $$ AnnotationValue httpMethodConstraintTGValue = httpMethodConstraint.value("transportGuarantee")[ FD ]
Line_46 $$ Descriptions descriptions = getDescription(initParamDescription.asString())-->Line_47 $$ if (descriptions != null) [ FD ]
Line_66 $$ List<String> urlPatterns = new ArrayList<String>()-->Line_163 $$ filterMapping.setUrlPatterns(urlPatterns)[ FD ]
Line_2 $$ protected WebMetaData processAnnotations(Index index) throws DeploymentUnitProcessingException -->Line_4 $$ final List<AnnotationInstance> webServletAnnotations = index.getAnnotations(webServlet)[ FD ]
