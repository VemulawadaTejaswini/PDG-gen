Line_3 $$ Document document = new DocumentImpl()-->Line_16 $$ document.addText(Field.CONTENT, sb.toString())[ FD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_4 $$ document.addUID(CLASS_NAME, pluginPackage.getModuleId())[ FD ]
Line_14 $$ String shortDescription = HtmlUtil.extractText(pluginPackage.getShortDescription())-->Line_15 $$ sb.append(shortDescription)[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_21 $$ String[] statusAndInstalledVersion = PluginPackageUtil.getStatusAndInstalledVersion(pluginPackage)[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_32 $$ boolean osiLicense = false[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_27 $$ document.addKeyword("installedVersion", statusAndInstalledVersion[1])[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_16 $$ document.addText(Field.CONTENT, sb.toString())[ CD ]
Line_35 $$ if (license.isOsiApproved()) -->Line_36 $$ osiLicense = true[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_12 $$ sb.append(pluginPackage.getName())[ FD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_45 $$ document.addKeyword("tag", tags.toArray(new String[tags.size()]))[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_42 $$ document.addKeyword("repositoryURL", pluginPackage.getRepositoryURL())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_15 $$ sb.append(shortDescription)[ CD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_20 $$ document.addDate(Field.MODIFIED_DATE, pluginPackage.getModifiedDate())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_12 $$ sb.append(pluginPackage.getName())[ CD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_23 $$ document.addText(Field.TITLE, pluginPackage.getName())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_28 $$ List<License> licenses = pluginPackage.getLicenses()[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_11 $$ sb.append(StringPool.SPACE)[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_21 $$ String[] statusAndInstalledVersion = PluginPackageUtil.getStatusAndInstalledVersion(pluginPackage)[ CD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_27 $$ document.addKeyword("installedVersion", statusAndInstalledVersion[1])[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_28 $$ List<License> licenses = pluginPackage.getLicenses()[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_5 $$ document.addKeyword(Field.COMPANY_ID, CompanyConstants.SYSTEM)[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_41 $$ document.addText("pageURL", pluginPackage.getPageURL())[ CD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_40 $$ document.addKeyword("osi-approved-license", osiLicense)[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_3 $$ Document document = new DocumentImpl()[ CD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_29 $$ document.addKeyword("license", ListUtil.toArray(licenses, License.NAME_ACCESSOR))[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_17 $$ document.addKeyword(Field.ENTRY_CLASS_NAME, PluginPackage.class.getName())[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_47 $$ document.addKeyword("type", types.toArray(new String[types.size()]))[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_42 $$ document.addKeyword("repositoryURL", pluginPackage.getRepositoryURL())[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_48 $$ document.addKeyword("version", pluginPackage.getVersion())[ FD ]
Line_18 $$ ModuleId moduleIdObj = ModuleId.getInstance(pluginPackage.getModuleId())-->Line_24 $$ document.addKeyword("artifactId", moduleIdObj.getArtifactId())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_20 $$ document.addDate(Field.MODIFIED_DATE, pluginPackage.getModifiedDate())[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_49 $$ return document[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_8 $$ sb.append(StringPool.SPACE)[ CD ]
Line_18 $$ ModuleId moduleIdObj = ModuleId.getInstance(pluginPackage.getModuleId())-->Line_19 $$ document.addKeyword(Field.GROUP_ID, moduleIdObj.getGroupId())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_40 $$ document.addKeyword("osi-approved-license", osiLicense)[ CD ]
Line_28 $$ List<License> licenses = pluginPackage.getLicenses()-->Line_33 $$ for (int i = 0; i < licenses.size(); i++) [ FD ]
Line_36 $$ osiLicense = true-->Line_40 $$ document.addKeyword("osi-approved-license", osiLicense)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(7)-->Line_12 $$ sb.append(pluginPackage.getName())[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(7)-->Line_15 $$ sb.append(shortDescription)[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_6 $$ StringBundler sb = new StringBundler(7)[ CD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_30 $$ document.addText("longDescription", longDescription)[ FD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_43 $$ document.addText("shortDescription", shortDescription)[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_44 $$ List<String> tags = pluginPackage.getTags()[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_14 $$ String shortDescription = HtmlUtil.extractText(pluginPackage.getShortDescription())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_24 $$ document.addKeyword("artifactId", moduleIdObj.getArtifactId())[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_10 $$ sb.append(longDescription)[ CD ]
Line_34 $$ License license = licenses.get(i)-->Line_35 $$ if (license.isOsiApproved()) [ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_19 $$ document.addKeyword(Field.GROUP_ID, moduleIdObj.getGroupId())[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_33 $$ for (int i = 0; i < licenses.size(); i++) [ CD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_31 $$ document.addKeyword("moduleId", pluginPackage.getModuleId())[ FD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_5 $$ document.addKeyword(Field.COMPANY_ID, CompanyConstants.SYSTEM)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(7)-->Line_7 $$ sb.append(pluginPackage.getAuthor())[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(7)-->Line_13 $$ sb.append(StringPool.SPACE)[ FD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_17 $$ document.addKeyword(Field.ENTRY_CLASS_NAME, PluginPackage.class.getName())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_18 $$ ModuleId moduleIdObj = ModuleId.getInstance(pluginPackage.getModuleId())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_23 $$ document.addText(Field.TITLE, pluginPackage.getName())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_45 $$ document.addKeyword("tag", tags.toArray(new String[tags.size()]))[ CD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_24 $$ document.addKeyword("artifactId", moduleIdObj.getArtifactId())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_18 $$ ModuleId moduleIdObj = ModuleId.getInstance(pluginPackage.getModuleId())[ CD ]
Line_32 $$ boolean osiLicense = false-->Line_40 $$ document.addKeyword("osi-approved-license", osiLicense)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(7)-->Line_16 $$ document.addText(Field.CONTENT, sb.toString())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_4 $$ document.addUID(CLASS_NAME, pluginPackage.getModuleId())[ CD ]
Line_33 $$ for (int i = 0; i < licenses.size(); i++) -->Line_34 $$ License license = licenses.get(i)[ CD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_41 $$ document.addText("pageURL", pluginPackage.getPageURL())[ FD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_47 $$ document.addKeyword("type", types.toArray(new String[types.size()]))[ FD ]
Line_9 $$ String longDescription = HtmlUtil.extractText(pluginPackage.getLongDescription())-->Line_30 $$ document.addText("longDescription", longDescription)[ FD ]
Line_28 $$ List<License> licenses = pluginPackage.getLicenses()-->Line_29 $$ document.addKeyword("license", ListUtil.toArray(licenses, License.NAME_ACCESSOR))[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_29 $$ document.addKeyword("license", ListUtil.toArray(licenses, License.NAME_ACCESSOR))[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_48 $$ document.addKeyword("version", pluginPackage.getVersion())[ CD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_22 $$ document.addKeyword(Field.STATUS, statusAndInstalledVersion[0])[ FD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_25 $$ document.addText("author", pluginPackage.getAuthor())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_25 $$ document.addText("author", pluginPackage.getAuthor())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_9 $$ String longDescription = HtmlUtil.extractText(pluginPackage.getLongDescription())[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_20 $$ document.addDate(Field.MODIFIED_DATE, pluginPackage.getModifiedDate())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_43 $$ document.addText("shortDescription", shortDescription)[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_13 $$ sb.append(StringPool.SPACE)[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_31 $$ document.addKeyword("moduleId", pluginPackage.getModuleId())[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(7)-->Line_10 $$ sb.append(longDescription)[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_30 $$ document.addText("longDescription", longDescription)[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_4 $$ document.addUID(CLASS_NAME, pluginPackage.getModuleId())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_23 $$ document.addText(Field.TITLE, pluginPackage.getName())[ CD ]
Line_14 $$ String shortDescription = HtmlUtil.extractText(pluginPackage.getShortDescription())-->Line_43 $$ document.addText("shortDescription", shortDescription)[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_7 $$ sb.append(pluginPackage.getAuthor())[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_46 $$ List<String> types = pluginPackage.getTypes()[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_44 $$ List<String> tags = pluginPackage.getTags()[ CD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_19 $$ document.addKeyword(Field.GROUP_ID, moduleIdObj.getGroupId())[ FD ]
Line_44 $$ List<String> tags = pluginPackage.getTags()-->Line_45 $$ document.addKeyword("tag", tags.toArray(new String[tags.size()]))[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_26 $$ document.addText("changeLog", pluginPackage.getChangeLog())[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(7)-->Line_11 $$ sb.append(StringPool.SPACE)[ FD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_26 $$ document.addText("changeLog", pluginPackage.getChangeLog())[ FD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_48 $$ document.addKeyword("version", pluginPackage.getVersion())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_25 $$ document.addText("author", pluginPackage.getAuthor())[ CD ]
Line_9 $$ String longDescription = HtmlUtil.extractText(pluginPackage.getLongDescription())-->Line_10 $$ sb.append(longDescription)[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_41 $$ document.addText("pageURL", pluginPackage.getPageURL())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_46 $$ List<String> types = pluginPackage.getTypes()[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_31 $$ document.addKeyword("moduleId", pluginPackage.getModuleId())[ CD ]
Line_46 $$ List<String> types = pluginPackage.getTypes()-->Line_47 $$ document.addKeyword("type", types.toArray(new String[types.size()]))[ FD ]
Line_33 $$ for (int i = 0; i < licenses.size(); i++) -->Line_34 $$ License license = licenses.get(i)[ FD ]
Line_33 $$ for (int i = 0; i < licenses.size(); i++) -->Line_35 $$ if (license.isOsiApproved()) [ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_26 $$ document.addText("changeLog", pluginPackage.getChangeLog())[ CD ]
Line_6 $$ StringBundler sb = new StringBundler(7)-->Line_8 $$ sb.append(StringPool.SPACE)[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_7 $$ sb.append(pluginPackage.getAuthor())[ FD ]
Line_28 $$ List<License> licenses = pluginPackage.getLicenses()-->Line_34 $$ License license = licenses.get(i)[ FD ]
Line_3 $$ Document document = new DocumentImpl()-->Line_42 $$ document.addKeyword("repositoryURL", pluginPackage.getRepositoryURL())[ FD ]
Line_32 $$ boolean osiLicense = false-->Line_36 $$ osiLicense = true[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_9 $$ String longDescription = HtmlUtil.extractText(pluginPackage.getLongDescription())[ FD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_22 $$ document.addKeyword(Field.STATUS, statusAndInstalledVersion[0])[ CD ]
Line_2 $$ protected Document doGetDocument(PluginPackage pluginPackage) throws Exception -->Line_14 $$ String shortDescription = HtmlUtil.extractText(pluginPackage.getShortDescription())[ CD ]
