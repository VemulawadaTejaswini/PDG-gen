Line_7 $$ final ProgressIndicator progressIndicator = myProject.isDefault() ? null : ProgressIndicatorProvider.getGlobalProgressIndicator()-->Line_9 $$ progressIndicator.setText("Loading modules...")[ FD ]
Line_27 $$ if (groupPathString != null) -->Line_28 $$ final String[] groupPath = groupPathString.split(MODULE_GROUP_SEPARATOR)[ CD ]
Line_3 $$ if (myModulePaths == null || myModulePaths.isEmpty()) -->Line_4 $$ return[ CD ]
Line_7 $$ final ProgressIndicator progressIndicator = myProject.isDefault() ? null : ProgressIndicatorProvider.getGlobalProgressIndicator()-->Line_19 $$ progressIndicator.setFraction((double) i / myModulePaths.size())[ FD ]
Line_15 $$ List<ModuleLoadingErrorDescription> errors = new ArrayList<ModuleLoadingErrorDescription>()-->Line_39 $$ onModuleLoadErrors(errors)[ FD ]
Line_14 $$ final List<Module> modulesWithUnknownTypes = new ArrayList<Module>()-->Line_24 $$ modulesWithUnknownTypes.add(module)[ FD ]
Line_17 $$ ModulePath modulePath = myModulePaths.get(i)-->Line_36 $$ errors.add(ModuleLoadingErrorDescription.create(moduleWithNameAlreadyExists.getMessage(), modulePath, this))[ FD ]
Line_22 $$ final Module module = moduleModel.loadModuleInternal(modulePath.getPath())-->Line_23 $$ if (isUnknownModuleType(module)) [ FD ]
Line_15 $$ List<ModuleLoadingErrorDescription> errors = new ArrayList<ModuleLoadingErrorDescription>()-->Line_34 $$ errors.add(ModuleLoadingErrorDescription.create(ProjectBundle.message("module.cannot.load.error", modulePath.getPath(), e.getMessage()), modulePath, this))[ FD ]
Line_2 $$ protected void loadModules(@NotNull ModuleModelImpl moduleModel) -->Line_16 $$ for (int i = 0; i < myModulePaths.size(); i++) [ CD ]
Line_15 $$ List<ModuleLoadingErrorDescription> errors = new ArrayList<ModuleLoadingErrorDescription>()-->Line_36 $$ errors.add(ModuleLoadingErrorDescription.create(moduleWithNameAlreadyExists.getMessage(), modulePath, this))[ FD ]
Line_7 $$ final ProgressIndicator progressIndicator = myProject.isDefault() ? null : ProgressIndicatorProvider.getGlobalProgressIndicator()-->Line_8 $$ if (progressIndicator != null) [ FD ]
Line_7 $$ final ProgressIndicator progressIndicator = myProject.isDefault() ? null : ProgressIndicatorProvider.getGlobalProgressIndicator()-->Line_41 $$ if (progressIndicator != null) [ FD ]
Line_8 $$ if (progressIndicator != null) -->Line_9 $$ progressIndicator.setText("Loading modules...")[ CD ]
Line_16 $$ for (int i = 0; i < myModulePaths.size(); i++) -->Line_17 $$ ModulePath modulePath = myModulePaths.get(i)[ FD ]
Line_2 $$ protected void loadModules(@NotNull ModuleModelImpl moduleModel) -->Line_40 $$ showUnknownModuleTypeNotification(modulesWithUnknownTypes)[ CD ]
Line_17 $$ ModulePath modulePath = myModulePaths.get(i)-->Line_32 $$ myFailedModulePaths.remove(modulePath)[ FD ]
Line_2 $$ protected void loadModules(@NotNull ModuleModelImpl moduleModel) -->Line_14 $$ final List<Module> modulesWithUnknownTypes = new ArrayList<Module>()[ CD ]
Line_17 $$ ModulePath modulePath = myModulePaths.get(i)-->Line_34 $$ errors.add(ModuleLoadingErrorDescription.create(ProjectBundle.message("module.cannot.load.error", modulePath.getPath(), e.getMessage()), modulePath, this))[ FD ]
Line_8 $$ if (progressIndicator != null) -->Line_10 $$ progressIndicator.setText2("")[ CD ]
Line_2 $$ protected void loadModules(@NotNull ModuleModelImpl moduleModel) -->Line_39 $$ onModuleLoadErrors(errors)[ CD ]
Line_2 $$ protected void loadModules(@NotNull ModuleModelImpl moduleModel) -->Line_7 $$ final ProgressIndicator progressIndicator = myProject.isDefault() ? null : ProgressIndicatorProvider.getGlobalProgressIndicator()[ CD ]
Line_26 $$ final String groupPathString = modulePath.getModuleGroup()-->Line_28 $$ final String[] groupPath = groupPathString.split(MODULE_GROUP_SEPARATOR)[ FD ]
Line_7 $$ final ProgressIndicator progressIndicator = myProject.isDefault() ? null : ProgressIndicatorProvider.getGlobalProgressIndicator()-->Line_42 $$ progressIndicator.setIndeterminate(true)[ FD ]
Line_26 $$ final String groupPathString = modulePath.getModuleGroup()-->Line_27 $$ if (groupPathString != null) [ FD ]
Line_2 $$ protected void loadModules(@NotNull ModuleModelImpl moduleModel) -->Line_8 $$ if (progressIndicator != null) [ CD ]
Line_2 $$ protected void loadModules(@NotNull ModuleModelImpl moduleModel) -->Line_6 $$ ModuleGroupInterner groupInterner = new ModuleGroupInterner()[ CD ]
Line_2 $$ protected void loadModules(@NotNull ModuleModelImpl moduleModel) -->Line_15 $$ List<ModuleLoadingErrorDescription> errors = new ArrayList<ModuleLoadingErrorDescription>()[ CD ]
Line_22 $$ final Module module = moduleModel.loadModuleInternal(modulePath.getPath())-->Line_24 $$ modulesWithUnknownTypes.add(module)[ FD ]
Line_2 $$ protected void loadModules(@NotNull ModuleModelImpl moduleModel) -->Line_3 $$ if (myModulePaths == null || myModulePaths.isEmpty()) [ CD ]
Line_41 $$ if (progressIndicator != null) -->Line_42 $$ progressIndicator.setIndeterminate(true)[ CD ]
Line_2 $$ protected void loadModules(@NotNull ModuleModelImpl moduleModel) -->Line_22 $$ final Module module = moduleModel.loadModuleInternal(modulePath.getPath())[ FD ]
Line_7 $$ final ProgressIndicator progressIndicator = myProject.isDefault() ? null : ProgressIndicatorProvider.getGlobalProgressIndicator()-->Line_18 $$ if (progressIndicator != null) [ FD ]
Line_7 $$ final ProgressIndicator progressIndicator = myProject.isDefault() ? null : ProgressIndicatorProvider.getGlobalProgressIndicator()-->Line_10 $$ progressIndicator.setText2("")[ FD ]
Line_17 $$ ModulePath modulePath = myModulePaths.get(i)-->Line_26 $$ final String groupPathString = modulePath.getModuleGroup()[ FD ]
Line_23 $$ if (isUnknownModuleType(module)) -->Line_24 $$ modulesWithUnknownTypes.add(module)[ CD ]
Line_2 $$ protected void loadModules(@NotNull ModuleModelImpl moduleModel) -->Line_12 $$ myFailedModulePaths.clear()[ CD ]
Line_18 $$ if (progressIndicator != null) -->Line_19 $$ progressIndicator.setFraction((double) i / myModulePaths.size())[ CD ]
Line_16 $$ for (int i = 0; i < myModulePaths.size(); i++) -->Line_18 $$ if (progressIndicator != null) [ CD ]
Line_14 $$ final List<Module> modulesWithUnknownTypes = new ArrayList<Module>()-->Line_40 $$ showUnknownModuleTypeNotification(modulesWithUnknownTypes)[ FD ]
Line_2 $$ protected void loadModules(@NotNull ModuleModelImpl moduleModel) -->Line_13 $$ myFailedModulePaths.addAll(myModulePaths)[ CD ]
Line_16 $$ for (int i = 0; i < myModulePaths.size(); i++) -->Line_17 $$ ModulePath modulePath = myModulePaths.get(i)[ CD ]
Line_2 $$ protected void loadModules(@NotNull ModuleModelImpl moduleModel) -->Line_41 $$ if (progressIndicator != null) [ CD ]
Line_17 $$ ModulePath modulePath = myModulePaths.get(i)-->Line_22 $$ final Module module = moduleModel.loadModuleInternal(modulePath.getPath())[ FD ]
