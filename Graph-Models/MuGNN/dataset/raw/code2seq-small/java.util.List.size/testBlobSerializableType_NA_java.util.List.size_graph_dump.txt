Line_8 $$ BlobSerializableType type = new BlobSerializableType(lobHandler, null)-->Line_9 $$ assertEquals(1, type.sqlTypes().length)[ FD ]
Line_2 $$ public void testBlobSerializableType() throws Exception -->Line_4 $$ ObjectOutputStream oos = new ObjectOutputStream(baos)[ CD ]
Line_2 $$ public void testBlobSerializableType() throws Exception -->Line_3 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_17 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_20 $$ ((TransactionSynchronization) synchs.get(0)).afterCompletion(TransactionSynchronization.STATUS_COMMITTED)[ FD ]
Line_2 $$ public void testBlobSerializableType() throws Exception -->Line_12 $$ assertTrue(type.isMutable())[ CD ]
Line_4 $$ ObjectOutputStream oos = new ObjectOutputStream(baos)-->Line_6 $$ oos.close()[ FD ]
Line_8 $$ BlobSerializableType type = new BlobSerializableType(lobHandler, null)-->Line_16 $$ type.nullSafeSet(ps, "content", 1)[ FD ]
Line_3 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_7 $$ given(lobHandler.getBlobAsBinaryStream(rs, "column")).willReturn(new ByteArrayInputStream(baos.toByteArray()))[ FD ]
Line_17 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_18 $$ assertEquals(1, synchs.size())[ FD ]
Line_8 $$ BlobSerializableType type = new BlobSerializableType(lobHandler, null)-->Line_13 $$ assertEquals("content", type.nullSafeGet(rs, new String[] [ FD ]
Line_2 $$ public void testBlobSerializableType() throws Exception -->Line_10 $$ assertEquals(Types.BLOB, type.sqlTypes()[0])[ CD ]
Line_2 $$ public void testBlobSerializableType() throws Exception -->Line_11 $$ assertEquals(Serializable.class, type.returnedClass())[ CD ]
Line_3 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_24 $$ verify(lobCreator).setBlobAsBytes(ps, 1, baos.toByteArray())[ FD ]
Line_2 $$ public void testBlobSerializableType() throws Exception -->Line_13 $$ assertEquals("content", type.nullSafeGet(rs, new String[] [ CD ]
Line_4 $$ ObjectOutputStream oos = new ObjectOutputStream(baos)-->Line_5 $$ oos.writeObject("content")[ FD ]
Line_2 $$ public void testBlobSerializableType() throws Exception -->Line_24 $$ verify(lobCreator).setBlobAsBytes(ps, 1, baos.toByteArray())[ CD ]
Line_17 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_19 $$ ((TransactionSynchronization) synchs.get(0)).beforeCompletion()[ FD ]
Line_2 $$ public void testBlobSerializableType() throws Exception -->Line_8 $$ BlobSerializableType type = new BlobSerializableType(lobHandler, null)[ CD ]
Line_2 $$ public void testBlobSerializableType() throws Exception -->Line_9 $$ assertEquals(1, type.sqlTypes().length)[ CD ]
Line_2 $$ public void testBlobSerializableType() throws Exception -->Line_5 $$ oos.writeObject("content")[ CD ]
Line_8 $$ BlobSerializableType type = new BlobSerializableType(lobHandler, null)-->Line_10 $$ assertEquals(Types.BLOB, type.sqlTypes()[0])[ FD ]
Line_2 $$ public void testBlobSerializableType() throws Exception -->Line_6 $$ oos.close()[ CD ]
Line_8 $$ BlobSerializableType type = new BlobSerializableType(lobHandler, null)-->Line_11 $$ assertEquals(Serializable.class, type.returnedClass())[ FD ]
Line_2 $$ public void testBlobSerializableType() throws Exception -->Line_14 $$ TransactionSynchronizationManager.initSynchronization()[ CD ]
Line_8 $$ BlobSerializableType type = new BlobSerializableType(lobHandler, null)-->Line_12 $$ assertTrue(type.isMutable())[ FD ]
Line_2 $$ public void testBlobSerializableType() throws Exception -->Line_7 $$ given(lobHandler.getBlobAsBinaryStream(rs, "column")).willReturn(new ByteArrayInputStream(baos.toByteArray()))[ CD ]
