Line_6 $$ Set<Module> modules = ContainerUtil.newLinkedHashSet()-->Line_18 $$ List<Module> list = ContainerUtil.newArrayList(modules)[ FD ]
Line_18 $$ List<Module> list = ContainerUtil.newArrayList(modules)-->Line_21 $$ result = result.uniteWith(GlobalSearchScope.moduleWithDependentsScope(list.get(i)))[ FD ]
Line_18 $$ List<Module> list = ContainerUtil.newArrayList(modules)-->Line_20 $$ for (int i = 1; i < list.size(); i++) [ FD ]
Line_8 $$ Module module = ModuleUtilCore.findModuleForPsiElement(property.getPsiElement())-->Line_12 $$ if (module != ownModule) [ FD ]
Line_9 $$ if (module == null) -->Line_10 $$ return GlobalSearchScope.allScope(project)[ CD ]
Line_6 $$ Set<Module> modules = ContainerUtil.newLinkedHashSet()-->Line_13 $$ modules.add(module)[ FD ]
Line_4 $$ if (key == null)-->Line_5 $$ return null[ CD ]
Line_7 $$ for (IProperty property : PropertiesImplUtil.findPropertiesByKey(project, key)) -->Line_8 $$ Module module = ModuleUtilCore.findModuleForPsiElement(property.getPsiElement())[ FD ]
Line_8 $$ Module module = ModuleUtilCore.findModuleForPsiElement(property.getPsiElement())-->Line_13 $$ modules.add(module)[ FD ]
Line_18 $$ List<Module> list = ContainerUtil.newArrayList(modules)-->Line_19 $$ GlobalSearchScope result = GlobalSearchScope.moduleWithDependentsScope(list.get(0))[ FD ]
Line_20 $$ for (int i = 1; i < list.size(); i++) -->Line_21 $$ result = result.uniteWith(GlobalSearchScope.moduleWithDependentsScope(list.get(i)))[ CD ]
Line_19 $$ GlobalSearchScope result = GlobalSearchScope.moduleWithDependentsScope(list.get(0))-->Line_21 $$ result = result.uniteWith(GlobalSearchScope.moduleWithDependentsScope(list.get(i)))[ FD ]
Line_12 $$ if (module != ownModule) -->Line_13 $$ modules.add(module)[ CD ]
Line_8 $$ Module module = ModuleUtilCore.findModuleForPsiElement(property.getPsiElement())-->Line_9 $$ if (module == null) [ FD ]
Line_16 $$ if (modules.isEmpty())-->Line_17 $$ return null[ CD ]
Line_20 $$ for (int i = 1; i < list.size(); i++) -->Line_21 $$ result = result.uniteWith(GlobalSearchScope.moduleWithDependentsScope(list.get(i)))[ FD ]
Line_6 $$ Set<Module> modules = ContainerUtil.newLinkedHashSet()-->Line_16 $$ if (modules.isEmpty())[ FD ]
