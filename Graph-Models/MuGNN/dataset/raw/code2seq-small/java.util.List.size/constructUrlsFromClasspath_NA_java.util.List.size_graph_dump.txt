Line_5 $$ if (element.endsWith("/*")) -->Line_8 $$ if (files != null) [ CD ]
Line_5 $$ if (element.endsWith("/*")) -->Line_15 $$ if (file.exists()) [ CD ]
Line_9 $$ for (File file : files) -->Line_10 $$ urls.add(file.toURI().toURL())[ FD ]
Line_15 $$ if (file.exists()) -->Line_16 $$ urls.add(new File(element).toURI().toURL())[ CD ]
Line_3 $$ List<URL> urls = new ArrayList<URL>()-->Line_20 $$ return urls.toArray(new URL[urls.size()])[ FD ]
Line_9 $$ for (File file : files) -->Line_15 $$ if (file.exists()) [ FD ]
Line_3 $$ List<URL> urls = new ArrayList<URL>()-->Line_16 $$ urls.add(new File(element).toURI().toURL())[ FD ]
Line_4 $$ for (String element : classpath.split(File.pathSeparator)) -->Line_5 $$ if (element.endsWith("/*")) [ FD ]
Line_2 $$ static URL[] constructUrlsFromClasspath(String classpath) throws MalformedURLException -->Line_3 $$ List<URL> urls = new ArrayList<URL>()[ CD ]
Line_5 $$ if (element.endsWith("/*")) -->Line_7 $$ File[] files = new File(dir).listFiles(JAR_FILENAME_FILTER)[ CD ]
Line_2 $$ static URL[] constructUrlsFromClasspath(String classpath) throws MalformedURLException -->Line_4 $$ for (String element : classpath.split(File.pathSeparator)) [ FD ]
Line_2 $$ static URL[] constructUrlsFromClasspath(String classpath) throws MalformedURLException -->Line_20 $$ return urls.toArray(new URL[urls.size()])[ CD ]
Line_4 $$ for (String element : classpath.split(File.pathSeparator)) -->Line_6 $$ String dir = element.substring(0, element.length() - 1)[ FD ]
Line_3 $$ List<URL> urls = new ArrayList<URL>()-->Line_10 $$ urls.add(file.toURI().toURL())[ FD ]
Line_5 $$ if (element.endsWith("/*")) -->Line_6 $$ String dir = element.substring(0, element.length() - 1)[ CD ]
Line_7 $$ File[] files = new File(dir).listFiles(JAR_FILENAME_FILTER)-->Line_8 $$ if (files != null) [ FD ]
