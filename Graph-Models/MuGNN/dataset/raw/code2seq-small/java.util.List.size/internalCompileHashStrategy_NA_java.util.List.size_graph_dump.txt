Line_4 $$ ClassDefinition classDefinition = new ClassDefinition(a(PUBLIC, FINAL), makeClassName("PagesHashStrategy"), type(Object.class), type(PagesHashStrategy.class))-->Line_19 $$ generateConstructor(classDefinition, joinChannels, sizeField, channelFields, joinChannelFields, hashChannelField)[ FD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_27 $$ generatePositionEqualsRowWithPageMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields)[ CD ]
Line_11 $$ List<Type> joinChannelTypes = new ArrayList()-->Line_28 $$ generatePositionEqualsPositionMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields)[ FD ]
Line_13 $$ for (int i = 0; i < joinChannels.size(); i++) -->Line_14 $$ joinChannelTypes.add(types.get(joinChannels.get(i)))[ FD ]
Line_11 $$ List<Type> joinChannelTypes = new ArrayList()-->Line_24 $$ generateHashRowMethod(classDefinition, callSiteBinder, joinChannelTypes)[ FD ]
Line_4 $$ ClassDefinition classDefinition = new ClassDefinition(a(PUBLIC, FINAL), makeClassName("PagesHashStrategy"), type(Object.class), type(PagesHashStrategy.class))-->Line_27 $$ generatePositionEqualsRowWithPageMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields)[ FD ]
Line_11 $$ List<Type> joinChannelTypes = new ArrayList()-->Line_26 $$ generatePositionEqualsRowMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields)[ FD ]
Line_7 $$ for (int i = 0; i < types.size(); i++) -->Line_14 $$ joinChannelTypes.add(types.get(joinChannels.get(i)))[ FD ]
Line_4 $$ ClassDefinition classDefinition = new ClassDefinition(a(PUBLIC, FINAL), makeClassName("PagesHashStrategy"), type(Object.class), type(PagesHashStrategy.class))-->Line_25 $$ generateRowEqualsRowMethod(classDefinition, callSiteBinder, joinChannelTypes)[ FD ]
Line_6 $$ List<FieldDefinition> channelFields = new ArrayList()-->Line_19 $$ generateConstructor(classDefinition, joinChannels, sizeField, channelFields, joinChannelFields, hashChannelField)[ FD ]
Line_4 $$ ClassDefinition classDefinition = new ClassDefinition(a(PUBLIC, FINAL), makeClassName("PagesHashStrategy"), type(Object.class), type(PagesHashStrategy.class))-->Line_28 $$ generatePositionEqualsPositionMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields)[ FD ]
Line_11 $$ List<Type> joinChannelTypes = new ArrayList()-->Line_14 $$ joinChannelTypes.add(types.get(joinChannels.get(i)))[ FD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_3 $$ CallSiteBinder callSiteBinder = new CallSiteBinder()[ CD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_22 $$ generateAppendToMethod(classDefinition, callSiteBinder, types, channelFields)[ FD ]
Line_3 $$ CallSiteBinder callSiteBinder = new CallSiteBinder()-->Line_23 $$ generateHashPositionMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields, hashChannelField)[ FD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_11 $$ List<Type> joinChannelTypes = new ArrayList()[ CD ]
Line_5 $$ FieldDefinition sizeField = classDefinition.declareField(a(PRIVATE, FINAL), "size", type(long.class))-->Line_19 $$ generateConstructor(classDefinition, joinChannels, sizeField, channelFields, joinChannelFields, hashChannelField)[ FD ]
Line_3 $$ CallSiteBinder callSiteBinder = new CallSiteBinder()-->Line_29 $$ return defineClass(classDefinition, PagesHashStrategy.class, callSiteBinder.getBindings(), getClass().getClassLoader())[ FD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_23 $$ generateHashPositionMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields, hashChannelField)[ CD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_4 $$ ClassDefinition classDefinition = new ClassDefinition(a(PUBLIC, FINAL), makeClassName("PagesHashStrategy"), type(Object.class), type(PagesHashStrategy.class))[ CD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_18 $$ FieldDefinition hashChannelField = classDefinition.declareField(a(PRIVATE, FINAL), "hashChannel", type(List.class, Block.class))[ CD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_24 $$ generateHashRowMethod(classDefinition, callSiteBinder, joinChannelTypes)[ CD ]
Line_12 $$ List<FieldDefinition> joinChannelFields = new ArrayList()-->Line_19 $$ generateConstructor(classDefinition, joinChannels, sizeField, channelFields, joinChannelFields, hashChannelField)[ FD ]
Line_6 $$ List<FieldDefinition> channelFields = new ArrayList()-->Line_9 $$ channelFields.add(channelField)[ FD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_6 $$ List<FieldDefinition> channelFields = new ArrayList()[ CD ]
Line_18 $$ FieldDefinition hashChannelField = classDefinition.declareField(a(PRIVATE, FINAL), "hashChannel", type(List.class, Block.class))-->Line_23 $$ generateHashPositionMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields, hashChannelField)[ FD ]
Line_6 $$ List<FieldDefinition> channelFields = new ArrayList()-->Line_20 $$ generateGetChannelCountMethod(classDefinition, channelFields)[ FD ]
Line_4 $$ ClassDefinition classDefinition = new ClassDefinition(a(PUBLIC, FINAL), makeClassName("PagesHashStrategy"), type(Object.class), type(PagesHashStrategy.class))-->Line_22 $$ generateAppendToMethod(classDefinition, callSiteBinder, types, channelFields)[ FD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_22 $$ generateAppendToMethod(classDefinition, callSiteBinder, types, channelFields)[ CD ]
Line_3 $$ CallSiteBinder callSiteBinder = new CallSiteBinder()-->Line_24 $$ generateHashRowMethod(classDefinition, callSiteBinder, joinChannelTypes)[ FD ]
Line_8 $$ FieldDefinition channelField = classDefinition.declareField(a(PRIVATE, FINAL), "channel_" + i, type(List.class, Block.class))-->Line_9 $$ channelFields.add(channelField)[ FD ]
Line_4 $$ ClassDefinition classDefinition = new ClassDefinition(a(PUBLIC, FINAL), makeClassName("PagesHashStrategy"), type(Object.class), type(PagesHashStrategy.class))-->Line_5 $$ FieldDefinition sizeField = classDefinition.declareField(a(PRIVATE, FINAL), "size", type(long.class))[ FD ]
Line_5 $$ FieldDefinition sizeField = classDefinition.declareField(a(PRIVATE, FINAL), "size", type(long.class))-->Line_21 $$ generateGetSizeInBytesMethod(classDefinition, sizeField)[ FD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_12 $$ List<FieldDefinition> joinChannelFields = new ArrayList()[ CD ]
Line_7 $$ for (int i = 0; i < types.size(); i++) -->Line_13 $$ for (int i = 0; i < joinChannels.size(); i++) [ FD ]
Line_6 $$ List<FieldDefinition> channelFields = new ArrayList()-->Line_22 $$ generateAppendToMethod(classDefinition, callSiteBinder, types, channelFields)[ FD ]
Line_12 $$ List<FieldDefinition> joinChannelFields = new ArrayList()-->Line_27 $$ generatePositionEqualsRowWithPageMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields)[ FD ]
Line_3 $$ CallSiteBinder callSiteBinder = new CallSiteBinder()-->Line_27 $$ generatePositionEqualsRowWithPageMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields)[ FD ]
Line_15 $$ FieldDefinition channelField = classDefinition.declareField(a(PRIVATE, FINAL), "joinChannel_" + i, type(List.class, Block.class))-->Line_16 $$ joinChannelFields.add(channelField)[ FD ]
Line_4 $$ ClassDefinition classDefinition = new ClassDefinition(a(PUBLIC, FINAL), makeClassName("PagesHashStrategy"), type(Object.class), type(PagesHashStrategy.class))-->Line_29 $$ return defineClass(classDefinition, PagesHashStrategy.class, callSiteBinder.getBindings(), getClass().getClassLoader())[ FD ]
Line_4 $$ ClassDefinition classDefinition = new ClassDefinition(a(PUBLIC, FINAL), makeClassName("PagesHashStrategy"), type(Object.class), type(PagesHashStrategy.class))-->Line_18 $$ FieldDefinition hashChannelField = classDefinition.declareField(a(PRIVATE, FINAL), "hashChannel", type(List.class, Block.class))[ FD ]
Line_3 $$ CallSiteBinder callSiteBinder = new CallSiteBinder()-->Line_22 $$ generateAppendToMethod(classDefinition, callSiteBinder, types, channelFields)[ FD ]
Line_13 $$ for (int i = 0; i < joinChannels.size(); i++) -->Line_14 $$ joinChannelTypes.add(types.get(joinChannels.get(i)))[ CD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_13 $$ for (int i = 0; i < joinChannels.size(); i++) [ CD ]
Line_8 $$ FieldDefinition channelField = classDefinition.declareField(a(PRIVATE, FINAL), "channel_" + i, type(List.class, Block.class))-->Line_16 $$ joinChannelFields.add(channelField)[ FD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_13 $$ for (int i = 0; i < joinChannels.size(); i++) [ FD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_21 $$ generateGetSizeInBytesMethod(classDefinition, sizeField)[ CD ]
Line_3 $$ CallSiteBinder callSiteBinder = new CallSiteBinder()-->Line_28 $$ generatePositionEqualsPositionMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields)[ FD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_7 $$ for (int i = 0; i < types.size(); i++) [ FD ]
Line_12 $$ List<FieldDefinition> joinChannelFields = new ArrayList()-->Line_26 $$ generatePositionEqualsRowMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields)[ FD ]
Line_4 $$ ClassDefinition classDefinition = new ClassDefinition(a(PUBLIC, FINAL), makeClassName("PagesHashStrategy"), type(Object.class), type(PagesHashStrategy.class))-->Line_8 $$ FieldDefinition channelField = classDefinition.declareField(a(PRIVATE, FINAL), "channel_" + i, type(List.class, Block.class))[ FD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_20 $$ generateGetChannelCountMethod(classDefinition, channelFields)[ CD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_26 $$ generatePositionEqualsRowMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields)[ CD ]
Line_13 $$ for (int i = 0; i < joinChannels.size(); i++) -->Line_16 $$ joinChannelFields.add(channelField)[ CD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_19 $$ generateConstructor(classDefinition, joinChannels, sizeField, channelFields, joinChannelFields, hashChannelField)[ FD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_25 $$ generateRowEqualsRowMethod(classDefinition, callSiteBinder, joinChannelTypes)[ CD ]
Line_3 $$ CallSiteBinder callSiteBinder = new CallSiteBinder()-->Line_26 $$ generatePositionEqualsRowMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields)[ FD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_14 $$ joinChannelTypes.add(types.get(joinChannels.get(i)))[ FD ]
Line_4 $$ ClassDefinition classDefinition = new ClassDefinition(a(PUBLIC, FINAL), makeClassName("PagesHashStrategy"), type(Object.class), type(PagesHashStrategy.class))-->Line_21 $$ generateGetSizeInBytesMethod(classDefinition, sizeField)[ FD ]
Line_11 $$ List<Type> joinChannelTypes = new ArrayList()-->Line_27 $$ generatePositionEqualsRowWithPageMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields)[ FD ]
Line_11 $$ List<Type> joinChannelTypes = new ArrayList()-->Line_23 $$ generateHashPositionMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields, hashChannelField)[ FD ]
Line_4 $$ ClassDefinition classDefinition = new ClassDefinition(a(PUBLIC, FINAL), makeClassName("PagesHashStrategy"), type(Object.class), type(PagesHashStrategy.class))-->Line_26 $$ generatePositionEqualsRowMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields)[ FD ]
Line_7 $$ for (int i = 0; i < types.size(); i++) -->Line_8 $$ FieldDefinition channelField = classDefinition.declareField(a(PRIVATE, FINAL), "channel_" + i, type(List.class, Block.class))[ CD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_7 $$ for (int i = 0; i < types.size(); i++) [ CD ]
Line_13 $$ for (int i = 0; i < joinChannels.size(); i++) -->Line_15 $$ FieldDefinition channelField = classDefinition.declareField(a(PRIVATE, FINAL), "joinChannel_" + i, type(List.class, Block.class))[ CD ]
Line_4 $$ ClassDefinition classDefinition = new ClassDefinition(a(PUBLIC, FINAL), makeClassName("PagesHashStrategy"), type(Object.class), type(PagesHashStrategy.class))-->Line_15 $$ FieldDefinition channelField = classDefinition.declareField(a(PRIVATE, FINAL), "joinChannel_" + i, type(List.class, Block.class))[ FD ]
Line_4 $$ ClassDefinition classDefinition = new ClassDefinition(a(PUBLIC, FINAL), makeClassName("PagesHashStrategy"), type(Object.class), type(PagesHashStrategy.class))-->Line_24 $$ generateHashRowMethod(classDefinition, callSiteBinder, joinChannelTypes)[ FD ]
Line_12 $$ List<FieldDefinition> joinChannelFields = new ArrayList()-->Line_23 $$ generateHashPositionMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields, hashChannelField)[ FD ]
Line_3 $$ CallSiteBinder callSiteBinder = new CallSiteBinder()-->Line_25 $$ generateRowEqualsRowMethod(classDefinition, callSiteBinder, joinChannelTypes)[ FD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_29 $$ return defineClass(classDefinition, PagesHashStrategy.class, callSiteBinder.getBindings(), getClass().getClassLoader())[ CD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_5 $$ FieldDefinition sizeField = classDefinition.declareField(a(PRIVATE, FINAL), "size", type(long.class))[ CD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_19 $$ generateConstructor(classDefinition, joinChannels, sizeField, channelFields, joinChannelFields, hashChannelField)[ CD ]
Line_12 $$ List<FieldDefinition> joinChannelFields = new ArrayList()-->Line_28 $$ generatePositionEqualsPositionMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields)[ FD ]
Line_12 $$ List<FieldDefinition> joinChannelFields = new ArrayList()-->Line_16 $$ joinChannelFields.add(channelField)[ FD ]
Line_2 $$ private Class<? extends PagesHashStrategy> internalCompileHashStrategy(List<Type> types, List<Integer> joinChannels) -->Line_28 $$ generatePositionEqualsPositionMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields)[ CD ]
Line_4 $$ ClassDefinition classDefinition = new ClassDefinition(a(PUBLIC, FINAL), makeClassName("PagesHashStrategy"), type(Object.class), type(PagesHashStrategy.class))-->Line_23 $$ generateHashPositionMethod(classDefinition, callSiteBinder, joinChannelTypes, joinChannelFields, hashChannelField)[ FD ]
Line_4 $$ ClassDefinition classDefinition = new ClassDefinition(a(PUBLIC, FINAL), makeClassName("PagesHashStrategy"), type(Object.class), type(PagesHashStrategy.class))-->Line_20 $$ generateGetChannelCountMethod(classDefinition, channelFields)[ FD ]
Line_7 $$ for (int i = 0; i < types.size(); i++) -->Line_9 $$ channelFields.add(channelField)[ CD ]
Line_11 $$ List<Type> joinChannelTypes = new ArrayList()-->Line_25 $$ generateRowEqualsRowMethod(classDefinition, callSiteBinder, joinChannelTypes)[ FD ]
Line_18 $$ FieldDefinition hashChannelField = classDefinition.declareField(a(PRIVATE, FINAL), "hashChannel", type(List.class, Block.class))-->Line_19 $$ generateConstructor(classDefinition, joinChannels, sizeField, channelFields, joinChannelFields, hashChannelField)[ FD ]
