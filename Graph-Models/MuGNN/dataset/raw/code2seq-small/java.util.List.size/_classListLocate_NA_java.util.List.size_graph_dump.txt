Line_2 $$ private void _classListLocate(Class<?> clazz, List<? extends Annotation> expectedAnnotations) -->Line_4 $$ Assert.assertEquals(clazz.getName(), expectedAnnotations.size(), actualAnnotations.size())[ FD ]
Line_5 $$ for (int i = 0; i < expectedAnnotations.size(); i++) -->Line_6 $$ Annotation expectedAnnotation = expectedAnnotations.get(i)[ CD ]
Line_5 $$ for (int i = 0; i < expectedAnnotations.size(); i++) -->Line_7 $$ Annotation actualAnnotation = actualAnnotations.get(i)[ CD ]
Line_9 $$ if (expectedAnnotation.annotationType() == Mix.class) -->Line_10 $$ Mix expectedMix = (Mix) expectedAnnotation[ CD ]
Line_9 $$ if (expectedAnnotation.annotationType() == Mix.class) -->Line_14 $$ Type expectedType = (Type) expectedAnnotation[ CD ]
Line_2 $$ private void _classListLocate(Class<?> clazz, List<? extends Annotation> expectedAnnotations) -->Line_3 $$ List<Annotation> actualAnnotations = AnnotationLocator.locate(clazz)[ FD ]
Line_6 $$ Annotation expectedAnnotation = expectedAnnotations.get(i)-->Line_9 $$ if (expectedAnnotation.annotationType() == Mix.class) [ FD ]
Line_5 $$ for (int i = 0; i < expectedAnnotations.size(); i++) -->Line_8 $$ Assert.assertEquals(clazz.getName(), expectedAnnotation.annotationType(), actualAnnotation.annotationType())[ CD ]
Line_9 $$ if (expectedAnnotation.annotationType() == Mix.class) -->Line_11 $$ Mix actualMix = (Mix) actualAnnotation[ CD ]
Line_5 $$ for (int i = 0; i < expectedAnnotations.size(); i++) -->Line_9 $$ if (expectedAnnotation.annotationType() == Mix.class) [ CD ]
Line_2 $$ private void _classListLocate(Class<?> clazz, List<? extends Annotation> expectedAnnotations) -->Line_8 $$ Assert.assertEquals(clazz.getName(), expectedAnnotation.annotationType(), actualAnnotation.annotationType())[ FD ]
Line_7 $$ Annotation actualAnnotation = actualAnnotations.get(i)-->Line_8 $$ Assert.assertEquals(clazz.getName(), expectedAnnotation.annotationType(), actualAnnotation.annotationType())[ FD ]
Line_11 $$ Mix actualMix = (Mix) actualAnnotation-->Line_12 $$ Assert.assertEquals("@Mix : " + clazz.getName(), expectedMix.value(), actualMix.value())[ FD ]
Line_5 $$ for (int i = 0; i < expectedAnnotations.size(); i++) -->Line_6 $$ Annotation expectedAnnotation = expectedAnnotations.get(i)[ FD ]
Line_3 $$ List<Annotation> actualAnnotations = AnnotationLocator.locate(clazz)-->Line_7 $$ Annotation actualAnnotation = actualAnnotations.get(i)[ FD ]
Line_9 $$ if (expectedAnnotation.annotationType() == Mix.class) -->Line_15 $$ Type actualType = (Type) actualAnnotation[ CD ]
Line_2 $$ private void _classListLocate(Class<?> clazz, List<? extends Annotation> expectedAnnotations) -->Line_12 $$ Assert.assertEquals("@Mix : " + clazz.getName(), expectedMix.value(), actualMix.value())[ FD ]
Line_9 $$ if (expectedAnnotation.annotationType() == Mix.class) -->Line_12 $$ Assert.assertEquals("@Mix : " + clazz.getName(), expectedMix.value(), actualMix.value())[ CD ]
Line_2 $$ private void _classListLocate(Class<?> clazz, List<? extends Annotation> expectedAnnotations) -->Line_6 $$ Annotation expectedAnnotation = expectedAnnotations.get(i)[ FD ]
Line_5 $$ for (int i = 0; i < expectedAnnotations.size(); i++) -->Line_7 $$ Annotation actualAnnotation = actualAnnotations.get(i)[ FD ]
Line_2 $$ private void _classListLocate(Class<?> clazz, List<? extends Annotation> expectedAnnotations) -->Line_5 $$ for (int i = 0; i < expectedAnnotations.size(); i++) [ CD ]
Line_2 $$ private void _classListLocate(Class<?> clazz, List<? extends Annotation> expectedAnnotations) -->Line_4 $$ Assert.assertEquals(clazz.getName(), expectedAnnotations.size(), actualAnnotations.size())[ CD ]
Line_6 $$ Annotation expectedAnnotation = expectedAnnotations.get(i)-->Line_8 $$ Assert.assertEquals(clazz.getName(), expectedAnnotation.annotationType(), actualAnnotation.annotationType())[ FD ]
Line_9 $$ if (expectedAnnotation.annotationType() == Mix.class) -->Line_16 $$ Assert.assertEquals("@Type : ", expectedType.value(), actualType.value())[ CD ]
Line_3 $$ List<Annotation> actualAnnotations = AnnotationLocator.locate(clazz)-->Line_4 $$ Assert.assertEquals(clazz.getName(), expectedAnnotations.size(), actualAnnotations.size())[ FD ]
Line_15 $$ Type actualType = (Type) actualAnnotation-->Line_16 $$ Assert.assertEquals("@Type : ", expectedType.value(), actualType.value())[ FD ]
Line_14 $$ Type expectedType = (Type) expectedAnnotation-->Line_16 $$ Assert.assertEquals("@Type : ", expectedType.value(), actualType.value())[ FD ]
Line_2 $$ private void _classListLocate(Class<?> clazz, List<? extends Annotation> expectedAnnotations) -->Line_3 $$ List<Annotation> actualAnnotations = AnnotationLocator.locate(clazz)[ CD ]
Line_10 $$ Mix expectedMix = (Mix) expectedAnnotation-->Line_12 $$ Assert.assertEquals("@Mix : " + clazz.getName(), expectedMix.value(), actualMix.value())[ FD ]
Line_2 $$ private void _classListLocate(Class<?> clazz, List<? extends Annotation> expectedAnnotations) -->Line_5 $$ for (int i = 0; i < expectedAnnotations.size(); i++) [ FD ]
