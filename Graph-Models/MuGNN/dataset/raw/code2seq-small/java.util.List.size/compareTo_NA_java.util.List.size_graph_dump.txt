Line_4 $$ for (int i = 0; i < len; i++) -->Line_6 $$ int s = (i < o.version.size() ? o.version.get(i) : 0)[ CD ]
Line_4 $$ for (int i = 0; i < len; i++) -->Line_7 $$ if (s < d)[ CD ]
Line_2 $$ public int compareTo(JavaVersion o) -->Line_4 $$ for (int i = 0; i < len; i++) [ CD ]
Line_9 $$ if (s > d)-->Line_10 $$ return -1[ CD ]
Line_4 $$ for (int i = 0; i < len; i++) -->Line_5 $$ int d = (i < version.size() ? version.get(i) : 0)[ FD ]
Line_6 $$ int s = (i < o.version.size() ? o.version.get(i) : 0)-->Line_7 $$ if (s < d)[ FD ]
Line_5 $$ int d = (i < version.size() ? version.get(i) : 0)-->Line_7 $$ if (s < d)[ FD ]
Line_3 $$ int len = Math.max(version.size(), o.version.size())-->Line_4 $$ for (int i = 0; i < len; i++) [ FD ]
Line_4 $$ for (int i = 0; i < len; i++) -->Line_5 $$ int d = (i < version.size() ? version.get(i) : 0)[ CD ]
Line_4 $$ for (int i = 0; i < len; i++) -->Line_6 $$ int s = (i < o.version.size() ? o.version.get(i) : 0)[ FD ]
Line_7 $$ if (s < d)-->Line_8 $$ return 1[ CD ]
Line_6 $$ int s = (i < o.version.size() ? o.version.get(i) : 0)-->Line_9 $$ if (s > d)[ FD ]
Line_2 $$ public int compareTo(JavaVersion o) -->Line_3 $$ int len = Math.max(version.size(), o.version.size())[ CD ]
Line_5 $$ int d = (i < version.size() ? version.get(i) : 0)-->Line_9 $$ if (s > d)[ FD ]
Line_2 $$ public int compareTo(JavaVersion o) -->Line_12 $$ return 0[ CD ]
Line_4 $$ for (int i = 0; i < len; i++) -->Line_9 $$ if (s > d)[ CD ]
