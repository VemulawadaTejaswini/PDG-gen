Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) -->Line_6 $$ columnBindingsBuilder.add(Maps.immutableEntry(TypeInfoUtils.getStandardJavaObjectInspectorFromTypeInfo(hiveTypeInfos.get(i)), javaValue))[ CD ]
Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) -->Line_6 $$ columnBindingsBuilder.add(Maps.immutableEntry(TypeInfoUtils.getStandardJavaObjectInspectorFromTypeInfo(hiveTypeInfos.get(i)), javaValue))[ FD ]
Line_2 $$ private static int computeExpected(List<String> hiveTypeStrings, List<Object> javaValues, int bucketCount, List<TypeInfo> hiveTypeInfos) throws HiveException -->Line_8 $$ return getHiveBucket(columnBindingsBuilder.build(), bucketCount)[ FD ]
Line_2 $$ private static int computeExpected(List<String> hiveTypeStrings, List<Object> javaValues, int bucketCount, List<TypeInfo> hiveTypeInfos) throws HiveException -->Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) [ CD ]
Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) -->Line_5 $$ Object javaValue = javaValues.get(i)[ FD ]
Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) -->Line_5 $$ Object javaValue = javaValues.get(i)[ CD ]
Line_2 $$ private static int computeExpected(List<String> hiveTypeStrings, List<Object> javaValues, int bucketCount, List<TypeInfo> hiveTypeInfos) throws HiveException -->Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) [ FD ]
Line_2 $$ private static int computeExpected(List<String> hiveTypeStrings, List<Object> javaValues, int bucketCount, List<TypeInfo> hiveTypeInfos) throws HiveException -->Line_3 $$ ImmutableList.Builder<Entry<ObjectInspector, Object>> columnBindingsBuilder = ImmutableList.builder()[ CD ]
Line_2 $$ private static int computeExpected(List<String> hiveTypeStrings, List<Object> javaValues, int bucketCount, List<TypeInfo> hiveTypeInfos) throws HiveException -->Line_6 $$ columnBindingsBuilder.add(Maps.immutableEntry(TypeInfoUtils.getStandardJavaObjectInspectorFromTypeInfo(hiveTypeInfos.get(i)), javaValue))[ FD ]
Line_5 $$ Object javaValue = javaValues.get(i)-->Line_6 $$ columnBindingsBuilder.add(Maps.immutableEntry(TypeInfoUtils.getStandardJavaObjectInspectorFromTypeInfo(hiveTypeInfos.get(i)), javaValue))[ FD ]
Line_2 $$ private static int computeExpected(List<String> hiveTypeStrings, List<Object> javaValues, int bucketCount, List<TypeInfo> hiveTypeInfos) throws HiveException -->Line_5 $$ Object javaValue = javaValues.get(i)[ FD ]
Line_3 $$ ImmutableList.Builder<Entry<ObjectInspector, Object>> columnBindingsBuilder = ImmutableList.builder()-->Line_8 $$ return getHiveBucket(columnBindingsBuilder.build(), bucketCount)[ FD ]
Line_2 $$ private static int computeExpected(List<String> hiveTypeStrings, List<Object> javaValues, int bucketCount, List<TypeInfo> hiveTypeInfos) throws HiveException -->Line_8 $$ return getHiveBucket(columnBindingsBuilder.build(), bucketCount)[ CD ]
Line_3 $$ ImmutableList.Builder<Entry<ObjectInspector, Object>> columnBindingsBuilder = ImmutableList.builder()-->Line_6 $$ columnBindingsBuilder.add(Maps.immutableEntry(TypeInfoUtils.getStandardJavaObjectInspectorFromTypeInfo(hiveTypeInfos.get(i)), javaValue))[ FD ]
