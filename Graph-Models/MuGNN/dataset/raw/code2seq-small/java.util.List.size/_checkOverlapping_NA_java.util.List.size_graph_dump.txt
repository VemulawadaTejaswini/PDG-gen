Line_2 $$ private static int _checkOverlapping(List<DiffResult> results, int startPos, int margin) -->Line_13 $$ if ((changedLines.size() == 1) && changedLines.get(0).equals(CONTEXT_LINE)) [ CD ]
Line_6 $$ DiffResult lastDiff = results.get(results.size() - 1)-->Line_11 $$ int lastChangedLine = (lastDiff.getLineNumber() - 1) + changedLines.size()[ FD ]
Line_2 $$ private static int _checkOverlapping(List<DiffResult> results, int startPos, int margin) -->Line_16 $$ if (currentChangedLine < lastChangedLine) [ CD ]
Line_2 $$ private static int _checkOverlapping(List<DiffResult> results, int startPos, int margin) -->Line_3 $$ if (results.isEmpty() || ((startPos - margin) < 0)) [ CD ]
Line_6 $$ DiffResult lastDiff = results.get(results.size() - 1)-->Line_7 $$ List<String> changedLines = lastDiff.getChangedLines()[ FD ]
Line_2 $$ private static int _checkOverlapping(List<DiffResult> results, int startPos, int margin) -->Line_6 $$ DiffResult lastDiff = results.get(results.size() - 1)[ CD ]
Line_7 $$ List<String> changedLines = lastDiff.getChangedLines()-->Line_8 $$ if (changedLines.isEmpty()) [ FD ]
Line_2 $$ private static int _checkOverlapping(List<DiffResult> results, int startPos, int margin) -->Line_6 $$ DiffResult lastDiff = results.get(results.size() - 1)[ FD ]
Line_12 $$ int currentChangedLine = startPos - margin-->Line_14 $$ currentChangedLine = currentChangedLine + 1[ FD ]
Line_2 $$ private static int _checkOverlapping(List<DiffResult> results, int startPos, int margin) -->Line_7 $$ List<String> changedLines = lastDiff.getChangedLines()[ CD ]
Line_3 $$ if (results.isEmpty() || ((startPos - margin) < 0)) -->Line_4 $$ return margin[ CD ]
Line_12 $$ int currentChangedLine = startPos - margin-->Line_16 $$ if (currentChangedLine < lastChangedLine) [ FD ]
Line_8 $$ if (changedLines.isEmpty()) -->Line_9 $$ return margin[ CD ]
Line_14 $$ currentChangedLine = currentChangedLine + 1-->Line_16 $$ if (currentChangedLine < lastChangedLine) [ FD ]
Line_7 $$ List<String> changedLines = lastDiff.getChangedLines()-->Line_13 $$ if ((changedLines.size() == 1) && changedLines.get(0).equals(CONTEXT_LINE)) [ FD ]
Line_16 $$ if (currentChangedLine < lastChangedLine) -->Line_17 $$ return margin + currentChangedLine - lastChangedLine[ CD ]
Line_2 $$ private static int _checkOverlapping(List<DiffResult> results, int startPos, int margin) -->Line_3 $$ if (results.isEmpty() || ((startPos - margin) < 0)) [ FD ]
Line_2 $$ private static int _checkOverlapping(List<DiffResult> results, int startPos, int margin) -->Line_19 $$ return margin[ CD ]
Line_13 $$ if ((changedLines.size() == 1) && changedLines.get(0).equals(CONTEXT_LINE)) -->Line_14 $$ currentChangedLine = currentChangedLine + 1[ CD ]
Line_2 $$ private static int _checkOverlapping(List<DiffResult> results, int startPos, int margin) -->Line_8 $$ if (changedLines.isEmpty()) [ CD ]
Line_2 $$ private static int _checkOverlapping(List<DiffResult> results, int startPos, int margin) -->Line_12 $$ int currentChangedLine = startPos - margin[ CD ]
Line_7 $$ List<String> changedLines = lastDiff.getChangedLines()-->Line_11 $$ int lastChangedLine = (lastDiff.getLineNumber() - 1) + changedLines.size()[ FD ]
Line_11 $$ int lastChangedLine = (lastDiff.getLineNumber() - 1) + changedLines.size()-->Line_16 $$ if (currentChangedLine < lastChangedLine) [ FD ]
Line_2 $$ private static int _checkOverlapping(List<DiffResult> results, int startPos, int margin) -->Line_11 $$ int lastChangedLine = (lastDiff.getLineNumber() - 1) + changedLines.size()[ CD ]
