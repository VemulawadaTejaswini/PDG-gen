Line_2 $$ public static int getEffectiveIndexIntervalAfterIndex(int index, int samplingLevel, int minIndexInterval) -->Line_5 $$ List<Integer> originalIndexes = getOriginalIndexes(samplingLevel)[ CD ]
Line_2 $$ public static int getEffectiveIndexIntervalAfterIndex(int index, int samplingLevel, int minIndexInterval) -->Line_6 $$ int nextEntryOriginalIndex = (index == originalIndexes.size() - 1) ? BASE_SAMPLING_LEVEL : originalIndexes.get(index + 1)[ CD ]
Line_2 $$ public static int getEffectiveIndexIntervalAfterIndex(int index, int samplingLevel, int minIndexInterval) -->Line_7 $$ return (nextEntryOriginalIndex - originalIndexes.get(index)) * minIndexInterval[ FD ]
Line_2 $$ public static int getEffectiveIndexIntervalAfterIndex(int index, int samplingLevel, int minIndexInterval) -->Line_4 $$ index %= samplingLevel[ FD ]
Line_5 $$ List<Integer> originalIndexes = getOriginalIndexes(samplingLevel)-->Line_6 $$ int nextEntryOriginalIndex = (index == originalIndexes.size() - 1) ? BASE_SAMPLING_LEVEL : originalIndexes.get(index + 1)[ FD ]
Line_5 $$ List<Integer> originalIndexes = getOriginalIndexes(samplingLevel)-->Line_7 $$ return (nextEntryOriginalIndex - originalIndexes.get(index)) * minIndexInterval[ FD ]
Line_2 $$ public static int getEffectiveIndexIntervalAfterIndex(int index, int samplingLevel, int minIndexInterval) -->Line_4 $$ index %= samplingLevel[ CD ]
Line_2 $$ public static int getEffectiveIndexIntervalAfterIndex(int index, int samplingLevel, int minIndexInterval) -->Line_5 $$ List<Integer> originalIndexes = getOriginalIndexes(samplingLevel)[ FD ]
Line_4 $$ index %= samplingLevel-->Line_7 $$ return (nextEntryOriginalIndex - originalIndexes.get(index)) * minIndexInterval[ FD ]
Line_2 $$ public static int getEffectiveIndexIntervalAfterIndex(int index, int samplingLevel, int minIndexInterval) -->Line_7 $$ return (nextEntryOriginalIndex - originalIndexes.get(index)) * minIndexInterval[ CD ]
