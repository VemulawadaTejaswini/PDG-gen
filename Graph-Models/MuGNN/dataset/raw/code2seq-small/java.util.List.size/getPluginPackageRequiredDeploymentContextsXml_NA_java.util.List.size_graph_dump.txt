Line_2 $$ public String getPluginPackageRequiredDeploymentContextsXml(List<String> requiredDeploymentContexts) -->Line_6 $$ StringBundler sb = new StringBundler(requiredDeploymentContexts.size() * 3 + 2)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(requiredDeploymentContexts.size() * 3 + 2)-->Line_12 $$ sb.append("\t\t<required-deployment-context>")[ FD ]
Line_2 $$ public String getPluginPackageRequiredDeploymentContextsXml(List<String> requiredDeploymentContexts) -->Line_15 $$ if ((i + 1) == requiredDeploymentContexts.size()) [ FD ]
Line_2 $$ public String getPluginPackageRequiredDeploymentContextsXml(List<String> requiredDeploymentContexts) -->Line_6 $$ StringBundler sb = new StringBundler(requiredDeploymentContexts.size() * 3 + 2)[ CD ]
Line_7 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) -->Line_14 $$ sb.append("</required-deployment-context>\r\n")[ CD ]
Line_6 $$ StringBundler sb = new StringBundler(requiredDeploymentContexts.size() * 3 + 2)-->Line_14 $$ sb.append("</required-deployment-context>\r\n")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(requiredDeploymentContexts.size() * 3 + 2)-->Line_19 $$ return sb.toString()[ FD ]
Line_2 $$ public String getPluginPackageRequiredDeploymentContextsXml(List<String> requiredDeploymentContexts) -->Line_3 $$ if (requiredDeploymentContexts.isEmpty()) [ FD ]
Line_2 $$ public String getPluginPackageRequiredDeploymentContextsXml(List<String> requiredDeploymentContexts) -->Line_7 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) [ CD ]
Line_7 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) -->Line_13 $$ sb.append(requiredDeploymentContext)[ CD ]
Line_6 $$ StringBundler sb = new StringBundler(requiredDeploymentContexts.size() * 3 + 2)-->Line_10 $$ sb.append("\r\n")[ FD ]
Line_8 $$ String requiredDeploymentContext = requiredDeploymentContexts.get(i)-->Line_13 $$ sb.append(requiredDeploymentContext)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(requiredDeploymentContexts.size() * 3 + 2)-->Line_16 $$ sb.append("\t")[ FD ]
Line_3 $$ if (requiredDeploymentContexts.isEmpty()) -->Line_4 $$ return StringPool.BLANK[ CD ]
Line_15 $$ if ((i + 1) == requiredDeploymentContexts.size()) -->Line_16 $$ sb.append("\t")[ CD ]
Line_2 $$ public String getPluginPackageRequiredDeploymentContextsXml(List<String> requiredDeploymentContexts) -->Line_8 $$ String requiredDeploymentContext = requiredDeploymentContexts.get(i)[ FD ]
Line_7 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) -->Line_8 $$ String requiredDeploymentContext = requiredDeploymentContexts.get(i)[ FD ]
Line_7 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) -->Line_15 $$ if ((i + 1) == requiredDeploymentContexts.size()) [ CD ]
Line_9 $$ if (i == 0) -->Line_10 $$ sb.append("\r\n")[ CD ]
Line_6 $$ StringBundler sb = new StringBundler(requiredDeploymentContexts.size() * 3 + 2)-->Line_13 $$ sb.append(requiredDeploymentContext)[ FD ]
Line_2 $$ public String getPluginPackageRequiredDeploymentContextsXml(List<String> requiredDeploymentContexts) -->Line_3 $$ if (requiredDeploymentContexts.isEmpty()) [ CD ]
Line_2 $$ public String getPluginPackageRequiredDeploymentContextsXml(List<String> requiredDeploymentContexts) -->Line_7 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) [ FD ]
Line_2 $$ public String getPluginPackageRequiredDeploymentContextsXml(List<String> requiredDeploymentContexts) -->Line_19 $$ return sb.toString()[ CD ]
Line_7 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) -->Line_8 $$ String requiredDeploymentContext = requiredDeploymentContexts.get(i)[ CD ]
Line_7 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) -->Line_12 $$ sb.append("\t\t<required-deployment-context>")[ CD ]
Line_7 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) -->Line_9 $$ if (i == 0) [ FD ]
Line_7 $$ for (int i = 0; i < requiredDeploymentContexts.size(); i++) -->Line_9 $$ if (i == 0) [ CD ]
