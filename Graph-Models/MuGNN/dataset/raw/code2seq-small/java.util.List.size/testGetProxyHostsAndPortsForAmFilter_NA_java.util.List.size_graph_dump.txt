Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_20 $$ assertEquals(1, proxyHosts.size())[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_6 $$ assertEquals(WebAppUtils.getResolvedRMWebAppURLWithoutScheme(conf), proxyHosts.get(0))[ FD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_3 $$ Configuration conf = new Configuration(false)[ CD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_35 $$ assertEquals("host2:2000", proxyHosts.get(0))[ CD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_20 $$ assertEquals(1, proxyHosts.size())[ CD ]
Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_20 $$ assertEquals(1, proxyHosts.size())[ FD ]
Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_20 $$ assertEquals(1, proxyHosts.size())[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_36 $$ assertEquals("host3:3000", proxyHosts.get(1))[ CD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_48 $$ assertEquals(2, proxyHosts.size())[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_34 $$ Collections.sort(proxyHosts)[ CD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_50 $$ assertEquals("host5:5000", proxyHosts.get(0))[ CD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_40 $$ conf.setBoolean(YarnConfiguration.RM_HA_ENABLED, true)[ CD ]
Line_17 $$ conf = new Configuration(false)-->Line_26 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm1", "host2:2000")[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_10 $$ conf.set(YarnConfiguration.RM_HA_IDS, "rm1,rm2,rm3")[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_27 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm2", "host3:3000")[ CD ]
Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_35 $$ assertEquals("host2:2000", proxyHosts.get(0))[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_17 $$ conf = new Configuration(false)[ FD ]
Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_47 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_39 $$ conf.set(YarnConfiguration.YARN_HTTP_POLICY_KEY, HttpConfig.Policy.HTTPS_ONLY.toString())[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_7 $$ conf = new Configuration(false)[ CD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_45 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm1", "host5:5000")[ CD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_10 $$ conf.set(YarnConfiguration.RM_HA_IDS, "rm1,rm2,rm3")[ FD ]
Line_23 $$ conf = new Configuration(false)-->Line_38 $$ conf = new Configuration(false)[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_46 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm2", "host6:6000")[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_43 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm2", "host3:3000")[ FD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_35 $$ assertEquals("host2:2000", proxyHosts.get(0))[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_41 $$ conf.set(YarnConfiguration.RM_HA_IDS, "rm1,rm2,rm3,dummy")[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_24 $$ conf.setBoolean(YarnConfiguration.RM_HA_ENABLED, true)[ CD ]
Line_17 $$ conf = new Configuration(false)-->Line_28 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm3", "host4:4000")[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_39 $$ conf.set(YarnConfiguration.YARN_HTTP_POLICY_KEY, HttpConfig.Policy.HTTPS_ONLY.toString())[ FD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_50 $$ assertEquals("host5:5000", proxyHosts.get(0))[ FD ]
Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_11 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm1", "host2:2000")[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_26 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm1", "host2:2000")[ CD ]
Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_50 $$ assertEquals("host5:5000", proxyHosts.get(0))[ FD ]
Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_36 $$ assertEquals("host3:3000", proxyHosts.get(1))[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_47 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_22 $$ assertEquals("host2:2000", proxyHosts.get(0))[ FD ]
Line_17 $$ conf = new Configuration(false)-->Line_47 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_43 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm2", "host3:3000")[ CD ]
Line_23 $$ conf = new Configuration(false)-->Line_40 $$ conf.setBoolean(YarnConfiguration.RM_HA_ENABLED, true)[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_23 $$ conf = new Configuration(false)[ CD ]
Line_17 $$ conf = new Configuration(false)-->Line_30 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm1", "host5:5000")[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_44 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm3", "host4:4000")[ FD ]
Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_49 $$ Collections.sort(proxyHosts)[ FD ]
Line_17 $$ conf = new Configuration(false)-->Line_41 $$ conf.set(YarnConfiguration.RM_HA_IDS, "rm1,rm2,rm3,dummy")[ FD ]
Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_36 $$ assertEquals("host3:3000", proxyHosts.get(1))[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_8 $$ conf.set(YarnConfiguration.PROXY_ADDRESS, "host1:1000")[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_9 $$ conf.setBoolean(YarnConfiguration.RM_HA_ENABLED, true)[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_11 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm1", "host2:2000")[ CD ]
Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_51 $$ assertEquals("host6:6000", proxyHosts.get(1))[ FD ]
Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_21 $$ Collections.sort(proxyHosts)[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_27 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm2", "host3:3000")[ FD ]
Line_23 $$ conf = new Configuration(false)-->Line_45 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm1", "host5:5000")[ FD ]
Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_37 $$ assertEquals("host4:4000", proxyHosts.get(2))[ FD ]
Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_34 $$ Collections.sort(proxyHosts)[ FD ]
Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_48 $$ assertEquals(2, proxyHosts.size())[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_24 $$ conf.setBoolean(YarnConfiguration.RM_HA_ENABLED, true)[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_45 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm1", "host5:5000")[ FD ]
Line_23 $$ conf = new Configuration(false)-->Line_24 $$ conf.setBoolean(YarnConfiguration.RM_HA_ENABLED, true)[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_29 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm4", "dummy")[ FD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_34 $$ Collections.sort(proxyHosts)[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_38 $$ conf = new Configuration(false)[ CD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_38 $$ conf = new Configuration(false)-->Line_45 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm1", "host5:5000")[ FD ]
Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_49 $$ Collections.sort(proxyHosts)[ FD ]
Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_35 $$ assertEquals("host2:2000", proxyHosts.get(0))[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_40 $$ conf.setBoolean(YarnConfiguration.RM_HA_ENABLED, true)[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_6 $$ assertEquals(WebAppUtils.getResolvedRMWebAppURLWithoutScheme(conf), proxyHosts.get(0))[ CD ]
Line_17 $$ conf = new Configuration(false)-->Line_42 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm1", "host2:2000")[ FD ]
Line_23 $$ conf = new Configuration(false)-->Line_47 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_8 $$ conf.set(YarnConfiguration.PROXY_ADDRESS, "host1:1000")[ FD ]
Line_23 $$ conf = new Configuration(false)-->Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_17 $$ conf = new Configuration(false)-->Line_27 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm2", "host3:3000")[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_10 $$ conf.set(YarnConfiguration.RM_HA_IDS, "rm1,rm2,rm3")[ CD ]
Line_23 $$ conf = new Configuration(false)-->Line_27 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm2", "host3:3000")[ FD ]
Line_47 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_51 $$ assertEquals("host6:6000", proxyHosts.get(1))[ FD ]
Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_33 $$ assertEquals(3, proxyHosts.size())[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_48 $$ assertEquals(2, proxyHosts.size())[ CD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_33 $$ assertEquals(3, proxyHosts.size())[ CD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_21 $$ Collections.sort(proxyHosts)[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_15 $$ assertEquals(1, proxyHosts.size())[ CD ]
Line_7 $$ conf = new Configuration(false)-->Line_26 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm1", "host2:2000")[ FD ]
Line_17 $$ conf = new Configuration(false)-->Line_25 $$ conf.set(YarnConfiguration.RM_HA_IDS, "rm1,rm2,rm3")[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_31 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm2", "host6:6000")[ FD ]
Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_47 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_23 $$ conf = new Configuration(false)[ FD ]
Line_17 $$ conf = new Configuration(false)-->Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_23 $$ conf = new Configuration(false)-->Line_29 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm4", "dummy")[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_47 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ CD ]
Line_7 $$ conf = new Configuration(false)-->Line_42 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm1", "host2:2000")[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_13 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm3", "host4:4000")[ FD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_36 $$ assertEquals("host3:3000", proxyHosts.get(1))[ FD ]
Line_38 $$ conf = new Configuration(false)-->Line_42 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm1", "host2:2000")[ FD ]
Line_23 $$ conf = new Configuration(false)-->Line_41 $$ conf.set(YarnConfiguration.RM_HA_IDS, "rm1,rm2,rm3,dummy")[ FD ]
Line_23 $$ conf = new Configuration(false)-->Line_44 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm3", "host4:4000")[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_6 $$ assertEquals(WebAppUtils.getResolvedRMWebAppURLWithoutScheme(conf), proxyHosts.get(0))[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_40 $$ conf.setBoolean(YarnConfiguration.RM_HA_ENABLED, true)[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ CD ]
Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_35 $$ assertEquals("host2:2000", proxyHosts.get(0))[ FD ]
Line_23 $$ conf = new Configuration(false)-->Line_42 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm1", "host2:2000")[ FD ]
Line_17 $$ conf = new Configuration(false)-->Line_18 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS, "host2:2000")[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_47 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_21 $$ Collections.sort(proxyHosts)[ CD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_42 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm1", "host2:2000")[ FD ]
Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_47 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_36 $$ assertEquals("host3:3000", proxyHosts.get(1))[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ CD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_5 $$ assertEquals(1, proxyHosts.size())[ CD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_31 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm2", "host6:6000")[ CD ]
Line_23 $$ conf = new Configuration(false)-->Line_31 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm2", "host6:6000")[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ CD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_12 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm2", "host3:3000")[ CD ]
Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_48 $$ assertEquals(2, proxyHosts.size())[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_25 $$ conf.set(YarnConfiguration.RM_HA_IDS, "rm1,rm2,rm3")[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_12 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm2", "host3:3000")[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_29 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm4", "dummy")[ FD ]
Line_17 $$ conf = new Configuration(false)-->Line_24 $$ conf.setBoolean(YarnConfiguration.RM_HA_ENABLED, true)[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_18 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS, "host2:2000")[ FD ]
Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_38 $$ conf = new Configuration(false)[ FD ]
Line_17 $$ conf = new Configuration(false)-->Line_39 $$ conf.set(YarnConfiguration.YARN_HTTP_POLICY_KEY, HttpConfig.Policy.HTTPS_ONLY.toString())[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_44 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm3", "host4:4000")[ CD ]
Line_7 $$ conf = new Configuration(false)-->Line_31 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm2", "host6:6000")[ FD ]
Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_50 $$ assertEquals("host5:5000", proxyHosts.get(0))[ FD ]
Line_23 $$ conf = new Configuration(false)-->Line_25 $$ conf.set(YarnConfiguration.RM_HA_IDS, "rm1,rm2,rm3")[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_17 $$ conf = new Configuration(false)[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_43 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm2", "host3:3000")[ FD ]
Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_37 $$ assertEquals("host4:4000", proxyHosts.get(2))[ FD ]
Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_37 $$ assertEquals("host4:4000", proxyHosts.get(2))[ FD ]
Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_15 $$ assertEquals(1, proxyHosts.size())[ FD ]
Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_16 $$ assertEquals("host1:1000", proxyHosts.get(0))[ FD ]
Line_23 $$ conf = new Configuration(false)-->Line_30 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm1", "host5:5000")[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_12 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm2", "host3:3000")[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_25 $$ conf.set(YarnConfiguration.RM_HA_IDS, "rm1,rm2,rm3")[ CD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_28 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm3", "host4:4000")[ FD ]
Line_23 $$ conf = new Configuration(false)-->Line_43 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm2", "host3:3000")[ FD ]
Line_17 $$ conf = new Configuration(false)-->Line_40 $$ conf.setBoolean(YarnConfiguration.RM_HA_ENABLED, true)[ FD ]
Line_47 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_48 $$ assertEquals(2, proxyHosts.size())[ FD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_22 $$ assertEquals("host2:2000", proxyHosts.get(0))[ FD ]
Line_38 $$ conf = new Configuration(false)-->Line_41 $$ conf.set(YarnConfiguration.RM_HA_IDS, "rm1,rm2,rm3,dummy")[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_46 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm2", "host6:6000")[ FD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_5 $$ assertEquals(1, proxyHosts.size())[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_25 $$ conf.set(YarnConfiguration.RM_HA_IDS, "rm1,rm2,rm3")[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_30 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm1", "host5:5000")[ FD ]
Line_17 $$ conf = new Configuration(false)-->Line_29 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm4", "dummy")[ FD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_37 $$ assertEquals("host4:4000", proxyHosts.get(2))[ FD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_16 $$ assertEquals("host1:1000", proxyHosts.get(0))[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_30 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm1", "host5:5000")[ FD ]
Line_23 $$ conf = new Configuration(false)-->Line_26 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm1", "host2:2000")[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_9 $$ conf.setBoolean(YarnConfiguration.RM_HA_ENABLED, true)[ CD ]
Line_17 $$ conf = new Configuration(false)-->Line_31 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm2", "host6:6000")[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_22 $$ assertEquals("host2:2000", proxyHosts.get(0))[ CD ]
Line_23 $$ conf = new Configuration(false)-->Line_39 $$ conf.set(YarnConfiguration.YARN_HTTP_POLICY_KEY, HttpConfig.Policy.HTTPS_ONLY.toString())[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_18 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS, "host2:2000")[ CD ]
Line_17 $$ conf = new Configuration(false)-->Line_23 $$ conf = new Configuration(false)[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_7 $$ conf = new Configuration(false)[ FD ]
Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_21 $$ Collections.sort(proxyHosts)[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_49 $$ Collections.sort(proxyHosts)[ CD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_30 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm1", "host5:5000")[ CD ]
Line_17 $$ conf = new Configuration(false)-->Line_43 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm2", "host3:3000")[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_44 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm3", "host4:4000")[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_11 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm1", "host2:2000")[ FD ]
Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_33 $$ assertEquals(3, proxyHosts.size())[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_13 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm3", "host4:4000")[ FD ]
Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_48 $$ assertEquals(2, proxyHosts.size())[ FD ]
Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_34 $$ Collections.sort(proxyHosts)[ FD ]
Line_17 $$ conf = new Configuration(false)-->Line_44 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm3", "host4:4000")[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_38 $$ conf = new Configuration(false)[ FD ]
Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_49 $$ Collections.sort(proxyHosts)[ FD ]
Line_47 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_49 $$ Collections.sort(proxyHosts)[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_24 $$ conf.setBoolean(YarnConfiguration.RM_HA_ENABLED, true)[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_17 $$ conf = new Configuration(false)[ CD ]
Line_38 $$ conf = new Configuration(false)-->Line_46 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm2", "host6:6000")[ FD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_15 $$ assertEquals(1, proxyHosts.size())[ FD ]
Line_17 $$ conf = new Configuration(false)-->Line_46 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm2", "host6:6000")[ FD ]
Line_17 $$ conf = new Configuration(false)-->Line_38 $$ conf = new Configuration(false)[ FD ]
Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_9 $$ conf.setBoolean(YarnConfiguration.RM_HA_ENABLED, true)[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_39 $$ conf.set(YarnConfiguration.YARN_HTTP_POLICY_KEY, HttpConfig.Policy.HTTPS_ONLY.toString())[ CD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_47 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_45 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm1", "host5:5000")[ FD ]
Line_23 $$ conf = new Configuration(false)-->Line_46 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm2", "host6:6000")[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_26 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm1", "host2:2000")[ FD ]
Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_50 $$ assertEquals("host5:5000", proxyHosts.get(0))[ FD ]
Line_38 $$ conf = new Configuration(false)-->Line_40 $$ conf.setBoolean(YarnConfiguration.RM_HA_ENABLED, true)[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_29 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm4", "dummy")[ CD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_46 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm2", "host6:6000")[ CD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_41 $$ conf.set(YarnConfiguration.RM_HA_IDS, "rm1,rm2,rm3,dummy")[ FD ]
Line_38 $$ conf = new Configuration(false)-->Line_39 $$ conf.set(YarnConfiguration.YARN_HTTP_POLICY_KEY, HttpConfig.Policy.HTTPS_ONLY.toString())[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_16 $$ assertEquals("host1:1000", proxyHosts.get(0))[ CD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_33 $$ assertEquals(3, proxyHosts.size())[ FD ]
Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_34 $$ Collections.sort(proxyHosts)[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_27 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm2", "host3:3000")[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_51 $$ assertEquals("host6:6000", proxyHosts.get(1))[ CD ]
Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_51 $$ assertEquals("host6:6000", proxyHosts.get(1))[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_13 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm3", "host4:4000")[ CD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_18 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS, "host2:2000")[ FD ]
Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_22 $$ assertEquals("host2:2000", proxyHosts.get(0))[ FD ]
Line_7 $$ conf = new Configuration(false)-->Line_28 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm3", "host4:4000")[ FD ]
Line_17 $$ conf = new Configuration(false)-->Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_51 $$ assertEquals("host6:6000", proxyHosts.get(1))[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_42 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm1", "host2:2000")[ CD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_23 $$ conf = new Configuration(false)[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ CD ]
Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_49 $$ Collections.sort(proxyHosts)[ FD ]
Line_3 $$ Configuration conf = new Configuration(false)-->Line_4 $$ List<String> proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_17 $$ conf = new Configuration(false)-->Line_45 $$ conf.set(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + ".rm1", "host5:5000")[ FD ]
Line_38 $$ conf = new Configuration(false)-->Line_44 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm3", "host4:4000")[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_8 $$ conf.set(YarnConfiguration.PROXY_ADDRESS, "host1:1000")[ CD ]
Line_14 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_33 $$ assertEquals(3, proxyHosts.size())[ FD ]
Line_19 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_51 $$ assertEquals("host6:6000", proxyHosts.get(1))[ FD ]
Line_38 $$ conf = new Configuration(false)-->Line_43 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm2", "host3:3000")[ FD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_28 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm3", "host4:4000")[ CD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_37 $$ assertEquals("host4:4000", proxyHosts.get(2))[ CD ]
Line_2 $$ public void testGetProxyHostsAndPortsForAmFilter() -->Line_41 $$ conf.set(YarnConfiguration.RM_HA_IDS, "rm1,rm2,rm3,dummy")[ CD ]
Line_7 $$ conf = new Configuration(false)-->Line_32 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_38 $$ conf = new Configuration(false)-->Line_47 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)[ FD ]
Line_47 $$ proxyHosts = WebAppUtils.getProxyHostsAndPortsForAmFilter(conf)-->Line_50 $$ assertEquals("host5:5000", proxyHosts.get(0))[ FD ]
Line_23 $$ conf = new Configuration(false)-->Line_28 $$ conf.set(YarnConfiguration.RM_WEBAPP_ADDRESS + ".rm3", "host4:4000")[ FD ]
