Line_5 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(is)-->Line_7 $$ Channel result = converter.read(Channel.class, inputMessage)[ FD ]
Line_7 $$ Channel result = converter.read(Channel.class, inputMessage)-->Line_8 $$ assertEquals("title", result.getTitle())[ FD ]
Line_7 $$ Channel result = converter.read(Channel.class, inputMessage)-->Line_9 $$ assertEquals("http://example.com", result.getLink())[ FD ]
Line_7 $$ Channel result = converter.read(Channel.class, inputMessage)-->Line_10 $$ assertEquals("description", result.getDescription())[ FD ]
Line_5 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(is)-->Line_6 $$ inputMessage.getHeaders().setContentType(new MediaType("application", "rss+xml", utf8))[ FD ]
Line_7 $$ Channel result = converter.read(Channel.class, inputMessage)-->Line_11 $$ List<?> items = result.getItems()[ FD ]
Line_11 $$ List<?> items = result.getItems()-->Line_12 $$ assertEquals(2, items.size())[ FD ]
Line_15 $$ Item item2 = (Item) items.get(1)-->Line_16 $$ assertEquals("title2", item2.getTitle())[ FD ]
Line_13 $$ Item item1 = (Item) items.get(0)-->Line_14 $$ assertEquals("title1", item1.getTitle())[ FD ]
Line_11 $$ List<?> items = result.getItems()-->Line_15 $$ Item item2 = (Item) items.get(1)[ FD ]
Line_11 $$ List<?> items = result.getItems()-->Line_13 $$ Item item1 = (Item) items.get(0)[ FD ]
