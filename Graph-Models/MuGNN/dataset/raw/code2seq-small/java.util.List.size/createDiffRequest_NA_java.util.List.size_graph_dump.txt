Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_10 $$ FileType fileType = file != null ? file.getFileType() : null[ FD ]
Line_11 $$ DiffContentFactory contentFactory = DiffContentFactory.getInstance()-->Line_12 $$ DocumentContent localContent = file != null ? contentFactory.createDocument(project, file) : null[ FD ]
Line_12 $$ DocumentContent localContent = file != null ? contentFactory.createDocument(project, file) : null-->Line_13 $$ if (localContent == null)[ FD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_17 $$ return new SimpleDiffRequest(windowTitle, localContent, baseContent, patchedContent, localTitle, baseTitle, patchedTitle)[ CD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_12 $$ DocumentContent localContent = file != null ? contentFactory.createDocument(project, file) : null[ FD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_7 $$ String localTitle = StringUtil.notNullize(titles.get(0), VcsBundle.message("patch.apply.conflict.local.version"))[ CD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_16 $$ DocumentContent patchedContent = contentFactory.create(contents.get(2), fileType)[ FD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_8 $$ String baseTitle = StringUtil.notNullize(titles.get(1), "Base Version")[ FD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_5 $$ if (windowTitle == null)[ CD ]
Line_5 $$ if (windowTitle == null)-->Line_6 $$ windowTitle = getPatchTitle(file)[ CD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_12 $$ DocumentContent localContent = file != null ? contentFactory.createDocument(project, file) : null[ CD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_16 $$ DocumentContent patchedContent = contentFactory.create(contents.get(2), fileType)[ CD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_7 $$ String localTitle = StringUtil.notNullize(titles.get(0), VcsBundle.message("patch.apply.conflict.local.version"))[ FD ]
Line_11 $$ DiffContentFactory contentFactory = DiffContentFactory.getInstance()-->Line_15 $$ DocumentContent baseContent = contentFactory.create(contents.get(1), fileType)[ FD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_6 $$ windowTitle = getPatchTitle(file)[ FD ]
Line_10 $$ FileType fileType = file != null ? file.getFileType() : null-->Line_16 $$ DocumentContent patchedContent = contentFactory.create(contents.get(2), fileType)[ FD ]
Line_10 $$ FileType fileType = file != null ? file.getFileType() : null-->Line_15 $$ DocumentContent baseContent = contentFactory.create(contents.get(1), fileType)[ FD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_9 $$ String patchedTitle = StringUtil.notNullize(titles.get(2), VcsBundle.message("patch.apply.conflict.patched.version"))[ CD ]
Line_10 $$ FileType fileType = file != null ? file.getFileType() : null-->Line_14 $$ localContent = contentFactory.create(contents.get(0), fileType)[ FD ]
Line_11 $$ DiffContentFactory contentFactory = DiffContentFactory.getInstance()-->Line_16 $$ DocumentContent patchedContent = contentFactory.create(contents.get(2), fileType)[ FD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_14 $$ localContent = contentFactory.create(contents.get(0), fileType)[ FD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_10 $$ FileType fileType = file != null ? file.getFileType() : null[ CD ]
Line_12 $$ DocumentContent localContent = file != null ? contentFactory.createDocument(project, file) : null-->Line_14 $$ localContent = contentFactory.create(contents.get(0), fileType)[ FD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_15 $$ DocumentContent baseContent = contentFactory.create(contents.get(1), fileType)[ FD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_15 $$ DocumentContent baseContent = contentFactory.create(contents.get(1), fileType)[ CD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_13 $$ if (localContent == null)[ CD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_9 $$ String patchedTitle = StringUtil.notNullize(titles.get(2), VcsBundle.message("patch.apply.conflict.patched.version"))[ FD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_5 $$ if (windowTitle == null)[ FD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_4 $$ assert titles.size() == 3[ FD ]
Line_11 $$ DiffContentFactory contentFactory = DiffContentFactory.getInstance()-->Line_14 $$ localContent = contentFactory.create(contents.get(0), fileType)[ FD ]
Line_13 $$ if (localContent == null)-->Line_14 $$ localContent = contentFactory.create(contents.get(0), fileType)[ CD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_8 $$ String baseTitle = StringUtil.notNullize(titles.get(1), "Base Version")[ CD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_3 $$ assert contents.size() == 3[ FD ]
Line_2 $$ public static DiffRequest createDiffRequest(@Nullable Project project, @Nullable VirtualFile file, @NotNull List<String> contents, @Nullable String windowTitle, @NotNull List<String> titles) -->Line_11 $$ DiffContentFactory contentFactory = DiffContentFactory.getInstance()[ CD ]
