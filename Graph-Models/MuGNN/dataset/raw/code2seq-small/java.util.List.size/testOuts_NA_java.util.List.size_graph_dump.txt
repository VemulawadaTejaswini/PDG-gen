Line_2 $$ public void testOuts() throws Exception -->Line_10 $$ Set<Module> set = new HashSet()[ CD ]
Line_2 $$ public void testOuts() throws Exception -->Line_9 $$ assertEquals(1, outs.size())[ CD ]
Line_2 $$ public void testOuts() throws Exception -->Line_4 $$ Module b = createModule("b")[ CD ]
Line_7 $$ Graph<Module> graph = ModuleManager.getInstance(getProject()).moduleGraph()-->Line_8 $$ List<Module> outs = ContainerUtil.collect(graph.getOut(a))[ FD ]
Line_8 $$ List<Module> outs = ContainerUtil.collect(graph.getOut(a))-->Line_9 $$ assertEquals(1, outs.size())[ FD ]
Line_2 $$ public void testOuts() throws Exception -->Line_7 $$ Graph<Module> graph = ModuleManager.getInstance(getProject()).moduleGraph()[ CD ]
Line_2 $$ public void testOuts() throws Exception -->Line_3 $$ Module a = createModule("a")[ CD ]
Line_2 $$ public void testOuts() throws Exception -->Line_11 $$ GraphAlgorithms.getInstance().collectOutsRecursively(graph, b, set)[ CD ]
Line_2 $$ public void testOuts() throws Exception -->Line_6 $$ addDependency(a, b)[ CD ]
Line_10 $$ Set<Module> set = new HashSet()-->Line_11 $$ GraphAlgorithms.getInstance().collectOutsRecursively(graph, b, set)[ FD ]
Line_10 $$ Set<Module> set = new HashSet()-->Line_12 $$ assertEquals(3, set.size())[ FD ]
Line_2 $$ public void testOuts() throws Exception -->Line_5 $$ addDependency(myModule, a)[ CD ]
Line_3 $$ Module a = createModule("a")-->Line_5 $$ addDependency(myModule, a)[ FD ]
Line_7 $$ Graph<Module> graph = ModuleManager.getInstance(getProject()).moduleGraph()-->Line_11 $$ GraphAlgorithms.getInstance().collectOutsRecursively(graph, b, set)[ FD ]
Line_4 $$ Module b = createModule("b")-->Line_6 $$ addDependency(a, b)[ FD ]
Line_3 $$ Module a = createModule("a")-->Line_8 $$ List<Module> outs = ContainerUtil.collect(graph.getOut(a))[ FD ]
Line_4 $$ Module b = createModule("b")-->Line_11 $$ GraphAlgorithms.getInstance().collectOutsRecursively(graph, b, set)[ FD ]
Line_2 $$ public void testOuts() throws Exception -->Line_8 $$ List<Module> outs = ContainerUtil.collect(graph.getOut(a))[ CD ]
Line_2 $$ public void testOuts() throws Exception -->Line_12 $$ assertEquals(3, set.size())[ CD ]
Line_3 $$ Module a = createModule("a")-->Line_6 $$ addDependency(a, b)[ FD ]
