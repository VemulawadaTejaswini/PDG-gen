Line_2 $$ private static I18NBundle createBundleImpl(FileHandle baseFileHandle, Locale locale, String encoding) -->Line_7 $$ Locale targetLocale = locale[ CD ]
Line_2 $$ private static I18NBundle createBundleImpl(FileHandle baseFileHandle, Locale locale, String encoding) -->Line_6 $$ I18NBundle baseBundle = null[ CD ]
Line_11 $$ if (bundle != null) -->Line_17 $$ if (candidateLocales.size() == 1 && bundleLocale.equals(candidateLocales.get(0))) [ CD ]
Line_2 $$ private static I18NBundle createBundleImpl(FileHandle baseFileHandle, Locale locale, String encoding) -->Line_28 $$ throw new MissingResourceException("Can't find bundle for base file handle " + baseFileHandle.path() + ", locale " + locale, baseFileHandle + "_" + locale, "")[ FD ]
Line_5 $$ I18NBundle bundle = null-->Line_12 $$ Locale bundleLocale = bundle.getLocale()[ FD ]
Line_10 $$ bundle = loadBundleChain(baseFileHandle, encoding, candidateLocales, 0, baseBundle)-->Line_26 $$ if (bundle == null) [ FD ]
Line_9 $$ List<Locale> candidateLocales = getCandidateLocales(targetLocale)-->Line_10 $$ bundle = loadBundleChain(baseFileHandle, encoding, candidateLocales, 0, baseBundle)[ FD ]
Line_2 $$ private static I18NBundle createBundleImpl(FileHandle baseFileHandle, Locale locale, String encoding) -->Line_26 $$ if (bundle == null) [ CD ]
Line_12 $$ Locale bundleLocale = bundle.getLocale()-->Line_13 $$ boolean isBaseBundle = bundleLocale.equals(ROOT_LOCALE)[ FD ]
Line_6 $$ I18NBundle baseBundle = null-->Line_27 $$ if (baseBundle == null) [ FD ]
Line_6 $$ I18NBundle baseBundle = null-->Line_21 $$ baseBundle = bundle[ FD ]
Line_21 $$ baseBundle = bundle-->Line_27 $$ if (baseBundle == null) [ FD ]
Line_8 $$ do -->Line_24 $$ targetLocale = getFallbackLocale(targetLocale)[ CD ]
Line_2 $$ private static I18NBundle createBundleImpl(FileHandle baseFileHandle, Locale locale, String encoding) -->Line_5 $$ I18NBundle bundle = null[ CD ]
Line_2 $$ private static I18NBundle createBundleImpl(FileHandle baseFileHandle, Locale locale, String encoding) -->Line_32 $$ return bundle[ CD ]
Line_24 $$ targetLocale = getFallbackLocale(targetLocale)-->Line_9 $$ List<Locale> candidateLocales = getCandidateLocales(targetLocale)[ FD ]
Line_13 $$ boolean isBaseBundle = bundleLocale.equals(ROOT_LOCALE)-->Line_14 $$ if (!isBaseBundle || bundleLocale.equals(locale)) [ FD ]
Line_11 $$ if (bundle != null) -->Line_13 $$ boolean isBaseBundle = bundleLocale.equals(ROOT_LOCALE)[ CD ]
Line_10 $$ bundle = loadBundleChain(baseFileHandle, encoding, candidateLocales, 0, baseBundle)-->Line_12 $$ Locale bundleLocale = bundle.getLocale()[ FD ]
Line_2 $$ private static I18NBundle createBundleImpl(FileHandle baseFileHandle, Locale locale, String encoding) -->Line_10 $$ bundle = loadBundleChain(baseFileHandle, encoding, candidateLocales, 0, baseBundle)[ FD ]
Line_9 $$ List<Locale> candidateLocales = getCandidateLocales(targetLocale)-->Line_17 $$ if (candidateLocales.size() == 1 && bundleLocale.equals(candidateLocales.get(0))) [ FD ]
Line_5 $$ I18NBundle bundle = null-->Line_30 $$ bundle = baseBundle[ FD ]
Line_5 $$ I18NBundle bundle = null-->Line_26 $$ if (bundle == null) [ FD ]
Line_5 $$ I18NBundle bundle = null-->Line_21 $$ baseBundle = bundle[ FD ]
Line_8 $$ do -->Line_11 $$ if (bundle != null) [ CD ]
Line_2 $$ private static I18NBundle createBundleImpl(FileHandle baseFileHandle, Locale locale, String encoding) -->Line_3 $$ if (baseFileHandle == null || locale == null || encoding == null)[ CD ]
Line_8 $$ do -->Line_10 $$ bundle = loadBundleChain(baseFileHandle, encoding, candidateLocales, 0, baseBundle)[ CD ]
Line_7 $$ Locale targetLocale = locale-->Line_8 $$ do [ FD ]
Line_11 $$ if (bundle != null) -->Line_14 $$ if (!isBaseBundle || bundleLocale.equals(locale)) [ CD ]
Line_26 $$ if (bundle == null) -->Line_27 $$ if (baseBundle == null) [ CD ]
Line_6 $$ I18NBundle baseBundle = null-->Line_10 $$ bundle = loadBundleChain(baseFileHandle, encoding, candidateLocales, 0, baseBundle)[ FD ]
Line_2 $$ private static I18NBundle createBundleImpl(FileHandle baseFileHandle, Locale locale, String encoding) -->Line_14 $$ if (!isBaseBundle || bundleLocale.equals(locale)) [ FD ]
Line_10 $$ bundle = loadBundleChain(baseFileHandle, encoding, candidateLocales, 0, baseBundle)-->Line_11 $$ if (bundle != null) [ FD ]
Line_12 $$ Locale bundleLocale = bundle.getLocale()-->Line_17 $$ if (candidateLocales.size() == 1 && bundleLocale.equals(candidateLocales.get(0))) [ FD ]
Line_24 $$ targetLocale = getFallbackLocale(targetLocale)-->Line_8 $$ do [ FD ]
Line_10 $$ bundle = loadBundleChain(baseFileHandle, encoding, candidateLocales, 0, baseBundle)-->Line_30 $$ bundle = baseBundle[ FD ]
Line_13 $$ boolean isBaseBundle = bundleLocale.equals(ROOT_LOCALE)-->Line_20 $$ if (isBaseBundle && baseBundle == null) [ FD ]
Line_21 $$ baseBundle = bundle-->Line_10 $$ bundle = loadBundleChain(baseFileHandle, encoding, candidateLocales, 0, baseBundle)[ FD ]
Line_11 $$ if (bundle != null) -->Line_12 $$ Locale bundleLocale = bundle.getLocale()[ CD ]
Line_12 $$ Locale bundleLocale = bundle.getLocale()-->Line_14 $$ if (!isBaseBundle || bundleLocale.equals(locale)) [ FD ]
Line_6 $$ I18NBundle baseBundle = null-->Line_30 $$ bundle = baseBundle[ FD ]
Line_5 $$ I18NBundle bundle = null-->Line_11 $$ if (bundle != null) [ FD ]
Line_7 $$ Locale targetLocale = locale-->Line_9 $$ List<Locale> candidateLocales = getCandidateLocales(targetLocale)[ FD ]
Line_11 $$ if (bundle != null) -->Line_20 $$ if (isBaseBundle && baseBundle == null) [ CD ]
Line_10 $$ bundle = loadBundleChain(baseFileHandle, encoding, candidateLocales, 0, baseBundle)-->Line_21 $$ baseBundle = bundle[ FD ]
Line_8 $$ do -->Line_9 $$ List<Locale> candidateLocales = getCandidateLocales(targetLocale)[ CD ]
Line_5 $$ I18NBundle bundle = null-->Line_10 $$ bundle = loadBundleChain(baseFileHandle, encoding, candidateLocales, 0, baseBundle)[ FD ]
Line_7 $$ Locale targetLocale = locale-->Line_24 $$ targetLocale = getFallbackLocale(targetLocale)[ FD ]
Line_20 $$ if (isBaseBundle && baseBundle == null) -->Line_21 $$ baseBundle = bundle[ CD ]
Line_26 $$ if (bundle == null) -->Line_30 $$ bundle = baseBundle[ CD ]
Line_21 $$ baseBundle = bundle-->Line_30 $$ bundle = baseBundle[ FD ]
Line_2 $$ private static I18NBundle createBundleImpl(FileHandle baseFileHandle, Locale locale, String encoding) -->Line_8 $$ do [ CD ]
