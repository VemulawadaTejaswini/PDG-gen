Line_27 $$ TextRange rangeInElement = manipulator.getRangeInElement(element)-->Line_32 $$ TextRange range = new TextRange(rangeInElement.getStartOffset() + matcher.start(1), rangeInElement.getStartOffset() + matcher.end(1))[ FD ]
Line_27 $$ TextRange rangeInElement = manipulator.getRangeInElement(element)-->Line_28 $$ String text = rangeInElement.substring(element.getText())[ FD ]
Line_16 $$ String shortName = annotation.getShortName()-->Line_17 $$ if (!shortName.equals("Unroll") && !shortName.equals("spock.lang.Unroll"))[ FD ]
Line_31 $$ while (matcher.find()) -->Line_32 $$ TextRange range = new TextRange(rangeInElement.getStartOffset() + matcher.start(1), rangeInElement.getStartOffset() + matcher.end(1))[ CD ]
Line_6 $$ String name = nvp.getName()-->Line_7 $$ if (name != null && !name.equals("value"))[ FD ]
Line_15 $$ GrAnnotation annotation = (GrAnnotation) eAnnotation-->Line_16 $$ String shortName = annotation.getShortName()[ FD ]
Line_29 $$ final List<SpockVariableReference> references = new ArrayList<SpockVariableReference>()-->Line_33 $$ references.add(new SpockVariableReference(element, range, references, method))[ FD ]
Line_13 $$ if (!(eAnnotation instanceof GrAnnotation))-->Line_14 $$ return PsiReference.EMPTY_ARRAY[ CD ]
Line_26 $$ ElementManipulator<PsiElement> manipulator = ElementManipulators.getManipulator(element)-->Line_27 $$ TextRange rangeInElement = manipulator.getRangeInElement(element)[ FD ]
Line_7 $$ if (name != null && !name.equals("value"))-->Line_8 $$ return PsiReference.EMPTY_ARRAY[ CD ]
Line_5 $$ GrAnnotationNameValuePair nvp = (GrAnnotationNameValuePair) element.getParent()-->Line_6 $$ String name = nvp.getName()[ FD ]
Line_17 $$ if (!shortName.equals("Unroll") && !shortName.equals("spock.lang.Unroll"))-->Line_18 $$ return PsiReference.EMPTY_ARRAY[ CD ]
Line_9 $$ PsiElement argumentList = nvp.getParent()-->Line_12 $$ PsiElement eAnnotation = argumentList.getParent()[ FD ]
Line_15 $$ GrAnnotation annotation = (GrAnnotation) eAnnotation-->Line_19 $$ PsiElement modifierList = annotation.getParent()[ FD ]
Line_5 $$ GrAnnotationNameValuePair nvp = (GrAnnotationNameValuePair) element.getParent()-->Line_9 $$ PsiElement argumentList = nvp.getParent()[ FD ]
Line_23 $$ if (!(eMethod instanceof GrMethod))-->Line_24 $$ return PsiReference.EMPTY_ARRAY[ CD ]
Line_29 $$ final List<SpockVariableReference> references = new ArrayList<SpockVariableReference>()-->Line_35 $$ return references.toArray(new PsiReference[references.size()])[ FD ]
Line_30 $$ Matcher matcher = PATTERN.matcher(text)-->Line_31 $$ while (matcher.find()) [ FD ]
Line_31 $$ while (matcher.find()) -->Line_33 $$ references.add(new SpockVariableReference(element, range, references, method))[ CD ]
Line_19 $$ PsiElement modifierList = annotation.getParent()-->Line_22 $$ PsiElement eMethod = modifierList.getParent()[ FD ]
Line_20 $$ if (!(modifierList instanceof GrModifierList))-->Line_21 $$ return PsiReference.EMPTY_ARRAY[ CD ]
Line_10 $$ if (!(argumentList instanceof GrAnnotationArgumentList))-->Line_11 $$ return PsiReference.EMPTY_ARRAY[ CD ]
Line_30 $$ Matcher matcher = PATTERN.matcher(text)-->Line_32 $$ TextRange range = new TextRange(rangeInElement.getStartOffset() + matcher.start(1), rangeInElement.getStartOffset() + matcher.end(1))[ FD ]
Line_28 $$ String text = rangeInElement.substring(element.getText())-->Line_30 $$ Matcher matcher = PATTERN.matcher(text)[ FD ]
