Line_4 $$ List<Module> suitableModules = new ArrayList<Module>(Arrays.asList(myContext.getModules()))-->Line_5 $$ final Iterator<Module> iterator = suitableModules.iterator()[ FD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_24 $$ final Facet facet = ModuleStructureConfigurable.getInstance(project).getFacetEditorFacade().createAndAddFacet(type, module, null)[ CD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_21 $$ if (!dialog.isOK() || elements.size() != 1)[ CD ]
Line_7 $$ Module module = iterator.next()-->Line_8 $$ if (!type.isSuitableModuleType(ModuleType.get(module)) || (type.isOnlyOneFacetAllowed() && facetsConfigurator.hasFacetOfType(module, null, type.getId()))) [ FD ]
Line_5 $$ final Iterator<Module> iterator = suitableModules.iterator()-->Line_6 $$ while (iterator.hasNext()) [ FD ]
Line_5 $$ final Iterator<Module> iterator = suitableModules.iterator()-->Line_9 $$ iterator.remove()[ FD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_12 $$ final Project project = myContext.getProject()[ CD ]
Line_13 $$ if (suitableModules.isEmpty()) -->Line_15 $$ return[ CD ]
Line_17 $$ final ChooseModulesDialog dialog = new ChooseModulesDialog(project, suitableModules, "Choose Module", type.getPresentableName() + " facet will be added to selected module")-->Line_21 $$ if (!dialog.isOK() || elements.size() != 1)[ FD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_17 $$ final ChooseModulesDialog dialog = new ChooseModulesDialog(project, suitableModules, "Choose Module", type.getPresentableName() + " facet will be added to selected module")[ CD ]
Line_23 $$ final Module module = elements.get(0)-->Line_24 $$ final Facet facet = ModuleStructureConfigurable.getInstance(project).getFacetEditorFacade().createAndAddFacet(type, module, null)[ FD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_20 $$ final List<Module> elements = dialog.getChosenElements()[ CD ]
Line_8 $$ if (!type.isSuitableModuleType(ModuleType.get(module)) || (type.isOnlyOneFacetAllowed() && facetsConfigurator.hasFacetOfType(module, null, type.getId()))) -->Line_9 $$ iterator.remove()[ CD ]
Line_12 $$ final Project project = myContext.getProject()-->Line_14 $$ Messages.showErrorDialog(project, "No suitable modules for " + type.getPresentableName() + " facet found.", "Cannot Create Facet")[ FD ]
Line_4 $$ List<Module> suitableModules = new ArrayList<Module>(Arrays.asList(myContext.getModules()))-->Line_13 $$ if (suitableModules.isEmpty()) [ FD ]
Line_20 $$ final List<Module> elements = dialog.getChosenElements()-->Line_23 $$ final Module module = elements.get(0)[ FD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_8 $$ if (!type.isSuitableModuleType(ModuleType.get(module)) || (type.isOnlyOneFacetAllowed() && facetsConfigurator.hasFacetOfType(module, null, type.getId()))) [ FD ]
Line_24 $$ final Facet facet = ModuleStructureConfigurable.getInstance(project).getFacetEditorFacade().createAndAddFacet(type, module, null)-->Line_25 $$ ProjectStructureConfigurable.getInstance(project).select(facet, true)[ FD ]
Line_20 $$ final List<Module> elements = dialog.getChosenElements()-->Line_21 $$ if (!dialog.isOK() || elements.size() != 1)[ FD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_24 $$ final Facet facet = ModuleStructureConfigurable.getInstance(project).getFacetEditorFacade().createAndAddFacet(type, module, null)[ FD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_13 $$ if (suitableModules.isEmpty()) [ CD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_5 $$ final Iterator<Module> iterator = suitableModules.iterator()[ CD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_25 $$ ProjectStructureConfigurable.getInstance(project).select(facet, true)[ CD ]
Line_12 $$ final Project project = myContext.getProject()-->Line_24 $$ final Facet facet = ModuleStructureConfigurable.getInstance(project).getFacetEditorFacade().createAndAddFacet(type, module, null)[ FD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_14 $$ Messages.showErrorDialog(project, "No suitable modules for " + type.getPresentableName() + " facet found.", "Cannot Create Facet")[ FD ]
Line_17 $$ final ChooseModulesDialog dialog = new ChooseModulesDialog(project, suitableModules, "Choose Module", type.getPresentableName() + " facet will be added to selected module")-->Line_18 $$ dialog.setSingleSelectionMode()[ FD ]
Line_5 $$ final Iterator<Module> iterator = suitableModules.iterator()-->Line_7 $$ Module module = iterator.next()[ FD ]
Line_13 $$ if (suitableModules.isEmpty()) -->Line_14 $$ Messages.showErrorDialog(project, "No suitable modules for " + type.getPresentableName() + " facet found.", "Cannot Create Facet")[ CD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_23 $$ final Module module = elements.get(0)[ CD ]
Line_12 $$ final Project project = myContext.getProject()-->Line_25 $$ ProjectStructureConfigurable.getInstance(project).select(facet, true)[ FD ]
Line_17 $$ final ChooseModulesDialog dialog = new ChooseModulesDialog(project, suitableModules, "Choose Module", type.getPresentableName() + " facet will be added to selected module")-->Line_19 $$ dialog.show()[ FD ]
Line_6 $$ while (iterator.hasNext()) -->Line_8 $$ if (!type.isSuitableModuleType(ModuleType.get(module)) || (type.isOnlyOneFacetAllowed() && facetsConfigurator.hasFacetOfType(module, null, type.getId()))) [ CD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_3 $$ final ProjectFacetsConfigurator facetsConfigurator = myContext.getModulesConfigurator().getFacetsConfigurator()[ CD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_17 $$ final ChooseModulesDialog dialog = new ChooseModulesDialog(project, suitableModules, "Choose Module", type.getPresentableName() + " facet will be added to selected module")[ FD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_4 $$ List<Module> suitableModules = new ArrayList<Module>(Arrays.asList(myContext.getModules()))[ CD ]
Line_17 $$ final ChooseModulesDialog dialog = new ChooseModulesDialog(project, suitableModules, "Choose Module", type.getPresentableName() + " facet will be added to selected module")-->Line_20 $$ final List<Module> elements = dialog.getChosenElements()[ FD ]
Line_6 $$ while (iterator.hasNext()) -->Line_7 $$ Module module = iterator.next()[ CD ]
Line_3 $$ final ProjectFacetsConfigurator facetsConfigurator = myContext.getModulesConfigurator().getFacetsConfigurator()-->Line_8 $$ if (!type.isSuitableModuleType(ModuleType.get(module)) || (type.isOnlyOneFacetAllowed() && facetsConfigurator.hasFacetOfType(module, null, type.getId()))) [ FD ]
Line_21 $$ if (!dialog.isOK() || elements.size() != 1)-->Line_22 $$ return[ CD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_18 $$ dialog.setSingleSelectionMode()[ CD ]
Line_7 $$ Module module = iterator.next()-->Line_24 $$ final Facet facet = ModuleStructureConfigurable.getInstance(project).getFacetEditorFacade().createAndAddFacet(type, module, null)[ FD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_19 $$ dialog.show()[ CD ]
Line_2 $$ private void addFacetToModule(@NotNull FacetType type) -->Line_6 $$ while (iterator.hasNext()) [ CD ]
