Line_2 $$ public void testList() throws Exception -->Line_7 $$ bindObject(ServiceName.JBOSS.append("foo", "bar", "baz", "TestBean"), value)[ CD ]
Line_16 $$ List<NameClassPair> list = store.list(new CompositeName(""))-->Line_26 $$ assertContains(list, "ba", Context.class)[ FD ]
Line_2 $$ public void testList() throws Exception -->Line_9 $$ store.add(ServiceName.JBOSS.append("fo", "bar"))[ CD ]
Line_2 $$ public void testList() throws Exception -->Line_13 $$ store.add(ServiceName.JBOSS.append("foo", "bar", "bazt"))[ CD ]
Line_16 $$ List<NameClassPair> list = store.list(new CompositeName(""))-->Line_23 $$ list = store.list(new CompositeName("foo"))[ FD ]
Line_2 $$ public void testList() throws Exception -->Line_20 $$ assertContains(list, "fo", Context.class)[ CD ]
Line_23 $$ list = store.list(new CompositeName("foo"))-->Line_27 $$ assertContains(list, "bart", Context.class)[ FD ]
Line_23 $$ list = store.list(new CompositeName("foo"))-->Line_25 $$ assertContains(list, "TestBean", Object.class)[ FD ]
Line_2 $$ public void testList() throws Exception -->Line_22 $$ assertContains(list, "other", Context.class)[ CD ]
Line_2 $$ public void testList() throws Exception -->Line_16 $$ List<NameClassPair> list = store.list(new CompositeName(""))[ CD ]
Line_2 $$ public void testList() throws Exception -->Line_28 $$ assertContains(list, "bar", Context.class)[ CD ]
Line_16 $$ List<NameClassPair> list = store.list(new CompositeName(""))-->Line_28 $$ assertContains(list, "bar", Context.class)[ FD ]
Line_16 $$ List<NameClassPair> list = store.list(new CompositeName(""))-->Line_18 $$ assertContains(list, "TestBean", Object.class)[ FD ]
Line_16 $$ List<NameClassPair> list = store.list(new CompositeName(""))-->Line_24 $$ assertEquals(4, list.size())[ FD ]
Line_16 $$ List<NameClassPair> list = store.list(new CompositeName(""))-->Line_27 $$ assertContains(list, "bart", Context.class)[ FD ]
Line_23 $$ list = store.list(new CompositeName("foo"))-->Line_26 $$ assertContains(list, "ba", Context.class)[ FD ]
Line_2 $$ public void testList() throws Exception -->Line_10 $$ store.add(ServiceName.JBOSS.append("foo", "ba", "baz"))[ CD ]
Line_2 $$ public void testList() throws Exception -->Line_19 $$ assertContains(list, "foo", Context.class)[ CD ]
Line_2 $$ public void testList() throws Exception -->Line_25 $$ assertContains(list, "TestBean", Object.class)[ CD ]
Line_2 $$ public void testList() throws Exception -->Line_17 $$ assertEquals(5, list.size())[ CD ]
Line_3 $$ final Object value = new Object()-->Line_5 $$ bindObject(ServiceName.JBOSS.append("foo", "TestBean"), value)[ FD ]
Line_3 $$ final Object value = new Object()-->Line_7 $$ bindObject(ServiceName.JBOSS.append("foo", "bar", "baz", "TestBean"), value)[ FD ]
Line_16 $$ List<NameClassPair> list = store.list(new CompositeName(""))-->Line_21 $$ assertContains(list, "foos", Context.class)[ FD ]
Line_2 $$ public void testList() throws Exception -->Line_14 $$ store.add(ServiceName.JBOSS.append("foo", "bar", "art"))[ CD ]
Line_2 $$ public void testList() throws Exception -->Line_27 $$ assertContains(list, "bart", Context.class)[ CD ]
Line_2 $$ public void testList() throws Exception -->Line_3 $$ final Object value = new Object()[ CD ]
Line_16 $$ List<NameClassPair> list = store.list(new CompositeName(""))-->Line_25 $$ assertContains(list, "TestBean", Object.class)[ FD ]
Line_16 $$ List<NameClassPair> list = store.list(new CompositeName(""))-->Line_17 $$ assertEquals(5, list.size())[ FD ]
Line_2 $$ public void testList() throws Exception -->Line_21 $$ assertContains(list, "foos", Context.class)[ CD ]
Line_23 $$ list = store.list(new CompositeName("foo"))-->Line_24 $$ assertEquals(4, list.size())[ FD ]
Line_2 $$ public void testList() throws Exception -->Line_18 $$ assertContains(list, "TestBean", Object.class)[ CD ]
Line_16 $$ List<NameClassPair> list = store.list(new CompositeName(""))-->Line_19 $$ assertContains(list, "foo", Context.class)[ FD ]
Line_2 $$ public void testList() throws Exception -->Line_23 $$ list = store.list(new CompositeName("foo"))[ CD ]
Line_2 $$ public void testList() throws Exception -->Line_15 $$ store.add(ServiceName.JBOSS.append("other", "one"))[ CD ]
Line_2 $$ public void testList() throws Exception -->Line_11 $$ store.add(ServiceName.JBOSS.append("foo", "bart", "baz"))[ CD ]
Line_16 $$ List<NameClassPair> list = store.list(new CompositeName(""))-->Line_22 $$ assertContains(list, "other", Context.class)[ FD ]
Line_3 $$ final Object value = new Object()-->Line_4 $$ bindObject(ServiceName.JBOSS.append("TestBean"), value)[ FD ]
Line_2 $$ public void testList() throws Exception -->Line_26 $$ assertContains(list, "ba", Context.class)[ CD ]
Line_2 $$ public void testList() throws Exception -->Line_24 $$ assertEquals(4, list.size())[ CD ]
Line_2 $$ public void testList() throws Exception -->Line_8 $$ store.add(ServiceName.JBOSS.append("foos", "bar"))[ CD ]
Line_3 $$ final Object value = new Object()-->Line_6 $$ bindObject(ServiceName.JBOSS.append("foo", "bar", "TestBean"), value)[ FD ]
Line_16 $$ List<NameClassPair> list = store.list(new CompositeName(""))-->Line_20 $$ assertContains(list, "fo", Context.class)[ FD ]
Line_2 $$ public void testList() throws Exception -->Line_6 $$ bindObject(ServiceName.JBOSS.append("foo", "bar", "TestBean"), value)[ CD ]
Line_2 $$ public void testList() throws Exception -->Line_4 $$ bindObject(ServiceName.JBOSS.append("TestBean"), value)[ CD ]
Line_23 $$ list = store.list(new CompositeName("foo"))-->Line_28 $$ assertContains(list, "bar", Context.class)[ FD ]
Line_2 $$ public void testList() throws Exception -->Line_5 $$ bindObject(ServiceName.JBOSS.append("foo", "TestBean"), value)[ CD ]
Line_2 $$ public void testList() throws Exception -->Line_12 $$ store.add(ServiceName.JBOSS.append("foo", "bar", "ba"))[ CD ]
