Line_18 $$ ResultChecker checker = new ResultChecker() -->Line_27 $$ if (areDynamicNonLazyAssociationsChecked()) [ CD ]
Line_18 $$ ResultChecker checker = new ResultChecker() -->Line_26 $$ assertNotNull(((Student) resultList.get(1)).getEnrolments())[ CD ]
Line_18 $$ ResultChecker checker = new ResultChecker() -->Line_25 $$ assertNotNull(((Student) resultList.get(0)).getEnrolments())[ CD ]
Line_21 $$ List resultList = (List) results-->Line_30 $$ assertTrue(Hibernate.isInitialized(((Student) resultList.get(1)).getEnrolments()))[ FD ]
Line_18 $$ ResultChecker checker = new ResultChecker() -->Line_22 $$ assertEquals(2, resultList.size())[ CD ]
Line_21 $$ List resultList = (List) results-->Line_29 $$ assertEquals(yogiExpected.getEnrolments(), ((Student) resultList.get(0)).getEnrolments())[ FD ]
Line_21 $$ List resultList = (List) results-->Line_31 $$ assertEquals(shermanExpected.getEnrolments(), ((Student) resultList.get(1)).getEnrolments())[ FD ]
Line_18 $$ ResultChecker checker = new ResultChecker() -->Line_21 $$ List resultList = (List) results[ CD ]
Line_27 $$ if (areDynamicNonLazyAssociationsChecked()) -->Line_31 $$ assertEquals(shermanExpected.getEnrolments(), ((Student) resultList.get(1)).getEnrolments())[ CD ]
Line_21 $$ List resultList = (List) results-->Line_23 $$ assertEquals(yogiExpected, resultList.get(0))[ FD ]
Line_27 $$ if (areDynamicNonLazyAssociationsChecked()) -->Line_28 $$ assertTrue(Hibernate.isInitialized(((Student) resultList.get(0)).getEnrolments()))[ CD ]
Line_21 $$ List resultList = (List) results-->Line_22 $$ assertEquals(2, resultList.size())[ FD ]
Line_12 $$ HqlExecutor hqlExecutorUnaliased = new HqlExecutor() -->Line_15 $$ return s.createQuery("from Student s left join fetch s.enrolments order by s.studentNumber")[ CD ]
Line_18 $$ ResultChecker checker = new ResultChecker() -->Line_23 $$ assertEquals(yogiExpected, resultList.get(0))[ CD ]
Line_27 $$ if (areDynamicNonLazyAssociationsChecked()) -->Line_29 $$ assertEquals(yogiExpected.getEnrolments(), ((Student) resultList.get(0)).getEnrolments())[ CD ]
Line_21 $$ List resultList = (List) results-->Line_24 $$ assertEquals(shermanExpected, resultList.get(1))[ FD ]
Line_21 $$ List resultList = (List) results-->Line_25 $$ assertNotNull(((Student) resultList.get(0)).getEnrolments())[ FD ]
Line_12 $$ HqlExecutor hqlExecutorUnaliased = new HqlExecutor() -->Line_15 $$ return s.createQuery("from Student s left join fetch s.enrolments order by s.studentNumber")[ FD ]
Line_21 $$ List resultList = (List) results-->Line_26 $$ assertNotNull(((Student) resultList.get(1)).getEnrolments())[ FD ]
Line_21 $$ List resultList = (List) results-->Line_28 $$ assertTrue(Hibernate.isInitialized(((Student) resultList.get(0)).getEnrolments()))[ FD ]
Line_27 $$ if (areDynamicNonLazyAssociationsChecked()) -->Line_30 $$ assertTrue(Hibernate.isInitialized(((Student) resultList.get(1)).getEnrolments()))[ CD ]
Line_18 $$ ResultChecker checker = new ResultChecker() -->Line_24 $$ assertEquals(shermanExpected, resultList.get(1))[ CD ]
