Line_3 $$ StringBundler availableLocales = new StringBundler(2 * contents.size())-->Line_11 $$ availableLocales.append(sb)[ FD ]
Line_4 $$ for (Map<Locale, String> map : contents) -->Line_20 $$ for (Map.Entry<Locale, String> entry : map.entrySet()) [ FD ]
Line_5 $$ StringBundler sb = new StringBundler(2 * map.size())-->Line_10 $$ sb.setIndex(sb.index() - 1)[ FD ]
Line_3 $$ StringBundler availableLocales = new StringBundler(2 * contents.size())-->Line_13 $$ Document document = createDocumentContent(availableLocales.toString(), defaultLocale)[ FD ]
Line_2 $$ public static String getSampleStructuredContent(String name, List<Map<Locale, String>> contents, String defaultLocale) -->Line_26 $$ return document.asXML()[ CD ]
Line_16 $$ Element dynamicElementElement = rootElement.addElement("dynamic-element")-->Line_21 $$ Element element = dynamicElementElement.addElement("dynamic-content")[ FD ]
Line_2 $$ public static String getSampleStructuredContent(String name, List<Map<Locale, String>> contents, String defaultLocale) -->Line_18 $$ dynamicElementElement.addAttribute("name", name)[ FD ]
Line_6 $$ for (Locale locale : map.keySet()) -->Line_7 $$ sb.append(LocaleUtil.toLanguageId(locale))[ FD ]
Line_21 $$ Element element = dynamicElementElement.addElement("dynamic-content")-->Line_23 $$ element.addCDATA(entry.getValue())[ FD ]
Line_2 $$ public static String getSampleStructuredContent(String name, List<Map<Locale, String>> contents, String defaultLocale) -->Line_3 $$ StringBundler availableLocales = new StringBundler(2 * contents.size())[ CD ]
Line_2 $$ public static String getSampleStructuredContent(String name, List<Map<Locale, String>> contents, String defaultLocale) -->Line_14 $$ Element rootElement = document.getRootElement()[ CD ]
Line_2 $$ public static String getSampleStructuredContent(String name, List<Map<Locale, String>> contents, String defaultLocale) -->Line_13 $$ Document document = createDocumentContent(availableLocales.toString(), defaultLocale)[ FD ]
Line_16 $$ Element dynamicElementElement = rootElement.addElement("dynamic-element")-->Line_17 $$ dynamicElementElement.addAttribute("index-type", "keyword")[ FD ]
Line_2 $$ public static String getSampleStructuredContent(String name, List<Map<Locale, String>> contents, String defaultLocale) -->Line_3 $$ StringBundler availableLocales = new StringBundler(2 * contents.size())[ FD ]
Line_4 $$ for (Map<Locale, String> map : contents) -->Line_6 $$ for (Locale locale : map.keySet()) [ FD ]
Line_20 $$ for (Map.Entry<Locale, String> entry : map.entrySet()) -->Line_22 $$ element.addAttribute("language-id", LocaleUtil.toLanguageId(entry.getKey()))[ FD ]
Line_16 $$ Element dynamicElementElement = rootElement.addElement("dynamic-element")-->Line_18 $$ dynamicElementElement.addAttribute("name", name)[ FD ]
Line_4 $$ for (Map<Locale, String> map : contents) -->Line_5 $$ StringBundler sb = new StringBundler(2 * map.size())[ FD ]
Line_20 $$ for (Map.Entry<Locale, String> entry : map.entrySet()) -->Line_23 $$ element.addCDATA(entry.getValue())[ FD ]
Line_13 $$ Document document = createDocumentContent(availableLocales.toString(), defaultLocale)-->Line_14 $$ Element rootElement = document.getRootElement()[ FD ]
Line_13 $$ Document document = createDocumentContent(availableLocales.toString(), defaultLocale)-->Line_26 $$ return document.asXML()[ FD ]
Line_5 $$ StringBundler sb = new StringBundler(2 * map.size())-->Line_7 $$ sb.append(LocaleUtil.toLanguageId(locale))[ FD ]
Line_14 $$ Element rootElement = document.getRootElement()-->Line_16 $$ Element dynamicElementElement = rootElement.addElement("dynamic-element")[ FD ]
Line_5 $$ StringBundler sb = new StringBundler(2 * map.size())-->Line_11 $$ availableLocales.append(sb)[ FD ]
Line_2 $$ public static String getSampleStructuredContent(String name, List<Map<Locale, String>> contents, String defaultLocale) -->Line_13 $$ Document document = createDocumentContent(availableLocales.toString(), defaultLocale)[ CD ]
Line_21 $$ Element element = dynamicElementElement.addElement("dynamic-content")-->Line_22 $$ element.addAttribute("language-id", LocaleUtil.toLanguageId(entry.getKey()))[ FD ]
Line_5 $$ StringBundler sb = new StringBundler(2 * map.size())-->Line_8 $$ sb.append(StringPool.COMMA)[ FD ]
Line_16 $$ Element dynamicElementElement = rootElement.addElement("dynamic-element")-->Line_19 $$ dynamicElementElement.addAttribute("type", "text")[ FD ]
