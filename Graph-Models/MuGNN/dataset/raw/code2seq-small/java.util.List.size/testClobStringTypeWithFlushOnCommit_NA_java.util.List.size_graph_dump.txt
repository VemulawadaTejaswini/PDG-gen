Line_5 $$ ClobStringType type = new ClobStringType(lobHandler, null)-->Line_11 $$ assertFalse(type.isMutable())[ FD ]
Line_16 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_17 $$ assertEquals(1, synchs.size())[ FD ]
Line_5 $$ ClobStringType type = new ClobStringType(lobHandler, null)-->Line_7 $$ assertEquals(Types.CLOB, type.sqlTypes()[0])[ FD ]
Line_5 $$ ClobStringType type = new ClobStringType(lobHandler, null)-->Line_6 $$ assertEquals(1, type.sqlTypes().length)[ FD ]
Line_5 $$ ClobStringType type = new ClobStringType(lobHandler, null)-->Line_15 $$ type.nullSafeSet(ps, "content", 1)[ FD ]
Line_16 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_18 $$ ((TransactionSynchronization) synchs.get(0)).afterCompletion(TransactionSynchronization.STATUS_COMMITTED)[ FD ]
Line_5 $$ ClobStringType type = new ClobStringType(lobHandler, null)-->Line_12 $$ assertEquals("content", type.nullSafeGet(rs, new String[] [ FD ]
Line_5 $$ ClobStringType type = new ClobStringType(lobHandler, null)-->Line_9 $$ assertTrue(type.equals("content", "content"))[ FD ]
Line_5 $$ ClobStringType type = new ClobStringType(lobHandler, null)-->Line_10 $$ assertEquals("content", type.deepCopy("content"))[ FD ]
Line_5 $$ ClobStringType type = new ClobStringType(lobHandler, null)-->Line_8 $$ assertEquals(String.class, type.returnedClass())[ FD ]
