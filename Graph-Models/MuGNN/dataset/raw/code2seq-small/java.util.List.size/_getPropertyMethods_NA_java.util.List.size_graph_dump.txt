Line_10 $$ String name = method.getName()-->Line_11 $$ if (name.equals("getClass")) [ FD ]
Line_5 $$ for (Method method : methods) -->Line_10 $$ String name = method.getName()[ FD ]
Line_3 $$ List<Method> propertyMethods = new ArrayList()-->Line_18 $$ return propertyMethods.toArray(new Method[propertyMethods.size()])[ FD ]
Line_14 $$ if (name.startsWith("get") || name.startsWith("is")) -->Line_15 $$ propertyMethods.add(method)[ CD ]
Line_2 $$ private Method[] _getPropertyMethods() -->Line_4 $$ Method[] methods = _settingsClass.getMethods()[ CD ]
Line_10 $$ String name = method.getName()-->Line_14 $$ if (name.startsWith("get") || name.startsWith("is")) [ FD ]
Line_2 $$ private Method[] _getPropertyMethods() -->Line_18 $$ return propertyMethods.toArray(new Method[propertyMethods.size()])[ CD ]
Line_6 $$ Settings.Property settingsProperty = method.getAnnotation(Settings.Property.class)-->Line_7 $$ if ((settingsProperty != null) && settingsProperty.ignore()) [ FD ]
Line_5 $$ for (Method method : methods) -->Line_6 $$ Settings.Property settingsProperty = method.getAnnotation(Settings.Property.class)[ FD ]
Line_2 $$ private Method[] _getPropertyMethods() -->Line_3 $$ List<Method> propertyMethods = new ArrayList()[ CD ]
Line_3 $$ List<Method> propertyMethods = new ArrayList()-->Line_15 $$ propertyMethods.add(method)[ FD ]
Line_5 $$ for (Method method : methods) -->Line_15 $$ propertyMethods.add(method)[ FD ]
