Line_7 $$ SessionFactoryBuilder builder = null-->Line_22 $$ if (builder != null) [ FD ]
Line_11 $$ if (returnedBuilder != null) -->Line_12 $$ if (activeFactoryNames == null) [ CD ]
Line_7 $$ SessionFactoryBuilder builder = null-->Line_16 $$ builder = returnedBuilder[ FD ]
Line_8 $$ List<String> activeFactoryNames = null-->Line_12 $$ if (activeFactoryNames == null) [ FD ]
Line_13 $$ activeFactoryNames = new ArrayList<String>()-->Line_15 $$ activeFactoryNames.add(discoveredBuilderFactory.getClass().getName())[ FD ]
Line_10 $$ final SessionFactoryBuilder returnedBuilder = discoveredBuilderFactory.getSessionFactoryBuilder(this, defaultBuilder)-->Line_11 $$ if (returnedBuilder != null) [ FD ]
Line_10 $$ final SessionFactoryBuilder returnedBuilder = discoveredBuilderFactory.getSessionFactoryBuilder(this, defaultBuilder)-->Line_16 $$ builder = returnedBuilder[ FD ]
Line_16 $$ builder = returnedBuilder-->Line_22 $$ if (builder != null) [ FD ]
Line_8 $$ List<String> activeFactoryNames = null-->Line_19 $$ if (activeFactoryNames != null && activeFactoryNames.size() > 1) [ FD ]
Line_4 $$ final SessionFactoryBuilderImpl defaultBuilder = new SessionFactoryBuilderImpl(this)-->Line_10 $$ final SessionFactoryBuilder returnedBuilder = discoveredBuilderFactory.getSessionFactoryBuilder(this, defaultBuilder)[ FD ]
Line_9 $$ for (SessionFactoryBuilderFactory discoveredBuilderFactory : discoveredBuilderFactories) -->Line_15 $$ activeFactoryNames.add(discoveredBuilderFactory.getClass().getName())[ FD ]
Line_8 $$ List<String> activeFactoryNames = null-->Line_15 $$ activeFactoryNames.add(discoveredBuilderFactory.getClass().getName())[ FD ]
Line_8 $$ List<String> activeFactoryNames = null-->Line_13 $$ activeFactoryNames = new ArrayList<String>()[ FD ]
Line_22 $$ if (builder != null) -->Line_23 $$ return builder[ CD ]
Line_12 $$ if (activeFactoryNames == null) -->Line_13 $$ activeFactoryNames = new ArrayList<String>()[ CD ]
Line_8 $$ List<String> activeFactoryNames = null-->Line_20 $$ throw new HibernateException("Multiple active SessionFactoryBuilderFactory definitions were discovered : " + StringHelper.join(", ", activeFactoryNames))[ FD ]
Line_5 $$ final ClassLoaderService cls = metadataBuildingOptions.getServiceRegistry().getService(ClassLoaderService.class)-->Line_6 $$ final java.util.Collection<SessionFactoryBuilderFactory> discoveredBuilderFactories = cls.loadJavaServices(SessionFactoryBuilderFactory.class)[ FD ]
Line_9 $$ for (SessionFactoryBuilderFactory discoveredBuilderFactory : discoveredBuilderFactories) -->Line_10 $$ final SessionFactoryBuilder returnedBuilder = discoveredBuilderFactory.getSessionFactoryBuilder(this, defaultBuilder)[ FD ]
Line_11 $$ if (returnedBuilder != null) -->Line_15 $$ activeFactoryNames.add(discoveredBuilderFactory.getClass().getName())[ CD ]
Line_13 $$ activeFactoryNames = new ArrayList<String>()-->Line_19 $$ if (activeFactoryNames != null && activeFactoryNames.size() > 1) [ FD ]
Line_11 $$ if (returnedBuilder != null) -->Line_16 $$ builder = returnedBuilder[ CD ]
Line_13 $$ activeFactoryNames = new ArrayList<String>()-->Line_20 $$ throw new HibernateException("Multiple active SessionFactoryBuilderFactory definitions were discovered : " + StringHelper.join(", ", activeFactoryNames))[ FD ]
