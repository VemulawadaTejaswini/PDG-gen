Line_20 $$ final Path childDir = new Path(path, "child" + pathCount)-->Line_60 $$ assertTrue(userFs.listXAttrs(childDir).size() == 1)[ FD ]
Line_20 $$ final Path childDir = new Path(path, "child" + pathCount)-->Line_40 $$ userFs.listXAttrs(childDir)[ FD ]
Line_39 $$ final FileSystem userFs = dfsCluster.getFileSystem()-->Line_60 $$ assertTrue(userFs.listXAttrs(childDir).size() == 1)[ FD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_49 $$ user.doAs(new PrivilegedExceptionAction<Object>() [ CD ]
Line_49 $$ user.doAs(new PrivilegedExceptionAction<Object>() -->Line_53 $$ return null[ CD ]
Line_24 $$ user.doAs(new PrivilegedExceptionAction<Object>() -->Line_27 $$ userFs.listXAttrs(childDir)[ CD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_48 $$ fs.setPermission(path, new FsPermission((short) 0701))[ CD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_56 $$ fs.setXAttr(childDir, "trusted.myxattr", "1234".getBytes())[ CD ]
Line_24 $$ user.doAs(new PrivilegedExceptionAction<Object>() -->Line_28 $$ return null[ CD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_17 $$ assertTrue(xattrNames.contains(name2))[ CD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_3 $$ final UserGroupInformation user = UserGroupInformation.createUserForTesting("user", new String[] [ CD ]
Line_37 $$ user.doAs(new PrivilegedExceptionAction<Object>() -->Line_40 $$ userFs.listXAttrs(childDir)[ CD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_15 $$ final List<String> xattrNames = fs.listXAttrs(path)[ CD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_16 $$ assertTrue(xattrNames.contains(name1))[ CD ]
Line_3 $$ final UserGroupInformation user = UserGroupInformation.createUserForTesting("user", new String[] -->Line_49 $$ user.doAs(new PrivilegedExceptionAction<Object>() [ FD ]
Line_11 $$ final List<String> noXAttrs = fs.listXAttrs(path)-->Line_12 $$ assertTrue("XAttrs were found?", noXAttrs.size() == 0)[ FD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_10 $$ FileSystem.mkdirs(fs, path, FsPermission.createImmutable((short) 0750))[ CD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_11 $$ final List<String> noXAttrs = fs.listXAttrs(path)[ CD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_18 $$ assertTrue(xattrNames.size() == 2)[ CD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_20 $$ final Path childDir = new Path(path, "child" + pathCount)[ CD ]
Line_57 $$ user.doAs(new PrivilegedExceptionAction<Object>() -->Line_59 $$ final FileSystem userFs = dfsCluster.getFileSystem()[ CD ]
Line_20 $$ final Path childDir = new Path(path, "child" + pathCount)-->Line_64 $$ assertTrue(fs.listXAttrs(childDir).size() == 2)[ FD ]
Line_15 $$ final List<String> xattrNames = fs.listXAttrs(path)-->Line_16 $$ assertTrue(xattrNames.contains(name1))[ FD ]
Line_57 $$ user.doAs(new PrivilegedExceptionAction<Object>() -->Line_60 $$ assertTrue(userFs.listXAttrs(childDir).size() == 1)[ CD ]
Line_51 $$ final FileSystem userFs = dfsCluster.getFileSystem()-->Line_60 $$ assertTrue(userFs.listXAttrs(childDir).size() == 1)[ FD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_21 $$ FileSystem.mkdirs(fs, childDir, FsPermission.createImmutable((short) 0700))[ CD ]
Line_20 $$ final Path childDir = new Path(path, "child" + pathCount)-->Line_52 $$ userFs.listXAttrs(childDir)[ FD ]
Line_39 $$ final FileSystem userFs = dfsCluster.getFileSystem()-->Line_40 $$ userFs.listXAttrs(childDir)[ FD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_57 $$ user.doAs(new PrivilegedExceptionAction<Object>() [ CD ]
Line_37 $$ user.doAs(new PrivilegedExceptionAction<Object>() -->Line_39 $$ final FileSystem userFs = dfsCluster.getFileSystem()[ CD ]
Line_26 $$ final FileSystem userFs = dfsCluster.getFileSystem()-->Line_27 $$ userFs.listXAttrs(childDir)[ FD ]
Line_3 $$ final UserGroupInformation user = UserGroupInformation.createUserForTesting("user", new String[] -->Line_37 $$ user.doAs(new PrivilegedExceptionAction<Object>() [ FD ]
Line_51 $$ final FileSystem userFs = dfsCluster.getFileSystem()-->Line_52 $$ userFs.listXAttrs(childDir)[ FD ]
Line_26 $$ final FileSystem userFs = dfsCluster.getFileSystem()-->Line_52 $$ userFs.listXAttrs(childDir)[ FD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_14 $$ fs.setXAttr(path, name2, value2, EnumSet.of(XAttrSetFlag.CREATE))[ CD ]
Line_37 $$ user.doAs(new PrivilegedExceptionAction<Object>() -->Line_41 $$ return null[ CD ]
Line_15 $$ final List<String> xattrNames = fs.listXAttrs(path)-->Line_18 $$ assertTrue(xattrNames.size() == 2)[ FD ]
Line_20 $$ final Path childDir = new Path(path, "child" + pathCount)-->Line_21 $$ FileSystem.mkdirs(fs, childDir, FsPermission.createImmutable((short) 0700))[ FD ]
Line_20 $$ final Path childDir = new Path(path, "child" + pathCount)-->Line_22 $$ fs.setXAttr(childDir, name1, "1234".getBytes())[ FD ]
Line_3 $$ final UserGroupInformation user = UserGroupInformation.createUserForTesting("user", new String[] -->Line_24 $$ user.doAs(new PrivilegedExceptionAction<Object>() [ FD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_22 $$ fs.setXAttr(childDir, name1, "1234".getBytes())[ CD ]
Line_49 $$ user.doAs(new PrivilegedExceptionAction<Object>() -->Line_51 $$ final FileSystem userFs = dfsCluster.getFileSystem()[ CD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_19 $$ fs.setPermission(path, new FsPermission((short) 0704))[ CD ]
Line_20 $$ final Path childDir = new Path(path, "child" + pathCount)-->Line_56 $$ fs.setXAttr(childDir, "trusted.myxattr", "1234".getBytes())[ FD ]
Line_59 $$ final FileSystem userFs = dfsCluster.getFileSystem()-->Line_60 $$ assertTrue(userFs.listXAttrs(childDir).size() == 1)[ FD ]
Line_49 $$ user.doAs(new PrivilegedExceptionAction<Object>() -->Line_52 $$ userFs.listXAttrs(childDir)[ CD ]
Line_20 $$ final Path childDir = new Path(path, "child" + pathCount)-->Line_27 $$ userFs.listXAttrs(childDir)[ FD ]
Line_39 $$ final FileSystem userFs = dfsCluster.getFileSystem()-->Line_52 $$ userFs.listXAttrs(childDir)[ FD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_13 $$ fs.setXAttr(path, name1, value1, EnumSet.of(XAttrSetFlag.CREATE))[ CD ]
Line_24 $$ user.doAs(new PrivilegedExceptionAction<Object>() -->Line_26 $$ final FileSystem userFs = dfsCluster.getFileSystem()[ CD ]
Line_26 $$ final FileSystem userFs = dfsCluster.getFileSystem()-->Line_40 $$ userFs.listXAttrs(childDir)[ FD ]
Line_15 $$ final List<String> xattrNames = fs.listXAttrs(path)-->Line_17 $$ assertTrue(xattrNames.contains(name2))[ FD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_64 $$ assertTrue(fs.listXAttrs(childDir).size() == 2)[ CD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_35 $$ fs.setPermission(path, new FsPermission((short) 0702))[ CD ]
Line_26 $$ final FileSystem userFs = dfsCluster.getFileSystem()-->Line_60 $$ assertTrue(userFs.listXAttrs(childDir).size() == 1)[ FD ]
Line_57 $$ user.doAs(new PrivilegedExceptionAction<Object>() -->Line_61 $$ return null[ CD ]
Line_2 $$ public void testListXAttrs() throws Exception -->Line_12 $$ assertTrue("XAttrs were found?", noXAttrs.size() == 0)[ CD ]
Line_3 $$ final UserGroupInformation user = UserGroupInformation.createUserForTesting("user", new String[] -->Line_57 $$ user.doAs(new PrivilegedExceptionAction<Object>() [ FD ]
