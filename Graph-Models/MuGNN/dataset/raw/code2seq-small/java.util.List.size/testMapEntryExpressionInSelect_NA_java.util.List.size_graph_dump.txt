Line_9 $$ addresses = s.createQuery("select entry(c.addresses) from Contact c").list()-->Line_10 $$ assertEquals(1, addresses.size())[ FD ]
Line_6 $$ List addresses = s.createQuery("select entry(a) from Contact c join c.addresses a").list()-->Line_11 $$ assertTyping(Map.Entry.class, addresses.get(0))[ FD ]
Line_6 $$ List addresses = s.createQuery("select entry(a) from Contact c join c.addresses a").list()-->Line_8 $$ assertTyping(Map.Entry.class, addresses.get(0))[ FD ]
Line_6 $$ List addresses = s.createQuery("select entry(a) from Contact c join c.addresses a").list()-->Line_10 $$ assertEquals(1, addresses.size())[ FD ]
Line_9 $$ addresses = s.createQuery("select entry(c.addresses) from Contact c").list()-->Line_11 $$ assertTyping(Map.Entry.class, addresses.get(0))[ FD ]
Line_4 $$ Session s = openSession()-->Line_9 $$ addresses = s.createQuery("select entry(c.addresses) from Contact c").list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_6 $$ List addresses = s.createQuery("select entry(a) from Contact c join c.addresses a").list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_12 $$ s.getTransaction().commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_13 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ s.getTransaction().begin()[ FD ]
Line_6 $$ List addresses = s.createQuery("select entry(a) from Contact c join c.addresses a").list()-->Line_7 $$ assertEquals(1, addresses.size())[ FD ]
Line_6 $$ List addresses = s.createQuery("select entry(a) from Contact c join c.addresses a").list()-->Line_9 $$ addresses = s.createQuery("select entry(c.addresses) from Contact c").list()[ FD ]
