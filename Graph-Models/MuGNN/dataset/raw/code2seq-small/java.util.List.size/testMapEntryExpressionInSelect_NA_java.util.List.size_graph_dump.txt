Line_5 $$ List addresses = s.createQuery("select entry(a) from Contact c join c.addresses a").list()-->Line_8 $$ addresses = s.createQuery("select entry(c.addresses) from Contact c").list()[ FD ]
Line_2 $$ public void testMapEntryExpressionInSelect() -->Line_11 $$ s.getTransaction().commit()[ CD ]
Line_2 $$ public void testMapEntryExpressionInSelect() -->Line_8 $$ addresses = s.createQuery("select entry(c.addresses) from Contact c").list()[ CD ]
Line_8 $$ addresses = s.createQuery("select entry(c.addresses) from Contact c").list()-->Line_9 $$ assertEquals(1, addresses.size())[ FD ]
Line_5 $$ List addresses = s.createQuery("select entry(a) from Contact c join c.addresses a").list()-->Line_7 $$ assertTyping(Map.Entry.class, addresses.get(0))[ FD ]
Line_2 $$ public void testMapEntryExpressionInSelect() -->Line_9 $$ assertEquals(1, addresses.size())[ CD ]
Line_2 $$ public void testMapEntryExpressionInSelect() -->Line_3 $$ Session s = openSession()[ CD ]
Line_3 $$ Session s = openSession()-->Line_8 $$ addresses = s.createQuery("select entry(c.addresses) from Contact c").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_11 $$ s.getTransaction().commit()[ FD ]
Line_2 $$ public void testMapEntryExpressionInSelect() -->Line_6 $$ assertEquals(1, addresses.size())[ CD ]
Line_2 $$ public void testMapEntryExpressionInSelect() -->Line_4 $$ s.getTransaction().begin()[ CD ]
Line_8 $$ addresses = s.createQuery("select entry(c.addresses) from Contact c").list()-->Line_10 $$ assertTyping(Map.Entry.class, addresses.get(0))[ FD ]
Line_5 $$ List addresses = s.createQuery("select entry(a) from Contact c join c.addresses a").list()-->Line_6 $$ assertEquals(1, addresses.size())[ FD ]
Line_5 $$ List addresses = s.createQuery("select entry(a) from Contact c join c.addresses a").list()-->Line_10 $$ assertTyping(Map.Entry.class, addresses.get(0))[ FD ]
Line_3 $$ Session s = openSession()-->Line_12 $$ s.close()[ FD ]
Line_5 $$ List addresses = s.createQuery("select entry(a) from Contact c join c.addresses a").list()-->Line_9 $$ assertEquals(1, addresses.size())[ FD ]
Line_2 $$ public void testMapEntryExpressionInSelect() -->Line_5 $$ List addresses = s.createQuery("select entry(a) from Contact c join c.addresses a").list()[ CD ]
Line_3 $$ Session s = openSession()-->Line_5 $$ List addresses = s.createQuery("select entry(a) from Contact c join c.addresses a").list()[ FD ]
Line_2 $$ public void testMapEntryExpressionInSelect() -->Line_10 $$ assertTyping(Map.Entry.class, addresses.get(0))[ CD ]
Line_2 $$ public void testMapEntryExpressionInSelect() -->Line_7 $$ assertTyping(Map.Entry.class, addresses.get(0))[ CD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ s.getTransaction().begin()[ FD ]
Line_2 $$ public void testMapEntryExpressionInSelect() -->Line_12 $$ s.close()[ CD ]
