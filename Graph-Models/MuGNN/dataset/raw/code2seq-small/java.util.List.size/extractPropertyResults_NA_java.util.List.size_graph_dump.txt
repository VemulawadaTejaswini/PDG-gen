Line_89 $$ if (entry.getValue() instanceof ArrayList) -->Line_90 $$ ArrayList list = (ArrayList) entry.getValue()[ CD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, NativeQueryNonScalarRootReturn rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_3 $$ if (CollectionHelper.isEmpty(rtnSource.getReturnProperty())) [ FD ]
Line_60 $$ index = currentIndex != -1 && currentIndex < index ? currentIndex : index-->Line_63 $$ propertyReturnSources.add(index, propertyReturnSource)[ FD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, NativeQueryNonScalarRootReturn rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_42 $$ throw new MappingException("dotted notation reference neither a component nor a many/one to one", context.getOrigin())[ FD ]
Line_20 $$ parentPropItr = comp.getPropertyIterator()-->Line_26 $$ parentPropItr = ((Component) referencedPc.getRecursiveProperty(toOne.getReferencedPropertyName()).getValue()).getPropertyIterator()[ FD ]
Line_23 $$ final PersistentClass referencedPc = context.getMetadataCollector().getEntityBinding(toOne.getReferencedEntityName())-->Line_33 $$ parentPropItr = ((Component) referencedPc.getIdentifierProperty().getValue()).getPropertyIterator()[ FD ]
Line_80 $$ ArrayList intermediateResults = (ArrayList) results.get(name)-->Line_81 $$ if (intermediateResults == null) [ FD ]
Line_26 $$ parentPropItr = ((Component) referencedPc.getRecursiveProperty(toOne.getReferencedPropertyName()).getValue()).getPropertyIterator()-->Line_46 $$ while (parentPropItr.hasNext()) [ FD ]
Line_3 $$ if (CollectionHelper.isEmpty(rtnSource.getReturnProperty())) -->Line_4 $$ return null[ CD ]
Line_18 $$ if (value instanceof Component) -->Line_21 $$ if (value instanceof ToOne) [ CD ]
Line_18 $$ if (value instanceof Component) -->Line_19 $$ final Component comp = (Component) value[ CD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, NativeQueryNonScalarRootReturn rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_23 $$ final PersistentClass referencedPc = context.getMetadataCollector().getEntityBinding(toOne.getReferencedEntityName())[ FD ]
Line_88 $$ Map.Entry entry = (Map.Entry) o-->Line_89 $$ if (entry.getValue() instanceof ArrayList) [ FD ]
Line_8 $$ List<String> propertyNames = new ArrayList<String>()-->Line_57 $$ int index = propertyNames.size()[ FD ]
Line_50 $$ if (hasFollowers) -->Line_51 $$ followers.add(currentName)[ CD ]
Line_26 $$ parentPropItr = ((Component) referencedPc.getRecursiveProperty(toOne.getReferencedPropertyName()).getValue()).getPropertyIterator()-->Line_33 $$ parentPropItr = ((Component) referencedPc.getIdentifierProperty().getValue()).getPropertyIterator()[ FD ]
Line_68 $$ final String name = propertyReturnBinding.getName()-->Line_80 $$ ArrayList intermediateResults = (ArrayList) results.get(name)[ FD ]
Line_68 $$ final String name = propertyReturnBinding.getName()-->Line_79 $$ uniqueReturnProperty.add(name)[ FD ]
Line_90 $$ ArrayList list = (ArrayList) entry.getValue()-->Line_91 $$ entry.setValue(list.toArray(new String[list.size()]))[ FD ]
Line_11 $$ if (pc == null || dotPosition == -1) -->Line_46 $$ while (parentPropItr.hasNext()) [ CD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, NativeQueryNonScalarRootReturn rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_28 $$ throw new MappingException("dotted notation reference neither a component nor a many/one to one", e, context.getOrigin())[ FD ]
Line_9 $$ for (JaxbHbmNativeQueryPropertyReturnType propertyReturnSource : rtnSource.getReturnProperty()) -->Line_13 $$ propertyNames.add(propertyReturnSource.getName())[ FD ]
Line_17 $$ Iterator parentPropItr-->Line_26 $$ parentPropItr = ((Component) referencedPc.getRecursiveProperty(toOne.getReferencedPropertyName()).getValue()).getPropertyIterator()[ FD ]
Line_11 $$ if (pc == null || dotPosition == -1) -->Line_44 $$ boolean hasFollowers = false[ CD ]
Line_33 $$ parentPropItr = ((Component) referencedPc.getIdentifierProperty().getValue()).getPropertyIterator()-->Line_47 $$ final Property parentProperty = (Property) parentPropItr.next()[ FD ]
Line_8 $$ List<String> propertyNames = new ArrayList<String>()-->Line_13 $$ propertyNames.add(propertyReturnSource.getName())[ FD ]
Line_88 $$ Map.Entry entry = (Map.Entry) o-->Line_91 $$ entry.setValue(list.toArray(new String[list.size()]))[ FD ]
Line_17 $$ Iterator parentPropItr-->Line_33 $$ parentPropItr = ((Component) referencedPc.getIdentifierProperty().getValue()).getPropertyIterator()[ FD ]
Line_22 $$ final ToOne toOne = (ToOne) value-->Line_23 $$ final PersistentClass referencedPc = context.getMetadataCollector().getEntityBinding(toOne.getReferencedEntityName())[ FD ]
Line_11 $$ if (pc == null || dotPosition == -1) -->Line_63 $$ propertyReturnSources.add(index, propertyReturnSource)[ CD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, NativeQueryNonScalarRootReturn rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_3 $$ if (CollectionHelper.isEmpty(rtnSource.getReturnProperty())) [ CD ]
Line_17 $$ Iterator parentPropItr-->Line_20 $$ parentPropItr = comp.getPropertyIterator()[ FD ]
Line_66 $$ Set<String> uniqueReturnProperty = new HashSet<String>()-->Line_76 $$ if (uniqueReturnProperty.contains(name)) [ FD ]
Line_11 $$ if (pc == null || dotPosition == -1) -->Line_12 $$ propertyReturnSources.add(propertyReturnSource)[ CD ]
Line_21 $$ if (value instanceof ToOne) -->Line_23 $$ final PersistentClass referencedPc = context.getMetadataCollector().getEntityBinding(toOne.getReferencedEntityName())[ CD ]
Line_11 $$ if (pc == null || dotPosition == -1) -->Line_17 $$ Iterator parentPropItr[ CD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, NativeQueryNonScalarRootReturn rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_74 $$ throw new MappingException(String.format(Locale.ENGLISH, "return-property [alias=%s, property=%s] must specify at least one column or return-column name", alias, propertyReturnBinding.getName()), context.getOrigin())[ FD ]
Line_67 $$ for (JaxbHbmNativeQueryPropertyReturnType propertyReturnBinding : propertyReturnSources) -->Line_72 $$ ArrayList allResultColumns = extractResultColumns(propertyReturnBinding)[ FD ]
Line_60 $$ index = currentIndex != -1 && currentIndex < index ? currentIndex : index-->Line_62 $$ propertyNames.add(index, propertyReturnSource.getName())[ FD ]
Line_32 $$ if (referencedPc.getIdentifierMapper() == null) -->Line_35 $$ parentPropItr = referencedPc.getIdentifierMapper().getPropertyIterator()[ CD ]
Line_26 $$ parentPropItr = ((Component) referencedPc.getRecursiveProperty(toOne.getReferencedPropertyName()).getValue()).getPropertyIterator()-->Line_47 $$ final Property parentProperty = (Property) parentPropItr.next()[ FD ]
Line_11 $$ if (pc == null || dotPosition == -1) -->Line_16 $$ final Value value = pc.getRecursiveProperty(reducedName).getValue()[ CD ]
Line_8 $$ List<String> propertyNames = new ArrayList<String>()-->Line_62 $$ propertyNames.add(index, propertyReturnSource.getName())[ FD ]
Line_72 $$ ArrayList allResultColumns = extractResultColumns(propertyReturnBinding)-->Line_73 $$ if (allResultColumns.isEmpty()) [ FD ]
Line_6 $$ final HashMap results = new HashMap()-->Line_80 $$ ArrayList intermediateResults = (ArrayList) results.get(name)[ FD ]
Line_20 $$ parentPropItr = comp.getPropertyIterator()-->Line_33 $$ parentPropItr = ((Component) referencedPc.getIdentifierProperty().getValue()).getPropertyIterator()[ FD ]
Line_89 $$ if (entry.getValue() instanceof ArrayList) -->Line_91 $$ entry.setValue(list.toArray(new String[list.size()]))[ CD ]
Line_45 $$ List<String> followers = new ArrayList<String>()-->Line_51 $$ followers.add(currentName)[ FD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, NativeQueryNonScalarRootReturn rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_16 $$ final Value value = pc.getRecursiveProperty(reducedName).getValue()[ FD ]
Line_46 $$ while (parentPropItr.hasNext()) -->Line_49 $$ final String currentName = reducedName + '.' + currentPropertyName[ CD ]
Line_9 $$ for (JaxbHbmNativeQueryPropertyReturnType propertyReturnSource : rtnSource.getReturnProperty()) -->Line_12 $$ propertyReturnSources.add(propertyReturnSource)[ FD ]
Line_46 $$ while (parentPropItr.hasNext()) -->Line_53 $$ if (propertyReturnSource.getName().equals(currentName)) [ CD ]
Line_57 $$ int index = propertyNames.size()-->Line_60 $$ index = currentIndex != -1 && currentIndex < index ? currentIndex : index[ FD ]
Line_11 $$ if (pc == null || dotPosition == -1) -->Line_13 $$ propertyNames.add(propertyReturnSource.getName())[ CD ]
Line_11 $$ if (pc == null || dotPosition == -1) -->Line_62 $$ propertyNames.add(index, propertyReturnSource.getName())[ CD ]
Line_9 $$ for (JaxbHbmNativeQueryPropertyReturnType propertyReturnSource : rtnSource.getReturnProperty()) -->Line_63 $$ propertyReturnSources.add(index, propertyReturnSource)[ FD ]
Line_16 $$ final Value value = pc.getRecursiveProperty(reducedName).getValue()-->Line_21 $$ if (value instanceof ToOne) [ FD ]
Line_72 $$ ArrayList allResultColumns = extractResultColumns(propertyReturnBinding)-->Line_82 $$ results.put(name, allResultColumns)[ FD ]
Line_20 $$ parentPropItr = comp.getPropertyIterator()-->Line_35 $$ parentPropItr = referencedPc.getIdentifierMapper().getPropertyIterator()[ FD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, NativeQueryNonScalarRootReturn rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_77 $$ throw new MappingException(String.format(Locale.ENGLISH, "Duplicate return-property [alias=%s] : %s", alias, propertyReturnBinding.getName()), context.getOrigin())[ FD ]
Line_20 $$ parentPropItr = comp.getPropertyIterator()-->Line_47 $$ final Property parentProperty = (Property) parentPropItr.next()[ FD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, NativeQueryNonScalarRootReturn rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_7 $$ List<JaxbHbmNativeQueryPropertyReturnType> propertyReturnSources = new ArrayList<JaxbHbmNativeQueryPropertyReturnType>()[ CD ]
Line_17 $$ Iterator parentPropItr-->Line_46 $$ while (parentPropItr.hasNext()) [ FD ]
Line_47 $$ final Property parentProperty = (Property) parentPropItr.next()-->Line_48 $$ final String currentPropertyName = parentProperty.getName()[ FD ]
Line_68 $$ final String name = propertyReturnBinding.getName()-->Line_82 $$ results.put(name, allResultColumns)[ FD ]
Line_35 $$ parentPropItr = referencedPc.getIdentifierMapper().getPropertyIterator()-->Line_46 $$ while (parentPropItr.hasNext()) [ FD ]
Line_6 $$ final HashMap results = new HashMap()-->Line_82 $$ results.put(name, allResultColumns)[ FD ]
Line_17 $$ Iterator parentPropItr-->Line_47 $$ final Property parentProperty = (Property) parentPropItr.next()[ FD ]
Line_21 $$ if (value instanceof ToOne) -->Line_24 $$ if (toOne.getReferencedPropertyName() != null) [ CD ]
Line_33 $$ parentPropItr = ((Component) referencedPc.getIdentifierProperty().getValue()).getPropertyIterator()-->Line_46 $$ while (parentPropItr.hasNext()) [ FD ]
Line_9 $$ for (JaxbHbmNativeQueryPropertyReturnType propertyReturnSource : rtnSource.getReturnProperty()) -->Line_62 $$ propertyNames.add(index, propertyReturnSource.getName())[ FD ]
Line_44 $$ boolean hasFollowers = false-->Line_54 $$ hasFollowers = true[ FD ]
Line_49 $$ final String currentName = reducedName + '.' + currentPropertyName-->Line_53 $$ if (propertyReturnSource.getName().equals(currentName)) [ FD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, NativeQueryNonScalarRootReturn rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_6 $$ final HashMap results = new HashMap()[ CD ]
Line_66 $$ Set<String> uniqueReturnProperty = new HashSet<String>()-->Line_79 $$ uniqueReturnProperty.add(name)[ FD ]
Line_6 $$ final HashMap results = new HashMap()-->Line_94 $$ return results.isEmpty() ? Collections.EMPTY_MAP : results[ FD ]
Line_19 $$ final Component comp = (Component) value-->Line_20 $$ parentPropItr = comp.getPropertyIterator()[ FD ]
Line_46 $$ while (parentPropItr.hasNext()) -->Line_47 $$ final Property parentProperty = (Property) parentPropItr.next()[ CD ]
Line_67 $$ for (JaxbHbmNativeQueryPropertyReturnType propertyReturnBinding : propertyReturnSources) -->Line_74 $$ throw new MappingException(String.format(Locale.ENGLISH, "return-property [alias=%s, property=%s] must specify at least one column or return-column name", alias, propertyReturnBinding.getName()), context.getOrigin())[ FD ]
Line_53 $$ if (propertyReturnSource.getName().equals(currentName)) -->Line_54 $$ hasFollowers = true[ CD ]
Line_58 $$ for (String follower : followers) -->Line_59 $$ int currentIndex = getIndexOfFirstMatchingProperty(propertyNames, follower)[ FD ]
Line_20 $$ parentPropItr = comp.getPropertyIterator()-->Line_46 $$ while (parentPropItr.hasNext()) [ FD ]
Line_7 $$ List<JaxbHbmNativeQueryPropertyReturnType> propertyReturnSources = new ArrayList<JaxbHbmNativeQueryPropertyReturnType>()-->Line_12 $$ propertyReturnSources.add(propertyReturnSource)[ FD ]
Line_11 $$ if (pc == null || dotPosition == -1) -->Line_15 $$ final String reducedName = propertyReturnSource.getName().substring(0, dotPosition)[ CD ]
Line_57 $$ int index = propertyNames.size()-->Line_63 $$ propertyReturnSources.add(index, propertyReturnSource)[ FD ]
Line_88 $$ Map.Entry entry = (Map.Entry) o-->Line_90 $$ ArrayList list = (ArrayList) entry.getValue()[ FD ]
Line_67 $$ for (JaxbHbmNativeQueryPropertyReturnType propertyReturnBinding : propertyReturnSources) -->Line_68 $$ final String name = propertyReturnBinding.getName()[ FD ]
Line_57 $$ int index = propertyNames.size()-->Line_62 $$ propertyNames.add(index, propertyReturnSource.getName())[ FD ]
Line_72 $$ ArrayList allResultColumns = extractResultColumns(propertyReturnBinding)-->Line_84 $$ intermediateResults.addAll(allResultColumns)[ FD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, NativeQueryNonScalarRootReturn rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_66 $$ Set<String> uniqueReturnProperty = new HashSet<String>()[ CD ]
Line_15 $$ final String reducedName = propertyReturnSource.getName().substring(0, dotPosition)-->Line_16 $$ final Value value = pc.getRecursiveProperty(reducedName).getValue()[ FD ]
Line_23 $$ final PersistentClass referencedPc = context.getMetadataCollector().getEntityBinding(toOne.getReferencedEntityName())-->Line_35 $$ parentPropItr = referencedPc.getIdentifierMapper().getPropertyIterator()[ FD ]
Line_11 $$ if (pc == null || dotPosition == -1) -->Line_57 $$ int index = propertyNames.size()[ CD ]
Line_35 $$ parentPropItr = referencedPc.getIdentifierMapper().getPropertyIterator()-->Line_47 $$ final Property parentProperty = (Property) parentPropItr.next()[ FD ]
Line_81 $$ if (intermediateResults == null) -->Line_84 $$ intermediateResults.addAll(allResultColumns)[ CD ]
Line_23 $$ final PersistentClass referencedPc = context.getMetadataCollector().getEntityBinding(toOne.getReferencedEntityName())-->Line_32 $$ if (referencedPc.getIdentifierMapper() == null) [ FD ]
Line_81 $$ if (intermediateResults == null) -->Line_82 $$ results.put(name, allResultColumns)[ CD ]
Line_23 $$ final PersistentClass referencedPc = context.getMetadataCollector().getEntityBinding(toOne.getReferencedEntityName())-->Line_26 $$ parentPropItr = ((Component) referencedPc.getRecursiveProperty(toOne.getReferencedPropertyName()).getValue()).getPropertyIterator()[ FD ]
Line_21 $$ if (value instanceof ToOne) -->Line_22 $$ final ToOne toOne = (ToOne) value[ CD ]
Line_80 $$ ArrayList intermediateResults = (ArrayList) results.get(name)-->Line_84 $$ intermediateResults.addAll(allResultColumns)[ FD ]
Line_7 $$ List<JaxbHbmNativeQueryPropertyReturnType> propertyReturnSources = new ArrayList<JaxbHbmNativeQueryPropertyReturnType>()-->Line_63 $$ propertyReturnSources.add(index, propertyReturnSource)[ FD ]
Line_16 $$ final Value value = pc.getRecursiveProperty(reducedName).getValue()-->Line_18 $$ if (value instanceof Component) [ FD ]
Line_68 $$ final String name = propertyReturnBinding.getName()-->Line_69 $$ if ("class".equals(name)) [ FD ]
Line_33 $$ parentPropItr = ((Component) referencedPc.getIdentifierProperty().getValue()).getPropertyIterator()-->Line_35 $$ parentPropItr = referencedPc.getIdentifierMapper().getPropertyIterator()[ FD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, NativeQueryNonScalarRootReturn rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_8 $$ List<String> propertyNames = new ArrayList<String>()[ CD ]
Line_8 $$ List<String> propertyNames = new ArrayList<String>()-->Line_59 $$ int currentIndex = getIndexOfFirstMatchingProperty(propertyNames, follower)[ FD ]
Line_18 $$ if (value instanceof Component) -->Line_20 $$ parentPropItr = comp.getPropertyIterator()[ CD ]
Line_9 $$ for (JaxbHbmNativeQueryPropertyReturnType propertyReturnSource : rtnSource.getReturnProperty()) -->Line_10 $$ final int dotPosition = propertyReturnSource.getName().lastIndexOf('.')[ FD ]
Line_67 $$ for (JaxbHbmNativeQueryPropertyReturnType propertyReturnBinding : propertyReturnSources) -->Line_77 $$ throw new MappingException(String.format(Locale.ENGLISH, "Duplicate return-property [alias=%s] : %s", alias, propertyReturnBinding.getName()), context.getOrigin())[ FD ]
Line_46 $$ while (parentPropItr.hasNext()) -->Line_48 $$ final String currentPropertyName = parentProperty.getName()[ CD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, NativeQueryNonScalarRootReturn rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_38 $$ throw new MappingException("dotted notation reference neither a component nor a many/one to one", e, context.getOrigin())[ FD ]
Line_26 $$ parentPropItr = ((Component) referencedPc.getRecursiveProperty(toOne.getReferencedPropertyName()).getValue()).getPropertyIterator()-->Line_35 $$ parentPropItr = referencedPc.getIdentifierMapper().getPropertyIterator()[ FD ]
Line_6 $$ final HashMap results = new HashMap()-->Line_87 $$ for (Object o : results.entrySet()) [ FD ]
Line_11 $$ if (pc == null || dotPosition == -1) -->Line_18 $$ if (value instanceof Component) [ CD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, NativeQueryNonScalarRootReturn rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_70 $$ throw new MappingException("class is not a valid property name to use in a <return-property>, use <return-discriminator> instead", context.getOrigin())[ FD ]
Line_9 $$ for (JaxbHbmNativeQueryPropertyReturnType propertyReturnSource : rtnSource.getReturnProperty()) -->Line_53 $$ if (propertyReturnSource.getName().equals(currentName)) [ FD ]
Line_46 $$ while (parentPropItr.hasNext()) -->Line_50 $$ if (hasFollowers) [ CD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, NativeQueryNonScalarRootReturn rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_94 $$ return results.isEmpty() ? Collections.EMPTY_MAP : results[ CD ]
Line_22 $$ final ToOne toOne = (ToOne) value-->Line_24 $$ if (toOne.getReferencedPropertyName() != null) [ FD ]
Line_11 $$ if (pc == null || dotPosition == -1) -->Line_45 $$ List<String> followers = new ArrayList<String>()[ CD ]
Line_32 $$ if (referencedPc.getIdentifierMapper() == null) -->Line_33 $$ parentPropItr = ((Component) referencedPc.getIdentifierProperty().getValue()).getPropertyIterator()[ CD ]
Line_22 $$ final ToOne toOne = (ToOne) value-->Line_26 $$ parentPropItr = ((Component) referencedPc.getRecursiveProperty(toOne.getReferencedPropertyName()).getValue()).getPropertyIterator()[ FD ]
Line_49 $$ final String currentName = reducedName + '.' + currentPropertyName-->Line_51 $$ followers.add(currentName)[ FD ]
Line_9 $$ for (JaxbHbmNativeQueryPropertyReturnType propertyReturnSource : rtnSource.getReturnProperty()) -->Line_15 $$ final String reducedName = propertyReturnSource.getName().substring(0, dotPosition)[ FD ]
Line_2 $$ private static Map<String, String[]> extractPropertyResults(String alias, NativeQueryNonScalarRootReturn rtnSource, PersistentClass pc, HbmLocalMetadataBuildingContext context) -->Line_9 $$ for (JaxbHbmNativeQueryPropertyReturnType propertyReturnSource : rtnSource.getReturnProperty()) [ FD ]
Line_17 $$ Iterator parentPropItr-->Line_35 $$ parentPropItr = referencedPc.getIdentifierMapper().getPropertyIterator()[ FD ]
Line_10 $$ final int dotPosition = propertyReturnSource.getName().lastIndexOf('.')-->Line_15 $$ final String reducedName = propertyReturnSource.getName().substring(0, dotPosition)[ FD ]
Line_68 $$ final String name = propertyReturnBinding.getName()-->Line_76 $$ if (uniqueReturnProperty.contains(name)) [ FD ]
