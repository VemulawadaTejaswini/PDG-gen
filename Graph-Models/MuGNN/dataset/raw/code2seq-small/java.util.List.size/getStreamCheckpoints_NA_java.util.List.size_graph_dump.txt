Line_13 $$ Set<StreamKind> availableStreams = streamKinds.get(column)-->Line_35 $$ checkpoints.putAll(getTimestampColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_13 $$ Set<StreamKind> availableStreams = streamKinds.get(column)-->Line_17 $$ checkpoints.putAll(getBooleanColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_14 $$ ColumnPositionsList columnPositionsList = new ColumnPositionsList(column, columnType, positionsList)-->Line_35 $$ checkpoints.putAll(getTimestampColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_2 $$ public static Map<StreamId, StreamCheckpoint> getStreamCheckpoints(Set<Integer> columns, List<OrcType> columnTypes, CompressionKind compressionKind, int rowGroupId, List<ColumnEncoding> columnEncodings, Map<StreamId, Stream> streams, Map<Integer, List<RowGroupIndex>> columnIndexes) throws InvalidCheckpointException -->Line_29 $$ checkpoints.putAll(getFloatColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_13 $$ Set<StreamKind> availableStreams = streamKinds.get(column)-->Line_20 $$ checkpoints.putAll(getByteColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_2 $$ public static Map<StreamId, StreamCheckpoint> getStreamCheckpoints(Set<Integer> columns, List<OrcType> columnTypes, CompressionKind compressionKind, int rowGroupId, List<ColumnEncoding> columnEncodings, Map<StreamId, Stream> streams, Map<Integer, List<RowGroupIndex>> columnIndexes) throws InvalidCheckpointException -->Line_39 $$ checkpoints.putAll(getSliceColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_13 $$ Set<StreamKind> availableStreams = streamKinds.get(column)-->Line_43 $$ checkpoints.putAll(getListOrMapColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_2 $$ public static Map<StreamId, StreamCheckpoint> getStreamCheckpoints(Set<Integer> columns, List<OrcType> columnTypes, CompressionKind compressionKind, int rowGroupId, List<ColumnEncoding> columnEncodings, Map<StreamId, Stream> streams, Map<Integer, List<RowGroupIndex>> columnIndexes) throws InvalidCheckpointException -->Line_58 $$ return checkpoints.build()[ CD ]
Line_10 $$ List<Integer> positionsList = columnIndexes.get(column).get(rowGroupId).getPositions()-->Line_55 $$ throw new InvalidCheckpointException(format("Column %s, of type %s, contains %s offset positions, but only %s positions were consumed", column, columnType, positionsList.size(), columnPositionsList.getIndex()))[ FD ]
Line_2 $$ public static Map<StreamId, StreamCheckpoint> getStreamCheckpoints(Set<Integer> columns, List<OrcType> columnTypes, CompressionKind compressionKind, int rowGroupId, List<ColumnEncoding> columnEncodings, Map<StreamId, Stream> streams, Map<Integer, List<RowGroupIndex>> columnIndexes) throws InvalidCheckpointException -->Line_8 $$ ImmutableMap.Builder<StreamId, StreamCheckpoint> checkpoints = ImmutableMap.builder()[ CD ]
Line_9 $$ for (int column : columns) -->Line_11 $$ ColumnEncodingKind columnEncoding = columnEncodings.get(column).getColumnEncodingKind()[ FD ]
Line_2 $$ public static Map<StreamId, StreamCheckpoint> getStreamCheckpoints(Set<Integer> columns, List<OrcType> columnTypes, CompressionKind compressionKind, int rowGroupId, List<ColumnEncoding> columnEncodings, Map<StreamId, Stream> streams, Map<Integer, List<RowGroupIndex>> columnIndexes) throws InvalidCheckpointException -->Line_20 $$ checkpoints.putAll(getByteColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_11 $$ ColumnEncodingKind columnEncoding = columnEncodings.get(column).getColumnEncodingKind()-->Line_26 $$ checkpoints.putAll(getLongColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_8 $$ ImmutableMap.Builder<StreamId, StreamCheckpoint> checkpoints = ImmutableMap.builder()-->Line_39 $$ checkpoints.putAll(getSliceColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_9 $$ for (int column : columns) -->Line_46 $$ checkpoints.putAll(getStructColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_8 $$ ImmutableMap.Builder<StreamId, StreamCheckpoint> checkpoints = ImmutableMap.builder()-->Line_32 $$ checkpoints.putAll(getDoubleColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_14 $$ ColumnPositionsList columnPositionsList = new ColumnPositionsList(column, columnType, positionsList)-->Line_20 $$ checkpoints.putAll(getByteColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_8 $$ ImmutableMap.Builder<StreamId, StreamCheckpoint> checkpoints = ImmutableMap.builder()-->Line_58 $$ return checkpoints.build()[ FD ]
Line_13 $$ Set<StreamKind> availableStreams = streamKinds.get(column)-->Line_39 $$ checkpoints.putAll(getSliceColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_9 $$ for (int column : columns) -->Line_55 $$ throw new InvalidCheckpointException(format("Column %s, of type %s, contains %s offset positions, but only %s positions were consumed", column, columnType, positionsList.size(), columnPositionsList.getIndex()))[ FD ]
Line_2 $$ public static Map<StreamId, StreamCheckpoint> getStreamCheckpoints(Set<Integer> columns, List<OrcType> columnTypes, CompressionKind compressionKind, int rowGroupId, List<ColumnEncoding> columnEncodings, Map<StreamId, Stream> streams, Map<Integer, List<RowGroupIndex>> columnIndexes) throws InvalidCheckpointException -->Line_4 $$ for (Stream stream : streams.values()) [ FD ]
Line_8 $$ ImmutableMap.Builder<StreamId, StreamCheckpoint> checkpoints = ImmutableMap.builder()-->Line_29 $$ checkpoints.putAll(getFloatColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_11 $$ ColumnEncodingKind columnEncoding = columnEncodings.get(column).getColumnEncodingKind()-->Line_35 $$ checkpoints.putAll(getTimestampColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_13 $$ Set<StreamKind> availableStreams = streamKinds.get(column)-->Line_46 $$ checkpoints.putAll(getStructColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_9 $$ for (int column : columns) -->Line_39 $$ checkpoints.putAll(getSliceColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_12 $$ OrcTypeKind columnType = columnTypes.get(column).getOrcTypeKind()-->Line_55 $$ throw new InvalidCheckpointException(format("Column %s, of type %s, contains %s offset positions, but only %s positions were consumed", column, columnType, positionsList.size(), columnPositionsList.getIndex()))[ FD ]
Line_9 $$ for (int column : columns) -->Line_13 $$ Set<StreamKind> availableStreams = streamKinds.get(column)[ FD ]
Line_13 $$ Set<StreamKind> availableStreams = streamKinds.get(column)-->Line_29 $$ checkpoints.putAll(getFloatColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_14 $$ ColumnPositionsList columnPositionsList = new ColumnPositionsList(column, columnType, positionsList)-->Line_29 $$ checkpoints.putAll(getFloatColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_2 $$ public static Map<StreamId, StreamCheckpoint> getStreamCheckpoints(Set<Integer> columns, List<OrcType> columnTypes, CompressionKind compressionKind, int rowGroupId, List<ColumnEncoding> columnEncodings, Map<StreamId, Stream> streams, Map<Integer, List<RowGroupIndex>> columnIndexes) throws InvalidCheckpointException -->Line_32 $$ checkpoints.putAll(getDoubleColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_9 $$ for (int column : columns) -->Line_10 $$ List<Integer> positionsList = columnIndexes.get(column).get(rowGroupId).getPositions()[ FD ]
Line_13 $$ Set<StreamKind> availableStreams = streamKinds.get(column)-->Line_32 $$ checkpoints.putAll(getDoubleColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_4 $$ for (Stream stream : streams.values()) -->Line_5 $$ streamKindsBuilder.put(stream.getColumn(), stream.getStreamKind())[ FD ]
Line_14 $$ ColumnPositionsList columnPositionsList = new ColumnPositionsList(column, columnType, positionsList)-->Line_46 $$ checkpoints.putAll(getStructColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_14 $$ ColumnPositionsList columnPositionsList = new ColumnPositionsList(column, columnType, positionsList)-->Line_32 $$ checkpoints.putAll(getDoubleColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_2 $$ public static Map<StreamId, StreamCheckpoint> getStreamCheckpoints(Set<Integer> columns, List<OrcType> columnTypes, CompressionKind compressionKind, int rowGroupId, List<ColumnEncoding> columnEncodings, Map<StreamId, Stream> streams, Map<Integer, List<RowGroupIndex>> columnIndexes) throws InvalidCheckpointException -->Line_35 $$ checkpoints.putAll(getTimestampColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_9 $$ for (int column : columns) -->Line_12 $$ OrcTypeKind columnType = columnTypes.get(column).getOrcTypeKind()[ FD ]
Line_11 $$ ColumnEncodingKind columnEncoding = columnEncodings.get(column).getColumnEncodingKind()-->Line_43 $$ checkpoints.putAll(getListOrMapColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_2 $$ public static Map<StreamId, StreamCheckpoint> getStreamCheckpoints(Set<Integer> columns, List<OrcType> columnTypes, CompressionKind compressionKind, int rowGroupId, List<ColumnEncoding> columnEncodings, Map<StreamId, Stream> streams, Map<Integer, List<RowGroupIndex>> columnIndexes) throws InvalidCheckpointException -->Line_7 $$ SetMultimap<Integer, StreamKind> streamKinds = streamKindsBuilder.build()[ CD ]
Line_14 $$ ColumnPositionsList columnPositionsList = new ColumnPositionsList(column, columnType, positionsList)-->Line_39 $$ checkpoints.putAll(getSliceColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_14 $$ ColumnPositionsList columnPositionsList = new ColumnPositionsList(column, columnType, positionsList)-->Line_26 $$ checkpoints.putAll(getLongColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_8 $$ ImmutableMap.Builder<StreamId, StreamCheckpoint> checkpoints = ImmutableMap.builder()-->Line_26 $$ checkpoints.putAll(getLongColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_2 $$ public static Map<StreamId, StreamCheckpoint> getStreamCheckpoints(Set<Integer> columns, List<OrcType> columnTypes, CompressionKind compressionKind, int rowGroupId, List<ColumnEncoding> columnEncodings, Map<StreamId, Stream> streams, Map<Integer, List<RowGroupIndex>> columnIndexes) throws InvalidCheckpointException -->Line_11 $$ ColumnEncodingKind columnEncoding = columnEncodings.get(column).getColumnEncodingKind()[ FD ]
Line_9 $$ for (int column : columns) -->Line_32 $$ checkpoints.putAll(getDoubleColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_2 $$ public static Map<StreamId, StreamCheckpoint> getStreamCheckpoints(Set<Integer> columns, List<OrcType> columnTypes, CompressionKind compressionKind, int rowGroupId, List<ColumnEncoding> columnEncodings, Map<StreamId, Stream> streams, Map<Integer, List<RowGroupIndex>> columnIndexes) throws InvalidCheckpointException -->Line_46 $$ checkpoints.putAll(getStructColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_2 $$ public static Map<StreamId, StreamCheckpoint> getStreamCheckpoints(Set<Integer> columns, List<OrcType> columnTypes, CompressionKind compressionKind, int rowGroupId, List<ColumnEncoding> columnEncodings, Map<StreamId, Stream> streams, Map<Integer, List<RowGroupIndex>> columnIndexes) throws InvalidCheckpointException -->Line_17 $$ checkpoints.putAll(getBooleanColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_14 $$ ColumnPositionsList columnPositionsList = new ColumnPositionsList(column, columnType, positionsList)-->Line_17 $$ checkpoints.putAll(getBooleanColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_9 $$ for (int column : columns) -->Line_26 $$ checkpoints.putAll(getLongColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_3 $$ ImmutableSetMultimap.Builder<Integer, StreamKind> streamKindsBuilder = ImmutableSetMultimap.builder()-->Line_7 $$ SetMultimap<Integer, StreamKind> streamKinds = streamKindsBuilder.build()[ FD ]
Line_8 $$ ImmutableMap.Builder<StreamId, StreamCheckpoint> checkpoints = ImmutableMap.builder()-->Line_20 $$ checkpoints.putAll(getByteColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_9 $$ for (int column : columns) -->Line_17 $$ checkpoints.putAll(getBooleanColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_14 $$ ColumnPositionsList columnPositionsList = new ColumnPositionsList(column, columnType, positionsList)-->Line_55 $$ throw new InvalidCheckpointException(format("Column %s, of type %s, contains %s offset positions, but only %s positions were consumed", column, columnType, positionsList.size(), columnPositionsList.getIndex()))[ FD ]
Line_8 $$ ImmutableMap.Builder<StreamId, StreamCheckpoint> checkpoints = ImmutableMap.builder()-->Line_43 $$ checkpoints.putAll(getListOrMapColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_2 $$ public static Map<StreamId, StreamCheckpoint> getStreamCheckpoints(Set<Integer> columns, List<OrcType> columnTypes, CompressionKind compressionKind, int rowGroupId, List<ColumnEncoding> columnEncodings, Map<StreamId, Stream> streams, Map<Integer, List<RowGroupIndex>> columnIndexes) throws InvalidCheckpointException -->Line_3 $$ ImmutableSetMultimap.Builder<Integer, StreamKind> streamKindsBuilder = ImmutableSetMultimap.builder()[ CD ]
Line_2 $$ public static Map<StreamId, StreamCheckpoint> getStreamCheckpoints(Set<Integer> columns, List<OrcType> columnTypes, CompressionKind compressionKind, int rowGroupId, List<ColumnEncoding> columnEncodings, Map<StreamId, Stream> streams, Map<Integer, List<RowGroupIndex>> columnIndexes) throws InvalidCheckpointException -->Line_43 $$ checkpoints.putAll(getListOrMapColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_2 $$ public static Map<StreamId, StreamCheckpoint> getStreamCheckpoints(Set<Integer> columns, List<OrcType> columnTypes, CompressionKind compressionKind, int rowGroupId, List<ColumnEncoding> columnEncodings, Map<StreamId, Stream> streams, Map<Integer, List<RowGroupIndex>> columnIndexes) throws InvalidCheckpointException -->Line_12 $$ OrcTypeKind columnType = columnTypes.get(column).getOrcTypeKind()[ FD ]
Line_9 $$ for (int column : columns) -->Line_29 $$ checkpoints.putAll(getFloatColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_14 $$ ColumnPositionsList columnPositionsList = new ColumnPositionsList(column, columnType, positionsList)-->Line_54 $$ if (columnPositionsList.hasNextPosition() && !Iterables.all(positionsList, equalTo(0))) [ FD ]
Line_2 $$ public static Map<StreamId, StreamCheckpoint> getStreamCheckpoints(Set<Integer> columns, List<OrcType> columnTypes, CompressionKind compressionKind, int rowGroupId, List<ColumnEncoding> columnEncodings, Map<StreamId, Stream> streams, Map<Integer, List<RowGroupIndex>> columnIndexes) throws InvalidCheckpointException -->Line_26 $$ checkpoints.putAll(getLongColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_13 $$ Set<StreamKind> availableStreams = streamKinds.get(column)-->Line_26 $$ checkpoints.putAll(getLongColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_9 $$ for (int column : columns) -->Line_43 $$ checkpoints.putAll(getListOrMapColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_8 $$ ImmutableMap.Builder<StreamId, StreamCheckpoint> checkpoints = ImmutableMap.builder()-->Line_35 $$ checkpoints.putAll(getTimestampColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_14 $$ ColumnPositionsList columnPositionsList = new ColumnPositionsList(column, columnType, positionsList)-->Line_43 $$ checkpoints.putAll(getListOrMapColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_8 $$ ImmutableMap.Builder<StreamId, StreamCheckpoint> checkpoints = ImmutableMap.builder()-->Line_46 $$ checkpoints.putAll(getStructColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_3 $$ ImmutableSetMultimap.Builder<Integer, StreamKind> streamKindsBuilder = ImmutableSetMultimap.builder()-->Line_5 $$ streamKindsBuilder.put(stream.getColumn(), stream.getStreamKind())[ FD ]
Line_10 $$ List<Integer> positionsList = columnIndexes.get(column).get(rowGroupId).getPositions()-->Line_54 $$ if (columnPositionsList.hasNextPosition() && !Iterables.all(positionsList, equalTo(0))) [ FD ]
Line_7 $$ SetMultimap<Integer, StreamKind> streamKinds = streamKindsBuilder.build()-->Line_13 $$ Set<StreamKind> availableStreams = streamKinds.get(column)[ FD ]
Line_9 $$ for (int column : columns) -->Line_35 $$ checkpoints.putAll(getTimestampColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_11 $$ ColumnEncodingKind columnEncoding = columnEncodings.get(column).getColumnEncodingKind()-->Line_39 $$ checkpoints.putAll(getSliceColumnCheckpoints(column, columnEncoding, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_9 $$ for (int column : columns) -->Line_20 $$ checkpoints.putAll(getByteColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
Line_2 $$ public static Map<StreamId, StreamCheckpoint> getStreamCheckpoints(Set<Integer> columns, List<OrcType> columnTypes, CompressionKind compressionKind, int rowGroupId, List<ColumnEncoding> columnEncodings, Map<StreamId, Stream> streams, Map<Integer, List<RowGroupIndex>> columnIndexes) throws InvalidCheckpointException -->Line_10 $$ List<Integer> positionsList = columnIndexes.get(column).get(rowGroupId).getPositions()[ FD ]
Line_8 $$ ImmutableMap.Builder<StreamId, StreamCheckpoint> checkpoints = ImmutableMap.builder()-->Line_17 $$ checkpoints.putAll(getBooleanColumnCheckpoints(column, compressionKind, availableStreams, columnPositionsList))[ FD ]
