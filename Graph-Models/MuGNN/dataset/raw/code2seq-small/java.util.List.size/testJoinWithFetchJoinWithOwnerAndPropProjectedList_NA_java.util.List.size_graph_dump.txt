Line_18 $$ if (areDynamicNonLazyAssociationsChecked()) -->Line_19 $$ assertTrue(Hibernate.isInitialized(((Student) yogiObjects[0]).getEnrolments()))[ CD ]
Line_8 $$ ResultChecker checker = new ResultChecker() -->Line_14 $$ assertEquals(yogiExpected.getName(), yogiObjects[1])[ CD ]
Line_3 $$ HqlExecutor hqlSelectNewMapExecutor = new HqlExecutor() -->Line_5 $$ return s.createQuery("select s, s.name from Student s left join fetch s.enrolments left join s.preferredCourse order by s.studentNumber")[ CD ]
Line_8 $$ ResultChecker checker = new ResultChecker() -->Line_15 $$ Object[] shermanObjects = (Object[]) resultList.get(1)[ CD ]
Line_18 $$ if (areDynamicNonLazyAssociationsChecked()) -->Line_20 $$ assertEquals(yogiExpected.getEnrolments(), ((Student) yogiObjects[0]).getEnrolments())[ CD ]
Line_8 $$ ResultChecker checker = new ResultChecker() -->Line_10 $$ List resultList = (List) results[ CD ]
Line_18 $$ if (areDynamicNonLazyAssociationsChecked()) -->Line_21 $$ assertTrue(Hibernate.isInitialized(((Student) shermanObjects[0]).getEnrolments()))[ CD ]
Line_8 $$ ResultChecker checker = new ResultChecker() -->Line_18 $$ if (areDynamicNonLazyAssociationsChecked()) [ CD ]
Line_3 $$ HqlExecutor hqlSelectNewMapExecutor = new HqlExecutor() -->Line_26 $$ runTest(hqlSelectNewMapExecutor, null, checker, false)[ FD ]
Line_8 $$ ResultChecker checker = new ResultChecker() -->Line_17 $$ assertEquals(shermanExpected.getName(), shermanObjects[1])[ CD ]
Line_8 $$ ResultChecker checker = new ResultChecker() -->Line_13 $$ assertEquals(yogiExpected, yogiObjects[0])[ CD ]
Line_3 $$ HqlExecutor hqlSelectNewMapExecutor = new HqlExecutor() -->Line_5 $$ return s.createQuery("select s, s.name from Student s left join fetch s.enrolments left join s.preferredCourse order by s.studentNumber")[ FD ]
Line_8 $$ ResultChecker checker = new ResultChecker() -->Line_16 $$ assertEquals(shermanExpected, shermanObjects[0])[ CD ]
Line_2 $$ public void testJoinWithFetchJoinWithOwnerAndPropProjectedList() throws Exception -->Line_3 $$ HqlExecutor hqlSelectNewMapExecutor = new HqlExecutor() [ CD ]
Line_10 $$ List resultList = (List) results-->Line_11 $$ assertEquals(2, resultList.size())[ FD ]
Line_8 $$ ResultChecker checker = new ResultChecker() -->Line_12 $$ Object[] yogiObjects = (Object[]) resultList.get(0)[ CD ]
Line_18 $$ if (areDynamicNonLazyAssociationsChecked()) -->Line_22 $$ assertEquals(shermanExpected.getEnrolments(), (((Student) shermanObjects[0]).getEnrolments()))[ CD ]
Line_8 $$ ResultChecker checker = new ResultChecker() -->Line_11 $$ assertEquals(2, resultList.size())[ CD ]
Line_10 $$ List resultList = (List) results-->Line_12 $$ Object[] yogiObjects = (Object[]) resultList.get(0)[ FD ]
Line_2 $$ public void testJoinWithFetchJoinWithOwnerAndPropProjectedList() throws Exception -->Line_26 $$ runTest(hqlSelectNewMapExecutor, null, checker, false)[ CD ]
Line_10 $$ List resultList = (List) results-->Line_15 $$ Object[] shermanObjects = (Object[]) resultList.get(1)[ FD ]
