Line_36 $$ if (right != null) -->Line_38 $$ if (right.entries.size() > minIndexChildNodes) [ CD ]
Line_20 $$ if (left.entries.size() > minIndexChildNodes) -->Line_31 $$ return[ CD ]
Line_38 $$ if (right.entries.size() > minIndexChildNodes) -->Line_49 $$ return[ CD ]
Line_20 $$ if (left.entries.size() > minIndexChildNodes) -->Line_24 $$ left.maybeSplit()[ CD ]
Line_38 $$ if (right.entries.size() > minIndexChildNodes) -->Line_48 $$ parent.maybeMerge()[ CD ]
Line_38 $$ if (right.entries.size() > minIndexChildNodes) -->Line_43 $$ return[ CD ]
Line_20 $$ if (left.entries.size() > minIndexChildNodes) -->Line_25 $$ return[ CD ]
Line_2 $$ private void maybeMerge() throws Exception -->Line_3 $$ if (parent == null) [ CD ]
Line_2 $$ private void maybeMerge() throws Exception -->Line_18 $$ if (left != null) [ CD ]
Line_20 $$ if (left.entries.size() > minIndexChildNodes) -->Line_30 $$ parent.maybeMerge()[ CD ]
Line_18 $$ if (left != null) -->Line_20 $$ if (left.entries.size() > minIndexChildNodes) [ CD ]
Line_38 $$ if (right.entries.size() > minIndexChildNodes) -->Line_42 $$ maybeSplit()[ CD ]
Line_3 $$ if (parent == null) -->Line_10 $$ return[ CD ]
Line_2 $$ private void maybeMerge() throws Exception -->Line_36 $$ if (right != null) [ CD ]
