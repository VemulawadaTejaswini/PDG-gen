Line_29 $$ if (right.entries.size() > minIndexChildNodes) -->Line_34 $$ mergeFrom(right)[ CD ]
Line_13 $$ IndexBlock left = parent.getPrevious(this)-->Line_18 $$ left.maybeSplit()[ FD ]
Line_29 $$ if (right.entries.size() > minIndexChildNodes) -->Line_31 $$ maybeSplit()[ CD ]
Line_16 $$ if (left.entries.size() > minIndexChildNodes) -->Line_21 $$ left.mergeFrom(this)[ CD ]
Line_3 $$ if (parent == null) -->Line_8 $$ return[ CD ]
Line_2 $$ private void maybeMerge() throws Exception -->Line_27 $$ if (right != null) [ CD ]
Line_27 $$ if (right != null) -->Line_29 $$ if (right.entries.size() > minIndexChildNodes) [ CD ]
Line_29 $$ if (right.entries.size() > minIndexChildNodes) -->Line_35 $$ parent.maybeMerge()[ CD ]
Line_3 $$ if (parent == null) -->Line_4 $$ if (entries.size() == 0 && !tailPos.isNull()) [ CD ]
Line_4 $$ if (entries.size() == 0 && !tailPos.isNull()) -->Line_5 $$ header.index.setRootPos(tailPos)[ CD ]
Line_26 $$ IndexBlock right = parent.getNext(this)-->Line_30 $$ mergeFrom(right)[ FD ]
Line_16 $$ if (left.entries.size() > minIndexChildNodes) -->Line_22 $$ parent.maybeMerge()[ CD ]
Line_4 $$ if (entries.size() == 0 && !tailPos.isNull()) -->Line_6 $$ store.remove(this)[ CD ]
Line_26 $$ IndexBlock right = parent.getNext(this)-->Line_34 $$ mergeFrom(right)[ FD ]
Line_2 $$ private void maybeMerge() throws Exception -->Line_13 $$ IndexBlock left = parent.getPrevious(this)[ CD ]
Line_2 $$ private void maybeMerge() throws Exception -->Line_10 $$ if (entries.size() >= minIndexChildNodes) [ CD ]
Line_16 $$ if (left.entries.size() > minIndexChildNodes) -->Line_19 $$ return[ CD ]
Line_2 $$ private void maybeMerge() throws Exception -->Line_14 $$ if (left != null) [ CD ]
Line_13 $$ IndexBlock left = parent.getPrevious(this)-->Line_21 $$ left.mergeFrom(this)[ FD ]
Line_14 $$ if (left != null) -->Line_16 $$ if (left.entries.size() > minIndexChildNodes) [ CD ]
Line_10 $$ if (entries.size() >= minIndexChildNodes) -->Line_11 $$ return[ CD ]
Line_29 $$ if (right.entries.size() > minIndexChildNodes) -->Line_30 $$ mergeFrom(right)[ CD ]
Line_16 $$ if (left.entries.size() > minIndexChildNodes) -->Line_18 $$ left.maybeSplit()[ CD ]
Line_26 $$ IndexBlock right = parent.getNext(this)-->Line_27 $$ if (right != null) [ FD ]
Line_29 $$ if (right.entries.size() > minIndexChildNodes) -->Line_32 $$ return[ CD ]
Line_2 $$ private void maybeMerge() throws Exception -->Line_26 $$ IndexBlock right = parent.getNext(this)[ CD ]
Line_16 $$ if (left.entries.size() > minIndexChildNodes) -->Line_23 $$ return[ CD ]
Line_13 $$ IndexBlock left = parent.getPrevious(this)-->Line_14 $$ if (left != null) [ FD ]
Line_2 $$ private void maybeMerge() throws Exception -->Line_3 $$ if (parent == null) [ CD ]
Line_16 $$ if (left.entries.size() > minIndexChildNodes) -->Line_17 $$ left.mergeFrom(this)[ CD ]
Line_13 $$ IndexBlock left = parent.getPrevious(this)-->Line_17 $$ left.mergeFrom(this)[ FD ]
Line_29 $$ if (right.entries.size() > minIndexChildNodes) -->Line_36 $$ return[ CD ]
