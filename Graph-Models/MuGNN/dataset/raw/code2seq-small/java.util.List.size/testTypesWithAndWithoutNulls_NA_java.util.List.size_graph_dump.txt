Line_14 $$ insertDML += ", " + typeDef.columnName-->Line_29 $$ execute(insertDML.replace('1', '2'), values.toArray())[ FD ]
Line_9 $$ String createTableDDL = "CREATE TABLE %s (key int PRIMARY KEY"-->Line_13 $$ createTableDDL += ", " + typeDef.columnName + ' ' + typeDef.tableType[ FD ]
Line_23 $$ insertDML += ") VALUES (1"-->Line_29 $$ execute(insertDML.replace('1', '2'), values.toArray())[ FD ]
Line_14 $$ insertDML += ", " + typeDef.columnName-->Line_26 $$ execute(insertDML, values.toArray())[ FD ]
Line_24 $$ insertDML += ", ?"-->Line_26 $$ execute(insertDML, values.toArray())[ FD ]
Line_25 $$ insertDML += ')'-->Line_29 $$ execute(insertDML.replace('1', '2'), values.toArray())[ FD ]
Line_15 $$ String typeName = typeDef.udfType-->Line_16 $$ typeDef.fCheckArgAndReturn = createFunction(KEYSPACE, typeName, "CREATE OR REPLACE FUNCTION %s(val " + typeName + ") " + "CALLED ON NULL INPUT " + "RETURNS " + typeName + ' ' + "LANGUAGE java\n" + "AS 'return val;';")[ FD ]
Line_10 $$ String insertDML = "INSERT INTO %s (key"-->Line_23 $$ insertDML += ") VALUES (1"[ FD ]
Line_23 $$ insertDML += ") VALUES (1"-->Line_26 $$ execute(insertDML, values.toArray())[ FD ]
Line_11 $$ List<Object> values = new ArrayList()-->Line_29 $$ execute(insertDML.replace('1', '2'), values.toArray())[ FD ]
Line_11 $$ List<Object> values = new ArrayList()-->Line_26 $$ execute(insertDML, values.toArray())[ FD ]
Line_13 $$ createTableDDL += ", " + typeDef.columnName + ' ' + typeDef.tableType-->Line_21 $$ createTableDDL += ')'[ FD ]
Line_9 $$ String createTableDDL = "CREATE TABLE %s (key int PRIMARY KEY"-->Line_22 $$ createTable(createTableDDL)[ FD ]
Line_25 $$ insertDML += ')'-->Line_26 $$ execute(insertDML, values.toArray())[ FD ]
Line_23 $$ insertDML += ") VALUES (1"-->Line_25 $$ insertDML += ')'[ FD ]
Line_10 $$ String insertDML = "INSERT INTO %s (key"-->Line_26 $$ execute(insertDML, values.toArray())[ FD ]
Line_21 $$ createTableDDL += ')'-->Line_22 $$ createTable(createTableDDL)[ FD ]
Line_24 $$ insertDML += ", ?"-->Line_29 $$ execute(insertDML.replace('1', '2'), values.toArray())[ FD ]
Line_24 $$ insertDML += ", ?"-->Line_25 $$ insertDML += ')'[ FD ]
Line_11 $$ List<Object> values = new ArrayList()-->Line_19 $$ values.add(typeDef.referenceValue)[ FD ]
Line_15 $$ String typeName = typeDef.udfType-->Line_17 $$ typeDef.fCalledOnNull = createFunction(KEYSPACE, typeName, "CREATE OR REPLACE FUNCTION %s(val " + typeName + ") " + "CALLED ON NULL INPUT " + "RETURNS text " + "LANGUAGE java\n" + "AS 'return \"called\";';")[ FD ]
Line_11 $$ List<Object> values = new ArrayList()-->Line_28 $$ values.set(i, null)[ FD ]
Line_13 $$ createTableDDL += ", " + typeDef.columnName + ' ' + typeDef.tableType-->Line_22 $$ createTable(createTableDDL)[ FD ]
Line_10 $$ String insertDML = "INSERT INTO %s (key"-->Line_25 $$ insertDML += ')'[ FD ]
Line_14 $$ insertDML += ", " + typeDef.columnName-->Line_24 $$ insertDML += ", ?"[ FD ]
Line_9 $$ String createTableDDL = "CREATE TABLE %s (key int PRIMARY KEY"-->Line_21 $$ createTableDDL += ')'[ FD ]
Line_10 $$ String insertDML = "INSERT INTO %s (key"-->Line_24 $$ insertDML += ", ?"[ FD ]
Line_23 $$ insertDML += ") VALUES (1"-->Line_24 $$ insertDML += ", ?"[ FD ]
Line_14 $$ insertDML += ", " + typeDef.columnName-->Line_23 $$ insertDML += ") VALUES (1"[ FD ]
Line_14 $$ insertDML += ", " + typeDef.columnName-->Line_25 $$ insertDML += ')'[ FD ]
Line_15 $$ String typeName = typeDef.udfType-->Line_18 $$ typeDef.fReturnsNullOnNull = createFunction(KEYSPACE, typeName, "CREATE OR REPLACE FUNCTION %s(val " + typeName + ") " + "RETURNS NULL ON NULL INPUT " + "RETURNS text " + "LANGUAGE java\n" + "AS 'return \"called\";';")[ FD ]
Line_10 $$ String insertDML = "INSERT INTO %s (key"-->Line_29 $$ execute(insertDML.replace('1', '2'), values.toArray())[ FD ]
Line_10 $$ String insertDML = "INSERT INTO %s (key"-->Line_14 $$ insertDML += ", " + typeDef.columnName[ FD ]
