Line_2 $$ public static BekIntMap createBekMap(@NotNull LinearGraph permanentGraph, @NotNull GraphLayoutImpl graphLayout, @NotNull TimestampGetter timestampGetter) -->Line_6 $$ return createBekIntMap(result)[ CD ]
Line_4 $$ List<Integer> result = bekSorter.getResult()-->Line_5 $$ assert result.size() == permanentGraph.nodesCount()[ FD ]
Line_2 $$ public static BekIntMap createBekMap(@NotNull LinearGraph permanentGraph, @NotNull GraphLayoutImpl graphLayout, @NotNull TimestampGetter timestampGetter) -->Line_5 $$ assert result.size() == permanentGraph.nodesCount()[ FD ]
Line_3 $$ BekSorter bekSorter = new BekSorter(permanentGraph, graphLayout, timestampGetter)-->Line_4 $$ List<Integer> result = bekSorter.getResult()[ FD ]
Line_2 $$ public static BekIntMap createBekMap(@NotNull LinearGraph permanentGraph, @NotNull GraphLayoutImpl graphLayout, @NotNull TimestampGetter timestampGetter) -->Line_4 $$ List<Integer> result = bekSorter.getResult()[ CD ]
Line_2 $$ public static BekIntMap createBekMap(@NotNull LinearGraph permanentGraph, @NotNull GraphLayoutImpl graphLayout, @NotNull TimestampGetter timestampGetter) -->Line_3 $$ BekSorter bekSorter = new BekSorter(permanentGraph, graphLayout, timestampGetter)[ CD ]
Line_4 $$ List<Integer> result = bekSorter.getResult()-->Line_6 $$ return createBekIntMap(result)[ FD ]
