Line_2 $$ protected Session getCachedSessionProxy(Session target, LinkedList<Session> sessionList) -->Line_5 $$ if (target instanceof QueueSession) [ CD ]
Line_3 $$ List<Class<?>> classes = new ArrayList<Class<?>>(3)-->Line_4 $$ classes.add(SessionProxy.class)[ FD ]
Line_2 $$ protected Session getCachedSessionProxy(Session target, LinkedList<Session> sessionList) -->Line_8 $$ if (target instanceof TopicSession) [ CD ]
Line_2 $$ protected Session getCachedSessionProxy(Session target, LinkedList<Session> sessionList) -->Line_3 $$ List<Class<?>> classes = new ArrayList<Class<?>>(3)[ CD ]
Line_8 $$ if (target instanceof TopicSession) -->Line_9 $$ classes.add(TopicSession.class)[ CD ]
Line_3 $$ List<Class<?>> classes = new ArrayList<Class<?>>(3)-->Line_9 $$ classes.add(TopicSession.class)[ FD ]
Line_3 $$ List<Class<?>> classes = new ArrayList<Class<?>>(3)-->Line_11 $$ return (Session) Proxy.newProxyInstance(SessionProxy.class.getClassLoader(), classes.toArray(new Class<?>[classes.size()]), new CachedSessionInvocationHandler(target, sessionList))[ FD ]
Line_2 $$ protected Session getCachedSessionProxy(Session target, LinkedList<Session> sessionList) -->Line_11 $$ return (Session) Proxy.newProxyInstance(SessionProxy.class.getClassLoader(), classes.toArray(new Class<?>[classes.size()]), new CachedSessionInvocationHandler(target, sessionList))[ CD ]
Line_2 $$ protected Session getCachedSessionProxy(Session target, LinkedList<Session> sessionList) -->Line_8 $$ if (target instanceof TopicSession) [ FD ]
Line_5 $$ if (target instanceof QueueSession) -->Line_6 $$ classes.add(QueueSession.class)[ CD ]
Line_2 $$ protected Session getCachedSessionProxy(Session target, LinkedList<Session> sessionList) -->Line_5 $$ if (target instanceof QueueSession) [ FD ]
Line_3 $$ List<Class<?>> classes = new ArrayList<Class<?>>(3)-->Line_6 $$ classes.add(QueueSession.class)[ FD ]
Line_2 $$ protected Session getCachedSessionProxy(Session target, LinkedList<Session> sessionList) -->Line_4 $$ classes.add(SessionProxy.class)[ CD ]
