Line_2 $$ public static Method findBridgedMethod(Method bridgeMethod) -->Line_16 $$ Method bridgedMethod = searchCandidates(candidateMethods, bridgeMethod)[ FD ]
Line_6 $$ List<Method> candidateMethods = new ArrayList<Method>()-->Line_16 $$ Method bridgedMethod = searchCandidates(candidateMethods, bridgeMethod)[ FD ]
Line_17 $$ if (bridgedMethod != null) -->Line_20 $$ return bridgeMethod[ CD ]
Line_16 $$ Method bridgedMethod = searchCandidates(candidateMethods, bridgeMethod)-->Line_17 $$ if (bridgedMethod != null) [ FD ]
Line_13 $$ if (candidateMethods.size() == 1) -->Line_14 $$ return candidateMethods.get(0)[ CD ]
Line_6 $$ List<Method> candidateMethods = new ArrayList<Method>()-->Line_14 $$ return candidateMethods.get(0)[ FD ]
Line_17 $$ if (bridgedMethod != null) -->Line_18 $$ return bridgedMethod[ CD ]
Line_2 $$ public static Method findBridgedMethod(Method bridgeMethod) -->Line_7 $$ Method[] methods = ReflectionUtils.getAllDeclaredMethods(bridgeMethod.getDeclaringClass())[ FD ]
Line_2 $$ public static Method findBridgedMethod(Method bridgeMethod) -->Line_3 $$ if (bridgeMethod == null || !bridgeMethod.isBridge()) [ CD ]
Line_2 $$ public static Method findBridgedMethod(Method bridgeMethod) -->Line_17 $$ if (bridgedMethod != null) [ CD ]
Line_6 $$ List<Method> candidateMethods = new ArrayList<Method>()-->Line_13 $$ if (candidateMethods.size() == 1) [ FD ]
Line_3 $$ if (bridgeMethod == null || !bridgeMethod.isBridge()) -->Line_4 $$ return bridgeMethod[ CD ]
Line_2 $$ public static Method findBridgedMethod(Method bridgeMethod) -->Line_3 $$ if (bridgeMethod == null || !bridgeMethod.isBridge()) [ FD ]
Line_2 $$ public static Method findBridgedMethod(Method bridgeMethod) -->Line_6 $$ List<Method> candidateMethods = new ArrayList<Method>()[ CD ]
Line_2 $$ public static Method findBridgedMethod(Method bridgeMethod) -->Line_7 $$ Method[] methods = ReflectionUtils.getAllDeclaredMethods(bridgeMethod.getDeclaringClass())[ CD ]
Line_2 $$ public static Method findBridgedMethod(Method bridgeMethod) -->Line_16 $$ Method bridgedMethod = searchCandidates(candidateMethods, bridgeMethod)[ CD ]
Line_9 $$ if (isBridgedCandidateFor(candidateMethod, bridgeMethod)) -->Line_10 $$ candidateMethods.add(candidateMethod)[ CD ]
Line_6 $$ List<Method> candidateMethods = new ArrayList<Method>()-->Line_10 $$ candidateMethods.add(candidateMethod)[ FD ]
Line_2 $$ public static Method findBridgedMethod(Method bridgeMethod) -->Line_13 $$ if (candidateMethods.size() == 1) [ CD ]
Line_2 $$ public static Method findBridgedMethod(Method bridgeMethod) -->Line_9 $$ if (isBridgedCandidateFor(candidateMethod, bridgeMethod)) [ FD ]
Line_8 $$ for (Method candidateMethod : methods) -->Line_9 $$ if (isBridgedCandidateFor(candidateMethod, bridgeMethod)) [ FD ]
Line_8 $$ for (Method candidateMethod : methods) -->Line_10 $$ candidateMethods.add(candidateMethod)[ FD ]
