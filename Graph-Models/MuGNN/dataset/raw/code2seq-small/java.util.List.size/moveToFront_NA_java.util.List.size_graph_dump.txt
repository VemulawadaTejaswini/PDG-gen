Line_2 $$ public static <T> void moveToFront(List<T> sourceList, List<T> objectsToMove) -->Line_4 $$ for (int i = objectsToMove.size() - 1; i >= 0; i--) [ CD ]
Line_2 $$ public static <T> void moveToFront(List<T> sourceList, List<T> objectsToMove) -->Line_3 $$ sortMoveListByRelativeOrder(sourceList, objectsToMove)[ CD ]
Line_2 $$ public static <T> void moveToFront(List<T> sourceList, List<T> objectsToMove) -->Line_6 $$ if (sourceList.remove(object)) [ FD ]
Line_2 $$ public static <T> void moveToFront(List<T> sourceList, List<T> objectsToMove) -->Line_4 $$ for (int i = objectsToMove.size() - 1; i >= 0; i--) [ FD ]
Line_5 $$ T object = objectsToMove.get(i)-->Line_7 $$ sourceList.add(0, object)[ FD ]
Line_4 $$ for (int i = objectsToMove.size() - 1; i >= 0; i--) -->Line_6 $$ if (sourceList.remove(object)) [ CD ]
Line_4 $$ for (int i = objectsToMove.size() - 1; i >= 0; i--) -->Line_5 $$ T object = objectsToMove.get(i)[ CD ]
Line_2 $$ public static <T> void moveToFront(List<T> sourceList, List<T> objectsToMove) -->Line_5 $$ T object = objectsToMove.get(i)[ FD ]
Line_2 $$ public static <T> void moveToFront(List<T> sourceList, List<T> objectsToMove) -->Line_3 $$ sortMoveListByRelativeOrder(sourceList, objectsToMove)[ FD ]
Line_6 $$ if (sourceList.remove(object)) -->Line_7 $$ sourceList.add(0, object)[ CD ]
Line_2 $$ public static <T> void moveToFront(List<T> sourceList, List<T> objectsToMove) -->Line_7 $$ sourceList.add(0, object)[ FD ]
Line_4 $$ for (int i = objectsToMove.size() - 1; i >= 0; i--) -->Line_5 $$ T object = objectsToMove.get(i)[ FD ]
Line_5 $$ T object = objectsToMove.get(i)-->Line_6 $$ if (sourceList.remove(object)) [ FD ]
