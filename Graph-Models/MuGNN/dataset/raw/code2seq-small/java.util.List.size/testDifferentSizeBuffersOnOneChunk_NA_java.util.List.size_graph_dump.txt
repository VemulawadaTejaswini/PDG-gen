Line_6 $$ for (int i = 0; i < sizes.length; i++) -->Line_11 $$ sum += BufferPool.currentChunk().roundUp(buffer.capacity())[ CD ]
Line_7 $$ ByteBuffer buffer = BufferPool.get(sizes[i])-->Line_11 $$ sum += BufferPool.currentChunk().roundUp(buffer.capacity())[ FD ]
Line_2 $$ public void testDifferentSizeBuffersOnOneChunk() -->Line_3 $$ int[] sizes = new int[] [ CD ]
Line_6 $$ for (int i = 0; i < sizes.length; i++) -->Line_10 $$ buffers.add(buffer)[ CD ]
Line_5 $$ List<ByteBuffer> buffers = new ArrayList(sizes.length)-->Line_19 $$ int index = rnd.nextInt(buffers.size())[ FD ]
Line_2 $$ public void testDifferentSizeBuffersOnOneChunk() -->Line_23 $$ assertEquals(null, BufferPool.currentChunk())[ CD ]
Line_7 $$ ByteBuffer buffer = BufferPool.get(sizes[i])-->Line_21 $$ BufferPool.put(buffer)[ FD ]
Line_5 $$ List<ByteBuffer> buffers = new ArrayList(sizes.length)-->Line_18 $$ while (!buffers.isEmpty()) [ FD ]
Line_2 $$ public void testDifferentSizeBuffersOnOneChunk() -->Line_5 $$ List<ByteBuffer> buffers = new ArrayList(sizes.length)[ CD ]
Line_6 $$ for (int i = 0; i < sizes.length; i++) -->Line_8 $$ assertNotNull(buffer)[ CD ]
Line_7 $$ ByteBuffer buffer = BufferPool.get(sizes[i])-->Line_9 $$ assertTrue(buffer.capacity() >= sizes[i])[ FD ]
Line_16 $$ Random rnd = new Random()-->Line_19 $$ int index = rnd.nextInt(buffers.size())[ FD ]
Line_2 $$ public void testDifferentSizeBuffersOnOneChunk() -->Line_6 $$ for (int i = 0; i < sizes.length; i++) [ CD ]
Line_7 $$ ByteBuffer buffer = BufferPool.get(sizes[i])-->Line_10 $$ buffers.add(buffer)[ FD ]
Line_2 $$ public void testDifferentSizeBuffersOnOneChunk() -->Line_16 $$ Random rnd = new Random()[ CD ]
Line_5 $$ List<ByteBuffer> buffers = new ArrayList(sizes.length)-->Line_10 $$ buffers.add(buffer)[ FD ]
Line_4 $$ int sum = 0-->Line_11 $$ sum += BufferPool.currentChunk().roundUp(buffer.capacity())[ FD ]
Line_2 $$ public void testDifferentSizeBuffersOnOneChunk() -->Line_24 $$ assertEquals(0, chunk.free())[ CD ]
Line_2 $$ public void testDifferentSizeBuffersOnOneChunk() -->Line_4 $$ int sum = 0[ CD ]
Line_2 $$ public void testDifferentSizeBuffersOnOneChunk() -->Line_17 $$ rnd.setSeed(298347529L)[ CD ]
Line_19 $$ int index = rnd.nextInt(buffers.size())-->Line_20 $$ ByteBuffer buffer = buffers.remove(index)[ FD ]
Line_6 $$ for (int i = 0; i < sizes.length; i++) -->Line_7 $$ ByteBuffer buffer = BufferPool.get(sizes[i])[ CD ]
Line_6 $$ for (int i = 0; i < sizes.length; i++) -->Line_9 $$ assertTrue(buffer.capacity() >= sizes[i])[ CD ]
Line_18 $$ while (!buffers.isEmpty()) -->Line_19 $$ int index = rnd.nextInt(buffers.size())[ CD ]
Line_5 $$ List<ByteBuffer> buffers = new ArrayList(sizes.length)-->Line_20 $$ ByteBuffer buffer = buffers.remove(index)[ FD ]
Line_7 $$ ByteBuffer buffer = BufferPool.get(sizes[i])-->Line_8 $$ assertNotNull(buffer)[ FD ]
Line_18 $$ while (!buffers.isEmpty()) -->Line_21 $$ BufferPool.put(buffer)[ CD ]
Line_2 $$ public void testDifferentSizeBuffersOnOneChunk() -->Line_15 $$ assertNotNull(chunk)[ CD ]
Line_14 $$ BufferPool.Chunk chunk = BufferPool.currentChunk()-->Line_24 $$ assertEquals(0, chunk.free())[ FD ]
Line_20 $$ ByteBuffer buffer = buffers.remove(index)-->Line_21 $$ BufferPool.put(buffer)[ FD ]
Line_14 $$ BufferPool.Chunk chunk = BufferPool.currentChunk()-->Line_15 $$ assertNotNull(chunk)[ FD ]
Line_2 $$ public void testDifferentSizeBuffersOnOneChunk() -->Line_18 $$ while (!buffers.isEmpty()) [ CD ]
Line_2 $$ public void testDifferentSizeBuffersOnOneChunk() -->Line_14 $$ BufferPool.Chunk chunk = BufferPool.currentChunk()[ CD ]
Line_2 $$ public void testDifferentSizeBuffersOnOneChunk() -->Line_13 $$ assertTrue(sum <= BufferPool.GlobalPool.MACRO_CHUNK_SIZE)[ CD ]
Line_16 $$ Random rnd = new Random()-->Line_17 $$ rnd.setSeed(298347529L)[ FD ]
Line_18 $$ while (!buffers.isEmpty()) -->Line_20 $$ ByteBuffer buffer = buffers.remove(index)[ CD ]
