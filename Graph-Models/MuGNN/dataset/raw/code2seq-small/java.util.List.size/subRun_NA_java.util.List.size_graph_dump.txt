Line_2 $$ private BidiRun subRun(@NotNull EditorView view, int line, int targetStartOffset, int targetEndOffset, @Nullable Runnable quickEvaluationListener) -->Line_7 $$ BidiRun subRun = new BidiRun(level, start, end)[ CD ]
Line_2 $$ private BidiRun subRun(@NotNull EditorView view, int line, int targetStartOffset, int targetEndOffset, @Nullable Runnable quickEvaluationListener) -->Line_6 $$ int end = Math.min(endOffset, targetEndOffset)[ CD ]
Line_2 $$ private BidiRun subRun(@NotNull EditorView view, int line, int targetStartOffset, int targetEndOffset, @Nullable Runnable quickEvaluationListener) -->Line_6 $$ int end = Math.min(endOffset, targetEndOffset)[ FD ]
Line_2 $$ private BidiRun subRun(@NotNull EditorView view, int line, int targetStartOffset, int targetEndOffset, @Nullable Runnable quickEvaluationListener) -->Line_8 $$ List<Chunk> subChunks = new ArrayList<Chunk>()[ CD ]
Line_5 $$ int start = Math.max(startOffset, targetStartOffset)-->Line_10 $$ if (chunk.endOffset <= start)[ FD ]
Line_2 $$ private BidiRun subRun(@NotNull EditorView view, int line, int targetStartOffset, int targetEndOffset, @Nullable Runnable quickEvaluationListener) -->Line_5 $$ int start = Math.max(startOffset, targetStartOffset)[ CD ]
Line_8 $$ List<Chunk> subChunks = new ArrayList<Chunk>()-->Line_14 $$ subChunks.add(chunk.subChunk(view, this, line, start, end, quickEvaluationListener))[ FD ]
Line_9 $$ for (Chunk chunk : getChunks()) -->Line_14 $$ subChunks.add(chunk.subChunk(view, this, line, start, end, quickEvaluationListener))[ FD ]
Line_2 $$ private BidiRun subRun(@NotNull EditorView view, int line, int targetStartOffset, int targetEndOffset, @Nullable Runnable quickEvaluationListener) -->Line_16 $$ subRun.chunks = subChunks.toArray(new Chunk[subChunks.size()])[ CD ]
Line_2 $$ private BidiRun subRun(@NotNull EditorView view, int line, int targetStartOffset, int targetEndOffset, @Nullable Runnable quickEvaluationListener) -->Line_5 $$ int start = Math.max(startOffset, targetStartOffset)[ FD ]
Line_2 $$ private BidiRun subRun(@NotNull EditorView view, int line, int targetStartOffset, int targetEndOffset, @Nullable Runnable quickEvaluationListener) -->Line_14 $$ subChunks.add(chunk.subChunk(view, this, line, start, end, quickEvaluationListener))[ FD ]
Line_5 $$ int start = Math.max(startOffset, targetStartOffset)-->Line_14 $$ subChunks.add(chunk.subChunk(view, this, line, start, end, quickEvaluationListener))[ FD ]
Line_2 $$ private BidiRun subRun(@NotNull EditorView view, int line, int targetStartOffset, int targetEndOffset, @Nullable Runnable quickEvaluationListener) -->Line_17 $$ return subRun[ CD ]
Line_6 $$ int end = Math.min(endOffset, targetEndOffset)-->Line_14 $$ subChunks.add(chunk.subChunk(view, this, line, start, end, quickEvaluationListener))[ FD ]
Line_8 $$ List<Chunk> subChunks = new ArrayList<Chunk>()-->Line_16 $$ subRun.chunks = subChunks.toArray(new Chunk[subChunks.size()])[ FD ]
Line_6 $$ int end = Math.min(endOffset, targetEndOffset)-->Line_12 $$ if (chunk.startOffset >= end)[ FD ]
