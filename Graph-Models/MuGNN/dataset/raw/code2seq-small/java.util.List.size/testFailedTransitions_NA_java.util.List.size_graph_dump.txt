Line_2 $$ public void testFailedTransitions() -->Line_37 $$ mockTask.handle(new TaskTAttemptEvent(taskAttempt.getAttemptId(), TaskEventType.T_ATTEMPT_SUCCEEDED))[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_34 $$ assertEquals(TaskState.FAILED, mockTask.getState())[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_39 $$ taskAttempt = taskAttempts.get(3)[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_21 $$ assertEquals(TaskState.FAILED, mockTask.getState())[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_10 $$ launchTaskAttempt(getLastAttempt().getAttemptId())[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_18 $$ MockTaskAttemptImpl taskAttempt = taskAttempts.get(0)[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_11 $$ mockTask.handle(new TaskTAttemptEvent(getLastAttempt().getAttemptId(), TaskEventType.T_ADD_SPEC_ATTEMPT))[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_28 $$ taskAttempt = taskAttempts.get(1)[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_35 $$ taskAttempt = taskAttempts.get(2)[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_31 $$ assertEquals(TaskState.FAILED, mockTask.getState())[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_32 $$ taskAttempt.setState(TaskAttemptState.FAILED)[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_15 $$ mockTask.handle(new TaskTAttemptEvent(getLastAttempt().getAttemptId(), TaskEventType.T_ADD_SPEC_ATTEMPT))[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_14 $$ launchTaskAttempt(getLastAttempt().getAttemptId())[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_20 $$ mockTask.handle(new TaskTAttemptEvent(taskAttempt.getAttemptId(), TaskEventType.T_ATTEMPT_FAILED))[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_25 $$ mockTask.handle(new TaskTAttemptEvent(getLastAttempt().getAttemptId(), TaskEventType.T_ATTEMPT_LAUNCHED))[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_22 $$ mockTask.handle(new TaskEvent(taskId, TaskEventType.T_KILL))[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_41 $$ mockTask.handle(new TaskTAttemptEvent(taskAttempt.getAttemptId(), TaskEventType.T_ATTEMPT_KILLED))[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_42 $$ assertEquals(TaskState.FAILED, mockTask.getState())[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_8 $$ TaskId taskId = getNewTaskID()[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_9 $$ scheduleTaskAttempt(taskId)[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_33 $$ mockTask.handle(new TaskTAttemptEvent(taskAttempt.getAttemptId(), TaskEventType.T_ATTEMPT_FAILED))[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_26 $$ assertEquals(TaskState.FAILED, mockTask.getState())[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_24 $$ mockTask.handle(new TaskTAttemptEvent(getLastAttempt().getAttemptId(), TaskEventType.T_ADD_SPEC_ATTEMPT))[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_13 $$ mockTask.handle(new TaskTAttemptEvent(getLastAttempt().getAttemptId(), TaskEventType.T_ADD_SPEC_ATTEMPT))[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_12 $$ launchTaskAttempt(getLastAttempt().getAttemptId())[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_16 $$ launchTaskAttempt(getLastAttempt().getAttemptId())[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_17 $$ assertEquals(4, taskAttempts.size())[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_38 $$ assertEquals(TaskState.FAILED, mockTask.getState())[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_40 $$ taskAttempt.setState(TaskAttemptState.KILLED)[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_36 $$ taskAttempt.setState(TaskAttemptState.SUCCEEDED)[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_23 $$ assertEquals(TaskState.FAILED, mockTask.getState())[ CD ]
Line_3 $$ mockTask = new MockTaskImpl(jobId, partition, dispatcher.getEventHandler(), remoteJobConfFile, conf, taskAttemptListener, jobToken, credentials, clock, startCount, metrics, appContext, TaskType.MAP) -->Line_5 $$ return 1[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_27 $$ assertEquals(4, taskAttempts.size())[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_19 $$ taskAttempt.setState(TaskAttemptState.FAILED)[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_29 $$ taskAttempt.setState(TaskAttemptState.COMMIT_PENDING)[ CD ]
Line_2 $$ public void testFailedTransitions() -->Line_30 $$ mockTask.handle(new TaskTAttemptEvent(taskAttempt.getAttemptId(), TaskEventType.T_ATTEMPT_COMMIT_PENDING))[ CD ]
