Line_61 $$ String[] groupPermissions = PortalUtil.getGroupPermissions(portletRequest)-->Line_65 $$ serviceContext.setGroupPermissions(groupPermissions)[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_113 $$ if (assetTagNamesString != null) [ CD ]
Line_6 $$ if (serviceContext != null) -->Line_11 $$ serviceContext.setLanguageId(themeDisplay.getLanguageId())[ CD ]
Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_26 $$ serviceContext.setScopeGroupId(themeDisplay.getScopeGroupId())[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_10 $$ serviceContext.setCompanyId(themeDisplay.getCompanyId())[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_21 $$ serviceContext.setTimeZone(themeDisplay.getTimeZone())[ FD ]
Line_90 $$ String name = entry.getKey()-->Line_93 $$ long[] assetVocabularyAssetCategoryIds = StringUtil.split(ParamUtil.getString(portletRequest, name), 0L)[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_75 $$ enu = request.getHeaderNames()[ CD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_29 $$ Enumeration<String> enu = portletRequest.getParameterNames()[ FD ]
Line_6 $$ if (serviceContext != null) -->Line_16 $$ serviceContext.setPathFriendlyURLPublic(PortalUtil.getPathFriendlyURLPublic())[ CD ]
Line_70 $$ String portletId = PortalUtil.getPortletId(portletRequest)-->Line_71 $$ PortletPreferencesIds portletPreferencesIds = PortletPreferencesFactoryUtil.getPortletPreferencesIds(request, portletId)[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_57 $$ serviceContext.setModelPermissions(modelPermissions)[ FD ]
Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_22 $$ User user = themeDisplay.getUser()[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_6 $$ if (serviceContext != null) [ CD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_41 $$ serviceContext.setAttributes(attributes)[ FD ]
Line_56 $$ if (!modelPermissions.isEmpty()) -->Line_63 $$ serviceContext.setAddGroupPermissions(addGroupPermissions)[ CD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_88 $$ boolean updateAssetCategoryIds = false[ CD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_84 $$ serviceContext.setRequest(request)[ FD ]
Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_21 $$ serviceContext.setTimeZone(themeDisplay.getTimeZone())[ FD ]
Line_91 $$ if (name.startsWith("assetCategoryIds")) -->Line_93 $$ long[] assetVocabularyAssetCategoryIds = StringUtil.split(ParamUtil.getString(portletRequest, name), 0L)[ CD ]
Line_6 $$ if (serviceContext != null) -->Line_9 $$ serviceContext = new ServiceContext()[ CD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_17 $$ serviceContext.setPathMain(PortalUtil.getPathMain())[ FD ]
Line_6 $$ if (serviceContext != null) -->Line_19 $$ serviceContext.setPortalURL(PortalUtil.getPortalURL(portletRequest))[ CD ]
Line_31 $$ String param = enu.nextElement()-->Line_32 $$ String[] values = portletRequest.getParameterValues(param)[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_110 $$ Double assetPriority = ParamUtil.getDouble(request, "assetPriority")[ CD ]
Line_29 $$ Enumeration<String> enu = portletRequest.getParameterNames()-->Line_75 $$ enu = request.getHeaderNames()[ FD ]
Line_56 $$ if (!modelPermissions.isEmpty()) -->Line_57 $$ serviceContext.setModelPermissions(modelPermissions)[ CD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_44 $$ serviceContext.setCommand(cmd)[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_16 $$ serviceContext.setPathFriendlyURLPublic(PortalUtil.getPathFriendlyURLPublic())[ FD ]
Line_110 $$ Double assetPriority = ParamUtil.getDouble(request, "assetPriority")-->Line_111 $$ serviceContext.setAssetPriority(assetPriority)[ FD ]
Line_75 $$ enu = request.getHeaderNames()-->Line_76 $$ while (enu.hasMoreElements()) [ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_61 $$ String[] groupPermissions = PortalUtil.getGroupPermissions(portletRequest)[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_62 $$ String[] guestPermissions = PortalUtil.getGuestPermissions(portletRequest)[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_71 $$ PortletPreferencesIds portletPreferencesIds = PortletPreferencesFactoryUtil.getPortletPreferencesIds(request, portletId)[ CD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_82 $$ serviceContext.setRemoteAddr(request.getRemoteAddr())[ CD ]
Line_6 $$ if (serviceContext != null) -->Line_24 $$ serviceContext.setUserId(user.getUserId())[ CD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_112 $$ String assetTagNamesString = request.getParameter("assetTagNames")[ CD ]
Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_12 $$ serviceContext.setLayoutFullURL(PortalUtil.getLayoutFullURL(themeDisplay))[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_12 $$ serviceContext.setLayoutFullURL(PortalUtil.getLayoutFullURL(themeDisplay))[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_70 $$ String portletId = PortalUtil.getPortletId(portletRequest)[ CD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_115 $$ serviceContext.setAssetTagNames(assetTagNames)[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_108 $$ serviceContext.setAssetLinkEntryIds(assetLinkEntryIds)[ FD ]
Line_56 $$ if (!modelPermissions.isEmpty()) -->Line_60 $$ boolean addGuestPermissions = ParamUtil.getBoolean(portletRequest, "addGuestPermissions")[ CD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_19 $$ serviceContext.setPortalURL(PortalUtil.getPortalURL(portletRequest))[ FD ]
Line_78 $$ String value = request.getHeader(header)-->Line_79 $$ headerMap.put(header, value)[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_70 $$ String portletId = PortalUtil.getPortletId(portletRequest)[ FD ]
Line_6 $$ if (serviceContext != null) -->Line_14 $$ serviceContext.setPathFriendlyURLPrivateGroup(PortalUtil.getPathFriendlyURLPrivateGroup())[ CD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_41 $$ serviceContext.setAttributes(attributes)[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_30 $$ while (enu.hasMoreElements()) [ CD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_63 $$ serviceContext.setAddGroupPermissions(addGroupPermissions)[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_111 $$ serviceContext.setAssetPriority(assetPriority)[ CD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_119 $$ serviceContext.setWorkflowAction(workflowAction)[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_72 $$ serviceContext.setPortletPreferencesIds(portletPreferencesIds)[ CD ]
Line_99 $$ if (updateAssetCategoryIds) -->Line_101 $$ serviceContext.setAssetCategoryIds(assetCategoryIds)[ CD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_59 $$ boolean addGroupPermissions = ParamUtil.getBoolean(portletRequest, "addGroupPermissions")[ FD ]
Line_6 $$ if (serviceContext != null) -->Line_20 $$ serviceContext.setSignedIn(themeDisplay.isSignedIn())[ CD ]
Line_30 $$ while (enu.hasMoreElements()) -->Line_31 $$ String param = enu.nextElement()[ CD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_57 $$ serviceContext.setModelPermissions(modelPermissions)[ FD ]
Line_90 $$ String name = entry.getKey()-->Line_91 $$ if (name.startsWith("assetCategoryIds")) [ FD ]
Line_6 $$ if (serviceContext != null) -->Line_22 $$ User user = themeDisplay.getUser()[ CD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_29 $$ Enumeration<String> enu = portletRequest.getParameterNames()[ CD ]
Line_6 $$ if (serviceContext != null) -->Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()[ CD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_21 $$ serviceContext.setTimeZone(themeDisplay.getTimeZone())[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_111 $$ serviceContext.setAssetPriority(assetPriority)[ FD ]
Line_56 $$ if (!modelPermissions.isEmpty()) -->Line_62 $$ String[] guestPermissions = PortalUtil.getGuestPermissions(portletRequest)[ CD ]
Line_89 $$ for (Map.Entry<String, String[]> entry : parameterMap.entrySet()) -->Line_90 $$ String name = entry.getKey()[ FD ]
Line_105 $$ String assetLinkEntryIdsString = request.getParameter("assetLinksSearchContainerPrimaryKeys")-->Line_107 $$ long[] assetLinkEntryIds = StringUtil.split(assetLinkEntryIdsString, 0L)[ FD ]
Line_56 $$ if (!modelPermissions.isEmpty()) -->Line_64 $$ serviceContext.setAddGuestPermissions(addGuestPermissions)[ CD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_65 $$ serviceContext.setGroupPermissions(groupPermissions)[ FD ]
Line_50 $$ if (formDateLong > 0) -->Line_51 $$ Date formDate = new Date(formDateLong)[ CD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_16 $$ serviceContext.setPathFriendlyURLPublic(PortalUtil.getPathFriendlyURLPublic())[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_83 $$ serviceContext.setRemoteHost(request.getRemoteHost())[ CD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_99 $$ if (updateAssetCategoryIds) [ CD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_47 $$ serviceContext.setCurrentURL(currentURL)[ CD ]
Line_99 $$ if (updateAssetCategoryIds) -->Line_100 $$ long[] assetCategoryIds = ArrayUtil.toArray(assetCategoryIdsList.toArray(new Long[assetCategoryIdsList.size()]))[ CD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_23 $$ serviceContext.setUserDisplayURL(user.getDisplayURL(themeDisplay))[ FD ]
Line_22 $$ User user = themeDisplay.getUser()-->Line_24 $$ serviceContext.setUserId(user.getUserId())[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_81 $$ serviceContext.setHeaders(headerMap)[ CD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_119 $$ serviceContext.setWorkflowAction(workflowAction)[ FD ]
Line_88 $$ boolean updateAssetCategoryIds = false-->Line_92 $$ updateAssetCategoryIds = true[ FD ]
Line_56 $$ if (!modelPermissions.isEmpty()) -->Line_66 $$ serviceContext.setGuestPermissions(guestPermissions)[ CD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_83 $$ serviceContext.setRemoteHost(request.getRemoteHost())[ FD ]
Line_59 $$ boolean addGroupPermissions = ParamUtil.getBoolean(portletRequest, "addGroupPermissions")-->Line_63 $$ serviceContext.setAddGroupPermissions(addGroupPermissions)[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_66 $$ serviceContext.setGuestPermissions(guestPermissions)[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_101 $$ serviceContext.setAssetCategoryIds(assetCategoryIds)[ FD ]
Line_94 $$ for (long assetCategoryId : assetVocabularyAssetCategoryIds) -->Line_95 $$ assetCategoryIdsList.add(assetCategoryId)[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_103 $$ boolean assetEntryVisible = ParamUtil.getBoolean(portletRequest, "assetEntryVisible", true)[ CD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_52 $$ serviceContext.setFormDate(formDate)[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_72 $$ serviceContext.setPortletPreferencesIds(portletPreferencesIds)[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_15 $$ serviceContext.setPathFriendlyURLPrivateUser(PortalUtil.getPathFriendlyURLPrivateUser())[ FD ]
Line_32 $$ String[] values = portletRequest.getParameterValues(param)-->Line_33 $$ if (ArrayUtil.isNotEmpty(values)) [ FD ]
Line_30 $$ while (enu.hasMoreElements()) -->Line_32 $$ String[] values = portletRequest.getParameterValues(param)[ CD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_13 $$ serviceContext.setLayoutURL(PortalUtil.getLayoutURL(themeDisplay))[ FD ]
Line_87 $$ List<Long> assetCategoryIdsList = new ArrayList()-->Line_95 $$ assetCategoryIdsList.add(assetCategoryId)[ FD ]
Line_6 $$ if (serviceContext != null) -->Line_10 $$ serviceContext.setCompanyId(themeDisplay.getCompanyId())[ CD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_13 $$ serviceContext.setLayoutURL(PortalUtil.getLayoutURL(themeDisplay))[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_83 $$ serviceContext.setRemoteHost(request.getRemoteHost())[ FD ]
Line_6 $$ if (serviceContext != null) -->Line_15 $$ serviceContext.setPathFriendlyURLPrivateUser(PortalUtil.getPathFriendlyURLPrivateUser())[ CD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_19 $$ serviceContext.setPortalURL(PortalUtil.getPortalURL(portletRequest))[ FD ]
Line_56 $$ if (!modelPermissions.isEmpty()) -->Line_61 $$ String[] groupPermissions = PortalUtil.getGroupPermissions(portletRequest)[ CD ]
Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_13 $$ serviceContext.setLayoutURL(PortalUtil.getLayoutURL(themeDisplay))[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_41 $$ serviceContext.setAttributes(attributes)[ CD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_84 $$ serviceContext.setRequest(request)[ FD ]
Line_91 $$ if (name.startsWith("assetCategoryIds")) -->Line_92 $$ updateAssetCategoryIds = true[ CD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_104 $$ serviceContext.setAssetEntryVisible(assetEntryVisible)[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_84 $$ serviceContext.setRequest(request)[ CD ]
Line_112 $$ String assetTagNamesString = request.getParameter("assetTagNames")-->Line_113 $$ if (assetTagNamesString != null) [ FD ]
Line_31 $$ String param = enu.nextElement()-->Line_37 $$ attributes.put(param, values)[ FD ]
Line_6 $$ if (serviceContext != null) -->Line_17 $$ serviceContext.setPathMain(PortalUtil.getPathMain())[ CD ]
Line_6 $$ if (serviceContext != null) -->Line_23 $$ serviceContext.setUserDisplayURL(user.getDisplayURL(themeDisplay))[ CD ]
Line_87 $$ List<Long> assetCategoryIdsList = new ArrayList()-->Line_100 $$ long[] assetCategoryIds = ArrayUtil.toArray(assetCategoryIdsList.toArray(new Long[assetCategoryIdsList.size()]))[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_47 $$ serviceContext.setCurrentURL(currentURL)[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_82 $$ serviceContext.setRemoteAddr(request.getRemoteAddr())[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_101 $$ serviceContext.setAssetCategoryIds(assetCategoryIds)[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_93 $$ long[] assetVocabularyAssetCategoryIds = StringUtil.split(ParamUtil.getString(portletRequest, name), 0L)[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_10 $$ serviceContext.setCompanyId(themeDisplay.getCompanyId())[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_56 $$ if (!modelPermissions.isEmpty()) [ CD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_82 $$ serviceContext.setRemoteAddr(request.getRemoteAddr())[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_32 $$ String[] values = portletRequest.getParameterValues(param)[ FD ]
Line_71 $$ PortletPreferencesIds portletPreferencesIds = PortletPreferencesFactoryUtil.getPortletPreferencesIds(request, portletId)-->Line_72 $$ serviceContext.setPortletPreferencesIds(portletPreferencesIds)[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_103 $$ boolean assetEntryVisible = ParamUtil.getBoolean(portletRequest, "assetEntryVisible", true)[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_11 $$ serviceContext.setLanguageId(themeDisplay.getLanguageId())[ FD ]
Line_62 $$ String[] guestPermissions = PortalUtil.getGuestPermissions(portletRequest)-->Line_66 $$ serviceContext.setGuestPermissions(guestPermissions)[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_111 $$ serviceContext.setAssetPriority(assetPriority)[ FD ]
Line_112 $$ String assetTagNamesString = request.getParameter("assetTagNames")-->Line_114 $$ String[] assetTagNames = StringUtil.split(assetTagNamesString)[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_64 $$ serviceContext.setAddGuestPermissions(addGuestPermissions)[ FD ]
Line_60 $$ boolean addGuestPermissions = ParamUtil.getBoolean(portletRequest, "addGuestPermissions")-->Line_64 $$ serviceContext.setAddGuestPermissions(addGuestPermissions)[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_12 $$ serviceContext.setLayoutFullURL(PortalUtil.getLayoutFullURL(themeDisplay))[ FD ]
Line_105 $$ String assetLinkEntryIdsString = request.getParameter("assetLinksSearchContainerPrimaryKeys")-->Line_106 $$ if (assetLinkEntryIdsString != null) [ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_20 $$ serviceContext.setSignedIn(themeDisplay.isSignedIn())[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_18 $$ serviceContext.setPlid(themeDisplay.getPlid())[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_115 $$ serviceContext.setAssetTagNames(assetTagNames)[ FD ]
Line_50 $$ if (formDateLong > 0) -->Line_52 $$ serviceContext.setFormDate(formDate)[ CD ]
Line_51 $$ Date formDate = new Date(formDateLong)-->Line_52 $$ serviceContext.setFormDate(formDate)[ FD ]
Line_113 $$ if (assetTagNamesString != null) -->Line_114 $$ String[] assetTagNames = StringUtil.split(assetTagNamesString)[ CD ]
Line_106 $$ if (assetLinkEntryIdsString != null) -->Line_108 $$ serviceContext.setAssetLinkEntryIds(assetLinkEntryIds)[ CD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_14 $$ serviceContext.setPathFriendlyURLPrivateGroup(PortalUtil.getPathFriendlyURLPrivateGroup())[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_26 $$ serviceContext.setScopeGroupId(themeDisplay.getScopeGroupId())[ FD ]
Line_32 $$ String[] values = portletRequest.getParameterValues(param)-->Line_37 $$ attributes.put(param, values)[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_26 $$ serviceContext.setScopeGroupId(themeDisplay.getScopeGroupId())[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_24 $$ serviceContext.setUserId(user.getUserId())[ FD ]
Line_22 $$ User user = themeDisplay.getUser()-->Line_23 $$ serviceContext.setUserDisplayURL(user.getDisplayURL(themeDisplay))[ FD ]
Line_29 $$ Enumeration<String> enu = portletRequest.getParameterNames()-->Line_30 $$ while (enu.hasMoreElements()) [ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_104 $$ serviceContext.setAssetEntryVisible(assetEntryVisible)[ CD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_65 $$ serviceContext.setGroupPermissions(groupPermissions)[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_14 $$ serviceContext.setPathFriendlyURLPrivateGroup(PortalUtil.getPathFriendlyURLPrivateGroup())[ FD ]
Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_23 $$ serviceContext.setUserDisplayURL(user.getDisplayURL(themeDisplay))[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_26 $$ serviceContext.setScopeGroupId(themeDisplay.getScopeGroupId())[ CD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_9 $$ serviceContext = new ServiceContext()[ FD ]
Line_77 $$ String header = enu.nextElement()-->Line_78 $$ String value = request.getHeader(header)[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_108 $$ serviceContext.setAssetLinkEntryIds(assetLinkEntryIds)[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_18 $$ serviceContext.setPlid(themeDisplay.getPlid())[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_81 $$ serviceContext.setHeaders(headerMap)[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_50 $$ if (formDateLong > 0) [ CD ]
Line_77 $$ String header = enu.nextElement()-->Line_79 $$ headerMap.put(header, value)[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_44 $$ serviceContext.setCommand(cmd)[ CD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_105 $$ String assetLinkEntryIdsString = request.getParameter("assetLinksSearchContainerPrimaryKeys")[ CD ]
Line_6 $$ if (serviceContext != null) -->Line_18 $$ serviceContext.setPlid(themeDisplay.getPlid())[ CD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_15 $$ serviceContext.setPathFriendlyURLPrivateUser(PortalUtil.getPathFriendlyURLPrivateUser())[ FD ]
Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_18 $$ serviceContext.setPlid(themeDisplay.getPlid())[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_64 $$ serviceContext.setAddGuestPermissions(addGuestPermissions)[ FD ]
Line_76 $$ while (enu.hasMoreElements()) -->Line_78 $$ String value = request.getHeader(header)[ CD ]
Line_107 $$ long[] assetLinkEntryIds = StringUtil.split(assetLinkEntryIdsString, 0L)-->Line_108 $$ serviceContext.setAssetLinkEntryIds(assetLinkEntryIds)[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_19 $$ serviceContext.setPortalURL(PortalUtil.getPortalURL(portletRequest))[ FD ]
Line_76 $$ while (enu.hasMoreElements()) -->Line_77 $$ String header = enu.nextElement()[ CD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_76 $$ while (enu.hasMoreElements()) [ CD ]
Line_6 $$ if (serviceContext != null) -->Line_12 $$ serviceContext.setLayoutFullURL(PortalUtil.getLayoutFullURL(themeDisplay))[ CD ]
Line_106 $$ if (assetLinkEntryIdsString != null) -->Line_107 $$ long[] assetLinkEntryIds = StringUtil.split(assetLinkEntryIdsString, 0L)[ CD ]
Line_100 $$ long[] assetCategoryIds = ArrayUtil.toArray(assetCategoryIdsList.toArray(new Long[assetCategoryIdsList.size()]))-->Line_101 $$ serviceContext.setAssetCategoryIds(assetCategoryIds)[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_47 $$ serviceContext.setCurrentURL(currentURL)[ FD ]
Line_103 $$ boolean assetEntryVisible = ParamUtil.getBoolean(portletRequest, "assetEntryVisible", true)-->Line_104 $$ serviceContext.setAssetEntryVisible(assetEntryVisible)[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_23 $$ serviceContext.setUserDisplayURL(user.getDisplayURL(themeDisplay))[ FD ]
Line_33 $$ if (ArrayUtil.isNotEmpty(values)) -->Line_34 $$ if (values.length == 1) [ CD ]
Line_75 $$ enu = request.getHeaderNames()-->Line_77 $$ String header = enu.nextElement()[ FD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_119 $$ serviceContext.setWorkflowAction(workflowAction)[ CD ]
Line_113 $$ if (assetTagNamesString != null) -->Line_115 $$ serviceContext.setAssetTagNames(assetTagNames)[ CD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_60 $$ boolean addGuestPermissions = ParamUtil.getBoolean(portletRequest, "addGuestPermissions")[ FD ]
Line_114 $$ String[] assetTagNames = StringUtil.split(assetTagNamesString)-->Line_115 $$ serviceContext.setAssetTagNames(assetTagNames)[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_44 $$ serviceContext.setCommand(cmd)[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_52 $$ serviceContext.setFormDate(formDate)[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_81 $$ serviceContext.setHeaders(headerMap)[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_72 $$ serviceContext.setPortletPreferencesIds(portletPreferencesIds)[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_66 $$ serviceContext.setGuestPermissions(guestPermissions)[ FD ]
Line_30 $$ while (enu.hasMoreElements()) -->Line_33 $$ if (ArrayUtil.isNotEmpty(values)) [ CD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_106 $$ if (assetLinkEntryIdsString != null) [ CD ]
Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_11 $$ serviceContext.setLanguageId(themeDisplay.getLanguageId())[ FD ]
Line_31 $$ String param = enu.nextElement()-->Line_35 $$ attributes.put(param, values[0])[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_24 $$ serviceContext.setUserId(user.getUserId())[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_63 $$ serviceContext.setAddGroupPermissions(addGroupPermissions)[ FD ]
Line_7 $$ serviceContext = (ServiceContext) serviceContext.clone()-->Line_104 $$ serviceContext.setAssetEntryVisible(assetEntryVisible)[ FD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_17 $$ serviceContext.setPathMain(PortalUtil.getPathMain())[ FD ]
Line_76 $$ while (enu.hasMoreElements()) -->Line_79 $$ headerMap.put(header, value)[ CD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_11 $$ serviceContext.setLanguageId(themeDisplay.getLanguageId())[ FD ]
Line_56 $$ if (!modelPermissions.isEmpty()) -->Line_65 $$ serviceContext.setGroupPermissions(groupPermissions)[ CD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_87 $$ List<Long> assetCategoryIdsList = new ArrayList()[ CD ]
Line_56 $$ if (!modelPermissions.isEmpty()) -->Line_59 $$ boolean addGroupPermissions = ParamUtil.getBoolean(portletRequest, "addGroupPermissions")[ CD ]
Line_34 $$ if (values.length == 1) -->Line_35 $$ attributes.put(param, values[0])[ CD ]
Line_6 $$ if (serviceContext != null) -->Line_13 $$ serviceContext.setLayoutURL(PortalUtil.getLayoutURL(themeDisplay))[ CD ]
Line_9 $$ serviceContext = new ServiceContext()-->Line_20 $$ serviceContext.setSignedIn(themeDisplay.isSignedIn())[ FD ]
Line_29 $$ Enumeration<String> enu = portletRequest.getParameterNames()-->Line_77 $$ String header = enu.nextElement()[ FD ]
Line_34 $$ if (values.length == 1) -->Line_37 $$ attributes.put(param, values)[ CD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_120 $$ return serviceContext[ CD ]
Line_2 $$ public static ServiceContext getInstance(PortletRequest portletRequest) throws PortalException -->Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_10 $$ serviceContext.setCompanyId(themeDisplay.getCompanyId())[ FD ]
Line_29 $$ Enumeration<String> enu = portletRequest.getParameterNames()-->Line_31 $$ String param = enu.nextElement()[ FD ]
Line_29 $$ Enumeration<String> enu = portletRequest.getParameterNames()-->Line_76 $$ while (enu.hasMoreElements()) [ FD ]
Line_5 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_20 $$ serviceContext.setSignedIn(themeDisplay.isSignedIn())[ FD ]
Line_6 $$ if (serviceContext != null) -->Line_21 $$ serviceContext.setTimeZone(themeDisplay.getTimeZone())[ CD ]
