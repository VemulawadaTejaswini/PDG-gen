Line_2 $$ public void testBasicOps() -->Line_14 $$ person = (Person) session.load(Person.class, person.getId())[ CD ]
Line_2 $$ public void testBasicOps() -->Line_4 $$ session.beginTransaction()[ CD ]
Line_2 $$ public void testBasicOps() -->Line_3 $$ Session session = openSession()[ CD ]
Line_7 $$ Person person = new Person("John", "Dillinger")-->Line_9 $$ session.persist(person)[ FD ]
Line_2 $$ public void testBasicOps() -->Line_16 $$ List aliases = session.createQuery("from Alias").list()[ CD ]
Line_3 $$ Session session = openSession()-->Line_12 $$ session = openSession()[ FD ]
Line_12 $$ session = openSession()-->Line_13 $$ session.beginTransaction()[ FD ]
Line_3 $$ Session session = openSession()-->Line_16 $$ List aliases = session.createQuery("from Alias").list()[ FD ]
Line_3 $$ Session session = openSession()-->Line_10 $$ session.getTransaction().commit()[ FD ]
Line_2 $$ public void testBasicOps() -->Line_13 $$ session.beginTransaction()[ CD ]
Line_2 $$ public void testBasicOps() -->Line_6 $$ session.persist(alias)[ CD ]
Line_2 $$ public void testBasicOps() -->Line_7 $$ Person person = new Person("John", "Dillinger")[ CD ]
Line_3 $$ Session session = openSession()-->Line_11 $$ session.close()[ FD ]
Line_16 $$ List aliases = session.createQuery("from Alias").list()-->Line_17 $$ assertEquals(0, aliases.size())[ FD ]
Line_3 $$ Session session = openSession()-->Line_19 $$ session.close()[ FD ]
Line_3 $$ Session session = openSession()-->Line_14 $$ person = (Person) session.load(Person.class, person.getId())[ FD ]
Line_3 $$ Session session = openSession()-->Line_15 $$ session.delete(person)[ FD ]
Line_5 $$ Alias alias = new Alias("Public Enemy", "Number 1", "FBI")-->Line_6 $$ session.persist(alias)[ FD ]
Line_12 $$ session = openSession()-->Line_15 $$ session.delete(person)[ FD ]
Line_7 $$ Person person = new Person("John", "Dillinger")-->Line_14 $$ person = (Person) session.load(Person.class, person.getId())[ FD ]
Line_3 $$ Session session = openSession()-->Line_4 $$ session.beginTransaction()[ FD ]
Line_3 $$ Session session = openSession()-->Line_18 $$ session.getTransaction().commit()[ FD ]
Line_2 $$ public void testBasicOps() -->Line_17 $$ assertEquals(0, aliases.size())[ CD ]
Line_2 $$ public void testBasicOps() -->Line_18 $$ session.getTransaction().commit()[ CD ]
Line_7 $$ Person person = new Person("John", "Dillinger")-->Line_8 $$ person.getName().getAliases().add(alias)[ FD ]
Line_2 $$ public void testBasicOps() -->Line_19 $$ session.close()[ CD ]
Line_2 $$ public void testBasicOps() -->Line_8 $$ person.getName().getAliases().add(alias)[ CD ]
Line_14 $$ person = (Person) session.load(Person.class, person.getId())-->Line_15 $$ session.delete(person)[ FD ]
Line_12 $$ session = openSession()-->Line_18 $$ session.getTransaction().commit()[ FD ]
Line_3 $$ Session session = openSession()-->Line_6 $$ session.persist(alias)[ FD ]
Line_12 $$ session = openSession()-->Line_19 $$ session.close()[ FD ]
Line_7 $$ Person person = new Person("John", "Dillinger")-->Line_15 $$ session.delete(person)[ FD ]
Line_2 $$ public void testBasicOps() -->Line_9 $$ session.persist(person)[ CD ]
Line_2 $$ public void testBasicOps() -->Line_10 $$ session.getTransaction().commit()[ CD ]
Line_2 $$ public void testBasicOps() -->Line_12 $$ session = openSession()[ CD ]
Line_2 $$ public void testBasicOps() -->Line_5 $$ Alias alias = new Alias("Public Enemy", "Number 1", "FBI")[ CD ]
Line_5 $$ Alias alias = new Alias("Public Enemy", "Number 1", "FBI")-->Line_8 $$ person.getName().getAliases().add(alias)[ FD ]
Line_12 $$ session = openSession()-->Line_16 $$ List aliases = session.createQuery("from Alias").list()[ FD ]
Line_12 $$ session = openSession()-->Line_14 $$ person = (Person) session.load(Person.class, person.getId())[ FD ]
Line_3 $$ Session session = openSession()-->Line_9 $$ session.persist(person)[ FD ]
Line_3 $$ Session session = openSession()-->Line_13 $$ session.beginTransaction()[ FD ]
Line_2 $$ public void testBasicOps() -->Line_15 $$ session.delete(person)[ CD ]
Line_2 $$ public void testBasicOps() -->Line_11 $$ session.close()[ CD ]
