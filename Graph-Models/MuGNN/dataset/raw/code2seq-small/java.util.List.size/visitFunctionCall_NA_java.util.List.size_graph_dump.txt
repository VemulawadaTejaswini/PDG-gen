Line_5 $$ List<Object> argumentValues = new ArrayList()-->Line_24 $$ return invoke(session, function, argumentValues)[ FD ]
Line_14 $$ for (int i = 0; i < argumentValues.size(); i++) -->Line_16 $$ if (value == null && !function.getNullableArguments().get(i)) [ CD ]
Line_6 $$ for (Expression expression : node.getArguments()) -->Line_7 $$ Object value = process(expression, context)[ FD ]
Line_5 $$ List<Object> argumentValues = new ArrayList()-->Line_14 $$ for (int i = 0; i < argumentValues.size(); i++) [ FD ]
Line_6 $$ for (Expression expression : node.getArguments()) -->Line_8 $$ Type type = expressionTypes.get(expression)[ FD ]
Line_5 $$ List<Object> argumentValues = new ArrayList()-->Line_9 $$ argumentValues.add(value)[ FD ]
Line_4 $$ List<Type> argumentTypes = new ArrayList()-->Line_10 $$ argumentTypes.add(type)[ FD ]
Line_4 $$ List<Type> argumentTypes = new ArrayList()-->Line_22 $$ return new FunctionCall(node.getName(), node.getWindow(), node.isDistinct(), toExpressions(argumentValues, argumentTypes))[ FD ]
Line_12 $$ Signature functionSignature = metadata.getFunctionRegistry().resolveFunction(node.getName(), Lists.transform(argumentTypes, Type::<>getTypeSignature), false)-->Line_13 $$ ScalarFunctionImplementation function = metadata.getFunctionRegistry().getScalarFunctionImplementation(functionSignature)[ FD ]
Line_14 $$ for (int i = 0; i < argumentValues.size(); i++) -->Line_15 $$ Object value = argumentValues.get(i)[ FD ]
Line_5 $$ List<Object> argumentValues = new ArrayList()-->Line_22 $$ return new FunctionCall(node.getName(), node.getWindow(), node.isDistinct(), toExpressions(argumentValues, argumentTypes))[ FD ]
Line_16 $$ if (value == null && !function.getNullableArguments().get(i)) -->Line_17 $$ return null[ CD ]
Line_14 $$ for (int i = 0; i < argumentValues.size(); i++) -->Line_15 $$ Object value = argumentValues.get(i)[ CD ]
Line_14 $$ for (int i = 0; i < argumentValues.size(); i++) -->Line_16 $$ if (value == null && !function.getNullableArguments().get(i)) [ FD ]
Line_5 $$ List<Object> argumentValues = new ArrayList()-->Line_15 $$ Object value = argumentValues.get(i)[ FD ]
Line_4 $$ List<Type> argumentTypes = new ArrayList()-->Line_12 $$ Signature functionSignature = metadata.getFunctionRegistry().resolveFunction(node.getName(), Lists.transform(argumentTypes, Type::<>getTypeSignature), false)[ FD ]
Line_13 $$ ScalarFunctionImplementation function = metadata.getFunctionRegistry().getScalarFunctionImplementation(functionSignature)-->Line_16 $$ if (value == null && !function.getNullableArguments().get(i)) [ FD ]
Line_8 $$ Type type = expressionTypes.get(expression)-->Line_10 $$ argumentTypes.add(type)[ FD ]
Line_7 $$ Object value = process(expression, context)-->Line_9 $$ argumentValues.add(value)[ FD ]
Line_13 $$ ScalarFunctionImplementation function = metadata.getFunctionRegistry().getScalarFunctionImplementation(functionSignature)-->Line_24 $$ return invoke(session, function, argumentValues)[ FD ]
