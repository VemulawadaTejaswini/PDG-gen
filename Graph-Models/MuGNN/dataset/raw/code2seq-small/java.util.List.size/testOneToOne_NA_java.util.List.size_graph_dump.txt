Line_22 $$ l = s.createQuery("from E e join fetch e.reverse").list()-->Line_29 $$ assertTrue(l.size() == 2)[ FD ]
Line_38 $$ a = (A) s.load(A.class, aid)-->Line_40 $$ assertTrue(a == a.getForward().getReverse())[ FD ]
Line_6 $$ A a = new A()-->Line_42 $$ s.delete(a)[ FD ]
Line_26 $$ s = openSession()-->Line_28 $$ l = s.createQuery("from E e").list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_17 $$ s.close()[ FD ]
Line_28 $$ l = s.createQuery("from E e").list()-->Line_49 $$ l = s.createQuery("from E e").list()[ FD ]
Line_18 $$ s = openSession()-->Line_45 $$ s.delete(d2.getReverse())[ FD ]
Line_22 $$ l = s.createQuery("from E e join fetch e.reverse").list()-->Line_28 $$ l = s.createQuery("from E e").list()[ FD ]
Line_8 $$ C1 c = new C1()-->Line_12 $$ c.setForward(d2)[ FD ]
Line_26 $$ s = openSession()-->Line_36 $$ s = openSession()[ FD ]
Line_19 $$ t = s.beginTransaction()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_36 $$ s = openSession()-->Line_37 $$ t = s.beginTransaction()[ FD ]
Line_26 $$ s = openSession()-->Line_35 $$ s.close()[ FD ]
Line_27 $$ t = s.beginTransaction()-->Line_46 $$ t.commit()[ FD ]
Line_48 $$ t = s.beginTransaction()-->Line_51 $$ t.commit()[ FD ]
Line_22 $$ l = s.createQuery("from E e join fetch e.reverse").list()-->Line_23 $$ assertTrue(l.size() == 2)[ FD ]
Line_18 $$ s = openSession()-->Line_44 $$ s.delete(d2)[ FD ]
Line_4 $$ Session s = openSession()-->Line_47 $$ s = openSession()[ FD ]
Line_22 $$ l = s.createQuery("from E e join fetch e.reverse").list()-->Line_32 $$ e = (E) l.get(1)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_51 $$ t.commit()[ FD ]
Line_26 $$ s = openSession()-->Line_47 $$ s = openSession()[ FD ]
Line_19 $$ t = s.beginTransaction()-->Line_51 $$ t.commit()[ FD ]
Line_36 $$ s = openSession()-->Line_47 $$ s = openSession()[ FD ]
Line_47 $$ s = openSession()-->Line_48 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ A a = new A()-->Line_20 $$ List l = s.createQuery("from E e, A a where e.reverse = a.forward and a = ?").setEntity(0, a).list()[ FD ]
Line_30 $$ E e = (E) l.get(0)-->Line_32 $$ e = (E) l.get(1)[ FD ]
Line_6 $$ A a = new A()-->Line_11 $$ d1.setReverse(a)[ FD ]
Line_38 $$ a = (A) s.load(A.class, aid)-->Line_42 $$ s.delete(a)[ FD ]
Line_4 $$ Session s = openSession()-->Line_22 $$ l = s.createQuery("from E e join fetch e.reverse").list()[ FD ]
Line_20 $$ List l = s.createQuery("from E e, A a where e.reverse = a.forward and a = ?").setEntity(0, a).list()-->Line_22 $$ l = s.createQuery("from E e join fetch e.reverse").list()[ FD ]
Line_36 $$ s = openSession()-->Line_52 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_28 $$ l = s.createQuery("from E e").list()[ FD ]
Line_20 $$ List l = s.createQuery("from E e, A a where e.reverse = a.forward and a = ?").setEntity(0, a).list()-->Line_29 $$ assertTrue(l.size() == 2)[ FD ]
Line_39 $$ d2 = (E) s.load(E.class, d2id)-->Line_41 $$ assertTrue(d2 == d2.getReverse().getForward())[ FD ]
Line_6 $$ A a = new A()-->Line_10 $$ a.setForward(d1)[ FD ]
Line_7 $$ E d1 = new E()-->Line_11 $$ d1.setReverse(a)[ FD ]
Line_26 $$ s = openSession()-->Line_48 $$ t = s.beginTransaction()[ FD ]
Line_18 $$ s = openSession()-->Line_43 $$ s.delete(a.getForward())[ FD ]
Line_18 $$ s = openSession()-->Line_25 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_35 $$ s.close()[ FD ]
Line_22 $$ l = s.createQuery("from E e join fetch e.reverse").list()-->Line_49 $$ l = s.createQuery("from E e").list()[ FD ]
Line_36 $$ s = openSession()-->Line_49 $$ l = s.createQuery("from E e").list()[ FD ]
Line_27 $$ t = s.beginTransaction()-->Line_34 $$ t.commit()[ FD ]
Line_26 $$ s = openSession()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_34 $$ t.commit()[ FD ]
Line_18 $$ s = openSession()-->Line_39 $$ d2 = (E) s.load(E.class, d2id)[ FD ]
Line_26 $$ s = openSession()-->Line_42 $$ s.delete(a)[ FD ]
Line_4 $$ Session s = openSession()-->Line_38 $$ a = (A) s.load(A.class, aid)[ FD ]
Line_6 $$ A a = new A()-->Line_40 $$ assertTrue(a == a.getForward().getReverse())[ FD ]
Line_36 $$ s = openSession()-->Line_39 $$ d2 = (E) s.load(E.class, d2id)[ FD ]
Line_4 $$ Session s = openSession()-->Line_44 $$ s.delete(d2)[ FD ]
Line_26 $$ s = openSession()-->Line_37 $$ t = s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_20 $$ List l = s.createQuery("from E e, A a where e.reverse = a.forward and a = ?").setEntity(0, a).list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_48 $$ t = s.beginTransaction()[ FD ]
Line_32 $$ e = (E) l.get(1)-->Line_33 $$ assertTrue(e == e.getReverse().getForward())[ FD ]
Line_4 $$ Session s = openSession()-->Line_14 $$ Serializable aid = s.save(a)[ FD ]
Line_6 $$ A a = new A()-->Line_38 $$ a = (A) s.load(A.class, aid)[ FD ]
Line_36 $$ s = openSession()-->Line_43 $$ s.delete(a.getForward())[ FD ]
Line_4 $$ Session s = openSession()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_9 $$ E d2 = new E()-->Line_12 $$ c.setForward(d2)[ FD ]
Line_20 $$ List l = s.createQuery("from E e, A a where e.reverse = a.forward and a = ?").setEntity(0, a).list()-->Line_30 $$ E e = (E) l.get(0)[ FD ]
Line_18 $$ s = openSession()-->Line_35 $$ s.close()[ FD ]
Line_39 $$ d2 = (E) s.load(E.class, d2id)-->Line_45 $$ s.delete(d2.getReverse())[ FD ]
Line_37 $$ t = s.beginTransaction()-->Line_48 $$ t = s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_52 $$ s.close()[ FD ]
Line_18 $$ s = openSession()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_36 $$ s = openSession()-->Line_38 $$ a = (A) s.load(A.class, aid)[ FD ]
Line_27 $$ t = s.beginTransaction()-->Line_37 $$ t = s.beginTransaction()[ FD ]
Line_30 $$ E e = (E) l.get(0)-->Line_31 $$ assertTrue(e == e.getReverse().getForward())[ FD ]
Line_18 $$ s = openSession()-->Line_49 $$ l = s.createQuery("from E e").list()[ FD ]
Line_26 $$ s = openSession()-->Line_38 $$ a = (A) s.load(A.class, aid)[ FD ]
Line_37 $$ t = s.beginTransaction()-->Line_51 $$ t.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_36 $$ s = openSession()[ FD ]
Line_19 $$ t = s.beginTransaction()-->Line_24 $$ t.commit()[ FD ]
Line_20 $$ List l = s.createQuery("from E e, A a where e.reverse = a.forward and a = ?").setEntity(0, a).list()-->Line_32 $$ e = (E) l.get(1)[ FD ]
Line_26 $$ s = openSession()-->Line_44 $$ s.delete(d2)[ FD ]
Line_26 $$ s = openSession()-->Line_52 $$ s.close()[ FD ]
Line_22 $$ l = s.createQuery("from E e join fetch e.reverse").list()-->Line_50 $$ assertTrue(l.size() == 0)[ FD ]
Line_36 $$ s = openSession()-->Line_48 $$ t = s.beginTransaction()[ FD ]
Line_47 $$ s = openSession()-->Line_49 $$ l = s.createQuery("from E e").list()[ FD ]
Line_18 $$ s = openSession()-->Line_42 $$ s.delete(a)[ FD ]
Line_28 $$ l = s.createQuery("from E e").list()-->Line_30 $$ E e = (E) l.get(0)[ FD ]
Line_28 $$ l = s.createQuery("from E e").list()-->Line_29 $$ assertTrue(l.size() == 2)[ FD ]
Line_18 $$ s = openSession()-->Line_47 $$ s = openSession()[ FD ]
Line_18 $$ s = openSession()-->Line_19 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_24 $$ t.commit()[ FD ]
Line_47 $$ s = openSession()-->Line_52 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_42 $$ s.delete(a)[ FD ]
Line_18 $$ s = openSession()-->Line_26 $$ s = openSession()[ FD ]
Line_18 $$ s = openSession()-->Line_37 $$ t = s.beginTransaction()[ FD ]
Line_36 $$ s = openSession()-->Line_44 $$ s.delete(d2)[ FD ]
Line_30 $$ E e = (E) l.get(0)-->Line_33 $$ assertTrue(e == e.getReverse().getForward())[ FD ]
Line_26 $$ s = openSession()-->Line_39 $$ d2 = (E) s.load(E.class, d2id)[ FD ]
Line_9 $$ E d2 = new E()-->Line_44 $$ s.delete(d2)[ FD ]
Line_37 $$ t = s.beginTransaction()-->Line_46 $$ t.commit()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_19 $$ t = s.beginTransaction()[ FD ]
Line_49 $$ l = s.createQuery("from E e").list()-->Line_50 $$ assertTrue(l.size() == 0)[ FD ]
Line_4 $$ Session s = openSession()-->Line_18 $$ s = openSession()[ FD ]
Line_38 $$ a = (A) s.load(A.class, aid)-->Line_43 $$ s.delete(a.getForward())[ FD ]
Line_6 $$ A a = new A()-->Line_43 $$ s.delete(a.getForward())[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_46 $$ t.commit()[ FD ]
Line_26 $$ s = openSession()-->Line_45 $$ s.delete(d2.getReverse())[ FD ]
Line_7 $$ E d1 = new E()-->Line_10 $$ a.setForward(d1)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_9 $$ E d2 = new E()-->Line_39 $$ d2 = (E) s.load(E.class, d2id)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_48 $$ t = s.beginTransaction()[ FD ]
Line_20 $$ List l = s.createQuery("from E e, A a where e.reverse = a.forward and a = ?").setEntity(0, a).list()-->Line_28 $$ l = s.createQuery("from E e").list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_39 $$ d2 = (E) s.load(E.class, d2id)[ FD ]
Line_9 $$ E d2 = new E()-->Line_45 $$ s.delete(d2.getReverse())[ FD ]
Line_28 $$ l = s.createQuery("from E e").list()-->Line_32 $$ e = (E) l.get(1)[ FD ]
Line_9 $$ E d2 = new E()-->Line_15 $$ Serializable d2id = s.save(d2)[ FD ]
Line_4 $$ Session s = openSession()-->Line_37 $$ t = s.beginTransaction()[ FD ]
Line_36 $$ s = openSession()-->Line_45 $$ s.delete(d2.getReverse())[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_16 $$ t.commit()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_37 $$ t = s.beginTransaction()[ FD ]
Line_18 $$ s = openSession()-->Line_28 $$ l = s.createQuery("from E e").list()[ FD ]
Line_20 $$ List l = s.createQuery("from E e, A a where e.reverse = a.forward and a = ?").setEntity(0, a).list()-->Line_21 $$ assertTrue(l.size() == 1)[ FD ]
Line_8 $$ C1 c = new C1()-->Line_13 $$ d2.setReverse(c)[ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ Transaction t = s.beginTransaction()[ FD ]
Line_26 $$ s = openSession()-->Line_43 $$ s.delete(a.getForward())[ FD ]
Line_19 $$ t = s.beginTransaction()-->Line_34 $$ t.commit()[ FD ]
Line_27 $$ t = s.beginTransaction()-->Line_51 $$ t.commit()[ FD ]
Line_18 $$ s = openSession()-->Line_36 $$ s = openSession()[ FD ]
Line_36 $$ s = openSession()-->Line_42 $$ s.delete(a)[ FD ]
Line_18 $$ s = openSession()-->Line_38 $$ a = (A) s.load(A.class, aid)[ FD ]
Line_20 $$ List l = s.createQuery("from E e, A a where e.reverse = a.forward and a = ?").setEntity(0, a).list()-->Line_50 $$ assertTrue(l.size() == 0)[ FD ]
Line_18 $$ s = openSession()-->Line_48 $$ t = s.beginTransaction()[ FD ]
Line_20 $$ List l = s.createQuery("from E e, A a where e.reverse = a.forward and a = ?").setEntity(0, a).list()-->Line_23 $$ assertTrue(l.size() == 2)[ FD ]
Line_9 $$ E d2 = new E()-->Line_41 $$ assertTrue(d2 == d2.getReverse().getForward())[ FD ]
Line_4 $$ Session s = openSession()-->Line_49 $$ l = s.createQuery("from E e").list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_45 $$ s.delete(d2.getReverse())[ FD ]
Line_19 $$ t = s.beginTransaction()-->Line_48 $$ t = s.beginTransaction()[ FD ]
Line_15 $$ Serializable d2id = s.save(d2)-->Line_39 $$ d2 = (E) s.load(E.class, d2id)[ FD ]
Line_19 $$ t = s.beginTransaction()-->Line_46 $$ t.commit()[ FD ]
Line_9 $$ E d2 = new E()-->Line_13 $$ d2.setReverse(c)[ FD ]
Line_4 $$ Session s = openSession()-->Line_15 $$ Serializable d2id = s.save(d2)[ FD ]
Line_6 $$ A a = new A()-->Line_14 $$ Serializable aid = s.save(a)[ FD ]
Line_4 $$ Session s = openSession()-->Line_26 $$ s = openSession()[ FD ]
Line_19 $$ t = s.beginTransaction()-->Line_37 $$ t = s.beginTransaction()[ FD ]
Line_26 $$ s = openSession()-->Line_49 $$ l = s.createQuery("from E e").list()[ FD ]
Line_18 $$ s = openSession()-->Line_22 $$ l = s.createQuery("from E e join fetch e.reverse").list()[ FD ]
Line_18 $$ s = openSession()-->Line_52 $$ s.close()[ FD ]
Line_14 $$ Serializable aid = s.save(a)-->Line_38 $$ a = (A) s.load(A.class, aid)[ FD ]
Line_28 $$ l = s.createQuery("from E e").list()-->Line_50 $$ assertTrue(l.size() == 0)[ FD ]
Line_4 $$ Session s = openSession()-->Line_19 $$ t = s.beginTransaction()[ FD ]
Line_18 $$ s = openSession()-->Line_20 $$ List l = s.createQuery("from E e, A a where e.reverse = a.forward and a = ?").setEntity(0, a).list()[ FD ]
Line_39 $$ d2 = (E) s.load(E.class, d2id)-->Line_44 $$ s.delete(d2)[ FD ]
Line_4 $$ Session s = openSession()-->Line_25 $$ s.close()[ FD ]
Line_22 $$ l = s.createQuery("from E e join fetch e.reverse").list()-->Line_30 $$ E e = (E) l.get(0)[ FD ]
Line_4 $$ Session s = openSession()-->Line_43 $$ s.delete(a.getForward())[ FD ]
Line_20 $$ List l = s.createQuery("from E e, A a where e.reverse = a.forward and a = ?").setEntity(0, a).list()-->Line_49 $$ l = s.createQuery("from E e").list()[ FD ]
Line_27 $$ t = s.beginTransaction()-->Line_48 $$ t = s.beginTransaction()[ FD ]
