Line_8 $$ final MyElement child = element.addChildElement()-->Line_12 $$ final DomElement element1 = child.getAttr()[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_4 $$ assertEquals(1, element.getChildElements().size())[ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_18 $$ final XmlTag newChildTag = element.getXmlTag().findSubTags("child-element")[1][ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_30 $$ final DomElement element6 = lastChild.isGenericValue()[ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_33 $$ assertCached(firstChild, firstChildTag)[ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_39 $$ assertSame(childTag, element.getXmlTag().findSubTags("child-element")[2])[ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_11 $$ putExpected(new DomEvent(element, false))[ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_25 $$ assertEquals(Arrays.asList(firstChild, newChild, child, lastChild), element.getChildElements())[ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_13 $$ putExpected(new DomEvent(element1, true))[ CD ]
Line_5 $$ final MyElement firstChild = element.getChildElements().get(0)-->Line_17 $$ assertEquals(Arrays.asList(firstChild, newChild, child), element.getChildElements())[ FD ]
Line_10 $$ final XmlTag childTag = element.getXmlTag().findSubTags("child-element")[1]-->Line_35 $$ assertCached(child, childTag)[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_32 $$ assertResultsAndClear()[ CD ]
Line_8 $$ final MyElement child = element.addChildElement()-->Line_14 $$ final DomElement element2 = child.isGenericValue()[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_19 $$ putExpected(new DomEvent(element, false))[ CD ]
Line_5 $$ final MyElement firstChild = element.getChildElements().get(0)-->Line_25 $$ assertEquals(Arrays.asList(firstChild, newChild, child, lastChild), element.getChildElements())[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_21 $$ putExpected(new DomEvent(element3, true))[ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_7 $$ assertCached(firstChild, firstChildTag)[ CD ]
Line_10 $$ final XmlTag childTag = element.getXmlTag().findSubTags("child-element")[1]-->Line_39 $$ assertSame(childTag, element.getXmlTag().findSubTags("child-element")[2])[ FD ]
Line_8 $$ final MyElement child = element.addChildElement()-->Line_9 $$ assertEquals(Arrays.asList(firstChild, child), element.getChildElements())[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_40 $$ assertSame(lastChildTag, element.getXmlTag().findSubTags("child-element")[3])[ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_23 $$ putExpected(new DomEvent(element4, true))[ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_28 $$ final DomElement element5 = lastChild.getAttr()[ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_22 $$ final DomElement element4 = newChild.isGenericValue()[ CD ]
Line_8 $$ final MyElement child = element.addChildElement()-->Line_25 $$ assertEquals(Arrays.asList(firstChild, newChild, child, lastChild), element.getChildElements())[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_16 $$ final MyElement newChild = element.addChildElement(1)[ CD ]
Line_3 $$ final MyElement element = createElement("<a><child-element/></a>")-->Line_10 $$ final XmlTag childTag = element.getXmlTag().findSubTags("child-element")[1][ FD ]
Line_16 $$ final MyElement newChild = element.addChildElement(1)-->Line_25 $$ assertEquals(Arrays.asList(firstChild, newChild, child, lastChild), element.getChildElements())[ FD ]
Line_3 $$ final MyElement element = createElement("<a><child-element/></a>")-->Line_8 $$ final MyElement child = element.addChildElement()[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_10 $$ final XmlTag childTag = element.getXmlTag().findSubTags("child-element")[1][ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_8 $$ final MyElement child = element.addChildElement()[ CD ]
Line_24 $$ final MyElement lastChild = element.addChildElement(239)-->Line_30 $$ final DomElement element6 = lastChild.isGenericValue()[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_20 $$ final DomElement element3 = newChild.getAttr()[ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_26 $$ final XmlTag lastChildTag = element.getXmlTag().findSubTags("child-element")[3][ CD ]
Line_3 $$ final MyElement element = createElement("<a><child-element/></a>")-->Line_4 $$ assertEquals(1, element.getChildElements().size())[ FD ]
Line_26 $$ final XmlTag lastChildTag = element.getXmlTag().findSubTags("child-element")[3]-->Line_40 $$ assertSame(lastChildTag, element.getXmlTag().findSubTags("child-element")[3])[ FD ]
Line_8 $$ final MyElement child = element.addChildElement()-->Line_17 $$ assertEquals(Arrays.asList(firstChild, newChild, child), element.getChildElements())[ FD ]
Line_3 $$ final MyElement element = createElement("<a><child-element/></a>")-->Line_25 $$ assertEquals(Arrays.asList(firstChild, newChild, child, lastChild), element.getChildElements())[ FD ]
Line_3 $$ final MyElement element = createElement("<a><child-element/></a>")-->Line_26 $$ final XmlTag lastChildTag = element.getXmlTag().findSubTags("child-element")[3][ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_15 $$ putExpected(new DomEvent(element2, true))[ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_9 $$ assertEquals(Arrays.asList(firstChild, child), element.getChildElements())[ CD ]
Line_3 $$ final MyElement element = createElement("<a><child-element/></a>")-->Line_17 $$ assertEquals(Arrays.asList(firstChild, newChild, child), element.getChildElements())[ FD ]
Line_6 $$ final XmlTag firstChildTag = element.getXmlTag().findSubTags("child-element")[0]-->Line_37 $$ assertSame(firstChildTag, element.getXmlTag().findSubTags("child-element")[0])[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_24 $$ final MyElement lastChild = element.addChildElement(239)[ CD ]
Line_3 $$ final MyElement element = createElement("<a><child-element/></a>")-->Line_37 $$ assertSame(firstChildTag, element.getXmlTag().findSubTags("child-element")[0])[ FD ]
Line_3 $$ final MyElement element = createElement("<a><child-element/></a>")-->Line_24 $$ final MyElement lastChild = element.addChildElement(239)[ FD ]
Line_18 $$ final XmlTag newChildTag = element.getXmlTag().findSubTags("child-element")[1]-->Line_34 $$ assertCached(newChild, newChildTag)[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_14 $$ final DomElement element2 = child.isGenericValue()[ CD ]
Line_3 $$ final MyElement element = createElement("<a><child-element/></a>")-->Line_9 $$ assertEquals(Arrays.asList(firstChild, child), element.getChildElements())[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_29 $$ putExpected(new DomEvent(element5, true))[ CD ]
Line_16 $$ final MyElement newChild = element.addChildElement(1)-->Line_20 $$ final DomElement element3 = newChild.getAttr()[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_3 $$ final MyElement element = createElement("<a><child-element/></a>")[ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_35 $$ assertCached(child, childTag)[ CD ]
Line_5 $$ final MyElement firstChild = element.getChildElements().get(0)-->Line_7 $$ assertCached(firstChild, firstChildTag)[ FD ]
Line_3 $$ final MyElement element = createElement("<a><child-element/></a>")-->Line_40 $$ assertSame(lastChildTag, element.getXmlTag().findSubTags("child-element")[3])[ FD ]
Line_3 $$ final MyElement element = createElement("<a><child-element/></a>")-->Line_5 $$ final MyElement firstChild = element.getChildElements().get(0)[ FD ]
Line_5 $$ final MyElement firstChild = element.getChildElements().get(0)-->Line_33 $$ assertCached(firstChild, firstChildTag)[ FD ]
Line_24 $$ final MyElement lastChild = element.addChildElement(239)-->Line_28 $$ final DomElement element5 = lastChild.getAttr()[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_17 $$ assertEquals(Arrays.asList(firstChild, newChild, child), element.getChildElements())[ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_12 $$ final DomElement element1 = child.getAttr()[ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_6 $$ final XmlTag firstChildTag = element.getXmlTag().findSubTags("child-element")[0][ CD ]
Line_3 $$ final MyElement element = createElement("<a><child-element/></a>")-->Line_38 $$ assertSame(newChildTag, element.getXmlTag().findSubTags("child-element")[1])[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_34 $$ assertCached(newChild, newChildTag)[ CD ]
Line_26 $$ final XmlTag lastChildTag = element.getXmlTag().findSubTags("child-element")[3]-->Line_36 $$ assertCached(lastChild, lastChildTag)[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_27 $$ putExpected(new DomEvent(element, false))[ CD ]
Line_3 $$ final MyElement element = createElement("<a><child-element/></a>")-->Line_18 $$ final XmlTag newChildTag = element.getXmlTag().findSubTags("child-element")[1][ FD ]
Line_3 $$ final MyElement element = createElement("<a><child-element/></a>")-->Line_16 $$ final MyElement newChild = element.addChildElement(1)[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_5 $$ final MyElement firstChild = element.getChildElements().get(0)[ CD ]
Line_16 $$ final MyElement newChild = element.addChildElement(1)-->Line_17 $$ assertEquals(Arrays.asList(firstChild, newChild, child), element.getChildElements())[ FD ]
Line_3 $$ final MyElement element = createElement("<a><child-element/></a>")-->Line_39 $$ assertSame(childTag, element.getXmlTag().findSubTags("child-element")[2])[ FD ]
Line_24 $$ final MyElement lastChild = element.addChildElement(239)-->Line_36 $$ assertCached(lastChild, lastChildTag)[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_37 $$ assertSame(firstChildTag, element.getXmlTag().findSubTags("child-element")[0])[ CD ]
Line_6 $$ final XmlTag firstChildTag = element.getXmlTag().findSubTags("child-element")[0]-->Line_7 $$ assertCached(firstChild, firstChildTag)[ FD ]
Line_18 $$ final XmlTag newChildTag = element.getXmlTag().findSubTags("child-element")[1]-->Line_38 $$ assertSame(newChildTag, element.getXmlTag().findSubTags("child-element")[1])[ FD ]
Line_3 $$ final MyElement element = createElement("<a><child-element/></a>")-->Line_6 $$ final XmlTag firstChildTag = element.getXmlTag().findSubTags("child-element")[0][ FD ]
Line_6 $$ final XmlTag firstChildTag = element.getXmlTag().findSubTags("child-element")[0]-->Line_33 $$ assertCached(firstChild, firstChildTag)[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_36 $$ assertCached(lastChild, lastChildTag)[ CD ]
Line_16 $$ final MyElement newChild = element.addChildElement(1)-->Line_22 $$ final DomElement element4 = newChild.isGenericValue()[ FD ]
Line_5 $$ final MyElement firstChild = element.getChildElements().get(0)-->Line_9 $$ assertEquals(Arrays.asList(firstChild, child), element.getChildElements())[ FD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_38 $$ assertSame(newChildTag, element.getXmlTag().findSubTags("child-element")[1])[ CD ]
Line_2 $$ public void testAddChild() throws Throwable -->Line_31 $$ putExpected(new DomEvent(element6, true))[ CD ]
Line_24 $$ final MyElement lastChild = element.addChildElement(239)-->Line_25 $$ assertEquals(Arrays.asList(firstChild, newChild, child, lastChild), element.getChildElements())[ FD ]
Line_8 $$ final MyElement child = element.addChildElement()-->Line_35 $$ assertCached(child, childTag)[ FD ]
Line_16 $$ final MyElement newChild = element.addChildElement(1)-->Line_34 $$ assertCached(newChild, newChildTag)[ FD ]
