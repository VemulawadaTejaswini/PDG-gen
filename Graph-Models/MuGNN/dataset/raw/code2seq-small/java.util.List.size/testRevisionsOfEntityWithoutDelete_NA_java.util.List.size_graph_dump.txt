Line_3 $$ List result = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, false, false).add(AuditEntity.id().eq(id2)).getResultList()-->Line_7 $$ assert ((Object[]) result.get(0))[2].equals(RevisionType.ADD)[ FD ]
Line_3 $$ List result = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, false, false).add(AuditEntity.id().eq(id2)).getResultList()-->Line_5 $$ assert ((Object[]) result.get(0))[0].equals(new StrIntTestEntity("b", 11, id2))[ FD ]
Line_2 $$ public void testRevisionsOfEntityWithoutDelete() -->Line_3 $$ List result = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, false, false).add(AuditEntity.id().eq(id2)).getResultList()[ CD ]
Line_3 $$ List result = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, false, false).add(AuditEntity.id().eq(id2)).getResultList()-->Line_4 $$ assert result.size() == 1[ FD ]
Line_3 $$ List result = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, false, false).add(AuditEntity.id().eq(id2)).getResultList()-->Line_6 $$ assert ((SequenceIdRevisionEntity) ((Object[]) result.get(0))[1]).getId() == 1[ FD ]
