Line_2 $$ public void testQueryModifiableScroll() -->Line_70 $$ s.close()[ CD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_33 $$ assertTrue(query.isReadOnly())[ CD ]
Line_17 $$ t = s.beginTransaction()-->Line_65 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_14 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_18 $$ s.setDefaultReadOnly(true)[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_47 $$ assertTrue(s.isDefaultReadOnly())[ CD ]
Line_40 $$ ScrollableResults sr = query.scroll(ScrollMode.FORWARD_ONLY)-->Line_50 $$ dp = (DataPoint) sr.get(0)[ FD ]
Line_17 $$ t = s.beginTransaction()-->Line_63 $$ t.commit()[ FD ]
Line_8 $$ dp = new DataPoint()-->Line_54 $$ assertFalse(s.isReadOnly(dp))[ FD ]
Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")-->Line_29 $$ assertFalse(query.isReadOnly())[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_13 $$ t.commit()[ CD ]
Line_48 $$ while (sr.next()) -->Line_56 $$ if (++i == 50) [ CD ]
Line_3 $$ Session s = openSession()-->Line_11 $$ s.save(dp)[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_64 $$ s.clear()[ CD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_5 $$ Transaction t = s.beginTransaction()[ CD ]
Line_42 $$ DataPoint dpLast = (DataPoint) s.get(DataPoint.class, dp.getId())-->Line_51 $$ if (dp.getId() == dpLast.getId()) [ FD ]
Line_3 $$ Session s = openSession()-->Line_30 $$ s.setDefaultReadOnly(true)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_63 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_42 $$ DataPoint dpLast = (DataPoint) s.get(DataPoint.class, dp.getId())[ FD ]
Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")-->Line_35 $$ assertTrue(query.isReadOnly())[ FD ]
Line_3 $$ Session s = openSession()-->Line_17 $$ t = s.beginTransaction()[ FD ]
Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")-->Line_26 $$ query.setReadOnly(false)[ FD ]
Line_15 $$ s = openSession()-->Line_39 $$ assertTrue(s.isDefaultReadOnly())[ FD ]
Line_7 $$ for (int i = 0; i < 100; i++) -->Line_56 $$ if (++i == 50) [ FD ]
Line_56 $$ if (++i == 50) -->Line_58 $$ nExpectedChanges = (dp == dpLast ? 99 : 98)[ CD ]
Line_56 $$ if (++i == 50) -->Line_57 $$ s.setReadOnly(dp, true)[ CD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_23 $$ assertFalse(query.isReadOnly())[ CD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_37 $$ assertFalse(query.isReadOnly())[ CD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_34 $$ s.setDefaultReadOnly(false)[ CD ]
Line_15 $$ s = openSession()-->Line_43 $$ assertTrue(s.isReadOnly(dpLast))[ FD ]
Line_50 $$ dp = (DataPoint) sr.get(0)-->Line_51 $$ if (dp.getId() == dpLast.getId()) [ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_43 $$ assertTrue(s.isReadOnly(dpLast))[ CD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_66 $$ List list = s.createQuery("from DataPoint where description='done!'").list()[ CD ]
Line_15 $$ s = openSession()-->Line_54 $$ assertFalse(s.isReadOnly(dp))[ FD ]
Line_15 $$ s = openSession()-->Line_52 $$ assertTrue(s.isReadOnly(dp))[ FD ]
Line_6 $$ DataPoint dp = null-->Line_57 $$ s.setReadOnly(dp, true)[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_48 $$ while (sr.next()) [ CD ]
Line_3 $$ Session s = openSession()-->Line_49 $$ assertTrue(s.isDefaultReadOnly())[ FD ]
Line_15 $$ s = openSession()-->Line_16 $$ s.setCacheMode(CacheMode.IGNORE)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_69 $$ t.commit()[ FD ]
Line_40 $$ ScrollableResults sr = query.scroll(ScrollMode.FORWARD_ONLY)-->Line_48 $$ while (sr.next()) [ FD ]
Line_3 $$ Session s = openSession()-->Line_62 $$ assertTrue(s.isDefaultReadOnly())[ FD ]
Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")-->Line_21 $$ assertTrue(query.isReadOnly())[ FD ]
Line_48 $$ while (sr.next()) -->Line_60 $$ dp.setDescription("done!")[ CD ]
Line_3 $$ Session s = openSession()-->Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")[ FD ]
Line_50 $$ dp = (DataPoint) sr.get(0)-->Line_60 $$ dp.setDescription("done!")[ FD ]
Line_3 $$ Session s = openSession()-->Line_5 $$ Transaction t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_19 $$ int i = 0[ CD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_28 $$ s.setDefaultReadOnly(false)[ CD ]
Line_6 $$ DataPoint dp = null-->Line_11 $$ s.save(dp)[ FD ]
Line_50 $$ dp = (DataPoint) sr.get(0)-->Line_54 $$ assertFalse(s.isReadOnly(dp))[ FD ]
Line_8 $$ dp = new DataPoint()-->Line_9 $$ dp.setX(new BigDecimal(i * 0.1d).setScale(19, BigDecimal.ROUND_DOWN))[ FD ]
Line_6 $$ DataPoint dp = null-->Line_60 $$ dp.setDescription("done!")[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_7 $$ for (int i = 0; i < 100; i++) [ CD ]
Line_48 $$ while (sr.next()) -->Line_49 $$ assertTrue(s.isDefaultReadOnly())[ CD ]
Line_3 $$ Session s = openSession()-->Line_57 $$ s.setReadOnly(dp, true)[ FD ]
Line_15 $$ s = openSession()-->Line_49 $$ assertTrue(s.isDefaultReadOnly())[ FD ]
Line_15 $$ s = openSession()-->Line_17 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_30 $$ s.setDefaultReadOnly(true)[ CD ]
Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")-->Line_40 $$ ScrollableResults sr = query.scroll(ScrollMode.FORWARD_ONLY)[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_68 $$ s.createQuery("delete from DataPoint").executeUpdate()[ CD ]
Line_15 $$ s = openSession()-->Line_57 $$ s.setReadOnly(dp, true)[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_27 $$ assertFalse(query.isReadOnly())[ CD ]
Line_3 $$ Session s = openSession()-->Line_15 $$ s = openSession()[ FD ]
Line_51 $$ if (dp.getId() == dpLast.getId()) -->Line_52 $$ assertTrue(s.isReadOnly(dp))[ CD ]
Line_3 $$ Session s = openSession()-->Line_24 $$ s.setDefaultReadOnly(true)[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_26 $$ query.setReadOnly(false)[ CD ]
Line_6 $$ DataPoint dp = null-->Line_9 $$ dp.setX(new BigDecimal(i * 0.1d).setScale(19, BigDecimal.ROUND_DOWN))[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_17 $$ t = s.beginTransaction()[ CD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_42 $$ DataPoint dpLast = (DataPoint) s.get(DataPoint.class, dp.getId())[ CD ]
Line_8 $$ dp = new DataPoint()-->Line_52 $$ assertTrue(s.isReadOnly(dp))[ FD ]
Line_8 $$ dp = new DataPoint()-->Line_42 $$ DataPoint dpLast = (DataPoint) s.get(DataPoint.class, dp.getId())[ FD ]
Line_6 $$ DataPoint dp = null-->Line_50 $$ dp = (DataPoint) sr.get(0)[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_25 $$ assertTrue(query.isReadOnly())[ CD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_17 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_31 $$ assertFalse(query.isReadOnly())[ CD ]
Line_15 $$ s = openSession()-->Line_24 $$ s.setDefaultReadOnly(true)[ FD ]
Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")-->Line_45 $$ assertTrue(query.isReadOnly())[ FD ]
Line_46 $$ int nExpectedChanges = 0-->Line_58 $$ nExpectedChanges = (dp == dpLast ? 99 : 98)[ FD ]
Line_7 $$ for (int i = 0; i < 100; i++) -->Line_11 $$ s.save(dp)[ CD ]
Line_65 $$ t = s.beginTransaction()-->Line_69 $$ t.commit()[ FD ]
Line_7 $$ for (int i = 0; i < 100; i++) -->Line_8 $$ dp = new DataPoint()[ CD ]
Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")-->Line_31 $$ assertFalse(query.isReadOnly())[ FD ]
Line_3 $$ Session s = openSession()-->Line_14 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_39 $$ assertTrue(s.isDefaultReadOnly())[ FD ]
Line_6 $$ DataPoint dp = null-->Line_10 $$ dp.setY(new BigDecimal(Math.cos(dp.getX().doubleValue())).setScale(19, BigDecimal.ROUND_DOWN))[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_44 $$ query.setReadOnly(true)[ CD ]
Line_3 $$ Session s = openSession()-->Line_65 $$ t = s.beginTransaction()[ FD ]
Line_15 $$ s = openSession()-->Line_28 $$ s.setDefaultReadOnly(false)[ FD ]
Line_7 $$ for (int i = 0; i < 100; i++) -->Line_10 $$ dp.setY(new BigDecimal(Math.cos(dp.getX().doubleValue())).setScale(19, BigDecimal.ROUND_DOWN))[ CD ]
Line_3 $$ Session s = openSession()-->Line_28 $$ s.setDefaultReadOnly(false)[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_35 $$ assertTrue(query.isReadOnly())[ CD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_67 $$ assertEquals(nExpectedChanges, list.size())[ CD ]
Line_3 $$ Session s = openSession()-->Line_70 $$ s.close()[ FD ]
Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")-->Line_44 $$ query.setReadOnly(true)[ FD ]
Line_3 $$ Session s = openSession()-->Line_38 $$ s.setDefaultReadOnly(true)[ FD ]
Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")-->Line_41 $$ assertFalse(query.isReadOnly())[ FD ]
Line_3 $$ Session s = openSession()-->Line_22 $$ s.setDefaultReadOnly(false)[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_46 $$ int nExpectedChanges = 0[ CD ]
Line_6 $$ DataPoint dp = null-->Line_54 $$ assertFalse(s.isReadOnly(dp))[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_29 $$ assertFalse(query.isReadOnly())[ CD ]
Line_15 $$ s = openSession()-->Line_42 $$ DataPoint dpLast = (DataPoint) s.get(DataPoint.class, dp.getId())[ FD ]
Line_15 $$ s = openSession()-->Line_47 $$ assertTrue(s.isDefaultReadOnly())[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_65 $$ t = s.beginTransaction()[ CD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_69 $$ t.commit()[ CD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_40 $$ ScrollableResults sr = query.scroll(ScrollMode.FORWARD_ONLY)[ CD ]
Line_3 $$ Session s = openSession()-->Line_43 $$ assertTrue(s.isReadOnly(dpLast))[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_45 $$ assertTrue(query.isReadOnly())[ CD ]
Line_8 $$ dp = new DataPoint()-->Line_10 $$ dp.setY(new BigDecimal(Math.cos(dp.getX().doubleValue())).setScale(19, BigDecimal.ROUND_DOWN))[ FD ]
Line_8 $$ dp = new DataPoint()-->Line_57 $$ s.setReadOnly(dp, true)[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_41 $$ assertFalse(query.isReadOnly())[ CD ]
Line_6 $$ DataPoint dp = null-->Line_8 $$ dp = new DataPoint()[ FD ]
Line_58 $$ nExpectedChanges = (dp == dpLast ? 99 : 98)-->Line_67 $$ assertEquals(nExpectedChanges, list.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_66 $$ List list = s.createQuery("from DataPoint where description='done!'").list()[ FD ]
Line_42 $$ DataPoint dpLast = (DataPoint) s.get(DataPoint.class, dp.getId())-->Line_43 $$ assertTrue(s.isReadOnly(dpLast))[ FD ]
Line_8 $$ dp = new DataPoint()-->Line_60 $$ dp.setDescription("done!")[ FD ]
Line_8 $$ dp = new DataPoint()-->Line_51 $$ if (dp.getId() == dpLast.getId()) [ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_15 $$ s = openSession()[ CD ]
Line_15 $$ s = openSession()-->Line_65 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_65 $$ t = s.beginTransaction()[ FD ]
Line_48 $$ while (sr.next()) -->Line_51 $$ if (dp.getId() == dpLast.getId()) [ CD ]
Line_15 $$ s = openSession()-->Line_66 $$ List list = s.createQuery("from DataPoint where description='done!'").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ s.setCacheMode(CacheMode.IGNORE)[ FD ]
Line_15 $$ s = openSession()-->Line_18 $$ s.setDefaultReadOnly(true)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_13 $$ t.commit()[ FD ]
Line_8 $$ dp = new DataPoint()-->Line_11 $$ s.save(dp)[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_18 $$ s.setDefaultReadOnly(true)[ CD ]
Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")-->Line_32 $$ query.setReadOnly(true)[ FD ]
Line_51 $$ if (dp.getId() == dpLast.getId()) -->Line_54 $$ assertFalse(s.isReadOnly(dp))[ CD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_24 $$ s.setDefaultReadOnly(true)[ CD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_39 $$ assertTrue(s.isDefaultReadOnly())[ CD ]
Line_50 $$ dp = (DataPoint) sr.get(0)-->Line_52 $$ assertTrue(s.isReadOnly(dp))[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")[ CD ]
Line_15 $$ s = openSession()-->Line_68 $$ s.createQuery("delete from DataPoint").executeUpdate()[ FD ]
Line_50 $$ dp = (DataPoint) sr.get(0)-->Line_57 $$ s.setReadOnly(dp, true)[ FD ]
Line_3 $$ Session s = openSession()-->Line_64 $$ s.clear()[ FD ]
Line_3 $$ Session s = openSession()-->Line_52 $$ assertTrue(s.isReadOnly(dp))[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_63 $$ t.commit()[ CD ]
Line_15 $$ s = openSession()-->Line_64 $$ s.clear()[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_36 $$ query.setReadOnly(false)[ CD ]
Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")-->Line_23 $$ assertFalse(query.isReadOnly())[ FD ]
Line_17 $$ t = s.beginTransaction()-->Line_69 $$ t.commit()[ FD ]
Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")-->Line_25 $$ assertTrue(query.isReadOnly())[ FD ]
Line_66 $$ List list = s.createQuery("from DataPoint where description='done!'").list()-->Line_67 $$ assertEquals(nExpectedChanges, list.size())[ FD ]
Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")-->Line_33 $$ assertTrue(query.isReadOnly())[ FD ]
Line_6 $$ DataPoint dp = null-->Line_51 $$ if (dp.getId() == dpLast.getId()) [ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_62 $$ assertTrue(s.isDefaultReadOnly())[ CD ]
Line_15 $$ s = openSession()-->Line_30 $$ s.setDefaultReadOnly(true)[ FD ]
Line_15 $$ s = openSession()-->Line_38 $$ s.setDefaultReadOnly(true)[ FD ]
Line_48 $$ while (sr.next()) -->Line_50 $$ dp = (DataPoint) sr.get(0)[ CD ]
Line_3 $$ Session s = openSession()-->Line_54 $$ assertFalse(s.isReadOnly(dp))[ FD ]
Line_46 $$ int nExpectedChanges = 0-->Line_67 $$ assertEquals(nExpectedChanges, list.size())[ FD ]
Line_6 $$ DataPoint dp = null-->Line_42 $$ DataPoint dpLast = (DataPoint) s.get(DataPoint.class, dp.getId())[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_6 $$ DataPoint dp = null[ CD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_3 $$ Session s = openSession()[ CD ]
Line_7 $$ for (int i = 0; i < 100; i++) -->Line_9 $$ dp.setX(new BigDecimal(i * 0.1d).setScale(19, BigDecimal.ROUND_DOWN))[ CD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_22 $$ s.setDefaultReadOnly(false)[ CD ]
Line_15 $$ s = openSession()-->Line_70 $$ s.close()[ FD ]
Line_8 $$ dp = new DataPoint()-->Line_50 $$ dp = (DataPoint) sr.get(0)[ FD ]
Line_15 $$ s = openSession()-->Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_32 $$ query.setReadOnly(true)[ CD ]
Line_15 $$ s = openSession()-->Line_34 $$ s.setDefaultReadOnly(false)[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_4 $$ s.setCacheMode(CacheMode.IGNORE)[ CD ]
Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")-->Line_27 $$ assertFalse(query.isReadOnly())[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_38 $$ s.setDefaultReadOnly(true)[ CD ]
Line_3 $$ Session s = openSession()-->Line_34 $$ s.setDefaultReadOnly(false)[ FD ]
Line_3 $$ Session s = openSession()-->Line_47 $$ assertTrue(s.isDefaultReadOnly())[ FD ]
Line_3 $$ Session s = openSession()-->Line_16 $$ s.setCacheMode(CacheMode.IGNORE)[ FD ]
Line_15 $$ s = openSession()-->Line_62 $$ assertTrue(s.isDefaultReadOnly())[ FD ]
Line_6 $$ DataPoint dp = null-->Line_52 $$ assertTrue(s.isReadOnly(dp))[ FD ]
Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")-->Line_37 $$ assertFalse(query.isReadOnly())[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_16 $$ s.setCacheMode(CacheMode.IGNORE)[ CD ]
Line_20 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")-->Line_36 $$ query.setReadOnly(false)[ FD ]
Line_3 $$ Session s = openSession()-->Line_68 $$ s.createQuery("delete from DataPoint").executeUpdate()[ FD ]
Line_19 $$ int i = 0-->Line_56 $$ if (++i == 50) [ FD ]
Line_15 $$ s = openSession()-->Line_22 $$ s.setDefaultReadOnly(false)[ FD ]
Line_2 $$ public void testQueryModifiableScroll() -->Line_21 $$ assertTrue(query.isReadOnly())[ CD ]
