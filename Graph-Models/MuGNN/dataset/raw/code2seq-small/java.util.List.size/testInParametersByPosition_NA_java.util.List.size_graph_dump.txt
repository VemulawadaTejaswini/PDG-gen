Line_10 $$ Output currentOutput = procedureResult.getCurrent()-->Line_12 $$ ResultSetOutput resultSetReturn = assertTyping(ResultSetOutput.class, currentOutput)[ FD ]
Line_4 $$ Session session = openSession()-->Line_5 $$ session.beginTransaction()[ FD ]
Line_13 $$ List results = resultSetReturn.getResultList()-->Line_14 $$ assertEquals(1, results.size())[ FD ]
Line_13 $$ List results = resultSetReturn.getResultList()-->Line_15 $$ Object result = results.get(0)[ FD ]
Line_4 $$ Session session = openSession()-->Line_21 $$ session.getTransaction().commit()[ FD ]
Line_18 $$ String name = (String) ((Object[]) result)[1]-->Line_20 $$ assertEquals("User 1", name)[ FD ]
Line_10 $$ Output currentOutput = procedureResult.getCurrent()-->Line_11 $$ assertNotNull(currentOutput)[ FD ]
Line_6 $$ ProcedureCall query = session.createStoredProcedureCall("findUserRange")-->Line_9 $$ ProcedureOutputs procedureResult = query.getOutputs()[ FD ]
Line_4 $$ Session session = openSession()-->Line_22 $$ session.close()[ FD ]
Line_9 $$ ProcedureOutputs procedureResult = query.getOutputs()-->Line_10 $$ Output currentOutput = procedureResult.getCurrent()[ FD ]
Line_6 $$ ProcedureCall query = session.createStoredProcedureCall("findUserRange")-->Line_7 $$ query.registerParameter(1, Integer.class, ParameterMode.IN).bindValue(1)[ FD ]
Line_12 $$ ResultSetOutput resultSetReturn = assertTyping(ResultSetOutput.class, currentOutput)-->Line_13 $$ List results = resultSetReturn.getResultList()[ FD ]
Line_15 $$ Object result = results.get(0)-->Line_16 $$ assertTyping(Object[].class, result)[ FD ]
Line_6 $$ ProcedureCall query = session.createStoredProcedureCall("findUserRange")-->Line_8 $$ query.registerParameter(2, Integer.class, ParameterMode.IN).bindValue(2)[ FD ]
Line_4 $$ Session session = openSession()-->Line_6 $$ ProcedureCall query = session.createStoredProcedureCall("findUserRange")[ FD ]
