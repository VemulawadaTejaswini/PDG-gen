Line_3 $$ myTableModel = new AbstractTableModel() -->Line_33 $$ return myModel.isEditable(columnIndex)[ FD ]
Line_41 $$ new DoubleClickListener() -->Line_46 $$ return true[ CD ]
Line_3 $$ myTableModel = new AbstractTableModel() -->Line_14 $$ return myModel.getColumnClass(columnIndex)[ CD ]
Line_2 $$ private void initTable() -->Line_36 $$ myTable = createTable()[ CD ]
Line_3 $$ myTableModel = new AbstractTableModel() -->Line_6 $$ return myModel.getColumnCount()[ CD ]
Line_3 $$ myTableModel = new AbstractTableModel() -->Line_28 $$ fireTableRowsUpdated(rowIndex, rowIndex)[ FD ]
Line_3 $$ myTableModel = new AbstractTableModel() -->Line_14 $$ return myModel.getColumnClass(columnIndex)[ FD ]
Line_3 $$ myTableModel = new AbstractTableModel() -->Line_22 $$ return myModel.getField(myData.get(rowIndex), columnIndex)[ FD ]
Line_2 $$ private void initTable() -->Line_38 $$ myTable.setShowColumns(false)[ CD ]
Line_2 $$ private void initTable() -->Line_40 $$ myTable.setStriped(true)[ CD ]
Line_3 $$ myTableModel = new AbstractTableModel() -->Line_10 $$ return myData != null ? myData.size() : 0[ CD ]
Line_3 $$ myTableModel = new AbstractTableModel() -->Line_18 $$ return myModel.getColumnName(column)[ FD ]
Line_2 $$ private void initTable() -->Line_39 $$ myTable.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION)[ CD ]
Line_2 $$ private void initTable() -->Line_41 $$ new DoubleClickListener() [ CD ]
Line_2 $$ private void initTable() -->Line_37 $$ myTable.setModel(myTableModel)[ CD ]
Line_3 $$ myTableModel = new AbstractTableModel() -->Line_27 $$ myModel.setValue(aValue, myData.get(rowIndex), columnIndex)[ CD ]
Line_3 $$ myTableModel = new AbstractTableModel() -->Line_22 $$ return myModel.getField(myData.get(rowIndex), columnIndex)[ CD ]
Line_3 $$ myTableModel = new AbstractTableModel() -->Line_27 $$ myModel.setValue(aValue, myData.get(rowIndex), columnIndex)[ FD ]
Line_41 $$ new DoubleClickListener() -->Line_45 $$ doEdit()[ CD ]
Line_3 $$ myTableModel = new AbstractTableModel() -->Line_28 $$ fireTableRowsUpdated(rowIndex, rowIndex)[ CD ]
Line_3 $$ myTableModel = new AbstractTableModel() -->Line_18 $$ return myModel.getColumnName(column)[ CD ]
Line_3 $$ myTableModel = new AbstractTableModel() -->Line_33 $$ return myModel.isEditable(columnIndex)[ CD ]
