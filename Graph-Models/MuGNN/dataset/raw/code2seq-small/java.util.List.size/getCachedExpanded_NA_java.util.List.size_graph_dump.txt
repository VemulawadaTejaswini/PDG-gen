Line_8 $$ for (; myIndex[index] < ranges.size(); myIndex[index]++) -->Line_13 $$ if (lineRange.contains(start, end)) [ CD ]
Line_8 $$ for (; myIndex[index] < ranges.size(); myIndex[index]++) -->Line_9 $$ FoldedRangeState range = ranges.get(myIndex[index])[ CD ]
Line_9 $$ FoldedRangeState range = ranges.get(myIndex[index])-->Line_10 $$ LineRange lineRange = range.getLineRange()[ FD ]
Line_13 $$ if (lineRange.contains(start, end)) -->Line_14 $$ if (range.collapsed != null && range.collapsed.contains(start, end))[ CD ]
Line_14 $$ if (range.collapsed != null && range.collapsed.contains(start, end))-->Line_15 $$ return false[ CD ]
Line_4 $$ if (start == end)-->Line_5 $$ return null[ CD ]
Line_8 $$ for (; myIndex[index] < ranges.size(); myIndex[index]++) -->Line_11 $$ if (lineRange.end <= start)[ CD ]
Line_13 $$ if (lineRange.contains(start, end)) -->Line_16 $$ if (range.expanded != null && range.expanded.contains(start, end))[ CD ]
Line_16 $$ if (range.expanded != null && range.expanded.contains(start, end))-->Line_17 $$ return true[ CD ]
Line_10 $$ LineRange lineRange = range.getLineRange()-->Line_13 $$ if (lineRange.contains(start, end)) [ FD ]
Line_8 $$ for (; myIndex[index] < ranges.size(); myIndex[index]++) -->Line_10 $$ LineRange lineRange = range.getLineRange()[ CD ]
