Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_4 $$ String internalName = targetType.getInternalName()[ CD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_40 $$ rewriteGetProxyMethodSignaturesMethodNode(classNode, methodsBag.proxyMethodSignatures)[ CD ]
Line_14 $$ MethodNodeGenerator methodNodeGenerator = new MethodNodeGenerator(doDispatchMethodNode)-->Line_28 $$ int indexIndex = methodNodeGenerator.newLocal(Type.INT_TYPE)[ FD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_41 $$ return (Class<? extends IntrabandProxySkeleton>) toClass(classNode, classLoader)[ CD ]
Line_14 $$ MethodNodeGenerator methodNodeGenerator = new MethodNodeGenerator(doDispatchMethodNode)-->Line_37 $$ methodNodeGenerator.tableSwitch(keys, new SkeletonDispatchTableSwitchGenerator(methodNodeGenerator, proxyMethods, classNode.name, typedTargetIndex, indexIndex), true)[ FD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_3 $$ Type targetType = Type.getType(clazz)[ CD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_38 $$ methodNodeGenerator.returnValue()[ CD ]
Line_3 $$ Type targetType = Type.getType(clazz)-->Line_22 $$ int typedTargetIndex = methodNodeGenerator.newLocal(targetType)[ FD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_22 $$ int typedTargetIndex = methodNodeGenerator.newLocal(targetType)[ CD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_18 $$ methodNodeGenerator.loadArg(2)[ CD ]
Line_14 $$ MethodNodeGenerator methodNodeGenerator = new MethodNodeGenerator(doDispatchMethodNode)-->Line_38 $$ methodNodeGenerator.returnValue()[ FD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_7 $$ classNode.access |= Opcodes.ACC_PUBLIC[ CD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_20 $$ methodNodeGenerator.invokeInterface(_TARGET_LOCATOR_TYPE.getInternalName(), "getTarget", _OBJECT_TYPE, _STRING_TYPE)[ CD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_21 $$ methodNodeGenerator.checkCast(targetType)[ CD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_12 $$ MethodNode doDispatchMethodNode = ASMUtil.findMethodNode(classNode.methods, "doDispatch", Type.VOID_TYPE, _REGISTRATION_REFERENCE_TYPE, _DATAGRAM_TYPE, _DESERIALIZER_TYPE)[ CD ]
Line_14 $$ MethodNodeGenerator methodNodeGenerator = new MethodNodeGenerator(doDispatchMethodNode)-->Line_22 $$ int typedTargetIndex = methodNodeGenerator.newLocal(targetType)[ FD ]
Line_32 $$ List<Method> proxyMethods = methodsBag.proxyMethods-->Line_33 $$ int[] keys = new int[proxyMethods.size()][ FD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_11 $$ targetLocatorFieldNode.access |= Opcodes.ACC_FINAL[ CD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_34 $$ for (int i = 0; i < keys.length; i++) [ CD ]
Line_33 $$ int[] keys = new int[proxyMethods.size()]-->Line_37 $$ methodNodeGenerator.tableSwitch(keys, new SkeletonDispatchTableSwitchGenerator(methodNodeGenerator, proxyMethods, classNode.name, typedTargetIndex, indexIndex), true)[ FD ]
Line_14 $$ MethodNodeGenerator methodNodeGenerator = new MethodNodeGenerator(doDispatchMethodNode)-->Line_23 $$ methodNodeGenerator.storeLocal(typedTargetIndex)[ FD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_29 $$ methodNodeGenerator.storeLocal(indexIndex)[ CD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_17 $$ methodNodeGenerator.getField(Type.getObjectType(classNode.name), "_targetLocator", _TARGET_LOCATOR_TYPE)[ CD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_14 $$ MethodNodeGenerator methodNodeGenerator = new MethodNodeGenerator(doDispatchMethodNode)[ CD ]
Line_14 $$ MethodNodeGenerator methodNodeGenerator = new MethodNodeGenerator(doDispatchMethodNode)-->Line_29 $$ methodNodeGenerator.storeLocal(indexIndex)[ FD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_27 $$ methodNodeGenerator.dup()[ CD ]
Line_5 $$ ClassNode classNode = ASMUtil.loadAndRename(TemplateSkeleton.class, internalName.concat(SKELETON_POSTFIX))-->Line_40 $$ rewriteGetProxyMethodSignaturesMethodNode(classNode, methodsBag.proxyMethodSignatures)[ FD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_26 $$ deserializerRead(methodNodeGenerator, Type.INT_TYPE)[ CD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_10 $$ FieldNode targetLocatorFieldNode = ASMUtil.findFieldNode(classNode.fields, "_targetLocator")[ CD ]
Line_3 $$ Type targetType = Type.getType(clazz)-->Line_21 $$ methodNodeGenerator.checkCast(targetType)[ FD ]
Line_14 $$ MethodNodeGenerator methodNodeGenerator = new MethodNodeGenerator(doDispatchMethodNode)-->Line_18 $$ methodNodeGenerator.loadArg(2)[ FD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_13 $$ doDispatchMethodNode.access &= ~Opcodes.ACC_ABSTRACT[ CD ]
Line_14 $$ MethodNodeGenerator methodNodeGenerator = new MethodNodeGenerator(doDispatchMethodNode)-->Line_27 $$ methodNodeGenerator.dup()[ FD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_41 $$ return (Class<? extends IntrabandProxySkeleton>) toClass(classNode, classLoader)[ FD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_5 $$ ClassNode classNode = ASMUtil.loadAndRename(TemplateSkeleton.class, internalName.concat(SKELETON_POSTFIX))[ CD ]
Line_14 $$ MethodNodeGenerator methodNodeGenerator = new MethodNodeGenerator(doDispatchMethodNode)-->Line_20 $$ methodNodeGenerator.invokeInterface(_TARGET_LOCATOR_TYPE.getInternalName(), "getTarget", _OBJECT_TYPE, _STRING_TYPE)[ FD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_33 $$ int[] keys = new int[proxyMethods.size()][ CD ]
Line_22 $$ int typedTargetIndex = methodNodeGenerator.newLocal(targetType)-->Line_23 $$ methodNodeGenerator.storeLocal(typedTargetIndex)[ FD ]
Line_14 $$ MethodNodeGenerator methodNodeGenerator = new MethodNodeGenerator(doDispatchMethodNode)-->Line_39 $$ methodNodeGenerator.endMethod()[ FD ]
Line_4 $$ String internalName = targetType.getInternalName()-->Line_5 $$ ClassNode classNode = ASMUtil.loadAndRename(TemplateSkeleton.class, internalName.concat(SKELETON_POSTFIX))[ FD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_8 $$ FieldNode proxyMethodsMappingFieldNode = ASMUtil.findFieldNode(classNode.fields, "_PROXY_METHODS_MAPPING")[ CD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_3 $$ Type targetType = Type.getType(clazz)[ FD ]
Line_14 $$ MethodNodeGenerator methodNodeGenerator = new MethodNodeGenerator(doDispatchMethodNode)-->Line_26 $$ deserializerRead(methodNodeGenerator, Type.INT_TYPE)[ FD ]
Line_34 $$ for (int i = 0; i < keys.length; i++) -->Line_35 $$ keys[i] = i[ FD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_6 $$ classNode.access &= ~Opcodes.ACC_ABSTRACT[ CD ]
Line_28 $$ int indexIndex = methodNodeGenerator.newLocal(Type.INT_TYPE)-->Line_29 $$ methodNodeGenerator.storeLocal(indexIndex)[ FD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_9 $$ proxyMethodsMappingFieldNode.access |= Opcodes.ACC_FINAL[ CD ]
Line_14 $$ MethodNodeGenerator methodNodeGenerator = new MethodNodeGenerator(doDispatchMethodNode)-->Line_19 $$ deserializerRead(methodNodeGenerator, _STRING_TYPE)[ FD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_32 $$ List<Method> proxyMethods = methodsBag.proxyMethods[ CD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_19 $$ deserializerRead(methodNodeGenerator, _STRING_TYPE)[ CD ]
Line_3 $$ Type targetType = Type.getType(clazz)-->Line_4 $$ String internalName = targetType.getInternalName()[ FD ]
Line_34 $$ for (int i = 0; i < keys.length; i++) -->Line_35 $$ keys[i] = i[ CD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_39 $$ methodNodeGenerator.endMethod()[ CD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_37 $$ methodNodeGenerator.tableSwitch(keys, new SkeletonDispatchTableSwitchGenerator(methodNodeGenerator, proxyMethods, classNode.name, typedTargetIndex, indexIndex), true)[ CD ]
Line_14 $$ MethodNodeGenerator methodNodeGenerator = new MethodNodeGenerator(doDispatchMethodNode)-->Line_17 $$ methodNodeGenerator.getField(Type.getObjectType(classNode.name), "_targetLocator", _TARGET_LOCATOR_TYPE)[ FD ]
Line_5 $$ ClassNode classNode = ASMUtil.loadAndRename(TemplateSkeleton.class, internalName.concat(SKELETON_POSTFIX))-->Line_41 $$ return (Class<? extends IntrabandProxySkeleton>) toClass(classNode, classLoader)[ FD ]
Line_14 $$ MethodNodeGenerator methodNodeGenerator = new MethodNodeGenerator(doDispatchMethodNode)-->Line_21 $$ methodNodeGenerator.checkCast(targetType)[ FD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_28 $$ int indexIndex = methodNodeGenerator.newLocal(Type.INT_TYPE)[ CD ]
Line_2 $$ protected static Class<? extends IntrabandProxySkeleton> generateSkeletonClass(ClassLoader classLoader, Class<?> clazz) -->Line_23 $$ methodNodeGenerator.storeLocal(typedTargetIndex)[ CD ]
