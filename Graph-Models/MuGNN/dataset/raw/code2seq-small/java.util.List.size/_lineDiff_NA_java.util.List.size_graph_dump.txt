Line_7 $$ List<String> targetList = _toList(target)-->Line_45 $$ _highlightChars(targetList, addedMarkerStart, addedMarkerEnd, difference.getAddedStart(), difference.getAddedEnd())[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_45 $$ _highlightChars(targetList, addedMarkerStart, addedMarkerEnd, difference.getAddedStart(), difference.getAddedEnd())[ FD ]
Line_50 $$ DiffResult sourceResult = new DiffResult(sourceChangedLine, _toString(sourceList))-->Line_51 $$ sourceResults.add(sourceResult)[ FD ]
Line_15 $$ for (Difference difference : differences) -->Line_17 $$ deletedChars += (difference.getDeletedEnd() - difference.getDeletedStart() + 1)[ FD ]
Line_46 $$ targetChanged = true-->Line_52 $$ if (!targetChanged) [ FD ]
Line_37 $$ if (difference.getDeletedEnd() == Difference.NONE) -->Line_40 $$ targetChanged = true[ CD ]
Line_30 $$ boolean targetChanged = false-->Line_40 $$ targetChanged = true[ FD ]
Line_37 $$ if (difference.getDeletedEnd() == Difference.NONE) -->Line_45 $$ _highlightChars(targetList, addedMarkerStart, addedMarkerEnd, difference.getAddedStart(), difference.getAddedEnd())[ CD ]
Line_29 $$ boolean sourceChanged = false-->Line_36 $$ sourceChanged = true[ FD ]
Line_15 $$ for (Difference difference : differences) -->Line_33 $$ if (difference.getAddedEnd() == Difference.NONE) [ FD ]
Line_15 $$ for (Difference difference : differences) -->Line_45 $$ _highlightChars(targetList, addedMarkerStart, addedMarkerEnd, difference.getAddedStart(), difference.getAddedEnd())[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_60 $$ sourceResults.add(sourceResult)[ FD ]
Line_40 $$ targetChanged = true-->Line_46 $$ targetChanged = true[ FD ]
Line_49 $$ if (sourceChanged) -->Line_51 $$ sourceResults.add(sourceResult)[ CD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_10 $$ int deletedChars = 0[ CD ]
Line_10 $$ int deletedChars = 0-->Line_17 $$ deletedChars += (difference.getDeletedEnd() - difference.getDeletedStart() + 1)[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_49 $$ if (sourceChanged) [ CD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_54 $$ targetResults.add(targetResult)[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_30 $$ boolean targetChanged = false[ CD ]
Line_57 $$ if (targetChanged) -->Line_58 $$ if (!sourceChanged) [ CD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_11 $$ int addedChars = 0[ CD ]
Line_33 $$ if (difference.getAddedEnd() == Difference.NONE) -->Line_36 $$ sourceChanged = true[ CD ]
Line_33 $$ if (difference.getAddedEnd() == Difference.NONE) -->Line_37 $$ if (difference.getDeletedEnd() == Difference.NONE) [ CD ]
Line_53 $$ DiffResult targetResult = new DiffResult(targetChangedLine, target)-->Line_54 $$ targetResults.add(targetResult)[ FD ]
Line_15 $$ for (Difference difference : differences) -->Line_16 $$ if (difference.getDeletedEnd() != Difference.NONE) [ FD ]
Line_50 $$ DiffResult sourceResult = new DiffResult(sourceChangedLine, _toString(sourceList))-->Line_60 $$ sourceResults.add(sourceResult)[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_4 $$ String target = targetStringList.get(targetChangedLine)[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_65 $$ return true[ CD ]
Line_8 $$ Diff diff = new Diff(sourceList, targetList)-->Line_9 $$ List<Difference> differences = diff.diff()[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_3 $$ String source = sourceStringList.get(sourceChangedLine)[ CD ]
Line_16 $$ if (difference.getDeletedEnd() != Difference.NONE) -->Line_17 $$ deletedChars += (difference.getDeletedEnd() - difference.getDeletedStart() + 1)[ CD ]
Line_37 $$ if (difference.getDeletedEnd() == Difference.NONE) -->Line_44 $$ sourceChanged = true[ CD ]
Line_40 $$ targetChanged = true-->Line_52 $$ if (!targetChanged) [ FD ]
Line_11 $$ int addedChars = 0-->Line_20 $$ addedChars += (difference.getAddedEnd() - difference.getAddedStart() + 1)[ FD ]
Line_44 $$ sourceChanged = true-->Line_58 $$ if (!sourceChanged) [ FD ]
Line_7 $$ List<String> targetList = _toList(target)-->Line_62 $$ DiffResult targetResult = new DiffResult(targetChangedLine, _toString(targetList))[ FD ]
Line_49 $$ if (sourceChanged) -->Line_50 $$ DiffResult sourceResult = new DiffResult(sourceChangedLine, _toString(sourceList))[ CD ]
Line_37 $$ if (difference.getDeletedEnd() == Difference.NONE) -->Line_46 $$ targetChanged = true[ CD ]
Line_29 $$ boolean sourceChanged = false-->Line_44 $$ sourceChanged = true[ FD ]
Line_4 $$ String target = targetStringList.get(targetChangedLine)-->Line_7 $$ List<String> targetList = _toList(target)[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_63 $$ targetResults.add(targetResult)[ FD ]
Line_30 $$ boolean targetChanged = false-->Line_52 $$ if (!targetChanged) [ FD ]
Line_36 $$ sourceChanged = true-->Line_58 $$ if (!sourceChanged) [ FD ]
Line_30 $$ boolean targetChanged = false-->Line_46 $$ targetChanged = true[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_7 $$ List<String> targetList = _toList(target)[ CD ]
Line_52 $$ if (!targetChanged) -->Line_54 $$ targetResults.add(targetResult)[ CD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_3 $$ String source = sourceStringList.get(sourceChangedLine)[ FD ]
Line_58 $$ if (!sourceChanged) -->Line_60 $$ sourceResults.add(sourceResult)[ CD ]
Line_53 $$ DiffResult targetResult = new DiffResult(targetChangedLine, target)-->Line_63 $$ targetResults.add(targetResult)[ FD ]
Line_19 $$ if (difference.getAddedEnd() != Difference.NONE) -->Line_20 $$ addedChars += (difference.getAddedEnd() - difference.getAddedStart() + 1)[ CD ]
Line_57 $$ if (targetChanged) -->Line_63 $$ targetResults.add(targetResult)[ CD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_8 $$ Diff diff = new Diff(sourceList, targetList)[ CD ]
Line_15 $$ for (Difference difference : differences) -->Line_19 $$ if (difference.getAddedEnd() != Difference.NONE) [ FD ]
Line_15 $$ for (Difference difference : differences) -->Line_37 $$ if (difference.getDeletedEnd() == Difference.NONE) [ FD ]
Line_52 $$ if (!targetChanged) -->Line_53 $$ DiffResult targetResult = new DiffResult(targetChangedLine, target)[ CD ]
Line_29 $$ boolean sourceChanged = false-->Line_58 $$ if (!sourceChanged) [ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_29 $$ boolean sourceChanged = false[ CD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_51 $$ sourceResults.add(sourceResult)[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_57 $$ if (targetChanged) [ CD ]
Line_49 $$ if (sourceChanged) -->Line_52 $$ if (!targetChanged) [ CD ]
Line_15 $$ for (Difference difference : differences) -->Line_20 $$ addedChars += (difference.getAddedEnd() - difference.getAddedStart() + 1)[ FD ]
Line_36 $$ sourceChanged = true-->Line_44 $$ sourceChanged = true[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_9 $$ List<Difference> differences = diff.diff()[ CD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_4 $$ String target = targetStringList.get(targetChangedLine)[ CD ]
