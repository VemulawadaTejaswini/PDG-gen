Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_25 $$ boolean targetChanged = false[ CD ]
Line_5 $$ List<String> sourceList = _toList(source)-->Line_41 $$ DiffResult sourceResult = new DiffResult(sourceChangedLine, _toString(sourceList))[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_36 $$ _highlightChars(targetList, addedMarkerStart, addedMarkerEnd, difference.getAddedStart(), difference.getAddedEnd())[ FD ]
Line_29 $$ sourceChanged = true-->Line_35 $$ sourceChanged = true[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_24 $$ boolean sourceChanged = false[ CD ]
Line_43 $$ if (!targetChanged) -->Line_45 $$ targetResults.add(targetResult)[ CD ]
Line_5 $$ List<String> sourceList = _toList(source)-->Line_21 $$ if ((deletedChars > (sourceList.size() / 2)) || (addedChars > (sourceList.size() / 2))) [ FD ]
Line_12 $$ for (Difference difference : differences) -->Line_30 $$ if (difference.getDeletedEnd() == Difference.NONE) [ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_10 $$ int addedChars = 0[ CD ]
Line_30 $$ if (difference.getDeletedEnd() == Difference.NONE) -->Line_32 $$ targetChanged = true[ CD ]
Line_40 $$ if (sourceChanged) -->Line_42 $$ sourceResults.add(sourceResult)[ CD ]
Line_6 $$ List<String> targetList = _toList(target)-->Line_31 $$ _highlightChars(targetList, addedMarkerStart, addedMarkerEnd, difference.getAddedStart(), difference.getAddedEnd())[ FD ]
Line_40 $$ if (sourceChanged) -->Line_41 $$ DiffResult sourceResult = new DiffResult(sourceChangedLine, _toString(sourceList))[ CD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_7 $$ Diff diff = new Diff(sourceList, targetList)[ CD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_21 $$ if ((deletedChars > (sourceList.size() / 2)) || (addedChars > (sourceList.size() / 2))) [ CD ]
Line_29 $$ sourceChanged = true-->Line_49 $$ if (!sourceChanged) [ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_3 $$ String source = sourceStringList.get(sourceChangedLine)[ FD ]
Line_12 $$ for (Difference difference : differences) -->Line_34 $$ _highlightChars(sourceList, deletedMarkerStart, deletedMarkerEnd, difference.getDeletedStart(), difference.getDeletedEnd())[ FD ]
Line_6 $$ List<String> targetList = _toList(target)-->Line_53 $$ DiffResult targetResult = new DiffResult(targetChangedLine, _toString(targetList))[ FD ]
Line_25 $$ boolean targetChanged = false-->Line_37 $$ targetChanged = true[ FD ]
Line_48 $$ if (targetChanged) -->Line_49 $$ if (!sourceChanged) [ CD ]
Line_6 $$ List<String> targetList = _toList(target)-->Line_36 $$ _highlightChars(targetList, addedMarkerStart, addedMarkerEnd, difference.getAddedStart(), difference.getAddedEnd())[ FD ]
Line_41 $$ DiffResult sourceResult = new DiffResult(sourceChangedLine, _toString(sourceList))-->Line_42 $$ sourceResults.add(sourceResult)[ FD ]
Line_27 $$ if (difference.getAddedEnd() == Difference.NONE) -->Line_29 $$ sourceChanged = true[ CD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_31 $$ _highlightChars(targetList, addedMarkerStart, addedMarkerEnd, difference.getAddedStart(), difference.getAddedEnd())[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_5 $$ List<String> sourceList = _toList(source)[ CD ]
Line_16 $$ if (difference.getAddedEnd() != Difference.NONE) -->Line_17 $$ addedChars += (difference.getAddedEnd() - difference.getAddedStart() + 1)[ CD ]
Line_12 $$ for (Difference difference : differences) -->Line_36 $$ _highlightChars(targetList, addedMarkerStart, addedMarkerEnd, difference.getAddedStart(), difference.getAddedEnd())[ FD ]
Line_21 $$ if ((deletedChars > (sourceList.size() / 2)) || (addedChars > (sourceList.size() / 2))) -->Line_22 $$ return false[ CD ]
Line_24 $$ boolean sourceChanged = false-->Line_49 $$ if (!sourceChanged) [ FD ]
Line_40 $$ if (sourceChanged) -->Line_43 $$ if (!targetChanged) [ CD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_34 $$ _highlightChars(sourceList, deletedMarkerStart, deletedMarkerEnd, difference.getDeletedStart(), difference.getDeletedEnd())[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_54 $$ targetResults.add(targetResult)[ FD ]
Line_41 $$ DiffResult sourceResult = new DiffResult(sourceChangedLine, _toString(sourceList))-->Line_51 $$ sourceResults.add(sourceResult)[ FD ]
Line_9 $$ int deletedChars = 0-->Line_14 $$ deletedChars += (difference.getDeletedEnd() - difference.getDeletedStart() + 1)[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_51 $$ sourceResults.add(sourceResult)[ FD ]
Line_13 $$ if (difference.getDeletedEnd() != Difference.NONE) -->Line_14 $$ deletedChars += (difference.getDeletedEnd() - difference.getDeletedStart() + 1)[ CD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_4 $$ String target = targetStringList.get(targetChangedLine)[ CD ]
Line_44 $$ DiffResult targetResult = new DiffResult(targetChangedLine, target)-->Line_54 $$ targetResults.add(targetResult)[ FD ]
Line_12 $$ for (Difference difference : differences) -->Line_13 $$ if (difference.getDeletedEnd() != Difference.NONE) [ FD ]
Line_12 $$ for (Difference difference : differences) -->Line_17 $$ addedChars += (difference.getAddedEnd() - difference.getAddedStart() + 1)[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_9 $$ int deletedChars = 0[ CD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_8 $$ List<Difference> differences = diff.diff()[ CD ]
Line_10 $$ int addedChars = 0-->Line_17 $$ addedChars += (difference.getAddedEnd() - difference.getAddedStart() + 1)[ FD ]
Line_5 $$ List<String> sourceList = _toList(source)-->Line_34 $$ _highlightChars(sourceList, deletedMarkerStart, deletedMarkerEnd, difference.getDeletedStart(), difference.getDeletedEnd())[ FD ]
Line_3 $$ String source = sourceStringList.get(sourceChangedLine)-->Line_5 $$ List<String> sourceList = _toList(source)[ FD ]
Line_25 $$ boolean targetChanged = false-->Line_43 $$ if (!targetChanged) [ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_45 $$ targetResults.add(targetResult)[ FD ]
Line_30 $$ if (difference.getDeletedEnd() == Difference.NONE) -->Line_37 $$ targetChanged = true[ CD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_42 $$ sourceResults.add(sourceResult)[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_11 $$ if (!aligned) [ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_11 $$ if (!aligned) [ CD ]
Line_48 $$ if (targetChanged) -->Line_54 $$ targetResults.add(targetResult)[ CD ]
Line_4 $$ String target = targetStringList.get(targetChangedLine)-->Line_6 $$ List<String> targetList = _toList(target)[ FD ]
Line_27 $$ if (difference.getAddedEnd() == Difference.NONE) -->Line_28 $$ _highlightChars(sourceList, deletedMarkerStart, deletedMarkerEnd, difference.getDeletedStart(), difference.getDeletedEnd())[ CD ]
Line_30 $$ if (difference.getDeletedEnd() == Difference.NONE) -->Line_36 $$ _highlightChars(targetList, addedMarkerStart, addedMarkerEnd, difference.getAddedStart(), difference.getAddedEnd())[ CD ]
Line_37 $$ targetChanged = true-->Line_43 $$ if (!targetChanged) [ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_3 $$ String source = sourceStringList.get(sourceChangedLine)[ CD ]
Line_43 $$ if (!targetChanged) -->Line_44 $$ DiffResult targetResult = new DiffResult(targetChangedLine, target)[ CD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_48 $$ if (targetChanged) [ CD ]
Line_5 $$ List<String> sourceList = _toList(source)-->Line_28 $$ _highlightChars(sourceList, deletedMarkerStart, deletedMarkerEnd, difference.getDeletedStart(), difference.getDeletedEnd())[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_56 $$ return true[ CD ]
Line_24 $$ boolean sourceChanged = false-->Line_35 $$ sourceChanged = true[ FD ]
Line_12 $$ for (Difference difference : differences) -->Line_28 $$ _highlightChars(sourceList, deletedMarkerStart, deletedMarkerEnd, difference.getDeletedStart(), difference.getDeletedEnd())[ FD ]
Line_35 $$ sourceChanged = true-->Line_49 $$ if (!sourceChanged) [ FD ]
Line_49 $$ if (!sourceChanged) -->Line_51 $$ sourceResults.add(sourceResult)[ CD ]
Line_24 $$ boolean sourceChanged = false-->Line_29 $$ sourceChanged = true[ FD ]
Line_7 $$ Diff diff = new Diff(sourceList, targetList)-->Line_8 $$ List<Difference> differences = diff.diff()[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_28 $$ _highlightChars(sourceList, deletedMarkerStart, deletedMarkerEnd, difference.getDeletedStart(), difference.getDeletedEnd())[ FD ]
Line_12 $$ for (Difference difference : differences) -->Line_27 $$ if (difference.getAddedEnd() == Difference.NONE) [ FD ]
Line_30 $$ if (difference.getDeletedEnd() == Difference.NONE) -->Line_35 $$ sourceChanged = true[ CD ]
Line_25 $$ boolean targetChanged = false-->Line_32 $$ targetChanged = true[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_4 $$ String target = targetStringList.get(targetChangedLine)[ FD ]
Line_30 $$ if (difference.getDeletedEnd() == Difference.NONE) -->Line_34 $$ _highlightChars(sourceList, deletedMarkerStart, deletedMarkerEnd, difference.getDeletedStart(), difference.getDeletedEnd())[ CD ]
Line_12 $$ for (Difference difference : differences) -->Line_31 $$ _highlightChars(targetList, addedMarkerStart, addedMarkerEnd, difference.getAddedStart(), difference.getAddedEnd())[ FD ]
Line_12 $$ for (Difference difference : differences) -->Line_16 $$ if (difference.getAddedEnd() != Difference.NONE) [ FD ]
Line_12 $$ for (Difference difference : differences) -->Line_14 $$ deletedChars += (difference.getDeletedEnd() - difference.getDeletedStart() + 1)[ FD ]
Line_32 $$ targetChanged = true-->Line_37 $$ targetChanged = true[ FD ]
Line_44 $$ DiffResult targetResult = new DiffResult(targetChangedLine, target)-->Line_45 $$ targetResults.add(targetResult)[ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_40 $$ if (sourceChanged) [ CD ]
Line_30 $$ if (difference.getDeletedEnd() == Difference.NONE) -->Line_31 $$ _highlightChars(targetList, addedMarkerStart, addedMarkerEnd, difference.getAddedStart(), difference.getAddedEnd())[ CD ]
Line_27 $$ if (difference.getAddedEnd() == Difference.NONE) -->Line_30 $$ if (difference.getDeletedEnd() == Difference.NONE) [ CD ]
Line_32 $$ targetChanged = true-->Line_43 $$ if (!targetChanged) [ FD ]
Line_2 $$ private static boolean _lineDiff(List<DiffResult> sourceResults, List<DiffResult> targetResults, List<String> sourceStringList, List<String> targetStringList, String addedMarkerStart, String addedMarkerEnd, String deletedMarkerStart, String deletedMarkerEnd, int sourceChangedLine, int targetChangedLine, boolean aligned) -->Line_6 $$ List<String> targetList = _toList(target)[ CD ]
