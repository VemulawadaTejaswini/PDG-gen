Line_10 $$ ModelGoal goal = queue.getFirst()-->Line_17 $$ if (goal.isAchieved()) [ FD ]
Line_10 $$ ModelGoal goal = queue.getFirst()-->Line_34 $$ boolean done = goal.calculateDependencies(goalGraph, newDependencies)[ FD ]
Line_7 $$ LinkedList<ModelGoal> queue = new LinkedList<ModelGoal>()-->Line_8 $$ queue.add(targetGoal)[ FD ]
Line_7 $$ LinkedList<ModelGoal> queue = new LinkedList<ModelGoal>()-->Line_10 $$ ModelGoal goal = queue.getFirst()[ FD ]
Line_7 $$ LinkedList<ModelGoal> queue = new LinkedList<ModelGoal>()-->Line_20 $$ queue.removeFirst()[ FD ]
Line_17 $$ if (goal.isAchieved()) -->Line_20 $$ queue.removeFirst()[ CD ]
Line_16 $$ if (goal.state == ModelGoal.State.NotSeen) -->Line_17 $$ if (goal.isAchieved()) [ CD ]
Line_24 $$ if (goal.state == ModelGoal.State.VisitingDependencies) -->Line_28 $$ queue.removeFirst()[ CD ]
Line_7 $$ LinkedList<ModelGoal> queue = new LinkedList<ModelGoal>()-->Line_9 $$ while (!queue.isEmpty()) [ FD ]
Line_9 $$ while (!queue.isEmpty()) -->Line_35 $$ goal.state = done || newDependencies.isEmpty() ? ModelGoal.State.VisitingDependencies : ModelGoal.State.DiscoveringDependencies[ CD ]
Line_9 $$ while (!queue.isEmpty()) -->Line_11 $$ if (goal.state == ModelGoal.State.Achieved) [ CD ]
Line_9 $$ while (!queue.isEmpty()) -->Line_10 $$ ModelGoal goal = queue.getFirst()[ CD ]
Line_38 $$ ModelGoal dependency = newDependencies.get(i)-->Line_46 $$ throw ruleCycle(dependency, queue)[ FD ]
Line_7 $$ LinkedList<ModelGoal> queue = new LinkedList<ModelGoal>()-->Line_43 $$ queue.addFirst(dependency)[ FD ]
Line_42 $$ if (dependency.state == ModelGoal.State.NotSeen) -->Line_43 $$ queue.addFirst(dependency)[ CD ]
Line_7 $$ LinkedList<ModelGoal> queue = new LinkedList<ModelGoal>()-->Line_28 $$ queue.removeFirst()[ FD ]
Line_24 $$ if (goal.state == ModelGoal.State.VisitingDependencies) -->Line_27 $$ goal.state = ModelGoal.State.Achieved[ CD ]
Line_9 $$ while (!queue.isEmpty()) -->Line_33 $$ goal.attachNode()[ CD ]
Line_38 $$ ModelGoal dependency = newDependencies.get(i)-->Line_43 $$ queue.addFirst(dependency)[ FD ]
Line_7 $$ LinkedList<ModelGoal> queue = new LinkedList<ModelGoal>()-->Line_46 $$ throw ruleCycle(dependency, queue)[ FD ]
Line_9 $$ while (!queue.isEmpty()) -->Line_34 $$ boolean done = goal.calculateDependencies(goalGraph, newDependencies)[ CD ]
Line_9 $$ while (!queue.isEmpty()) -->Line_16 $$ if (goal.state == ModelGoal.State.NotSeen) [ CD ]
Line_10 $$ ModelGoal goal = queue.getFirst()-->Line_33 $$ goal.attachNode()[ FD ]
Line_9 $$ while (!queue.isEmpty()) -->Line_24 $$ if (goal.state == ModelGoal.State.VisitingDependencies) [ CD ]
