Line_2 $$ public void testFailureDuringTaskAttemptCommit() -->Line_12 $$ updateLastAttemptState(TaskAttemptState.SUCCEEDED)[ CD ]
Line_2 $$ public void testFailureDuringTaskAttemptCommit() -->Line_6 $$ launchTaskAttempt(getLastAttempt().getAttemptId())[ CD ]
Line_2 $$ public void testFailureDuringTaskAttemptCommit() -->Line_8 $$ commitTaskAttempt(getLastAttempt().getAttemptId())[ CD ]
Line_2 $$ public void testFailureDuringTaskAttemptCommit() -->Line_7 $$ updateLastAttemptState(TaskAttemptState.COMMIT_PENDING)[ CD ]
Line_2 $$ public void testFailureDuringTaskAttemptCommit() -->Line_16 $$ assertTrue("Second attempt should commit", mockTask.canCommit(getLastAttempt().getAttemptId()))[ CD ]
Line_2 $$ public void testFailureDuringTaskAttemptCommit() -->Line_4 $$ TaskId taskId = getNewTaskID()[ CD ]
Line_4 $$ TaskId taskId = getNewTaskID()-->Line_5 $$ scheduleTaskAttempt(taskId)[ FD ]
Line_2 $$ public void testFailureDuringTaskAttemptCommit() -->Line_10 $$ failRunningTaskAttempt(getLastAttempt().getAttemptId())[ CD ]
Line_2 $$ public void testFailureDuringTaskAttemptCommit() -->Line_9 $$ updateLastAttemptState(TaskAttemptState.FAILED)[ CD ]
Line_2 $$ public void testFailureDuringTaskAttemptCommit() -->Line_13 $$ commitTaskAttempt(getLastAttempt().getAttemptId())[ CD ]
Line_2 $$ public void testFailureDuringTaskAttemptCommit() -->Line_14 $$ mockTask.handle(new TaskTAttemptEvent(getLastAttempt().getAttemptId(), TaskEventType.T_ATTEMPT_SUCCEEDED))[ CD ]
Line_2 $$ public void testFailureDuringTaskAttemptCommit() -->Line_5 $$ scheduleTaskAttempt(taskId)[ CD ]
Line_2 $$ public void testFailureDuringTaskAttemptCommit() -->Line_11 $$ assertEquals(2, taskAttempts.size())[ CD ]
Line_2 $$ public void testFailureDuringTaskAttemptCommit() -->Line_3 $$ mockTask = createMockTask(TaskType.MAP)[ CD ]
Line_2 $$ public void testFailureDuringTaskAttemptCommit() -->Line_15 $$ assertFalse("First attempt should not commit", mockTask.canCommit(taskAttempts.get(0).getAttemptId()))[ CD ]
Line_2 $$ public void testFailureDuringTaskAttemptCommit() -->Line_17 $$ assertTaskSucceededState()[ CD ]
