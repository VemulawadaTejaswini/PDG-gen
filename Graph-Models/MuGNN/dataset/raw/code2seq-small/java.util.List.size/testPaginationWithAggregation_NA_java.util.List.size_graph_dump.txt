Line_20 $$ List<Object[]> result = session.createCriteria(Category.class, "c").createAlias("products", "p").setProjection(Projections.projectionList().add(Projections.groupProperty("c.id")).add(Projections.countDistinct("p.id"))).addOrder(Order.asc("c.id")).setFirstResult(1).setMaxResults(3).list()-->Line_22 $$ assertArrayEquals(new Object[] [ FD ]
Line_3 $$ Session session = openSession()-->Line_4 $$ Transaction tx = session.beginTransaction()[ FD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_17 $$ session.persist(new Product2(6, "Kit6", category3))[ CD ]
Line_3 $$ Session session = openSession()-->Line_17 $$ session.persist(new Product2(6, "Kit6", category3))[ FD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_15 $$ session.persist(new Product2(4, "Kit4", category2))[ CD ]
Line_3 $$ Session session = openSession()-->Line_13 $$ session.persist(new Product2(2, "Kit2", category1))[ FD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_5 $$ Category category1 = new Category(1, "Category1")[ CD ]
Line_3 $$ Session session = openSession()-->Line_8 $$ session.persist(category1)[ FD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_25 $$ session.close()[ CD ]
Line_20 $$ List<Object[]> result = session.createCriteria(Category.class, "c").createAlias("products", "p").setProjection(Projections.projectionList().add(Projections.groupProperty("c.id")).add(Projections.countDistinct("p.id"))).addOrder(Order.asc("c.id")).setFirstResult(1).setMaxResults(3).list()-->Line_21 $$ assertEquals(2, result.size())[ FD ]
Line_3 $$ Session session = openSession()-->Line_12 $$ session.persist(new Product2(1, "Kit1", category1))[ FD ]
Line_6 $$ Category category2 = new Category(2, "Category2")-->Line_9 $$ session.persist(category2)[ FD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_20 $$ List<Object[]> result = session.createCriteria(Category.class, "c").createAlias("products", "p").setProjection(Projections.projectionList().add(Projections.groupProperty("c.id")).add(Projections.countDistinct("p.id"))).addOrder(Order.asc("c.id")).setFirstResult(1).setMaxResults(3).list()[ CD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_7 $$ Category category3 = new Category(3, "Category3")[ CD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_14 $$ session.persist(new Product2(3, "Kit3", category1))[ CD ]
Line_7 $$ Category category3 = new Category(3, "Category3")-->Line_10 $$ session.persist(category3)[ FD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_24 $$ tx.rollback()[ CD ]
Line_3 $$ Session session = openSession()-->Line_16 $$ session.persist(new Product2(5, "Kit5", category2))[ FD ]
Line_3 $$ Session session = openSession()-->Line_19 $$ session.clear()[ FD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_10 $$ session.persist(category3)[ CD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_8 $$ session.persist(category1)[ CD ]
Line_3 $$ Session session = openSession()-->Line_10 $$ session.persist(category3)[ FD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_21 $$ assertEquals(2, result.size())[ CD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_22 $$ assertArrayEquals(new Object[] [ CD ]
Line_4 $$ Transaction tx = session.beginTransaction()-->Line_24 $$ tx.rollback()[ FD ]
Line_20 $$ List<Object[]> result = session.createCriteria(Category.class, "c").createAlias("products", "p").setProjection(Projections.projectionList().add(Projections.groupProperty("c.id")).add(Projections.countDistinct("p.id"))).addOrder(Order.asc("c.id")).setFirstResult(1).setMaxResults(3).list()-->Line_23 $$ assertArrayEquals(new Object[] [ FD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_16 $$ session.persist(new Product2(5, "Kit5", category2))[ CD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_9 $$ session.persist(category2)[ CD ]
Line_3 $$ Session session = openSession()-->Line_20 $$ List<Object[]> result = session.createCriteria(Category.class, "c").createAlias("products", "p").setProjection(Projections.projectionList().add(Projections.groupProperty("c.id")).add(Projections.countDistinct("p.id"))).addOrder(Order.asc("c.id")).setFirstResult(1).setMaxResults(3).list()[ FD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_6 $$ Category category2 = new Category(2, "Category2")[ CD ]
Line_3 $$ Session session = openSession()-->Line_14 $$ session.persist(new Product2(3, "Kit3", category1))[ FD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_13 $$ session.persist(new Product2(2, "Kit2", category1))[ CD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_12 $$ session.persist(new Product2(1, "Kit1", category1))[ CD ]
Line_3 $$ Session session = openSession()-->Line_15 $$ session.persist(new Product2(4, "Kit4", category2))[ FD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_23 $$ assertArrayEquals(new Object[] [ CD ]
Line_3 $$ Session session = openSession()-->Line_25 $$ session.close()[ FD ]
Line_3 $$ Session session = openSession()-->Line_9 $$ session.persist(category2)[ FD ]
Line_3 $$ Session session = openSession()-->Line_11 $$ session.flush()[ FD ]
Line_5 $$ Category category1 = new Category(1, "Category1")-->Line_8 $$ session.persist(category1)[ FD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_19 $$ session.clear()[ CD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_3 $$ Session session = openSession()[ CD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_11 $$ session.flush()[ CD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_18 $$ session.flush()[ CD ]
Line_3 $$ Session session = openSession()-->Line_18 $$ session.flush()[ FD ]
Line_2 $$ public void testPaginationWithAggregation() -->Line_4 $$ Transaction tx = session.beginTransaction()[ CD ]
