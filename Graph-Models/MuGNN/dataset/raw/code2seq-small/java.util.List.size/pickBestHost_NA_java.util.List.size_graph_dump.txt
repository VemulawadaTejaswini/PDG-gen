Line_3 $$ Host result = null-->Line_11 $$ if (result != null) [ FD ]
Line_2 $$ Host pickBestHost() -->Line_4 $$ int splits = Integer.MAX_VALUE[ CD ]
Line_4 $$ int splits = Integer.MAX_VALUE-->Line_8 $$ splits = host.splits.size()[ FD ]
Line_2 $$ Host pickBestHost() -->Line_11 $$ if (result != null) [ CD ]
Line_11 $$ if (result != null) -->Line_13 $$ LOG.debug("picking " + result)[ CD ]
Line_7 $$ result = host-->Line_11 $$ if (result != null) [ FD ]
Line_11 $$ if (result != null) -->Line_12 $$ hosts.remove(result)[ CD ]
Line_3 $$ Host result = null-->Line_7 $$ result = host[ FD ]
Line_7 $$ result = host-->Line_12 $$ hosts.remove(result)[ FD ]
Line_6 $$ if (host.splits.size() < splits) -->Line_7 $$ result = host[ CD ]
Line_3 $$ Host result = null-->Line_12 $$ hosts.remove(result)[ FD ]
Line_6 $$ if (host.splits.size() < splits) -->Line_8 $$ splits = host.splits.size()[ CD ]
Line_2 $$ Host pickBestHost() -->Line_3 $$ Host result = null[ CD ]
Line_4 $$ int splits = Integer.MAX_VALUE-->Line_6 $$ if (host.splits.size() < splits) [ FD ]
Line_5 $$ for (Host host : hosts) -->Line_7 $$ result = host[ FD ]
Line_2 $$ Host pickBestHost() -->Line_15 $$ return result[ CD ]
