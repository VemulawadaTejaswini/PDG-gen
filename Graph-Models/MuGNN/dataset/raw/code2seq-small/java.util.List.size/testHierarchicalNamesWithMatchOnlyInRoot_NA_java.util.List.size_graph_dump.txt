Line_2 $$ public void testHierarchicalNamesWithMatchOnlyInRoot() throws Exception -->Line_3 $$ List<String> names = Arrays.asList(BeanFactoryUtils.beanNamesForTypeIncludingAncestors(this.listableBeanFactory, IndexedTestBean.class))[ CD ]
Line_2 $$ public void testHierarchicalNamesWithMatchOnlyInRoot() throws Exception -->Line_4 $$ assertEquals(1, names.size())[ CD ]
Line_2 $$ public void testHierarchicalNamesWithMatchOnlyInRoot() throws Exception -->Line_6 $$ assertTrue(listableBeanFactory.getBeanNamesForType(IndexedTestBean.class).length == 0)[ CD ]
Line_2 $$ public void testHierarchicalNamesWithMatchOnlyInRoot() throws Exception -->Line_5 $$ assertTrue(names.contains("indexedBean"))[ CD ]
Line_3 $$ List<String> names = Arrays.asList(BeanFactoryUtils.beanNamesForTypeIncludingAncestors(this.listableBeanFactory, IndexedTestBean.class))-->Line_4 $$ assertEquals(1, names.size())[ FD ]
Line_3 $$ List<String> names = Arrays.asList(BeanFactoryUtils.beanNamesForTypeIncludingAncestors(this.listableBeanFactory, IndexedTestBean.class))-->Line_5 $$ assertTrue(names.contains("indexedBean"))[ FD ]
