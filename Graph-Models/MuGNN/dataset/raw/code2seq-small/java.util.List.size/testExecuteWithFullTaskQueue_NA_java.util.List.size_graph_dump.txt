Line_5 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 1, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 1, recordRejectedExecutionHandler, Executors.defaultThreadFactory(), new ThreadPoolHandlerAdapter())-->Line_13 $$ threadPoolExecutor.execute(markerBlockingJob)[ FD ]
Line_12 $$ MarkerBlockingJob markerBlockingJob = new MarkerBlockingJob()-->Line_15 $$ Assert.assertSame(markerBlockingJob, rejectedList.get(0))[ FD ]
Line_4 $$ RecordRejectedExecutionHandler recordRejectedExecutionHandler = new RecordRejectedExecutionHandler()-->Line_7 $$ List<Runnable> rejectedList = recordRejectedExecutionHandler.getRejectedList()[ FD ]
Line_12 $$ MarkerBlockingJob markerBlockingJob = new MarkerBlockingJob()-->Line_16 $$ Assert.assertFalse(markerBlockingJob.isStarted())[ FD ]
Line_7 $$ List<Runnable> rejectedList = recordRejectedExecutionHandler.getRejectedList()-->Line_15 $$ Assert.assertSame(markerBlockingJob, rejectedList.get(0))[ FD ]
Line_5 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 1, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 1, recordRejectedExecutionHandler, Executors.defaultThreadFactory(), new ThreadPoolHandlerAdapter())-->Line_10 $$ threadPoolExecutor.execute(new MarkerBlockingJob(true))[ FD ]
Line_7 $$ List<Runnable> rejectedList = recordRejectedExecutionHandler.getRejectedList()-->Line_11 $$ Assert.assertEquals(0, rejectedList.size())[ FD ]
Line_5 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 1, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 1, recordRejectedExecutionHandler, Executors.defaultThreadFactory(), new ThreadPoolHandlerAdapter())-->Line_8 $$ threadPoolExecutor.execute(new MarkerBlockingJob(true))[ FD ]
Line_12 $$ MarkerBlockingJob markerBlockingJob = new MarkerBlockingJob()-->Line_13 $$ threadPoolExecutor.execute(markerBlockingJob)[ FD ]
Line_7 $$ List<Runnable> rejectedList = recordRejectedExecutionHandler.getRejectedList()-->Line_14 $$ Assert.assertEquals(1, rejectedList.size())[ FD ]
Line_5 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 1, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 1, recordRejectedExecutionHandler, Executors.defaultThreadFactory(), new ThreadPoolHandlerAdapter())-->Line_18 $$ TestUtil.closePool(threadPoolExecutor, true)[ FD ]
Line_7 $$ List<Runnable> rejectedList = recordRejectedExecutionHandler.getRejectedList()-->Line_9 $$ Assert.assertEquals(0, rejectedList.size())[ FD ]
