Line_2 $$ private static int computeActual(List<String> hiveTypeStrings, List<Object> javaValues, int bucketCount, List<HiveType> hiveTypes, List<TypeInfo> hiveTypeInfos) -->Line_15 $$ return HiveBucketing.getHiveBucket(hiveTypeInfos, blockList, 2, bucketCount)[ FD ]
Line_5 $$ Object javaValue = javaValues.get(i)-->Line_10 $$ appendToBlockBuilder(type, javaValue, blockBuilder)[ FD ]
Line_7 $$ BlockBuilder blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 3)-->Line_11 $$ Block block = blockBuilder.build()[ FD ]
Line_2 $$ private static int computeActual(List<String> hiveTypeStrings, List<Object> javaValues, int bucketCount, List<HiveType> hiveTypes, List<TypeInfo> hiveTypeInfos) -->Line_15 $$ return HiveBucketing.getHiveBucket(hiveTypeInfos, blockList, 2, bucketCount)[ CD ]
Line_6 $$ Type type = hiveTypes.get(i).getType(typeRegistry)-->Line_10 $$ appendToBlockBuilder(type, javaValue, blockBuilder)[ FD ]
Line_2 $$ private static int computeActual(List<String> hiveTypeStrings, List<Object> javaValues, int bucketCount, List<HiveType> hiveTypes, List<TypeInfo> hiveTypeInfos) -->Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) [ FD ]
Line_7 $$ BlockBuilder blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 3)-->Line_8 $$ blockBuilder.appendNull()[ FD ]
Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) -->Line_10 $$ appendToBlockBuilder(type, javaValue, blockBuilder)[ CD ]
Line_2 $$ private static int computeActual(List<String> hiveTypeStrings, List<Object> javaValues, int bucketCount, List<HiveType> hiveTypes, List<TypeInfo> hiveTypeInfos) -->Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) [ CD ]
Line_3 $$ ImmutableList.Builder<Block> blockListBuilder = ImmutableList.builder()-->Line_14 $$ ImmutableList<Block> blockList = blockListBuilder.build()[ FD ]
Line_14 $$ ImmutableList<Block> blockList = blockListBuilder.build()-->Line_15 $$ return HiveBucketing.getHiveBucket(hiveTypeInfos, blockList, 2, bucketCount)[ FD ]
Line_2 $$ private static int computeActual(List<String> hiveTypeStrings, List<Object> javaValues, int bucketCount, List<HiveType> hiveTypes, List<TypeInfo> hiveTypeInfos) -->Line_3 $$ ImmutableList.Builder<Block> blockListBuilder = ImmutableList.builder()[ CD ]
Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) -->Line_6 $$ Type type = hiveTypes.get(i).getType(typeRegistry)[ CD ]
Line_2 $$ private static int computeActual(List<String> hiveTypeStrings, List<Object> javaValues, int bucketCount, List<HiveType> hiveTypes, List<TypeInfo> hiveTypeInfos) -->Line_14 $$ ImmutableList<Block> blockList = blockListBuilder.build()[ CD ]
Line_2 $$ private static int computeActual(List<String> hiveTypeStrings, List<Object> javaValues, int bucketCount, List<HiveType> hiveTypes, List<TypeInfo> hiveTypeInfos) -->Line_6 $$ Type type = hiveTypes.get(i).getType(typeRegistry)[ FD ]
Line_2 $$ private static int computeActual(List<String> hiveTypeStrings, List<Object> javaValues, int bucketCount, List<HiveType> hiveTypes, List<TypeInfo> hiveTypeInfos) -->Line_5 $$ Object javaValue = javaValues.get(i)[ FD ]
Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) -->Line_8 $$ blockBuilder.appendNull()[ CD ]
Line_7 $$ BlockBuilder blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 3)-->Line_9 $$ blockBuilder.appendNull()[ FD ]
Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) -->Line_12 $$ blockListBuilder.add(block)[ CD ]
Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) -->Line_6 $$ Type type = hiveTypes.get(i).getType(typeRegistry)[ FD ]
Line_7 $$ BlockBuilder blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 3)-->Line_10 $$ appendToBlockBuilder(type, javaValue, blockBuilder)[ FD ]
Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) -->Line_11 $$ Block block = blockBuilder.build()[ CD ]
Line_6 $$ Type type = hiveTypes.get(i).getType(typeRegistry)-->Line_7 $$ BlockBuilder blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 3)[ FD ]
Line_3 $$ ImmutableList.Builder<Block> blockListBuilder = ImmutableList.builder()-->Line_12 $$ blockListBuilder.add(block)[ FD ]
Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) -->Line_5 $$ Object javaValue = javaValues.get(i)[ FD ]
Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) -->Line_5 $$ Object javaValue = javaValues.get(i)[ CD ]
Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) -->Line_9 $$ blockBuilder.appendNull()[ CD ]
Line_4 $$ for (int i = 0; i < hiveTypeStrings.size(); i++) -->Line_7 $$ BlockBuilder blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 3)[ CD ]
Line_11 $$ Block block = blockBuilder.build()-->Line_12 $$ blockListBuilder.add(block)[ FD ]
