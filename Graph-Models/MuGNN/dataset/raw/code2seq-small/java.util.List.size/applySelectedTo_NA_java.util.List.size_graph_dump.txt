Line_2 $$ private static void applySelectedTo(final List<PathElement> path, Object root, JTree tree, final List<TreePath> outSelectionPaths, final boolean scrollToSelection) -->Line_3 $$ for (int i = 1; i < path.size(); i++) [ CD ]
Line_2 $$ private static void applySelectedTo(final List<PathElement> path, Object root, JTree tree, final List<TreePath> outSelectionPaths, final boolean scrollToSelection) -->Line_12 $$ TreeUtil.selectPath(tree, pathInNewTree)[ FD ]
Line_2 $$ private static void applySelectedTo(final List<PathElement> path, Object root, JTree tree, final List<TreePath> outSelectionPaths, final boolean scrollToSelection) -->Line_11 $$ if (scrollToSelection) [ CD ]
Line_2 $$ private static void applySelectedTo(final List<PathElement> path, Object root, JTree tree, final List<TreePath> outSelectionPaths, final boolean scrollToSelection) -->Line_16 $$ outSelectionPaths.add(pathInNewTree)[ CD ]
Line_3 $$ for (int i = 1; i < path.size(); i++) -->Line_4 $$ if (!(root instanceof DefaultMutableTreeNode))[ CD ]
Line_4 $$ if (!(root instanceof DefaultMutableTreeNode))-->Line_5 $$ return[ CD ]
Line_2 $$ private static void applySelectedTo(final List<PathElement> path, Object root, JTree tree, final List<TreePath> outSelectionPaths, final boolean scrollToSelection) -->Line_3 $$ for (int i = 1; i < path.size(); i++) [ FD ]
Line_2 $$ private static void applySelectedTo(final List<PathElement> path, Object root, JTree tree, final List<TreePath> outSelectionPaths, final boolean scrollToSelection) -->Line_16 $$ outSelectionPaths.add(pathInNewTree)[ FD ]
Line_11 $$ if (scrollToSelection) -->Line_12 $$ TreeUtil.selectPath(tree, pathInNewTree)[ CD ]
Line_2 $$ private static void applySelectedTo(final List<PathElement> path, Object root, JTree tree, final List<TreePath> outSelectionPaths, final boolean scrollToSelection) -->Line_8 $$ if (!(root instanceof DefaultMutableTreeNode))[ CD ]
Line_2 $$ private static void applySelectedTo(final List<PathElement> path, Object root, JTree tree, final List<TreePath> outSelectionPaths, final boolean scrollToSelection) -->Line_10 $$ final TreePath pathInNewTree = new TreePath(((DefaultMutableTreeNode) root).getPath())[ CD ]
Line_11 $$ if (scrollToSelection) -->Line_14 $$ tree.setSelectionPath(pathInNewTree)[ CD ]
Line_10 $$ final TreePath pathInNewTree = new TreePath(((DefaultMutableTreeNode) root).getPath())-->Line_16 $$ outSelectionPaths.add(pathInNewTree)[ FD ]
Line_10 $$ final TreePath pathInNewTree = new TreePath(((DefaultMutableTreeNode) root).getPath())-->Line_14 $$ tree.setSelectionPath(pathInNewTree)[ FD ]
Line_2 $$ private static void applySelectedTo(final List<PathElement> path, Object root, JTree tree, final List<TreePath> outSelectionPaths, final boolean scrollToSelection) -->Line_14 $$ tree.setSelectionPath(pathInNewTree)[ FD ]
Line_2 $$ private static void applySelectedTo(final List<PathElement> path, Object root, JTree tree, final List<TreePath> outSelectionPaths, final boolean scrollToSelection) -->Line_6 $$ root = findMatchedChild((DefaultMutableTreeNode) root, path.get(i))[ FD ]
Line_10 $$ final TreePath pathInNewTree = new TreePath(((DefaultMutableTreeNode) root).getPath())-->Line_12 $$ TreeUtil.selectPath(tree, pathInNewTree)[ FD ]
Line_8 $$ if (!(root instanceof DefaultMutableTreeNode))-->Line_9 $$ return[ CD ]
Line_3 $$ for (int i = 1; i < path.size(); i++) -->Line_6 $$ root = findMatchedChild((DefaultMutableTreeNode) root, path.get(i))[ FD ]
Line_3 $$ for (int i = 1; i < path.size(); i++) -->Line_6 $$ root = findMatchedChild((DefaultMutableTreeNode) root, path.get(i))[ CD ]
