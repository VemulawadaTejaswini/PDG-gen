Line_364 $$ serverActivity.set(new ServerActivity() -->Line_373 $$ if (wsc.getConfiguredServerEndpoints().isEmpty()) [ CD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_174 $$ securityInfo.setEmptyRoleSemantic(servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(servlet.getServletSecurity().getTransportGuarantee())).addRolesAllowed(servlet.getServletSecurity().getRolesAllowed())[ FD ]
Line_125 $$ final List<JBossServletMetaData> servlets = new ArrayList<JBossServletMetaData>()-->Line_127 $$ servlets.add(servlet)[ FD ]
Line_105 $$ List<ServletMappingMetaData> list = servletMappings.get(mapping.getServletName())-->Line_116 $$ if (list != null && !list.isEmpty()) [ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_132 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)[ FD ]
Line_137 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_161 $$ s.setExecutor(executorsByName.get(servlet.getExecutorName()).getValue())[ FD ]
Line_60 $$ is22OrOlder = d.getMinorVersion() < 3-->Line_195 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, defaultServlet)[ FD ]
Line_65 $$ final Set<String> seenMappings = new HashSet()-->Line_121 $$ seenMappings.addAll(mapping.getUrlPatterns())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_435 $$ d.setDefaultEncoding(mergedMetaData.getDefaultEncoding())[ FD ]
Line_131 $$ if (servlet.getJspFile() != null) -->Line_132 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)[ CD ]
Line_143 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(servletClass)-->Line_144 $$ if (creator != null) [ FD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_229 $$ if (mapping.getDispatchers() != null && !mapping.getDispatchers().isEmpty()) [ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_254 $$ d.addServletContainerInitalizer(new ServletContainerInitializerInfo(sci.getClass(), instanceFactory, scisMetaData.getHandlesTypes().get(sci)))[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_360 $$ webSocketDeploymentInfo.setWorker(servletContainer.getWebsocketsWorker().getValue())[ FD ]
Line_340 $$ if (securityDomain != null) -->Line_341 $$ d.addThreadSetupAction(new SecurityContextThreadSetupAction(securityDomain, securityDomainContextValue.getValue(), principalVersusRolesMap))[ CD ]
Line_137 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_148 $$ s = new ServletInfo(servlet.getName(), servletClass)[ FD ]
Line_282 $$ final ErrorPage errorPage-->Line_286 $$ errorPage = new ErrorPage(page.getLocation(), Integer.parseInt(page.getErrorCode()))[ FD ]
Line_398 $$ ServletContextListener sl = new ServletContextListener() -->Line_407 $$ if (activity != null) [ CD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_53 $$ d.setSessionPersistenceManager(servletContainer.getSessionPersistenceManager())[ FD ]
Line_148 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_154 $$ s.setRunAs(servlet.getRunAs().getRoleName())[ FD ]
Line_326 $$ final LoginConfigMetaData loginConfig = mergedMetaData.getLoginConfig()-->Line_332 $$ d.setLoginConfig(new LoginConfig(loginConfig.getRealmName()))[ FD ]
Line_339 $$ Map<String, Set<String>> principalVersusRolesMap = mergedMetaData.getPrincipalVersusRolesMap()-->Line_346 $$ if (principalVersusRolesMap != null) [ FD ]
Line_306 $$ List<String> roleNames = constraint.getRoleNames()-->Line_316 $$ securityConstraint.addRolesAllowed(roleNames)[ FD ]
Line_282 $$ final ErrorPage errorPage-->Line_290 $$ d.addErrorPages(errorPage)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_277 $$ d.addWelcomePages("index.html", "index.htm", "index.jsp")[ FD ]
Line_89 $$ final Map<String, List<ServletMappingMetaData>> servletMappings = new HashMap()-->Line_105 $$ List<ServletMappingMetaData> list = servletMappings.get(mapping.getServletName())[ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_181 $$ if (servlet.getSecurityRoleRefs() != null) [ FD ]
Line_146 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_167 $$ s.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_73 $$ if (mergedMetaData.getJspConfig() != null) -->Line_74 $$ d.setJspConfigDescriptor(new JspConfigDescriptorImpl(tldInfo.values(), propertyGroups.values()))[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_84 $$ d.addListener(new ListenerInfo(JspInitializationListener.class))[ FD ]
Line_148 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_152 $$ s.setAsyncSupported(servlet.isAsyncSupported()).setJspFile(servlet.getJspFile()).setEnabled(servlet.isEnabled())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_85 $$ d.addServletContextAttribute(JspInitializationListener.CONTEXT_KEY, expressionFactoryWrappers)[ FD ]
Line_132 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_137 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_259 $$ addListener(module.getClassLoader(), componentRegistry, d, listener)[ FD ]
Line_364 $$ serverActivity.set(new ServerActivity() -->Line_378 $$ wsc.pause(new ServerWebSocketContainer.PauseListener() [ CD ]
Line_166 $$ if (!s.getInitParams().containsKey(initParam.getParamName())) -->Line_167 $$ s.addInitParam(initParam.getParamName(), initParam.getParamValue())[ CD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_231 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_133 $$ s.addHandlerChainWrapper(JspFileHandler.jspFileHandlerWrapper(servlet.getJspFile()))[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_57 $$ if (d.getMajorVersion() == 1) [ FD ]
Line_137 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_152 $$ s.setAsyncSupported(servlet.isAsyncSupported()).setJspFile(servlet.getJspFile()).setEnabled(servlet.isEnabled())[ FD ]
Line_148 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_190 $$ d.addServlet(s)[ FD ]
Line_144 $$ if (creator != null) -->Line_145 $$ InstanceFactory<Servlet> factory = createInstanceFactory(creator)[ CD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_238 $$ if (mapping.getServletNames() != null) [ FD ]
Line_137 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_167 $$ s.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_436 $$ if (servletContainer.getDefaultEncoding() != null) [ FD ]
Line_207 $$ if (creator != null) -->Line_208 $$ InstanceFactory<Filter> instanceFactory = createInstanceFactory(creator)[ CD ]
Line_165 $$ for (ParamValueMetaData initParam : servlet.getInitParam()) -->Line_167 $$ s.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_38 $$ if (servletVersion != null) -->Line_42 $$ d.setMajorVersion(3)[ CD ]
Line_132 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_188 $$ s.setMultipartConfig(Servlets.multipartConfig(mp.getLocation(), mp.getMaxFileSize(), mp.getMaxRequestSize(), mp.getFileSizeThreshold()))[ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_182 $$ for (final SecurityRoleRefMetaData ref : servlet.getSecurityRoleRefs()) [ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_72 $$ JspServletBuilder.setupDeployment(d, propertyGroups, tldInfo, new UndertowJSPInstanceManager(new WebInjectionContainer(module.getClassLoader(), componentRegistryInjectedValue.getValue())))[ FD ]
Line_69 $$ if (jspServlet != null) -->Line_81 $$ seenMappings.addAll(jspPropertyGroupMappings)[ CD ]
Line_353 $$ for (ServletContextAttribute attribute : attributes) -->Line_354 $$ d.addServletContextAttribute(attribute.getName(), attribute.getValue())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_196 $$ d.addServlet(defaultServlet)[ FD ]
Line_281 $$ for (final ErrorPageMetaData page : mergedMetaData.getErrorPages()) -->Line_288 $$ errorPage = new ErrorPage(page.getLocation())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_51 $$ d.setDisableCachingForSecuredPages(servletContainer.isDisableCachingForSecuredPages())[ FD ]
Line_132 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_161 $$ s.setExecutor(executorsByName.get(servlet.getExecutorName()).getValue())[ FD ]
Line_38 $$ if (servletVersion != null) -->Line_40 $$ d.setMinorVersion(Integer.parseInt(servletVersion.charAt(2) + ""))[ CD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_234 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.REQUEST)[ FD ]
Line_130 $$ final ServletInfo s-->Line_166 $$ if (!s.getInitParams().containsKey(initParam.getParamName())) [ FD ]
Line_130 $$ final ServletInfo s-->Line_154 $$ s.setRunAs(servlet.getRunAs().getRoleName())[ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_165 $$ for (ParamValueMetaData initParam : servlet.getInitParam()) [ FD ]
Line_364 $$ serverActivity.set(new ServerActivity() -->Line_368 $$ listener.done()[ FD ]
Line_38 $$ if (servletVersion != null) -->Line_39 $$ d.setMajorVersion(Integer.parseInt(servletVersion.charAt(0) + ""))[ CD ]
Line_66 $$ HashMap<String, TagLibraryInfo> tldInfo = createTldsInfo(tldsMetaData, sharedTlds)-->Line_72 $$ JspServletBuilder.setupDeployment(d, propertyGroups, tldInfo, new UndertowJSPInstanceManager(new WebInjectionContainer(module.getClassLoader(), componentRegistryInjectedValue.getValue())))[ FD ]
Line_198 $$ if (servletContainer.getDirectoryListingEnabled() != null) -->Line_200 $$ defaultServlet.addInitParam(DefaultServlet.DIRECTORY_LISTING, servletContainer.getDirectoryListingEnabled().toString())[ CD ]
Line_148 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_161 $$ s.setExecutor(executorsByName.get(servlet.getExecutorName()).getValue())[ FD ]
Line_240 $$ if (mapping.getDispatchers() != null && !mapping.getDispatchers().isEmpty()) -->Line_245 $$ d.addFilterServletNameMapping(mapping.getFilterName(), servletName, javax.servlet.DispatcherType.REQUEST)[ CD ]
Line_144 $$ if (creator != null) -->Line_148 $$ s = new ServletInfo(servlet.getName(), servletClass)[ CD ]
Line_89 $$ final Map<String, List<ServletMappingMetaData>> servletMappings = new HashMap()-->Line_115 $$ List<ServletMappingMetaData> list = servletMappings.get(jspServlet.getName())[ FD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_121 $$ seenMappings.addAll(mapping.getUrlPatterns())[ FD ]
Line_203 $$ for (final FilterMetaData filter : mergedMetaData.getFilters()) -->Line_209 $$ f = new FilterInfo(filter.getName(), filterClass, instanceFactory)[ FD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_225 $$ for (String url : mapping.getUrlPatterns()) [ FD ]
Line_434 $$ if (mergedMetaData.getDefaultEncoding() != null) -->Line_435 $$ d.setDefaultEncoding(mergedMetaData.getDefaultEncoding())[ CD ]
Line_105 $$ List<ServletMappingMetaData> list = servletMappings.get(mapping.getServletName())-->Line_107 $$ servletMappings.put(mapping.getServletName(), list = new ArrayList())[ FD ]
Line_130 $$ final ServletInfo s-->Line_183 $$ s.addSecurityRoleRef(ref.getRoleName(), ref.getRoleLink())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_49 $$ d.setAllowNonStandardWrappers(servletContainer.isAllowNonStandardWrappers())[ FD ]
Line_137 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_154 $$ s.setRunAs(servlet.getRunAs().getRoleName())[ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_187 $$ MultipartConfigMetaData mp = servlet.getMultipartConfig()[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_298 $$ d.addMimeMapping(new MimeMapping(mapping.getExtension(), mapping.getMimeType()))[ FD ]
Line_105 $$ List<ServletMappingMetaData> list = servletMappings.get(mapping.getServletName())-->Line_109 $$ list.add(mapping)[ FD ]
Line_239 $$ for (String servletName : mapping.getServletNames()) -->Line_242 $$ d.addFilterServletNameMapping(mapping.getFilterName(), servletName, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_154 $$ s.setRunAs(servlet.getRunAs().getRoleName())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_271 $$ d.addWelcomePages(file.substring(1))[ FD ]
Line_21 $$ if (externalResources != null && !externalResources.isEmpty()) -->Line_28 $$ delegates.add(resourceManager)[ CD ]
Line_37 $$ final String servletVersion = mergedMetaData.getServletVersion()-->Line_39 $$ d.setMajorVersion(Integer.parseInt(servletVersion.charAt(0) + ""))[ FD ]
Line_426 $$ PredicatedHandler ph = predicatedHandlers.get(0)-->Line_427 $$ return Handlers.predicate(ph.getPredicate(), ph.getHandler().wrap(handler), handler)[ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_148 $$ s = new ServletInfo(servlet.getName(), servletClass)[ FD ]
Line_130 $$ final ServletInfo s-->Line_133 $$ s.addHandlerChainWrapper(JspFileHandler.jspFileHandlerWrapper(servlet.getJspFile()))[ FD ]
Line_3 $$ final ComponentRegistry componentRegistry = componentRegistryInjectedValue.getValue()-->Line_205 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(filterClass)[ FD ]
Line_186 $$ if (servlet.getMultipartConfig() != null) -->Line_187 $$ MultipartConfigMetaData mp = servlet.getMultipartConfig()[ CD ]
Line_112 $$ if (jspServlet != null) -->Line_115 $$ List<ServletMappingMetaData> list = servletMappings.get(jspServlet.getName())[ CD ]
Line_362 $$ final AtomicReference<ServerActivity> serverActivity = new AtomicReference()-->Line_396 $$ suspendControllerInjectedValue.getValue().registerActivity(serverActivity.get())[ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_161 $$ s.setExecutor(executorsByName.get(servlet.getExecutorName()).getValue())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_88 $$ d.setClassIntrospecter(new ComponentClassIntrospector(componentRegistry))[ FD ]
Line_176 $$ for (HttpMethodConstraintMetaData method : servlet.getServletSecurity().getHttpMethodConstraints()) -->Line_177 $$ securityInfo.addHttpMethodSecurityInfo(new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod()))[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_293 $$ for (Map.Entry<String, String> entry : servletContainer.getMimeMappings().entrySet()) [ FD ]
Line_340 $$ if (securityDomain != null) -->Line_344 $$ d.addLifecycleInterceptor(new RunAsLifecycleInterceptor(mergedMetaData.getRunAsIdentity()))[ CD ]
Line_148 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_167 $$ s.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_160 $$ if (servlet.getExecutorName() != null) -->Line_161 $$ s.setExecutor(executorsByName.get(servlet.getExecutorName()).getValue())[ CD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_175 $$ if (servlet.getServletSecurity().getHttpMethodConstraints() != null) [ FD ]
Line_65 $$ final Set<String> seenMappings = new HashSet()-->Line_163 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_203 $$ for (final FilterMetaData filter : mergedMetaData.getFilters()) -->Line_204 $$ Class<? extends Filter> filterClass = (Class<? extends Filter>) module.getClassLoader().loadClass(filter.getFilterClass())[ FD ]
Line_326 $$ final LoginConfigMetaData loginConfig = mergedMetaData.getLoginConfig()-->Line_327 $$ if (loginConfig != null) [ FD ]
Line_90 $$ if (mergedMetaData.getExecutorName() != null) -->Line_91 $$ d.setExecutor(executorsByName.get(mergedMetaData.getExecutorName()).getValue())[ CD ]
Line_407 $$ if (activity != null) -->Line_408 $$ suspendControllerInjectedValue.getValue().unRegisterActivity(activity)[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_264 $$ d.addInitParameter(param.getParamName(), param.getParamValue())[ FD ]
Line_230 $$ for (DispatcherType dispatcher : mapping.getDispatchers()) -->Line_231 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_279 $$ d.addWelcomePages(servletContainer.getWelcomeFiles())[ FD ]
Line_25 $$ for (File resource : externalResources) -->Line_26 $$ delegates.add(new FileResourceManager(resource.getCanonicalFile(), 1024, true, mergedMetaData.isSymbolicLinkingEnabled(), "/"))[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_74 $$ d.setJspConfigDescriptor(new JspConfigDescriptorImpl(tldInfo.values(), propertyGroups.values()))[ FD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_107 $$ servletMappings.put(mapping.getServletName(), list = new ArrayList())[ FD ]
Line_58 $$ is22OrOlder = true-->Line_62 $$ is22OrOlder = false[ FD ]
Line_340 $$ if (securityDomain != null) -->Line_342 $$ d.addInnerHandlerChainWrapper(SecurityContextAssociationHandler.wrapper(mergedMetaData.getRunAsIdentity()))[ CD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_361 $$ webSocketDeploymentInfo.setDispatchToWorkerThread(servletContainer.isDispatchWebsocketInvocationToWorker())[ FD ]
Line_293 $$ for (Map.Entry<String, String> entry : servletContainer.getMimeMappings().entrySet()) -->Line_348 $$ d.addPrincipalVsRoleMappings(entry.getKey(), entry.getValue())[ FD ]
Line_373 $$ if (wsc.getConfiguredServerEndpoints().isEmpty()) -->Line_375 $$ listener.done()[ CD ]
Line_281 $$ for (final ErrorPageMetaData page : mergedMetaData.getErrorPages()) -->Line_284 $$ errorPage = new ErrorPage(page.getLocation(), (Class<? extends Throwable>) module.getClassLoader().loadClass(page.getExceptionType()))[ FD ]
Line_304 $$ for (SecurityConstraintMetaData constraint : mergedMetaData.getSecurityConstraints()) -->Line_318 $$ if (constraint.getResourceCollections() != null) [ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_412 $$ d.addListener(new ListenerInfo(sl.getClass(), new ImmediateInstanceFactory<EventListener>(sl)))[ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_135 $$ if (servlet.getServletClass() == null) [ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_186 $$ if (servlet.getMultipartConfig() != null) [ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_152 $$ s.setAsyncSupported(servlet.isAsyncSupported()).setJspFile(servlet.getJspFile()).setEnabled(servlet.isEnabled())[ FD ]
Line_362 $$ final AtomicReference<ServerActivity> serverActivity = new AtomicReference()-->Line_406 $$ final ServerActivity activity = serverActivity.get()[ FD ]
Line_364 $$ serverActivity.set(new ServerActivity() -->Line_393 $$ wsc.resume()[ CD ]
Line_135 $$ if (servlet.getServletClass() == null) -->Line_142 $$ Class<? extends Servlet> servletClass = (Class<? extends Servlet>) module.getClassLoader().loadClass(servlet.getServletClass())[ CD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_153 $$ if (servlet.getRunAs() != null) [ FD ]
Line_258 $$ for (ListenerMetaData listener : mergedMetaData.getListeners()) -->Line_259 $$ addListener(module.getClassLoader(), componentRegistry, d, listener)[ FD ]
Line_146 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_190 $$ d.addServlet(s)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_10 $$ d.setContextPath(resolveContextPath())[ FD ]
Line_329 $$ if (loginConfig.getFormLoginConfig() != null) -->Line_330 $$ d.setLoginConfig(new LoginConfig(loginConfig.getRealmName(), loginConfig.getFormLoginConfig().getLoginPage(), loginConfig.getFormLoginConfig().getErrorPage()))[ CD ]
Line_20 $$ resourceManager = new CachingResourceManager(100, 10 * 1024 * 1024, servletContainer.getBufferCache(), resourceManager, explodedDeployment ? 2000 : -1)-->Line_29 $$ resourceManager = new DelegatingResourceManager(delegates)[ FD ]
Line_37 $$ final String servletVersion = mergedMetaData.getServletVersion()-->Line_40 $$ d.setMinorVersion(Integer.parseInt(servletVersion.charAt(2) + ""))[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_359 $$ webSocketDeploymentInfo.setBuffers(servletContainer.getWebsocketsBufferPool().getValue())[ FD ]
Line_132 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_146 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)[ FD ]
Line_135 $$ if (servlet.getServletClass() == null) -->Line_143 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(servletClass)[ CD ]
Line_143 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(servletClass)-->Line_208 $$ InstanceFactory<Filter> instanceFactory = createInstanceFactory(creator)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_43 $$ d.setMinorVersion(1)[ FD ]
Line_132 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_167 $$ s.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_52 $$ if (servletContainer.getSessionPersistenceManager() != null) -->Line_53 $$ d.setSessionPersistenceManager(servletContainer.getSessionPersistenceManager())[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_335 $$ d.getLoginConfig().addLastAuthMethod(method)[ FD ]
Line_59 $$ if (d.getMajorVersion() == 2) -->Line_60 $$ is22OrOlder = d.getMinorVersion() < 3[ CD ]
Line_3 $$ final ComponentRegistry componentRegistry = componentRegistryInjectedValue.getValue()-->Line_143 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(servletClass)[ FD ]
Line_132 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_154 $$ s.setRunAs(servlet.getRunAs().getRoleName())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_97 $$ d.setAuthenticationMode(proactiveAuthentication ? AuthenticationMode.PRO_ACTIVE : AuthenticationMode.CONSTRAINT_DRIVEN)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_421 $$ d.addInitialHandlerChainWrapper(new HandlerWrapper() [ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_330 $$ d.setLoginConfig(new LoginConfig(loginConfig.getRealmName(), loginConfig.getFormLoginConfig().getLoginPage(), loginConfig.getFormLoginConfig().getErrorPage()))[ FD ]
Line_305 $$ SecurityConstraint securityConstraint = new SecurityConstraint().setTransportGuaranteeType(transportGuaranteeType(constraint.getTransportGuarantee()))-->Line_320 $$ securityConstraint.addWebResourceCollection(new WebResourceCollection().addHttpMethods(resourceCollection.getHttpMethods()).addHttpMethodOmissions(resourceCollection.getHttpMethodOmissions()).addUrlPatterns(resourceCollection.getUrlPatterns()))[ FD ]
Line_209 $$ f = new FilterInfo(filter.getName(), filterClass, instanceFactory)-->Line_213 $$ f.setAsyncSupported(filter.isAsyncSupported())[ FD ]
Line_58 $$ is22OrOlder = true-->Line_195 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, defaultServlet)[ FD ]
Line_146 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_183 $$ s.addSecurityRoleRef(ref.getRoleName(), ref.getRoleLink())[ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_127 $$ servlets.add(servlet)[ FD ]
Line_194 $$ ServletInfo defaultServlet = Servlets.servlet(DEFAULT_SERVLET_NAME, DefaultServlet.class)-->Line_200 $$ defaultServlet.addInitParam(DefaultServlet.DIRECTORY_LISTING, servletContainer.getDirectoryListingEnabled().toString())[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_198 $$ if (servletContainer.getDirectoryListingEnabled() != null) [ FD ]
Line_176 $$ for (HttpMethodConstraintMetaData method : servlet.getServletSecurity().getHttpMethodConstraints()) -->Line_335 $$ d.getLoginConfig().addLastAuthMethod(method)[ FD ]
Line_203 $$ for (final FilterMetaData filter : mergedMetaData.getFilters()) -->Line_216 $$ for (ParamValueMetaData initParam : filter.getInitParam()) [ FD ]
Line_285 $$ if (page.getErrorCode() != null && !page.getErrorCode().isEmpty()) -->Line_288 $$ errorPage = new ErrorPage(page.getLocation())[ CD ]
Line_5 $$ if (!mergedMetaData.isMetadataComplete()) -->Line_6 $$ mergedMetaData.resolveAnnotations()[ CD ]
Line_211 $$ f = new FilterInfo(filter.getName(), filterClass)-->Line_213 $$ f.setAsyncSupported(filter.isAsyncSupported())[ FD ]
Line_364 $$ serverActivity.set(new ServerActivity() -->Line_368 $$ listener.done()[ CD ]
Line_207 $$ if (creator != null) -->Line_211 $$ f = new FilterInfo(filter.getName(), filterClass)[ CD ]
Line_339 $$ Map<String, Set<String>> principalVersusRolesMap = mergedMetaData.getPrincipalVersusRolesMap()-->Line_347 $$ for (Map.Entry<String, Set<String>> entry : principalVersusRolesMap.entrySet()) [ FD ]
Line_425 $$ if (predicatedHandlers.size() == 1) -->Line_426 $$ PredicatedHandler ph = predicatedHandlers.get(0)[ CD ]
Line_421 $$ d.addInitialHandlerChainWrapper(new HandlerWrapper() -->Line_425 $$ if (predicatedHandlers.size() == 1) [ CD ]
Line_143 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(servletClass)-->Line_207 $$ if (creator != null) [ FD ]
Line_146 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_148 $$ s = new ServletInfo(servlet.getName(), servletClass)[ FD ]
Line_306 $$ List<String> roleNames = constraint.getRoleNames()-->Line_310 $$ if (roleNames.size() == 1 && roleNames.contains("*") && securityRoleNames.contains("*")) [ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_413 $$ d.addServletContextAttribute(WebSocketDeploymentInfo.ATTRIBUTE_NAME, webSocketDeploymentInfo)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_76 $$ d.addServlet(jspServlet)[ FD ]
Line_326 $$ final LoginConfigMetaData loginConfig = mergedMetaData.getLoginConfig()-->Line_328 $$ List<AuthMethodConfig> authMethod = authMethod(loginConfig.getAuthMethod())[ FD ]
Line_60 $$ is22OrOlder = d.getMinorVersion() < 3-->Line_163 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_176 $$ for (HttpMethodConstraintMetaData method : servlet.getServletSecurity().getHttpMethodConstraints()) [ FD ]
Line_425 $$ if (predicatedHandlers.size() == 1) -->Line_427 $$ return Handlers.predicate(ph.getPredicate(), ph.getHandler().wrap(handler), handler)[ CD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_142 $$ Class<? extends Servlet> servletClass = (Class<? extends Servlet>) module.getClassLoader().loadClass(servlet.getServletClass())[ FD ]
Line_118 $$ for (String urlPattern : mapping.getUrlPatterns()) -->Line_119 $$ jspServlet.addMapping(urlPattern)[ FD ]
Line_130 $$ final ServletInfo s-->Line_167 $$ s.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_364 $$ serverActivity.set(new ServerActivity() -->Line_382 $$ listener.done()[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_242 $$ d.addFilterServletNameMapping(mapping.getFilterName(), servletName, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_131 $$ if (servlet.getJspFile() != null) -->Line_133 $$ s.addHandlerChainWrapper(JspFileHandler.jspFileHandlerWrapper(servlet.getJspFile()))[ CD ]
Line_203 $$ for (final FilterMetaData filter : mergedMetaData.getFilters()) -->Line_213 $$ f.setAsyncSupported(filter.isAsyncSupported())[ FD ]
Line_137 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_166 $$ if (!s.getInitParams().containsKey(initParam.getParamName())) [ FD ]
Line_226 $$ if (is22OrOlder && !url.startsWith("*") && !url.startsWith("/")) -->Line_227 $$ url = "/" + url[ CD ]
Line_132 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_133 $$ s.addHandlerChainWrapper(JspFileHandler.jspFileHandlerWrapper(servlet.getJspFile()))[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_344 $$ d.addLifecycleInterceptor(new RunAsLifecycleInterceptor(mergedMetaData.getRunAsIdentity()))[ FD ]
Line_144 $$ if (creator != null) -->Line_146 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_290 $$ d.addErrorPages(errorPage)[ FD ]
Line_421 $$ d.addInitialHandlerChainWrapper(new HandlerWrapper() -->Line_427 $$ return Handlers.predicate(ph.getPredicate(), ph.getHandler().wrap(handler), handler)[ FD ]
Line_263 $$ for (ParamValueMetaData param : mergedMetaData.getContextParams()) -->Line_264 $$ d.addInitParameter(param.getParamName(), param.getParamValue())[ FD ]
Line_20 $$ resourceManager = new CachingResourceManager(100, 10 * 1024 * 1024, servletContainer.getBufferCache(), resourceManager, explodedDeployment ? 2000 : -1)-->Line_31 $$ d.setResourceManager(resourceManager)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_35 $$ d.setTempDir(tempDir)[ FD ]
Line_89 $$ final Map<String, List<ServletMappingMetaData>> servletMappings = new HashMap()-->Line_195 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, defaultServlet)[ FD ]
Line_267 $$ if (mergedMetaData.getWelcomeFileList() != null && mergedMetaData.getWelcomeFileList().getWelcomeFiles() != null) -->Line_268 $$ List<String> welcomeFiles = mergedMetaData.getWelcomeFileList().getWelcomeFiles()[ CD ]
Line_171 $$ if (servlet.getServletSecurity() != null) -->Line_174 $$ securityInfo.setEmptyRoleSemantic(servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(servlet.getServletSecurity().getTransportGuarantee())).addRolesAllowed(servlet.getServletSecurity().getRolesAllowed())[ CD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_20 $$ resourceManager = new CachingResourceManager(100, 10 * 1024 * 1024, servletContainer.getBufferCache(), resourceManager, explodedDeployment ? 2000 : -1)[ FD ]
Line_203 $$ for (final FilterMetaData filter : mergedMetaData.getFilters()) -->Line_215 $$ if (filter.getInitParam() != null) [ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_354 $$ d.addServletContextAttribute(attribute.getName(), attribute.getValue())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_348 $$ d.addPrincipalVsRoleMappings(entry.getKey(), entry.getValue())[ FD ]
Line_148 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_166 $$ if (!s.getInitParams().containsKey(initParam.getParamName())) [ FD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_240 $$ if (mapping.getDispatchers() != null && !mapping.getDispatchers().isEmpty()) [ FD ]
Line_89 $$ final Map<String, List<ServletMappingMetaData>> servletMappings = new HashMap()-->Line_163 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_136 $$ if (DEFAULT_SERVLET_NAME.equals(servlet.getName())) [ FD ]
Line_421 $$ d.addInitialHandlerChainWrapper(new HandlerWrapper() -->Line_429 $$ return Handlers.predicates(predicatedHandlers, handler)[ FD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_241 $$ for (DispatcherType dispatcher : mapping.getDispatchers()) [ FD ]
Line_269 $$ for (String file : welcomeFiles) -->Line_271 $$ d.addWelcomePages(file.substring(1))[ FD ]
Line_206 $$ FilterInfo f-->Line_209 $$ f = new FilterInfo(filter.getName(), filterClass, instanceFactory)[ FD ]
Line_282 $$ final ErrorPage errorPage-->Line_288 $$ errorPage = new ErrorPage(page.getLocation())[ FD ]
Line_239 $$ for (String servletName : mapping.getServletNames()) -->Line_245 $$ d.addFilterServletNameMapping(mapping.getFilterName(), servletName, javax.servlet.DispatcherType.REQUEST)[ FD ]
Line_310 $$ if (roleNames.size() == 1 && roleNames.contains("*") && securityRoleNames.contains("*")) -->Line_316 $$ securityConstraint.addRolesAllowed(roleNames)[ CD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_50 $$ d.setServletStackTraces(servletContainer.getStackTraces())[ FD ]
Line_373 $$ if (wsc.getConfiguredServerEndpoints().isEmpty()) -->Line_376 $$ return[ CD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_437 $$ d.setDefaultEncoding(servletContainer.getDefaultEncoding())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_342 $$ d.addInnerHandlerChainWrapper(SecurityContextAssociationHandler.wrapper(mergedMetaData.getRunAsIdentity()))[ FD ]
Line_230 $$ for (DispatcherType dispatcher : mapping.getDispatchers()) -->Line_242 $$ d.addFilterServletNameMapping(mapping.getFilterName(), servletName, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_137 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_188 $$ s.setMultipartConfig(Servlets.multipartConfig(mp.getLocation(), mp.getMaxFileSize(), mp.getMaxRequestSize(), mp.getFileSizeThreshold()))[ FD ]
Line_225 $$ for (String url : mapping.getUrlPatterns()) -->Line_226 $$ if (is22OrOlder && !url.startsWith("*") && !url.startsWith("/")) [ FD ]
Line_406 $$ final ServerActivity activity = serverActivity.get()-->Line_408 $$ suspendControllerInjectedValue.getValue().unRegisterActivity(activity)[ FD ]
Line_143 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(servletClass)-->Line_145 $$ InstanceFactory<Servlet> factory = createInstanceFactory(creator)[ FD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_224 $$ if (mapping.getUrlPatterns() != null) [ FD ]
Line_284 $$ errorPage = new ErrorPage(page.getLocation(), (Class<? extends Throwable>) module.getClassLoader().loadClass(page.getExceptionType()))-->Line_286 $$ errorPage = new ErrorPage(page.getLocation(), Integer.parseInt(page.getErrorCode()))[ FD ]
Line_211 $$ f = new FilterInfo(filter.getName(), filterClass)-->Line_214 $$ d.addFilter(f)[ FD ]
Line_132 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_148 $$ s = new ServletInfo(servlet.getName(), servletClass)[ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_171 $$ if (servlet.getServletSecurity() != null) [ FD ]
Line_62 $$ is22OrOlder = false-->Line_163 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_225 $$ for (String url : mapping.getUrlPatterns()) -->Line_227 $$ url = "/" + url[ FD ]
Line_65 $$ final Set<String> seenMappings = new HashSet()-->Line_81 $$ seenMappings.addAll(jspPropertyGroupMappings)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_301 $$ d.setDenyUncoveredHttpMethods(mergedMetaData.getDenyUncoveredHttpMethods() != null)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_214 $$ d.addFilter(f)[ FD ]
Line_132 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_183 $$ s.addSecurityRoleRef(ref.getRoleName(), ref.getRoleLink())[ FD ]
Line_227 $$ url = "/" + url-->Line_231 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_137 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)[ FD ]
Line_225 $$ for (String url : mapping.getUrlPatterns()) -->Line_234 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.REQUEST)[ FD ]
Line_305 $$ SecurityConstraint securityConstraint = new SecurityConstraint().setTransportGuaranteeType(transportGuaranteeType(constraint.getTransportGuarantee()))-->Line_323 $$ d.addSecurityConstraint(securityConstraint)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_100 $$ d.addServletExtension(extension)[ FD ]
Line_165 $$ for (ParamValueMetaData initParam : servlet.getInitParam()) -->Line_166 $$ if (!s.getInitParams().containsKey(initParam.getParamName())) [ FD ]
Line_329 $$ if (loginConfig.getFormLoginConfig() != null) -->Line_332 $$ d.setLoginConfig(new LoginConfig(loginConfig.getRealmName()))[ CD ]
Line_270 $$ if (file.startsWith("/")) -->Line_271 $$ d.addWelcomePages(file.substring(1))[ CD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_131 $$ if (servlet.getJspFile() != null) [ FD ]
Line_112 $$ if (jspServlet != null) -->Line_116 $$ if (list != null && !list.isEmpty()) [ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_40 $$ d.setMinorVersion(Integer.parseInt(servletVersion.charAt(2) + ""))[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_341 $$ d.addThreadSetupAction(new SecurityContextThreadSetupAction(securityDomain, securityDomainContextValue.getValue(), principalVersusRolesMap))[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_190 $$ d.addServlet(s)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_338 $$ d.addSecurityRoles(mergedMetaData.getSecurityRoleNames())[ FD ]
Line_131 $$ if (servlet.getJspFile() != null) -->Line_135 $$ if (servlet.getServletClass() == null) [ CD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_164 $$ if (servlet.getInitParam() != null) [ FD ]
Line_304 $$ for (SecurityConstraintMetaData constraint : mergedMetaData.getSecurityConstraints()) -->Line_307 $$ if (constraint.getAuthConstraint() == null) [ FD ]
Line_148 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_183 $$ s.addSecurityRoleRef(ref.getRoleName(), ref.getRoleLink())[ FD ]
Line_364 $$ serverActivity.set(new ServerActivity() -->Line_375 $$ listener.done()[ FD ]
Line_37 $$ final String servletVersion = mergedMetaData.getServletVersion()-->Line_38 $$ if (servletVersion != null) [ FD ]
Line_11 $$ if (mergedMetaData.getDescriptionGroup() != null) -->Line_12 $$ d.setDisplayName(mergedMetaData.getDescriptionGroup().getDisplayName())[ CD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_105 $$ List<ServletMappingMetaData> list = servletMappings.get(mapping.getServletName())[ FD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_79 $$ jspServlet.addMapping(mapping)[ FD ]
Line_21 $$ if (externalResources != null && !externalResources.isEmpty()) -->Line_29 $$ resourceManager = new DelegatingResourceManager(delegates)[ CD ]
Line_57 $$ if (d.getMajorVersion() == 1) -->Line_58 $$ is22OrOlder = true[ CD ]
Line_171 $$ if (servlet.getServletSecurity() != null) -->Line_175 $$ if (servlet.getServletSecurity().getHttpMethodConstraints() != null) [ CD ]
Line_77 $$ final Set<String> jspPropertyGroupMappings = propertyGroups.keySet()-->Line_81 $$ seenMappings.addAll(jspPropertyGroupMappings)[ FD ]
Line_420 $$ if (predicatedHandlers != null && !predicatedHandlers.isEmpty()) -->Line_421 $$ d.addInitialHandlerChainWrapper(new HandlerWrapper() [ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_53 $$ d.setSessionPersistenceManager(servletContainer.getSessionPersistenceManager())[ FD ]
Line_146 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_173 $$ s.setServletSecurityInfo(securityInfo)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_245 $$ d.addFilterServletNameMapping(mapping.getFilterName(), servletName, javax.servlet.DispatcherType.REQUEST)[ FD ]
Line_307 $$ if (constraint.getAuthConstraint() == null) -->Line_310 $$ if (roleNames.size() == 1 && roleNames.contains("*") && securityRoleNames.contains("*")) [ CD ]
Line_2 $$ private DeploymentInfo createServletConfig() throws StartException -->Line_3 $$ final ComponentRegistry componentRegistry = componentRegistryInjectedValue.getValue()[ CD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_146 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_42 $$ d.setMajorVersion(3)[ FD ]
Line_146 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_152 $$ s.setAsyncSupported(servlet.isAsyncSupported()).setJspFile(servlet.getJspFile()).setEnabled(servlet.isEnabled())[ FD ]
Line_327 $$ if (loginConfig != null) -->Line_328 $$ List<AuthMethodConfig> authMethod = authMethod(loginConfig.getAuthMethod())[ CD ]
Line_148 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_173 $$ s.setServletSecurityInfo(securityInfo)[ FD ]
Line_136 $$ if (DEFAULT_SERVLET_NAME.equals(servlet.getName())) -->Line_137 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)[ CD ]
Line_137 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_173 $$ s.setServletSecurityInfo(securityInfo)[ FD ]
Line_206 $$ FilterInfo f-->Line_214 $$ d.addFilter(f)[ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_160 $$ if (servlet.getExecutorName() != null) [ FD ]
Line_211 $$ f = new FilterInfo(filter.getName(), filterClass)-->Line_217 $$ f.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_60 $$ is22OrOlder = d.getMinorVersion() < 3-->Line_62 $$ is22OrOlder = false[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_279 $$ d.addWelcomePages(servletContainer.getWelcomeFiles())[ FD ]
Line_304 $$ for (SecurityConstraintMetaData constraint : mergedMetaData.getSecurityConstraints()) -->Line_306 $$ List<String> roleNames = constraint.getRoleNames()[ FD ]
Line_69 $$ if (jspServlet != null) -->Line_77 $$ final Set<String> jspPropertyGroupMappings = propertyGroups.keySet()[ CD ]
Line_146 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_154 $$ s.setRunAs(servlet.getRunAs().getRoleName())[ FD ]
Line_378 $$ wsc.pause(new ServerWebSocketContainer.PauseListener() -->Line_382 $$ listener.done()[ CD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_245 $$ d.addFilterServletNameMapping(mapping.getFilterName(), servletName, javax.servlet.DispatcherType.REQUEST)[ FD ]
Line_269 $$ for (String file : welcomeFiles) -->Line_273 $$ d.addWelcomePages(file)[ FD ]
Line_302 $$ Set<String> securityRoleNames = mergedMetaData.getSecurityRoleNames()-->Line_310 $$ if (roleNames.size() == 1 && roleNames.contains("*") && securityRoleNames.contains("*")) [ FD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_109 $$ list.add(mapping)[ FD ]
Line_340 $$ if (securityDomain != null) -->Line_343 $$ d.addOuterHandlerChainWrapper(JACCContextIdHandler.wrapper(jaccContextId))[ CD ]
Line_130 $$ final ServletInfo s-->Line_148 $$ s = new ServletInfo(servlet.getName(), servletClass)[ FD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_239 $$ for (String servletName : mapping.getServletNames()) [ FD ]
Line_206 $$ FilterInfo f-->Line_213 $$ f.setAsyncSupported(filter.isAsyncSupported())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_14 $$ d.setDeploymentName(deploymentName)[ FD ]
Line_285 $$ if (page.getErrorCode() != null && !page.getErrorCode().isEmpty()) -->Line_286 $$ errorPage = new ErrorPage(page.getLocation(), Integer.parseInt(page.getErrorCode()))[ CD ]
Line_137 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_146 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)[ FD ]
Line_269 $$ for (String file : welcomeFiles) -->Line_270 $$ if (file.startsWith("/")) [ FD ]
Line_284 $$ errorPage = new ErrorPage(page.getLocation(), (Class<? extends Throwable>) module.getClassLoader().loadClass(page.getExceptionType()))-->Line_288 $$ errorPage = new ErrorPage(page.getLocation())[ FD ]
Line_132 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_166 $$ if (!s.getInitParams().containsKey(initParam.getParamName())) [ FD ]
Line_406 $$ final ServerActivity activity = serverActivity.get()-->Line_407 $$ if (activity != null) [ FD ]
Line_283 $$ if (page.getExceptionType() != null && !page.getExceptionType().isEmpty()) -->Line_284 $$ errorPage = new ErrorPage(page.getLocation(), (Class<? extends Throwable>) module.getClassLoader().loadClass(page.getExceptionType()))[ CD ]
Line_142 $$ Class<? extends Servlet> servletClass = (Class<? extends Servlet>) module.getClassLoader().loadClass(servlet.getServletClass())-->Line_143 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(servletClass)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_234 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.REQUEST)[ FD ]
Line_137 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_163 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_270 $$ if (file.startsWith("/")) -->Line_273 $$ d.addWelcomePages(file)[ CD ]
Line_286 $$ errorPage = new ErrorPage(page.getLocation(), Integer.parseInt(page.getErrorCode()))-->Line_290 $$ d.addErrorPages(errorPage)[ FD ]
Line_107 $$ servletMappings.put(mapping.getServletName(), list = new ArrayList())-->Line_116 $$ if (list != null && !list.isEmpty()) [ FD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_242 $$ d.addFilterServletNameMapping(mapping.getFilterName(), servletName, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_439 $$ d.setCrawlerSessionManagerConfig(servletContainer.getCrawlerSessionManagerConfig())[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_52 $$ if (servletContainer.getSessionPersistenceManager() != null) [ FD ]
Line_130 $$ final ServletInfo s-->Line_132 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)[ FD ]
Line_20 $$ resourceManager = new CachingResourceManager(100, 10 * 1024 * 1024, servletContainer.getBufferCache(), resourceManager, explodedDeployment ? 2000 : -1)-->Line_28 $$ delegates.add(resourceManager)[ FD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_298 $$ d.addMimeMapping(new MimeMapping(mapping.getExtension(), mapping.getMimeType()))[ FD ]
Line_93 $$ Boolean proactiveAuthentication = mergedMetaData.getProactiveAuthentication()-->Line_95 $$ proactiveAuthentication = container.getValue().isProactiveAuth()[ FD ]
Line_186 $$ if (servlet.getMultipartConfig() != null) -->Line_188 $$ s.setMultipartConfig(Servlets.multipartConfig(mp.getLocation(), mp.getMaxFileSize(), mp.getMaxRequestSize(), mp.getFileSizeThreshold()))[ CD ]
Line_171 $$ if (servlet.getServletSecurity() != null) -->Line_172 $$ ServletSecurityInfo securityInfo = new ServletSecurityInfo()[ CD ]
Line_57 $$ if (d.getMajorVersion() == 1) -->Line_59 $$ if (d.getMajorVersion() == 2) [ CD ]
Line_288 $$ errorPage = new ErrorPage(page.getLocation())-->Line_290 $$ d.addErrorPages(errorPage)[ FD ]
Line_227 $$ url = "/" + url-->Line_234 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.REQUEST)[ FD ]
Line_135 $$ if (servlet.getServletClass() == null) -->Line_144 $$ if (creator != null) [ CD ]
Line_146 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_188 $$ s.setMultipartConfig(Servlets.multipartConfig(mp.getLocation(), mp.getMaxFileSize(), mp.getMaxRequestSize(), mp.getFileSizeThreshold()))[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_60 $$ is22OrOlder = d.getMinorVersion() < 3[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_31 $$ d.setResourceManager(resourceManager)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_343 $$ d.addOuterHandlerChainWrapper(JACCContextIdHandler.wrapper(jaccContextId))[ FD ]
Line_3 $$ final ComponentRegistry componentRegistry = componentRegistryInjectedValue.getValue()-->Line_259 $$ addListener(module.getClassLoader(), componentRegistry, d, listener)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_294 $$ d.addMimeMapping(new MimeMapping(entry.getKey(), entry.getValue()))[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_59 $$ if (d.getMajorVersion() == 2) [ FD ]
Line_304 $$ for (SecurityConstraintMetaData constraint : mergedMetaData.getSecurityConstraints()) -->Line_319 $$ for (final WebResourceCollectionMetaData resourceCollection : constraint.getResourceCollections()) [ FD ]
Line_327 $$ if (loginConfig != null) -->Line_329 $$ if (loginConfig.getFormLoginConfig() != null) [ CD ]
Line_326 $$ final LoginConfigMetaData loginConfig = mergedMetaData.getLoginConfig()-->Line_330 $$ d.setLoginConfig(new LoginConfig(loginConfig.getRealmName(), loginConfig.getFormLoginConfig().getLoginPage(), loginConfig.getFormLoginConfig().getErrorPage()))[ FD ]
Line_65 $$ final Set<String> seenMappings = new HashSet()-->Line_195 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, defaultServlet)[ FD ]
Line_206 $$ FilterInfo f-->Line_217 $$ f.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_230 $$ for (DispatcherType dispatcher : mapping.getDispatchers()) [ FD ]
Line_29 $$ resourceManager = new DelegatingResourceManager(delegates)-->Line_31 $$ d.setResourceManager(resourceManager)[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_51 $$ d.setDisableCachingForSecuredPages(servletContainer.isDisableCachingForSecuredPages())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_199 $$ ServletInfo defaultServlet = d.getServlets().get(DEFAULT_SERVLET_NAME)[ FD ]
Line_69 $$ if (jspServlet != null) -->Line_73 $$ if (mergedMetaData.getJspConfig() != null) [ CD ]
Line_305 $$ SecurityConstraint securityConstraint = new SecurityConstraint().setTransportGuaranteeType(transportGuaranteeType(constraint.getTransportGuarantee()))-->Line_316 $$ securityConstraint.addRolesAllowed(roleNames)[ FD ]
Line_252 $$ for (final ServletContainerInitializer sci : scisMetaData.getScis()) -->Line_254 $$ d.addServletContainerInitalizer(new ServletContainerInitializerInfo(sci.getClass(), instanceFactory, scisMetaData.getHandlesTypes().get(sci)))[ FD ]
Line_258 $$ for (ListenerMetaData listener : mergedMetaData.getListeners()) -->Line_382 $$ listener.done()[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_64 $$ JSPConfig jspConfig = servletContainer.getJspConfig()[ FD ]
Line_319 $$ for (final WebResourceCollectionMetaData resourceCollection : constraint.getResourceCollections()) -->Line_320 $$ securityConstraint.addWebResourceCollection(new WebResourceCollection().addHttpMethods(resourceCollection.getHttpMethods()).addHttpMethodOmissions(resourceCollection.getHttpMethodOmissions()).addUrlPatterns(resourceCollection.getUrlPatterns()))[ FD ]
Line_172 $$ ServletSecurityInfo securityInfo = new ServletSecurityInfo()-->Line_177 $$ securityInfo.addHttpMethodSecurityInfo(new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod()))[ FD ]
Line_62 $$ is22OrOlder = false-->Line_195 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, defaultServlet)[ FD ]
Line_106 $$ if (list == null) -->Line_107 $$ servletMappings.put(mapping.getServletName(), list = new ArrayList())[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_15 $$ d.setHostName(host.getValue().getName())[ FD ]
Line_436 $$ if (servletContainer.getDefaultEncoding() != null) -->Line_437 $$ d.setDefaultEncoding(servletContainer.getDefaultEncoding())[ CD ]
Line_203 $$ for (final FilterMetaData filter : mergedMetaData.getFilters()) -->Line_211 $$ f = new FilterInfo(filter.getName(), filterClass)[ FD ]
Line_258 $$ for (ListenerMetaData listener : mergedMetaData.getListeners()) -->Line_368 $$ listener.done()[ FD ]
Line_182 $$ for (final SecurityRoleRefMetaData ref : servlet.getSecurityRoleRefs()) -->Line_183 $$ s.addSecurityRoleRef(ref.getRoleName(), ref.getRoleLink())[ FD ]
Line_293 $$ for (Map.Entry<String, String> entry : servletContainer.getMimeMappings().entrySet()) -->Line_294 $$ d.addMimeMapping(new MimeMapping(entry.getKey(), entry.getValue()))[ FD ]
Line_130 $$ final ServletInfo s-->Line_146 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_91 $$ d.setExecutor(executorsByName.get(mergedMetaData.getExecutorName()).getValue())[ FD ]
Line_225 $$ for (String url : mapping.getUrlPatterns()) -->Line_231 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_130 $$ final ServletInfo s-->Line_163 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_130 $$ final ServletInfo s-->Line_188 $$ s.setMultipartConfig(Servlets.multipartConfig(mp.getLocation(), mp.getMaxFileSize(), mp.getMaxRequestSize(), mp.getFileSizeThreshold()))[ FD ]
Line_146 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_163 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_146 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_161 $$ s.setExecutor(executorsByName.get(servlet.getExecutorName()).getValue())[ FD ]
Line_130 $$ final ServletInfo s-->Line_137 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_437 $$ d.setDefaultEncoding(servletContainer.getDefaultEncoding())[ FD ]
Line_148 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_163 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_59 $$ if (d.getMajorVersion() == 2) -->Line_62 $$ is22OrOlder = false[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_417 $$ d.addLocaleCharsetMapping(locale.getLocale(), locale.getEncoding())[ FD ]
Line_93 $$ Boolean proactiveAuthentication = mergedMetaData.getProactiveAuthentication()-->Line_94 $$ if (proactiveAuthentication == null) [ FD ]
Line_137 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_183 $$ s.addSecurityRoleRef(ref.getRoleName(), ref.getRoleLink())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_231 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_434 $$ if (mergedMetaData.getDefaultEncoding() != null) -->Line_436 $$ if (servletContainer.getDefaultEncoding() != null) [ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_39 $$ d.setMajorVersion(Integer.parseInt(servletVersion.charAt(0) + ""))[ FD ]
Line_38 $$ if (servletVersion != null) -->Line_43 $$ d.setMinorVersion(1)[ CD ]
Line_194 $$ ServletInfo defaultServlet = Servlets.servlet(DEFAULT_SERVLET_NAME, DefaultServlet.class)-->Line_196 $$ d.addServlet(defaultServlet)[ FD ]
Line_132 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_173 $$ s.setServletSecurityInfo(securityInfo)[ FD ]
Line_207 $$ if (creator != null) -->Line_209 $$ f = new FilterInfo(filter.getName(), filterClass, instanceFactory)[ CD ]
Line_58 $$ is22OrOlder = true-->Line_60 $$ is22OrOlder = d.getMinorVersion() < 3[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_36 $$ d.setClassLoader(module.getClassLoader())[ FD ]
Line_258 $$ for (ListenerMetaData listener : mergedMetaData.getListeners()) -->Line_375 $$ listener.done()[ FD ]
Line_94 $$ if (proactiveAuthentication == null) -->Line_95 $$ proactiveAuthentication = container.getValue().isProactiveAuth()[ CD ]
Line_198 $$ if (servletContainer.getDirectoryListingEnabled() != null) -->Line_199 $$ ServletInfo defaultServlet = d.getServlets().get(DEFAULT_SERVLET_NAME)[ CD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_200 $$ defaultServlet.addInitParam(DefaultServlet.DIRECTORY_LISTING, servletContainer.getDirectoryListingEnabled().toString())[ FD ]
Line_267 $$ if (mergedMetaData.getWelcomeFileList() != null && mergedMetaData.getWelcomeFileList().getWelcomeFiles() != null) -->Line_277 $$ d.addWelcomePages("index.html", "index.htm", "index.jsp")[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_323 $$ d.addSecurityConstraint(securityConstraint)[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_49 $$ d.setAllowNonStandardWrappers(servletContainer.isAllowNonStandardWrappers())[ FD ]
Line_281 $$ for (final ErrorPageMetaData page : mergedMetaData.getErrorPages()) -->Line_286 $$ errorPage = new ErrorPage(page.getLocation(), Integer.parseInt(page.getErrorCode()))[ FD ]
Line_304 $$ for (SecurityConstraintMetaData constraint : mergedMetaData.getSecurityConstraints()) -->Line_305 $$ SecurityConstraint securityConstraint = new SecurityConstraint().setTransportGuaranteeType(transportGuaranteeType(constraint.getTransportGuarantee()))[ FD ]
Line_283 $$ if (page.getExceptionType() != null && !page.getExceptionType().isEmpty()) -->Line_285 $$ if (page.getErrorCode() != null && !page.getErrorCode().isEmpty()) [ CD ]
Line_89 $$ final Map<String, List<ServletMappingMetaData>> servletMappings = new HashMap()-->Line_107 $$ servletMappings.put(mapping.getServletName(), list = new ArrayList())[ FD ]
Line_172 $$ ServletSecurityInfo securityInfo = new ServletSecurityInfo()-->Line_173 $$ s.setServletSecurityInfo(securityInfo)[ FD ]
Line_425 $$ if (predicatedHandlers.size() == 1) -->Line_429 $$ return Handlers.predicates(predicatedHandlers, handler)[ CD ]
Line_78 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_118 $$ for (String urlPattern : mapping.getUrlPatterns()) [ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_273 $$ d.addWelcomePages(file)[ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_139 $$ throw UndertowLogger.ROOT_LOGGER.servletClassNotDefined(servlet.getServletName())[ FD ]
Line_132 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_190 $$ d.addServlet(s)[ FD ]
Line_282 $$ final ErrorPage errorPage-->Line_284 $$ errorPage = new ErrorPage(page.getLocation(), (Class<? extends Throwable>) module.getClassLoader().loadClass(page.getExceptionType()))[ FD ]
Line_69 $$ if (jspServlet != null) -->Line_76 $$ d.addServlet(jspServlet)[ CD ]
Line_130 $$ final ServletInfo s-->Line_152 $$ s.setAsyncSupported(servlet.isAsyncSupported()).setJspFile(servlet.getJspFile()).setEnabled(servlet.isEnabled())[ FD ]
Line_153 $$ if (servlet.getRunAs() != null) -->Line_154 $$ s.setRunAs(servlet.getRunAs().getRoleName())[ CD ]
Line_281 $$ for (final ErrorPageMetaData page : mergedMetaData.getErrorPages()) -->Line_283 $$ if (page.getExceptionType() != null && !page.getExceptionType().isEmpty()) [ FD ]
Line_107 $$ servletMappings.put(mapping.getServletName(), list = new ArrayList())-->Line_109 $$ list.add(mapping)[ FD ]
Line_165 $$ for (ParamValueMetaData initParam : servlet.getInitParam()) -->Line_217 $$ f.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_50 $$ d.setServletStackTraces(servletContainer.getStackTraces())[ FD ]
Line_105 $$ List<ServletMappingMetaData> list = servletMappings.get(mapping.getServletName())-->Line_106 $$ if (list == null) [ FD ]
Line_130 $$ final ServletInfo s-->Line_161 $$ s.setExecutor(executorsByName.get(servlet.getExecutorName()).getValue())[ FD ]
Line_58 $$ is22OrOlder = true-->Line_163 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_204 $$ Class<? extends Filter> filterClass = (Class<? extends Filter>) module.getClassLoader().loadClass(filter.getFilterClass())-->Line_205 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(filterClass)[ FD ]
Line_286 $$ errorPage = new ErrorPage(page.getLocation(), Integer.parseInt(page.getErrorCode()))-->Line_288 $$ errorPage = new ErrorPage(page.getLocation())[ FD ]
Line_209 $$ f = new FilterInfo(filter.getName(), filterClass, instanceFactory)-->Line_211 $$ f = new FilterInfo(filter.getName(), filterClass)[ FD ]
Line_130 $$ final ServletInfo s-->Line_173 $$ s.setServletSecurityInfo(securityInfo)[ FD ]
Line_137 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_190 $$ d.addServlet(s)[ FD ]
Line_146 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_166 $$ if (!s.getInitParams().containsKey(initParam.getParamName())) [ FD ]
Line_172 $$ ServletSecurityInfo securityInfo = new ServletSecurityInfo()-->Line_174 $$ securityInfo.setEmptyRoleSemantic(servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(servlet.getServletSecurity().getTransportGuarantee())).addRolesAllowed(servlet.getServletSecurity().getRolesAllowed())[ FD ]
Line_206 $$ FilterInfo f-->Line_211 $$ f = new FilterInfo(filter.getName(), filterClass)[ FD ]
Line_209 $$ f = new FilterInfo(filter.getName(), filterClass, instanceFactory)-->Line_217 $$ f.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_69 $$ if (jspServlet != null) -->Line_72 $$ JspServletBuilder.setupDeployment(d, propertyGroups, tldInfo, new UndertowJSPInstanceManager(new WebInjectionContainer(module.getClassLoader(), componentRegistryInjectedValue.getValue())))[ CD ]
Line_66 $$ HashMap<String, TagLibraryInfo> tldInfo = createTldsInfo(tldsMetaData, sharedTlds)-->Line_74 $$ d.setJspConfigDescriptor(new JspConfigDescriptorImpl(tldInfo.values(), propertyGroups.values()))[ FD ]
Line_362 $$ final AtomicReference<ServerActivity> serverActivity = new AtomicReference()-->Line_364 $$ serverActivity.set(new ServerActivity() [ FD ]
Line_194 $$ ServletInfo defaultServlet = Servlets.servlet(DEFAULT_SERVLET_NAME, DefaultServlet.class)-->Line_195 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, defaultServlet)[ FD ]
Line_99 $$ for (ServletExtension extension : servletExtensions) -->Line_100 $$ d.addServletExtension(extension)[ FD ]
Line_126 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_156 $$ if (servlet.getLoadOnStartupSet()) [ FD ]
Line_171 $$ if (servlet.getServletSecurity() != null) -->Line_173 $$ s.setServletSecurityInfo(securityInfo)[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_332 $$ d.setLoginConfig(new LoginConfig(loginConfig.getRealmName()))[ FD ]
Line_132 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_152 $$ s.setAsyncSupported(servlet.isAsyncSupported()).setJspFile(servlet.getJspFile()).setEnabled(servlet.isEnabled())[ FD ]
Line_229 $$ if (mapping.getDispatchers() != null && !mapping.getDispatchers().isEmpty()) -->Line_234 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.REQUEST)[ CD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_439 $$ d.setCrawlerSessionManagerConfig(servletContainer.getCrawlerSessionManagerConfig())[ FD ]
Line_148 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_188 $$ s.setMultipartConfig(Servlets.multipartConfig(mp.getLocation(), mp.getMaxFileSize(), mp.getMaxRequestSize(), mp.getFileSizeThreshold()))[ FD ]
Line_281 $$ for (final ErrorPageMetaData page : mergedMetaData.getErrorPages()) -->Line_285 $$ if (page.getErrorCode() != null && !page.getErrorCode().isEmpty()) [ FD ]
Line_187 $$ MultipartConfigMetaData mp = servlet.getMultipartConfig()-->Line_188 $$ s.setMultipartConfig(Servlets.multipartConfig(mp.getLocation(), mp.getMaxFileSize(), mp.getMaxRequestSize(), mp.getFileSizeThreshold()))[ FD ]
Line_130 $$ final ServletInfo s-->Line_190 $$ d.addServlet(s)[ FD ]
Line_209 $$ f = new FilterInfo(filter.getName(), filterClass, instanceFactory)-->Line_214 $$ d.addFilter(f)[ FD ]
Line_326 $$ final LoginConfigMetaData loginConfig = mergedMetaData.getLoginConfig()-->Line_329 $$ if (loginConfig.getFormLoginConfig() != null) [ FD ]
Line_398 $$ ServletContextListener sl = new ServletContextListener() -->Line_406 $$ final ServerActivity activity = serverActivity.get()[ CD ]
Line_284 $$ errorPage = new ErrorPage(page.getLocation(), (Class<? extends Throwable>) module.getClassLoader().loadClass(page.getExceptionType()))-->Line_290 $$ d.addErrorPages(errorPage)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_12 $$ d.setDisplayName(mergedMetaData.getDescriptionGroup().getDisplayName())[ FD ]
Line_132 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_163 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_135 $$ if (servlet.getServletClass() == null) -->Line_136 $$ if (DEFAULT_SERVLET_NAME.equals(servlet.getName())) [ CD ]
