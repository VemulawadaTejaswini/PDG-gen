Line_2 $$ private DeletionTaskRecoveryInfo parseTaskProto(DeletionServiceDeleteTaskProto proto) throws IOException -->Line_3 $$ int taskId = proto.getId()[ CD ]
Line_2 $$ private DeletionTaskRecoveryInfo parseTaskProto(DeletionServiceDeleteTaskProto proto) throws IOException -->Line_17 $$ FileDeletionTask task = new FileDeletionTask(taskId, this, user, subdir, basePaths)[ CD ]
Line_6 $$ List<Path> basePaths = null-->Line_12 $$ basePaths = new ArrayList<Path>(basedirs.size())[ FD ]
Line_2 $$ private DeletionTaskRecoveryInfo parseTaskProto(DeletionServiceDeleteTaskProto proto) throws IOException -->Line_4 $$ String user = proto.hasUser() ? proto.getUser() : null[ CD ]
Line_11 $$ if (basedirs != null && basedirs.size() > 0) -->Line_12 $$ basePaths = new ArrayList<Path>(basedirs.size())[ CD ]
Line_10 $$ List<String> basedirs = proto.getBasedirsList()-->Line_11 $$ if (basedirs != null && basedirs.size() > 0) [ FD ]
Line_10 $$ List<String> basedirs = proto.getBasedirsList()-->Line_12 $$ basePaths = new ArrayList<Path>(basedirs.size())[ FD ]
Line_7 $$ if (proto.hasSubdir()) -->Line_8 $$ subdir = new Path(proto.getSubdir())[ CD ]
Line_2 $$ private DeletionTaskRecoveryInfo parseTaskProto(DeletionServiceDeleteTaskProto proto) throws IOException -->Line_8 $$ subdir = new Path(proto.getSubdir())[ FD ]
Line_2 $$ private DeletionTaskRecoveryInfo parseTaskProto(DeletionServiceDeleteTaskProto proto) throws IOException -->Line_6 $$ List<Path> basePaths = null[ CD ]
Line_2 $$ private DeletionTaskRecoveryInfo parseTaskProto(DeletionServiceDeleteTaskProto proto) throws IOException -->Line_7 $$ if (proto.hasSubdir()) [ FD ]
Line_2 $$ private DeletionTaskRecoveryInfo parseTaskProto(DeletionServiceDeleteTaskProto proto) throws IOException -->Line_10 $$ List<String> basedirs = proto.getBasedirsList()[ CD ]
Line_2 $$ private DeletionTaskRecoveryInfo parseTaskProto(DeletionServiceDeleteTaskProto proto) throws IOException -->Line_18 $$ return new DeletionTaskRecoveryInfo(task, proto.getSuccessorIdsList(), proto.getDeletionTime())[ FD ]
Line_2 $$ private DeletionTaskRecoveryInfo parseTaskProto(DeletionServiceDeleteTaskProto proto) throws IOException -->Line_11 $$ if (basedirs != null && basedirs.size() > 0) [ CD ]
Line_2 $$ private DeletionTaskRecoveryInfo parseTaskProto(DeletionServiceDeleteTaskProto proto) throws IOException -->Line_3 $$ int taskId = proto.getId()[ FD ]
Line_2 $$ private DeletionTaskRecoveryInfo parseTaskProto(DeletionServiceDeleteTaskProto proto) throws IOException -->Line_4 $$ String user = proto.hasUser() ? proto.getUser() : null[ FD ]
Line_2 $$ private DeletionTaskRecoveryInfo parseTaskProto(DeletionServiceDeleteTaskProto proto) throws IOException -->Line_18 $$ return new DeletionTaskRecoveryInfo(task, proto.getSuccessorIdsList(), proto.getDeletionTime())[ CD ]
Line_2 $$ private DeletionTaskRecoveryInfo parseTaskProto(DeletionServiceDeleteTaskProto proto) throws IOException -->Line_5 $$ Path subdir = null[ CD ]
Line_5 $$ Path subdir = null-->Line_8 $$ subdir = new Path(proto.getSubdir())[ FD ]
Line_2 $$ private DeletionTaskRecoveryInfo parseTaskProto(DeletionServiceDeleteTaskProto proto) throws IOException -->Line_10 $$ List<String> basedirs = proto.getBasedirsList()[ FD ]
Line_6 $$ List<Path> basePaths = null-->Line_14 $$ basePaths.add(new Path(basedir))[ FD ]
Line_2 $$ private DeletionTaskRecoveryInfo parseTaskProto(DeletionServiceDeleteTaskProto proto) throws IOException -->Line_7 $$ if (proto.hasSubdir()) [ CD ]
Line_12 $$ basePaths = new ArrayList<Path>(basedirs.size())-->Line_14 $$ basePaths.add(new Path(basedir))[ FD ]
