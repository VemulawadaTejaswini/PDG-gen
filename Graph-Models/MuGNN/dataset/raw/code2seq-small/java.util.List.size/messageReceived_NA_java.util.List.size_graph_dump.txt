Line_39 $$ reduceId = Integer.parseInt(reduceQ.get(0))-->Line_70 $$ populateHeaders(mapIds, outputBasePathStr, user, reduceId, request, response, keepAliveParam, mapOutputInfoMap)[ FD ]
Line_63 $$ Channel ch = evt.getChannel()-->Line_87 $$ lastMap = sendMapOutput(ctx, ch, user, mapId, reduceId, info)[ FD ]
Line_15 $$ boolean keepAliveParam = false-->Line_17 $$ keepAliveParam = Boolean.valueOf(keepAliveList.get(0))[ FD ]
Line_81 $$ for (String mapId : mapIds) -->Line_83 $$ MapOutputInfo info = mapOutputInfoMap.get(mapId)[ FD ]
Line_4 $$ HttpRequest request = (HttpRequest) evt.getMessage()-->Line_26 $$ LOG.debug("RECV: " + request.getUri() + "\n  mapId: " + mapIds + "\n  reduceId: " + reduceQ + "\n  jobId: " + jobQ + "\n  keepAlive: " + keepAliveParam)[ FD ]
Line_32 $$ if (reduceQ.size() != 1 || jobQ.size() != 1) -->Line_34 $$ return[ CD ]
Line_5 $$ if (request.getMethod() != GET) -->Line_7 $$ return[ CD ]
Line_28 $$ if (mapIds == null || reduceQ == null || jobQ == null) -->Line_30 $$ return[ CD ]
Line_23 $$ final List<String> reduceQ = q.get("reduce")-->Line_39 $$ reduceId = Integer.parseInt(reduceQ.get(0))[ FD ]
Line_83 $$ MapOutputInfo info = mapOutputInfoMap.get(mapId)-->Line_84 $$ if (info == null) [ FD ]
Line_23 $$ final List<String> reduceQ = q.get("reduce")-->Line_32 $$ if (reduceQ.size() != 1 || jobQ.size() != 1) [ FD ]
Line_62 $$ Map<String, MapOutputInfo> mapOutputInfoMap = new HashMap<String, MapOutputInfo>()-->Line_83 $$ MapOutputInfo info = mapOutputInfoMap.get(mapId)[ FD ]
Line_24 $$ final List<String> jobQ = q.get("job")-->Line_40 $$ jobId = jobQ.get(0)[ FD ]
Line_37 $$ String jobId-->Line_64 $$ String user = userRsrc.get(jobId)[ FD ]
Line_81 $$ for (String mapId : mapIds) -->Line_87 $$ lastMap = sendMapOutput(ctx, ch, user, mapId, reduceId, info)[ FD ]
Line_5 $$ if (request.getMethod() != GET) -->Line_6 $$ sendError(ctx, METHOD_NOT_ALLOWED)[ CD ]
Line_37 $$ String jobId-->Line_56 $$ verifyRequest(jobId, ctx, request, response, new URL("http", "", this.port, reqUri))[ FD ]
Line_62 $$ Map<String, MapOutputInfo> mapOutputInfoMap = new HashMap<String, MapOutputInfo>()-->Line_70 $$ populateHeaders(mapIds, outputBasePathStr, user, reduceId, request, response, keepAliveParam, mapOutputInfoMap)[ FD ]
Line_36 $$ int reduceId-->Line_87 $$ lastMap = sendMapOutput(ctx, ch, user, mapId, reduceId, info)[ FD ]
Line_36 $$ int reduceId-->Line_39 $$ reduceId = Integer.parseInt(reduceQ.get(0))[ FD ]
Line_63 $$ Channel ch = evt.getChannel()-->Line_78 $$ ch.write(response)[ FD ]
Line_28 $$ if (mapIds == null || reduceQ == null || jobQ == null) -->Line_29 $$ sendError(ctx, "Required param job, map and reduce", BAD_REQUEST)[ CD ]
Line_36 $$ int reduceId-->Line_85 $$ info = getMapOutputInfo(outputBasePathStr, mapId, reduceId, user)[ FD ]
Line_39 $$ reduceId = Integer.parseInt(reduceQ.get(0))-->Line_85 $$ info = getMapOutputInfo(outputBasePathStr, mapId, reduceId, user)[ FD ]
Line_13 $$ final Map<String, List<String>> q = new QueryStringDecoder(request.getUri()).getParameters()-->Line_14 $$ final List<String> keepAliveList = q.get("keepAlive")[ FD ]
Line_88 $$ if (null == lastMap) -->Line_90 $$ return[ CD ]
Line_63 $$ Channel ch = evt.getChannel()-->Line_72 $$ ch.write(response)[ FD ]
Line_25 $$ if (LOG.isDebugEnabled()) -->Line_26 $$ LOG.debug("RECV: " + request.getUri() + "\n  mapId: " + mapIds + "\n  reduceId: " + reduceQ + "\n  jobId: " + jobQ + "\n  keepAlive: " + keepAliveParam)[ CD ]
Line_4 $$ HttpRequest request = (HttpRequest) evt.getMessage()-->Line_5 $$ if (request.getMethod() != GET) [ FD ]
Line_84 $$ if (info == null) -->Line_85 $$ info = getMapOutputInfo(outputBasePathStr, mapId, reduceId, user)[ CD ]
Line_22 $$ final List<String> mapIds = splitMaps(q.get("map"))-->Line_70 $$ populateHeaders(mapIds, outputBasePathStr, user, reduceId, request, response, keepAliveParam, mapOutputInfoMap)[ FD ]
Line_13 $$ final Map<String, List<String>> q = new QueryStringDecoder(request.getUri()).getParameters()-->Line_23 $$ final List<String> reduceQ = q.get("reduce")[ FD ]
Line_37 $$ String jobId-->Line_40 $$ jobId = jobQ.get(0)[ FD ]
Line_4 $$ HttpRequest request = (HttpRequest) evt.getMessage()-->Line_48 $$ final String reqUri = request.getUri()[ FD ]
Line_4 $$ HttpRequest request = (HttpRequest) evt.getMessage()-->Line_70 $$ populateHeaders(mapIds, outputBasePathStr, user, reduceId, request, response, keepAliveParam, mapOutputInfoMap)[ FD ]
Line_54 $$ HttpResponse response = new DefaultHttpResponse(HTTP_1_1, OK)-->Line_56 $$ verifyRequest(jobId, ctx, request, response, new URL("http", "", this.port, reqUri))[ FD ]
Line_87 $$ lastMap = sendMapOutput(ctx, ch, user, mapId, reduceId, info)-->Line_100 $$ lastMap.addListener(ChannelFutureListener.CLOSE)[ FD ]
Line_4 $$ HttpRequest request = (HttpRequest) evt.getMessage()-->Line_13 $$ final Map<String, List<String>> q = new QueryStringDecoder(request.getUri()).getParameters()[ FD ]
Line_64 $$ String user = userRsrc.get(jobId)-->Line_70 $$ populateHeaders(mapIds, outputBasePathStr, user, reduceId, request, response, keepAliveParam, mapOutputInfoMap)[ FD ]
Line_40 $$ jobId = jobQ.get(0)-->Line_64 $$ String user = userRsrc.get(jobId)[ FD ]
Line_15 $$ boolean keepAliveParam = false-->Line_70 $$ populateHeaders(mapIds, outputBasePathStr, user, reduceId, request, response, keepAliveParam, mapOutputInfoMap)[ FD ]
Line_83 $$ MapOutputInfo info = mapOutputInfoMap.get(mapId)-->Line_85 $$ info = getMapOutputInfo(outputBasePathStr, mapId, reduceId, user)[ FD ]
Line_81 $$ for (String mapId : mapIds) -->Line_85 $$ info = getMapOutputInfo(outputBasePathStr, mapId, reduceId, user)[ FD ]
Line_87 $$ lastMap = sendMapOutput(ctx, ch, user, mapId, reduceId, info)-->Line_88 $$ if (null == lastMap) [ FD ]
Line_32 $$ if (reduceQ.size() != 1 || jobQ.size() != 1) -->Line_33 $$ sendError(ctx, "Too many job/reduce parameters", BAD_REQUEST)[ CD ]
Line_48 $$ final String reqUri = request.getUri()-->Line_49 $$ if (null == reqUri) [ FD ]
Line_36 $$ int reduceId-->Line_70 $$ populateHeaders(mapIds, outputBasePathStr, user, reduceId, request, response, keepAliveParam, mapOutputInfoMap)[ FD ]
Line_54 $$ HttpResponse response = new DefaultHttpResponse(HTTP_1_1, OK)-->Line_70 $$ populateHeaders(mapIds, outputBasePathStr, user, reduceId, request, response, keepAliveParam, mapOutputInfoMap)[ FD ]
Line_4 $$ HttpRequest request = (HttpRequest) evt.getMessage()-->Line_56 $$ verifyRequest(jobId, ctx, request, response, new URL("http", "", this.port, reqUri))[ FD ]
Line_64 $$ String user = userRsrc.get(jobId)-->Line_87 $$ lastMap = sendMapOutput(ctx, ch, user, mapId, reduceId, info)[ FD ]
Line_54 $$ HttpResponse response = new DefaultHttpResponse(HTTP_1_1, OK)-->Line_78 $$ ch.write(response)[ FD ]
Line_13 $$ final Map<String, List<String>> q = new QueryStringDecoder(request.getUri()).getParameters()-->Line_22 $$ final List<String> mapIds = splitMaps(q.get("map"))[ FD ]
Line_54 $$ HttpResponse response = new DefaultHttpResponse(HTTP_1_1, OK)-->Line_72 $$ ch.write(response)[ FD ]
Line_39 $$ reduceId = Integer.parseInt(reduceQ.get(0))-->Line_87 $$ lastMap = sendMapOutput(ctx, ch, user, mapId, reduceId, info)[ FD ]
Line_14 $$ final List<String> keepAliveList = q.get("keepAlive")-->Line_17 $$ keepAliveParam = Boolean.valueOf(keepAliveList.get(0))[ FD ]
Line_88 $$ if (null == lastMap) -->Line_89 $$ sendError(ctx, NOT_FOUND)[ CD ]
Line_49 $$ if (null == reqUri) -->Line_52 $$ return[ CD ]
Line_40 $$ jobId = jobQ.get(0)-->Line_56 $$ verifyRequest(jobId, ctx, request, response, new URL("http", "", this.port, reqUri))[ FD ]
Line_14 $$ final List<String> keepAliveList = q.get("keepAlive")-->Line_16 $$ if (keepAliveList != null && keepAliveList.size() == 1) [ FD ]
Line_64 $$ String user = userRsrc.get(jobId)-->Line_85 $$ info = getMapOutputInfo(outputBasePathStr, mapId, reduceId, user)[ FD ]
Line_13 $$ final Map<String, List<String>> q = new QueryStringDecoder(request.getUri()).getParameters()-->Line_24 $$ final List<String> jobQ = q.get("job")[ FD ]
Line_74 $$ String errorMessage = getErrorMessage(e)-->Line_95 $$ sendError(ctx, errorMessage, INTERNAL_SERVER_ERROR)[ FD ]
Line_85 $$ info = getMapOutputInfo(outputBasePathStr, mapId, reduceId, user)-->Line_87 $$ lastMap = sendMapOutput(ctx, ch, user, mapId, reduceId, info)[ FD ]
Line_83 $$ MapOutputInfo info = mapOutputInfoMap.get(mapId)-->Line_87 $$ lastMap = sendMapOutput(ctx, ch, user, mapId, reduceId, info)[ FD ]
Line_16 $$ if (keepAliveList != null && keepAliveList.size() == 1) -->Line_17 $$ keepAliveParam = Boolean.valueOf(keepAliveList.get(0))[ CD ]
Line_16 $$ if (keepAliveList != null && keepAliveList.size() == 1) -->Line_18 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_24 $$ final List<String> jobQ = q.get("job")-->Line_32 $$ if (reduceQ.size() != 1 || jobQ.size() != 1) [ FD ]
Line_87 $$ lastMap = sendMapOutput(ctx, ch, user, mapId, reduceId, info)-->Line_99 $$ lastMap.addListener(metrics)[ FD ]
Line_74 $$ String errorMessage = getErrorMessage(e)-->Line_75 $$ sendError(ctx, errorMessage, INTERNAL_SERVER_ERROR)[ FD ]
Line_17 $$ keepAliveParam = Boolean.valueOf(keepAliveList.get(0))-->Line_70 $$ populateHeaders(mapIds, outputBasePathStr, user, reduceId, request, response, keepAliveParam, mapOutputInfoMap)[ FD ]
Line_18 $$ if (LOG.isDebugEnabled()) -->Line_19 $$ LOG.debug("KeepAliveParam : " + keepAliveList + " : " + keepAliveParam)[ CD ]
