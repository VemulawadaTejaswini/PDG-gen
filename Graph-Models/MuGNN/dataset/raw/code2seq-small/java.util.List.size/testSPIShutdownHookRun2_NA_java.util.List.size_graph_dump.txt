Line_21 $$ logRecord = logRecords.get(1)-->Line_22 $$ Assert.assertEquals("Wait up to " + _spiConfiguration.getShutdownTimeout() + " ms for MPI shutdown request", logRecord.getMessage())[ FD ]
Line_19 $$ Throwable throwable = logRecord.getThrown()-->Line_20 $$ Assert.assertSame(NullPointerException.class, throwable.getClass())[ FD ]
Line_21 $$ logRecord = logRecords.get(1)-->Line_24 $$ Assert.assertEquals("Proceed with SPI shutdown", logRecord.getMessage())[ FD ]
Line_12 $$ SPIShutdownHook spiShutdownHook = _mockRemoteSPI.new SPIShutdownHook()-->Line_14 $$ spiShutdownHook.run()[ FD ]
Line_15 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_16 $$ Assert.assertEquals(3, logRecords.size())[ FD ]
Line_23 $$ logRecord = logRecords.get(2)-->Line_24 $$ Assert.assertEquals("Proceed with SPI shutdown", logRecord.getMessage())[ FD ]
Line_21 $$ logRecord = logRecords.get(1)-->Line_23 $$ logRecord = logRecords.get(2)[ FD ]
Line_17 $$ LogRecord logRecord = logRecords.get(0)-->Line_22 $$ Assert.assertEquals("Wait up to " + _spiConfiguration.getShutdownTimeout() + " ms for MPI shutdown request", logRecord.getMessage())[ FD ]
Line_15 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_17 $$ LogRecord logRecord = logRecords.get(0)[ FD ]
Line_17 $$ LogRecord logRecord = logRecords.get(0)-->Line_21 $$ logRecord = logRecords.get(1)[ FD ]
Line_15 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_21 $$ logRecord = logRecords.get(1)[ FD ]
Line_17 $$ LogRecord logRecord = logRecords.get(0)-->Line_18 $$ Assert.assertEquals("Unable to unregister SPI from MPI", logRecord.getMessage())[ FD ]
Line_17 $$ LogRecord logRecord = logRecords.get(0)-->Line_24 $$ Assert.assertEquals("Proceed with SPI shutdown", logRecord.getMessage())[ FD ]
Line_15 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_23 $$ logRecord = logRecords.get(2)[ FD ]
Line_17 $$ LogRecord logRecord = logRecords.get(0)-->Line_19 $$ Throwable throwable = logRecord.getThrown()[ FD ]
Line_13 $$ try (CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(RemoteSPI.class.getName(), Level.ALL)) -->Line_15 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ FD ]
Line_6 $$ MockSPIProvider mockSPIProvider = new MockSPIProvider(spiProviderName)-->Line_7 $$ MPIHelperUtil.registerSPIProvider(mockSPIProvider)[ FD ]
Line_17 $$ LogRecord logRecord = logRecords.get(0)-->Line_23 $$ logRecord = logRecords.get(2)[ FD ]
