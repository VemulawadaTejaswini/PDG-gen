Line_5 $$ INode deleted = fsDir.getInode(deletedId)-->Line_6 $$ dlist.add(deleted)[ FD ]
Line_10 $$ INodeReference deletedRef = refList.get(refId)-->Line_12 $$ addToDeletedList(deletedRef, dir)[ FD ]
Line_14 $$ Collections.sort(dlist, new Comparator<INode>() -->Line_16 $$ return n1.compareTo(n2.getLocalNameBytes())[ CD ]
Line_2 $$ private List<INode> loadDeletedList(final List<INodeReference> refList, InputStream in, INodeDirectory dir, List<Long> deletedNodes, List<Integer> deletedRefNodes) throws IOException -->Line_19 $$ return dlist[ CD ]
Line_2 $$ private List<INode> loadDeletedList(final List<INodeReference> refList, InputStream in, INodeDirectory dir, List<Long> deletedNodes, List<Integer> deletedRefNodes) throws IOException -->Line_7 $$ addToDeletedList(deleted, dir)[ FD ]
Line_10 $$ INodeReference deletedRef = refList.get(refId)-->Line_11 $$ dlist.add(deletedRef)[ FD ]
Line_3 $$ List<INode> dlist = new ArrayList<INode>(deletedRefNodes.size() + deletedNodes.size())-->Line_14 $$ Collections.sort(dlist, new Comparator<INode>() [ FD ]
Line_14 $$ Collections.sort(dlist, new Comparator<INode>() -->Line_16 $$ return n1.compareTo(n2.getLocalNameBytes())[ FD ]
Line_4 $$ for (long deletedId : deletedNodes) -->Line_5 $$ INode deleted = fsDir.getInode(deletedId)[ FD ]
Line_2 $$ private List<INode> loadDeletedList(final List<INodeReference> refList, InputStream in, INodeDirectory dir, List<Long> deletedNodes, List<Integer> deletedRefNodes) throws IOException -->Line_12 $$ addToDeletedList(deletedRef, dir)[ FD ]
Line_2 $$ private List<INode> loadDeletedList(final List<INodeReference> refList, InputStream in, INodeDirectory dir, List<Long> deletedNodes, List<Integer> deletedRefNodes) throws IOException -->Line_3 $$ List<INode> dlist = new ArrayList<INode>(deletedRefNodes.size() + deletedNodes.size())[ CD ]
Line_3 $$ List<INode> dlist = new ArrayList<INode>(deletedRefNodes.size() + deletedNodes.size())-->Line_6 $$ dlist.add(deleted)[ FD ]
Line_2 $$ private List<INode> loadDeletedList(final List<INodeReference> refList, InputStream in, INodeDirectory dir, List<Long> deletedNodes, List<Integer> deletedRefNodes) throws IOException -->Line_14 $$ Collections.sort(dlist, new Comparator<INode>() [ CD ]
Line_3 $$ List<INode> dlist = new ArrayList<INode>(deletedRefNodes.size() + deletedNodes.size())-->Line_11 $$ dlist.add(deletedRef)[ FD ]
Line_2 $$ private List<INode> loadDeletedList(final List<INodeReference> refList, InputStream in, INodeDirectory dir, List<Long> deletedNodes, List<Integer> deletedRefNodes) throws IOException -->Line_3 $$ List<INode> dlist = new ArrayList<INode>(deletedRefNodes.size() + deletedNodes.size())[ FD ]
Line_2 $$ private List<INode> loadDeletedList(final List<INodeReference> refList, InputStream in, INodeDirectory dir, List<Long> deletedNodes, List<Integer> deletedRefNodes) throws IOException -->Line_10 $$ INodeReference deletedRef = refList.get(refId)[ FD ]
Line_5 $$ INode deleted = fsDir.getInode(deletedId)-->Line_7 $$ addToDeletedList(deleted, dir)[ FD ]
Line_9 $$ for (int refId : deletedRefNodes) -->Line_10 $$ INodeReference deletedRef = refList.get(refId)[ FD ]
