Line_20 $$ Foo foo1 = new Foo()-->Line_81 $$ s.delete(s.get(Foo.class, foo1.getKey()))[ FD ]
Line_14 $$ Glarch g2 = new Glarch()-->Line_16 $$ s.save(g2)[ FD ]
Line_28 $$ Criteria crit = s.createCriteria(Baz.class)-->Line_58 $$ baz = (Baz) crit.uniqueResult()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_49 $$ t.commit()[ FD ]
Line_45 $$ list = s.createCriteria(Baz.class).add(Restrictions.isNotEmpty("fooSet")).list()-->Line_64 $$ list = s.createCriteria(Baz.class).createAlias("fooSet", "foo").createAlias("foo.foo", "foo2").setLockMode("foo2", lockMode).add(Restrictions.isNull("foo2.component.glarch")).createCriteria("foo2.component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_52 $$ t = s.beginTransaction()-->Line_66 $$ t.commit()[ FD ]
Line_53 $$ crit = s.createCriteria(Baz.class).setLockMode(lockMode)-->Line_56 $$ list = crit.list()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_84 $$ t.commit()[ FD ]
Line_28 $$ Criteria crit = s.createCriteria(Baz.class)-->Line_56 $$ list = crit.list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_51 $$ s = openSession()[ FD ]
Line_42 $$ t = s.beginTransaction()-->Line_49 $$ t.commit()[ FD ]
Line_51 $$ s = openSession()-->Line_62 $$ list = s.createCriteria(Baz.class).createCriteria("fooSet").createCriteria("foo").createCriteria("component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_11 $$ Glarch g1 = new Glarch()-->Line_13 $$ s.save(g1)[ FD ]
Line_51 $$ s = openSession()-->Line_52 $$ t = s.beginTransaction()[ FD ]
Line_64 $$ list = s.createCriteria(Baz.class).createAlias("fooSet", "foo").createAlias("foo.foo", "foo2").setLockMode("foo2", lockMode).add(Restrictions.isNull("foo2.component.glarch")).createCriteria("foo2.component.glarch").add(Restrictions.eq("name", "xxx")).list()-->Line_74 $$ assertTrue(list.size() == 2)[ FD ]
Line_41 $$ s = openSession()-->Line_45 $$ list = s.createCriteria(Baz.class).add(Restrictions.isNotEmpty("fooSet")).list()[ FD ]
Line_41 $$ s = openSession()-->Line_47 $$ list = s.createCriteria(Baz.class).add(Restrictions.sizeEq("fooSet", 2)).list()[ FD ]
Line_42 $$ t = s.beginTransaction()-->Line_84 $$ t.commit()[ FD ]
Line_70 $$ crit = s.createCriteria(Baz.class)-->Line_72 $$ crit.createCriteria("fooSet").add(Restrictions.isNull("null"))[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_75 $$ baz = (Baz) crit.uniqueResult()[ FD ]
Line_27 $$ LockMode lockMode = supportsLockingNullableSideOfJoin(getDialect()) ? LockMode.UPGRADE : LockMode.READ-->Line_53 $$ crit = s.createCriteria(Baz.class).setLockMode(lockMode)[ FD ]
Line_47 $$ list = s.createCriteria(Baz.class).add(Restrictions.sizeEq("fooSet", 2)).list()-->Line_57 $$ assertTrue(list.size() == 4)[ FD ]
Line_56 $$ list = crit.list()-->Line_63 $$ assertTrue(list.size() == 0)[ FD ]
Line_41 $$ s = openSession()-->Line_85 $$ s.close()[ FD ]
Line_62 $$ list = s.createCriteria(Baz.class).createCriteria("fooSet").createCriteria("foo").createCriteria("component.glarch").add(Restrictions.eq("name", "xxx")).list()-->Line_73 $$ list = crit.list()[ FD ]
Line_11 $$ Glarch g1 = new Glarch()-->Line_17 $$ g1.setProxyArray(new GlarchProxy[] [ FD ]
Line_45 $$ list = s.createCriteria(Baz.class).add(Restrictions.isNotEmpty("fooSet")).list()-->Line_62 $$ list = s.createCriteria(Baz.class).createCriteria("fooSet").createCriteria("foo").createCriteria("component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_43 $$ list = s.createCriteria(Baz.class).add(Restrictions.isEmpty("fooSet")).list()-->Line_57 $$ assertTrue(list.size() == 4)[ FD ]
Line_43 $$ list = s.createCriteria(Baz.class).add(Restrictions.isEmpty("fooSet")).list()-->Line_73 $$ list = crit.list()[ FD ]
Line_21 $$ Foo foo2 = new Foo()-->Line_82 $$ s.delete(s.get(Foo.class, foo2.getKey()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_69 $$ t = s.beginTransaction()[ FD ]
Line_28 $$ Criteria crit = s.createCriteria(Baz.class)-->Line_70 $$ crit = s.createCriteria(Baz.class)[ FD ]
Line_51 $$ s = openSession()-->Line_70 $$ crit = s.createCriteria(Baz.class)[ FD ]
Line_41 $$ s = openSession()-->Line_43 $$ list = s.createCriteria(Baz.class).add(Restrictions.isEmpty("fooSet")).list()[ FD ]
Line_58 $$ baz = (Baz) crit.uniqueResult()-->Line_78 $$ assertTrue(!Hibernate.isInitialized(baz.getFooSet()))[ FD ]
Line_51 $$ s = openSession()-->Line_80 $$ doDelete(s, "from Glarch g")[ FD ]
Line_68 $$ s = openSession()-->Line_79 $$ s.createCriteria(Child.class).setFetchMode("parent", FetchMode.JOIN).list()[ FD ]
Line_53 $$ crit = s.createCriteria(Baz.class).setLockMode(lockMode)-->Line_75 $$ baz = (Baz) crit.uniqueResult()[ FD ]
Line_41 $$ s = openSession()-->Line_42 $$ t = s.beginTransaction()[ FD ]
Line_56 $$ list = crit.list()-->Line_74 $$ assertTrue(list.size() == 2)[ FD ]
Line_53 $$ crit = s.createCriteria(Baz.class).setLockMode(lockMode)-->Line_58 $$ baz = (Baz) crit.uniqueResult()[ FD ]
Line_4 $$ Session s = openSession()-->Line_62 $$ list = s.createCriteria(Baz.class).createCriteria("fooSet").createCriteria("foo").createCriteria("component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_34 $$ List list = crit.list()-->Line_62 $$ list = s.createCriteria(Baz.class).createCriteria("fooSet").createCriteria("foo").createCriteria("component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_56 $$ list = crit.list()-->Line_73 $$ list = crit.list()[ FD ]
Line_42 $$ t = s.beginTransaction()-->Line_52 $$ t = s.beginTransaction()[ FD ]
Line_58 $$ baz = (Baz) crit.uniqueResult()-->Line_75 $$ baz = (Baz) crit.uniqueResult()[ FD ]
Line_28 $$ Criteria crit = s.createCriteria(Baz.class)-->Line_55 $$ crit.createCriteria("fooSet").add(Restrictions.isNull("null"))[ FD ]
Line_68 $$ s = openSession()-->Line_82 $$ s.delete(s.get(Foo.class, foo2.getKey()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_47 $$ list = s.createCriteria(Baz.class).add(Restrictions.sizeEq("fooSet", 2)).list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_37 $$ s.createCriteria(Glarch.class).setLockMode(Criteria.ROOT_ALIAS, LockMode.UPGRADE).list()[ FD ]
Line_28 $$ Criteria crit = s.createCriteria(Baz.class)-->Line_53 $$ crit = s.createCriteria(Baz.class).setLockMode(lockMode)[ FD ]
Line_41 $$ s = openSession()-->Line_81 $$ s.delete(s.get(Foo.class, foo1.getKey()))[ FD ]
Line_69 $$ t = s.beginTransaction()-->Line_84 $$ t.commit()[ FD ]
Line_51 $$ s = openSession()-->Line_68 $$ s = openSession()[ FD ]
Line_41 $$ s = openSession()-->Line_68 $$ s = openSession()[ FD ]
Line_47 $$ list = s.createCriteria(Baz.class).add(Restrictions.sizeEq("fooSet", 2)).list()-->Line_63 $$ assertTrue(list.size() == 0)[ FD ]
Line_70 $$ crit = s.createCriteria(Baz.class)-->Line_75 $$ baz = (Baz) crit.uniqueResult()[ FD ]
Line_41 $$ s = openSession()-->Line_70 $$ crit = s.createCriteria(Baz.class)[ FD ]
Line_47 $$ list = s.createCriteria(Baz.class).add(Restrictions.sizeEq("fooSet", 2)).list()-->Line_64 $$ list = s.createCriteria(Baz.class).createAlias("fooSet", "foo").createAlias("foo.foo", "foo2").setLockMode("foo2", lockMode).add(Restrictions.isNull("foo2.component.glarch")).createCriteria("foo2.component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_56 $$ list = crit.list()-->Line_64 $$ list = s.createCriteria(Baz.class).createAlias("fooSet", "foo").createAlias("foo.foo", "foo2").setLockMode("foo2", lockMode).add(Restrictions.isNull("foo2.component.glarch")).createCriteria("foo2.component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_28 $$ Criteria crit = s.createCriteria(Baz.class)[ FD ]
Line_70 $$ crit = s.createCriteria(Baz.class)-->Line_71 $$ crit.createCriteria("topGlarchez").add(Restrictions.isNotNull("name"))[ FD ]
Line_34 $$ List list = crit.list()-->Line_74 $$ assertTrue(list.size() == 2)[ FD ]
Line_47 $$ list = s.createCriteria(Baz.class).add(Restrictions.sizeEq("fooSet", 2)).list()-->Line_73 $$ list = crit.list()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_66 $$ t.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_7 $$ s.save(baz)[ FD ]
Line_41 $$ s = openSession()-->Line_52 $$ t = s.beginTransaction()[ FD ]
Line_43 $$ list = s.createCriteria(Baz.class).add(Restrictions.isEmpty("fooSet")).list()-->Line_56 $$ list = crit.list()[ FD ]
Line_28 $$ Criteria crit = s.createCriteria(Baz.class)-->Line_29 $$ crit.createCriteria("topGlarchez").add(Restrictions.isNotNull("name")).createCriteria("proxyArray").add(Restrictions.eqProperty("name", "name")).add(Restrictions.eq("name", "g2")).add(Restrictions.gt("x", new Integer(-666)))[ FD ]
Line_4 $$ Session s = openSession()-->Line_68 $$ s = openSession()[ FD ]
Line_47 $$ list = s.createCriteria(Baz.class).add(Restrictions.sizeEq("fooSet", 2)).list()-->Line_74 $$ assertTrue(list.size() == 2)[ FD ]
Line_4 $$ Session s = openSession()-->Line_83 $$ s.delete(baz)[ FD ]
Line_43 $$ list = s.createCriteria(Baz.class).add(Restrictions.isEmpty("fooSet")).list()-->Line_45 $$ list = s.createCriteria(Baz.class).add(Restrictions.isNotEmpty("fooSet")).list()[ FD ]
Line_20 $$ Foo foo1 = new Foo()-->Line_22 $$ s.save(foo1)[ FD ]
Line_45 $$ list = s.createCriteria(Baz.class).add(Restrictions.isNotEmpty("fooSet")).list()-->Line_65 $$ assertTrue(list.size() == 0)[ FD ]
Line_4 $$ Session s = openSession()-->Line_36 $$ s.createCriteria(Glarch.class).setLockMode(LockMode.UPGRADE).list()[ FD ]
Line_34 $$ List list = crit.list()-->Line_65 $$ assertTrue(list.size() == 0)[ FD ]
Line_56 $$ list = crit.list()-->Line_57 $$ assertTrue(list.size() == 4)[ FD ]
Line_51 $$ s = openSession()-->Line_85 $$ s.close()[ FD ]
Line_27 $$ LockMode lockMode = supportsLockingNullableSideOfJoin(getDialect()) ? LockMode.UPGRADE : LockMode.READ-->Line_64 $$ list = s.createCriteria(Baz.class).createAlias("fooSet", "foo").createAlias("foo.foo", "foo2").setLockMode("foo2", lockMode).add(Restrictions.isNull("foo2.component.glarch")).createCriteria("foo2.component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_50 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_70 $$ crit = s.createCriteria(Baz.class)[ FD ]
Line_41 $$ s = openSession()-->Line_83 $$ s.delete(baz)[ FD ]
Line_53 $$ crit = s.createCriteria(Baz.class).setLockMode(lockMode)-->Line_70 $$ crit = s.createCriteria(Baz.class)[ FD ]
Line_41 $$ s = openSession()-->Line_50 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_41 $$ s = openSession()[ FD ]
Line_28 $$ Criteria crit = s.createCriteria(Baz.class)-->Line_34 $$ List list = crit.list()[ FD ]
Line_34 $$ List list = crit.list()-->Line_56 $$ list = crit.list()[ FD ]
Line_9 $$ Map topGlarchez = new HashMap()-->Line_19 $$ topGlarchez.put(new Character('2'), g2)[ FD ]
Line_45 $$ list = s.createCriteria(Baz.class).add(Restrictions.isNotEmpty("fooSet")).list()-->Line_47 $$ list = s.createCriteria(Baz.class).add(Restrictions.sizeEq("fooSet", 2)).list()[ FD ]
Line_28 $$ Criteria crit = s.createCriteria(Baz.class)-->Line_54 $$ crit.createCriteria("topGlarchez").add(Restrictions.gt("x", new Integer(-666)))[ FD ]
Line_62 $$ list = s.createCriteria(Baz.class).createCriteria("fooSet").createCriteria("foo").createCriteria("component.glarch").add(Restrictions.eq("name", "xxx")).list()-->Line_63 $$ assertTrue(list.size() == 0)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_69 $$ t = s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_81 $$ s.delete(s.get(Foo.class, foo1.getKey()))[ FD ]
Line_47 $$ list = s.createCriteria(Baz.class).add(Restrictions.sizeEq("fooSet", 2)).list()-->Line_62 $$ list = s.createCriteria(Baz.class).createCriteria("fooSet").createCriteria("foo").createCriteria("component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_62 $$ list = s.createCriteria(Baz.class).createCriteria("fooSet").createCriteria("foo").createCriteria("component.glarch").add(Restrictions.eq("name", "xxx")).list()-->Line_74 $$ assertTrue(list.size() == 2)[ FD ]
Line_64 $$ list = s.createCriteria(Baz.class).createAlias("fooSet", "foo").createAlias("foo.foo", "foo2").setLockMode("foo2", lockMode).add(Restrictions.isNull("foo2.component.glarch")).createCriteria("foo2.component.glarch").add(Restrictions.eq("name", "xxx")).list()-->Line_65 $$ assertTrue(list.size() == 0)[ FD ]
Line_68 $$ s = openSession()-->Line_69 $$ t = s.beginTransaction()[ FD ]
Line_43 $$ list = s.createCriteria(Baz.class).add(Restrictions.isEmpty("fooSet")).list()-->Line_47 $$ list = s.createCriteria(Baz.class).add(Restrictions.sizeEq("fooSet", 2)).list()[ FD ]
Line_73 $$ list = crit.list()-->Line_74 $$ assertTrue(list.size() == 2)[ FD ]
Line_41 $$ s = openSession()-->Line_80 $$ doDelete(s, "from Glarch g")[ FD ]
Line_34 $$ List list = crit.list()-->Line_73 $$ list = crit.list()[ FD ]
Line_45 $$ list = s.createCriteria(Baz.class).add(Restrictions.isNotEmpty("fooSet")).list()-->Line_74 $$ assertTrue(list.size() == 2)[ FD ]
Line_41 $$ s = openSession()-->Line_51 $$ s = openSession()[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_8 $$ baz.setDefaults()[ FD ]
Line_45 $$ list = s.createCriteria(Baz.class).add(Restrictions.isNotEmpty("fooSet")).list()-->Line_56 $$ list = crit.list()[ FD ]
Line_68 $$ s = openSession()-->Line_70 $$ crit = s.createCriteria(Baz.class)[ FD ]
Line_4 $$ Session s = openSession()-->Line_52 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_61 $$ assertTrue(!Hibernate.isInitialized(baz.getFooSet()))[ FD ]
Line_43 $$ list = s.createCriteria(Baz.class).add(Restrictions.isEmpty("fooSet")).list()-->Line_44 $$ assertEquals(list.size(), 0)[ FD ]
Line_34 $$ List list = crit.list()-->Line_47 $$ list = s.createCriteria(Baz.class).add(Restrictions.sizeEq("fooSet", 2)).list()[ FD ]
Line_53 $$ crit = s.createCriteria(Baz.class).setLockMode(lockMode)-->Line_72 $$ crit.createCriteria("fooSet").add(Restrictions.isNull("null"))[ FD ]
Line_4 $$ Session s = openSession()-->Line_40 $$ s.close()[ FD ]
Line_56 $$ list = crit.list()-->Line_62 $$ list = s.createCriteria(Baz.class).createCriteria("fooSet").createCriteria("foo").createCriteria("component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_53 $$ crit = s.createCriteria(Baz.class).setLockMode(lockMode)-->Line_71 $$ crit.createCriteria("topGlarchez").add(Restrictions.isNotNull("name"))[ FD ]
Line_53 $$ crit = s.createCriteria(Baz.class).setLockMode(lockMode)-->Line_73 $$ list = crit.list()[ FD ]
Line_51 $$ s = openSession()-->Line_53 $$ crit = s.createCriteria(Baz.class).setLockMode(lockMode)[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_26 $$ baz.setFooArray(new FooProxy[] [ FD ]
Line_34 $$ List list = crit.list()-->Line_63 $$ assertTrue(list.size() == 0)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_42 $$ t = s.beginTransaction()[ FD ]
Line_43 $$ list = s.createCriteria(Baz.class).add(Restrictions.isEmpty("fooSet")).list()-->Line_64 $$ list = s.createCriteria(Baz.class).createAlias("fooSet", "foo").createAlias("foo.foo", "foo2").setLockMode("foo2", lockMode).add(Restrictions.isNull("foo2.component.glarch")).createCriteria("foo2.component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_7 $$ s.save(baz)[ FD ]
Line_14 $$ Glarch g2 = new Glarch()-->Line_15 $$ g2.setName("g2")[ FD ]
Line_4 $$ Session s = openSession()-->Line_22 $$ s.save(foo1)[ FD ]
Line_34 $$ List list = crit.list()-->Line_44 $$ assertEquals(list.size(), 0)[ FD ]
Line_45 $$ list = s.createCriteria(Baz.class).add(Restrictions.isNotEmpty("fooSet")).list()-->Line_63 $$ assertTrue(list.size() == 0)[ FD ]
Line_11 $$ Glarch g1 = new Glarch()-->Line_12 $$ g1.setName("g1")[ FD ]
Line_41 $$ s = openSession()-->Line_64 $$ list = s.createCriteria(Baz.class).createAlias("fooSet", "foo").createAlias("foo.foo", "foo2").setLockMode("foo2", lockMode).add(Restrictions.isNull("foo2.component.glarch")).createCriteria("foo2.component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_28 $$ Criteria crit = s.createCriteria(Baz.class)-->Line_73 $$ list = crit.list()[ FD ]
Line_51 $$ s = openSession()-->Line_82 $$ s.delete(s.get(Foo.class, foo2.getKey()))[ FD ]
Line_20 $$ Foo foo1 = new Foo()-->Line_24 $$ baz.getFooSet().add(foo1)[ FD ]
Line_43 $$ list = s.createCriteria(Baz.class).add(Restrictions.isEmpty("fooSet")).list()-->Line_74 $$ assertTrue(list.size() == 2)[ FD ]
Line_34 $$ List list = crit.list()-->Line_35 $$ assertTrue(list.size() == 2)[ FD ]
Line_4 $$ Session s = openSession()-->Line_82 $$ s.delete(s.get(Foo.class, foo2.getKey()))[ FD ]
Line_43 $$ list = s.createCriteria(Baz.class).add(Restrictions.isEmpty("fooSet")).list()-->Line_62 $$ list = s.createCriteria(Baz.class).createCriteria("fooSet").createCriteria("foo").createCriteria("component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_41 $$ s = openSession()-->Line_67 $$ s.close()[ FD ]
Line_42 $$ t = s.beginTransaction()-->Line_69 $$ t = s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_79 $$ s.createCriteria(Child.class).setFetchMode("parent", FetchMode.JOIN).list()[ FD ]
Line_41 $$ s = openSession()-->Line_69 $$ t = s.beginTransaction()[ FD ]
Line_45 $$ list = s.createCriteria(Baz.class).add(Restrictions.isNotEmpty("fooSet")).list()-->Line_57 $$ assertTrue(list.size() == 4)[ FD ]
Line_34 $$ List list = crit.list()-->Line_57 $$ assertTrue(list.size() == 4)[ FD ]
Line_64 $$ list = s.createCriteria(Baz.class).createAlias("fooSet", "foo").createAlias("foo.foo", "foo2").setLockMode("foo2", lockMode).add(Restrictions.isNull("foo2.component.glarch")).createCriteria("foo2.component.glarch").add(Restrictions.eq("name", "xxx")).list()-->Line_73 $$ list = crit.list()[ FD ]
Line_41 $$ s = openSession()-->Line_79 $$ s.createCriteria(Child.class).setFetchMode("parent", FetchMode.JOIN).list()[ FD ]
Line_53 $$ crit = s.createCriteria(Baz.class).setLockMode(lockMode)-->Line_55 $$ crit.createCriteria("fooSet").add(Restrictions.isNull("null"))[ FD ]
Line_41 $$ s = openSession()-->Line_82 $$ s.delete(s.get(Foo.class, foo2.getKey()))[ FD ]
Line_51 $$ s = openSession()-->Line_64 $$ list = s.createCriteria(Baz.class).createAlias("fooSet", "foo").createAlias("foo.foo", "foo2").setLockMode("foo2", lockMode).add(Restrictions.isNull("foo2.component.glarch")).createCriteria("foo2.component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_51 $$ s = openSession()-->Line_81 $$ s.delete(s.get(Foo.class, foo1.getKey()))[ FD ]
Line_9 $$ Map topGlarchez = new HashMap()-->Line_10 $$ baz.setTopGlarchez(topGlarchez)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_39 $$ t.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_23 $$ s.save(foo2)[ FD ]
Line_28 $$ Criteria crit = s.createCriteria(Baz.class)-->Line_75 $$ baz = (Baz) crit.uniqueResult()[ FD ]
Line_28 $$ Criteria crit = s.createCriteria(Baz.class)-->Line_30 $$ crit.createCriteria("fooSet").add(Restrictions.isNull("null")).add(Restrictions.eq("string", "a string")).add(Restrictions.lt("integer", new Integer(-665)))[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_78 $$ assertTrue(!Hibernate.isInitialized(baz.getFooSet()))[ FD ]
Line_14 $$ Glarch g2 = new Glarch()-->Line_19 $$ topGlarchez.put(new Character('2'), g2)[ FD ]
Line_28 $$ Criteria crit = s.createCriteria(Baz.class)-->Line_71 $$ crit.createCriteria("topGlarchez").add(Restrictions.isNotNull("name"))[ FD ]
Line_68 $$ s = openSession()-->Line_83 $$ s.delete(baz)[ FD ]
Line_52 $$ t = s.beginTransaction()-->Line_69 $$ t = s.beginTransaction()[ FD ]
Line_43 $$ list = s.createCriteria(Baz.class).add(Restrictions.isEmpty("fooSet")).list()-->Line_65 $$ assertTrue(list.size() == 0)[ FD ]
Line_9 $$ Map topGlarchez = new HashMap()-->Line_18 $$ topGlarchez.put(new Character('1'), g1)[ FD ]
Line_34 $$ List list = crit.list()-->Line_45 $$ list = s.createCriteria(Baz.class).add(Restrictions.isNotEmpty("fooSet")).list()[ FD ]
Line_53 $$ crit = s.createCriteria(Baz.class).setLockMode(lockMode)-->Line_54 $$ crit.createCriteria("topGlarchez").add(Restrictions.gt("x", new Integer(-666)))[ FD ]
Line_43 $$ list = s.createCriteria(Baz.class).add(Restrictions.isEmpty("fooSet")).list()-->Line_63 $$ assertTrue(list.size() == 0)[ FD ]
Line_51 $$ s = openSession()-->Line_79 $$ s.createCriteria(Child.class).setFetchMode("parent", FetchMode.JOIN).list()[ FD ]
Line_68 $$ s = openSession()-->Line_81 $$ s.delete(s.get(Foo.class, foo1.getKey()))[ FD ]
Line_45 $$ list = s.createCriteria(Baz.class).add(Restrictions.isNotEmpty("fooSet")).list()-->Line_73 $$ list = crit.list()[ FD ]
Line_34 $$ List list = crit.list()-->Line_43 $$ list = s.createCriteria(Baz.class).add(Restrictions.isEmpty("fooSet")).list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ Transaction t = s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_53 $$ crit = s.createCriteria(Baz.class).setLockMode(lockMode)[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_10 $$ baz.setTopGlarchez(topGlarchez)[ FD ]
Line_47 $$ list = s.createCriteria(Baz.class).add(Restrictions.sizeEq("fooSet", 2)).list()-->Line_56 $$ list = crit.list()[ FD ]
Line_70 $$ crit = s.createCriteria(Baz.class)-->Line_73 $$ list = crit.list()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_52 $$ t = s.beginTransaction()[ FD ]
Line_51 $$ s = openSession()-->Line_69 $$ t = s.beginTransaction()[ FD ]
Line_75 $$ baz = (Baz) crit.uniqueResult()-->Line_78 $$ assertTrue(!Hibernate.isInitialized(baz.getFooSet()))[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_25 $$ baz.getFooSet().add(foo2)[ FD ]
Line_4 $$ Session s = openSession()-->Line_13 $$ s.save(g1)[ FD ]
Line_11 $$ Glarch g1 = new Glarch()-->Line_18 $$ topGlarchez.put(new Character('1'), g1)[ FD ]
Line_56 $$ list = crit.list()-->Line_65 $$ assertTrue(list.size() == 0)[ FD ]
Line_34 $$ List list = crit.list()-->Line_64 $$ list = s.createCriteria(Baz.class).createAlias("fooSet", "foo").createAlias("foo.foo", "foo2").setLockMode("foo2", lockMode).add(Restrictions.isNull("foo2.component.glarch")).createCriteria("foo2.component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_64 $$ list = s.createCriteria(Baz.class).createAlias("fooSet", "foo").createAlias("foo.foo", "foo2").setLockMode("foo2", lockMode).add(Restrictions.isNull("foo2.component.glarch")).createCriteria("foo2.component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_47 $$ list = s.createCriteria(Baz.class).add(Restrictions.sizeEq("fooSet", 2)).list()-->Line_65 $$ assertTrue(list.size() == 0)[ FD ]
Line_52 $$ t = s.beginTransaction()-->Line_84 $$ t.commit()[ FD ]
Line_51 $$ s = openSession()-->Line_83 $$ s.delete(baz)[ FD ]
Line_4 $$ Session s = openSession()-->Line_16 $$ s.save(g2)[ FD ]
Line_4 $$ Session s = openSession()-->Line_80 $$ doDelete(s, "from Glarch g")[ FD ]
Line_4 $$ Session s = openSession()-->Line_85 $$ s.close()[ FD ]
Line_21 $$ Foo foo2 = new Foo()-->Line_23 $$ s.save(foo2)[ FD ]
Line_4 $$ Session s = openSession()-->Line_67 $$ s.close()[ FD ]
Line_75 $$ baz = (Baz) crit.uniqueResult()-->Line_83 $$ s.delete(baz)[ FD ]
Line_4 $$ Session s = openSession()-->Line_45 $$ list = s.createCriteria(Baz.class).add(Restrictions.isNotEmpty("fooSet")).list()[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_58 $$ baz = (Baz) crit.uniqueResult()[ FD ]
Line_41 $$ s = openSession()-->Line_62 $$ list = s.createCriteria(Baz.class).createCriteria("fooSet").createCriteria("foo").createCriteria("component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_42 $$ t = s.beginTransaction()[ FD ]
Line_42 $$ t = s.beginTransaction()-->Line_66 $$ t.commit()[ FD ]
Line_58 $$ baz = (Baz) crit.uniqueResult()-->Line_83 $$ s.delete(baz)[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_83 $$ s.delete(baz)[ FD ]
Line_51 $$ s = openSession()-->Line_67 $$ s.close()[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_24 $$ baz.getFooSet().add(foo1)[ FD ]
Line_21 $$ Foo foo2 = new Foo()-->Line_25 $$ baz.getFooSet().add(foo2)[ FD ]
Line_14 $$ Glarch g2 = new Glarch()-->Line_38 $$ g2.setName(null)[ FD ]
Line_62 $$ list = s.createCriteria(Baz.class).createCriteria("fooSet").createCriteria("foo").createCriteria("component.glarch").add(Restrictions.eq("name", "xxx")).list()-->Line_64 $$ list = s.createCriteria(Baz.class).createAlias("fooSet", "foo").createAlias("foo.foo", "foo2").setLockMode("foo2", lockMode).add(Restrictions.isNull("foo2.component.glarch")).createCriteria("foo2.component.glarch").add(Restrictions.eq("name", "xxx")).list()[ FD ]
Line_28 $$ Criteria crit = s.createCriteria(Baz.class)-->Line_72 $$ crit.createCriteria("fooSet").add(Restrictions.isNull("null"))[ FD ]
Line_62 $$ list = s.createCriteria(Baz.class).createCriteria("fooSet").createCriteria("foo").createCriteria("component.glarch").add(Restrictions.eq("name", "xxx")).list()-->Line_65 $$ assertTrue(list.size() == 0)[ FD ]
Line_58 $$ baz = (Baz) crit.uniqueResult()-->Line_61 $$ assertTrue(!Hibernate.isInitialized(baz.getFooSet()))[ FD ]
Line_68 $$ s = openSession()-->Line_80 $$ doDelete(s, "from Glarch g")[ FD ]
Line_4 $$ Session s = openSession()-->Line_43 $$ list = s.createCriteria(Baz.class).add(Restrictions.isEmpty("fooSet")).list()[ FD ]
Line_41 $$ s = openSession()-->Line_53 $$ crit = s.createCriteria(Baz.class).setLockMode(lockMode)[ FD ]
Line_68 $$ s = openSession()-->Line_85 $$ s.close()[ FD ]
