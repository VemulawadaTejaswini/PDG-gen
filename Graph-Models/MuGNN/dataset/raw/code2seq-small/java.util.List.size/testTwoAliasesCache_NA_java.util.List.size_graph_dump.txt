Line_37 $$ s = openSession()-->Line_106 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_3 $$ Session s = openSession()-->Line_36 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_97 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_60 $$ s = openSession()-->Line_102 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_3 $$ Session s = openSession()-->Line_37 $$ s = openSession()[ FD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_77 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_29 $$ enrolment2.setSemester((short) 3)[ CD ]
Line_46 $$ enrolment2 = e-->Line_78 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_60 $$ s = openSession()-->Line_105 $$ s.delete(enrolment2)[ FD ]
Line_90 $$ enrolment2 = (Enrolment) list.get(1)-->Line_98 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_46 $$ enrolment2 = e-->Line_90 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_62 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_90 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_37 $$ s = openSession()-->Line_54 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_60 $$ s = openSession()-->Line_84 $$ t = s.beginTransaction()[ FD ]
Line_66 $$ enrolment1 = e-->Line_106 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_88 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ CD ]
Line_85 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()-->Line_93 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_93 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_66 $$ enrolment1 = e-->Line_104 $$ s.delete(enrolment1)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_3 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_15 $$ xam.setStudentNumber(101)[ CD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_67 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_33 $$ gavin.getEnrolments().add(enrolment2)[ CD ]
Line_60 $$ s = openSession()-->Line_74 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_55 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_60 $$ s = openSession()-->Line_62 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()[ FD ]
Line_60 $$ s = openSession()-->Line_76 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_3 $$ Session s = openSession()-->Line_98 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_37 $$ s = openSession()-->Line_83 $$ s = openSession()[ FD ]
Line_90 $$ enrolment2 = (Enrolment) list.get(1)-->Line_108 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_43 $$ enrolment1 = e-->Line_51 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_13 $$ Student xam = new Student()-->Line_24 $$ xam.getEnrolments().add(enrolment1)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_101 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ CD ]
Line_13 $$ Student xam = new Student()-->Line_45 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_92 $$ enrolment2 = e-->Line_101 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_42 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_45 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ CD ]
Line_3 $$ Session s = openSession()-->Line_74 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_3 $$ Session s = openSession()-->Line_83 $$ s = openSession()[ FD ]
Line_41 $$ Enrolment e = (Enrolment) list.get(0)-->Line_87 $$ e = (Enrolment) list.get(0)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_7 $$ course.setDescription("Hibernate Training")[ CD ]
Line_69 $$ enrolment2 = e-->Line_92 $$ enrolment2 = e[ FD ]
Line_67 $$ enrolment2 = (Enrolment) list.get(1)-->Line_90 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_35 $$ t.commit()[ CD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_77 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_70 $$ enrolment1 = (Enrolment) list.get(1)-->Line_78 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_46 $$ enrolment2 = e-->Line_92 $$ enrolment2 = e[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_27 $$ enrolment2.setCourse(course)[ CD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_83 $$ s = openSession()[ CD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_20 $$ enrolment1.setSemester((short) 1)[ FD ]
Line_62 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_93 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_61 $$ t = s.beginTransaction()-->Line_81 $$ t.commit()[ FD ]
Line_65 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_68 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ CD ]
Line_90 $$ enrolment2 = (Enrolment) list.get(1)-->Line_92 $$ enrolment2 = e[ FD ]
Line_89 $$ enrolment1 = e-->Line_93 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_77 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_61 $$ t = s.beginTransaction()-->Line_109 $$ t.commit()[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_89 $$ enrolment1 = e[ FD ]
Line_3 $$ Session s = openSession()-->Line_104 $$ s.delete(enrolment1)[ FD ]
Line_92 $$ enrolment2 = e-->Line_105 $$ s.delete(enrolment2)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_65 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ CD ]
Line_70 $$ enrolment1 = (Enrolment) list.get(1)-->Line_102 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_67 $$ enrolment2 = (Enrolment) list.get(1)-->Line_101 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_3 $$ Session s = openSession()-->Line_85 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_30 $$ enrolment2.setYear((short) 1998)[ CD ]
Line_3 $$ Session s = openSession()-->Line_61 $$ t = s.beginTransaction()[ FD ]
Line_70 $$ enrolment1 = (Enrolment) list.get(1)-->Line_104 $$ s.delete(enrolment1)[ FD ]
Line_93 $$ enrolment1 = (Enrolment) list.get(1)-->Line_97 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_24 $$ xam.getEnrolments().add(enrolment1)[ FD ]
Line_89 $$ enrolment1 = e-->Line_107 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_99 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_37 $$ s = openSession()-->Line_60 $$ s = openSession()[ FD ]
Line_67 $$ enrolment2 = (Enrolment) list.get(1)-->Line_80 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_104 $$ s.delete(enrolment1)[ CD ]
Line_39 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_67 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_56 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ CD ]
Line_70 $$ enrolment1 = (Enrolment) list.get(1)-->Line_74 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_55 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_64 $$ e = (Enrolment) list.get(0)-->Line_72 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_42 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ CD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_92 $$ enrolment2 = e[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_53 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ CD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_79 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ CD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_105 $$ s.delete(enrolment2)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_55 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ CD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_99 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ CD ]
Line_46 $$ enrolment2 = e-->Line_52 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_108 $$ s.delete(enrolment2.getStudent())[ CD ]
Line_37 $$ s = openSession()-->Line_103 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_92 $$ enrolment2 = e-->Line_103 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_78 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_46 $$ enrolment2 = e-->Line_77 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_69 $$ enrolment2 = e-->Line_100 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_70 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_25 $$ s.save(enrolment1)[ CD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_44 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_57 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_100 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ CD ]
Line_85 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()-->Line_90 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_43 $$ enrolment1 = e-->Line_104 $$ s.delete(enrolment1)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_98 $$ assertTrue(s.isReadOnly(enrolment2))[ CD ]
Line_64 $$ e = (Enrolment) list.get(0)-->Line_92 $$ enrolment2 = e[ FD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_55 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_40 $$ assertEquals(list.size(), 2)[ CD ]
Line_39 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_63 $$ assertEquals(list.size(), 2)[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_76 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_87 $$ e = (Enrolment) list.get(0)-->Line_88 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_65 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_66 $$ enrolment1 = e[ CD ]
Line_3 $$ Session s = openSession()-->Line_105 $$ s.delete(enrolment2)[ FD ]
Line_90 $$ enrolment2 = (Enrolment) list.get(1)-->Line_101 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_43 $$ enrolment1 = e-->Line_74 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_67 $$ enrolment2 = (Enrolment) list.get(1)-->Line_77 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_83 $$ s = openSession()-->Line_102 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_3 $$ Session s = openSession()-->Line_51 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_43 $$ enrolment1 = e-->Line_55 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_46 $$ enrolment2 = e[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_101 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_27 $$ enrolment2.setCourse(course)[ FD ]
Line_66 $$ enrolment1 = e-->Line_99 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_3 $$ Session s = openSession()-->Line_53 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_82 $$ s.close()[ CD ]
Line_46 $$ enrolment2 = e-->Line_98 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_62 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_67 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_98 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_102 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_85 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()-->Line_86 $$ assertEquals(list.size(), 2)[ FD ]
Line_13 $$ Student xam = new Student()-->Line_16 $$ s.save(xam)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_11 $$ gavin.setStudentNumber(666)[ CD ]
Line_5 $$ Course course = new Course()-->Line_27 $$ enrolment2.setCourse(course)[ FD ]
Line_43 $$ enrolment1 = e-->Line_106 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_39 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_86 $$ assertEquals(list.size(), 2)[ FD ]
Line_37 $$ s = openSession()-->Line_108 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction t = s.beginTransaction()[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_75 $$ assertTrue(s.isReadOnly(enrolment2))[ CD ]
Line_69 $$ enrolment2 = e-->Line_77 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_20 $$ enrolment1.setSemester((short) 1)[ CD ]
Line_64 $$ e = (Enrolment) list.get(0)-->Line_87 $$ e = (Enrolment) list.get(0)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_16 $$ s.save(xam)[ CD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_39 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()[ CD ]
Line_3 $$ Session s = openSession()-->Line_100 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_66 $$ enrolment1 = e-->Line_74 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_67 $$ enrolment2 = (Enrolment) list.get(1)-->Line_100 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_69 $$ enrolment2 = e-->Line_105 $$ s.delete(enrolment2)[ FD ]
Line_46 $$ enrolment2 = e-->Line_69 $$ enrolment2 = e[ FD ]
Line_70 $$ enrolment1 = (Enrolment) list.get(1)-->Line_76 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_62 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_86 $$ assertEquals(list.size(), 2)[ FD ]
Line_38 $$ t = s.beginTransaction()-->Line_84 $$ t = s.beginTransaction()[ FD ]
Line_60 $$ s = openSession()-->Line_98 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_37 $$ s = openSession()-->Line_100 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_47 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_21 $$ enrolment1.setYear((short) 1999)[ FD ]
Line_39 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_70 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_60 $$ s = openSession()-->Line_97 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_64 $$ e = (Enrolment) list.get(0)-->Line_69 $$ enrolment2 = e[ FD ]
Line_3 $$ Session s = openSession()-->Line_39 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()[ FD ]
Line_60 $$ s = openSession()-->Line_108 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_37 $$ s = openSession()-->Line_75 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_3 $$ Session s = openSession()-->Line_79 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_37 $$ s = openSession()-->Line_105 $$ s.delete(enrolment2)[ FD ]
Line_65 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_67 $$ enrolment2 = (Enrolment) list.get(1)[ CD ]
Line_93 $$ enrolment1 = (Enrolment) list.get(1)-->Line_99 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_45 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_49 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_58 $$ t.commit()[ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_90 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_60 $$ s = openSession()-->Line_100 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_103 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_93 $$ enrolment1 = (Enrolment) list.get(1)-->Line_104 $$ s.delete(enrolment1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_106 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_42 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_44 $$ enrolment2 = (Enrolment) list.get(1)[ CD ]
Line_38 $$ t = s.beginTransaction()-->Line_109 $$ t.commit()[ FD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_52 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_3 $$ Session s = openSession()-->Line_59 $$ s.close()[ FD ]
Line_38 $$ t = s.beginTransaction()-->Line_61 $$ t = s.beginTransaction()[ FD ]
Line_37 $$ s = openSession()-->Line_82 $$ s.close()[ FD ]
Line_39 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_41 $$ Enrolment e = (Enrolment) list.get(0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_108 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_109 $$ t.commit()[ FD ]
Line_41 $$ Enrolment e = (Enrolment) list.get(0)-->Line_92 $$ enrolment2 = e[ FD ]
Line_46 $$ enrolment2 = e-->Line_55 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_37 $$ s = openSession()-->Line_85 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()[ FD ]
Line_41 $$ Enrolment e = (Enrolment) list.get(0)-->Line_69 $$ enrolment2 = e[ FD ]
Line_38 $$ t = s.beginTransaction()-->Line_81 $$ t.commit()[ FD ]
Line_90 $$ enrolment2 = (Enrolment) list.get(1)-->Line_100 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_38 $$ t = s.beginTransaction()[ FD ]
Line_45 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_47 $$ enrolment1 = (Enrolment) list.get(1)[ CD ]
Line_88 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_89 $$ enrolment1 = e[ CD ]
Line_41 $$ Enrolment e = (Enrolment) list.get(0)-->Line_89 $$ enrolment1 = e[ FD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_74 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_110 $$ s.close()[ CD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_78 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_60 $$ s = openSession()-->Line_85 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()[ FD ]
Line_37 $$ s = openSession()-->Line_51 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_3 $$ Session s = openSession()-->Line_102 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_69 $$ enrolment2 = e-->Line_80 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_91 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_92 $$ enrolment2 = e[ CD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_29 $$ enrolment2.setSemester((short) 3)[ FD ]
Line_60 $$ s = openSession()-->Line_61 $$ t = s.beginTransaction()[ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_69 $$ enrolment2 = e[ FD ]
Line_37 $$ s = openSession()-->Line_76 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_37 $$ s = openSession()-->Line_98 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_37 $$ s = openSession()-->Line_61 $$ t = s.beginTransaction()[ FD ]
Line_93 $$ enrolment1 = (Enrolment) list.get(1)-->Line_101 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_64 $$ e = (Enrolment) list.get(0)-->Line_95 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_25 $$ s.save(enrolment1)[ FD ]
Line_70 $$ enrolment1 = (Enrolment) list.get(1)-->Line_79 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_66 $$ enrolment1 = e-->Line_93 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_24 $$ xam.getEnrolments().add(enrolment1)[ CD ]
Line_38 $$ t = s.beginTransaction()-->Line_58 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_57 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_37 $$ s = openSession()-->Line_107 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_83 $$ s = openSession()-->Line_97 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_56 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_62 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_87 $$ e = (Enrolment) list.get(0)[ FD ]
Line_60 $$ s = openSession()-->Line_75 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_54 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ CD ]
Line_41 $$ Enrolment e = (Enrolment) list.get(0)-->Line_45 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_92 $$ enrolment2 = e-->Line_98 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_103 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ CD ]
Line_37 $$ s = openSession()-->Line_97 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_28 $$ enrolment2.setCourseCode(course.getCourseCode())[ CD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_59 $$ s.close()[ CD ]
Line_39 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_44 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_46 $$ enrolment2 = e-->Line_75 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_83 $$ s = openSession()-->Line_105 $$ s.delete(enrolment2)[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_66 $$ enrolment1 = e[ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_105 $$ s.delete(enrolment2)[ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_33 $$ gavin.getEnrolments().add(enrolment2)[ FD ]
Line_46 $$ enrolment2 = e-->Line_101 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_3 $$ Session s = openSession()-->Line_60 $$ s = openSession()[ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_100 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_3 $$ Session s = openSession()-->Line_110 $$ s.close()[ FD ]
Line_43 $$ enrolment1 = e-->Line_53 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_41 $$ Enrolment e = (Enrolment) list.get(0)-->Line_95 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ FD ]
Line_83 $$ s = openSession()-->Line_100 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_43 $$ enrolment1 = e-->Line_66 $$ enrolment1 = e[ FD ]
Line_83 $$ s = openSession()-->Line_103 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_66 $$ enrolment1 = e-->Line_79 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_22 $$ enrolment1.setStudent(xam)[ CD ]
Line_87 $$ e = (Enrolment) list.get(0)-->Line_92 $$ enrolment2 = e[ FD ]
Line_46 $$ enrolment2 = e-->Line_105 $$ s.delete(enrolment2)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_12 $$ s.save(gavin)[ CD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_106 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_64 $$ e = (Enrolment) list.get(0)-->Line_66 $$ enrolment1 = e[ FD ]
Line_66 $$ enrolment1 = e-->Line_89 $$ enrolment1 = e[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_6 $$ course.setCourseCode("HIB")[ CD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_52 $$ assertTrue(s.isReadOnly(enrolment2))[ CD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_89 $$ enrolment1 = e[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_26 $$ Enrolment enrolment2 = new Enrolment()[ CD ]
Line_69 $$ enrolment2 = e-->Line_103 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_80 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_51 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_69 $$ enrolment2 = e-->Line_108 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_66 $$ enrolment1 = e-->Line_101 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_62 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()[ CD ]
Line_43 $$ enrolment1 = e-->Line_76 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_37 $$ s = openSession()-->Line_74 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_23 $$ enrolment1.setStudentNumber(xam.getStudentNumber())[ CD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_99 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_83 $$ s = openSession()-->Line_99 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_51 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_3 $$ Session s = openSession()-->Line_82 $$ s.close()[ FD ]
Line_37 $$ s = openSession()-->Line_39 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_75 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_43 $$ enrolment1 = e-->Line_79 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_43 $$ enrolment1 = e-->Line_102 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_66 $$ enrolment1 = e-->Line_76 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_87 $$ e = (Enrolment) list.get(0)-->Line_95 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ FD ]
Line_83 $$ s = openSession()-->Line_98 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_79 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_102 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_85 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()-->Line_87 $$ e = (Enrolment) list.get(0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_62 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()[ FD ]
Line_69 $$ enrolment2 = e-->Line_98 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_70 $$ enrolment1 = (Enrolment) list.get(1)-->Line_106 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_104 $$ s.delete(enrolment1)[ FD ]
Line_46 $$ enrolment2 = e-->Line_100 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_3 $$ Session s = openSession()-->Line_38 $$ t = s.beginTransaction()[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_93 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_41 $$ Enrolment e = (Enrolment) list.get(0)-->Line_42 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_37 $$ s = openSession()-->Line_38 $$ t = s.beginTransaction()[ FD ]
Line_60 $$ s = openSession()-->Line_104 $$ s.delete(enrolment1)[ FD ]
Line_41 $$ Enrolment e = (Enrolment) list.get(0)-->Line_68 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_46 $$ enrolment2 = e-->Line_80 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_66 $$ enrolment1 = e[ FD ]
Line_43 $$ enrolment1 = e-->Line_107 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_37 $$ s = openSession()-->Line_53 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_41 $$ Enrolment e = (Enrolment) list.get(0)-->Line_91 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_92 $$ enrolment2 = e-->Line_100 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_106 $$ s.delete(enrolment1.getCourse())[ CD ]
Line_89 $$ enrolment1 = e-->Line_106 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_34 $$ s.save(enrolment2)[ CD ]
Line_5 $$ Course course = new Course()-->Line_19 $$ enrolment1.setCourseCode(course.getCourseCode())[ FD ]
Line_67 $$ enrolment2 = (Enrolment) list.get(1)-->Line_105 $$ s.delete(enrolment2)[ FD ]
Line_66 $$ enrolment1 = e-->Line_102 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_14 $$ xam.setName("Max Rydahl Andersen")[ CD ]
Line_5 $$ Course course = new Course()-->Line_7 $$ course.setDescription("Hibernate Training")[ FD ]
Line_64 $$ e = (Enrolment) list.get(0)-->Line_65 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_70 $$ enrolment1 = (Enrolment) list.get(1)-->Line_107 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_43 $$ enrolment1 = e-->Line_78 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_43 $$ enrolment1 = e-->Line_93 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_93 $$ enrolment1 = (Enrolment) list.get(1)-->Line_102 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_67 $$ enrolment2 = (Enrolment) list.get(1)-->Line_92 $$ enrolment2 = e[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_18 $$ enrolment1.setCourse(course)[ FD ]
Line_89 $$ enrolment1 = e-->Line_104 $$ s.delete(enrolment1)[ FD ]
Line_43 $$ enrolment1 = e-->Line_47 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_8 $$ s.save(course)[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_74 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_87 $$ e = (Enrolment) list.get(0)-->Line_91 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_43 $$ enrolment1 = e-->Line_101 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_68 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_69 $$ enrolment2 = e[ CD ]
Line_37 $$ s = openSession()-->Line_104 $$ s.delete(enrolment1)[ FD ]
Line_37 $$ s = openSession()-->Line_80 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_60 $$ s = openSession()[ CD ]
Line_3 $$ Session s = openSession()-->Line_76 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_100 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_69 $$ enrolment2 = e-->Line_90 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_31 $$ enrolment2.setStudent(gavin)[ CD ]
Line_37 $$ s = openSession()-->Line_102 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_64 $$ e = (Enrolment) list.get(0)-->Line_88 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_41 $$ Enrolment e = (Enrolment) list.get(0)-->Line_88 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_52 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_60 $$ s = openSession()-->Line_103 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_89 $$ enrolment1 = e-->Line_101 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_3 $$ Session s = openSession()-->Line_56 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_46 $$ enrolment2 = e-->Line_103 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_70 $$ enrolment1 = (Enrolment) list.get(1)-->Line_97 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_39 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_47 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_46 $$ enrolment2 = e-->Line_108 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_13 $$ Student xam = new Student()-->Line_22 $$ enrolment1.setStudent(xam)[ FD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_106 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_93 $$ enrolment1 = (Enrolment) list.get(1)-->Line_106 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_102 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ CD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_53 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_37 $$ s = openSession()-->Line_62 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_58 $$ t.commit()[ CD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_28 $$ enrolment2.setCourseCode(course.getCourseCode())[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_19 $$ enrolment1.setCourseCode(course.getCourseCode())[ FD ]
Line_60 $$ s = openSession()-->Line_79 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_37 $$ s = openSession()[ CD ]
Line_13 $$ Student xam = new Student()-->Line_68 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_81 $$ t.commit()[ CD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_55 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_8 $$ s.save(course)[ CD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_10 $$ gavin.setName("Gavin King")[ CD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_79 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_89 $$ enrolment1 = e-->Line_97 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_5 $$ Course course = new Course()-->Line_8 $$ s.save(course)[ FD ]
Line_5 $$ Course course = new Course()-->Line_28 $$ enrolment2.setCourseCode(course.getCourseCode())[ FD ]
Line_88 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_90 $$ enrolment2 = (Enrolment) list.get(1)[ CD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_31 $$ enrolment2.setStudent(gavin)[ FD ]
Line_60 $$ s = openSession()-->Line_107 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_57 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ CD ]
Line_60 $$ s = openSession()-->Line_106 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_39 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_85 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()[ FD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_104 $$ s.delete(enrolment1)[ FD ]
Line_41 $$ Enrolment e = (Enrolment) list.get(0)-->Line_46 $$ enrolment2 = e[ FD ]
Line_66 $$ enrolment1 = e-->Line_78 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_39 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_90 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_88 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_91 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ CD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_51 $$ assertTrue(s.isReadOnly(enrolment1))[ CD ]
Line_5 $$ Course course = new Course()-->Line_6 $$ course.setCourseCode("HIB")[ FD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_80 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_69 $$ enrolment2 = e-->Line_101 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_67 $$ enrolment2 = (Enrolment) list.get(1)-->Line_69 $$ enrolment2 = e[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_97 $$ assertTrue(s.isReadOnly(enrolment1))[ CD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_98 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_67 $$ enrolment2 = (Enrolment) list.get(1)-->Line_98 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_67 $$ enrolment2 = (Enrolment) list.get(1)-->Line_78 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_105 $$ s.delete(enrolment2)[ CD ]
Line_60 $$ s = openSession()-->Line_80 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_41 $$ Enrolment e = (Enrolment) list.get(0)-->Line_66 $$ enrolment1 = e[ FD ]
Line_41 $$ Enrolment e = (Enrolment) list.get(0)-->Line_43 $$ enrolment1 = e[ FD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_54 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_3 $$ Session s = openSession()-->Line_84 $$ t = s.beginTransaction()[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_23 $$ enrolment1.setStudentNumber(xam.getStudentNumber())[ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_46 $$ enrolment2 = e[ FD ]
Line_39 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_87 $$ e = (Enrolment) list.get(0)[ FD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_69 $$ enrolment2 = e[ FD ]
Line_46 $$ enrolment2 = e-->Line_67 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_85 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()[ CD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_87 $$ e = (Enrolment) list.get(0)[ CD ]
Line_83 $$ s = openSession()-->Line_84 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_21 $$ enrolment1.setYear((short) 1999)[ CD ]
Line_60 $$ s = openSession()-->Line_82 $$ s.close()[ FD ]
Line_43 $$ enrolment1 = e-->Line_97 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_9 $$ Student gavin = new Student()-->Line_65 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_17 $$ Enrolment enrolment1 = new Enrolment()[ CD ]
Line_60 $$ s = openSession()-->Line_83 $$ s = openSession()[ FD ]
Line_69 $$ enrolment2 = e-->Line_78 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_62 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_63 $$ assertEquals(list.size(), 2)[ FD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_70 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_66 $$ enrolment1 = e-->Line_70 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_77 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ CD ]
Line_87 $$ e = (Enrolment) list.get(0)-->Line_89 $$ enrolment1 = e[ FD ]
Line_62 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_64 $$ e = (Enrolment) list.get(0)[ FD ]
Line_13 $$ Student xam = new Student()-->Line_23 $$ enrolment1.setStudentNumber(xam.getStudentNumber())[ FD ]
Line_9 $$ Student gavin = new Student()-->Line_33 $$ gavin.getEnrolments().add(enrolment2)[ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_57 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_76 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_84 $$ t = s.beginTransaction()[ FD ]
Line_83 $$ s = openSession()-->Line_110 $$ s.close()[ FD ]
Line_41 $$ Enrolment e = (Enrolment) list.get(0)-->Line_49 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_32 $$ enrolment2.setStudentNumber(gavin.getStudentNumber())[ FD ]
Line_45 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_46 $$ enrolment2 = e[ CD ]
Line_37 $$ s = openSession()-->Line_84 $$ t = s.beginTransaction()[ FD ]
Line_93 $$ enrolment1 = (Enrolment) list.get(1)-->Line_107 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_35 $$ t.commit()[ FD ]
Line_37 $$ s = openSession()-->Line_77 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_83 $$ s = openSession()-->Line_108 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_3 $$ Session s = openSession()-->Line_25 $$ s.save(enrolment1)[ FD ]
Line_91 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_93 $$ enrolment1 = (Enrolment) list.get(1)[ CD ]
Line_3 $$ Session s = openSession()-->Line_52 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_3 $$ Session s = openSession()-->Line_99 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_41 $$ Enrolment e = (Enrolment) list.get(0)-->Line_72 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ FD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_90 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_78 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_66 $$ enrolment1 = e-->Line_97 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_9 $$ Student gavin = new Student()-->Line_11 $$ gavin.setStudentNumber(666)[ FD ]
Line_37 $$ s = openSession()-->Line_110 $$ s.close()[ FD ]
Line_43 $$ enrolment1 = e-->Line_89 $$ enrolment1 = e[ FD ]
Line_39 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_62 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()[ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_75 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_83 $$ s = openSession()-->Line_107 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_34 $$ s.save(enrolment2)[ FD ]
Line_13 $$ Student xam = new Student()-->Line_91 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_32 $$ enrolment2.setStudentNumber(gavin.getStudentNumber())[ CD ]
Line_84 $$ t = s.beginTransaction()-->Line_109 $$ t.commit()[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_80 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ CD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_22 $$ enrolment1.setStudent(xam)[ FD ]
Line_5 $$ Course course = new Course()-->Line_18 $$ enrolment1.setCourse(course)[ FD ]
Line_37 $$ s = openSession()-->Line_59 $$ s.close()[ FD ]
Line_70 $$ enrolment1 = (Enrolment) list.get(1)-->Line_93 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_37 $$ s = openSession()-->Line_52 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_67 $$ enrolment2 = (Enrolment) list.get(1)-->Line_103 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_9 $$ Student gavin = new Student()-->Line_42 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_67 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_37 $$ s = openSession()-->Line_99 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_54 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_90 $$ enrolment2 = (Enrolment) list.get(1)-->Line_103 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_4 $$ Transaction t = s.beginTransaction()[ CD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_75 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_36 $$ s.close()[ CD ]
Line_9 $$ Student gavin = new Student()-->Line_31 $$ enrolment2.setStudent(gavin)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_109 $$ t.commit()[ CD ]
Line_41 $$ Enrolment e = (Enrolment) list.get(0)-->Line_65 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_3 $$ Session s = openSession()-->Line_103 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_66 $$ enrolment1 = e-->Line_107 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_43 $$ enrolment1 = e-->Line_99 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_3 $$ Session s = openSession()-->Line_34 $$ s.save(enrolment2)[ FD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_92 $$ enrolment2 = e[ FD ]
Line_3 $$ Session s = openSession()-->Line_12 $$ s.save(gavin)[ FD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_97 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_46 $$ enrolment2 = e-->Line_54 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_76 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ CD ]
Line_70 $$ enrolment1 = (Enrolment) list.get(1)-->Line_89 $$ enrolment1 = e[ FD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_101 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_107 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_61 $$ t = s.beginTransaction()[ CD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_64 $$ e = (Enrolment) list.get(0)[ CD ]
Line_3 $$ Session s = openSession()-->Line_54 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_3 $$ Session s = openSession()-->Line_107 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_84 $$ t = s.beginTransaction()[ CD ]
Line_83 $$ s = openSession()-->Line_106 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_67 $$ enrolment2 = (Enrolment) list.get(1)-->Line_75 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_108 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_89 $$ enrolment1 = e-->Line_99 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_43 $$ enrolment1 = e-->Line_56 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_13 $$ Student xam = new Student()-->Line_14 $$ xam.setName("Max Rydahl Andersen")[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_61 $$ t = s.beginTransaction()[ FD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_101 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_92 $$ enrolment2 = e-->Line_108 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_9 $$ Student gavin = new Student()-->Line_10 $$ gavin.setName("Gavin King")[ FD ]
Line_70 $$ enrolment1 = (Enrolment) list.get(1)-->Line_101 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_60 $$ s = openSession()-->Line_77 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_43 $$ enrolment1 = e[ FD ]
Line_3 $$ Session s = openSession()-->Line_80 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_46 $$ enrolment2 = e-->Line_57 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_43 $$ enrolment1 = e-->Line_70 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_90 $$ enrolment2 = (Enrolment) list.get(1)-->Line_105 $$ s.delete(enrolment2)[ FD ]
Line_69 $$ enrolment2 = e-->Line_75 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_83 $$ s = openSession()-->Line_104 $$ s.delete(enrolment1)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_41 $$ Enrolment e = (Enrolment) list.get(0)[ CD ]
Line_9 $$ Student gavin = new Student()-->Line_12 $$ s.save(gavin)[ FD ]
Line_62 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_70 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_13 $$ Student xam = new Student()-->Line_15 $$ xam.setStudentNumber(101)[ FD ]
Line_9 $$ Student gavin = new Student()-->Line_88 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_68 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_70 $$ enrolment1 = (Enrolment) list.get(1)[ CD ]
Line_39 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_40 $$ assertEquals(list.size(), 2)[ FD ]
Line_37 $$ s = openSession()-->Line_57 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_86 $$ assertEquals(list.size(), 2)[ CD ]
Line_64 $$ e = (Enrolment) list.get(0)-->Line_89 $$ enrolment1 = e[ FD ]
Line_61 $$ t = s.beginTransaction()-->Line_84 $$ t = s.beginTransaction()[ FD ]
Line_37 $$ s = openSession()-->Line_56 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_89 $$ enrolment1 = e-->Line_102 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_9 $$ Student gavin = new Student()[ CD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_19 $$ enrolment1.setCourseCode(course.getCourseCode())[ CD ]
Line_64 $$ e = (Enrolment) list.get(0)-->Line_91 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_42 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_43 $$ enrolment1 = e[ CD ]
Line_60 $$ s = openSession()-->Line_99 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_41 $$ Enrolment e = (Enrolment) list.get(0)-->Line_64 $$ e = (Enrolment) list.get(0)[ FD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_101 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_107 $$ s.delete(enrolment1.getStudent())[ CD ]
Line_70 $$ enrolment1 = (Enrolment) list.get(1)-->Line_99 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_107 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_108 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_39 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_64 $$ e = (Enrolment) list.get(0)[ FD ]
Line_44 $$ enrolment2 = (Enrolment) list.get(1)-->Line_103 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_18 $$ enrolment1.setCourse(course)[ CD ]
Line_68 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_72 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ CD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_78 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ CD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_5 $$ Course course = new Course()[ CD ]
Line_39 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_93 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_13 $$ Student xam = new Student()[ CD ]
Line_67 $$ enrolment2 = (Enrolment) list.get(1)-->Line_108 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_53 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_60 $$ s = openSession()-->Line_110 $$ s.close()[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_63 $$ assertEquals(list.size(), 2)[ CD ]
Line_9 $$ Student gavin = new Student()-->Line_32 $$ enrolment2.setStudentNumber(gavin.getStudentNumber())[ FD ]
Line_62 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_85 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_16 $$ s.save(xam)[ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_38 $$ t = s.beginTransaction()[ CD ]
Line_37 $$ s = openSession()-->Line_79 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_81 $$ t.commit()[ FD ]
Line_83 $$ s = openSession()-->Line_85 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()[ FD ]
Line_91 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_95 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ CD ]
Line_26 $$ Enrolment enrolment2 = new Enrolment()-->Line_30 $$ enrolment2.setYear((short) 1998)[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_97 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_64 $$ e = (Enrolment) list.get(0)-->Line_68 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_2 $$ public void testTwoAliasesCache() -->Line_74 $$ assertTrue(s.isReadOnly(enrolment1))[ CD ]
Line_47 $$ enrolment1 = (Enrolment) list.get(1)-->Line_56 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_17 $$ Enrolment enrolment1 = new Enrolment()-->Line_78 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
