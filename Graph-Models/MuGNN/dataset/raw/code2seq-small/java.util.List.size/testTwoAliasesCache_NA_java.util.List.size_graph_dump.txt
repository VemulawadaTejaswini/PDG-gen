Line_91 $$ enrolment2 = (Enrolment) list.get(1)-->Line_93 $$ enrolment2 = e[ FD ]
Line_47 $$ enrolment2 = e-->Line_104 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_42 $$ Enrolment e = (Enrolment) list.get(0)-->Line_70 $$ enrolment2 = e[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_79 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_4 $$ Session s = openSession()-->Line_13 $$ s.save(gavin)[ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_102 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_36 $$ t.commit()[ FD ]
Line_14 $$ Student xam = new Student()-->Line_17 $$ s.save(xam)[ FD ]
Line_84 $$ s = openSession()-->Line_100 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_94 $$ enrolment1 = (Enrolment) list.get(1)-->Line_102 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_10 $$ Student gavin = new Student()-->Line_43 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_40 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_42 $$ Enrolment e = (Enrolment) list.get(0)[ FD ]
Line_61 $$ s = openSession()-->Line_108 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_68 $$ enrolment2 = (Enrolment) list.get(1)-->Line_91 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_44 $$ enrolment1 = e-->Line_102 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_104 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_67 $$ enrolment1 = e-->Line_102 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_4 $$ Session s = openSession()-->Line_38 $$ s = openSession()[ FD ]
Line_43 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_45 $$ enrolment2 = (Enrolment) list.get(1)[ CD ]
Line_38 $$ s = openSession()-->Line_103 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_91 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_62 $$ t = s.beginTransaction()[ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_54 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_67 $$ enrolment1 = e-->Line_105 $$ s.delete(enrolment1)[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_90 $$ enrolment1 = e[ FD ]
Line_44 $$ enrolment1 = e-->Line_56 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_61 $$ s = openSession()-->Line_62 $$ t = s.beginTransaction()[ FD ]
Line_42 $$ Enrolment e = (Enrolment) list.get(0)-->Line_67 $$ enrolment1 = e[ FD ]
Line_90 $$ enrolment1 = e-->Line_102 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_42 $$ Enrolment e = (Enrolment) list.get(0)-->Line_69 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_4 $$ Session s = openSession()-->Line_105 $$ s.delete(enrolment1)[ FD ]
Line_62 $$ t = s.beginTransaction()-->Line_85 $$ t = s.beginTransaction()[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_98 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_84 $$ s = openSession()-->Line_106 $$ s.delete(enrolment2)[ FD ]
Line_44 $$ enrolment1 = e-->Line_100 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_84 $$ s = openSession()[ FD ]
Line_4 $$ Session s = openSession()-->Line_35 $$ s.save(enrolment2)[ FD ]
Line_4 $$ Session s = openSession()-->Line_107 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_44 $$ enrolment1 = e-->Line_80 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_38 $$ s = openSession()-->Line_86 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()[ FD ]
Line_10 $$ Student gavin = new Student()-->Line_32 $$ enrolment2.setStudent(gavin)[ FD ]
Line_38 $$ s = openSession()-->Line_83 $$ s.close()[ FD ]
Line_38 $$ s = openSession()-->Line_75 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_44 $$ enrolment1 = e[ FD ]
Line_39 $$ t = s.beginTransaction()-->Line_82 $$ t.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_61 $$ s = openSession()[ FD ]
Line_38 $$ s = openSession()-->Line_105 $$ s.delete(enrolment1)[ FD ]
Line_4 $$ Session s = openSession()-->Line_63 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()[ FD ]
Line_40 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_65 $$ e = (Enrolment) list.get(0)[ FD ]
Line_10 $$ Student gavin = new Student()-->Line_12 $$ gavin.setStudentNumber(666)[ FD ]
Line_38 $$ s = openSession()-->Line_111 $$ s.close()[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_58 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_14 $$ Student xam = new Student()-->Line_92 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_81 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_61 $$ s = openSession()-->Line_75 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_38 $$ s = openSession()-->Line_80 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_90 $$ enrolment1 = e-->Line_107 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_90 $$ enrolment1 = e-->Line_103 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_68 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_55 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_9 $$ s.save(course)[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_48 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_6 $$ Course course = new Course()-->Line_29 $$ enrolment2.setCourseCode(course.getCourseCode())[ FD ]
Line_4 $$ Session s = openSession()-->Line_76 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_4 $$ Session s = openSession()-->Line_104 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_68 $$ enrolment2 = (Enrolment) list.get(1)-->Line_99 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_4 $$ Session s = openSession()-->Line_57 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_111 $$ s.close()[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_71 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_40 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_41 $$ assertEquals(list.size(), 2)[ FD ]
Line_88 $$ e = (Enrolment) list.get(0)-->Line_90 $$ enrolment1 = e[ FD ]
Line_68 $$ enrolment2 = (Enrolment) list.get(1)-->Line_101 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_38 $$ s = openSession()-->Line_85 $$ t = s.beginTransaction()[ FD ]
Line_91 $$ enrolment2 = (Enrolment) list.get(1)-->Line_102 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_38 $$ s = openSession()-->Line_106 $$ s.delete(enrolment2)[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_106 $$ s.delete(enrolment2)[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_91 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_47 $$ enrolment2 = e-->Line_81 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_93 $$ enrolment2 = e[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_81 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_84 $$ s = openSession()-->Line_98 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_70 $$ enrolment2 = e-->Line_104 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ Transaction t = s.beginTransaction()[ FD ]
Line_44 $$ enrolment1 = e-->Line_75 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_61 $$ s = openSession()-->Line_84 $$ s = openSession()[ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_79 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_91 $$ enrolment2 = (Enrolment) list.get(1)-->Line_104 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_63 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_68 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_107 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_93 $$ enrolment2 = e-->Line_109 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_102 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_10 $$ Student gavin = new Student()-->Line_33 $$ enrolment2.setStudentNumber(gavin.getStudentNumber())[ FD ]
Line_63 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_91 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_71 $$ enrolment1 = (Enrolment) list.get(1)-->Line_108 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_38 $$ s = openSession()-->Line_63 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()[ FD ]
Line_40 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_91 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_90 $$ enrolment1 = e-->Line_98 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_52 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_4 $$ Session s = openSession()-->Line_37 $$ s.close()[ FD ]
Line_47 $$ enrolment2 = e-->Line_106 $$ s.delete(enrolment2)[ FD ]
Line_68 $$ enrolment2 = (Enrolment) list.get(1)-->Line_70 $$ enrolment2 = e[ FD ]
Line_4 $$ Session s = openSession()-->Line_75 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_47 $$ enrolment2 = e-->Line_78 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_69 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_73 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ CD ]
Line_94 $$ enrolment1 = (Enrolment) list.get(1)-->Line_103 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_108 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_6 $$ Course course = new Course()-->Line_7 $$ course.setCourseCode("HIB")[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_31 $$ enrolment2.setYear((short) 1998)[ FD ]
Line_93 $$ enrolment2 = e-->Line_101 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_65 $$ e = (Enrolment) list.get(0)-->Line_70 $$ enrolment2 = e[ FD ]
Line_44 $$ enrolment1 = e-->Line_54 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_70 $$ enrolment2 = e-->Line_109 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_38 $$ s = openSession()-->Line_39 $$ t = s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_53 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_38 $$ s = openSession()-->Line_54 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_38 $$ s = openSession()-->Line_84 $$ s = openSession()[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_99 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_42 $$ Enrolment e = (Enrolment) list.get(0)-->Line_92 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_66 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_68 $$ enrolment2 = (Enrolment) list.get(1)[ CD ]
Line_68 $$ enrolment2 = (Enrolment) list.get(1)-->Line_102 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_71 $$ enrolment1 = (Enrolment) list.get(1)-->Line_77 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_29 $$ enrolment2.setCourseCode(course.getCourseCode())[ FD ]
Line_4 $$ Session s = openSession()-->Line_86 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()[ FD ]
Line_40 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_71 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_39 $$ t = s.beginTransaction()-->Line_110 $$ t.commit()[ FD ]
Line_91 $$ enrolment2 = (Enrolment) list.get(1)-->Line_101 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_47 $$ enrolment2 = e-->Line_56 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_39 $$ t = s.beginTransaction()[ FD ]
Line_61 $$ s = openSession()-->Line_80 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_44 $$ enrolment1 = e-->Line_79 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_93 $$ enrolment2 = e-->Line_104 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_68 $$ enrolment2 = (Enrolment) list.get(1)-->Line_76 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_61 $$ s = openSession()-->Line_109 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_38 $$ s = openSession()-->Line_57 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_108 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_89 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_90 $$ enrolment1 = e[ CD ]
Line_61 $$ s = openSession()-->Line_106 $$ s.delete(enrolment2)[ FD ]
Line_91 $$ enrolment2 = (Enrolment) list.get(1)-->Line_109 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_61 $$ s = openSession()-->Line_85 $$ t = s.beginTransaction()[ FD ]
Line_44 $$ enrolment1 = e-->Line_90 $$ enrolment1 = e[ FD ]
Line_47 $$ enrolment2 = e-->Line_53 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_90 $$ enrolment1 = e-->Line_94 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_67 $$ enrolment1 = e-->Line_79 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_61 $$ s = openSession()-->Line_100 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_55 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_65 $$ e = (Enrolment) list.get(0)-->Line_66 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_47 $$ enrolment2 = e-->Line_93 $$ enrolment2 = e[ FD ]
Line_40 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_94 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_61 $$ s = openSession()-->Line_83 $$ s.close()[ FD ]
Line_61 $$ s = openSession()-->Line_63 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()[ FD ]
Line_61 $$ s = openSession()-->Line_76 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_4 $$ Session s = openSession()-->Line_54 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_102 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_40 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_45 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_42 $$ Enrolment e = (Enrolment) list.get(0)-->Line_44 $$ enrolment1 = e[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_28 $$ enrolment2.setCourse(course)[ FD ]
Line_14 $$ Student xam = new Student()-->Line_15 $$ xam.setName("Max Rydahl Andersen")[ FD ]
Line_4 $$ Session s = openSession()-->Line_109 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_90 $$ enrolment1 = e-->Line_100 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_99 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_86 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()-->Line_94 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_103 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_84 $$ s = openSession()-->Line_109 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_44 $$ enrolment1 = e-->Line_77 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_94 $$ enrolment1 = (Enrolment) list.get(1)-->Line_100 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_81 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_63 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_88 $$ e = (Enrolment) list.get(0)[ FD ]
Line_6 $$ Course course = new Course()-->Line_19 $$ enrolment1.setCourse(course)[ FD ]
Line_4 $$ Session s = openSession()-->Line_78 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_71 $$ enrolment1 = (Enrolment) list.get(1)-->Line_80 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_53 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_42 $$ Enrolment e = (Enrolment) list.get(0)-->Line_88 $$ e = (Enrolment) list.get(0)[ FD ]
Line_63 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_94 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_94 $$ enrolment1 = (Enrolment) list.get(1)-->Line_98 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_4 $$ Session s = openSession()-->Line_58 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_103 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_71 $$ enrolment1 = (Enrolment) list.get(1)-->Line_103 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_70 $$ enrolment2 = e-->Line_81 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_77 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_47 $$ enrolment2 = e-->Line_79 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_44 $$ enrolment1 = e-->Line_94 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_98 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_19 $$ enrolment1.setCourse(course)[ FD ]
Line_14 $$ Student xam = new Student()-->Line_16 $$ xam.setStudentNumber(101)[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_68 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_38 $$ s = openSession()-->Line_100 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_10 $$ Student gavin = new Student()-->Line_66 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_107 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_59 $$ t.commit()[ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_71 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_71 $$ enrolment1 = (Enrolment) list.get(1)-->Line_105 $$ s.delete(enrolment1)[ FD ]
Line_44 $$ enrolment1 = e-->Line_71 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_70 $$ enrolment2 = e-->Line_93 $$ enrolment2 = e[ FD ]
Line_46 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_47 $$ enrolment2 = e[ CD ]
Line_39 $$ t = s.beginTransaction()-->Line_59 $$ t.commit()[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_33 $$ enrolment2.setStudentNumber(gavin.getStudentNumber())[ FD ]
Line_94 $$ enrolment1 = (Enrolment) list.get(1)-->Line_105 $$ s.delete(enrolment1)[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_79 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_67 $$ enrolment1 = e-->Line_103 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_44 $$ enrolment1 = e-->Line_103 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_53 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_10 $$ Student gavin = new Student()-->Line_11 $$ gavin.setName("Gavin King")[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_47 $$ enrolment2 = e[ FD ]
Line_84 $$ s = openSession()-->Line_105 $$ s.delete(enrolment1)[ FD ]
Line_46 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_50 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ CD ]
Line_68 $$ enrolment2 = (Enrolment) list.get(1)-->Line_104 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_67 $$ enrolment1 = e-->Line_94 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_65 $$ e = (Enrolment) list.get(0)-->Line_96 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ FD ]
Line_61 $$ s = openSession()-->Line_99 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_63 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_65 $$ e = (Enrolment) list.get(0)[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_70 $$ enrolment2 = e[ FD ]
Line_10 $$ Student gavin = new Student()-->Line_13 $$ s.save(gavin)[ FD ]
Line_68 $$ enrolment2 = (Enrolment) list.get(1)-->Line_106 $$ s.delete(enrolment2)[ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_56 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_6 $$ Course course = new Course()-->Line_28 $$ enrolment2.setCourse(course)[ FD ]
Line_42 $$ Enrolment e = (Enrolment) list.get(0)-->Line_89 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_105 $$ s.delete(enrolment1)[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_77 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_101 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_68 $$ enrolment2 = (Enrolment) list.get(1)-->Line_109 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_38 $$ s = openSession()-->Line_99 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_67 $$ enrolment1 = e-->Line_75 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_44 $$ enrolment1 = e-->Line_57 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_56 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_10 $$ Student gavin = new Student()-->Line_89 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_67 $$ enrolment1 = e-->Line_77 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_84 $$ s = openSession()-->Line_103 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_67 $$ enrolment1 = e-->Line_80 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_84 $$ s = openSession()-->Line_107 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_63 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_86 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()[ FD ]
Line_66 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_69 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ CD ]
Line_88 $$ e = (Enrolment) list.get(0)-->Line_92 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_71 $$ enrolment1 = (Enrolment) list.get(1)-->Line_102 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_57 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_47 $$ enrolment2 = e-->Line_55 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_100 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_52 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_93 $$ enrolment2 = e[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_102 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_109 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_47 $$ enrolment2 = e-->Line_68 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_70 $$ enrolment2 = e-->Line_106 $$ s.delete(enrolment2)[ FD ]
Line_42 $$ Enrolment e = (Enrolment) list.get(0)-->Line_96 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ FD ]
Line_14 $$ Student xam = new Student()-->Line_23 $$ enrolment1.setStudent(xam)[ FD ]
Line_90 $$ enrolment1 = e-->Line_108 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_43 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_44 $$ enrolment1 = e[ CD ]
Line_42 $$ Enrolment e = (Enrolment) list.get(0)-->Line_46 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_6 $$ Course course = new Course()-->Line_8 $$ course.setDescription("Hibernate Training")[ FD ]
Line_40 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_86 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()[ FD ]
Line_88 $$ e = (Enrolment) list.get(0)-->Line_93 $$ enrolment2 = e[ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_108 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_80 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_38 $$ s = openSession()-->Line_40 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()[ FD ]
Line_42 $$ Enrolment e = (Enrolment) list.get(0)-->Line_65 $$ e = (Enrolment) list.get(0)[ FD ]
Line_38 $$ s = openSession()-->Line_107 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_94 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_39 $$ t = s.beginTransaction()-->Line_62 $$ t = s.beginTransaction()[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_34 $$ gavin.getEnrolments().add(enrolment2)[ FD ]
Line_47 $$ enrolment2 = e-->Line_70 $$ enrolment2 = e[ FD ]
Line_4 $$ Session s = openSession()-->Line_83 $$ s.close()[ FD ]
Line_14 $$ Student xam = new Student()-->Line_24 $$ enrolment1.setStudentNumber(xam.getStudentNumber())[ FD ]
Line_71 $$ enrolment1 = (Enrolment) list.get(1)-->Line_75 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_75 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_70 $$ enrolment2 = e-->Line_76 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_55 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_40 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_88 $$ e = (Enrolment) list.get(0)[ FD ]
Line_40 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_48 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_71 $$ enrolment1 = (Enrolment) list.get(1)-->Line_98 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_86 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()-->Line_87 $$ assertEquals(list.size(), 2)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_110 $$ t.commit()[ FD ]
Line_67 $$ enrolment1 = e-->Line_98 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_88 $$ e = (Enrolment) list.get(0)-->Line_89 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_44 $$ enrolment1 = e-->Line_48 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_6 $$ Course course = new Course()-->Line_9 $$ s.save(course)[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_45 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_94 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_65 $$ e = (Enrolment) list.get(0)-->Line_92 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_84 $$ s = openSession()-->Line_111 $$ s.close()[ FD ]
Line_62 $$ t = s.beginTransaction()-->Line_110 $$ t.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_60 $$ s.close()[ FD ]
Line_84 $$ s = openSession()-->Line_85 $$ t = s.beginTransaction()[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_24 $$ enrolment1.setStudentNumber(xam.getStudentNumber())[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_20 $$ enrolment1.setCourseCode(course.getCourseCode())[ FD ]
Line_67 $$ enrolment1 = e-->Line_108 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_61 $$ s = openSession()-->Line_98 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_4 $$ Session s = openSession()-->Line_39 $$ t = s.beginTransaction()[ FD ]
Line_67 $$ enrolment1 = e-->Line_107 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_25 $$ xam.getEnrolments().add(enrolment1)[ FD ]
Line_67 $$ enrolment1 = e-->Line_71 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_85 $$ t = s.beginTransaction()[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_47 $$ enrolment2 = e[ FD ]
Line_44 $$ enrolment1 = e-->Line_98 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_76 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_70 $$ enrolment2 = e-->Line_91 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_76 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_70 $$ enrolment2 = e-->Line_79 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_38 $$ s = openSession()-->Line_98 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_35 $$ s.save(enrolment2)[ FD ]
Line_38 $$ s = openSession()-->Line_77 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_61 $$ s = openSession()-->Line_77 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_65 $$ e = (Enrolment) list.get(0)-->Line_69 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_61 $$ s = openSession()-->Line_103 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_99 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_10 $$ Student gavin = new Student()-->Line_34 $$ gavin.getEnrolments().add(enrolment2)[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_104 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_93 $$ enrolment2 = e-->Line_99 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_65 $$ e = (Enrolment) list.get(0)-->Line_73 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ FD ]
Line_68 $$ enrolment2 = (Enrolment) list.get(1)-->Line_79 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_38 $$ s = openSession()-->Line_62 $$ t = s.beginTransaction()[ FD ]
Line_42 $$ Enrolment e = (Enrolment) list.get(0)-->Line_90 $$ enrolment1 = e[ FD ]
Line_84 $$ s = openSession()-->Line_101 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_68 $$ enrolment2 = (Enrolment) list.get(1)-->Line_93 $$ enrolment2 = e[ FD ]
Line_94 $$ enrolment1 = (Enrolment) list.get(1)-->Line_108 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_44 $$ enrolment1 = e-->Line_105 $$ s.delete(enrolment1)[ FD ]
Line_42 $$ Enrolment e = (Enrolment) list.get(0)-->Line_66 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_65 $$ e = (Enrolment) list.get(0)-->Line_88 $$ e = (Enrolment) list.get(0)[ FD ]
Line_65 $$ e = (Enrolment) list.get(0)-->Line_93 $$ enrolment2 = e[ FD ]
Line_38 $$ s = openSession()-->Line_104 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_56 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_38 $$ s = openSession()-->Line_109 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_42 $$ Enrolment e = (Enrolment) list.get(0)-->Line_47 $$ enrolment2 = e[ FD ]
Line_61 $$ s = openSession()-->Line_107 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_38 $$ s = openSession()-->Line_81 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_42 $$ Enrolment e = (Enrolment) list.get(0)-->Line_73 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ FD ]
Line_4 $$ Session s = openSession()-->Line_85 $$ t = s.beginTransaction()[ FD ]
Line_47 $$ enrolment2 = e-->Line_102 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_46 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_48 $$ enrolment1 = (Enrolment) list.get(1)[ CD ]
Line_65 $$ e = (Enrolment) list.get(0)-->Line_90 $$ enrolment1 = e[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_58 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_38 $$ s = openSession()-->Line_78 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_38 $$ s = openSession()-->Line_108 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_93 $$ enrolment2 = e-->Line_102 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_71 $$ enrolment1 = (Enrolment) list.get(1)-->Line_107 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_38 $$ s = openSession()-->Line_101 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_77 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_70 $$ enrolment2 = e-->Line_102 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_22 $$ enrolment1.setYear((short) 1999)[ FD ]
Line_63 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_71 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_40 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_63 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()[ FD ]
Line_86 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()-->Line_88 $$ e = (Enrolment) list.get(0)[ FD ]
Line_42 $$ Enrolment e = (Enrolment) list.get(0)-->Line_43 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_75 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_70 $$ enrolment2 = e-->Line_101 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_38 $$ s = openSession()-->Line_53 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_93 $$ enrolment2 = e-->Line_106 $$ s.delete(enrolment2)[ FD ]
Line_70 $$ enrolment2 = e-->Line_78 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_100 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_52 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_43 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_46 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ CD ]
Line_91 $$ enrolment2 = (Enrolment) list.get(1)-->Line_106 $$ s.delete(enrolment2)[ FD ]
Line_62 $$ t = s.beginTransaction()-->Line_82 $$ t.commit()[ FD ]
Line_38 $$ s = openSession()-->Line_55 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_92 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_94 $$ enrolment1 = (Enrolment) list.get(1)[ CD ]
Line_38 $$ s = openSession()-->Line_58 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_38 $$ s = openSession()-->Line_60 $$ s.close()[ FD ]
Line_47 $$ enrolment2 = e-->Line_76 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_26 $$ s.save(enrolment1)[ FD ]
Line_71 $$ enrolment1 = (Enrolment) list.get(1)-->Line_79 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_42 $$ Enrolment e = (Enrolment) list.get(0)-->Line_93 $$ enrolment2 = e[ FD ]
Line_71 $$ enrolment1 = (Enrolment) list.get(1)-->Line_100 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_109 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_67 $$ enrolment1 = e[ FD ]
Line_47 $$ enrolment2 = e-->Line_101 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_47 $$ enrolment2 = e-->Line_109 $$ s.delete(enrolment2.getStudent())[ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_57 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_66 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_67 $$ enrolment1 = e[ CD ]
Line_39 $$ t = s.beginTransaction()-->Line_85 $$ t = s.beginTransaction()[ FD ]
Line_44 $$ enrolment1 = e-->Line_107 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_94 $$ enrolment1 = (Enrolment) list.get(1)-->Line_107 $$ s.delete(enrolment1.getCourse())[ FD ]
Line_69 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_71 $$ enrolment1 = (Enrolment) list.get(1)[ CD ]
Line_47 $$ enrolment2 = e-->Line_58 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_89 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_92 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ CD ]
Line_44 $$ enrolment1 = e-->Line_108 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_61 $$ s = openSession()-->Line_111 $$ s.close()[ FD ]
Line_38 $$ s = openSession()-->Line_61 $$ s = openSession()[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_54 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_79 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_40 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_68 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_40 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_87 $$ assertEquals(list.size(), 2)[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_78 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_56 $$ assertSame(enrolment1.getCourse(), enrolment2.getCourse())[ FD ]
Line_69 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_70 $$ enrolment2 = e[ CD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_103 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_47 $$ enrolment2 = e-->Line_91 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_68 $$ enrolment2 = (Enrolment) list.get(1)-->Line_78 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_44 $$ enrolment1 = e-->Line_52 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_4 $$ Session s = openSession()-->Line_98 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_84 $$ s = openSession()-->Line_99 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_4 $$ Session s = openSession()-->Line_62 $$ t = s.beginTransaction()[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_70 $$ enrolment2 = e[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_106 $$ s.delete(enrolment2)[ FD ]
Line_71 $$ enrolment1 = (Enrolment) list.get(1)-->Line_94 $$ enrolment1 = (Enrolment) list.get(1)[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_105 $$ s.delete(enrolment1)[ FD ]
Line_61 $$ s = openSession()-->Line_86 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()[ FD ]
Line_42 $$ Enrolment e = (Enrolment) list.get(0)-->Line_50 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ FD ]
Line_89 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) -->Line_91 $$ enrolment2 = (Enrolment) list.get(1)[ CD ]
Line_61 $$ s = openSession()-->Line_81 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_65 $$ e = (Enrolment) list.get(0)-->Line_67 $$ enrolment1 = e[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_23 $$ enrolment1.setStudent(xam)[ FD ]
Line_70 $$ enrolment2 = e-->Line_99 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_88 $$ e = (Enrolment) list.get(0)-->Line_96 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ FD ]
Line_45 $$ enrolment2 = (Enrolment) list.get(1)-->Line_101 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_91 $$ enrolment2 = (Enrolment) list.get(1)-->Line_99 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_14 $$ Student xam = new Student()-->Line_46 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_61 $$ s = openSession()-->Line_105 $$ s.delete(enrolment1)[ FD ]
Line_4 $$ Session s = openSession()-->Line_26 $$ s.save(enrolment1)[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_30 $$ enrolment2.setSemester((short) 3)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_82 $$ t.commit()[ FD ]
Line_84 $$ s = openSession()-->Line_108 $$ s.delete(enrolment1.getStudent())[ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_90 $$ enrolment1 = e[ FD ]
Line_4 $$ Session s = openSession()-->Line_80 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_67 $$ enrolment1 = e-->Line_90 $$ enrolment1 = e[ FD ]
Line_4 $$ Session s = openSession()-->Line_40 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()[ FD ]
Line_92 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_96 $$ fail("Enrolment has unknown student number: " + e.getStudent().getStudentNumber())[ CD ]
Line_63 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_64 $$ assertEquals(list.size(), 2)[ FD ]
Line_48 $$ enrolment1 = (Enrolment) list.get(1)-->Line_80 $$ assertTrue(s.isReadOnly(enrolment1.getStudent()))[ FD ]
Line_6 $$ Course course = new Course()-->Line_20 $$ enrolment1.setCourseCode(course.getCourseCode())[ FD ]
Line_38 $$ s = openSession()-->Line_52 $$ assertTrue(s.isReadOnly(enrolment1))[ FD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_67 $$ enrolment1 = e[ FD ]
Line_65 $$ e = (Enrolment) list.get(0)-->Line_89 $$ if (e.getStudent().getStudentNumber() == gavin.getStudentNumber()) [ FD ]
Line_86 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()-->Line_91 $$ enrolment2 = (Enrolment) list.get(1)[ FD ]
Line_40 $$ List list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_64 $$ assertEquals(list.size(), 2)[ FD ]
Line_92 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) -->Line_93 $$ enrolment2 = e[ CD ]
Line_18 $$ Enrolment enrolment1 = new Enrolment()-->Line_21 $$ enrolment1.setSemester((short) 1)[ FD ]
Line_61 $$ s = openSession()-->Line_78 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_90 $$ enrolment1 = e-->Line_105 $$ s.delete(enrolment1)[ FD ]
Line_4 $$ Session s = openSession()-->Line_17 $$ s.save(xam)[ FD ]
Line_44 $$ enrolment1 = e-->Line_67 $$ enrolment1 = e[ FD ]
Line_63 $$ list = s.createCriteria(Enrolment.class).createAlias("student", "s").createAlias("course", "c").setReadOnly(true).add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).setReadOnly(true).list()-->Line_87 $$ assertEquals(list.size(), 2)[ FD ]
Line_84 $$ s = openSession()-->Line_104 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_78 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_100 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_101 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_38 $$ s = openSession()-->Line_76 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_61 $$ s = openSession()-->Line_101 $$ assertTrue(s.isReadOnly(enrolment2.getCourse()))[ FD ]
Line_14 $$ Student xam = new Student()-->Line_69 $$ if (e.getStudent().getStudentNumber() == xam.getStudentNumber()) [ FD ]
Line_67 $$ enrolment1 = e-->Line_100 $$ assertTrue(s.isReadOnly(enrolment1.getCourse()))[ FD ]
Line_85 $$ t = s.beginTransaction()-->Line_110 $$ t.commit()[ FD ]
Line_68 $$ enrolment2 = (Enrolment) list.get(1)-->Line_81 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_71 $$ enrolment1 = (Enrolment) list.get(1)-->Line_90 $$ enrolment1 = e[ FD ]
Line_4 $$ Session s = openSession()-->Line_106 $$ s.delete(enrolment2)[ FD ]
Line_27 $$ Enrolment enrolment2 = new Enrolment()-->Line_32 $$ enrolment2.setStudent(gavin)[ FD ]
Line_84 $$ s = openSession()-->Line_86 $$ list = s.createCriteria(Enrolment.class).setReadOnly(true).createAlias("student", "s").createAlias("course", "c").add(Restrictions.isNotEmpty("s.enrolments")).setCacheable(true).list()[ FD ]
Line_47 $$ enrolment2 = e-->Line_99 $$ assertTrue(s.isReadOnly(enrolment2))[ FD ]
Line_61 $$ s = openSession()-->Line_104 $$ assertTrue(s.isReadOnly(enrolment2.getStudent()))[ FD ]
Line_14 $$ Student xam = new Student()-->Line_25 $$ xam.getEnrolments().add(enrolment1)[ FD ]
