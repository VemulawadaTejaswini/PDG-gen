Line_10 $$ final List<String> typeLanguage = StringUtil.split(courseType, " ")-->Line_11 $$ if (typeLanguage.size() == 2 && PYCHARM_PREFIX.equals(typeLanguage.get(0))) [ FD ]
Line_2 $$ private static boolean addCoursesFromStepic(List<CourseInfo> result, int pageNumber) throws IOException -->Line_4 $$ final CoursesContainer coursesContainer = getFromStepic(url, CoursesContainer.class)[ CD ]
Line_3 $$ final String url = pageNumber == 0 ? "courses" : "courses?page=" + String.valueOf(pageNumber)-->Line_4 $$ final CoursesContainer coursesContainer = getFromStepic(url, CoursesContainer.class)[ FD ]
Line_13 $$ final CourseInfo.Author author = getFromStepic("users/" + String.valueOf(instructor), AuthorWrapper.class).users.get(0)-->Line_14 $$ info.addAuthor(author)[ FD ]
Line_2 $$ private static boolean addCoursesFromStepic(List<CourseInfo> result, int pageNumber) throws IOException -->Line_3 $$ final String url = pageNumber == 0 ? "courses" : "courses?page=" + String.valueOf(pageNumber)[ FD ]
Line_6 $$ for (CourseInfo info : courseInfos) -->Line_16 $$ result.add(info)[ FD ]
Line_6 $$ for (CourseInfo info : courseInfos) -->Line_7 $$ final String courseType = info.getType()[ FD ]
Line_7 $$ final String courseType = info.getType()-->Line_8 $$ if (StringUtil.isEmptyOrSpaces(courseType))[ FD ]
Line_2 $$ private static boolean addCoursesFromStepic(List<CourseInfo> result, int pageNumber) throws IOException -->Line_19 $$ return coursesContainer.meta.containsKey("has_next") && coursesContainer.meta.get("has_next") == Boolean.TRUE[ CD ]
Line_6 $$ for (CourseInfo info : courseInfos) -->Line_14 $$ info.addAuthor(author)[ FD ]
Line_2 $$ private static boolean addCoursesFromStepic(List<CourseInfo> result, int pageNumber) throws IOException -->Line_16 $$ result.add(info)[ FD ]
Line_7 $$ final String courseType = info.getType()-->Line_10 $$ final List<String> typeLanguage = StringUtil.split(courseType, " ")[ FD ]
Line_2 $$ private static boolean addCoursesFromStepic(List<CourseInfo> result, int pageNumber) throws IOException -->Line_5 $$ final List<CourseInfo> courseInfos = coursesContainer.courses[ CD ]
Line_12 $$ for (Integer instructor : info.instructors) -->Line_13 $$ final CourseInfo.Author author = getFromStepic("users/" + String.valueOf(instructor), AuthorWrapper.class).users.get(0)[ FD ]
Line_2 $$ private static boolean addCoursesFromStepic(List<CourseInfo> result, int pageNumber) throws IOException -->Line_3 $$ final String url = pageNumber == 0 ? "courses" : "courses?page=" + String.valueOf(pageNumber)[ CD ]
Line_11 $$ if (typeLanguage.size() == 2 && PYCHARM_PREFIX.equals(typeLanguage.get(0))) -->Line_16 $$ result.add(info)[ CD ]
