Line_35 $$ StringBuffer result = new StringBuffer()-->Line_37 $$ result.append(iterator.next())[ FD ]
Line_19 $$ for (int i = size - 1; i >= 0; i--) -->Line_29 $$ currentIndex = currentIndex + i * mult[ CD ]
Line_21 $$ currentLength += s.length()-->Line_22 $$ if (currentLength > (length - 3))[ FD ]
Line_12 $$ List<String> components = getComponents(file)-->Line_16 $$ int size = components.size()[ FD ]
Line_35 $$ StringBuffer result = new StringBuffer()-->Line_43 $$ return result.toString()[ FD ]
Line_36 $$ for (Iterator<String> iterator = begin.iterator(); iterator.hasNext(); ) -->Line_37 $$ result.append(iterator.next())[ FD ]
Line_10 $$ if (length == name.length())-->Line_11 $$ return name[ CD ]
Line_14 $$ List<String> end = new ArrayList<String>()-->Line_41 $$ result.append(end.get(i))[ FD ]
Line_32 $$ if (end.isEmpty()) -->Line_33 $$ return name[ CD ]
Line_7 $$ String name = file.getName()-->Line_10 $$ if (length == name.length())[ FD ]
Line_20 $$ String s = components.get(currentIndex)-->Line_21 $$ currentLength += s.length()[ FD ]
Line_13 $$ int currentLength = 0-->Line_22 $$ if (currentLength > (length - 3))[ FD ]
Line_17 $$ int mult = 1-->Line_24 $$ if (mult > 0) [ FD ]
Line_14 $$ List<String> end = new ArrayList<String>()-->Line_32 $$ if (end.isEmpty()) [ FD ]
Line_36 $$ for (Iterator<String> iterator = begin.iterator(); iterator.hasNext(); ) -->Line_37 $$ result.append(iterator.next())[ CD ]
Line_12 $$ List<String> components = getComponents(file)-->Line_20 $$ String s = components.get(currentIndex)[ FD ]
Line_19 $$ for (int i = size - 1; i >= 0; i--) -->Line_21 $$ currentLength += s.length()[ CD ]
Line_19 $$ for (int i = size - 1; i >= 0; i--) -->Line_30 $$ mult *= -1[ CD ]
Line_14 $$ List<String> end = new ArrayList<String>()-->Line_40 $$ for (int i = end.size() - 1; i >= 0; i--) [ FD ]
Line_13 $$ int currentLength = 0-->Line_21 $$ currentLength += s.length()[ FD ]
Line_19 $$ for (int i = size - 1; i >= 0; i--) -->Line_24 $$ if (mult > 0) [ CD ]
Line_19 $$ for (int i = size - 1; i >= 0; i--) -->Line_41 $$ result.append(end.get(i))[ FD ]
Line_29 $$ currentIndex = currentIndex + i * mult-->Line_20 $$ String s = components.get(currentIndex)[ FD ]
Line_4 $$ String absolutePath = file.getPath()-->Line_5 $$ if (absolutePath.length() <= length)[ FD ]
Line_30 $$ mult *= -1-->Line_24 $$ if (mult > 0) [ FD ]
Line_19 $$ for (int i = size - 1; i >= 0; i--) -->Line_22 $$ if (currentLength > (length - 3))[ CD ]
Line_19 $$ for (int i = size - 1; i >= 0; i--) -->Line_40 $$ for (int i = end.size() - 1; i >= 0; i--) [ FD ]
Line_24 $$ if (mult > 0) -->Line_27 $$ begin.add(s)[ CD ]
Line_35 $$ StringBuffer result = new StringBuffer()-->Line_41 $$ result.append(end.get(i))[ FD ]
Line_19 $$ for (int i = size - 1; i >= 0; i--) -->Line_20 $$ String s = components.get(currentIndex)[ CD ]
Line_7 $$ String name = file.getName()-->Line_8 $$ if (length < name.length())[ FD ]
Line_35 $$ StringBuffer result = new StringBuffer()-->Line_39 $$ result.append("...")[ FD ]
Line_14 $$ List<String> end = new ArrayList<String>()-->Line_25 $$ end.add(s)[ FD ]
Line_18 $$ int currentIndex = 0-->Line_29 $$ currentIndex = currentIndex + i * mult[ FD ]
Line_20 $$ String s = components.get(currentIndex)-->Line_25 $$ end.add(s)[ FD ]
Line_20 $$ String s = components.get(currentIndex)-->Line_27 $$ begin.add(s)[ FD ]
Line_8 $$ if (length < name.length())-->Line_9 $$ return "..."[ CD ]
Line_15 $$ List<String> begin = new ArrayList<String>()-->Line_27 $$ begin.add(s)[ FD ]
Line_40 $$ for (int i = end.size() - 1; i >= 0; i--) -->Line_41 $$ result.append(end.get(i))[ FD ]
Line_18 $$ int currentIndex = 0-->Line_20 $$ String s = components.get(currentIndex)[ FD ]
Line_24 $$ if (mult > 0) -->Line_25 $$ end.add(s)[ CD ]
Line_15 $$ List<String> begin = new ArrayList<String>()-->Line_36 $$ for (Iterator<String> iterator = begin.iterator(); iterator.hasNext(); ) [ FD ]
Line_17 $$ int mult = 1-->Line_30 $$ mult *= -1[ FD ]
Line_5 $$ if (absolutePath.length() <= length)-->Line_6 $$ return absolutePath[ CD ]
Line_40 $$ for (int i = end.size() - 1; i >= 0; i--) -->Line_41 $$ result.append(end.get(i))[ CD ]
