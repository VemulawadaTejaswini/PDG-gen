Line_19 $$ IndexMetaData indexMetaData = cursor.value-->Line_33 $$ for (ObjectObjectCursor<String, AliasMetaData> aliasCursor : indexMetaData.getAliases()) [ FD ]
Line_17 $$ List<String> allClosedIndicesLst = new ArrayList()-->Line_27 $$ String[] allClosedIndices = allClosedIndicesLst.toArray(new String[allClosedIndicesLst.size()])[ FD ]
Line_20 $$ if (indexMetaData.getState() == IndexMetaData.State.OPEN) -->Line_22 $$ if (indexMetaData.getState() == IndexMetaData.State.CLOSE) [ CD ]
Line_19 $$ IndexMetaData indexMetaData = cursor.value-->Line_22 $$ if (indexMetaData.getState() == IndexMetaData.State.CLOSE) [ FD ]
Line_17 $$ List<String> allClosedIndicesLst = new ArrayList()-->Line_23 $$ allClosedIndicesLst.add(indexMetaData.getIndex())[ FD ]
Line_35 $$ AliasOrIndex aliasOrIndex = aliasAndIndexLookup.get(aliasMetaData.getAlias())-->Line_39 $$ if (aliasOrIndex instanceof AliasOrIndex.Alias) [ FD ]
Line_2 $$ public MetaData build() -->Line_26 $$ String[] allOpenIndices = allOpenIndicesLst.toArray(new String[allOpenIndicesLst.size()])[ CD ]
Line_34 $$ AliasMetaData aliasMetaData = aliasCursor.value-->Line_38 $$ aliasAndIndexLookup.put(aliasMetaData.getAlias(), aliasOrIndex)[ FD ]
Line_22 $$ if (indexMetaData.getState() == IndexMetaData.State.CLOSE) -->Line_23 $$ allClosedIndicesLst.add(indexMetaData.getIndex())[ CD ]
Line_2 $$ public MetaData build() -->Line_16 $$ List<String> allOpenIndicesLst = new ArrayList()[ CD ]
Line_16 $$ List<String> allOpenIndicesLst = new ArrayList()-->Line_21 $$ allOpenIndicesLst.add(indexMetaData.getIndex())[ FD ]
Line_37 $$ aliasOrIndex = new AliasOrIndex.Alias(aliasMetaData, indexMetaData)-->Line_38 $$ aliasAndIndexLookup.put(aliasMetaData.getAlias(), aliasOrIndex)[ FD ]
Line_34 $$ AliasMetaData aliasMetaData = aliasCursor.value-->Line_44 $$ throw new IllegalStateException("index and alias names need to be unique, but alias [" + aliasMetaData.getAlias() + "] and index [" + index.getIndex().getIndex() + "] have the same name")[ FD ]
Line_19 $$ IndexMetaData indexMetaData = cursor.value-->Line_20 $$ if (indexMetaData.getState() == IndexMetaData.State.OPEN) [ FD ]
Line_35 $$ AliasOrIndex aliasOrIndex = aliasAndIndexLookup.get(aliasMetaData.getAlias())-->Line_42 $$ if (aliasOrIndex instanceof AliasOrIndex.Index) [ FD ]
Line_37 $$ aliasOrIndex = new AliasOrIndex.Alias(aliasMetaData, indexMetaData)-->Line_42 $$ if (aliasOrIndex instanceof AliasOrIndex.Index) [ FD ]
Line_35 $$ AliasOrIndex aliasOrIndex = aliasAndIndexLookup.get(aliasMetaData.getAlias())-->Line_37 $$ aliasOrIndex = new AliasOrIndex.Alias(aliasMetaData, indexMetaData)[ FD ]
Line_34 $$ AliasMetaData aliasMetaData = aliasCursor.value-->Line_46 $$ throw new IllegalStateException("unexpected alias [" + aliasMetaData.getAlias() + "][" + aliasOrIndex + "]")[ FD ]
Line_19 $$ IndexMetaData indexMetaData = cursor.value-->Line_23 $$ allClosedIndicesLst.add(indexMetaData.getIndex())[ FD ]
Line_34 $$ AliasMetaData aliasMetaData = aliasCursor.value-->Line_35 $$ AliasOrIndex aliasOrIndex = aliasAndIndexLookup.get(aliasMetaData.getAlias())[ FD ]
Line_19 $$ IndexMetaData indexMetaData = cursor.value-->Line_41 $$ alias.addIndex(indexMetaData)[ FD ]
Line_39 $$ if (aliasOrIndex instanceof AliasOrIndex.Alias) -->Line_42 $$ if (aliasOrIndex instanceof AliasOrIndex.Index) [ CD ]
Line_36 $$ if (aliasOrIndex == null) -->Line_38 $$ aliasAndIndexLookup.put(aliasMetaData.getAlias(), aliasOrIndex)[ CD ]
Line_36 $$ if (aliasOrIndex == null) -->Line_39 $$ if (aliasOrIndex instanceof AliasOrIndex.Alias) [ CD ]
Line_2 $$ public MetaData build() -->Line_27 $$ String[] allClosedIndices = allClosedIndicesLst.toArray(new String[allClosedIndicesLst.size()])[ CD ]
Line_2 $$ public MetaData build() -->Line_50 $$ aliasAndIndexLookup = Collections.unmodifiableSortedMap(aliasAndIndexLookup)[ CD ]
Line_40 $$ AliasOrIndex.Alias alias = (AliasOrIndex.Alias) aliasOrIndex-->Line_41 $$ alias.addIndex(indexMetaData)[ FD ]
Line_43 $$ AliasOrIndex.Index index = (AliasOrIndex.Index) aliasOrIndex-->Line_44 $$ throw new IllegalStateException("index and alias names need to be unique, but alias [" + aliasMetaData.getAlias() + "] and index [" + index.getIndex().getIndex() + "] have the same name")[ FD ]
Line_42 $$ if (aliasOrIndex instanceof AliasOrIndex.Index) -->Line_43 $$ AliasOrIndex.Index index = (AliasOrIndex.Index) aliasOrIndex[ CD ]
Line_2 $$ public MetaData build() -->Line_15 $$ String[] allIndices = allIndicesLst.toArray(new String[allIndicesLst.size()])[ CD ]
Line_35 $$ AliasOrIndex aliasOrIndex = aliasAndIndexLookup.get(aliasMetaData.getAlias())-->Line_36 $$ if (aliasOrIndex == null) [ FD ]
Line_19 $$ IndexMetaData indexMetaData = cursor.value-->Line_32 $$ aliasAndIndexLookup.put(indexMetaData.getIndex(), new AliasOrIndex.Index(indexMetaData))[ FD ]
Line_36 $$ if (aliasOrIndex == null) -->Line_37 $$ aliasOrIndex = new AliasOrIndex.Alias(aliasMetaData, indexMetaData)[ CD ]
Line_2 $$ public MetaData build() -->Line_51 $$ return new MetaData(clusterUUID, version, transientSettings, persistentSettings, indices.build(), templates.build(), customs.build(), allIndices, allOpenIndices, allClosedIndices, aliasAndIndexLookup)[ CD ]
Line_35 $$ AliasOrIndex aliasOrIndex = aliasAndIndexLookup.get(aliasMetaData.getAlias())-->Line_38 $$ aliasAndIndexLookup.put(aliasMetaData.getAlias(), aliasOrIndex)[ FD ]
Line_19 $$ IndexMetaData indexMetaData = cursor.value-->Line_21 $$ allOpenIndicesLst.add(indexMetaData.getIndex())[ FD ]
Line_16 $$ List<String> allOpenIndicesLst = new ArrayList()-->Line_26 $$ String[] allOpenIndices = allOpenIndicesLst.toArray(new String[allOpenIndicesLst.size()])[ FD ]
Line_37 $$ aliasOrIndex = new AliasOrIndex.Alias(aliasMetaData, indexMetaData)-->Line_39 $$ if (aliasOrIndex instanceof AliasOrIndex.Alias) [ FD ]
Line_2 $$ public MetaData build() -->Line_17 $$ List<String> allClosedIndicesLst = new ArrayList()[ CD ]
Line_20 $$ if (indexMetaData.getState() == IndexMetaData.State.OPEN) -->Line_21 $$ allOpenIndicesLst.add(indexMetaData.getIndex())[ CD ]
Line_39 $$ if (aliasOrIndex instanceof AliasOrIndex.Alias) -->Line_41 $$ alias.addIndex(indexMetaData)[ CD ]
Line_39 $$ if (aliasOrIndex instanceof AliasOrIndex.Alias) -->Line_40 $$ AliasOrIndex.Alias alias = (AliasOrIndex.Alias) aliasOrIndex[ CD ]
