Line_26 $$ AliasOrIndex aliasOrIndex = aliasAndIndexLookup.get(aliasMetaData.getAlias())-->Line_33 $$ if (aliasOrIndex instanceof AliasOrIndex.Index) [ FD ]
Line_2 $$ public MetaData build() -->Line_42 $$ return new MetaData(clusterUUID, version, transientSettings, persistentSettings, indices.build(), templates.build(), customs.build(), allIndices, allOpenIndices, allClosedIndices, aliasAndIndexLookup)[ CD ]
Line_11 $$ IndexMetaData indexMetaData = cursor.value-->Line_13 $$ allOpenIndicesLst.add(indexMetaData.getIndex())[ FD ]
Line_11 $$ IndexMetaData indexMetaData = cursor.value-->Line_14 $$ if (indexMetaData.getState() == IndexMetaData.State.CLOSE) [ FD ]
Line_11 $$ IndexMetaData indexMetaData = cursor.value-->Line_12 $$ if (indexMetaData.getState() == IndexMetaData.State.OPEN) [ FD ]
Line_26 $$ AliasOrIndex aliasOrIndex = aliasAndIndexLookup.get(aliasMetaData.getAlias())-->Line_29 $$ aliasAndIndexLookup.put(aliasMetaData.getAlias(), aliasOrIndex)[ FD ]
Line_11 $$ IndexMetaData indexMetaData = cursor.value-->Line_15 $$ allClosedIndicesLst.add(indexMetaData.getIndex())[ FD ]
Line_30 $$ if (aliasOrIndex instanceof AliasOrIndex.Alias) -->Line_32 $$ alias.addIndex(indexMetaData)[ CD ]
Line_9 $$ List<String> allClosedIndicesLst = new ArrayList()-->Line_19 $$ String[] allClosedIndices = allClosedIndicesLst.toArray(new String[allClosedIndicesLst.size()])[ FD ]
Line_14 $$ if (indexMetaData.getState() == IndexMetaData.State.CLOSE) -->Line_15 $$ allClosedIndicesLst.add(indexMetaData.getIndex())[ CD ]
Line_25 $$ AliasMetaData aliasMetaData = aliasCursor.value-->Line_26 $$ AliasOrIndex aliasOrIndex = aliasAndIndexLookup.get(aliasMetaData.getAlias())[ FD ]
Line_30 $$ if (aliasOrIndex instanceof AliasOrIndex.Alias) -->Line_33 $$ if (aliasOrIndex instanceof AliasOrIndex.Index) [ CD ]
Line_9 $$ List<String> allClosedIndicesLst = new ArrayList()-->Line_15 $$ allClosedIndicesLst.add(indexMetaData.getIndex())[ FD ]
Line_12 $$ if (indexMetaData.getState() == IndexMetaData.State.OPEN) -->Line_14 $$ if (indexMetaData.getState() == IndexMetaData.State.CLOSE) [ CD ]
Line_11 $$ IndexMetaData indexMetaData = cursor.value-->Line_24 $$ for (ObjectObjectCursor<String, AliasMetaData> aliasCursor : indexMetaData.getAliases()) [ FD ]
Line_33 $$ if (aliasOrIndex instanceof AliasOrIndex.Index) -->Line_34 $$ AliasOrIndex.Index index = (AliasOrIndex.Index) aliasOrIndex[ CD ]
Line_12 $$ if (indexMetaData.getState() == IndexMetaData.State.OPEN) -->Line_13 $$ allOpenIndicesLst.add(indexMetaData.getIndex())[ CD ]
Line_8 $$ List<String> allOpenIndicesLst = new ArrayList()-->Line_13 $$ allOpenIndicesLst.add(indexMetaData.getIndex())[ FD ]
Line_20 $$ SortedMap<String, AliasOrIndex> aliasAndIndexLookup = new TreeMap()-->Line_26 $$ AliasOrIndex aliasOrIndex = aliasAndIndexLookup.get(aliasMetaData.getAlias())[ FD ]
Line_2 $$ public MetaData build() -->Line_41 $$ aliasAndIndexLookup = Collections.unmodifiableSortedMap(aliasAndIndexLookup)[ CD ]
Line_27 $$ if (aliasOrIndex == null) -->Line_30 $$ if (aliasOrIndex instanceof AliasOrIndex.Alias) [ CD ]
Line_8 $$ List<String> allOpenIndicesLst = new ArrayList()-->Line_18 $$ String[] allOpenIndices = allOpenIndicesLst.toArray(new String[allOpenIndicesLst.size()])[ FD ]
Line_26 $$ AliasOrIndex aliasOrIndex = aliasAndIndexLookup.get(aliasMetaData.getAlias())-->Line_27 $$ if (aliasOrIndex == null) [ FD ]
Line_25 $$ AliasMetaData aliasMetaData = aliasCursor.value-->Line_35 $$ throw new IllegalStateException("index and alias names need to be unique, but alias [" + aliasMetaData.getAlias() + "] and index [" + index.getIndex().getIndex() + "] have the same name")[ FD ]
Line_20 $$ SortedMap<String, AliasOrIndex> aliasAndIndexLookup = new TreeMap()-->Line_41 $$ aliasAndIndexLookup = Collections.unmodifiableSortedMap(aliasAndIndexLookup)[ FD ]
Line_2 $$ public MetaData build() -->Line_18 $$ String[] allOpenIndices = allOpenIndicesLst.toArray(new String[allOpenIndicesLst.size()])[ CD ]
Line_20 $$ SortedMap<String, AliasOrIndex> aliasAndIndexLookup = new TreeMap()-->Line_29 $$ aliasAndIndexLookup.put(aliasMetaData.getAlias(), aliasOrIndex)[ FD ]
Line_28 $$ aliasOrIndex = new AliasOrIndex.Alias(aliasMetaData, indexMetaData)-->Line_33 $$ if (aliasOrIndex instanceof AliasOrIndex.Index) [ FD ]
Line_2 $$ public MetaData build() -->Line_20 $$ SortedMap<String, AliasOrIndex> aliasAndIndexLookup = new TreeMap()[ CD ]
Line_2 $$ public MetaData build() -->Line_7 $$ String[] allIndices = allIndicesLst.toArray(new String[allIndicesLst.size()])[ CD ]
Line_2 $$ public MetaData build() -->Line_3 $$ List<String> allIndicesLst = new ArrayList()[ CD ]
Line_20 $$ SortedMap<String, AliasOrIndex> aliasAndIndexLookup = new TreeMap()-->Line_23 $$ aliasAndIndexLookup.put(indexMetaData.getIndex(), new AliasOrIndex.Index(indexMetaData))[ FD ]
Line_28 $$ aliasOrIndex = new AliasOrIndex.Alias(aliasMetaData, indexMetaData)-->Line_29 $$ aliasAndIndexLookup.put(aliasMetaData.getAlias(), aliasOrIndex)[ FD ]
Line_3 $$ List<String> allIndicesLst = new ArrayList()-->Line_5 $$ allIndicesLst.add(cursor.value.getIndex())[ FD ]
Line_27 $$ if (aliasOrIndex == null) -->Line_29 $$ aliasAndIndexLookup.put(aliasMetaData.getAlias(), aliasOrIndex)[ CD ]
Line_26 $$ AliasOrIndex aliasOrIndex = aliasAndIndexLookup.get(aliasMetaData.getAlias())-->Line_30 $$ if (aliasOrIndex instanceof AliasOrIndex.Alias) [ FD ]
Line_11 $$ IndexMetaData indexMetaData = cursor.value-->Line_32 $$ alias.addIndex(indexMetaData)[ FD ]
Line_11 $$ IndexMetaData indexMetaData = cursor.value-->Line_23 $$ aliasAndIndexLookup.put(indexMetaData.getIndex(), new AliasOrIndex.Index(indexMetaData))[ FD ]
Line_26 $$ AliasOrIndex aliasOrIndex = aliasAndIndexLookup.get(aliasMetaData.getAlias())-->Line_28 $$ aliasOrIndex = new AliasOrIndex.Alias(aliasMetaData, indexMetaData)[ FD ]
Line_34 $$ AliasOrIndex.Index index = (AliasOrIndex.Index) aliasOrIndex-->Line_35 $$ throw new IllegalStateException("index and alias names need to be unique, but alias [" + aliasMetaData.getAlias() + "] and index [" + index.getIndex().getIndex() + "] have the same name")[ FD ]
Line_31 $$ AliasOrIndex.Alias alias = (AliasOrIndex.Alias) aliasOrIndex-->Line_32 $$ alias.addIndex(indexMetaData)[ FD ]
Line_28 $$ aliasOrIndex = new AliasOrIndex.Alias(aliasMetaData, indexMetaData)-->Line_30 $$ if (aliasOrIndex instanceof AliasOrIndex.Alias) [ FD ]
Line_2 $$ public MetaData build() -->Line_9 $$ List<String> allClosedIndicesLst = new ArrayList()[ CD ]
Line_2 $$ public MetaData build() -->Line_8 $$ List<String> allOpenIndicesLst = new ArrayList()[ CD ]
Line_25 $$ AliasMetaData aliasMetaData = aliasCursor.value-->Line_29 $$ aliasAndIndexLookup.put(aliasMetaData.getAlias(), aliasOrIndex)[ FD ]
Line_27 $$ if (aliasOrIndex == null) -->Line_28 $$ aliasOrIndex = new AliasOrIndex.Alias(aliasMetaData, indexMetaData)[ CD ]
Line_25 $$ AliasMetaData aliasMetaData = aliasCursor.value-->Line_37 $$ throw new IllegalStateException("unexpected alias [" + aliasMetaData.getAlias() + "][" + aliasOrIndex + "]")[ FD ]
Line_30 $$ if (aliasOrIndex instanceof AliasOrIndex.Alias) -->Line_31 $$ AliasOrIndex.Alias alias = (AliasOrIndex.Alias) aliasOrIndex[ CD ]
Line_2 $$ public MetaData build() -->Line_19 $$ String[] allClosedIndices = allClosedIndicesLst.toArray(new String[allClosedIndicesLst.size()])[ CD ]
Line_3 $$ List<String> allIndicesLst = new ArrayList()-->Line_7 $$ String[] allIndices = allIndicesLst.toArray(new String[allIndicesLst.size()])[ FD ]
