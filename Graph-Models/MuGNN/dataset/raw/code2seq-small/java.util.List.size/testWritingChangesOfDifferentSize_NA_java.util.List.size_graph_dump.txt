Line_5 $$ for (int i = 0; i < MAX; i++) -->Line_6 $$ if (i > MAX / 2) [ CD ]
Line_6 $$ if (i > MAX / 2) -->Line_7 $$ myStorage.deleteRecordsUpTo(records.get(records.size() - MAX / 2))[ CD ]
Line_2 $$ public void testWritingChangesOfDifferentSize() throws Exception -->Line_11 $$ assertFirstAndLast(records.get(records.size() - MAX / 2), records.get(records.size() - 1))[ CD ]
Line_2 $$ public void testWritingChangesOfDifferentSize() throws Exception -->Line_4 $$ List<Integer> records = new ArrayList<Integer>(MAX)[ CD ]
Line_4 $$ List<Integer> records = new ArrayList<Integer>(MAX)-->Line_7 $$ myStorage.deleteRecordsUpTo(records.get(records.size() - MAX / 2))[ FD ]
Line_5 $$ for (int i = 0; i < MAX; i++) -->Line_9 $$ records.add(createRecord(i * 50))[ CD ]
Line_5 $$ for (int i = 0; i < MAX; i++) -->Line_6 $$ if (i > MAX / 2) [ FD ]
Line_4 $$ List<Integer> records = new ArrayList<Integer>(MAX)-->Line_11 $$ assertFirstAndLast(records.get(records.size() - MAX / 2), records.get(records.size() - 1))[ FD ]
Line_2 $$ public void testWritingChangesOfDifferentSize() throws Exception -->Line_3 $$ final int MAX = 100[ CD ]
Line_3 $$ final int MAX = 100-->Line_5 $$ for (int i = 0; i < MAX; i++) [ FD ]
Line_4 $$ List<Integer> records = new ArrayList<Integer>(MAX)-->Line_9 $$ records.add(createRecord(i * 50))[ FD ]
Line_2 $$ public void testWritingChangesOfDifferentSize() throws Exception -->Line_5 $$ for (int i = 0; i < MAX; i++) [ CD ]
