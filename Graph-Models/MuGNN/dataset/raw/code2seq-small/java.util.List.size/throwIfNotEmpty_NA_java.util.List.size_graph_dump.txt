Line_6 $$ if (throwables.size() == 1) -->Line_7 $$ Throwable throwable = throwables.get(0)[ CD ]
Line_8 $$ if (throwable instanceof Error) -->Line_10 $$ if (throwable instanceof RuntimeException) [ CD ]
Line_2 $$ public static void throwIfNotEmpty(@Nullable List<Throwable> throwables) -->Line_7 $$ Throwable throwable = throwables.get(0)[ FD ]
Line_7 $$ Throwable throwable = throwables.get(0)-->Line_8 $$ if (throwable instanceof Error) [ FD ]
Line_2 $$ public static void throwIfNotEmpty(@Nullable List<Throwable> throwables) -->Line_6 $$ if (throwables.size() == 1) [ FD ]
Line_7 $$ Throwable throwable = throwables.get(0)-->Line_10 $$ if (throwable instanceof RuntimeException) [ FD ]
Line_2 $$ public static void throwIfNotEmpty(@Nullable List<Throwable> throwables) -->Line_3 $$ if (ContainerUtil.isEmpty(throwables)) [ CD ]
Line_2 $$ public static void throwIfNotEmpty(@Nullable List<Throwable> throwables) -->Line_3 $$ if (ContainerUtil.isEmpty(throwables)) [ FD ]
Line_2 $$ public static void throwIfNotEmpty(@Nullable List<Throwable> throwables) -->Line_6 $$ if (throwables.size() == 1) [ CD ]
Line_3 $$ if (ContainerUtil.isEmpty(throwables)) -->Line_4 $$ return[ CD ]
Line_6 $$ if (throwables.size() == 1) -->Line_8 $$ if (throwable instanceof Error) [ CD ]
