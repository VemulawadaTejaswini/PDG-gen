Line_5 $$ HibernateDaoSupport dao = new HibernateDaoSupport() -->Line_11 $$ dao.afterPropertiesSet()[ FD ]
Line_5 $$ HibernateDaoSupport dao = new HibernateDaoSupport() -->Line_12 $$ assertEquals("Correct SessionFactory", sf, dao.getSessionFactory())[ FD ]
Line_5 $$ HibernateDaoSupport dao = new HibernateDaoSupport() -->Line_10 $$ dao.setSessionFactory(sf)[ FD ]
Line_2 $$ public void testHibernateDaoSupportWithSessionFactory() throws Exception -->Line_12 $$ assertEquals("Correct SessionFactory", sf, dao.getSessionFactory())[ CD ]
Line_2 $$ public void testHibernateDaoSupportWithSessionFactory() throws Exception -->Line_10 $$ dao.setSessionFactory(sf)[ CD ]
Line_4 $$ final List test = new ArrayList()-->Line_14 $$ assertEquals("initDao called", test.size(), 1)[ FD ]
Line_3 $$ SessionFactory sf = mock(SessionFactory.class)-->Line_12 $$ assertEquals("Correct SessionFactory", sf, dao.getSessionFactory())[ FD ]
Line_5 $$ HibernateDaoSupport dao = new HibernateDaoSupport() -->Line_13 $$ assertEquals("Correct HibernateTemplate", sf, dao.getHibernateTemplate().getSessionFactory())[ FD ]
Line_2 $$ public void testHibernateDaoSupportWithSessionFactory() throws Exception -->Line_14 $$ assertEquals("initDao called", test.size(), 1)[ CD ]
Line_3 $$ SessionFactory sf = mock(SessionFactory.class)-->Line_13 $$ assertEquals("Correct HibernateTemplate", sf, dao.getHibernateTemplate().getSessionFactory())[ FD ]
Line_2 $$ public void testHibernateDaoSupportWithSessionFactory() throws Exception -->Line_4 $$ final List test = new ArrayList()[ CD ]
Line_4 $$ final List test = new ArrayList()-->Line_7 $$ test.add("test")[ FD ]
Line_2 $$ public void testHibernateDaoSupportWithSessionFactory() throws Exception -->Line_5 $$ HibernateDaoSupport dao = new HibernateDaoSupport() [ CD ]
Line_5 $$ HibernateDaoSupport dao = new HibernateDaoSupport() -->Line_7 $$ test.add("test")[ CD ]
Line_2 $$ public void testHibernateDaoSupportWithSessionFactory() throws Exception -->Line_3 $$ SessionFactory sf = mock(SessionFactory.class)[ CD ]
Line_2 $$ public void testHibernateDaoSupportWithSessionFactory() throws Exception -->Line_13 $$ assertEquals("Correct HibernateTemplate", sf, dao.getHibernateTemplate().getSessionFactory())[ CD ]
Line_3 $$ SessionFactory sf = mock(SessionFactory.class)-->Line_10 $$ dao.setSessionFactory(sf)[ FD ]
Line_2 $$ public void testHibernateDaoSupportWithSessionFactory() throws Exception -->Line_11 $$ dao.afterPropertiesSet()[ CD ]
