Line_11 $$ final String cut = StringUtil.join(parts.subList(2, parts.size()), " ")-->Line_18 $$ readWithSerializable(project, url, cut, set.last())[ FD ]
Line_7 $$ final String id = parts.get(0)-->Line_8 $$ final TreeSet<WorkingSetSerializable> set = ourSerializables.get(id)[ FD ]
Line_2 $$ public Object[] createPathFromUrl(Project project, String url, String moduleName) -->Line_23 $$ return null[ CD ]
Line_13 $$ WorkingSetSerializable serializable = iterator.next()-->Line_15 $$ return readWithSerializable(project, url, cut, serializable)[ FD ]
Line_9 $$ if (set != null && !set.isEmpty()) -->Line_18 $$ readWithSerializable(project, url, cut, set.last())[ CD ]
Line_5 $$ if (parts.size() < 3)-->Line_6 $$ return null[ CD ]
Line_8 $$ final TreeSet<WorkingSetSerializable> set = ourSerializables.get(id)-->Line_12 $$ for (Iterator<WorkingSetSerializable> iterator = set.descendingIterator(); iterator.hasNext(); ) [ FD ]
Line_10 $$ final int version = Integer.parseInt(parts.get(1))-->Line_14 $$ if (serializable.getVersion() == version) [ FD ]
Line_4 $$ final List<String> parts = StringUtil.split(url, " ", true)-->Line_5 $$ if (parts.size() < 3)[ FD ]
Line_8 $$ final TreeSet<WorkingSetSerializable> set = ourSerializables.get(id)-->Line_9 $$ if (set != null && !set.isEmpty()) [ FD ]
Line_8 $$ final TreeSet<WorkingSetSerializable> set = ourSerializables.get(id)-->Line_18 $$ readWithSerializable(project, url, cut, set.last())[ FD ]
Line_11 $$ final String cut = StringUtil.join(parts.subList(2, parts.size()), " ")-->Line_15 $$ return readWithSerializable(project, url, cut, serializable)[ FD ]
Line_9 $$ if (set != null && !set.isEmpty()) -->Line_10 $$ final int version = Integer.parseInt(parts.get(1))[ CD ]
Line_2 $$ public Object[] createPathFromUrl(Project project, String url, String moduleName) -->Line_15 $$ return readWithSerializable(project, url, cut, serializable)[ FD ]
Line_2 $$ public Object[] createPathFromUrl(Project project, String url, String moduleName) -->Line_4 $$ final List<String> parts = StringUtil.split(url, " ", true)[ FD ]
Line_4 $$ final List<String> parts = StringUtil.split(url, " ", true)-->Line_7 $$ final String id = parts.get(0)[ FD ]
Line_12 $$ for (Iterator<WorkingSetSerializable> iterator = set.descendingIterator(); iterator.hasNext(); ) -->Line_14 $$ if (serializable.getVersion() == version) [ CD ]
Line_9 $$ if (set != null && !set.isEmpty()) -->Line_12 $$ for (Iterator<WorkingSetSerializable> iterator = set.descendingIterator(); iterator.hasNext(); ) [ CD ]
Line_4 $$ final List<String> parts = StringUtil.split(url, " ", true)-->Line_11 $$ final String cut = StringUtil.join(parts.subList(2, parts.size()), " ")[ FD ]
Line_2 $$ public Object[] createPathFromUrl(Project project, String url, String moduleName) -->Line_18 $$ readWithSerializable(project, url, cut, set.last())[ FD ]
Line_9 $$ if (set != null && !set.isEmpty()) -->Line_11 $$ final String cut = StringUtil.join(parts.subList(2, parts.size()), " ")[ CD ]
Line_13 $$ WorkingSetSerializable serializable = iterator.next()-->Line_14 $$ if (serializable.getVersion() == version) [ FD ]
Line_4 $$ final List<String> parts = StringUtil.split(url, " ", true)-->Line_10 $$ final int version = Integer.parseInt(parts.get(1))[ FD ]
Line_12 $$ for (Iterator<WorkingSetSerializable> iterator = set.descendingIterator(); iterator.hasNext(); ) -->Line_13 $$ WorkingSetSerializable serializable = iterator.next()[ CD ]
Line_14 $$ if (serializable.getVersion() == version) -->Line_15 $$ return readWithSerializable(project, url, cut, serializable)[ CD ]
Line_12 $$ for (Iterator<WorkingSetSerializable> iterator = set.descendingIterator(); iterator.hasNext(); ) -->Line_13 $$ WorkingSetSerializable serializable = iterator.next()[ FD ]
