Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_21 $$ Assert.assertEquals(destinationName, newMessageRoutingBag.getDestinationName())[ CD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_32 $$ Assert.assertEquals(synchronizedBridge, newMessageRoutingBag.isSynchronizedBridge())[ CD ]
Line_7 $$ MessageRoutingBag messageRoutingBag = new MessageRoutingBag(message, synchronizedBridge)-->Line_16 $$ objectOutputStream.writeObject(messageRoutingBag)[ FD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_7 $$ MessageRoutingBag messageRoutingBag = new MessageRoutingBag(message, synchronizedBridge)[ CD ]
Line_20 $$ MessageRoutingBag newMessageRoutingBag = (MessageRoutingBag) objectInputStream.readObject()-->Line_35 $$ Assert.assertNull(ReflectionTestUtil.getFieldValue(newMessageRoutingBag, "_messageData"))[ FD ]
Line_20 $$ MessageRoutingBag newMessageRoutingBag = (MessageRoutingBag) objectInputStream.readObject()-->Line_25 $$ List<String> routingTrace = ReflectionTestUtil.getFieldValue(newMessageRoutingBag, "_routingTrace")[ FD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_35 $$ Assert.assertNull(ReflectionTestUtil.getFieldValue(newMessageRoutingBag, "_messageData"))[ CD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_20 $$ MessageRoutingBag newMessageRoutingBag = (MessageRoutingBag) objectInputStream.readObject()[ CD ]
Line_14 $$ UnsyncByteArrayOutputStream unsyncByteArrayOutputStream = new UnsyncByteArrayOutputStream()-->Line_18 $$ byte[] bytes = unsyncByteArrayOutputStream.toByteArray()[ FD ]
Line_10 $$ String routingId2 = "routingId2"-->Line_28 $$ Assert.assertEquals(routingId2, routingTrace.get(1))[ FD ]
Line_33 $$ Message newMessage = newMessageRoutingBag.getMessage()-->Line_36 $$ Assert.assertSame(newMessage, newMessageRoutingBag.getMessage())[ FD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_29 $$ Assert.assertTrue(newMessageRoutingBag.isVisited(routingId1))[ CD ]
Line_20 $$ MessageRoutingBag newMessageRoutingBag = (MessageRoutingBag) objectInputStream.readObject()-->Line_23 $$ Assert.assertNotNull(newMessageRoutingBag.getMessageData())[ FD ]
Line_20 $$ MessageRoutingBag newMessageRoutingBag = (MessageRoutingBag) objectInputStream.readObject()-->Line_36 $$ Assert.assertSame(newMessage, newMessageRoutingBag.getMessage())[ FD ]
Line_25 $$ List<String> routingTrace = ReflectionTestUtil.getFieldValue(newMessageRoutingBag, "_routingTrace")-->Line_27 $$ Assert.assertEquals(routingId1, routingTrace.get(0))[ FD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_27 $$ Assert.assertEquals(routingId1, routingTrace.get(0))[ CD ]
Line_7 $$ MessageRoutingBag messageRoutingBag = new MessageRoutingBag(message, synchronizedBridge)-->Line_13 $$ messageRoutingBag.setRoutingDowncast(routingDowncast)[ FD ]
Line_15 $$ try (ObjectOutputStream objectOutputStream = new ObjectOutputStream(unsyncByteArrayOutputStream)) -->Line_16 $$ objectOutputStream.writeObject(messageRoutingBag)[ FD ]
Line_19 $$ ObjectInputStream objectInputStream = new ObjectInputStream(new UnsyncByteArrayInputStream(bytes))-->Line_20 $$ MessageRoutingBag newMessageRoutingBag = (MessageRoutingBag) objectInputStream.readObject()[ FD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_10 $$ String routingId2 = "routingId2"[ CD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_14 $$ UnsyncByteArrayOutputStream unsyncByteArrayOutputStream = new UnsyncByteArrayOutputStream()[ CD ]
Line_10 $$ String routingId2 = "routingId2"-->Line_11 $$ messageRoutingBag.appendRoutingId(routingId2)[ FD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_34 $$ Assert.assertNotNull(newMessage)[ CD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_11 $$ messageRoutingBag.appendRoutingId(routingId2)[ CD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_9 $$ messageRoutingBag.appendRoutingId(routingId1)[ CD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_23 $$ Assert.assertNotNull(newMessageRoutingBag.getMessageData())[ CD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_30 $$ Assert.assertTrue(newMessageRoutingBag.isVisited(routingId2))[ CD ]
Line_12 $$ boolean routingDowncast = true-->Line_24 $$ Assert.assertEquals(routingDowncast, newMessageRoutingBag.isRoutingDowncast())[ FD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_18 $$ byte[] bytes = unsyncByteArrayOutputStream.toByteArray()[ CD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_25 $$ List<String> routingTrace = ReflectionTestUtil.getFieldValue(newMessageRoutingBag, "_routingTrace")[ CD ]
Line_20 $$ MessageRoutingBag newMessageRoutingBag = (MessageRoutingBag) objectInputStream.readObject()-->Line_22 $$ Assert.assertNull(ReflectionTestUtil.getFieldValue(newMessageRoutingBag, "_message"))[ FD ]
Line_25 $$ List<String> routingTrace = ReflectionTestUtil.getFieldValue(newMessageRoutingBag, "_routingTrace")-->Line_26 $$ Assert.assertEquals(2, routingTrace.size())[ FD ]
Line_25 $$ List<String> routingTrace = ReflectionTestUtil.getFieldValue(newMessageRoutingBag, "_routingTrace")-->Line_28 $$ Assert.assertEquals(routingId2, routingTrace.get(1))[ FD ]
Line_20 $$ MessageRoutingBag newMessageRoutingBag = (MessageRoutingBag) objectInputStream.readObject()-->Line_33 $$ Message newMessage = newMessageRoutingBag.getMessage()[ FD ]
Line_4 $$ String destinationName = "destinationName"-->Line_21 $$ Assert.assertEquals(destinationName, newMessageRoutingBag.getDestinationName())[ FD ]
Line_20 $$ MessageRoutingBag newMessageRoutingBag = (MessageRoutingBag) objectInputStream.readObject()-->Line_32 $$ Assert.assertEquals(synchronizedBridge, newMessageRoutingBag.isSynchronizedBridge())[ FD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_36 $$ Assert.assertSame(newMessage, newMessageRoutingBag.getMessage())[ CD ]
Line_10 $$ String routingId2 = "routingId2"-->Line_30 $$ Assert.assertTrue(newMessageRoutingBag.isVisited(routingId2))[ FD ]
Line_3 $$ Message message = new Message()-->Line_5 $$ message.setDestinationName(destinationName)[ FD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_4 $$ String destinationName = "destinationName"[ CD ]
Line_20 $$ MessageRoutingBag newMessageRoutingBag = (MessageRoutingBag) objectInputStream.readObject()-->Line_29 $$ Assert.assertTrue(newMessageRoutingBag.isVisited(routingId1))[ FD ]
Line_20 $$ MessageRoutingBag newMessageRoutingBag = (MessageRoutingBag) objectInputStream.readObject()-->Line_31 $$ Assert.assertFalse(newMessageRoutingBag.isVisited("routingId3"))[ FD ]
Line_33 $$ Message newMessage = newMessageRoutingBag.getMessage()-->Line_34 $$ Assert.assertNotNull(newMessage)[ FD ]
Line_20 $$ MessageRoutingBag newMessageRoutingBag = (MessageRoutingBag) objectInputStream.readObject()-->Line_30 $$ Assert.assertTrue(newMessageRoutingBag.isVisited(routingId2))[ FD ]
Line_20 $$ MessageRoutingBag newMessageRoutingBag = (MessageRoutingBag) objectInputStream.readObject()-->Line_24 $$ Assert.assertEquals(routingDowncast, newMessageRoutingBag.isRoutingDowncast())[ FD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_31 $$ Assert.assertFalse(newMessageRoutingBag.isVisited("routingId3"))[ CD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_12 $$ boolean routingDowncast = true[ CD ]
Line_20 $$ MessageRoutingBag newMessageRoutingBag = (MessageRoutingBag) objectInputStream.readObject()-->Line_21 $$ Assert.assertEquals(destinationName, newMessageRoutingBag.getDestinationName())[ FD ]
Line_8 $$ String routingId1 = "routingId1"-->Line_29 $$ Assert.assertTrue(newMessageRoutingBag.isVisited(routingId1))[ FD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_6 $$ boolean synchronizedBridge = true[ CD ]
Line_4 $$ String destinationName = "destinationName"-->Line_5 $$ message.setDestinationName(destinationName)[ FD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_28 $$ Assert.assertEquals(routingId2, routingTrace.get(1))[ CD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_19 $$ ObjectInputStream objectInputStream = new ObjectInputStream(new UnsyncByteArrayInputStream(bytes))[ CD ]
Line_8 $$ String routingId1 = "routingId1"-->Line_9 $$ messageRoutingBag.appendRoutingId(routingId1)[ FD ]
Line_7 $$ MessageRoutingBag messageRoutingBag = new MessageRoutingBag(message, synchronizedBridge)-->Line_9 $$ messageRoutingBag.appendRoutingId(routingId1)[ FD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_24 $$ Assert.assertEquals(routingDowncast, newMessageRoutingBag.isRoutingDowncast())[ CD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_26 $$ Assert.assertEquals(2, routingTrace.size())[ CD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_13 $$ messageRoutingBag.setRoutingDowncast(routingDowncast)[ CD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_22 $$ Assert.assertNull(ReflectionTestUtil.getFieldValue(newMessageRoutingBag, "_message"))[ CD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_8 $$ String routingId1 = "routingId1"[ CD ]
Line_8 $$ String routingId1 = "routingId1"-->Line_27 $$ Assert.assertEquals(routingId1, routingTrace.get(0))[ FD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_5 $$ message.setDestinationName(destinationName)[ CD ]
Line_6 $$ boolean synchronizedBridge = true-->Line_32 $$ Assert.assertEquals(synchronizedBridge, newMessageRoutingBag.isSynchronizedBridge())[ FD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_3 $$ Message message = new Message()[ CD ]
Line_12 $$ boolean routingDowncast = true-->Line_13 $$ messageRoutingBag.setRoutingDowncast(routingDowncast)[ FD ]
Line_7 $$ MessageRoutingBag messageRoutingBag = new MessageRoutingBag(message, synchronizedBridge)-->Line_11 $$ messageRoutingBag.appendRoutingId(routingId2)[ FD ]
Line_2 $$ public void testAutomaticSerialization() throws Exception -->Line_33 $$ Message newMessage = newMessageRoutingBag.getMessage()[ CD ]
