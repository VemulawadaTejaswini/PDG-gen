Line_2 $$ public String getLineContents(final int number) -->Line_7 $$ while (((myLinesStartOffsets.size() - 1) < (number + 1)) && (!myLineEndsFinished) && mySplittingIterator.hasNext()) [ CD ]
Line_4 $$ if (myLineEndsFinished || (myLinesStartOffsets.size() > (number + 1))) -->Line_5 $$ return extractCalculated(number)[ CD ]
Line_2 $$ public String getLineContents(final int number) -->Line_5 $$ return extractCalculated(number)[ FD ]
Line_7 $$ while (((myLinesStartOffsets.size() - 1) < (number + 1)) && (!myLineEndsFinished) && mySplittingIterator.hasNext()) -->Line_8 $$ final Integer nextStart = mySplittingIterator.next()[ CD ]
Line_7 $$ while (((myLinesStartOffsets.size() - 1) < (number + 1)) && (!myLineEndsFinished) && mySplittingIterator.hasNext()) -->Line_9 $$ myLinesStartOffsets.add(nextStart)[ CD ]
Line_2 $$ public String getLineContents(final int number) -->Line_4 $$ if (myLineEndsFinished || (myLinesStartOffsets.size() > (number + 1))) [ CD ]
Line_8 $$ final Integer nextStart = mySplittingIterator.next()-->Line_9 $$ myLinesStartOffsets.add(nextStart)[ FD ]
Line_2 $$ public String getLineContents(final int number) -->Line_12 $$ return extractCalculated(number)[ CD ]
Line_2 $$ public String getLineContents(final int number) -->Line_12 $$ return extractCalculated(number)[ FD ]
