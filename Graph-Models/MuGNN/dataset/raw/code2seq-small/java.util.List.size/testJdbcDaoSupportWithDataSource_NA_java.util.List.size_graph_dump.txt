Line_6 $$ JdbcDaoSupport dao = new JdbcDaoSupport() -->Line_13 $$ dao.setDataSource(ds)[ FD ]
Line_5 $$ final List<String> test = new ArrayList<String>()-->Line_17 $$ assertEquals("initDao called", test.size(), 1)[ FD ]
Line_5 $$ final List<String> test = new ArrayList<String>()-->Line_10 $$ test.add("test")[ FD ]
Line_6 $$ JdbcDaoSupport dao = new JdbcDaoSupport() -->Line_15 $$ assertEquals("Correct DataSource", ds, dao.getDataSource())[ FD ]
Line_6 $$ JdbcDaoSupport dao = new JdbcDaoSupport() -->Line_14 $$ dao.afterPropertiesSet()[ FD ]
Line_6 $$ JdbcDaoSupport dao = new JdbcDaoSupport() -->Line_10 $$ test.add("test")[ CD ]
Line_4 $$ DataSource ds = mock(DataSource.class)-->Line_16 $$ assertEquals("Correct JdbcTemplate", ds, dao.getJdbcTemplate().getDataSource())[ FD ]
Line_4 $$ DataSource ds = mock(DataSource.class)-->Line_15 $$ assertEquals("Correct DataSource", ds, dao.getDataSource())[ FD ]
Line_6 $$ JdbcDaoSupport dao = new JdbcDaoSupport() -->Line_16 $$ assertEquals("Correct JdbcTemplate", ds, dao.getJdbcTemplate().getDataSource())[ FD ]
Line_4 $$ DataSource ds = mock(DataSource.class)-->Line_13 $$ dao.setDataSource(ds)[ FD ]
