Line_2 $$ public void testRevisionsPropertyEqQuery() -->Line_5 $$ Assert.assertEquals(new StrIntTestEntity("a", 10, id1), ((Object[]) revs_id1.get(0))[0])[ CD ]
Line_2 $$ public void testRevisionsPropertyEqQuery() -->Line_6 $$ Assert.assertEquals(new StrIntTestEntity("a", 10, id1), ((Object[]) revs_id1.get(1))[0])[ CD ]
Line_3 $$ List revs_id1 = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, false, true).add(AuditEntity.id().eq(id1)).getResultList()-->Line_4 $$ Assert.assertEquals(2, revs_id1.size())[ FD ]
Line_2 $$ public void testRevisionsPropertyEqQuery() -->Line_4 $$ Assert.assertEquals(2, revs_id1.size())[ CD ]
Line_3 $$ List revs_id1 = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, false, true).add(AuditEntity.id().eq(id1)).getResultList()-->Line_6 $$ Assert.assertEquals(new StrIntTestEntity("a", 10, id1), ((Object[]) revs_id1.get(1))[0])[ FD ]
Line_3 $$ List revs_id1 = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, false, true).add(AuditEntity.id().eq(id1)).getResultList()-->Line_5 $$ Assert.assertEquals(new StrIntTestEntity("a", 10, id1), ((Object[]) revs_id1.get(0))[0])[ FD ]
Line_2 $$ public void testRevisionsPropertyEqQuery() -->Line_3 $$ List revs_id1 = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, false, true).add(AuditEntity.id().eq(id1)).getResultList()[ CD ]
