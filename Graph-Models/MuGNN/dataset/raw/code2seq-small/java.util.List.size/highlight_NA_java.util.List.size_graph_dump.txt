Line_6 $$ FetchSubPhase.HitContext hitContext = highlighterContext.hitContext-->Line_11 $$ hitContext.cache().put(CACHE_KEY, mappers)[ FD ]
Line_19 $$ Fragmenter fragmenter-->Line_33 $$ entry.setTextFragmenter(fragmenter)[ FD ]
Line_9 $$ if (!hitContext.cache().containsKey(CACHE_KEY)) -->Line_11 $$ hitContext.cache().put(CACHE_KEY, mappers)[ CD ]
Line_40 $$ ArrayList<TextFragment> fragsList = new ArrayList()-->Line_55 $$ fragsList.add(bestTextFragment)[ FD ]
Line_40 $$ ArrayList<TextFragment> fragsList = new ArrayList()-->Line_83 $$ for (int i = 0; i < fragsList.size(); i++) [ FD ]
Line_7 $$ FieldMapper mapper = highlighterContext.mapper-->Line_17 $$ QueryScorer queryScorer = new CustomQueryScorer(highlighterContext.query, field.fieldOptions().requireFieldMatch() ? mapper.fieldType().name() : null)[ FD ]
Line_90 $$ for (int i = 0; i < fragments.length; i++) -->Line_91 $$ fragments[i] = fragsList.get(i).toString()[ CD ]
Line_46 $$ String text = textToHighlight.toString()-->Line_47 $$ try (TokenStream tokenStream = analyzer.tokenStream(mapper.fieldType().name(), text)) [ FD ]
Line_21 $$ fragmenter = new NullFragmenter()-->Line_27 $$ fragmenter = new SimpleSpanFragmenter(queryScorer, field.fieldOptions().fragmentCharSize())[ FD ]
Line_83 $$ for (int i = 0; i < fragsList.size(); i++) -->Line_84 $$ fragments[i] = fragsList.get(i).toString()[ FD ]
Line_7 $$ FieldMapper mapper = highlighterContext.mapper-->Line_15 $$ org.apache.lucene.search.highlight.Highlighter entry = cache.get(mapper)[ FD ]
Line_16 $$ if (entry == null) -->Line_32 $$ entry = new org.apache.lucene.search.highlight.Highlighter(formatter, encoder, queryScorer)[ CD ]
Line_40 $$ ArrayList<TextFragment> fragsList = new ArrayList()-->Line_82 $$ fragments = new String[fragsList.size()][ FD ]
Line_21 $$ fragmenter = new NullFragmenter()-->Line_23 $$ fragmenter = new SimpleSpanFragmenter(queryScorer, field.fieldOptions().fragmentCharSize())[ FD ]
Line_4 $$ SearchContextHighlight.Field field = highlighterContext.field-->Line_20 $$ if (field.fieldOptions().numberOfFragments() == 0) [ FD ]
Line_15 $$ org.apache.lucene.search.highlight.Highlighter entry = cache.get(mapper)-->Line_32 $$ entry = new org.apache.lucene.search.highlight.Highlighter(formatter, encoder, queryScorer)[ FD ]
Line_61 $$ if (ExceptionsHelper.unwrap(e, BytesRefHash.MaxBytesLengthExceededException.class) != null) -->Line_65 $$ return null[ CD ]
Line_19 $$ Fragmenter fragmenter-->Line_25 $$ fragmenter = new SimpleFragmenter(field.fieldOptions().fragmentCharSize())[ FD ]
Line_16 $$ if (entry == null) -->Line_33 $$ entry.setTextFragmenter(fragmenter)[ CD ]
Line_4 $$ SearchContextHighlight.Field field = highlighterContext.field-->Line_26 $$ if ("span".equals(field.fieldOptions().fragmenter())) [ FD ]
Line_71 $$ CollectionUtil.introSort(fragsList, new Comparator<TextFragment>() -->Line_75 $$ return Math.round(o2.getScore() - o1.getScore())[ CD ]
Line_54 $$ if (bestTextFragment != null && bestTextFragment.getScore() > 0) -->Line_55 $$ fragsList.add(bestTextFragment)[ CD ]
Line_23 $$ fragmenter = new SimpleSpanFragmenter(queryScorer, field.fieldOptions().fragmentCharSize())-->Line_25 $$ fragmenter = new SimpleFragmenter(field.fieldOptions().fragmentCharSize())[ FD ]
Line_22 $$ if (field.fieldOptions().fragmenter() == null) -->Line_24 $$ if ("simple".equals(field.fieldOptions().fragmenter())) [ CD ]
Line_16 $$ if (entry == null) -->Line_36 $$ cache.put(mapper, entry)[ CD ]
Line_7 $$ FieldMapper mapper = highlighterContext.mapper-->Line_36 $$ cache.put(mapper, entry)[ FD ]
Line_42 $$ Analyzer analyzer = context.mapperService().documentMapper(hitContext.hit().type()).mappers().indexAnalyzer()-->Line_47 $$ try (TokenStream tokenStream = analyzer.tokenStream(mapper.fieldType().name(), text)) [ FD ]
Line_83 $$ for (int i = 0; i < fragsList.size(); i++) -->Line_90 $$ for (int i = 0; i < fragments.length; i++) [ FD ]
Line_6 $$ FetchSubPhase.HitContext hitContext = highlighterContext.hitContext-->Line_44 $$ textsToHighlight = HighlightUtils.loadFieldValues(field, mapper, context, hitContext)[ FD ]
Line_90 $$ for (int i = 0; i < fragments.length; i++) -->Line_91 $$ fragments[i] = fragsList.get(i).toString()[ FD ]
Line_7 $$ FieldMapper mapper = highlighterContext.mapper-->Line_44 $$ textsToHighlight = HighlightUtils.loadFieldValues(field, mapper, context, hitContext)[ FD ]
Line_4 $$ SearchContextHighlight.Field field = highlighterContext.field-->Line_29 $$ throw new IllegalArgumentException("unknown fragmenter option [" + field.fieldOptions().fragmenter() + "] for the field [" + highlighterContext.fieldName + "]")[ FD ]
Line_4 $$ SearchContextHighlight.Field field = highlighterContext.field-->Line_31 $$ Formatter formatter = new SimpleHTMLFormatter(field.fieldOptions().preTags()[0], field.fieldOptions().postTags()[0])[ FD ]
Line_40 $$ ArrayList<TextFragment> fragsList = new ArrayList()-->Line_91 $$ fragments[i] = fragsList.get(i).toString()[ FD ]
Line_40 $$ ArrayList<TextFragment> fragsList = new ArrayList()-->Line_71 $$ CollectionUtil.introSort(fragsList, new Comparator<TextFragment>() [ FD ]
Line_47 $$ try (TokenStream tokenStream = analyzer.tokenStream(mapper.fieldType().name(), text)) -->Line_48 $$ if (!tokenStream.hasAttribute(CharTermAttribute.class) || !tokenStream.hasAttribute(OffsetAttribute.class)) [ FD ]
Line_24 $$ if ("simple".equals(field.fieldOptions().fragmenter())) -->Line_25 $$ fragmenter = new SimpleFragmenter(field.fieldOptions().fragmentCharSize())[ CD ]
Line_4 $$ SearchContextHighlight.Field field = highlighterContext.field-->Line_24 $$ if ("simple".equals(field.fieldOptions().fragmenter())) [ FD ]
Line_16 $$ if (entry == null) -->Line_31 $$ Formatter formatter = new SimpleHTMLFormatter(field.fieldOptions().preTags()[0], field.fieldOptions().postTags()[0])[ CD ]
Line_5 $$ SearchContext context = highlighterContext.context-->Line_44 $$ textsToHighlight = HighlightUtils.loadFieldValues(field, mapper, context, hitContext)[ FD ]
Line_26 $$ if ("span".equals(field.fieldOptions().fragmenter())) -->Line_27 $$ fragmenter = new SimpleSpanFragmenter(queryScorer, field.fieldOptions().fragmentCharSize())[ CD ]
Line_10 $$ Map<FieldMapper, org.apache.lucene.search.highlight.Highlighter> mappers = new HashMap()-->Line_11 $$ hitContext.cache().put(CACHE_KEY, mappers)[ FD ]
Line_5 $$ SearchContext context = highlighterContext.context-->Line_42 $$ Analyzer analyzer = context.mapperService().documentMapper(hitContext.hit().type()).mappers().indexAnalyzer()[ FD ]
Line_47 $$ try (TokenStream tokenStream = analyzer.tokenStream(mapper.fieldType().name(), text)) -->Line_52 $$ TextFragment[] bestTextFragments = entry.getBestTextFragments(tokenStream, text, false, numberOfFragments)[ FD ]
Line_41 $$ List<Object> textsToHighlight-->Line_98 $$ if (noMatchSize > 0 && textsToHighlight.size() > 0) [ FD ]
Line_4 $$ SearchContextHighlight.Field field = highlighterContext.field-->Line_23 $$ fragmenter = new SimpleSpanFragmenter(queryScorer, field.fieldOptions().fragmentCharSize())[ FD ]
Line_21 $$ fragmenter = new NullFragmenter()-->Line_33 $$ entry.setTextFragmenter(fragmenter)[ FD ]
Line_15 $$ org.apache.lucene.search.highlight.Highlighter entry = cache.get(mapper)-->Line_33 $$ entry.setTextFragmenter(fragmenter)[ FD ]
Line_32 $$ entry = new org.apache.lucene.search.highlight.Highlighter(formatter, encoder, queryScorer)-->Line_36 $$ cache.put(mapper, entry)[ FD ]
Line_83 $$ for (int i = 0; i < fragsList.size(); i++) -->Line_91 $$ fragments[i] = fragsList.get(i).toString()[ FD ]
Line_42 $$ Analyzer analyzer = context.mapperService().documentMapper(hitContext.hit().type()).mappers().indexAnalyzer()-->Line_103 $$ end = findGoodEndForNoHighlightExcerpt(noMatchSize, analyzer, mapper.fieldType().name(), fieldContents)[ FD ]
Line_4 $$ SearchContextHighlight.Field field = highlighterContext.field-->Line_17 $$ QueryScorer queryScorer = new CustomQueryScorer(highlighterContext.query, field.fieldOptions().requireFieldMatch() ? mapper.fieldType().name() : null)[ FD ]
Line_23 $$ fragmenter = new SimpleSpanFragmenter(queryScorer, field.fieldOptions().fragmentCharSize())-->Line_27 $$ fragmenter = new SimpleSpanFragmenter(queryScorer, field.fieldOptions().fragmentCharSize())[ FD ]
Line_19 $$ Fragmenter fragmenter-->Line_27 $$ fragmenter = new SimpleSpanFragmenter(queryScorer, field.fieldOptions().fragmentCharSize())[ FD ]
Line_15 $$ org.apache.lucene.search.highlight.Highlighter entry = cache.get(mapper)-->Line_52 $$ TextFragment[] bestTextFragments = entry.getBestTextFragments(tokenStream, text, false, numberOfFragments)[ FD ]
Line_16 $$ if (entry == null) -->Line_17 $$ QueryScorer queryScorer = new CustomQueryScorer(highlighterContext.query, field.fieldOptions().requireFieldMatch() ? mapper.fieldType().name() : null)[ CD ]
Line_46 $$ String text = textToHighlight.toString()-->Line_52 $$ TextFragment[] bestTextFragments = entry.getBestTextFragments(tokenStream, text, false, numberOfFragments)[ FD ]
Line_4 $$ SearchContextHighlight.Field field = highlighterContext.field-->Line_22 $$ if (field.fieldOptions().fragmenter() == null) [ FD ]
Line_44 $$ textsToHighlight = HighlightUtils.loadFieldValues(field, mapper, context, hitContext)-->Line_98 $$ if (noMatchSize > 0 && textsToHighlight.size() > 0) [ FD ]
Line_4 $$ SearchContextHighlight.Field field = highlighterContext.field-->Line_25 $$ fragmenter = new SimpleFragmenter(field.fieldOptions().fragmentCharSize())[ FD ]
Line_107 $$ if (end > 0) -->Line_108 $$ return new HighlightField(highlighterContext.fieldName, new Text[] [ CD ]
Line_32 $$ entry = new org.apache.lucene.search.highlight.Highlighter(formatter, encoder, queryScorer)-->Line_33 $$ entry.setTextFragmenter(fragmenter)[ FD ]
Line_19 $$ Fragmenter fragmenter-->Line_21 $$ fragmenter = new NullFragmenter()[ FD ]
Line_53 $$ for (TextFragment bestTextFragment : bestTextFragments) -->Line_54 $$ if (bestTextFragment != null && bestTextFragment.getScore() > 0) [ FD ]
Line_9 $$ if (!hitContext.cache().containsKey(CACHE_KEY)) -->Line_10 $$ Map<FieldMapper, org.apache.lucene.search.highlight.Highlighter> mappers = new HashMap()[ CD ]
Line_15 $$ org.apache.lucene.search.highlight.Highlighter entry = cache.get(mapper)-->Line_36 $$ cache.put(mapper, entry)[ FD ]
Line_16 $$ if (entry == null) -->Line_19 $$ Fragmenter fragmenter[ CD ]
Line_19 $$ Fragmenter fragmenter-->Line_23 $$ fragmenter = new SimpleSpanFragmenter(queryScorer, field.fieldOptions().fragmentCharSize())[ FD ]
Line_32 $$ entry = new org.apache.lucene.search.highlight.Highlighter(formatter, encoder, queryScorer)-->Line_52 $$ TextFragment[] bestTextFragments = entry.getBestTextFragments(tokenStream, text, false, numberOfFragments)[ FD ]
Line_22 $$ if (field.fieldOptions().fragmenter() == null) -->Line_23 $$ fragmenter = new SimpleSpanFragmenter(queryScorer, field.fieldOptions().fragmentCharSize())[ CD ]
Line_4 $$ SearchContextHighlight.Field field = highlighterContext.field-->Line_27 $$ fragmenter = new SimpleSpanFragmenter(queryScorer, field.fieldOptions().fragmentCharSize())[ FD ]
Line_45 $$ for (Object textToHighlight : textsToHighlight) -->Line_46 $$ String text = textToHighlight.toString()[ FD ]
Line_71 $$ CollectionUtil.introSort(fragsList, new Comparator<TextFragment>() -->Line_75 $$ return Math.round(o2.getScore() - o1.getScore())[ FD ]
Line_16 $$ if (entry == null) -->Line_18 $$ queryScorer.setExpandMultiTermQuery(true)[ CD ]
Line_7 $$ FieldMapper mapper = highlighterContext.mapper-->Line_103 $$ end = findGoodEndForNoHighlightExcerpt(noMatchSize, analyzer, mapper.fieldType().name(), fieldContents)[ FD ]
Line_6 $$ FetchSubPhase.HitContext hitContext = highlighterContext.hitContext-->Line_42 $$ Analyzer analyzer = context.mapperService().documentMapper(hitContext.hit().type()).mappers().indexAnalyzer()[ FD ]
Line_4 $$ SearchContextHighlight.Field field = highlighterContext.field-->Line_44 $$ textsToHighlight = HighlightUtils.loadFieldValues(field, mapper, context, hitContext)[ FD ]
Line_40 $$ ArrayList<TextFragment> fragsList = new ArrayList()-->Line_84 $$ fragments[i] = fragsList.get(i).toString()[ FD ]
Line_70 $$ if (field.fieldOptions().scoreOrdered()) -->Line_71 $$ CollectionUtil.introSort(fragsList, new Comparator<TextFragment>() [ CD ]
Line_4 $$ SearchContextHighlight.Field field = highlighterContext.field-->Line_8 $$ Encoder encoder = field.fieldOptions().encoder().equals("html") ? HighlightUtils.Encoders.HTML : HighlightUtils.Encoders.DEFAULT[ FD ]
Line_41 $$ List<Object> textsToHighlight-->Line_44 $$ textsToHighlight = HighlightUtils.loadFieldValues(field, mapper, context, hitContext)[ FD ]
Line_83 $$ for (int i = 0; i < fragsList.size(); i++) -->Line_84 $$ fragments[i] = fragsList.get(i).toString()[ CD ]
Line_25 $$ fragmenter = new SimpleFragmenter(field.fieldOptions().fragmentCharSize())-->Line_27 $$ fragmenter = new SimpleSpanFragmenter(queryScorer, field.fieldOptions().fragmentCharSize())[ FD ]
Line_98 $$ if (noMatchSize > 0 && textsToHighlight.size() > 0) -->Line_107 $$ if (end > 0) [ CD ]
Line_17 $$ QueryScorer queryScorer = new CustomQueryScorer(highlighterContext.query, field.fieldOptions().requireFieldMatch() ? mapper.fieldType().name() : null)-->Line_18 $$ queryScorer.setExpandMultiTermQuery(true)[ FD ]
Line_15 $$ org.apache.lucene.search.highlight.Highlighter entry = cache.get(mapper)-->Line_16 $$ if (entry == null) [ FD ]
Line_53 $$ for (TextFragment bestTextFragment : bestTextFragments) -->Line_55 $$ fragsList.add(bestTextFragment)[ FD ]
Line_27 $$ fragmenter = new SimpleSpanFragmenter(queryScorer, field.fieldOptions().fragmentCharSize())-->Line_33 $$ entry.setTextFragmenter(fragmenter)[ FD ]
Line_20 $$ if (field.fieldOptions().numberOfFragments() == 0) -->Line_21 $$ fragmenter = new NullFragmenter()[ CD ]
Line_20 $$ if (field.fieldOptions().numberOfFragments() == 0) -->Line_22 $$ if (field.fieldOptions().fragmenter() == null) [ CD ]
Line_7 $$ FieldMapper mapper = highlighterContext.mapper-->Line_47 $$ try (TokenStream tokenStream = analyzer.tokenStream(mapper.fieldType().name(), text)) [ FD ]
Line_4 $$ SearchContextHighlight.Field field = highlighterContext.field-->Line_70 $$ if (field.fieldOptions().scoreOrdered()) [ FD ]
Line_25 $$ fragmenter = new SimpleFragmenter(field.fieldOptions().fragmentCharSize())-->Line_33 $$ entry.setTextFragmenter(fragmenter)[ FD ]
Line_23 $$ fragmenter = new SimpleSpanFragmenter(queryScorer, field.fieldOptions().fragmentCharSize())-->Line_33 $$ entry.setTextFragmenter(fragmenter)[ FD ]
Line_16 $$ if (entry == null) -->Line_20 $$ if (field.fieldOptions().numberOfFragments() == 0) [ CD ]
Line_6 $$ FetchSubPhase.HitContext hitContext = highlighterContext.hitContext-->Line_9 $$ if (!hitContext.cache().containsKey(CACHE_KEY)) [ FD ]
Line_94 $$ if (fragments.length > 0) -->Line_95 $$ return new HighlightField(highlighterContext.fieldName, Text.convertFromStringArray(fragments))[ CD ]
Line_21 $$ fragmenter = new NullFragmenter()-->Line_25 $$ fragmenter = new SimpleFragmenter(field.fieldOptions().fragmentCharSize())[ FD ]
Line_24 $$ if ("simple".equals(field.fieldOptions().fragmenter())) -->Line_26 $$ if ("span".equals(field.fieldOptions().fragmenter())) [ CD ]
