Line_5 $$ List<Module> result = _persistence.findWithDynamicQuery(dynamicQuery)-->Line_6 $$ Assert.assertEquals(0, result.size())[ FD ]
Line_3 $$ DynamicQuery dynamicQuery = DynamicQueryFactoryUtil.forClass(Module.class, _dynamicQueryClassLoader)-->Line_5 $$ List<Module> result = _persistence.findWithDynamicQuery(dynamicQuery)[ FD ]
Line_2 $$ public void testDynamicQueryByPrimaryKeyMissing() throws Exception -->Line_6 $$ Assert.assertEquals(0, result.size())[ CD ]
Line_2 $$ public void testDynamicQueryByPrimaryKeyMissing() throws Exception -->Line_3 $$ DynamicQuery dynamicQuery = DynamicQueryFactoryUtil.forClass(Module.class, _dynamicQueryClassLoader)[ CD ]
Line_3 $$ DynamicQuery dynamicQuery = DynamicQueryFactoryUtil.forClass(Module.class, _dynamicQueryClassLoader)-->Line_4 $$ dynamicQuery.add(RestrictionsFactoryUtil.eq("moduleId", RandomTestUtil.nextLong()))[ FD ]
Line_2 $$ public void testDynamicQueryByPrimaryKeyMissing() throws Exception -->Line_4 $$ dynamicQuery.add(RestrictionsFactoryUtil.eq("moduleId", RandomTestUtil.nextLong()))[ CD ]
Line_2 $$ public void testDynamicQueryByPrimaryKeyMissing() throws Exception -->Line_5 $$ List<Module> result = _persistence.findWithDynamicQuery(dynamicQuery)[ CD ]
