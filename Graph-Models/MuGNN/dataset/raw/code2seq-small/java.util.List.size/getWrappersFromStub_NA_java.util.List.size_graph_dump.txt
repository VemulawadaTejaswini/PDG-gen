Line_9 $$ final PyTargetExpressionStub targetExpressionStub = (PyTargetExpressionStub) nextStub-->Line_10 $$ if (targetExpressionStub.getInitializerType() == PyTargetExpressionStub.InitializerType.CallExpression) [ FD ]
Line_10 $$ if (targetExpressionStub.getInitializerType() == PyTargetExpressionStub.InitializerType.CallExpression) -->Line_12 $$ if (QualifiedName.fromComponents(PyNames.CLASSMETHOD).equals(qualifiedName)) [ CD ]
Line_3 $$ final StubElement parentStub = getStub().getParentStub()-->Line_4 $$ final List childrenStubs = parentStub.getChildrenStubs()[ FD ]
Line_2 $$ private Modifier getWrappersFromStub() -->Line_3 $$ final StubElement parentStub = getStub().getParentStub()[ CD ]
Line_11 $$ final QualifiedName qualifiedName = targetExpressionStub.getInitializer()-->Line_15 $$ if (QualifiedName.fromComponents(PyNames.STATICMETHOD).equals(qualifiedName)) [ FD ]
Line_9 $$ final PyTargetExpressionStub targetExpressionStub = (PyTargetExpressionStub) nextStub-->Line_11 $$ final QualifiedName qualifiedName = targetExpressionStub.getInitializer()[ FD ]
Line_8 $$ if (nextStub instanceof PyTargetExpressionStub) -->Line_10 $$ if (targetExpressionStub.getInitializerType() == PyTargetExpressionStub.InitializerType.CallExpression) [ CD ]
Line_4 $$ final List childrenStubs = parentStub.getChildrenStubs()-->Line_6 $$ if (index >= 0 && index < childrenStubs.size() - 1) [ FD ]
Line_6 $$ if (index >= 0 && index < childrenStubs.size() - 1) -->Line_8 $$ if (nextStub instanceof PyTargetExpressionStub) [ CD ]
Line_6 $$ if (index >= 0 && index < childrenStubs.size() - 1) -->Line_7 $$ StubElement nextStub = (StubElement) childrenStubs.get(index + 1)[ CD ]
Line_4 $$ final List childrenStubs = parentStub.getChildrenStubs()-->Line_5 $$ int index = childrenStubs.indexOf(getStub())[ FD ]
Line_7 $$ StubElement nextStub = (StubElement) childrenStubs.get(index + 1)-->Line_8 $$ if (nextStub instanceof PyTargetExpressionStub) [ FD ]
Line_2 $$ private Modifier getWrappersFromStub() -->Line_4 $$ final List childrenStubs = parentStub.getChildrenStubs()[ CD ]
Line_2 $$ private Modifier getWrappersFromStub() -->Line_5 $$ int index = childrenStubs.indexOf(getStub())[ CD ]
Line_2 $$ private Modifier getWrappersFromStub() -->Line_21 $$ return null[ CD ]
Line_2 $$ private Modifier getWrappersFromStub() -->Line_6 $$ if (index >= 0 && index < childrenStubs.size() - 1) [ CD ]
Line_8 $$ if (nextStub instanceof PyTargetExpressionStub) -->Line_9 $$ final PyTargetExpressionStub targetExpressionStub = (PyTargetExpressionStub) nextStub[ CD ]
Line_10 $$ if (targetExpressionStub.getInitializerType() == PyTargetExpressionStub.InitializerType.CallExpression) -->Line_15 $$ if (QualifiedName.fromComponents(PyNames.STATICMETHOD).equals(qualifiedName)) [ CD ]
Line_4 $$ final List childrenStubs = parentStub.getChildrenStubs()-->Line_7 $$ StubElement nextStub = (StubElement) childrenStubs.get(index + 1)[ FD ]
Line_10 $$ if (targetExpressionStub.getInitializerType() == PyTargetExpressionStub.InitializerType.CallExpression) -->Line_11 $$ final QualifiedName qualifiedName = targetExpressionStub.getInitializer()[ CD ]
Line_11 $$ final QualifiedName qualifiedName = targetExpressionStub.getInitializer()-->Line_12 $$ if (QualifiedName.fromComponents(PyNames.CLASSMETHOD).equals(qualifiedName)) [ FD ]
Line_15 $$ if (QualifiedName.fromComponents(PyNames.STATICMETHOD).equals(qualifiedName)) -->Line_16 $$ return STATICMETHOD[ CD ]
Line_12 $$ if (QualifiedName.fromComponents(PyNames.CLASSMETHOD).equals(qualifiedName)) -->Line_13 $$ return CLASSMETHOD[ CD ]
