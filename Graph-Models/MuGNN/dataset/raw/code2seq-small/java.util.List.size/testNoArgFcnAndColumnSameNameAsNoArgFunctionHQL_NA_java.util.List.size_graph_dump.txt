Line_8 $$ Session s = openSession()-->Line_22 $$ s = openSession()[ FD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_8 $$ Session s = openSession()[ CD ]
Line_10 $$ EntityWithNoArgFunctionAsColumn e1 = new EntityWithNoArgFunctionAsColumn()-->Line_11 $$ e1.setCurrentDate("blah blah blah")[ FD ]
Line_16 $$ EntityWithFunctionAsColumnHolder holder2 = new EntityWithFunctionAsColumnHolder()-->Line_18 $$ holder1.setNextHolder(holder2)[ FD ]
Line_24 $$ List results = s.createQuery("select str(current_date), currentDate from EntityWithNoArgFunctionAsColumn").list()-->Line_28 $$ assertTrue(!((Object[]) results.get(1))[0].equals(((Object[]) results.get(1))[1]))[ FD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_26 $$ assertEquals(((Object[]) results.get(0))[0], ((Object[]) results.get(1))[0])[ CD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_19 $$ s.save(holder1)[ CD ]
Line_10 $$ EntityWithNoArgFunctionAsColumn e1 = new EntityWithNoArgFunctionAsColumn()-->Line_15 $$ holder1.getEntityWithNoArgFunctionAsColumns().add(e1)[ FD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_10 $$ EntityWithNoArgFunctionAsColumn e1 = new EntityWithNoArgFunctionAsColumn()[ CD ]
Line_12 $$ EntityWithNoArgFunctionAsColumn e2 = new EntityWithNoArgFunctionAsColumn()-->Line_30 $$ assertTrue(((Object[]) results.get(1))[1].equals(e1.getCurrentDate()) || ((Object[]) results.get(1))[1].equals(e2.getCurrentDate()))[ FD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_21 $$ s.close()[ CD ]
Line_8 $$ Session s = openSession()-->Line_19 $$ s.save(holder1)[ FD ]
Line_14 $$ EntityWithFunctionAsColumnHolder holder1 = new EntityWithFunctionAsColumnHolder()-->Line_19 $$ s.save(holder1)[ FD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_24 $$ List results = s.createQuery("select str(current_date), currentDate from EntityWithNoArgFunctionAsColumn").list()[ CD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_28 $$ assertTrue(!((Object[]) results.get(1))[0].equals(((Object[]) results.get(1))[1]))[ CD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_11 $$ e1.setCurrentDate("blah blah blah")[ CD ]
Line_24 $$ List results = s.createQuery("select str(current_date), currentDate from EntityWithNoArgFunctionAsColumn").list()-->Line_29 $$ assertTrue(((Object[]) results.get(0))[1].equals(e1.getCurrentDate()) || ((Object[]) results.get(0))[1].equals(e2.getCurrentDate()))[ FD ]
Line_22 $$ s = openSession()-->Line_33 $$ s.close()[ FD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_34 $$ cleanup()[ CD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_23 $$ t = s.beginTransaction()[ CD ]
Line_8 $$ Session s = openSession()-->Line_23 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_3 $$ SQLFunction function = sessionFactory().getSqlFunctionRegistry().findSQLFunction("current_date")[ CD ]
Line_12 $$ EntityWithNoArgFunctionAsColumn e2 = new EntityWithNoArgFunctionAsColumn()-->Line_13 $$ e2.setCurrentDate("yadda yadda yadda")[ FD ]
Line_10 $$ EntityWithNoArgFunctionAsColumn e1 = new EntityWithNoArgFunctionAsColumn()-->Line_29 $$ assertTrue(((Object[]) results.get(0))[1].equals(e1.getCurrentDate()) || ((Object[]) results.get(0))[1].equals(e2.getCurrentDate()))[ FD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_33 $$ s.close()[ CD ]
Line_9 $$ Transaction t = s.beginTransaction()-->Line_32 $$ t.commit()[ FD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_9 $$ Transaction t = s.beginTransaction()[ CD ]
Line_8 $$ Session s = openSession()-->Line_24 $$ List results = s.createQuery("select str(current_date), currentDate from EntityWithNoArgFunctionAsColumn").list()[ FD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_27 $$ assertTrue(!((Object[]) results.get(0))[0].equals(((Object[]) results.get(0))[1]))[ CD ]
Line_14 $$ EntityWithFunctionAsColumnHolder holder1 = new EntityWithFunctionAsColumnHolder()-->Line_18 $$ holder1.setNextHolder(holder2)[ FD ]
Line_8 $$ Session s = openSession()-->Line_33 $$ s.close()[ FD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_31 $$ assertFalse(((Object[]) results.get(0))[1].equals(((Object[]) results.get(1))[1]))[ CD ]
Line_23 $$ t = s.beginTransaction()-->Line_32 $$ t.commit()[ FD ]
Line_12 $$ EntityWithNoArgFunctionAsColumn e2 = new EntityWithNoArgFunctionAsColumn()-->Line_29 $$ assertTrue(((Object[]) results.get(0))[1].equals(e1.getCurrentDate()) || ((Object[]) results.get(0))[1].equals(e2.getCurrentDate()))[ FD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_18 $$ holder1.setNextHolder(holder2)[ CD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_20 $$ t.commit()[ CD ]
Line_24 $$ List results = s.createQuery("select str(current_date), currentDate from EntityWithNoArgFunctionAsColumn").list()-->Line_25 $$ assertEquals(2, results.size())[ FD ]
Line_24 $$ List results = s.createQuery("select str(current_date), currentDate from EntityWithNoArgFunctionAsColumn").list()-->Line_26 $$ assertEquals(((Object[]) results.get(0))[0], ((Object[]) results.get(1))[0])[ FD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_30 $$ assertTrue(((Object[]) results.get(1))[1].equals(e1.getCurrentDate()) || ((Object[]) results.get(1))[1].equals(e2.getCurrentDate()))[ CD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_12 $$ EntityWithNoArgFunctionAsColumn e2 = new EntityWithNoArgFunctionAsColumn()[ CD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_14 $$ EntityWithFunctionAsColumnHolder holder1 = new EntityWithFunctionAsColumnHolder()[ CD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_15 $$ holder1.getEntityWithNoArgFunctionAsColumns().add(e1)[ CD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_16 $$ EntityWithFunctionAsColumnHolder holder2 = new EntityWithFunctionAsColumnHolder()[ CD ]
Line_22 $$ s = openSession()-->Line_24 $$ List results = s.createQuery("select str(current_date), currentDate from EntityWithNoArgFunctionAsColumn").list()[ FD ]
Line_14 $$ EntityWithFunctionAsColumnHolder holder1 = new EntityWithFunctionAsColumnHolder()-->Line_15 $$ holder1.getEntityWithNoArgFunctionAsColumns().add(e1)[ FD ]
Line_16 $$ EntityWithFunctionAsColumnHolder holder2 = new EntityWithFunctionAsColumnHolder()-->Line_17 $$ holder2.getEntityWithNoArgFunctionAsColumns().add(e2)[ FD ]
Line_12 $$ EntityWithNoArgFunctionAsColumn e2 = new EntityWithNoArgFunctionAsColumn()-->Line_17 $$ holder2.getEntityWithNoArgFunctionAsColumns().add(e2)[ FD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_4 $$ if (function == null || function.hasParenthesesIfNoArguments()) [ CD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_17 $$ holder2.getEntityWithNoArgFunctionAsColumns().add(e2)[ CD ]
Line_9 $$ Transaction t = s.beginTransaction()-->Line_20 $$ t.commit()[ FD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_22 $$ s = openSession()[ CD ]
Line_9 $$ Transaction t = s.beginTransaction()-->Line_23 $$ t = s.beginTransaction()[ FD ]
Line_8 $$ Session s = openSession()-->Line_9 $$ Transaction t = s.beginTransaction()[ FD ]
Line_22 $$ s = openSession()-->Line_23 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_25 $$ assertEquals(2, results.size())[ CD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_29 $$ assertTrue(((Object[]) results.get(0))[1].equals(e1.getCurrentDate()) || ((Object[]) results.get(0))[1].equals(e2.getCurrentDate()))[ CD ]
Line_10 $$ EntityWithNoArgFunctionAsColumn e1 = new EntityWithNoArgFunctionAsColumn()-->Line_30 $$ assertTrue(((Object[]) results.get(1))[1].equals(e1.getCurrentDate()) || ((Object[]) results.get(1))[1].equals(e2.getCurrentDate()))[ FD ]
Line_24 $$ List results = s.createQuery("select str(current_date), currentDate from EntityWithNoArgFunctionAsColumn").list()-->Line_31 $$ assertFalse(((Object[]) results.get(0))[1].equals(((Object[]) results.get(1))[1]))[ FD ]
Line_3 $$ SQLFunction function = sessionFactory().getSqlFunctionRegistry().findSQLFunction("current_date")-->Line_4 $$ if (function == null || function.hasParenthesesIfNoArguments()) [ FD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_32 $$ t.commit()[ CD ]
Line_2 $$ public void testNoArgFcnAndColumnSameNameAsNoArgFunctionHQL() -->Line_13 $$ e2.setCurrentDate("yadda yadda yadda")[ CD ]
Line_4 $$ if (function == null || function.hasParenthesesIfNoArguments()) -->Line_5 $$ SkipLog.reportSkip("current_date reuires ()", "tests noarg function that does not require ()")[ CD ]
Line_24 $$ List results = s.createQuery("select str(current_date), currentDate from EntityWithNoArgFunctionAsColumn").list()-->Line_27 $$ assertTrue(!((Object[]) results.get(0))[0].equals(((Object[]) results.get(0))[1]))[ FD ]
Line_4 $$ if (function == null || function.hasParenthesesIfNoArguments()) -->Line_6 $$ return[ CD ]
Line_8 $$ Session s = openSession()-->Line_21 $$ s.close()[ FD ]
Line_24 $$ List results = s.createQuery("select str(current_date), currentDate from EntityWithNoArgFunctionAsColumn").list()-->Line_30 $$ assertTrue(((Object[]) results.get(1))[1].equals(e1.getCurrentDate()) || ((Object[]) results.get(1))[1].equals(e2.getCurrentDate()))[ FD ]
