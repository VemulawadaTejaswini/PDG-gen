Line_6 $$ for (int i = lineInfos.size() - 1; i >= 0; i--) -->Line_11 $$ newIndent = lineInfo.indent[ CD ]
Line_4 $$ List<LineInfo> lineInfos = collectIndentsGreaterOrEqualToCurrent(context, context.targetLine)-->Line_6 $$ for (int i = lineInfos.size() - 1; i >= 0; i--) [ FD ]
Line_4 $$ List<LineInfo> lineInfos = collectIndentsGreaterOrEqualToCurrent(context, context.targetLine)-->Line_7 $$ LineInfo lineInfo = lineInfos.get(i)[ FD ]
Line_6 $$ for (int i = lineInfos.size() - 1; i >= 0; i--) -->Line_7 $$ LineInfo lineInfo = lineInfos.get(i)[ FD ]
Line_5 $$ int newIndent = -1-->Line_11 $$ newIndent = lineInfo.indent[ FD ]
Line_2 $$ private static ProcessingResult tryToIndentToRight(@NotNull ChangeIndentContext context) -->Line_17 $$ changeIndent(context, newIndent)[ CD ]
Line_2 $$ private static ProcessingResult tryToIndentToRight(@NotNull ChangeIndentContext context) -->Line_17 $$ changeIndent(context, newIndent)[ FD ]
Line_2 $$ private static ProcessingResult tryToIndentToRight(@NotNull ChangeIndentContext context) -->Line_4 $$ List<LineInfo> lineInfos = collectIndentsGreaterOrEqualToCurrent(context, context.targetLine)[ CD ]
Line_2 $$ private static ProcessingResult tryToIndentToRight(@NotNull ChangeIndentContext context) -->Line_18 $$ return ProcessingResult.STOP_SUCCESSFUL[ CD ]
Line_2 $$ private static ProcessingResult tryToIndentToRight(@NotNull ChangeIndentContext context) -->Line_4 $$ List<LineInfo> lineInfos = collectIndentsGreaterOrEqualToCurrent(context, context.targetLine)[ FD ]
Line_2 $$ private static ProcessingResult tryToIndentToRight(@NotNull ChangeIndentContext context) -->Line_6 $$ for (int i = lineInfos.size() - 1; i >= 0; i--) [ CD ]
Line_2 $$ private static ProcessingResult tryToIndentToRight(@NotNull ChangeIndentContext context) -->Line_3 $$ int targetLineIndent = getLineIndent(context, context.targetLine)[ FD ]
Line_14 $$ if (newIndent == targetLineIndent || newIndent < 0) -->Line_15 $$ return ProcessingResult.CONTINUE[ CD ]
Line_2 $$ private static ProcessingResult tryToIndentToRight(@NotNull ChangeIndentContext context) -->Line_3 $$ int targetLineIndent = getLineIndent(context, context.targetLine)[ CD ]
Line_2 $$ private static ProcessingResult tryToIndentToRight(@NotNull ChangeIndentContext context) -->Line_5 $$ int newIndent = -1[ CD ]
Line_5 $$ int newIndent = -1-->Line_17 $$ changeIndent(context, newIndent)[ FD ]
Line_6 $$ for (int i = lineInfos.size() - 1; i >= 0; i--) -->Line_7 $$ LineInfo lineInfo = lineInfos.get(i)[ CD ]
Line_6 $$ for (int i = lineInfos.size() - 1; i >= 0; i--) -->Line_8 $$ if (lineInfo.indent == targetLineIndent) [ CD ]
Line_11 $$ newIndent = lineInfo.indent-->Line_17 $$ changeIndent(context, newIndent)[ FD ]
Line_3 $$ int targetLineIndent = getLineIndent(context, context.targetLine)-->Line_8 $$ if (lineInfo.indent == targetLineIndent) [ FD ]
Line_2 $$ private static ProcessingResult tryToIndentToRight(@NotNull ChangeIndentContext context) -->Line_14 $$ if (newIndent == targetLineIndent || newIndent < 0) [ CD ]
