Line_9 $$ RootBeanDefinition bd = new RootBeanDefinition(RepositoryFieldInjectionBeanWithSimpleMatch.class)-->Line_11 $$ bf.registerBeanDefinition("annotatedBean", bd)[ FD ]
Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_13 $$ RepositoryFieldInjectionBeanWithSimpleMatch bean = (RepositoryFieldInjectionBeanWithSimpleMatch) bf.getBean("annotatedBean")[ FD ]
Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_7 $$ bpp.setBeanFactory(bf)[ FD ]
Line_14 $$ Repository repo = bf.getBean("repo", Repository.class)-->Line_16 $$ assertSame(repo, bean.stringRepository)[ FD ]
Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_11 $$ bf.registerBeanDefinition("annotatedBean", bd)[ FD ]
Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_8 $$ bf.addBeanPostProcessor(bpp)[ FD ]
Line_14 $$ Repository repo = bf.getBean("repo", Repository.class)-->Line_28 $$ assertSame(repo, bean.stringRepositoryMap.get("repo"))[ FD ]
Line_6 $$ AutowiredAnnotationBeanPostProcessor bpp = new AutowiredAnnotationBeanPostProcessor()-->Line_8 $$ bf.addBeanPostProcessor(bpp)[ FD ]
Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_5 $$ bf.setAutowireCandidateResolver(new QualifierAnnotationAutowireCandidateResolver())[ FD ]
Line_9 $$ RootBeanDefinition bd = new RootBeanDefinition(RepositoryFieldInjectionBeanWithSimpleMatch.class)-->Line_10 $$ bd.setScope(RootBeanDefinition.SCOPE_PROTOTYPE)[ FD ]
Line_14 $$ Repository repo = bf.getBean("repo", Repository.class)-->Line_20 $$ assertSame(repo, bean.stringRepositoryArray[0])[ FD ]
Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_14 $$ Repository repo = bf.getBean("repo", Repository.class)[ FD ]
Line_14 $$ Repository repo = bf.getBean("repo", Repository.class)-->Line_19 $$ assertSame(repo, bean.repositoryArray[0])[ FD ]
Line_14 $$ Repository repo = bf.getBean("repo", Repository.class)-->Line_27 $$ assertSame(repo, bean.repositoryMap.get("repo"))[ FD ]
Line_14 $$ Repository repo = bf.getBean("repo", Repository.class)-->Line_24 $$ assertSame(repo, bean.stringRepositoryList.get(0))[ FD ]
Line_14 $$ Repository repo = bf.getBean("repo", Repository.class)-->Line_23 $$ assertSame(repo, bean.repositoryList.get(0))[ FD ]
Line_4 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_12 $$ bf.registerSingleton("repo", new StringRepository())[ FD ]
Line_6 $$ AutowiredAnnotationBeanPostProcessor bpp = new AutowiredAnnotationBeanPostProcessor()-->Line_7 $$ bpp.setBeanFactory(bf)[ FD ]
Line_14 $$ Repository repo = bf.getBean("repo", Repository.class)-->Line_15 $$ assertSame(repo, bean.repository)[ FD ]
