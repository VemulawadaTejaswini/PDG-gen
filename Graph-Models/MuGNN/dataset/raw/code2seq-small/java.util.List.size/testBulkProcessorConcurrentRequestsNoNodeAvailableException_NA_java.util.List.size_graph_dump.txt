Line_10 $$ int expectedBulkActions = numDocs / bulkActions-->Line_21 $$ assertThat(listener.bulkFailures.size(), equalTo(expectedBulkActions))[ FD ]
Line_10 $$ int expectedBulkActions = numDocs / bulkActions-->Line_20 $$ assertThat(listener.afterCounts.get(), equalTo(expectedBulkActions))[ FD ]
Line_12 $$ int totalExpectedBulkActions = numDocs % bulkActions == 0 ? expectedBulkActions : expectedBulkActions + 1-->Line_25 $$ assertThat(listener.bulkFailures.size(), equalTo(totalExpectedBulkActions))[ FD ]
Line_7 $$ int bulkActions = randomIntBetween(10, 100)-->Line_15 $$ try (BulkProcessor processor = //set interval and size to high values[ FD ]
Line_11 $$ final CountDownLatch latch = new CountDownLatch(expectedBulkActions)-->Line_18 $$ latch.await()[ FD ]
Line_6 $$ Client transportClient = TransportClient.builder().settings(settings).build()-->Line_15 $$ try (BulkProcessor processor = //set interval and size to high values[ FD ]
Line_10 $$ int expectedBulkActions = numDocs / bulkActions-->Line_19 $$ assertThat(listener.beforeCounts.get(), equalTo(expectedBulkActions))[ FD ]
Line_9 $$ int concurrentRequests = randomIntBetween(0, 10)-->Line_15 $$ try (BulkProcessor processor = //set interval and size to high values[ FD ]
Line_14 $$ BulkProcessorTestListener listener = new BulkProcessorTestListener(latch, closeLatch)-->Line_15 $$ try (BulkProcessor processor = //set interval and size to high values[ FD ]
Line_6 $$ Client transportClient = TransportClient.builder().settings(settings).build()-->Line_17 $$ indexDocs(transportClient, processor, numDocs)[ FD ]
Line_15 $$ try (BulkProcessor processor = //set interval and size to high values-->Line_17 $$ indexDocs(transportClient, processor, numDocs)[ FD ]
Line_6 $$ Client transportClient = TransportClient.builder().settings(settings).build()-->Line_27 $$ transportClient.close()[ FD ]
Line_7 $$ int bulkActions = randomIntBetween(10, 100)-->Line_8 $$ int numDocs = randomIntBetween(bulkActions, bulkActions + 100)[ FD ]
Line_13 $$ final CountDownLatch closeLatch = new CountDownLatch(totalExpectedBulkActions)-->Line_24 $$ closeLatch.await()[ FD ]
Line_8 $$ int numDocs = randomIntBetween(bulkActions, bulkActions + 100)-->Line_17 $$ indexDocs(transportClient, processor, numDocs)[ FD ]
