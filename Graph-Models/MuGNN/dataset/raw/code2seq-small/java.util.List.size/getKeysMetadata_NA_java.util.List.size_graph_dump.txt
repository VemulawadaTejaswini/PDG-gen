Line_7 $$ UserGroupInformation user = HttpUserGroupInformation.get()-->Line_10 $$ KeyProvider.Metadata[] keysMeta = user.doAs(new PrivilegedExceptionAction<KeyProvider.Metadata[]>() [ FD ]
Line_10 $$ KeyProvider.Metadata[] keysMeta = user.doAs(new PrivilegedExceptionAction<KeyProvider.Metadata[]>() -->Line_14 $$ return provider.getKeysMetadata(keyNames)[ CD ]
Line_8 $$ final String[] keyNames = keyNamesList.toArray(new String[keyNamesList.size()])-->Line_17 $$ Object json = KMSServerJSONUtils.toJSON(keyNames, keysMeta)[ FD ]
Line_7 $$ UserGroupInformation user = HttpUserGroupInformation.get()-->Line_9 $$ assertAccess(KMSACLs.Type.GET_METADATA, user, KMSOp.GET_KEYS_METADATA)[ FD ]
Line_10 $$ KeyProvider.Metadata[] keysMeta = user.doAs(new PrivilegedExceptionAction<KeyProvider.Metadata[]>() -->Line_17 $$ Object json = KMSServerJSONUtils.toJSON(keyNames, keysMeta)[ FD ]
Line_8 $$ final String[] keyNames = keyNamesList.toArray(new String[keyNamesList.size()])-->Line_14 $$ return provider.getKeysMetadata(keyNames)[ FD ]
Line_7 $$ UserGroupInformation user = HttpUserGroupInformation.get()-->Line_18 $$ kmsAudit.ok(user, KMSOp.GET_KEYS_METADATA, "")[ FD ]
