Line_2 $$ public Response getKeysMetadata(@QueryParam(KMSRESTConstants.KEY) List<String> keyNamesList) throws Exception -->Line_13 $$ kmsAudit.ok(user, KMSOp.GET_KEYS_METADATA, "")[ CD ]
Line_2 $$ public Response getKeysMetadata(@QueryParam(KMSRESTConstants.KEY) List<String> keyNamesList) throws Exception -->Line_7 $$ KeyProvider.Metadata[] keysMeta = user.doAs(new PrivilegedExceptionAction<KeyProvider.Metadata[]>() [ CD ]
Line_2 $$ public Response getKeysMetadata(@QueryParam(KMSRESTConstants.KEY) List<String> keyNamesList) throws Exception -->Line_6 $$ assertAccess(KMSACLs.Type.GET_METADATA, user, KMSOp.GET_KEYS_METADATA)[ CD ]
Line_4 $$ UserGroupInformation user = HttpUserGroupInformation.get()-->Line_7 $$ KeyProvider.Metadata[] keysMeta = user.doAs(new PrivilegedExceptionAction<KeyProvider.Metadata[]>() [ FD ]
Line_2 $$ public Response getKeysMetadata(@QueryParam(KMSRESTConstants.KEY) List<String> keyNamesList) throws Exception -->Line_4 $$ UserGroupInformation user = HttpUserGroupInformation.get()[ CD ]
Line_5 $$ final String[] keyNames = keyNamesList.toArray(new String[keyNamesList.size()])-->Line_12 $$ Object json = KMSServerJSONUtils.toJSON(keyNames, keysMeta)[ FD ]
Line_7 $$ KeyProvider.Metadata[] keysMeta = user.doAs(new PrivilegedExceptionAction<KeyProvider.Metadata[]>() -->Line_9 $$ return provider.getKeysMetadata(keyNames)[ CD ]
Line_7 $$ KeyProvider.Metadata[] keysMeta = user.doAs(new PrivilegedExceptionAction<KeyProvider.Metadata[]>() -->Line_12 $$ Object json = KMSServerJSONUtils.toJSON(keyNames, keysMeta)[ FD ]
Line_2 $$ public Response getKeysMetadata(@QueryParam(KMSRESTConstants.KEY) List<String> keyNamesList) throws Exception -->Line_5 $$ final String[] keyNames = keyNamesList.toArray(new String[keyNamesList.size()])[ CD ]
Line_2 $$ public Response getKeysMetadata(@QueryParam(KMSRESTConstants.KEY) List<String> keyNamesList) throws Exception -->Line_12 $$ Object json = KMSServerJSONUtils.toJSON(keyNames, keysMeta)[ CD ]
Line_2 $$ public Response getKeysMetadata(@QueryParam(KMSRESTConstants.KEY) List<String> keyNamesList) throws Exception -->Line_3 $$ KMSWebApp.getAdminCallsMeter().mark()[ CD ]
Line_2 $$ public Response getKeysMetadata(@QueryParam(KMSRESTConstants.KEY) List<String> keyNamesList) throws Exception -->Line_5 $$ final String[] keyNames = keyNamesList.toArray(new String[keyNamesList.size()])[ FD ]
Line_5 $$ final String[] keyNames = keyNamesList.toArray(new String[keyNamesList.size()])-->Line_9 $$ return provider.getKeysMetadata(keyNames)[ FD ]
Line_4 $$ UserGroupInformation user = HttpUserGroupInformation.get()-->Line_13 $$ kmsAudit.ok(user, KMSOp.GET_KEYS_METADATA, "")[ FD ]
Line_4 $$ UserGroupInformation user = HttpUserGroupInformation.get()-->Line_6 $$ assertAccess(KMSACLs.Type.GET_METADATA, user, KMSOp.GET_KEYS_METADATA)[ FD ]
Line_2 $$ public Response getKeysMetadata(@QueryParam(KMSRESTConstants.KEY) List<String> keyNamesList) throws Exception -->Line_14 $$ return Response.ok().type(MediaType.APPLICATION_JSON).entity(json).build()[ CD ]
