Line_16 $$ Session session = null-->Line_34 $$ closeSession(session)[ FD ]
Line_19 $$ String sql = CustomSQLUtil.get(FIND_BY_C_C)-->Line_20 $$ sql = StringUtil.replace(sql, "[$CLASS_PKS$]", StringUtil.merge(classPKs))[ FD ]
Line_4 $$ List<RatingsStats> list = (List<RatingsStats>) FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_C_C, finderArgs, this)-->Line_8 $$ list = null[ FD ]
Line_4 $$ List<RatingsStats> list = (List<RatingsStats>) FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_C_C, finderArgs, this)-->Line_13 $$ if (list != null) [ FD ]
Line_20 $$ sql = StringUtil.replace(sql, "[$CLASS_PKS$]", StringUtil.merge(classPKs))-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_23 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_29 $$ if (list == null) -->Line_30 $$ FinderCacheUtil.removeResult(FINDER_PATH_FIND_BY_C_C, finderArgs)[ CD ]
Line_2 $$ public List<RatingsStats> findByC_C(long classNameId, List<Long> classPKs) -->Line_4 $$ List<RatingsStats> list = (List<RatingsStats>) FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_C_C, finderArgs, this)[ CD ]
Line_2 $$ public List<RatingsStats> findByC_C(long classNameId, List<Long> classPKs) -->Line_20 $$ sql = StringUtil.replace(sql, "[$CLASS_PKS$]", StringUtil.merge(classPKs))[ FD ]
Line_4 $$ List<RatingsStats> list = (List<RatingsStats>) FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_C_C, finderArgs, this)-->Line_32 $$ FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_C_C, finderArgs, list)[ FD ]
Line_25 $$ list = q.list(true)-->Line_32 $$ FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_C_C, finderArgs, list)[ FD ]
Line_8 $$ list = null-->Line_13 $$ if (list != null) [ FD ]
Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_22 $$ q.addEntity("RatingsStats", RatingsStatsImpl.class)[ FD ]
Line_18 $$ session = openSession()-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_29 $$ if (list == null) -->Line_32 $$ FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_C_C, finderArgs, list)[ CD ]
Line_3 $$ Object[] finderArgs = new Object[] -->Line_32 $$ FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_C_C, finderArgs, list)[ FD ]
Line_7 $$ if ((classNameId != ratingsStats.getClassNameId()) || !classPKs.contains(ratingsStats.getClassPK())) -->Line_8 $$ list = null[ CD ]
Line_25 $$ list = q.list(true)-->Line_29 $$ if (list == null) [ FD ]
Line_16 $$ Session session = null-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_8 $$ list = null-->Line_25 $$ list = q.list(true)[ FD ]
Line_6 $$ for (RatingsStats ratingsStats : list) -->Line_7 $$ if ((classNameId != ratingsStats.getClassNameId()) || !classPKs.contains(ratingsStats.getClassPK())) [ FD ]
Line_2 $$ public List<RatingsStats> findByC_C(long classNameId, List<Long> classPKs) -->Line_24 $$ qPos.add(classNameId)[ FD ]
Line_8 $$ list = null-->Line_32 $$ FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_C_C, finderArgs, list)[ FD ]
Line_18 $$ session = openSession()-->Line_34 $$ closeSession(session)[ FD ]
Line_2 $$ public List<RatingsStats> findByC_C(long classNameId, List<Long> classPKs) -->Line_36 $$ return list[ CD ]
Line_2 $$ public List<RatingsStats> findByC_C(long classNameId, List<Long> classPKs) -->Line_16 $$ Session session = null[ CD ]
Line_2 $$ public List<RatingsStats> findByC_C(long classNameId, List<Long> classPKs) -->Line_3 $$ Object[] finderArgs = new Object[] [ CD ]
Line_13 $$ if (list != null) -->Line_14 $$ return list[ CD ]
Line_2 $$ public List<RatingsStats> findByC_C(long classNameId, List<Long> classPKs) -->Line_3 $$ Object[] finderArgs = new Object[] [ FD ]
Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_25 $$ list = q.list(true)[ FD ]
Line_2 $$ public List<RatingsStats> findByC_C(long classNameId, List<Long> classPKs) -->Line_5 $$ if ((list != null) && !list.isEmpty()) [ CD ]
Line_8 $$ list = null-->Line_29 $$ if (list == null) [ FD ]
Line_19 $$ String sql = CustomSQLUtil.get(FIND_BY_C_C)-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_4 $$ List<RatingsStats> list = (List<RatingsStats>) FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_C_C, finderArgs, this)-->Line_29 $$ if (list == null) [ FD ]
Line_3 $$ Object[] finderArgs = new Object[] -->Line_30 $$ FinderCacheUtil.removeResult(FINDER_PATH_FIND_BY_C_C, finderArgs)[ FD ]
Line_3 $$ Object[] finderArgs = new Object[] -->Line_4 $$ List<RatingsStats> list = (List<RatingsStats>) FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_C_C, finderArgs, this)[ FD ]
Line_23 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_24 $$ qPos.add(classNameId)[ FD ]
Line_16 $$ Session session = null-->Line_18 $$ session = openSession()[ FD ]
Line_4 $$ List<RatingsStats> list = (List<RatingsStats>) FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_C_C, finderArgs, this)-->Line_25 $$ list = q.list(true)[ FD ]
Line_2 $$ public List<RatingsStats> findByC_C(long classNameId, List<Long> classPKs) -->Line_13 $$ if (list != null) [ CD ]
Line_4 $$ List<RatingsStats> list = (List<RatingsStats>) FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_C_C, finderArgs, this)-->Line_5 $$ if ((list != null) && !list.isEmpty()) [ FD ]
Line_2 $$ public List<RatingsStats> findByC_C(long classNameId, List<Long> classPKs) -->Line_7 $$ if ((classNameId != ratingsStats.getClassNameId()) || !classPKs.contains(ratingsStats.getClassPK())) [ FD ]
