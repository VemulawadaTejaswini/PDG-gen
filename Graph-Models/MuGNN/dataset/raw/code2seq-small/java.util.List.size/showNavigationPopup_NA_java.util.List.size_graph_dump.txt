Line_34 $$ for (int index : indices) -->Line_35 $$ openFileByIndex(project, fileNames, index)[ FD ]
Line_19 $$ if (!fileName.equals(CREATE_MISSING_OPTION)) -->Line_21 $$ setIcon(fileType.getIcon())[ CD ]
Line_27 $$ builder.setItemChoosenCallback(new Runnable() -->Line_31 $$ if (ArrayUtil.indexOf(indices, fileNames.size()) >= 0) [ CD ]
Line_13 $$ list.setCellRenderer(new ColoredListCellRenderer() -->Line_35 $$ openFileByIndex(project, fileNames, index)[ FD ]
Line_2 $$ private static void showNavigationPopup(final Project project, final List<String> fileNames, final RelativePoint point) -->Line_4 $$ final String CREATE_MISSING_OPTION = "Create Missing Files"[ CD ]
Line_2 $$ private static void showNavigationPopup(final Project project, final List<String> fileNames, final RelativePoint point) -->Line_6 $$ VirtualFile file1 = LocalFileSystem.getInstance().refreshAndFindFileByPath(fileNames.get(0))[ FD ]
Line_2 $$ private static void showNavigationPopup(final Project project, final List<String> fileNames, final RelativePoint point) -->Line_35 $$ openFileByIndex(project, fileNames, index)[ FD ]
Line_13 $$ list.setCellRenderer(new ColoredListCellRenderer() -->Line_30 $$ final int[] indices = list.getSelectedIndices()[ FD ]
Line_13 $$ list.setCellRenderer(new ColoredListCellRenderer() -->Line_23 $$ append(String.format("%s (%s)", fileName, PathUtil.getParentPath(path)))[ CD ]
Line_18 $$ String fileName = PathUtil.getFileName(path)-->Line_20 $$ final FileType fileType = FileTypeManager.getInstance().getFileTypeByFileName(fileName)[ FD ]
Line_2 $$ private static void showNavigationPopup(final Project project, final List<String> fileNames, final RelativePoint point) -->Line_27 $$ builder.setItemChoosenCallback(new Runnable() [ FD ]
Line_19 $$ if (!fileName.equals(CREATE_MISSING_OPTION)) -->Line_20 $$ final FileType fileType = FileTypeManager.getInstance().getFileTypeByFileName(fileName)[ CD ]
Line_17 $$ String path = (String) value-->Line_23 $$ append(String.format("%s (%s)", fileName, PathUtil.getParentPath(path)))[ FD ]
Line_2 $$ private static void showNavigationPopup(final Project project, final List<String> fileNames, final RelativePoint point) -->Line_13 $$ list.setCellRenderer(new ColoredListCellRenderer() [ CD ]
Line_31 $$ if (ArrayUtil.indexOf(indices, fileNames.size()) >= 0) -->Line_32 $$ createMissingFiles(project, fileNames)[ CD ]
Line_4 $$ final String CREATE_MISSING_OPTION = "Create Missing Files"-->Line_9 $$ listPaths.add(CREATE_MISSING_OPTION)[ FD ]
Line_2 $$ private static void showNavigationPopup(final Project project, final List<String> fileNames, final RelativePoint point) -->Line_7 $$ VirtualFile file2 = LocalFileSystem.getInstance().refreshAndFindFileByPath(fileNames.get(1))[ FD ]
Line_13 $$ list.setCellRenderer(new ColoredListCellRenderer() -->Line_18 $$ String fileName = PathUtil.getFileName(path)[ CD ]
Line_8 $$ if (file1 == null || file2 == null) -->Line_9 $$ listPaths.add(CREATE_MISSING_OPTION)[ CD ]
Line_4 $$ final String CREATE_MISSING_OPTION = "Create Missing Files"-->Line_19 $$ if (!fileName.equals(CREATE_MISSING_OPTION)) [ FD ]
Line_20 $$ final FileType fileType = FileTypeManager.getInstance().getFileTypeByFileName(fileName)-->Line_21 $$ setIcon(fileType.getIcon())[ FD ]
Line_30 $$ final int[] indices = list.getSelectedIndices()-->Line_31 $$ if (ArrayUtil.indexOf(indices, fileNames.size()) >= 0) [ FD ]
Line_13 $$ list.setCellRenderer(new ColoredListCellRenderer() -->Line_19 $$ if (!fileName.equals(CREATE_MISSING_OPTION)) [ CD ]
Line_17 $$ String path = (String) value-->Line_18 $$ String fileName = PathUtil.getFileName(path)[ FD ]
Line_18 $$ String fileName = PathUtil.getFileName(path)-->Line_23 $$ append(String.format("%s (%s)", fileName, PathUtil.getParentPath(path)))[ FD ]
Line_2 $$ private static void showNavigationPopup(final Project project, final List<String> fileNames, final RelativePoint point) -->Line_3 $$ List<String> listPaths = new ArrayList<String>(fileNames)[ CD ]
Line_2 $$ private static void showNavigationPopup(final Project project, final List<String> fileNames, final RelativePoint point) -->Line_32 $$ createMissingFiles(project, fileNames)[ FD ]
Line_13 $$ list.setCellRenderer(new ColoredListCellRenderer() -->Line_17 $$ String path = (String) value[ CD ]
Line_2 $$ private static void showNavigationPopup(final Project project, final List<String> fileNames, final RelativePoint point) -->Line_12 $$ final JList list = new JBList(ArrayUtil.toStringArray(listPaths))[ CD ]
Line_2 $$ private static void showNavigationPopup(final Project project, final List<String> fileNames, final RelativePoint point) -->Line_31 $$ if (ArrayUtil.indexOf(indices, fileNames.size()) >= 0) [ FD ]
Line_2 $$ private static void showNavigationPopup(final Project project, final List<String> fileNames, final RelativePoint point) -->Line_5 $$ if (fileNames.size() == 2) [ CD ]
Line_27 $$ builder.setItemChoosenCallback(new Runnable() -->Line_30 $$ final int[] indices = list.getSelectedIndices()[ CD ]
Line_3 $$ List<String> listPaths = new ArrayList<String>(fileNames)-->Line_9 $$ listPaths.add(CREATE_MISSING_OPTION)[ FD ]
Line_12 $$ final JList list = new JBList(ArrayUtil.toStringArray(listPaths))-->Line_13 $$ list.setCellRenderer(new ColoredListCellRenderer() [ FD ]
Line_5 $$ if (fileNames.size() == 2) -->Line_8 $$ if (file1 == null || file2 == null) [ CD ]
Line_18 $$ String fileName = PathUtil.getFileName(path)-->Line_19 $$ if (!fileName.equals(CREATE_MISSING_OPTION)) [ FD ]
Line_12 $$ final JList list = new JBList(ArrayUtil.toStringArray(listPaths))-->Line_30 $$ final int[] indices = list.getSelectedIndices()[ FD ]
Line_3 $$ List<String> listPaths = new ArrayList<String>(fileNames)-->Line_12 $$ final JList list = new JBList(ArrayUtil.toStringArray(listPaths))[ FD ]
Line_5 $$ if (fileNames.size() == 2) -->Line_7 $$ VirtualFile file2 = LocalFileSystem.getInstance().refreshAndFindFileByPath(fileNames.get(1))[ CD ]
Line_5 $$ if (fileNames.size() == 2) -->Line_6 $$ VirtualFile file1 = LocalFileSystem.getInstance().refreshAndFindFileByPath(fileNames.get(0))[ CD ]
Line_2 $$ private static void showNavigationPopup(final Project project, final List<String> fileNames, final RelativePoint point) -->Line_5 $$ if (fileNames.size() == 2) [ FD ]
Line_2 $$ private static void showNavigationPopup(final Project project, final List<String> fileNames, final RelativePoint point) -->Line_27 $$ builder.setItemChoosenCallback(new Runnable() [ CD ]
