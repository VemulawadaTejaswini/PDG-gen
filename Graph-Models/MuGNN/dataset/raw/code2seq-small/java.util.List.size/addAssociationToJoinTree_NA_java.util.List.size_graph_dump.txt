Line_3 $$ Joinable joinable = type.getAssociatedJoinable(getFactory())-->Line_10 $$ if (joinable instanceof OuterJoinLoadable) [ FD ]
Line_3 $$ Joinable joinable = type.getAssociatedJoinable(getFactory())-->Line_9 $$ if (!joinable.isCollection()) [ FD ]
Line_8 $$ int nextDepth = currentDepth + 1-->Line_11 $$ walkEntityTree((OuterJoinLoadable) joinable, subalias, path, nextDepth)[ FD ]
Line_9 $$ if (!joinable.isCollection()) -->Line_10 $$ if (joinable instanceof OuterJoinLoadable) [ CD ]
Line_2 $$ private void addAssociationToJoinTree(final AssociationType type, final String[] aliasedLhsColumns, final String alias, final PropertyPath path, final int currentDepth, final JoinType joinType) throws MappingException -->Line_4 $$ String subalias = generateTableAlias(associations.size() + 1, path, joinable)[ CD ]
Line_4 $$ String subalias = generateTableAlias(associations.size() + 1, path, joinable)-->Line_11 $$ walkEntityTree((OuterJoinLoadable) joinable, subalias, path, nextDepth)[ FD ]
Line_5 $$ OuterJoinableAssociation assoc = new OuterJoinableAssociation(path, type, alias, aliasedLhsColumns, subalias, joinType, getWithClause(path), hasRestriction(path), getFactory(), loadQueryInfluencers.getEnabledFilters())-->Line_7 $$ associations.add(assoc)[ FD ]
Line_10 $$ if (joinable instanceof OuterJoinLoadable) -->Line_11 $$ walkEntityTree((OuterJoinLoadable) joinable, subalias, path, nextDepth)[ CD ]
Line_2 $$ private void addAssociationToJoinTree(final AssociationType type, final String[] aliasedLhsColumns, final String alias, final PropertyPath path, final int currentDepth, final JoinType joinType) throws MappingException -->Line_3 $$ Joinable joinable = type.getAssociatedJoinable(getFactory())[ FD ]
Line_2 $$ private void addAssociationToJoinTree(final AssociationType type, final String[] aliasedLhsColumns, final String alias, final PropertyPath path, final int currentDepth, final JoinType joinType) throws MappingException -->Line_6 $$ assoc.validateJoin(path.getFullPath())[ FD ]
Line_14 $$ if (joinable instanceof QueryableCollection) -->Line_15 $$ walkCollectionTree((QueryableCollection) joinable, subalias, path, nextDepth)[ CD ]
Line_2 $$ private void addAssociationToJoinTree(final AssociationType type, final String[] aliasedLhsColumns, final String alias, final PropertyPath path, final int currentDepth, final JoinType joinType) throws MappingException -->Line_9 $$ if (!joinable.isCollection()) [ CD ]
Line_4 $$ String subalias = generateTableAlias(associations.size() + 1, path, joinable)-->Line_15 $$ walkCollectionTree((QueryableCollection) joinable, subalias, path, nextDepth)[ FD ]
Line_5 $$ OuterJoinableAssociation assoc = new OuterJoinableAssociation(path, type, alias, aliasedLhsColumns, subalias, joinType, getWithClause(path), hasRestriction(path), getFactory(), loadQueryInfluencers.getEnabledFilters())-->Line_6 $$ assoc.validateJoin(path.getFullPath())[ FD ]
Line_2 $$ private void addAssociationToJoinTree(final AssociationType type, final String[] aliasedLhsColumns, final String alias, final PropertyPath path, final int currentDepth, final JoinType joinType) throws MappingException -->Line_6 $$ assoc.validateJoin(path.getFullPath())[ CD ]
Line_9 $$ if (!joinable.isCollection()) -->Line_14 $$ if (joinable instanceof QueryableCollection) [ CD ]
Line_3 $$ Joinable joinable = type.getAssociatedJoinable(getFactory())-->Line_14 $$ if (joinable instanceof QueryableCollection) [ FD ]
Line_2 $$ private void addAssociationToJoinTree(final AssociationType type, final String[] aliasedLhsColumns, final String alias, final PropertyPath path, final int currentDepth, final JoinType joinType) throws MappingException -->Line_4 $$ String subalias = generateTableAlias(associations.size() + 1, path, joinable)[ FD ]
Line_2 $$ private void addAssociationToJoinTree(final AssociationType type, final String[] aliasedLhsColumns, final String alias, final PropertyPath path, final int currentDepth, final JoinType joinType) throws MappingException -->Line_15 $$ walkCollectionTree((QueryableCollection) joinable, subalias, path, nextDepth)[ FD ]
Line_3 $$ Joinable joinable = type.getAssociatedJoinable(getFactory())-->Line_4 $$ String subalias = generateTableAlias(associations.size() + 1, path, joinable)[ FD ]
Line_2 $$ private void addAssociationToJoinTree(final AssociationType type, final String[] aliasedLhsColumns, final String alias, final PropertyPath path, final int currentDepth, final JoinType joinType) throws MappingException -->Line_3 $$ Joinable joinable = type.getAssociatedJoinable(getFactory())[ CD ]
Line_2 $$ private void addAssociationToJoinTree(final AssociationType type, final String[] aliasedLhsColumns, final String alias, final PropertyPath path, final int currentDepth, final JoinType joinType) throws MappingException -->Line_5 $$ OuterJoinableAssociation assoc = new OuterJoinableAssociation(path, type, alias, aliasedLhsColumns, subalias, joinType, getWithClause(path), hasRestriction(path), getFactory(), loadQueryInfluencers.getEnabledFilters())[ CD ]
Line_2 $$ private void addAssociationToJoinTree(final AssociationType type, final String[] aliasedLhsColumns, final String alias, final PropertyPath path, final int currentDepth, final JoinType joinType) throws MappingException -->Line_5 $$ OuterJoinableAssociation assoc = new OuterJoinableAssociation(path, type, alias, aliasedLhsColumns, subalias, joinType, getWithClause(path), hasRestriction(path), getFactory(), loadQueryInfluencers.getEnabledFilters())[ FD ]
Line_8 $$ int nextDepth = currentDepth + 1-->Line_15 $$ walkCollectionTree((QueryableCollection) joinable, subalias, path, nextDepth)[ FD ]
Line_2 $$ private void addAssociationToJoinTree(final AssociationType type, final String[] aliasedLhsColumns, final String alias, final PropertyPath path, final int currentDepth, final JoinType joinType) throws MappingException -->Line_7 $$ associations.add(assoc)[ CD ]
Line_2 $$ private void addAssociationToJoinTree(final AssociationType type, final String[] aliasedLhsColumns, final String alias, final PropertyPath path, final int currentDepth, final JoinType joinType) throws MappingException -->Line_11 $$ walkEntityTree((OuterJoinLoadable) joinable, subalias, path, nextDepth)[ FD ]
Line_2 $$ private void addAssociationToJoinTree(final AssociationType type, final String[] aliasedLhsColumns, final String alias, final PropertyPath path, final int currentDepth, final JoinType joinType) throws MappingException -->Line_8 $$ int nextDepth = currentDepth + 1[ CD ]
