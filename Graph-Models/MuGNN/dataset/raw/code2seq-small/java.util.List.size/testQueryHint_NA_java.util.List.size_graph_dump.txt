Line_20 $$ List results = query.list()-->Line_38 $$ results = query.list()[ FD ]
Line_38 $$ results = query.list()-->Line_41 $$ assertEquals(results.size(), 2)[ FD ]
Line_38 $$ results = query.list()-->Line_47 $$ results = criteria.list()[ FD ]
Line_6 $$ Employee employee1 = new Employee()-->Line_13 $$ s.persist(employee1)[ FD ]
Line_10 $$ Session s = openSession()-->Line_11 $$ s.getTransaction().begin()[ FD ]
Line_20 $$ List results = query.list()-->Line_32 $$ assertEquals(results.size(), 2)[ FD ]
Line_37 $$ query = s.createQuery("FROM QueryHintTest$Employee e WHERE e.department.name = :departmentName").setComment("this is a test").addQueryHint("ALL_ROWS").setParameter("departmentName", "Sales")-->Line_38 $$ results = query.list()[ FD ]
Line_20 $$ List results = query.list()-->Line_23 $$ assertEquals(results.size(), 2)[ FD ]
Line_10 $$ Session s = openSession()-->Line_40 $$ s.clear()[ FD ]
Line_10 $$ Session s = openSession()-->Line_13 $$ s.persist(employee1)[ FD ]
Line_19 $$ Query query = s.createQuery("FROM QueryHintTest$Employee e WHERE e.department.name = :departmentName").addQueryHint("ALL_ROWS").setParameter("departmentName", "Sales")-->Line_38 $$ results = query.list()[ FD ]
Line_29 $$ results = query.list()-->Line_41 $$ assertEquals(results.size(), 2)[ FD ]
Line_20 $$ List results = query.list()-->Line_41 $$ assertEquals(results.size(), 2)[ FD ]
Line_10 $$ Session s = openSession()-->Line_49 $$ s.close()[ FD ]
Line_10 $$ Session s = openSession()-->Line_30 $$ s.getTransaction().commit()[ FD ]
Line_10 $$ Session s = openSession()-->Line_46 $$ Criteria criteria = s.createCriteria(Employee.class).addQueryHint("ALL_ROWS").createCriteria("department").add(Restrictions.eq("name", "Sales"))[ FD ]
Line_10 $$ Session s = openSession()-->Line_37 $$ query = s.createQuery("FROM QueryHintTest$Employee e WHERE e.department.name = :departmentName").setComment("this is a test").addQueryHint("ALL_ROWS").setParameter("departmentName", "Sales")[ FD ]
Line_29 $$ results = query.list()-->Line_32 $$ assertEquals(results.size(), 2)[ FD ]
Line_10 $$ Session s = openSession()-->Line_22 $$ s.clear()[ FD ]
Line_10 $$ Session s = openSession()-->Line_21 $$ s.getTransaction().commit()[ FD ]
Line_46 $$ Criteria criteria = s.createCriteria(Employee.class).addQueryHint("ALL_ROWS").createCriteria("department").add(Restrictions.eq("name", "Sales"))-->Line_47 $$ results = criteria.list()[ FD ]
Line_20 $$ List results = query.list()-->Line_47 $$ results = criteria.list()[ FD ]
Line_19 $$ Query query = s.createQuery("FROM QueryHintTest$Employee e WHERE e.department.name = :departmentName").addQueryHint("ALL_ROWS").setParameter("departmentName", "Sales")-->Line_28 $$ query = s.createQuery("FROM QueryHintTest$Employee e WHERE e.department.name = :departmentName").addQueryHint("ALL_ROWS").addQueryHint("USE_CONCAT").setParameter("departmentName", "Sales")[ FD ]
Line_47 $$ results = criteria.list()-->Line_50 $$ assertEquals(results.size(), 2)[ FD ]
Line_28 $$ query = s.createQuery("FROM QueryHintTest$Employee e WHERE e.department.name = :departmentName").addQueryHint("ALL_ROWS").addQueryHint("USE_CONCAT").setParameter("departmentName", "Sales")-->Line_37 $$ query = s.createQuery("FROM QueryHintTest$Employee e WHERE e.department.name = :departmentName").setComment("this is a test").addQueryHint("ALL_ROWS").setParameter("departmentName", "Sales")[ FD ]
Line_4 $$ Department department = new Department()-->Line_7 $$ employee1.department = department[ FD ]
Line_10 $$ Session s = openSession()-->Line_28 $$ query = s.createQuery("FROM QueryHintTest$Employee e WHERE e.department.name = :departmentName").addQueryHint("ALL_ROWS").addQueryHint("USE_CONCAT").setParameter("departmentName", "Sales")[ FD ]
Line_10 $$ Session s = openSession()-->Line_19 $$ Query query = s.createQuery("FROM QueryHintTest$Employee e WHERE e.department.name = :departmentName").addQueryHint("ALL_ROWS").setParameter("departmentName", "Sales")[ FD ]
Line_19 $$ Query query = s.createQuery("FROM QueryHintTest$Employee e WHERE e.department.name = :departmentName").addQueryHint("ALL_ROWS").setParameter("departmentName", "Sales")-->Line_29 $$ results = query.list()[ FD ]
Line_4 $$ Department department = new Department()-->Line_12 $$ s.persist(department)[ FD ]
Line_19 $$ Query query = s.createQuery("FROM QueryHintTest$Employee e WHERE e.department.name = :departmentName").addQueryHint("ALL_ROWS").setParameter("departmentName", "Sales")-->Line_20 $$ List results = query.list()[ FD ]
Line_28 $$ query = s.createQuery("FROM QueryHintTest$Employee e WHERE e.department.name = :departmentName").addQueryHint("ALL_ROWS").addQueryHint("USE_CONCAT").setParameter("departmentName", "Sales")-->Line_29 $$ results = query.list()[ FD ]
Line_19 $$ Query query = s.createQuery("FROM QueryHintTest$Employee e WHERE e.department.name = :departmentName").addQueryHint("ALL_ROWS").setParameter("departmentName", "Sales")-->Line_37 $$ query = s.createQuery("FROM QueryHintTest$Employee e WHERE e.department.name = :departmentName").setComment("this is a test").addQueryHint("ALL_ROWS").setParameter("departmentName", "Sales")[ FD ]
Line_20 $$ List results = query.list()-->Line_29 $$ results = query.list()[ FD ]
Line_10 $$ Session s = openSession()-->Line_15 $$ s.getTransaction().commit()[ FD ]
Line_10 $$ Session s = openSession()-->Line_48 $$ s.getTransaction().commit()[ FD ]
Line_38 $$ results = query.list()-->Line_50 $$ assertEquals(results.size(), 2)[ FD ]
Line_29 $$ results = query.list()-->Line_38 $$ results = query.list()[ FD ]
Line_4 $$ Department department = new Department()-->Line_9 $$ employee2.department = department[ FD ]
Line_10 $$ Session s = openSession()-->Line_16 $$ s.clear()[ FD ]
Line_10 $$ Session s = openSession()-->Line_39 $$ s.getTransaction().commit()[ FD ]
Line_10 $$ Session s = openSession()-->Line_14 $$ s.persist(employee2)[ FD ]
Line_29 $$ results = query.list()-->Line_47 $$ results = criteria.list()[ FD ]
Line_29 $$ results = query.list()-->Line_50 $$ assertEquals(results.size(), 2)[ FD ]
Line_20 $$ List results = query.list()-->Line_50 $$ assertEquals(results.size(), 2)[ FD ]
Line_10 $$ Session s = openSession()-->Line_12 $$ s.persist(department)[ FD ]
Line_8 $$ Employee employee2 = new Employee()-->Line_14 $$ s.persist(employee2)[ FD ]
Line_28 $$ query = s.createQuery("FROM QueryHintTest$Employee e WHERE e.department.name = :departmentName").addQueryHint("ALL_ROWS").addQueryHint("USE_CONCAT").setParameter("departmentName", "Sales")-->Line_38 $$ results = query.list()[ FD ]
Line_10 $$ Session s = openSession()-->Line_31 $$ s.clear()[ FD ]
