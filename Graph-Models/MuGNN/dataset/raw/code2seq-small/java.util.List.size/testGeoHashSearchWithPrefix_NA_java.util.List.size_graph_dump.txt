Line_3 $$ int precision = randomIntBetween(1, 12)-->Line_4 $$ String mapping = XContentFactory.jsonBuilder().startObject().startObject("pin").startObject("properties").startObject("location").field("type", "geo_point").field("geohash_prefix", true).field("geohash_precision", precision).field("store", true).endObject().endObject().endObject().endObject().string()[ FD ]
Line_15 $$ for (int i = 0; i < numHashes; ++i) -->Line_16 $$ assertEquals("dr5regy6rc6y".substring(0, numHashes - i), hashes.get(i))[ FD ]
Line_2 $$ public void testGeoHashSearchWithPrefix() throws Exception -->Line_8 $$ mappingRequest.execute().actionGet()[ CD ]
Line_2 $$ public void testGeoHashSearchWithPrefix() throws Exception -->Line_15 $$ for (int i = 0; i < numHashes; ++i) [ CD ]
Line_13 $$ List<Object> hashes = m.get("location.geohash").values()-->Line_14 $$ final int numHashes = hashes.size()[ FD ]
Line_2 $$ public void testGeoHashSearchWithPrefix() throws Exception -->Line_6 $$ Settings settings = Settings.settingsBuilder().put(IndexMetaData.SETTING_VERSION_CREATED, version).build()[ CD ]
Line_5 $$ Version version = VersionUtils.randomVersionBetween(random(), Version.V_1_0_0, Version.CURRENT)-->Line_6 $$ Settings settings = Settings.settingsBuilder().put(IndexMetaData.SETTING_VERSION_CREATED, version).build()[ FD ]
Line_4 $$ String mapping = XContentFactory.jsonBuilder().startObject().startObject("pin").startObject("properties").startObject("location").field("type", "geo_point").field("geohash_prefix", true).field("geohash_precision", precision).field("store", true).endObject().endObject().endObject().endObject().string()-->Line_7 $$ CreateIndexRequestBuilder mappingRequest = client().admin().indices().prepareCreate("test").setSettings(settings).addMapping("pin", mapping)[ FD ]
Line_2 $$ public void testGeoHashSearchWithPrefix() throws Exception -->Line_9 $$ client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet()[ CD ]
Line_2 $$ public void testGeoHashSearchWithPrefix() throws Exception -->Line_14 $$ final int numHashes = hashes.size()[ CD ]
Line_2 $$ public void testGeoHashSearchWithPrefix() throws Exception -->Line_5 $$ Version version = VersionUtils.randomVersionBetween(random(), Version.V_1_0_0, Version.CURRENT)[ CD ]
Line_12 $$ Map<String, SearchHitField> m = searchResponse.getHits().getAt(0).getFields()-->Line_13 $$ List<Object> hashes = m.get("location.geohash").values()[ FD ]
Line_2 $$ public void testGeoHashSearchWithPrefix() throws Exception -->Line_7 $$ CreateIndexRequestBuilder mappingRequest = client().admin().indices().prepareCreate("test").setSettings(settings).addMapping("pin", mapping)[ CD ]
Line_6 $$ Settings settings = Settings.settingsBuilder().put(IndexMetaData.SETTING_VERSION_CREATED, version).build()-->Line_7 $$ CreateIndexRequestBuilder mappingRequest = client().admin().indices().prepareCreate("test").setSettings(settings).addMapping("pin", mapping)[ FD ]
Line_15 $$ for (int i = 0; i < numHashes; ++i) -->Line_16 $$ assertEquals("dr5regy6rc6y".substring(0, numHashes - i), hashes.get(i))[ CD ]
Line_2 $$ public void testGeoHashSearchWithPrefix() throws Exception -->Line_3 $$ int precision = randomIntBetween(1, 12)[ CD ]
Line_7 $$ CreateIndexRequestBuilder mappingRequest = client().admin().indices().prepareCreate("test").setSettings(settings).addMapping("pin", mapping)-->Line_8 $$ mappingRequest.execute().actionGet()[ FD ]
Line_2 $$ public void testGeoHashSearchWithPrefix() throws Exception -->Line_13 $$ List<Object> hashes = m.get("location.geohash").values()[ CD ]
Line_2 $$ public void testGeoHashSearchWithPrefix() throws Exception -->Line_11 $$ SearchResponse searchResponse = client().prepareSearch().addField("location.geohash").setQuery(matchAllQuery()).execute().actionGet()[ CD ]
Line_13 $$ List<Object> hashes = m.get("location.geohash").values()-->Line_16 $$ assertEquals("dr5regy6rc6y".substring(0, numHashes - i), hashes.get(i))[ FD ]
Line_2 $$ public void testGeoHashSearchWithPrefix() throws Exception -->Line_12 $$ Map<String, SearchHitField> m = searchResponse.getHits().getAt(0).getFields()[ CD ]
Line_2 $$ public void testGeoHashSearchWithPrefix() throws Exception -->Line_10 $$ client().prepareIndex("test", "pin", "1").setSource(jsonBuilder().startObject().startObject("location").field("lat", 40.7143528).field("lon", -74.0059731).endObject().endObject()).setRefresh(true).execute().actionGet()[ CD ]
Line_2 $$ public void testGeoHashSearchWithPrefix() throws Exception -->Line_4 $$ String mapping = XContentFactory.jsonBuilder().startObject().startObject("pin").startObject("properties").startObject("location").field("type", "geo_point").field("geohash_prefix", true).field("geohash_precision", precision).field("store", true).endObject().endObject().endObject().endObject().string()[ CD ]
Line_11 $$ SearchResponse searchResponse = client().prepareSearch().addField("location.geohash").setQuery(matchAllQuery()).execute().actionGet()-->Line_12 $$ Map<String, SearchHitField> m = searchResponse.getHits().getAt(0).getFields()[ FD ]
Line_14 $$ final int numHashes = hashes.size()-->Line_15 $$ for (int i = 0; i < numHashes; ++i) [ FD ]
