Line_2 $$ public List<RatingsEntry> findByU_C_C(long userId, long classNameId, List<Long> classPKs) -->Line_5 $$ if ((list != null) && !list.isEmpty()) [ CD ]
Line_2 $$ public List<RatingsEntry> findByU_C_C(long userId, long classNameId, List<Long> classPKs) -->Line_3 $$ Object[] finderArgs = new Object[] [ FD ]
Line_3 $$ Object[] finderArgs = new Object[] -->Line_31 $$ FinderCacheUtil.removeResult(FINDER_PATH_FIND_BY_U_C_C, finderArgs)[ FD ]
Line_20 $$ sql = StringUtil.replace(sql, "[$CLASS_PKS$]", StringUtil.merge(classPKs))-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_23 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_4 $$ List<RatingsEntry> list = (List<RatingsEntry>) FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_U_C_C, finderArgs, this)-->Line_5 $$ if ((list != null) && !list.isEmpty()) [ FD ]
Line_2 $$ public List<RatingsEntry> findByU_C_C(long userId, long classNameId, List<Long> classPKs) -->Line_25 $$ qPos.add(classNameId)[ FD ]
Line_26 $$ list = q.list(true)-->Line_30 $$ if (list == null) [ FD ]
Line_19 $$ String sql = CustomSQLUtil.get(FIND_BY_U_C_C)-->Line_20 $$ sql = StringUtil.replace(sql, "[$CLASS_PKS$]", StringUtil.merge(classPKs))[ FD ]
Line_8 $$ list = null-->Line_13 $$ if (list != null) [ FD ]
Line_26 $$ list = q.list(true)-->Line_33 $$ FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_U_C_C, finderArgs, list)[ FD ]
Line_2 $$ public List<RatingsEntry> findByU_C_C(long userId, long classNameId, List<Long> classPKs) -->Line_7 $$ if ((userId != ratingsEntry.getUserId()) || (classNameId != ratingsEntry.getClassNameId()) || !classPKs.contains(ratingsEntry.getClassPK())) [ FD ]
Line_4 $$ List<RatingsEntry> list = (List<RatingsEntry>) FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_U_C_C, finderArgs, this)-->Line_30 $$ if (list == null) [ FD ]
Line_19 $$ String sql = CustomSQLUtil.get(FIND_BY_U_C_C)-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_18 $$ session = openSession()-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_8 $$ list = null-->Line_33 $$ FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_U_C_C, finderArgs, list)[ FD ]
Line_2 $$ public List<RatingsEntry> findByU_C_C(long userId, long classNameId, List<Long> classPKs) -->Line_20 $$ sql = StringUtil.replace(sql, "[$CLASS_PKS$]", StringUtil.merge(classPKs))[ FD ]
Line_23 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_24 $$ qPos.add(userId)[ FD ]
Line_2 $$ public List<RatingsEntry> findByU_C_C(long userId, long classNameId, List<Long> classPKs) -->Line_24 $$ qPos.add(userId)[ FD ]
Line_4 $$ List<RatingsEntry> list = (List<RatingsEntry>) FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_U_C_C, finderArgs, this)-->Line_26 $$ list = q.list(true)[ FD ]
Line_16 $$ Session session = null-->Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_30 $$ if (list == null) -->Line_31 $$ FinderCacheUtil.removeResult(FINDER_PATH_FIND_BY_U_C_C, finderArgs)[ CD ]
Line_3 $$ Object[] finderArgs = new Object[] -->Line_4 $$ List<RatingsEntry> list = (List<RatingsEntry>) FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_U_C_C, finderArgs, this)[ FD ]
Line_7 $$ if ((userId != ratingsEntry.getUserId()) || (classNameId != ratingsEntry.getClassNameId()) || !classPKs.contains(ratingsEntry.getClassPK())) -->Line_8 $$ list = null[ CD ]
Line_23 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_25 $$ qPos.add(classNameId)[ FD ]
Line_4 $$ List<RatingsEntry> list = (List<RatingsEntry>) FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_U_C_C, finderArgs, this)-->Line_8 $$ list = null[ FD ]
Line_8 $$ list = null-->Line_26 $$ list = q.list(true)[ FD ]
Line_2 $$ public List<RatingsEntry> findByU_C_C(long userId, long classNameId, List<Long> classPKs) -->Line_3 $$ Object[] finderArgs = new Object[] [ CD ]
Line_2 $$ public List<RatingsEntry> findByU_C_C(long userId, long classNameId, List<Long> classPKs) -->Line_4 $$ List<RatingsEntry> list = (List<RatingsEntry>) FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_U_C_C, finderArgs, this)[ CD ]
Line_18 $$ session = openSession()-->Line_35 $$ closeSession(session)[ FD ]
Line_2 $$ public List<RatingsEntry> findByU_C_C(long userId, long classNameId, List<Long> classPKs) -->Line_13 $$ if (list != null) [ CD ]
Line_13 $$ if (list != null) -->Line_14 $$ return list[ CD ]
Line_8 $$ list = null-->Line_30 $$ if (list == null) [ FD ]
Line_2 $$ public List<RatingsEntry> findByU_C_C(long userId, long classNameId, List<Long> classPKs) -->Line_37 $$ return list[ CD ]
Line_2 $$ public List<RatingsEntry> findByU_C_C(long userId, long classNameId, List<Long> classPKs) -->Line_16 $$ Session session = null[ CD ]
Line_4 $$ List<RatingsEntry> list = (List<RatingsEntry>) FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_U_C_C, finderArgs, this)-->Line_13 $$ if (list != null) [ FD ]
Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_22 $$ q.addEntity("RatingsEntry", RatingsEntryImpl.class)[ FD ]
Line_4 $$ List<RatingsEntry> list = (List<RatingsEntry>) FinderCacheUtil.getResult(FINDER_PATH_FIND_BY_U_C_C, finderArgs, this)-->Line_33 $$ FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_U_C_C, finderArgs, list)[ FD ]
Line_6 $$ for (RatingsEntry ratingsEntry : list) -->Line_7 $$ if ((userId != ratingsEntry.getUserId()) || (classNameId != ratingsEntry.getClassNameId()) || !classPKs.contains(ratingsEntry.getClassPK())) [ FD ]
Line_16 $$ Session session = null-->Line_18 $$ session = openSession()[ FD ]
Line_21 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_26 $$ list = q.list(true)[ FD ]
Line_16 $$ Session session = null-->Line_35 $$ closeSession(session)[ FD ]
Line_3 $$ Object[] finderArgs = new Object[] -->Line_33 $$ FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_U_C_C, finderArgs, list)[ FD ]
Line_30 $$ if (list == null) -->Line_33 $$ FinderCacheUtil.putResult(FINDER_PATH_FIND_BY_U_C_C, finderArgs, list)[ CD ]
