Line_3 $$ PsiMethod method = null-->Line_49 $$ if (method == null)[ FD ]
Line_13 $$ if (method.isConstructor()) -->Line_23 $$ if (!(parent instanceof PsiParameterList))[ CD ]
Line_5 $$ PsiParameter parameter = (PsiParameter) owner-->Line_6 $$ PsiElement scope = parameter.getDeclarationScope()[ FD ]
Line_54 $$ if (PropertyUtil.isSimplePropertyGetter(method)) -->Line_58 $$ method = setters.get(0)[ CD ]
Line_76 $$ if (enumIndex == -1)-->Line_77 $$ return null[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_39 $$ if (!(navigationElement instanceof PsiMethod))[ CD ]
Line_51 $$ PsiClass aClass = method.getContainingClass()-->Line_88 $$ PsiExpression constRef = JavaPsiFacade.getElementFactory(manager.getProject()).createExpressionFromText(ref, aClass)[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_65 $$ PsiDocTag beaninfo = doc.findTagByName("beaninfo")[ CD ]
Line_58 $$ method = setters.get(0)-->Line_62 $$ PsiDocComment doc = method.getDocComment()[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_60 $$ if (!PropertyUtil.isSimplePropertySetter(method))[ CD ]
Line_4 $$ if (owner instanceof PsiParameter) -->Line_13 $$ if (method.isConstructor()) [ CD ]
Line_43 $$ if (owner instanceof PsiMethod) -->Line_45 $$ if (!(nav instanceof PsiMethod))[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_26 $$ if (index >= initializers.length)[ CD ]
Line_12 $$ method = (PsiMethod) nav-->Line_47 $$ method = (PsiMethod) nav[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_44 $$ PsiElement nav = owner.getNavigationElement()[ FD ]
Line_34 $$ PsiMethod setter = PropertyUtil.findPropertySetter(method.getContainingClass(), (String) val, false, false)-->Line_35 $$ if (setter == null)[ FD ]
Line_63 $$ if (doc == null)-->Line_64 $$ return null[ CD ]
Line_3 $$ PsiMethod method = null-->Line_54 $$ if (PropertyUtil.isSimplePropertyGetter(method)) [ FD ]
Line_4 $$ if (owner instanceof PsiParameter) -->Line_5 $$ PsiParameter parameter = (PsiParameter) owner[ CD ]
Line_41 $$ method = (PsiMethod) navigationElement-->Line_51 $$ PsiClass aClass = method.getContainingClass()[ FD ]
Line_45 $$ if (!(nav instanceof PsiMethod))-->Line_46 $$ return null[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_25 $$ int index = ((PsiParameterList) parent).getParameterIndex(parameter)[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_68 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() [ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_29 $$ if (!(initializer instanceof PsiLiteralExpression))[ CD ]
Line_3 $$ PsiMethod method = null-->Line_62 $$ PsiDocComment doc = method.getDocComment()[ FD ]
Line_39 $$ if (!(navigationElement instanceof PsiMethod))-->Line_40 $$ return null[ CD ]
Line_94 $$ if (values.isEmpty())-->Line_95 $$ return null[ CD ]
Line_68 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() -->Line_78 $$ data = data.substring(enumIndex)[ FD ]
Line_32 $$ if (!(val instanceof String))-->Line_33 $$ return null[ CD ]
Line_41 $$ method = (PsiMethod) navigationElement-->Line_49 $$ if (method == null)[ FD ]
Line_16 $$ if (annotation == null)-->Line_17 $$ return null[ CD ]
Line_47 $$ method = (PsiMethod) nav-->Line_49 $$ if (method == null)[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_78 $$ data = data.substring(enumIndex)[ CD ]
Line_4 $$ if (owner instanceof PsiParameter) -->Line_7 $$ if (!(scope instanceof PsiMethod))[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_79 $$ int colon = data.indexOf(":")[ CD ]
Line_23 $$ if (!(parent instanceof PsiParameterList))-->Line_24 $$ return null[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_94 $$ if (values.isEmpty())[ CD ]
Line_66 $$ if (beaninfo == null)-->Line_67 $$ return null[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_51 $$ PsiClass aClass = method.getContainingClass()[ CD ]
Line_3 $$ PsiMethod method = null-->Line_13 $$ if (method.isConstructor()) [ FD ]
Line_12 $$ method = (PsiMethod) nav-->Line_58 $$ method = setters.get(0)[ FD ]
Line_41 $$ method = (PsiMethod) navigationElement-->Line_62 $$ PsiDocComment doc = method.getDocComment()[ FD ]
Line_62 $$ PsiDocComment doc = method.getDocComment()-->Line_63 $$ if (doc == null)[ FD ]
Line_41 $$ method = (PsiMethod) navigationElement-->Line_54 $$ if (PropertyUtil.isSimplePropertyGetter(method)) [ FD ]
Line_3 $$ PsiMethod method = null-->Line_55 $$ List<PsiMethod> setters = PropertyUtil.getSetters(aClass, PropertyUtil.getPropertyNameByGetter(method))[ FD ]
Line_25 $$ int index = ((PsiParameterList) parent).getParameterIndex(parameter)-->Line_26 $$ if (index >= initializers.length)[ FD ]
Line_12 $$ method = (PsiMethod) nav-->Line_49 $$ if (method == null)[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_4 $$ if (owner instanceof PsiParameter) [ CD ]
Line_12 $$ method = (PsiMethod) nav-->Line_62 $$ PsiDocComment doc = method.getDocComment()[ FD ]
Line_13 $$ if (method.isConstructor()) -->Line_19 $$ if (!(value instanceof PsiArrayInitializerMemberValue))[ CD ]
Line_54 $$ if (PropertyUtil.isSimplePropertyGetter(method)) -->Line_55 $$ List<PsiMethod> setters = PropertyUtil.getSetters(aClass, PropertyUtil.getPropertyNameByGetter(method))[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_18 $$ PsiAnnotationMemberValue value = annotation.findAttributeValue("value")[ CD ]
Line_68 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() -->Line_79 $$ int colon = data.indexOf(":")[ FD ]
Line_65 $$ PsiDocTag beaninfo = doc.findTagByName("beaninfo")-->Line_68 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() [ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_54 $$ if (PropertyUtil.isSimplePropertyGetter(method)) [ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_81 $$ data = data.substring(0, last)[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_16 $$ if (annotation == null)[ CD ]
Line_3 $$ PsiMethod method = null-->Line_34 $$ PsiMethod setter = PropertyUtil.findPropertySetter(method.getContainingClass(), (String) val, false, false)[ FD ]
Line_12 $$ method = (PsiMethod) nav-->Line_13 $$ if (method.isConstructor()) [ FD ]
Line_56 $$ if (setters.size() != 1)-->Line_57 $$ return null[ CD ]
Line_41 $$ method = (PsiMethod) navigationElement-->Line_58 $$ method = setters.get(0)[ FD ]
Line_4 $$ if (owner instanceof PsiParameter) -->Line_9 $$ PsiElement nav = scope.getNavigationElement()[ CD ]
Line_35 $$ if (setter == null)-->Line_36 $$ return null[ CD ]
Line_68 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() -->Line_80 $$ int last = colon == -1 ? data.length() : data.substring(0, colon).lastIndexOf("\n")[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_97 $$ return new AllowedValues(array, false)[ CD ]
Line_12 $$ method = (PsiMethod) nav-->Line_54 $$ if (PropertyUtil.isSimplePropertyGetter(method)) [ FD ]
Line_3 $$ PsiMethod method = null-->Line_58 $$ method = setters.get(0)[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_76 $$ if (enumIndex == -1)[ CD ]
Line_52 $$ if (aClass == null)-->Line_53 $$ return null[ CD ]
Line_19 $$ if (!(value instanceof PsiArrayInitializerMemberValue))-->Line_20 $$ return null[ CD ]
Line_62 $$ PsiDocComment doc = method.getDocComment()-->Line_65 $$ PsiDocTag beaninfo = doc.findTagByName("beaninfo")[ FD ]
Line_68 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() -->Line_81 $$ data = data.substring(0, last)[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_4 $$ if (owner instanceof PsiParameter) [ FD ]
Line_12 $$ method = (PsiMethod) nav-->Line_34 $$ PsiMethod setter = PropertyUtil.findPropertySetter(method.getContainingClass(), (String) val, false, false)[ FD ]
Line_68 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() -->Line_72 $$ return element.getText()[ CD ]
Line_43 $$ if (owner instanceof PsiMethod) -->Line_44 $$ PsiElement nav = owner.getNavigationElement()[ CD ]
Line_26 $$ if (index >= initializers.length)-->Line_27 $$ return null[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_34 $$ PsiMethod setter = PropertyUtil.findPropertySetter(method.getContainingClass(), (String) val, false, false)[ CD ]
Line_5 $$ PsiParameter parameter = (PsiParameter) owner-->Line_25 $$ int index = ((PsiParameterList) parent).getParameterIndex(parameter)[ FD ]
Line_55 $$ List<PsiMethod> setters = PropertyUtil.getSetters(aClass, PropertyUtil.getPropertyNameByGetter(method))-->Line_58 $$ method = setters.get(0)[ FD ]
Line_68 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() -->Line_72 $$ return element.getText()[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_75 $$ int enumIndex = StringUtil.indexOfSubstringEnd(data, "enum:")[ CD ]
Line_4 $$ if (owner instanceof PsiParameter) -->Line_6 $$ PsiElement scope = parameter.getDeclarationScope()[ CD ]
Line_3 $$ PsiMethod method = null-->Line_41 $$ method = (PsiMethod) navigationElement[ FD ]
Line_47 $$ method = (PsiMethod) nav-->Line_62 $$ PsiDocComment doc = method.getDocComment()[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_63 $$ if (doc == null)[ CD ]
Line_51 $$ PsiClass aClass = method.getContainingClass()-->Line_55 $$ List<PsiMethod> setters = PropertyUtil.getSetters(aClass, PropertyUtil.getPropertyNameByGetter(method))[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_66 $$ if (beaninfo == null)[ CD ]
Line_54 $$ if (PropertyUtil.isSimplePropertyGetter(method)) -->Line_56 $$ if (setters.size() != 1)[ CD ]
Line_68 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() -->Line_75 $$ int enumIndex = StringUtil.indexOfSubstringEnd(data, "enum:")[ FD ]
Line_58 $$ method = setters.get(0)-->Line_60 $$ if (!PropertyUtil.isSimplePropertySetter(method))[ FD ]
Line_5 $$ PsiParameter parameter = (PsiParameter) owner-->Line_22 $$ PsiElement parent = parameter.getParent()[ FD ]
Line_43 $$ if (owner instanceof PsiMethod) -->Line_47 $$ method = (PsiMethod) nav[ CD ]
Line_7 $$ if (!(scope instanceof PsiMethod))-->Line_8 $$ return null[ CD ]
Line_51 $$ PsiClass aClass = method.getContainingClass()-->Line_52 $$ if (aClass == null)[ FD ]
Line_6 $$ PsiElement scope = parameter.getDeclarationScope()-->Line_9 $$ PsiElement nav = scope.getNavigationElement()[ FD ]
Line_3 $$ PsiMethod method = null-->Line_12 $$ method = (PsiMethod) nav[ FD ]
Line_29 $$ if (!(initializer instanceof PsiLiteralExpression))-->Line_30 $$ return null[ CD ]
Line_4 $$ if (owner instanceof PsiParameter) -->Line_10 $$ if (!(nav instanceof PsiMethod))[ CD ]
Line_3 $$ PsiMethod method = null-->Line_60 $$ if (!PropertyUtil.isSimplePropertySetter(method))[ FD ]
Line_49 $$ if (method == null)-->Line_50 $$ return null[ CD ]
Line_65 $$ PsiDocTag beaninfo = doc.findTagByName("beaninfo")-->Line_66 $$ if (beaninfo == null)[ FD ]
Line_47 $$ method = (PsiMethod) nav-->Line_60 $$ if (!PropertyUtil.isSimplePropertySetter(method))[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_49 $$ if (method == null)[ CD ]
Line_3 $$ PsiMethod method = null-->Line_47 $$ method = (PsiMethod) nav[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_52 $$ if (aClass == null)[ CD ]
Line_47 $$ method = (PsiMethod) nav-->Line_55 $$ List<PsiMethod> setters = PropertyUtil.getSetters(aClass, PropertyUtil.getPropertyNameByGetter(method))[ FD ]
Line_12 $$ method = (PsiMethod) nav-->Line_51 $$ PsiClass aClass = method.getContainingClass()[ FD ]
Line_13 $$ if (method.isConstructor()) -->Line_28 $$ PsiAnnotationMemberValue initializer = initializers[index][ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_62 $$ PsiDocComment doc = method.getDocComment()[ CD ]
Line_4 $$ if (owner instanceof PsiParameter) -->Line_12 $$ method = (PsiMethod) nav[ CD ]
Line_41 $$ method = (PsiMethod) navigationElement-->Line_55 $$ List<PsiMethod> setters = PropertyUtil.getSetters(aClass, PropertyUtil.getPropertyNameByGetter(method))[ FD ]
Line_12 $$ method = (PsiMethod) nav-->Line_60 $$ if (!PropertyUtil.isSimplePropertySetter(method))[ FD ]
Line_60 $$ if (!PropertyUtil.isSimplePropertySetter(method))-->Line_61 $$ return null[ CD ]
Line_55 $$ List<PsiMethod> setters = PropertyUtil.getSetters(aClass, PropertyUtil.getPropertyNameByGetter(method))-->Line_56 $$ if (setters.size() != 1)[ FD ]
Line_13 $$ if (method.isConstructor()) -->Line_22 $$ PsiElement parent = parameter.getParent()[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_32 $$ if (!(val instanceof String))[ CD ]
Line_41 $$ method = (PsiMethod) navigationElement-->Line_47 $$ method = (PsiMethod) nav[ FD ]
Line_13 $$ if (method.isConstructor()) -->Line_31 $$ Object val = ((PsiLiteralExpression) initializer).getValue()[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_43 $$ if (owner instanceof PsiMethod) [ FD ]
Line_3 $$ PsiMethod method = null-->Line_51 $$ PsiClass aClass = method.getContainingClass()[ FD ]
Line_47 $$ method = (PsiMethod) nav-->Line_54 $$ if (PropertyUtil.isSimplePropertyGetter(method)) [ FD ]
Line_47 $$ method = (PsiMethod) nav-->Line_58 $$ method = setters.get(0)[ FD ]
Line_13 $$ if (method.isConstructor()) -->Line_21 $$ PsiAnnotationMemberValue[] initializers = ((PsiArrayInitializerMemberValue) value).getInitializers()[ CD ]
Line_47 $$ method = (PsiMethod) nav-->Line_51 $$ PsiClass aClass = method.getContainingClass()[ FD ]
Line_12 $$ method = (PsiMethod) nav-->Line_55 $$ List<PsiMethod> setters = PropertyUtil.getSetters(aClass, PropertyUtil.getPropertyNameByGetter(method))[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_88 $$ PsiExpression constRef = JavaPsiFacade.getElementFactory(manager.getProject()).createExpressionFromText(ref, aClass)[ FD ]
Line_68 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() -->Line_83 $$ for (String line : StringUtil.splitByLines(data)) [ FD ]
Line_4 $$ if (owner instanceof PsiParameter) -->Line_43 $$ if (owner instanceof PsiMethod) [ CD ]
Line_12 $$ method = (PsiMethod) nav-->Line_41 $$ method = (PsiMethod) navigationElement[ FD ]
Line_41 $$ method = (PsiMethod) navigationElement-->Line_60 $$ if (!PropertyUtil.isSimplePropertySetter(method))[ FD ]
Line_13 $$ if (method.isConstructor()) -->Line_35 $$ if (setter == null)[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_96 $$ PsiAnnotationMemberValue[] array = values.toArray(new PsiAnnotationMemberValue[values.size()])[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_3 $$ PsiMethod method = null[ CD ]
Line_10 $$ if (!(nav instanceof PsiMethod))-->Line_11 $$ return null[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_41 $$ method = (PsiMethod) navigationElement[ CD ]
