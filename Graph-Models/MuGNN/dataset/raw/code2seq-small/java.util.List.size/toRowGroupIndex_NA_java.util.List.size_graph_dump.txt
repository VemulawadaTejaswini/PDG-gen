Line_5 $$ for (int index = 0; index < positionsList.size(); index++) -->Line_8 $$ checkState(intPosition == longPosition, "Expected checkpoint position %s, to be an integer", index)[ CD ]
Line_7 $$ int intPosition = (int) longPosition-->Line_9 $$ positions.add(intPosition)[ FD ]
Line_2 $$ private static RowGroupIndex toRowGroupIndex(OrcProto.RowIndexEntry rowIndexEntry) -->Line_11 $$ return new RowGroupIndex(positions.build(), toColumnStatistics(rowIndexEntry.getStatistics(), true))[ CD ]
Line_2 $$ private static RowGroupIndex toRowGroupIndex(OrcProto.RowIndexEntry rowIndexEntry) -->Line_3 $$ List<Long> positionsList = rowIndexEntry.getPositionsList()[ CD ]
Line_3 $$ List<Long> positionsList = rowIndexEntry.getPositionsList()-->Line_5 $$ for (int index = 0; index < positionsList.size(); index++) [ FD ]
Line_5 $$ for (int index = 0; index < positionsList.size(); index++) -->Line_6 $$ long longPosition = positionsList.get(index)[ CD ]
Line_3 $$ List<Long> positionsList = rowIndexEntry.getPositionsList()-->Line_6 $$ long longPosition = positionsList.get(index)[ FD ]
Line_5 $$ for (int index = 0; index < positionsList.size(); index++) -->Line_6 $$ long longPosition = positionsList.get(index)[ FD ]
Line_5 $$ for (int index = 0; index < positionsList.size(); index++) -->Line_9 $$ positions.add(intPosition)[ CD ]
Line_2 $$ private static RowGroupIndex toRowGroupIndex(OrcProto.RowIndexEntry rowIndexEntry) -->Line_5 $$ for (int index = 0; index < positionsList.size(); index++) [ CD ]
Line_4 $$ ImmutableList.Builder<Integer> positions = ImmutableList.builder()-->Line_9 $$ positions.add(intPosition)[ FD ]
Line_4 $$ ImmutableList.Builder<Integer> positions = ImmutableList.builder()-->Line_11 $$ return new RowGroupIndex(positions.build(), toColumnStatistics(rowIndexEntry.getStatistics(), true))[ FD ]
Line_2 $$ private static RowGroupIndex toRowGroupIndex(OrcProto.RowIndexEntry rowIndexEntry) -->Line_4 $$ ImmutableList.Builder<Integer> positions = ImmutableList.builder()[ CD ]
Line_5 $$ for (int index = 0; index < positionsList.size(); index++) -->Line_7 $$ int intPosition = (int) longPosition[ CD ]
Line_5 $$ for (int index = 0; index < positionsList.size(); index++) -->Line_8 $$ checkState(intPosition == longPosition, "Expected checkpoint position %s, to be an integer", index)[ FD ]
Line_2 $$ private static RowGroupIndex toRowGroupIndex(OrcProto.RowIndexEntry rowIndexEntry) -->Line_3 $$ List<Long> positionsList = rowIndexEntry.getPositionsList()[ FD ]
Line_2 $$ private static RowGroupIndex toRowGroupIndex(OrcProto.RowIndexEntry rowIndexEntry) -->Line_11 $$ return new RowGroupIndex(positions.build(), toColumnStatistics(rowIndexEntry.getStatistics(), true))[ FD ]
