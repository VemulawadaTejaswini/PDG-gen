Line_2 $$ public void testNestedCollections() -->Line_10 $$ Map map = bean.getSomeMap()[ CD ]
Line_16 $$ TestBean bean2 = (TestBean) this.beanFactory.getBean("nestedCollectionsBean")-->Line_17 $$ assertEquals(list, bean2.getSomeList())[ FD ]
Line_2 $$ public void testNestedCollections() -->Line_17 $$ assertEquals(list, bean2.getSomeList())[ CD ]
Line_16 $$ TestBean bean2 = (TestBean) this.beanFactory.getBean("nestedCollectionsBean")-->Line_21 $$ assertFalse(set == bean2.getSomeSet())[ FD ]
Line_2 $$ public void testNestedCollections() -->Line_19 $$ assertEquals(map, bean2.getSomeMap())[ CD ]
Line_2 $$ public void testNestedCollections() -->Line_6 $$ assertEquals("foo", list.get(0))[ CD ]
Line_3 $$ TestBean bean = (TestBean) this.beanFactory.getBean("nestedCollectionsBean")-->Line_7 $$ Set set = bean.getSomeSet()[ FD ]
Line_10 $$ Map map = bean.getSomeMap()-->Line_11 $$ assertEquals(1, map.size())[ FD ]
Line_7 $$ Set set = bean.getSomeSet()-->Line_8 $$ assertEquals(1, set.size())[ FD ]
Line_2 $$ public void testNestedCollections() -->Line_5 $$ assertEquals(1, list.size())[ CD ]
Line_2 $$ public void testNestedCollections() -->Line_12 $$ assertTrue(map.get("foo") instanceof Set)[ CD ]
Line_2 $$ public void testNestedCollections() -->Line_22 $$ assertFalse(map == bean2.getSomeMap())[ CD ]
Line_13 $$ Set innerSet = (Set) map.get("foo")-->Line_14 $$ assertEquals(1, innerSet.size())[ FD ]
Line_16 $$ TestBean bean2 = (TestBean) this.beanFactory.getBean("nestedCollectionsBean")-->Line_18 $$ assertEquals(set, bean2.getSomeSet())[ FD ]
Line_2 $$ public void testNestedCollections() -->Line_18 $$ assertEquals(set, bean2.getSomeSet())[ CD ]
Line_10 $$ Map map = bean.getSomeMap()-->Line_19 $$ assertEquals(map, bean2.getSomeMap())[ FD ]
Line_2 $$ public void testNestedCollections() -->Line_3 $$ TestBean bean = (TestBean) this.beanFactory.getBean("nestedCollectionsBean")[ CD ]
Line_16 $$ TestBean bean2 = (TestBean) this.beanFactory.getBean("nestedCollectionsBean")-->Line_19 $$ assertEquals(map, bean2.getSomeMap())[ FD ]
Line_2 $$ public void testNestedCollections() -->Line_8 $$ assertEquals(1, set.size())[ CD ]
Line_2 $$ public void testNestedCollections() -->Line_7 $$ Set set = bean.getSomeSet()[ CD ]
Line_16 $$ TestBean bean2 = (TestBean) this.beanFactory.getBean("nestedCollectionsBean")-->Line_20 $$ assertFalse(list == bean2.getSomeList())[ FD ]
Line_7 $$ Set set = bean.getSomeSet()-->Line_9 $$ assertTrue(set.contains("bar"))[ FD ]
Line_2 $$ public void testNestedCollections() -->Line_15 $$ assertTrue(innerSet.contains("bar"))[ CD ]
Line_4 $$ List list = bean.getSomeList()-->Line_5 $$ assertEquals(1, list.size())[ FD ]
Line_13 $$ Set innerSet = (Set) map.get("foo")-->Line_15 $$ assertTrue(innerSet.contains("bar"))[ FD ]
Line_2 $$ public void testNestedCollections() -->Line_21 $$ assertFalse(set == bean2.getSomeSet())[ CD ]
Line_2 $$ public void testNestedCollections() -->Line_4 $$ List list = bean.getSomeList()[ CD ]
Line_7 $$ Set set = bean.getSomeSet()-->Line_18 $$ assertEquals(set, bean2.getSomeSet())[ FD ]
Line_2 $$ public void testNestedCollections() -->Line_11 $$ assertEquals(1, map.size())[ CD ]
Line_3 $$ TestBean bean = (TestBean) this.beanFactory.getBean("nestedCollectionsBean")-->Line_4 $$ List list = bean.getSomeList()[ FD ]
Line_2 $$ public void testNestedCollections() -->Line_20 $$ assertFalse(list == bean2.getSomeList())[ CD ]
Line_3 $$ TestBean bean = (TestBean) this.beanFactory.getBean("nestedCollectionsBean")-->Line_10 $$ Map map = bean.getSomeMap()[ FD ]
Line_2 $$ public void testNestedCollections() -->Line_14 $$ assertEquals(1, innerSet.size())[ CD ]
Line_2 $$ public void testNestedCollections() -->Line_16 $$ TestBean bean2 = (TestBean) this.beanFactory.getBean("nestedCollectionsBean")[ CD ]
Line_4 $$ List list = bean.getSomeList()-->Line_6 $$ assertEquals("foo", list.get(0))[ FD ]
Line_16 $$ TestBean bean2 = (TestBean) this.beanFactory.getBean("nestedCollectionsBean")-->Line_22 $$ assertFalse(map == bean2.getSomeMap())[ FD ]
Line_10 $$ Map map = bean.getSomeMap()-->Line_13 $$ Set innerSet = (Set) map.get("foo")[ FD ]
Line_4 $$ List list = bean.getSomeList()-->Line_17 $$ assertEquals(list, bean2.getSomeList())[ FD ]
Line_10 $$ Map map = bean.getSomeMap()-->Line_12 $$ assertTrue(map.get("foo") instanceof Set)[ FD ]
Line_2 $$ public void testNestedCollections() -->Line_9 $$ assertTrue(set.contains("bar"))[ CD ]
Line_2 $$ public void testNestedCollections() -->Line_13 $$ Set innerSet = (Set) map.get("foo")[ CD ]
