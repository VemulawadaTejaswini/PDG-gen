Line_3 $$ List<Class<?>> interfaceClasses = new ArrayList()-->Line_6 $$ interfaceClasses.add(CallableStatement.class)[ FD ]
Line_5 $$ if (!CallableStatement.class.isAssignableFrom(returnType)) -->Line_7 $$ if (!PreparedStatement.class.isAssignableFrom(returnType)) [ CD ]
Line_5 $$ if (!CallableStatement.class.isAssignableFrom(returnType)) -->Line_6 $$ interfaceClasses.add(CallableStatement.class)[ CD ]
Line_7 $$ if (!PreparedStatement.class.isAssignableFrom(returnType)) -->Line_8 $$ interfaceClasses.add(PreparedStatement.class)[ CD ]
Line_2 $$ protected Class<?>[] getInterfaces(Class<?> returnType) -->Line_5 $$ if (!CallableStatement.class.isAssignableFrom(returnType)) [ FD ]
Line_2 $$ protected Class<?>[] getInterfaces(Class<?> returnType) -->Line_4 $$ interfaceClasses.add(Statement.class)[ CD ]
Line_2 $$ protected Class<?>[] getInterfaces(Class<?> returnType) -->Line_10 $$ return interfaceClasses.toArray(new Class<?>[interfaceClasses.size()])[ CD ]
Line_2 $$ protected Class<?>[] getInterfaces(Class<?> returnType) -->Line_7 $$ if (!PreparedStatement.class.isAssignableFrom(returnType)) [ FD ]
Line_3 $$ List<Class<?>> interfaceClasses = new ArrayList()-->Line_8 $$ interfaceClasses.add(PreparedStatement.class)[ FD ]
Line_2 $$ protected Class<?>[] getInterfaces(Class<?> returnType) -->Line_5 $$ if (!CallableStatement.class.isAssignableFrom(returnType)) [ CD ]
Line_2 $$ protected Class<?>[] getInterfaces(Class<?> returnType) -->Line_3 $$ List<Class<?>> interfaceClasses = new ArrayList()[ CD ]
Line_3 $$ List<Class<?>> interfaceClasses = new ArrayList()-->Line_4 $$ interfaceClasses.add(Statement.class)[ FD ]
Line_3 $$ List<Class<?>> interfaceClasses = new ArrayList()-->Line_10 $$ return interfaceClasses.toArray(new Class<?>[interfaceClasses.size()])[ FD ]
