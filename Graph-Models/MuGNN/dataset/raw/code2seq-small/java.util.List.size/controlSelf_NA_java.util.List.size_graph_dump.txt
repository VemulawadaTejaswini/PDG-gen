Line_21 $$ if (myQueue.isEmpty()) -->Line_23 $$ SocksAuthenticatorManager.getInstance().unregister(myConnectionSettings)[ CD ]
Line_8 $$ for (Iterator<Cell> iterator = myQueue.iterator(); iterator.hasNext(); ) -->Line_15 $$ if (cell.isEmptyAndOlderThen(oldMoment)) [ CD ]
Line_5 $$ final long oldMoment = System.currentTimeMillis() - EMPTY_CONNECTION_ALLOWED_FOR-->Line_15 $$ if (cell.isEmptyAndOlderThen(oldMoment)) [ FD ]
Line_15 $$ if (cell.isEmptyAndOlderThen(oldMoment)) -->Line_16 $$ SshLogger.debug("shared connection: control self: is empty and old, closing")[ CD ]
Line_21 $$ if (myQueue.isEmpty()) -->Line_22 $$ SshLogger.debug("shared connection: control self: unregister from socks proxy authenticator")[ CD ]
Line_8 $$ for (Iterator<Cell> iterator = myQueue.iterator(); iterator.hasNext(); ) -->Line_9 $$ final Cell cell = iterator.next()[ CD ]
Line_8 $$ for (Iterator<Cell> iterator = myQueue.iterator(); iterator.hasNext(); ) -->Line_12 $$ iterator.remove()[ FD ]
Line_15 $$ if (cell.isEmptyAndOlderThen(oldMoment)) -->Line_17 $$ cell.closeSelf()[ CD ]
Line_8 $$ for (Iterator<Cell> iterator = myQueue.iterator(); iterator.hasNext(); ) -->Line_18 $$ iterator.remove()[ FD ]
Line_8 $$ for (Iterator<Cell> iterator = myQueue.iterator(); iterator.hasNext(); ) -->Line_10 $$ if (cell.isClosed()) [ CD ]
Line_8 $$ for (Iterator<Cell> iterator = myQueue.iterator(); iterator.hasNext(); ) -->Line_9 $$ final Cell cell = iterator.next()[ FD ]
Line_10 $$ if (cell.isClosed()) -->Line_11 $$ SshLogger.debug("shared connection: control self: closed, removing")[ CD ]
Line_10 $$ if (cell.isClosed()) -->Line_12 $$ iterator.remove()[ CD ]
Line_9 $$ final Cell cell = iterator.next()-->Line_10 $$ if (cell.isClosed()) [ FD ]
Line_9 $$ final Cell cell = iterator.next()-->Line_17 $$ cell.closeSelf()[ FD ]
Line_15 $$ if (cell.isEmptyAndOlderThen(oldMoment)) -->Line_18 $$ iterator.remove()[ CD ]
Line_9 $$ final Cell cell = iterator.next()-->Line_15 $$ if (cell.isEmptyAndOlderThen(oldMoment)) [ FD ]
