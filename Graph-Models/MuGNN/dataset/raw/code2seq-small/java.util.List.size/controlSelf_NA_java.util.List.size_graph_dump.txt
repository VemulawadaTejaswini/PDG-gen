Line_8 $$ if (cell.isClosed()) -->Line_10 $$ iterator.remove()[ CD ]
Line_6 $$ for (Iterator<Cell> iterator = myQueue.iterator(); iterator.hasNext(); ) -->Line_16 $$ iterator.remove()[ FD ]
Line_13 $$ if (cell.isEmptyAndOlderThen(oldMoment)) -->Line_16 $$ iterator.remove()[ CD ]
Line_19 $$ if (myQueue.isEmpty()) -->Line_20 $$ SshLogger.debug("shared connection: control self: unregister from socks proxy authenticator")[ CD ]
Line_7 $$ final Cell cell = iterator.next()-->Line_8 $$ if (cell.isClosed()) [ FD ]
Line_13 $$ if (cell.isEmptyAndOlderThen(oldMoment)) -->Line_15 $$ cell.closeSelf()[ CD ]
Line_8 $$ if (cell.isClosed()) -->Line_9 $$ SshLogger.debug("shared connection: control self: closed, removing")[ CD ]
Line_6 $$ for (Iterator<Cell> iterator = myQueue.iterator(); iterator.hasNext(); ) -->Line_7 $$ final Cell cell = iterator.next()[ CD ]
Line_19 $$ if (myQueue.isEmpty()) -->Line_21 $$ SocksAuthenticatorManager.getInstance().unregister(myConnectionSettings)[ CD ]
Line_6 $$ for (Iterator<Cell> iterator = myQueue.iterator(); iterator.hasNext(); ) -->Line_13 $$ if (cell.isEmptyAndOlderThen(oldMoment)) [ CD ]
Line_7 $$ final Cell cell = iterator.next()-->Line_15 $$ cell.closeSelf()[ FD ]
Line_3 $$ final long oldMoment = System.currentTimeMillis() - EMPTY_CONNECTION_ALLOWED_FOR-->Line_13 $$ if (cell.isEmptyAndOlderThen(oldMoment)) [ FD ]
Line_7 $$ final Cell cell = iterator.next()-->Line_13 $$ if (cell.isEmptyAndOlderThen(oldMoment)) [ FD ]
Line_6 $$ for (Iterator<Cell> iterator = myQueue.iterator(); iterator.hasNext(); ) -->Line_7 $$ final Cell cell = iterator.next()[ FD ]
Line_6 $$ for (Iterator<Cell> iterator = myQueue.iterator(); iterator.hasNext(); ) -->Line_8 $$ if (cell.isClosed()) [ CD ]
Line_2 $$ public void controlSelf() -->Line_3 $$ final long oldMoment = System.currentTimeMillis() - EMPTY_CONNECTION_ALLOWED_FOR[ CD ]
Line_13 $$ if (cell.isEmptyAndOlderThen(oldMoment)) -->Line_14 $$ SshLogger.debug("shared connection: control self: is empty and old, closing")[ CD ]
Line_6 $$ for (Iterator<Cell> iterator = myQueue.iterator(); iterator.hasNext(); ) -->Line_10 $$ iterator.remove()[ FD ]
