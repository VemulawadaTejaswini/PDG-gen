Line_7 $$ TreeJavaClassChooserDialog dialog = new TreeJavaClassChooserDialog("hey", getProject(), GlobalSearchScope.projectScope(getProject()), null, aClass, null, false) -->Line_13 $$ return model[ CD ]
Line_2 $$ public void testSubclassModel() throws Exception -->Line_5 $$ PsiClass aClass = JavaPsiFacade.getInstance(getProject()).findClass(CommonClassNames.JAVA_LANG_EXCEPTION, GlobalSearchScope.allScope(getProject()))[ CD ]
Line_2 $$ public void testSubclassModel() throws Exception -->Line_3 $$ myFixture.addClass("class Foo extends Exception [ CD ]
Line_7 $$ TreeJavaClassChooserDialog dialog = new TreeJavaClassChooserDialog("hey", getProject(), GlobalSearchScope.projectScope(getProject()), null, aClass, null, false) -->Line_18 $$ return new JRootPane()[ CD ]
Line_2 $$ public void testSubclassModel() throws Exception -->Line_26 $$ assertEquals(1, results.size())[ CD ]
Line_11 $$ ChooseByNameModel model = super.createChooseByNameModel()-->Line_12 $$ ref.set(model)[ FD ]
Line_2 $$ public void testSubclassModel() throws Exception -->Line_4 $$ myFixture.addClass("class Bar [ CD ]
Line_7 $$ TreeJavaClassChooserDialog dialog = new TreeJavaClassChooserDialog("hey", getProject(), GlobalSearchScope.projectScope(getProject()), null, aClass, null, false) -->Line_21 $$ Disposer.register(getTestRootDisposable(), dialog.getDisposable())[ FD ]
Line_11 $$ ChooseByNameModel model = super.createChooseByNameModel()-->Line_24 $$ model.processNames(processor, false)[ FD ]
Line_2 $$ public void testSubclassModel() throws Exception -->Line_21 $$ Disposer.register(getTestRootDisposable(), dialog.getDisposable())[ CD ]
Line_6 $$ final Ref<ChooseByNameModel> ref = new Ref<ChooseByNameModel>()-->Line_22 $$ ChooseByNameModelEx model = (ChooseByNameModelEx) ref.get()[ FD ]
Line_2 $$ public void testSubclassModel() throws Exception -->Line_24 $$ model.processNames(processor, false)[ CD ]
Line_6 $$ final Ref<ChooseByNameModel> ref = new Ref<ChooseByNameModel>()-->Line_12 $$ ref.set(model)[ FD ]
Line_2 $$ public void testSubclassModel() throws Exception -->Line_6 $$ final Ref<ChooseByNameModel> ref = new Ref<ChooseByNameModel>()[ CD ]
Line_7 $$ TreeJavaClassChooserDialog dialog = new TreeJavaClassChooserDialog("hey", getProject(), GlobalSearchScope.projectScope(getProject()), null, aClass, null, false) -->Line_12 $$ ref.set(model)[ CD ]
Line_2 $$ public void testSubclassModel() throws Exception -->Line_7 $$ TreeJavaClassChooserDialog dialog = new TreeJavaClassChooserDialog("hey", getProject(), GlobalSearchScope.projectScope(getProject()), null, aClass, null, false) [ CD ]
Line_7 $$ TreeJavaClassChooserDialog dialog = new TreeJavaClassChooserDialog("hey", getProject(), GlobalSearchScope.projectScope(getProject()), null, aClass, null, false) -->Line_11 $$ ChooseByNameModel model = super.createChooseByNameModel()[ CD ]
