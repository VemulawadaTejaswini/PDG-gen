Line_2 $$ public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception -->Line_6 $$ String statement1 = "insert into customer (id, name) values (1, 'Sam Brannen')"[ CD ]
Line_4 $$ List<String> statements = new ArrayList<String>()-->Line_9 $$ assertEquals("wrong number of statements", 3, statements.size())[ FD ]
Line_2 $$ public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception -->Line_9 $$ assertEquals("wrong number of statements", 3, statements.size())[ CD ]
Line_4 $$ List<String> statements = new ArrayList<String>()-->Line_12 $$ assertEquals("statement 3 not split correctly", statement3, statements.get(2))[ FD ]
Line_6 $$ String statement1 = "insert into customer (id, name) values (1, 'Sam Brannen')"-->Line_10 $$ assertEquals("statement 1 not split correctly", statement1, statements.get(0))[ FD ]
Line_3 $$ String script = readScript("test-data-with-comments-and-leading-tabs.sql")-->Line_5 $$ splitSqlScript(script, ';', statements)[ FD ]
Line_2 $$ public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception -->Line_5 $$ splitSqlScript(script, ';', statements)[ CD ]
Line_4 $$ List<String> statements = new ArrayList<String>()-->Line_5 $$ splitSqlScript(script, ';', statements)[ FD ]
Line_4 $$ List<String> statements = new ArrayList<String>()-->Line_11 $$ assertEquals("statement 2 not split correctly", statement2, statements.get(1))[ FD ]
Line_2 $$ public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception -->Line_12 $$ assertEquals("statement 3 not split correctly", statement3, statements.get(2))[ CD ]
Line_2 $$ public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception -->Line_7 $$ String statement2 = "insert into orders(id, order_date, customer_id) values (1, '2013-06-08', 1)"[ CD ]
Line_7 $$ String statement2 = "insert into orders(id, order_date, customer_id) values (1, '2013-06-08', 1)"-->Line_11 $$ assertEquals("statement 2 not split correctly", statement2, statements.get(1))[ FD ]
Line_8 $$ String statement3 = "insert into orders(id, order_date, customer_id) values (2, '2013-06-08', 1)"-->Line_12 $$ assertEquals("statement 3 not split correctly", statement3, statements.get(2))[ FD ]
Line_4 $$ List<String> statements = new ArrayList<String>()-->Line_10 $$ assertEquals("statement 1 not split correctly", statement1, statements.get(0))[ FD ]
Line_2 $$ public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception -->Line_8 $$ String statement3 = "insert into orders(id, order_date, customer_id) values (2, '2013-06-08', 1)"[ CD ]
Line_2 $$ public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception -->Line_4 $$ List<String> statements = new ArrayList<String>()[ CD ]
Line_2 $$ public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception -->Line_10 $$ assertEquals("statement 1 not split correctly", statement1, statements.get(0))[ CD ]
Line_2 $$ public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception -->Line_11 $$ assertEquals("statement 2 not split correctly", statement2, statements.get(1))[ CD ]
Line_2 $$ public void readAndSplitScriptContainingCommentsWithLeadingTabs() throws Exception -->Line_3 $$ String script = readScript("test-data-with-comments-and-leading-tabs.sql")[ CD ]
