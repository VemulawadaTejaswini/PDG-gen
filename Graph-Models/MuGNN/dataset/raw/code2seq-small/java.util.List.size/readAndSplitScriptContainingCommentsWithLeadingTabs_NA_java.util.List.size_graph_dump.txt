Line_11 $$ String statement2 = "insert into orders(id, order_date, customer_id) values (1, '2013-06-08', 1)"-->Line_15 $$ assertEquals("statement 2 not split correctly", statement2, statements.get(1))[ FD ]
Line_8 $$ List<String> statements = new ArrayList<String>()-->Line_15 $$ assertEquals("statement 2 not split correctly", statement2, statements.get(1))[ FD ]
Line_7 $$ String script = readScript("test-data-with-comments-and-leading-tabs.sql")-->Line_9 $$ splitSqlScript(script, ';', statements)[ FD ]
Line_8 $$ List<String> statements = new ArrayList<String>()-->Line_16 $$ assertEquals("statement 3 not split correctly", statement3, statements.get(2))[ FD ]
Line_8 $$ List<String> statements = new ArrayList<String>()-->Line_14 $$ assertEquals("statement 1 not split correctly", statement1, statements.get(0))[ FD ]
Line_8 $$ List<String> statements = new ArrayList<String>()-->Line_13 $$ assertEquals("wrong number of statements", 3, statements.size())[ FD ]
Line_8 $$ List<String> statements = new ArrayList<String>()-->Line_9 $$ splitSqlScript(script, ';', statements)[ FD ]
Line_12 $$ String statement3 = "insert into orders(id, order_date, customer_id) values (2, '2013-06-08', 1)"-->Line_16 $$ assertEquals("statement 3 not split correctly", statement3, statements.get(2))[ FD ]
Line_10 $$ String statement1 = "insert into customer (id, name) values (1, 'Sam Brannen')"-->Line_14 $$ assertEquals("statement 1 not split correctly", statement1, statements.get(0))[ FD ]
