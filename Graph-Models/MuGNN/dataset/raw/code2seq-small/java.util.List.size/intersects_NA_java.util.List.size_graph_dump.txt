Line_5 $$ for (int j = 0; j < minClusteringValues.size() && j < maxClusteringValues.size(); j++) -->Line_10 $$ if (j >= start.size() || j >= end.size() || comparator.compareComponent(j, s, f) != 0)[ FD ]
Line_2 $$ public boolean intersects(ClusteringComparator comparator, List<ByteBuffer> minClusteringValues, List<ByteBuffer> maxClusteringValues) -->Line_5 $$ for (int j = 0; j < minClusteringValues.size() && j < maxClusteringValues.size(); j++) [ FD ]
Line_3 $$ if (start.compareTo(comparator, maxClusteringValues) > 0 || end.compareTo(comparator, minClusteringValues) < 0)-->Line_4 $$ return false[ CD ]
Line_2 $$ public boolean intersects(ClusteringComparator comparator, List<ByteBuffer> minClusteringValues, List<ByteBuffer> maxClusteringValues) -->Line_3 $$ if (start.compareTo(comparator, maxClusteringValues) > 0 || end.compareTo(comparator, minClusteringValues) < 0)[ CD ]
Line_8 $$ if (j > 0 && (j < end.size() && comparator.compareComponent(j, f, minClusteringValues.get(j)) < 0 || j < start.size() && comparator.compareComponent(j, s, maxClusteringValues.get(j)) > 0))-->Line_9 $$ return false[ CD ]
Line_2 $$ public boolean intersects(ClusteringComparator comparator, List<ByteBuffer> minClusteringValues, List<ByteBuffer> maxClusteringValues) -->Line_8 $$ if (j > 0 && (j < end.size() && comparator.compareComponent(j, f, minClusteringValues.get(j)) < 0 || j < start.size() && comparator.compareComponent(j, s, maxClusteringValues.get(j)) > 0))[ FD ]
Line_5 $$ for (int j = 0; j < minClusteringValues.size() && j < maxClusteringValues.size(); j++) -->Line_6 $$ ByteBuffer s = j < start.size() ? start.get(j) : null[ FD ]
Line_2 $$ public boolean intersects(ClusteringComparator comparator, List<ByteBuffer> minClusteringValues, List<ByteBuffer> maxClusteringValues) -->Line_13 $$ return true[ CD ]
Line_5 $$ for (int j = 0; j < minClusteringValues.size() && j < maxClusteringValues.size(); j++) -->Line_7 $$ ByteBuffer f = j < end.size() ? end.get(j) : null[ FD ]
Line_6 $$ ByteBuffer s = j < start.size() ? start.get(j) : null-->Line_8 $$ if (j > 0 && (j < end.size() && comparator.compareComponent(j, f, minClusteringValues.get(j)) < 0 || j < start.size() && comparator.compareComponent(j, s, maxClusteringValues.get(j)) > 0))[ FD ]
Line_7 $$ ByteBuffer f = j < end.size() ? end.get(j) : null-->Line_10 $$ if (j >= start.size() || j >= end.size() || comparator.compareComponent(j, s, f) != 0)[ FD ]
Line_6 $$ ByteBuffer s = j < start.size() ? start.get(j) : null-->Line_10 $$ if (j >= start.size() || j >= end.size() || comparator.compareComponent(j, s, f) != 0)[ FD ]
Line_2 $$ public boolean intersects(ClusteringComparator comparator, List<ByteBuffer> minClusteringValues, List<ByteBuffer> maxClusteringValues) -->Line_5 $$ for (int j = 0; j < minClusteringValues.size() && j < maxClusteringValues.size(); j++) [ CD ]
Line_7 $$ ByteBuffer f = j < end.size() ? end.get(j) : null-->Line_8 $$ if (j > 0 && (j < end.size() && comparator.compareComponent(j, f, minClusteringValues.get(j)) < 0 || j < start.size() && comparator.compareComponent(j, s, maxClusteringValues.get(j)) > 0))[ FD ]
Line_5 $$ for (int j = 0; j < minClusteringValues.size() && j < maxClusteringValues.size(); j++) -->Line_7 $$ ByteBuffer f = j < end.size() ? end.get(j) : null[ CD ]
Line_5 $$ for (int j = 0; j < minClusteringValues.size() && j < maxClusteringValues.size(); j++) -->Line_8 $$ if (j > 0 && (j < end.size() && comparator.compareComponent(j, f, minClusteringValues.get(j)) < 0 || j < start.size() && comparator.compareComponent(j, s, maxClusteringValues.get(j)) > 0))[ FD ]
Line_5 $$ for (int j = 0; j < minClusteringValues.size() && j < maxClusteringValues.size(); j++) -->Line_8 $$ if (j > 0 && (j < end.size() && comparator.compareComponent(j, f, minClusteringValues.get(j)) < 0 || j < start.size() && comparator.compareComponent(j, s, maxClusteringValues.get(j)) > 0))[ CD ]
Line_5 $$ for (int j = 0; j < minClusteringValues.size() && j < maxClusteringValues.size(); j++) -->Line_10 $$ if (j >= start.size() || j >= end.size() || comparator.compareComponent(j, s, f) != 0)[ CD ]
Line_2 $$ public boolean intersects(ClusteringComparator comparator, List<ByteBuffer> minClusteringValues, List<ByteBuffer> maxClusteringValues) -->Line_10 $$ if (j >= start.size() || j >= end.size() || comparator.compareComponent(j, s, f) != 0)[ FD ]
Line_2 $$ public boolean intersects(ClusteringComparator comparator, List<ByteBuffer> minClusteringValues, List<ByteBuffer> maxClusteringValues) -->Line_3 $$ if (start.compareTo(comparator, maxClusteringValues) > 0 || end.compareTo(comparator, minClusteringValues) < 0)[ FD ]
Line_5 $$ for (int j = 0; j < minClusteringValues.size() && j < maxClusteringValues.size(); j++) -->Line_6 $$ ByteBuffer s = j < start.size() ? start.get(j) : null[ CD ]
