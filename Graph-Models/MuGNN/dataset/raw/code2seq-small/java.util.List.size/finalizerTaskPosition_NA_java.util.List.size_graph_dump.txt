Line_10 $$ List<Integer> dependsOnTaskIndexes = CollectionUtils.collect(dependsOnTasks, new Transformer<Integer, TaskInfo>() -->Line_13 $$ return Iterables.indexOf(nodeQueue, new Predicate<TaskInfoInVisitingSegment>() [ CD ]
Line_2 $$ private int finalizerTaskPosition(TaskInfo finalizer, final List<TaskInfoInVisitingSegment> nodeQueue) -->Line_13 $$ return Iterables.indexOf(nodeQueue, new Predicate<TaskInfoInVisitingSegment>() [ FD ]
Line_2 $$ private int finalizerTaskPosition(TaskInfo finalizer, final List<TaskInfoInVisitingSegment> nodeQueue) -->Line_7 $$ dependsOnTasks.addAll(finalizer.getDependencySuccessors())[ CD ]
Line_6 $$ ArrayList<TaskInfo> dependsOnTasks = new ArrayList<TaskInfo>()-->Line_7 $$ dependsOnTasks.addAll(finalizer.getDependencySuccessors())[ FD ]
Line_10 $$ List<Integer> dependsOnTaskIndexes = CollectionUtils.collect(dependsOnTasks, new Transformer<Integer, TaskInfo>() -->Line_16 $$ return taskInfoInVisitingSegment.taskInfo.equals(dependsOnTask)[ FD ]
Line_3 $$ if (nodeQueue.size() == 0) -->Line_4 $$ return 0[ CD ]
Line_6 $$ ArrayList<TaskInfo> dependsOnTasks = new ArrayList<TaskInfo>()-->Line_10 $$ List<Integer> dependsOnTaskIndexes = CollectionUtils.collect(dependsOnTasks, new Transformer<Integer, TaskInfo>() [ FD ]
Line_2 $$ private int finalizerTaskPosition(TaskInfo finalizer, final List<TaskInfoInVisitingSegment> nodeQueue) -->Line_3 $$ if (nodeQueue.size() == 0) [ CD ]
Line_13 $$ return Iterables.indexOf(nodeQueue, new Predicate<TaskInfoInVisitingSegment>() -->Line_16 $$ return taskInfoInVisitingSegment.taskInfo.equals(dependsOnTask)[ CD ]
Line_2 $$ private int finalizerTaskPosition(TaskInfo finalizer, final List<TaskInfoInVisitingSegment> nodeQueue) -->Line_9 $$ dependsOnTasks.addAll(finalizer.getShouldSuccessors())[ CD ]
Line_2 $$ private int finalizerTaskPosition(TaskInfo finalizer, final List<TaskInfoInVisitingSegment> nodeQueue) -->Line_9 $$ dependsOnTasks.addAll(finalizer.getShouldSuccessors())[ FD ]
Line_2 $$ private int finalizerTaskPosition(TaskInfo finalizer, final List<TaskInfoInVisitingSegment> nodeQueue) -->Line_8 $$ dependsOnTasks.addAll(finalizer.getMustSuccessors())[ CD ]
Line_2 $$ private int finalizerTaskPosition(TaskInfo finalizer, final List<TaskInfoInVisitingSegment> nodeQueue) -->Line_10 $$ List<Integer> dependsOnTaskIndexes = CollectionUtils.collect(dependsOnTasks, new Transformer<Integer, TaskInfo>() [ CD ]
Line_2 $$ private int finalizerTaskPosition(TaskInfo finalizer, final List<TaskInfoInVisitingSegment> nodeQueue) -->Line_7 $$ dependsOnTasks.addAll(finalizer.getDependencySuccessors())[ FD ]
Line_2 $$ private int finalizerTaskPosition(TaskInfo finalizer, final List<TaskInfoInVisitingSegment> nodeQueue) -->Line_6 $$ ArrayList<TaskInfo> dependsOnTasks = new ArrayList<TaskInfo>()[ CD ]
Line_2 $$ private int finalizerTaskPosition(TaskInfo finalizer, final List<TaskInfoInVisitingSegment> nodeQueue) -->Line_21 $$ return Collections.max(dependsOnTaskIndexes) + 1[ CD ]
Line_2 $$ private int finalizerTaskPosition(TaskInfo finalizer, final List<TaskInfoInVisitingSegment> nodeQueue) -->Line_8 $$ dependsOnTasks.addAll(finalizer.getMustSuccessors())[ FD ]
Line_10 $$ List<Integer> dependsOnTaskIndexes = CollectionUtils.collect(dependsOnTasks, new Transformer<Integer, TaskInfo>() -->Line_21 $$ return Collections.max(dependsOnTaskIndexes) + 1[ FD ]
Line_6 $$ ArrayList<TaskInfo> dependsOnTasks = new ArrayList<TaskInfo>()-->Line_8 $$ dependsOnTasks.addAll(finalizer.getMustSuccessors())[ FD ]
Line_6 $$ ArrayList<TaskInfo> dependsOnTasks = new ArrayList<TaskInfo>()-->Line_9 $$ dependsOnTasks.addAll(finalizer.getShouldSuccessors())[ FD ]
Line_2 $$ private int finalizerTaskPosition(TaskInfo finalizer, final List<TaskInfoInVisitingSegment> nodeQueue) -->Line_3 $$ if (nodeQueue.size() == 0) [ FD ]
