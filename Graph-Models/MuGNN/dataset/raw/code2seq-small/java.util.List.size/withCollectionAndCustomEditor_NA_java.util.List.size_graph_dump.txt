Line_22 $$ SAXReader reader = new SAXReader()-->Line_23 $$ Document document = reader.read(new StringReader(output))[ FD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_17 $$ this.tag.setItems(floats)[ CD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_19 $$ assertEquals(Tag.SKIP_BODY, result)[ CD ]
Line_6 $$ BeanPropertyBindingResult errors = new BeanPropertyBindingResult(target, COMMAND_NAME)-->Line_7 $$ errors.getPropertyAccessor().registerCustomEditor(Float.class, propertyEditor)[ FD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_18 $$ int result = this.tag.doStartTag()[ CD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_9 $$ getPageContext().setAttribute(SelectTag.LIST_VALUE_PAGE_ATTRIBUTE, new BindStatus(getRequestContext(), "testBean.myFloat", false))[ CD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_25 $$ List children = rootElement.elements()[ CD ]
Line_27 $$ Element element = (Element) rootElement.selectSingleNode("option[text() = '12.34f']")-->Line_34 $$ assertNull("No id rendered", element.attribute("id"))[ FD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_13 $$ floats.add(new Float("12.32"))[ CD ]
Line_24 $$ Element rootElement = document.getRootElement()-->Line_27 $$ Element element = (Element) rootElement.selectSingleNode("option[text() = '12.34f']")[ FD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_16 $$ floats.add(new Float("12.35"))[ CD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_10 $$ List<Float> floats = new ArrayList<Float>()[ CD ]
Line_27 $$ Element element = (Element) rootElement.selectSingleNode("option[text() = '12.34f']")-->Line_28 $$ assertNotNull("Option node should not be null", element)[ FD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_24 $$ Element rootElement = document.getRootElement()[ CD ]
Line_10 $$ List<Float> floats = new ArrayList<Float>()-->Line_11 $$ floats.add(new Float("12.30"))[ FD ]
Line_27 $$ Element element = (Element) rootElement.selectSingleNode("option[text() = '12.34f']")-->Line_33 $$ assertNull("12.35 node incorrectly selected", element.attribute("selected"))[ FD ]
Line_23 $$ Document document = reader.read(new StringReader(output))-->Line_24 $$ Element rootElement = document.getRootElement()[ FD ]
Line_24 $$ Element rootElement = document.getRootElement()-->Line_25 $$ List children = rootElement.elements()[ FD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_14 $$ floats.add(new Float("12.33"))[ CD ]
Line_10 $$ List<Float> floats = new ArrayList<Float>()-->Line_16 $$ floats.add(new Float("12.35"))[ FD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_3 $$ PropertyEditor propertyEditor = new SimpleFloatEditor()[ CD ]
Line_31 $$ element = (Element) rootElement.selectSingleNode("option[text() = '12.35f']")-->Line_32 $$ assertNotNull("Option node should not be null", element)[ FD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_32 $$ assertNotNull("Option node should not be null", element)[ CD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_26 $$ assertEquals("Incorrect number of children", 6, children.size())[ CD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_31 $$ element = (Element) rootElement.selectSingleNode("option[text() = '12.35f']")[ CD ]
Line_4 $$ TestBean target = new TestBean()-->Line_5 $$ target.setMyFloat(new Float("12.34"))[ FD ]
Line_20 $$ String output = getOutput()-->Line_21 $$ output = "<doc>" + output + "</doc>"[ FD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_7 $$ errors.getPropertyAccessor().registerCustomEditor(Float.class, propertyEditor)[ CD ]
Line_10 $$ List<Float> floats = new ArrayList<Float>()-->Line_14 $$ floats.add(new Float("12.33"))[ FD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_20 $$ String output = getOutput()[ CD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_30 $$ assertNull("No id rendered", element.attribute("id"))[ CD ]
Line_27 $$ Element element = (Element) rootElement.selectSingleNode("option[text() = '12.34f']")-->Line_31 $$ element = (Element) rootElement.selectSingleNode("option[text() = '12.35f']")[ FD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_12 $$ floats.add(new Float("12.31"))[ CD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_4 $$ TestBean target = new TestBean()[ CD ]
Line_3 $$ PropertyEditor propertyEditor = new SimpleFloatEditor()-->Line_7 $$ errors.getPropertyAccessor().registerCustomEditor(Float.class, propertyEditor)[ FD ]
Line_24 $$ Element rootElement = document.getRootElement()-->Line_31 $$ element = (Element) rootElement.selectSingleNode("option[text() = '12.35f']")[ FD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_6 $$ BeanPropertyBindingResult errors = new BeanPropertyBindingResult(target, COMMAND_NAME)[ CD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_28 $$ assertNotNull("Option node should not be null", element)[ CD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_21 $$ output = "<doc>" + output + "</doc>"[ CD ]
Line_27 $$ Element element = (Element) rootElement.selectSingleNode("option[text() = '12.34f']")-->Line_32 $$ assertNotNull("Option node should not be null", element)[ FD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_29 $$ assertEquals("12.34 node not selected", "selected", element.attribute("selected").getValue())[ CD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_27 $$ Element element = (Element) rootElement.selectSingleNode("option[text() = '12.34f']")[ CD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_33 $$ assertNull("12.35 node incorrectly selected", element.attribute("selected"))[ CD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_22 $$ SAXReader reader = new SAXReader()[ CD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_15 $$ floats.add(new Float("12.34"))[ CD ]
Line_31 $$ element = (Element) rootElement.selectSingleNode("option[text() = '12.35f']")-->Line_33 $$ assertNull("12.35 node incorrectly selected", element.attribute("selected"))[ FD ]
Line_6 $$ BeanPropertyBindingResult errors = new BeanPropertyBindingResult(target, COMMAND_NAME)-->Line_8 $$ exposeBindingResult(errors)[ FD ]
Line_27 $$ Element element = (Element) rootElement.selectSingleNode("option[text() = '12.34f']")-->Line_29 $$ assertEquals("12.34 node not selected", "selected", element.attribute("selected").getValue())[ FD ]
Line_27 $$ Element element = (Element) rootElement.selectSingleNode("option[text() = '12.34f']")-->Line_30 $$ assertNull("No id rendered", element.attribute("id"))[ FD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_34 $$ assertNull("No id rendered", element.attribute("id"))[ CD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_11 $$ floats.add(new Float("12.30"))[ CD ]
Line_18 $$ int result = this.tag.doStartTag()-->Line_19 $$ assertEquals(Tag.SKIP_BODY, result)[ FD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_8 $$ exposeBindingResult(errors)[ CD ]
Line_10 $$ List<Float> floats = new ArrayList<Float>()-->Line_17 $$ this.tag.setItems(floats)[ FD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_23 $$ Document document = reader.read(new StringReader(output))[ CD ]
Line_10 $$ List<Float> floats = new ArrayList<Float>()-->Line_15 $$ floats.add(new Float("12.34"))[ FD ]
Line_31 $$ element = (Element) rootElement.selectSingleNode("option[text() = '12.35f']")-->Line_34 $$ assertNull("No id rendered", element.attribute("id"))[ FD ]
Line_2 $$ public void withCollectionAndCustomEditor() throws Exception -->Line_5 $$ target.setMyFloat(new Float("12.34"))[ CD ]
Line_25 $$ List children = rootElement.elements()-->Line_26 $$ assertEquals("Incorrect number of children", 6, children.size())[ FD ]
Line_10 $$ List<Float> floats = new ArrayList<Float>()-->Line_12 $$ floats.add(new Float("12.31"))[ FD ]
Line_10 $$ List<Float> floats = new ArrayList<Float>()-->Line_13 $$ floats.add(new Float("12.32"))[ FD ]
