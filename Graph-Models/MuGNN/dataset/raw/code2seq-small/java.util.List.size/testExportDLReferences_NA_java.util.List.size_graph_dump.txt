Line_12 $$ TestReaderWriter testReaderWriter = (TestReaderWriter) _portletDataContextExport.getZipWriter()-->Line_13 $$ List<String> entries = testReaderWriter.getEntries()[ FD ]
Line_12 $$ TestReaderWriter testReaderWriter = (TestReaderWriter) _portletDataContextExport.getZipWriter()-->Line_17 $$ for (String entry : testReaderWriter.getEntries()) [ FD ]
Line_15 $$ List<String> binaryEntries = testReaderWriter.getBinaryEntries()-->Line_16 $$ Assert.assertEquals(binaryEntries.size(), entries.size())[ FD ]
Line_6 $$ String content = replaceParameters(getContent("dl_references.txt"), _fileEntry)-->Line_10 $$ Assert.assertFalse(content.contains(url))[ FD ]
Line_13 $$ List<String> entries = testReaderWriter.getEntries()-->Line_16 $$ Assert.assertEquals(binaryEntries.size(), entries.size())[ FD ]
Line_8 $$ content = ExportImportHelperUtil.replaceExportContentReferences(_portletDataContextExport, _referrerStagedModel, content, true)-->Line_18 $$ Assert.assertTrue(content.contains("[$dl-reference=" + entry + "$]"))[ FD ]
Line_6 $$ String content = replaceParameters(getContent("dl_references.txt"), _fileEntry)-->Line_18 $$ Assert.assertTrue(content.contains("[$dl-reference=" + entry + "$]"))[ FD ]
Line_6 $$ String content = replaceParameters(getContent("dl_references.txt"), _fileEntry)-->Line_7 $$ List<String> urls = getURLs(content)[ FD ]
Line_13 $$ List<String> entries = testReaderWriter.getEntries()-->Line_14 $$ Assert.assertEquals(entries.size(), 1)[ FD ]
Line_8 $$ content = ExportImportHelperUtil.replaceExportContentReferences(_portletDataContextExport, _referrerStagedModel, content, true)-->Line_10 $$ Assert.assertFalse(content.contains(url))[ FD ]
Line_12 $$ TestReaderWriter testReaderWriter = (TestReaderWriter) _portletDataContextExport.getZipWriter()-->Line_15 $$ List<String> binaryEntries = testReaderWriter.getBinaryEntries()[ FD ]
Line_6 $$ String content = replaceParameters(getContent("dl_references.txt"), _fileEntry)-->Line_8 $$ content = ExportImportHelperUtil.replaceExportContentReferences(_portletDataContextExport, _referrerStagedModel, content, true)[ FD ]
Line_9 $$ for (String url : urls) -->Line_10 $$ Assert.assertFalse(content.contains(url))[ FD ]
