Line_5 $$ List<String> command = new ArrayList<String>()-->Line_7 $$ command.addAll(Arrays.asList(containerExecutorExe, runAsUser, user, Integer.toString(Commands.INITIALIZE_CONTAINER.getValue()), appId, nmPrivateContainerTokensPath.toUri().getPath().toString(), StringUtils.join(",", localDirs), StringUtils.join(",", logDirs)))[ FD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_13 $$ String javaLibPath = System.getProperty("java.library.path")[ CD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_26 $$ String[] commandArray = command.toArray(new String[command.size()])[ CD ]
Line_5 $$ List<String> command = new ArrayList<String>()-->Line_11 $$ command.add("-classpath")[ FD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_12 $$ command.add(System.getProperty("java.class.path"))[ CD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_3 $$ verifyUsernamePattern(user)[ FD ]
Line_26 $$ String[] commandArray = command.toArray(new String[command.size()])-->Line_29 $$ LOG.debug("initApplication: " + Arrays.toString(commandArray))[ FD ]
Line_8 $$ File jvm = new File(new File(System.getProperty("java.home"), "bin"), "java")-->Line_10 $$ command.add(jvm.toString())[ FD ]
Line_27 $$ ShellCommandExecutor shExec = new ShellCommandExecutor(commandArray)-->Line_37 $$ int exitCode = shExec.getExitCode()[ FD ]
Line_5 $$ List<String> command = new ArrayList<String>()-->Line_26 $$ String[] commandArray = command.toArray(new String[command.size()])[ FD ]
Line_5 $$ List<String> command = new ArrayList<String>()-->Line_12 $$ command.add(System.getProperty("java.class.path"))[ FD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_4 $$ String runAsUser = getRunAsUser(user)[ CD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_8 $$ File jvm = new File(new File(System.getProperty("java.home"), "bin"), "java")[ CD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_21 $$ command.add(nmAddr.getHostName())[ CD ]
Line_5 $$ List<String> command = new ArrayList<String>()-->Line_22 $$ command.add(Integer.toString(nmAddr.getPort()))[ FD ]
Line_23 $$ for (String dir : localDirs) -->Line_24 $$ command.add(dir)[ FD ]
Line_33 $$ if (LOG.isDebugEnabled()) -->Line_34 $$ logOutput(shExec.getOutput())[ CD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_6 $$ addSchedPriorityCommand(command)[ CD ]
Line_13 $$ String javaLibPath = System.getProperty("java.library.path")-->Line_14 $$ if (javaLibPath != null) [ FD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_28 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_27 $$ ShellCommandExecutor shExec = new ShellCommandExecutor(commandArray)-->Line_40 $$ throw new IOException("Application " + appId + " initialization failed" + " (exitCode=" + exitCode + ") with output: " + shExec.getOutput(), e)[ FD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_20 $$ command.add(locId)[ CD ]
Line_14 $$ if (javaLibPath != null) -->Line_15 $$ command.add("-Djava.library.path=" + javaLibPath)[ CD ]
Line_5 $$ List<String> command = new ArrayList<String>()-->Line_21 $$ command.add(nmAddr.getHostName())[ FD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_27 $$ ShellCommandExecutor shExec = new ShellCommandExecutor(commandArray)[ CD ]
Line_5 $$ List<String> command = new ArrayList<String>()-->Line_6 $$ addSchedPriorityCommand(command)[ FD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_11 $$ command.add("-classpath")[ CD ]
Line_5 $$ List<String> command = new ArrayList<String>()-->Line_18 $$ command.add(user)[ FD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_18 $$ command.add(user)[ FD ]
Line_5 $$ List<String> command = new ArrayList<String>()-->Line_10 $$ command.add(jvm.toString())[ FD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_5 $$ List<String> command = new ArrayList<String>()[ CD ]
Line_5 $$ List<String> command = new ArrayList<String>()-->Line_19 $$ command.add(appId)[ FD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_20 $$ command.add(locId)[ FD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_10 $$ command.add(jvm.toString())[ CD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_19 $$ command.add(appId)[ FD ]
Line_4 $$ String runAsUser = getRunAsUser(user)-->Line_7 $$ command.addAll(Arrays.asList(containerExecutorExe, runAsUser, user, Integer.toString(Commands.INITIALIZE_CONTAINER.getValue()), appId, nmPrivateContainerTokensPath.toUri().getPath().toString(), StringUtils.join(",", localDirs), StringUtils.join(",", logDirs)))[ FD ]
Line_5 $$ List<String> command = new ArrayList<String>()-->Line_17 $$ command.add(ContainerLocalizer.class.getName())[ FD ]
Line_27 $$ ShellCommandExecutor shExec = new ShellCommandExecutor(commandArray)-->Line_32 $$ shExec.execute()[ FD ]
Line_5 $$ List<String> command = new ArrayList<String>()-->Line_20 $$ command.add(locId)[ FD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_22 $$ command.add(Integer.toString(nmAddr.getPort()))[ FD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_7 $$ command.addAll(Arrays.asList(containerExecutorExe, runAsUser, user, Integer.toString(Commands.INITIALIZE_CONTAINER.getValue()), appId, nmPrivateContainerTokensPath.toUri().getPath().toString(), StringUtils.join(",", localDirs), StringUtils.join(",", logDirs)))[ CD ]
Line_5 $$ List<String> command = new ArrayList<String>()-->Line_15 $$ command.add("-Djava.library.path=" + javaLibPath)[ FD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_3 $$ verifyUsernamePattern(user)[ CD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_18 $$ command.add(user)[ CD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_19 $$ command.add(appId)[ CD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_21 $$ command.add(nmAddr.getHostName())[ FD ]
Line_27 $$ ShellCommandExecutor shExec = new ShellCommandExecutor(commandArray)-->Line_39 $$ logOutput(shExec.getOutput())[ FD ]
Line_27 $$ ShellCommandExecutor shExec = new ShellCommandExecutor(commandArray)-->Line_34 $$ logOutput(shExec.getOutput())[ FD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_17 $$ command.add(ContainerLocalizer.class.getName())[ CD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_4 $$ String runAsUser = getRunAsUser(user)[ FD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_22 $$ command.add(Integer.toString(nmAddr.getPort()))[ CD ]
Line_28 $$ if (LOG.isDebugEnabled()) -->Line_29 $$ LOG.debug("initApplication: " + Arrays.toString(commandArray))[ CD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_14 $$ if (javaLibPath != null) [ CD ]
Line_5 $$ List<String> command = new ArrayList<String>()-->Line_24 $$ command.add(dir)[ FD ]
Line_2 $$ public void startLocalizer(Path nmPrivateContainerTokensPath, InetSocketAddress nmAddr, String user, String appId, String locId, List<String> localDirs, List<String> logDirs) throws IOException, InterruptedException -->Line_7 $$ command.addAll(Arrays.asList(containerExecutorExe, runAsUser, user, Integer.toString(Commands.INITIALIZE_CONTAINER.getValue()), appId, nmPrivateContainerTokensPath.toUri().getPath().toString(), StringUtils.join(",", localDirs), StringUtils.join(",", logDirs)))[ FD ]
