Line_15 $$ List salespersons = session.createCriteria(Salesperson.class).setFetchMode("orders", FetchMode.JOIN).list()-->Line_17 $$ assertEquals("Incorrect order count", 1, ((Salesperson) salespersons.get(0)).getOrders().size())[ FD ]
Line_10 $$ Session session = openSession()-->Line_11 $$ session.enableFilter("region").setParameter("region", "APAC")[ FD ]
Line_10 $$ Session session = openSession()-->Line_12 $$ session.enableFilter("fulfilledOrders").setParameter("asOfDate", testData.lastMonth.getTime())[ FD ]
Line_15 $$ List salespersons = session.createCriteria(Salesperson.class).setFetchMode("orders", FetchMode.JOIN).list()-->Line_16 $$ assertEquals("Incorrect salesperson count", 1, salespersons.size())[ FD ]
Line_10 $$ Session session = openSession()-->Line_21 $$ session.close()[ FD ]
Line_19 $$ List products = session.createCriteria(Product.class).add(Restrictions.eq("stockNumber", 124)).list()-->Line_20 $$ assertEquals("Incorrect product count", 1, products.size())[ FD ]
Line_10 $$ Session session = openSession()-->Line_15 $$ List salespersons = session.createCriteria(Salesperson.class).setFetchMode("orders", FetchMode.JOIN).list()[ FD ]
Line_8 $$ TestData testData = new TestData()-->Line_9 $$ testData.prepare()[ FD ]
Line_10 $$ Session session = openSession()-->Line_19 $$ List products = session.createCriteria(Product.class).add(Restrictions.eq("stockNumber", 124)).list()[ FD ]
Line_10 $$ Session session = openSession()-->Line_13 $$ session.enableFilter("effectiveDate").setParameter("asOfDate", testData.lastMonth.getTime())[ FD ]
Line_8 $$ TestData testData = new TestData()-->Line_22 $$ testData.release()[ FD ]
