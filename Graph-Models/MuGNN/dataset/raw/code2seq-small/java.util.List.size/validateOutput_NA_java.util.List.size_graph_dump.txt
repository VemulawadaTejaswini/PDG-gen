Line_2 $$ private void validateOutput(String output, boolean selected) throws DocumentException -->Line_7 $$ assertEquals("country", rootElement.attribute("name").getValue())[ CD ]
Line_2 $$ private void validateOutput(String output, boolean selected) throws DocumentException -->Line_6 $$ assertEquals("select", rootElement.getName())[ CD ]
Line_2 $$ private void validateOutput(String output, boolean selected) throws DocumentException -->Line_12 $$ if (selected) [ CD ]
Line_12 $$ if (selected) -->Line_13 $$ assertTrue(selectedAttr != null && "selected".equals(selectedAttr.getValue()))[ CD ]
Line_12 $$ if (selected) -->Line_15 $$ assertNull(selectedAttr)[ CD ]
Line_11 $$ Attribute selectedAttr = e.attribute("selected")-->Line_15 $$ assertNull(selectedAttr)[ FD ]
Line_5 $$ Element rootElement = document.getRootElement()-->Line_6 $$ assertEquals("select", rootElement.getName())[ FD ]
Line_11 $$ Attribute selectedAttr = e.attribute("selected")-->Line_13 $$ assertTrue(selectedAttr != null && "selected".equals(selectedAttr.getValue()))[ FD ]
Line_5 $$ Element rootElement = document.getRootElement()-->Line_8 $$ List children = rootElement.elements()[ FD ]
Line_5 $$ Element rootElement = document.getRootElement()-->Line_10 $$ Element e = (Element) rootElement.selectSingleNode("option[@value = 'UK']")[ FD ]
Line_2 $$ private void validateOutput(String output, boolean selected) throws DocumentException -->Line_5 $$ Element rootElement = document.getRootElement()[ CD ]
Line_2 $$ private void validateOutput(String output, boolean selected) throws DocumentException -->Line_10 $$ Element e = (Element) rootElement.selectSingleNode("option[@value = 'UK']")[ CD ]
Line_2 $$ private void validateOutput(String output, boolean selected) throws DocumentException -->Line_4 $$ Document document = reader.read(new StringReader(output))[ CD ]
Line_5 $$ Element rootElement = document.getRootElement()-->Line_7 $$ assertEquals("country", rootElement.attribute("name").getValue())[ FD ]
Line_2 $$ private void validateOutput(String output, boolean selected) throws DocumentException -->Line_3 $$ SAXReader reader = new SAXReader()[ CD ]
Line_3 $$ SAXReader reader = new SAXReader()-->Line_4 $$ Document document = reader.read(new StringReader(output))[ FD ]
Line_2 $$ private void validateOutput(String output, boolean selected) throws DocumentException -->Line_8 $$ List children = rootElement.elements()[ CD ]
Line_2 $$ private void validateOutput(String output, boolean selected) throws DocumentException -->Line_9 $$ assertEquals("Incorrect number of children", 4, children.size())[ CD ]
Line_8 $$ List children = rootElement.elements()-->Line_9 $$ assertEquals("Incorrect number of children", 4, children.size())[ FD ]
Line_10 $$ Element e = (Element) rootElement.selectSingleNode("option[@value = 'UK']")-->Line_11 $$ Attribute selectedAttr = e.attribute("selected")[ FD ]
Line_2 $$ private void validateOutput(String output, boolean selected) throws DocumentException -->Line_11 $$ Attribute selectedAttr = e.attribute("selected")[ CD ]
Line_4 $$ Document document = reader.read(new StringReader(output))-->Line_5 $$ Element rootElement = document.getRootElement()[ FD ]
