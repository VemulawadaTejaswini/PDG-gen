Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_17 $$ assertThat(sObj2Arr2.get(1).toString(), equalTo("arr_value2"))[ CD ]
Line_14 $$ List sObj2Arr2 = (List) sObj2.get("arr2")-->Line_16 $$ assertThat(sObj2Arr2.get(0).toString(), equalTo("arr_value1"))[ FD ]
Line_18 $$ sObj2Arr2 = response.getHits().getAt(0).field("s_obj2_arr2").values()-->Line_19 $$ assertThat(sObj2Arr2.size(), equalTo(2))[ FD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_15 $$ assertThat(sObj2Arr2.size(), equalTo(2))[ CD ]
Line_14 $$ List sObj2Arr2 = (List) sObj2.get("arr2")-->Line_20 $$ assertThat(sObj2Arr2.get(0).toString(), equalTo("arr_value1"))[ FD ]
Line_10 $$ Map<String, Object> sObj1 = response.getHits().getAt(0).field("s_obj1").value()-->Line_11 $$ assertThat(sObj1.get("test").toString(), equalTo("something"))[ FD ]
Line_14 $$ List sObj2Arr2 = (List) sObj2.get("arr2")-->Line_18 $$ sObj2Arr2 = response.getHits().getAt(0).field("s_obj2_arr2").values()[ FD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_12 $$ assertThat(response.getHits().getAt(0).field("s_obj1_test").value().toString(), equalTo("something"))[ CD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_19 $$ assertThat(sObj2Arr2.size(), equalTo(2))[ CD ]
Line_18 $$ sObj2Arr2 = response.getHits().getAt(0).field("s_obj2_arr2").values()-->Line_20 $$ assertThat(sObj2Arr2.get(0).toString(), equalTo("arr_value1"))[ FD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_4 $$ client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForYellowStatus().execute().actionGet()[ CD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_11 $$ assertThat(sObj1.get("test").toString(), equalTo("something"))[ CD ]
Line_14 $$ List sObj2Arr2 = (List) sObj2.get("arr2")-->Line_21 $$ assertThat(sObj2Arr2.get(1).toString(), equalTo("arr_value2"))[ FD ]
Line_7 $$ SearchResponse response = client().prepareSearch().setQuery(matchAllQuery()).addScriptField("s_obj1", new Script("_source.obj1")).addScriptField("s_obj1_test", new Script("_source.obj1.test")).addScriptField("s_obj2", new Script("_source.obj2")).addScriptField("s_obj2_arr2", new Script("_source.obj2.arr2")).addScriptField("s_arr3", new Script("_source.arr3")).execute().actionGet()-->Line_8 $$ assertThat("Failures " + Arrays.toString(response.getShardFailures()), response.getShardFailures().length, equalTo(0))[ FD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_9 $$ assertThat(response.getHits().getAt(0).field("s_obj1_test").value().toString(), equalTo("something"))[ CD ]
Line_22 $$ List sObj2Arr3 = response.getHits().getAt(0).field("s_arr3").values()-->Line_23 $$ assertThat(((Map) sObj2Arr3.get(0)).get("arr3_field1").toString(), equalTo("arr3_value1"))[ FD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_22 $$ List sObj2Arr3 = response.getHits().getAt(0).field("s_arr3").values()[ CD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_5 $$ client().prepareIndex("test", "type1", "1").setSource(jsonBuilder().startObject().startObject("obj1").field("test", "something").endObject().startObject("obj2").startArray("arr2").value("arr_value1").value("arr_value2").endArray().endObject().startArray("arr3").startObject().field("arr3_field1", "arr3_value1").endObject().endArray().endObject()).execute().actionGet()[ CD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_13 $$ Map<String, Object> sObj2 = response.getHits().getAt(0).field("s_obj2").value()[ CD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_16 $$ assertThat(sObj2Arr2.get(0).toString(), equalTo("arr_value1"))[ CD ]
Line_14 $$ List sObj2Arr2 = (List) sObj2.get("arr2")-->Line_19 $$ assertThat(sObj2Arr2.size(), equalTo(2))[ FD ]
Line_7 $$ SearchResponse response = client().prepareSearch().setQuery(matchAllQuery()).addScriptField("s_obj1", new Script("_source.obj1")).addScriptField("s_obj1_test", new Script("_source.obj1.test")).addScriptField("s_obj2", new Script("_source.obj2")).addScriptField("s_obj2_arr2", new Script("_source.obj2.arr2")).addScriptField("s_arr3", new Script("_source.arr3")).execute().actionGet()-->Line_10 $$ Map<String, Object> sObj1 = response.getHits().getAt(0).field("s_obj1").value()[ FD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_7 $$ SearchResponse response = client().prepareSearch().setQuery(matchAllQuery()).addScriptField("s_obj1", new Script("_source.obj1")).addScriptField("s_obj1_test", new Script("_source.obj1.test")).addScriptField("s_obj2", new Script("_source.obj2")).addScriptField("s_obj2_arr2", new Script("_source.obj2.arr2")).addScriptField("s_arr3", new Script("_source.arr3")).execute().actionGet()[ CD ]
Line_14 $$ List sObj2Arr2 = (List) sObj2.get("arr2")-->Line_17 $$ assertThat(sObj2Arr2.get(1).toString(), equalTo("arr_value2"))[ FD ]
Line_18 $$ sObj2Arr2 = response.getHits().getAt(0).field("s_obj2_arr2").values()-->Line_21 $$ assertThat(sObj2Arr2.get(1).toString(), equalTo("arr_value2"))[ FD ]
Line_7 $$ SearchResponse response = client().prepareSearch().setQuery(matchAllQuery()).addScriptField("s_obj1", new Script("_source.obj1")).addScriptField("s_obj1_test", new Script("_source.obj1.test")).addScriptField("s_obj2", new Script("_source.obj2")).addScriptField("s_obj2_arr2", new Script("_source.obj2.arr2")).addScriptField("s_arr3", new Script("_source.arr3")).execute().actionGet()-->Line_12 $$ assertThat(response.getHits().getAt(0).field("s_obj1_test").value().toString(), equalTo("something"))[ FD ]
Line_7 $$ SearchResponse response = client().prepareSearch().setQuery(matchAllQuery()).addScriptField("s_obj1", new Script("_source.obj1")).addScriptField("s_obj1_test", new Script("_source.obj1.test")).addScriptField("s_obj2", new Script("_source.obj2")).addScriptField("s_obj2_arr2", new Script("_source.obj2.arr2")).addScriptField("s_arr3", new Script("_source.arr3")).execute().actionGet()-->Line_9 $$ assertThat(response.getHits().getAt(0).field("s_obj1_test").value().toString(), equalTo("something"))[ FD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_10 $$ Map<String, Object> sObj1 = response.getHits().getAt(0).field("s_obj1").value()[ CD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_8 $$ assertThat("Failures " + Arrays.toString(response.getShardFailures()), response.getShardFailures().length, equalTo(0))[ CD ]
Line_13 $$ Map<String, Object> sObj2 = response.getHits().getAt(0).field("s_obj2").value()-->Line_14 $$ List sObj2Arr2 = (List) sObj2.get("arr2")[ FD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_6 $$ client().admin().indices().refresh(refreshRequest()).actionGet()[ CD ]
Line_7 $$ SearchResponse response = client().prepareSearch().setQuery(matchAllQuery()).addScriptField("s_obj1", new Script("_source.obj1")).addScriptField("s_obj1_test", new Script("_source.obj1.test")).addScriptField("s_obj2", new Script("_source.obj2")).addScriptField("s_obj2_arr2", new Script("_source.obj2.arr2")).addScriptField("s_arr3", new Script("_source.arr3")).execute().actionGet()-->Line_22 $$ List sObj2Arr3 = response.getHits().getAt(0).field("s_arr3").values()[ FD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_21 $$ assertThat(sObj2Arr2.get(1).toString(), equalTo("arr_value2"))[ CD ]
Line_7 $$ SearchResponse response = client().prepareSearch().setQuery(matchAllQuery()).addScriptField("s_obj1", new Script("_source.obj1")).addScriptField("s_obj1_test", new Script("_source.obj1.test")).addScriptField("s_obj2", new Script("_source.obj2")).addScriptField("s_obj2_arr2", new Script("_source.obj2.arr2")).addScriptField("s_arr3", new Script("_source.arr3")).execute().actionGet()-->Line_13 $$ Map<String, Object> sObj2 = response.getHits().getAt(0).field("s_obj2").value()[ FD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_23 $$ assertThat(((Map) sObj2Arr3.get(0)).get("arr3_field1").toString(), equalTo("arr3_value1"))[ CD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_18 $$ sObj2Arr2 = response.getHits().getAt(0).field("s_obj2_arr2").values()[ CD ]
Line_7 $$ SearchResponse response = client().prepareSearch().setQuery(matchAllQuery()).addScriptField("s_obj1", new Script("_source.obj1")).addScriptField("s_obj1_test", new Script("_source.obj1.test")).addScriptField("s_obj2", new Script("_source.obj2")).addScriptField("s_obj2_arr2", new Script("_source.obj2.arr2")).addScriptField("s_arr3", new Script("_source.arr3")).execute().actionGet()-->Line_18 $$ sObj2Arr2 = response.getHits().getAt(0).field("s_obj2_arr2").values()[ FD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_20 $$ assertThat(sObj2Arr2.get(0).toString(), equalTo("arr_value1"))[ CD ]
Line_14 $$ List sObj2Arr2 = (List) sObj2.get("arr2")-->Line_15 $$ assertThat(sObj2Arr2.size(), equalTo(2))[ FD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_14 $$ List sObj2Arr2 = (List) sObj2.get("arr2")[ CD ]
Line_2 $$ public void testScriptFieldUsingSource() throws Exception -->Line_3 $$ createIndex("test")[ CD ]
