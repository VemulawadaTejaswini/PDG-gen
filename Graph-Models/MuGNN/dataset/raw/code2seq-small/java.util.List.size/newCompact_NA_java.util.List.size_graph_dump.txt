Line_5 $$ traverseAllRecords(new PersistentEnumerator.RecordsProcessor() -->Line_11 $$ return true[ CD ]
Line_2 $$ private void newCompact(PersistentHashMapValueStorage newStorage) throws IOException -->Line_14 $$ LOG.info("Loaded mappings:" + (System.currentTimeMillis() - started) + "ms, keys:" + infos.size())[ CD ]
Line_5 $$ traverseAllRecords(new PersistentEnumerator.RecordsProcessor() -->Line_8 $$ if (record != NULL_ADDR) [ CD ]
Line_5 $$ traverseAllRecords(new PersistentEnumerator.RecordsProcessor() -->Line_7 $$ final long record = readValueId(keyId)[ CD ]
Line_2 $$ private void newCompact(PersistentHashMapValueStorage newStorage) throws IOException -->Line_4 $$ final List<CompactionRecordInfo> infos = new ArrayList<CompactionRecordInfo>(10000)[ CD ]
Line_2 $$ private void newCompact(PersistentHashMapValueStorage newStorage) throws IOException -->Line_17 $$ if (!infos.isEmpty()) [ CD ]
Line_4 $$ final List<CompactionRecordInfo> infos = new ArrayList<CompactionRecordInfo>(10000)-->Line_30 $$ for (int i = 0; i < infos.size(); ++i) [ FD ]
Line_2 $$ private void newCompact(PersistentHashMapValueStorage newStorage) throws IOException -->Line_38 $$ LOG.info("Updated mappings:" + (System.currentTimeMillis() - started) + " ms")[ CD ]
Line_8 $$ if (record != NULL_ADDR) -->Line_9 $$ infos.add(new CompactionRecordInfo(getCurrentKey(), record, keyId))[ CD ]
Line_2 $$ private void newCompact(PersistentHashMapValueStorage newStorage) throws IOException -->Line_27 $$ started = System.currentTimeMillis()[ CD ]
Line_30 $$ for (int i = 0; i < infos.size(); ++i) -->Line_31 $$ CompactionRecordInfo info = infos.get(i)[ CD ]
Line_4 $$ final List<CompactionRecordInfo> infos = new ArrayList<CompactionRecordInfo>(10000)-->Line_31 $$ CompactionRecordInfo info = infos.get(i)[ FD ]
Line_4 $$ final List<CompactionRecordInfo> infos = new ArrayList<CompactionRecordInfo>(10000)-->Line_9 $$ infos.add(new CompactionRecordInfo(getCurrentKey(), record, keyId))[ FD ]
Line_4 $$ final List<CompactionRecordInfo> infos = new ArrayList<CompactionRecordInfo>(10000)-->Line_19 $$ fragments = myValueStorage.compactValues(infos, newStorage)[ FD ]
Line_30 $$ for (int i = 0; i < infos.size(); ++i) -->Line_31 $$ CompactionRecordInfo info = infos.get(i)[ FD ]
Line_2 $$ private void newCompact(PersistentHashMapValueStorage newStorage) throws IOException -->Line_19 $$ fragments = myValueStorage.compactValues(infos, newStorage)[ FD ]
Line_5 $$ traverseAllRecords(new PersistentEnumerator.RecordsProcessor() -->Line_7 $$ final long record = readValueId(keyId)[ FD ]
Line_2 $$ private void newCompact(PersistentHashMapValueStorage newStorage) throws IOException -->Line_5 $$ traverseAllRecords(new PersistentEnumerator.RecordsProcessor() [ CD ]
Line_7 $$ final long record = readValueId(keyId)-->Line_8 $$ if (record != NULL_ADDR) [ FD ]
Line_4 $$ final List<CompactionRecordInfo> infos = new ArrayList<CompactionRecordInfo>(10000)-->Line_17 $$ if (!infos.isEmpty()) [ FD ]
Line_2 $$ private void newCompact(PersistentHashMapValueStorage newStorage) throws IOException -->Line_15 $$ started = System.currentTimeMillis()[ CD ]
Line_2 $$ private void newCompact(PersistentHashMapValueStorage newStorage) throws IOException -->Line_3 $$ long started = System.currentTimeMillis()[ CD ]
Line_4 $$ final List<CompactionRecordInfo> infos = new ArrayList<CompactionRecordInfo>(10000)-->Line_14 $$ LOG.info("Loaded mappings:" + (System.currentTimeMillis() - started) + "ms, keys:" + infos.size())[ FD ]
Line_30 $$ for (int i = 0; i < infos.size(); ++i) -->Line_32 $$ updateValueId(info.address, info.newValueAddress, info.valueAddress, null, info.key)[ CD ]
Line_2 $$ private void newCompact(PersistentHashMapValueStorage newStorage) throws IOException -->Line_26 $$ LOG.info("Compacted values for:" + (System.currentTimeMillis() - started) + "ms fragments:" + ((int) fragments) + ", newfragments:" + (fragments >> 32))[ CD ]
