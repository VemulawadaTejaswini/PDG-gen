Line_2 $$ protected Response shardOperation(Request request, ShardId shardId) -->Line_3 $$ Response response = new Response()[ CD ]
Line_2 $$ protected Response shardOperation(Request request, ShardId shardId) -->Line_20 $$ return response[ CD ]
Line_2 $$ protected Response shardOperation(Request request, ShardId shardId) -->Line_14 $$ logger.debug("[ FD ]
Line_11 $$ if (TransportActions.isShardNotAvailableException(t)) -->Line_14 $$ logger.debug("[ CD ]
Line_6 $$ Response.Item responseItem-->Line_18 $$ response.items.add(responseItem)[ FD ]
Line_2 $$ protected Response shardOperation(Request request, ShardId shardId) -->Line_4 $$ response.items = new ArrayList(request.items.size())[ CD ]
Line_6 $$ Response.Item responseItem-->Line_9 $$ responseItem = new Response.Item(slot, percolatorService.percolate(item.request))[ FD ]
Line_9 $$ responseItem = new Response.Item(slot, percolatorService.percolate(item.request))-->Line_18 $$ response.items.add(responseItem)[ FD ]
Line_6 $$ Response.Item responseItem-->Line_15 $$ responseItem = new Response.Item(slot, t)[ FD ]
Line_15 $$ responseItem = new Response.Item(slot, t)-->Line_18 $$ response.items.add(responseItem)[ FD ]
Line_11 $$ if (TransportActions.isShardNotAvailableException(t)) -->Line_15 $$ responseItem = new Response.Item(slot, t)[ CD ]
Line_9 $$ responseItem = new Response.Item(slot, percolatorService.percolate(item.request))-->Line_15 $$ responseItem = new Response.Item(slot, t)[ FD ]
