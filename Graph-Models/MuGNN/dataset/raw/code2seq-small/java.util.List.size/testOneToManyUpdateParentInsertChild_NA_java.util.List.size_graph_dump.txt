Line_3 $$ List list = queryForPropertyHasChanged(ListRefEdEntity.class, parent2Id, "data")-->Line_8 $$ assertEquals(makeList(1, 3), extractRevisionNumbers(list))[ FD ]
Line_6 $$ list = queryForPropertyHasChanged(ListRefEdEntity.class, parent2Id, "reffering")-->Line_8 $$ assertEquals(makeList(1, 3), extractRevisionNumbers(list))[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(ListRefEdEntity.class, parent2Id, "data")-->Line_9 $$ list = queryForPropertyHasChanged(ListRefIngEntity.class, child2Id, "reference")[ FD ]
Line_2 $$ public void testOneToManyUpdateParentInsertChild() -->Line_7 $$ assertEquals(2, list.size())[ CD ]
Line_3 $$ List list = queryForPropertyHasChanged(ListRefEdEntity.class, parent2Id, "data")-->Line_10 $$ assertEquals(1, list.size())[ FD ]
Line_2 $$ public void testOneToManyUpdateParentInsertChild() -->Line_6 $$ list = queryForPropertyHasChanged(ListRefEdEntity.class, parent2Id, "reffering")[ CD ]
Line_2 $$ public void testOneToManyUpdateParentInsertChild() -->Line_9 $$ list = queryForPropertyHasChanged(ListRefIngEntity.class, child2Id, "reference")[ CD ]
Line_3 $$ List list = queryForPropertyHasChanged(ListRefEdEntity.class, parent2Id, "data")-->Line_7 $$ assertEquals(2, list.size())[ FD ]
Line_2 $$ public void testOneToManyUpdateParentInsertChild() -->Line_10 $$ assertEquals(1, list.size())[ CD ]
Line_3 $$ List list = queryForPropertyHasChanged(ListRefEdEntity.class, parent2Id, "data")-->Line_5 $$ assertEquals(makeList(1, 3), extractRevisionNumbers(list))[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(ListRefEdEntity.class, parent2Id, "data")-->Line_6 $$ list = queryForPropertyHasChanged(ListRefEdEntity.class, parent2Id, "reffering")[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(ListRefEdEntity.class, parent2Id, "data")-->Line_4 $$ assertEquals(2, list.size())[ FD ]
Line_6 $$ list = queryForPropertyHasChanged(ListRefEdEntity.class, parent2Id, "reffering")-->Line_9 $$ list = queryForPropertyHasChanged(ListRefIngEntity.class, child2Id, "reference")[ FD ]
Line_2 $$ public void testOneToManyUpdateParentInsertChild() -->Line_8 $$ assertEquals(makeList(1, 3), extractRevisionNumbers(list))[ CD ]
Line_2 $$ public void testOneToManyUpdateParentInsertChild() -->Line_11 $$ assertEquals(makeList(3), extractRevisionNumbers(list))[ CD ]
Line_9 $$ list = queryForPropertyHasChanged(ListRefIngEntity.class, child2Id, "reference")-->Line_11 $$ assertEquals(makeList(3), extractRevisionNumbers(list))[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(ListRefEdEntity.class, parent2Id, "data")-->Line_11 $$ assertEquals(makeList(3), extractRevisionNumbers(list))[ FD ]
Line_9 $$ list = queryForPropertyHasChanged(ListRefIngEntity.class, child2Id, "reference")-->Line_10 $$ assertEquals(1, list.size())[ FD ]
Line_6 $$ list = queryForPropertyHasChanged(ListRefEdEntity.class, parent2Id, "reffering")-->Line_7 $$ assertEquals(2, list.size())[ FD ]
Line_2 $$ public void testOneToManyUpdateParentInsertChild() -->Line_5 $$ assertEquals(makeList(1, 3), extractRevisionNumbers(list))[ CD ]
Line_2 $$ public void testOneToManyUpdateParentInsertChild() -->Line_3 $$ List list = queryForPropertyHasChanged(ListRefEdEntity.class, parent2Id, "data")[ CD ]
Line_2 $$ public void testOneToManyUpdateParentInsertChild() -->Line_4 $$ assertEquals(2, list.size())[ CD ]
Line_6 $$ list = queryForPropertyHasChanged(ListRefEdEntity.class, parent2Id, "reffering")-->Line_10 $$ assertEquals(1, list.size())[ FD ]
Line_6 $$ list = queryForPropertyHasChanged(ListRefEdEntity.class, parent2Id, "reffering")-->Line_11 $$ assertEquals(makeList(3), extractRevisionNumbers(list))[ FD ]
