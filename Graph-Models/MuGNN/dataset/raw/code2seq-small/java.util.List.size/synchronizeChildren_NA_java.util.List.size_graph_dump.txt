Line_5 $$ HashMap<Object, CachingChildrenTreeNode> oldValuesToChildrenMap = new HashMap<Object, CachingChildrenTreeNode>()-->Line_16 $$ final CachingChildrenTreeNode oldChild = oldValuesToChildrenMap.get(newValue)[ FD ]
Line_12 $$ for (int i = 0; i < children.size(); i++) -->Line_13 $$ CachingChildrenTreeNode newChild = children.get(i)[ FD ]
Line_17 $$ if (oldChild != null) -->Line_20 $$ children.set(i, oldChild)[ CD ]
Line_6 $$ for (CachingChildrenTreeNode oldChild : myOldChildren) -->Line_17 $$ if (oldChild != null) [ FD ]
Line_13 $$ CachingChildrenTreeNode newChild = children.get(i)-->Line_19 $$ oldChild.setValue(newChild.getValue())[ FD ]
Line_12 $$ for (int i = 0; i < children.size(); i++) -->Line_15 $$ if (newValue != null) [ CD ]
Line_12 $$ for (int i = 0; i < children.size(); i++) -->Line_13 $$ CachingChildrenTreeNode newChild = children.get(i)[ CD ]
Line_6 $$ for (CachingChildrenTreeNode oldChild : myOldChildren) -->Line_20 $$ children.set(i, oldChild)[ FD ]
Line_14 $$ final Object newValue = newChild instanceof TreeElementWrapper ? newChild.getValue() : newChild-->Line_16 $$ final CachingChildrenTreeNode oldChild = oldValuesToChildrenMap.get(newValue)[ FD ]
Line_17 $$ if (oldChild != null) -->Line_18 $$ oldChild.copyFromNewInstance(newChild)[ CD ]
Line_12 $$ for (int i = 0; i < children.size(); i++) -->Line_20 $$ children.set(i, oldChild)[ FD ]
Line_13 $$ CachingChildrenTreeNode newChild = children.get(i)-->Line_18 $$ oldChild.copyFromNewInstance(newChild)[ FD ]
Line_6 $$ for (CachingChildrenTreeNode oldChild : myOldChildren) -->Line_19 $$ oldChild.setValue(newChild.getValue())[ FD ]
Line_6 $$ for (CachingChildrenTreeNode oldChild : myOldChildren) -->Line_18 $$ oldChild.copyFromNewInstance(newChild)[ FD ]
Line_2 $$ protected void synchronizeChildren() -->Line_3 $$ List<CachingChildrenTreeNode> children = myChildren[ CD ]
Line_6 $$ for (CachingChildrenTreeNode oldChild : myOldChildren) -->Line_9 $$ oldValuesToChildrenMap.put(oldValue, oldChild)[ FD ]
Line_4 $$ if (myOldChildren != null && children != null) -->Line_12 $$ for (int i = 0; i < children.size(); i++) [ CD ]
Line_5 $$ HashMap<Object, CachingChildrenTreeNode> oldValuesToChildrenMap = new HashMap<Object, CachingChildrenTreeNode>()-->Line_9 $$ oldValuesToChildrenMap.put(oldValue, oldChild)[ FD ]
Line_16 $$ final CachingChildrenTreeNode oldChild = oldValuesToChildrenMap.get(newValue)-->Line_20 $$ children.set(i, oldChild)[ FD ]
Line_2 $$ protected void synchronizeChildren() -->Line_4 $$ if (myOldChildren != null && children != null) [ CD ]
Line_16 $$ final CachingChildrenTreeNode oldChild = oldValuesToChildrenMap.get(newValue)-->Line_17 $$ if (oldChild != null) [ FD ]
Line_15 $$ if (newValue != null) -->Line_17 $$ if (oldChild != null) [ CD ]
Line_3 $$ List<CachingChildrenTreeNode> children = myChildren-->Line_12 $$ for (int i = 0; i < children.size(); i++) [ FD ]
Line_16 $$ final CachingChildrenTreeNode oldChild = oldValuesToChildrenMap.get(newValue)-->Line_18 $$ oldChild.copyFromNewInstance(newChild)[ FD ]
Line_3 $$ List<CachingChildrenTreeNode> children = myChildren-->Line_13 $$ CachingChildrenTreeNode newChild = children.get(i)[ FD ]
Line_16 $$ final CachingChildrenTreeNode oldChild = oldValuesToChildrenMap.get(newValue)-->Line_19 $$ oldChild.setValue(newChild.getValue())[ FD ]
Line_7 $$ final Object oldValue = oldChild instanceof TreeElementWrapper ? oldChild.getValue() : oldChild-->Line_9 $$ oldValuesToChildrenMap.put(oldValue, oldChild)[ FD ]
Line_12 $$ for (int i = 0; i < children.size(); i++) -->Line_14 $$ final Object newValue = newChild instanceof TreeElementWrapper ? newChild.getValue() : newChild[ CD ]
Line_17 $$ if (oldChild != null) -->Line_19 $$ oldChild.setValue(newChild.getValue())[ CD ]
Line_14 $$ final Object newValue = newChild instanceof TreeElementWrapper ? newChild.getValue() : newChild-->Line_15 $$ if (newValue != null) [ FD ]
Line_15 $$ if (newValue != null) -->Line_16 $$ final CachingChildrenTreeNode oldChild = oldValuesToChildrenMap.get(newValue)[ CD ]
Line_8 $$ if (oldValue != null) -->Line_9 $$ oldValuesToChildrenMap.put(oldValue, oldChild)[ CD ]
Line_3 $$ List<CachingChildrenTreeNode> children = myChildren-->Line_20 $$ children.set(i, oldChild)[ FD ]
Line_6 $$ for (CachingChildrenTreeNode oldChild : myOldChildren) -->Line_7 $$ final Object oldValue = oldChild instanceof TreeElementWrapper ? oldChild.getValue() : oldChild[ FD ]
Line_13 $$ CachingChildrenTreeNode newChild = children.get(i)-->Line_14 $$ final Object newValue = newChild instanceof TreeElementWrapper ? newChild.getValue() : newChild[ FD ]
Line_7 $$ final Object oldValue = oldChild instanceof TreeElementWrapper ? oldChild.getValue() : oldChild-->Line_8 $$ if (oldValue != null) [ FD ]
Line_4 $$ if (myOldChildren != null && children != null) -->Line_5 $$ HashMap<Object, CachingChildrenTreeNode> oldValuesToChildrenMap = new HashMap<Object, CachingChildrenTreeNode>()[ CD ]
