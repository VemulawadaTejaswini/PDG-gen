Line_22 $$ if (caretsState.blockSelection != null) -->Line_23 $$ editor.getSelectionModel().setBlockSelection(editor.offsetToLogicalPosition(caretsState.blockSelection.getStartOffset()), editor.offsetToLogicalPosition(caretsState.blockSelection.getEndOffset()))[ CD ]
Line_4 $$ if (caretModel.supportsMultipleCarets()) -->Line_5 $$ List<CaretState> states = new ArrayList<CaretState>(caretsState.carets.size())[ CD ]
Line_2 $$ public static void setCaretsAndSelection(Editor editor, CaretAndSelectionState caretsState) -->Line_19 $$ editor.getSelectionModel().removeSelection()[ FD ]
Line_2 $$ public static void setCaretsAndSelection(Editor editor, CaretAndSelectionState caretsState) -->Line_22 $$ if (caretsState.blockSelection != null) [ CD ]
Line_3 $$ CaretModel caretModel = editor.getCaretModel()-->Line_9 $$ caretModel.setCaretsAndSelections(states)[ FD ]
Line_4 $$ if (caretModel.supportsMultipleCarets()) -->Line_13 $$ if (caret.position != null) [ CD ]
Line_16 $$ if (caret.selection != null) -->Line_19 $$ editor.getSelectionModel().removeSelection()[ CD ]
Line_2 $$ public static void setCaretsAndSelection(Editor editor, CaretAndSelectionState caretsState) -->Line_14 $$ caretModel.moveToOffset(caret.getCaretOffset(editor.getDocument()))[ FD ]
Line_2 $$ public static void setCaretsAndSelection(Editor editor, CaretAndSelectionState caretsState) -->Line_4 $$ if (caretModel.supportsMultipleCarets()) [ CD ]
Line_4 $$ if (caretModel.supportsMultipleCarets()) -->Line_12 $$ CaretInfo caret = caretsState.carets.get(0)[ CD ]
Line_5 $$ List<CaretState> states = new ArrayList<CaretState>(caretsState.carets.size())-->Line_7 $$ states.add(new CaretState(caret.position == null ? null : editor.offsetToLogicalPosition(caret.getCaretOffset(editor.getDocument())), caret.selection == null ? null : editor.offsetToLogicalPosition(caret.selection.getStartOffset()), caret.selection == null ? null : editor.offsetToLogicalPosition(caret.selection.getEndOffset())))[ FD ]
Line_3 $$ CaretModel caretModel = editor.getCaretModel()-->Line_14 $$ caretModel.moveToOffset(caret.getCaretOffset(editor.getDocument()))[ FD ]
Line_6 $$ for (CaretInfo caret : caretsState.carets) -->Line_7 $$ states.add(new CaretState(caret.position == null ? null : editor.offsetToLogicalPosition(caret.getCaretOffset(editor.getDocument())), caret.selection == null ? null : editor.offsetToLogicalPosition(caret.selection.getStartOffset()), caret.selection == null ? null : editor.offsetToLogicalPosition(caret.selection.getEndOffset())))[ FD ]
Line_2 $$ public static void setCaretsAndSelection(Editor editor, CaretAndSelectionState caretsState) -->Line_3 $$ CaretModel caretModel = editor.getCaretModel()[ FD ]
Line_2 $$ public static void setCaretsAndSelection(Editor editor, CaretAndSelectionState caretsState) -->Line_3 $$ CaretModel caretModel = editor.getCaretModel()[ CD ]
Line_6 $$ for (CaretInfo caret : caretsState.carets) -->Line_14 $$ caretModel.moveToOffset(caret.getCaretOffset(editor.getDocument()))[ FD ]
Line_16 $$ if (caret.selection != null) -->Line_17 $$ editor.getSelectionModel().setSelection(caret.selection.getStartOffset(), caret.selection.getEndOffset())[ CD ]
Line_4 $$ if (caretModel.supportsMultipleCarets()) -->Line_16 $$ if (caret.selection != null) [ CD ]
Line_3 $$ CaretModel caretModel = editor.getCaretModel()-->Line_4 $$ if (caretModel.supportsMultipleCarets()) [ FD ]
Line_2 $$ public static void setCaretsAndSelection(Editor editor, CaretAndSelectionState caretsState) -->Line_23 $$ editor.getSelectionModel().setBlockSelection(editor.offsetToLogicalPosition(caretsState.blockSelection.getStartOffset()), editor.offsetToLogicalPosition(caretsState.blockSelection.getEndOffset()))[ FD ]
Line_4 $$ if (caretModel.supportsMultipleCarets()) -->Line_9 $$ caretModel.setCaretsAndSelections(states)[ CD ]
Line_2 $$ public static void setCaretsAndSelection(Editor editor, CaretAndSelectionState caretsState) -->Line_7 $$ states.add(new CaretState(caret.position == null ? null : editor.offsetToLogicalPosition(caret.getCaretOffset(editor.getDocument())), caret.selection == null ? null : editor.offsetToLogicalPosition(caret.selection.getStartOffset()), caret.selection == null ? null : editor.offsetToLogicalPosition(caret.selection.getEndOffset())))[ FD ]
Line_13 $$ if (caret.position != null) -->Line_14 $$ caretModel.moveToOffset(caret.getCaretOffset(editor.getDocument()))[ CD ]
Line_4 $$ if (caretModel.supportsMultipleCarets()) -->Line_11 $$ assertEquals("Multiple carets are not supported by the model", 1, caretsState.carets.size())[ CD ]
Line_2 $$ public static void setCaretsAndSelection(Editor editor, CaretAndSelectionState caretsState) -->Line_17 $$ editor.getSelectionModel().setSelection(caret.selection.getStartOffset(), caret.selection.getEndOffset())[ FD ]
Line_5 $$ List<CaretState> states = new ArrayList<CaretState>(caretsState.carets.size())-->Line_9 $$ caretModel.setCaretsAndSelections(states)[ FD ]
