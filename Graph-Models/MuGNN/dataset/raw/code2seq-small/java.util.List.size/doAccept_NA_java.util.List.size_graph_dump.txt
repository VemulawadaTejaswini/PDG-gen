Line_2 $$ protected void doAccept(TikaSafeRandomizerBumper tikaSafeRandomizerBumper, byte[] byteArray, boolean accept, Level level) -->Line_5 $$ Assert.assertTrue(tikaSafeRandomizerBumper.accept(byteArray))[ FD ]
Line_2 $$ protected void doAccept(TikaSafeRandomizerBumper tikaSafeRandomizerBumper, byte[] byteArray, boolean accept, Level level) -->Line_10 $$ Assert.assertEquals("Accepted: " + TikaSafeRandomizerBumper.byteArrayToString(byteArray), logRecord.getMessage())[ FD ]
Line_4 $$ if (accept) -->Line_16 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ CD ]
Line_3 $$ try (CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(TikaSafeRandomizerBumper.class.getName(), level)) -->Line_16 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ FD ]
Line_6 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_9 $$ LogRecord logRecord = logRecords.get(0)[ FD ]
Line_4 $$ if (accept) -->Line_5 $$ Assert.assertTrue(tikaSafeRandomizerBumper.accept(byteArray))[ CD ]
Line_4 $$ if (accept) -->Line_6 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ CD ]
Line_6 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_17 $$ Assert.assertTrue(logRecords.isEmpty())[ FD ]
Line_7 $$ if (level == Level.INFO) -->Line_12 $$ Assert.assertTrue(logRecords.isEmpty())[ CD ]
Line_2 $$ protected void doAccept(TikaSafeRandomizerBumper tikaSafeRandomizerBumper, byte[] byteArray, boolean accept, Level level) -->Line_3 $$ try (CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(TikaSafeRandomizerBumper.class.getName(), level)) [ FD ]
Line_7 $$ if (level == Level.INFO) -->Line_8 $$ Assert.assertEquals(1, logRecords.size())[ CD ]
Line_7 $$ if (level == Level.INFO) -->Line_9 $$ LogRecord logRecord = logRecords.get(0)[ CD ]
Line_9 $$ LogRecord logRecord = logRecords.get(0)-->Line_10 $$ Assert.assertEquals("Accepted: " + TikaSafeRandomizerBumper.byteArrayToString(byteArray), logRecord.getMessage())[ FD ]
Line_4 $$ if (accept) -->Line_17 $$ Assert.assertTrue(logRecords.isEmpty())[ CD ]
Line_4 $$ if (accept) -->Line_15 $$ Assert.assertFalse(tikaSafeRandomizerBumper.accept(byteArray))[ CD ]
Line_2 $$ protected void doAccept(TikaSafeRandomizerBumper tikaSafeRandomizerBumper, byte[] byteArray, boolean accept, Level level) -->Line_15 $$ Assert.assertFalse(tikaSafeRandomizerBumper.accept(byteArray))[ FD ]
Line_6 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_8 $$ Assert.assertEquals(1, logRecords.size())[ FD ]
Line_2 $$ protected void doAccept(TikaSafeRandomizerBumper tikaSafeRandomizerBumper, byte[] byteArray, boolean accept, Level level) -->Line_7 $$ if (level == Level.INFO) [ FD ]
Line_6 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_12 $$ Assert.assertTrue(logRecords.isEmpty())[ FD ]
Line_4 $$ if (accept) -->Line_7 $$ if (level == Level.INFO) [ CD ]
Line_3 $$ try (CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(TikaSafeRandomizerBumper.class.getName(), level)) -->Line_6 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ FD ]
Line_7 $$ if (level == Level.INFO) -->Line_10 $$ Assert.assertEquals("Accepted: " + TikaSafeRandomizerBumper.byteArrayToString(byteArray), logRecord.getMessage())[ CD ]
