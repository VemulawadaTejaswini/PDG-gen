Line_2 $$ public void testImplicitPolymorphism() -->Line_13 $$ list = s.createQuery("from java.lang.Object").list()[ CD ]
Line_11 $$ List list = s.createQuery("from java.lang.Comparable").list()-->Line_13 $$ list = s.createQuery("from java.lang.Object").list()[ FD ]
Line_11 $$ List list = s.createQuery("from java.lang.Comparable").list()-->Line_16 $$ list = s.createQuery("from java.lang.Object").list()[ FD ]
Line_13 $$ list = s.createQuery("from java.lang.Object").list()-->Line_17 $$ assertEquals(list.size(), 0)[ FD ]
Line_5 $$ Product product = new Product()-->Line_8 $$ product.setPrice(new BigDecimal(123))[ FD ]
Line_5 $$ Product product = new Product()-->Line_6 $$ product.setDescription("My Product")[ FD ]
Line_2 $$ public void testImplicitPolymorphism() -->Line_8 $$ product.setPrice(new BigDecimal(123))[ CD ]
Line_2 $$ public void testImplicitPolymorphism() -->Line_15 $$ s.delete(product)[ CD ]
Line_2 $$ public void testImplicitPolymorphism() -->Line_16 $$ list = s.createQuery("from java.lang.Object").list()[ CD ]
Line_5 $$ Product product = new Product()-->Line_7 $$ product.setNumberAvailable(10)[ FD ]
Line_2 $$ public void testImplicitPolymorphism() -->Line_9 $$ product.setProductId("4321")[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_18 $$ t.commit()[ FD ]
Line_2 $$ public void testImplicitPolymorphism() -->Line_3 $$ Session s = openSession()[ CD ]
Line_11 $$ List list = s.createQuery("from java.lang.Comparable").list()-->Line_12 $$ assertEquals(list.size(), 0)[ FD ]
Line_5 $$ Product product = new Product()-->Line_15 $$ s.delete(product)[ FD ]
Line_2 $$ public void testImplicitPolymorphism() -->Line_17 $$ assertEquals(list.size(), 0)[ CD ]
Line_3 $$ Session s = openSession()-->Line_16 $$ list = s.createQuery("from java.lang.Object").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_10 $$ s.save(product)[ FD ]
Line_2 $$ public void testImplicitPolymorphism() -->Line_19 $$ s.close()[ CD ]
Line_2 $$ public void testImplicitPolymorphism() -->Line_10 $$ s.save(product)[ CD ]
Line_5 $$ Product product = new Product()-->Line_10 $$ s.save(product)[ FD ]
Line_2 $$ public void testImplicitPolymorphism() -->Line_11 $$ List list = s.createQuery("from java.lang.Comparable").list()[ CD ]
Line_2 $$ public void testImplicitPolymorphism() -->Line_18 $$ t.commit()[ CD ]
Line_3 $$ Session s = openSession()-->Line_15 $$ s.delete(product)[ FD ]
Line_11 $$ List list = s.createQuery("from java.lang.Comparable").list()-->Line_17 $$ assertEquals(list.size(), 0)[ FD ]
Line_2 $$ public void testImplicitPolymorphism() -->Line_5 $$ Product product = new Product()[ CD ]
Line_13 $$ list = s.createQuery("from java.lang.Object").list()-->Line_14 $$ assertEquals(list.size(), 1)[ FD ]
Line_13 $$ list = s.createQuery("from java.lang.Object").list()-->Line_16 $$ list = s.createQuery("from java.lang.Object").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_19 $$ s.close()[ FD ]
Line_2 $$ public void testImplicitPolymorphism() -->Line_14 $$ assertEquals(list.size(), 1)[ CD ]
Line_3 $$ Session s = openSession()-->Line_11 $$ List list = s.createQuery("from java.lang.Comparable").list()[ FD ]
Line_2 $$ public void testImplicitPolymorphism() -->Line_6 $$ product.setDescription("My Product")[ CD ]
Line_2 $$ public void testImplicitPolymorphism() -->Line_12 $$ assertEquals(list.size(), 0)[ CD ]
Line_5 $$ Product product = new Product()-->Line_9 $$ product.setProductId("4321")[ FD ]
Line_2 $$ public void testImplicitPolymorphism() -->Line_4 $$ Transaction t = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_13 $$ list = s.createQuery("from java.lang.Object").list()[ FD ]
Line_16 $$ list = s.createQuery("from java.lang.Object").list()-->Line_17 $$ assertEquals(list.size(), 0)[ FD ]
Line_11 $$ List list = s.createQuery("from java.lang.Comparable").list()-->Line_14 $$ assertEquals(list.size(), 1)[ FD ]
Line_2 $$ public void testImplicitPolymorphism() -->Line_7 $$ product.setNumberAvailable(10)[ CD ]
