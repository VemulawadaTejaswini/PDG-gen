Line_10 $$ VcsLogProvider provider = dataPack.getLogProviders().get(root)-->Line_11 $$ VcsLogRefManager refManager = provider.getReferenceManager()[ FD ]
Line_19 $$ if (filteredGroups.singletonGroups.contains(item) || ContainerUtil.find(filteredGroups.expandedGroups.values(), new Condition<TreeSet<String>>() -->Line_21 $$ return strings.contains(item)[ CD ]
Line_2 $$ private static Groups prepareGroups(@NotNull VcsLogDataPack dataPack, @Nullable Collection<VirtualFile> visibleRoots, @Nullable List<List<String>> recentItems) -->Line_7 $$ if (visibleRoots != null && !visibleRoots.contains(root))[ FD ]
Line_16 $$ for (List<String> recentItem : recentItems) -->Line_18 $$ final String item = ContainerUtil.getFirstItem(recentItem)[ FD ]
Line_11 $$ VcsLogRefManager refManager = provider.getReferenceManager()-->Line_12 $$ List<RefGroup> refGroups = refManager.group(refs)[ FD ]
Line_2 $$ private static Groups prepareGroups(@NotNull VcsLogDataPack dataPack, @Nullable Collection<VirtualFile> visibleRoots, @Nullable List<List<String>> recentItems) -->Line_30 $$ return filteredGroups[ CD ]
Line_18 $$ final String item = ContainerUtil.getFirstItem(recentItem)-->Line_21 $$ return strings.contains(item)[ FD ]
Line_2 $$ private static Groups prepareGroups(@NotNull VcsLogDataPack dataPack, @Nullable Collection<VirtualFile> visibleRoots, @Nullable List<List<String>> recentItems) -->Line_15 $$ if (recentItems != null) [ CD ]
Line_18 $$ final String item = ContainerUtil.getFirstItem(recentItem)-->Line_19 $$ if (filteredGroups.singletonGroups.contains(item) || ContainerUtil.find(filteredGroups.expandedGroups.values(), new Condition<TreeSet<String>>() [ FD ]
Line_2 $$ private static Groups prepareGroups(@NotNull VcsLogDataPack dataPack, @Nullable Collection<VirtualFile> visibleRoots, @Nullable List<List<String>> recentItems) -->Line_15 $$ if (recentItems != null) [ FD ]
Line_2 $$ private static Groups prepareGroups(@NotNull VcsLogDataPack dataPack, @Nullable Collection<VirtualFile> visibleRoots, @Nullable List<List<String>> recentItems) -->Line_4 $$ Collection<VcsRef> allRefs = dataPack.getRefs().getBranches()[ FD ]
Line_19 $$ if (filteredGroups.singletonGroups.contains(item) || ContainerUtil.find(filteredGroups.expandedGroups.values(), new Condition<TreeSet<String>>() -->Line_21 $$ return strings.contains(item)[ FD ]
Line_2 $$ private static Groups prepareGroups(@NotNull VcsLogDataPack dataPack, @Nullable Collection<VirtualFile> visibleRoots, @Nullable List<List<String>> recentItems) -->Line_3 $$ Groups filteredGroups = new Groups()[ CD ]
Line_16 $$ for (List<String> recentItem : recentItems) -->Line_27 $$ filteredGroups.recentGroups.add(recentItem)[ FD ]
Line_4 $$ Collection<VcsRef> allRefs = dataPack.getRefs().getBranches()-->Line_5 $$ for (Map.Entry<VirtualFile, Collection<VcsRef>> entry : VcsLogUtil.groupRefsByRoot(allRefs).entrySet()) [ FD ]
Line_3 $$ Groups filteredGroups = new Groups()-->Line_13 $$ putActionsForReferences(refGroups, filteredGroups)[ FD ]
Line_2 $$ private static Groups prepareGroups(@NotNull VcsLogDataPack dataPack, @Nullable Collection<VirtualFile> visibleRoots, @Nullable List<List<String>> recentItems) -->Line_4 $$ Collection<VcsRef> allRefs = dataPack.getRefs().getBranches()[ CD ]
Line_9 $$ Collection<VcsRef> refs = entry.getValue()-->Line_12 $$ List<RefGroup> refGroups = refManager.group(refs)[ FD ]
Line_6 $$ VirtualFile root = entry.getKey()-->Line_7 $$ if (visibleRoots != null && !visibleRoots.contains(root))[ FD ]
Line_6 $$ VirtualFile root = entry.getKey()-->Line_10 $$ VcsLogProvider provider = dataPack.getLogProviders().get(root)[ FD ]
Line_16 $$ for (List<String> recentItem : recentItems) -->Line_17 $$ if (recentItem.size() == 1) [ FD ]
Line_17 $$ if (recentItem.size() == 1) -->Line_18 $$ final String item = ContainerUtil.getFirstItem(recentItem)[ CD ]
Line_2 $$ private static Groups prepareGroups(@NotNull VcsLogDataPack dataPack, @Nullable Collection<VirtualFile> visibleRoots, @Nullable List<List<String>> recentItems) -->Line_10 $$ VcsLogProvider provider = dataPack.getLogProviders().get(root)[ FD ]
Line_5 $$ for (Map.Entry<VirtualFile, Collection<VcsRef>> entry : VcsLogUtil.groupRefsByRoot(allRefs).entrySet()) -->Line_6 $$ VirtualFile root = entry.getKey()[ FD ]
Line_5 $$ for (Map.Entry<VirtualFile, Collection<VcsRef>> entry : VcsLogUtil.groupRefsByRoot(allRefs).entrySet()) -->Line_9 $$ Collection<VcsRef> refs = entry.getValue()[ FD ]
Line_17 $$ if (recentItem.size() == 1) -->Line_19 $$ if (filteredGroups.singletonGroups.contains(item) || ContainerUtil.find(filteredGroups.expandedGroups.values(), new Condition<TreeSet<String>>() [ CD ]
Line_12 $$ List<RefGroup> refGroups = refManager.group(refs)-->Line_13 $$ putActionsForReferences(refGroups, filteredGroups)[ FD ]
