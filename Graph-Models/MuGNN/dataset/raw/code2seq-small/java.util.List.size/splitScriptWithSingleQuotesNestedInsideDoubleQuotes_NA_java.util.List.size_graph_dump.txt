Line_6 $$ String script = statement1 + delim + statement2 + delim-->Line_8 $$ splitSqlScript(script, ';', statements)[ FD ]
Line_2 $$ public void splitScriptWithSingleQuotesNestedInsideDoubleQuotes() throws Exception -->Line_4 $$ String statement2 = "select '2' as \"Dilbert's\" from dual"[ CD ]
Line_7 $$ List<String> statements = new ArrayList<String>()-->Line_9 $$ assertEquals("wrong number of statements", 2, statements.size())[ FD ]
Line_2 $$ public void splitScriptWithSingleQuotesNestedInsideDoubleQuotes() throws Exception -->Line_3 $$ String statement1 = "select '1' as \"Dogbert's owner's\" from dual"[ CD ]
Line_7 $$ List<String> statements = new ArrayList<String>()-->Line_11 $$ assertEquals("statement 2 not split correctly", statement2, statements.get(1))[ FD ]
Line_2 $$ public void splitScriptWithSingleQuotesNestedInsideDoubleQuotes() throws Exception -->Line_7 $$ List<String> statements = new ArrayList<String>()[ CD ]
Line_7 $$ List<String> statements = new ArrayList<String>()-->Line_8 $$ splitSqlScript(script, ';', statements)[ FD ]
Line_2 $$ public void splitScriptWithSingleQuotesNestedInsideDoubleQuotes() throws Exception -->Line_11 $$ assertEquals("statement 2 not split correctly", statement2, statements.get(1))[ CD ]
Line_4 $$ String statement2 = "select '2' as \"Dilbert's\" from dual"-->Line_11 $$ assertEquals("statement 2 not split correctly", statement2, statements.get(1))[ FD ]
Line_2 $$ public void splitScriptWithSingleQuotesNestedInsideDoubleQuotes() throws Exception -->Line_8 $$ splitSqlScript(script, ';', statements)[ CD ]
Line_7 $$ List<String> statements = new ArrayList<String>()-->Line_10 $$ assertEquals("statement 1 not split correctly", statement1, statements.get(0))[ FD ]
Line_2 $$ public void splitScriptWithSingleQuotesNestedInsideDoubleQuotes() throws Exception -->Line_9 $$ assertEquals("wrong number of statements", 2, statements.size())[ CD ]
Line_3 $$ String statement1 = "select '1' as \"Dogbert's owner's\" from dual"-->Line_10 $$ assertEquals("statement 1 not split correctly", statement1, statements.get(0))[ FD ]
Line_2 $$ public void splitScriptWithSingleQuotesNestedInsideDoubleQuotes() throws Exception -->Line_5 $$ char delim = ';'[ CD ]
Line_2 $$ public void splitScriptWithSingleQuotesNestedInsideDoubleQuotes() throws Exception -->Line_6 $$ String script = statement1 + delim + statement2 + delim[ CD ]
Line_2 $$ public void splitScriptWithSingleQuotesNestedInsideDoubleQuotes() throws Exception -->Line_10 $$ assertEquals("statement 1 not split correctly", statement1, statements.get(0))[ CD ]
