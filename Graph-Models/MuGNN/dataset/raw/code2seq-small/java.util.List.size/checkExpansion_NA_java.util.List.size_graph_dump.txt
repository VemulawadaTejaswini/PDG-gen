Line_5 $$ for (int i = 0; i < expectedExpansions.length; i++) -->Line_6 $$ assertEquals("Expansion of " + filePattern, expectedExpansions[i], actualExpansions.get(i))[ CD ]
Line_3 $$ List<String> actualExpansions = GlobExpander.expand(filePattern)-->Line_4 $$ assertEquals("Different number of expansions", expectedExpansions.length, actualExpansions.size())[ FD ]
Line_2 $$ private void checkExpansion(String filePattern, String... expectedExpansions) throws IOException -->Line_3 $$ List<String> actualExpansions = GlobExpander.expand(filePattern)[ FD ]
Line_2 $$ private void checkExpansion(String filePattern, String... expectedExpansions) throws IOException -->Line_4 $$ assertEquals("Different number of expansions", expectedExpansions.length, actualExpansions.size())[ CD ]
Line_2 $$ private void checkExpansion(String filePattern, String... expectedExpansions) throws IOException -->Line_3 $$ List<String> actualExpansions = GlobExpander.expand(filePattern)[ CD ]
Line_5 $$ for (int i = 0; i < expectedExpansions.length; i++) -->Line_6 $$ assertEquals("Expansion of " + filePattern, expectedExpansions[i], actualExpansions.get(i))[ FD ]
Line_2 $$ private void checkExpansion(String filePattern, String... expectedExpansions) throws IOException -->Line_5 $$ for (int i = 0; i < expectedExpansions.length; i++) [ CD ]
Line_3 $$ List<String> actualExpansions = GlobExpander.expand(filePattern)-->Line_6 $$ assertEquals("Expansion of " + filePattern, expectedExpansions[i], actualExpansions.get(i))[ FD ]
