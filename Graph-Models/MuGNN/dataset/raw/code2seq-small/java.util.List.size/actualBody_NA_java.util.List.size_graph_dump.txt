Line_2 $$ private String actualBody(List<Map<String, Object>> bodies) throws IOException -->Line_7 $$ return bodyAsString(stash.unstashMap(bodies.get(0)))[ FD ]
Line_2 $$ private String actualBody(List<Map<String, Object>> bodies) throws IOException -->Line_3 $$ if (bodies.isEmpty()) [ FD ]
Line_9 $$ StringBuilder bodyBuilder = new StringBuilder()-->Line_11 $$ bodyBuilder.append(bodyAsString(stash.unstashMap(body))).append("\n")[ FD ]
Line_2 $$ private String actualBody(List<Map<String, Object>> bodies) throws IOException -->Line_9 $$ StringBuilder bodyBuilder = new StringBuilder()[ CD ]
Line_9 $$ StringBuilder bodyBuilder = new StringBuilder()-->Line_13 $$ return bodyBuilder.toString()[ FD ]
Line_3 $$ if (bodies.isEmpty()) -->Line_4 $$ return ""[ CD ]
Line_2 $$ private String actualBody(List<Map<String, Object>> bodies) throws IOException -->Line_6 $$ if (bodies.size() == 1) [ CD ]
Line_6 $$ if (bodies.size() == 1) -->Line_7 $$ return bodyAsString(stash.unstashMap(bodies.get(0)))[ CD ]
Line_2 $$ private String actualBody(List<Map<String, Object>> bodies) throws IOException -->Line_3 $$ if (bodies.isEmpty()) [ CD ]
Line_2 $$ private String actualBody(List<Map<String, Object>> bodies) throws IOException -->Line_13 $$ return bodyBuilder.toString()[ CD ]
Line_2 $$ private String actualBody(List<Map<String, Object>> bodies) throws IOException -->Line_6 $$ if (bodies.size() == 1) [ FD ]
Line_10 $$ for (Map<String, Object> body : bodies) -->Line_11 $$ bodyBuilder.append(bodyAsString(stash.unstashMap(body))).append("\n")[ FD ]
