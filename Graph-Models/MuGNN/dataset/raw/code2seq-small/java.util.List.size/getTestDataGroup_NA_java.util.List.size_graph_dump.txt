Line_2 $$ private static TestDataGroupVirtualFile getTestDataGroup(List<String> fileNames) -->Line_15 $$ if (file2.getName().substring(commonPrefixLength).toLowerCase().contains("after")) [ CD ]
Line_2 $$ private static TestDataGroupVirtualFile getTestDataGroup(List<String> fileNames) -->Line_12 $$ if (file1.getName().substring(commonPrefixLength).toLowerCase().contains("after")) [ CD ]
Line_7 $$ VirtualFile file2 = LocalFileSystem.getInstance().refreshAndFindFileByPath(fileNames.get(1))-->Line_15 $$ if (file2.getName().substring(commonPrefixLength).toLowerCase().contains("after")) [ FD ]
Line_6 $$ VirtualFile file1 = LocalFileSystem.getInstance().refreshAndFindFileByPath(fileNames.get(0))-->Line_12 $$ if (file1.getName().substring(commonPrefixLength).toLowerCase().contains("after")) [ FD ]
Line_2 $$ private static TestDataGroupVirtualFile getTestDataGroup(List<String> fileNames) -->Line_11 $$ final int commonPrefixLength = StringUtil.commonPrefixLength(file1.getName(), file2.getName())[ CD ]
Line_2 $$ private static TestDataGroupVirtualFile getTestDataGroup(List<String> fileNames) -->Line_7 $$ VirtualFile file2 = LocalFileSystem.getInstance().refreshAndFindFileByPath(fileNames.get(1))[ CD ]
Line_2 $$ private static TestDataGroupVirtualFile getTestDataGroup(List<String> fileNames) -->Line_18 $$ return null[ CD ]
Line_11 $$ final int commonPrefixLength = StringUtil.commonPrefixLength(file1.getName(), file2.getName())-->Line_12 $$ if (file1.getName().substring(commonPrefixLength).toLowerCase().contains("after")) [ FD ]
Line_12 $$ if (file1.getName().substring(commonPrefixLength).toLowerCase().contains("after")) -->Line_13 $$ return new TestDataGroupVirtualFile(file2, file1)[ CD ]
Line_2 $$ private static TestDataGroupVirtualFile getTestDataGroup(List<String> fileNames) -->Line_3 $$ if (fileNames.size() != 2) [ FD ]
Line_8 $$ if (file1 == null || file2 == null) -->Line_9 $$ return null[ CD ]
Line_2 $$ private static TestDataGroupVirtualFile getTestDataGroup(List<String> fileNames) -->Line_6 $$ VirtualFile file1 = LocalFileSystem.getInstance().refreshAndFindFileByPath(fileNames.get(0))[ FD ]
Line_7 $$ VirtualFile file2 = LocalFileSystem.getInstance().refreshAndFindFileByPath(fileNames.get(1))-->Line_11 $$ final int commonPrefixLength = StringUtil.commonPrefixLength(file1.getName(), file2.getName())[ FD ]
Line_2 $$ private static TestDataGroupVirtualFile getTestDataGroup(List<String> fileNames) -->Line_6 $$ VirtualFile file1 = LocalFileSystem.getInstance().refreshAndFindFileByPath(fileNames.get(0))[ CD ]
Line_2 $$ private static TestDataGroupVirtualFile getTestDataGroup(List<String> fileNames) -->Line_7 $$ VirtualFile file2 = LocalFileSystem.getInstance().refreshAndFindFileByPath(fileNames.get(1))[ FD ]
Line_15 $$ if (file2.getName().substring(commonPrefixLength).toLowerCase().contains("after")) -->Line_16 $$ return new TestDataGroupVirtualFile(file1, file2)[ CD ]
Line_2 $$ private static TestDataGroupVirtualFile getTestDataGroup(List<String> fileNames) -->Line_8 $$ if (file1 == null || file2 == null) [ CD ]
Line_11 $$ final int commonPrefixLength = StringUtil.commonPrefixLength(file1.getName(), file2.getName())-->Line_15 $$ if (file2.getName().substring(commonPrefixLength).toLowerCase().contains("after")) [ FD ]
Line_6 $$ VirtualFile file1 = LocalFileSystem.getInstance().refreshAndFindFileByPath(fileNames.get(0))-->Line_11 $$ final int commonPrefixLength = StringUtil.commonPrefixLength(file1.getName(), file2.getName())[ FD ]
Line_2 $$ private static TestDataGroupVirtualFile getTestDataGroup(List<String> fileNames) -->Line_3 $$ if (fileNames.size() != 2) [ CD ]
Line_3 $$ if (fileNames.size() != 2) -->Line_4 $$ return null[ CD ]
