Line_4 $$ List<?> l = type.getSerializer().deserializeForNativeProtocol(value, options.getProtocolVersion())-->Line_7 $$ List<List<ByteBuffer>> elements = new ArrayList(l.size())[ FD ]
Line_2 $$ public static InValue fromSerialized(ByteBuffer value, ListType type, QueryOptions options) throws InvalidRequestException -->Line_5 $$ assert type.getElementsType() instanceof TupleType[ FD ]
Line_2 $$ public static InValue fromSerialized(ByteBuffer value, ListType type, QueryOptions options) throws InvalidRequestException -->Line_8 $$ elements.add(Arrays.asList(tupleType.split(type.getElementsType().decompose(element))))[ FD ]
Line_2 $$ public static InValue fromSerialized(ByteBuffer value, ListType type, QueryOptions options) throws InvalidRequestException -->Line_4 $$ List<?> l = type.getSerializer().deserializeForNativeProtocol(value, options.getProtocolVersion())[ FD ]
Line_7 $$ List<List<ByteBuffer>> elements = new ArrayList(l.size())-->Line_8 $$ elements.add(Arrays.asList(tupleType.split(type.getElementsType().decompose(element))))[ FD ]
Line_6 $$ TupleType tupleType = (TupleType) type.getElementsType()-->Line_8 $$ elements.add(Arrays.asList(tupleType.split(type.getElementsType().decompose(element))))[ FD ]
Line_2 $$ public static InValue fromSerialized(ByteBuffer value, ListType type, QueryOptions options) throws InvalidRequestException -->Line_6 $$ TupleType tupleType = (TupleType) type.getElementsType()[ FD ]
