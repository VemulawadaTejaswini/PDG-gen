Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_75 $$ getBasic(annotationList, defaults)[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_32 $$ addIfNotNull(annotationList, getSequenceGenerator(tree, defaults))[ FD ]
Line_65 $$ if (transientAnn != null) -->Line_72 $$ getId(annotationList, defaults)[ CD ]
Line_65 $$ if (transientAnn != null) -->Line_79 $$ getAssociation(OneToMany.class, annotationList, defaults)[ CD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_85 $$ addIfNotNull(annotationList, getTableGenerator(elementsForProperty, defaults))[ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_39 $$ addIfNotNull(annotationList, getExcludeDefaultListeners(tree, defaults))[ CD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)[ CD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_50 $$ checkForOrphanProperties(tree)[ CD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_32 $$ addIfNotNull(annotationList, getSequenceGenerator(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_74 $$ getEmbedded(annotationList, defaults)[ FD ]
Line_51 $$ if (className != null) -->Line_54 $$ Annotation[] annotations = getPhysicalAnnotations()[ CD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_22 $$ addIfNotNull(annotationList, getMappedSuperclass(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_85 $$ addIfNotNull(annotationList, getTableGenerator(elementsForProperty, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_40 $$ addIfNotNull(annotationList, getExcludeSuperclassListeners(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_37 $$ addIfNotNull(annotationList, getNamedEntityGraphs(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_78 $$ getAssociation(OneToOne.class, annotationList, defaults)[ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_12 $$ Annotation[] annotations = getPhysicalAnnotations()[ CD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_24 $$ addIfNotNull(annotationList, getTable(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_44 $$ addIfNotNull(annotationList, getEntityListeners(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_23 $$ addIfNotNull(annotationList, getEmbeddable(tree, defaults))[ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_36 $$ addIfNotNull(annotationList, getNamedStoredProcedureQueries(tree, defaults))[ CD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_41 $$ addIfNotNull(annotationList, getAccessType(tree, defaults))[ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_35 $$ addIfNotNull(annotationList, getNamedNativeQueries(tree, defaults))[ CD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_37 $$ addIfNotNull(annotationList, getNamedEntityGraphs(tree, defaults))[ CD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_33 $$ addIfNotNull(annotationList, getTableGenerator(tree, defaults))[ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_44 $$ addIfNotNull(annotationList, getEntityListeners(tree, defaults))[ CD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_39 $$ addIfNotNull(annotationList, getExcludeDefaultListeners(tree, defaults))[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_84 $$ addIfNotNull(annotationList, getSequenceGenerator(elementsForProperty, defaults))[ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_29 $$ addIfNotNull(annotationList, getInheritance(tree, defaults))[ CD ]
Line_65 $$ if (transientAnn != null) -->Line_73 $$ getEmbeddedId(annotationList, defaults)[ CD ]
Line_65 $$ if (transientAnn != null) -->Line_81 $$ getAssociation(Any.class, annotationList, defaults)[ CD ]
Line_65 $$ if (transientAnn != null) -->Line_86 $$ addIfNotNull(annotationList, getConvertsForAttribute(elementsForProperty, defaults))[ CD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_42 $$ addIfNotNull(annotationList, getAttributeOverrides(tree, defaults, true))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_46 $$ this.annotations = annotationList.toArray(new Annotation[annotationList.size()])[ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_22 $$ addIfNotNull(annotationList, getMappedSuperclass(tree, defaults))[ CD ]
Line_15 $$ for (Annotation annotation : annotations) -->Line_58 $$ if (!annotationToXml.containsKey(annotation.annotationType())) [ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_43 $$ addIfNotNull(annotationList, getAssociationOverrides(tree, defaults, true))[ CD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_43 $$ addIfNotNull(annotationList, getAssociationOverrides(tree, defaults, true))[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_82 $$ getAssociation(ManyToAny.class, annotationList, defaults)[ FD ]
Line_51 $$ if (className != null) -->Line_63 $$ preCalculateElementsForProperty(tree)[ CD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_76 $$ getVersion(annotationList, defaults)[ FD ]
Line_65 $$ if (transientAnn != null) -->Line_66 $$ annotationList.add(transientAnn)[ CD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_29 $$ addIfNotNull(annotationList, getInheritance(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_42 $$ addIfNotNull(annotationList, getAttributeOverrides(tree, defaults, true))[ FD ]
Line_64 $$ Transient transientAnn = getTransient(defaults)-->Line_65 $$ if (transientAnn != null) [ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_27 $$ addIfNotNull(annotationList, getIdClass(tree, defaults))[ CD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_70 $$ addIfNotNull(annotationList, annotation)[ FD ]
Line_65 $$ if (transientAnn != null) -->Line_83 $$ getElementCollection(annotationList, defaults)[ CD ]
Line_51 $$ if (className != null) -->Line_65 $$ if (transientAnn != null) [ CD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_83 $$ getElementCollection(annotationList, defaults)[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_79 $$ getAssociation(OneToMany.class, annotationList, defaults)[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_27 $$ addIfNotNull(annotationList, getIdClass(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_33 $$ addIfNotNull(annotationList, getTableGenerator(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_30 $$ addIfNotNull(annotationList, getDiscriminatorValue(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_31 $$ addIfNotNull(annotationList, getDiscriminatorColumn(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_35 $$ addIfNotNull(annotationList, getNamedNativeQueries(tree, defaults))[ FD ]
Line_68 $$ if (defaults.canUseJavaAnnotations()) -->Line_70 $$ addIfNotNull(annotationList, annotation)[ CD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_83 $$ getElementCollection(annotationList, defaults)[ FD ]
Line_68 $$ if (defaults.canUseJavaAnnotations()) -->Line_69 $$ Annotation annotation = getPhysicalAnnotation(Access.class)[ CD ]
Line_65 $$ if (transientAnn != null) -->Line_78 $$ getAssociation(OneToOne.class, annotationList, defaults)[ CD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_36 $$ addIfNotNull(annotationList, getNamedStoredProcedureQueries(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_36 $$ addIfNotNull(annotationList, getNamedStoredProcedureQueries(tree, defaults))[ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_46 $$ this.annotations = annotationList.toArray(new Annotation[annotationList.size()])[ CD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_73 $$ getEmbeddedId(annotationList, defaults)[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_43 $$ addIfNotNull(annotationList, getAssociationOverrides(tree, defaults, true))[ FD ]
Line_51 $$ if (className != null) -->Line_64 $$ Transient transientAnn = getTransient(defaults)[ CD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_23 $$ addIfNotNull(annotationList, getEmbeddable(tree, defaults))[ CD ]
Line_47 $$ for (Annotation ann : this.annotations) -->Line_92 $$ annotationsMap.put(ann.annotationType(), ann)[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_72 $$ getId(annotationList, defaults)[ FD ]
Line_7 $$ if (annotations == null) -->Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)[ CD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_38 $$ addIfNotNull(annotationList, getSqlResultSetMappings(tree, defaults))[ CD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_21 $$ addIfNotNull(annotationList, getEntity(tree, defaults))[ FD ]
Line_64 $$ Transient transientAnn = getTransient(defaults)-->Line_66 $$ annotationList.add(transientAnn)[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_88 $$ processEventAnnotations(annotationList, defaults)[ FD ]
Line_65 $$ if (transientAnn != null) -->Line_80 $$ getAssociation(ManyToMany.class, annotationList, defaults)[ CD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_45 $$ addIfNotNull(annotationList, getConverts(tree, defaults))[ CD ]
Line_65 $$ if (transientAnn != null) -->Line_85 $$ addIfNotNull(annotationList, getTableGenerator(elementsForProperty, defaults))[ CD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_82 $$ getAssociation(ManyToAny.class, annotationList, defaults)[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_31 $$ addIfNotNull(annotationList, getDiscriminatorColumn(tree, defaults))[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_64 $$ Transient transientAnn = getTransient(defaults)[ FD ]
Line_65 $$ if (transientAnn != null) -->Line_74 $$ getEmbedded(annotationList, defaults)[ CD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_24 $$ addIfNotNull(annotationList, getTable(tree, defaults))[ CD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_37 $$ addIfNotNull(annotationList, getNamedEntityGraphs(tree, defaults))[ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_51 $$ if (className != null) [ CD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_80 $$ getAssociation(ManyToMany.class, annotationList, defaults)[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_27 $$ addIfNotNull(annotationList, getIdClass(tree, defaults))[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_73 $$ getEmbeddedId(annotationList, defaults)[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_25 $$ addIfNotNull(annotationList, getSecondaryTables(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_84 $$ addIfNotNull(annotationList, getSequenceGenerator(elementsForProperty, defaults))[ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_28 $$ addIfNotNull(annotationList, getCacheable(tree, defaults))[ CD ]
Line_65 $$ if (transientAnn != null) -->Line_75 $$ getBasic(annotationList, defaults)[ CD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_25 $$ addIfNotNull(annotationList, getSecondaryTables(tree, defaults))[ CD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_35 $$ addIfNotNull(annotationList, getNamedNativeQueries(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_34 $$ addIfNotNull(annotationList, getNamedQueries(tree, defaults))[ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_42 $$ addIfNotNull(annotationList, getAttributeOverrides(tree, defaults, true))[ CD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_21 $$ addIfNotNull(annotationList, getEntity(tree, defaults))[ CD ]
Line_51 $$ if (className != null) -->Line_95 $$ this.annotations = getPhysicalAnnotations()[ CD ]
Line_47 $$ for (Annotation ann : this.annotations) -->Line_98 $$ annotationsMap.put(ann.annotationType(), ann)[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_80 $$ getAssociation(ManyToMany.class, annotationList, defaults)[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_30 $$ addIfNotNull(annotationList, getDiscriminatorValue(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_86 $$ addIfNotNull(annotationList, getConvertsForAttribute(elementsForProperty, defaults))[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_76 $$ getVersion(annotationList, defaults)[ FD ]
Line_65 $$ if (transientAnn != null) -->Line_77 $$ getAssociation(ManyToOne.class, annotationList, defaults)[ CD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_74 $$ getEmbedded(annotationList, defaults)[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_40 $$ addIfNotNull(annotationList, getExcludeSuperclassListeners(tree, defaults))[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_39 $$ addIfNotNull(annotationList, getExcludeDefaultListeners(tree, defaults))[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_79 $$ getAssociation(OneToMany.class, annotationList, defaults)[ FD ]
Line_65 $$ if (transientAnn != null) -->Line_76 $$ getVersion(annotationList, defaults)[ CD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_66 $$ annotationList.add(transientAnn)[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_38 $$ addIfNotNull(annotationList, getSqlResultSetMappings(tree, defaults))[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_28 $$ addIfNotNull(annotationList, getCacheable(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_38 $$ addIfNotNull(annotationList, getSqlResultSetMappings(tree, defaults))[ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_41 $$ addIfNotNull(annotationList, getAccessType(tree, defaults))[ CD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_23 $$ addIfNotNull(annotationList, getEmbeddable(tree, defaults))[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_77 $$ getAssociation(ManyToOne.class, annotationList, defaults)[ FD ]
Line_65 $$ if (transientAnn != null) -->Line_82 $$ getAssociation(ManyToAny.class, annotationList, defaults)[ CD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_31 $$ addIfNotNull(annotationList, getDiscriminatorColumn(tree, defaults))[ CD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_72 $$ getId(annotationList, defaults)[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_41 $$ addIfNotNull(annotationList, getAccessType(tree, defaults))[ FD ]
Line_7 $$ if (annotations == null) -->Line_9 $$ if (className != null && propertyName == null) [ CD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_25 $$ addIfNotNull(annotationList, getSecondaryTables(tree, defaults))[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_45 $$ addIfNotNull(annotationList, getConverts(tree, defaults))[ FD ]
Line_65 $$ if (transientAnn != null) -->Line_84 $$ addIfNotNull(annotationList, getSequenceGenerator(elementsForProperty, defaults))[ CD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_22 $$ addIfNotNull(annotationList, getMappedSuperclass(tree, defaults))[ FD ]
Line_51 $$ if (className != null) -->Line_88 $$ processEventAnnotations(annotationList, defaults)[ CD ]
Line_65 $$ if (transientAnn != null) -->Line_68 $$ if (defaults.canUseJavaAnnotations()) [ CD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_26 $$ addIfNotNull(annotationList, getPrimaryKeyJoinColumns(tree, defaults, true))[ CD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_86 $$ addIfNotNull(annotationList, getConvertsForAttribute(elementsForProperty, defaults))[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_26 $$ addIfNotNull(annotationList, getPrimaryKeyJoinColumns(tree, defaults, true))[ FD ]
Line_47 $$ for (Annotation ann : this.annotations) -->Line_48 $$ annotationsMap.put(ann.annotationType(), ann)[ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_32 $$ addIfNotNull(annotationList, getSequenceGenerator(tree, defaults))[ CD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_81 $$ getAssociation(Any.class, annotationList, defaults)[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_81 $$ getAssociation(Any.class, annotationList, defaults)[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_44 $$ addIfNotNull(annotationList, getEntityListeners(tree, defaults))[ FD ]
Line_15 $$ for (Annotation annotation : annotations) -->Line_70 $$ addIfNotNull(annotationList, annotation)[ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_40 $$ addIfNotNull(annotationList, getExcludeSuperclassListeners(tree, defaults))[ CD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_45 $$ addIfNotNull(annotationList, getConverts(tree, defaults))[ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_33 $$ addIfNotNull(annotationList, getTableGenerator(tree, defaults))[ CD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_29 $$ addIfNotNull(annotationList, getInheritance(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_77 $$ getAssociation(ManyToOne.class, annotationList, defaults)[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_34 $$ addIfNotNull(annotationList, getNamedQueries(tree, defaults))[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_21 $$ addIfNotNull(annotationList, getEntity(tree, defaults))[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_68 $$ if (defaults.canUseJavaAnnotations()) [ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_26 $$ addIfNotNull(annotationList, getPrimaryKeyJoinColumns(tree, defaults, true))[ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_30 $$ addIfNotNull(annotationList, getDiscriminatorValue(tree, defaults))[ CD ]
Line_15 $$ for (Annotation annotation : annotations) -->Line_16 $$ if (!annotationToXml.containsKey(annotation.annotationType())) [ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_75 $$ getBasic(annotationList, defaults)[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_78 $$ getAssociation(OneToOne.class, annotationList, defaults)[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_88 $$ processEventAnnotations(annotationList, defaults)[ FD ]
Line_8 $$ XMLContext.Default defaults = xmlContext.getDefault(className)-->Line_24 $$ addIfNotNull(annotationList, getTable(tree, defaults))[ FD ]
Line_13 $$ List<Annotation> annotationList = new ArrayList<Annotation>(annotations.length + 5)-->Line_28 $$ addIfNotNull(annotationList, getCacheable(tree, defaults))[ FD ]
Line_9 $$ if (className != null && propertyName == null) -->Line_34 $$ addIfNotNull(annotationList, getNamedQueries(tree, defaults))[ CD ]
