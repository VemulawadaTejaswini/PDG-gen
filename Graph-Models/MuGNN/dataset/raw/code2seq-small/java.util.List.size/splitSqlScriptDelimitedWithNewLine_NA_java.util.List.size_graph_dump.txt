Line_9 $$ List<String> statements = new ArrayList<String>()-->Line_14 $$ assertEquals("statement 3 not split correctly", statement3, statements.get(2))[ FD ]
Line_9 $$ List<String> statements = new ArrayList<String>()-->Line_12 $$ assertEquals("statement 1 not split correctly", statement1, statements.get(0))[ FD ]
Line_6 $$ String statement3 = "insert into orders(id, order_date, customer_id) values (1, '2008-01-02', 2)"-->Line_14 $$ assertEquals("statement 3 not split correctly", statement3, statements.get(2))[ FD ]
Line_9 $$ List<String> statements = new ArrayList<String>()-->Line_11 $$ assertEquals("wrong number of statements", 3, statements.size())[ FD ]
Line_7 $$ char delim = '\n'-->Line_10 $$ splitSqlScript(script, delim, statements)[ FD ]
Line_9 $$ List<String> statements = new ArrayList<String>()-->Line_10 $$ splitSqlScript(script, delim, statements)[ FD ]
Line_5 $$ String statement2 = "insert into orders(id, order_date, customer_id) values (1, '2008-01-02', 2)"-->Line_13 $$ assertEquals("statement 2 not split correctly", statement2, statements.get(1))[ FD ]
Line_8 $$ String script = statement1 + delim + statement2 + delim + statement3 + delim-->Line_10 $$ splitSqlScript(script, delim, statements)[ FD ]
Line_4 $$ String statement1 = "insert into customer (id, name) values (1, 'Rod ; Johnson'), (2, 'Adrian \n Collier')"-->Line_12 $$ assertEquals("statement 1 not split correctly", statement1, statements.get(0))[ FD ]
Line_9 $$ List<String> statements = new ArrayList<String>()-->Line_13 $$ assertEquals("statement 2 not split correctly", statement2, statements.get(1))[ FD ]
