Line_2 $$ public void withIntegerArray() throws Exception -->Line_3 $$ this.tag.setPath("someIntegerArray")[ CD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_18 $$ assertEquals("select", selectElement.getName())[ CD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_25 $$ assertEquals("'34' node not selected", "selected", e.attribute("selected").getValue())[ CD ]
Line_22 $$ Element e = (Element) selectElement.selectSingleNode("option[text() = '12']")-->Line_24 $$ e = (Element) selectElement.selectSingleNode("option[text() = '34']")[ FD ]
Line_13 $$ SAXReader reader = new SAXReader()-->Line_14 $$ Document document = reader.read(new StringReader(output))[ FD ]
Line_24 $$ e = (Element) selectElement.selectSingleNode("option[text() = '34']")-->Line_25 $$ assertEquals("'34' node not selected", "selected", e.attribute("selected").getValue())[ FD ]
Line_9 $$ int result = this.tag.doStartTag()-->Line_10 $$ assertEquals(Tag.SKIP_BODY, result)[ FD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_17 $$ Element selectElement = rootElement.element("select")[ CD ]
Line_20 $$ List children = selectElement.elements()-->Line_21 $$ assertEquals("Incorrect number of children", array.length, children.size())[ FD ]
Line_11 $$ String output = getOutput()-->Line_12 $$ output = "<doc>" + output + "</doc>"[ FD ]
Line_17 $$ Element selectElement = rootElement.element("select")-->Line_24 $$ e = (Element) selectElement.selectSingleNode("option[text() = '34']")[ FD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_10 $$ assertEquals(Tag.SKIP_BODY, result)[ CD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_14 $$ Document document = reader.read(new StringReader(output))[ CD ]
Line_15 $$ Element rootElement = document.getRootElement()-->Line_17 $$ Element selectElement = rootElement.element("select")[ FD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_19 $$ assertEquals("someIntegerArray", selectElement.attribute("name").getValue())[ CD ]
Line_17 $$ Element selectElement = rootElement.element("select")-->Line_20 $$ List children = selectElement.elements()[ FD ]
Line_17 $$ Element selectElement = rootElement.element("select")-->Line_22 $$ Element e = (Element) selectElement.selectSingleNode("option[text() = '12']")[ FD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_20 $$ List children = selectElement.elements()[ CD ]
Line_22 $$ Element e = (Element) selectElement.selectSingleNode("option[text() = '12']")-->Line_25 $$ assertEquals("'34' node not selected", "selected", e.attribute("selected").getValue())[ FD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_21 $$ assertEquals("Incorrect number of children", array.length, children.size())[ CD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_5 $$ for (int i = 0; i < array.length; i++) [ CD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_15 $$ Element rootElement = document.getRootElement()[ CD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_8 $$ this.tag.setItems(array)[ CD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_24 $$ e = (Element) selectElement.selectSingleNode("option[text() = '34']")[ CD ]
Line_5 $$ for (int i = 0; i < array.length; i++) -->Line_6 $$ array[i] = new Integer(i)[ CD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_9 $$ int result = this.tag.doStartTag()[ CD ]
Line_14 $$ Document document = reader.read(new StringReader(output))-->Line_15 $$ Element rootElement = document.getRootElement()[ FD ]
Line_17 $$ Element selectElement = rootElement.element("select")-->Line_19 $$ assertEquals("someIntegerArray", selectElement.attribute("name").getValue())[ FD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_16 $$ assertEquals(2, rootElement.elements().size())[ CD ]
Line_17 $$ Element selectElement = rootElement.element("select")-->Line_18 $$ assertEquals("select", selectElement.getName())[ FD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_11 $$ String output = getOutput()[ CD ]
Line_4 $$ Integer[] array = new Integer[50]-->Line_8 $$ this.tag.setItems(array)[ FD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_4 $$ Integer[] array = new Integer[50][ CD ]
Line_15 $$ Element rootElement = document.getRootElement()-->Line_16 $$ assertEquals(2, rootElement.elements().size())[ FD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_12 $$ output = "<doc>" + output + "</doc>"[ CD ]
Line_22 $$ Element e = (Element) selectElement.selectSingleNode("option[text() = '12']")-->Line_23 $$ assertEquals("'12' node not selected", "selected", e.attribute("selected").getValue())[ FD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_13 $$ SAXReader reader = new SAXReader()[ CD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_22 $$ Element e = (Element) selectElement.selectSingleNode("option[text() = '12']")[ CD ]
Line_2 $$ public void withIntegerArray() throws Exception -->Line_23 $$ assertEquals("'12' node not selected", "selected", e.attribute("selected").getValue())[ CD ]
