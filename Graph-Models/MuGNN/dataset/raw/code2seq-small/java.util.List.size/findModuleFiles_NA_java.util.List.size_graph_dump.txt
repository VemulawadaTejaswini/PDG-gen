Line_2 $$ private File[] findModuleFiles(final Element root) -->Line_3 $$ final Element modulesManager = JDomSerializationUtil.findComponent(root, ModuleManagerImpl.COMPONENT_NAME)[ FD ]
Line_2 $$ private File[] findModuleFiles(final Element root) -->Line_3 $$ final Element modulesManager = JDomSerializationUtil.findComponent(root, ModuleManagerImpl.COMPONENT_NAME)[ CD ]
Line_2 $$ private File[] findModuleFiles(final Element root) -->Line_10 $$ List<File> files = new ArrayList<File>()[ CD ]
Line_2 $$ private File[] findModuleFiles(final Element root) -->Line_9 $$ final ExpandMacroToPathMap macros = createExpandMacroMap()[ CD ]
Line_6 $$ final Element modules = modulesManager.getChild(ModuleManagerImpl.ELEMENT_MODULES)-->Line_11 $$ for (Element module : JDOMUtil.getChildren(modules, ModuleManagerImpl.ELEMENT_MODULE)) [ FD ]
Line_3 $$ final Element modulesManager = JDomSerializationUtil.findComponent(root, ModuleManagerImpl.COMPONENT_NAME)-->Line_6 $$ final Element modules = modulesManager.getChild(ModuleManagerImpl.ELEMENT_MODULES)[ FD ]
Line_12 $$ String filePath = module.getAttributeValue(ModuleManagerImpl.ATTRIBUTE_FILEPATH)-->Line_14 $$ files.add(new File(FileUtil.toSystemDependentName(filePath)))[ FD ]
Line_13 $$ filePath = macros.substitute(filePath, true)-->Line_14 $$ files.add(new File(FileUtil.toSystemDependentName(filePath)))[ FD ]
Line_2 $$ private File[] findModuleFiles(final Element root) -->Line_4 $$ if (modulesManager == null)[ CD ]
Line_7 $$ if (modules == null)-->Line_8 $$ return new File[0][ CD ]
Line_12 $$ String filePath = module.getAttributeValue(ModuleManagerImpl.ATTRIBUTE_FILEPATH)-->Line_13 $$ filePath = macros.substitute(filePath, true)[ FD ]
Line_2 $$ private File[] findModuleFiles(final Element root) -->Line_7 $$ if (modules == null)[ CD ]
Line_3 $$ final Element modulesManager = JDomSerializationUtil.findComponent(root, ModuleManagerImpl.COMPONENT_NAME)-->Line_4 $$ if (modulesManager == null)[ FD ]
Line_11 $$ for (Element module : JDOMUtil.getChildren(modules, ModuleManagerImpl.ELEMENT_MODULE)) -->Line_12 $$ String filePath = module.getAttributeValue(ModuleManagerImpl.ATTRIBUTE_FILEPATH)[ FD ]
Line_4 $$ if (modulesManager == null)-->Line_5 $$ return new File[0][ CD ]
Line_2 $$ private File[] findModuleFiles(final Element root) -->Line_6 $$ final Element modules = modulesManager.getChild(ModuleManagerImpl.ELEMENT_MODULES)[ CD ]
Line_9 $$ final ExpandMacroToPathMap macros = createExpandMacroMap()-->Line_13 $$ filePath = macros.substitute(filePath, true)[ FD ]
Line_2 $$ private File[] findModuleFiles(final Element root) -->Line_16 $$ return files.toArray(new File[files.size()])[ CD ]
Line_6 $$ final Element modules = modulesManager.getChild(ModuleManagerImpl.ELEMENT_MODULES)-->Line_7 $$ if (modules == null)[ FD ]
Line_10 $$ List<File> files = new ArrayList<File>()-->Line_16 $$ return files.toArray(new File[files.size()])[ FD ]
Line_10 $$ List<File> files = new ArrayList<File>()-->Line_14 $$ files.add(new File(FileUtil.toSystemDependentName(filePath)))[ FD ]
