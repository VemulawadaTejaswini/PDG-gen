Line_8 $$ Graph ret = null-->Line_24 $$ ret.addSubGraph(factory.generateStateGraph(gname))[ FD ]
Line_13 $$ Class clz = Class.forName(className)-->Line_20 $$ String gname = clz.getSimpleName()[ FD ]
Line_20 $$ String gname = clz.getSimpleName()-->Line_24 $$ ret.addSubGraph(factory.generateStateGraph(gname))[ FD ]
Line_17 $$ if (classes.size() == 1) -->Line_18 $$ return factory.generateStateGraph(graphName)[ CD ]
Line_20 $$ String gname = clz.getSimpleName()-->Line_22 $$ gname = gname.substring(0, gname.length() - 4)[ FD ]
Line_21 $$ if (gname.endsWith("Impl")) -->Line_22 $$ gname = gname.substring(0, gname.length() - 4)[ CD ]
Line_9 $$ if (classes.size() != 1) -->Line_10 $$ ret = new Graph(graphName)[ CD ]
Line_22 $$ gname = gname.substring(0, gname.length() - 4)-->Line_24 $$ ret.addSubGraph(factory.generateStateGraph(gname))[ FD ]
Line_13 $$ Class clz = Class.forName(className)-->Line_14 $$ Field factoryField = clz.getDeclaredField("stateMachineFactory")[ FD ]
Line_20 $$ String gname = clz.getSimpleName()-->Line_21 $$ if (gname.endsWith("Impl")) [ FD ]
Line_14 $$ Field factoryField = clz.getDeclaredField("stateMachineFactory")-->Line_15 $$ factoryField.setAccessible(true)[ FD ]
Line_12 $$ for (String className : classes) -->Line_13 $$ Class clz = Class.forName(className)[ FD ]
Line_16 $$ StateMachineFactory factory = (StateMachineFactory) factoryField.get(null)-->Line_24 $$ ret.addSubGraph(factory.generateStateGraph(gname))[ FD ]
Line_10 $$ ret = new Graph(graphName)-->Line_24 $$ ret.addSubGraph(factory.generateStateGraph(gname))[ FD ]
Line_8 $$ Graph ret = null-->Line_10 $$ ret = new Graph(graphName)[ FD ]
Line_16 $$ StateMachineFactory factory = (StateMachineFactory) factoryField.get(null)-->Line_18 $$ return factory.generateStateGraph(graphName)[ FD ]
Line_14 $$ Field factoryField = clz.getDeclaredField("stateMachineFactory")-->Line_16 $$ StateMachineFactory factory = (StateMachineFactory) factoryField.get(null)[ FD ]
