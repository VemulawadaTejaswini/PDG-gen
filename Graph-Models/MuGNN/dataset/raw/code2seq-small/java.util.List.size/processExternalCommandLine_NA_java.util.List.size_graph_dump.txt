Line_38 $$ line = -1-->Line_47 $$ if (line != -1) [ FD ]
Line_24 $$ for (int i = 0, argsSize = args.size(); i < argsSize; i++) -->Line_25 $$ String arg = args.get(i)[ FD ]
Line_42 $$ arg = StringUtil.stripQuotesAroundValue(arg)-->Line_26 $$ if (arg.equals(StartupUtil.NO_SPLASH)) [ FD ]
Line_4 $$ if (args.size() > 0) -->Line_5 $$ LOG.info("External command line:")[ CD ]
Line_45 $$ arg = currentDirectory != null ? new File(currentDirectory, arg).getAbsolutePath() : new File(arg).getAbsolutePath()-->Line_29 $$ if (arg.equals("-l") || arg.equals("--line")) [ FD ]
Line_36 $$ line = Integer.parseInt(args.get(i))-->Line_38 $$ line = -1[ FD ]
Line_50 $$ lastOpenedProject = doOpenFile(virtualFile, line)-->Line_55 $$ lastOpenedProject = doOpenFileOrProject(arg)[ FD ]
Line_48 $$ final VirtualFile virtualFile = LocalFileSystem.getInstance().refreshAndFindFileByPath(arg)-->Line_50 $$ lastOpenedProject = doOpenFile(virtualFile, line)[ FD ]
Line_7 $$ for (String arg : args) -->Line_26 $$ if (arg.equals(StartupUtil.NO_SPLASH)) [ FD ]
Line_42 $$ arg = StringUtil.stripQuotesAroundValue(arg)-->Line_29 $$ if (arg.equals("-l") || arg.equals("--line")) [ FD ]
Line_12 $$ if (args.size() > 0) -->Line_13 $$ String command = args.get(0)[ CD ]
Line_45 $$ arg = currentDirectory != null ? new File(currentDirectory, arg).getAbsolutePath() : new File(arg).getAbsolutePath()-->Line_48 $$ final VirtualFile virtualFile = LocalFileSystem.getInstance().refreshAndFindFileByPath(arg)[ FD ]
Line_23 $$ int line = -1-->Line_50 $$ lastOpenedProject = doOpenFile(virtualFile, line)[ FD ]
Line_45 $$ arg = currentDirectory != null ? new File(currentDirectory, arg).getAbsolutePath() : new File(arg).getAbsolutePath()-->Line_26 $$ if (arg.equals(StartupUtil.NO_SPLASH)) [ FD ]
Line_25 $$ String arg = args.get(i)-->Line_29 $$ if (arg.equals("-l") || arg.equals("--line")) [ FD ]
Line_25 $$ String arg = args.get(i)-->Line_45 $$ arg = currentDirectory != null ? new File(currentDirectory, arg).getAbsolutePath() : new File(arg).getAbsolutePath()[ FD ]
Line_42 $$ arg = StringUtil.stripQuotesAroundValue(arg)-->Line_48 $$ final VirtualFile virtualFile = LocalFileSystem.getInstance().refreshAndFindFileByPath(arg)[ FD ]
Line_23 $$ int line = -1-->Line_38 $$ line = -1[ FD ]
Line_7 $$ for (String arg : args) -->Line_45 $$ arg = currentDirectory != null ? new File(currentDirectory, arg).getAbsolutePath() : new File(arg).getAbsolutePath()[ FD ]
Line_25 $$ String arg = args.get(i)-->Line_42 $$ arg = StringUtil.stripQuotesAroundValue(arg)[ FD ]
Line_14 $$ for (ApplicationStarter starter : Extensions.getExtensions(ApplicationStarter.EP_NAME)) -->Line_15 $$ if (command.equals(starter.getCommandName()) && starter instanceof ApplicationStarterEx && ((ApplicationStarterEx) starter).canProcessExternalCommandLine()) [ FD ]
Line_24 $$ for (int i = 0, argsSize = args.size(); i < argsSize; i++) -->Line_29 $$ if (arg.equals("-l") || arg.equals("--line")) [ CD ]
Line_47 $$ if (line != -1) -->Line_48 $$ final VirtualFile virtualFile = LocalFileSystem.getInstance().refreshAndFindFileByPath(arg)[ CD ]
Line_29 $$ if (arg.equals("-l") || arg.equals("--line")) -->Line_41 $$ if (StringUtil.isQuotedString(arg)) [ CD ]
Line_36 $$ line = Integer.parseInt(args.get(i))-->Line_47 $$ if (line != -1) [ FD ]
Line_36 $$ line = Integer.parseInt(args.get(i))-->Line_50 $$ lastOpenedProject = doOpenFile(virtualFile, line)[ FD ]
Line_7 $$ for (String arg : args) -->Line_55 $$ lastOpenedProject = doOpenFileOrProject(arg)[ FD ]
Line_7 $$ for (String arg : args) -->Line_48 $$ final VirtualFile virtualFile = LocalFileSystem.getInstance().refreshAndFindFileByPath(arg)[ FD ]
Line_45 $$ arg = currentDirectory != null ? new File(currentDirectory, arg).getAbsolutePath() : new File(arg).getAbsolutePath()-->Line_55 $$ lastOpenedProject = doOpenFileOrProject(arg)[ FD ]
Line_24 $$ for (int i = 0, argsSize = args.size(); i < argsSize; i++) -->Line_32 $$ if (i == args.size()) [ FD ]
Line_24 $$ for (int i = 0, argsSize = args.size(); i < argsSize; i++) -->Line_26 $$ if (arg.equals(StartupUtil.NO_SPLASH)) [ CD ]
Line_42 $$ arg = StringUtil.stripQuotesAroundValue(arg)-->Line_41 $$ if (StringUtil.isQuotedString(arg)) [ FD ]
Line_29 $$ if (arg.equals("-l") || arg.equals("--line")) -->Line_44 $$ if (!new File(arg).isAbsolute()) [ CD ]
Line_45 $$ arg = currentDirectory != null ? new File(currentDirectory, arg).getAbsolutePath() : new File(arg).getAbsolutePath()-->Line_42 $$ arg = StringUtil.stripQuotesAroundValue(arg)[ FD ]
Line_44 $$ if (!new File(arg).isAbsolute()) -->Line_45 $$ arg = currentDirectory != null ? new File(currentDirectory, arg).getAbsolutePath() : new File(arg).getAbsolutePath()[ CD ]
Line_25 $$ String arg = args.get(i)-->Line_48 $$ final VirtualFile virtualFile = LocalFileSystem.getInstance().refreshAndFindFileByPath(arg)[ FD ]
Line_41 $$ if (StringUtil.isQuotedString(arg)) -->Line_42 $$ arg = StringUtil.stripQuotesAroundValue(arg)[ CD ]
Line_38 $$ line = -1-->Line_50 $$ lastOpenedProject = doOpenFile(virtualFile, line)[ FD ]
Line_42 $$ arg = StringUtil.stripQuotesAroundValue(arg)-->Line_45 $$ arg = currentDirectory != null ? new File(currentDirectory, arg).getAbsolutePath() : new File(arg).getAbsolutePath()[ FD ]
Line_24 $$ for (int i = 0, argsSize = args.size(); i < argsSize; i++) -->Line_36 $$ line = Integer.parseInt(args.get(i))[ FD ]
Line_47 $$ if (line != -1) -->Line_55 $$ lastOpenedProject = doOpenFileOrProject(arg)[ CD ]
Line_22 $$ Project lastOpenedProject = null-->Line_55 $$ lastOpenedProject = doOpenFileOrProject(arg)[ FD ]
Line_45 $$ arg = currentDirectory != null ? new File(currentDirectory, arg).getAbsolutePath() : new File(arg).getAbsolutePath()-->Line_41 $$ if (StringUtil.isQuotedString(arg)) [ FD ]
Line_25 $$ String arg = args.get(i)-->Line_41 $$ if (StringUtil.isQuotedString(arg)) [ FD ]
Line_49 $$ if (virtualFile != null) -->Line_50 $$ lastOpenedProject = doOpenFile(virtualFile, line)[ CD ]
Line_7 $$ for (String arg : args) -->Line_8 $$ LOG.info(arg)[ FD ]
Line_49 $$ if (virtualFile != null) -->Line_52 $$ Messages.showErrorDialog("Cannot find file '" + arg + "'", "Cannot find file")[ CD ]
Line_24 $$ for (int i = 0, argsSize = args.size(); i < argsSize; i++) -->Line_25 $$ String arg = args.get(i)[ CD ]
Line_7 $$ for (String arg : args) -->Line_41 $$ if (StringUtil.isQuotedString(arg)) [ FD ]
Line_25 $$ String arg = args.get(i)-->Line_55 $$ lastOpenedProject = doOpenFileOrProject(arg)[ FD ]
Line_15 $$ if (command.equals(starter.getCommandName()) && starter instanceof ApplicationStarterEx && ((ApplicationStarterEx) starter).canProcessExternalCommandLine()) -->Line_16 $$ LOG.info("Processing command with " + starter)[ CD ]
Line_29 $$ if (arg.equals("-l") || arg.equals("--line")) -->Line_32 $$ if (i == args.size()) [ CD ]
Line_7 $$ for (String arg : args) -->Line_42 $$ arg = StringUtil.stripQuotesAroundValue(arg)[ FD ]
Line_22 $$ Project lastOpenedProject = null-->Line_50 $$ lastOpenedProject = doOpenFile(virtualFile, line)[ FD ]
Line_7 $$ for (String arg : args) -->Line_29 $$ if (arg.equals("-l") || arg.equals("--line")) [ FD ]
Line_4 $$ if (args.size() > 0) -->Line_6 $$ LOG.info("Dir: " + currentDirectory)[ CD ]
Line_42 $$ arg = StringUtil.stripQuotesAroundValue(arg)-->Line_55 $$ lastOpenedProject = doOpenFileOrProject(arg)[ FD ]
Line_23 $$ int line = -1-->Line_36 $$ line = Integer.parseInt(args.get(i))[ FD ]
Line_15 $$ if (command.equals(starter.getCommandName()) && starter instanceof ApplicationStarterEx && ((ApplicationStarterEx) starter).canProcessExternalCommandLine()) -->Line_17 $$ ((ApplicationStarterEx) starter).processExternalCommandLine(ArrayUtil.toStringArray(args), currentDirectory)[ CD ]
Line_47 $$ if (line != -1) -->Line_49 $$ if (virtualFile != null) [ CD ]
Line_48 $$ final VirtualFile virtualFile = LocalFileSystem.getInstance().refreshAndFindFileByPath(arg)-->Line_49 $$ if (virtualFile != null) [ FD ]
Line_25 $$ String arg = args.get(i)-->Line_26 $$ if (arg.equals(StartupUtil.NO_SPLASH)) [ FD ]
Line_15 $$ if (command.equals(starter.getCommandName()) && starter instanceof ApplicationStarterEx && ((ApplicationStarterEx) starter).canProcessExternalCommandLine()) -->Line_18 $$ return null[ CD ]
Line_29 $$ if (arg.equals("-l") || arg.equals("--line")) -->Line_47 $$ if (line != -1) [ CD ]
Line_13 $$ String command = args.get(0)-->Line_15 $$ if (command.equals(starter.getCommandName()) && starter instanceof ApplicationStarterEx && ((ApplicationStarterEx) starter).canProcessExternalCommandLine()) [ FD ]
Line_23 $$ int line = -1-->Line_47 $$ if (line != -1) [ FD ]
