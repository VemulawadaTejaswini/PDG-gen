Line_5 $$ if (VersionedProtocol.class.isAssignableFrom(childInterface)) -->Line_7 $$ allInterfaces.addAll(Arrays.asList(getSuperInterfaces(childInterface.getInterfaces())))[ CD ]
Line_4 $$ for (Class<?> childInterface : childInterfaces) -->Line_5 $$ if (VersionedProtocol.class.isAssignableFrom(childInterface)) [ FD ]
Line_2 $$ static Class<?>[] getSuperInterfaces(Class<?>[] childInterfaces) -->Line_3 $$ List<Class<?>> allInterfaces = new ArrayList<Class<?>>()[ CD ]
Line_5 $$ if (VersionedProtocol.class.isAssignableFrom(childInterface)) -->Line_9 $$ LOG.warn("Interface " + childInterface + " ignored because it does not extend VersionedProtocol")[ CD ]
Line_3 $$ List<Class<?>> allInterfaces = new ArrayList<Class<?>>()-->Line_12 $$ return allInterfaces.toArray(new Class[allInterfaces.size()])[ FD ]
Line_5 $$ if (VersionedProtocol.class.isAssignableFrom(childInterface)) -->Line_6 $$ allInterfaces.add(childInterface)[ CD ]
Line_3 $$ List<Class<?>> allInterfaces = new ArrayList<Class<?>>()-->Line_7 $$ allInterfaces.addAll(Arrays.asList(getSuperInterfaces(childInterface.getInterfaces())))[ FD ]
Line_4 $$ for (Class<?> childInterface : childInterfaces) -->Line_6 $$ allInterfaces.add(childInterface)[ FD ]
Line_4 $$ for (Class<?> childInterface : childInterfaces) -->Line_7 $$ allInterfaces.addAll(Arrays.asList(getSuperInterfaces(childInterface.getInterfaces())))[ FD ]
Line_2 $$ static Class<?>[] getSuperInterfaces(Class<?>[] childInterfaces) -->Line_12 $$ return allInterfaces.toArray(new Class[allInterfaces.size()])[ CD ]
Line_3 $$ List<Class<?>> allInterfaces = new ArrayList<Class<?>>()-->Line_6 $$ allInterfaces.add(childInterface)[ FD ]
