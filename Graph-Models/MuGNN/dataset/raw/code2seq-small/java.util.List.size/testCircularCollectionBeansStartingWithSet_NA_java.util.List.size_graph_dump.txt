Line_6 $$ List list = bean.getSomeList()-->Line_8 $$ assertEquals(1, list.size())[ FD ]
Line_5 $$ TestBean bean = (TestBean) this.beanFactory.getBean("circularCollectionBeansBean")-->Line_10 $$ Set set = bean.getSomeSet()[ FD ]
Line_14 $$ Map map = bean.getSomeMap()-->Line_16 $$ assertEquals(1, map.size())[ FD ]
Line_5 $$ TestBean bean = (TestBean) this.beanFactory.getBean("circularCollectionBeansBean")-->Line_13 $$ assertTrue(set.contains(bean))[ FD ]
Line_10 $$ Set set = bean.getSomeSet()-->Line_11 $$ assertTrue(Proxy.isProxyClass(set.getClass()))[ FD ]
Line_10 $$ Set set = bean.getSomeSet()-->Line_12 $$ assertEquals(1, set.size())[ FD ]
Line_14 $$ Map map = bean.getSomeMap()-->Line_15 $$ assertFalse(Proxy.isProxyClass(map.getClass()))[ FD ]
Line_6 $$ List list = bean.getSomeList()-->Line_7 $$ assertFalse(Proxy.isProxyClass(list.getClass()))[ FD ]
Line_10 $$ Set set = bean.getSomeSet()-->Line_13 $$ assertTrue(set.contains(bean))[ FD ]
Line_5 $$ TestBean bean = (TestBean) this.beanFactory.getBean("circularCollectionBeansBean")-->Line_14 $$ Map map = bean.getSomeMap()[ FD ]
Line_14 $$ Map map = bean.getSomeMap()-->Line_17 $$ assertEquals(bean, map.get("foo"))[ FD ]
Line_5 $$ TestBean bean = (TestBean) this.beanFactory.getBean("circularCollectionBeansBean")-->Line_9 $$ assertEquals(bean, list.get(0))[ FD ]
Line_5 $$ TestBean bean = (TestBean) this.beanFactory.getBean("circularCollectionBeansBean")-->Line_6 $$ List list = bean.getSomeList()[ FD ]
Line_6 $$ List list = bean.getSomeList()-->Line_9 $$ assertEquals(bean, list.get(0))[ FD ]
Line_5 $$ TestBean bean = (TestBean) this.beanFactory.getBean("circularCollectionBeansBean")-->Line_17 $$ assertEquals(bean, map.get("foo"))[ FD ]
