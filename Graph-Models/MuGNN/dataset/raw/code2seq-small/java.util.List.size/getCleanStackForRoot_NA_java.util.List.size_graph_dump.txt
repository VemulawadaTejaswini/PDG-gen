Line_2 $$ private static List<FocusTrackback> getCleanStackForRoot(final Window root) -->Line_3 $$ List<FocusTrackback> stack = getStackForRoot(root)[ CD ]
Line_5 $$ for (FocusTrackback eachExisting : stackArray) -->Line_8 $$ if (eachExisting == null) [ FD ]
Line_5 $$ for (FocusTrackback eachExisting : stackArray) -->Line_9 $$ stack.remove(eachExisting)[ FD ]
Line_5 $$ for (FocusTrackback eachExisting : stackArray) -->Line_7 $$ eachExisting.dispose()[ FD ]
Line_3 $$ List<FocusTrackback> stack = getStackForRoot(root)-->Line_4 $$ final FocusTrackback[] stackArray = stack.toArray(new FocusTrackback[stack.size()])[ FD ]
Line_6 $$ if (eachExisting != null && eachExisting.isConsumed()) -->Line_8 $$ if (eachExisting == null) [ CD ]
Line_8 $$ if (eachExisting == null) -->Line_9 $$ stack.remove(eachExisting)[ CD ]
Line_2 $$ private static List<FocusTrackback> getCleanStackForRoot(final Window root) -->Line_12 $$ return stack[ CD ]
Line_6 $$ if (eachExisting != null && eachExisting.isConsumed()) -->Line_7 $$ eachExisting.dispose()[ CD ]
Line_3 $$ List<FocusTrackback> stack = getStackForRoot(root)-->Line_9 $$ stack.remove(eachExisting)[ FD ]
Line_5 $$ for (FocusTrackback eachExisting : stackArray) -->Line_6 $$ if (eachExisting != null && eachExisting.isConsumed()) [ FD ]
Line_2 $$ private static List<FocusTrackback> getCleanStackForRoot(final Window root) -->Line_4 $$ final FocusTrackback[] stackArray = stack.toArray(new FocusTrackback[stack.size()])[ CD ]
Line_2 $$ private static List<FocusTrackback> getCleanStackForRoot(final Window root) -->Line_3 $$ List<FocusTrackback> stack = getStackForRoot(root)[ FD ]
