Line_47 $$ for (int i = 0; i < list.size(); i++) -->Line_53 $$ if (line.isEmpty() && mySettings.JD_P_AT_EMPTY_LINES && !insidePreTag) [ CD ]
Line_41 $$ list = toArray(str, "\n", new ArrayList<Boolean>())-->Line_48 $$ String line = list.get(i)[ FD ]
Line_18 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) -->Line_37 $$ if (subList != null)[ CD ]
Line_13 $$ StringBuilder sb = new StringBuilder()-->Line_52 $$ sb.append(prefix)[ FD ]
Line_61 $$ insidePreTag = false-->Line_53 $$ if (line.isEmpty() && mySettings.JD_P_AT_EMPTY_LINES && !insidePreTag) [ FD ]
Line_14 $$ List<String> list-->Line_47 $$ for (int i = 0; i < list.size(); i++) [ FD ]
Line_48 $$ String line = list.get(i)-->Line_53 $$ if (line.isEmpty() && mySettings.JD_P_AT_EMPTY_LINES && !insidePreTag) [ FD ]
Line_14 $$ List<String> list-->Line_17 $$ list = toArrayWrapping(str, rightMargin - prefix.length())[ FD ]
Line_47 $$ for (int i = 0; i < list.size(); i++) -->Line_48 $$ String line = list.get(i)[ CD ]
Line_47 $$ for (int i = 0; i < list.size(); i++) -->Line_49 $$ if (line.isEmpty() && !mySettings.JD_KEEP_EMPTY_LINES)[ CD ]
Line_19 $$ list = new ArrayList<String>()-->Line_48 $$ String line = list.get(i)[ FD ]
Line_48 $$ String line = list.get(i)-->Line_60 $$ if (line.endsWith(PRE_TAG_END)) [ FD ]
Line_41 $$ list = toArray(str, "\n", new ArrayList<Boolean>())-->Line_43 $$ if (list == null) [ FD ]
Line_14 $$ List<String> list-->Line_38 $$ list.addAll(subList)[ FD ]
Line_17 $$ list = toArrayWrapping(str, rightMargin - prefix.length())-->Line_18 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) [ FD ]
Line_19 $$ list = new ArrayList<String>()-->Line_43 $$ if (list == null) [ FD ]
Line_13 $$ StringBuilder sb = new StringBuilder()-->Line_44 $$ sb.append('\n')[ FD ]
Line_34 $$ String firstLineTagRemoved = subList.get(0).substring(PRE_TAG_START.length())-->Line_35 $$ subList.set(0, firstLineTagRemoved)[ FD ]
Line_41 $$ list = toArray(str, "\n", new ArrayList<Boolean>())-->Line_47 $$ for (int i = 0; i < list.size(); i++) [ FD ]
Line_48 $$ String line = list.get(i)-->Line_56 $$ sb.append(line)[ FD ]
Line_13 $$ StringBuilder sb = new StringBuilder()-->Line_64 $$ sb.append('\n')[ FD ]
Line_17 $$ list = toArrayWrapping(str, rightMargin - prefix.length())-->Line_47 $$ for (int i = 0; i < list.size(); i++) [ FD ]
Line_14 $$ List<String> list-->Line_18 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) [ FD ]
Line_46 $$ boolean insidePreTag = false-->Line_53 $$ if (line.isEmpty() && mySettings.JD_P_AT_EMPTY_LINES && !insidePreTag) [ FD ]
Line_17 $$ list = toArrayWrapping(str, rightMargin - prefix.length())-->Line_38 $$ list.addAll(subList)[ FD ]
Line_47 $$ for (int i = 0; i < list.size(); i++) -->Line_51 $$ if (i != 0)[ CD ]
Line_13 $$ StringBuilder sb = new StringBuilder()-->Line_54 $$ sb.append(P_START_TAG)[ FD ]
Line_47 $$ for (int i = 0; i < list.size(); i++) -->Line_48 $$ String line = list.get(i)[ FD ]
Line_47 $$ for (int i = 0; i < list.size(); i++) -->Line_51 $$ if (i != 0)[ FD ]
Line_18 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) -->Line_19 $$ list = new ArrayList<String>()[ CD ]
Line_17 $$ list = toArrayWrapping(str, rightMargin - prefix.length())-->Line_43 $$ if (list == null) [ FD ]
Line_46 $$ boolean insidePreTag = false-->Line_59 $$ insidePreTag = true[ FD ]
Line_19 $$ list = new ArrayList<String>()-->Line_38 $$ list.addAll(subList)[ FD ]
Line_19 $$ list = new ArrayList<String>()-->Line_41 $$ list = toArray(str, "\n", new ArrayList<Boolean>())[ FD ]
Line_53 $$ if (line.isEmpty() && mySettings.JD_P_AT_EMPTY_LINES && !insidePreTag) -->Line_54 $$ sb.append(P_START_TAG)[ CD ]
Line_17 $$ list = toArrayWrapping(str, rightMargin - prefix.length())-->Line_19 $$ list = new ArrayList<String>()[ FD ]
Line_27 $$ if (unclosedPreTag) -->Line_28 $$ str = PRE_TAG_START + str.replaceAll("^\\s+", "")[ CD ]
Line_14 $$ List<String> list-->Line_48 $$ String line = list.get(i)[ FD ]
Line_18 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) -->Line_24 $$ str = str.substring(firstLine.length())[ CD ]
Line_60 $$ if (line.endsWith(PRE_TAG_END)) -->Line_61 $$ insidePreTag = false[ CD ]
Line_18 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) -->Line_27 $$ if (unclosedPreTag) [ CD ]
Line_43 $$ if (list == null) -->Line_47 $$ for (int i = 0; i < list.size(); i++) [ CD ]
Line_43 $$ if (list == null) -->Line_44 $$ sb.append('\n')[ CD ]
Line_43 $$ if (list == null) -->Line_46 $$ boolean insidePreTag = false[ CD ]
Line_47 $$ for (int i = 0; i < list.size(); i++) -->Line_64 $$ sb.append('\n')[ CD ]
Line_14 $$ List<String> list-->Line_41 $$ list = toArray(str, "\n", new ArrayList<Boolean>())[ FD ]
Line_53 $$ if (line.isEmpty() && mySettings.JD_P_AT_EMPTY_LINES && !insidePreTag) -->Line_56 $$ sb.append(line)[ CD ]
Line_51 $$ if (i != 0)-->Line_52 $$ sb.append(prefix)[ CD ]
Line_13 $$ StringBuilder sb = new StringBuilder()-->Line_56 $$ sb.append(line)[ FD ]
Line_59 $$ insidePreTag = true-->Line_61 $$ insidePreTag = false[ FD ]
Line_17 $$ list = toArrayWrapping(str, rightMargin - prefix.length())-->Line_41 $$ list = toArray(str, "\n", new ArrayList<Boolean>())[ FD ]
Line_46 $$ boolean insidePreTag = false-->Line_61 $$ insidePreTag = false[ FD ]
Line_59 $$ insidePreTag = true-->Line_53 $$ if (line.isEmpty() && mySettings.JD_P_AT_EMPTY_LINES && !insidePreTag) [ FD ]
Line_14 $$ List<String> list-->Line_43 $$ if (list == null) [ FD ]
Line_19 $$ list = new ArrayList<String>()-->Line_47 $$ for (int i = 0; i < list.size(); i++) [ FD ]
Line_17 $$ list = toArrayWrapping(str, rightMargin - prefix.length())-->Line_48 $$ String line = list.get(i)[ FD ]
Line_48 $$ String line = list.get(i)-->Line_49 $$ if (line.isEmpty() && !mySettings.JD_KEEP_EMPTY_LINES)[ FD ]
Line_37 $$ if (subList != null)-->Line_38 $$ list.addAll(subList)[ CD ]
Line_14 $$ List<String> list-->Line_19 $$ list = new ArrayList<String>()[ FD ]
