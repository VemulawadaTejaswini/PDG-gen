Line_3 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references2")-->Line_11 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references2")[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references2")-->Line_6 $$ list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references2")[ FD ]
Line_6 $$ list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references2")-->Line_11 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references2")[ FD ]
Line_11 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references2")-->Line_12 $$ assertEquals(0, list.size())[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references2")-->Line_4 $$ assertEquals(3, list.size())[ FD ]
Line_6 $$ list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references2")-->Line_9 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references2")[ FD ]
Line_6 $$ list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references2")-->Line_12 $$ assertEquals(0, list.size())[ FD ]
Line_2 $$ public void testReferences2HasChanged() throws Exception -->Line_4 $$ assertEquals(3, list.size())[ CD ]
Line_3 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references2")-->Line_7 $$ assertEquals(3, list.size())[ FD ]
Line_2 $$ public void testReferences2HasChanged() throws Exception -->Line_12 $$ assertEquals(0, list.size())[ CD ]
Line_3 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references2")-->Line_12 $$ assertEquals(0, list.size())[ FD ]
Line_2 $$ public void testReferences2HasChanged() throws Exception -->Line_11 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references2")[ CD ]
Line_2 $$ public void testReferences2HasChanged() throws Exception -->Line_7 $$ assertEquals(3, list.size())[ CD ]
Line_9 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references2")-->Line_10 $$ assertEquals(0, list.size())[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references2")-->Line_10 $$ assertEquals(0, list.size())[ FD ]
Line_2 $$ public void testReferences2HasChanged() throws Exception -->Line_3 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references2")[ CD ]
Line_2 $$ public void testReferences2HasChanged() throws Exception -->Line_10 $$ assertEquals(0, list.size())[ CD ]
Line_9 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references2")-->Line_12 $$ assertEquals(0, list.size())[ FD ]
Line_2 $$ public void testReferences2HasChanged() throws Exception -->Line_5 $$ assertEquals(makeList(1, 2, 4), extractRevisionNumbers(list))[ CD ]
Line_3 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references2")-->Line_9 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references2")[ FD ]
Line_6 $$ list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references2")-->Line_8 $$ assertEquals(makeList(1, 2, 4), extractRevisionNumbers(list))[ FD ]
Line_2 $$ public void testReferences2HasChanged() throws Exception -->Line_8 $$ assertEquals(makeList(1, 2, 4), extractRevisionNumbers(list))[ CD ]
Line_6 $$ list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references2")-->Line_10 $$ assertEquals(0, list.size())[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references2")-->Line_8 $$ assertEquals(makeList(1, 2, 4), extractRevisionNumbers(list))[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references2")-->Line_5 $$ assertEquals(makeList(1, 2, 4), extractRevisionNumbers(list))[ FD ]
Line_9 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references2")-->Line_11 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references2")[ FD ]
Line_2 $$ public void testReferences2HasChanged() throws Exception -->Line_9 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references2")[ CD ]
Line_6 $$ list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references2")-->Line_7 $$ assertEquals(3, list.size())[ FD ]
Line_2 $$ public void testReferences2HasChanged() throws Exception -->Line_6 $$ list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references2")[ CD ]
