Line_8 $$ for (StructField field : getTableStructFields(table)) -->Line_9 $$ objectInspectors.put(field.getFieldName(), field.getFieldObjectInspector())[ FD ]
Line_2 $$ public static Optional<HiveBucket> getHiveBucket(Table table, Map<ColumnHandle, NullableValue> bindings) -->Line_6 $$ List<String> bucketColumns = table.getSd().getBucketCols()[ FD ]
Line_2 $$ public static Optional<HiveBucket> getHiveBucket(Table table, Map<ColumnHandle, NullableValue> bindings) -->Line_27 $$ if (bucketBindings.size() != bucketColumns.size()) [ CD ]
Line_2 $$ public static Optional<HiveBucket> getHiveBucket(Table table, Map<ColumnHandle, NullableValue> bindings) -->Line_21 $$ for (Entry<ColumnHandle, NullableValue> entry : bindings.entrySet()) [ FD ]
Line_21 $$ for (Entry<ColumnHandle, NullableValue> entry : bindings.entrySet()) -->Line_23 $$ if (!entry.getValue().isNull() && bucketColumns.contains(colHandle.getName())) [ FD ]
Line_20 $$ Map<String, Object> bucketBindings = new HashMap()-->Line_24 $$ bucketBindings.put(colHandle.getName(), entry.getValue().getValue())[ FD ]
Line_16 $$ if (!SUPPORTED_TYPES.contains(((PrimitiveObjectInspector) inspector).getPrimitiveCategory())) -->Line_17 $$ return Optional.empty()[ CD ]
Line_6 $$ List<String> bucketColumns = table.getSd().getBucketCols()-->Line_23 $$ if (!entry.getValue().isNull() && bucketColumns.contains(colHandle.getName())) [ FD ]
Line_2 $$ public static Optional<HiveBucket> getHiveBucket(Table table, Map<ColumnHandle, NullableValue> bindings) -->Line_30 $$ ImmutableList.Builder<Entry<ObjectInspector, Object>> columnBindings = ImmutableList.builder()[ CD ]
Line_2 $$ public static Optional<HiveBucket> getHiveBucket(Table table, Map<ColumnHandle, NullableValue> bindings) -->Line_7 $$ Map<String, ObjectInspector> objectInspectors = new HashMap()[ CD ]
Line_13 $$ if ((inspector == null) || (inspector.getCategory() != Category.PRIMITIVE)) -->Line_14 $$ return Optional.empty()[ CD ]
Line_12 $$ ObjectInspector inspector = objectInspectors.get(column)-->Line_13 $$ if ((inspector == null) || (inspector.getCategory() != Category.PRIMITIVE)) [ FD ]
Line_2 $$ public static Optional<HiveBucket> getHiveBucket(Table table, Map<ColumnHandle, NullableValue> bindings) -->Line_8 $$ for (StructField field : getTableStructFields(table)) [ FD ]
Line_21 $$ for (Entry<ColumnHandle, NullableValue> entry : bindings.entrySet()) -->Line_22 $$ HiveColumnHandle colHandle = (HiveColumnHandle) entry.getKey()[ FD ]
Line_2 $$ public static Optional<HiveBucket> getHiveBucket(Table table, Map<ColumnHandle, NullableValue> bindings) -->Line_34 $$ return getHiveBucket(columnBindings.build(), table.getSd().getNumBuckets())[ CD ]
Line_21 $$ for (Entry<ColumnHandle, NullableValue> entry : bindings.entrySet()) -->Line_24 $$ bucketBindings.put(colHandle.getName(), entry.getValue().getValue())[ FD ]
Line_3 $$ if (!table.getSd().isSetBucketCols() || table.getSd().getBucketCols().isEmpty() || !table.getSd().isSetNumBuckets() || (table.getSd().getNumBuckets() <= 0) || bindings.isEmpty()) -->Line_4 $$ return Optional.empty()[ CD ]
Line_20 $$ Map<String, Object> bucketBindings = new HashMap()-->Line_27 $$ if (bucketBindings.size() != bucketColumns.size()) [ FD ]
Line_22 $$ HiveColumnHandle colHandle = (HiveColumnHandle) entry.getKey()-->Line_24 $$ bucketBindings.put(colHandle.getName(), entry.getValue().getValue())[ FD ]
Line_6 $$ List<String> bucketColumns = table.getSd().getBucketCols()-->Line_27 $$ if (bucketBindings.size() != bucketColumns.size()) [ FD ]
Line_7 $$ Map<String, ObjectInspector> objectInspectors = new HashMap()-->Line_32 $$ columnBindings.add(immutableEntry(objectInspectors.get(column), bucketBindings.get(column)))[ FD ]
Line_27 $$ if (bucketBindings.size() != bucketColumns.size()) -->Line_28 $$ return Optional.empty()[ CD ]
Line_20 $$ Map<String, Object> bucketBindings = new HashMap()-->Line_32 $$ columnBindings.add(immutableEntry(objectInspectors.get(column), bucketBindings.get(column)))[ FD ]
Line_30 $$ ImmutableList.Builder<Entry<ObjectInspector, Object>> columnBindings = ImmutableList.builder()-->Line_32 $$ columnBindings.add(immutableEntry(objectInspectors.get(column), bucketBindings.get(column)))[ FD ]
Line_2 $$ public static Optional<HiveBucket> getHiveBucket(Table table, Map<ColumnHandle, NullableValue> bindings) -->Line_3 $$ if (!table.getSd().isSetBucketCols() || table.getSd().getBucketCols().isEmpty() || !table.getSd().isSetNumBuckets() || (table.getSd().getNumBuckets() <= 0) || bindings.isEmpty()) [ CD ]
Line_11 $$ for (String column : bucketColumns) -->Line_12 $$ ObjectInspector inspector = objectInspectors.get(column)[ FD ]
Line_2 $$ public static Optional<HiveBucket> getHiveBucket(Table table, Map<ColumnHandle, NullableValue> bindings) -->Line_3 $$ if (!table.getSd().isSetBucketCols() || table.getSd().getBucketCols().isEmpty() || !table.getSd().isSetNumBuckets() || (table.getSd().getNumBuckets() <= 0) || bindings.isEmpty()) [ FD ]
Line_30 $$ ImmutableList.Builder<Entry<ObjectInspector, Object>> columnBindings = ImmutableList.builder()-->Line_34 $$ return getHiveBucket(columnBindings.build(), table.getSd().getNumBuckets())[ FD ]
Line_2 $$ public static Optional<HiveBucket> getHiveBucket(Table table, Map<ColumnHandle, NullableValue> bindings) -->Line_20 $$ Map<String, Object> bucketBindings = new HashMap()[ CD ]
Line_2 $$ public static Optional<HiveBucket> getHiveBucket(Table table, Map<ColumnHandle, NullableValue> bindings) -->Line_6 $$ List<String> bucketColumns = table.getSd().getBucketCols()[ CD ]
Line_23 $$ if (!entry.getValue().isNull() && bucketColumns.contains(colHandle.getName())) -->Line_24 $$ bucketBindings.put(colHandle.getName(), entry.getValue().getValue())[ CD ]
Line_7 $$ Map<String, ObjectInspector> objectInspectors = new HashMap()-->Line_9 $$ objectInspectors.put(field.getFieldName(), field.getFieldObjectInspector())[ FD ]
Line_7 $$ Map<String, ObjectInspector> objectInspectors = new HashMap()-->Line_12 $$ ObjectInspector inspector = objectInspectors.get(column)[ FD ]
Line_11 $$ for (String column : bucketColumns) -->Line_32 $$ columnBindings.add(immutableEntry(objectInspectors.get(column), bucketBindings.get(column)))[ FD ]
Line_2 $$ public static Optional<HiveBucket> getHiveBucket(Table table, Map<ColumnHandle, NullableValue> bindings) -->Line_34 $$ return getHiveBucket(columnBindings.build(), table.getSd().getNumBuckets())[ FD ]
Line_22 $$ HiveColumnHandle colHandle = (HiveColumnHandle) entry.getKey()-->Line_23 $$ if (!entry.getValue().isNull() && bucketColumns.contains(colHandle.getName())) [ FD ]
