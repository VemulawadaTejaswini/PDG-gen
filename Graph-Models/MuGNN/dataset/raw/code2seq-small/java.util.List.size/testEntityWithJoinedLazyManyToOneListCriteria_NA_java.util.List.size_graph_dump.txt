Line_25 $$ ResultChecker checker = new ResultChecker() -->Line_30 $$ assertEquals(yogiExpected, resultList.get(0))[ CD ]
Line_25 $$ ResultChecker checker = new ResultChecker() -->Line_32 $$ assertEquals(yogiExpected.getPreferredCourse().getCourseCode(), ((Student) resultList.get(0)).getPreferredCourse().getCourseCode())[ CD ]
Line_25 $$ ResultChecker checker = new ResultChecker() -->Line_33 $$ assertNull(((Student) resultList.get(1)).getPreferredCourse())[ CD ]
Line_25 $$ ResultChecker checker = new ResultChecker() -->Line_31 $$ assertEquals(shermanExpected, resultList.get(1))[ CD ]
Line_25 $$ ResultChecker checker = new ResultChecker() -->Line_28 $$ List resultList = (List) results[ CD ]
Line_25 $$ ResultChecker checker = new ResultChecker() -->Line_29 $$ assertEquals(2, resultList.size())[ CD ]
Line_28 $$ List resultList = (List) results-->Line_32 $$ assertEquals(yogiExpected.getPreferredCourse().getCourseCode(), ((Student) resultList.get(0)).getPreferredCourse().getCourseCode())[ FD ]
Line_28 $$ List resultList = (List) results-->Line_31 $$ assertEquals(shermanExpected, resultList.get(1))[ FD ]
Line_4 $$ CriteriaExecutor criteriaExecutorUnaliased = new CriteriaExecutor() -->Line_36 $$ runTest(null, criteriaExecutorUnaliased, checker, false)[ FD ]
Line_28 $$ List resultList = (List) results-->Line_30 $$ assertEquals(yogiExpected, resultList.get(0))[ FD ]
Line_28 $$ List resultList = (List) results-->Line_33 $$ assertNull(((Student) resultList.get(1)).getPreferredCourse())[ FD ]
Line_28 $$ List resultList = (List) results-->Line_29 $$ assertEquals(2, resultList.size())[ FD ]
