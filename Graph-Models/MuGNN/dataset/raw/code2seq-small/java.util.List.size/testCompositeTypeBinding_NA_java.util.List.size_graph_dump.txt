Line_9 $$ employeegroup = new EmployeeGroup(new EmployeeGroupId("c", "d"))-->Line_12 $$ session.save(employeegroup)[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_31 $$ List<EmployeeGroup> egs = session.createQuery("from EmployeeGroup").list()[ CD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_26 $$ Assert.assertEquals(2, employeegroup.getEmployees().size())[ CD ]
Line_5 $$ EmployeeGroup employeegroup = new EmployeeGroup(new EmployeeGroupId("a", "b"))-->Line_26 $$ Assert.assertEquals(2, employeegroup.getEmployees().size())[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_20 $$ parameters.add(new EmployeeGroupId("e", "f"))[ CD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_30 $$ session.beginTransaction()[ CD ]
Line_3 $$ Session session = openSession()-->Line_37 $$ session.createQuery("delete from Employee").executeUpdate()[ FD ]
Line_3 $$ Session session = openSession()-->Line_30 $$ session.beginTransaction()[ FD ]
Line_15 $$ session = openSession()-->Line_27 $$ session.getTransaction().commit()[ FD ]
Line_3 $$ Session session = openSession()-->Line_39 $$ session.close()[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_38 $$ session.getTransaction().commit()[ CD ]
Line_5 $$ EmployeeGroup employeegroup = new EmployeeGroup(new EmployeeGroupId("a", "b"))-->Line_9 $$ employeegroup = new EmployeeGroup(new EmployeeGroupId("c", "d"))[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_13 $$ session.getTransaction().commit()[ CD ]
Line_3 $$ Session session = openSession()-->Line_38 $$ session.getTransaction().commit()[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_23 $$ employeegroup = (EmployeeGroup) result.get(0)[ CD ]
Line_3 $$ Session session = openSession()-->Line_35 $$ session.flush()[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_3 $$ Session session = openSession()[ CD ]
Line_5 $$ EmployeeGroup employeegroup = new EmployeeGroup(new EmployeeGroupId("a", "b"))-->Line_10 $$ employeegroup.addEmployee(new Employee("gail"))[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_17 $$ List<EmployeeGroupId> parameters = new ArrayList<EmployeeGroupId>()[ CD ]
Line_5 $$ EmployeeGroup employeegroup = new EmployeeGroup(new EmployeeGroupId("a", "b"))-->Line_8 $$ session.save(employeegroup)[ FD ]
Line_9 $$ employeegroup = new EmployeeGroup(new EmployeeGroupId("c", "d"))-->Line_25 $$ Assert.assertNotNull(employeegroup.getEmployees())[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_25 $$ Assert.assertNotNull(employeegroup.getEmployees())[ CD ]
Line_5 $$ EmployeeGroup employeegroup = new EmployeeGroup(new EmployeeGroupId("a", "b"))-->Line_25 $$ Assert.assertNotNull(employeegroup.getEmployees())[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_11 $$ employeegroup.addEmployee(new Employee("steve"))[ CD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_36 $$ session.createQuery("delete from EmployeeGroup").executeUpdate()[ CD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_10 $$ employeegroup.addEmployee(new Employee("gail"))[ CD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_12 $$ session.save(employeegroup)[ CD ]
Line_5 $$ EmployeeGroup employeegroup = new EmployeeGroup(new EmployeeGroupId("a", "b"))-->Line_7 $$ employeegroup.addEmployee(new Employee("david"))[ FD ]
Line_15 $$ session = openSession()-->Line_39 $$ session.close()[ FD ]
Line_3 $$ Session session = openSession()-->Line_13 $$ session.getTransaction().commit()[ FD ]
Line_5 $$ EmployeeGroup employeegroup = new EmployeeGroup(new EmployeeGroupId("a", "b"))-->Line_23 $$ employeegroup = (EmployeeGroup) result.get(0)[ FD ]
Line_5 $$ EmployeeGroup employeegroup = new EmployeeGroup(new EmployeeGroupId("a", "b"))-->Line_12 $$ session.save(employeegroup)[ FD ]
Line_17 $$ List<EmployeeGroupId> parameters = new ArrayList<EmployeeGroupId>()-->Line_20 $$ parameters.add(new EmployeeGroupId("e", "f"))[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_9 $$ employeegroup = new EmployeeGroup(new EmployeeGroupId("c", "d"))[ CD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_21 $$ List result = session.createQuery("select eg from EmployeeGroup eg where eg.id in (:employeegroupIds)").setParameterList("employeegroupIds", parameters).list()[ CD ]
Line_15 $$ session = openSession()-->Line_31 $$ List<EmployeeGroup> egs = session.createQuery("from EmployeeGroup").list()[ FD ]
Line_9 $$ employeegroup = new EmployeeGroup(new EmployeeGroupId("c", "d"))-->Line_23 $$ employeegroup = (EmployeeGroup) result.get(0)[ FD ]
Line_21 $$ List result = session.createQuery("select eg from EmployeeGroup eg where eg.id in (:employeegroupIds)").setParameterList("employeegroupIds", parameters).list()-->Line_23 $$ employeegroup = (EmployeeGroup) result.get(0)[ FD ]
Line_17 $$ List<EmployeeGroupId> parameters = new ArrayList<EmployeeGroupId>()-->Line_21 $$ List result = session.createQuery("select eg from EmployeeGroup eg where eg.id in (:employeegroupIds)").setParameterList("employeegroupIds", parameters).list()[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_22 $$ Assert.assertEquals(2, result.size())[ CD ]
Line_5 $$ EmployeeGroup employeegroup = new EmployeeGroup(new EmployeeGroupId("a", "b"))-->Line_6 $$ employeegroup.addEmployee(new Employee("stliu"))[ FD ]
Line_32 $$ for (EmployeeGroup eg : egs) -->Line_33 $$ eg.getEmployees().clear()[ FD ]
Line_9 $$ employeegroup = new EmployeeGroup(new EmployeeGroupId("c", "d"))-->Line_24 $$ Assert.assertEquals("a", employeegroup.getId().getGroupName())[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_14 $$ session.close()[ CD ]
Line_15 $$ session = openSession()-->Line_28 $$ session.close()[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_4 $$ session.beginTransaction()[ CD ]
Line_3 $$ Session session = openSession()-->Line_29 $$ session = openSession()[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_35 $$ session.flush()[ CD ]
Line_29 $$ session = openSession()-->Line_38 $$ session.getTransaction().commit()[ FD ]
Line_3 $$ Session session = openSession()-->Line_16 $$ session.beginTransaction()[ FD ]
Line_29 $$ session = openSession()-->Line_30 $$ session.beginTransaction()[ FD ]
Line_23 $$ employeegroup = (EmployeeGroup) result.get(0)-->Line_24 $$ Assert.assertEquals("a", employeegroup.getId().getGroupName())[ FD ]
Line_15 $$ session = openSession()-->Line_36 $$ session.createQuery("delete from EmployeeGroup").executeUpdate()[ FD ]
Line_15 $$ session = openSession()-->Line_29 $$ session = openSession()[ FD ]
Line_15 $$ session = openSession()-->Line_38 $$ session.getTransaction().commit()[ FD ]
Line_5 $$ EmployeeGroup employeegroup = new EmployeeGroup(new EmployeeGroupId("a", "b"))-->Line_11 $$ employeegroup.addEmployee(new Employee("steve"))[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_18 $$ parameters.add(new EmployeeGroupId("a", "b"))[ CD ]
Line_29 $$ session = openSession()-->Line_31 $$ List<EmployeeGroup> egs = session.createQuery("from EmployeeGroup").list()[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_27 $$ session.getTransaction().commit()[ CD ]
Line_3 $$ Session session = openSession()-->Line_31 $$ List<EmployeeGroup> egs = session.createQuery("from EmployeeGroup").list()[ FD ]
Line_9 $$ employeegroup = new EmployeeGroup(new EmployeeGroupId("c", "d"))-->Line_11 $$ employeegroup.addEmployee(new Employee("steve"))[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_6 $$ employeegroup.addEmployee(new Employee("stliu"))[ CD ]
Line_23 $$ employeegroup = (EmployeeGroup) result.get(0)-->Line_25 $$ Assert.assertNotNull(employeegroup.getEmployees())[ FD ]
Line_3 $$ Session session = openSession()-->Line_14 $$ session.close()[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_28 $$ session.close()[ CD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_24 $$ Assert.assertEquals("a", employeegroup.getId().getGroupName())[ CD ]
Line_15 $$ session = openSession()-->Line_30 $$ session.beginTransaction()[ FD ]
Line_17 $$ List<EmployeeGroupId> parameters = new ArrayList<EmployeeGroupId>()-->Line_19 $$ parameters.add(new EmployeeGroupId("c", "d"))[ FD ]
Line_15 $$ session = openSession()-->Line_21 $$ List result = session.createQuery("select eg from EmployeeGroup eg where eg.id in (:employeegroupIds)").setParameterList("employeegroupIds", parameters).list()[ FD ]
Line_3 $$ Session session = openSession()-->Line_36 $$ session.createQuery("delete from EmployeeGroup").executeUpdate()[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_16 $$ session.beginTransaction()[ CD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_39 $$ session.close()[ CD ]
Line_3 $$ Session session = openSession()-->Line_27 $$ session.getTransaction().commit()[ FD ]
Line_21 $$ List result = session.createQuery("select eg from EmployeeGroup eg where eg.id in (:employeegroupIds)").setParameterList("employeegroupIds", parameters).list()-->Line_22 $$ Assert.assertEquals(2, result.size())[ FD ]
Line_5 $$ EmployeeGroup employeegroup = new EmployeeGroup(new EmployeeGroupId("a", "b"))-->Line_24 $$ Assert.assertEquals("a", employeegroup.getId().getGroupName())[ FD ]
Line_3 $$ Session session = openSession()-->Line_15 $$ session = openSession()[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_15 $$ session = openSession()[ CD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_37 $$ session.createQuery("delete from Employee").executeUpdate()[ CD ]
Line_9 $$ employeegroup = new EmployeeGroup(new EmployeeGroupId("c", "d"))-->Line_26 $$ Assert.assertEquals(2, employeegroup.getEmployees().size())[ FD ]
Line_3 $$ Session session = openSession()-->Line_21 $$ List result = session.createQuery("select eg from EmployeeGroup eg where eg.id in (:employeegroupIds)").setParameterList("employeegroupIds", parameters).list()[ FD ]
Line_23 $$ employeegroup = (EmployeeGroup) result.get(0)-->Line_26 $$ Assert.assertEquals(2, employeegroup.getEmployees().size())[ FD ]
Line_3 $$ Session session = openSession()-->Line_12 $$ session.save(employeegroup)[ FD ]
Line_17 $$ List<EmployeeGroupId> parameters = new ArrayList<EmployeeGroupId>()-->Line_18 $$ parameters.add(new EmployeeGroupId("a", "b"))[ FD ]
Line_29 $$ session = openSession()-->Line_39 $$ session.close()[ FD ]
Line_29 $$ session = openSession()-->Line_37 $$ session.createQuery("delete from Employee").executeUpdate()[ FD ]
Line_29 $$ session = openSession()-->Line_36 $$ session.createQuery("delete from EmployeeGroup").executeUpdate()[ FD ]
Line_3 $$ Session session = openSession()-->Line_28 $$ session.close()[ FD ]
Line_3 $$ Session session = openSession()-->Line_4 $$ session.beginTransaction()[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_8 $$ session.save(employeegroup)[ CD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_19 $$ parameters.add(new EmployeeGroupId("c", "d"))[ CD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_7 $$ employeegroup.addEmployee(new Employee("david"))[ CD ]
Line_9 $$ employeegroup = new EmployeeGroup(new EmployeeGroupId("c", "d"))-->Line_10 $$ employeegroup.addEmployee(new Employee("gail"))[ FD ]
Line_3 $$ Session session = openSession()-->Line_8 $$ session.save(employeegroup)[ FD ]
Line_15 $$ session = openSession()-->Line_37 $$ session.createQuery("delete from Employee").executeUpdate()[ FD ]
Line_29 $$ session = openSession()-->Line_35 $$ session.flush()[ FD ]
Line_15 $$ session = openSession()-->Line_16 $$ session.beginTransaction()[ FD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_5 $$ EmployeeGroup employeegroup = new EmployeeGroup(new EmployeeGroupId("a", "b"))[ CD ]
Line_2 $$ public void testCompositeTypeBinding() -->Line_29 $$ session = openSession()[ CD ]
Line_15 $$ session = openSession()-->Line_35 $$ session.flush()[ FD ]
