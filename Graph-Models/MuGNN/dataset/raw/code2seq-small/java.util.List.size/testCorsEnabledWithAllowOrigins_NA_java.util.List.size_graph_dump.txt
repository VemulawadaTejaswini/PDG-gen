Line_6 $$ HttpRequest httpRequest = new TestHttpRequest()-->Line_8 $$ httpRequest.headers().add(HttpHeaders.Names.USER_AGENT, "Mozilla fake")[ FD ]
Line_2 $$ public void testCorsEnabledWithAllowOrigins() -->Line_6 $$ HttpRequest httpRequest = new TestHttpRequest()[ CD ]
Line_2 $$ public void testCorsEnabledWithAllowOrigins() -->Line_11 $$ NettyHttpChannel channel = new NettyHttpChannel(httpServerTransport, request, null, randomBoolean())[ CD ]
Line_2 $$ public void testCorsEnabledWithAllowOrigins() -->Line_12 $$ channel.sendResponse(new TestReponse())[ CD ]
Line_2 $$ public void testCorsEnabledWithAllowOrigins() -->Line_15 $$ assertThat(writtenObjects.size(), is(1))[ CD ]
Line_2 $$ public void testCorsEnabledWithAllowOrigins() -->Line_8 $$ httpRequest.headers().add(HttpHeaders.Names.USER_AGENT, "Mozilla fake")[ CD ]
Line_2 $$ public void testCorsEnabledWithAllowOrigins() -->Line_7 $$ httpRequest.headers().add(HttpHeaders.Names.ORIGIN, "remote")[ CD ]
Line_2 $$ public void testCorsEnabledWithAllowOrigins() -->Line_10 $$ NettyHttpRequest request = new NettyHttpRequest(httpRequest, writeCapturingChannel)[ CD ]
Line_2 $$ public void testCorsEnabledWithAllowOrigins() -->Line_17 $$ assertThat(response.headers().get(HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN), notNullValue())[ CD ]
Line_2 $$ public void testCorsEnabledWithAllowOrigins() -->Line_19 $$ assertThat(allowedOrigins, is("remote-host"))[ CD ]
Line_16 $$ HttpResponse response = (HttpResponse) writtenObjects.get(0)-->Line_17 $$ assertThat(response.headers().get(HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN), notNullValue())[ FD ]
Line_6 $$ HttpRequest httpRequest = new TestHttpRequest()-->Line_7 $$ httpRequest.headers().add(HttpHeaders.Names.ORIGIN, "remote")[ FD ]
Line_16 $$ HttpResponse response = (HttpResponse) writtenObjects.get(0)-->Line_18 $$ String allowedOrigins = response.headers().get(HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN)[ FD ]
Line_2 $$ public void testCorsEnabledWithAllowOrigins() -->Line_18 $$ String allowedOrigins = response.headers().get(HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN)[ CD ]
Line_11 $$ NettyHttpChannel channel = new NettyHttpChannel(httpServerTransport, request, null, randomBoolean())-->Line_12 $$ channel.sendResponse(new TestReponse())[ FD ]
Line_2 $$ public void testCorsEnabledWithAllowOrigins() -->Line_9 $$ WriteCapturingChannel writeCapturingChannel = new WriteCapturingChannel()[ CD ]
Line_18 $$ String allowedOrigins = response.headers().get(HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN)-->Line_19 $$ assertThat(allowedOrigins, is("remote-host"))[ FD ]
Line_2 $$ public void testCorsEnabledWithAllowOrigins() -->Line_16 $$ HttpResponse response = (HttpResponse) writtenObjects.get(0)[ CD ]
