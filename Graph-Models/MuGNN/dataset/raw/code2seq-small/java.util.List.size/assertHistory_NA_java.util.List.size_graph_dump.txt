Line_2 $$ private void assertHistory(@NotNull List<? extends VcsFileRevision> actualRevisions) throws IOException, VcsException -->Line_4 $$ for (int i = 0; i < actualRevisions.size(); i++) [ CD ]
Line_4 $$ for (int i = 0; i < actualRevisions.size(); i++) -->Line_5 $$ assertEqualRevisions((GitFileRevision) actualRevisions.get(i), myRevisions.get(i))[ CD ]
Line_4 $$ for (int i = 0; i < actualRevisions.size(); i++) -->Line_5 $$ assertEqualRevisions((GitFileRevision) actualRevisions.get(i), myRevisions.get(i))[ FD ]
Line_2 $$ private void assertHistory(@NotNull List<? extends VcsFileRevision> actualRevisions) throws IOException, VcsException -->Line_3 $$ assertEquals("Incorrect number of commits in history", myRevisions.size(), actualRevisions.size())[ FD ]
Line_2 $$ private void assertHistory(@NotNull List<? extends VcsFileRevision> actualRevisions) throws IOException, VcsException -->Line_5 $$ assertEqualRevisions((GitFileRevision) actualRevisions.get(i), myRevisions.get(i))[ FD ]
Line_2 $$ private void assertHistory(@NotNull List<? extends VcsFileRevision> actualRevisions) throws IOException, VcsException -->Line_3 $$ assertEquals("Incorrect number of commits in history", myRevisions.size(), actualRevisions.size())[ CD ]
Line_2 $$ private void assertHistory(@NotNull List<? extends VcsFileRevision> actualRevisions) throws IOException, VcsException -->Line_4 $$ for (int i = 0; i < actualRevisions.size(); i++) [ FD ]
