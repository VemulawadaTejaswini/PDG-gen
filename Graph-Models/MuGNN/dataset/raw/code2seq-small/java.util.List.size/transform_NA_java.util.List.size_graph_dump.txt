Line_10 $$ for (; pos < original.length(); pos++) -->Line_11 $$ char ch = original.charAt(pos)[ CD ]
Line_12 $$ if (ch == '.' || ch == '_' || ch == '-' || ch == '+') -->Line_16 $$ if (ch != '.' && endBaseStr == 0) [ CD ]
Line_42 $$ if (pos > startPart) -->Line_43 $$ parts.add(original.substring(startPart, pos))[ CD ]
Line_6 $$ int startPart = 0-->Line_27 $$ startPart = pos[ FD ]
Line_15 $$ digit = false-->Line_21 $$ if (!digit && pos > startPart) [ FD ]
Line_18 $$ endBaseStr = pos-->Line_22 $$ if (endBaseStr == 0) [ FD ]
Line_20 $$ if (ch >= '0' && ch <= '9') -->Line_21 $$ if (!digit && pos > startPart) [ CD ]
Line_5 $$ boolean digit = false-->Line_39 $$ digit = false[ FD ]
Line_24 $$ endBaseStr = pos-->Line_32 $$ if (endBaseStr == 0) [ FD ]
Line_18 $$ endBaseStr = pos-->Line_46 $$ if (endBaseStr > 0) [ FD ]
Line_4 $$ List<String> parts = new ArrayList<String>()-->Line_23 $$ endBase = parts.size() + 1[ FD ]
Line_24 $$ endBaseStr = pos-->Line_34 $$ endBaseStr = pos[ FD ]
Line_37 $$ startPart = pos-->Line_43 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_29 $$ digit = true-->Line_21 $$ if (!digit && pos > startPart) [ FD ]
Line_39 $$ digit = false-->Line_21 $$ if (!digit && pos > startPart) [ FD ]
Line_4 $$ List<String> parts = new ArrayList<String>()-->Line_36 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_21 $$ if (!digit && pos > startPart) -->Line_27 $$ startPart = pos[ CD ]
Line_34 $$ endBaseStr = pos-->Line_32 $$ if (endBaseStr == 0) [ FD ]
Line_37 $$ startPart = pos-->Line_26 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_9 $$ int endBaseStr = 0-->Line_24 $$ endBaseStr = pos[ FD ]
Line_6 $$ int startPart = 0-->Line_37 $$ startPart = pos[ FD ]
Line_12 $$ if (ch == '.' || ch == '_' || ch == '-' || ch == '+') -->Line_15 $$ digit = false[ CD ]
Line_21 $$ if (!digit && pos > startPart) -->Line_26 $$ parts.add(original.substring(startPart, pos))[ CD ]
Line_21 $$ if (!digit && pos > startPart) -->Line_22 $$ if (endBaseStr == 0) [ CD ]
Line_32 $$ if (endBaseStr == 0) -->Line_34 $$ endBaseStr = pos[ CD ]
Line_4 $$ List<String> parts = new ArrayList<String>()-->Line_26 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_4 $$ List<String> parts = new ArrayList<String>()-->Line_47 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_8 $$ int endBase = 0-->Line_47 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_7 $$ int pos = 0-->Line_18 $$ endBaseStr = pos[ FD ]
Line_27 $$ startPart = pos-->Line_43 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_20 $$ if (ch >= '0' && ch <= '9') -->Line_29 $$ digit = true[ CD ]
Line_33 $$ endBase = parts.size() + 1-->Line_47 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_23 $$ endBase = parts.size() + 1-->Line_33 $$ endBase = parts.size() + 1[ FD ]
Line_7 $$ int pos = 0-->Line_10 $$ for (; pos < original.length(); pos++) [ FD ]
Line_16 $$ if (ch != '.' && endBaseStr == 0) -->Line_18 $$ endBaseStr = pos[ CD ]
Line_14 $$ startPart = pos + 1-->Line_26 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_7 $$ int pos = 0-->Line_36 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_7 $$ int pos = 0-->Line_24 $$ endBaseStr = pos[ FD ]
Line_8 $$ int endBase = 0-->Line_23 $$ endBase = parts.size() + 1[ FD ]
Line_31 $$ if (digit) -->Line_37 $$ startPart = pos[ CD ]
Line_14 $$ startPart = pos + 1-->Line_13 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_4 $$ List<String> parts = new ArrayList<String>()-->Line_17 $$ endBase = parts.size()[ FD ]
Line_27 $$ startPart = pos-->Line_37 $$ startPart = pos[ FD ]
Line_9 $$ int endBaseStr = 0-->Line_47 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_27 $$ startPart = pos-->Line_42 $$ if (pos > startPart) [ FD ]
Line_32 $$ if (endBaseStr == 0) -->Line_33 $$ endBase = parts.size() + 1[ CD ]
Line_22 $$ if (endBaseStr == 0) -->Line_24 $$ endBaseStr = pos[ CD ]
Line_15 $$ digit = false-->Line_39 $$ digit = false[ FD ]
Line_5 $$ boolean digit = false-->Line_15 $$ digit = false[ FD ]
Line_14 $$ startPart = pos + 1-->Line_42 $$ if (pos > startPart) [ FD ]
Line_20 $$ if (ch >= '0' && ch <= '9') -->Line_31 $$ if (digit) [ CD ]
Line_46 $$ if (endBaseStr > 0) -->Line_47 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ CD ]
Line_9 $$ int endBaseStr = 0-->Line_34 $$ endBaseStr = pos[ FD ]
Line_12 $$ if (ch == '.' || ch == '_' || ch == '-' || ch == '+') -->Line_20 $$ if (ch >= '0' && ch <= '9') [ CD ]
Line_6 $$ int startPart = 0-->Line_43 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_27 $$ startPart = pos-->Line_36 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_5 $$ boolean digit = false-->Line_29 $$ digit = true[ FD ]
Line_7 $$ int pos = 0-->Line_26 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_6 $$ int startPart = 0-->Line_26 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_7 $$ int pos = 0-->Line_43 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_34 $$ endBaseStr = pos-->Line_46 $$ if (endBaseStr > 0) [ FD ]
Line_37 $$ startPart = pos-->Line_36 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_8 $$ int endBase = 0-->Line_17 $$ endBase = parts.size()[ FD ]
Line_9 $$ int endBaseStr = 0-->Line_22 $$ if (endBaseStr == 0) [ FD ]
Line_7 $$ int pos = 0-->Line_14 $$ startPart = pos + 1[ FD ]
Line_24 $$ endBaseStr = pos-->Line_46 $$ if (endBaseStr > 0) [ FD ]
Line_18 $$ endBaseStr = pos-->Line_24 $$ endBaseStr = pos[ FD ]
Line_14 $$ startPart = pos + 1-->Line_37 $$ startPart = pos[ FD ]
Line_7 $$ int pos = 0-->Line_42 $$ if (pos > startPart) [ FD ]
Line_17 $$ endBase = parts.size()-->Line_47 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_6 $$ int startPart = 0-->Line_13 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_6 $$ int startPart = 0-->Line_42 $$ if (pos > startPart) [ FD ]
Line_6 $$ int startPart = 0-->Line_36 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_37 $$ startPart = pos-->Line_13 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_9 $$ int endBaseStr = 0-->Line_18 $$ endBaseStr = pos[ FD ]
Line_34 $$ endBaseStr = pos-->Line_47 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_24 $$ endBaseStr = pos-->Line_47 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_27 $$ startPart = pos-->Line_26 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_34 $$ endBaseStr = pos-->Line_22 $$ if (endBaseStr == 0) [ FD ]
Line_31 $$ if (digit) -->Line_36 $$ parts.add(original.substring(startPart, pos))[ CD ]
Line_27 $$ startPart = pos-->Line_13 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_4 $$ List<String> parts = new ArrayList<String>()-->Line_33 $$ endBase = parts.size() + 1[ FD ]
Line_29 $$ digit = true-->Line_39 $$ digit = false[ FD ]
Line_45 $$ DefaultVersion base = null-->Line_47 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_17 $$ endBase = parts.size()-->Line_33 $$ endBase = parts.size() + 1[ FD ]
Line_7 $$ int pos = 0-->Line_37 $$ startPart = pos[ FD ]
Line_6 $$ int startPart = 0-->Line_14 $$ startPart = pos + 1[ FD ]
Line_18 $$ endBaseStr = pos-->Line_32 $$ if (endBaseStr == 0) [ FD ]
Line_8 $$ int endBase = 0-->Line_33 $$ endBase = parts.size() + 1[ FD ]
Line_14 $$ startPart = pos + 1-->Line_27 $$ startPart = pos[ FD ]
Line_15 $$ digit = false-->Line_29 $$ digit = true[ FD ]
Line_9 $$ int endBaseStr = 0-->Line_32 $$ if (endBaseStr == 0) [ FD ]
Line_9 $$ int endBaseStr = 0-->Line_46 $$ if (endBaseStr > 0) [ FD ]
Line_7 $$ int pos = 0-->Line_11 $$ char ch = original.charAt(pos)[ FD ]
Line_14 $$ startPart = pos + 1-->Line_43 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_24 $$ endBaseStr = pos-->Line_22 $$ if (endBaseStr == 0) [ FD ]
Line_16 $$ if (ch != '.' && endBaseStr == 0) -->Line_17 $$ endBase = parts.size()[ CD ]
Line_10 $$ for (; pos < original.length(); pos++) -->Line_12 $$ if (ch == '.' || ch == '_' || ch == '-' || ch == '+') [ CD ]
Line_17 $$ endBase = parts.size()-->Line_23 $$ endBase = parts.size() + 1[ FD ]
Line_23 $$ endBase = parts.size() + 1-->Line_47 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_12 $$ if (ch == '.' || ch == '_' || ch == '-' || ch == '+') -->Line_13 $$ parts.add(original.substring(startPart, pos))[ CD ]
Line_5 $$ boolean digit = false-->Line_21 $$ if (!digit && pos > startPart) [ FD ]
Line_18 $$ endBaseStr = pos-->Line_34 $$ endBaseStr = pos[ FD ]
Line_18 $$ endBaseStr = pos-->Line_47 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_7 $$ int pos = 0-->Line_13 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_31 $$ if (digit) -->Line_32 $$ if (endBaseStr == 0) [ CD ]
Line_37 $$ startPart = pos-->Line_42 $$ if (pos > startPart) [ FD ]
Line_12 $$ if (ch == '.' || ch == '_' || ch == '-' || ch == '+') -->Line_14 $$ startPart = pos + 1[ CD ]
Line_4 $$ List<String> parts = new ArrayList<String>()-->Line_13 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_4 $$ List<String> parts = new ArrayList<String>()-->Line_43 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_7 $$ int pos = 0-->Line_27 $$ startPart = pos[ FD ]
Line_14 $$ startPart = pos + 1-->Line_36 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_22 $$ if (endBaseStr == 0) -->Line_23 $$ endBase = parts.size() + 1[ CD ]
Line_20 $$ if (ch >= '0' && ch <= '9') -->Line_39 $$ digit = false[ CD ]
Line_7 $$ int pos = 0-->Line_34 $$ endBaseStr = pos[ FD ]
