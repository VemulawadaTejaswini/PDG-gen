Line_3 $$ List<Class<?>> classes = new LinkedList()-->Line_9 $$ classes.addAll(contributor.getKnownClasses())[ FD ]
Line_2 $$ private static Class<?>[] findClasses(ClassLoader loader) -->Line_8 $$ classes.add(HashableMarshalledValue.class)[ CD ]
Line_3 $$ List<Class<?>> classes = new LinkedList()-->Line_8 $$ classes.add(HashableMarshalledValue.class)[ FD ]
Line_2 $$ private static Class<?>[] findClasses(ClassLoader loader) -->Line_9 $$ ServiceLoader.load(ClassTableContributor.class, loader).forEach( contributor -> classes.addAll(contributor.getKnownClasses()))[ FD ]
Line_2 $$ private static Class<?>[] findClasses(ClassLoader loader) -->Line_9 $$ ServiceLoader.load(ClassTableContributor.class, loader).forEach( contributor -> classes.addAll(contributor.getKnownClasses()))[ CD ]
Line_3 $$ List<Class<?>> classes = new LinkedList()-->Line_7 $$ classes.add(SimpleMarshalledValue.class)[ FD ]
Line_3 $$ List<Class<?>> classes = new LinkedList()-->Line_4 $$ classes.add(Serializable.class)[ FD ]
Line_3 $$ List<Class<?>> classes = new LinkedList()-->Line_6 $$ classes.add(MarshalledValue.class)[ FD ]
Line_3 $$ List<Class<?>> classes = new LinkedList()-->Line_10 $$ return classes.toArray(new Class<?>[classes.size()])[ FD ]
Line_2 $$ private static Class<?>[] findClasses(ClassLoader loader) -->Line_3 $$ List<Class<?>> classes = new LinkedList()[ CD ]
Line_2 $$ private static Class<?>[] findClasses(ClassLoader loader) -->Line_7 $$ classes.add(SimpleMarshalledValue.class)[ CD ]
Line_2 $$ private static Class<?>[] findClasses(ClassLoader loader) -->Line_4 $$ classes.add(Serializable.class)[ CD ]
Line_2 $$ private static Class<?>[] findClasses(ClassLoader loader) -->Line_5 $$ classes.add(Externalizable.class)[ CD ]
Line_2 $$ private static Class<?>[] findClasses(ClassLoader loader) -->Line_6 $$ classes.add(MarshalledValue.class)[ CD ]
Line_3 $$ List<Class<?>> classes = new LinkedList()-->Line_5 $$ classes.add(Externalizable.class)[ FD ]
Line_2 $$ private static Class<?>[] findClasses(ClassLoader loader) -->Line_10 $$ return classes.toArray(new Class<?>[classes.size()])[ CD ]
