Line_24 $$ em = entityManagerFactory().createEntityManager()-->Line_28 $$ em.close()[ FD ]
Line_24 $$ em = entityManagerFactory().createEntityManager()-->Line_26 $$ em.createQuery("delete Customer").executeUpdate()[ FD ]
Line_5 $$ Customer c1 = new Customer()-->Line_8 $$ c1.setName("Bob")[ FD ]
Line_2 $$ public void testArray() -->Line_26 $$ em.createQuery("delete Customer").executeUpdate()[ CD ]
Line_12 $$ em = entityManagerFactory().createEntityManager()-->Line_24 $$ em = entityManagerFactory().createEntityManager()[ FD ]
Line_12 $$ em = entityManagerFactory().createEntityManager()-->Line_26 $$ em.createQuery("delete Customer").executeUpdate()[ FD ]
Line_14 $$ final CriteriaBuilder cb = em.getCriteriaBuilder()-->Line_15 $$ CriteriaQuery<Object[]> q = cb.createQuery(Object[].class)[ FD ]
Line_2 $$ public void testArray() -->Line_18 $$ List<Object[]> result = em.createQuery(q).getResultList()[ CD ]
Line_5 $$ Customer c1 = new Customer()-->Line_21 $$ assertEquals(c1.getAge(), result.get(0)[1])[ FD ]
Line_12 $$ em = entityManagerFactory().createEntityManager()-->Line_28 $$ em.close()[ FD ]
Line_14 $$ final CriteriaBuilder cb = em.getCriteriaBuilder()-->Line_17 $$ q.select(cb.array(c.get(Customer_.name), c.get(Customer_.age)))[ FD ]
Line_15 $$ CriteriaQuery<Object[]> q = cb.createQuery(Object[].class)-->Line_17 $$ q.select(cb.array(c.get(Customer_.name), c.get(Customer_.age)))[ FD ]
Line_12 $$ em = entityManagerFactory().createEntityManager()-->Line_23 $$ em.close()[ FD ]
Line_2 $$ public void testArray() -->Line_5 $$ Customer c1 = new Customer()[ CD ]
Line_12 $$ em = entityManagerFactory().createEntityManager()-->Line_18 $$ List<Object[]> result = em.createQuery(q).getResultList()[ FD ]
Line_2 $$ public void testArray() -->Line_23 $$ em.close()[ CD ]
Line_2 $$ public void testArray() -->Line_28 $$ em.close()[ CD ]
Line_2 $$ public void testArray() -->Line_24 $$ em = entityManagerFactory().createEntityManager()[ CD ]
Line_5 $$ Customer c1 = new Customer()-->Line_9 $$ em.persist(c1)[ FD ]
Line_2 $$ public void testArray() -->Line_15 $$ CriteriaQuery<Object[]> q = cb.createQuery(Object[].class)[ CD ]
Line_2 $$ public void testArray() -->Line_14 $$ final CriteriaBuilder cb = em.getCriteriaBuilder()[ CD ]
Line_2 $$ public void testArray() -->Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()[ CD ]
Line_2 $$ public void testArray() -->Line_16 $$ Root<Customer> c = q.from(Customer.class)[ CD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_18 $$ List<Object[]> result = em.createQuery(q).getResultList()[ FD ]
Line_2 $$ public void testArray() -->Line_20 $$ assertEquals(c1.getName(), result.get(0)[0])[ CD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_10 $$ em.getTransaction().commit()[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_4 $$ em.getTransaction().begin()[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_13 $$ em.getTransaction().begin()[ FD ]
Line_24 $$ em = entityManagerFactory().createEntityManager()-->Line_25 $$ em.getTransaction().begin()[ FD ]
Line_2 $$ public void testArray() -->Line_11 $$ em.close()[ CD ]
Line_12 $$ em = entityManagerFactory().createEntityManager()-->Line_13 $$ em.getTransaction().begin()[ FD ]
Line_2 $$ public void testArray() -->Line_6 $$ c1.setId("c1")[ CD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_14 $$ final CriteriaBuilder cb = em.getCriteriaBuilder()[ FD ]
Line_15 $$ CriteriaQuery<Object[]> q = cb.createQuery(Object[].class)-->Line_16 $$ Root<Customer> c = q.from(Customer.class)[ FD ]
Line_2 $$ public void testArray() -->Line_10 $$ em.getTransaction().commit()[ CD ]
Line_2 $$ public void testArray() -->Line_8 $$ c1.setName("Bob")[ CD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_22 $$ em.getTransaction().commit()[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_24 $$ em = entityManagerFactory().createEntityManager()[ FD ]
Line_12 $$ em = entityManagerFactory().createEntityManager()-->Line_27 $$ em.getTransaction().commit()[ FD ]
Line_2 $$ public void testArray() -->Line_4 $$ em.getTransaction().begin()[ CD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_27 $$ em.getTransaction().commit()[ FD ]
Line_2 $$ public void testArray() -->Line_7 $$ c1.setAge(18)[ CD ]
Line_2 $$ public void testArray() -->Line_27 $$ em.getTransaction().commit()[ CD ]
Line_2 $$ public void testArray() -->Line_12 $$ em = entityManagerFactory().createEntityManager()[ CD ]
Line_12 $$ em = entityManagerFactory().createEntityManager()-->Line_22 $$ em.getTransaction().commit()[ FD ]
Line_5 $$ Customer c1 = new Customer()-->Line_7 $$ c1.setAge(18)[ FD ]
Line_2 $$ public void testArray() -->Line_13 $$ em.getTransaction().begin()[ CD ]
Line_18 $$ List<Object[]> result = em.createQuery(q).getResultList()-->Line_21 $$ assertEquals(c1.getAge(), result.get(0)[1])[ FD ]
Line_2 $$ public void testArray() -->Line_22 $$ em.getTransaction().commit()[ CD ]
Line_12 $$ em = entityManagerFactory().createEntityManager()-->Line_25 $$ em.getTransaction().begin()[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_12 $$ em = entityManagerFactory().createEntityManager()[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_23 $$ em.close()[ FD ]
Line_12 $$ em = entityManagerFactory().createEntityManager()-->Line_14 $$ final CriteriaBuilder cb = em.getCriteriaBuilder()[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_26 $$ em.createQuery("delete Customer").executeUpdate()[ FD ]
Line_24 $$ em = entityManagerFactory().createEntityManager()-->Line_27 $$ em.getTransaction().commit()[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_9 $$ em.persist(c1)[ FD ]
Line_2 $$ public void testArray() -->Line_17 $$ q.select(cb.array(c.get(Customer_.name), c.get(Customer_.age)))[ CD ]
Line_2 $$ public void testArray() -->Line_9 $$ em.persist(c1)[ CD ]
Line_15 $$ CriteriaQuery<Object[]> q = cb.createQuery(Object[].class)-->Line_18 $$ List<Object[]> result = em.createQuery(q).getResultList()[ FD ]
Line_2 $$ public void testArray() -->Line_21 $$ assertEquals(c1.getAge(), result.get(0)[1])[ CD ]
Line_5 $$ Customer c1 = new Customer()-->Line_6 $$ c1.setId("c1")[ FD ]
Line_2 $$ public void testArray() -->Line_25 $$ em.getTransaction().begin()[ CD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_25 $$ em.getTransaction().begin()[ FD ]
Line_18 $$ List<Object[]> result = em.createQuery(q).getResultList()-->Line_20 $$ assertEquals(c1.getName(), result.get(0)[0])[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_11 $$ em.close()[ FD ]
Line_18 $$ List<Object[]> result = em.createQuery(q).getResultList()-->Line_19 $$ assertEquals(1, result.size())[ FD ]
Line_3 $$ EntityManager em = entityManagerFactory().createEntityManager()-->Line_28 $$ em.close()[ FD ]
Line_2 $$ public void testArray() -->Line_19 $$ assertEquals(1, result.size())[ CD ]
Line_16 $$ Root<Customer> c = q.from(Customer.class)-->Line_17 $$ q.select(cb.array(c.get(Customer_.name), c.get(Customer_.age)))[ FD ]
Line_5 $$ Customer c1 = new Customer()-->Line_20 $$ assertEquals(c1.getName(), result.get(0)[0])[ FD ]
