Line_9 $$ if (resource.exists()) -->Line_10 $$ urls.add(resource.getURL())[ CD ]
Line_4 $$ List<URL> urls = new ArrayList<URL>()-->Line_16 $$ return (urls.size() > 0 ? new URLClassLoader(urls.toArray(new URL[urls.size()]), classLoader) : classLoader)[ FD ]
Line_2 $$ protected ClassLoader createTemplateClassLoader() throws IOException -->Line_3 $$ String[] paths = StringUtils.commaDelimitedListToStringArray(getResourceLoaderPath())[ CD ]
Line_2 $$ protected ClassLoader createTemplateClassLoader() throws IOException -->Line_15 $$ ClassLoader classLoader = getApplicationContext().getClassLoader()[ CD ]
Line_5 $$ for (String path : paths) -->Line_6 $$ Resource[] resources = getApplicationContext().getResources(path)[ FD ]
Line_8 $$ for (Resource resource : resources) -->Line_10 $$ urls.add(resource.getURL())[ FD ]
Line_2 $$ protected ClassLoader createTemplateClassLoader() throws IOException -->Line_16 $$ return (urls.size() > 0 ? new URLClassLoader(urls.toArray(new URL[urls.size()]), classLoader) : classLoader)[ CD ]
Line_2 $$ protected ClassLoader createTemplateClassLoader() throws IOException -->Line_4 $$ List<URL> urls = new ArrayList<URL>()[ CD ]
Line_4 $$ List<URL> urls = new ArrayList<URL>()-->Line_10 $$ urls.add(resource.getURL())[ FD ]
Line_8 $$ for (Resource resource : resources) -->Line_9 $$ if (resource.exists()) [ FD ]
