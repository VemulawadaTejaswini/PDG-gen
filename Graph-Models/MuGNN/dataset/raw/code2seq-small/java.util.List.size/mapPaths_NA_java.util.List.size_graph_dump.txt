Line_2 $$ private static List<String> mapPaths(Map<String, String> resolvedPaths, List<String> paths, Collection<Pair<String, String>> mapping) -->Line_9 $$ mapping.add(pair(canonicalPath, path))[ FD ]
Line_2 $$ private static List<String> mapPaths(Map<String, String> resolvedPaths, List<String> paths, Collection<Pair<String, String>> mapping) -->Line_5 $$ String path = paths.get(i)[ FD ]
Line_2 $$ private static List<String> mapPaths(Map<String, String> resolvedPaths, List<String> paths, Collection<Pair<String, String>> mapping) -->Line_4 $$ for (int i = 0; i < paths.size(); i++) [ FD ]
Line_6 $$ String canonicalPath = resolvedPaths.get(path)-->Line_7 $$ if (canonicalPath != null && !path.equals(canonicalPath)) [ FD ]
Line_5 $$ String path = paths.get(i)-->Line_7 $$ if (canonicalPath != null && !path.equals(canonicalPath)) [ FD ]
Line_4 $$ for (int i = 0; i < paths.size(); i++) -->Line_6 $$ String canonicalPath = resolvedPaths.get(path)[ CD ]
Line_5 $$ String path = paths.get(i)-->Line_9 $$ mapping.add(pair(canonicalPath, path))[ FD ]
Line_6 $$ String canonicalPath = resolvedPaths.get(path)-->Line_8 $$ canonicalPaths.set(i, canonicalPath)[ FD ]
Line_5 $$ String path = paths.get(i)-->Line_6 $$ String canonicalPath = resolvedPaths.get(path)[ FD ]
Line_3 $$ List<String> canonicalPaths = ContainerUtil.newArrayList(paths)-->Line_8 $$ canonicalPaths.set(i, canonicalPath)[ FD ]
Line_7 $$ if (canonicalPath != null && !path.equals(canonicalPath)) -->Line_9 $$ mapping.add(pair(canonicalPath, path))[ CD ]
Line_4 $$ for (int i = 0; i < paths.size(); i++) -->Line_5 $$ String path = paths.get(i)[ FD ]
Line_4 $$ for (int i = 0; i < paths.size(); i++) -->Line_8 $$ canonicalPaths.set(i, canonicalPath)[ FD ]
Line_2 $$ private static List<String> mapPaths(Map<String, String> resolvedPaths, List<String> paths, Collection<Pair<String, String>> mapping) -->Line_6 $$ String canonicalPath = resolvedPaths.get(path)[ FD ]
Line_2 $$ private static List<String> mapPaths(Map<String, String> resolvedPaths, List<String> paths, Collection<Pair<String, String>> mapping) -->Line_3 $$ List<String> canonicalPaths = ContainerUtil.newArrayList(paths)[ FD ]
Line_2 $$ private static List<String> mapPaths(Map<String, String> resolvedPaths, List<String> paths, Collection<Pair<String, String>> mapping) -->Line_3 $$ List<String> canonicalPaths = ContainerUtil.newArrayList(paths)[ CD ]
Line_4 $$ for (int i = 0; i < paths.size(); i++) -->Line_7 $$ if (canonicalPath != null && !path.equals(canonicalPath)) [ CD ]
Line_7 $$ if (canonicalPath != null && !path.equals(canonicalPath)) -->Line_8 $$ canonicalPaths.set(i, canonicalPath)[ CD ]
Line_4 $$ for (int i = 0; i < paths.size(); i++) -->Line_5 $$ String path = paths.get(i)[ CD ]
Line_2 $$ private static List<String> mapPaths(Map<String, String> resolvedPaths, List<String> paths, Collection<Pair<String, String>> mapping) -->Line_12 $$ return canonicalPaths[ CD ]
Line_6 $$ String canonicalPath = resolvedPaths.get(path)-->Line_9 $$ mapping.add(pair(canonicalPath, path))[ FD ]
Line_2 $$ private static List<String> mapPaths(Map<String, String> resolvedPaths, List<String> paths, Collection<Pair<String, String>> mapping) -->Line_4 $$ for (int i = 0; i < paths.size(); i++) [ CD ]
