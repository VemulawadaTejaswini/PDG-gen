Line_4 $$ Session session = null-->Line_21 $$ closeSession(session)[ FD ]
Line_13 $$ for (int i = 0; i < organizationIds.size(); i++) -->Line_15 $$ qPos.add(organizationId)[ CD ]
Line_7 $$ String sql = CustomSQLUtil.get(FIND_BY_ORGANIZATION_IDS)-->Line_8 $$ sql = StringUtil.replace(sql, "[$ORGANIZATION_ID$]", getOrganizationIds(organizationIds))[ FD ]
Line_13 $$ for (int i = 0; i < organizationIds.size(); i++) -->Line_14 $$ Long organizationId = organizationIds.get(i)[ FD ]
Line_12 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_15 $$ qPos.add(organizationId)[ FD ]
Line_6 $$ session = openSession()-->Line_10 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_8 $$ sql = StringUtil.replace(sql, "[$ORGANIZATION_ID$]", getOrganizationIds(organizationIds))-->Line_9 $$ sql = CustomSQLUtil.replaceOrderBy(sql, obc)[ FD ]
Line_7 $$ String sql = CustomSQLUtil.get(FIND_BY_ORGANIZATION_IDS)-->Line_10 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_4 $$ Session session = null-->Line_10 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_13 $$ for (int i = 0; i < organizationIds.size(); i++) -->Line_14 $$ Long organizationId = organizationIds.get(i)[ CD ]
Line_4 $$ Session session = null-->Line_6 $$ session = openSession()[ FD ]
Line_14 $$ Long organizationId = organizationIds.get(i)-->Line_15 $$ qPos.add(organizationId)[ FD ]
Line_8 $$ sql = StringUtil.replace(sql, "[$ORGANIZATION_ID$]", getOrganizationIds(organizationIds))-->Line_10 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_7 $$ String sql = CustomSQLUtil.get(FIND_BY_ORGANIZATION_IDS)-->Line_9 $$ sql = CustomSQLUtil.replaceOrderBy(sql, obc)[ FD ]
Line_10 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_12 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_9 $$ sql = CustomSQLUtil.replaceOrderBy(sql, obc)-->Line_10 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_10 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_11 $$ q.addEntity("BlogsStatsUser", BlogsStatsUserImpl.class)[ FD ]
Line_10 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_17 $$ return (List<BlogsStatsUser>) QueryUtil.list(q, getDialect(), start, end)[ FD ]
Line_6 $$ session = openSession()-->Line_21 $$ closeSession(session)[ FD ]
