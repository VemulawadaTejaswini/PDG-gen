Line_13 $$ Chaos c2 = new Chaos()-->Line_15 $$ c2.setName("c2")[ FD ]
Line_17 $$ Session s = openSession()-->Line_24 $$ List chaoses = s.createSQLQuery("select * from Chaos where chaos_size is null or chaos_size = :chaos_size").setParameter("chaos_size", null, StandardBasicTypes.LONG).list()[ FD ]
Line_17 $$ Session s = openSession()-->Line_23 $$ s.clear()[ FD ]
Line_13 $$ Chaos c2 = new Chaos()-->Line_14 $$ c2.setId(2L)[ FD ]
Line_17 $$ Session s = openSession()-->Line_21 $$ s.persist(c2)[ FD ]
Line_9 $$ Chaos c1 = new Chaos()-->Line_10 $$ c1.setId(1L)[ FD ]
Line_9 $$ Chaos c1 = new Chaos()-->Line_11 $$ c1.setName("c1")[ FD ]
Line_5 $$ Chaos c0 = new Chaos()-->Line_7 $$ c0.setName("c0")[ FD ]
Line_5 $$ Chaos c0 = new Chaos()-->Line_8 $$ c0.setSize(0L)[ FD ]
Line_17 $$ Session s = openSession()-->Line_29 $$ s.getTransaction().rollback()[ FD ]
Line_17 $$ Session s = openSession()-->Line_18 $$ s.beginTransaction()[ FD ]
Line_5 $$ Chaos c0 = new Chaos()-->Line_19 $$ s.persist(c0)[ FD ]
Line_9 $$ Chaos c1 = new Chaos()-->Line_20 $$ s.persist(c1)[ FD ]
Line_17 $$ Session s = openSession()-->Line_19 $$ s.persist(c0)[ FD ]
Line_24 $$ List chaoses = s.createSQLQuery("select * from Chaos where chaos_size is null or chaos_size = :chaos_size").setParameter("chaos_size", null, StandardBasicTypes.LONG).list()-->Line_26 $$ chaoses = s.createSQLQuery("select * from Chaos where chaos_size = :chaos_size").setParameter("chaos_size", null, StandardBasicTypes.LONG).list()[ FD ]
Line_13 $$ Chaos c2 = new Chaos()-->Line_21 $$ s.persist(c2)[ FD ]
Line_17 $$ Session s = openSession()-->Line_20 $$ s.persist(c1)[ FD ]
Line_13 $$ Chaos c2 = new Chaos()-->Line_16 $$ c2.setSize(null)[ FD ]
Line_17 $$ Session s = openSession()-->Line_22 $$ s.flush()[ FD ]
Line_17 $$ Session s = openSession()-->Line_26 $$ chaoses = s.createSQLQuery("select * from Chaos where chaos_size = :chaos_size").setParameter("chaos_size", null, StandardBasicTypes.LONG).list()[ FD ]
Line_17 $$ Session s = openSession()-->Line_30 $$ s.close()[ FD ]
Line_9 $$ Chaos c1 = new Chaos()-->Line_12 $$ c1.setSize(1L)[ FD ]
Line_5 $$ Chaos c0 = new Chaos()-->Line_6 $$ c0.setId(0L)[ FD ]
Line_24 $$ List chaoses = s.createSQLQuery("select * from Chaos where chaos_size is null or chaos_size = :chaos_size").setParameter("chaos_size", null, StandardBasicTypes.LONG).list()-->Line_25 $$ assertEquals(1, chaoses.size())[ FD ]
