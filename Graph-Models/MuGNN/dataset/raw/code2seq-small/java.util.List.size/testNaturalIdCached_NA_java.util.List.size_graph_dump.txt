Line_2 $$ public void testNaturalIdCached() -->Line_15 $$ assertEquals("Cache puts should be empty", 0, stats.getNaturalIdCachePutCount())[ CD ]
Line_11 $$ Statistics stats = sessionFactory().getStatistics()-->Line_19 $$ assertEquals("NaturalId Cache Misses", 1, stats.getNaturalIdCacheMissCount())[ FD ]
Line_11 $$ Statistics stats = sessionFactory().getStatistics()-->Line_25 $$ assertEquals("NaturalId Cache Puts", 1, stats.getNaturalIdCachePutCount())[ FD ]
Line_2 $$ public void testNaturalIdCached() -->Line_7 $$ Criteria criteria = s.createCriteria(Citizen.class)[ CD ]
Line_2 $$ public void testNaturalIdCached() -->Line_28 $$ s.close()[ CD ]
Line_2 $$ public void testNaturalIdCached() -->Line_8 $$ criteria.add(Restrictions.naturalId().set("ssn", "1234").set("state", france))[ CD ]
Line_11 $$ Statistics stats = sessionFactory().getStatistics()-->Line_12 $$ stats.setStatisticsEnabled(true)[ FD ]
Line_2 $$ public void testNaturalIdCached() -->Line_4 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testNaturalIdCached() -->Line_9 $$ criteria.setCacheable(true)[ CD ]
Line_11 $$ Statistics stats = sessionFactory().getStatistics()-->Line_15 $$ assertEquals("Cache puts should be empty", 0, stats.getNaturalIdCachePutCount())[ FD ]
Line_6 $$ State france = this.getState(s, "Ile de France")-->Line_8 $$ criteria.add(Restrictions.naturalId().set("ssn", "1234").set("state", france))[ FD ]
Line_2 $$ public void testNaturalIdCached() -->Line_14 $$ assertEquals("Cache hits should be empty", 0, stats.getNaturalIdCacheHitCount())[ CD ]
Line_2 $$ public void testNaturalIdCached() -->Line_20 $$ assertEquals("NaturalId Cache Puts", 1, stats.getNaturalIdCachePutCount())[ CD ]
Line_11 $$ Statistics stats = sessionFactory().getStatistics()-->Line_18 $$ assertEquals("NaturalId Cache Hits", 0, stats.getNaturalIdCacheHitCount())[ FD ]
Line_11 $$ Statistics stats = sessionFactory().getStatistics()-->Line_26 $$ assertEquals("NaturalId Cache Queries", 1, stats.getNaturalIdQueryExecutionCount())[ FD ]
Line_16 $$ List results = criteria.list()-->Line_17 $$ assertEquals(1, results.size())[ FD ]
Line_2 $$ public void testNaturalIdCached() -->Line_27 $$ tx.rollback()[ CD ]
Line_2 $$ public void testNaturalIdCached() -->Line_16 $$ List results = criteria.list()[ CD ]
Line_4 $$ Session s = openSession()-->Line_28 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ Transaction tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testNaturalIdCached() -->Line_13 $$ stats.clear()[ CD ]
Line_2 $$ public void testNaturalIdCached() -->Line_25 $$ assertEquals("NaturalId Cache Puts", 1, stats.getNaturalIdCachePutCount())[ CD ]
Line_2 $$ public void testNaturalIdCached() -->Line_12 $$ stats.setStatisticsEnabled(true)[ CD ]
Line_4 $$ Session s = openSession()-->Line_7 $$ Criteria criteria = s.createCriteria(Citizen.class)[ FD ]
Line_2 $$ public void testNaturalIdCached() -->Line_22 $$ criteria.list()[ CD ]
Line_2 $$ public void testNaturalIdCached() -->Line_11 $$ Statistics stats = sessionFactory().getStatistics()[ CD ]
Line_2 $$ public void testNaturalIdCached() -->Line_17 $$ assertEquals(1, results.size())[ CD ]
Line_7 $$ Criteria criteria = s.createCriteria(Citizen.class)-->Line_8 $$ criteria.add(Restrictions.naturalId().set("ssn", "1234").set("state", france))[ FD ]
Line_2 $$ public void testNaturalIdCached() -->Line_19 $$ assertEquals("NaturalId Cache Misses", 1, stats.getNaturalIdCacheMissCount())[ CD ]
Line_11 $$ Statistics stats = sessionFactory().getStatistics()-->Line_24 $$ assertEquals("NaturalId Cache Misses", 1, stats.getNaturalIdCacheMissCount())[ FD ]
Line_2 $$ public void testNaturalIdCached() -->Line_26 $$ assertEquals("NaturalId Cache Queries", 1, stats.getNaturalIdQueryExecutionCount())[ CD ]
Line_7 $$ Criteria criteria = s.createCriteria(Citizen.class)-->Line_22 $$ criteria.list()[ FD ]
Line_11 $$ Statistics stats = sessionFactory().getStatistics()-->Line_23 $$ assertEquals("NaturalId Cache Hits", 0, stats.getNaturalIdCacheHitCount())[ FD ]
Line_2 $$ public void testNaturalIdCached() -->Line_18 $$ assertEquals("NaturalId Cache Hits", 0, stats.getNaturalIdCacheHitCount())[ CD ]
Line_2 $$ public void testNaturalIdCached() -->Line_3 $$ saveSomeCitizens()[ CD ]
Line_2 $$ public void testNaturalIdCached() -->Line_23 $$ assertEquals("NaturalId Cache Hits", 0, stats.getNaturalIdCacheHitCount())[ CD ]
Line_2 $$ public void testNaturalIdCached() -->Line_24 $$ assertEquals("NaturalId Cache Misses", 1, stats.getNaturalIdCacheMissCount())[ CD ]
Line_5 $$ Transaction tx = s.beginTransaction()-->Line_27 $$ tx.rollback()[ FD ]
Line_2 $$ public void testNaturalIdCached() -->Line_6 $$ State france = this.getState(s, "Ile de France")[ CD ]
Line_4 $$ Session s = openSession()-->Line_6 $$ State france = this.getState(s, "Ile de France")[ FD ]
Line_11 $$ Statistics stats = sessionFactory().getStatistics()-->Line_21 $$ assertEquals("NaturalId Cache Queries", 1, stats.getNaturalIdQueryExecutionCount())[ FD ]
Line_7 $$ Criteria criteria = s.createCriteria(Citizen.class)-->Line_9 $$ criteria.setCacheable(true)[ FD ]
Line_2 $$ public void testNaturalIdCached() -->Line_21 $$ assertEquals("NaturalId Cache Queries", 1, stats.getNaturalIdQueryExecutionCount())[ CD ]
Line_11 $$ Statistics stats = sessionFactory().getStatistics()-->Line_13 $$ stats.clear()[ FD ]
Line_11 $$ Statistics stats = sessionFactory().getStatistics()-->Line_14 $$ assertEquals("Cache hits should be empty", 0, stats.getNaturalIdCacheHitCount())[ FD ]
Line_7 $$ Criteria criteria = s.createCriteria(Citizen.class)-->Line_16 $$ List results = criteria.list()[ FD ]
Line_2 $$ public void testNaturalIdCached() -->Line_10 $$ this.cleanupCache()[ CD ]
Line_2 $$ public void testNaturalIdCached() -->Line_5 $$ Transaction tx = s.beginTransaction()[ CD ]
Line_11 $$ Statistics stats = sessionFactory().getStatistics()-->Line_20 $$ assertEquals("NaturalId Cache Puts", 1, stats.getNaturalIdCachePutCount())[ FD ]
