Line_28 $$ PreparedStatement ps = connection.prepareStatement(sql)-->Line_29 $$ ps.setInt(1, 1)[ FD ]
Line_21 $$ final List results = new ArrayList()-->Line_31 $$ results.addAll(resultSetProcessor.extractResults(resultSet, (SessionImplementor) workSession, new QueryParameters(), new NamedParameterContext() [ FD ]
Line_22 $$ final Session workSession = openSession()-->Line_52 $$ workSession.getTransaction().commit()[ FD ]
Line_24 $$ workSession.doWork(new Work() -->Line_28 $$ PreparedStatement ps = connection.prepareStatement(sql)[ CD ]
Line_20 $$ final ResultSetProcessor resultSetProcessor = queryDetails.getResultSetProcessor()-->Line_31 $$ results.addAll(resultSetProcessor.extractResults(resultSet, (SessionImplementor) workSession, new QueryParameters(), new NamedParameterContext() [ FD ]
Line_8 $$ Person person = new Person()-->Line_58 $$ session.delete(person)[ FD ]
Line_30 $$ ResultSet resultSet = ps.executeQuery()-->Line_38 $$ resultSet.close()[ FD ]
Line_24 $$ workSession.doWork(new Work() -->Line_38 $$ resultSet.close()[ CD ]
Line_28 $$ PreparedStatement ps = connection.prepareStatement(sql)-->Line_39 $$ ps.close()[ FD ]
Line_24 $$ workSession.doWork(new Work() -->Line_31 $$ results.addAll(resultSetProcessor.extractResults(resultSet, (SessionImplementor) workSession, new QueryParameters(), new NamedParameterContext() [ CD ]
Line_22 $$ final Session workSession = openSession()-->Line_23 $$ workSession.beginTransaction()[ FD ]
Line_21 $$ final List results = new ArrayList()-->Line_44 $$ assertSame(result1, results.get(1))[ FD ]
Line_31 $$ results.addAll(resultSetProcessor.extractResults(resultSet, (SessionImplementor) workSession, new QueryParameters(), new NamedParameterContext() -->Line_35 $$ return new int[0][ CD ]
Line_17 $$ final LoadPlan plan = Helper.INSTANCE.buildLoadPlan(sessionFactory(), entityPersister)-->Line_18 $$ final LoadQueryDetails queryDetails = Helper.INSTANCE.buildLoadQueryDetails(plan, sessionFactory())[ FD ]
Line_18 $$ final LoadQueryDetails queryDetails = Helper.INSTANCE.buildLoadQueryDetails(plan, sessionFactory())-->Line_20 $$ final ResultSetProcessor resultSetProcessor = queryDetails.getResultSetProcessor()[ FD ]
Line_24 $$ workSession.doWork(new Work() -->Line_30 $$ ResultSet resultSet = ps.executeQuery()[ CD ]
Line_21 $$ final List results = new ArrayList()-->Line_43 $$ Object result1 = results.get(0)[ FD ]
Line_8 $$ Person person = new Person()-->Line_13 $$ session.save(person)[ FD ]
Line_18 $$ final LoadQueryDetails queryDetails = Helper.INSTANCE.buildLoadQueryDetails(plan, sessionFactory())-->Line_19 $$ final String sql = queryDetails.getSqlStatement()[ FD ]
Line_24 $$ workSession.doWork(new Work() -->Line_29 $$ ps.setInt(1, 1)[ CD ]
Line_21 $$ final List results = new ArrayList()-->Line_42 $$ assertEquals(2, results.size())[ FD ]
Line_22 $$ final Session workSession = openSession()-->Line_53 $$ workSession.close()[ FD ]
Line_24 $$ workSession.doWork(new Work() -->Line_28 $$ PreparedStatement ps = connection.prepareStatement(sql)[ FD ]
Line_28 $$ PreparedStatement ps = connection.prepareStatement(sql)-->Line_30 $$ ResultSet resultSet = ps.executeQuery()[ FD ]
Line_4 $$ final EntityPersister entityPersister = sessionFactory().getEntityPersister(Person.class.getName())-->Line_17 $$ final LoadPlan plan = Helper.INSTANCE.buildLoadPlan(sessionFactory(), entityPersister)[ FD ]
Line_19 $$ final String sql = queryDetails.getSqlStatement()-->Line_28 $$ PreparedStatement ps = connection.prepareStatement(sql)[ FD ]
Line_22 $$ final Session workSession = openSession()-->Line_24 $$ workSession.doWork(new Work() [ FD ]
Line_24 $$ workSession.doWork(new Work() -->Line_39 $$ ps.close()[ CD ]
Line_30 $$ ResultSet resultSet = ps.executeQuery()-->Line_31 $$ results.addAll(resultSetProcessor.extractResults(resultSet, (SessionImplementor) workSession, new QueryParameters(), new NamedParameterContext() [ FD ]
