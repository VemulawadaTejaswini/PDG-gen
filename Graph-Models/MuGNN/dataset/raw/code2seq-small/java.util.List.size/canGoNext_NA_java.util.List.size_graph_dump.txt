Line_6 $$ EditorEx editor = getEditor()-->Line_7 $$ int line = editor.getCaretModel().getLogicalPosition().line[ FD ]
Line_2 $$ public boolean canGoNext() -->Line_10 $$ T lastChange = changes.get(changes.size() - 1)[ CD ]
Line_2 $$ public boolean canGoNext() -->Line_8 $$ if (line == editor.getDocument().getLineCount() - 1)[ CD ]
Line_7 $$ int line = editor.getCaretModel().getLogicalPosition().line-->Line_8 $$ if (line == editor.getDocument().getLineCount() - 1)[ FD ]
Line_8 $$ if (line == editor.getDocument().getLineCount() - 1)-->Line_9 $$ return false[ CD ]
Line_2 $$ public boolean canGoNext() -->Line_13 $$ return true[ CD ]
Line_3 $$ List<? extends T> changes = getChanges()-->Line_4 $$ if (changes.isEmpty())[ FD ]
Line_6 $$ EditorEx editor = getEditor()-->Line_8 $$ if (line == editor.getDocument().getLineCount() - 1)[ FD ]
Line_7 $$ int line = editor.getCaretModel().getLogicalPosition().line-->Line_11 $$ if (getStartLine(lastChange) <= line)[ FD ]
Line_2 $$ public boolean canGoNext() -->Line_4 $$ if (changes.isEmpty())[ CD ]
Line_2 $$ public boolean canGoNext() -->Line_7 $$ int line = editor.getCaretModel().getLogicalPosition().line[ CD ]
Line_2 $$ public boolean canGoNext() -->Line_6 $$ EditorEx editor = getEditor()[ CD ]
Line_2 $$ public boolean canGoNext() -->Line_11 $$ if (getStartLine(lastChange) <= line)[ CD ]
Line_2 $$ public boolean canGoNext() -->Line_3 $$ List<? extends T> changes = getChanges()[ CD ]
Line_3 $$ List<? extends T> changes = getChanges()-->Line_10 $$ T lastChange = changes.get(changes.size() - 1)[ FD ]
Line_4 $$ if (changes.isEmpty())-->Line_5 $$ return false[ CD ]
Line_10 $$ T lastChange = changes.get(changes.size() - 1)-->Line_11 $$ if (getStartLine(lastChange) <= line)[ FD ]
Line_11 $$ if (getStartLine(lastChange) <= line)-->Line_12 $$ return false[ CD ]
