Line_4 $$ Component toFocus = null-->Line_12 $$ if (toFocus == null) [ FD ]
Line_2 $$ private static Component queryToFocus(final List<FocusTrackback> stack, final FocusTrackback trackback, boolean mustBeLastInStack) -->Line_17 $$ toFocus = trackback.getFocusOwner()[ FD ]
Line_9 $$ toFocus = null-->Line_24 $$ toFocus = null[ FD ]
Line_7 $$ toFocus = focusOwner-->Line_28 $$ toFocus = null[ FD ]
Line_2 $$ private static Component queryToFocus(final List<FocusTrackback> stack, final FocusTrackback trackback, boolean mustBeLastInStack) -->Line_3 $$ final int index = stack.indexOf(trackback)[ CD ]
Line_4 $$ Component toFocus = null-->Line_7 $$ toFocus = focusOwner[ FD ]
Line_2 $$ private static Component queryToFocus(final List<FocusTrackback> stack, final FocusTrackback trackback, boolean mustBeLastInStack) -->Line_22 $$ if (!stack.get(i).isMustBeShown()) [ FD ]
Line_9 $$ toFocus = null-->Line_28 $$ toFocus = null[ FD ]
Line_3 $$ final int index = stack.indexOf(trackback)-->Line_13 $$ if (index > 0) [ FD ]
Line_23 $$ if ((stack.get(i).isSheduledForRestore() || stack.get(i).isWillBeSheduledForRestore()) && !stack.get(i).isConsumed()) -->Line_24 $$ toFocus = null[ CD ]
Line_7 $$ toFocus = focusOwner-->Line_24 $$ toFocus = null[ FD ]
Line_13 $$ if (index > 0) -->Line_15 $$ toFocus = query != null ? query.getComponent() : null[ CD ]
Line_7 $$ toFocus = focusOwner-->Line_12 $$ if (toFocus == null) [ FD ]
Line_6 $$ if (focusOwner != null) -->Line_7 $$ toFocus = focusOwner[ CD ]
Line_2 $$ private static Component queryToFocus(final List<FocusTrackback> stack, final FocusTrackback trackback, boolean mustBeLastInStack) -->Line_4 $$ Component toFocus = null[ CD ]
Line_7 $$ toFocus = focusOwner-->Line_17 $$ toFocus = trackback.getFocusOwner()[ FD ]
Line_4 $$ Component toFocus = null-->Line_15 $$ toFocus = query != null ? query.getComponent() : null[ FD ]
Line_4 $$ Component toFocus = null-->Line_17 $$ toFocus = trackback.getFocusOwner()[ FD ]
Line_20 $$ if (mustBeLastInStack) -->Line_21 $$ for (int i = index + 1; i < stack.size(); i++) [ CD ]
Line_22 $$ if (!stack.get(i).isMustBeShown()) -->Line_23 $$ if ((stack.get(i).isSheduledForRestore() || stack.get(i).isWillBeSheduledForRestore()) && !stack.get(i).isConsumed()) [ CD ]
Line_7 $$ toFocus = focusOwner-->Line_8 $$ if (UIUtil.isMeaninglessFocusOwner(toFocus)) [ FD ]
Line_7 $$ toFocus = focusOwner-->Line_9 $$ toFocus = null[ FD ]
Line_2 $$ private static Component queryToFocus(final List<FocusTrackback> stack, final FocusTrackback trackback, boolean mustBeLastInStack) -->Line_14 $$ final ComponentQuery query = stack.get(index - 1).myFocusedComponentQuery[ FD ]
Line_7 $$ toFocus = focusOwner-->Line_15 $$ toFocus = query != null ? query.getComponent() : null[ FD ]
Line_2 $$ private static Component queryToFocus(final List<FocusTrackback> stack, final FocusTrackback trackback, boolean mustBeLastInStack) -->Line_20 $$ if (mustBeLastInStack) [ CD ]
Line_4 $$ Component toFocus = null-->Line_9 $$ toFocus = null[ FD ]
Line_2 $$ private static Component queryToFocus(final List<FocusTrackback> stack, final FocusTrackback trackback, boolean mustBeLastInStack) -->Line_21 $$ for (int i = index + 1; i < stack.size(); i++) [ FD ]
Line_13 $$ if (index > 0) -->Line_14 $$ final ComponentQuery query = stack.get(index - 1).myFocusedComponentQuery[ CD ]
Line_4 $$ Component toFocus = null-->Line_24 $$ toFocus = null[ FD ]
Line_2 $$ private static Component queryToFocus(final List<FocusTrackback> stack, final FocusTrackback trackback, boolean mustBeLastInStack) -->Line_3 $$ final int index = stack.indexOf(trackback)[ FD ]
Line_2 $$ private static Component queryToFocus(final List<FocusTrackback> stack, final FocusTrackback trackback, boolean mustBeLastInStack) -->Line_5 $$ Component focusOwner = trackback.myLocalFocusOwner.get()[ CD ]
Line_15 $$ toFocus = query != null ? query.getComponent() : null-->Line_24 $$ toFocus = null[ FD ]
Line_2 $$ private static Component queryToFocus(final List<FocusTrackback> stack, final FocusTrackback trackback, boolean mustBeLastInStack) -->Line_12 $$ if (toFocus == null) [ CD ]
Line_12 $$ if (toFocus == null) -->Line_13 $$ if (index > 0) [ CD ]
Line_6 $$ if (focusOwner != null) -->Line_8 $$ if (UIUtil.isMeaninglessFocusOwner(toFocus)) [ CD ]
Line_13 $$ if (index > 0) -->Line_17 $$ toFocus = trackback.getFocusOwner()[ CD ]
Line_17 $$ toFocus = trackback.getFocusOwner()-->Line_24 $$ toFocus = null[ FD ]
Line_2 $$ private static Component queryToFocus(final List<FocusTrackback> stack, final FocusTrackback trackback, boolean mustBeLastInStack) -->Line_33 $$ return toFocus[ CD ]
Line_9 $$ toFocus = null-->Line_17 $$ toFocus = trackback.getFocusOwner()[ FD ]
Line_9 $$ toFocus = null-->Line_12 $$ if (toFocus == null) [ FD ]
Line_5 $$ Component focusOwner = trackback.myLocalFocusOwner.get()-->Line_6 $$ if (focusOwner != null) [ FD ]
Line_15 $$ toFocus = query != null ? query.getComponent() : null-->Line_17 $$ toFocus = trackback.getFocusOwner()[ FD ]
Line_14 $$ final ComponentQuery query = stack.get(index - 1).myFocusedComponentQuery-->Line_15 $$ toFocus = query != null ? query.getComponent() : null[ FD ]
Line_9 $$ toFocus = null-->Line_15 $$ toFocus = query != null ? query.getComponent() : null[ FD ]
Line_2 $$ private static Component queryToFocus(final List<FocusTrackback> stack, final FocusTrackback trackback, boolean mustBeLastInStack) -->Line_6 $$ if (focusOwner != null) [ CD ]
Line_21 $$ for (int i = index + 1; i < stack.size(); i++) -->Line_22 $$ if (!stack.get(i).isMustBeShown()) [ CD ]
Line_21 $$ for (int i = index + 1; i < stack.size(); i++) -->Line_23 $$ if ((stack.get(i).isSheduledForRestore() || stack.get(i).isWillBeSheduledForRestore()) && !stack.get(i).isConsumed()) [ FD ]
Line_8 $$ if (UIUtil.isMeaninglessFocusOwner(toFocus)) -->Line_9 $$ toFocus = null[ CD ]
Line_27 $$ if (!stack.get(i).isConsumed()) -->Line_28 $$ toFocus = null[ CD ]
Line_2 $$ private static Component queryToFocus(final List<FocusTrackback> stack, final FocusTrackback trackback, boolean mustBeLastInStack) -->Line_23 $$ if ((stack.get(i).isSheduledForRestore() || stack.get(i).isWillBeSheduledForRestore()) && !stack.get(i).isConsumed()) [ FD ]
Line_15 $$ toFocus = query != null ? query.getComponent() : null-->Line_28 $$ toFocus = null[ FD ]
Line_2 $$ private static Component queryToFocus(final List<FocusTrackback> stack, final FocusTrackback trackback, boolean mustBeLastInStack) -->Line_27 $$ if (!stack.get(i).isConsumed()) [ FD ]
Line_21 $$ for (int i = index + 1; i < stack.size(); i++) -->Line_27 $$ if (!stack.get(i).isConsumed()) [ FD ]
Line_4 $$ Component toFocus = null-->Line_8 $$ if (UIUtil.isMeaninglessFocusOwner(toFocus)) [ FD ]
Line_24 $$ toFocus = null-->Line_28 $$ toFocus = null[ FD ]
Line_5 $$ Component focusOwner = trackback.myLocalFocusOwner.get()-->Line_7 $$ toFocus = focusOwner[ FD ]
Line_4 $$ Component toFocus = null-->Line_28 $$ toFocus = null[ FD ]
Line_21 $$ for (int i = index + 1; i < stack.size(); i++) -->Line_22 $$ if (!stack.get(i).isMustBeShown()) [ FD ]
Line_17 $$ toFocus = trackback.getFocusOwner()-->Line_28 $$ toFocus = null[ FD ]
Line_22 $$ if (!stack.get(i).isMustBeShown()) -->Line_27 $$ if (!stack.get(i).isConsumed()) [ CD ]
