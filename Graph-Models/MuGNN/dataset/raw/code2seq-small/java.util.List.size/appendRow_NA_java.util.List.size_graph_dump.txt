Line_5 $$ for (int channel = 0; channel < columns.size(); channel++) -->Line_6 $$ tableInspector.setStructFieldData(orcRow, structFields.get(channel), columns.get(channel))[ CD ]
Line_3 $$ List<Object> columns = row.getColumns()-->Line_4 $$ checkArgument(columns.size() == columnTypes.size())[ FD ]
Line_3 $$ List<Object> columns = row.getColumns()-->Line_5 $$ for (int channel = 0; channel < columns.size(); channel++) [ FD ]
Line_2 $$ public void appendRow(Row row) -->Line_14 $$ uncompressedSize += row.getSizeInBytes()[ CD ]
Line_2 $$ public void appendRow(Row row) -->Line_4 $$ checkArgument(columns.size() == columnTypes.size())[ CD ]
Line_2 $$ public void appendRow(Row row) -->Line_5 $$ for (int channel = 0; channel < columns.size(); channel++) [ CD ]
Line_3 $$ List<Object> columns = row.getColumns()-->Line_6 $$ tableInspector.setStructFieldData(orcRow, structFields.get(channel), columns.get(channel))[ FD ]
Line_2 $$ public void appendRow(Row row) -->Line_3 $$ List<Object> columns = row.getColumns()[ CD ]
Line_2 $$ public void appendRow(Row row) -->Line_3 $$ List<Object> columns = row.getColumns()[ FD ]
Line_5 $$ for (int channel = 0; channel < columns.size(); channel++) -->Line_6 $$ tableInspector.setStructFieldData(orcRow, structFields.get(channel), columns.get(channel))[ FD ]
Line_2 $$ public void appendRow(Row row) -->Line_14 $$ uncompressedSize += row.getSizeInBytes()[ FD ]
