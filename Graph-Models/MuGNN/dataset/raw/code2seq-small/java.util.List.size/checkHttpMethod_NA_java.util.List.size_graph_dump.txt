Line_23 $$ for (String method : allowedMethods) -->Line_27 $$ HttpMethod resolved = HttpMethod.resolve(method)[ FD ]
Line_24 $$ if (requestMethod.matches(method)) -->Line_25 $$ allowed = true[ CD ]
Line_27 $$ HttpMethod resolved = HttpMethod.resolve(method)-->Line_28 $$ if (resolved != null) [ FD ]
Line_28 $$ if (resolved != null) -->Line_29 $$ result.add(resolved)[ CD ]
Line_21 $$ List<HttpMethod> result = new ArrayList<HttpMethod>(allowedMethods.size())-->Line_29 $$ result.add(resolved)[ FD ]
Line_27 $$ HttpMethod resolved = HttpMethod.resolve(method)-->Line_29 $$ result.add(resolved)[ FD ]
Line_18 $$ if (allowedMethods.isEmpty()) -->Line_19 $$ allowedMethods.add(HttpMethod.GET.name())[ CD ]
Line_14 $$ List<String> allowedMethods = (this.allowedMethods != null ? this.allowedMethods : new ArrayList<String>())-->Line_15 $$ if (allowedMethods.contains(ALL)) [ FD ]
Line_23 $$ for (String method : allowedMethods) -->Line_24 $$ if (requestMethod.matches(method)) [ FD ]
Line_14 $$ List<String> allowedMethods = (this.allowedMethods != null ? this.allowedMethods : new ArrayList<String>())-->Line_19 $$ allowedMethods.add(HttpMethod.GET.name())[ FD ]
Line_15 $$ if (allowedMethods.contains(ALL)) -->Line_16 $$ return Collections.singletonList(requestMethod)[ CD ]
Line_14 $$ List<String> allowedMethods = (this.allowedMethods != null ? this.allowedMethods : new ArrayList<String>())-->Line_21 $$ List<HttpMethod> result = new ArrayList<HttpMethod>(allowedMethods.size())[ FD ]
Line_14 $$ List<String> allowedMethods = (this.allowedMethods != null ? this.allowedMethods : new ArrayList<String>())-->Line_18 $$ if (allowedMethods.isEmpty()) [ FD ]
Line_11 $$ if (requestMethod == null) -->Line_12 $$ return null[ CD ]
Line_22 $$ boolean allowed = false-->Line_25 $$ allowed = true[ FD ]
