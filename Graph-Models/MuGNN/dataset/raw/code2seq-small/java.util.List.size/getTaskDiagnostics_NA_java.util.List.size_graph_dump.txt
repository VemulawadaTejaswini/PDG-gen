Line_3 $$ org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId attemptID = TypeConverter.toYarn(arg0)-->Line_5 $$ request.setTaskAttemptId(attemptID)[ FD ]
Line_2 $$ public String[] getTaskDiagnostics(org.apache.hadoop.mapreduce.TaskAttemptID arg0) throws IOException, InterruptedException -->Line_7 $$ String[] result = new String[list.size()][ CD ]
Line_8 $$ int i = 0-->Line_10 $$ result[i++] = c.toString()[ FD ]
Line_2 $$ public String[] getTaskDiagnostics(org.apache.hadoop.mapreduce.TaskAttemptID arg0) throws IOException, InterruptedException -->Line_3 $$ org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId attemptID = TypeConverter.toYarn(arg0)[ FD ]
Line_6 $$ List<String> list = ((GetDiagnosticsResponse) invoke("getDiagnostics", GetDiagnosticsRequest.class, request)).getDiagnosticsList()-->Line_7 $$ String[] result = new String[list.size()][ FD ]
Line_9 $$ for (String c : list) -->Line_10 $$ result[i++] = c.toString()[ FD ]
Line_2 $$ public String[] getTaskDiagnostics(org.apache.hadoop.mapreduce.TaskAttemptID arg0) throws IOException, InterruptedException -->Line_8 $$ int i = 0[ CD ]
Line_2 $$ public String[] getTaskDiagnostics(org.apache.hadoop.mapreduce.TaskAttemptID arg0) throws IOException, InterruptedException -->Line_4 $$ GetDiagnosticsRequest request = recordFactory.newRecordInstance(GetDiagnosticsRequest.class)[ CD ]
Line_4 $$ GetDiagnosticsRequest request = recordFactory.newRecordInstance(GetDiagnosticsRequest.class)-->Line_5 $$ request.setTaskAttemptId(attemptID)[ FD ]
Line_2 $$ public String[] getTaskDiagnostics(org.apache.hadoop.mapreduce.TaskAttemptID arg0) throws IOException, InterruptedException -->Line_6 $$ List<String> list = ((GetDiagnosticsResponse) invoke("getDiagnostics", GetDiagnosticsRequest.class, request)).getDiagnosticsList()[ CD ]
Line_2 $$ public String[] getTaskDiagnostics(org.apache.hadoop.mapreduce.TaskAttemptID arg0) throws IOException, InterruptedException -->Line_5 $$ request.setTaskAttemptId(attemptID)[ CD ]
Line_4 $$ GetDiagnosticsRequest request = recordFactory.newRecordInstance(GetDiagnosticsRequest.class)-->Line_6 $$ List<String> list = ((GetDiagnosticsResponse) invoke("getDiagnostics", GetDiagnosticsRequest.class, request)).getDiagnosticsList()[ FD ]
Line_2 $$ public String[] getTaskDiagnostics(org.apache.hadoop.mapreduce.TaskAttemptID arg0) throws IOException, InterruptedException -->Line_3 $$ org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId attemptID = TypeConverter.toYarn(arg0)[ CD ]
Line_2 $$ public String[] getTaskDiagnostics(org.apache.hadoop.mapreduce.TaskAttemptID arg0) throws IOException, InterruptedException -->Line_12 $$ return result[ CD ]
