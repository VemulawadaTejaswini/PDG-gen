Line_9 $$ JavaVersion targetVersion = JavaVersion.parse(Strings.collectionToDelimitedString(target, "."))-->Line_19 $$ assertTrue(e.getMessage().contains("requires Java " + targetVersion.toString()))[ FD ]
Line_10 $$ Manifest manifest = new Manifest()-->Line_11 $$ Attributes attributes = manifest.getMainAttributes()[ FD ]
Line_2 $$ public void testRequiredJDKVersionTooOld() throws Exception -->Line_13 $$ attributes.put(new Attributes.Name("X-Compile-Target-JDK"), targetVersion.toString())[ CD ]
Line_5 $$ List<Integer> target = new ArrayList(current.size())-->Line_9 $$ JavaVersion targetVersion = JavaVersion.parse(Strings.collectionToDelimitedString(target, "."))[ FD ]
Line_2 $$ public void testRequiredJDKVersionTooOld() throws Exception -->Line_12 $$ attributes.put(Attributes.Name.MANIFEST_VERSION, "1.0.0")[ CD ]
Line_4 $$ List<Integer> current = JavaVersion.current().getVersion()-->Line_7 $$ target.add(current.get(i) + 1)[ FD ]
Line_2 $$ public void testRequiredJDKVersionTooOld() throws Exception -->Line_6 $$ for (int i = 0; i < current.size(); i++) [ CD ]
Line_6 $$ for (int i = 0; i < current.size(); i++) -->Line_7 $$ target.add(current.get(i) + 1)[ CD ]
Line_3 $$ Path dir = createTempDir()-->Line_14 $$ URL[] jars = [ FD ]
Line_9 $$ JavaVersion targetVersion = JavaVersion.parse(Strings.collectionToDelimitedString(target, "."))-->Line_13 $$ attributes.put(new Attributes.Name("X-Compile-Target-JDK"), targetVersion.toString())[ FD ]
Line_5 $$ List<Integer> target = new ArrayList(current.size())-->Line_7 $$ target.add(current.get(i) + 1)[ FD ]
Line_11 $$ Attributes attributes = manifest.getMainAttributes()-->Line_12 $$ attributes.put(Attributes.Name.MANIFEST_VERSION, "1.0.0")[ FD ]
Line_2 $$ public void testRequiredJDKVersionTooOld() throws Exception -->Line_9 $$ JavaVersion targetVersion = JavaVersion.parse(Strings.collectionToDelimitedString(target, "."))[ CD ]
Line_10 $$ Manifest manifest = new Manifest()-->Line_14 $$ URL[] jars = [ FD ]
Line_11 $$ Attributes attributes = manifest.getMainAttributes()-->Line_13 $$ attributes.put(new Attributes.Name("X-Compile-Target-JDK"), targetVersion.toString())[ FD ]
Line_2 $$ public void testRequiredJDKVersionTooOld() throws Exception -->Line_10 $$ Manifest manifest = new Manifest()[ CD ]
Line_2 $$ public void testRequiredJDKVersionTooOld() throws Exception -->Line_11 $$ Attributes attributes = manifest.getMainAttributes()[ CD ]
Line_4 $$ List<Integer> current = JavaVersion.current().getVersion()-->Line_6 $$ for (int i = 0; i < current.size(); i++) [ FD ]
Line_14 $$ URL[] jars = -->Line_16 $$ JarHell.checkJarHell(jars)[ FD ]
Line_2 $$ public void testRequiredJDKVersionTooOld() throws Exception -->Line_3 $$ Path dir = createTempDir()[ CD ]
Line_6 $$ for (int i = 0; i < current.size(); i++) -->Line_7 $$ target.add(current.get(i) + 1)[ FD ]
Line_2 $$ public void testRequiredJDKVersionTooOld() throws Exception -->Line_5 $$ List<Integer> target = new ArrayList(current.size())[ CD ]
Line_2 $$ public void testRequiredJDKVersionTooOld() throws Exception -->Line_14 $$ URL[] jars = [ CD ]
Line_4 $$ List<Integer> current = JavaVersion.current().getVersion()-->Line_5 $$ List<Integer> target = new ArrayList(current.size())[ FD ]
Line_2 $$ public void testRequiredJDKVersionTooOld() throws Exception -->Line_4 $$ List<Integer> current = JavaVersion.current().getVersion()[ CD ]
