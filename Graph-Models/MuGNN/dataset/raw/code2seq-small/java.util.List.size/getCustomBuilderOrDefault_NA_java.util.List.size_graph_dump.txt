Line_6 $$ List<String> activeFactoryNames = null-->Line_10 $$ if (activeFactoryNames == null) [ FD ]
Line_2 $$ private MetadataBuilder getCustomBuilderOrDefault(MetadataBuilderImpl defaultBuilder) -->Line_8 $$ final MetadataBuilder returnedBuilder = discoveredBuilderFactory.getMetadataBuilder(this, defaultBuilder)[ FD ]
Line_2 $$ private MetadataBuilder getCustomBuilderOrDefault(MetadataBuilderImpl defaultBuilder) -->Line_5 $$ MetadataBuilder builder = null[ CD ]
Line_7 $$ for (MetadataBuilderFactory discoveredBuilderFactory : discoveredBuilderFactories) -->Line_8 $$ final MetadataBuilder returnedBuilder = discoveredBuilderFactory.getMetadataBuilder(this, defaultBuilder)[ FD ]
Line_9 $$ if (returnedBuilder != null) -->Line_13 $$ activeFactoryNames.add(discoveredBuilderFactory.getClass().getName())[ CD ]
Line_2 $$ private MetadataBuilder getCustomBuilderOrDefault(MetadataBuilderImpl defaultBuilder) -->Line_17 $$ if (activeFactoryNames != null && activeFactoryNames.size() > 1) [ CD ]
Line_2 $$ private MetadataBuilder getCustomBuilderOrDefault(MetadataBuilderImpl defaultBuilder) -->Line_6 $$ List<String> activeFactoryNames = null[ CD ]
Line_3 $$ final ClassLoaderService cls = serviceRegistry.getService(ClassLoaderService.class)-->Line_4 $$ final java.util.Collection<MetadataBuilderFactory> discoveredBuilderFactories = cls.loadJavaServices(MetadataBuilderFactory.class)[ FD ]
Line_11 $$ activeFactoryNames = new ArrayList<String>()-->Line_18 $$ throw new HibernateException("Multiple active MetadataBuilder definitions were discovered : " + StringHelper.join(", ", activeFactoryNames))[ FD ]
Line_6 $$ List<String> activeFactoryNames = null-->Line_11 $$ activeFactoryNames = new ArrayList<String>()[ FD ]
Line_2 $$ private MetadataBuilder getCustomBuilderOrDefault(MetadataBuilderImpl defaultBuilder) -->Line_20 $$ return builder != null ? builder : defaultBuilder[ CD ]
Line_2 $$ private MetadataBuilder getCustomBuilderOrDefault(MetadataBuilderImpl defaultBuilder) -->Line_3 $$ final ClassLoaderService cls = serviceRegistry.getService(ClassLoaderService.class)[ CD ]
Line_7 $$ for (MetadataBuilderFactory discoveredBuilderFactory : discoveredBuilderFactories) -->Line_13 $$ activeFactoryNames.add(discoveredBuilderFactory.getClass().getName())[ FD ]
Line_6 $$ List<String> activeFactoryNames = null-->Line_13 $$ activeFactoryNames.add(discoveredBuilderFactory.getClass().getName())[ FD ]
Line_11 $$ activeFactoryNames = new ArrayList<String>()-->Line_17 $$ if (activeFactoryNames != null && activeFactoryNames.size() > 1) [ FD ]
Line_9 $$ if (returnedBuilder != null) -->Line_10 $$ if (activeFactoryNames == null) [ CD ]
Line_9 $$ if (returnedBuilder != null) -->Line_14 $$ builder = returnedBuilder[ CD ]
Line_8 $$ final MetadataBuilder returnedBuilder = discoveredBuilderFactory.getMetadataBuilder(this, defaultBuilder)-->Line_9 $$ if (returnedBuilder != null) [ FD ]
Line_8 $$ final MetadataBuilder returnedBuilder = discoveredBuilderFactory.getMetadataBuilder(this, defaultBuilder)-->Line_14 $$ builder = returnedBuilder[ FD ]
Line_6 $$ List<String> activeFactoryNames = null-->Line_17 $$ if (activeFactoryNames != null && activeFactoryNames.size() > 1) [ FD ]
Line_6 $$ List<String> activeFactoryNames = null-->Line_18 $$ throw new HibernateException("Multiple active MetadataBuilder definitions were discovered : " + StringHelper.join(", ", activeFactoryNames))[ FD ]
Line_11 $$ activeFactoryNames = new ArrayList<String>()-->Line_13 $$ activeFactoryNames.add(discoveredBuilderFactory.getClass().getName())[ FD ]
Line_10 $$ if (activeFactoryNames == null) -->Line_11 $$ activeFactoryNames = new ArrayList<String>()[ CD ]
Line_2 $$ private MetadataBuilder getCustomBuilderOrDefault(MetadataBuilderImpl defaultBuilder) -->Line_4 $$ final java.util.Collection<MetadataBuilderFactory> discoveredBuilderFactories = cls.loadJavaServices(MetadataBuilderFactory.class)[ CD ]
Line_5 $$ MetadataBuilder builder = null-->Line_14 $$ builder = returnedBuilder[ FD ]
