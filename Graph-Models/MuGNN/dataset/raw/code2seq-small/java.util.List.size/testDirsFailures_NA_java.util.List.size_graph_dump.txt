Line_20 $$ NodeManager nm = yarnCluster.getNodeManager(0)-->Line_22 $$ dirsHandler = nm.getNodeHealthChecker().getDiskHandler()[ FD ]
Line_39 $$ expectedDirs = dirs[1] + "," + dirs[3]-->Line_47 $$ verifyDisksHealth(localORLogDirs, expectedDirs, false)[ FD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_3 $$ String dirType = localORLogDirs ? "local" : "log"[ CD ]
Line_26 $$ String expectedDirs = StringUtils.join(",", list)-->Line_39 $$ expectedDirs = dirs[1] + "," + dirs[3][ FD ]
Line_5 $$ Configuration conf = new Configuration()-->Line_18 $$ yarnCluster.init(conf)[ FD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_40 $$ verifyDisksHealth(localORLogDirs, expectedDirs, false)[ CD ]
Line_32 $$ expectedDirs = dirs[0] + "," + dirs[1] + "," + dirs[3]-->Line_39 $$ expectedDirs = dirs[1] + "," + dirs[3][ FD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_45 $$ prepareDirToFail(dirs[3])[ CD ]
Line_26 $$ String expectedDirs = StringUtils.join(",", list)-->Line_46 $$ expectedDirs = ""[ FD ]
Line_39 $$ expectedDirs = dirs[1] + "," + dirs[3]-->Line_40 $$ verifyDisksHealth(localORLogDirs, expectedDirs, false)[ FD ]
Line_11 $$ if (yarnCluster != null) -->Line_13 $$ FileUtil.fullyDelete(localFSDirBase)[ CD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_24 $$ String[] dirs = list.toArray(new String[list.size()])[ CD ]
Line_11 $$ if (yarnCluster != null) -->Line_12 $$ yarnCluster.stop()[ CD ]
Line_32 $$ expectedDirs = dirs[0] + "," + dirs[1] + "," + dirs[3]-->Line_40 $$ verifyDisksHealth(localORLogDirs, expectedDirs, false)[ FD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_18 $$ yarnCluster.init(conf)[ CD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_32 $$ expectedDirs = dirs[0] + "," + dirs[1] + "," + dirs[3][ CD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_16 $$ LOG.info("Starting up YARN cluster")[ CD ]
Line_11 $$ if (yarnCluster != null) -->Line_14 $$ localFSDirBase.mkdirs()[ CD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_22 $$ dirsHandler = nm.getNodeHealthChecker().getDiskHandler()[ CD ]
Line_32 $$ expectedDirs = dirs[0] + "," + dirs[1] + "," + dirs[3]-->Line_46 $$ expectedDirs = ""[ FD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_23 $$ List<String> list = localORLogDirs ? dirsHandler.getLocalDirs() : dirsHandler.getLogDirs()[ CD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_19 $$ yarnCluster.start()[ CD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_47 $$ verifyDisksHealth(localORLogDirs, expectedDirs, false)[ CD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_40 $$ verifyDisksHealth(localORLogDirs, expectedDirs, false)[ FD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_33 $$ verifyDisksHealth(localORLogDirs, expectedDirs, true)[ FD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_20 $$ NodeManager nm = yarnCluster.getNodeManager(0)[ CD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_33 $$ verifyDisksHealth(localORLogDirs, expectedDirs, true)[ CD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_4 $$ String dirsProperty = localORLogDirs ? YarnConfiguration.NM_LOCAL_DIRS : YarnConfiguration.NM_LOG_DIRS[ CD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_46 $$ expectedDirs = ""[ CD ]
Line_32 $$ expectedDirs = dirs[0] + "," + dirs[1] + "," + dirs[3]-->Line_47 $$ verifyDisksHealth(localORLogDirs, expectedDirs, false)[ FD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_25 $$ Assert.assertEquals("Number of nm-" + dirType + "-dirs is wrong.", numLocalDirs, dirs.length)[ CD ]
Line_26 $$ String expectedDirs = StringUtils.join(",", list)-->Line_47 $$ verifyDisksHealth(localORLogDirs, expectedDirs, false)[ FD ]
Line_26 $$ String expectedDirs = StringUtils.join(",", list)-->Line_40 $$ verifyDisksHealth(localORLogDirs, expectedDirs, false)[ FD ]
Line_46 $$ expectedDirs = ""-->Line_47 $$ verifyDisksHealth(localORLogDirs, expectedDirs, false)[ FD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_21 $$ LOG.info("Configured nm-" + dirType + "-dirs=" + nm.getConfig().get(dirsProperty))[ CD ]
Line_4 $$ String dirsProperty = localORLogDirs ? YarnConfiguration.NM_LOCAL_DIRS : YarnConfiguration.NM_LOG_DIRS-->Line_21 $$ LOG.info("Configured nm-" + dirType + "-dirs=" + nm.getConfig().get(dirsProperty))[ FD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_26 $$ String expectedDirs = StringUtils.join(",", list)[ CD ]
Line_20 $$ NodeManager nm = yarnCluster.getNodeManager(0)-->Line_21 $$ LOG.info("Configured nm-" + dirType + "-dirs=" + nm.getConfig().get(dirsProperty))[ FD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_39 $$ expectedDirs = dirs[1] + "," + dirs[3][ CD ]
Line_26 $$ String expectedDirs = StringUtils.join(",", list)-->Line_33 $$ verifyDisksHealth(localORLogDirs, expectedDirs, true)[ FD ]
Line_23 $$ List<String> list = localORLogDirs ? dirsHandler.getLocalDirs() : dirsHandler.getLogDirs()-->Line_26 $$ String expectedDirs = StringUtils.join(",", list)[ FD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_47 $$ verifyDisksHealth(localORLogDirs, expectedDirs, false)[ FD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_5 $$ Configuration conf = new Configuration()[ CD ]
Line_32 $$ expectedDirs = dirs[0] + "," + dirs[1] + "," + dirs[3]-->Line_33 $$ verifyDisksHealth(localORLogDirs, expectedDirs, true)[ FD ]
Line_26 $$ String expectedDirs = StringUtils.join(",", list)-->Line_32 $$ expectedDirs = dirs[0] + "," + dirs[1] + "," + dirs[3][ FD ]
Line_2 $$ private void testDirsFailures(boolean localORLogDirs) throws IOException -->Line_11 $$ if (yarnCluster != null) [ CD ]
Line_39 $$ expectedDirs = dirs[1] + "," + dirs[3]-->Line_46 $$ expectedDirs = ""[ FD ]
Line_23 $$ List<String> list = localORLogDirs ? dirsHandler.getLocalDirs() : dirsHandler.getLogDirs()-->Line_24 $$ String[] dirs = list.toArray(new String[list.size()])[ FD ]
