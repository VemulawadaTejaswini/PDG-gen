Line_9 $$ for (int i = 0; i < columnValues.size(); i++) -->Line_11 $$ ByteBuffer value = columnValues.get(i)[ FD ]
Line_2 $$ private static boolean listAppliesTo(ColumnCondition.CollectionBound bound, List<ByteBuffer> conditionValues, List<ByteBuffer> columnValues) -->Line_4 $$ Map<ByteBuffer, CollectionType> typeMap = new HashMap()[ CD ]
Line_7 $$ List<Cell> cells = new ArrayList(columnValues.size())-->Line_16 $$ return bound.listAppliesTo(ListType.getInstance(Int32Type.instance, true), cells == null ? null : cells.iterator(), conditionValues, bound.operator)[ FD ]
Line_2 $$ private static boolean listAppliesTo(ColumnCondition.CollectionBound bound, List<ByteBuffer> conditionValues, List<ByteBuffer> columnValues) -->Line_6 $$ ColumnDefinition definition = ColumnDefinition.regularDef(cfm, ByteBufferUtil.bytes("c"), ListType.getInstance(Int32Type.instance, true))[ CD ]
Line_6 $$ ColumnDefinition definition = ColumnDefinition.regularDef(cfm, ByteBufferUtil.bytes("c"), ListType.getInstance(Int32Type.instance, true))-->Line_12 $$ cells.add(testCell(definition, value, CellPath.create(key)))[ FD ]
Line_2 $$ private static boolean listAppliesTo(ColumnCondition.CollectionBound bound, List<ByteBuffer> conditionValues, List<ByteBuffer> columnValues) -->Line_16 $$ return bound.listAppliesTo(ListType.getInstance(Int32Type.instance, true), cells == null ? null : cells.iterator(), conditionValues, bound.operator)[ FD ]
Line_2 $$ private static boolean listAppliesTo(ColumnCondition.CollectionBound bound, List<ByteBuffer> conditionValues, List<ByteBuffer> columnValues) -->Line_9 $$ for (int i = 0; i < columnValues.size(); i++) [ FD ]
Line_2 $$ private static boolean listAppliesTo(ColumnCondition.CollectionBound bound, List<ByteBuffer> conditionValues, List<ByteBuffer> columnValues) -->Line_3 $$ CFMetaData cfm = CFMetaData.compile("create table foo(a int PRIMARY KEY, b int, c list<int>)", "ks")[ CD ]
Line_9 $$ for (int i = 0; i < columnValues.size(); i++) -->Line_11 $$ ByteBuffer value = columnValues.get(i)[ CD ]
Line_9 $$ for (int i = 0; i < columnValues.size(); i++) -->Line_10 $$ ByteBuffer key = Int32Serializer.instance.serialize(i)[ CD ]
Line_9 $$ for (int i = 0; i < columnValues.size(); i++) -->Line_10 $$ ByteBuffer key = Int32Serializer.instance.serialize(i)[ FD ]
Line_7 $$ List<Cell> cells = new ArrayList(columnValues.size())-->Line_12 $$ cells.add(testCell(definition, value, CellPath.create(key)))[ FD ]
Line_2 $$ private static boolean listAppliesTo(ColumnCondition.CollectionBound bound, List<ByteBuffer> conditionValues, List<ByteBuffer> columnValues) -->Line_7 $$ List<Cell> cells = new ArrayList(columnValues.size())[ CD ]
Line_11 $$ ByteBuffer value = columnValues.get(i)-->Line_12 $$ cells.add(testCell(definition, value, CellPath.create(key)))[ FD ]
Line_2 $$ private static boolean listAppliesTo(ColumnCondition.CollectionBound bound, List<ByteBuffer> conditionValues, List<ByteBuffer> columnValues) -->Line_5 $$ typeMap.put(ByteBufferUtil.bytes("c"), ListType.getInstance(Int32Type.instance, true))[ CD ]
Line_4 $$ Map<ByteBuffer, CollectionType> typeMap = new HashMap()-->Line_5 $$ typeMap.put(ByteBufferUtil.bytes("c"), ListType.getInstance(Int32Type.instance, true))[ FD ]
Line_2 $$ private static boolean listAppliesTo(ColumnCondition.CollectionBound bound, List<ByteBuffer> conditionValues, List<ByteBuffer> columnValues) -->Line_7 $$ List<Cell> cells = new ArrayList(columnValues.size())[ FD ]
Line_9 $$ for (int i = 0; i < columnValues.size(); i++) -->Line_12 $$ cells.add(testCell(definition, value, CellPath.create(key)))[ CD ]
Line_8 $$ if (columnValues != null) -->Line_9 $$ for (int i = 0; i < columnValues.size(); i++) [ CD ]
Line_2 $$ private static boolean listAppliesTo(ColumnCondition.CollectionBound bound, List<ByteBuffer> conditionValues, List<ByteBuffer> columnValues) -->Line_16 $$ return bound.listAppliesTo(ListType.getInstance(Int32Type.instance, true), cells == null ? null : cells.iterator(), conditionValues, bound.operator)[ CD ]
Line_2 $$ private static boolean listAppliesTo(ColumnCondition.CollectionBound bound, List<ByteBuffer> conditionValues, List<ByteBuffer> columnValues) -->Line_8 $$ if (columnValues != null) [ FD ]
Line_2 $$ private static boolean listAppliesTo(ColumnCondition.CollectionBound bound, List<ByteBuffer> conditionValues, List<ByteBuffer> columnValues) -->Line_8 $$ if (columnValues != null) [ CD ]
Line_3 $$ CFMetaData cfm = CFMetaData.compile("create table foo(a int PRIMARY KEY, b int, c list<int>)", "ks")-->Line_6 $$ ColumnDefinition definition = ColumnDefinition.regularDef(cfm, ByteBufferUtil.bytes("c"), ListType.getInstance(Int32Type.instance, true))[ FD ]
Line_10 $$ ByteBuffer key = Int32Serializer.instance.serialize(i)-->Line_12 $$ cells.add(testCell(definition, value, CellPath.create(key)))[ FD ]
Line_2 $$ private static boolean listAppliesTo(ColumnCondition.CollectionBound bound, List<ByteBuffer> conditionValues, List<ByteBuffer> columnValues) -->Line_11 $$ ByteBuffer value = columnValues.get(i)[ FD ]
