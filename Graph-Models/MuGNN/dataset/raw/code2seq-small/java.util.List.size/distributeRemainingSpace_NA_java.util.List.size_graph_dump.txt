Line_13 $$ if (extraSpaceRequired <= remainingSpace) -->Line_15 $$ willNotDownsample.add(entry.sstable)[ CD ]
Line_2 $$ static Pair<List<SSTableReader>, List<ResampleEntry>> distributeRemainingSpace(List<ResampleEntry> toDownsample, long remainingSpace) -->Line_3 $$ Collections.sort(toDownsample, new Comparator<ResampleEntry>() [ CD ]
Line_10 $$ while (remainingSpace > 0 && noDownsampleCutoff < toDownsample.size()) -->Line_12 $$ long extraSpaceRequired = entry.sstable.getIndexSummaryOffHeapSize() - entry.newSpaceUsed[ CD ]
Line_2 $$ static Pair<List<SSTableReader>, List<ResampleEntry>> distributeRemainingSpace(List<ResampleEntry> toDownsample, long remainingSpace) -->Line_10 $$ while (remainingSpace > 0 && noDownsampleCutoff < toDownsample.size()) [ CD ]
Line_2 $$ static Pair<List<SSTableReader>, List<ResampleEntry>> distributeRemainingSpace(List<ResampleEntry> toDownsample, long remainingSpace) -->Line_10 $$ while (remainingSpace > 0 && noDownsampleCutoff < toDownsample.size()) [ FD ]
Line_12 $$ long extraSpaceRequired = entry.sstable.getIndexSummaryOffHeapSize() - entry.newSpaceUsed-->Line_13 $$ if (extraSpaceRequired <= remainingSpace) [ FD ]
Line_2 $$ static Pair<List<SSTableReader>, List<ResampleEntry>> distributeRemainingSpace(List<ResampleEntry> toDownsample, long remainingSpace) -->Line_13 $$ if (extraSpaceRequired <= remainingSpace) [ FD ]
Line_13 $$ if (extraSpaceRequired <= remainingSpace) -->Line_14 $$ logger.trace("Using leftover space to keep [ CD ]
Line_2 $$ static Pair<List<SSTableReader>, List<ResampleEntry>> distributeRemainingSpace(List<ResampleEntry> toDownsample, long remainingSpace) -->Line_22 $$ return Pair.create(willNotDownsample, toDownsample.subList(noDownsampleCutoff, toDownsample.size()))[ CD ]
Line_10 $$ while (remainingSpace > 0 && noDownsampleCutoff < toDownsample.size()) -->Line_11 $$ ResampleEntry entry = toDownsample.get(noDownsampleCutoff)[ CD ]
Line_2 $$ static Pair<List<SSTableReader>, List<ResampleEntry>> distributeRemainingSpace(List<ResampleEntry> toDownsample, long remainingSpace) -->Line_11 $$ ResampleEntry entry = toDownsample.get(noDownsampleCutoff)[ FD ]
Line_10 $$ while (remainingSpace > 0 && noDownsampleCutoff < toDownsample.size()) -->Line_13 $$ if (extraSpaceRequired <= remainingSpace) [ CD ]
Line_2 $$ static Pair<List<SSTableReader>, List<ResampleEntry>> distributeRemainingSpace(List<ResampleEntry> toDownsample, long remainingSpace) -->Line_22 $$ return Pair.create(willNotDownsample, toDownsample.subList(noDownsampleCutoff, toDownsample.size()))[ FD ]
Line_3 $$ Collections.sort(toDownsample, new Comparator<ResampleEntry>() -->Line_5 $$ return Double.compare(o1.sstable.getIndexSummaryOffHeapSize() - o1.newSpaceUsed, o2.sstable.getIndexSummaryOffHeapSize() - o2.newSpaceUsed)[ CD ]
Line_2 $$ static Pair<List<SSTableReader>, List<ResampleEntry>> distributeRemainingSpace(List<ResampleEntry> toDownsample, long remainingSpace) -->Line_3 $$ Collections.sort(toDownsample, new Comparator<ResampleEntry>() [ FD ]
