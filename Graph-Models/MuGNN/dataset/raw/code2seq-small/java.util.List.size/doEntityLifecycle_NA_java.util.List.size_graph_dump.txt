Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_13 $$ printResult(isWarmup, "[provider=%s] Query finds/s %10.2f\n", provider, findQueryPerf.getOpsPerSec("FIND_QUERY"))[ FD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_12 $$ TotalStats findQueryPerf = runEntityFindQuery(runningTimeout, isWarmup)[ FD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_18 $$ for (int i = 1; i <= numEntities; i++) entityIds.add(i)[ CD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_24 $$ printResult(isWarmup, "[provider=%s] Deletes/s %10.2f\n", provider, deletePerf.getOpsPerSec("DELETE"))[ FD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_7 $$ TotalStats updatePerf = runEntityUpdate(runningTimeout)[ CD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_24 $$ printResult(isWarmup, "[provider=%s] Deletes/s %10.2f\n", provider, deletePerf.getOpsPerSec("DELETE"))[ CD ]
Line_3 $$ long runningTimeout = isWarmup ? WARMUP_TIME : RUNNING_TIME-->Line_7 $$ TotalStats updatePerf = runEntityUpdate(runningTimeout)[ FD ]
Line_4 $$ TotalStats insertPerf = runEntityInsert(runningTimeout)-->Line_6 $$ printResult(isWarmup, "[provider=%s] Inserts/s %10.2f (%d entities)\n", provider, insertPerf.getOpsPerSec("INSERT"), numEntities)[ FD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_11 $$ printResult(isWarmup, "[provider=%s] Updated finds/s %10.2f\n", provider, findUpdatedPerf.getOpsPerSec("FIND_UPDATED"))[ FD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_12 $$ TotalStats findQueryPerf = runEntityFindQuery(runningTimeout, isWarmup)[ CD ]
Line_8 $$ List<Integer> updateIdsSeq = new ArrayList<Integer>(updatedIds)-->Line_10 $$ TotalStats findUpdatedPerf = runEntityFindUpdated(runningTimeout, updateIdsSeq)[ FD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_11 $$ printResult(isWarmup, "[provider=%s] Updated finds/s %10.2f\n", provider, findUpdatedPerf.getOpsPerSec("FIND_UPDATED"))[ CD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_9 $$ printResult(isWarmup, "[provider=%s] Updates/s %10.2f (%d updates)\n", provider, updatePerf.getOpsPerSec("UPDATE"), updateIdsSeq.size())[ FD ]
Line_8 $$ List<Integer> updateIdsSeq = new ArrayList<Integer>(updatedIds)-->Line_9 $$ printResult(isWarmup, "[provider=%s] Updates/s %10.2f (%d updates)\n", provider, updatePerf.getOpsPerSec("UPDATE"), updateIdsSeq.size())[ FD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_13 $$ printResult(isWarmup, "[provider=%s] Query finds/s %10.2f\n", provider, findQueryPerf.getOpsPerSec("FIND_QUERY"))[ CD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_8 $$ List<Integer> updateIdsSeq = new ArrayList<Integer>(updatedIds)[ CD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_3 $$ long runningTimeout = isWarmup ? WARMUP_TIME : RUNNING_TIME[ CD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_6 $$ printResult(isWarmup, "[provider=%s] Inserts/s %10.2f (%d entities)\n", provider, insertPerf.getOpsPerSec("INSERT"), numEntities)[ CD ]
Line_3 $$ long runningTimeout = isWarmup ? WARMUP_TIME : RUNNING_TIME-->Line_4 $$ TotalStats insertPerf = runEntityInsert(runningTimeout)[ FD ]
Line_3 $$ long runningTimeout = isWarmup ? WARMUP_TIME : RUNNING_TIME-->Line_14 $$ TotalStats findRandomPerf = runEntityFindRandom(runningTimeout)[ FD ]
Line_7 $$ TotalStats updatePerf = runEntityUpdate(runningTimeout)-->Line_9 $$ printResult(isWarmup, "[provider=%s] Updates/s %10.2f (%d updates)\n", provider, updatePerf.getOpsPerSec("UPDATE"), updateIdsSeq.size())[ FD ]
Line_3 $$ long runningTimeout = isWarmup ? WARMUP_TIME : RUNNING_TIME-->Line_10 $$ TotalStats findUpdatedPerf = runEntityFindUpdated(runningTimeout, updateIdsSeq)[ FD ]
Line_3 $$ long runningTimeout = isWarmup ? WARMUP_TIME : RUNNING_TIME-->Line_12 $$ TotalStats findQueryPerf = runEntityFindQuery(runningTimeout, isWarmup)[ FD ]
Line_23 $$ TotalStats deletePerf = runEntityDelete(runningTimeout)-->Line_24 $$ printResult(isWarmup, "[provider=%s] Deletes/s %10.2f\n", provider, deletePerf.getOpsPerSec("DELETE"))[ FD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_15 $$ printResult(isWarmup, "[provider=%s] Random finds/s %10.2f\n", provider, findRandomPerf.getOpsPerSec("FIND_RANDOM"))[ CD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_6 $$ printResult(isWarmup, "[provider=%s] Inserts/s %10.2f (%d entities)\n", provider, insertPerf.getOpsPerSec("INSERT"), numEntities)[ FD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_5 $$ numEntities = countEntities().intValue()[ CD ]
Line_3 $$ long runningTimeout = isWarmup ? WARMUP_TIME : RUNNING_TIME-->Line_23 $$ TotalStats deletePerf = runEntityDelete(runningTimeout)[ FD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_23 $$ TotalStats deletePerf = runEntityDelete(runningTimeout)[ CD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_10 $$ TotalStats findUpdatedPerf = runEntityFindUpdated(runningTimeout, updateIdsSeq)[ CD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_9 $$ printResult(isWarmup, "[provider=%s] Updates/s %10.2f (%d updates)\n", provider, updatePerf.getOpsPerSec("UPDATE"), updateIdsSeq.size())[ CD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_4 $$ TotalStats insertPerf = runEntityInsert(runningTimeout)[ CD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_15 $$ printResult(isWarmup, "[provider=%s] Random finds/s %10.2f\n", provider, findRandomPerf.getOpsPerSec("FIND_RANDOM"))[ FD ]
Line_14 $$ TotalStats findRandomPerf = runEntityFindRandom(runningTimeout)-->Line_15 $$ printResult(isWarmup, "[provider=%s] Random finds/s %10.2f\n", provider, findRandomPerf.getOpsPerSec("FIND_RANDOM"))[ FD ]
Line_2 $$ void doEntityLifecycle(boolean isWarmup) -->Line_14 $$ TotalStats findRandomPerf = runEntityFindRandom(runningTimeout)[ CD ]
Line_10 $$ TotalStats findUpdatedPerf = runEntityFindUpdated(runningTimeout, updateIdsSeq)-->Line_11 $$ printResult(isWarmup, "[provider=%s] Updated finds/s %10.2f\n", provider, findUpdatedPerf.getOpsPerSec("FIND_UPDATED"))[ FD ]
Line_12 $$ TotalStats findQueryPerf = runEntityFindQuery(runningTimeout, isWarmup)-->Line_13 $$ printResult(isWarmup, "[provider=%s] Query finds/s %10.2f\n", provider, findQueryPerf.getOpsPerSec("FIND_QUERY"))[ FD ]
