Line_5 $$ Session s = openSession()-->Line_44 $$ s.close()[ FD ]
Line_26 $$ Map.Entry entry = (Map.Entry) result-->Line_41 $$ assertTrue(String.class.isAssignableFrom(entry.getKey().getClass()))[ FD ]
Line_5 $$ Session s = openSession()-->Line_35 $$ s.beginTransaction()[ FD ]
Line_9 $$ Human joe = new Human()-->Line_14 $$ s.save(joe)[ FD ]
Line_22 $$ List results = s.createQuery("select entry(h.family) from Human h").list()-->Line_37 $$ assertEquals(1, results.size())[ FD ]
Line_7 $$ Human me = new Human()-->Line_8 $$ me.setName(new Name("Steve", null, "Ebersole"))[ FD ]
Line_7 $$ Human me = new Human()-->Line_12 $$ me.getFamily().put("son", joe)[ FD ]
Line_7 $$ Human me = new Human()-->Line_49 $$ s.delete(me)[ FD ]
Line_26 $$ Map.Entry entry = (Map.Entry) result-->Line_27 $$ assertTrue(String.class.isAssignableFrom(entry.getKey().getClass()))[ FD ]
Line_5 $$ Session s = openSession()-->Line_21 $$ s.beginTransaction()[ FD ]
Line_5 $$ Session s = openSession()-->Line_30 $$ s.close()[ FD ]
Line_26 $$ Map.Entry entry = (Map.Entry) result-->Line_42 $$ assertTrue(Human.class.isAssignableFrom(entry.getValue().getClass()))[ FD ]
Line_7 $$ Human me = new Human()-->Line_10 $$ me.setName(new Name("Joe", null, "Ebersole"))[ FD ]
Line_5 $$ Session s = openSession()-->Line_6 $$ s.beginTransaction()[ FD ]
Line_5 $$ Session s = openSession()-->Line_16 $$ s.close()[ FD ]
Line_9 $$ Human joe = new Human()-->Line_50 $$ s.delete(joe)[ FD ]
Line_22 $$ List results = s.createQuery("select entry(h.family) from Human h").list()-->Line_24 $$ Object result = results.get(0)[ FD ]
Line_7 $$ Human me = new Human()-->Line_13 $$ s.save(me)[ FD ]
Line_5 $$ Session s = openSession()-->Line_29 $$ s.getTransaction().commit()[ FD ]
Line_26 $$ Map.Entry entry = (Map.Entry) result-->Line_28 $$ assertTrue(Human.class.isAssignableFrom(entry.getValue().getClass()))[ FD ]
Line_5 $$ Session s = openSession()-->Line_14 $$ s.save(joe)[ FD ]
Line_5 $$ Session s = openSession()-->Line_48 $$ s.beginTransaction()[ FD ]
Line_5 $$ Session s = openSession()-->Line_15 $$ s.getTransaction().commit()[ FD ]
Line_7 $$ Human me = new Human()-->Line_11 $$ me.setFamily(new HashMap())[ FD ]
Line_5 $$ Session s = openSession()-->Line_22 $$ List results = s.createQuery("select entry(h.family) from Human h").list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_49 $$ s.delete(me)[ FD ]
Line_5 $$ Session s = openSession()-->Line_13 $$ s.save(me)[ FD ]
Line_24 $$ Object result = results.get(0)-->Line_39 $$ assertTrue(Map.Entry.class.isAssignableFrom(result.getClass()))[ FD ]
Line_5 $$ Session s = openSession()-->Line_50 $$ s.delete(joe)[ FD ]
Line_5 $$ Session s = openSession()-->Line_52 $$ s.close()[ FD ]
Line_5 $$ Session s = openSession()-->Line_36 $$ List results = s.createQuery("select ENTRY(f) from Human h join h.family f").list()[ FD ]
Line_9 $$ Human joe = new Human()-->Line_12 $$ me.getFamily().put("son", joe)[ FD ]
Line_5 $$ Session s = openSession()-->Line_51 $$ s.getTransaction().commit()[ FD ]
Line_22 $$ List results = s.createQuery("select entry(h.family) from Human h").list()-->Line_38 $$ Object result = results.get(0)[ FD ]
Line_22 $$ List results = s.createQuery("select entry(h.family) from Human h").list()-->Line_23 $$ assertEquals(1, results.size())[ FD ]
Line_24 $$ Object result = results.get(0)-->Line_25 $$ assertTrue(Map.Entry.class.isAssignableFrom(result.getClass()))[ FD ]
Line_5 $$ Session s = openSession()-->Line_43 $$ s.getTransaction().commit()[ FD ]
