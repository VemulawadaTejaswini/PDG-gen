Line_14 $$ AnnotationDescriptor ad = new AnnotationDescriptor(EntityListeners.class)-->Line_15 $$ ad.setValue("value", entityListenerClasses.toArray(new Class[entityListenerClasses.size()]))[ FD ]
Line_2 $$ private EntityListeners getEntityListeners(Element tree, XMLContext.Default defaults) -->Line_3 $$ Element element = tree != null ? tree.element("entity-listeners") : null[ CD ]
Line_2 $$ private EntityListeners getEntityListeners(Element tree, XMLContext.Default defaults) -->Line_9 $$ entityListenerClasses.add(classLoaderAccess.classForName(XMLContext.buildSafeClassName(className, defaults)))[ FD ]
Line_17 $$ if (defaults.canUseJavaAnnotations()) -->Line_20 $$ return null[ CD ]
Line_5 $$ List<Class> entityListenerClasses = new ArrayList<Class>()-->Line_15 $$ ad.setValue("value", entityListenerClasses.toArray(new Class[entityListenerClasses.size()]))[ FD ]
Line_14 $$ AnnotationDescriptor ad = new AnnotationDescriptor(EntityListeners.class)-->Line_16 $$ return AnnotationFactory.create(ad)[ FD ]
Line_4 $$ if (element != null) -->Line_16 $$ return AnnotationFactory.create(ad)[ CD ]
Line_4 $$ if (element != null) -->Line_15 $$ ad.setValue("value", entityListenerClasses.toArray(new Class[entityListenerClasses.size()]))[ CD ]
Line_2 $$ private EntityListeners getEntityListeners(Element tree, XMLContext.Default defaults) -->Line_4 $$ if (element != null) [ CD ]
Line_17 $$ if (defaults.canUseJavaAnnotations()) -->Line_18 $$ return getPhysicalAnnotation(EntityListeners.class)[ CD ]
Line_3 $$ Element element = tree != null ? tree.element("entity-listeners") : null-->Line_4 $$ if (element != null) [ FD ]
Line_3 $$ Element element = tree != null ? tree.element("entity-listeners") : null-->Line_6 $$ for (Element subelement : (List<Element>) element.elements("entity-listener")) [ FD ]
Line_2 $$ private EntityListeners getEntityListeners(Element tree, XMLContext.Default defaults) -->Line_17 $$ if (defaults.canUseJavaAnnotations()) [ FD ]
Line_7 $$ String className = subelement.attributeValue("class")-->Line_9 $$ entityListenerClasses.add(classLoaderAccess.classForName(XMLContext.buildSafeClassName(className, defaults)))[ FD ]
Line_5 $$ List<Class> entityListenerClasses = new ArrayList<Class>()-->Line_9 $$ entityListenerClasses.add(classLoaderAccess.classForName(XMLContext.buildSafeClassName(className, defaults)))[ FD ]
Line_2 $$ private EntityListeners getEntityListeners(Element tree, XMLContext.Default defaults) -->Line_3 $$ Element element = tree != null ? tree.element("entity-listeners") : null[ FD ]
Line_4 $$ if (element != null) -->Line_14 $$ AnnotationDescriptor ad = new AnnotationDescriptor(EntityListeners.class)[ CD ]
Line_6 $$ for (Element subelement : (List<Element>) element.elements("entity-listener")) -->Line_7 $$ String className = subelement.attributeValue("class")[ FD ]
Line_4 $$ if (element != null) -->Line_17 $$ if (defaults.canUseJavaAnnotations()) [ CD ]
Line_3 $$ Element element = tree != null ? tree.element("entity-listeners") : null-->Line_11 $$ throw new AnnotationException("Unable to find " + element.getPath() + ".class: " + className, e)[ FD ]
Line_4 $$ if (element != null) -->Line_5 $$ List<Class> entityListenerClasses = new ArrayList<Class>()[ CD ]
