Line_2 $$ public void testAddResolveNodes() throws Throwable -->Line_5 $$ List<String> queryList = createQueryList()[ CD ]
Line_2 $$ public void testAddResolveNodes() throws Throwable -->Line_9 $$ assertEquals(NetworkTopology.DEFAULT_RACK, resolved.get(1))[ CD ]
Line_2 $$ public void testAddResolveNodes() throws Throwable -->Line_6 $$ List<String> resolved = mapping.resolve(queryList)[ CD ]
Line_5 $$ List<String> queryList = createQueryList()-->Line_6 $$ List<String> resolved = mapping.resolve(queryList)[ FD ]
Line_11 $$ String topology = mapping.dumpTopology()-->Line_13 $$ assertEquals(topology, 1, switchMap.size())[ FD ]
Line_3 $$ StaticMapping mapping = newInstance()-->Line_6 $$ List<String> resolved = mapping.resolve(queryList)[ FD ]
Line_10 $$ Map<String, String> switchMap = mapping.getSwitchMap()-->Line_14 $$ assertEquals(topology, "/r1", switchMap.get("n1"))[ FD ]
Line_6 $$ List<String> resolved = mapping.resolve(queryList)-->Line_7 $$ assertEquals(2, resolved.size())[ FD ]
Line_3 $$ StaticMapping mapping = newInstance()-->Line_11 $$ String topology = mapping.dumpTopology()[ FD ]
Line_10 $$ Map<String, String> switchMap = mapping.getSwitchMap()-->Line_13 $$ assertEquals(topology, 1, switchMap.size())[ FD ]
Line_2 $$ public void testAddResolveNodes() throws Throwable -->Line_14 $$ assertEquals(topology, "/r1", switchMap.get("n1"))[ CD ]
Line_2 $$ public void testAddResolveNodes() throws Throwable -->Line_3 $$ StaticMapping mapping = newInstance()[ CD ]
Line_2 $$ public void testAddResolveNodes() throws Throwable -->Line_8 $$ assertEquals("/r1", resolved.get(0))[ CD ]
Line_6 $$ List<String> resolved = mapping.resolve(queryList)-->Line_8 $$ assertEquals("/r1", resolved.get(0))[ FD ]
Line_2 $$ public void testAddResolveNodes() throws Throwable -->Line_11 $$ String topology = mapping.dumpTopology()[ CD ]
Line_2 $$ public void testAddResolveNodes() throws Throwable -->Line_10 $$ Map<String, String> switchMap = mapping.getSwitchMap()[ CD ]
Line_2 $$ public void testAddResolveNodes() throws Throwable -->Line_7 $$ assertEquals(2, resolved.size())[ CD ]
Line_3 $$ StaticMapping mapping = newInstance()-->Line_10 $$ Map<String, String> switchMap = mapping.getSwitchMap()[ FD ]
Line_2 $$ public void testAddResolveNodes() throws Throwable -->Line_13 $$ assertEquals(topology, 1, switchMap.size())[ CD ]
Line_2 $$ public void testAddResolveNodes() throws Throwable -->Line_4 $$ StaticMapping.addNodeToRack("n1", "/r1")[ CD ]
Line_2 $$ public void testAddResolveNodes() throws Throwable -->Line_12 $$ LOG.info(topology)[ CD ]
Line_6 $$ List<String> resolved = mapping.resolve(queryList)-->Line_9 $$ assertEquals(NetworkTopology.DEFAULT_RACK, resolved.get(1))[ FD ]
Line_11 $$ String topology = mapping.dumpTopology()-->Line_12 $$ LOG.info(topology)[ FD ]
Line_11 $$ String topology = mapping.dumpTopology()-->Line_14 $$ assertEquals(topology, "/r1", switchMap.get("n1"))[ FD ]
