Line_14 $$ while (columnItr.hasNext()) -->Line_16 $$ if (isFirst) [ CD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_9 $$ Column pkColumn = (Column) table.getPrimaryKey().getColumns().iterator().next()[ FD ]
Line_15 $$ final Column col = (Column) columnItr.next()-->Line_44 $$ buf.append(dialect.getUniqueDelegate().getColumnDefinitionUniquenessFragment(col))[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_12 $$ final Iterator columnItr = table.getColumnIterator()[ CD ]
Line_61 $$ List<String> sqlStrings = new ArrayList<String>()-->Line_64 $$ applyInitCommands(table, sqlStrings)[ FD ]
Line_61 $$ List<String> sqlStrings = new ArrayList<String>()-->Line_65 $$ return sqlStrings.toArray(new String[sqlStrings.size()])[ FD ]
Line_10 $$ pkColName = pkColumn.getQuotedName(dialect)-->Line_23 $$ if (isPrimaryKeyIdentity && colName.equals(pkColName)) [ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_29 $$ buf.append(col.getSqlType(dialect, metadata))[ FD ]
Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")-->Line_60 $$ applyTableTypeString(buf)[ FD ]
Line_12 $$ final Iterator columnItr = table.getColumnIterator()-->Line_14 $$ while (columnItr.hasNext()) [ FD ]
Line_14 $$ while (columnItr.hasNext()) -->Line_15 $$ final Column col = (Column) columnItr.next()[ CD ]
Line_15 $$ final Column col = (Column) columnItr.next()-->Line_21 $$ String colName = col.getQuotedName(dialect)[ FD ]
Line_50 $$ if (columnComment != null) -->Line_51 $$ buf.append(dialect.getColumnComment(columnComment))[ CD ]
Line_13 $$ boolean isFirst = true-->Line_17 $$ isFirst = false[ FD ]
Line_14 $$ while (columnItr.hasNext()) -->Line_46 $$ if (col.getCheckConstraint() != null && dialect.supportsColumnCheck()) [ CD ]
Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")-->Line_19 $$ buf.append(", ")[ FD ]
Line_42 $$ UniqueKey uk = table.getOrCreateUniqueKey(keyName)-->Line_43 $$ uk.addColumn(col)[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_13 $$ boolean isFirst = true[ CD ]
Line_14 $$ while (columnItr.hasNext()) -->Line_40 $$ if (col.isUnique()) [ CD ]
Line_30 $$ String defaultValue = col.getDefaultValue()-->Line_31 $$ if (defaultValue != null) [ FD ]
Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")-->Line_47 $$ buf.append(" check (").append(col.getCheckConstraint()).append(")")[ FD ]
Line_31 $$ if (defaultValue != null) -->Line_32 $$ buf.append(" default ").append(defaultValue)[ CD ]
Line_24 $$ if (dialect.getIdentityColumnSupport().hasDataTypeInIdentityColumn()) -->Line_25 $$ buf.append(col.getSqlType(dialect, metadata))[ CD ]
Line_34 $$ if (col.isNullable()) -->Line_37 $$ buf.append(" not null")[ CD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_58 $$ applyTableCheck(table, buf)[ FD ]
Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")-->Line_22 $$ buf.append(colName).append(' ')[ FD ]
Line_15 $$ final Column col = (Column) columnItr.next()-->Line_34 $$ if (col.isNullable()) [ FD ]
Line_8 $$ if (table.hasPrimaryKey()) -->Line_10 $$ pkColName = pkColumn.getQuotedName(dialect)[ CD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_60 $$ applyTableTypeString(buf)[ CD ]
Line_15 $$ final Column col = (Column) columnItr.next()-->Line_40 $$ if (col.isUnique()) [ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_3 $$ final QualifiedName tableName = new QualifiedNameParser.NameParts(Identifier.toIdentifier(table.getCatalog(), table.isCatalogQuoted()), Identifier.toIdentifier(table.getSchema(), table.isSchemaQuoted()), table.getNameIdentifier())[ CD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_4 $$ final JdbcEnvironment jdbcEnvironment = metadata.getDatabase().getJdbcEnvironment()[ FD ]
Line_15 $$ final Column col = (Column) columnItr.next()-->Line_47 $$ buf.append(" check (").append(col.getCheckConstraint()).append(")")[ FD ]
Line_15 $$ final Column col = (Column) columnItr.next()-->Line_49 $$ String columnComment = col.getComment()[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_58 $$ applyTableCheck(table, buf)[ CD ]
Line_61 $$ List<String> sqlStrings = new ArrayList<String>()-->Line_62 $$ sqlStrings.add(buf.toString())[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_8 $$ if (table.hasPrimaryKey()) [ FD ]
Line_21 $$ String colName = col.getQuotedName(dialect)-->Line_23 $$ if (isPrimaryKeyIdentity && colName.equals(pkColName)) [ FD ]
Line_40 $$ if (col.isUnique()) -->Line_42 $$ UniqueKey uk = table.getOrCreateUniqueKey(keyName)[ CD ]
Line_14 $$ while (columnItr.hasNext()) -->Line_23 $$ if (isPrimaryKeyIdentity && colName.equals(pkColName)) [ CD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_63 $$ applyComments(table, sqlStrings)[ FD ]
Line_16 $$ if (isFirst) -->Line_19 $$ buf.append(", ")[ CD ]
Line_9 $$ Column pkColumn = (Column) table.getPrimaryKey().getColumns().iterator().next()-->Line_10 $$ pkColName = pkColumn.getQuotedName(dialect)[ FD ]
Line_23 $$ if (isPrimaryKeyIdentity && colName.equals(pkColName)) -->Line_31 $$ if (defaultValue != null) [ CD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_57 $$ buf.append(dialect.getUniqueDelegate().getTableCreationUniqueConstraintsFragment(table))[ CD ]
Line_4 $$ final JdbcEnvironment jdbcEnvironment = metadata.getDatabase().getJdbcEnvironment()-->Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_25 $$ buf.append(col.getSqlType(dialect, metadata))[ FD ]
Line_14 $$ while (columnItr.hasNext()) -->Line_49 $$ String columnComment = col.getComment()[ CD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_27 $$ buf.append(' ').append(dialect.getIdentityColumnSupport().getIdentityColumnString(col.getSqlTypeCode(metadata)))[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_7 $$ String pkColName = null[ CD ]
Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")-->Line_29 $$ buf.append(col.getSqlType(dialect, metadata))[ FD ]
Line_61 $$ List<String> sqlStrings = new ArrayList<String>()-->Line_63 $$ applyComments(table, sqlStrings)[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_57 $$ buf.append(dialect.getUniqueDelegate().getTableCreationUniqueConstraintsFragment(table))[ FD ]
Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")-->Line_27 $$ buf.append(' ').append(dialect.getIdentityColumnSupport().getIdentityColumnString(col.getSqlTypeCode(metadata)))[ FD ]
Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")-->Line_35 $$ buf.append(dialect.getNullColumnString())[ FD ]
Line_40 $$ if (col.isUnique()) -->Line_43 $$ uk.addColumn(col)[ CD ]
Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")-->Line_59 $$ buf.append(')')[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_64 $$ applyInitCommands(table, sqlStrings)[ CD ]
Line_15 $$ final Column col = (Column) columnItr.next()-->Line_46 $$ if (col.getCheckConstraint() != null && dialect.supportsColumnCheck()) [ FD ]
Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")-->Line_58 $$ applyTableCheck(table, buf)[ FD ]
Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")-->Line_25 $$ buf.append(col.getSqlType(dialect, metadata))[ FD ]
Line_14 $$ while (columnItr.hasNext()) -->Line_22 $$ buf.append(colName).append(' ')[ CD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_12 $$ final Iterator columnItr = table.getColumnIterator()[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_6 $$ boolean isPrimaryKeyIdentity = table.hasPrimaryKey() && table.getIdentifierValue() != null && table.getIdentifierValue().isIdentityColumn(metadata.getIdentifierGeneratorFactory(), dialect)[ CD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_6 $$ boolean isPrimaryKeyIdentity = table.hasPrimaryKey() && table.getIdentifierValue() != null && table.getIdentifierValue().isIdentityColumn(metadata.getIdentifierGeneratorFactory(), dialect)[ FD ]
Line_23 $$ if (isPrimaryKeyIdentity && colName.equals(pkColName)) -->Line_27 $$ buf.append(' ').append(dialect.getIdentityColumnSupport().getIdentityColumnString(col.getSqlTypeCode(metadata)))[ CD ]
Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")-->Line_51 $$ buf.append(dialect.getColumnComment(columnComment))[ FD ]
Line_15 $$ final Column col = (Column) columnItr.next()-->Line_43 $$ uk.addColumn(col)[ FD ]
Line_15 $$ final Column col = (Column) columnItr.next()-->Line_27 $$ buf.append(' ').append(dialect.getIdentityColumnSupport().getIdentityColumnString(col.getSqlTypeCode(metadata)))[ FD ]
Line_7 $$ String pkColName = null-->Line_10 $$ pkColName = pkColumn.getQuotedName(dialect)[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_41 $$ String keyName = Constraint.generateName("UK_", table, col)[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_8 $$ if (table.hasPrimaryKey()) [ CD ]
Line_49 $$ String columnComment = col.getComment()-->Line_50 $$ if (columnComment != null) [ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_61 $$ List<String> sqlStrings = new ArrayList<String>()[ CD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_54 $$ if (table.hasPrimaryKey()) [ CD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_14 $$ while (columnItr.hasNext()) [ CD ]
Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")-->Line_44 $$ buf.append(dialect.getUniqueDelegate().getColumnDefinitionUniquenessFragment(col))[ FD ]
Line_23 $$ if (isPrimaryKeyIdentity && colName.equals(pkColName)) -->Line_29 $$ buf.append(col.getSqlType(dialect, metadata))[ CD ]
Line_6 $$ boolean isPrimaryKeyIdentity = table.hasPrimaryKey() && table.getIdentifierValue() != null && table.getIdentifierValue().isIdentityColumn(metadata.getIdentifierGeneratorFactory(), dialect)-->Line_23 $$ if (isPrimaryKeyIdentity && colName.equals(pkColName)) [ FD ]
Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")-->Line_62 $$ sqlStrings.add(buf.toString())[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_54 $$ if (table.hasPrimaryKey()) [ FD ]
Line_15 $$ final Column col = (Column) columnItr.next()-->Line_25 $$ buf.append(col.getSqlType(dialect, metadata))[ FD ]
Line_14 $$ while (columnItr.hasNext()) -->Line_21 $$ String colName = col.getQuotedName(dialect)[ CD ]
Line_54 $$ if (table.hasPrimaryKey()) -->Line_55 $$ buf.append(", ").append(table.getPrimaryKey().sqlConstraintString(dialect))[ CD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_64 $$ applyInitCommands(table, sqlStrings)[ FD ]
Line_23 $$ if (isPrimaryKeyIdentity && colName.equals(pkColName)) -->Line_34 $$ if (col.isNullable()) [ CD ]
Line_41 $$ String keyName = Constraint.generateName("UK_", table, col)-->Line_42 $$ UniqueKey uk = table.getOrCreateUniqueKey(keyName)[ FD ]
Line_15 $$ final Column col = (Column) columnItr.next()-->Line_30 $$ String defaultValue = col.getDefaultValue()[ FD ]
Line_8 $$ if (table.hasPrimaryKey()) -->Line_9 $$ Column pkColumn = (Column) table.getPrimaryKey().getColumns().iterator().next()[ CD ]
Line_23 $$ if (isPrimaryKeyIdentity && colName.equals(pkColName)) -->Line_30 $$ String defaultValue = col.getDefaultValue()[ CD ]
Line_40 $$ if (col.isUnique()) -->Line_44 $$ buf.append(dialect.getUniqueDelegate().getColumnDefinitionUniquenessFragment(col))[ CD ]
Line_14 $$ while (columnItr.hasNext()) -->Line_50 $$ if (columnComment != null) [ CD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_42 $$ UniqueKey uk = table.getOrCreateUniqueKey(keyName)[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")[ CD ]
Line_23 $$ if (isPrimaryKeyIdentity && colName.equals(pkColName)) -->Line_24 $$ if (dialect.getIdentityColumnSupport().hasDataTypeInIdentityColumn()) [ CD ]
Line_21 $$ String colName = col.getQuotedName(dialect)-->Line_22 $$ buf.append(colName).append(' ')[ FD ]
Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")-->Line_57 $$ buf.append(dialect.getUniqueDelegate().getTableCreationUniqueConstraintsFragment(table))[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_62 $$ sqlStrings.add(buf.toString())[ CD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_59 $$ buf.append(')')[ CD ]
Line_7 $$ String pkColName = null-->Line_23 $$ if (isPrimaryKeyIdentity && colName.equals(pkColName)) [ FD ]
Line_16 $$ if (isFirst) -->Line_17 $$ isFirst = false[ CD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_3 $$ final QualifiedName tableName = new QualifiedNameParser.NameParts(Identifier.toIdentifier(table.getCatalog(), table.isCatalogQuoted()), Identifier.toIdentifier(table.getSchema(), table.isSchemaQuoted()), table.getNameIdentifier())[ FD ]
Line_46 $$ if (col.getCheckConstraint() != null && dialect.supportsColumnCheck()) -->Line_47 $$ buf.append(" check (").append(col.getCheckConstraint()).append(")")[ CD ]
Line_15 $$ final Column col = (Column) columnItr.next()-->Line_41 $$ String keyName = Constraint.generateName("UK_", table, col)[ FD ]
Line_49 $$ String columnComment = col.getComment()-->Line_51 $$ buf.append(dialect.getColumnComment(columnComment))[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_4 $$ final JdbcEnvironment jdbcEnvironment = metadata.getDatabase().getJdbcEnvironment()[ CD ]
Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")-->Line_32 $$ buf.append(" default ").append(defaultValue)[ FD ]
Line_3 $$ final QualifiedName tableName = new QualifiedNameParser.NameParts(Identifier.toIdentifier(table.getCatalog(), table.isCatalogQuoted()), Identifier.toIdentifier(table.getSchema(), table.isSchemaQuoted()), table.getNameIdentifier())-->Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_65 $$ return sqlStrings.toArray(new String[sqlStrings.size()])[ CD ]
Line_34 $$ if (col.isNullable()) -->Line_35 $$ buf.append(dialect.getNullColumnString())[ CD ]
Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")-->Line_55 $$ buf.append(", ").append(table.getPrimaryKey().sqlConstraintString(dialect))[ FD ]
Line_15 $$ final Column col = (Column) columnItr.next()-->Line_29 $$ buf.append(col.getSqlType(dialect, metadata))[ FD ]
Line_30 $$ String defaultValue = col.getDefaultValue()-->Line_32 $$ buf.append(" default ").append(defaultValue)[ FD ]
Line_40 $$ if (col.isUnique()) -->Line_41 $$ String keyName = Constraint.generateName("UK_", table, col)[ CD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_55 $$ buf.append(", ").append(table.getPrimaryKey().sqlConstraintString(dialect))[ FD ]
Line_12 $$ final Iterator columnItr = table.getColumnIterator()-->Line_15 $$ final Column col = (Column) columnItr.next()[ FD ]
Line_2 $$ public String[] getSqlCreateStrings(Table table, Metadata metadata) -->Line_63 $$ applyComments(table, sqlStrings)[ CD ]
Line_5 $$ StringBuilder buf = new StringBuilder(tableCreateString(table.hasPrimaryKey())).append(' ').append(jdbcEnvironment.getQualifiedObjectNameFormatter().format(tableName, jdbcEnvironment.getDialect())).append(" (")-->Line_37 $$ buf.append(" not null")[ FD ]
