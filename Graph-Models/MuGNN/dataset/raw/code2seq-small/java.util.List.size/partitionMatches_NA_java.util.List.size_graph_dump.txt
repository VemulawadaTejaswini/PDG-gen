Line_6 $$ List<String> values = partition.getValues()-->Line_12 $$ if (!part.isEmpty() && !values.get(i).equals(part)) [ FD ]
Line_10 $$ for (int i = 0; i < values.size(); i++) -->Line_11 $$ String part = parts.get(i)[ CD ]
Line_2 $$ private static boolean partitionMatches(Partition partition, String databaseName, String tableName, List<String> parts) -->Line_11 $$ String part = parts.get(i)[ FD ]
Line_11 $$ String part = parts.get(i)-->Line_12 $$ if (!part.isEmpty() && !values.get(i).equals(part)) [ FD ]
Line_10 $$ for (int i = 0; i < values.size(); i++) -->Line_12 $$ if (!part.isEmpty() && !values.get(i).equals(part)) [ FD ]
Line_2 $$ private static boolean partitionMatches(Partition partition, String databaseName, String tableName, List<String> parts) -->Line_6 $$ List<String> values = partition.getValues()[ FD ]
Line_3 $$ if (!partition.getDbName().equals(databaseName) || !partition.getTableName().equals(tableName)) -->Line_4 $$ return false[ CD ]
Line_6 $$ List<String> values = partition.getValues()-->Line_10 $$ for (int i = 0; i < values.size(); i++) [ FD ]
Line_2 $$ private static boolean partitionMatches(Partition partition, String databaseName, String tableName, List<String> parts) -->Line_6 $$ List<String> values = partition.getValues()[ CD ]
Line_2 $$ private static boolean partitionMatches(Partition partition, String databaseName, String tableName, List<String> parts) -->Line_7 $$ if (values.size() != parts.size()) [ FD ]
Line_2 $$ private static boolean partitionMatches(Partition partition, String databaseName, String tableName, List<String> parts) -->Line_16 $$ return true[ CD ]
Line_6 $$ List<String> values = partition.getValues()-->Line_7 $$ if (values.size() != parts.size()) [ FD ]
Line_10 $$ for (int i = 0; i < values.size(); i++) -->Line_11 $$ String part = parts.get(i)[ FD ]
Line_10 $$ for (int i = 0; i < values.size(); i++) -->Line_12 $$ if (!part.isEmpty() && !values.get(i).equals(part)) [ CD ]
Line_2 $$ private static boolean partitionMatches(Partition partition, String databaseName, String tableName, List<String> parts) -->Line_10 $$ for (int i = 0; i < values.size(); i++) [ CD ]
Line_7 $$ if (values.size() != parts.size()) -->Line_8 $$ return false[ CD ]
Line_2 $$ private static boolean partitionMatches(Partition partition, String databaseName, String tableName, List<String> parts) -->Line_7 $$ if (values.size() != parts.size()) [ CD ]
Line_2 $$ private static boolean partitionMatches(Partition partition, String databaseName, String tableName, List<String> parts) -->Line_3 $$ if (!partition.getDbName().equals(databaseName) || !partition.getTableName().equals(tableName)) [ CD ]
Line_2 $$ private static boolean partitionMatches(Partition partition, String databaseName, String tableName, List<String> parts) -->Line_3 $$ if (!partition.getDbName().equals(databaseName) || !partition.getTableName().equals(tableName)) [ FD ]
Line_12 $$ if (!part.isEmpty() && !values.get(i).equals(part)) -->Line_13 $$ return false[ CD ]
