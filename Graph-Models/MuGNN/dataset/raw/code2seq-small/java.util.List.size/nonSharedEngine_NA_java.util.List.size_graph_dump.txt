Line_8 $$ ExecutorService executor = Executors.newFixedThreadPool(4)-->Line_17 $$ executor.shutdown()[ FD ]
Line_14 $$ for (int i = 0; i < iterations; i++) -->Line_15 $$ assertTrue(results.get(i).get())[ CD ]
Line_2 $$ public void nonSharedEngine() throws Exception -->Line_7 $$ this.view.setApplicationContext(this.wac)[ CD ]
Line_2 $$ public void nonSharedEngine() throws Exception -->Line_10 $$ for (int i = 0; i < iterations; i++) [ CD ]
Line_2 $$ public void nonSharedEngine() throws Exception -->Line_3 $$ int iterations = 20[ CD ]
Line_2 $$ public void nonSharedEngine() throws Exception -->Line_6 $$ this.view.setSharedEngine(false)[ CD ]
Line_2 $$ public void nonSharedEngine() throws Exception -->Line_4 $$ this.view.setEngineName("nashorn")[ CD ]
Line_9 $$ List<Future<Boolean>> results = new ArrayList()-->Line_15 $$ assertTrue(results.get(i).get())[ FD ]
Line_3 $$ int iterations = 20-->Line_14 $$ for (int i = 0; i < iterations; i++) [ FD ]
Line_2 $$ public void nonSharedEngine() throws Exception -->Line_13 $$ assertEquals(iterations, results.size())[ CD ]
Line_3 $$ int iterations = 20-->Line_10 $$ for (int i = 0; i < iterations; i++) [ FD ]
Line_10 $$ for (int i = 0; i < iterations; i++) -->Line_14 $$ for (int i = 0; i < iterations; i++) [ FD ]
Line_2 $$ public void nonSharedEngine() throws Exception -->Line_17 $$ executor.shutdown()[ CD ]
Line_14 $$ for (int i = 0; i < iterations; i++) -->Line_15 $$ assertTrue(results.get(i).get())[ FD ]
Line_3 $$ int iterations = 20-->Line_13 $$ assertEquals(iterations, results.size())[ FD ]
Line_9 $$ List<Future<Boolean>> results = new ArrayList()-->Line_11 $$ results.add(executor.submit(() -> view.getEngine() != null))[ FD ]
Line_2 $$ public void nonSharedEngine() throws Exception -->Line_8 $$ ExecutorService executor = Executors.newFixedThreadPool(4)[ CD ]
Line_2 $$ public void nonSharedEngine() throws Exception -->Line_5 $$ this.view.setRenderFunction("render")[ CD ]
Line_9 $$ List<Future<Boolean>> results = new ArrayList()-->Line_13 $$ assertEquals(iterations, results.size())[ FD ]
Line_10 $$ for (int i = 0; i < iterations; i++) -->Line_15 $$ assertTrue(results.get(i).get())[ FD ]
Line_8 $$ ExecutorService executor = Executors.newFixedThreadPool(4)-->Line_11 $$ results.add(executor.submit(() -> view.getEngine() != null))[ FD ]
Line_2 $$ public void nonSharedEngine() throws Exception -->Line_14 $$ for (int i = 0; i < iterations; i++) [ CD ]
Line_10 $$ for (int i = 0; i < iterations; i++) -->Line_11 $$ results.add(executor.submit(() -> view.getEngine() != null))[ CD ]
Line_2 $$ public void nonSharedEngine() throws Exception -->Line_9 $$ List<Future<Boolean>> results = new ArrayList()[ CD ]
