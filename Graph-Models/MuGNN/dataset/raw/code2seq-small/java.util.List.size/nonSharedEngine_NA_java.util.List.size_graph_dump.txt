Line_10 $$ List<Future<Boolean>> results = new ArrayList()-->Line_16 $$ assertTrue(results.get(i).get())[ FD ]
Line_10 $$ List<Future<Boolean>> results = new ArrayList()-->Line_14 $$ assertEquals(iterations, results.size())[ FD ]
Line_15 $$ for (int i = 0; i < iterations; i++) -->Line_16 $$ assertTrue(results.get(i).get())[ FD ]
Line_11 $$ for (int i = 0; i < iterations; i++) -->Line_16 $$ assertTrue(results.get(i).get())[ FD ]
Line_4 $$ int iterations = 20-->Line_14 $$ assertEquals(iterations, results.size())[ FD ]
Line_15 $$ for (int i = 0; i < iterations; i++) -->Line_16 $$ assertTrue(results.get(i).get())[ CD ]
Line_9 $$ ExecutorService executor = Executors.newFixedThreadPool(4)-->Line_18 $$ executor.shutdown()[ FD ]
Line_4 $$ int iterations = 20-->Line_11 $$ for (int i = 0; i < iterations; i++) [ FD ]
Line_11 $$ for (int i = 0; i < iterations; i++) -->Line_15 $$ for (int i = 0; i < iterations; i++) [ FD ]
Line_4 $$ int iterations = 20-->Line_15 $$ for (int i = 0; i < iterations; i++) [ FD ]
Line_10 $$ List<Future<Boolean>> results = new ArrayList()-->Line_12 $$ results.add(executor.submit(() -> view.getEngine() != null))[ FD ]
Line_11 $$ for (int i = 0; i < iterations; i++) -->Line_12 $$ results.add(executor.submit(() -> view.getEngine() != null))[ CD ]
Line_9 $$ ExecutorService executor = Executors.newFixedThreadPool(4)-->Line_12 $$ results.add(executor.submit(() -> view.getEngine() != null))[ FD ]
