Line_15 $$ for (int i = result.length - 1; i >= 0; i--) -->Line_16 $$ T extension = result[i][ CD ]
Line_9 $$ if (result == null) -->Line_14 $$ result = myExtensions.toArray(a)[ CD ]
Line_17 $$ if (extension == null) -->Line_18 $$ LOG.error(" null extension: " + myExtensions + ";\n" + " getExtensionClass(): " + extensionClass + ";\n")[ CD ]
Line_5 $$ T[] result = myExtensionsCache-->Line_6 $$ if (result == null) [ FD ]
Line_9 $$ if (result == null) -->Line_15 $$ for (int i = result.length - 1; i >= 0; i--) [ CD ]
Line_20 $$ if (i > 0 && extension == result[i - 1]) -->Line_21 $$ LOG.error("Duplicate extension found: " + extension + "; " + " Result:      " + Arrays.toString(result) + ";\n" + " extensions: " + myExtensions + ";\n" + " getExtensionClass(): " + extensionClass + ";\n" + " size:" + myExtensions.size() + ";" + result.length)[ CD ]
Line_9 $$ if (result == null) -->Line_11 $$ Class<T> extensionClass = getExtensionClass()[ CD ]
Line_8 $$ result = myExtensionsCache-->Line_14 $$ result = myExtensions.toArray(a)[ FD ]
Line_5 $$ T[] result = myExtensionsCache-->Line_8 $$ result = myExtensionsCache[ FD ]
Line_14 $$ result = myExtensions.toArray(a)-->Line_21 $$ LOG.error("Duplicate extension found: " + extension + "; " + " Result:      " + Arrays.toString(result) + ";\n" + " extensions: " + myExtensions + ";\n" + " getExtensionClass(): " + extensionClass + ";\n" + " size:" + myExtensions.size() + ";" + result.length)[ FD ]
Line_8 $$ result = myExtensionsCache-->Line_9 $$ if (result == null) [ FD ]
Line_5 $$ T[] result = myExtensionsCache-->Line_14 $$ result = myExtensions.toArray(a)[ FD ]
Line_15 $$ for (int i = result.length - 1; i >= 0; i--) -->Line_20 $$ if (i > 0 && extension == result[i - 1]) [ CD ]
Line_8 $$ result = myExtensionsCache-->Line_21 $$ LOG.error("Duplicate extension found: " + extension + "; " + " Result:      " + Arrays.toString(result) + ";\n" + " extensions: " + myExtensions + ";\n" + " getExtensionClass(): " + extensionClass + ";\n" + " size:" + myExtensions.size() + ";" + result.length)[ FD ]
Line_15 $$ for (int i = result.length - 1; i >= 0; i--) -->Line_17 $$ if (extension == null) [ CD ]
Line_16 $$ T extension = result[i]-->Line_17 $$ if (extension == null) [ FD ]
Line_5 $$ T[] result = myExtensionsCache-->Line_21 $$ LOG.error("Duplicate extension found: " + extension + "; " + " Result:      " + Arrays.toString(result) + ";\n" + " extensions: " + myExtensions + ";\n" + " getExtensionClass(): " + extensionClass + ";\n" + " size:" + myExtensions.size() + ";" + result.length)[ FD ]
Line_9 $$ if (result == null) -->Line_10 $$ processAdapters()[ CD ]
Line_5 $$ T[] result = myExtensionsCache-->Line_9 $$ if (result == null) [ FD ]
