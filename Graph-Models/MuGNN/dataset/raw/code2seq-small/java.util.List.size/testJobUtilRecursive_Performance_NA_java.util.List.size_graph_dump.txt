Line_4 $$ for (int i = 0; i < 10; i++) -->Line_18 $$ long finish = System.currentTimeMillis()[ CD ]
Line_4 $$ for (int i = 0; i < 10; i++) -->Line_7 $$ JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, new Processor<String>() [ CD ]
Line_7 $$ JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, new Processor<String>() -->Line_15 $$ return true[ CD ]
Line_2 $$ public void testJobUtilRecursive_Performance() throws Exception -->Line_3 $$ final List<String> list = Collections.nCopies(100, null)[ CD ]
Line_2 $$ public void testJobUtilRecursive_Performance() throws Exception -->Line_4 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_4 $$ for (int i = 0; i < 10; i++) -->Line_19 $$ System.out.println("Elapsed: " + (finish - start) + "ms")[ CD ]
Line_7 $$ JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, new Processor<String>() -->Line_9 $$ JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, new Processor<String>() [ CD ]
Line_9 $$ JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, new Processor<String>() -->Line_11 $$ busySleep(1)[ CD ]
Line_4 $$ for (int i = 0; i < 10; i++) -->Line_20 $$ assertEquals(list.size() * list.size(), COUNT.get())[ CD ]
Line_4 $$ for (int i = 0; i < 10; i++) -->Line_6 $$ long start = System.currentTimeMillis()[ CD ]
Line_3 $$ final List<String> list = Collections.nCopies(100, null)-->Line_20 $$ assertEquals(list.size() * list.size(), COUNT.get())[ FD ]
Line_3 $$ final List<String> list = Collections.nCopies(100, null)-->Line_7 $$ JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, new Processor<String>() [ FD ]
Line_3 $$ final List<String> list = Collections.nCopies(100, null)-->Line_9 $$ JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, new Processor<String>() [ FD ]
Line_9 $$ JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, new Processor<String>() -->Line_12 $$ return true[ CD ]
Line_4 $$ for (int i = 0; i < 10; i++) -->Line_5 $$ COUNT.set(0)[ CD ]
