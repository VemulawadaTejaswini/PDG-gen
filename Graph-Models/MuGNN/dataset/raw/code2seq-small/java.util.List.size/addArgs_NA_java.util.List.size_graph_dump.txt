Line_6 $$ if (BrowserUtil.isOpenCommandSupportArgs()) -->Line_9 $$ LOG.warn("'open' command doesn't allow to pass command line arguments so they will be ignored: " + StringUtil.join(specific, ", ") + " " + Arrays.toString(additional))[ CD ]
Line_2 $$ private static void addArgs(@NotNull GeneralCommandLine command, @Nullable BrowserSpecificSettings settings, @NotNull String[] additional) -->Line_7 $$ command.addParameter("--args")[ FD ]
Line_3 $$ List<String> specific = settings == null ? Collections.<String>emptyList() : settings.getAdditionalParameters()-->Line_9 $$ LOG.warn("'open' command doesn't allow to pass command line arguments so they will be ignored: " + StringUtil.join(specific, ", ") + " " + Arrays.toString(additional))[ FD ]
Line_4 $$ if (specific.size() + additional.length > 0) -->Line_13 $$ command.addParameters(specific)[ CD ]
Line_3 $$ List<String> specific = settings == null ? Collections.<String>emptyList() : settings.getAdditionalParameters()-->Line_13 $$ command.addParameters(specific)[ FD ]
Line_4 $$ if (specific.size() + additional.length > 0) -->Line_5 $$ if (isOpenCommandUsed(command)) [ CD ]
Line_2 $$ private static void addArgs(@NotNull GeneralCommandLine command, @Nullable BrowserSpecificSettings settings, @NotNull String[] additional) -->Line_3 $$ List<String> specific = settings == null ? Collections.<String>emptyList() : settings.getAdditionalParameters()[ FD ]
Line_2 $$ private static void addArgs(@NotNull GeneralCommandLine command, @Nullable BrowserSpecificSettings settings, @NotNull String[] additional) -->Line_5 $$ if (isOpenCommandUsed(command)) [ FD ]
Line_5 $$ if (isOpenCommandUsed(command)) -->Line_6 $$ if (BrowserUtil.isOpenCommandSupportArgs()) [ CD ]
Line_3 $$ List<String> specific = settings == null ? Collections.<String>emptyList() : settings.getAdditionalParameters()-->Line_4 $$ if (specific.size() + additional.length > 0) [ FD ]
Line_6 $$ if (BrowserUtil.isOpenCommandSupportArgs()) -->Line_10 $$ return[ CD ]
Line_2 $$ private static void addArgs(@NotNull GeneralCommandLine command, @Nullable BrowserSpecificSettings settings, @NotNull String[] additional) -->Line_13 $$ command.addParameters(specific)[ FD ]
Line_2 $$ private static void addArgs(@NotNull GeneralCommandLine command, @Nullable BrowserSpecificSettings settings, @NotNull String[] additional) -->Line_3 $$ List<String> specific = settings == null ? Collections.<String>emptyList() : settings.getAdditionalParameters()[ CD ]
Line_2 $$ private static void addArgs(@NotNull GeneralCommandLine command, @Nullable BrowserSpecificSettings settings, @NotNull String[] additional) -->Line_14 $$ command.addParameters(additional)[ FD ]
Line_4 $$ if (specific.size() + additional.length > 0) -->Line_14 $$ command.addParameters(additional)[ CD ]
Line_2 $$ private static void addArgs(@NotNull GeneralCommandLine command, @Nullable BrowserSpecificSettings settings, @NotNull String[] additional) -->Line_4 $$ if (specific.size() + additional.length > 0) [ CD ]
Line_6 $$ if (BrowserUtil.isOpenCommandSupportArgs()) -->Line_7 $$ command.addParameter("--args")[ CD ]
Line_2 $$ private static void addArgs(@NotNull GeneralCommandLine command, @Nullable BrowserSpecificSettings settings, @NotNull String[] additional) -->Line_9 $$ LOG.warn("'open' command doesn't allow to pass command line arguments so they will be ignored: " + StringUtil.join(specific, ", ") + " " + Arrays.toString(additional))[ FD ]
