Line_4 $$ StringBundler sb = new StringBundler(13)-->Line_15 $$ sb.append(", treeId=")[ FD ]
Line_4 $$ StringBundler sb = new StringBundler(13)-->Line_11 $$ sb.append(", expandedLayoutIds=")[ FD ]
Line_25 $$ LayoutTreeNodes childLayoutTreeNodes = null-->Line_31 $$ childLayoutTreeNodes = _getLayoutTreeNodes(request, groupId, layout.isPrivateLayout(), layout.getLayoutId(), incomplete, expandedLayoutIds, treeId)[ FD ]
Line_27 $$ if (layout instanceof VirtualLayout) -->Line_31 $$ childLayoutTreeNodes = _getLayoutTreeNodes(request, groupId, layout.isPrivateLayout(), layout.getLayoutId(), incomplete, expandedLayoutIds, treeId)[ CD ]
Line_27 $$ if (layout instanceof VirtualLayout) -->Line_29 $$ childLayoutTreeNodes = _getLayoutTreeNodes(request, virtualLayout.getSourceGroupId(), virtualLayout.isPrivateLayout(), virtualLayout.getLayoutId(), incomplete, expandedLayoutIds, treeId)[ CD ]
Line_26 $$ if (_isExpandableLayout(request, ancestorLayouts, expandedLayoutIds, layout)) -->Line_34 $$ int childLayoutsCount = LayoutServiceUtil.getLayoutsCount(groupId, privateLayout, layout.getLayoutId())[ CD ]
Line_3 $$ if (_log.isDebugEnabled()) -->Line_8 $$ sb.append(privateLayout)[ CD ]
Line_4 $$ StringBundler sb = new StringBundler(13)-->Line_16 $$ sb.append(treeId)[ FD ]
Line_26 $$ if (_isExpandableLayout(request, ancestorLayouts, expandedLayoutIds, layout)) -->Line_27 $$ if (layout instanceof VirtualLayout) [ CD ]
Line_22 $$ List<Layout> layouts = LayoutServiceUtil.getLayouts(groupId, privateLayout, parentLayoutId, incomplete, QueryUtil.ALL_POS, QueryUtil.ALL_POS)-->Line_23 $$ for (Layout layout : _paginateLayouts(request, groupId, privateLayout, parentLayoutId, layouts, treeId)) [ FD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_8 $$ sb.append(privateLayout)[ FD ]
Line_23 $$ for (Layout layout : _paginateLayouts(request, groupId, privateLayout, parentLayoutId, layouts, treeId)) -->Line_27 $$ if (layout instanceof VirtualLayout) [ FD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_6 $$ sb.append(groupId)[ FD ]
Line_21 $$ List<Layout> ancestorLayouts = _getAncestorLayouts(request)-->Line_26 $$ if (_isExpandableLayout(request, ancestorLayouts, expandedLayoutIds, layout)) [ FD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_3 $$ if (_log.isDebugEnabled()) [ CD ]
Line_3 $$ if (_log.isDebugEnabled()) -->Line_12 $$ sb.append(expandedLayoutIds)[ CD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_26 $$ if (_isExpandableLayout(request, ancestorLayouts, expandedLayoutIds, layout)) [ FD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_31 $$ childLayoutTreeNodes = _getLayoutTreeNodes(request, groupId, layout.isPrivateLayout(), layout.getLayoutId(), incomplete, expandedLayoutIds, treeId)[ FD ]
Line_23 $$ for (Layout layout : _paginateLayouts(request, groupId, privateLayout, parentLayoutId, layouts, treeId)) -->Line_31 $$ childLayoutTreeNodes = _getLayoutTreeNodes(request, groupId, layout.isPrivateLayout(), layout.getLayoutId(), incomplete, expandedLayoutIds, treeId)[ FD ]
Line_31 $$ childLayoutTreeNodes = _getLayoutTreeNodes(request, groupId, layout.isPrivateLayout(), layout.getLayoutId(), incomplete, expandedLayoutIds, treeId)-->Line_37 $$ layoutTreeNode.setChildLayoutTreeNodes(childLayoutTreeNodes)[ FD ]
Line_25 $$ LayoutTreeNodes childLayoutTreeNodes = null-->Line_37 $$ layoutTreeNode.setChildLayoutTreeNodes(childLayoutTreeNodes)[ FD ]
Line_3 $$ if (_log.isDebugEnabled()) -->Line_5 $$ sb.append("_getLayoutTreeNodes(groupId=")[ CD ]
Line_3 $$ if (_log.isDebugEnabled()) -->Line_9 $$ sb.append(", parentLayoutId=")[ CD ]
Line_4 $$ StringBundler sb = new StringBundler(13)-->Line_12 $$ sb.append(expandedLayoutIds)[ FD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_21 $$ List<Layout> ancestorLayouts = _getAncestorLayouts(request)[ FD ]
Line_4 $$ StringBundler sb = new StringBundler(13)-->Line_7 $$ sb.append(", privateLayout=")[ FD ]
Line_3 $$ if (_log.isDebugEnabled()) -->Line_14 $$ sb.append(incomplete)[ CD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_20 $$ List<LayoutTreeNode> layoutTreeNodes = new ArrayList()[ CD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_23 $$ for (Layout layout : _paginateLayouts(request, groupId, privateLayout, parentLayoutId, layouts, treeId)) [ FD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_29 $$ childLayoutTreeNodes = _getLayoutTreeNodes(request, virtualLayout.getSourceGroupId(), virtualLayout.isPrivateLayout(), virtualLayout.getLayoutId(), incomplete, expandedLayoutIds, treeId)[ FD ]
Line_3 $$ if (_log.isDebugEnabled()) -->Line_10 $$ sb.append(parentLayoutId)[ CD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_22 $$ List<Layout> layouts = LayoutServiceUtil.getLayouts(groupId, privateLayout, parentLayoutId, incomplete, QueryUtil.ALL_POS, QueryUtil.ALL_POS)[ CD ]
Line_27 $$ if (layout instanceof VirtualLayout) -->Line_28 $$ VirtualLayout virtualLayout = (VirtualLayout) layout[ CD ]
Line_29 $$ childLayoutTreeNodes = _getLayoutTreeNodes(request, virtualLayout.getSourceGroupId(), virtualLayout.isPrivateLayout(), virtualLayout.getLayoutId(), incomplete, expandedLayoutIds, treeId)-->Line_37 $$ layoutTreeNode.setChildLayoutTreeNodes(childLayoutTreeNodes)[ FD ]
Line_20 $$ List<LayoutTreeNode> layoutTreeNodes = new ArrayList()-->Line_38 $$ layoutTreeNodes.add(layoutTreeNode)[ FD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_21 $$ List<Layout> ancestorLayouts = _getAncestorLayouts(request)[ CD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_34 $$ int childLayoutsCount = LayoutServiceUtil.getLayoutsCount(groupId, privateLayout, layout.getLayoutId())[ FD ]
Line_23 $$ for (Layout layout : _paginateLayouts(request, groupId, privateLayout, parentLayoutId, layouts, treeId)) -->Line_34 $$ int childLayoutsCount = LayoutServiceUtil.getLayoutsCount(groupId, privateLayout, layout.getLayoutId())[ FD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_40 $$ return new LayoutTreeNodes(layoutTreeNodes, layoutTreeNodes.size())[ CD ]
Line_20 $$ List<LayoutTreeNode> layoutTreeNodes = new ArrayList()-->Line_40 $$ return new LayoutTreeNodes(layoutTreeNodes, layoutTreeNodes.size())[ FD ]
Line_3 $$ if (_log.isDebugEnabled()) -->Line_16 $$ sb.append(treeId)[ CD ]
Line_4 $$ StringBundler sb = new StringBundler(13)-->Line_9 $$ sb.append(", parentLayoutId=")[ FD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_16 $$ sb.append(treeId)[ FD ]
Line_25 $$ LayoutTreeNodes childLayoutTreeNodes = null-->Line_35 $$ childLayoutTreeNodes = new LayoutTreeNodes(new ArrayList<LayoutTreeNode>(), childLayoutsCount)[ FD ]
Line_4 $$ StringBundler sb = new StringBundler(13)-->Line_8 $$ sb.append(privateLayout)[ FD ]
Line_4 $$ StringBundler sb = new StringBundler(13)-->Line_10 $$ sb.append(parentLayoutId)[ FD ]
Line_4 $$ StringBundler sb = new StringBundler(13)-->Line_17 $$ sb.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_22 $$ List<Layout> layouts = LayoutServiceUtil.getLayouts(groupId, privateLayout, parentLayoutId, incomplete, QueryUtil.ALL_POS, QueryUtil.ALL_POS)[ FD ]
Line_3 $$ if (_log.isDebugEnabled()) -->Line_15 $$ sb.append(", treeId=")[ CD ]
Line_25 $$ LayoutTreeNodes childLayoutTreeNodes = null-->Line_29 $$ childLayoutTreeNodes = _getLayoutTreeNodes(request, virtualLayout.getSourceGroupId(), virtualLayout.isPrivateLayout(), virtualLayout.getLayoutId(), incomplete, expandedLayoutIds, treeId)[ FD ]
Line_3 $$ if (_log.isDebugEnabled()) -->Line_6 $$ sb.append(groupId)[ CD ]
Line_3 $$ if (_log.isDebugEnabled()) -->Line_4 $$ StringBundler sb = new StringBundler(13)[ CD ]
Line_31 $$ childLayoutTreeNodes = _getLayoutTreeNodes(request, groupId, layout.isPrivateLayout(), layout.getLayoutId(), incomplete, expandedLayoutIds, treeId)-->Line_35 $$ childLayoutTreeNodes = new LayoutTreeNodes(new ArrayList<LayoutTreeNode>(), childLayoutsCount)[ FD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_14 $$ sb.append(incomplete)[ FD ]
Line_3 $$ if (_log.isDebugEnabled()) -->Line_7 $$ sb.append(", privateLayout=")[ CD ]
Line_23 $$ for (Layout layout : _paginateLayouts(request, groupId, privateLayout, parentLayoutId, layouts, treeId)) -->Line_26 $$ if (_isExpandableLayout(request, ancestorLayouts, expandedLayoutIds, layout)) [ FD ]
Line_29 $$ childLayoutTreeNodes = _getLayoutTreeNodes(request, virtualLayout.getSourceGroupId(), virtualLayout.isPrivateLayout(), virtualLayout.getLayoutId(), incomplete, expandedLayoutIds, treeId)-->Line_31 $$ childLayoutTreeNodes = _getLayoutTreeNodes(request, groupId, layout.isPrivateLayout(), layout.getLayoutId(), incomplete, expandedLayoutIds, treeId)[ FD ]
Line_35 $$ childLayoutTreeNodes = new LayoutTreeNodes(new ArrayList<LayoutTreeNode>(), childLayoutsCount)-->Line_37 $$ layoutTreeNode.setChildLayoutTreeNodes(childLayoutTreeNodes)[ FD ]
Line_26 $$ if (_isExpandableLayout(request, ancestorLayouts, expandedLayoutIds, layout)) -->Line_35 $$ childLayoutTreeNodes = new LayoutTreeNodes(new ArrayList<LayoutTreeNode>(), childLayoutsCount)[ CD ]
Line_4 $$ StringBundler sb = new StringBundler(13)-->Line_6 $$ sb.append(groupId)[ FD ]
Line_3 $$ if (_log.isDebugEnabled()) -->Line_18 $$ _log.debug(sb.toString())[ CD ]
Line_3 $$ if (_log.isDebugEnabled()) -->Line_11 $$ sb.append(", expandedLayoutIds=")[ CD ]
Line_3 $$ if (_log.isDebugEnabled()) -->Line_13 $$ sb.append(", incomplete=")[ CD ]
Line_4 $$ StringBundler sb = new StringBundler(13)-->Line_13 $$ sb.append(", incomplete=")[ FD ]
Line_4 $$ StringBundler sb = new StringBundler(13)-->Line_14 $$ sb.append(incomplete)[ FD ]
Line_3 $$ if (_log.isDebugEnabled()) -->Line_17 $$ sb.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_29 $$ childLayoutTreeNodes = _getLayoutTreeNodes(request, virtualLayout.getSourceGroupId(), virtualLayout.isPrivateLayout(), virtualLayout.getLayoutId(), incomplete, expandedLayoutIds, treeId)-->Line_35 $$ childLayoutTreeNodes = new LayoutTreeNodes(new ArrayList<LayoutTreeNode>(), childLayoutsCount)[ FD ]
Line_4 $$ StringBundler sb = new StringBundler(13)-->Line_18 $$ _log.debug(sb.toString())[ FD ]
Line_24 $$ LayoutTreeNode layoutTreeNode = new LayoutTreeNode(layout)-->Line_38 $$ layoutTreeNodes.add(layoutTreeNode)[ FD ]
Line_4 $$ StringBundler sb = new StringBundler(13)-->Line_5 $$ sb.append("_getLayoutTreeNodes(groupId=")[ FD ]
Line_28 $$ VirtualLayout virtualLayout = (VirtualLayout) layout-->Line_29 $$ childLayoutTreeNodes = _getLayoutTreeNodes(request, virtualLayout.getSourceGroupId(), virtualLayout.isPrivateLayout(), virtualLayout.getLayoutId(), incomplete, expandedLayoutIds, treeId)[ FD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_12 $$ sb.append(expandedLayoutIds)[ FD ]
Line_2 $$ private static LayoutTreeNodes _getLayoutTreeNodes(HttpServletRequest request, long groupId, boolean privateLayout, long parentLayoutId, boolean incomplete, long[] expandedLayoutIds, String treeId) throws Exception -->Line_10 $$ sb.append(parentLayoutId)[ FD ]
Line_24 $$ LayoutTreeNode layoutTreeNode = new LayoutTreeNode(layout)-->Line_37 $$ layoutTreeNode.setChildLayoutTreeNodes(childLayoutTreeNodes)[ FD ]
