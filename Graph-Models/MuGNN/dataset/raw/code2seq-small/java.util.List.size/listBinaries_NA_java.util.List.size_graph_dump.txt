Line_14 $$ final ProcessOutput process = getProcessOutput(// see PY-3898-->Line_22 $$ sb.append(", exit code ").append(process.getExitCode()).append(", stderr: \n-----\n")[ FD ]
Line_39 $$ int cutpos = line.indexOf('\t')-->Line_40 $$ if (cutpos >= 0) [ FD ]
Line_23 $$ for (String line : process.getStderrLines()) -->Line_39 $$ int cutpos = line.indexOf('\t')[ FD ]
Line_4 $$ final String homePath = sdk.getHomePath()-->Line_6 $$ if (homePath == null)[ FD ]
Line_4 $$ final String homePath = sdk.getHomePath()-->Line_14 $$ final ProcessOutput process = getProcessOutput(// see PY-3898[ FD ]
Line_30 $$ final List<String> lines = process.getStdoutLines()-->Line_31 $$ if (lines.size() < 1) [ FD ]
Line_23 $$ for (String line : process.getStderrLines()) -->Line_41 $$ String[] strs = line.split("\t")[ FD ]
Line_40 $$ if (cutpos >= 0) -->Line_44 $$ int length = Integer.parseInt(strs[2])[ CD ]
Line_36 $$ final Map<String, PySkeletonRefresher.PyBinaryItem> binaries = Maps.newHashMap()-->Line_46 $$ binaries.put(moduleName, new PySkeletonRefresher.PyBinaryItem(moduleName, path, length, lastModified))[ FD ]
Line_17 $$ if (process.getExitCode() != 0) -->Line_19 $$ if (process.isTimeout()) [ CD ]
Line_4 $$ final String homePath = sdk.getHomePath()-->Line_18 $$ final StringBuilder sb = new StringBuilder("failed to run ").append(GENERATOR3).append(" for ").append(homePath)[ FD ]
Line_23 $$ for (String line : process.getStderrLines()) -->Line_24 $$ sb.append(line).append("\n")[ FD ]
Line_17 $$ if (process.getExitCode() != 0) -->Line_18 $$ final StringBuilder sb = new StringBuilder("failed to run ").append(GENERATOR3).append(" for ").append(homePath)[ CD ]
Line_10 $$ if (!StringUtil.isEmpty(extraSysPath)) -->Line_11 $$ cmd.add("-s")[ CD ]
Line_14 $$ final ProcessOutput process = getProcessOutput(// see PY-3898-->Line_23 $$ for (String line : process.getStderrLines()) [ FD ]
Line_18 $$ final StringBuilder sb = new StringBuilder("failed to run ").append(GENERATOR3).append(" for ").append(homePath)-->Line_20 $$ sb.append(": timed out.")[ FD ]
Line_9 $$ List<String> cmd = new ArrayList<String>(Arrays.asList(homePath, PythonHelpersLocator.getHelperPath(GENERATOR3), "-v", "-L"))-->Line_11 $$ cmd.add("-s")[ FD ]
Line_37 $$ while (iter.hasNext()) -->Line_38 $$ final String line = iter.next()[ CD ]
Line_42 $$ String moduleName = strs[0]-->Line_46 $$ binaries.put(moduleName, new PySkeletonRefresher.PyBinaryItem(moduleName, path, length, lastModified))[ FD ]
Line_40 $$ if (cutpos >= 0) -->Line_42 $$ String moduleName = strs[0][ CD ]
Line_37 $$ while (iter.hasNext()) -->Line_39 $$ int cutpos = line.indexOf('\t')[ CD ]
Line_9 $$ List<String> cmd = new ArrayList<String>(Arrays.asList(homePath, PythonHelpersLocator.getHelperPath(GENERATOR3), "-v", "-L"))-->Line_14 $$ final ProcessOutput process = getProcessOutput(// see PY-3898[ FD ]
Line_4 $$ final String homePath = sdk.getHomePath()-->Line_9 $$ List<String> cmd = new ArrayList<String>(Arrays.asList(homePath, PythonHelpersLocator.getHelperPath(GENERATOR3), "-v", "-L"))[ FD ]
Line_18 $$ final StringBuilder sb = new StringBuilder("failed to run ").append(GENERATOR3).append(" for ").append(homePath)-->Line_22 $$ sb.append(", exit code ").append(process.getExitCode()).append(", stderr: \n-----\n")[ FD ]
Line_37 $$ while (iter.hasNext()) -->Line_40 $$ if (cutpos >= 0) [ CD ]
Line_19 $$ if (process.isTimeout()) -->Line_20 $$ sb.append(": timed out.")[ CD ]
Line_14 $$ final ProcessOutput process = getProcessOutput(// see PY-3898-->Line_19 $$ if (process.isTimeout()) [ FD ]
Line_40 $$ if (cutpos >= 0) -->Line_43 $$ String path = strs[1][ CD ]
Line_40 $$ if (cutpos >= 0) -->Line_41 $$ String[] strs = line.split("\t")[ CD ]
Line_34 $$ final Iterator<String> iter = lines.iterator()-->Line_38 $$ final String line = iter.next()[ FD ]
Line_30 $$ final List<String> lines = process.getStdoutLines()-->Line_34 $$ final Iterator<String> iter = lines.iterator()[ FD ]
Line_19 $$ if (process.isTimeout()) -->Line_22 $$ sb.append(", exit code ").append(process.getExitCode()).append(", stderr: \n-----\n")[ CD ]
Line_9 $$ List<String> cmd = new ArrayList<String>(Arrays.asList(homePath, PythonHelpersLocator.getHelperPath(GENERATOR3), "-v", "-L"))-->Line_12 $$ cmd.add(extraSysPath)[ FD ]
Line_34 $$ final Iterator<String> iter = lines.iterator()-->Line_35 $$ final int generatorVersion = fromVersionString(iter.next().trim())[ FD ]
Line_18 $$ final StringBuilder sb = new StringBuilder("failed to run ").append(GENERATOR3).append(" for ").append(homePath)-->Line_24 $$ sb.append(line).append("\n")[ FD ]
Line_18 $$ final StringBuilder sb = new StringBuilder("failed to run ").append(GENERATOR3).append(" for ").append(homePath)-->Line_28 $$ throw new InvalidSdkException(sb.toString())[ FD ]
Line_38 $$ final String line = iter.next()-->Line_39 $$ int cutpos = line.indexOf('\t')[ FD ]
Line_18 $$ final StringBuilder sb = new StringBuilder("failed to run ").append(GENERATOR3).append(" for ").append(homePath)-->Line_26 $$ sb.append("-----")[ FD ]
Line_34 $$ final Iterator<String> iter = lines.iterator()-->Line_37 $$ while (iter.hasNext()) [ FD ]
Line_10 $$ if (!StringUtil.isEmpty(extraSysPath)) -->Line_12 $$ cmd.add(extraSysPath)[ CD ]
Line_40 $$ if (cutpos >= 0) -->Line_46 $$ binaries.put(moduleName, new PySkeletonRefresher.PyBinaryItem(moduleName, path, length, lastModified))[ CD ]
Line_14 $$ final ProcessOutput process = getProcessOutput(// see PY-3898-->Line_30 $$ final List<String> lines = process.getStdoutLines()[ FD ]
Line_40 $$ if (cutpos >= 0) -->Line_45 $$ int lastModified = Integer.parseInt(strs[3])[ CD ]
Line_14 $$ final ProcessOutput process = getProcessOutput(// see PY-3898-->Line_17 $$ if (process.getExitCode() != 0) [ FD ]
Line_38 $$ final String line = iter.next()-->Line_41 $$ String[] strs = line.split("\t")[ FD ]
Line_19 $$ if (process.isTimeout()) -->Line_26 $$ sb.append("-----")[ CD ]
