Line_10 $$ if (name != null) -->Line_11 $$ final List<String> invalidUrls = ((LibraryEx) library).getInvalidRootUrls(OrderRootType.CLASSES)[ CD ]
Line_4 $$ if (myEntry == null)-->Line_5 $$ return null[ CD ]
Line_11 $$ final List<String> invalidUrls = ((LibraryEx) library).getInvalidRootUrls(OrderRootType.CLASSES)-->Line_13 $$ return ProjectBundle.message("project.roots.tooltip.library.has.broken.paths", name, invalidUrls.size())[ FD ]
Line_9 $$ final String name = library.getName()-->Line_13 $$ return ProjectBundle.message("project.roots.tooltip.library.has.broken.paths", name, invalidUrls.size())[ FD ]
Line_6 $$ final Library library = myEntry.getLibrary()-->Line_16 $$ final List<String> descriptions = LibraryPresentationManager.getInstance().getDescriptions(library, myContext)[ FD ]
Line_6 $$ final Library library = myEntry.getLibrary()-->Line_7 $$ if (library == null)[ FD ]
Line_16 $$ final List<String> descriptions = LibraryPresentationManager.getInstance().getDescriptions(library, myContext)-->Line_17 $$ if (descriptions.isEmpty())[ FD ]
Line_17 $$ if (descriptions.isEmpty())-->Line_18 $$ return null[ CD ]
Line_16 $$ final List<String> descriptions = LibraryPresentationManager.getInstance().getDescriptions(library, myContext)-->Line_19 $$ return XmlStringUtil.wrapInHtml(StringUtil.join(descriptions, "<br>"))[ FD ]
Line_6 $$ final Library library = myEntry.getLibrary()-->Line_9 $$ final String name = library.getName()[ FD ]
Line_10 $$ if (name != null) -->Line_12 $$ if (!invalidUrls.isEmpty()) [ CD ]
Line_11 $$ final List<String> invalidUrls = ((LibraryEx) library).getInvalidRootUrls(OrderRootType.CLASSES)-->Line_12 $$ if (!invalidUrls.isEmpty()) [ FD ]
Line_12 $$ if (!invalidUrls.isEmpty()) -->Line_13 $$ return ProjectBundle.message("project.roots.tooltip.library.has.broken.paths", name, invalidUrls.size())[ CD ]
Line_7 $$ if (library == null)-->Line_8 $$ return null[ CD ]
Line_9 $$ final String name = library.getName()-->Line_10 $$ if (name != null) [ FD ]
