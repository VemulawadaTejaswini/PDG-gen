Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_8 $$ parent.id.lastName = "Blow"[ CD ]
Line_3 $$ Session session = openSession()-->Line_9 $$ session.save(parent)[ FD ]
Line_5 $$ Parent parent = new Parent()-->Line_31 $$ assertEquals(parent, parentWork)[ FD ]
Line_3 $$ Session session = openSession()-->Line_12 $$ session = openSession()[ FD ]
Line_18 $$ final List results = getResults(sessionFactory().getEntityPersister(Parent.class.getName()), new Callback() -->Line_27 $$ assertEquals(1, results.size())[ FD ]
Line_12 $$ session = openSession()-->Line_13 $$ session.beginTransaction()[ FD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_4 $$ session.beginTransaction()[ CD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_30 $$ Parent parentWork = ExtraAssertions.assertTyping(Parent.class, result)[ CD ]
Line_3 $$ Session session = openSession()-->Line_33 $$ session.beginTransaction()[ FD ]
Line_12 $$ session = openSession()-->Line_35 $$ session.getTransaction().commit()[ FD ]
Line_3 $$ Session session = openSession()-->Line_10 $$ session.getTransaction().commit()[ FD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_14 $$ Parent parentGotten = (Parent) session.get(Parent.class, parent.id)[ CD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_15 $$ assertEquals(parent, parentGotten)[ CD ]
Line_14 $$ Parent parentGotten = (Parent) session.get(Parent.class, parent.id)-->Line_15 $$ assertEquals(parent, parentGotten)[ FD ]
Line_18 $$ final List results = getResults(sessionFactory().getEntityPersister(Parent.class.getName()), new Callback() -->Line_20 $$ ps.setString(1, "Joe")[ FD ]
Line_3 $$ Session session = openSession()-->Line_11 $$ session.close()[ FD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_7 $$ parent.id.firstName = "Joe"[ CD ]
Line_12 $$ session = openSession()-->Line_36 $$ session.close()[ FD ]
Line_12 $$ session = openSession()-->Line_33 $$ session.beginTransaction()[ FD ]
Line_5 $$ Parent parent = new Parent()-->Line_9 $$ session.save(parent)[ FD ]
Line_18 $$ final List results = getResults(sessionFactory().getEntityPersister(Parent.class.getName()), new Callback() -->Line_20 $$ ps.setString(1, "Joe")[ CD ]
Line_3 $$ Session session = openSession()-->Line_4 $$ session.beginTransaction()[ FD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_3 $$ Session session = openSession()[ CD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_34 $$ session.createQuery("delete Parent").executeUpdate()[ CD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_16 $$ session.getTransaction().commit()[ CD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_29 $$ assertNotNull(result)[ CD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_5 $$ Parent parent = new Parent()[ CD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_17 $$ session.close()[ CD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_33 $$ session.beginTransaction()[ CD ]
Line_12 $$ session = openSession()-->Line_17 $$ session.close()[ FD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_18 $$ final List results = getResults(sessionFactory().getEntityPersister(Parent.class.getName()), new Callback() [ CD ]
Line_18 $$ final List results = getResults(sessionFactory().getEntityPersister(Parent.class.getName()), new Callback() -->Line_21 $$ ps.setString(2, "Blow")[ FD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_13 $$ session.beginTransaction()[ CD ]
Line_12 $$ session = openSession()-->Line_34 $$ session.createQuery("delete Parent").executeUpdate()[ FD ]
Line_3 $$ Session session = openSession()-->Line_35 $$ session.getTransaction().commit()[ FD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_36 $$ session.close()[ CD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_35 $$ session.getTransaction().commit()[ CD ]
Line_3 $$ Session session = openSession()-->Line_16 $$ session.getTransaction().commit()[ FD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_10 $$ session.getTransaction().commit()[ CD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_11 $$ session.close()[ CD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_28 $$ Object result = results.get(0)[ CD ]
Line_3 $$ Session session = openSession()-->Line_14 $$ Parent parentGotten = (Parent) session.get(Parent.class, parent.id)[ FD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_32 $$ session = openSession()[ CD ]
Line_5 $$ Parent parent = new Parent()-->Line_15 $$ assertEquals(parent, parentGotten)[ FD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_9 $$ session.save(parent)[ CD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_31 $$ assertEquals(parent, parentWork)[ CD ]
Line_3 $$ Session session = openSession()-->Line_34 $$ session.createQuery("delete Parent").executeUpdate()[ FD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_12 $$ session = openSession()[ CD ]
Line_18 $$ final List results = getResults(sessionFactory().getEntityPersister(Parent.class.getName()), new Callback() -->Line_28 $$ Object result = results.get(0)[ FD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_6 $$ parent.id = new ParentPK()[ CD ]
Line_3 $$ Session session = openSession()-->Line_17 $$ session.close()[ FD ]
Line_2 $$ public void testSimpleCompositeId() throws Exception -->Line_27 $$ assertEquals(1, results.size())[ CD ]
Line_3 $$ Session session = openSession()-->Line_36 $$ session.close()[ FD ]
Line_18 $$ final List results = getResults(sessionFactory().getEntityPersister(Parent.class.getName()), new Callback() -->Line_24 $$ return new QueryParameters()[ CD ]
Line_3 $$ Session session = openSession()-->Line_13 $$ session.beginTransaction()[ FD ]
Line_18 $$ final List results = getResults(sessionFactory().getEntityPersister(Parent.class.getName()), new Callback() -->Line_21 $$ ps.setString(2, "Blow")[ CD ]
Line_12 $$ session = openSession()-->Line_14 $$ Parent parentGotten = (Parent) session.get(Parent.class, parent.id)[ FD ]
Line_12 $$ session = openSession()-->Line_16 $$ session.getTransaction().commit()[ FD ]
