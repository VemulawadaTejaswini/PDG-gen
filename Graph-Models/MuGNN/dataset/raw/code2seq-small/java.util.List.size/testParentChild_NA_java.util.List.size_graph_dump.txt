Line_2 $$ public void testParentChild() throws Exception -->Line_28 $$ assertTrue("1-1 query", s.createQuery("from Child c where c.parent.count=66").list().size() == 1)[ CD ]
Line_5 $$ Parent p = new Parent()-->Line_9 $$ s.save(p)[ FD ]
Line_22 $$ s = openSession()-->Line_38 $$ s.close()[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_33 $$ List result = s.createQuery("FROM Parent AS p WHERE p.count = ?").setParameter(0, new Integer(66), StandardBasicTypes.INTEGER).list()[ CD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_9 $$ s.save(p)[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_14 $$ t = s.beginTransaction()[ FD ]
Line_13 $$ s = openSession()-->Line_30 $$ s.createQuery("select c, c.parent from Child c order by c.parent.count").list()[ FD ]
Line_22 $$ s = openSession()-->Line_31 $$ s.createQuery("select c, c.parent from Child c where c.parent.count=66 order by c.parent.count").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_31 $$ s.createQuery("select c, c.parent from Child c where c.parent.count=66 order by c.parent.count").list()[ FD ]
Line_13 $$ s = openSession()-->Line_23 $$ t = s.beginTransaction()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_37 $$ t.commit()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_20 $$ t.commit()[ FD ]
Line_13 $$ s = openSession()-->Line_24 $$ c = (Child) s.load(Child.class, new Long(c.getId()))[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_20 $$ t.commit()[ CD ]
Line_22 $$ s = openSession()-->Line_35 $$ s.delete(c)[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_15 $$ c = (Child) s.load(Child.class, new Long(c.getId()))[ CD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction t = s.beginTransaction()[ FD ]
Line_22 $$ s = openSession()-->Line_36 $$ s.delete(p)[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_3 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_34 $$ assertEquals("1-1 query", 1, result.size())[ CD ]
Line_33 $$ List result = s.createQuery("FROM Parent AS p WHERE p.count = ?").setParameter(0, new Integer(66), StandardBasicTypes.INTEGER).list()-->Line_34 $$ assertEquals("1-1 query", 1, result.size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_33 $$ List result = s.createQuery("FROM Parent AS p WHERE p.count = ?").setParameter(0, new Integer(66), StandardBasicTypes.INTEGER).list()[ FD ]
Line_5 $$ Parent p = new Parent()-->Line_8 $$ p.setChild(c)[ FD ]
Line_22 $$ s = openSession()-->Line_29 $$ assertTrue("1-1 query", ((Object[]) s.createQuery("from Parent p join p.child c where p.count=66").list().get(0)).length == 2)[ FD ]
Line_13 $$ s = openSession()-->Line_38 $$ s.close()[ FD ]
Line_5 $$ Parent p = new Parent()-->Line_26 $$ assertTrue("1-1 update", p.getCount() == 66)[ FD ]
Line_6 $$ Child c = new Child()-->Line_18 $$ c.setCount(32)[ FD ]
Line_13 $$ s = openSession()-->Line_33 $$ List result = s.createQuery("FROM Parent AS p WHERE p.count = ?").setParameter(0, new Integer(66), StandardBasicTypes.INTEGER).list()[ FD ]
Line_5 $$ Parent p = new Parent()-->Line_7 $$ c.setParent(p)[ FD ]
Line_3 $$ Session s = openSession()-->Line_23 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Child c = new Child()-->Line_24 $$ c = (Child) s.load(Child.class, new Long(c.getId()))[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_32 $$ s.createQuery("select c, c.parent, c.parent.count from Child c order by c.parent.count").iterate()[ CD ]
Line_13 $$ s = openSession()-->Line_36 $$ s.delete(p)[ FD ]
Line_16 $$ p = c.getParent()-->Line_26 $$ assertTrue("1-1 update", p.getCount() == 66)[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_12 $$ s.close()[ CD ]
Line_13 $$ s = openSession()-->Line_35 $$ s.delete(c)[ FD ]
Line_22 $$ s = openSession()-->Line_28 $$ assertTrue("1-1 query", s.createQuery("from Child c where c.parent.count=66").list().size() == 1)[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_37 $$ t.commit()[ CD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_16 $$ p = c.getParent()[ CD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_17 $$ assertTrue("1-1 parent", p != null)[ CD ]
Line_3 $$ Session s = openSession()-->Line_14 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_24 $$ c = (Child) s.load(Child.class, new Long(c.getId()))[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_31 $$ s.createQuery("select c, c.parent from Child c where c.parent.count=66 order by c.parent.count").list()[ CD ]
Line_3 $$ Session s = openSession()-->Line_12 $$ s.close()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_11 $$ t.commit()[ FD ]
Line_6 $$ Child c = new Child()-->Line_35 $$ s.delete(c)[ FD ]
Line_13 $$ s = openSession()-->Line_15 $$ c = (Child) s.load(Child.class, new Long(c.getId()))[ FD ]
Line_5 $$ Parent p = new Parent()-->Line_19 $$ p.setCount(66)[ FD ]
Line_24 $$ c = (Child) s.load(Child.class, new Long(c.getId()))-->Line_35 $$ s.delete(c)[ FD ]
Line_3 $$ Session s = openSession()-->Line_9 $$ s.save(p)[ FD ]
Line_16 $$ p = c.getParent()-->Line_19 $$ p.setCount(66)[ FD ]
Line_3 $$ Session s = openSession()-->Line_36 $$ s.delete(p)[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_19 $$ p.setCount(66)[ CD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_22 $$ s = openSession()[ CD ]
Line_24 $$ c = (Child) s.load(Child.class, new Long(c.getId()))-->Line_25 $$ p = c.getParent()[ FD ]
Line_6 $$ Child c = new Child()-->Line_15 $$ c = (Child) s.load(Child.class, new Long(c.getId()))[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_36 $$ s.delete(p)[ CD ]
Line_3 $$ Session s = openSession()-->Line_29 $$ assertTrue("1-1 query", ((Object[]) s.createQuery("from Parent p join p.child c where p.count=66").list().get(0)).length == 2)[ FD ]
Line_13 $$ s = openSession()-->Line_14 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_32 $$ s.createQuery("select c, c.parent, c.parent.count from Child c order by c.parent.count").iterate()[ FD ]
Line_13 $$ s = openSession()-->Line_31 $$ s.createQuery("select c, c.parent from Child c where c.parent.count=66 order by c.parent.count").list()[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_4 $$ Transaction t = s.beginTransaction()[ CD ]
Line_6 $$ Child c = new Child()-->Line_8 $$ p.setChild(c)[ FD ]
Line_22 $$ s = openSession()-->Line_24 $$ c = (Child) s.load(Child.class, new Long(c.getId()))[ FD ]
Line_24 $$ c = (Child) s.load(Child.class, new Long(c.getId()))-->Line_27 $$ assertTrue("1-1 update", c.getCount() == 32)[ FD ]
Line_5 $$ Parent p = new Parent()-->Line_36 $$ s.delete(p)[ FD ]
Line_22 $$ s = openSession()-->Line_33 $$ List result = s.createQuery("FROM Parent AS p WHERE p.count = ?").setParameter(0, new Integer(66), StandardBasicTypes.INTEGER).list()[ FD ]
Line_23 $$ t = s.beginTransaction()-->Line_37 $$ t.commit()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_23 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_14 $$ t = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_15 $$ c = (Child) s.load(Child.class, new Long(c.getId()))[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_23 $$ t = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_21 $$ s.close()[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_11 $$ t.commit()[ CD ]
Line_6 $$ Child c = new Child()-->Line_27 $$ assertTrue("1-1 update", c.getCount() == 32)[ FD ]
Line_25 $$ p = c.getParent()-->Line_36 $$ s.delete(p)[ FD ]
Line_15 $$ c = (Child) s.load(Child.class, new Long(c.getId()))-->Line_35 $$ s.delete(c)[ FD ]
Line_25 $$ p = c.getParent()-->Line_26 $$ assertTrue("1-1 update", p.getCount() == 66)[ FD ]
Line_3 $$ Session s = openSession()-->Line_13 $$ s = openSession()[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_38 $$ s.close()[ CD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_10 $$ s.save(c)[ CD ]
Line_15 $$ c = (Child) s.load(Child.class, new Long(c.getId()))-->Line_24 $$ c = (Child) s.load(Child.class, new Long(c.getId()))[ FD ]
Line_5 $$ Parent p = new Parent()-->Line_25 $$ p = c.getParent()[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_18 $$ c.setCount(32)[ CD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_5 $$ Parent p = new Parent()[ CD ]
Line_6 $$ Child c = new Child()-->Line_7 $$ c.setParent(p)[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_30 $$ s.createQuery("select c, c.parent from Child c order by c.parent.count").list()[ CD ]
Line_3 $$ Session s = openSession()-->Line_30 $$ s.createQuery("select c, c.parent from Child c order by c.parent.count").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_10 $$ s.save(c)[ FD ]
Line_15 $$ c = (Child) s.load(Child.class, new Long(c.getId()))-->Line_16 $$ p = c.getParent()[ FD ]
Line_14 $$ t = s.beginTransaction()-->Line_37 $$ t.commit()[ FD ]
Line_14 $$ t = s.beginTransaction()-->Line_20 $$ t.commit()[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_26 $$ assertTrue("1-1 update", p.getCount() == 66)[ CD ]
Line_3 $$ Session s = openSession()-->Line_35 $$ s.delete(c)[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_6 $$ Child c = new Child()[ CD ]
Line_15 $$ c = (Child) s.load(Child.class, new Long(c.getId()))-->Line_27 $$ assertTrue("1-1 update", c.getCount() == 32)[ FD ]
Line_3 $$ Session s = openSession()-->Line_28 $$ assertTrue("1-1 query", s.createQuery("from Child c where c.parent.count=66").list().size() == 1)[ FD ]
Line_6 $$ Child c = new Child()-->Line_16 $$ p = c.getParent()[ FD ]
Line_3 $$ Session s = openSession()-->Line_22 $$ s = openSession()[ FD ]
Line_6 $$ Child c = new Child()-->Line_25 $$ p = c.getParent()[ FD ]
Line_13 $$ s = openSession()-->Line_29 $$ assertTrue("1-1 query", ((Object[]) s.createQuery("from Parent p join p.child c where p.count=66").list().get(0)).length == 2)[ FD ]
Line_15 $$ c = (Child) s.load(Child.class, new Long(c.getId()))-->Line_18 $$ c.setCount(32)[ FD ]
Line_16 $$ p = c.getParent()-->Line_36 $$ s.delete(p)[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_25 $$ p = c.getParent()[ CD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_13 $$ s = openSession()[ CD ]
Line_13 $$ s = openSession()-->Line_21 $$ s.close()[ FD ]
Line_13 $$ s = openSession()-->Line_28 $$ assertTrue("1-1 query", s.createQuery("from Child c where c.parent.count=66").list().size() == 1)[ FD ]
Line_16 $$ p = c.getParent()-->Line_25 $$ p = c.getParent()[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_8 $$ p.setChild(c)[ CD ]
Line_13 $$ s = openSession()-->Line_22 $$ s = openSession()[ FD ]
Line_13 $$ s = openSession()-->Line_32 $$ s.createQuery("select c, c.parent, c.parent.count from Child c order by c.parent.count").iterate()[ FD ]
Line_22 $$ s = openSession()-->Line_32 $$ s.createQuery("select c, c.parent, c.parent.count from Child c order by c.parent.count").iterate()[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_24 $$ c = (Child) s.load(Child.class, new Long(c.getId()))[ CD ]
Line_5 $$ Parent p = new Parent()-->Line_16 $$ p = c.getParent()[ FD ]
Line_14 $$ t = s.beginTransaction()-->Line_23 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_29 $$ assertTrue("1-1 query", ((Object[]) s.createQuery("from Parent p join p.child c where p.count=66").list().get(0)).length == 2)[ CD ]
Line_22 $$ s = openSession()-->Line_30 $$ s.createQuery("select c, c.parent from Child c order by c.parent.count").list()[ FD ]
Line_22 $$ s = openSession()-->Line_23 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Child c = new Child()-->Line_10 $$ s.save(c)[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_21 $$ s.close()[ CD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_7 $$ c.setParent(p)[ CD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_35 $$ s.delete(c)[ CD ]
Line_3 $$ Session s = openSession()-->Line_38 $$ s.close()[ FD ]
Line_15 $$ c = (Child) s.load(Child.class, new Long(c.getId()))-->Line_25 $$ p = c.getParent()[ FD ]
Line_2 $$ public void testParentChild() throws Exception -->Line_27 $$ assertTrue("1-1 update", c.getCount() == 32)[ CD ]
