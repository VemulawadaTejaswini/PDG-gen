Line_5 $$ Student gavin = new Student()-->Line_41 $$ session.delete(gavin)[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_9 $$ StudentAddress addr = new StudentAddress()[ CD ]
Line_9 $$ StudentAddress addr = new StudentAddress()-->Line_10 $$ addr.setLine1("101 Main St.")[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_4 $$ Transaction t = session.beginTransaction()[ CD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_39 $$ gavin = (Student) results.get(0)[ CD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_23 $$ Student xam = new Student()[ CD ]
Line_9 $$ StudentAddress addr = new StudentAddress()-->Line_16 $$ addr.setLine1("202 Spring St.")[ FD ]
Line_3 $$ Session session = openSession()-->Line_34 $$ session.persist(xam)[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_19 $$ addr.setZip("99999")[ CD ]
Line_15 $$ addr = new StudentAddress()-->Line_18 $$ addr.setState("MA")[ FD ]
Line_9 $$ StudentAddress addr = new StudentAddress()-->Line_12 $$ addr.setState("NY")[ FD ]
Line_15 $$ addr = new StudentAddress()-->Line_16 $$ addr.setLine1("202 Spring St.")[ FD ]
Line_8 $$ Map addresses = new HashMap()-->Line_26 $$ addresses = new HashMap()[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_33 $$ xam.setAddresses(addresses)[ CD ]
Line_15 $$ addr = new StudentAddress()-->Line_19 $$ addr.setZip("99999")[ FD ]
Line_3 $$ Session session = openSession()-->Line_35 $$ session.flush()[ FD ]
Line_3 $$ Session session = openSession()-->Line_41 $$ session.delete(gavin)[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_25 $$ xam.setStudentNumber(101)[ CD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_27 $$ addr = new StudentAddress()[ CD ]
Line_9 $$ StudentAddress addr = new StudentAddress()-->Line_27 $$ addr = new StudentAddress()[ FD ]
Line_15 $$ addr = new StudentAddress()-->Line_32 $$ addresses.put("HOME", addr)[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_28 $$ addr.setLine1("123 3rd Ave")[ CD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_37 $$ List results = session.createCriteria(Student.class).createCriteria("addresses").add(Restrictions.eq("state", "MA")).list()[ CD ]
Line_8 $$ Map addresses = new HashMap()-->Line_14 $$ addresses.put("HOME", addr)[ FD ]
Line_9 $$ StudentAddress addr = new StudentAddress()-->Line_29 $$ addr.setCity("New York")[ FD ]
Line_5 $$ Student gavin = new Student()-->Line_39 $$ gavin = (Student) results.get(0)[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_44 $$ session.close()[ CD ]
Line_15 $$ addr = new StudentAddress()-->Line_28 $$ addr.setLine1("123 3rd Ave")[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_3 $$ Session session = openSession()[ CD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_12 $$ addr.setState("NY")[ CD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_15 $$ addr = new StudentAddress()[ CD ]
Line_3 $$ Session session = openSession()-->Line_22 $$ session.persist(gavin)[ FD ]
Line_9 $$ StudentAddress addr = new StudentAddress()-->Line_28 $$ addr.setLine1("123 3rd Ave")[ FD ]
Line_15 $$ addr = new StudentAddress()-->Line_31 $$ addr.setZip("10004")[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_7 $$ gavin.setStudentNumber(232)[ CD ]
Line_5 $$ Student gavin = new Student()-->Line_22 $$ session.persist(gavin)[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_31 $$ addr.setZip("10004")[ CD ]
Line_23 $$ Student xam = new Student()-->Line_33 $$ xam.setAddresses(addresses)[ FD ]
Line_9 $$ StudentAddress addr = new StudentAddress()-->Line_31 $$ addr.setZip("10004")[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_22 $$ session.persist(gavin)[ CD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_32 $$ addresses.put("HOME", addr)[ CD ]
Line_9 $$ StudentAddress addr = new StudentAddress()-->Line_11 $$ addr.setCity("Anytown")[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_29 $$ addr.setCity("New York")[ CD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_18 $$ addr.setState("MA")[ CD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_17 $$ addr.setCity("Springfield")[ CD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_35 $$ session.flush()[ CD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_38 $$ assertEquals(1, results.size())[ CD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_34 $$ session.persist(xam)[ CD ]
Line_3 $$ Session session = openSession()-->Line_44 $$ session.close()[ FD ]
Line_27 $$ addr = new StudentAddress()-->Line_29 $$ addr.setCity("New York")[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_41 $$ session.delete(gavin)[ CD ]
Line_3 $$ Session session = openSession()-->Line_42 $$ session.delete(xam)[ FD ]
Line_3 $$ Session session = openSession()-->Line_36 $$ session.clear()[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_14 $$ addresses.put("HOME", addr)[ CD ]
Line_5 $$ Student gavin = new Student()-->Line_40 $$ assertEquals(2, gavin.getAddresses().keySet().size())[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_42 $$ session.delete(xam)[ CD ]
Line_9 $$ StudentAddress addr = new StudentAddress()-->Line_18 $$ addr.setState("MA")[ FD ]
Line_23 $$ Student xam = new Student()-->Line_25 $$ xam.setStudentNumber(101)[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_20 $$ addresses.put("SCHOOL", addr)[ CD ]
Line_23 $$ Student xam = new Student()-->Line_42 $$ session.delete(xam)[ FD ]
Line_27 $$ addr = new StudentAddress()-->Line_31 $$ addr.setZip("10004")[ FD ]
Line_15 $$ addr = new StudentAddress()-->Line_29 $$ addr.setCity("New York")[ FD ]
Line_8 $$ Map addresses = new HashMap()-->Line_20 $$ addresses.put("SCHOOL", addr)[ FD ]
Line_5 $$ Student gavin = new Student()-->Line_21 $$ gavin.setAddresses(addresses)[ FD ]
Line_9 $$ StudentAddress addr = new StudentAddress()-->Line_13 $$ addr.setZip("10016")[ FD ]
Line_9 $$ StudentAddress addr = new StudentAddress()-->Line_15 $$ addr = new StudentAddress()[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_8 $$ Map addresses = new HashMap()[ CD ]
Line_37 $$ List results = session.createCriteria(Student.class).createCriteria("addresses").add(Restrictions.eq("state", "MA")).list()-->Line_39 $$ gavin = (Student) results.get(0)[ FD ]
Line_15 $$ addr = new StudentAddress()-->Line_27 $$ addr = new StudentAddress()[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_26 $$ addresses = new HashMap()[ CD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_10 $$ addr.setLine1("101 Main St.")[ CD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_43 $$ t.commit()[ CD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_11 $$ addr.setCity("Anytown")[ CD ]
Line_5 $$ Student gavin = new Student()-->Line_6 $$ gavin.setName("Gavin King")[ FD ]
Line_9 $$ StudentAddress addr = new StudentAddress()-->Line_20 $$ addresses.put("SCHOOL", addr)[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_30 $$ addr.setState("NY")[ CD ]
Line_15 $$ addr = new StudentAddress()-->Line_17 $$ addr.setCity("Springfield")[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_40 $$ assertEquals(2, gavin.getAddresses().keySet().size())[ CD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_6 $$ gavin.setName("Gavin King")[ CD ]
Line_37 $$ List results = session.createCriteria(Student.class).createCriteria("addresses").add(Restrictions.eq("state", "MA")).list()-->Line_38 $$ assertEquals(1, results.size())[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_5 $$ Student gavin = new Student()[ CD ]
Line_9 $$ StudentAddress addr = new StudentAddress()-->Line_30 $$ addr.setState("NY")[ FD ]
Line_3 $$ Session session = openSession()-->Line_4 $$ Transaction t = session.beginTransaction()[ FD ]
Line_26 $$ addresses = new HashMap()-->Line_32 $$ addresses.put("HOME", addr)[ FD ]
Line_8 $$ Map addresses = new HashMap()-->Line_33 $$ xam.setAddresses(addresses)[ FD ]
Line_23 $$ Student xam = new Student()-->Line_24 $$ xam.setName("Max Rydahl Andersen")[ FD ]
Line_9 $$ StudentAddress addr = new StudentAddress()-->Line_14 $$ addresses.put("HOME", addr)[ FD ]
Line_4 $$ Transaction t = session.beginTransaction()-->Line_43 $$ t.commit()[ FD ]
Line_39 $$ gavin = (Student) results.get(0)-->Line_41 $$ session.delete(gavin)[ FD ]
Line_5 $$ Student gavin = new Student()-->Line_7 $$ gavin.setStudentNumber(232)[ FD ]
Line_23 $$ Student xam = new Student()-->Line_34 $$ session.persist(xam)[ FD ]
Line_27 $$ addr = new StudentAddress()-->Line_30 $$ addr.setState("NY")[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_24 $$ xam.setName("Max Rydahl Andersen")[ CD ]
Line_26 $$ addresses = new HashMap()-->Line_33 $$ xam.setAddresses(addresses)[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_13 $$ addr.setZip("10016")[ CD ]
Line_27 $$ addr = new StudentAddress()-->Line_32 $$ addresses.put("HOME", addr)[ FD ]
Line_27 $$ addr = new StudentAddress()-->Line_28 $$ addr.setLine1("123 3rd Ave")[ FD ]
Line_15 $$ addr = new StudentAddress()-->Line_20 $$ addresses.put("SCHOOL", addr)[ FD ]
Line_8 $$ Map addresses = new HashMap()-->Line_21 $$ gavin.setAddresses(addresses)[ FD ]
Line_3 $$ Session session = openSession()-->Line_37 $$ List results = session.createCriteria(Student.class).createCriteria("addresses").add(Restrictions.eq("state", "MA")).list()[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_36 $$ session.clear()[ CD ]
Line_8 $$ Map addresses = new HashMap()-->Line_32 $$ addresses.put("HOME", addr)[ FD ]
Line_15 $$ addr = new StudentAddress()-->Line_30 $$ addr.setState("NY")[ FD ]
Line_9 $$ StudentAddress addr = new StudentAddress()-->Line_17 $$ addr.setCity("Springfield")[ FD ]
Line_9 $$ StudentAddress addr = new StudentAddress()-->Line_32 $$ addresses.put("HOME", addr)[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_16 $$ addr.setLine1("202 Spring St.")[ CD ]
Line_39 $$ gavin = (Student) results.get(0)-->Line_40 $$ assertEquals(2, gavin.getAddresses().keySet().size())[ FD ]
Line_9 $$ StudentAddress addr = new StudentAddress()-->Line_19 $$ addr.setZip("99999")[ FD ]
Line_2 $$ public void testCriteriaCollectionOfComponent() -->Line_21 $$ gavin.setAddresses(addresses)[ CD ]
