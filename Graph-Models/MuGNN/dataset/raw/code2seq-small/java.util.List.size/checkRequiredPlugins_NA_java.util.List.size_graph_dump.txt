Line_3 $$ List<String[]> levelsRequiredDeploymentContexts = DeployManagerUtil.getLevelsRequiredDeploymentContexts()-->Line_6 $$ for (int i = 0; i < levelsRequiredDeploymentContexts.size(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < levelsRequiredDeploymentContexts.size(); i++) -->Line_7 $$ String[] levelRequiredDeploymentContexts = levelsRequiredDeploymentContexts.get(i)[ CD ]
Line_9 $$ for (int j = 0; j < levelRequiredDeploymentContexts.length; j++) -->Line_20 $$ InputStream inputStream = classLoader.getResourceAsStream("com/liferay/portal/deploy/dependencies/plugins" + (i + 1) + "/" + levelRequiredDeploymentWARFileNames[j])[ CD ]
Line_2 $$ protected static synchronized void checkRequiredPlugins() -->Line_5 $$ boolean deployed = false[ CD ]
Line_5 $$ boolean deployed = false-->Line_36 $$ if (!deployed) [ FD ]
Line_9 $$ for (int j = 0; j < levelRequiredDeploymentContexts.length; j++) -->Line_22 $$ if (autoDeployDir == null) [ CD ]
Line_6 $$ for (int i = 0; i < levelsRequiredDeploymentContexts.size(); i++) -->Line_8 $$ String[] levelRequiredDeploymentWARFileNames = levelsRequiredDeploymentWARFileNames.get(i)[ CD ]
Line_21 $$ AutoDeployDir autoDeployDir = AutoDeployUtil.getDir(AutoDeployDir.DEFAULT_NAME)-->Line_30 $$ StreamUtil.transfer(inputStream, new FileOutputStream(autoDeployDir.getDeployDir() + "/" + levelRequiredDeploymentWARFileNames[j]))[ FD ]
Line_16 $$ if (_log.isDebugEnabled()) -->Line_17 $$ _log.debug("Automatically deploying the required plugin " + levelRequiredDeploymentWARFileName)[ CD ]
Line_6 $$ for (int i = 0; i < levelsRequiredDeploymentContexts.size(); i++) -->Line_9 $$ for (int j = 0; j < levelRequiredDeploymentContexts.length; j++) [ CD ]
Line_20 $$ InputStream inputStream = classLoader.getResourceAsStream("com/liferay/portal/deploy/dependencies/plugins" + (i + 1) + "/" + levelRequiredDeploymentWARFileNames[j])-->Line_30 $$ StreamUtil.transfer(inputStream, new FileOutputStream(autoDeployDir.getDeployDir() + "/" + levelRequiredDeploymentWARFileNames[j]))[ FD ]
Line_9 $$ for (int j = 0; j < levelRequiredDeploymentContexts.length; j++) -->Line_14 $$ deployed = true[ CD ]
Line_2 $$ protected static synchronized void checkRequiredPlugins() -->Line_36 $$ if (!deployed) [ CD ]
Line_2 $$ protected static synchronized void checkRequiredPlugins() -->Line_6 $$ for (int i = 0; i < levelsRequiredDeploymentContexts.size(); i++) [ CD ]
Line_5 $$ boolean deployed = false-->Line_14 $$ deployed = true[ FD ]
Line_6 $$ for (int i = 0; i < levelsRequiredDeploymentContexts.size(); i++) -->Line_8 $$ String[] levelRequiredDeploymentWARFileNames = levelsRequiredDeploymentWARFileNames.get(i)[ FD ]
Line_19 $$ ClassLoader classLoader = PortalClassLoaderUtil.getClassLoader()-->Line_20 $$ InputStream inputStream = classLoader.getResourceAsStream("com/liferay/portal/deploy/dependencies/plugins" + (i + 1) + "/" + levelRequiredDeploymentWARFileNames[j])[ FD ]
Line_2 $$ protected static synchronized void checkRequiredPlugins() -->Line_4 $$ List<String[]> levelsRequiredDeploymentWARFileNames = DeployManagerUtil.getLevelsRequiredDeploymentWARFileNames()[ CD ]
Line_10 $$ String levelRequiredDeploymentContext = levelRequiredDeploymentContexts[j]-->Line_11 $$ if (DeployManagerUtil.isDeployed(levelRequiredDeploymentContext)) [ FD ]
Line_2 $$ protected static synchronized void checkRequiredPlugins() -->Line_3 $$ List<String[]> levelsRequiredDeploymentContexts = DeployManagerUtil.getLevelsRequiredDeploymentContexts()[ CD ]
Line_9 $$ for (int j = 0; j < levelRequiredDeploymentContexts.length; j++) -->Line_10 $$ String levelRequiredDeploymentContext = levelRequiredDeploymentContexts[j][ CD ]
Line_9 $$ for (int j = 0; j < levelRequiredDeploymentContexts.length; j++) -->Line_11 $$ if (DeployManagerUtil.isDeployed(levelRequiredDeploymentContext)) [ CD ]
Line_6 $$ for (int i = 0; i < levelsRequiredDeploymentContexts.size(); i++) -->Line_7 $$ String[] levelRequiredDeploymentContexts = levelsRequiredDeploymentContexts.get(i)[ FD ]
Line_4 $$ List<String[]> levelsRequiredDeploymentWARFileNames = DeployManagerUtil.getLevelsRequiredDeploymentWARFileNames()-->Line_8 $$ String[] levelRequiredDeploymentWARFileNames = levelsRequiredDeploymentWARFileNames.get(i)[ FD ]
Line_9 $$ for (int j = 0; j < levelRequiredDeploymentContexts.length; j++) -->Line_15 $$ String levelRequiredDeploymentWARFileName = levelRequiredDeploymentWARFileNames[j][ CD ]
Line_3 $$ List<String[]> levelsRequiredDeploymentContexts = DeployManagerUtil.getLevelsRequiredDeploymentContexts()-->Line_7 $$ String[] levelRequiredDeploymentContexts = levelsRequiredDeploymentContexts.get(i)[ FD ]
Line_9 $$ for (int j = 0; j < levelRequiredDeploymentContexts.length; j++) -->Line_19 $$ ClassLoader classLoader = PortalClassLoaderUtil.getClassLoader()[ CD ]
Line_9 $$ for (int j = 0; j < levelRequiredDeploymentContexts.length; j++) -->Line_21 $$ AutoDeployDir autoDeployDir = AutoDeployUtil.getDir(AutoDeployDir.DEFAULT_NAME)[ CD ]
Line_21 $$ AutoDeployDir autoDeployDir = AutoDeployUtil.getDir(AutoDeployDir.DEFAULT_NAME)-->Line_22 $$ if (autoDeployDir == null) [ FD ]
Line_14 $$ deployed = true-->Line_36 $$ if (!deployed) [ FD ]
Line_9 $$ for (int j = 0; j < levelRequiredDeploymentContexts.length; j++) -->Line_16 $$ if (_log.isDebugEnabled()) [ CD ]
