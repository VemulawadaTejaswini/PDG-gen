Line_6 $$ List results = session.createQuery("from Animal an join fetch an.offspring").list()-->Line_14 $$ os = ((Animal) results.get(0)).getOffspring()[ FD ]
Line_4 $$ Session session = openSession()-->Line_5 $$ Transaction t = session.beginTransaction()[ FD ]
Line_4 $$ Session session = openSession()-->Line_6 $$ List results = session.createQuery("from Animal an join fetch an.offspring").list()[ FD ]
Line_2 $$ public void testCollectionFetching() throws Exception -->Line_6 $$ List results = session.createQuery("from Animal an join fetch an.offspring").list()[ CD ]
Line_9 $$ Collection os = ((Animal) results.get(0)).getOffspring()-->Line_10 $$ assertTrue("fetch uninitialized", os != null && Hibernate.isInitialized(os) && os.size() == 1)[ FD ]
Line_2 $$ public void testCollectionFetching() throws Exception -->Line_17 $$ session.close()[ CD ]
Line_2 $$ public void testCollectionFetching() throws Exception -->Line_18 $$ destroyTestBaseData()[ CD ]
Line_6 $$ List results = session.createQuery("from Animal an join fetch an.offspring").list()-->Line_9 $$ Collection os = ((Animal) results.get(0)).getOffspring()[ FD ]
Line_2 $$ public void testCollectionFetching() throws Exception -->Line_8 $$ assertTrue("Incorrect result return type", results.get(0) instanceof Animal)[ CD ]
Line_6 $$ List results = session.createQuery("from Animal an join fetch an.offspring").list()-->Line_7 $$ assertEquals("Incorrect result size", 1, results.size())[ FD ]
Line_5 $$ Transaction t = session.beginTransaction()-->Line_16 $$ t.commit()[ FD ]
Line_2 $$ public void testCollectionFetching() throws Exception -->Line_9 $$ Collection os = ((Animal) results.get(0)).getOffspring()[ CD ]
Line_11 $$ results = session.createQuery("select an from Animal an join fetch an.offspring").list()-->Line_14 $$ os = ((Animal) results.get(0)).getOffspring()[ FD ]
Line_2 $$ public void testCollectionFetching() throws Exception -->Line_5 $$ Transaction t = session.beginTransaction()[ CD ]
Line_9 $$ Collection os = ((Animal) results.get(0)).getOffspring()-->Line_14 $$ os = ((Animal) results.get(0)).getOffspring()[ FD ]
Line_11 $$ results = session.createQuery("select an from Animal an join fetch an.offspring").list()-->Line_12 $$ assertEquals("Incorrect result size", 1, results.size())[ FD ]
Line_2 $$ public void testCollectionFetching() throws Exception -->Line_16 $$ t.commit()[ CD ]
Line_9 $$ Collection os = ((Animal) results.get(0)).getOffspring()-->Line_15 $$ assertTrue("fetch uninitialized", os != null && Hibernate.isInitialized(os) && os.size() == 1)[ FD ]
Line_2 $$ public void testCollectionFetching() throws Exception -->Line_15 $$ assertTrue("fetch uninitialized", os != null && Hibernate.isInitialized(os) && os.size() == 1)[ CD ]
Line_4 $$ Session session = openSession()-->Line_17 $$ session.close()[ FD ]
Line_14 $$ os = ((Animal) results.get(0)).getOffspring()-->Line_15 $$ assertTrue("fetch uninitialized", os != null && Hibernate.isInitialized(os) && os.size() == 1)[ FD ]
Line_6 $$ List results = session.createQuery("from Animal an join fetch an.offspring").list()-->Line_11 $$ results = session.createQuery("select an from Animal an join fetch an.offspring").list()[ FD ]
Line_2 $$ public void testCollectionFetching() throws Exception -->Line_11 $$ results = session.createQuery("select an from Animal an join fetch an.offspring").list()[ CD ]
Line_11 $$ results = session.createQuery("select an from Animal an join fetch an.offspring").list()-->Line_13 $$ assertTrue("Incorrect result return type", results.get(0) instanceof Animal)[ FD ]
Line_2 $$ public void testCollectionFetching() throws Exception -->Line_10 $$ assertTrue("fetch uninitialized", os != null && Hibernate.isInitialized(os) && os.size() == 1)[ CD ]
Line_4 $$ Session session = openSession()-->Line_11 $$ results = session.createQuery("select an from Animal an join fetch an.offspring").list()[ FD ]
Line_6 $$ List results = session.createQuery("from Animal an join fetch an.offspring").list()-->Line_8 $$ assertTrue("Incorrect result return type", results.get(0) instanceof Animal)[ FD ]
Line_2 $$ public void testCollectionFetching() throws Exception -->Line_4 $$ Session session = openSession()[ CD ]
Line_2 $$ public void testCollectionFetching() throws Exception -->Line_13 $$ assertTrue("Incorrect result return type", results.get(0) instanceof Animal)[ CD ]
Line_2 $$ public void testCollectionFetching() throws Exception -->Line_3 $$ createTestBaseData()[ CD ]
Line_2 $$ public void testCollectionFetching() throws Exception -->Line_14 $$ os = ((Animal) results.get(0)).getOffspring()[ CD ]
Line_2 $$ public void testCollectionFetching() throws Exception -->Line_12 $$ assertEquals("Incorrect result size", 1, results.size())[ CD ]
Line_6 $$ List results = session.createQuery("from Animal an join fetch an.offspring").list()-->Line_13 $$ assertTrue("Incorrect result return type", results.get(0) instanceof Animal)[ FD ]
Line_6 $$ List results = session.createQuery("from Animal an join fetch an.offspring").list()-->Line_12 $$ assertEquals("Incorrect result size", 1, results.size())[ FD ]
Line_2 $$ public void testCollectionFetching() throws Exception -->Line_7 $$ assertEquals("Incorrect result size", 1, results.size())[ CD ]
