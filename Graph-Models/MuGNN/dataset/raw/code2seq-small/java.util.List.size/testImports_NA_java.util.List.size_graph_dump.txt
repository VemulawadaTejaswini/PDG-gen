Line_4 $$ StandardTypeLocator locator = new StandardTypeLocator()-->Line_21 $$ locator.registerImport("java.net")[ FD ]
Line_4 $$ StandardTypeLocator locator = new StandardTypeLocator()-->Line_11 $$ assertEquals(Boolean.class, locator.findType("Boolean"))[ FD ]
Line_4 $$ StandardTypeLocator locator = new StandardTypeLocator()-->Line_7 $$ List<String> prefixes = locator.getImportPrefixes()[ FD ]
Line_7 $$ List<String> prefixes = locator.getImportPrefixes()-->Line_8 $$ assertEquals(1, prefixes.size())[ FD ]
Line_4 $$ StandardTypeLocator locator = new StandardTypeLocator()-->Line_15 $$ locator.findType("URL")[ FD ]
Line_18 $$ SpelEvaluationException sEx = (SpelEvaluationException) ee-->Line_19 $$ assertEquals(SpelMessage.TYPE_NOT_FOUND, sEx.getMessageCode())[ FD ]
Line_4 $$ StandardTypeLocator locator = new StandardTypeLocator()-->Line_22 $$ assertEquals(java.net.URL.class, locator.findType("URL"))[ FD ]
Line_7 $$ List<String> prefixes = locator.getImportPrefixes()-->Line_9 $$ assertTrue(prefixes.contains("java.lang"))[ FD ]
Line_7 $$ List<String> prefixes = locator.getImportPrefixes()-->Line_10 $$ assertFalse(prefixes.contains("java.util"))[ FD ]
Line_4 $$ StandardTypeLocator locator = new StandardTypeLocator()-->Line_5 $$ assertEquals(Integer.class, locator.findType("java.lang.Integer"))[ FD ]
Line_4 $$ StandardTypeLocator locator = new StandardTypeLocator()-->Line_6 $$ assertEquals(String.class, locator.findType("java.lang.String"))[ FD ]
