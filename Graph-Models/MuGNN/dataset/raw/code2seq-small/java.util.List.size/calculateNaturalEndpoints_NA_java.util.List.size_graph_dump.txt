Line_2 $$ public List<InetAddress> calculateNaturalEndpoints(Token token, TokenMetadata metadata) -->Line_4 $$ ArrayList<Token> tokens = metadata.sortedTokens()[ FD ]
Line_10 $$ while (endpoints.size() < replicas && iter.hasNext()) -->Line_11 $$ InetAddress ep = metadata.getEndpoint(iter.next())[ CD ]
Line_2 $$ public List<InetAddress> calculateNaturalEndpoints(Token token, TokenMetadata metadata) -->Line_6 $$ if (tokens.isEmpty())[ CD ]
Line_11 $$ InetAddress ep = metadata.getEndpoint(iter.next())-->Line_12 $$ if (!endpoints.contains(ep))[ FD ]
Line_6 $$ if (tokens.isEmpty())-->Line_7 $$ return endpoints[ CD ]
Line_5 $$ List<InetAddress> endpoints = new ArrayList<InetAddress>(replicas)-->Line_13 $$ endpoints.add(ep)[ FD ]
Line_2 $$ public List<InetAddress> calculateNaturalEndpoints(Token token, TokenMetadata metadata) -->Line_3 $$ int replicas = getReplicationFactor()[ CD ]
Line_2 $$ public List<InetAddress> calculateNaturalEndpoints(Token token, TokenMetadata metadata) -->Line_4 $$ ArrayList<Token> tokens = metadata.sortedTokens()[ CD ]
Line_11 $$ InetAddress ep = metadata.getEndpoint(iter.next())-->Line_13 $$ endpoints.add(ep)[ FD ]
Line_5 $$ List<InetAddress> endpoints = new ArrayList<InetAddress>(replicas)-->Line_12 $$ if (!endpoints.contains(ep))[ FD ]
Line_10 $$ while (endpoints.size() < replicas && iter.hasNext()) -->Line_12 $$ if (!endpoints.contains(ep))[ CD ]
Line_2 $$ public List<InetAddress> calculateNaturalEndpoints(Token token, TokenMetadata metadata) -->Line_15 $$ return endpoints[ CD ]
Line_4 $$ ArrayList<Token> tokens = metadata.sortedTokens()-->Line_6 $$ if (tokens.isEmpty())[ FD ]
Line_2 $$ public List<InetAddress> calculateNaturalEndpoints(Token token, TokenMetadata metadata) -->Line_5 $$ List<InetAddress> endpoints = new ArrayList<InetAddress>(replicas)[ CD ]
Line_5 $$ List<InetAddress> endpoints = new ArrayList<InetAddress>(replicas)-->Line_6 $$ if (tokens.isEmpty())[ FD ]
Line_2 $$ public List<InetAddress> calculateNaturalEndpoints(Token token, TokenMetadata metadata) -->Line_11 $$ InetAddress ep = metadata.getEndpoint(iter.next())[ FD ]
Line_5 $$ List<InetAddress> endpoints = new ArrayList<InetAddress>(replicas)-->Line_10 $$ while (endpoints.size() < replicas && iter.hasNext()) [ FD ]
Line_2 $$ public List<InetAddress> calculateNaturalEndpoints(Token token, TokenMetadata metadata) -->Line_10 $$ while (endpoints.size() < replicas && iter.hasNext()) [ CD ]
Line_12 $$ if (!endpoints.contains(ep))-->Line_13 $$ endpoints.add(ep)[ CD ]
