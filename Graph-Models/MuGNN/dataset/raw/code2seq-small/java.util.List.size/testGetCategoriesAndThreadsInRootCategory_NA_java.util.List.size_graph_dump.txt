Line_9 $$ List<Object> categoriesAndThreads = MBCategoryLocalServiceUtil.getCategoriesAndThreads(_group.getGroupId(), MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID, WorkflowConstants.STATUS_APPROVED)-->Line_14 $$ Assert.assertEquals(message2.getThread(), categoriesAndThreads.get(3))[ FD ]
Line_9 $$ List<Object> categoriesAndThreads = MBCategoryLocalServiceUtil.getCategoriesAndThreads(_group.getGroupId(), MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID, WorkflowConstants.STATUS_APPROVED)-->Line_11 $$ Assert.assertEquals(category1, categoriesAndThreads.get(0))[ FD ]
Line_2 $$ public void testGetCategoriesAndThreadsInRootCategory() throws Exception -->Line_11 $$ Assert.assertEquals(category1, categoriesAndThreads.get(0))[ CD ]
Line_2 $$ public void testGetCategoriesAndThreadsInRootCategory() throws Exception -->Line_3 $$ MBMessage message1 = addMessage(MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID)[ CD ]
Line_2 $$ public void testGetCategoriesAndThreadsInRootCategory() throws Exception -->Line_14 $$ Assert.assertEquals(message2.getThread(), categoriesAndThreads.get(3))[ CD ]
Line_2 $$ public void testGetCategoriesAndThreadsInRootCategory() throws Exception -->Line_4 $$ MBCategory category1 = addCategory()[ CD ]
Line_3 $$ MBMessage message1 = addMessage(MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID)-->Line_13 $$ Assert.assertEquals(message1.getThread(), categoriesAndThreads.get(2))[ FD ]
Line_6 $$ MBCategory category2 = addCategory()-->Line_7 $$ addMessage(category2.getCategoryId())[ FD ]
Line_2 $$ public void testGetCategoriesAndThreadsInRootCategory() throws Exception -->Line_10 $$ Assert.assertEquals(4, categoriesAndThreads.size())[ CD ]
Line_9 $$ List<Object> categoriesAndThreads = MBCategoryLocalServiceUtil.getCategoriesAndThreads(_group.getGroupId(), MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID, WorkflowConstants.STATUS_APPROVED)-->Line_13 $$ Assert.assertEquals(message1.getThread(), categoriesAndThreads.get(2))[ FD ]
Line_2 $$ public void testGetCategoriesAndThreadsInRootCategory() throws Exception -->Line_12 $$ Assert.assertEquals(category2, categoriesAndThreads.get(1))[ CD ]
Line_6 $$ MBCategory category2 = addCategory()-->Line_12 $$ Assert.assertEquals(category2, categoriesAndThreads.get(1))[ FD ]
Line_2 $$ public void testGetCategoriesAndThreadsInRootCategory() throws Exception -->Line_9 $$ List<Object> categoriesAndThreads = MBCategoryLocalServiceUtil.getCategoriesAndThreads(_group.getGroupId(), MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID, WorkflowConstants.STATUS_APPROVED)[ CD ]
Line_2 $$ public void testGetCategoriesAndThreadsInRootCategory() throws Exception -->Line_5 $$ addMessage(category1.getCategoryId())[ CD ]
Line_2 $$ public void testGetCategoriesAndThreadsInRootCategory() throws Exception -->Line_13 $$ Assert.assertEquals(message1.getThread(), categoriesAndThreads.get(2))[ CD ]
Line_2 $$ public void testGetCategoriesAndThreadsInRootCategory() throws Exception -->Line_8 $$ MBMessage message2 = addMessage(MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID)[ CD ]
Line_4 $$ MBCategory category1 = addCategory()-->Line_11 $$ Assert.assertEquals(category1, categoriesAndThreads.get(0))[ FD ]
Line_9 $$ List<Object> categoriesAndThreads = MBCategoryLocalServiceUtil.getCategoriesAndThreads(_group.getGroupId(), MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID, WorkflowConstants.STATUS_APPROVED)-->Line_12 $$ Assert.assertEquals(category2, categoriesAndThreads.get(1))[ FD ]
Line_9 $$ List<Object> categoriesAndThreads = MBCategoryLocalServiceUtil.getCategoriesAndThreads(_group.getGroupId(), MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID, WorkflowConstants.STATUS_APPROVED)-->Line_10 $$ Assert.assertEquals(4, categoriesAndThreads.size())[ FD ]
Line_2 $$ public void testGetCategoriesAndThreadsInRootCategory() throws Exception -->Line_7 $$ addMessage(category2.getCategoryId())[ CD ]
Line_4 $$ MBCategory category1 = addCategory()-->Line_5 $$ addMessage(category1.getCategoryId())[ FD ]
Line_2 $$ public void testGetCategoriesAndThreadsInRootCategory() throws Exception -->Line_6 $$ MBCategory category2 = addCategory()[ CD ]
Line_8 $$ MBMessage message2 = addMessage(MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID)-->Line_14 $$ Assert.assertEquals(message2.getThread(), categoriesAndThreads.get(3))[ FD ]
