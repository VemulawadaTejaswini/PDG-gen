Line_8 $$ Class<?> javaType = type.getJavaType()-->Line_17 $$ if (javaType == Slice.class) [ FD ]
Line_6 $$ BlockBuilder blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), values.size())-->Line_24 $$ return blockBuilder.build()[ FD ]
Line_8 $$ Class<?> javaType = type.getJavaType()-->Line_15 $$ if (javaType == double.class) [ FD ]
Line_6 $$ BlockBuilder blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), values.size())-->Line_10 $$ blockBuilder.appendNull()[ FD ]
Line_18 $$ Slice slice = (Slice) value-->Line_19 $$ type.writeSlice(blockBuilder, slice, 0, slice.length())[ FD ]
Line_9 $$ if (value == null) -->Line_10 $$ blockBuilder.appendNull()[ CD ]
Line_11 $$ if (javaType == boolean.class) -->Line_12 $$ type.writeBoolean(blockBuilder, (Boolean) value)[ CD ]
Line_6 $$ BlockBuilder blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), values.size())-->Line_14 $$ type.writeLong(blockBuilder, (Long) value)[ FD ]
Line_6 $$ BlockBuilder blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), values.size())-->Line_19 $$ type.writeSlice(blockBuilder, slice, 0, slice.length())[ FD ]
Line_17 $$ if (javaType == Slice.class) -->Line_18 $$ Slice slice = (Slice) value[ CD ]
Line_15 $$ if (javaType == double.class) -->Line_16 $$ type.writeDouble(blockBuilder, (Double) value)[ CD ]
Line_8 $$ Class<?> javaType = type.getJavaType()-->Line_11 $$ if (javaType == boolean.class) [ FD ]
Line_13 $$ if (javaType == long.class) -->Line_15 $$ if (javaType == double.class) [ CD ]
Line_17 $$ if (javaType == Slice.class) -->Line_19 $$ type.writeSlice(blockBuilder, slice, 0, slice.length())[ CD ]
Line_11 $$ if (javaType == boolean.class) -->Line_13 $$ if (javaType == long.class) [ CD ]
Line_8 $$ Class<?> javaType = type.getJavaType()-->Line_13 $$ if (javaType == long.class) [ FD ]
Line_6 $$ BlockBuilder blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), values.size())-->Line_12 $$ type.writeBoolean(blockBuilder, (Boolean) value)[ FD ]
Line_6 $$ BlockBuilder blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), values.size())-->Line_16 $$ type.writeDouble(blockBuilder, (Double) value)[ FD ]
Line_13 $$ if (javaType == long.class) -->Line_14 $$ type.writeLong(blockBuilder, (Long) value)[ CD ]
Line_9 $$ if (value == null) -->Line_11 $$ if (javaType == boolean.class) [ CD ]
Line_7 $$ for (Object value : values) -->Line_9 $$ if (value == null) [ FD ]
Line_15 $$ if (javaType == double.class) -->Line_17 $$ if (javaType == Slice.class) [ CD ]
