Line_11 $$ Message message1 = new Message()-->Line_15 $$ poster.messages.add(message1)[ FD ]
Line_38 $$ final LoadPlan plan = Helper.INSTANCE.buildLoadPlan(sessionFactory(), entityPersister)-->Line_39 $$ final LoadQueryDetails queryDetails = Helper.INSTANCE.buildLoadQueryDetails(plan, sessionFactory())[ FD ]
Line_49 $$ PreparedStatement ps = connection.prepareStatement(sql)-->Line_60 $$ ps.close()[ FD ]
Line_43 $$ final Session workSession = openSession()-->Line_78 $$ workSession.getTransaction().commit()[ FD ]
Line_45 $$ workSession.doWork(new Work() -->Line_49 $$ PreparedStatement ps = connection.prepareStatement(sql)[ FD ]
Line_49 $$ PreparedStatement ps = connection.prepareStatement(sql)-->Line_50 $$ ps.setInt(1, 0)[ FD ]
Line_16 $$ Message message2 = new Message()-->Line_20 $$ poster.messages.add(message2)[ FD ]
Line_42 $$ final List results = new ArrayList()-->Line_52 $$ results.addAll(resultSetProcessor.extractResults(resultSet, (SessionImplementor) workSession, new QueryParameters(), new NamedParameterContext() [ FD ]
Line_43 $$ final Session workSession = openSession()-->Line_44 $$ workSession.beginTransaction()[ FD ]
Line_43 $$ final Session workSession = openSession()-->Line_79 $$ workSession.close()[ FD ]
Line_41 $$ final ResultSetProcessor resultSetProcessor = queryDetails.getResultSetProcessor()-->Line_52 $$ results.addAll(resultSetProcessor.extractResults(resultSet, (SessionImplementor) workSession, new QueryParameters(), new NamedParameterContext() [ FD ]
Line_8 $$ Poster poster = new Poster()-->Line_21 $$ session.save(poster)[ FD ]
Line_45 $$ workSession.doWork(new Work() -->Line_50 $$ ps.setInt(1, 0)[ CD ]
Line_8 $$ Poster poster = new Poster()-->Line_14 $$ message1.poster = poster[ FD ]
Line_8 $$ Poster poster = new Poster()-->Line_84 $$ session.delete(poster)[ FD ]
Line_45 $$ workSession.doWork(new Work() -->Line_52 $$ results.addAll(resultSetProcessor.extractResults(resultSet, (SessionImplementor) workSession, new QueryParameters(), new NamedParameterContext() [ CD ]
Line_45 $$ workSession.doWork(new Work() -->Line_49 $$ PreparedStatement ps = connection.prepareStatement(sql)[ CD ]
Line_45 $$ workSession.doWork(new Work() -->Line_51 $$ ResultSet resultSet = ps.executeQuery()[ CD ]
Line_40 $$ final String sql = queryDetails.getSqlStatement()-->Line_49 $$ PreparedStatement ps = connection.prepareStatement(sql)[ FD ]
Line_45 $$ workSession.doWork(new Work() -->Line_60 $$ ps.close()[ CD ]
Line_39 $$ final LoadQueryDetails queryDetails = Helper.INSTANCE.buildLoadQueryDetails(plan, sessionFactory())-->Line_40 $$ final String sql = queryDetails.getSqlStatement()[ FD ]
Line_4 $$ final EntityPersister entityPersister = sessionFactory().getEntityPersister(Poster.class.getName())-->Line_38 $$ final LoadPlan plan = Helper.INSTANCE.buildLoadPlan(sessionFactory(), entityPersister)[ FD ]
Line_8 $$ Poster poster = new Poster()-->Line_19 $$ message2.poster = poster[ FD ]
Line_42 $$ final List results = new ArrayList()-->Line_66 $$ assertSame(result1, results.get(1))[ FD ]
Line_51 $$ ResultSet resultSet = ps.executeQuery()-->Line_59 $$ resultSet.close()[ FD ]
Line_51 $$ ResultSet resultSet = ps.executeQuery()-->Line_52 $$ results.addAll(resultSetProcessor.extractResults(resultSet, (SessionImplementor) workSession, new QueryParameters(), new NamedParameterContext() [ FD ]
Line_43 $$ final Session workSession = openSession()-->Line_45 $$ workSession.doWork(new Work() [ FD ]
Line_45 $$ workSession.doWork(new Work() -->Line_59 $$ resultSet.close()[ CD ]
Line_42 $$ final List results = new ArrayList()-->Line_63 $$ assertEquals(2, results.size())[ FD ]
Line_52 $$ results.addAll(resultSetProcessor.extractResults(resultSet, (SessionImplementor) workSession, new QueryParameters(), new NamedParameterContext() -->Line_56 $$ return new int[0][ CD ]
Line_49 $$ PreparedStatement ps = connection.prepareStatement(sql)-->Line_51 $$ ResultSet resultSet = ps.executeQuery()[ FD ]
Line_39 $$ final LoadQueryDetails queryDetails = Helper.INSTANCE.buildLoadQueryDetails(plan, sessionFactory())-->Line_41 $$ final ResultSetProcessor resultSetProcessor = queryDetails.getResultSetProcessor()[ FD ]
Line_42 $$ final List results = new ArrayList()-->Line_64 $$ Object result1 = results.get(0)[ FD ]
