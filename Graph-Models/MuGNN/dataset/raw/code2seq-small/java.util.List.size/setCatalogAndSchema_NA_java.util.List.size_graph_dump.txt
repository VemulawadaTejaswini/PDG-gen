Line_15 $$ parts = parts.subList(0, parts.size() - 1)-->Line_23 $$ catalog.set(parts.get(0))[ FD ]
Line_15 $$ parts = parts.subList(0, parts.size() - 1)-->Line_24 $$ if (parts.size() > 1) [ FD ]
Line_3 $$ String path = uri.getPath()-->Line_4 $$ if (path.equals("/")) [ FD ]
Line_15 $$ parts = parts.subList(0, parts.size() - 1)-->Line_20 $$ if (parts.get(0).isEmpty()) [ FD ]
Line_3 $$ String path = uri.getPath()-->Line_11 $$ path = path.substring(1)[ FD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_12 $$ List<String> parts = Splitter.on("/").splitToList(path)[ CD ]
Line_15 $$ parts = parts.subList(0, parts.size() - 1)-->Line_17 $$ if (parts.size() > 2) [ FD ]
Line_24 $$ if (parts.size() > 1) -->Line_25 $$ if (parts.get(1).isEmpty()) [ CD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_11 $$ path = path.substring(1)[ CD ]
Line_3 $$ String path = uri.getPath()-->Line_12 $$ List<String> parts = Splitter.on("/").splitToList(path)[ FD ]
Line_4 $$ if (path.equals("/")) -->Line_5 $$ return[ CD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_20 $$ if (parts.get(0).isEmpty()) [ CD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_4 $$ if (path.equals("/")) [ CD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_3 $$ String path = uri.getPath()[ CD ]
Line_12 $$ List<String> parts = Splitter.on("/").splitToList(path)-->Line_24 $$ if (parts.size() > 1) [ FD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_24 $$ if (parts.size() > 1) [ CD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_17 $$ if (parts.size() > 2) [ CD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_23 $$ catalog.set(parts.get(0))[ CD ]
Line_12 $$ List<String> parts = Splitter.on("/").splitToList(path)-->Line_23 $$ catalog.set(parts.get(0))[ FD ]
Line_12 $$ List<String> parts = Splitter.on("/").splitToList(path)-->Line_25 $$ if (parts.get(1).isEmpty()) [ FD ]
Line_12 $$ List<String> parts = Splitter.on("/").splitToList(path)-->Line_17 $$ if (parts.size() > 2) [ FD ]
Line_24 $$ if (parts.size() > 1) -->Line_28 $$ schema.set(parts.get(1))[ CD ]
Line_11 $$ path = path.substring(1)-->Line_12 $$ List<String> parts = Splitter.on("/").splitToList(path)[ FD ]
Line_12 $$ List<String> parts = Splitter.on("/").splitToList(path)-->Line_28 $$ schema.set(parts.get(1))[ FD ]
Line_12 $$ List<String> parts = Splitter.on("/").splitToList(path)-->Line_15 $$ parts = parts.subList(0, parts.size() - 1)[ FD ]
Line_15 $$ parts = parts.subList(0, parts.size() - 1)-->Line_28 $$ schema.set(parts.get(1))[ FD ]
Line_15 $$ parts = parts.subList(0, parts.size() - 1)-->Line_25 $$ if (parts.get(1).isEmpty()) [ FD ]
Line_12 $$ List<String> parts = Splitter.on("/").splitToList(path)-->Line_20 $$ if (parts.get(0).isEmpty()) [ FD ]
