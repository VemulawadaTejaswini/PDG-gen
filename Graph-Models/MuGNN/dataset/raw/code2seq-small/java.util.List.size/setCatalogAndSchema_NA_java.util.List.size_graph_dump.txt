Line_13 $$ parts = parts.subList(0, parts.size() - 1)-->Line_21 $$ catalog.set(parts.get(0))[ FD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_21 $$ catalog.set(parts.get(0))[ CD ]
Line_13 $$ parts = parts.subList(0, parts.size() - 1)-->Line_18 $$ if (parts.get(0).isEmpty()) [ FD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_18 $$ if (parts.get(0).isEmpty()) [ CD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_15 $$ if (parts.size() > 2) [ CD ]
Line_3 $$ String path = uri.getPath()-->Line_11 $$ List<String> parts = Splitter.on("/").splitToList(path)[ FD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_3 $$ String path = uri.getPath()[ CD ]
Line_12 $$ if (parts.get(parts.size() - 1).isEmpty()) -->Line_13 $$ parts = parts.subList(0, parts.size() - 1)[ CD ]
Line_11 $$ List<String> parts = Splitter.on("/").splitToList(path)-->Line_21 $$ catalog.set(parts.get(0))[ FD ]
Line_11 $$ List<String> parts = Splitter.on("/").splitToList(path)-->Line_23 $$ if (parts.get(1).isEmpty()) [ FD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_10 $$ path = path.substring(1)[ CD ]
Line_10 $$ path = path.substring(1)-->Line_11 $$ List<String> parts = Splitter.on("/").splitToList(path)[ FD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_22 $$ if (parts.size() > 1) [ CD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_4 $$ if (path.equals("/")) [ CD ]
Line_11 $$ List<String> parts = Splitter.on("/").splitToList(path)-->Line_12 $$ if (parts.get(parts.size() - 1).isEmpty()) [ FD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_12 $$ if (parts.get(parts.size() - 1).isEmpty()) [ CD ]
Line_13 $$ parts = parts.subList(0, parts.size() - 1)-->Line_22 $$ if (parts.size() > 1) [ FD ]
Line_22 $$ if (parts.size() > 1) -->Line_26 $$ schema.set(parts.get(1))[ CD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_7 $$ if (!path.startsWith("/")) [ CD ]
Line_4 $$ if (path.equals("/")) -->Line_5 $$ return[ CD ]
Line_13 $$ parts = parts.subList(0, parts.size() - 1)-->Line_15 $$ if (parts.size() > 2) [ FD ]
Line_13 $$ parts = parts.subList(0, parts.size() - 1)-->Line_23 $$ if (parts.get(1).isEmpty()) [ FD ]
Line_11 $$ List<String> parts = Splitter.on("/").splitToList(path)-->Line_22 $$ if (parts.size() > 1) [ FD ]
Line_2 $$ private void setCatalogAndSchema() throws SQLException -->Line_11 $$ List<String> parts = Splitter.on("/").splitToList(path)[ CD ]
Line_3 $$ String path = uri.getPath()-->Line_7 $$ if (!path.startsWith("/")) [ FD ]
Line_3 $$ String path = uri.getPath()-->Line_10 $$ path = path.substring(1)[ FD ]
Line_13 $$ parts = parts.subList(0, parts.size() - 1)-->Line_26 $$ schema.set(parts.get(1))[ FD ]
Line_3 $$ String path = uri.getPath()-->Line_4 $$ if (path.equals("/")) [ FD ]
Line_22 $$ if (parts.size() > 1) -->Line_23 $$ if (parts.get(1).isEmpty()) [ CD ]
Line_11 $$ List<String> parts = Splitter.on("/").splitToList(path)-->Line_13 $$ parts = parts.subList(0, parts.size() - 1)[ FD ]
Line_11 $$ List<String> parts = Splitter.on("/").splitToList(path)-->Line_15 $$ if (parts.size() > 2) [ FD ]
Line_11 $$ List<String> parts = Splitter.on("/").splitToList(path)-->Line_26 $$ schema.set(parts.get(1))[ FD ]
Line_11 $$ List<String> parts = Splitter.on("/").splitToList(path)-->Line_18 $$ if (parts.get(0).isEmpty()) [ FD ]
