Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_25 $$ ResourcePermissionServiceUtil.setIndividualResourcePermissions(themeDisplay.getScopeGroupId(), themeDisplay.getCompanyId(), childClassName, String.valueOf(childPrimKey), roleId, actionIds.toArray(new String[actionIds.size()]))[ FD ]
Line_8 $$ if (parentActionIds.contains(actionId)) -->Line_9 $$ parentAndChildCommonActionIds.add(actionId)[ CD ]
Line_2 $$ protected void propagateRolePermissions(ActionRequest actionRequest, long roleId, String parentClassName, long parentPrimKey, String childClassName, long childPrimKey) throws PortalException -->Line_12 $$ Set<String> parentAvailableActionIds = getAvailableActionIds(themeDisplay.getCompanyId(), parentClassName, parentPrimKey, roleId, parentActionIds)[ FD ]
Line_7 $$ for (String actionId : childActionIds) -->Line_22 $$ actionIds.add(actionId)[ FD ]
Line_2 $$ protected void propagateRolePermissions(ActionRequest actionRequest, long roleId, String parentClassName, long parentPrimKey, String childClassName, long childPrimKey) throws PortalException -->Line_14 $$ List<String> actionIds = new ArrayList()[ CD ]
Line_12 $$ Set<String> parentAvailableActionIds = getAvailableActionIds(themeDisplay.getCompanyId(), parentClassName, parentPrimKey, roleId, parentActionIds)-->Line_16 $$ if (parentAvailableActionIds.contains(actionId)) [ FD ]
Line_2 $$ protected void propagateRolePermissions(ActionRequest actionRequest, long roleId, String parentClassName, long parentPrimKey, String childClassName, long childPrimKey) throws PortalException -->Line_5 $$ Set<String> childActionIds = getActionIds(childClassName)[ CD ]
Line_2 $$ protected void propagateRolePermissions(ActionRequest actionRequest, long roleId, String parentClassName, long parentPrimKey, String childClassName, long childPrimKey) throws PortalException -->Line_6 $$ Set<String> parentAndChildCommonActionIds = new HashSet()[ CD ]
Line_5 $$ Set<String> childActionIds = getActionIds(childClassName)-->Line_13 $$ Set<String> childAvailableActionIds = getAvailableActionIds(themeDisplay.getCompanyId(), childClassName, childPrimKey, roleId, childActionIds)[ FD ]
Line_2 $$ protected void propagateRolePermissions(ActionRequest actionRequest, long roleId, String parentClassName, long parentPrimKey, String childClassName, long childPrimKey) throws PortalException -->Line_5 $$ Set<String> childActionIds = getActionIds(childClassName)[ FD ]
Line_7 $$ for (String actionId : childActionIds) -->Line_9 $$ parentAndChildCommonActionIds.add(actionId)[ FD ]
Line_2 $$ protected void propagateRolePermissions(ActionRequest actionRequest, long roleId, String parentClassName, long parentPrimKey, String childClassName, long childPrimKey) throws PortalException -->Line_4 $$ Set<String> parentActionIds = getActionIds(parentClassName)[ FD ]
Line_14 $$ List<String> actionIds = new ArrayList()-->Line_22 $$ actionIds.add(actionId)[ FD ]
Line_2 $$ protected void propagateRolePermissions(ActionRequest actionRequest, long roleId, String parentClassName, long parentPrimKey, String childClassName, long childPrimKey) throws PortalException -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_13 $$ Set<String> childAvailableActionIds = getAvailableActionIds(themeDisplay.getCompanyId(), childClassName, childPrimKey, roleId, childActionIds)[ FD ]
Line_4 $$ Set<String> parentActionIds = getActionIds(parentClassName)-->Line_12 $$ Set<String> parentAvailableActionIds = getAvailableActionIds(themeDisplay.getCompanyId(), parentClassName, parentPrimKey, roleId, parentActionIds)[ FD ]
Line_2 $$ protected void propagateRolePermissions(ActionRequest actionRequest, long roleId, String parentClassName, long parentPrimKey, String childClassName, long childPrimKey) throws PortalException -->Line_13 $$ Set<String> childAvailableActionIds = getAvailableActionIds(themeDisplay.getCompanyId(), childClassName, childPrimKey, roleId, childActionIds)[ FD ]
Line_2 $$ protected void propagateRolePermissions(ActionRequest actionRequest, long roleId, String parentClassName, long parentPrimKey, String childClassName, long childPrimKey) throws PortalException -->Line_13 $$ Set<String> childAvailableActionIds = getAvailableActionIds(themeDisplay.getCompanyId(), childClassName, childPrimKey, roleId, childActionIds)[ CD ]
Line_2 $$ protected void propagateRolePermissions(ActionRequest actionRequest, long roleId, String parentClassName, long parentPrimKey, String childClassName, long childPrimKey) throws PortalException -->Line_4 $$ Set<String> parentActionIds = getActionIds(parentClassName)[ CD ]
Line_7 $$ for (String actionId : childActionIds) -->Line_21 $$ if (!parentAndChildCommonActionIds.contains(actionId)) [ FD ]
Line_2 $$ protected void propagateRolePermissions(ActionRequest actionRequest, long roleId, String parentClassName, long parentPrimKey, String childClassName, long childPrimKey) throws PortalException -->Line_12 $$ Set<String> parentAvailableActionIds = getAvailableActionIds(themeDisplay.getCompanyId(), parentClassName, parentPrimKey, roleId, parentActionIds)[ CD ]
Line_7 $$ for (String actionId : childActionIds) -->Line_16 $$ if (parentAvailableActionIds.contains(actionId)) [ FD ]
Line_2 $$ protected void propagateRolePermissions(ActionRequest actionRequest, long roleId, String parentClassName, long parentPrimKey, String childClassName, long childPrimKey) throws PortalException -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_14 $$ List<String> actionIds = new ArrayList()-->Line_25 $$ ResourcePermissionServiceUtil.setIndividualResourcePermissions(themeDisplay.getScopeGroupId(), themeDisplay.getCompanyId(), childClassName, String.valueOf(childPrimKey), roleId, actionIds.toArray(new String[actionIds.size()]))[ FD ]
Line_6 $$ Set<String> parentAndChildCommonActionIds = new HashSet()-->Line_9 $$ parentAndChildCommonActionIds.add(actionId)[ FD ]
Line_16 $$ if (parentAvailableActionIds.contains(actionId)) -->Line_17 $$ actionIds.add(actionId)[ CD ]
Line_6 $$ Set<String> parentAndChildCommonActionIds = new HashSet()-->Line_21 $$ if (!parentAndChildCommonActionIds.contains(actionId)) [ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_12 $$ Set<String> parentAvailableActionIds = getAvailableActionIds(themeDisplay.getCompanyId(), parentClassName, parentPrimKey, roleId, parentActionIds)[ FD ]
Line_14 $$ List<String> actionIds = new ArrayList()-->Line_17 $$ actionIds.add(actionId)[ FD ]
Line_2 $$ protected void propagateRolePermissions(ActionRequest actionRequest, long roleId, String parentClassName, long parentPrimKey, String childClassName, long childPrimKey) throws PortalException -->Line_25 $$ ResourcePermissionServiceUtil.setIndividualResourcePermissions(themeDisplay.getScopeGroupId(), themeDisplay.getCompanyId(), childClassName, String.valueOf(childPrimKey), roleId, actionIds.toArray(new String[actionIds.size()]))[ CD ]
Line_4 $$ Set<String> parentActionIds = getActionIds(parentClassName)-->Line_8 $$ if (parentActionIds.contains(actionId)) [ FD ]
Line_21 $$ if (!parentAndChildCommonActionIds.contains(actionId)) -->Line_22 $$ actionIds.add(actionId)[ CD ]
Line_7 $$ for (String actionId : childActionIds) -->Line_17 $$ actionIds.add(actionId)[ FD ]
Line_2 $$ protected void propagateRolePermissions(ActionRequest actionRequest, long roleId, String parentClassName, long parentPrimKey, String childClassName, long childPrimKey) throws PortalException -->Line_25 $$ ResourcePermissionServiceUtil.setIndividualResourcePermissions(themeDisplay.getScopeGroupId(), themeDisplay.getCompanyId(), childClassName, String.valueOf(childPrimKey), roleId, actionIds.toArray(new String[actionIds.size()]))[ FD ]
Line_7 $$ for (String actionId : childActionIds) -->Line_8 $$ if (parentActionIds.contains(actionId)) [ FD ]
