Line_2 $$ private ClassLoader toClassLoader(List<File> runtimeClasspath) throws MojoExecutionException -->Line_17 $$ MavenProject project = ((MavenProject) getPluginContext().get("project"))[ CD ]
Line_20 $$ artifacts = (executionProject != null ? executionProject.getArtifacts() : project.getArtifacts())-->Line_22 $$ if (artifacts != null) [ FD ]
Line_9 $$ String msg = "Unable to resolve classpath entry to URL: " + file.getAbsolutePath()-->Line_13 $$ getLog().warn(msg)[ FD ]
Line_2 $$ private ClassLoader toClassLoader(List<File> runtimeClasspath) throws MojoExecutionException -->Line_16 $$ Set<Artifact> artifacts = null[ CD ]
Line_18 $$ if (project != null) -->Line_20 $$ artifacts = (executionProject != null ? executionProject.getArtifacts() : project.getArtifacts())[ CD ]
Line_2 $$ private ClassLoader toClassLoader(List<File> runtimeClasspath) throws MojoExecutionException -->Line_38 $$ return new URLClassLoader(urls.toArray(new URL[urls.size()]), Enhancer.class.getClassLoader())[ CD ]
Line_17 $$ MavenProject project = ((MavenProject) getPluginContext().get("project"))-->Line_20 $$ artifacts = (executionProject != null ? executionProject.getArtifacts() : project.getArtifacts())[ FD ]
Line_2 $$ private ClassLoader toClassLoader(List<File> runtimeClasspath) throws MojoExecutionException -->Line_3 $$ List<URL> urls = new ArrayList<URL>()[ CD ]
Line_23 $$ for (Artifact a : artifacts) -->Line_26 $$ urls.add(a.getFile().toURI().toURL())[ FD ]
Line_3 $$ List<URL> urls = new ArrayList<URL>()-->Line_6 $$ urls.add(file.toURI().toURL())[ FD ]
Line_4 $$ for (File file : runtimeClasspath) -->Line_6 $$ urls.add(file.toURI().toURL())[ FD ]
Line_17 $$ MavenProject project = ((MavenProject) getPluginContext().get("project"))-->Line_19 $$ MavenProject executionProject = project.getExecutionProject()[ FD ]
Line_4 $$ for (File file : runtimeClasspath) -->Line_9 $$ String msg = "Unable to resolve classpath entry to URL: " + file.getAbsolutePath()[ FD ]
Line_2 $$ private ClassLoader toClassLoader(List<File> runtimeClasspath) throws MojoExecutionException -->Line_18 $$ if (project != null) [ CD ]
Line_23 $$ for (Artifact a : artifacts) -->Line_24 $$ if (!Artifact.SCOPE_TEST.equals(a.getScope())) [ FD ]
Line_17 $$ MavenProject project = ((MavenProject) getPluginContext().get("project"))-->Line_18 $$ if (project != null) [ FD ]
Line_19 $$ MavenProject executionProject = project.getExecutionProject()-->Line_20 $$ artifacts = (executionProject != null ? executionProject.getArtifacts() : project.getArtifacts())[ FD ]
Line_16 $$ Set<Artifact> artifacts = null-->Line_20 $$ artifacts = (executionProject != null ? executionProject.getArtifacts() : project.getArtifacts())[ FD ]
Line_4 $$ for (File file : runtimeClasspath) -->Line_7 $$ getLog().debug("Adding classpath entry for classes root " + file.getAbsolutePath())[ FD ]
Line_2 $$ private ClassLoader toClassLoader(List<File> runtimeClasspath) throws MojoExecutionException -->Line_22 $$ if (artifacts != null) [ CD ]
Line_23 $$ for (Artifact a : artifacts) -->Line_27 $$ getLog().debug("Adding classpath entry for dependency " + a.getId())[ FD ]
Line_16 $$ Set<Artifact> artifacts = null-->Line_22 $$ if (artifacts != null) [ FD ]
Line_3 $$ List<URL> urls = new ArrayList<URL>()-->Line_38 $$ return new URLClassLoader(urls.toArray(new URL[urls.size()]), Enhancer.class.getClassLoader())[ FD ]
Line_9 $$ String msg = "Unable to resolve classpath entry to URL: " + file.getAbsolutePath()-->Line_33 $$ getLog().warn(msg)[ FD ]
Line_3 $$ List<URL> urls = new ArrayList<URL>()-->Line_26 $$ urls.add(a.getFile().toURI().toURL())[ FD ]
Line_23 $$ for (Artifact a : artifacts) -->Line_29 $$ String msg = "Unable to resolve URL for dependency " + a.getId() + " at " + a.getFile().getAbsolutePath()[ FD ]
Line_18 $$ if (project != null) -->Line_19 $$ MavenProject executionProject = project.getExecutionProject()[ CD ]
