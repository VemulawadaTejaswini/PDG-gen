Line_8 $$ Object propertyValue = getPropertyValue(componentInstance, propertyName)-->Line_10 $$ descriptors.add(new UsageDescriptor(getUsageDescriptorKey(providerName, propertyName, propertyValue.toString()), 1))[ FD ]
Line_9 $$ if (propertyValue != null) -->Line_10 $$ descriptors.add(new UsageDescriptor(getUsageDescriptorKey(providerName, propertyName, propertyValue.toString()), 1))[ CD ]
Line_5 $$ List<String> propertyNames = descriptor.getPropertyNames()-->Line_6 $$ if (providerName != null && propertyNames.size() > 0) [ FD ]
Line_2 $$ public static Set<UsageDescriptor> getUsages(@NotNull IdeSettingsDescriptor descriptor, @NotNull Object componentInstance) -->Line_5 $$ List<String> propertyNames = descriptor.getPropertyNames()[ CD ]
Line_2 $$ public static Set<UsageDescriptor> getUsages(@NotNull IdeSettingsDescriptor descriptor, @NotNull Object componentInstance) -->Line_6 $$ if (providerName != null && propertyNames.size() > 0) [ CD ]
Line_2 $$ public static Set<UsageDescriptor> getUsages(@NotNull IdeSettingsDescriptor descriptor, @NotNull Object componentInstance) -->Line_3 $$ Set<UsageDescriptor> descriptors = new HashSet<UsageDescriptor>()[ CD ]
Line_7 $$ for (String propertyName : propertyNames) -->Line_8 $$ Object propertyValue = getPropertyValue(componentInstance, propertyName)[ FD ]
Line_7 $$ for (String propertyName : propertyNames) -->Line_10 $$ descriptors.add(new UsageDescriptor(getUsageDescriptorKey(providerName, propertyName, propertyValue.toString()), 1))[ FD ]
Line_2 $$ public static Set<UsageDescriptor> getUsages(@NotNull IdeSettingsDescriptor descriptor, @NotNull Object componentInstance) -->Line_8 $$ Object propertyValue = getPropertyValue(componentInstance, propertyName)[ FD ]
Line_4 $$ String providerName = descriptor.myProviderName-->Line_10 $$ descriptors.add(new UsageDescriptor(getUsageDescriptorKey(providerName, propertyName, propertyValue.toString()), 1))[ FD ]
Line_2 $$ public static Set<UsageDescriptor> getUsages(@NotNull IdeSettingsDescriptor descriptor, @NotNull Object componentInstance) -->Line_14 $$ return descriptors[ CD ]
Line_2 $$ public static Set<UsageDescriptor> getUsages(@NotNull IdeSettingsDescriptor descriptor, @NotNull Object componentInstance) -->Line_5 $$ List<String> propertyNames = descriptor.getPropertyNames()[ FD ]
Line_3 $$ Set<UsageDescriptor> descriptors = new HashSet<UsageDescriptor>()-->Line_10 $$ descriptors.add(new UsageDescriptor(getUsageDescriptorKey(providerName, propertyName, propertyValue.toString()), 1))[ FD ]
Line_8 $$ Object propertyValue = getPropertyValue(componentInstance, propertyName)-->Line_9 $$ if (propertyValue != null) [ FD ]
Line_2 $$ public static Set<UsageDescriptor> getUsages(@NotNull IdeSettingsDescriptor descriptor, @NotNull Object componentInstance) -->Line_4 $$ String providerName = descriptor.myProviderName[ CD ]
