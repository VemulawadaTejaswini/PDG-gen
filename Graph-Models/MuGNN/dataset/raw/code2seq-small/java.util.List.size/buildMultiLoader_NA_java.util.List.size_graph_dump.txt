Line_2 $$ private MultiParentClassLoader buildMultiLoader(ClassLoaderId id, ClassPath classPath, List<ClassLoader> loaders) -->Line_18 $$ return new MultiParentClassLoader(parents)[ CD ]
Line_2 $$ private MultiParentClassLoader buildMultiLoader(ClassLoaderId id, ClassPath classPath, List<ClassLoader> loaders) -->Line_12 $$ if (loaders != null) [ CD ]
Line_2 $$ private MultiParentClassLoader buildMultiLoader(ClassLoaderId id, ClassPath classPath, List<ClassLoader> loaders) -->Line_12 $$ if (loaders != null) [ FD ]
Line_2 $$ private MultiParentClassLoader buildMultiLoader(ClassLoaderId id, ClassPath classPath, List<ClassLoader> loaders) -->Line_10 $$ List<ClassLoader> parents = new ArrayList<ClassLoader>(numParents)[ CD ]
Line_2 $$ private MultiParentClassLoader buildMultiLoader(ClassLoaderId id, ClassPath classPath, List<ClassLoader> loaders) -->Line_15 $$ if (!classPath.isEmpty()) [ CD ]
Line_2 $$ private MultiParentClassLoader buildMultiLoader(ClassLoaderId id, ClassPath classPath, List<ClassLoader> loaders) -->Line_4 $$ if (loaders != null) [ CD ]
Line_2 $$ private MultiParentClassLoader buildMultiLoader(ClassLoaderId id, ClassPath classPath, List<ClassLoader> loaders) -->Line_7 $$ if (!classPath.isEmpty()) [ CD ]
Line_2 $$ private MultiParentClassLoader buildMultiLoader(ClassLoaderId id, ClassPath classPath, List<ClassLoader> loaders) -->Line_16 $$ parents.add(loader(id, classPath))[ FD ]
Line_7 $$ if (!classPath.isEmpty()) -->Line_8 $$ numParents += 1[ CD ]
Line_3 $$ int numParents = 1-->Line_8 $$ numParents += 1[ FD ]
Line_10 $$ List<ClassLoader> parents = new ArrayList<ClassLoader>(numParents)-->Line_16 $$ parents.add(loader(id, classPath))[ FD ]
Line_2 $$ private MultiParentClassLoader buildMultiLoader(ClassLoaderId id, ClassPath classPath, List<ClassLoader> loaders) -->Line_5 $$ numParents += loaders.size()[ FD ]
Line_2 $$ private MultiParentClassLoader buildMultiLoader(ClassLoaderId id, ClassPath classPath, List<ClassLoader> loaders) -->Line_13 $$ parents.addAll(loaders)[ FD ]
Line_2 $$ private MultiParentClassLoader buildMultiLoader(ClassLoaderId id, ClassPath classPath, List<ClassLoader> loaders) -->Line_7 $$ if (!classPath.isEmpty()) [ FD ]
Line_10 $$ List<ClassLoader> parents = new ArrayList<ClassLoader>(numParents)-->Line_13 $$ parents.addAll(loaders)[ FD ]
Line_2 $$ private MultiParentClassLoader buildMultiLoader(ClassLoaderId id, ClassPath classPath, List<ClassLoader> loaders) -->Line_4 $$ if (loaders != null) [ FD ]
Line_2 $$ private MultiParentClassLoader buildMultiLoader(ClassLoaderId id, ClassPath classPath, List<ClassLoader> loaders) -->Line_11 $$ parents.add(parent.getExportClassLoader())[ CD ]
Line_3 $$ int numParents = 1-->Line_5 $$ numParents += loaders.size()[ FD ]
Line_12 $$ if (loaders != null) -->Line_13 $$ parents.addAll(loaders)[ CD ]
Line_2 $$ private MultiParentClassLoader buildMultiLoader(ClassLoaderId id, ClassPath classPath, List<ClassLoader> loaders) -->Line_3 $$ int numParents = 1[ CD ]
Line_4 $$ if (loaders != null) -->Line_5 $$ numParents += loaders.size()[ CD ]
Line_10 $$ List<ClassLoader> parents = new ArrayList<ClassLoader>(numParents)-->Line_11 $$ parents.add(parent.getExportClassLoader())[ FD ]
Line_2 $$ private MultiParentClassLoader buildMultiLoader(ClassLoaderId id, ClassPath classPath, List<ClassLoader> loaders) -->Line_15 $$ if (!classPath.isEmpty()) [ FD ]
Line_15 $$ if (!classPath.isEmpty()) -->Line_16 $$ parents.add(loader(id, classPath))[ CD ]
Line_5 $$ numParents += loaders.size()-->Line_8 $$ numParents += 1[ FD ]
