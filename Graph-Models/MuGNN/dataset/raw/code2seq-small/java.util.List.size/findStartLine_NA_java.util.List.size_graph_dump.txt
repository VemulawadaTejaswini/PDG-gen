Line_10 $$ for (int i = 0; i < lines.size(); i++) -->Line_12 $$ if (contextLines == totalContextLines) [ CD ]
Line_2 $$ private int findStartLine(final List<PatchLine> hunkLines, final List<String> lines) throws ApplyPatchException -->Line_5 $$ if (getLinesProcessingContext(hunkLines, lines, startLineBefore) == totalContextLines) [ FD ]
Line_9 $$ int maxContextLines = 0-->Line_15 $$ if (contextLines > maxContextLines) [ FD ]
Line_10 $$ for (int i = 0; i < lines.size(); i++) -->Line_15 $$ if (contextLines > maxContextLines) [ CD ]
Line_16 $$ maxContextLines = contextLines-->Line_20 $$ if (maxContextLines < 2) [ FD ]
Line_2 $$ private int findStartLine(final List<PatchLine> hunkLines, final List<String> lines) throws ApplyPatchException -->Line_11 $$ int contextLines = getLinesProcessingContext(hunkLines, lines, i)[ FD ]
Line_9 $$ int maxContextLines = 0-->Line_16 $$ maxContextLines = contextLines[ FD ]
Line_2 $$ private int findStartLine(final List<PatchLine> hunkLines, final List<String> lines) throws ApplyPatchException -->Line_10 $$ for (int i = 0; i < lines.size(); i++) [ FD ]
Line_9 $$ int maxContextLines = 0-->Line_20 $$ if (maxContextLines < 2) [ FD ]
Line_10 $$ for (int i = 0; i < lines.size(); i++) -->Line_11 $$ int contextLines = getLinesProcessingContext(hunkLines, lines, i)[ FD ]
Line_2 $$ private int findStartLine(final List<PatchLine> hunkLines, final List<String> lines) throws ApplyPatchException -->Line_3 $$ int totalContextLines = countContextLines(hunkLines)[ CD ]
Line_8 $$ int maxContextStartLine = -1-->Line_17 $$ maxContextStartLine = i[ FD ]
Line_15 $$ if (contextLines > maxContextLines) -->Line_17 $$ maxContextStartLine = i[ CD ]
Line_2 $$ private int findStartLine(final List<PatchLine> hunkLines, final List<String> lines) throws ApplyPatchException -->Line_3 $$ int totalContextLines = countContextLines(hunkLines)[ FD ]
Line_16 $$ maxContextLines = contextLines-->Line_15 $$ if (contextLines > maxContextLines) [ FD ]
Line_3 $$ int totalContextLines = countContextLines(hunkLines)-->Line_5 $$ if (getLinesProcessingContext(hunkLines, lines, startLineBefore) == totalContextLines) [ FD ]
Line_2 $$ private int findStartLine(final List<PatchLine> hunkLines, final List<String> lines) throws ApplyPatchException -->Line_23 $$ return maxContextStartLine[ CD ]
Line_2 $$ private int findStartLine(final List<PatchLine> hunkLines, final List<String> lines) throws ApplyPatchException -->Line_8 $$ int maxContextStartLine = -1[ CD ]
Line_5 $$ if (getLinesProcessingContext(hunkLines, lines, startLineBefore) == totalContextLines) -->Line_6 $$ return startLineBefore[ CD ]
Line_11 $$ int contextLines = getLinesProcessingContext(hunkLines, lines, i)-->Line_16 $$ maxContextLines = contextLines[ FD ]
Line_2 $$ private int findStartLine(final List<PatchLine> hunkLines, final List<String> lines) throws ApplyPatchException -->Line_20 $$ if (maxContextLines < 2) [ CD ]
Line_10 $$ for (int i = 0; i < lines.size(); i++) -->Line_11 $$ int contextLines = getLinesProcessingContext(hunkLines, lines, i)[ CD ]
Line_11 $$ int contextLines = getLinesProcessingContext(hunkLines, lines, i)-->Line_15 $$ if (contextLines > maxContextLines) [ FD ]
Line_15 $$ if (contextLines > maxContextLines) -->Line_16 $$ maxContextLines = contextLines[ CD ]
Line_12 $$ if (contextLines == totalContextLines) -->Line_13 $$ return i[ CD ]
Line_4 $$ final int startLineBefore = myHunk.getStartLineBefore()-->Line_5 $$ if (getLinesProcessingContext(hunkLines, lines, startLineBefore) == totalContextLines) [ FD ]
Line_2 $$ private int findStartLine(final List<PatchLine> hunkLines, final List<String> lines) throws ApplyPatchException -->Line_9 $$ int maxContextLines = 0[ CD ]
Line_10 $$ for (int i = 0; i < lines.size(); i++) -->Line_17 $$ maxContextStartLine = i[ FD ]
Line_3 $$ int totalContextLines = countContextLines(hunkLines)-->Line_12 $$ if (contextLines == totalContextLines) [ FD ]
Line_2 $$ private int findStartLine(final List<PatchLine> hunkLines, final List<String> lines) throws ApplyPatchException -->Line_5 $$ if (getLinesProcessingContext(hunkLines, lines, startLineBefore) == totalContextLines) [ CD ]
Line_11 $$ int contextLines = getLinesProcessingContext(hunkLines, lines, i)-->Line_12 $$ if (contextLines == totalContextLines) [ FD ]
Line_2 $$ private int findStartLine(final List<PatchLine> hunkLines, final List<String> lines) throws ApplyPatchException -->Line_10 $$ for (int i = 0; i < lines.size(); i++) [ CD ]
Line_2 $$ private int findStartLine(final List<PatchLine> hunkLines, final List<String> lines) throws ApplyPatchException -->Line_4 $$ final int startLineBefore = myHunk.getStartLineBefore()[ CD ]
