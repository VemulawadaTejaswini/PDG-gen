Line_13 $$ ResultChecker checker = new ResultChecker() -->Line_18 $$ assertEquals(courseMeetingExpected2, resultList.get(1))[ CD ]
Line_13 $$ ResultChecker checker = new ResultChecker() -->Line_20 $$ assertTrue(Hibernate.isInitialized(((CourseMeeting) resultList.get(1)).getCourse()))[ CD ]
Line_13 $$ ResultChecker checker = new ResultChecker() -->Line_19 $$ assertTrue(Hibernate.isInitialized(((CourseMeeting) resultList.get(0)).getCourse()))[ CD ]
Line_15 $$ List resultList = (List) results-->Line_20 $$ assertTrue(Hibernate.isInitialized(((CourseMeeting) resultList.get(1)).getCourse()))[ FD ]
Line_8 $$ HqlExecutor hqlExecutor = new HqlExecutor() -->Line_10 $$ return s.createQuery("from CourseMeeting order by id.day")[ FD ]
Line_13 $$ ResultChecker checker = new ResultChecker() -->Line_21 $$ assertEquals(courseExpected, ((CourseMeeting) resultList.get(0)).getCourse())[ CD ]
Line_15 $$ List resultList = (List) results-->Line_19 $$ assertTrue(Hibernate.isInitialized(((CourseMeeting) resultList.get(0)).getCourse()))[ FD ]
Line_2 $$ public void testEntityWithNonLazyManyToOneList() throws Exception -->Line_25 $$ runTest(hqlExecutor, criteriaExecutor, checker, false)[ CD ]
Line_15 $$ List resultList = (List) results-->Line_17 $$ assertEquals(courseMeetingExpected1, resultList.get(0))[ FD ]
Line_13 $$ ResultChecker checker = new ResultChecker() -->Line_16 $$ assertEquals(2, resultList.size())[ CD ]
Line_13 $$ ResultChecker checker = new ResultChecker() -->Line_17 $$ assertEquals(courseMeetingExpected1, resultList.get(0))[ CD ]
Line_13 $$ ResultChecker checker = new ResultChecker() -->Line_15 $$ List resultList = (List) results[ CD ]
Line_3 $$ CriteriaExecutor criteriaExecutor = new CriteriaExecutor() -->Line_5 $$ return s.createCriteria(CourseMeeting.class).addOrder(Order.asc("id.day"))[ CD ]
Line_15 $$ List resultList = (List) results-->Line_22 $$ assertEquals(courseExpected, ((CourseMeeting) resultList.get(1)).getCourse())[ FD ]
Line_3 $$ CriteriaExecutor criteriaExecutor = new CriteriaExecutor() -->Line_10 $$ return s.createQuery("from CourseMeeting order by id.day")[ FD ]
Line_2 $$ public void testEntityWithNonLazyManyToOneList() throws Exception -->Line_3 $$ CriteriaExecutor criteriaExecutor = new CriteriaExecutor() [ CD ]
Line_3 $$ CriteriaExecutor criteriaExecutor = new CriteriaExecutor() -->Line_5 $$ return s.createCriteria(CourseMeeting.class).addOrder(Order.asc("id.day"))[ FD ]
Line_13 $$ ResultChecker checker = new ResultChecker() -->Line_22 $$ assertEquals(courseExpected, ((CourseMeeting) resultList.get(1)).getCourse())[ CD ]
Line_15 $$ List resultList = (List) results-->Line_18 $$ assertEquals(courseMeetingExpected2, resultList.get(1))[ FD ]
Line_8 $$ HqlExecutor hqlExecutor = new HqlExecutor() -->Line_10 $$ return s.createQuery("from CourseMeeting order by id.day")[ CD ]
Line_3 $$ CriteriaExecutor criteriaExecutor = new CriteriaExecutor() -->Line_25 $$ runTest(hqlExecutor, criteriaExecutor, checker, false)[ FD ]
Line_15 $$ List resultList = (List) results-->Line_16 $$ assertEquals(2, resultList.size())[ FD ]
Line_15 $$ List resultList = (List) results-->Line_21 $$ assertEquals(courseExpected, ((CourseMeeting) resultList.get(0)).getCourse())[ FD ]
