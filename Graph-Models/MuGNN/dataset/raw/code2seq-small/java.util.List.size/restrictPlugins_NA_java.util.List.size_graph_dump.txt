Line_3 $$ List<P> visiblePlugins = new ArrayList(plugins.size())-->Line_7 $$ visiblePlugins.add(plugin)[ FD ]
Line_5 $$ PluginSetting pluginSetting = PluginSettingLocalServiceUtil.getPluginSetting(companyId, plugin.getPluginId(), plugin.getPluginType())-->Line_6 $$ if (pluginSetting.isActive() && pluginSetting.hasPermission(userId)) [ FD ]
Line_2 $$ public static <P extends Plugin> List<P> restrictPlugins(List<P> plugins, long companyId, long userId) -->Line_6 $$ if (pluginSetting.isActive() && pluginSetting.hasPermission(userId)) [ FD ]
Line_6 $$ if (pluginSetting.isActive() && pluginSetting.hasPermission(userId)) -->Line_7 $$ visiblePlugins.add(plugin)[ CD ]
Line_4 $$ for (P plugin : plugins) -->Line_7 $$ visiblePlugins.add(plugin)[ FD ]
Line_2 $$ public static <P extends Plugin> List<P> restrictPlugins(List<P> plugins, long companyId, long userId) -->Line_3 $$ List<P> visiblePlugins = new ArrayList(plugins.size())[ FD ]
Line_2 $$ public static <P extends Plugin> List<P> restrictPlugins(List<P> plugins, long companyId, long userId) -->Line_10 $$ return visiblePlugins[ CD ]
Line_2 $$ public static <P extends Plugin> List<P> restrictPlugins(List<P> plugins, long companyId, long userId) -->Line_3 $$ List<P> visiblePlugins = new ArrayList(plugins.size())[ CD ]
Line_4 $$ for (P plugin : plugins) -->Line_5 $$ PluginSetting pluginSetting = PluginSettingLocalServiceUtil.getPluginSetting(companyId, plugin.getPluginId(), plugin.getPluginType())[ FD ]
Line_2 $$ public static <P extends Plugin> List<P> restrictPlugins(List<P> plugins, long companyId, long userId) -->Line_5 $$ PluginSetting pluginSetting = PluginSettingLocalServiceUtil.getPluginSetting(companyId, plugin.getPluginId(), plugin.getPluginType())[ FD ]
