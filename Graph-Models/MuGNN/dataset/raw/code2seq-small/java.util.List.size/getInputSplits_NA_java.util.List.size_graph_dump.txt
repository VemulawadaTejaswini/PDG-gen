Line_5 $$ List<InputSplit> splitsList = new ArrayList<InputSplit>()-->Line_69 $$ splits = splitsList.toArray(new InputSplit[splitsList.size()])[ FD ]
Line_24 $$ String host = layers.get(layers.size() - 1).getValue()-->Line_25 $$ if (host == null) [ FD ]
Line_4 $$ if (splits == null) -->Line_69 $$ splits = splitsList.toArray(new InputSplit[splitsList.size()])[ CD ]
Line_48 $$ if (splitsList.size() == 0) -->Line_51 $$ avgHostPerSplit = totalHosts / splitsList.size()[ CD ]
Line_5 $$ List<InputSplit> splitsList = new ArrayList<InputSplit>()-->Line_39 $$ splitsList.add(new FileSplit(emptyPath, 0, mapInputBytes, hosts))[ FD ]
Line_57 $$ if (cluster == null) -->Line_61 $$ String[] hosts = new String[mNodes.length][ CD ]
Line_4 $$ if (splits == null) -->Line_48 $$ if (splitsList.size() == 0) [ CD ]
Line_57 $$ if (cluster == null) -->Line_62 $$ for (int j = 0; j < hosts.length; ++j) [ CD ]
Line_62 $$ for (int j = 0; j < hosts.length; ++j) -->Line_63 $$ hosts[j] = mNodes[j].getName()[ CD ]
Line_4 $$ if (splits == null) -->Line_47 $$ int avgHostPerSplit[ CD ]
Line_10 $$ Pre21JobHistoryConstants.Values taskType = mapTask.getTaskType()-->Line_12 $$ LOG.warn("TaskType for a MapTask is not Map. task=" + mapTask.getTaskID() + " type=" + ((taskType == null) ? "null" : taskType.toString()))[ FD ]
Line_16 $$ List<String> hostList = new ArrayList<String>()-->Line_32 $$ String[] hosts = hostList.toArray(new String[hostList.size()])[ FD ]
Line_5 $$ List<InputSplit> splitsList = new ArrayList<InputSplit>()-->Line_56 $$ for (int i = splitsList.size(); i < totalMaps; i++) [ FD ]
Line_49 $$ avgHostPerSplit = 3-->Line_53 $$ avgHostPerSplit = 3[ FD ]
Line_9 $$ for (LoggedTask mapTask : job.getMapTasks()) -->Line_26 $$ LOG.warn("Bad location layer format for task " + mapTask.getTaskID() + ": " + layers)[ FD ]
Line_20 $$ if (layers.size() == 0) -->Line_21 $$ LOG.warn("Bad location layer format for task " + mapTask.getTaskID())[ CD ]
Line_33 $$ totalHosts += hosts.length-->Line_51 $$ avgHostPerSplit = totalHosts / splitsList.size()[ FD ]
Line_57 $$ if (cluster == null) -->Line_58 $$ splitsList.add(new FileSplit(emptyPath, 0, 0, new String[0]))[ CD ]
Line_47 $$ int avgHostPerSplit-->Line_49 $$ avgHostPerSplit = 3[ FD ]
Line_57 $$ if (cluster == null) -->Line_60 $$ MachineNode[] mNodes = cluster.getRandomMachines(avgHostPerSplit, random)[ CD ]
Line_24 $$ String host = layers.get(layers.size() - 1).getValue()-->Line_29 $$ hostList.add(host)[ FD ]
Line_47 $$ int avgHostPerSplit-->Line_53 $$ avgHostPerSplit = 3[ FD ]
Line_49 $$ avgHostPerSplit = 3-->Line_51 $$ avgHostPerSplit = totalHosts / splitsList.size()[ FD ]
Line_51 $$ avgHostPerSplit = totalHosts / splitsList.size()-->Line_53 $$ avgHostPerSplit = 3[ FD ]
Line_25 $$ if (host == null) -->Line_26 $$ LOG.warn("Bad location layer format for task " + mapTask.getTaskID() + ": " + layers)[ CD ]
Line_47 $$ int avgHostPerSplit-->Line_51 $$ avgHostPerSplit = totalHosts / splitsList.size()[ FD ]
Line_5 $$ List<InputSplit> splitsList = new ArrayList<InputSplit>()-->Line_58 $$ splitsList.add(new FileSplit(emptyPath, 0, 0, new String[0]))[ FD ]
Line_35 $$ if (mapInputBytes < 0) -->Line_36 $$ LOG.warn("InputBytes for task " + mapTask.getTaskID() + " is not defined.")[ CD ]
Line_34 $$ long mapInputBytes = getTaskInfo(mapTask).getInputBytes()-->Line_37 $$ mapInputBytes = 0[ FD ]
Line_4 $$ if (splits == null) -->Line_5 $$ List<InputSplit> splitsList = new ArrayList<InputSplit>()[ CD ]
Line_44 $$ if (totalMaps < splitsList.size()) -->Line_45 $$ LOG.warn("TotalMaps for job " + job.getJobID() + " is less than the total number of map task descriptions (" + totalMaps + "<" + splitsList.size() + ").")[ CD ]
Line_47 $$ int avgHostPerSplit-->Line_52 $$ if (avgHostPerSplit == 0) [ FD ]
Line_10 $$ Pre21JobHistoryConstants.Values taskType = mapTask.getTaskType()-->Line_11 $$ if (taskType != Pre21JobHistoryConstants.Values.MAP) [ FD ]
Line_16 $$ List<String> hostList = new ArrayList<String>()-->Line_29 $$ hostList.add(host)[ FD ]
Line_9 $$ for (LoggedTask mapTask : job.getMapTasks()) -->Line_36 $$ LOG.warn("InputBytes for task " + mapTask.getTaskID() + " is not defined.")[ FD ]
Line_48 $$ if (splitsList.size() == 0) -->Line_49 $$ avgHostPerSplit = 3[ CD ]
Line_49 $$ avgHostPerSplit = 3-->Line_60 $$ MachineNode[] mNodes = cluster.getRandomMachines(avgHostPerSplit, random)[ FD ]
Line_56 $$ for (int i = splitsList.size(); i < totalMaps; i++) -->Line_57 $$ if (cluster == null) [ CD ]
Line_15 $$ List<LoggedLocation> locations = mapTask.getPreferredLocations()-->Line_17 $$ if (locations != null) [ FD ]
Line_4 $$ if (splits == null) -->Line_44 $$ if (totalMaps < splitsList.size()) [ CD ]
Line_5 $$ List<InputSplit> splitsList = new ArrayList<InputSplit>()-->Line_45 $$ LOG.warn("TotalMaps for job " + job.getJobID() + " is less than the total number of map task descriptions (" + totalMaps + "<" + splitsList.size() + ").")[ FD ]
Line_49 $$ avgHostPerSplit = 3-->Line_52 $$ if (avgHostPerSplit == 0) [ FD ]
Line_5 $$ List<InputSplit> splitsList = new ArrayList<InputSplit>()-->Line_51 $$ avgHostPerSplit = totalHosts / splitsList.size()[ FD ]
Line_53 $$ avgHostPerSplit = 3-->Line_60 $$ MachineNode[] mNodes = cluster.getRandomMachines(avgHostPerSplit, random)[ FD ]
Line_52 $$ if (avgHostPerSplit == 0) -->Line_53 $$ avgHostPerSplit = 3[ CD ]
Line_19 $$ List<NodeName> layers = location.getLayers()-->Line_24 $$ String host = layers.get(layers.size() - 1).getValue()[ FD ]
Line_9 $$ for (LoggedTask mapTask : job.getMapTasks()) -->Line_34 $$ long mapInputBytes = getTaskInfo(mapTask).getInputBytes()[ FD ]
Line_5 $$ List<InputSplit> splitsList = new ArrayList<InputSplit>()-->Line_48 $$ if (splitsList.size() == 0) [ FD ]
Line_9 $$ for (LoggedTask mapTask : job.getMapTasks()) -->Line_12 $$ LOG.warn("TaskType for a MapTask is not Map. task=" + mapTask.getTaskID() + " type=" + ((taskType == null) ? "null" : taskType.toString()))[ FD ]
Line_9 $$ for (LoggedTask mapTask : job.getMapTasks()) -->Line_10 $$ Pre21JobHistoryConstants.Values taskType = mapTask.getTaskType()[ FD ]
Line_35 $$ if (mapInputBytes < 0) -->Line_37 $$ mapInputBytes = 0[ CD ]
Line_51 $$ avgHostPerSplit = totalHosts / splitsList.size()-->Line_52 $$ if (avgHostPerSplit == 0) [ FD ]
Line_18 $$ for (LoggedLocation location : locations) -->Line_19 $$ List<NodeName> layers = location.getLayers()[ FD ]
Line_9 $$ for (LoggedTask mapTask : job.getMapTasks()) -->Line_15 $$ List<LoggedLocation> locations = mapTask.getPreferredLocations()[ FD ]
Line_5 $$ List<InputSplit> splitsList = new ArrayList<InputSplit>()-->Line_44 $$ if (totalMaps < splitsList.size()) [ FD ]
Line_4 $$ if (splits == null) -->Line_56 $$ for (int i = splitsList.size(); i < totalMaps; i++) [ CD ]
Line_48 $$ if (splitsList.size() == 0) -->Line_52 $$ if (avgHostPerSplit == 0) [ CD ]
Line_51 $$ avgHostPerSplit = totalHosts / splitsList.size()-->Line_60 $$ MachineNode[] mNodes = cluster.getRandomMachines(avgHostPerSplit, random)[ FD ]
Line_9 $$ for (LoggedTask mapTask : job.getMapTasks()) -->Line_21 $$ LOG.warn("Bad location layer format for task " + mapTask.getTaskID())[ FD ]
Line_11 $$ if (taskType != Pre21JobHistoryConstants.Values.MAP) -->Line_12 $$ LOG.warn("TaskType for a MapTask is not Map. task=" + mapTask.getTaskID() + " type=" + ((taskType == null) ? "null" : taskType.toString()))[ CD ]
Line_19 $$ List<NodeName> layers = location.getLayers()-->Line_20 $$ if (layers.size() == 0) [ FD ]
Line_34 $$ long mapInputBytes = getTaskInfo(mapTask).getInputBytes()-->Line_35 $$ if (mapInputBytes < 0) [ FD ]
Line_4 $$ if (splits == null) -->Line_6 $$ Path emptyPath = new Path("/")[ CD ]
Line_47 $$ int avgHostPerSplit-->Line_60 $$ MachineNode[] mNodes = cluster.getRandomMachines(avgHostPerSplit, random)[ FD ]
