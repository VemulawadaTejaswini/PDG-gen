Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_15 $$ log.info("query against Order with a subquery for line items with a subquery line items where the product name is Acme Hair Gel and the quantity is greater than 1 in a given region for a given buyer")[ CD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_3 $$ log.info("Starting HQL subquery with filters tests")[ CD ]
Line_6 $$ Session session = openSession()-->Line_32 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= :quantity and li.product in (select p.id from Product p where p.name = :name)) and o.buyer = :buyer").setLong("quantity", 1L).setString("name", "Acme Hair Gel").setString("buyer", "gavin").list()[ FD ]
Line_22 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_38 $$ assertEquals("Incorrect orders count", 1, orders.size())[ FD ]
Line_6 $$ Session session = openSession()-->Line_37 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = :buyer").setLong(0, 1L).setString(1, "Acme Hair Gel").setString("buyer", "gavin").list()[ FD ]
Line_17 $$ List orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li, Product as p where p.id = li.product and li.quantity >= ? and p.name = ?) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_18 $$ assertEquals("Incorrect orders count", 1, orders.size())[ FD ]
Line_17 $$ List orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li, Product as p where p.id = li.product and li.quantity >= ? and p.name = ?) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_28 $$ assertEquals("Incorrect orders count", 0, orders.size())[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_19 $$ log.info("query against Order with a subquery for line items with a subquery line items where the product name is Acme Hair Gel and the quantity is greater than 1 in a given region and the product is effective as of last month")[ CD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_8 $$ log.info("query against Department with a subquery on Salesperson in the APAC reqion...")[ CD ]
Line_17 $$ List orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li, Product as p where p.id = li.product and li.quantity >= ? and p.name = ?) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_38 $$ assertEquals("Incorrect orders count", 1, orders.size())[ FD ]
Line_6 $$ Session session = openSession()-->Line_12 $$ session.enableFilter("region").setParameter("region", "Foobar")[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_27 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()[ CD ]
Line_6 $$ Session session = openSession()-->Line_13 $$ departments = session.createQuery("select d from Department as d where d.id in (select s.department from Salesperson s where s.name = ?)").setString(0, "steve").list()[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_35 $$ session.enableFilter("region").setParameter("region", "APAC")[ CD ]
Line_22 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_28 $$ assertEquals("Incorrect orders count", 0, orders.size())[ FD ]
Line_9 $$ List departments = session.createQuery("select d from Department as d where d.id in (select s.department from Salesperson s where s.name = ?)").setString(0, "steve").list()-->Line_10 $$ assertEquals("Incorrect department count", 1, departments.size())[ FD ]
Line_4 $$ TestData testData = new TestData()-->Line_5 $$ testData.prepare()[ FD ]
Line_6 $$ Session session = openSession()-->Line_9 $$ List departments = session.createQuery("select d from Department as d where d.id in (select s.department from Salesperson s where s.name = ?)").setString(0, "steve").list()[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_16 $$ session.enableFilter("region").setParameter("region", "APAC")[ CD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_6 $$ Session session = openSession()[ CD ]
Line_6 $$ Session session = openSession()-->Line_27 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_24 $$ log.info("query against Order with a subquery for line items with a subquery line items where the product name is Acme Hair Gel and the quantity is greater than 1 in a given region and the product is effective as of 4 months ago")[ CD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_23 $$ assertEquals("Incorrect orders count", 1, orders.size())[ CD ]
Line_17 $$ List orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li, Product as p where p.id = li.product and li.quantity >= ? and p.name = ?) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_32 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= :quantity and li.product in (select p.id from Product p where p.name = :name)) and o.buyer = :buyer").setLong("quantity", 1L).setString("name", "Acme Hair Gel").setString("buyer", "gavin").list()[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_28 $$ assertEquals("Incorrect orders count", 0, orders.size())[ CD ]
Line_22 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_27 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_29 $$ log.info("query against Order with a subquery for line items with a subquery line items where the product name is Acme Hair Gel and the quantity is greater than 1 in a given region and the product is effective as of last month with named types")[ CD ]
Line_6 $$ Session session = openSession()-->Line_20 $$ session.enableFilter("region").setParameter("region", "APAC")[ FD ]
Line_4 $$ TestData testData = new TestData()-->Line_40 $$ testData.release()[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_22 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()[ CD ]
Line_32 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= :quantity and li.product in (select p.id from Product p where p.name = :name)) and o.buyer = :buyer").setLong("quantity", 1L).setString("name", "Acme Hair Gel").setString("buyer", "gavin").list()-->Line_33 $$ assertEquals("Incorrect orders count", 1, orders.size())[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_40 $$ testData.release()[ CD ]
Line_6 $$ Session session = openSession()-->Line_39 $$ session.close()[ FD ]
Line_37 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = :buyer").setLong(0, 1L).setString(1, "Acme Hair Gel").setString("buyer", "gavin").list()-->Line_38 $$ assertEquals("Incorrect orders count", 1, orders.size())[ FD ]
Line_32 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= :quantity and li.product in (select p.id from Product p where p.name = :name)) and o.buyer = :buyer").setLong("quantity", 1L).setString("name", "Acme Hair Gel").setString("buyer", "gavin").list()-->Line_37 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = :buyer").setLong(0, 1L).setString(1, "Acme Hair Gel").setString("buyer", "gavin").list()[ FD ]
Line_6 $$ Session session = openSession()-->Line_25 $$ session.enableFilter("region").setParameter("region", "APAC")[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_36 $$ session.enableFilter("effectiveDate").setParameter("asOfDate", testData.lastMonth.getTime())[ CD ]
Line_27 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_32 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= :quantity and li.product in (select p.id from Product p where p.name = :name)) and o.buyer = :buyer").setLong("quantity", 1L).setString("name", "Acme Hair Gel").setString("buyer", "gavin").list()[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_17 $$ List orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li, Product as p where p.id = li.product and li.quantity >= ? and p.name = ?) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()[ CD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_39 $$ session.close()[ CD ]
Line_9 $$ List departments = session.createQuery("select d from Department as d where d.id in (select s.department from Salesperson s where s.name = ?)").setString(0, "steve").list()-->Line_13 $$ departments = session.createQuery("select d from Department as d where d.id in (select s.department from Salesperson s where s.name = ?)").setString(0, "steve").list()[ FD ]
Line_6 $$ Session session = openSession()-->Line_16 $$ session.enableFilter("region").setParameter("region", "APAC")[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_5 $$ testData.prepare()[ CD ]
Line_27 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_38 $$ assertEquals("Incorrect orders count", 1, orders.size())[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_10 $$ assertEquals("Incorrect department count", 1, departments.size())[ CD ]
Line_6 $$ Session session = openSession()-->Line_7 $$ session.enableFilter("region").setParameter("region", "APAC")[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_9 $$ List departments = session.createQuery("select d from Department as d where d.id in (select s.department from Salesperson s where s.name = ?)").setString(0, "steve").list()[ CD ]
Line_27 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_28 $$ assertEquals("Incorrect orders count", 0, orders.size())[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_32 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= :quantity and li.product in (select p.id from Product p where p.name = :name)) and o.buyer = :buyer").setLong("quantity", 1L).setString("name", "Acme Hair Gel").setString("buyer", "gavin").list()[ CD ]
Line_32 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= :quantity and li.product in (select p.id from Product p where p.name = :name)) and o.buyer = :buyer").setLong("quantity", 1L).setString("name", "Acme Hair Gel").setString("buyer", "gavin").list()-->Line_38 $$ assertEquals("Incorrect orders count", 1, orders.size())[ FD ]
Line_9 $$ List departments = session.createQuery("select d from Department as d where d.id in (select s.department from Salesperson s where s.name = ?)").setString(0, "steve").list()-->Line_14 $$ assertEquals("Incorrect department count", 0, departments.size())[ FD ]
Line_17 $$ List orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li, Product as p where p.id = li.product and li.quantity >= ? and p.name = ?) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_33 $$ assertEquals("Incorrect orders count", 1, orders.size())[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_34 $$ log.info("query against Order with a subquery for line items with a subquery line items where the product name is Acme Hair Gel and the quantity is greater than 1 in a given region and the product is effective as of last month with mixed types")[ CD ]
Line_13 $$ departments = session.createQuery("select d from Department as d where d.id in (select s.department from Salesperson s where s.name = ?)").setString(0, "steve").list()-->Line_14 $$ assertEquals("Incorrect department count", 0, departments.size())[ FD ]
Line_6 $$ Session session = openSession()-->Line_22 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_37 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = :buyer").setLong(0, 1L).setString(1, "Acme Hair Gel").setString("buyer", "gavin").list()[ CD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_21 $$ session.enableFilter("effectiveDate").setParameter("asOfDate", testData.lastMonth.getTime())[ CD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_12 $$ session.enableFilter("region").setParameter("region", "Foobar")[ CD ]
Line_17 $$ List orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li, Product as p where p.id = li.product and li.quantity >= ? and p.name = ?) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_27 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_25 $$ session.enableFilter("region").setParameter("region", "APAC")[ CD ]
Line_22 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_23 $$ assertEquals("Incorrect orders count", 1, orders.size())[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_4 $$ TestData testData = new TestData()[ CD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_7 $$ session.enableFilter("region").setParameter("region", "APAC")[ CD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_11 $$ log.info("query against Department with a subquery on Salesperson in the FooBar reqion...")[ CD ]
Line_22 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_37 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = :buyer").setLong(0, 1L).setString(1, "Acme Hair Gel").setString("buyer", "gavin").list()[ FD ]
Line_6 $$ Session session = openSession()-->Line_21 $$ session.enableFilter("effectiveDate").setParameter("asOfDate", testData.lastMonth.getTime())[ FD ]
Line_17 $$ List orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li, Product as p where p.id = li.product and li.quantity >= ? and p.name = ?) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_23 $$ assertEquals("Incorrect orders count", 1, orders.size())[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_33 $$ assertEquals("Incorrect orders count", 1, orders.size())[ CD ]
Line_17 $$ List orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li, Product as p where p.id = li.product and li.quantity >= ? and p.name = ?) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_22 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_30 $$ session.enableFilter("region").setParameter("region", "APAC")[ CD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_26 $$ session.enableFilter("effectiveDate").setParameter("asOfDate", testData.fourMonthsAgo.getTime())[ CD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_14 $$ assertEquals("Incorrect department count", 0, departments.size())[ CD ]
Line_27 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_33 $$ assertEquals("Incorrect orders count", 1, orders.size())[ FD ]
Line_6 $$ Session session = openSession()-->Line_35 $$ session.enableFilter("region").setParameter("region", "APAC")[ FD ]
Line_22 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_32 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= :quantity and li.product in (select p.id from Product p where p.name = :name)) and o.buyer = :buyer").setLong("quantity", 1L).setString("name", "Acme Hair Gel").setString("buyer", "gavin").list()[ FD ]
Line_6 $$ Session session = openSession()-->Line_17 $$ List orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li, Product as p where p.id = li.product and li.quantity >= ? and p.name = ?) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()[ FD ]
Line_17 $$ List orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li, Product as p where p.id = li.product and li.quantity >= ? and p.name = ?) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_37 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = :buyer").setLong(0, 1L).setString(1, "Acme Hair Gel").setString("buyer", "gavin").list()[ FD ]
Line_22 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_33 $$ assertEquals("Incorrect orders count", 1, orders.size())[ FD ]
Line_6 $$ Session session = openSession()-->Line_30 $$ session.enableFilter("region").setParameter("region", "APAC")[ FD ]
Line_6 $$ Session session = openSession()-->Line_31 $$ session.enableFilter("effectiveDate").setParameter("asOfDate", testData.lastMonth.getTime())[ FD ]
Line_27 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = ?").setLong(0, 1L).setString(1, "Acme Hair Gel").setString(2, "gavin").list()-->Line_37 $$ orders = session.createQuery("select o from Order as o where exists (select li.id from LineItem li where li.quantity >= ? and li.product in (select p.id from Product p where p.name = ?)) and o.buyer = :buyer").setLong(0, 1L).setString(1, "Acme Hair Gel").setString("buyer", "gavin").list()[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_38 $$ assertEquals("Incorrect orders count", 1, orders.size())[ CD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_31 $$ session.enableFilter("effectiveDate").setParameter("asOfDate", testData.lastMonth.getTime())[ CD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_20 $$ session.enableFilter("region").setParameter("region", "APAC")[ CD ]
Line_6 $$ Session session = openSession()-->Line_26 $$ session.enableFilter("effectiveDate").setParameter("asOfDate", testData.fourMonthsAgo.getTime())[ FD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_13 $$ departments = session.createQuery("select d from Department as d where d.id in (select s.department from Salesperson s where s.name = ?)").setString(0, "steve").list()[ CD ]
Line_2 $$ public void testHQLSubqueryWithFilters() -->Line_18 $$ assertEquals("Incorrect orders count", 1, orders.size())[ CD ]
Line_6 $$ Session session = openSession()-->Line_36 $$ session.enableFilter("effectiveDate").setParameter("asOfDate", testData.lastMonth.getTime())[ FD ]
