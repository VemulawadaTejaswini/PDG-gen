Line_12 $$ result = getIndexedTag(result, index)-->Line_20 $$ result = getIndexedTag(result, index)[ FD ]
Line_13 $$ for (String each : elements.subList(1, elements.size())) -->Line_14 $$ nameAndIndex = translateTagName(each)[ FD ]
Line_2 $$ public static XmlTag findTag(@NotNull DomElement domElement, @NotNull String path) -->Line_4 $$ if (elements.isEmpty())[ CD ]
Line_2 $$ public static XmlTag findTag(@NotNull DomElement domElement, @NotNull String path) -->Line_6 $$ Pair<String, Integer> nameAndIndex = translateTagName(elements.get(0))[ CD ]
Line_2 $$ public static XmlTag findTag(@NotNull DomElement domElement, @NotNull String path) -->Line_10 $$ if (result == null || !name.equals(result.getName()))[ CD ]
Line_7 $$ String name = nameAndIndex.first-->Line_15 $$ name = nameAndIndex.first[ FD ]
Line_12 $$ result = getIndexedTag(result, index)-->Line_18 $$ if (result == null)[ FD ]
Line_2 $$ public static XmlTag findTag(@NotNull DomElement domElement, @NotNull String path) -->Line_12 $$ result = getIndexedTag(result, index)[ CD ]
Line_6 $$ Pair<String, Integer> nameAndIndex = translateTagName(elements.get(0))-->Line_14 $$ nameAndIndex = translateTagName(each)[ FD ]
Line_7 $$ String name = nameAndIndex.first-->Line_10 $$ if (result == null || !name.equals(result.getName()))[ FD ]
Line_17 $$ result = result.findFirstSubTag(name)-->Line_18 $$ if (result == null)[ FD ]
Line_16 $$ index = nameAndIndex.second-->Line_20 $$ result = getIndexedTag(result, index)[ FD ]
Line_4 $$ if (elements.isEmpty())-->Line_5 $$ return null[ CD ]
Line_2 $$ public static XmlTag findTag(@NotNull DomElement domElement, @NotNull String path) -->Line_3 $$ List<String> elements = StringUtil.split(path, ".")[ FD ]
Line_2 $$ public static XmlTag findTag(@NotNull DomElement domElement, @NotNull String path) -->Line_22 $$ return result[ CD ]
Line_10 $$ if (result == null || !name.equals(result.getName()))-->Line_11 $$ return null[ CD ]
Line_2 $$ public static XmlTag findTag(@NotNull DomElement domElement, @NotNull String path) -->Line_3 $$ List<String> elements = StringUtil.split(path, ".")[ CD ]
Line_3 $$ List<String> elements = StringUtil.split(path, ".")-->Line_13 $$ for (String each : elements.subList(1, elements.size())) [ FD ]
Line_12 $$ result = getIndexedTag(result, index)-->Line_17 $$ result = result.findFirstSubTag(name)[ FD ]
Line_9 $$ XmlTag result = domElement.getXmlTag()-->Line_12 $$ result = getIndexedTag(result, index)[ FD ]
Line_9 $$ XmlTag result = domElement.getXmlTag()-->Line_20 $$ result = getIndexedTag(result, index)[ FD ]
Line_2 $$ public static XmlTag findTag(@NotNull DomElement domElement, @NotNull String path) -->Line_8 $$ Integer index = nameAndIndex.second[ CD ]
Line_9 $$ XmlTag result = domElement.getXmlTag()-->Line_17 $$ result = result.findFirstSubTag(name)[ FD ]
Line_3 $$ List<String> elements = StringUtil.split(path, ".")-->Line_4 $$ if (elements.isEmpty())[ FD ]
Line_3 $$ List<String> elements = StringUtil.split(path, ".")-->Line_6 $$ Pair<String, Integer> nameAndIndex = translateTagName(elements.get(0))[ FD ]
Line_9 $$ XmlTag result = domElement.getXmlTag()-->Line_10 $$ if (result == null || !name.equals(result.getName()))[ FD ]
Line_8 $$ Integer index = nameAndIndex.second-->Line_12 $$ result = getIndexedTag(result, index)[ FD ]
Line_15 $$ name = nameAndIndex.first-->Line_17 $$ result = result.findFirstSubTag(name)[ FD ]
Line_2 $$ public static XmlTag findTag(@NotNull DomElement domElement, @NotNull String path) -->Line_7 $$ String name = nameAndIndex.first[ CD ]
Line_18 $$ if (result == null)-->Line_19 $$ return null[ CD ]
Line_2 $$ public static XmlTag findTag(@NotNull DomElement domElement, @NotNull String path) -->Line_9 $$ XmlTag result = domElement.getXmlTag()[ CD ]
Line_2 $$ public static XmlTag findTag(@NotNull DomElement domElement, @NotNull String path) -->Line_9 $$ XmlTag result = domElement.getXmlTag()[ FD ]
Line_8 $$ Integer index = nameAndIndex.second-->Line_16 $$ index = nameAndIndex.second[ FD ]
Line_9 $$ XmlTag result = domElement.getXmlTag()-->Line_18 $$ if (result == null)[ FD ]
Line_8 $$ Integer index = nameAndIndex.second-->Line_20 $$ result = getIndexedTag(result, index)[ FD ]
Line_17 $$ result = result.findFirstSubTag(name)-->Line_20 $$ result = getIndexedTag(result, index)[ FD ]
Line_7 $$ String name = nameAndIndex.first-->Line_17 $$ result = result.findFirstSubTag(name)[ FD ]
