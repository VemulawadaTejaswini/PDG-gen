Line_5 $$ final List<Set<Object>> list = map.get(primaryKey)-->Line_11 $$ list.get(objIndex).add(o)[ FD ]
Line_5 $$ final List<Set<Object>> list = map.get(primaryKey)-->Line_8 $$ if (list.size() <= objIndex) [ FD ]
Line_4 $$ if (primaryKey != null || singleValuedInvocation) -->Line_7 $$ int objIndex = intersect ? indices[index] : indices[index]++[ CD ]
Line_5 $$ final List<Set<Object>> list = map.get(primaryKey)-->Line_9 $$ list.add(new LinkedHashSet<Object>())[ FD ]
Line_2 $$ private boolean addToMaps(final Object o, final FactoryMap<Object, int[]> counts, final FactoryMap<Object, List<Set<Object>>> map, final int index, final List<Object> results, final boolean singleValuedInvocation, final boolean intersect) -->Line_14 $$ results.add(o)[ CD ]
Line_4 $$ if (primaryKey != null || singleValuedInvocation) -->Line_8 $$ if (list.size() <= objIndex) [ CD ]
Line_2 $$ private boolean addToMaps(final Object o, final FactoryMap<Object, int[]> counts, final FactoryMap<Object, List<Set<Object>>> map, final int index, final List<Object> results, final boolean singleValuedInvocation, final boolean intersect) -->Line_3 $$ final Object primaryKey = getPrimaryKey(o, singleValuedInvocation)[ CD ]
Line_3 $$ final Object primaryKey = getPrimaryKey(o, singleValuedInvocation)-->Line_5 $$ final List<Set<Object>> list = map.get(primaryKey)[ FD ]
Line_4 $$ if (primaryKey != null || singleValuedInvocation) -->Line_5 $$ final List<Set<Object>> list = map.get(primaryKey)[ CD ]
Line_2 $$ private boolean addToMaps(final Object o, final FactoryMap<Object, int[]> counts, final FactoryMap<Object, List<Set<Object>>> map, final int index, final List<Object> results, final boolean singleValuedInvocation, final boolean intersect) -->Line_14 $$ results.add(o)[ FD ]
Line_7 $$ int objIndex = intersect ? indices[index] : indices[index]++-->Line_8 $$ if (list.size() <= objIndex) [ FD ]
Line_2 $$ private boolean addToMaps(final Object o, final FactoryMap<Object, int[]> counts, final FactoryMap<Object, List<Set<Object>>> map, final int index, final List<Object> results, final boolean singleValuedInvocation, final boolean intersect) -->Line_5 $$ final List<Set<Object>> list = map.get(primaryKey)[ FD ]
Line_2 $$ private boolean addToMaps(final Object o, final FactoryMap<Object, int[]> counts, final FactoryMap<Object, List<Set<Object>>> map, final int index, final List<Object> results, final boolean singleValuedInvocation, final boolean intersect) -->Line_3 $$ final Object primaryKey = getPrimaryKey(o, singleValuedInvocation)[ FD ]
Line_4 $$ if (primaryKey != null || singleValuedInvocation) -->Line_6 $$ final int[] indices = counts.get(primaryKey)[ CD ]
Line_3 $$ final Object primaryKey = getPrimaryKey(o, singleValuedInvocation)-->Line_6 $$ final int[] indices = counts.get(primaryKey)[ FD ]
Line_4 $$ if (primaryKey != null || singleValuedInvocation) -->Line_12 $$ return false[ CD ]
Line_8 $$ if (list.size() <= objIndex) -->Line_9 $$ list.add(new LinkedHashSet<Object>())[ CD ]
Line_2 $$ private boolean addToMaps(final Object o, final FactoryMap<Object, int[]> counts, final FactoryMap<Object, List<Set<Object>>> map, final int index, final List<Object> results, final boolean singleValuedInvocation, final boolean intersect) -->Line_4 $$ if (primaryKey != null || singleValuedInvocation) [ FD ]
Line_2 $$ private boolean addToMaps(final Object o, final FactoryMap<Object, int[]> counts, final FactoryMap<Object, List<Set<Object>>> map, final int index, final List<Object> results, final boolean singleValuedInvocation, final boolean intersect) -->Line_6 $$ final int[] indices = counts.get(primaryKey)[ FD ]
Line_2 $$ private boolean addToMaps(final Object o, final FactoryMap<Object, int[]> counts, final FactoryMap<Object, List<Set<Object>>> map, final int index, final List<Object> results, final boolean singleValuedInvocation, final boolean intersect) -->Line_15 $$ return true[ CD ]
Line_2 $$ private boolean addToMaps(final Object o, final FactoryMap<Object, int[]> counts, final FactoryMap<Object, List<Set<Object>>> map, final int index, final List<Object> results, final boolean singleValuedInvocation, final boolean intersect) -->Line_4 $$ if (primaryKey != null || singleValuedInvocation) [ CD ]
Line_2 $$ private boolean addToMaps(final Object o, final FactoryMap<Object, int[]> counts, final FactoryMap<Object, List<Set<Object>>> map, final int index, final List<Object> results, final boolean singleValuedInvocation, final boolean intersect) -->Line_11 $$ list.get(objIndex).add(o)[ FD ]
Line_4 $$ if (primaryKey != null || singleValuedInvocation) -->Line_11 $$ list.get(objIndex).add(o)[ CD ]
Line_7 $$ int objIndex = intersect ? indices[index] : indices[index]++-->Line_11 $$ list.get(objIndex).add(o)[ FD ]
