Line_2 $$ public void expectMessages(MessageExchange... messageExchanges) throws InterruptedException -->Line_4 $$ while (expectedMessages.size() > 0) [ CD ]
Line_5 $$ Message<?> message = this.queue.poll(10000, TimeUnit.MILLISECONDS)-->Line_7 $$ MessageExchange match = findMatch(expectedMessages, message)[ FD ]
Line_4 $$ while (expectedMessages.size() > 0) -->Line_5 $$ Message<?> message = this.queue.poll(10000, TimeUnit.MILLISECONDS)[ CD ]
Line_4 $$ while (expectedMessages.size() > 0) -->Line_9 $$ expectedMessages.remove(match)[ CD ]
Line_5 $$ Message<?> message = this.queue.poll(10000, TimeUnit.MILLISECONDS)-->Line_6 $$ assertNotNull("Timed out waiting for messages, expected [" + expectedMessages + "]", message)[ FD ]
Line_7 $$ MessageExchange match = findMatch(expectedMessages, message)-->Line_8 $$ assertNotNull("Unexpected message=" + message + ", expected [" + expectedMessages + "]", match)[ FD ]
Line_2 $$ public void expectMessages(MessageExchange... messageExchanges) throws InterruptedException -->Line_3 $$ List<MessageExchange> expectedMessages = new ArrayList<MessageExchange>(Arrays.<MessageExchange>asList(messageExchanges))[ FD ]
Line_3 $$ List<MessageExchange> expectedMessages = new ArrayList<MessageExchange>(Arrays.<MessageExchange>asList(messageExchanges))-->Line_4 $$ while (expectedMessages.size() > 0) [ FD ]
Line_3 $$ List<MessageExchange> expectedMessages = new ArrayList<MessageExchange>(Arrays.<MessageExchange>asList(messageExchanges))-->Line_7 $$ MessageExchange match = findMatch(expectedMessages, message)[ FD ]
Line_4 $$ while (expectedMessages.size() > 0) -->Line_6 $$ assertNotNull("Timed out waiting for messages, expected [" + expectedMessages + "]", message)[ CD ]
Line_4 $$ while (expectedMessages.size() > 0) -->Line_7 $$ MessageExchange match = findMatch(expectedMessages, message)[ CD ]
Line_4 $$ while (expectedMessages.size() > 0) -->Line_8 $$ assertNotNull("Unexpected message=" + message + ", expected [" + expectedMessages + "]", match)[ CD ]
Line_3 $$ List<MessageExchange> expectedMessages = new ArrayList<MessageExchange>(Arrays.<MessageExchange>asList(messageExchanges))-->Line_9 $$ expectedMessages.remove(match)[ FD ]
Line_2 $$ public void expectMessages(MessageExchange... messageExchanges) throws InterruptedException -->Line_3 $$ List<MessageExchange> expectedMessages = new ArrayList<MessageExchange>(Arrays.<MessageExchange>asList(messageExchanges))[ CD ]
Line_7 $$ MessageExchange match = findMatch(expectedMessages, message)-->Line_9 $$ expectedMessages.remove(match)[ FD ]
