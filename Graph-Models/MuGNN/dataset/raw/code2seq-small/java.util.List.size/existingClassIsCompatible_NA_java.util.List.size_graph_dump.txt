Line_10 $$ for (PsiMethod constructor : aClass.getConstructors()) -->Line_11 $$ if (constructorIsCompatible(constructor, params))[ FD ]
Line_32 $$ final PsiField field = findFieldAssigned(param, compatibleConstructor)-->Line_37 $$ final PsiMethod getterForField = PropertyUtil.findGetterForField(field)[ FD ]
Line_32 $$ final PsiField field = findFieldAssigned(param, compatibleConstructor)-->Line_41 $$ final PsiMethod setterForField = PropertyUtil.findSetterForField(field)[ FD ]
Line_10 $$ for (PsiMethod constructor : aClass.getConstructors()) -->Line_20 $$ compatibleConstructor = constructor[ FD ]
Line_29 $$ for (int i = 0; i < constructorParams.length; i++) -->Line_37 $$ final PsiMethod getterForField = PropertyUtil.findGetterForField(field)[ CD ]
Line_30 $$ final PsiParameter param = constructorParams[i]-->Line_32 $$ final PsiField field = findFieldAssigned(param, compatibleConstructor)[ FD ]
Line_6 $$ final PsiType paramType = parameterChunk.parameter.type-->Line_9 $$ parameterChunk.setGetter(paramType.getCanonicalText() + "Value")[ FD ]
Line_20 $$ compatibleConstructor = constructor-->Line_27 $$ final PsiParameterList parameterList = compatibleConstructor.getParameterList()[ FD ]
Line_29 $$ for (int i = 0; i < constructorParams.length; i++) -->Line_30 $$ final PsiParameter param = constructorParams[i][ CD ]
Line_37 $$ final PsiMethod getterForField = PropertyUtil.findGetterForField(field)-->Line_39 $$ parameterChunk.setGetter(getterForField.getName())[ FD ]
Line_7 $$ if (TypeConversionUtil.isPrimitiveWrapper(aClass.getQualifiedName())) -->Line_9 $$ parameterChunk.setGetter(paramType.getCanonicalText() + "Value")[ CD ]
Line_42 $$ if (setterForField != null) -->Line_43 $$ parameterChunk.setSetter(setterForField.getName())[ CD ]
Line_27 $$ final PsiParameterList parameterList = compatibleConstructor.getParameterList()-->Line_28 $$ final PsiParameter[] constructorParams = parameterList.getParameters()[ FD ]
Line_29 $$ for (int i = 0; i < constructorParams.length; i++) -->Line_41 $$ final PsiMethod setterForField = PropertyUtil.findSetterForField(field)[ CD ]
Line_10 $$ for (PsiMethod constructor : aClass.getConstructors()) -->Line_19 $$ if (constructorIsCompatible(constructor, params)) [ FD ]
Line_5 $$ final ParameterChunk parameterChunk = params.get(0)-->Line_8 $$ parameterChunk.setField(aClass.findFieldByName("value", false))[ FD ]
Line_29 $$ for (int i = 0; i < constructorParams.length; i++) -->Line_31 $$ final ParameterChunk parameterChunk = params.get(i)[ CD ]
Line_32 $$ final PsiField field = findFieldAssigned(param, compatibleConstructor)-->Line_36 $$ parameterChunk.setField(field)[ FD ]
Line_33 $$ if (field == null) -->Line_34 $$ return null[ CD ]
Line_29 $$ for (int i = 0; i < constructorParams.length; i++) -->Line_33 $$ if (field == null) [ CD ]
Line_29 $$ for (int i = 0; i < constructorParams.length; i++) -->Line_38 $$ if (getterForField != null) [ CD ]
Line_29 $$ for (int i = 0; i < constructorParams.length; i++) -->Line_42 $$ if (setterForField != null) [ CD ]
Line_29 $$ for (int i = 0; i < constructorParams.length; i++) -->Line_32 $$ final PsiField field = findFieldAssigned(param, compatibleConstructor)[ CD ]
Line_24 $$ if (compatibleConstructor == null) -->Line_25 $$ return null[ CD ]
Line_4 $$ if (params.size() == 1) -->Line_5 $$ final ParameterChunk parameterChunk = params.get(0)[ CD ]
Line_29 $$ for (int i = 0; i < constructorParams.length; i++) -->Line_36 $$ parameterChunk.setField(field)[ CD ]
Line_5 $$ final ParameterChunk parameterChunk = params.get(0)-->Line_9 $$ parameterChunk.setGetter(paramType.getCanonicalText() + "Value")[ FD ]
Line_20 $$ compatibleConstructor = constructor-->Line_32 $$ final PsiField field = findFieldAssigned(param, compatibleConstructor)[ FD ]
Line_4 $$ if (params.size() == 1) -->Line_7 $$ if (TypeConversionUtil.isPrimitiveWrapper(aClass.getQualifiedName())) [ CD ]
Line_31 $$ final ParameterChunk parameterChunk = params.get(i)-->Line_36 $$ parameterChunk.setField(field)[ FD ]
Line_17 $$ PsiMethod compatibleConstructor = null-->Line_27 $$ final PsiParameterList parameterList = compatibleConstructor.getParameterList()[ FD ]
Line_7 $$ if (TypeConversionUtil.isPrimitiveWrapper(aClass.getQualifiedName())) -->Line_8 $$ parameterChunk.setField(aClass.findFieldByName("value", false))[ CD ]
Line_17 $$ PsiMethod compatibleConstructor = null-->Line_32 $$ final PsiField field = findFieldAssigned(param, compatibleConstructor)[ FD ]
Line_20 $$ compatibleConstructor = constructor-->Line_24 $$ if (compatibleConstructor == null) [ FD ]
Line_31 $$ final ParameterChunk parameterChunk = params.get(i)-->Line_43 $$ parameterChunk.setSetter(setterForField.getName())[ FD ]
Line_17 $$ PsiMethod compatibleConstructor = null-->Line_24 $$ if (compatibleConstructor == null) [ FD ]
Line_11 $$ if (constructorIsCompatible(constructor, params))-->Line_12 $$ return constructor[ CD ]
Line_32 $$ final PsiField field = findFieldAssigned(param, compatibleConstructor)-->Line_33 $$ if (field == null) [ FD ]
Line_4 $$ if (params.size() == 1) -->Line_6 $$ final PsiType paramType = parameterChunk.parameter.type[ CD ]
Line_19 $$ if (constructorIsCompatible(constructor, params)) -->Line_20 $$ compatibleConstructor = constructor[ CD ]
Line_38 $$ if (getterForField != null) -->Line_39 $$ parameterChunk.setGetter(getterForField.getName())[ CD ]
Line_17 $$ PsiMethod compatibleConstructor = null-->Line_20 $$ compatibleConstructor = constructor[ FD ]
Line_29 $$ for (int i = 0; i < constructorParams.length; i++) -->Line_31 $$ final ParameterChunk parameterChunk = params.get(i)[ FD ]
Line_5 $$ final ParameterChunk parameterChunk = params.get(0)-->Line_36 $$ parameterChunk.setField(field)[ FD ]
Line_41 $$ final PsiMethod setterForField = PropertyUtil.findSetterForField(field)-->Line_43 $$ parameterChunk.setSetter(setterForField.getName())[ FD ]
Line_37 $$ final PsiMethod getterForField = PropertyUtil.findGetterForField(field)-->Line_38 $$ if (getterForField != null) [ FD ]
Line_31 $$ final ParameterChunk parameterChunk = params.get(i)-->Line_39 $$ parameterChunk.setGetter(getterForField.getName())[ FD ]
Line_5 $$ final ParameterChunk parameterChunk = params.get(0)-->Line_39 $$ parameterChunk.setGetter(getterForField.getName())[ FD ]
Line_41 $$ final PsiMethod setterForField = PropertyUtil.findSetterForField(field)-->Line_42 $$ if (setterForField != null) [ FD ]
Line_5 $$ final ParameterChunk parameterChunk = params.get(0)-->Line_43 $$ parameterChunk.setSetter(setterForField.getName())[ FD ]
