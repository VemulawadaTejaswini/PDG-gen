Line_5 $$ for (int i = 0; i < myChildren.size(); i++) -->Line_6 $$ TreeItem<Data> item = myChildren.get(i)[ FD ]
Line_4 $$ int idx = -1-->Line_15 $$ myChildren.add(idx, child)[ FD ]
Line_12 $$ if (idx == -1) -->Line_13 $$ myChildren.add(child)[ CD ]
Line_2 $$ public void addChildAfter(TreeItem<Data> child, TreeItem<Data> after) -->Line_15 $$ myChildren.add(idx, child)[ FD ]
Line_7 $$ if (item.equals(after)) -->Line_8 $$ idx = i[ CD ]
Line_8 $$ idx = i-->Line_15 $$ myChildren.add(idx, child)[ FD ]
Line_4 $$ int idx = -1-->Line_12 $$ if (idx == -1) [ FD ]
Line_8 $$ idx = i-->Line_12 $$ if (idx == -1) [ FD ]
Line_12 $$ if (idx == -1) -->Line_15 $$ myChildren.add(idx, child)[ CD ]
Line_2 $$ public void addChildAfter(TreeItem<Data> child, TreeItem<Data> after) -->Line_4 $$ int idx = -1[ CD ]
Line_4 $$ int idx = -1-->Line_8 $$ idx = i[ FD ]
Line_2 $$ public void addChildAfter(TreeItem<Data> child, TreeItem<Data> after) -->Line_3 $$ child.setParent(this)[ CD ]
Line_5 $$ for (int i = 0; i < myChildren.size(); i++) -->Line_8 $$ idx = i[ FD ]
Line_6 $$ TreeItem<Data> item = myChildren.get(i)-->Line_7 $$ if (item.equals(after)) [ FD ]
Line_2 $$ public void addChildAfter(TreeItem<Data> child, TreeItem<Data> after) -->Line_7 $$ if (item.equals(after)) [ FD ]
Line_2 $$ public void addChildAfter(TreeItem<Data> child, TreeItem<Data> after) -->Line_5 $$ for (int i = 0; i < myChildren.size(); i++) [ CD ]
Line_5 $$ for (int i = 0; i < myChildren.size(); i++) -->Line_6 $$ TreeItem<Data> item = myChildren.get(i)[ CD ]
Line_5 $$ for (int i = 0; i < myChildren.size(); i++) -->Line_7 $$ if (item.equals(after)) [ CD ]
Line_2 $$ public void addChildAfter(TreeItem<Data> child, TreeItem<Data> after) -->Line_13 $$ myChildren.add(child)[ FD ]
Line_2 $$ public void addChildAfter(TreeItem<Data> child, TreeItem<Data> after) -->Line_3 $$ child.setParent(this)[ FD ]
Line_2 $$ public void addChildAfter(TreeItem<Data> child, TreeItem<Data> after) -->Line_12 $$ if (idx == -1) [ CD ]
