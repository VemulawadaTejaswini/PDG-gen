Line_2 $$ public void testSpeculativeMapFailedFetchFailure() -->Line_7 $$ assertTaskScheduledState()[ CD ]
Line_2 $$ public void testSpeculativeMapFailedFetchFailure() -->Line_6 $$ mockTask.handle(new TaskTAttemptEvent(taskAttempts.get(1).getAttemptId(), TaskEventType.T_ATTEMPT_FAILED))[ CD ]
Line_2 $$ public void testSpeculativeMapFailedFetchFailure() -->Line_5 $$ assertEquals(2, taskAttempts.size())[ CD ]
Line_2 $$ public void testSpeculativeMapFailedFetchFailure() -->Line_8 $$ assertEquals(3, taskAttempts.size())[ CD ]
Line_2 $$ public void testSpeculativeMapFailedFetchFailure() -->Line_3 $$ mockTask = createMockTask(TaskType.MAP)[ CD ]
Line_2 $$ public void testSpeculativeMapFailedFetchFailure() -->Line_4 $$ runSpeculativeTaskAttemptSucceeds(TaskEventType.T_ATTEMPT_FAILED)[ CD ]
