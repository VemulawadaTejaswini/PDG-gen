Line_2 $$ public void testNetgroupShell() throws Exception -->Line_8 $$ List<String> groupList = groups.getGroups(username)[ CD ]
Line_8 $$ List<String> groupList = groups.getGroups(username)-->Line_9 $$ LOG.info(username + " has GROUPS: " + groupList.toString())[ FD ]
Line_8 $$ List<String> groupList = groups.getGroups(username)-->Line_10 $$ assertTrue(groupList.size() > 0)[ FD ]
Line_2 $$ public void testNetgroupShell() throws Exception -->Line_4 $$ Configuration conf = new Configuration()[ CD ]
Line_2 $$ public void testNetgroupShell() throws Exception -->Line_3 $$ Logger.getRootLogger().setLevel(Level.DEBUG)[ CD ]
Line_6 $$ Groups groups = new Groups(conf)-->Line_8 $$ List<String> groupList = groups.getGroups(username)[ FD ]
Line_2 $$ public void testNetgroupShell() throws Exception -->Line_9 $$ LOG.info(username + " has GROUPS: " + groupList.toString())[ CD ]
Line_2 $$ public void testNetgroupShell() throws Exception -->Line_10 $$ assertTrue(groupList.size() > 0)[ CD ]
Line_2 $$ public void testNetgroupShell() throws Exception -->Line_5 $$ conf.set(CommonConfigurationKeys.HADOOP_SECURITY_GROUP_MAPPING, "org.apache.hadoop.security.ShellBasedUnixGroupsNetgroupMapping")[ CD ]
Line_2 $$ public void testNetgroupShell() throws Exception -->Line_7 $$ String username = System.getProperty("user.name")[ CD ]
Line_4 $$ Configuration conf = new Configuration()-->Line_5 $$ conf.set(CommonConfigurationKeys.HADOOP_SECURITY_GROUP_MAPPING, "org.apache.hadoop.security.ShellBasedUnixGroupsNetgroupMapping")[ FD ]
Line_2 $$ public void testNetgroupShell() throws Exception -->Line_6 $$ Groups groups = new Groups(conf)[ CD ]
Line_7 $$ String username = System.getProperty("user.name")-->Line_8 $$ List<String> groupList = groups.getGroups(username)[ FD ]
