Line_6 $$ HistoryType type = null-->Line_9 $$ type = HistoryType.ACTION[ FD ]
Line_8 $$ if (isActionValue(value)) -->Line_9 $$ type = HistoryType.ACTION[ CD ]
Line_27 $$ final PropertiesComponent storage = PropertiesComponent.getInstance(project)-->Line_49 $$ storage.setValues(SE_HISTORY_KEY, newValues)[ FD ]
Line_15 $$ if (value instanceof ChooseRunConfigurationPopup.ItemWrapper) -->Line_18 $$ if (value instanceof PsiElement) [ CD ]
Line_18 $$ if (value instanceof PsiElement) -->Line_22 $$ if (name != null) [ CD ]
Line_12 $$ if (value instanceof VirtualFile) -->Line_15 $$ if (value instanceof ChooseRunConfigurationPopup.ItemWrapper) [ CD ]
Line_20 $$ final Language language = psiElement.getLanguage()-->Line_21 $$ final String name = LanguagePsiElementExternalizer.INSTANCE.forLanguage(language).getQualifiedName(psiElement)[ FD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_27 $$ final PropertiesComponent storage = PropertiesComponent.getInstance(project)[ CD ]
Line_8 $$ if (isActionValue(value)) -->Line_12 $$ if (value instanceof VirtualFile) [ CD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_6 $$ HistoryType type = null[ CD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_41 $$ history.add(0, new HistoryItem(text, type == null ? null : type.name(), fqn))[ CD ]
Line_11 $$ fqn = ActionManager.getInstance().getId(action)-->Line_24 $$ fqn = language.getID() + "://" + name[ FD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_27 $$ final PropertiesComponent storage = PropertiesComponent.getInstance(project)[ FD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_3 $$ if (project == null || project.isDisposed() || !project.isInitialized()) [ FD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_7 $$ String fqn = null[ CD ]
Line_43 $$ history = history.subList(0, MAX_SEARCH_EVERYWHERE_HISTORY)-->Line_45 $$ final String[] newValues = new String[history.size()][ FD ]
Line_21 $$ final String name = LanguagePsiElementExternalizer.INSTANCE.forLanguage(language).getQualifiedName(psiElement)-->Line_24 $$ fqn = language.getID() + "://" + name[ FD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_42 $$ if (history.size() > MAX_SEARCH_EVERYWHERE_HISTORY) [ CD ]
Line_13 $$ type = HistoryType.FILE-->Line_16 $$ type = HistoryType.RUN_CONFIGURATION[ FD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_33 $$ if (split.length != 3 || text.equals(split[0])) [ FD ]
Line_29 $$ List<HistoryItem> history = new ArrayList<HistoryItem>()-->Line_45 $$ final String[] newValues = new String[history.size()][ FD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_49 $$ storage.setValues(SE_HISTORY_KEY, newValues)[ CD ]
Line_10 $$ AnAction action = (AnAction) (value instanceof GotoActionModel.ActionWrapper ? ((GotoActionModel.ActionWrapper) value).getAction() : value)-->Line_11 $$ fqn = ActionManager.getInstance().getId(action)[ FD ]
Line_19 $$ final PsiElement psiElement = (PsiElement) value-->Line_20 $$ final Language language = psiElement.getLanguage()[ FD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_3 $$ if (project == null || project.isDisposed() || !project.isInitialized()) [ CD ]
Line_14 $$ fqn = ((VirtualFile) value).getUrl()-->Line_24 $$ fqn = language.getID() + "://" + name[ FD ]
Line_46 $$ for (int i = 0; i < newValues.length; i++) -->Line_47 $$ newValues[i] = history.get(i).toString()[ CD ]
Line_15 $$ if (value instanceof ChooseRunConfigurationPopup.ItemWrapper) -->Line_17 $$ fqn = ((ChooseRunConfigurationPopup.ItemWrapper) value).getText()[ CD ]
Line_6 $$ HistoryType type = null-->Line_13 $$ type = HistoryType.FILE[ FD ]
Line_29 $$ List<HistoryItem> history = new ArrayList<HistoryItem>()-->Line_47 $$ newValues[i] = history.get(i).toString()[ FD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_8 $$ if (isActionValue(value)) [ FD ]
Line_29 $$ List<HistoryItem> history = new ArrayList<HistoryItem>()-->Line_42 $$ if (history.size() > MAX_SEARCH_EVERYWHERE_HISTORY) [ FD ]
Line_23 $$ type = HistoryType.PSI-->Line_41 $$ history.add(0, new HistoryItem(text, type == null ? null : type.name(), fqn))[ FD ]
Line_11 $$ fqn = ActionManager.getInstance().getId(action)-->Line_14 $$ fqn = ((VirtualFile) value).getUrl()[ FD ]
Line_29 $$ List<HistoryItem> history = new ArrayList<HistoryItem>()-->Line_37 $$ history.add(new HistoryItem(split[0], split[1], split[2]))[ FD ]
Line_6 $$ HistoryType type = null-->Line_23 $$ type = HistoryType.PSI[ FD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_12 $$ if (value instanceof VirtualFile) [ FD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_30 $$ if (values != null) [ CD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_15 $$ if (value instanceof ChooseRunConfigurationPopup.ItemWrapper) [ FD ]
Line_45 $$ final String[] newValues = new String[history.size()]-->Line_49 $$ storage.setValues(SE_HISTORY_KEY, newValues)[ FD ]
Line_9 $$ type = HistoryType.ACTION-->Line_23 $$ type = HistoryType.PSI[ FD ]
Line_20 $$ final Language language = psiElement.getLanguage()-->Line_24 $$ fqn = language.getID() + "://" + name[ FD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_8 $$ if (isActionValue(value)) [ CD ]
Line_7 $$ String fqn = null-->Line_14 $$ fqn = ((VirtualFile) value).getUrl()[ FD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_29 $$ List<HistoryItem> history = new ArrayList<HistoryItem>()[ CD ]
Line_13 $$ type = HistoryType.FILE-->Line_41 $$ history.add(0, new HistoryItem(text, type == null ? null : type.name(), fqn))[ FD ]
Line_13 $$ type = HistoryType.FILE-->Line_23 $$ type = HistoryType.PSI[ FD ]
Line_46 $$ for (int i = 0; i < newValues.length; i++) -->Line_47 $$ newValues[i] = history.get(i).toString()[ FD ]
Line_12 $$ if (value instanceof VirtualFile) -->Line_13 $$ type = HistoryType.FILE[ CD ]
Line_29 $$ List<HistoryItem> history = new ArrayList<HistoryItem>()-->Line_41 $$ history.add(0, new HistoryItem(text, type == null ? null : type.name(), fqn))[ FD ]
Line_14 $$ fqn = ((VirtualFile) value).getUrl()-->Line_17 $$ fqn = ((ChooseRunConfigurationPopup.ItemWrapper) value).getText()[ FD ]
Line_42 $$ if (history.size() > MAX_SEARCH_EVERYWHERE_HISTORY) -->Line_43 $$ history = history.subList(0, MAX_SEARCH_EVERYWHERE_HISTORY)[ CD ]
Line_28 $$ final String[] values = storage.getValues(SE_HISTORY_KEY)-->Line_30 $$ if (values != null) [ FD ]
Line_22 $$ if (name != null) -->Line_23 $$ type = HistoryType.PSI[ CD ]
Line_22 $$ if (name != null) -->Line_24 $$ fqn = language.getID() + "://" + name[ CD ]
Line_29 $$ List<HistoryItem> history = new ArrayList<HistoryItem>()-->Line_43 $$ history = history.subList(0, MAX_SEARCH_EVERYWHERE_HISTORY)[ FD ]
Line_15 $$ if (value instanceof ChooseRunConfigurationPopup.ItemWrapper) -->Line_16 $$ type = HistoryType.RUN_CONFIGURATION[ CD ]
Line_7 $$ String fqn = null-->Line_11 $$ fqn = ActionManager.getInstance().getId(action)[ FD ]
Line_18 $$ if (value instanceof PsiElement) -->Line_20 $$ final Language language = psiElement.getLanguage()[ CD ]
Line_21 $$ final String name = LanguagePsiElementExternalizer.INSTANCE.forLanguage(language).getQualifiedName(psiElement)-->Line_22 $$ if (name != null) [ FD ]
Line_8 $$ if (isActionValue(value)) -->Line_10 $$ AnAction action = (AnAction) (value instanceof GotoActionModel.ActionWrapper ? ((GotoActionModel.ActionWrapper) value).getAction() : value)[ CD ]
Line_7 $$ String fqn = null-->Line_24 $$ fqn = language.getID() + "://" + name[ FD ]
Line_12 $$ if (value instanceof VirtualFile) -->Line_14 $$ fqn = ((VirtualFile) value).getUrl()[ CD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_28 $$ final String[] values = storage.getValues(SE_HISTORY_KEY)[ CD ]
Line_6 $$ HistoryType type = null-->Line_41 $$ history.add(0, new HistoryItem(text, type == null ? null : type.name(), fqn))[ FD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_46 $$ for (int i = 0; i < newValues.length; i++) [ CD ]
Line_31 $$ for (String s : values) -->Line_32 $$ final String[] split = s.split("\t")[ FD ]
Line_9 $$ type = HistoryType.ACTION-->Line_16 $$ type = HistoryType.RUN_CONFIGURATION[ FD ]
Line_8 $$ if (isActionValue(value)) -->Line_11 $$ fqn = ActionManager.getInstance().getId(action)[ CD ]
Line_18 $$ if (value instanceof PsiElement) -->Line_19 $$ final PsiElement psiElement = (PsiElement) value[ CD ]
Line_6 $$ HistoryType type = null-->Line_16 $$ type = HistoryType.RUN_CONFIGURATION[ FD ]
Line_43 $$ history = history.subList(0, MAX_SEARCH_EVERYWHERE_HISTORY)-->Line_47 $$ newValues[i] = history.get(i).toString()[ FD ]
Line_36 $$ if (!StringUtil.isEmpty(split[0])) -->Line_37 $$ history.add(new HistoryItem(split[0], split[1], split[2]))[ CD ]
Line_19 $$ final PsiElement psiElement = (PsiElement) value-->Line_21 $$ final String name = LanguagePsiElementExternalizer.INSTANCE.forLanguage(language).getQualifiedName(psiElement)[ FD ]
Line_9 $$ type = HistoryType.ACTION-->Line_41 $$ history.add(0, new HistoryItem(text, type == null ? null : type.name(), fqn))[ FD ]
Line_18 $$ if (value instanceof PsiElement) -->Line_21 $$ final String name = LanguagePsiElementExternalizer.INSTANCE.forLanguage(language).getQualifiedName(psiElement)[ CD ]
Line_3 $$ if (project == null || project.isDisposed() || !project.isInitialized()) -->Line_4 $$ return[ CD ]
Line_7 $$ String fqn = null-->Line_17 $$ fqn = ((ChooseRunConfigurationPopup.ItemWrapper) value).getText()[ FD ]
Line_11 $$ fqn = ActionManager.getInstance().getId(action)-->Line_17 $$ fqn = ((ChooseRunConfigurationPopup.ItemWrapper) value).getText()[ FD ]
Line_9 $$ type = HistoryType.ACTION-->Line_13 $$ type = HistoryType.FILE[ FD ]
Line_16 $$ type = HistoryType.RUN_CONFIGURATION-->Line_41 $$ history.add(0, new HistoryItem(text, type == null ? null : type.name(), fqn))[ FD ]
Line_27 $$ final PropertiesComponent storage = PropertiesComponent.getInstance(project)-->Line_28 $$ final String[] values = storage.getValues(SE_HISTORY_KEY)[ FD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_18 $$ if (value instanceof PsiElement) [ FD ]
Line_17 $$ fqn = ((ChooseRunConfigurationPopup.ItemWrapper) value).getText()-->Line_24 $$ fqn = language.getID() + "://" + name[ FD ]
Line_2 $$ private static void saveHistory(Project project, String text, Object value) -->Line_45 $$ final String[] newValues = new String[history.size()][ CD ]
Line_16 $$ type = HistoryType.RUN_CONFIGURATION-->Line_23 $$ type = HistoryType.PSI[ FD ]
