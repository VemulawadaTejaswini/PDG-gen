Line_21 $$ t = s.beginTransaction()-->Line_40 $$ t = s.beginTransaction()[ FD ]
Line_29 $$ s = openSession()-->Line_39 $$ s = openSession()[ FD ]
Line_20 $$ s = openSession()-->Line_36 $$ s.close()[ FD ]
Line_5 $$ Session s = openSession()-->Line_36 $$ s.close()[ FD ]
Line_20 $$ s = openSession()-->Line_29 $$ s = openSession()[ FD ]
Line_5 $$ Session s = openSession()-->Line_25 $$ s.close()[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_31 $$ result = s.createQuery(queryString).setCacheable(true).list()[ CD ]
Line_20 $$ s = openSession()-->Line_38 $$ assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(), 1)[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_28 $$ sessionFactory().getCache().evictEntityRegion(Item.class)[ CD ]
Line_29 $$ s = openSession()-->Line_38 $$ assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(), 1)[ FD ]
Line_5 $$ Session s = openSession()-->Line_16 $$ s.close()[ FD ]
Line_5 $$ Session s = openSession()-->Line_39 $$ s = openSession()[ FD ]
Line_17 $$ final String queryString = "from Item i where i.name like '%widget'"-->Line_22 $$ List result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_21 $$ t = s.beginTransaction()-->Line_42 $$ t.commit()[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_18 $$ QueryStatistics qs = s.getSessionFactory().getStatistics().getQueryStatistics(queryString)[ CD ]
Line_20 $$ s = openSession()-->Line_21 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Session s = openSession()-->Line_6 $$ Transaction t = s.beginTransaction()[ FD ]
Line_22 $$ List result = s.createQuery(queryString).setCacheable(true).list()-->Line_31 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_21 $$ t = s.beginTransaction()-->Line_24 $$ t.commit()[ FD ]
Line_18 $$ QueryStatistics qs = s.getSessionFactory().getStatistics().getQueryStatistics(queryString)-->Line_26 $$ assertEquals(qs.getCacheHitCount(), 0)[ FD ]
Line_10 $$ Item i2 = new Item()-->Line_12 $$ i2.setDescription("Another decent widget.")[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_3 $$ sessionFactory().getCache().evictQueryRegions()[ CD ]
Line_30 $$ t = s.beginTransaction()-->Line_40 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_36 $$ s.close()[ CD ]
Line_22 $$ List result = s.createQuery(queryString).setCacheable(true).list()-->Line_32 $$ assertEquals(result.size(), 2)[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_35 $$ t.commit()[ CD ]
Line_7 $$ Item i = new Item()-->Line_13 $$ s.persist(i)[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_17 $$ final String queryString = "from Item i where i.name like '%widget'"[ CD ]
Line_5 $$ Session s = openSession()-->Line_20 $$ s = openSession()[ FD ]
Line_29 $$ s = openSession()-->Line_40 $$ t = s.beginTransaction()[ FD ]
Line_40 $$ t = s.beginTransaction()-->Line_42 $$ t.commit()[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_27 $$ assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(), 0)[ CD ]
Line_39 $$ s = openSession()-->Line_43 $$ s.close()[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_15 $$ t.commit()[ CD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_29 $$ s = openSession()[ CD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_5 $$ Session s = openSession()[ CD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_42 $$ t.commit()[ FD ]
Line_5 $$ Session s = openSession()-->Line_14 $$ s.persist(i2)[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_38 $$ assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(), 1)[ CD ]
Line_5 $$ Session s = openSession()-->Line_21 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_13 $$ s.persist(i)[ CD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_11 $$ i2.setName("other widget")[ CD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_20 $$ s = openSession()[ CD ]
Line_31 $$ result = s.createQuery(queryString).setCacheable(true).list()-->Line_33 $$ assertTrue(Hibernate.isInitialized(result.get(0)))[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_42 $$ t.commit()[ CD ]
Line_5 $$ Session s = openSession()-->Line_43 $$ s.close()[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_4 $$ sessionFactory().getStatistics().clear()[ CD ]
Line_5 $$ Session s = openSession()-->Line_22 $$ List result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_27 $$ assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(), 0)[ FD ]
Line_10 $$ Item i2 = new Item()-->Line_11 $$ i2.setName("other widget")[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_23 $$ assertEquals(result.size(), 2)[ CD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_39 $$ s = openSession()[ CD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_24 $$ t.commit()[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_40 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_34 $$ assertTrue(Hibernate.isInitialized(result.get(1)))[ CD ]
Line_20 $$ s = openSession()-->Line_25 $$ s.close()[ FD ]
Line_20 $$ s = openSession()-->Line_40 $$ t = s.beginTransaction()[ FD ]
Line_22 $$ List result = s.createQuery(queryString).setCacheable(true).list()-->Line_23 $$ assertEquals(result.size(), 2)[ FD ]
Line_29 $$ s = openSession()-->Line_30 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Session s = openSession()-->Line_31 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_38 $$ assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(), 1)[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_30 $$ t = s.beginTransaction()[ FD ]
Line_20 $$ s = openSession()-->Line_31 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_39 $$ s = openSession()-->Line_41 $$ s.createQuery("delete Item").executeUpdate()[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_35 $$ t.commit()[ FD ]
Line_18 $$ QueryStatistics qs = s.getSessionFactory().getStatistics().getQueryStatistics(queryString)-->Line_37 $$ assertEquals(qs.getCacheHitCount(), 1)[ FD ]
Line_20 $$ s = openSession()-->Line_27 $$ assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(), 0)[ FD ]
Line_21 $$ t = s.beginTransaction()-->Line_35 $$ t.commit()[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_26 $$ assertEquals(qs.getCacheHitCount(), 0)[ CD ]
Line_5 $$ Session s = openSession()-->Line_41 $$ s.createQuery("delete Item").executeUpdate()[ FD ]
Line_5 $$ Session s = openSession()-->Line_13 $$ s.persist(i)[ FD ]
Line_20 $$ s = openSession()-->Line_30 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_37 $$ assertEquals(qs.getCacheHitCount(), 1)[ CD ]
Line_29 $$ s = openSession()-->Line_43 $$ s.close()[ FD ]
Line_7 $$ Item i = new Item()-->Line_9 $$ i.setDescription("A really top-quality, full-featured widget.")[ FD ]
Line_20 $$ s = openSession()-->Line_39 $$ s = openSession()[ FD ]
Line_29 $$ s = openSession()-->Line_41 $$ s.createQuery("delete Item").executeUpdate()[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_9 $$ i.setDescription("A really top-quality, full-featured widget.")[ CD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_19 $$ Thread.sleep(200)[ CD ]
Line_5 $$ Session s = openSession()-->Line_30 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_43 $$ s.close()[ CD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_21 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_30 $$ t = s.beginTransaction()[ CD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_22 $$ List result = s.createQuery(queryString).setCacheable(true).list()[ CD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_24 $$ t.commit()[ CD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_12 $$ i2.setDescription("Another decent widget.")[ CD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_8 $$ i.setName("widget")[ CD ]
Line_7 $$ Item i = new Item()-->Line_8 $$ i.setName("widget")[ FD ]
Line_30 $$ t = s.beginTransaction()-->Line_35 $$ t.commit()[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_25 $$ s.close()[ CD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_41 $$ s.createQuery("delete Item").executeUpdate()[ CD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_15 $$ t.commit()[ FD ]
Line_22 $$ List result = s.createQuery(queryString).setCacheable(true).list()-->Line_33 $$ assertTrue(Hibernate.isInitialized(result.get(0)))[ FD ]
Line_5 $$ Session s = openSession()-->Line_18 $$ QueryStatistics qs = s.getSessionFactory().getStatistics().getQueryStatistics(queryString)[ FD ]
Line_10 $$ Item i2 = new Item()-->Line_14 $$ s.persist(i2)[ FD ]
Line_17 $$ final String queryString = "from Item i where i.name like '%widget'"-->Line_31 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_21 $$ t = s.beginTransaction()-->Line_30 $$ t = s.beginTransaction()[ FD ]
Line_31 $$ result = s.createQuery(queryString).setCacheable(true).list()-->Line_32 $$ assertEquals(result.size(), 2)[ FD ]
Line_31 $$ result = s.createQuery(queryString).setCacheable(true).list()-->Line_34 $$ assertTrue(Hibernate.isInitialized(result.get(1)))[ FD ]
Line_5 $$ Session s = openSession()-->Line_29 $$ s = openSession()[ FD ]
Line_20 $$ s = openSession()-->Line_41 $$ s.createQuery("delete Item").executeUpdate()[ FD ]
Line_30 $$ t = s.beginTransaction()-->Line_42 $$ t.commit()[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_10 $$ Item i2 = new Item()[ CD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_33 $$ assertTrue(Hibernate.isInitialized(result.get(0)))[ CD ]
Line_29 $$ s = openSession()-->Line_31 $$ result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_22 $$ List result = s.createQuery(queryString).setCacheable(true).list()-->Line_34 $$ assertTrue(Hibernate.isInitialized(result.get(1)))[ FD ]
Line_39 $$ s = openSession()-->Line_40 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_16 $$ s.close()[ CD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_21 $$ t = s.beginTransaction()[ CD ]
Line_20 $$ s = openSession()-->Line_43 $$ s.close()[ FD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_6 $$ Transaction t = s.beginTransaction()[ CD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_14 $$ s.persist(i2)[ CD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_32 $$ assertEquals(result.size(), 2)[ CD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_7 $$ Item i = new Item()[ CD ]
Line_2 $$ public void testQueryCacheFetch() throws Exception -->Line_40 $$ t = s.beginTransaction()[ CD ]
Line_5 $$ Session s = openSession()-->Line_40 $$ t = s.beginTransaction()[ FD ]
Line_17 $$ final String queryString = "from Item i where i.name like '%widget'"-->Line_18 $$ QueryStatistics qs = s.getSessionFactory().getStatistics().getQueryStatistics(queryString)[ FD ]
Line_20 $$ s = openSession()-->Line_22 $$ List result = s.createQuery(queryString).setCacheable(true).list()[ FD ]
Line_29 $$ s = openSession()-->Line_36 $$ s.close()[ FD ]
