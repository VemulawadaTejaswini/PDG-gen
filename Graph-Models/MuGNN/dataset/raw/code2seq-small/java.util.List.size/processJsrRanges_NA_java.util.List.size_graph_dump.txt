Line_9 $$ List<JsrRecord> lstJsr = new ArrayList<JsrRecord>()-->Line_12 $$ for (; i < lstJsr.size(); i++) [ FD ]
Line_2 $$ private int processJsrRanges() -->Line_9 $$ List<JsrRecord> lstJsr = new ArrayList<JsrRecord>()[ CD ]
Line_9 $$ List<JsrRecord> lstJsr = new ArrayList<JsrRecord>()-->Line_24 $$ JsrRecord arr1 = lstJsr.get(j)[ FD ]
Line_27 $$ Set<BasicBlock> setc = new HashSet<BasicBlock>(set)-->Line_28 $$ setc.retainAll(set1)[ FD ]
Line_25 $$ Set<BasicBlock> set1 = arr1.range-->Line_28 $$ setc.retainAll(set1)[ FD ]
Line_23 $$ for (int j = i + 1; j < lstJsr.size(); j++) -->Line_24 $$ JsrRecord arr1 = lstJsr.get(j)[ CD ]
Line_2 $$ private int processJsrRanges() -->Line_3 $$ List<JsrRecord> lstJsrAll = new ArrayList<JsrRecord>()[ CD ]
Line_6 $$ BasicBlock ret = ent.getValue()-->Line_7 $$ lstJsrAll.add(new JsrRecord(jsr, getJsrRange(jsr, ret), ret))[ FD ]
Line_29 $$ if (!setc.isEmpty()) -->Line_30 $$ splitJsrRange(arr.jsr, arr.ret, setc)[ CD ]
Line_20 $$ for (int i = 0; i < lstJsr.size(); i++) -->Line_23 $$ for (int j = i + 1; j < lstJsr.size(); j++) [ CD ]
Line_4 $$ for (Entry<BasicBlock, BasicBlock> ent : subroutines.entrySet()) -->Line_5 $$ BasicBlock jsr = ent.getKey()[ FD ]
Line_11 $$ int i = 0-->Line_13 $$ JsrRecord arrJsr = lstJsr.get(i)[ FD ]
Line_12 $$ for (; i < lstJsr.size(); i++) -->Line_13 $$ JsrRecord arrJsr = lstJsr.get(i)[ CD ]
Line_4 $$ for (Entry<BasicBlock, BasicBlock> ent : subroutines.entrySet()) -->Line_6 $$ BasicBlock ret = ent.getValue()[ FD ]
Line_20 $$ for (int i = 0; i < lstJsr.size(); i++) -->Line_21 $$ JsrRecord arr = lstJsr.get(i)[ FD ]
Line_27 $$ Set<BasicBlock> setc = new HashSet<BasicBlock>(set)-->Line_30 $$ splitJsrRange(arr.jsr, arr.ret, setc)[ FD ]
Line_11 $$ int i = 0-->Line_18 $$ lstJsr.add(i, arr)[ FD ]
Line_26 $$ if (!set.contains(arr1.jsr) && !set1.contains(arr.jsr)) -->Line_28 $$ setc.retainAll(set1)[ CD ]
Line_20 $$ for (int i = 0; i < lstJsr.size(); i++) -->Line_22 $$ Set<BasicBlock> set = arr.range[ CD ]
Line_29 $$ if (!setc.isEmpty()) -->Line_31 $$ return 1[ CD ]
Line_11 $$ int i = 0-->Line_12 $$ for (; i < lstJsr.size(); i++) [ FD ]
Line_9 $$ List<JsrRecord> lstJsr = new ArrayList<JsrRecord>()-->Line_21 $$ JsrRecord arr = lstJsr.get(i)[ FD ]
Line_22 $$ Set<BasicBlock> set = arr.range-->Line_26 $$ if (!set.contains(arr1.jsr) && !set1.contains(arr.jsr)) [ FD ]
Line_23 $$ for (int j = i + 1; j < lstJsr.size(); j++) -->Line_26 $$ if (!set.contains(arr1.jsr) && !set1.contains(arr.jsr)) [ CD ]
Line_9 $$ List<JsrRecord> lstJsr = new ArrayList<JsrRecord>()-->Line_20 $$ for (int i = 0; i < lstJsr.size(); i++) [ FD ]
Line_27 $$ Set<BasicBlock> setc = new HashSet<BasicBlock>(set)-->Line_29 $$ if (!setc.isEmpty()) [ FD ]
Line_2 $$ private int processJsrRanges() -->Line_36 $$ return 0[ CD ]
Line_12 $$ for (; i < lstJsr.size(); i++) -->Line_14 $$ if (arrJsr.range.contains(arr.jsr)) [ CD ]
Line_11 $$ int i = 0-->Line_21 $$ JsrRecord arr = lstJsr.get(i)[ FD ]
Line_10 $$ for (JsrRecord arr : lstJsrAll) -->Line_18 $$ lstJsr.add(i, arr)[ FD ]
Line_25 $$ Set<BasicBlock> set1 = arr1.range-->Line_26 $$ if (!set.contains(arr1.jsr) && !set1.contains(arr.jsr)) [ FD ]
Line_26 $$ if (!set.contains(arr1.jsr) && !set1.contains(arr.jsr)) -->Line_27 $$ Set<BasicBlock> setc = new HashSet<BasicBlock>(set)[ CD ]
Line_20 $$ for (int i = 0; i < lstJsr.size(); i++) -->Line_21 $$ JsrRecord arr = lstJsr.get(i)[ CD ]
Line_9 $$ List<JsrRecord> lstJsr = new ArrayList<JsrRecord>()-->Line_18 $$ lstJsr.add(i, arr)[ FD ]
Line_26 $$ if (!set.contains(arr1.jsr) && !set1.contains(arr.jsr)) -->Line_29 $$ if (!setc.isEmpty()) [ CD ]
Line_2 $$ private int processJsrRanges() -->Line_20 $$ for (int i = 0; i < lstJsr.size(); i++) [ CD ]
Line_5 $$ BasicBlock jsr = ent.getKey()-->Line_7 $$ lstJsrAll.add(new JsrRecord(jsr, getJsrRange(jsr, ret), ret))[ FD ]
Line_11 $$ int i = 0-->Line_20 $$ for (int i = 0; i < lstJsr.size(); i++) [ FD ]
Line_23 $$ for (int j = i + 1; j < lstJsr.size(); j++) -->Line_25 $$ Set<BasicBlock> set1 = arr1.range[ CD ]
Line_3 $$ List<JsrRecord> lstJsrAll = new ArrayList<JsrRecord>()-->Line_7 $$ lstJsrAll.add(new JsrRecord(jsr, getJsrRange(jsr, ret), ret))[ FD ]
Line_23 $$ for (int j = i + 1; j < lstJsr.size(); j++) -->Line_24 $$ JsrRecord arr1 = lstJsr.get(j)[ FD ]
Line_9 $$ List<JsrRecord> lstJsr = new ArrayList<JsrRecord>()-->Line_13 $$ JsrRecord arrJsr = lstJsr.get(i)[ FD ]
Line_9 $$ List<JsrRecord> lstJsr = new ArrayList<JsrRecord>()-->Line_23 $$ for (int j = i + 1; j < lstJsr.size(); j++) [ FD ]
