Line_3 $$ Session s = openSession()-->Line_15 $$ s.setCacheMode(CacheMode.IGNORE)[ FD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_20 $$ s.setDefaultReadOnly(true)[ CD ]
Line_32 $$ t = s.beginTransaction()-->Line_36 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_20 $$ s.setDefaultReadOnly(true)[ FD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_16 $$ t = s.beginTransaction()[ CD ]
Line_7 $$ DataPoint dp = new DataPoint()-->Line_28 $$ dp.setDescription("done!")[ FD ]
Line_6 $$ for (int i = 0; i < 100; i++) -->Line_7 $$ DataPoint dp = new DataPoint()[ CD ]
Line_14 $$ s = openSession()-->Line_35 $$ s.createQuery("delete from DataPoint").executeUpdate()[ FD ]
Line_14 $$ s = openSession()-->Line_26 $$ s.setReadOnly(dp, false)[ FD ]
Line_14 $$ s = openSession()-->Line_19 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")[ FD ]
Line_21 $$ Iterator it = query.iterate()-->Line_24 $$ DataPoint dp = (DataPoint) it.next()[ FD ]
Line_24 $$ DataPoint dp = (DataPoint) it.next()-->Line_26 $$ s.setReadOnly(dp, false)[ FD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_36 $$ t.commit()[ CD ]
Line_16 $$ t = s.beginTransaction()-->Line_32 $$ t = s.beginTransaction()[ FD ]
Line_24 $$ DataPoint dp = (DataPoint) it.next()-->Line_28 $$ dp.setDescription("done!")[ FD ]
Line_3 $$ Session s = openSession()-->Line_5 $$ Transaction t = s.beginTransaction()[ FD ]
Line_19 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")-->Line_21 $$ Iterator it = query.iterate()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_36 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_31 $$ s.clear()[ FD ]
Line_6 $$ for (int i = 0; i < 100; i++) -->Line_25 $$ if (++i == 50) [ FD ]
Line_14 $$ s = openSession()-->Line_20 $$ s.setDefaultReadOnly(true)[ FD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_37 $$ s.close()[ CD ]
Line_33 $$ List single = s.createQuery("from DataPoint where description='done!'").list()-->Line_34 $$ assertEquals(1, single.size())[ FD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_18 $$ int i = 0[ CD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_35 $$ s.createQuery("delete from DataPoint").executeUpdate()[ CD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_6 $$ for (int i = 0; i < 100; i++) [ CD ]
Line_14 $$ s = openSession()-->Line_31 $$ s.clear()[ FD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_3 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_4 $$ s.setCacheMode(CacheMode.IGNORE)[ CD ]
Line_3 $$ Session s = openSession()-->Line_33 $$ List single = s.createQuery("from DataPoint where description='done!'").list()[ FD ]
Line_7 $$ DataPoint dp = new DataPoint()-->Line_8 $$ dp.setX(new BigDecimal(i * 0.1d).setScale(19, BigDecimal.ROUND_DOWN))[ FD ]
Line_3 $$ Session s = openSession()-->Line_19 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")[ FD ]
Line_3 $$ Session s = openSession()-->Line_37 $$ s.close()[ FD ]
Line_16 $$ t = s.beginTransaction()-->Line_30 $$ t.commit()[ FD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_13 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_17 $$ s.setDefaultReadOnly(false)[ FD ]
Line_3 $$ Session s = openSession()-->Line_13 $$ s.close()[ FD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_5 $$ Transaction t = s.beginTransaction()[ CD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_34 $$ assertEquals(1, single.size())[ CD ]
Line_6 $$ for (int i = 0; i < 100; i++) -->Line_9 $$ dp.setY(new BigDecimal(Math.cos(dp.getX().doubleValue())).setScale(19, BigDecimal.ROUND_DOWN))[ CD ]
Line_3 $$ Session s = openSession()-->Line_22 $$ s.setDefaultReadOnly(false)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_12 $$ t.commit()[ FD ]
Line_23 $$ while (it.hasNext()) -->Line_25 $$ if (++i == 50) [ CD ]
Line_7 $$ DataPoint dp = new DataPoint()-->Line_9 $$ dp.setY(new BigDecimal(Math.cos(dp.getX().doubleValue())).setScale(19, BigDecimal.ROUND_DOWN))[ FD ]
Line_14 $$ s = openSession()-->Line_22 $$ s.setDefaultReadOnly(false)[ FD ]
Line_21 $$ Iterator it = query.iterate()-->Line_23 $$ while (it.hasNext()) [ FD ]
Line_23 $$ while (it.hasNext()) -->Line_28 $$ dp.setDescription("done!")[ CD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_33 $$ List single = s.createQuery("from DataPoint where description='done!'").list()[ CD ]
Line_3 $$ Session s = openSession()-->Line_32 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ for (int i = 0; i < 100; i++) -->Line_8 $$ dp.setX(new BigDecimal(i * 0.1d).setScale(19, BigDecimal.ROUND_DOWN))[ CD ]
Line_3 $$ Session s = openSession()-->Line_10 $$ s.save(dp)[ FD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_31 $$ s.clear()[ CD ]
Line_14 $$ s = openSession()-->Line_15 $$ s.setCacheMode(CacheMode.IGNORE)[ FD ]
Line_14 $$ s = openSession()-->Line_17 $$ s.setDefaultReadOnly(false)[ FD ]
Line_7 $$ DataPoint dp = new DataPoint()-->Line_26 $$ s.setReadOnly(dp, false)[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ s.setCacheMode(CacheMode.IGNORE)[ FD ]
Line_18 $$ int i = 0-->Line_25 $$ if (++i == 50) [ FD ]
Line_7 $$ DataPoint dp = new DataPoint()-->Line_10 $$ s.save(dp)[ FD ]
Line_14 $$ s = openSession()-->Line_32 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_35 $$ s.createQuery("delete from DataPoint").executeUpdate()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_32 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_21 $$ Iterator it = query.iterate()[ CD ]
Line_3 $$ Session s = openSession()-->Line_14 $$ s = openSession()[ FD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_19 $$ Query query = s.createQuery("from DataPoint dp order by dp.x asc")[ CD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_23 $$ while (it.hasNext()) [ CD ]
Line_16 $$ t = s.beginTransaction()-->Line_36 $$ t.commit()[ FD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_14 $$ s = openSession()[ CD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_16 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_22 $$ s.setDefaultReadOnly(false)[ CD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_15 $$ s.setCacheMode(CacheMode.IGNORE)[ CD ]
Line_25 $$ if (++i == 50) -->Line_26 $$ s.setReadOnly(dp, false)[ CD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_17 $$ s.setDefaultReadOnly(false)[ CD ]
Line_3 $$ Session s = openSession()-->Line_26 $$ s.setReadOnly(dp, false)[ FD ]
Line_14 $$ s = openSession()-->Line_37 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_16 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_32 $$ t = s.beginTransaction()[ CD ]
Line_23 $$ while (it.hasNext()) -->Line_24 $$ DataPoint dp = (DataPoint) it.next()[ CD ]
Line_14 $$ s = openSession()-->Line_16 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ for (int i = 0; i < 100; i++) -->Line_10 $$ s.save(dp)[ CD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_12 $$ t.commit()[ CD ]
Line_2 $$ public void testModifiableSessionDefaultQueryReadOnlySessionIterate() -->Line_30 $$ t.commit()[ CD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_30 $$ t.commit()[ FD ]
Line_14 $$ s = openSession()-->Line_33 $$ List single = s.createQuery("from DataPoint where description='done!'").list()[ FD ]
