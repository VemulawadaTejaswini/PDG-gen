Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_3 $$ requireNonNull(config, "config is null")[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_5 $$ Cluster.Builder clusterBuilder = Cluster.builder()[ CD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_26 $$ return new CassandraSession(connectorId.toString(), clusterBuilder, config.getFetchSizeForPartitionKeySelect(), config.getLimitForPartitionKeySelect(), extraColumnMetadataCodec)[ FD ]
Line_12 $$ SocketOptions socketOptions = new SocketOptions()-->Line_14 $$ socketOptions.setConnectTimeoutMillis(Ints.checkedCast(config.getClientConnectTimeout().toMillis()))[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_18 $$ clusterBuilder.withSocketOptions(socketOptions)[ CD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_6 $$ List<String> contactPoints = requireNonNull(config.getContactPoints(), "contactPoints is null")[ FD ]
Line_15 $$ if (config.getClientSoLinger() != null) -->Line_16 $$ socketOptions.setSoLinger(config.getClientSoLinger())[ CD ]
Line_5 $$ Cluster.Builder clusterBuilder = Cluster.builder()-->Line_18 $$ clusterBuilder.withSocketOptions(socketOptions)[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_13 $$ socketOptions.setReadTimeoutMillis(Ints.checkedCast(config.getClientReadTimeout().toMillis()))[ FD ]
Line_12 $$ SocketOptions socketOptions = new SocketOptions()-->Line_18 $$ clusterBuilder.withSocketOptions(socketOptions)[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_4 $$ requireNonNull(extraColumnMetadataCodec, "extraColumnMetadataCodec is null")[ CD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_20 $$ clusterBuilder.withCredentials(config.getUsername(), config.getPassword())[ FD ]
Line_22 $$ QueryOptions options = new QueryOptions()-->Line_23 $$ options.setFetchSize(config.getFetchSize())[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_11 $$ clusterBuilder.withRetryPolicy(config.getRetryPolicy().getPolicy())[ CD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_12 $$ SocketOptions socketOptions = new SocketOptions()[ CD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_19 $$ if (config.getUsername() != null && config.getPassword() != null) [ CD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_16 $$ socketOptions.setSoLinger(config.getClientSoLinger())[ FD ]
Line_5 $$ Cluster.Builder clusterBuilder = Cluster.builder()-->Line_20 $$ clusterBuilder.withCredentials(config.getUsername(), config.getPassword())[ FD ]
Line_12 $$ SocketOptions socketOptions = new SocketOptions()-->Line_13 $$ socketOptions.setReadTimeoutMillis(Ints.checkedCast(config.getClientReadTimeout().toMillis()))[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_7 $$ checkArgument(!contactPoints.isEmpty(), "empty contactPoints")[ CD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_11 $$ clusterBuilder.withRetryPolicy(config.getRetryPolicy().getPolicy())[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_14 $$ socketOptions.setConnectTimeoutMillis(Ints.checkedCast(config.getClientConnectTimeout().toMillis()))[ CD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_23 $$ options.setFetchSize(config.getFetchSize())[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_8 $$ clusterBuilder.addContactPoints(contactPoints.toArray(new String[contactPoints.size()]))[ CD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_9 $$ clusterBuilder.withPort(config.getNativeProtocolPort())[ CD ]
Line_22 $$ QueryOptions options = new QueryOptions()-->Line_25 $$ clusterBuilder.withQueryOptions(options)[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_4 $$ requireNonNull(extraColumnMetadataCodec, "extraColumnMetadataCodec is null")[ FD ]
Line_5 $$ Cluster.Builder clusterBuilder = Cluster.builder()-->Line_8 $$ clusterBuilder.addContactPoints(contactPoints.toArray(new String[contactPoints.size()]))[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_25 $$ clusterBuilder.withQueryOptions(options)[ CD ]
Line_5 $$ Cluster.Builder clusterBuilder = Cluster.builder()-->Line_9 $$ clusterBuilder.withPort(config.getNativeProtocolPort())[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_13 $$ socketOptions.setReadTimeoutMillis(Ints.checkedCast(config.getClientReadTimeout().toMillis()))[ CD ]
Line_6 $$ List<String> contactPoints = requireNonNull(config.getContactPoints(), "contactPoints is null")-->Line_7 $$ checkArgument(!contactPoints.isEmpty(), "empty contactPoints")[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_15 $$ if (config.getClientSoLinger() != null) [ FD ]
Line_22 $$ QueryOptions options = new QueryOptions()-->Line_24 $$ options.setConsistencyLevel(config.getConsistencyLevel())[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_3 $$ requireNonNull(config, "config is null")[ CD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_24 $$ options.setConsistencyLevel(config.getConsistencyLevel())[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_9 $$ clusterBuilder.withPort(config.getNativeProtocolPort())[ FD ]
Line_12 $$ SocketOptions socketOptions = new SocketOptions()-->Line_16 $$ socketOptions.setSoLinger(config.getClientSoLinger())[ FD ]
Line_5 $$ Cluster.Builder clusterBuilder = Cluster.builder()-->Line_11 $$ clusterBuilder.withRetryPolicy(config.getRetryPolicy().getPolicy())[ FD ]
Line_19 $$ if (config.getUsername() != null && config.getPassword() != null) -->Line_20 $$ clusterBuilder.withCredentials(config.getUsername(), config.getPassword())[ CD ]
Line_5 $$ Cluster.Builder clusterBuilder = Cluster.builder()-->Line_25 $$ clusterBuilder.withQueryOptions(options)[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_6 $$ List<String> contactPoints = requireNonNull(config.getContactPoints(), "contactPoints is null")[ CD ]
Line_5 $$ Cluster.Builder clusterBuilder = Cluster.builder()-->Line_10 $$ clusterBuilder.withReconnectionPolicy(new ExponentialReconnectionPolicy(500, 10000))[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_26 $$ return new CassandraSession(connectorId.toString(), clusterBuilder, config.getFetchSizeForPartitionKeySelect(), config.getLimitForPartitionKeySelect(), extraColumnMetadataCodec)[ CD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_14 $$ socketOptions.setConnectTimeoutMillis(Ints.checkedCast(config.getClientConnectTimeout().toMillis()))[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_15 $$ if (config.getClientSoLinger() != null) [ CD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_24 $$ options.setConsistencyLevel(config.getConsistencyLevel())[ CD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_19 $$ if (config.getUsername() != null && config.getPassword() != null) [ FD ]
Line_6 $$ List<String> contactPoints = requireNonNull(config.getContactPoints(), "contactPoints is null")-->Line_8 $$ clusterBuilder.addContactPoints(contactPoints.toArray(new String[contactPoints.size()]))[ FD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_23 $$ options.setFetchSize(config.getFetchSize())[ CD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_10 $$ clusterBuilder.withReconnectionPolicy(new ExponentialReconnectionPolicy(500, 10000))[ CD ]
Line_2 $$ public static CassandraSession createCassandraSession(CassandraConnectorId connectorId, CassandraClientConfig config, JsonCodec<List<ExtraColumnMetadata>> extraColumnMetadataCodec) -->Line_22 $$ QueryOptions options = new QueryOptions()[ CD ]
