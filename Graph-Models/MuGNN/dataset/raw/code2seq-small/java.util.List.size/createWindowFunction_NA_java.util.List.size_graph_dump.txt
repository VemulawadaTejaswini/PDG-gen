Line_2 $$ public final WindowFunction createWindowFunction(List<Integer> argumentChannels) -->Line_5 $$ return newWindowFunction(argumentChannels)[ FD ]
Line_2 $$ public final WindowFunction createWindowFunction(List<Integer> argumentChannels) -->Line_3 $$ requireNonNull(argumentChannels, "inputs is null")[ CD ]
Line_2 $$ public final WindowFunction createWindowFunction(List<Integer> argumentChannels) -->Line_5 $$ return newWindowFunction(argumentChannels)[ CD ]
Line_2 $$ public final WindowFunction createWindowFunction(List<Integer> argumentChannels) -->Line_3 $$ requireNonNull(argumentChannels, "inputs is null")[ FD ]
Line_2 $$ public final WindowFunction createWindowFunction(List<Integer> argumentChannels) -->Line_4 $$ checkArgument(argumentChannels.size() == signature.getArgumentTypes().size(), "Expected %s arguments for function %s, but got %s", signature.getArgumentTypes().size(), signature.getName(), argumentChannels.size())[ FD ]
Line_2 $$ public final WindowFunction createWindowFunction(List<Integer> argumentChannels) -->Line_4 $$ checkArgument(argumentChannels.size() == signature.getArgumentTypes().size(), "Expected %s arguments for function %s, but got %s", signature.getArgumentTypes().size(), signature.getName(), argumentChannels.size())[ CD ]
