Line_4 $$ HttpHeaders httpHeaders = new HttpHeaders()-->Line_5 $$ httpHeaders.setContentType(MediaType.APPLICATION_JSON)[ FD ]
Line_4 $$ HttpHeaders httpHeaders = new HttpHeaders()-->Line_6 $$ httpHeaders.put("foo", Arrays.asList("bar", "baz"))[ FD ]
Line_8 $$ MockHttpServletRequest request = this.builder.buildRequest(this.servletContext)-->Line_13 $$ assertEquals(MediaType.APPLICATION_JSON.toString(), request.getHeader("Content-Type"))[ FD ]
Line_9 $$ List<String> headers = Collections.list(request.getHeaders("foo"))-->Line_11 $$ assertEquals("bar", headers.get(0))[ FD ]
Line_8 $$ MockHttpServletRequest request = this.builder.buildRequest(this.servletContext)-->Line_9 $$ List<String> headers = Collections.list(request.getHeaders("foo"))[ FD ]
Line_4 $$ HttpHeaders httpHeaders = new HttpHeaders()-->Line_7 $$ this.builder.headers(httpHeaders)[ FD ]
Line_9 $$ List<String> headers = Collections.list(request.getHeaders("foo"))-->Line_10 $$ assertEquals(2, headers.size())[ FD ]
Line_9 $$ List<String> headers = Collections.list(request.getHeaders("foo"))-->Line_12 $$ assertEquals("baz", headers.get(1))[ FD ]
