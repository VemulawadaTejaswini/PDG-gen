Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_12 $$ assertEquals(zoo3.getName(), ((Map) list.get(2)).get("zname"))[ CD ]
Line_16 $$ list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zaddress, zname").list()-->Line_22 $$ assertEquals(zoo2.getName(), ((Map) list.get(2)).get("zname"))[ FD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_14 $$ assertEquals(zoo1.getName(), ((Map) list.get(3)).get("zname"))[ FD ]
Line_16 $$ list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zaddress, zname").list()-->Line_19 $$ assertEquals(zoo3.getAddress(), ((Map) list.get(0)).get("zaddress"))[ FD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_11 $$ assertEquals(zoo4.getAddress(), ((Map) list.get(1)).get("zaddress"))[ CD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_20 $$ assertEquals(zoo4.getName(), ((Map) list.get(1)).get("zname"))[ CD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_25 $$ assertEquals(zoo1.getAddress(), ((Map) list.get(3)).get("zaddress"))[ FD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_22 $$ assertEquals(zoo2.getName(), ((Map) list.get(2)).get("zname"))[ FD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_26 $$ t.commit()[ CD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_26 $$ t.commit()[ FD ]
Line_16 $$ list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zaddress, zname").list()-->Line_21 $$ assertEquals(zoo4.getAddress(), ((Map) list.get(1)).get("zaddress"))[ FD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_21 $$ assertEquals(zoo4.getAddress(), ((Map) list.get(1)).get("zaddress"))[ FD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_16 $$ list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zaddress, zname").list()[ FD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_24 $$ assertEquals(zoo1.getName(), ((Map) list.get(3)).get("zname"))[ FD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_17 $$ assertEquals(4, list.size())[ CD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_28 $$ cleanupData()[ CD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_7 $$ assertEquals(4, list.size())[ CD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_5 $$ Transaction t = s.beginTransaction()[ CD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_19 $$ assertEquals(zoo3.getAddress(), ((Map) list.get(0)).get("zaddress"))[ FD ]
Line_16 $$ list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zaddress, zname").list()-->Line_25 $$ assertEquals(zoo1.getAddress(), ((Map) list.get(3)).get("zaddress"))[ FD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_27 $$ s.close()[ CD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_10 $$ assertEquals(zoo4.getName(), ((Map) list.get(1)).get("zname"))[ FD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()[ CD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_19 $$ assertEquals(zoo3.getAddress(), ((Map) list.get(0)).get("zaddress"))[ CD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_25 $$ assertEquals(zoo1.getAddress(), ((Map) list.get(3)).get("zaddress"))[ CD ]
Line_4 $$ Session s = openSession()-->Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()[ FD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_17 $$ assertEquals(4, list.size())[ FD ]
Line_16 $$ list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zaddress, zname").list()-->Line_20 $$ assertEquals(zoo4.getName(), ((Map) list.get(1)).get("zname"))[ FD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_9 $$ assertEquals(zoo2.getAddress(), ((Map) list.get(0)).get("zaddress"))[ CD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_15 $$ assertEquals(zoo1.getAddress(), ((Map) list.get(3)).get("zaddress"))[ FD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_20 $$ assertEquals(zoo4.getName(), ((Map) list.get(1)).get("zname"))[ FD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_11 $$ assertEquals(zoo4.getAddress(), ((Map) list.get(1)).get("zaddress"))[ FD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_23 $$ assertEquals(zoo2.getAddress(), ((Map) list.get(2)).get("zaddress"))[ FD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_21 $$ assertEquals(zoo4.getAddress(), ((Map) list.get(1)).get("zaddress"))[ CD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_8 $$ assertEquals(zoo2.getName(), ((Map) list.get(0)).get("zname"))[ CD ]
Line_16 $$ list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zaddress, zname").list()-->Line_18 $$ assertEquals(zoo3.getName(), ((Map) list.get(0)).get("zname"))[ FD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_15 $$ assertEquals(zoo1.getAddress(), ((Map) list.get(3)).get("zaddress"))[ CD ]
Line_4 $$ Session s = openSession()-->Line_27 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ Transaction t = s.beginTransaction()[ FD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_9 $$ assertEquals(zoo2.getAddress(), ((Map) list.get(0)).get("zaddress"))[ FD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_16 $$ list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zaddress, zname").list()[ CD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_12 $$ assertEquals(zoo3.getName(), ((Map) list.get(2)).get("zname"))[ FD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_24 $$ assertEquals(zoo1.getName(), ((Map) list.get(3)).get("zname"))[ CD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_14 $$ assertEquals(zoo1.getName(), ((Map) list.get(3)).get("zname"))[ CD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_13 $$ assertEquals(zoo3.getAddress(), ((Map) list.get(2)).get("zaddress"))[ FD ]
Line_16 $$ list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zaddress, zname").list()-->Line_24 $$ assertEquals(zoo1.getName(), ((Map) list.get(3)).get("zname"))[ FD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_4 $$ Session s = openSession()[ CD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_7 $$ assertEquals(4, list.size())[ FD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_8 $$ assertEquals(zoo2.getName(), ((Map) list.get(0)).get("zname"))[ FD ]
Line_16 $$ list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zaddress, zname").list()-->Line_17 $$ assertEquals(4, list.size())[ FD ]
Line_6 $$ List list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zname, zaddress").list()-->Line_18 $$ assertEquals(zoo3.getName(), ((Map) list.get(0)).get("zname"))[ FD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_22 $$ assertEquals(zoo2.getName(), ((Map) list.get(2)).get("zname"))[ CD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_3 $$ createData()[ CD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_10 $$ assertEquals(zoo4.getName(), ((Map) list.get(1)).get("zname"))[ CD ]
Line_16 $$ list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zaddress, zname").list()-->Line_23 $$ assertEquals(zoo2.getAddress(), ((Map) list.get(2)).get("zaddress"))[ FD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_23 $$ assertEquals(zoo2.getAddress(), ((Map) list.get(2)).get("zaddress"))[ CD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_18 $$ assertEquals(zoo3.getName(), ((Map) list.get(0)).get("zname"))[ CD ]
Line_4 $$ Session s = openSession()-->Line_16 $$ list = s.createQuery("select new map( z.name as zname, z.address as zaddress ) from Zoo z left join z.mammals m order by zaddress, zname").list()[ FD ]
Line_2 $$ public void testOrderBySelectNewMapArgAliasRef() -->Line_13 $$ assertEquals(zoo3.getAddress(), ((Map) list.get(2)).get("zaddress"))[ CD ]
