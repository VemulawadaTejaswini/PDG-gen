Line_8 $$ Class<?> stackType = fields.get(0).getType()-->Line_9 $$ if (stackType == long.class) [ FD ]
Line_13 $$ if (stackType == boolean.class) -->Line_15 $$ if (stackType == byte.class) [ CD ]
Line_16 $$ type = BIGINT-->Line_23 $$ body.comment("return %s", type.getTypeSignature()).append(constantType(callSiteBinder, type)).retObject()[ FD ]
Line_6 $$ type = VARCHAR-->Line_12 $$ type = DOUBLE[ FD ]
Line_2 $$ private static void generateGetSerializedType(ClassDefinition definition, List<StateField> fields, CallSiteBinder callSiteBinder) -->Line_3 $$ ByteCodeBlock body = definition.declareMethod(a(PUBLIC), "getSerializedType", type(Type.class)).getBody()[ FD ]
Line_4 $$ Type type-->Line_18 $$ type = VARCHAR[ FD ]
Line_4 $$ Type type-->Line_12 $$ type = DOUBLE[ FD ]
Line_10 $$ type = BIGINT-->Line_18 $$ type = VARCHAR[ FD ]
Line_17 $$ if (stackType == Slice.class) -->Line_18 $$ type = VARCHAR[ CD ]
Line_16 $$ type = BIGINT-->Line_18 $$ type = VARCHAR[ FD ]
Line_9 $$ if (stackType == long.class) -->Line_11 $$ if (stackType == double.class) [ CD ]
Line_2 $$ private static void generateGetSerializedType(ClassDefinition definition, List<StateField> fields, CallSiteBinder callSiteBinder) -->Line_3 $$ ByteCodeBlock body = definition.declareMethod(a(PUBLIC), "getSerializedType", type(Type.class)).getBody()[ CD ]
Line_5 $$ if (fields.size() > 1) -->Line_6 $$ type = VARCHAR[ CD ]
Line_8 $$ Class<?> stackType = fields.get(0).getType()-->Line_13 $$ if (stackType == boolean.class) [ FD ]
Line_6 $$ type = VARCHAR-->Line_10 $$ type = BIGINT[ FD ]
Line_14 $$ type = BOOLEAN-->Line_18 $$ type = VARCHAR[ FD ]
Line_6 $$ type = VARCHAR-->Line_18 $$ type = VARCHAR[ FD ]
Line_8 $$ Class<?> stackType = fields.get(0).getType()-->Line_15 $$ if (stackType == byte.class) [ FD ]
Line_2 $$ private static void generateGetSerializedType(ClassDefinition definition, List<StateField> fields, CallSiteBinder callSiteBinder) -->Line_23 $$ body.comment("return %s", type.getTypeSignature()).append(constantType(callSiteBinder, type)).retObject()[ FD ]
Line_4 $$ Type type-->Line_16 $$ type = BIGINT[ FD ]
Line_2 $$ private static void generateGetSerializedType(ClassDefinition definition, List<StateField> fields, CallSiteBinder callSiteBinder) -->Line_5 $$ if (fields.size() > 1) [ CD ]
Line_5 $$ if (fields.size() > 1) -->Line_9 $$ if (stackType == long.class) [ CD ]
Line_2 $$ private static void generateGetSerializedType(ClassDefinition definition, List<StateField> fields, CallSiteBinder callSiteBinder) -->Line_5 $$ if (fields.size() > 1) [ FD ]
Line_4 $$ Type type-->Line_14 $$ type = BOOLEAN[ FD ]
Line_12 $$ type = DOUBLE-->Line_16 $$ type = BIGINT[ FD ]
Line_5 $$ if (fields.size() > 1) -->Line_8 $$ Class<?> stackType = fields.get(0).getType()[ CD ]
Line_15 $$ if (stackType == byte.class) -->Line_16 $$ type = BIGINT[ CD ]
Line_8 $$ Class<?> stackType = fields.get(0).getType()-->Line_17 $$ if (stackType == Slice.class) [ FD ]
Line_3 $$ ByteCodeBlock body = definition.declareMethod(a(PUBLIC), "getSerializedType", type(Type.class)).getBody()-->Line_23 $$ body.comment("return %s", type.getTypeSignature()).append(constantType(callSiteBinder, type)).retObject()[ FD ]
Line_11 $$ if (stackType == double.class) -->Line_12 $$ type = DOUBLE[ CD ]
Line_6 $$ type = VARCHAR-->Line_14 $$ type = BOOLEAN[ FD ]
Line_15 $$ if (stackType == byte.class) -->Line_17 $$ if (stackType == Slice.class) [ CD ]
Line_2 $$ private static void generateGetSerializedType(ClassDefinition definition, List<StateField> fields, CallSiteBinder callSiteBinder) -->Line_4 $$ Type type[ CD ]
Line_13 $$ if (stackType == boolean.class) -->Line_14 $$ type = BOOLEAN[ CD ]
Line_2 $$ private static void generateGetSerializedType(ClassDefinition definition, List<StateField> fields, CallSiteBinder callSiteBinder) -->Line_23 $$ body.comment("return %s", type.getTypeSignature()).append(constantType(callSiteBinder, type)).retObject()[ CD ]
Line_9 $$ if (stackType == long.class) -->Line_10 $$ type = BIGINT[ CD ]
Line_12 $$ type = DOUBLE-->Line_18 $$ type = VARCHAR[ FD ]
Line_6 $$ type = VARCHAR-->Line_23 $$ body.comment("return %s", type.getTypeSignature()).append(constantType(callSiteBinder, type)).retObject()[ FD ]
Line_14 $$ type = BOOLEAN-->Line_23 $$ body.comment("return %s", type.getTypeSignature()).append(constantType(callSiteBinder, type)).retObject()[ FD ]
Line_10 $$ type = BIGINT-->Line_23 $$ body.comment("return %s", type.getTypeSignature()).append(constantType(callSiteBinder, type)).retObject()[ FD ]
Line_10 $$ type = BIGINT-->Line_16 $$ type = BIGINT[ FD ]
Line_14 $$ type = BOOLEAN-->Line_16 $$ type = BIGINT[ FD ]
Line_4 $$ Type type-->Line_6 $$ type = VARCHAR[ FD ]
Line_10 $$ type = BIGINT-->Line_14 $$ type = BOOLEAN[ FD ]
Line_10 $$ type = BIGINT-->Line_12 $$ type = DOUBLE[ FD ]
Line_12 $$ type = DOUBLE-->Line_14 $$ type = BOOLEAN[ FD ]
Line_6 $$ type = VARCHAR-->Line_16 $$ type = BIGINT[ FD ]
Line_4 $$ Type type-->Line_23 $$ body.comment("return %s", type.getTypeSignature()).append(constantType(callSiteBinder, type)).retObject()[ FD ]
Line_4 $$ Type type-->Line_10 $$ type = BIGINT[ FD ]
Line_11 $$ if (stackType == double.class) -->Line_13 $$ if (stackType == boolean.class) [ CD ]
Line_2 $$ private static void generateGetSerializedType(ClassDefinition definition, List<StateField> fields, CallSiteBinder callSiteBinder) -->Line_8 $$ Class<?> stackType = fields.get(0).getType()[ FD ]
Line_8 $$ Class<?> stackType = fields.get(0).getType()-->Line_11 $$ if (stackType == double.class) [ FD ]
Line_18 $$ type = VARCHAR-->Line_23 $$ body.comment("return %s", type.getTypeSignature()).append(constantType(callSiteBinder, type)).retObject()[ FD ]
Line_12 $$ type = DOUBLE-->Line_23 $$ body.comment("return %s", type.getTypeSignature()).append(constantType(callSiteBinder, type)).retObject()[ FD ]
