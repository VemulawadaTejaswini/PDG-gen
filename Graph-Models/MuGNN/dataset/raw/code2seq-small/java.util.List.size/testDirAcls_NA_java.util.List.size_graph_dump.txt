Line_6 $$ String statusJson-->Line_24 $$ statusJson = getStatus(dir, "GETFILESTATUS")[ FD ]
Line_14 $$ aclEntries = getAclEntries(statusJson)-->Line_20 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_7 $$ List<String> aclEntries-->Line_27 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_7 $$ List<String> aclEntries-->Line_14 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_7 $$ List<String> aclEntries-->Line_22 $$ Assert.assertTrue(aclEntries.contains(defUser1))[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_15 $$ Assert.assertTrue(aclEntries.size() == 0)[ CD ]
Line_5 $$ final String dir = "/aclDirTest"-->Line_16 $$ putCmd(dir, "SETACL", defSpec1)[ FD ]
Line_7 $$ List<String> aclEntries-->Line_21 $$ Assert.assertTrue(aclEntries.size() == 5)[ FD ]
Line_13 $$ statusJson = getStatus(dir, "GETACLSTATUS")-->Line_27 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_19 $$ statusJson = getStatus(dir, "GETACLSTATUS")-->Line_25 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_5 $$ final String dir = "/aclDirTest"-->Line_13 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_19 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ CD ]
Line_5 $$ final String dir = "/aclDirTest"-->Line_26 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_14 $$ aclEntries = getAclEntries(statusJson)[ CD ]
Line_24 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_27 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_5 $$ final String dir = "/aclDirTest"-->Line_11 $$ statusJson = getStatus(dir, "GETFILESTATUS")[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_11 $$ statusJson = getStatus(dir, "GETFILESTATUS")[ CD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_5 $$ final String dir = "/aclDirTest"[ CD ]
Line_7 $$ List<String> aclEntries-->Line_15 $$ Assert.assertTrue(aclEntries.size() == 0)[ FD ]
Line_17 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_27 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_5 $$ final String dir = "/aclDirTest"-->Line_24 $$ statusJson = getStatus(dir, "GETFILESTATUS")[ FD ]
Line_11 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_19 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ FD ]
Line_13 $$ statusJson = getStatus(dir, "GETACLSTATUS")-->Line_17 $$ statusJson = getStatus(dir, "GETFILESTATUS")[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_9 $$ FileSystem fs = FileSystem.get(TestHdfsHelper.getHdfsConf())[ CD ]
Line_13 $$ statusJson = getStatus(dir, "GETACLSTATUS")-->Line_14 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_3 $$ final String defUser1 = "default:user:glarch:r-x"-->Line_22 $$ Assert.assertTrue(aclEntries.contains(defUser1))[ FD ]
Line_6 $$ String statusJson-->Line_12 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_20 $$ aclEntries = getAclEntries(statusJson)-->Line_28 $$ Assert.assertTrue(aclEntries.size() == 0)[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_27 $$ aclEntries = getAclEntries(statusJson)[ CD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_23 $$ putCmd(dir, "REMOVEDEFAULTACL", null)[ CD ]
Line_17 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_18 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_11 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_25 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_17 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_25 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_20 $$ aclEntries = getAclEntries(statusJson)-->Line_21 $$ Assert.assertTrue(aclEntries.size() == 5)[ FD ]
Line_13 $$ statusJson = getStatus(dir, "GETACLSTATUS")-->Line_24 $$ statusJson = getStatus(dir, "GETFILESTATUS")[ FD ]
Line_27 $$ aclEntries = getAclEntries(statusJson)-->Line_28 $$ Assert.assertTrue(aclEntries.size() == 0)[ FD ]
Line_19 $$ statusJson = getStatus(dir, "GETACLSTATUS")-->Line_24 $$ statusJson = getStatus(dir, "GETFILESTATUS")[ FD ]
Line_13 $$ statusJson = getStatus(dir, "GETACLSTATUS")-->Line_19 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ FD ]
Line_7 $$ List<String> aclEntries-->Line_28 $$ Assert.assertTrue(aclEntries.size() == 0)[ FD ]
Line_6 $$ String statusJson-->Line_20 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_3 $$ final String defUser1 = "default:user:glarch:r-x"[ CD ]
Line_19 $$ statusJson = getStatus(dir, "GETACLSTATUS")-->Line_26 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ FD ]
Line_17 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_26 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_17 $$ statusJson = getStatus(dir, "GETFILESTATUS")[ CD ]
Line_19 $$ statusJson = getStatus(dir, "GETACLSTATUS")-->Line_27 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_7 $$ List<String> aclEntries-->Line_20 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_18 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ CD ]
Line_11 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_14 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_11 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_17 $$ statusJson = getStatus(dir, "GETFILESTATUS")[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_28 $$ Assert.assertTrue(aclEntries.size() == 0)[ CD ]
Line_11 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_26 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ FD ]
Line_6 $$ String statusJson-->Line_19 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ FD ]
Line_6 $$ String statusJson-->Line_18 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_14 $$ aclEntries = getAclEntries(statusJson)-->Line_21 $$ Assert.assertTrue(aclEntries.size() == 5)[ FD ]
Line_6 $$ String statusJson-->Line_27 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_11 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_13 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ FD ]
Line_11 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_12 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_22 $$ Assert.assertTrue(aclEntries.contains(defUser1))[ CD ]
Line_6 $$ String statusJson-->Line_26 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ FD ]
Line_6 $$ String statusJson-->Line_11 $$ statusJson = getStatus(dir, "GETFILESTATUS")[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_7 $$ List<String> aclEntries[ CD ]
Line_5 $$ final String dir = "/aclDirTest"-->Line_19 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_10 $$ fs.mkdirs(new Path(dir))[ CD ]
Line_24 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_26 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ FD ]
Line_9 $$ FileSystem fs = FileSystem.get(TestHdfsHelper.getHdfsConf())-->Line_10 $$ fs.mkdirs(new Path(dir))[ FD ]
Line_14 $$ aclEntries = getAclEntries(statusJson)-->Line_28 $$ Assert.assertTrue(aclEntries.size() == 0)[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_20 $$ aclEntries = getAclEntries(statusJson)[ CD ]
Line_19 $$ statusJson = getStatus(dir, "GETACLSTATUS")-->Line_20 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_26 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ CD ]
Line_5 $$ final String dir = "/aclDirTest"-->Line_17 $$ statusJson = getStatus(dir, "GETFILESTATUS")[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_24 $$ statusJson = getStatus(dir, "GETFILESTATUS")[ CD ]
Line_11 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_20 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_6 $$ String statusJson-->Line_13 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ FD ]
Line_17 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_24 $$ statusJson = getStatus(dir, "GETFILESTATUS")[ FD ]
Line_11 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_18 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_14 $$ aclEntries = getAclEntries(statusJson)-->Line_27 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_21 $$ Assert.assertTrue(aclEntries.size() == 5)[ CD ]
Line_13 $$ statusJson = getStatus(dir, "GETACLSTATUS")-->Line_18 $$ Assert.assertNotEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_13 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ CD ]
Line_14 $$ aclEntries = getAclEntries(statusJson)-->Line_22 $$ Assert.assertTrue(aclEntries.contains(defUser1))[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_25 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ CD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_4 $$ final String defSpec1 = "aclspec=" + defUser1[ CD ]
Line_20 $$ aclEntries = getAclEntries(statusJson)-->Line_27 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_4 $$ final String defSpec1 = "aclspec=" + defUser1-->Line_16 $$ putCmd(dir, "SETACL", defSpec1)[ FD ]
Line_13 $$ statusJson = getStatus(dir, "GETACLSTATUS")-->Line_25 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_8 $$ createHttpFSServer(false)[ CD ]
Line_13 $$ statusJson = getStatus(dir, "GETACLSTATUS")-->Line_26 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ FD ]
Line_6 $$ String statusJson-->Line_25 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_11 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_27 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_6 $$ String statusJson[ CD ]
Line_6 $$ String statusJson-->Line_17 $$ statusJson = getStatus(dir, "GETFILESTATUS")[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_16 $$ putCmd(dir, "SETACL", defSpec1)[ CD ]
Line_20 $$ aclEntries = getAclEntries(statusJson)-->Line_22 $$ Assert.assertTrue(aclEntries.contains(defUser1))[ FD ]
Line_17 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_20 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_14 $$ aclEntries = getAclEntries(statusJson)-->Line_15 $$ Assert.assertTrue(aclEntries.size() == 0)[ FD ]
Line_24 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_25 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ FD ]
Line_26 $$ statusJson = getStatus(dir, "GETACLSTATUS")-->Line_27 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_17 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_19 $$ statusJson = getStatus(dir, "GETACLSTATUS")[ FD ]
Line_2 $$ public void testDirAcls() throws Exception -->Line_12 $$ Assert.assertEquals(-1, statusJson.indexOf("aclBit"))[ CD ]
Line_5 $$ final String dir = "/aclDirTest"-->Line_23 $$ putCmd(dir, "REMOVEDEFAULTACL", null)[ FD ]
Line_11 $$ statusJson = getStatus(dir, "GETFILESTATUS")-->Line_24 $$ statusJson = getStatus(dir, "GETFILESTATUS")[ FD ]
Line_6 $$ String statusJson-->Line_14 $$ aclEntries = getAclEntries(statusJson)[ FD ]
Line_13 $$ statusJson = getStatus(dir, "GETACLSTATUS")-->Line_20 $$ aclEntries = getAclEntries(statusJson)[ FD ]
