Line_43 $$ String[] columnNames = persister.toColumns(name)-->Line_44 $$ renderColumns(columnNames)[ FD ]
Line_19 $$ if (persister.getIdentifierType() instanceof CompositeType) -->Line_27 $$ if (componentIds.contains(name)) [ CD ]
Line_38 $$ if (persister.isVersioned()) -->Line_39 $$ if (name.equals(persister.getPropertyNames()[persister.getVersionProperty()])) [ CD ]
Line_2 $$ private void visitPropertySpecNodes(AST propertyNode, List types) -->Line_48 $$ visitPropertySpecNodes(propertyNode.getFirstChild(), types)[ CD ]
Line_27 $$ if (componentIds.contains(name)) -->Line_28 $$ if (explicitComponentIds == null) [ CD ]
Line_2 $$ private void visitPropertySpecNodes(AST propertyNode, List types) -->Line_38 $$ if (persister.isVersioned()) [ CD ]
Line_20 $$ if (componentIds == null) -->Line_23 $$ for (int i = 0; i < propertyNames.length; i++) [ CD ]
Line_2 $$ private void visitPropertySpecNodes(AST propertyNode, List types) -->Line_3 $$ if (propertyNode == null) [ FD ]
Line_2 $$ private void visitPropertySpecNodes(AST propertyNode, List types) -->Line_43 $$ String[] columnNames = persister.toColumns(name)[ CD ]
Line_2 $$ private void visitPropertySpecNodes(AST propertyNode, List types) -->Line_15 $$ if (isSuperclassProperty(name)) [ CD ]
Line_19 $$ if (persister.getIdentifierType() instanceof CompositeType) -->Line_20 $$ if (componentIds == null) [ CD ]
Line_20 $$ if (componentIds == null) -->Line_21 $$ String[] propertyNames = ((CompositeType) persister.getIdentifierType()).getPropertyNames()[ CD ]
Line_19 $$ if (persister.getIdentifierType() instanceof CompositeType) -->Line_34 $$ if (name.equals(persister.getIdentifierPropertyName())) [ CD ]
Line_3 $$ if (propertyNode == null) -->Line_4 $$ return[ CD ]
Line_2 $$ private void visitPropertySpecNodes(AST propertyNode, List types) -->Line_44 $$ renderColumns(columnNames)[ CD ]
Line_2 $$ private void visitPropertySpecNodes(AST propertyNode, List types) -->Line_3 $$ if (propertyNode == null) [ CD ]
Line_2 $$ private void visitPropertySpecNodes(AST propertyNode, List types) -->Line_48 $$ visitPropertySpecNodes(propertyNode.getFirstChild(), types)[ FD ]
Line_2 $$ private void visitPropertySpecNodes(AST propertyNode, List types) -->Line_45 $$ types.add(persister.toType(name))[ CD ]
Line_18 $$ if (!explicitIdInsertion) -->Line_19 $$ if (persister.getIdentifierType() instanceof CompositeType) [ CD ]
Line_27 $$ if (componentIds.contains(name)) -->Line_31 $$ explicitComponentIds.add(name)[ CD ]
Line_23 $$ for (int i = 0; i < propertyNames.length; i++) -->Line_24 $$ componentIds.add(propertyNames[i])[ CD ]
Line_2 $$ private void visitPropertySpecNodes(AST propertyNode, List types) -->Line_18 $$ if (!explicitIdInsertion) [ CD ]
Line_2 $$ private void visitPropertySpecNodes(AST propertyNode, List types) -->Line_45 $$ types.add(persister.toType(name))[ FD ]
