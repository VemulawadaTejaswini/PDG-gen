Line_2 $$ public void testChildHasChanged() throws Exception -->Line_10 $$ assertEquals(0, list.size())[ CD ]
Line_11 $$ list = queryForPropertyHasNotChanged(ChildEntity.class, id1, "numVal")-->Line_12 $$ assertEquals(0, list.size())[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(ChildEntity.class, id1, "data")-->Line_11 $$ list = queryForPropertyHasNotChanged(ChildEntity.class, id1, "numVal")[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(ChildEntity.class, id1, "data")-->Line_4 $$ assertEquals(2, list.size())[ FD ]
Line_2 $$ public void testChildHasChanged() throws Exception -->Line_5 $$ assertEquals(makeList(1, 2), extractRevisionNumbers(list))[ CD ]
Line_6 $$ list = queryForPropertyHasChanged(ChildEntity.class, id1, "numVal")-->Line_7 $$ assertEquals(2, list.size())[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(ChildEntity.class, id1, "data")-->Line_12 $$ assertEquals(0, list.size())[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(ChildEntity.class, id1, "data")-->Line_6 $$ list = queryForPropertyHasChanged(ChildEntity.class, id1, "numVal")[ FD ]
Line_9 $$ list = queryForPropertyHasNotChanged(ChildEntity.class, id1, "data")-->Line_10 $$ assertEquals(0, list.size())[ FD ]
Line_2 $$ public void testChildHasChanged() throws Exception -->Line_7 $$ assertEquals(2, list.size())[ CD ]
Line_2 $$ public void testChildHasChanged() throws Exception -->Line_4 $$ assertEquals(2, list.size())[ CD ]
Line_2 $$ public void testChildHasChanged() throws Exception -->Line_9 $$ list = queryForPropertyHasNotChanged(ChildEntity.class, id1, "data")[ CD ]
Line_6 $$ list = queryForPropertyHasChanged(ChildEntity.class, id1, "numVal")-->Line_11 $$ list = queryForPropertyHasNotChanged(ChildEntity.class, id1, "numVal")[ FD ]
Line_2 $$ public void testChildHasChanged() throws Exception -->Line_6 $$ list = queryForPropertyHasChanged(ChildEntity.class, id1, "numVal")[ CD ]
Line_9 $$ list = queryForPropertyHasNotChanged(ChildEntity.class, id1, "data")-->Line_11 $$ list = queryForPropertyHasNotChanged(ChildEntity.class, id1, "numVal")[ FD ]
Line_6 $$ list = queryForPropertyHasChanged(ChildEntity.class, id1, "numVal")-->Line_12 $$ assertEquals(0, list.size())[ FD ]
Line_2 $$ public void testChildHasChanged() throws Exception -->Line_12 $$ assertEquals(0, list.size())[ CD ]
Line_3 $$ List list = queryForPropertyHasChanged(ChildEntity.class, id1, "data")-->Line_8 $$ assertEquals(makeList(1, 2), extractRevisionNumbers(list))[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(ChildEntity.class, id1, "data")-->Line_10 $$ assertEquals(0, list.size())[ FD ]
Line_6 $$ list = queryForPropertyHasChanged(ChildEntity.class, id1, "numVal")-->Line_10 $$ assertEquals(0, list.size())[ FD ]
Line_2 $$ public void testChildHasChanged() throws Exception -->Line_8 $$ assertEquals(makeList(1, 2), extractRevisionNumbers(list))[ CD ]
Line_6 $$ list = queryForPropertyHasChanged(ChildEntity.class, id1, "numVal")-->Line_8 $$ assertEquals(makeList(1, 2), extractRevisionNumbers(list))[ FD ]
Line_9 $$ list = queryForPropertyHasNotChanged(ChildEntity.class, id1, "data")-->Line_12 $$ assertEquals(0, list.size())[ FD ]
Line_2 $$ public void testChildHasChanged() throws Exception -->Line_3 $$ List list = queryForPropertyHasChanged(ChildEntity.class, id1, "data")[ CD ]
Line_6 $$ list = queryForPropertyHasChanged(ChildEntity.class, id1, "numVal")-->Line_9 $$ list = queryForPropertyHasNotChanged(ChildEntity.class, id1, "data")[ FD ]
Line_2 $$ public void testChildHasChanged() throws Exception -->Line_11 $$ list = queryForPropertyHasNotChanged(ChildEntity.class, id1, "numVal")[ CD ]
Line_3 $$ List list = queryForPropertyHasChanged(ChildEntity.class, id1, "data")-->Line_9 $$ list = queryForPropertyHasNotChanged(ChildEntity.class, id1, "data")[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(ChildEntity.class, id1, "data")-->Line_7 $$ assertEquals(2, list.size())[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(ChildEntity.class, id1, "data")-->Line_5 $$ assertEquals(makeList(1, 2), extractRevisionNumbers(list))[ FD ]
