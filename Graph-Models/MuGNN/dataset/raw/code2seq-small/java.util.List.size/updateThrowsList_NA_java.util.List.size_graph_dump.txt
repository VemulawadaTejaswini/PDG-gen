Line_17 $$ if (InheritanceUtil.isInheritorOrSelf(exceptionClass, classType, true) || InheritanceUtil.isInheritorOrSelf(classType, exceptionClass, true)) -->Line_18 $$ myUnThrownExceptions.remove(i)[ CD ]
Line_14 $$ for (int i = myUnThrownExceptions.size() - 1; i >= 0; i--) -->Line_17 $$ if (InheritanceUtil.isInheritorOrSelf(exceptionClass, classType, true) || InheritanceUtil.isInheritorOrSelf(classType, exceptionClass, true)) [ CD ]
Line_14 $$ for (int i = myUnThrownExceptions.size() - 1; i >= 0; i--) -->Line_15 $$ String exceptionFqn = myUnThrownExceptions.get(i)[ CD ]
Line_15 $$ String exceptionFqn = myUnThrownExceptions.get(i)-->Line_16 $$ PsiClass classType = facade.findClass(exceptionFqn, GlobalSearchScope.allScope(getRefManager().getProject()))[ FD ]
Line_14 $$ for (int i = myUnThrownExceptions.size() - 1; i >= 0; i--) -->Line_18 $$ myUnThrownExceptions.remove(i)[ FD ]
Line_13 $$ JavaPsiFacade facade = JavaPsiFacade.getInstance(myManager.getProject())-->Line_16 $$ PsiClass classType = facade.findClass(exceptionFqn, GlobalSearchScope.allScope(getRefManager().getProject()))[ FD ]
Line_8 $$ if (exceptionType == null) -->Line_10 $$ return[ CD ]
Line_2 $$ public void updateThrowsList(PsiClassType exceptionType) -->Line_8 $$ if (exceptionType == null) [ FD ]
Line_7 $$ if (myUnThrownExceptions != null) -->Line_21 $$ if (myUnThrownExceptions.isEmpty())[ CD ]
Line_14 $$ for (int i = myUnThrownExceptions.size() - 1; i >= 0; i--) -->Line_16 $$ PsiClass classType = facade.findClass(exceptionFqn, GlobalSearchScope.allScope(getRefManager().getProject()))[ CD ]
Line_12 $$ PsiClass exceptionClass = exceptionType.resolve()-->Line_17 $$ if (InheritanceUtil.isInheritorOrSelf(exceptionClass, classType, true) || InheritanceUtil.isInheritorOrSelf(classType, exceptionClass, true)) [ FD ]
Line_2 $$ public void updateThrowsList(PsiClassType exceptionType) -->Line_5 $$ ((RefMethodImpl) refSuper).updateThrowsList(exceptionType)[ FD ]
Line_2 $$ public void updateThrowsList(PsiClassType exceptionType) -->Line_3 $$ if (!getSuperMethods().isEmpty()) [ CD ]
Line_16 $$ PsiClass classType = facade.findClass(exceptionFqn, GlobalSearchScope.allScope(getRefManager().getProject()))-->Line_17 $$ if (InheritanceUtil.isInheritorOrSelf(exceptionClass, classType, true) || InheritanceUtil.isInheritorOrSelf(classType, exceptionClass, true)) [ FD ]
Line_7 $$ if (myUnThrownExceptions != null) -->Line_13 $$ JavaPsiFacade facade = JavaPsiFacade.getInstance(myManager.getProject())[ CD ]
Line_14 $$ for (int i = myUnThrownExceptions.size() - 1; i >= 0; i--) -->Line_15 $$ String exceptionFqn = myUnThrownExceptions.get(i)[ FD ]
Line_7 $$ if (myUnThrownExceptions != null) -->Line_14 $$ for (int i = myUnThrownExceptions.size() - 1; i >= 0; i--) [ CD ]
Line_7 $$ if (myUnThrownExceptions != null) -->Line_12 $$ PsiClass exceptionClass = exceptionType.resolve()[ CD ]
Line_7 $$ if (myUnThrownExceptions != null) -->Line_8 $$ if (exceptionType == null) [ CD ]
Line_2 $$ public void updateThrowsList(PsiClassType exceptionType) -->Line_12 $$ PsiClass exceptionClass = exceptionType.resolve()[ FD ]
Line_3 $$ if (!getSuperMethods().isEmpty()) -->Line_7 $$ if (myUnThrownExceptions != null) [ CD ]
