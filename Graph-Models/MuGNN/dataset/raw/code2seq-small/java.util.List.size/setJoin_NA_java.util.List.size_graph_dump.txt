Line_48 $$ for (int i = 0; i < values.size(); i++) -->Line_50 $$ qPos.add(value)[ CD ]
Line_49 $$ Integer value = values.get(i)-->Line_50 $$ qPos.add(value)[ FD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_28 $$ qPos.add(sb.toString())[ FD ]
Line_9 $$ Boolean value = (Boolean) entry.getValue()-->Line_65 $$ if (value instanceof Long) [ FD ]
Line_33 $$ RolePermissions rolePermissions = (RolePermissions) entry.getValue()-->Line_35 $$ if (ResourceBlockLocalServiceUtil.isSupported(rolePermissions.getName())) [ FD ]
Line_71 $$ String valueString = (String) value-->Line_72 $$ if (Validator.isNotNull(valueString)) [ FD ]
Line_46 $$ if (key.equals("types")) -->Line_47 $$ List<Integer> values = (List<Integer>) entry.getValue()[ CD ]
Line_66 $$ Long valueLong = (Long) value-->Line_68 $$ qPos.add(valueLong)[ FD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_44 $$ qPos.add(resourceAction.getBitwiseValue())[ FD ]
Line_22 $$ StringBundler sb = new StringBundler(5)-->Line_25 $$ sb.append(group.getGroupId())[ FD ]
Line_6 $$ for (Map.Entry<String, Object> entry : params.entrySet()) -->Line_59 $$ Object value = entry.getValue()[ FD ]
Line_48 $$ for (int i = 0; i < values.size(); i++) -->Line_49 $$ Integer value = values.get(i)[ FD ]
Line_3 $$ if (params == null) -->Line_4 $$ return[ CD ]
Line_48 $$ for (int i = 0; i < values.size(); i++) -->Line_49 $$ Integer value = values.get(i)[ CD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_38 $$ qPos.add(rolePermissions.getRoleId())[ FD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_42 $$ qPos.add(rolePermissions.getScope())[ FD ]
Line_7 $$ String key = entry.getKey()-->Line_31 $$ if (key.equals("pageCount")) [ FD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_68 $$ qPos.add(valueLong)[ FD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_50 $$ qPos.add(value)[ FD ]
Line_71 $$ String valueString = (String) value-->Line_73 $$ qPos.add(valueString)[ FD ]
Line_34 $$ ResourceAction resourceAction = ResourceActionLocalServiceUtil.getResourceAction(rolePermissions.getName(), rolePermissions.getActionId())-->Line_39 $$ qPos.add(resourceAction.getBitwiseValue())[ FD ]
Line_66 $$ Long valueLong = (Long) value-->Line_67 $$ if (Validator.isNotNull(valueLong)) [ FD ]
Line_6 $$ for (Map.Entry<String, Object> entry : params.entrySet()) -->Line_33 $$ RolePermissions rolePermissions = (RolePermissions) entry.getValue()[ FD ]
Line_65 $$ if (value instanceof Long) -->Line_70 $$ if (value instanceof String) [ CD ]
Line_7 $$ String key = entry.getKey()-->Line_18 $$ if (key.equals("groupsTree")) [ FD ]
Line_49 $$ Integer value = values.get(i)-->Line_65 $$ if (value instanceof Long) [ FD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_10 $$ qPos.add(value)[ FD ]
Line_60 $$ if (value instanceof Integer) -->Line_65 $$ if (value instanceof Long) [ CD ]
Line_34 $$ ResourceAction resourceAction = ResourceActionLocalServiceUtil.getResourceAction(rolePermissions.getName(), rolePermissions.getActionId())-->Line_44 $$ qPos.add(resourceAction.getBitwiseValue())[ FD ]
Line_49 $$ Integer value = values.get(i)-->Line_70 $$ if (value instanceof String) [ FD ]
Line_52 $$ if (key.equals("userGroupRole")) -->Line_57 $$ qPos.add(roleId)[ CD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_3 $$ if (params == null) [ FD ]
Line_12 $$ List<Long> excludedGroupIds = (List<Long>) entry.getValue()-->Line_13 $$ if (!excludedGroupIds.isEmpty()) [ FD ]
Line_65 $$ if (value instanceof Long) -->Line_66 $$ Long valueLong = (Long) value[ CD ]
Line_22 $$ StringBundler sb = new StringBundler(5)-->Line_28 $$ qPos.add(sb.toString())[ FD ]
Line_11 $$ if (key.equals("excludedGroupIds")) -->Line_13 $$ if (!excludedGroupIds.isEmpty()) [ CD ]
Line_70 $$ if (value instanceof String) -->Line_71 $$ String valueString = (String) value[ CD ]
Line_33 $$ RolePermissions rolePermissions = (RolePermissions) entry.getValue()-->Line_42 $$ qPos.add(rolePermissions.getScope())[ FD ]
Line_8 $$ if (key.equals("active") || key.equals("layoutSet") || key.equals("manualMembership") || key.equals("site")) -->Line_10 $$ qPos.add(value)[ CD ]
Line_47 $$ List<Integer> values = (List<Integer>) entry.getValue()-->Line_48 $$ for (int i = 0; i < values.size(); i++) [ FD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_63 $$ qPos.add(valueInteger)[ FD ]
Line_7 $$ String key = entry.getKey()-->Line_46 $$ if (key.equals("types")) [ FD ]
Line_54 $$ Long userId = values.get(0)-->Line_56 $$ qPos.add(userId)[ FD ]
Line_6 $$ for (Map.Entry<String, Object> entry : params.entrySet()) -->Line_53 $$ List<Long> values = (List<Long>) entry.getValue()[ FD ]
Line_67 $$ if (Validator.isNotNull(valueLong)) -->Line_68 $$ qPos.add(valueLong)[ CD ]
Line_31 $$ if (key.equals("pageCount")) -->Line_32 $$ if (key.equals("rolePermissions")) [ CD ]
Line_33 $$ RolePermissions rolePermissions = (RolePermissions) entry.getValue()-->Line_38 $$ qPos.add(rolePermissions.getRoleId())[ FD ]
Line_32 $$ if (key.equals("rolePermissions")) -->Line_46 $$ if (key.equals("types")) [ CD ]
Line_32 $$ if (key.equals("rolePermissions")) -->Line_35 $$ if (ResourceBlockLocalServiceUtil.isSupported(rolePermissions.getName())) [ CD ]
Line_6 $$ for (Map.Entry<String, Object> entry : params.entrySet()) -->Line_47 $$ List<Integer> values = (List<Integer>) entry.getValue()[ FD ]
Line_49 $$ Integer value = values.get(i)-->Line_60 $$ if (value instanceof Integer) [ FD ]
Line_14 $$ for (long excludedGroupId : excludedGroupIds) -->Line_15 $$ qPos.add(excludedGroupId)[ FD ]
Line_9 $$ Boolean value = (Boolean) entry.getValue()-->Line_60 $$ if (value instanceof Integer) [ FD ]
Line_61 $$ Integer valueInteger = (Integer) value-->Line_62 $$ if (Validator.isNotNull(valueInteger)) [ FD ]
Line_22 $$ StringBundler sb = new StringBundler(5)-->Line_24 $$ sb.append(StringPool.SLASH)[ FD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_73 $$ qPos.add(valueString)[ FD ]
Line_35 $$ if (ResourceBlockLocalServiceUtil.isSupported(rolePermissions.getName())) -->Line_42 $$ qPos.add(rolePermissions.getScope())[ CD ]
Line_7 $$ String key = entry.getKey()-->Line_52 $$ if (key.equals("userGroupRole")) [ FD ]
Line_18 $$ if (key.equals("groupsTree")) -->Line_19 $$ List<Group> groupsTree = (List<Group>) entry.getValue()[ CD ]
Line_6 $$ for (Map.Entry<String, Object> entry : params.entrySet()) -->Line_7 $$ String key = entry.getKey()[ FD ]
Line_11 $$ if (key.equals("excludedGroupIds")) -->Line_12 $$ List<Long> excludedGroupIds = (List<Long>) entry.getValue()[ CD ]
Line_60 $$ if (value instanceof Integer) -->Line_61 $$ Integer valueInteger = (Integer) value[ CD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_3 $$ if (params == null) [ CD ]
Line_47 $$ List<Integer> values = (List<Integer>) entry.getValue()-->Line_49 $$ Integer value = values.get(i)[ FD ]
Line_46 $$ if (key.equals("types")) -->Line_52 $$ if (key.equals("userGroupRole")) [ CD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_41 $$ qPos.add(rolePermissions.getName())[ FD ]
Line_6 $$ for (Map.Entry<String, Object> entry : params.entrySet()) -->Line_12 $$ List<Long> excludedGroupIds = (List<Long>) entry.getValue()[ FD ]
Line_9 $$ Boolean value = (Boolean) entry.getValue()-->Line_50 $$ qPos.add(value)[ FD ]
Line_33 $$ RolePermissions rolePermissions = (RolePermissions) entry.getValue()-->Line_34 $$ ResourceAction resourceAction = ResourceActionLocalServiceUtil.getResourceAction(rolePermissions.getName(), rolePermissions.getActionId())[ FD ]
Line_52 $$ if (key.equals("userGroupRole")) -->Line_54 $$ Long userId = values.get(0)[ CD ]
Line_18 $$ if (key.equals("groupsTree")) -->Line_20 $$ if (!groupsTree.isEmpty()) [ CD ]
Line_52 $$ if (key.equals("userGroupRole")) -->Line_59 $$ Object value = entry.getValue()[ CD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_56 $$ qPos.add(userId)[ FD ]
Line_8 $$ if (key.equals("active") || key.equals("layoutSet") || key.equals("manualMembership") || key.equals("site")) -->Line_11 $$ if (key.equals("excludedGroupIds")) [ CD ]
Line_7 $$ String key = entry.getKey()-->Line_8 $$ if (key.equals("active") || key.equals("layoutSet") || key.equals("manualMembership") || key.equals("site")) [ FD ]
Line_52 $$ if (key.equals("userGroupRole")) -->Line_60 $$ if (value instanceof Integer) [ CD ]
Line_35 $$ if (ResourceBlockLocalServiceUtil.isSupported(rolePermissions.getName())) -->Line_41 $$ qPos.add(rolePermissions.getName())[ CD ]
Line_61 $$ Integer valueInteger = (Integer) value-->Line_63 $$ qPos.add(valueInteger)[ FD ]
Line_21 $$ for (Group group : groupsTree) -->Line_25 $$ sb.append(group.getGroupId())[ FD ]
Line_70 $$ if (value instanceof String) -->Line_72 $$ if (Validator.isNotNull(valueString)) [ CD ]
Line_22 $$ StringBundler sb = new StringBundler(5)-->Line_23 $$ sb.append(StringPool.PERCENT)[ FD ]
Line_32 $$ if (key.equals("rolePermissions")) -->Line_33 $$ RolePermissions rolePermissions = (RolePermissions) entry.getValue()[ CD ]
Line_33 $$ RolePermissions rolePermissions = (RolePermissions) entry.getValue()-->Line_43 $$ qPos.add(rolePermissions.getRoleId())[ FD ]
Line_35 $$ if (ResourceBlockLocalServiceUtil.isSupported(rolePermissions.getName())) -->Line_43 $$ qPos.add(rolePermissions.getRoleId())[ CD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_15 $$ qPos.add(excludedGroupId)[ FD ]
Line_22 $$ StringBundler sb = new StringBundler(5)-->Line_27 $$ sb.append(StringPool.PERCENT)[ FD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_6 $$ for (Map.Entry<String, Object> entry : params.entrySet()) [ FD ]
Line_11 $$ if (key.equals("excludedGroupIds")) -->Line_18 $$ if (key.equals("groupsTree")) [ CD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_39 $$ qPos.add(resourceAction.getBitwiseValue())[ FD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_43 $$ qPos.add(rolePermissions.getRoleId())[ FD ]
Line_8 $$ if (key.equals("active") || key.equals("layoutSet") || key.equals("manualMembership") || key.equals("site")) -->Line_9 $$ Boolean value = (Boolean) entry.getValue()[ CD ]
Line_47 $$ List<Integer> values = (List<Integer>) entry.getValue()-->Line_55 $$ Long roleId = values.get(1)[ FD ]
Line_62 $$ if (Validator.isNotNull(valueInteger)) -->Line_63 $$ qPos.add(valueInteger)[ CD ]
Line_65 $$ if (value instanceof Long) -->Line_67 $$ if (Validator.isNotNull(valueLong)) [ CD ]
Line_7 $$ String key = entry.getKey()-->Line_32 $$ if (key.equals("rolePermissions")) [ FD ]
Line_35 $$ if (ResourceBlockLocalServiceUtil.isSupported(rolePermissions.getName())) -->Line_39 $$ qPos.add(resourceAction.getBitwiseValue())[ CD ]
Line_32 $$ if (key.equals("rolePermissions")) -->Line_34 $$ ResourceAction resourceAction = ResourceActionLocalServiceUtil.getResourceAction(rolePermissions.getName(), rolePermissions.getActionId())[ CD ]
Line_6 $$ for (Map.Entry<String, Object> entry : params.entrySet()) -->Line_9 $$ Boolean value = (Boolean) entry.getValue()[ FD ]
Line_52 $$ if (key.equals("userGroupRole")) -->Line_55 $$ Long roleId = values.get(1)[ CD ]
Line_46 $$ if (key.equals("types")) -->Line_48 $$ for (int i = 0; i < values.size(); i++) [ CD ]
Line_7 $$ String key = entry.getKey()-->Line_11 $$ if (key.equals("excludedGroupIds")) [ FD ]
Line_9 $$ Boolean value = (Boolean) entry.getValue()-->Line_10 $$ qPos.add(value)[ FD ]
Line_9 $$ Boolean value = (Boolean) entry.getValue()-->Line_70 $$ if (value instanceof String) [ FD ]
Line_2 $$ protected void setJoin(QueryPos qPos, LinkedHashMap<String, Object> params) throws Exception -->Line_57 $$ qPos.add(roleId)[ FD ]
Line_47 $$ List<Integer> values = (List<Integer>) entry.getValue()-->Line_54 $$ Long userId = values.get(0)[ FD ]
Line_33 $$ RolePermissions rolePermissions = (RolePermissions) entry.getValue()-->Line_41 $$ qPos.add(rolePermissions.getName())[ FD ]
Line_35 $$ if (ResourceBlockLocalServiceUtil.isSupported(rolePermissions.getName())) -->Line_38 $$ qPos.add(rolePermissions.getRoleId())[ CD ]
Line_19 $$ List<Group> groupsTree = (List<Group>) entry.getValue()-->Line_20 $$ if (!groupsTree.isEmpty()) [ FD ]
Line_18 $$ if (key.equals("groupsTree")) -->Line_31 $$ if (key.equals("pageCount")) [ CD ]
Line_60 $$ if (value instanceof Integer) -->Line_62 $$ if (Validator.isNotNull(valueInteger)) [ CD ]
Line_6 $$ for (Map.Entry<String, Object> entry : params.entrySet()) -->Line_19 $$ List<Group> groupsTree = (List<Group>) entry.getValue()[ FD ]
Line_72 $$ if (Validator.isNotNull(valueString)) -->Line_73 $$ qPos.add(valueString)[ CD ]
Line_55 $$ Long roleId = values.get(1)-->Line_57 $$ qPos.add(roleId)[ FD ]
Line_35 $$ if (ResourceBlockLocalServiceUtil.isSupported(rolePermissions.getName())) -->Line_44 $$ qPos.add(resourceAction.getBitwiseValue())[ CD ]
Line_52 $$ if (key.equals("userGroupRole")) -->Line_56 $$ qPos.add(userId)[ CD ]
Line_22 $$ StringBundler sb = new StringBundler(5)-->Line_26 $$ sb.append(StringPool.SLASH)[ FD ]
