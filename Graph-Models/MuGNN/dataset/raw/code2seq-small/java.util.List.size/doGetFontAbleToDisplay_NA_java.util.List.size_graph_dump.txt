Line_12 $$ for (int i = 0; i < ourFontNames.size(); i++) -->Line_13 $$ String name = ourFontNames.get(i)[ FD ]
Line_12 $$ for (int i = 0; i < ourFontNames.size(); i++) -->Line_13 $$ String name = ourFontNames.get(i)[ CD ]
Line_14 $$ FontInfo font = new FontInfo(name, size, style)-->Line_16 $$ ourUsedFonts.put(new FontKey(name, size, style), font)[ FD ]
Line_2 $$ private static FontInfo doGetFontAbleToDisplay(int codePoint, int size, @JdkConstants.FontStyle int style) -->Line_4 $$ if (ourUndisplayableChars.contains(codePoint))[ FD ]
Line_8 $$ if (font.getSize() == size && font.getStyle() == style && font.canDisplay(codePoint)) -->Line_9 $$ return font[ CD ]
Line_12 $$ for (int i = 0; i < ourFontNames.size(); i++) -->Line_17 $$ ourFontNames.remove(i)[ FD ]
Line_7 $$ for (FontInfo font : descriptors) -->Line_16 $$ ourUsedFonts.put(new FontKey(name, size, style), font)[ FD ]
Line_12 $$ for (int i = 0; i < ourFontNames.size(); i++) -->Line_15 $$ if (font.canDisplay(codePoint)) [ CD ]
Line_15 $$ if (font.canDisplay(codePoint)) -->Line_17 $$ ourFontNames.remove(i)[ CD ]
Line_7 $$ for (FontInfo font : descriptors) -->Line_8 $$ if (font.getSize() == size && font.getStyle() == style && font.canDisplay(codePoint)) [ FD ]
Line_2 $$ private static FontInfo doGetFontAbleToDisplay(int codePoint, int size, @JdkConstants.FontStyle int style) -->Line_8 $$ if (font.getSize() == size && font.getStyle() == style && font.canDisplay(codePoint)) [ FD ]
Line_7 $$ for (FontInfo font : descriptors) -->Line_15 $$ if (font.canDisplay(codePoint)) [ FD ]
Line_12 $$ for (int i = 0; i < ourFontNames.size(); i++) -->Line_14 $$ FontInfo font = new FontInfo(name, size, style)[ CD ]
Line_2 $$ private static FontInfo doGetFontAbleToDisplay(int codePoint, int size, @JdkConstants.FontStyle int style) -->Line_21 $$ ourUndisplayableChars.add(codePoint)[ FD ]
Line_2 $$ private static FontInfo doGetFontAbleToDisplay(int codePoint, int size, @JdkConstants.FontStyle int style) -->Line_15 $$ if (font.canDisplay(codePoint)) [ FD ]
Line_14 $$ FontInfo font = new FontInfo(name, size, style)-->Line_15 $$ if (font.canDisplay(codePoint)) [ FD ]
Line_4 $$ if (ourUndisplayableChars.contains(codePoint))-->Line_5 $$ return ourSharedDefaultFont[ CD ]
Line_15 $$ if (font.canDisplay(codePoint)) -->Line_18 $$ return font[ CD ]
Line_15 $$ if (font.canDisplay(codePoint)) -->Line_16 $$ ourUsedFonts.put(new FontKey(name, size, style), font)[ CD ]
