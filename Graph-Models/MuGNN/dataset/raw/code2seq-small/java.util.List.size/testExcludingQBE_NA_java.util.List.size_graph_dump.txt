Line_18 $$ result = crit.list()-->Line_20 $$ assertEquals(1, result.size())[ FD ]
Line_8 $$ Criteria crit = s.createCriteria(Componentizable.class)-->Line_15 $$ crit = s.createCriteria(Componentizable.class)[ FD ]
Line_8 $$ Criteria crit = s.createCriteria(Componentizable.class)-->Line_10 $$ crit.add(ex)[ FD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_11 $$ List result = crit.list()[ CD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_16 $$ ex = Example.create(master).enableLike().excludeProperty("component.subComponent.subName1")[ CD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_17 $$ crit.add(ex)[ CD ]
Line_11 $$ List result = crit.list()-->Line_20 $$ assertEquals(1, result.size())[ FD ]
Line_8 $$ Criteria crit = s.createCriteria(Componentizable.class)-->Line_17 $$ crit.add(ex)[ FD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_15 $$ crit = s.createCriteria(Componentizable.class)[ CD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_12 $$ assertNotNull(result)[ CD ]
Line_18 $$ result = crit.list()-->Line_19 $$ assertNotNull(result)[ FD ]
Line_5 $$ Session s = openSession()-->Line_8 $$ Criteria crit = s.createCriteria(Componentizable.class)[ FD ]
Line_11 $$ List result = crit.list()-->Line_18 $$ result = crit.list()[ FD ]
Line_7 $$ Componentizable master = getMaster("hibernate", null, "ope%")-->Line_16 $$ ex = Example.create(master).enableLike().excludeProperty("component.subComponent.subName1")[ FD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_18 $$ result = crit.list()[ CD ]
Line_9 $$ Example ex = Example.create(master).enableLike().excludeProperty("component.subComponent")-->Line_16 $$ ex = Example.create(master).enableLike().excludeProperty("component.subComponent.subName1")[ FD ]
Line_8 $$ Criteria crit = s.createCriteria(Componentizable.class)-->Line_18 $$ result = crit.list()[ FD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_13 $$ assertEquals(3, result.size())[ CD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_22 $$ s.close()[ CD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_14 $$ master = getMaster("hibernate", "ORM tool", "fake stuff")[ CD ]
Line_15 $$ crit = s.createCriteria(Componentizable.class)-->Line_17 $$ crit.add(ex)[ FD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_4 $$ initData()[ CD ]
Line_9 $$ Example ex = Example.create(master).enableLike().excludeProperty("component.subComponent")-->Line_10 $$ crit.add(ex)[ FD ]
Line_5 $$ Session s = openSession()-->Line_15 $$ crit = s.createCriteria(Componentizable.class)[ FD ]
Line_7 $$ Componentizable master = getMaster("hibernate", null, "ope%")-->Line_9 $$ Example ex = Example.create(master).enableLike().excludeProperty("component.subComponent")[ FD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_6 $$ Transaction t = s.beginTransaction()[ CD ]
Line_14 $$ master = getMaster("hibernate", "ORM tool", "fake stuff")-->Line_16 $$ ex = Example.create(master).enableLike().excludeProperty("component.subComponent.subName1")[ FD ]
Line_11 $$ List result = crit.list()-->Line_12 $$ assertNotNull(result)[ FD ]
Line_9 $$ Example ex = Example.create(master).enableLike().excludeProperty("component.subComponent")-->Line_17 $$ crit.add(ex)[ FD ]
Line_11 $$ List result = crit.list()-->Line_19 $$ assertNotNull(result)[ FD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_20 $$ assertEquals(1, result.size())[ CD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_21 $$ t.commit()[ FD ]
Line_8 $$ Criteria crit = s.createCriteria(Componentizable.class)-->Line_11 $$ List result = crit.list()[ FD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_19 $$ assertNotNull(result)[ CD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_9 $$ Example ex = Example.create(master).enableLike().excludeProperty("component.subComponent")[ CD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_7 $$ Componentizable master = getMaster("hibernate", null, "ope%")[ CD ]
Line_5 $$ Session s = openSession()-->Line_6 $$ Transaction t = s.beginTransaction()[ FD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_5 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_21 $$ t.commit()[ CD ]
Line_5 $$ Session s = openSession()-->Line_22 $$ s.close()[ FD ]
Line_16 $$ ex = Example.create(master).enableLike().excludeProperty("component.subComponent.subName1")-->Line_17 $$ crit.add(ex)[ FD ]
Line_11 $$ List result = crit.list()-->Line_13 $$ assertEquals(3, result.size())[ FD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_10 $$ crit.add(ex)[ CD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_3 $$ deleteData()[ CD ]
Line_7 $$ Componentizable master = getMaster("hibernate", null, "ope%")-->Line_14 $$ master = getMaster("hibernate", "ORM tool", "fake stuff")[ FD ]
Line_15 $$ crit = s.createCriteria(Componentizable.class)-->Line_18 $$ result = crit.list()[ FD ]
Line_2 $$ public void testExcludingQBE() throws Exception -->Line_8 $$ Criteria crit = s.createCriteria(Componentizable.class)[ CD ]
