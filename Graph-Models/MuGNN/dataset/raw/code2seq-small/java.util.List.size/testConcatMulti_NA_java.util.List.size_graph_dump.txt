Line_2 $$ public void testConcatMulti() -->Line_8 $$ assertEquals(4, (int) l.get(3))[ CD ]
Line_3 $$ List<Integer> l = ContainerUtil.concat(Arrays.asList(1, 2), Collections.EMPTY_LIST, Arrays.asList(3, 4))-->Line_6 $$ assertEquals(2, (int) l.get(1))[ FD ]
Line_3 $$ List<Integer> l = ContainerUtil.concat(Arrays.asList(1, 2), Collections.EMPTY_LIST, Arrays.asList(3, 4))-->Line_7 $$ assertEquals(3, (int) l.get(2))[ FD ]
Line_2 $$ public void testConcatMulti() -->Line_7 $$ assertEquals(3, (int) l.get(2))[ CD ]
Line_2 $$ public void testConcatMulti() -->Line_4 $$ assertEquals(4, l.size())[ CD ]
Line_3 $$ List<Integer> l = ContainerUtil.concat(Arrays.asList(1, 2), Collections.EMPTY_LIST, Arrays.asList(3, 4))-->Line_8 $$ assertEquals(4, (int) l.get(3))[ FD ]
Line_2 $$ public void testConcatMulti() -->Line_6 $$ assertEquals(2, (int) l.get(1))[ CD ]
Line_2 $$ public void testConcatMulti() -->Line_3 $$ List<Integer> l = ContainerUtil.concat(Arrays.asList(1, 2), Collections.EMPTY_LIST, Arrays.asList(3, 4))[ CD ]
Line_3 $$ List<Integer> l = ContainerUtil.concat(Arrays.asList(1, 2), Collections.EMPTY_LIST, Arrays.asList(3, 4))-->Line_15 $$ l.get(4)[ FD ]
Line_3 $$ List<Integer> l = ContainerUtil.concat(Arrays.asList(1, 2), Collections.EMPTY_LIST, Arrays.asList(3, 4))-->Line_5 $$ assertEquals(1, (int) l.get(0))[ FD ]
Line_2 $$ public void testConcatMulti() -->Line_5 $$ assertEquals(1, (int) l.get(0))[ CD ]
Line_3 $$ List<Integer> l = ContainerUtil.concat(Arrays.asList(1, 2), Collections.EMPTY_LIST, Arrays.asList(3, 4))-->Line_4 $$ assertEquals(4, l.size())[ FD ]
Line_3 $$ List<Integer> l = ContainerUtil.concat(Arrays.asList(1, 2), Collections.EMPTY_LIST, Arrays.asList(3, 4))-->Line_10 $$ l.get(-1)[ FD ]
