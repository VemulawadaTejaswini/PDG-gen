Line_25 $$ for (int i = 0; i < asyncIndices; i++) -->Line_70 $$ for (int i = 0; i < asyncIndices; i++) [ FD ]
Line_21 $$ InternalTestCluster.Async<List<String>> asyncNodesFuture = internalCluster().startNodesAsync(asyncNodes, settings)-->Line_84 $$ asyncNodesFuture.get()[ FD ]
Line_22 $$ int asyncIndices = between(0, 10)-->Line_70 $$ for (int i = 0; i < asyncIndices; i++) [ FD ]
Line_6 $$ int initialNodes = between(1, 3)-->Line_8 $$ for (int i = 0; i < initialNodes; i++) [ FD ]
Line_4 $$ final List<String> indices = new CopyOnWriteArrayList()-->Line_17 $$ indices.add("test-" + i)[ FD ]
Line_15 $$ for (int i = 0; i < initialIndices; i++) -->Line_16 $$ createTestIndex("test-" + i)[ CD ]
Line_8 $$ for (int i = 0; i < initialNodes; i++) -->Line_25 $$ for (int i = 0; i < asyncIndices; i++) [ FD ]
Line_42 $$ while (System.currentTimeMillis() - start < 30000 && !snapshotIsDone("test-repo", "test-snap")) -->Line_45 $$ if (chaosType < 4) [ CD ]
Line_48 $$ String index = indices.remove(randomInt(indices.size() - 1))-->Line_62 $$ createTestIndex(index)[ FD ]
Line_8 $$ for (int i = 0; i < initialNodes; i++) -->Line_70 $$ for (int i = 0; i < asyncIndices; i++) [ FD ]
Line_52 $$ if (chaosType < 6) -->Line_58 $$ if (chaosType < 8) [ CD ]
Line_44 $$ int chaosType = randomInt(10)-->Line_58 $$ if (chaosType < 8) [ FD ]
Line_19 $$ int asyncNodes = between(0, 5)-->Line_21 $$ InternalTestCluster.Async<List<String>> asyncNodesFuture = internalCluster().startNodesAsync(asyncNodes, settings)[ FD ]
Line_25 $$ for (int i = 0; i < asyncIndices; i++) -->Line_27 $$ asyncIndexThreads[i] = new Thread(new Runnable() [ CD ]
Line_48 $$ String index = indices.remove(randomInt(indices.size() - 1))-->Line_50 $$ internalCluster().wipeIndices(index)[ FD ]
Line_44 $$ int chaosType = randomInt(10)-->Line_52 $$ if (chaosType < 6) [ FD ]
Line_15 $$ for (int i = 0; i < initialIndices; i++) -->Line_25 $$ for (int i = 0; i < asyncIndices; i++) [ FD ]
Line_8 $$ for (int i = 0; i < initialNodes; i++) -->Line_15 $$ for (int i = 0; i < initialIndices; i++) [ FD ]
Line_27 $$ asyncIndexThreads[i] = new Thread(new Runnable() -->Line_32 $$ indices.add("test-async-" + cur)[ CD ]
Line_27 $$ asyncIndexThreads[i] = new Thread(new Runnable() -->Line_31 $$ createTestIndex("test-async-" + cur)[ CD ]
Line_44 $$ int chaosType = randomInt(10)-->Line_45 $$ if (chaosType < 4) [ FD ]
Line_25 $$ for (int i = 0; i < asyncIndices; i++) -->Line_35 $$ asyncIndexThreads[i].start()[ CD ]
Line_8 $$ for (int i = 0; i < initialNodes; i++) -->Line_9 $$ internalCluster().startNode(settings)[ CD ]
Line_4 $$ final List<String> indices = new CopyOnWriteArrayList()-->Line_48 $$ String index = indices.remove(randomInt(indices.size() - 1))[ FD ]
Line_42 $$ while (System.currentTimeMillis() - start < 30000 && !snapshotIsDone("test-repo", "test-snap")) -->Line_44 $$ int chaosType = randomInt(10)[ CD ]
Line_45 $$ if (chaosType < 4) -->Line_52 $$ if (chaosType < 6) [ CD ]
Line_22 $$ int asyncIndices = between(0, 10)-->Line_25 $$ for (int i = 0; i < asyncIndices; i++) [ FD ]
Line_42 $$ while (System.currentTimeMillis() - start < 30000 && !snapshotIsDone("test-repo", "test-snap")) -->Line_43 $$ Thread.sleep(100)[ CD ]
Line_5 $$ Settings settings = settingsBuilder().put("action.write_consistency", "one").build()-->Line_21 $$ InternalTestCluster.Async<List<String>> asyncNodesFuture = internalCluster().startNodesAsync(asyncNodes, settings)[ FD ]
Line_4 $$ final List<String> indices = new CopyOnWriteArrayList()-->Line_32 $$ indices.add("test-async-" + cur)[ FD ]
Line_58 $$ if (chaosType < 8) -->Line_62 $$ createTestIndex(index)[ CD ]
Line_70 $$ for (int i = 0; i < asyncIndices; i++) -->Line_71 $$ asyncIndexThreads[i].join()[ CD ]
Line_13 $$ int initialIndices = between(1, 3)-->Line_15 $$ for (int i = 0; i < initialIndices; i++) [ FD ]
Line_15 $$ for (int i = 0; i < initialIndices; i++) -->Line_70 $$ for (int i = 0; i < asyncIndices; i++) [ FD ]
Line_5 $$ Settings settings = settingsBuilder().put("action.write_consistency", "one").build()-->Line_9 $$ internalCluster().startNode(settings)[ FD ]
Line_25 $$ for (int i = 0; i < asyncIndices; i++) -->Line_26 $$ final int cur = i[ CD ]
Line_15 $$ for (int i = 0; i < initialIndices; i++) -->Line_17 $$ indices.add("test-" + i)[ CD ]
