Line_4 $$ List<String> tokens = simpleKeywordTokenizer.tokenize("This is a \"simple token\" test")-->Line_8 $$ Assert.assertEquals("a", tokens.get(2))[ FD ]
Line_4 $$ List<String> tokens = simpleKeywordTokenizer.tokenize("This is a \"simple token\" test")-->Line_12 $$ Assert.assertEquals(5, tokens.size())[ FD ]
Line_2 $$ public void testTokenizeWithQuote() -->Line_17 $$ Assert.assertEquals("test", tokens2.get(4))[ CD ]
Line_11 $$ List<String> tokens2 = simpleKeywordTokenizer.tokenize("This \"is a\" simple token test")-->Line_17 $$ Assert.assertEquals("test", tokens2.get(4))[ FD ]
Line_4 $$ List<String> tokens = simpleKeywordTokenizer.tokenize("This is a \"simple token\" test")-->Line_5 $$ Assert.assertEquals(5, tokens.size())[ FD ]
Line_2 $$ public void testTokenizeWithQuote() -->Line_4 $$ List<String> tokens = simpleKeywordTokenizer.tokenize("This is a \"simple token\" test")[ CD ]
Line_2 $$ public void testTokenizeWithQuote() -->Line_8 $$ Assert.assertEquals("a", tokens.get(2))[ CD ]
Line_2 $$ public void testTokenizeWithQuote() -->Line_9 $$ Assert.assertEquals("\"simple token\"", tokens.get(3))[ CD ]
Line_2 $$ public void testTokenizeWithQuote() -->Line_3 $$ SimpleKeywordTokenizer simpleKeywordTokenizer = new SimpleKeywordTokenizer()[ CD ]
Line_2 $$ public void testTokenizeWithQuote() -->Line_16 $$ Assert.assertEquals("token", tokens2.get(3))[ CD ]
Line_4 $$ List<String> tokens = simpleKeywordTokenizer.tokenize("This is a \"simple token\" test")-->Line_10 $$ Assert.assertEquals("test", tokens.get(4))[ FD ]
Line_2 $$ public void testTokenizeWithQuote() -->Line_13 $$ Assert.assertEquals("This", tokens2.get(0))[ CD ]
Line_3 $$ SimpleKeywordTokenizer simpleKeywordTokenizer = new SimpleKeywordTokenizer()-->Line_4 $$ List<String> tokens = simpleKeywordTokenizer.tokenize("This is a \"simple token\" test")[ FD ]
Line_2 $$ public void testTokenizeWithQuote() -->Line_5 $$ Assert.assertEquals(5, tokens.size())[ CD ]
Line_2 $$ public void testTokenizeWithQuote() -->Line_10 $$ Assert.assertEquals("test", tokens.get(4))[ CD ]
Line_2 $$ public void testTokenizeWithQuote() -->Line_12 $$ Assert.assertEquals(5, tokens.size())[ CD ]
Line_2 $$ public void testTokenizeWithQuote() -->Line_7 $$ Assert.assertEquals("is", tokens.get(1))[ CD ]
Line_11 $$ List<String> tokens2 = simpleKeywordTokenizer.tokenize("This \"is a\" simple token test")-->Line_14 $$ Assert.assertEquals("\"is a\"", tokens2.get(1))[ FD ]
Line_11 $$ List<String> tokens2 = simpleKeywordTokenizer.tokenize("This \"is a\" simple token test")-->Line_15 $$ Assert.assertEquals("simple", tokens2.get(2))[ FD ]
Line_2 $$ public void testTokenizeWithQuote() -->Line_6 $$ Assert.assertEquals("This", tokens.get(0))[ CD ]
Line_4 $$ List<String> tokens = simpleKeywordTokenizer.tokenize("This is a \"simple token\" test")-->Line_6 $$ Assert.assertEquals("This", tokens.get(0))[ FD ]
Line_2 $$ public void testTokenizeWithQuote() -->Line_15 $$ Assert.assertEquals("simple", tokens2.get(2))[ CD ]
Line_11 $$ List<String> tokens2 = simpleKeywordTokenizer.tokenize("This \"is a\" simple token test")-->Line_16 $$ Assert.assertEquals("token", tokens2.get(3))[ FD ]
Line_11 $$ List<String> tokens2 = simpleKeywordTokenizer.tokenize("This \"is a\" simple token test")-->Line_13 $$ Assert.assertEquals("This", tokens2.get(0))[ FD ]
Line_4 $$ List<String> tokens = simpleKeywordTokenizer.tokenize("This is a \"simple token\" test")-->Line_9 $$ Assert.assertEquals("\"simple token\"", tokens.get(3))[ FD ]
Line_4 $$ List<String> tokens = simpleKeywordTokenizer.tokenize("This is a \"simple token\" test")-->Line_7 $$ Assert.assertEquals("is", tokens.get(1))[ FD ]
Line_2 $$ public void testTokenizeWithQuote() -->Line_11 $$ List<String> tokens2 = simpleKeywordTokenizer.tokenize("This \"is a\" simple token test")[ CD ]
Line_3 $$ SimpleKeywordTokenizer simpleKeywordTokenizer = new SimpleKeywordTokenizer()-->Line_11 $$ List<String> tokens2 = simpleKeywordTokenizer.tokenize("This \"is a\" simple token test")[ FD ]
Line_2 $$ public void testTokenizeWithQuote() -->Line_14 $$ Assert.assertEquals("\"is a\"", tokens2.get(1))[ CD ]
