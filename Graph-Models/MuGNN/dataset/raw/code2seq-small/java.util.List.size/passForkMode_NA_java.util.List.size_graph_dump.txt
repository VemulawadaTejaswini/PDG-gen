Line_2 $$ protected void passForkMode(String forkMode, File tempFile, JavaParameters parameters) throws ExecutionException -->Line_5 $$ int paramIdx = params.size() - 1[ CD ]
Line_6 $$ for (int i = 0; i < params.size(); i++) -->Line_9 $$ paramIdx = i[ FD ]
Line_2 $$ protected void passForkMode(String forkMode, File tempFile, JavaParameters parameters) throws ExecutionException -->Line_13 $$ parametersList.addAt(paramIdx, "@@@" + tempFile.getAbsolutePath())[ CD ]
Line_8 $$ if ("-temp".equals(param)) -->Line_9 $$ paramIdx = i[ CD ]
Line_5 $$ int paramIdx = params.size() - 1-->Line_13 $$ parametersList.addAt(paramIdx, "@@@" + tempFile.getAbsolutePath())[ FD ]
Line_5 $$ int paramIdx = params.size() - 1-->Line_15 $$ parametersList.addAt(paramIdx, ForkedDebuggerHelper.DEBUG_SOCKET + getForkSocket().getLocalPort())[ FD ]
Line_9 $$ paramIdx = i-->Line_15 $$ parametersList.addAt(paramIdx, ForkedDebuggerHelper.DEBUG_SOCKET + getForkSocket().getLocalPort())[ FD ]
Line_3 $$ final ParametersList parametersList = parameters.getProgramParametersList()-->Line_13 $$ parametersList.addAt(paramIdx, "@@@" + tempFile.getAbsolutePath())[ FD ]
Line_2 $$ protected void passForkMode(String forkMode, File tempFile, JavaParameters parameters) throws ExecutionException -->Line_3 $$ final ParametersList parametersList = parameters.getProgramParametersList()[ CD ]
Line_9 $$ paramIdx = i-->Line_13 $$ parametersList.addAt(paramIdx, "@@@" + tempFile.getAbsolutePath())[ FD ]
Line_7 $$ String param = params.get(i)-->Line_8 $$ if ("-temp".equals(param)) [ FD ]
Line_3 $$ final ParametersList parametersList = parameters.getProgramParametersList()-->Line_4 $$ final List<String> params = parametersList.getParameters()[ FD ]
Line_2 $$ protected void passForkMode(String forkMode, File tempFile, JavaParameters parameters) throws ExecutionException -->Line_4 $$ final List<String> params = parametersList.getParameters()[ CD ]
Line_4 $$ final List<String> params = parametersList.getParameters()-->Line_6 $$ for (int i = 0; i < params.size(); i++) [ FD ]
Line_14 $$ if (getForkSocket() != null) -->Line_15 $$ parametersList.addAt(paramIdx, ForkedDebuggerHelper.DEBUG_SOCKET + getForkSocket().getLocalPort())[ CD ]
Line_4 $$ final List<String> params = parametersList.getParameters()-->Line_7 $$ String param = params.get(i)[ FD ]
Line_2 $$ protected void passForkMode(String forkMode, File tempFile, JavaParameters parameters) throws ExecutionException -->Line_13 $$ parametersList.addAt(paramIdx, "@@@" + tempFile.getAbsolutePath())[ FD ]
Line_3 $$ final ParametersList parametersList = parameters.getProgramParametersList()-->Line_15 $$ parametersList.addAt(paramIdx, ForkedDebuggerHelper.DEBUG_SOCKET + getForkSocket().getLocalPort())[ FD ]
Line_2 $$ protected void passForkMode(String forkMode, File tempFile, JavaParameters parameters) throws ExecutionException -->Line_6 $$ for (int i = 0; i < params.size(); i++) [ CD ]
Line_2 $$ protected void passForkMode(String forkMode, File tempFile, JavaParameters parameters) throws ExecutionException -->Line_3 $$ final ParametersList parametersList = parameters.getProgramParametersList()[ FD ]
Line_6 $$ for (int i = 0; i < params.size(); i++) -->Line_7 $$ String param = params.get(i)[ CD ]
Line_2 $$ protected void passForkMode(String forkMode, File tempFile, JavaParameters parameters) throws ExecutionException -->Line_14 $$ if (getForkSocket() != null) [ CD ]
Line_6 $$ for (int i = 0; i < params.size(); i++) -->Line_7 $$ String param = params.get(i)[ FD ]
Line_5 $$ int paramIdx = params.size() - 1-->Line_9 $$ paramIdx = i[ FD ]
Line_6 $$ for (int i = 0; i < params.size(); i++) -->Line_8 $$ if ("-temp".equals(param)) [ CD ]
Line_4 $$ final List<String> params = parametersList.getParameters()-->Line_5 $$ int paramIdx = params.size() - 1[ FD ]
