Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_47 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_22 $$ final ActionQueue actionQueue = ((SessionImpl) s).getActionQueue()-->Line_27 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ FD ]
Line_18 $$ unrelatedEntity = (UnrelatedEntity) s.get(UnrelatedEntity.class, unrelatedEntity.getId())-->Line_75 $$ s.delete(unrelatedEntity)[ FD ]
Line_28 $$ Author author1 = new Author()-->Line_35 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author1.getBooks()))[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_30 $$ publisher.getAuthors().add(author1)[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_32 $$ assertEquals(2, persistenceContext.getCollectionEntries().size())[ FD ]
Line_4 $$ Session s = openSession()-->Line_11 $$ assertTrue("autoflush entity update", s.createQuery("from Publisher p where p.name='name'").list().size() == 1)[ FD ]
Line_17 $$ txn = s.beginTransaction()-->Line_76 $$ txn.commit()[ FD ]
Line_28 $$ Author author1 = new Author()-->Line_29 $$ author1.setPublisher(publisher)[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_58 $$ assertEquals(1, persistenceContext.getCollectionsByKey().size())[ FD ]
Line_49 $$ Set<Author> authorsOld = publisher.getAuthors()-->Line_63 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(authorsOld))[ FD ]
Line_4 $$ Session s = openSession()-->Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_70 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_49 $$ Set<Author> authorsOld = publisher.getAuthors()-->Line_61 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(authorsOld))[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_45 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_16 $$ s = openSession()-->Line_18 $$ unrelatedEntity = (UnrelatedEntity) s.get(UnrelatedEntity.class, unrelatedEntity.getId())[ FD ]
Line_4 $$ Session s = openSession()-->Line_9 $$ assertTrue("autoflush entity create", s.createQuery("from Publisher p").list().size() == 1)[ FD ]
Line_28 $$ Author author1 = new Author()-->Line_30 $$ publisher.getAuthors().add(author1)[ FD ]
Line_16 $$ s = openSession()-->Line_39 $$ s.delete(author1)[ FD ]
Line_51 $$ Author author2 = new Author()-->Line_71 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(author2.getBooks()))[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_29 $$ author1.setPublisher(publisher)[ FD ]
Line_4 $$ Session s = openSession()-->Line_15 $$ s.close()[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_40 $$ publisher.getAuthors().clear()[ FD ]
Line_4 $$ Session s = openSession()-->Line_8 $$ s.save(publisher)[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_25 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_44 $$ assertEquals(1, persistenceContext.getCollectionsByKey().size())[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_54 $$ publisher.getAuthors().add(author2)[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_34 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_40 $$ publisher.getAuthors().clear()[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_34 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_16 $$ s = openSession()-->Line_75 $$ s.delete(unrelatedEntity)[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_36 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_75 $$ s.delete(unrelatedEntity)[ FD ]
Line_55 $$ List results = s.createQuery("from UnrelatedEntity").list()-->Line_56 $$ assertEquals(1, results.size())[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_36 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_28 $$ Author author1 = new Author()-->Line_46 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author1.getBooks()))[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_25 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_55 $$ List results = s.createQuery("from UnrelatedEntity").list()[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_46 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author1.getBooks()))[ FD ]
Line_22 $$ final ActionQueue actionQueue = ((SessionImpl) s).getActionQueue()-->Line_64 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ FD ]
Line_5 $$ Transaction txn = s.beginTransaction()-->Line_17 $$ txn = s.beginTransaction()[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_69 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author2.getBooks()))[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_68 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_10 $$ publisher.setName("name")[ FD ]
Line_16 $$ s = openSession()-->Line_77 $$ s.close()[ FD ]
Line_16 $$ s = openSession()-->Line_42 $$ assertTrue(s.createQuery("from UnrelatedEntity").list().size() == 1)[ FD ]
Line_4 $$ Session s = openSession()-->Line_31 $$ assertTrue(s.createQuery("from UnrelatedEntity").list().size() == 1)[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_43 $$ assertEquals(2, persistenceContext.getCollectionEntries().size())[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_8 $$ s.save(publisher)[ FD ]
Line_4 $$ Session s = openSession()-->Line_73 $$ s.delete(publisher)[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_35 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author1.getBooks()))[ FD ]
Line_12 $$ UnrelatedEntity unrelatedEntity = new UnrelatedEntity()-->Line_13 $$ s.save(unrelatedEntity)[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_24 $$ assertEquals(1, persistenceContext.getCollectionsByKey().size())[ FD ]
Line_16 $$ s = openSession()-->Line_65 $$ s.flush()[ FD ]
Line_16 $$ s = openSession()-->Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_30 $$ publisher.getAuthors().add(author1)[ FD ]
Line_22 $$ final ActionQueue actionQueue = ((SessionImpl) s).getActionQueue()-->Line_48 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_63 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(authorsOld))[ FD ]
Line_51 $$ Author author2 = new Author()-->Line_52 $$ author2.setName("author2")[ FD ]
Line_4 $$ Session s = openSession()-->Line_74 $$ assertTrue("autoflush delete", s.createQuery("from UnrelatedEntity").list().size() == 1)[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_7 $$ publisher.setName("name")[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_26 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_47 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_33 $$ assertEquals(1, persistenceContext.getCollectionsByKey().size())[ FD ]
Line_4 $$ Session s = openSession()-->Line_42 $$ assertTrue(s.createQuery("from UnrelatedEntity").list().size() == 1)[ FD ]
Line_22 $$ final ActionQueue actionQueue = ((SessionImpl) s).getActionQueue()-->Line_72 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ FD ]
Line_12 $$ UnrelatedEntity unrelatedEntity = new UnrelatedEntity()-->Line_18 $$ unrelatedEntity = (UnrelatedEntity) s.get(UnrelatedEntity.class, unrelatedEntity.getId())[ FD ]
Line_4 $$ Session s = openSession()-->Line_18 $$ unrelatedEntity = (UnrelatedEntity) s.get(UnrelatedEntity.class, unrelatedEntity.getId())[ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ Transaction txn = s.beginTransaction()[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_50 $$ publisher.setAuthors(new HashSet<Author>())[ FD ]
Line_16 $$ s = openSession()-->Line_74 $$ assertTrue("autoflush delete", s.createQuery("from UnrelatedEntity").list().size() == 1)[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_20 $$ assertTrue(publisher.getAuthors().isEmpty())[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_53 $$ author2.setPublisher(publisher)[ FD ]
Line_51 $$ Author author2 = new Author()-->Line_53 $$ author2.setPublisher(publisher)[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_29 $$ author1.setPublisher(publisher)[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_49 $$ Set<Author> authorsOld = publisher.getAuthors()[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_54 $$ publisher.getAuthors().add(author2)[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_70 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_28 $$ Author author1 = new Author()-->Line_38 $$ author1.setPublisher(null)[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_68 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_50 $$ publisher.setAuthors(new HashSet<Author>())[ FD ]
Line_16 $$ s = openSession()-->Line_55 $$ List results = s.createQuery("from UnrelatedEntity").list()[ FD ]
Line_4 $$ Session s = openSession()-->Line_16 $$ s = openSession()[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_73 $$ s.delete(publisher)[ FD ]
Line_28 $$ Author author1 = new Author()-->Line_62 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author1.getBooks()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_17 $$ txn = s.beginTransaction()[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_59 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_62 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author1.getBooks()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_13 $$ s.save(unrelatedEntity)[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_23 $$ assertEquals(1, persistenceContext.getCollectionEntries().size())[ FD ]
Line_22 $$ final ActionQueue actionQueue = ((SessionImpl) s).getActionQueue()-->Line_37 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_68 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_26 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_47 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_70 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_71 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(author2.getBooks()))[ FD ]
Line_16 $$ s = openSession()-->Line_17 $$ txn = s.beginTransaction()[ FD ]
Line_51 $$ Author author2 = new Author()-->Line_54 $$ publisher.getAuthors().add(author2)[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_26 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_5 $$ Transaction txn = s.beginTransaction()-->Line_76 $$ txn.commit()[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_57 $$ assertEquals(4, persistenceContext.getCollectionEntries().size())[ FD ]
Line_28 $$ Author author1 = new Author()-->Line_39 $$ s.delete(author1)[ FD ]
Line_5 $$ Transaction txn = s.beginTransaction()-->Line_14 $$ txn.commit()[ FD ]
Line_12 $$ UnrelatedEntity unrelatedEntity = new UnrelatedEntity()-->Line_75 $$ s.delete(unrelatedEntity)[ FD ]
Line_22 $$ final ActionQueue actionQueue = ((SessionImpl) s).getActionQueue()-->Line_41 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ FD ]
Line_16 $$ s = openSession()-->Line_31 $$ assertTrue(s.createQuery("from UnrelatedEntity").list().size() == 1)[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_60 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author2.getBooks()))[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_45 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_16 $$ s = openSession()-->Line_73 $$ s.delete(publisher)[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_59 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_65 $$ s.flush()[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_73 $$ s.delete(publisher)[ FD ]
Line_4 $$ Session s = openSession()-->Line_39 $$ s.delete(author1)[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_36 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_25 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_4 $$ Session s = openSession()-->Line_77 $$ s.close()[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_49 $$ Set<Author> authorsOld = publisher.getAuthors()[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_66 $$ assertEquals(2, persistenceContext.getCollectionEntries().size())[ FD ]
Line_51 $$ Author author2 = new Author()-->Line_60 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author2.getBooks()))[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_34 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_61 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(authorsOld))[ FD ]
Line_51 $$ Author author2 = new Author()-->Line_69 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author2.getBooks()))[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_45 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_19 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_20 $$ assertTrue(publisher.getAuthors().isEmpty())[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_53 $$ author2.setPublisher(publisher)[ FD ]
Line_21 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_67 $$ assertEquals(2, persistenceContext.getCollectionsByKey().size())[ FD ]
Line_6 $$ Publisher publisher = new Publisher()-->Line_59 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
