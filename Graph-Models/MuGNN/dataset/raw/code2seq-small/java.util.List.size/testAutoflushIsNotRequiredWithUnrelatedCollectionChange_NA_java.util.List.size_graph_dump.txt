Line_5 $$ Publisher publisher = new Publisher()-->Line_58 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_33 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ CD ]
Line_15 $$ s = openSession()-->Line_30 $$ assertTrue(s.createQuery("from UnrelatedEntity").list().size() == 1)[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_70 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(author2.getBooks()))[ CD ]
Line_3 $$ Session s = openSession()-->Line_76 $$ s.close()[ FD ]
Line_27 $$ Author author1 = new Author()-->Line_37 $$ author1.setPublisher(null)[ FD ]
Line_21 $$ final ActionQueue actionQueue = ((SessionImpl) s).getActionQueue()-->Line_63 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ FD ]
Line_15 $$ s = openSession()-->Line_73 $$ assertTrue("autoflush delete", s.createQuery("from UnrelatedEntity").list().size() == 1)[ FD ]
Line_15 $$ s = openSession()-->Line_76 $$ s.close()[ FD ]
Line_11 $$ UnrelatedEntity unrelatedEntity = new UnrelatedEntity()-->Line_17 $$ unrelatedEntity = (UnrelatedEntity) s.get(UnrelatedEntity.class, unrelatedEntity.getId())[ FD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_39 $$ publisher.getAuthors().clear()[ FD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_48 $$ Set<Author> authorsOld = publisher.getAuthors()[ FD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_33 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_25 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_56 $$ assertEquals(4, persistenceContext.getCollectionEntries().size())[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_44 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ CD ]
Line_21 $$ final ActionQueue actionQueue = ((SessionImpl) s).getActionQueue()-->Line_36 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_57 $$ assertEquals(1, persistenceContext.getCollectionsByKey().size())[ FD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_24 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_11 $$ UnrelatedEntity unrelatedEntity = new UnrelatedEntity()[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_62 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(authorsOld))[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_39 $$ publisher.getAuthors().clear()[ CD ]
Line_21 $$ final ActionQueue actionQueue = ((SessionImpl) s).getActionQueue()-->Line_47 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_71 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_72 $$ s.delete(publisher)[ CD ]
Line_27 $$ Author author1 = new Author()-->Line_29 $$ publisher.getAuthors().add(author1)[ FD ]
Line_21 $$ final ActionQueue actionQueue = ((SessionImpl) s).getActionQueue()-->Line_26 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_41 $$ assertTrue(s.createQuery("from UnrelatedEntity").list().size() == 1)[ CD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_43 $$ assertEquals(1, persistenceContext.getCollectionsByKey().size())[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_32 $$ assertEquals(1, persistenceContext.getCollectionsByKey().size())[ CD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_35 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_50 $$ Author author2 = new Author()[ CD ]
Line_15 $$ s = openSession()-->Line_41 $$ assertTrue(s.createQuery("from UnrelatedEntity").list().size() == 1)[ FD ]
Line_15 $$ s = openSession()-->Line_54 $$ List results = s.createQuery("from UnrelatedEntity").list()[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_68 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author2.getBooks()))[ FD ]
Line_15 $$ s = openSession()-->Line_16 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_36 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_15 $$ s = openSession()[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_7 $$ s.save(publisher)[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_46 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_69 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ CD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_52 $$ author2.setPublisher(publisher)[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_58 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_40 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ CD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_46 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_50 $$ Author author2 = new Author()-->Line_53 $$ publisher.getAuthors().add(author2)[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_60 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(authorsOld))[ CD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_32 $$ assertEquals(1, persistenceContext.getCollectionsByKey().size())[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_61 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author1.getBooks()))[ FD ]
Line_3 $$ Session s = openSession()-->Line_12 $$ s.save(unrelatedEntity)[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_42 $$ assertEquals(2, persistenceContext.getCollectionEntries().size())[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_23 $$ assertEquals(1, persistenceContext.getCollectionsByKey().size())[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_31 $$ assertEquals(2, persistenceContext.getCollectionEntries().size())[ CD ]
Line_15 $$ s = openSession()-->Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_42 $$ assertEquals(2, persistenceContext.getCollectionEntries().size())[ CD ]
Line_27 $$ Author author1 = new Author()-->Line_45 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author1.getBooks()))[ FD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_67 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_9 $$ publisher.setName("name")[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_8 $$ assertTrue("autoflush entity create", s.createQuery("from Publisher p").list().size() == 1)[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_27 $$ Author author1 = new Author()[ CD ]
Line_21 $$ final ActionQueue actionQueue = ((SessionImpl) s).getActionQueue()-->Line_40 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ FD ]
Line_3 $$ Session s = openSession()-->Line_15 $$ s = openSession()[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_3 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_63 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ CD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_52 $$ author2.setPublisher(publisher)[ FD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_49 $$ publisher.setAuthors(new HashSet<Author>())[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()[ CD ]
Line_50 $$ Author author2 = new Author()-->Line_51 $$ author2.setName("author2")[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_19 $$ assertTrue(publisher.getAuthors().isEmpty())[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_35 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_22 $$ assertEquals(1, persistenceContext.getCollectionEntries().size())[ CD ]
Line_50 $$ Author author2 = new Author()-->Line_59 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author2.getBooks()))[ FD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_44 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_10 $$ assertTrue("autoflush entity update", s.createQuery("from Publisher p where p.name='name'").list().size() == 1)[ CD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_33 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_17 $$ unrelatedEntity = (UnrelatedEntity) s.get(UnrelatedEntity.class, unrelatedEntity.getId())[ CD ]
Line_27 $$ Author author1 = new Author()-->Line_34 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author1.getBooks()))[ FD ]
Line_3 $$ Session s = openSession()-->Line_14 $$ s.close()[ FD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_44 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_31 $$ assertEquals(2, persistenceContext.getCollectionEntries().size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction txn = s.beginTransaction()[ FD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_24 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_35 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_38 $$ s.delete(author1)[ CD ]
Line_15 $$ s = openSession()-->Line_17 $$ unrelatedEntity = (UnrelatedEntity) s.get(UnrelatedEntity.class, unrelatedEntity.getId())[ FD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_19 $$ assertTrue(publisher.getAuthors().isEmpty())[ FD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_48 $$ Set<Author> authorsOld = publisher.getAuthors()[ FD ]
Line_3 $$ Session s = openSession()-->Line_74 $$ s.delete(unrelatedEntity)[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_59 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author2.getBooks()))[ CD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_72 $$ s.delete(publisher)[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_5 $$ Publisher publisher = new Publisher()[ CD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_6 $$ publisher.setName("name")[ FD ]
Line_3 $$ Session s = openSession()-->Line_10 $$ assertTrue("autoflush entity update", s.createQuery("from Publisher p where p.name='name'").list().size() == 1)[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_55 $$ assertEquals(1, results.size())[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_65 $$ assertEquals(2, persistenceContext.getCollectionEntries().size())[ CD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_65 $$ assertEquals(2, persistenceContext.getCollectionEntries().size())[ FD ]
Line_21 $$ final ActionQueue actionQueue = ((SessionImpl) s).getActionQueue()-->Line_71 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ FD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_25 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_15 $$ s = openSession()-->Line_64 $$ s.flush()[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_45 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author1.getBooks()))[ FD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_44 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_6 $$ publisher.setName("name")[ CD ]
Line_27 $$ Author author1 = new Author()-->Line_38 $$ s.delete(author1)[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_53 $$ publisher.getAuthors().add(author2)[ CD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_67 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_3 $$ Session s = openSession()-->Line_17 $$ unrelatedEntity = (UnrelatedEntity) s.get(UnrelatedEntity.class, unrelatedEntity.getId())[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_68 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author2.getBooks()))[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_12 $$ s.save(unrelatedEntity)[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_34 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author1.getBooks()))[ CD ]
Line_3 $$ Session s = openSession()-->Line_64 $$ s.flush()[ FD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_25 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())[ CD ]
Line_50 $$ Author author2 = new Author()-->Line_70 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(author2.getBooks()))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_67 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ CD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_69 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_46 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_25 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_26 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ CD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_16 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_49 $$ publisher.setAuthors(new HashSet<Author>())[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_58 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ CD ]
Line_3 $$ Session s = openSession()-->Line_41 $$ assertTrue(s.createQuery("from UnrelatedEntity").list().size() == 1)[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_67 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_69 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_47 $$ assertEquals(0, actionQueue.numberOfCollectionRemovals())[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_73 $$ assertTrue("autoflush delete", s.createQuery("from UnrelatedEntity").list().size() == 1)[ CD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_53 $$ publisher.getAuthors().add(author2)[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_4 $$ Transaction txn = s.beginTransaction()[ CD ]
Line_17 $$ unrelatedEntity = (UnrelatedEntity) s.get(UnrelatedEntity.class, unrelatedEntity.getId())-->Line_74 $$ s.delete(unrelatedEntity)[ FD ]
Line_3 $$ Session s = openSession()-->Line_7 $$ s.save(publisher)[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_54 $$ List results = s.createQuery("from UnrelatedEntity").list()[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_28 $$ author1.setPublisher(publisher)[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_45 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author1.getBooks()))[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_21 $$ final ActionQueue actionQueue = ((SessionImpl) s).getActionQueue()[ CD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_29 $$ publisher.getAuthors().add(author1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_73 $$ assertTrue("autoflush delete", s.createQuery("from UnrelatedEntity").list().size() == 1)[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_59 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author2.getBooks()))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_52 $$ author2.setPublisher(publisher)[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_13 $$ txn.commit()[ CD ]
Line_3 $$ Session s = openSession()-->Line_38 $$ s.delete(author1)[ FD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_69 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_23 $$ assertEquals(1, persistenceContext.getCollectionsByKey().size())[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_29 $$ publisher.getAuthors().add(author1)[ CD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_34 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author1.getBooks()))[ FD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_9 $$ publisher.setName("name")[ FD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_29 $$ publisher.getAuthors().add(author1)[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_66 $$ assertEquals(2, persistenceContext.getCollectionsByKey().size())[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_48 $$ Set<Author> authorsOld = publisher.getAuthors()[ CD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_58 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_15 $$ s = openSession()-->Line_72 $$ s.delete(publisher)[ FD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_28 $$ author1.setPublisher(publisher)[ FD ]
Line_3 $$ Session s = openSession()-->Line_30 $$ assertTrue(s.createQuery("from UnrelatedEntity").list().size() == 1)[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_70 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(author2.getBooks()))[ FD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_7 $$ s.save(publisher)[ FD ]
Line_27 $$ Author author1 = new Author()-->Line_28 $$ author1.setPublisher(publisher)[ FD ]
Line_3 $$ Session s = openSession()-->Line_72 $$ s.delete(publisher)[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_35 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_16 $$ txn = s.beginTransaction()-->Line_75 $$ txn.commit()[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_43 $$ assertEquals(1, persistenceContext.getCollectionsByKey().size())[ CD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_33 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_61 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author1.getBooks()))[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_37 $$ author1.setPublisher(null)[ CD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_46 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(publisher.getAuthors()))[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_75 $$ txn.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_54 $$ List results = s.createQuery("from UnrelatedEntity").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_8 $$ assertTrue("autoflush entity create", s.createQuery("from Publisher p").list().size() == 1)[ FD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_19 $$ assertTrue(publisher.getAuthors().isEmpty())[ FD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_72 $$ s.delete(publisher)[ FD ]
Line_48 $$ Set<Author> authorsOld = publisher.getAuthors()-->Line_62 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(authorsOld))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_14 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_16 $$ txn = s.beginTransaction()[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_13 $$ txn.commit()[ FD ]
Line_15 $$ s = openSession()-->Line_74 $$ s.delete(unrelatedEntity)[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_74 $$ s.delete(unrelatedEntity)[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_75 $$ txn.commit()[ CD ]
Line_15 $$ s = openSession()-->Line_38 $$ s.delete(author1)[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_30 $$ assertTrue(s.createQuery("from UnrelatedEntity").list().size() == 1)[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_16 $$ txn = s.beginTransaction()[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_66 $$ assertEquals(2, persistenceContext.getCollectionsByKey().size())[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_24 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_56 $$ assertEquals(4, persistenceContext.getCollectionEntries().size())[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_51 $$ author2.setName("author2")[ CD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_62 $$ assertTrue(persistenceContext.getCollectionsByKey().values().contains(authorsOld))[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_64 $$ s.flush()[ CD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_57 $$ assertEquals(1, persistenceContext.getCollectionsByKey().size())[ CD ]
Line_50 $$ Author author2 = new Author()-->Line_52 $$ author2.setPublisher(publisher)[ FD ]
Line_2 $$ public void testAutoflushIsNotRequiredWithUnrelatedCollectionChange() -->Line_76 $$ s.close()[ CD ]
Line_11 $$ UnrelatedEntity unrelatedEntity = new UnrelatedEntity()-->Line_12 $$ s.save(unrelatedEntity)[ FD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_49 $$ publisher.setAuthors(new HashSet<Author>())[ FD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_53 $$ publisher.getAuthors().add(author2)[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_60 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(authorsOld))[ FD ]
Line_11 $$ UnrelatedEntity unrelatedEntity = new UnrelatedEntity()-->Line_74 $$ s.delete(unrelatedEntity)[ FD ]
Line_3 $$ Session s = openSession()-->Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())[ FD ]
Line_54 $$ List results = s.createQuery("from UnrelatedEntity").list()-->Line_55 $$ assertEquals(1, results.size())[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_22 $$ assertEquals(1, persistenceContext.getCollectionEntries().size())[ FD ]
Line_18 $$ publisher = (Publisher) s.get(Publisher.class, publisher.getId())-->Line_39 $$ publisher.getAuthors().clear()[ FD ]
Line_48 $$ Set<Author> authorsOld = publisher.getAuthors()-->Line_60 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(authorsOld))[ FD ]
Line_5 $$ Publisher publisher = new Publisher()-->Line_28 $$ author1.setPublisher(publisher)[ FD ]
Line_50 $$ Author author2 = new Author()-->Line_68 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author2.getBooks()))[ FD ]
Line_20 $$ final PersistenceContext persistenceContext = ((SessionImplementor) s).getPersistenceContext()-->Line_24 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(publisher.getAuthors()))[ FD ]
Line_27 $$ Author author1 = new Author()-->Line_61 $$ assertTrue(persistenceContext.getCollectionEntries().containsKey(author1.getBooks()))[ FD ]
