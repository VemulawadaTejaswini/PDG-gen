Line_4 $$ LinkedHashMap<String, Object> params = (LinkedHashMap<String, Object>) searchContext.getAttribute("params")-->Line_8 $$ List<Long> excludedOrganizationIds = (List<Long>) params.get("excludedOrganizationIds")[ FD ]
Line_4 $$ LinkedHashMap<String, Object> params = (LinkedHashMap<String, Object>) searchContext.getAttribute("params")-->Line_14 $$ List<Organization> organizationsTree = (List<Organization>) params.get("organizationsTree")[ FD ]
Line_9 $$ if (ListUtil.isNotEmpty(excludedOrganizationIds)) -->Line_12 $$ contextBooleanFilter.add(termsFilter, BooleanClauseOccur.MUST_NOT)[ CD ]
Line_10 $$ TermsFilter termsFilter = new TermsFilter("organizationId")-->Line_12 $$ contextBooleanFilter.add(termsFilter, BooleanClauseOccur.MUST_NOT)[ FD ]
Line_4 $$ LinkedHashMap<String, Object> params = (LinkedHashMap<String, Object>) searchContext.getAttribute("params")-->Line_5 $$ if (params == null) [ FD ]
Line_16 $$ BooleanFilter booleanFilter = new BooleanFilter()-->Line_22 $$ contextBooleanFilter.add(booleanFilter, BooleanClauseOccur.MUST)[ FD ]
Line_9 $$ if (ListUtil.isNotEmpty(excludedOrganizationIds)) -->Line_11 $$ termsFilter.addValues(ArrayUtil.toStringArray(excludedOrganizationIds.toArray(new Long[excludedOrganizationIds.size()])))[ CD ]
Line_8 $$ List<Long> excludedOrganizationIds = (List<Long>) params.get("excludedOrganizationIds")-->Line_9 $$ if (ListUtil.isNotEmpty(excludedOrganizationIds)) [ FD ]
Line_15 $$ if (ListUtil.isNotEmpty(organizationsTree)) -->Line_16 $$ BooleanFilter booleanFilter = new BooleanFilter()[ CD ]
Line_16 $$ BooleanFilter booleanFilter = new BooleanFilter()-->Line_20 $$ booleanFilter.add(new QueryFilter(wildcardQuery))[ FD ]
Line_5 $$ if (params == null) -->Line_6 $$ return[ CD ]
Line_8 $$ List<Long> excludedOrganizationIds = (List<Long>) params.get("excludedOrganizationIds")-->Line_11 $$ termsFilter.addValues(ArrayUtil.toStringArray(excludedOrganizationIds.toArray(new Long[excludedOrganizationIds.size()])))[ FD ]
Line_15 $$ if (ListUtil.isNotEmpty(organizationsTree)) -->Line_24 $$ long parentOrganizationId = GetterUtil.getLong(searchContext.getAttribute("parentOrganizationId"))[ CD ]
Line_25 $$ if (parentOrganizationId != OrganizationConstants.ANY_PARENT_ORGANIZATION_ID) -->Line_26 $$ contextBooleanFilter.addRequiredTerm("parentOrganizationId", parentOrganizationId)[ CD ]
Line_24 $$ long parentOrganizationId = GetterUtil.getLong(searchContext.getAttribute("parentOrganizationId"))-->Line_26 $$ contextBooleanFilter.addRequiredTerm("parentOrganizationId", parentOrganizationId)[ FD ]
Line_24 $$ long parentOrganizationId = GetterUtil.getLong(searchContext.getAttribute("parentOrganizationId"))-->Line_25 $$ if (parentOrganizationId != OrganizationConstants.ANY_PARENT_ORGANIZATION_ID) [ FD ]
Line_15 $$ if (ListUtil.isNotEmpty(organizationsTree)) -->Line_25 $$ if (parentOrganizationId != OrganizationConstants.ANY_PARENT_ORGANIZATION_ID) [ CD ]
Line_9 $$ if (ListUtil.isNotEmpty(excludedOrganizationIds)) -->Line_10 $$ TermsFilter termsFilter = new TermsFilter("organizationId")[ CD ]
Line_15 $$ if (ListUtil.isNotEmpty(organizationsTree)) -->Line_22 $$ contextBooleanFilter.add(booleanFilter, BooleanClauseOccur.MUST)[ CD ]
Line_14 $$ List<Organization> organizationsTree = (List<Organization>) params.get("organizationsTree")-->Line_15 $$ if (ListUtil.isNotEmpty(organizationsTree)) [ FD ]
Line_17 $$ for (Organization organization : organizationsTree) -->Line_18 $$ String treePath = organization.buildTreePath()[ FD ]
Line_10 $$ TermsFilter termsFilter = new TermsFilter("organizationId")-->Line_11 $$ termsFilter.addValues(ArrayUtil.toStringArray(excludedOrganizationIds.toArray(new Long[excludedOrganizationIds.size()])))[ FD ]
