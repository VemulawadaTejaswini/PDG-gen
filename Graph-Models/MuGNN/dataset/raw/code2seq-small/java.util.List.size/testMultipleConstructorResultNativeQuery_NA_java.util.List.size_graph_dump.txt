Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_9 $$ em.getTransaction().begin()[ CD ]
Line_10 $$ List results = em.createNamedQuery("person-id-and-name2").getResultList()-->Line_11 $$ assertEquals(1, results.size())[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_17 $$ em.close()[ FD ]
Line_8 $$ em = getOrCreateEntityManager()-->Line_17 $$ em.close()[ FD ]
Line_8 $$ em = getOrCreateEntityManager()-->Line_16 $$ em.getTransaction().commit()[ FD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_13 $$ assertEquals(2, result.length)[ CD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_8 $$ em = getOrCreateEntityManager()[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_18 $$ em = getOrCreateEntityManager()[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_5 $$ em.persist(new Person(1, "John", new Date()))[ FD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_4 $$ em.getTransaction().begin()[ CD ]
Line_18 $$ em = getOrCreateEntityManager()-->Line_21 $$ em.getTransaction().commit()[ FD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_10 $$ List results = em.createNamedQuery("person-id-and-name2").getResultList()[ CD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_16 $$ em.getTransaction().commit()[ CD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_14 $$ assertTyping(Person.class, result[0])[ CD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_3 $$ EntityManager em = getOrCreateEntityManager()[ CD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_21 $$ em.getTransaction().commit()[ CD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_9 $$ em.getTransaction().begin()[ FD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_22 $$ em.close()[ CD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_20 $$ em.createQuery("delete from Person").executeUpdate()[ FD ]
Line_8 $$ em = getOrCreateEntityManager()-->Line_19 $$ em.getTransaction().begin()[ FD ]
Line_8 $$ em = getOrCreateEntityManager()-->Line_9 $$ em.getTransaction().begin()[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_7 $$ em.close()[ FD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_12 $$ Object[] result = assertTyping(Object[].class, results.get(0))[ CD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_19 $$ em.getTransaction().begin()[ CD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_20 $$ em.createQuery("delete from Person").executeUpdate()[ CD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_15 $$ assertTyping(Person.class, result[1])[ CD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_19 $$ em.getTransaction().begin()[ FD ]
Line_18 $$ em = getOrCreateEntityManager()-->Line_22 $$ em.close()[ FD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_5 $$ em.persist(new Person(1, "John", new Date()))[ CD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_7 $$ em.close()[ CD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_17 $$ em.close()[ CD ]
Line_18 $$ em = getOrCreateEntityManager()-->Line_19 $$ em.getTransaction().begin()[ FD ]
Line_18 $$ em = getOrCreateEntityManager()-->Line_20 $$ em.createQuery("delete from Person").executeUpdate()[ FD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_18 $$ em = getOrCreateEntityManager()[ CD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_4 $$ em.getTransaction().begin()[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_10 $$ List results = em.createNamedQuery("person-id-and-name2").getResultList()[ FD ]
Line_8 $$ em = getOrCreateEntityManager()-->Line_18 $$ em = getOrCreateEntityManager()[ FD ]
Line_8 $$ em = getOrCreateEntityManager()-->Line_20 $$ em.createQuery("delete from Person").executeUpdate()[ FD ]
Line_8 $$ em = getOrCreateEntityManager()-->Line_21 $$ em.getTransaction().commit()[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_6 $$ em.getTransaction().commit()[ FD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_11 $$ assertEquals(1, results.size())[ CD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_22 $$ em.close()[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_16 $$ em.getTransaction().commit()[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_21 $$ em.getTransaction().commit()[ FD ]
Line_10 $$ List results = em.createNamedQuery("person-id-and-name2").getResultList()-->Line_12 $$ Object[] result = assertTyping(Object[].class, results.get(0))[ FD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_8 $$ em = getOrCreateEntityManager()[ CD ]
Line_2 $$ public void testMultipleConstructorResultNativeQuery() -->Line_6 $$ em.getTransaction().commit()[ CD ]
Line_8 $$ em = getOrCreateEntityManager()-->Line_22 $$ em.close()[ FD ]
Line_8 $$ em = getOrCreateEntityManager()-->Line_10 $$ List results = em.createNamedQuery("person-id-and-name2").getResultList()[ FD ]
