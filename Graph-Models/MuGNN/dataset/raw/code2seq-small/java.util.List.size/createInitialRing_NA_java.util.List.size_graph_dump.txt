Line_3 $$ for (int i = hostIdPool.size(); i < howMany; i++) hostIdPool.add(UUID.randomUUID())-->Line_11 $$ Gossiper.instance.initializeNodeUnsafe(ep, hostIds.get(i), 1)[ FD ]
Line_9 $$ for (int i = 0; i < endpointTokens.size(); i++) -->Line_13 $$ ss.onChange(ep, ApplicationState.STATUS, new VersionedValue.VersionedValueFactory(partitioner).normal(Collections.singleton(endpointTokens.get(i))))[ FD ]
Line_2 $$ public static void createInitialRing(StorageService ss, IPartitioner partitioner, List<Token> endpointTokens, List<Token> keyTokens, List<InetAddress> hosts, List<UUID> hostIds, int howMany) throws UnknownHostException -->Line_6 $$ keyTokens.add(new BigIntegerToken(String.valueOf(10 * i + 5)))[ FD ]
Line_3 $$ for (int i = hostIdPool.size(); i < howMany; i++) hostIdPool.add(UUID.randomUUID())-->Line_13 $$ ss.onChange(ep, ApplicationState.STATUS, new VersionedValue.VersionedValueFactory(partitioner).normal(Collections.singleton(endpointTokens.get(i))))[ FD ]
Line_10 $$ InetAddress ep = InetAddress.getByName("127.0.0." + String.valueOf(i + 1))-->Line_11 $$ Gossiper.instance.initializeNodeUnsafe(ep, hostIds.get(i), 1)[ FD ]
Line_10 $$ InetAddress ep = InetAddress.getByName("127.0.0." + String.valueOf(i + 1))-->Line_13 $$ ss.onChange(ep, ApplicationState.STATUS, new VersionedValue.VersionedValueFactory(partitioner).normal(Collections.singleton(endpointTokens.get(i))))[ FD ]
Line_4 $$ for (int i = 0; i < howMany; i++) -->Line_13 $$ ss.onChange(ep, ApplicationState.STATUS, new VersionedValue.VersionedValueFactory(partitioner).normal(Collections.singleton(endpointTokens.get(i))))[ FD ]
Line_9 $$ for (int i = 0; i < endpointTokens.size(); i++) -->Line_10 $$ InetAddress ep = InetAddress.getByName("127.0.0." + String.valueOf(i + 1))[ CD ]
Line_3 $$ for (int i = hostIdPool.size(); i < howMany; i++) hostIdPool.add(UUID.randomUUID())-->Line_7 $$ hostIds.add(hostIdPool.get(i))[ FD ]
Line_2 $$ public static void createInitialRing(StorageService ss, IPartitioner partitioner, List<Token> endpointTokens, List<Token> keyTokens, List<InetAddress> hosts, List<UUID> hostIds, int howMany) throws UnknownHostException -->Line_11 $$ Gossiper.instance.initializeNodeUnsafe(ep, hostIds.get(i), 1)[ FD ]
Line_10 $$ InetAddress ep = InetAddress.getByName("127.0.0." + String.valueOf(i + 1))-->Line_14 $$ hosts.add(ep)[ FD ]
Line_3 $$ for (int i = hostIdPool.size(); i < howMany; i++) hostIdPool.add(UUID.randomUUID())-->Line_16 $$ assertTrue(ss.getTokenMetadata().isMember(hosts.get(i)))[ FD ]
Line_2 $$ public static void createInitialRing(StorageService ss, IPartitioner partitioner, List<Token> endpointTokens, List<Token> keyTokens, List<InetAddress> hosts, List<UUID> hostIds, int howMany) throws UnknownHostException -->Line_3 $$ for (int i = hostIdPool.size(); i < howMany; i++) hostIdPool.add(UUID.randomUUID())[ FD ]
Line_4 $$ for (int i = 0; i < howMany; i++) -->Line_7 $$ hostIds.add(hostIdPool.get(i))[ CD ]
Line_3 $$ for (int i = hostIdPool.size(); i < howMany; i++) hostIdPool.add(UUID.randomUUID())-->Line_12 $$ Gossiper.instance.injectApplicationState(ep, ApplicationState.TOKENS, new VersionedValue.VersionedValueFactory(partitioner).tokens(Collections.singleton(endpointTokens.get(i))))[ FD ]
Line_2 $$ public static void createInitialRing(StorageService ss, IPartitioner partitioner, List<Token> endpointTokens, List<Token> keyTokens, List<InetAddress> hosts, List<UUID> hostIds, int howMany) throws UnknownHostException -->Line_4 $$ for (int i = 0; i < howMany; i++) [ CD ]
Line_9 $$ for (int i = 0; i < endpointTokens.size(); i++) -->Line_16 $$ assertTrue(ss.getTokenMetadata().isMember(hosts.get(i)))[ FD ]
Line_2 $$ public static void createInitialRing(StorageService ss, IPartitioner partitioner, List<Token> endpointTokens, List<Token> keyTokens, List<InetAddress> hosts, List<UUID> hostIds, int howMany) throws UnknownHostException -->Line_9 $$ for (int i = 0; i < endpointTokens.size(); i++) [ FD ]
Line_9 $$ for (int i = 0; i < endpointTokens.size(); i++) -->Line_14 $$ hosts.add(ep)[ CD ]
Line_2 $$ public static void createInitialRing(StorageService ss, IPartitioner partitioner, List<Token> endpointTokens, List<Token> keyTokens, List<InetAddress> hosts, List<UUID> hostIds, int howMany) throws UnknownHostException -->Line_16 $$ for (int i = 0; i < endpointTokens.size(); ++i) assertTrue(ss.getTokenMetadata().isMember(hosts.get(i)))[ CD ]
Line_2 $$ public static void createInitialRing(StorageService ss, IPartitioner partitioner, List<Token> endpointTokens, List<Token> keyTokens, List<InetAddress> hosts, List<UUID> hostIds, int howMany) throws UnknownHostException -->Line_9 $$ for (int i = 0; i < endpointTokens.size(); i++) [ CD ]
Line_3 $$ for (int i = hostIdPool.size(); i < howMany; i++) hostIdPool.add(UUID.randomUUID())-->Line_16 $$ for (int i = 0; i < endpointTokens.size(); ++i) assertTrue(ss.getTokenMetadata().isMember(hosts.get(i)))[ FD ]
Line_2 $$ public static void createInitialRing(StorageService ss, IPartitioner partitioner, List<Token> endpointTokens, List<Token> keyTokens, List<InetAddress> hosts, List<UUID> hostIds, int howMany) throws UnknownHostException -->Line_13 $$ ss.onChange(ep, ApplicationState.STATUS, new VersionedValue.VersionedValueFactory(partitioner).normal(Collections.singleton(endpointTokens.get(i))))[ FD ]
Line_9 $$ for (int i = 0; i < endpointTokens.size(); i++) -->Line_16 $$ for (int i = 0; i < endpointTokens.size(); ++i) assertTrue(ss.getTokenMetadata().isMember(hosts.get(i)))[ FD ]
Line_9 $$ for (int i = 0; i < endpointTokens.size(); i++) -->Line_11 $$ Gossiper.instance.initializeNodeUnsafe(ep, hostIds.get(i), 1)[ FD ]
Line_9 $$ for (int i = 0; i < endpointTokens.size(); i++) -->Line_12 $$ Gossiper.instance.injectApplicationState(ep, ApplicationState.TOKENS, new VersionedValue.VersionedValueFactory(partitioner).tokens(Collections.singleton(endpointTokens.get(i))))[ FD ]
Line_2 $$ public static void createInitialRing(StorageService ss, IPartitioner partitioner, List<Token> endpointTokens, List<Token> keyTokens, List<InetAddress> hosts, List<UUID> hostIds, int howMany) throws UnknownHostException -->Line_4 $$ for (int i = 0; i < howMany; i++) [ FD ]
Line_3 $$ for (int i = hostIdPool.size(); i < howMany; i++) hostIdPool.add(UUID.randomUUID())-->Line_9 $$ for (int i = 0; i < endpointTokens.size(); i++) [ FD ]
Line_4 $$ for (int i = 0; i < howMany; i++) -->Line_9 $$ for (int i = 0; i < endpointTokens.size(); i++) [ FD ]
Line_9 $$ for (int i = 0; i < endpointTokens.size(); i++) -->Line_12 $$ Gossiper.instance.injectApplicationState(ep, ApplicationState.TOKENS, new VersionedValue.VersionedValueFactory(partitioner).tokens(Collections.singleton(endpointTokens.get(i))))[ CD ]
Line_2 $$ public static void createInitialRing(StorageService ss, IPartitioner partitioner, List<Token> endpointTokens, List<Token> keyTokens, List<InetAddress> hosts, List<UUID> hostIds, int howMany) throws UnknownHostException -->Line_12 $$ Gossiper.instance.injectApplicationState(ep, ApplicationState.TOKENS, new VersionedValue.VersionedValueFactory(partitioner).tokens(Collections.singleton(endpointTokens.get(i))))[ FD ]
Line_2 $$ public static void createInitialRing(StorageService ss, IPartitioner partitioner, List<Token> endpointTokens, List<Token> keyTokens, List<InetAddress> hosts, List<UUID> hostIds, int howMany) throws UnknownHostException -->Line_7 $$ hostIds.add(hostIdPool.get(i))[ FD ]
Line_2 $$ public static void createInitialRing(StorageService ss, IPartitioner partitioner, List<Token> endpointTokens, List<Token> keyTokens, List<InetAddress> hosts, List<UUID> hostIds, int howMany) throws UnknownHostException -->Line_3 $$ for (int i = hostIdPool.size(); i < howMany; i++) hostIdPool.add(UUID.randomUUID())[ CD ]
Line_4 $$ for (int i = 0; i < howMany; i++) -->Line_5 $$ endpointTokens.add(new BigIntegerToken(String.valueOf(10 * i)))[ CD ]
Line_4 $$ for (int i = 0; i < howMany; i++) -->Line_7 $$ hostIds.add(hostIdPool.get(i))[ FD ]
Line_2 $$ public static void createInitialRing(StorageService ss, IPartitioner partitioner, List<Token> endpointTokens, List<Token> keyTokens, List<InetAddress> hosts, List<UUID> hostIds, int howMany) throws UnknownHostException -->Line_14 $$ hosts.add(ep)[ FD ]
Line_2 $$ public static void createInitialRing(StorageService ss, IPartitioner partitioner, List<Token> endpointTokens, List<Token> keyTokens, List<InetAddress> hosts, List<UUID> hostIds, int howMany) throws UnknownHostException -->Line_16 $$ assertTrue(ss.getTokenMetadata().isMember(hosts.get(i)))[ FD ]
Line_9 $$ for (int i = 0; i < endpointTokens.size(); i++) -->Line_11 $$ Gossiper.instance.initializeNodeUnsafe(ep, hostIds.get(i), 1)[ CD ]
Line_3 $$ for (int i = hostIdPool.size(); i < howMany; i++) hostIdPool.add(UUID.randomUUID())-->Line_4 $$ for (int i = 0; i < howMany; i++) [ FD ]
Line_4 $$ for (int i = 0; i < howMany; i++) -->Line_12 $$ Gossiper.instance.injectApplicationState(ep, ApplicationState.TOKENS, new VersionedValue.VersionedValueFactory(partitioner).tokens(Collections.singleton(endpointTokens.get(i))))[ FD ]
Line_2 $$ public static void createInitialRing(StorageService ss, IPartitioner partitioner, List<Token> endpointTokens, List<Token> keyTokens, List<InetAddress> hosts, List<UUID> hostIds, int howMany) throws UnknownHostException -->Line_16 $$ for (int i = 0; i < endpointTokens.size(); ++i) assertTrue(ss.getTokenMetadata().isMember(hosts.get(i)))[ FD ]
Line_4 $$ for (int i = 0; i < howMany; i++) -->Line_6 $$ keyTokens.add(new BigIntegerToken(String.valueOf(10 * i + 5)))[ CD ]
Line_2 $$ public static void createInitialRing(StorageService ss, IPartitioner partitioner, List<Token> endpointTokens, List<Token> keyTokens, List<InetAddress> hosts, List<UUID> hostIds, int howMany) throws UnknownHostException -->Line_5 $$ endpointTokens.add(new BigIntegerToken(String.valueOf(10 * i)))[ FD ]
Line_9 $$ for (int i = 0; i < endpointTokens.size(); i++) -->Line_13 $$ ss.onChange(ep, ApplicationState.STATUS, new VersionedValue.VersionedValueFactory(partitioner).normal(Collections.singleton(endpointTokens.get(i))))[ CD ]
Line_4 $$ for (int i = 0; i < howMany; i++) -->Line_16 $$ for (int i = 0; i < endpointTokens.size(); ++i) assertTrue(ss.getTokenMetadata().isMember(hosts.get(i)))[ FD ]
Line_10 $$ InetAddress ep = InetAddress.getByName("127.0.0." + String.valueOf(i + 1))-->Line_12 $$ Gossiper.instance.injectApplicationState(ep, ApplicationState.TOKENS, new VersionedValue.VersionedValueFactory(partitioner).tokens(Collections.singleton(endpointTokens.get(i))))[ FD ]
Line_4 $$ for (int i = 0; i < howMany; i++) -->Line_16 $$ assertTrue(ss.getTokenMetadata().isMember(hosts.get(i)))[ FD ]
Line_4 $$ for (int i = 0; i < howMany; i++) -->Line_11 $$ Gossiper.instance.initializeNodeUnsafe(ep, hostIds.get(i), 1)[ FD ]
