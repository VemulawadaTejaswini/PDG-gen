Line_4 $$ Field[] cached = allFields.get(aClass)-->Line_35 $$ allFields.put(aClass, cached)[ FD ]
Line_17 $$ Class superclass = aClass.getSuperclass()-->Line_19 $$ for (Field sup : getAllFields(superclass)) [ FD ]
Line_4 $$ Field[] cached = allFields.get(aClass)-->Line_25 $$ cached = fields.isEmpty() ? EMPTY_FIELD_ARRAY : fields.toArray(new Field[fields.size()])[ FD ]
Line_9 $$ for (Field declaredField : declaredFields) -->Line_11 $$ Class<?> type = declaredField.getType()[ FD ]
Line_19 $$ for (Field sup : getAllFields(superclass)) -->Line_21 $$ fields.add(sup)[ FD ]
Line_8 $$ List<Field> fields = new ArrayList<Field>(declaredFields.length + 5)-->Line_20 $$ if (!fields.contains(sup)) [ FD ]
Line_20 $$ if (!fields.contains(sup)) -->Line_21 $$ fields.add(sup)[ CD ]
Line_25 $$ cached = fields.isEmpty() ? EMPTY_FIELD_ARRAY : fields.toArray(new Field[fields.size()])-->Line_33 $$ cached = EMPTY_FIELD_ARRAY[ FD ]
Line_4 $$ Field[] cached = allFields.get(aClass)-->Line_5 $$ if (cached == null) [ FD ]
Line_25 $$ cached = fields.isEmpty() ? EMPTY_FIELD_ARRAY : fields.toArray(new Field[fields.size()])-->Line_29 $$ cached = EMPTY_FIELD_ARRAY[ FD ]
Line_9 $$ for (Field declaredField : declaredFields) -->Line_15 $$ fields.add(declaredField)[ FD ]
Line_29 $$ cached = EMPTY_FIELD_ARRAY-->Line_31 $$ cached = EMPTY_FIELD_ARRAY[ FD ]
Line_4 $$ Field[] cached = allFields.get(aClass)-->Line_29 $$ cached = EMPTY_FIELD_ARRAY[ FD ]
Line_17 $$ Class superclass = aClass.getSuperclass()-->Line_18 $$ if (superclass != null) [ FD ]
Line_8 $$ List<Field> fields = new ArrayList<Field>(declaredFields.length + 5)-->Line_25 $$ cached = fields.isEmpty() ? EMPTY_FIELD_ARRAY : fields.toArray(new Field[fields.size()])[ FD ]
Line_19 $$ for (Field sup : getAllFields(superclass)) -->Line_20 $$ if (!fields.contains(sup)) [ FD ]
Line_8 $$ List<Field> fields = new ArrayList<Field>(declaredFields.length + 5)-->Line_21 $$ fields.add(sup)[ FD ]
Line_33 $$ cached = EMPTY_FIELD_ARRAY-->Line_35 $$ allFields.put(aClass, cached)[ FD ]
Line_31 $$ cached = EMPTY_FIELD_ARRAY-->Line_33 $$ cached = EMPTY_FIELD_ARRAY[ FD ]
Line_25 $$ cached = fields.isEmpty() ? EMPTY_FIELD_ARRAY : fields.toArray(new Field[fields.size()])-->Line_35 $$ allFields.put(aClass, cached)[ FD ]
Line_31 $$ cached = EMPTY_FIELD_ARRAY-->Line_35 $$ allFields.put(aClass, cached)[ FD ]
Line_25 $$ cached = fields.isEmpty() ? EMPTY_FIELD_ARRAY : fields.toArray(new Field[fields.size()])-->Line_31 $$ cached = EMPTY_FIELD_ARRAY[ FD ]
Line_5 $$ if (cached == null) -->Line_35 $$ allFields.put(aClass, cached)[ CD ]
Line_29 $$ cached = EMPTY_FIELD_ARRAY-->Line_35 $$ allFields.put(aClass, cached)[ FD ]
Line_29 $$ cached = EMPTY_FIELD_ARRAY-->Line_33 $$ cached = EMPTY_FIELD_ARRAY[ FD ]
Line_4 $$ Field[] cached = allFields.get(aClass)-->Line_33 $$ cached = EMPTY_FIELD_ARRAY[ FD ]
Line_8 $$ List<Field> fields = new ArrayList<Field>(declaredFields.length + 5)-->Line_15 $$ fields.add(declaredField)[ FD ]
Line_9 $$ for (Field declaredField : declaredFields) -->Line_10 $$ declaredField.setAccessible(true)[ FD ]
Line_4 $$ Field[] cached = allFields.get(aClass)-->Line_31 $$ cached = EMPTY_FIELD_ARRAY[ FD ]
