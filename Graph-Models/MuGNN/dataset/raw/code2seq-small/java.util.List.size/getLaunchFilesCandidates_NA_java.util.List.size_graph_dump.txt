Line_4 $$ final List<File> files = new ArrayList<File>()-->Line_10 $$ files.add(new File(bin, PathManager.PROPERTIES_FILE_NAME))[ FD ]
Line_3 $$ final File bin = new File(instHome, BIN_FOLDER)-->Line_15 $$ addLaunchExecutableScriptsCandidates(files, "idea", bin)[ FD ]
Line_5 $$ if (SystemInfo.isMac) -->Line_6 $$ files.add(new File(new File(instHome, "Contents"), "Info.plist"))[ CD ]
Line_2 $$ private static File[] getLaunchFilesCandidates(@NotNull final File instHome, @NotNull final ConfigImportSettings settings) -->Line_13 $$ files.addAll(settings.getCustomLaunchFilesCandidates(instHome, bin))[ CD ]
Line_4 $$ final List<File> files = new ArrayList<File>()-->Line_17 $$ return files.toArray(new File[files.size()])[ FD ]
Line_2 $$ private static File[] getLaunchFilesCandidates(@NotNull final File instHome, @NotNull final ConfigImportSettings settings) -->Line_10 $$ files.add(new File(bin, PathManager.PROPERTIES_FILE_NAME))[ CD ]
Line_4 $$ final List<File> files = new ArrayList<File>()-->Line_12 $$ addLaunchExecutableScriptsCandidates(files, executableName, bin)[ FD ]
Line_2 $$ private static File[] getLaunchFilesCandidates(@NotNull final File instHome, @NotNull final ConfigImportSettings settings) -->Line_11 $$ final String executableName = StringUtil.toLowerCase(settings.getExecutableName())[ CD ]
Line_2 $$ private static File[] getLaunchFilesCandidates(@NotNull final File instHome, @NotNull final ConfigImportSettings settings) -->Line_3 $$ final File bin = new File(instHome, BIN_FOLDER)[ CD ]
Line_11 $$ final String executableName = StringUtil.toLowerCase(settings.getExecutableName())-->Line_14 $$ if (!"idea".equals(executableName)) [ FD ]
Line_11 $$ final String executableName = StringUtil.toLowerCase(settings.getExecutableName())-->Line_12 $$ addLaunchExecutableScriptsCandidates(files, executableName, bin)[ FD ]
Line_2 $$ private static File[] getLaunchFilesCandidates(@NotNull final File instHome, @NotNull final ConfigImportSettings settings) -->Line_13 $$ files.addAll(settings.getCustomLaunchFilesCandidates(instHome, bin))[ FD ]
Line_2 $$ private static File[] getLaunchFilesCandidates(@NotNull final File instHome, @NotNull final ConfigImportSettings settings) -->Line_17 $$ return files.toArray(new File[files.size()])[ CD ]
Line_2 $$ private static File[] getLaunchFilesCandidates(@NotNull final File instHome, @NotNull final ConfigImportSettings settings) -->Line_14 $$ if (!"idea".equals(executableName)) [ CD ]
Line_2 $$ private static File[] getLaunchFilesCandidates(@NotNull final File instHome, @NotNull final ConfigImportSettings settings) -->Line_5 $$ if (SystemInfo.isMac) [ CD ]
Line_5 $$ if (SystemInfo.isMac) -->Line_7 $$ files.add(new File(new File(new File(bin, "idea.app"), "Contents"), "Info.plist"))[ CD ]
Line_4 $$ final List<File> files = new ArrayList<File>()-->Line_6 $$ files.add(new File(new File(instHome, "Contents"), "Info.plist"))[ FD ]
Line_4 $$ final List<File> files = new ArrayList<File>()-->Line_15 $$ addLaunchExecutableScriptsCandidates(files, "idea", bin)[ FD ]
Line_2 $$ private static File[] getLaunchFilesCandidates(@NotNull final File instHome, @NotNull final ConfigImportSettings settings) -->Line_4 $$ final List<File> files = new ArrayList<File>()[ CD ]
Line_4 $$ final List<File> files = new ArrayList<File>()-->Line_7 $$ files.add(new File(new File(new File(bin, "idea.app"), "Contents"), "Info.plist"))[ FD ]
Line_2 $$ private static File[] getLaunchFilesCandidates(@NotNull final File instHome, @NotNull final ConfigImportSettings settings) -->Line_12 $$ addLaunchExecutableScriptsCandidates(files, executableName, bin)[ CD ]
Line_4 $$ final List<File> files = new ArrayList<File>()-->Line_13 $$ files.addAll(settings.getCustomLaunchFilesCandidates(instHome, bin))[ FD ]
Line_4 $$ final List<File> files = new ArrayList<File>()-->Line_8 $$ files.add(new File(new File(new File(instHome, "idea.app"), "Contents"), "Info.plist"))[ FD ]
Line_5 $$ if (SystemInfo.isMac) -->Line_8 $$ files.add(new File(new File(new File(instHome, "idea.app"), "Contents"), "Info.plist"))[ CD ]
Line_3 $$ final File bin = new File(instHome, BIN_FOLDER)-->Line_12 $$ addLaunchExecutableScriptsCandidates(files, executableName, bin)[ FD ]
Line_14 $$ if (!"idea".equals(executableName)) -->Line_15 $$ addLaunchExecutableScriptsCandidates(files, "idea", bin)[ CD ]
Line_2 $$ private static File[] getLaunchFilesCandidates(@NotNull final File instHome, @NotNull final ConfigImportSettings settings) -->Line_11 $$ final String executableName = StringUtil.toLowerCase(settings.getExecutableName())[ FD ]
Line_3 $$ final File bin = new File(instHome, BIN_FOLDER)-->Line_13 $$ files.addAll(settings.getCustomLaunchFilesCandidates(instHome, bin))[ FD ]
