Line_8 $$ for (int k = markers.size() - 1; k > i; k--) -->Line_10 $$ if (marker.canMergeWith(current)) [ CD ]
Line_7 $$ List<MergeableLineMarkerInfo> toMerge = new SmartList<MergeableLineMarkerInfo>()-->Line_15 $$ if (toMerge.isEmpty()) [ FD ]
Line_7 $$ List<MergeableLineMarkerInfo> toMerge = new SmartList<MergeableLineMarkerInfo>()-->Line_18 $$ toMerge.add(0, marker)[ FD ]
Line_10 $$ if (marker.canMergeWith(current)) -->Line_12 $$ markers.remove(k)[ CD ]
Line_10 $$ if (marker.canMergeWith(current)) -->Line_11 $$ toMerge.add(0, current)[ CD ]
Line_7 $$ List<MergeableLineMarkerInfo> toMerge = new SmartList<MergeableLineMarkerInfo>()-->Line_11 $$ toMerge.add(0, current)[ FD ]
Line_9 $$ MergeableLineMarkerInfo current = markers.get(k)-->Line_11 $$ toMerge.add(0, current)[ FD ]
Line_8 $$ for (int k = markers.size() - 1; k > i; k--) -->Line_9 $$ MergeableLineMarkerInfo current = markers.get(k)[ CD ]
Line_6 $$ MergeableLineMarkerInfo marker = markers.get(i)-->Line_10 $$ if (marker.canMergeWith(current)) [ FD ]
Line_8 $$ for (int k = markers.size() - 1; k > i; k--) -->Line_9 $$ MergeableLineMarkerInfo current = markers.get(k)[ FD ]
Line_15 $$ if (toMerge.isEmpty()) -->Line_19 $$ result.add(new MyLineMarkerInfo(toMerge))[ CD ]
Line_5 $$ for (int i = 0; i < markers.size(); i++) -->Line_8 $$ for (int k = markers.size() - 1; k > i; k--) [ FD ]
Line_5 $$ for (int i = 0; i < markers.size(); i++) -->Line_7 $$ List<MergeableLineMarkerInfo> toMerge = new SmartList<MergeableLineMarkerInfo>()[ CD ]
Line_4 $$ List<LineMarkerInfo> result = new SmartList<LineMarkerInfo>()-->Line_19 $$ result.add(new MyLineMarkerInfo(toMerge))[ FD ]
Line_6 $$ MergeableLineMarkerInfo marker = markers.get(i)-->Line_16 $$ result.add(marker)[ FD ]
Line_8 $$ for (int k = markers.size() - 1; k > i; k--) -->Line_12 $$ markers.remove(k)[ FD ]
Line_5 $$ for (int i = 0; i < markers.size(); i++) -->Line_15 $$ if (toMerge.isEmpty()) [ CD ]
Line_5 $$ for (int i = 0; i < markers.size(); i++) -->Line_8 $$ for (int k = markers.size() - 1; k > i; k--) [ CD ]
Line_9 $$ MergeableLineMarkerInfo current = markers.get(k)-->Line_10 $$ if (marker.canMergeWith(current)) [ FD ]
Line_6 $$ MergeableLineMarkerInfo marker = markers.get(i)-->Line_18 $$ toMerge.add(0, marker)[ FD ]
Line_5 $$ for (int i = 0; i < markers.size(); i++) -->Line_6 $$ MergeableLineMarkerInfo marker = markers.get(i)[ CD ]
Line_5 $$ for (int i = 0; i < markers.size(); i++) -->Line_6 $$ MergeableLineMarkerInfo marker = markers.get(i)[ FD ]
Line_15 $$ if (toMerge.isEmpty()) -->Line_16 $$ result.add(marker)[ CD ]
Line_15 $$ if (toMerge.isEmpty()) -->Line_18 $$ toMerge.add(0, marker)[ CD ]
Line_4 $$ List<LineMarkerInfo> result = new SmartList<LineMarkerInfo>()-->Line_16 $$ result.add(marker)[ FD ]
