Line_21 $$ final CompositePackagingElement<?> subElement = PackagingElementFactory.getInstance().createArchive(FileUtil.sanitizeFileName(module.getName()) + ".jar")-->Line_23 $$ subElement.addFirstChild(moduleOutputElement)[ FD ]
Line_15 $$ module = elements.get(0)-->Line_25 $$ return new NewArtifactConfiguration(rootElement, module.getName(), JavaFxApplicationArtifactType.this)[ FD ]
Line_5 $$ if (myModules.size() == 1) -->Line_9 $$ dialog.setSingleSelectionMode()[ CD ]
Line_8 $$ final ChooseModulesDialog dialog = new ChooseModulesDialog(myModules.get(0).getProject(), myModules, "Select Module", "Selected module output would to be included in the artifact")-->Line_10 $$ if (dialog.showAndGet()) [ FD ]
Line_5 $$ if (myModules.size() == 1) -->Line_8 $$ final ChooseModulesDialog dialog = new ChooseModulesDialog(myModules.get(0).getProject(), myModules, "Select Module", "Selected module output would to be included in the artifact")[ CD ]
Line_11 $$ final List<Module> elements = dialog.getChosenElements()-->Line_12 $$ if (elements.isEmpty()) [ FD ]
Line_6 $$ module = myModules.get(0)-->Line_18 $$ if (module == null)[ FD ]
Line_8 $$ final ChooseModulesDialog dialog = new ChooseModulesDialog(myModules.get(0).getProject(), myModules, "Select Module", "Selected module output would to be included in the artifact")-->Line_11 $$ final List<Module> elements = dialog.getChosenElements()[ FD ]
Line_4 $$ Module module = null-->Line_15 $$ module = elements.get(0)[ FD ]
Line_6 $$ module = myModules.get(0)-->Line_25 $$ return new NewArtifactConfiguration(rootElement, module.getName(), JavaFxApplicationArtifactType.this)[ FD ]
Line_15 $$ module = elements.get(0)-->Line_22 $$ final PackagingElement<?> moduleOutputElement = PackagingElementFactory.getInstance().createModuleOutput(module)[ FD ]
Line_15 $$ module = elements.get(0)-->Line_20 $$ final CompositePackagingElement<?> rootElement = JavaFxApplicationArtifactType.this.createRootElement(module.getName())[ FD ]
Line_21 $$ final CompositePackagingElement<?> subElement = PackagingElementFactory.getInstance().createArchive(FileUtil.sanitizeFileName(module.getName()) + ".jar")-->Line_24 $$ rootElement.addFirstChild(subElement)[ FD ]
Line_4 $$ Module module = null-->Line_6 $$ module = myModules.get(0)[ FD ]
Line_10 $$ if (dialog.showAndGet()) -->Line_15 $$ module = elements.get(0)[ CD ]
Line_6 $$ module = myModules.get(0)-->Line_21 $$ final CompositePackagingElement<?> subElement = PackagingElementFactory.getInstance().createArchive(FileUtil.sanitizeFileName(module.getName()) + ".jar")[ FD ]
Line_4 $$ Module module = null-->Line_22 $$ final PackagingElement<?> moduleOutputElement = PackagingElementFactory.getInstance().createModuleOutput(module)[ FD ]
Line_12 $$ if (elements.isEmpty()) -->Line_13 $$ return null[ CD ]
Line_6 $$ module = myModules.get(0)-->Line_15 $$ module = elements.get(0)[ FD ]
Line_4 $$ Module module = null-->Line_25 $$ return new NewArtifactConfiguration(rootElement, module.getName(), JavaFxApplicationArtifactType.this)[ FD ]
Line_6 $$ module = myModules.get(0)-->Line_22 $$ final PackagingElement<?> moduleOutputElement = PackagingElementFactory.getInstance().createModuleOutput(module)[ FD ]
Line_10 $$ if (dialog.showAndGet()) -->Line_12 $$ if (elements.isEmpty()) [ CD ]
Line_4 $$ Module module = null-->Line_21 $$ final CompositePackagingElement<?> subElement = PackagingElementFactory.getInstance().createArchive(FileUtil.sanitizeFileName(module.getName()) + ".jar")[ FD ]
Line_4 $$ Module module = null-->Line_18 $$ if (module == null)[ FD ]
Line_15 $$ module = elements.get(0)-->Line_18 $$ if (module == null)[ FD ]
Line_22 $$ final PackagingElement<?> moduleOutputElement = PackagingElementFactory.getInstance().createModuleOutput(module)-->Line_23 $$ subElement.addFirstChild(moduleOutputElement)[ FD ]
Line_10 $$ if (dialog.showAndGet()) -->Line_11 $$ final List<Module> elements = dialog.getChosenElements()[ CD ]
Line_15 $$ module = elements.get(0)-->Line_21 $$ final CompositePackagingElement<?> subElement = PackagingElementFactory.getInstance().createArchive(FileUtil.sanitizeFileName(module.getName()) + ".jar")[ FD ]
Line_5 $$ if (myModules.size() == 1) -->Line_10 $$ if (dialog.showAndGet()) [ CD ]
Line_18 $$ if (module == null)-->Line_19 $$ return null[ CD ]
Line_5 $$ if (myModules.size() == 1) -->Line_6 $$ module = myModules.get(0)[ CD ]
Line_20 $$ final CompositePackagingElement<?> rootElement = JavaFxApplicationArtifactType.this.createRootElement(module.getName())-->Line_24 $$ rootElement.addFirstChild(subElement)[ FD ]
Line_4 $$ Module module = null-->Line_20 $$ final CompositePackagingElement<?> rootElement = JavaFxApplicationArtifactType.this.createRootElement(module.getName())[ FD ]
Line_8 $$ final ChooseModulesDialog dialog = new ChooseModulesDialog(myModules.get(0).getProject(), myModules, "Select Module", "Selected module output would to be included in the artifact")-->Line_9 $$ dialog.setSingleSelectionMode()[ FD ]
Line_6 $$ module = myModules.get(0)-->Line_20 $$ final CompositePackagingElement<?> rootElement = JavaFxApplicationArtifactType.this.createRootElement(module.getName())[ FD ]
Line_11 $$ final List<Module> elements = dialog.getChosenElements()-->Line_15 $$ module = elements.get(0)[ FD ]
