Line_5 $$ module = myModules.get(0)-->Line_20 $$ final CompositePackagingElement<?> subElement = PackagingElementFactory.getInstance().createArchive(FileUtil.sanitizeFileName(module.getName()) + ".jar")[ FD ]
Line_7 $$ final ChooseModulesDialog dialog = new ChooseModulesDialog(myModules.get(0).getProject(), myModules, "Select Module", "Selected module output would to be included in the artifact")-->Line_10 $$ final List<Module> elements = dialog.getChosenElements()[ FD ]
Line_5 $$ module = myModules.get(0)-->Line_17 $$ if (module == null)[ FD ]
Line_5 $$ module = myModules.get(0)-->Line_14 $$ module = elements.get(0)[ FD ]
Line_2 $$ public NewArtifactConfiguration createArtifact() -->Line_4 $$ if (myModules.size() == 1) [ CD ]
Line_10 $$ final List<Module> elements = dialog.getChosenElements()-->Line_11 $$ if (elements.isEmpty()) [ FD ]
Line_4 $$ if (myModules.size() == 1) -->Line_8 $$ dialog.setSingleSelectionMode()[ CD ]
Line_2 $$ public NewArtifactConfiguration createArtifact() -->Line_20 $$ final CompositePackagingElement<?> subElement = PackagingElementFactory.getInstance().createArchive(FileUtil.sanitizeFileName(module.getName()) + ".jar")[ CD ]
Line_11 $$ if (elements.isEmpty()) -->Line_12 $$ return null[ CD ]
Line_2 $$ public NewArtifactConfiguration createArtifact() -->Line_19 $$ final CompositePackagingElement<?> rootElement = JavaFxApplicationArtifactType.this.createRootElement(module.getName())[ CD ]
Line_14 $$ module = elements.get(0)-->Line_20 $$ final CompositePackagingElement<?> subElement = PackagingElementFactory.getInstance().createArchive(FileUtil.sanitizeFileName(module.getName()) + ".jar")[ FD ]
Line_20 $$ final CompositePackagingElement<?> subElement = PackagingElementFactory.getInstance().createArchive(FileUtil.sanitizeFileName(module.getName()) + ".jar")-->Line_23 $$ rootElement.addFirstChild(subElement)[ FD ]
Line_9 $$ if (dialog.showAndGet()) -->Line_11 $$ if (elements.isEmpty()) [ CD ]
Line_7 $$ final ChooseModulesDialog dialog = new ChooseModulesDialog(myModules.get(0).getProject(), myModules, "Select Module", "Selected module output would to be included in the artifact")-->Line_8 $$ dialog.setSingleSelectionMode()[ FD ]
Line_5 $$ module = myModules.get(0)-->Line_21 $$ final PackagingElement<?> moduleOutputElement = PackagingElementFactory.getInstance().createModuleOutput(module)[ FD ]
Line_3 $$ Module module = null-->Line_19 $$ final CompositePackagingElement<?> rootElement = JavaFxApplicationArtifactType.this.createRootElement(module.getName())[ FD ]
Line_3 $$ Module module = null-->Line_21 $$ final PackagingElement<?> moduleOutputElement = PackagingElementFactory.getInstance().createModuleOutput(module)[ FD ]
Line_3 $$ Module module = null-->Line_24 $$ return new NewArtifactConfiguration(rootElement, module.getName(), JavaFxApplicationArtifactType.this)[ FD ]
Line_5 $$ module = myModules.get(0)-->Line_24 $$ return new NewArtifactConfiguration(rootElement, module.getName(), JavaFxApplicationArtifactType.this)[ FD ]
Line_4 $$ if (myModules.size() == 1) -->Line_7 $$ final ChooseModulesDialog dialog = new ChooseModulesDialog(myModules.get(0).getProject(), myModules, "Select Module", "Selected module output would to be included in the artifact")[ CD ]
Line_2 $$ public NewArtifactConfiguration createArtifact() -->Line_22 $$ subElement.addFirstChild(moduleOutputElement)[ CD ]
Line_17 $$ if (module == null)-->Line_18 $$ return null[ CD ]
Line_9 $$ if (dialog.showAndGet()) -->Line_14 $$ module = elements.get(0)[ CD ]
Line_4 $$ if (myModules.size() == 1) -->Line_5 $$ module = myModules.get(0)[ CD ]
Line_3 $$ Module module = null-->Line_20 $$ final CompositePackagingElement<?> subElement = PackagingElementFactory.getInstance().createArchive(FileUtil.sanitizeFileName(module.getName()) + ".jar")[ FD ]
Line_2 $$ public NewArtifactConfiguration createArtifact() -->Line_21 $$ final PackagingElement<?> moduleOutputElement = PackagingElementFactory.getInstance().createModuleOutput(module)[ CD ]
Line_4 $$ if (myModules.size() == 1) -->Line_9 $$ if (dialog.showAndGet()) [ CD ]
Line_14 $$ module = elements.get(0)-->Line_21 $$ final PackagingElement<?> moduleOutputElement = PackagingElementFactory.getInstance().createModuleOutput(module)[ FD ]
Line_2 $$ public NewArtifactConfiguration createArtifact() -->Line_17 $$ if (module == null)[ CD ]
Line_10 $$ final List<Module> elements = dialog.getChosenElements()-->Line_14 $$ module = elements.get(0)[ FD ]
Line_2 $$ public NewArtifactConfiguration createArtifact() -->Line_23 $$ rootElement.addFirstChild(subElement)[ CD ]
Line_20 $$ final CompositePackagingElement<?> subElement = PackagingElementFactory.getInstance().createArchive(FileUtil.sanitizeFileName(module.getName()) + ".jar")-->Line_22 $$ subElement.addFirstChild(moduleOutputElement)[ FD ]
Line_14 $$ module = elements.get(0)-->Line_24 $$ return new NewArtifactConfiguration(rootElement, module.getName(), JavaFxApplicationArtifactType.this)[ FD ]
Line_3 $$ Module module = null-->Line_17 $$ if (module == null)[ FD ]
Line_2 $$ public NewArtifactConfiguration createArtifact() -->Line_24 $$ return new NewArtifactConfiguration(rootElement, module.getName(), JavaFxApplicationArtifactType.this)[ CD ]
Line_3 $$ Module module = null-->Line_14 $$ module = elements.get(0)[ FD ]
Line_14 $$ module = elements.get(0)-->Line_17 $$ if (module == null)[ FD ]
Line_21 $$ final PackagingElement<?> moduleOutputElement = PackagingElementFactory.getInstance().createModuleOutput(module)-->Line_22 $$ subElement.addFirstChild(moduleOutputElement)[ FD ]
Line_2 $$ public NewArtifactConfiguration createArtifact() -->Line_3 $$ Module module = null[ CD ]
Line_14 $$ module = elements.get(0)-->Line_19 $$ final CompositePackagingElement<?> rootElement = JavaFxApplicationArtifactType.this.createRootElement(module.getName())[ FD ]
Line_19 $$ final CompositePackagingElement<?> rootElement = JavaFxApplicationArtifactType.this.createRootElement(module.getName())-->Line_23 $$ rootElement.addFirstChild(subElement)[ FD ]
Line_7 $$ final ChooseModulesDialog dialog = new ChooseModulesDialog(myModules.get(0).getProject(), myModules, "Select Module", "Selected module output would to be included in the artifact")-->Line_9 $$ if (dialog.showAndGet()) [ FD ]
Line_9 $$ if (dialog.showAndGet()) -->Line_10 $$ final List<Module> elements = dialog.getChosenElements()[ CD ]
Line_5 $$ module = myModules.get(0)-->Line_19 $$ final CompositePackagingElement<?> rootElement = JavaFxApplicationArtifactType.this.createRootElement(module.getName())[ FD ]
Line_3 $$ Module module = null-->Line_5 $$ module = myModules.get(0)[ FD ]
