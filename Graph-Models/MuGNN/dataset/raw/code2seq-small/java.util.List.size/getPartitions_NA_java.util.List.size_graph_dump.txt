Line_2 $$ public List<CassandraPartition> getPartitions(CassandraTable table, List<Object> partitionKeys) -->Line_5 $$ checkArgument(partitionKeys.size() == table.getPartitionKeyColumns().size())[ CD ]
Line_2 $$ public List<CassandraPartition> getPartitions(CassandraTable table, List<Object> partitionKeys) -->Line_3 $$ requireNonNull(table, "table is null")[ CD ]
Line_2 $$ public List<CassandraPartition> getPartitions(CassandraTable table, List<Object> partitionKeys) -->Line_5 $$ checkArgument(partitionKeys.size() == table.getPartitionKeyColumns().size())[ FD ]
Line_2 $$ public List<CassandraPartition> getPartitions(CassandraTable table, List<Object> partitionKeys) -->Line_3 $$ requireNonNull(table, "table is null")[ FD ]
Line_2 $$ public List<CassandraPartition> getPartitions(CassandraTable table, List<Object> partitionKeys) -->Line_7 $$ return getCacheValue(partitionsCacheFull, key, RuntimeException.class)[ CD ]
Line_6 $$ PartitionListKey key = new PartitionListKey(table, partitionKeys)-->Line_7 $$ return getCacheValue(partitionsCacheFull, key, RuntimeException.class)[ FD ]
Line_2 $$ public List<CassandraPartition> getPartitions(CassandraTable table, List<Object> partitionKeys) -->Line_4 $$ requireNonNull(partitionKeys, "partitionKeys is null")[ CD ]
Line_2 $$ public List<CassandraPartition> getPartitions(CassandraTable table, List<Object> partitionKeys) -->Line_4 $$ requireNonNull(partitionKeys, "partitionKeys is null")[ FD ]
Line_2 $$ public List<CassandraPartition> getPartitions(CassandraTable table, List<Object> partitionKeys) -->Line_6 $$ PartitionListKey key = new PartitionListKey(table, partitionKeys)[ CD ]
