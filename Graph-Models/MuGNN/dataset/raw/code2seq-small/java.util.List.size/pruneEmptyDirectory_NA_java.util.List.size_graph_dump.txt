Line_12 $$ final List fileNames = new ArrayList()-->Line_15 $$ if (fileNames.size() > 0) [ FD ]
Line_13 $$ final List directoryNames = new ArrayList()-->Line_14 $$ localFileReader.listFilesAndDirectories(directoryObject, fileNames, directoryNames, cvsFileSystem)[ FD ]
Line_13 $$ final List directoryNames = new ArrayList()-->Line_21 $$ for (Iterator it = directoryNames.iterator(); it.hasNext(); ) [ FD ]
Line_22 $$ final String directoryName = (String) it.next()-->Line_23 $$ if (!pruneEmptyDirectory(DirectoryObject.createInstance(directoryObject, directoryName))) [ FD ]
Line_12 $$ final List fileNames = new ArrayList()-->Line_14 $$ localFileReader.listFilesAndDirectories(directoryObject, fileNames, directoryNames, cvsFileSystem)[ FD ]
Line_7 $$ final IAdminReader adminReader = clientEnvironment.getAdminReader()-->Line_18 $$ if (hasFileEntry(directoryObject, cvsFileSystem, adminReader)) [ FD ]
Line_5 $$ final ICvsFileSystem cvsFileSystem = clientEnvironment.getCvsFileSystem()-->Line_29 $$ adminWriter.removeEntryForFile(directoryObject, cvsFileSystem)[ FD ]
Line_21 $$ for (Iterator it = directoryNames.iterator(); it.hasNext(); ) -->Line_23 $$ if (!pruneEmptyDirectory(DirectoryObject.createInstance(directoryObject, directoryName))) [ CD ]
Line_5 $$ final ICvsFileSystem cvsFileSystem = clientEnvironment.getCvsFileSystem()-->Line_27 $$ if (adminReader.hasCvsDirectory(directoryObject, cvsFileSystem)) [ FD ]
Line_7 $$ final IAdminReader adminReader = clientEnvironment.getAdminReader()-->Line_27 $$ if (adminReader.hasCvsDirectory(directoryObject, cvsFileSystem)) [ FD ]
Line_27 $$ if (adminReader.hasCvsDirectory(directoryObject, cvsFileSystem)) -->Line_34 $$ adminWriter.pruneDirectory(directoryObject, cvsFileSystem)[ CD ]
Line_5 $$ final ICvsFileSystem cvsFileSystem = clientEnvironment.getCvsFileSystem()-->Line_14 $$ localFileReader.listFilesAndDirectories(directoryObject, fileNames, directoryNames, cvsFileSystem)[ FD ]
Line_21 $$ for (Iterator it = directoryNames.iterator(); it.hasNext(); ) -->Line_22 $$ final String directoryName = (String) it.next()[ FD ]
Line_5 $$ final ICvsFileSystem cvsFileSystem = clientEnvironment.getCvsFileSystem()-->Line_34 $$ adminWriter.pruneDirectory(directoryObject, cvsFileSystem)[ FD ]
Line_27 $$ if (adminReader.hasCvsDirectory(directoryObject, cvsFileSystem)) -->Line_35 $$ return true[ CD ]
Line_6 $$ final IAdminWriter adminWriter = clientEnvironment.getAdminWriter()-->Line_29 $$ adminWriter.removeEntryForFile(directoryObject, cvsFileSystem)[ FD ]
Line_15 $$ if (fileNames.size() > 0) -->Line_16 $$ return false[ CD ]
Line_4 $$ final ILocalFileReader localFileReader = clientEnvironment.getLocalFileReader()-->Line_9 $$ if (!localFileReader.exists(directoryObject, cvsFileSystem)) [ FD ]
Line_21 $$ for (Iterator it = directoryNames.iterator(); it.hasNext(); ) -->Line_22 $$ final String directoryName = (String) it.next()[ CD ]
Line_9 $$ if (!localFileReader.exists(directoryObject, cvsFileSystem)) -->Line_10 $$ return true[ CD ]
Line_18 $$ if (hasFileEntry(directoryObject, cvsFileSystem, adminReader)) -->Line_19 $$ return false[ CD ]
Line_5 $$ final ICvsFileSystem cvsFileSystem = clientEnvironment.getCvsFileSystem()-->Line_18 $$ if (hasFileEntry(directoryObject, cvsFileSystem, adminReader)) [ FD ]
Line_4 $$ final ILocalFileReader localFileReader = clientEnvironment.getLocalFileReader()-->Line_14 $$ localFileReader.listFilesAndDirectories(directoryObject, fileNames, directoryNames, cvsFileSystem)[ FD ]
Line_6 $$ final IAdminWriter adminWriter = clientEnvironment.getAdminWriter()-->Line_34 $$ adminWriter.pruneDirectory(directoryObject, cvsFileSystem)[ FD ]
Line_23 $$ if (!pruneEmptyDirectory(DirectoryObject.createInstance(directoryObject, directoryName))) -->Line_24 $$ return false[ CD ]
Line_5 $$ final ICvsFileSystem cvsFileSystem = clientEnvironment.getCvsFileSystem()-->Line_9 $$ if (!localFileReader.exists(directoryObject, cvsFileSystem)) [ FD ]
