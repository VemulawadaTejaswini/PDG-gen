Line_13 $$ collectionElementType = t.getTypeArguments().get(1)-->Line_15 $$ collectionElementType = t.getTypeArguments().get(0)[ FD ]
Line_2 $$ public static TypeMirror getCollectionElementType(DeclaredType t, String fqNameOfReturnedType, String explicitTargetEntityName, Context context) -->Line_9 $$ List<? extends TypeMirror> typeArguments = t.getTypeArguments()[ FD ]
Line_5 $$ Elements elements = context.getElementUtils()-->Line_6 $$ TypeElement element = elements.getTypeElement(explicitTargetEntityName)[ FD ]
Line_10 $$ if (typeArguments.size() == 0) -->Line_12 $$ if (Map.class.getCanonicalName().equals(fqNameOfReturnedType)) [ CD ]
Line_7 $$ collectionElementType = element.asType()-->Line_15 $$ collectionElementType = t.getTypeArguments().get(0)[ FD ]
Line_2 $$ public static TypeMirror getCollectionElementType(DeclaredType t, String fqNameOfReturnedType, String explicitTargetEntityName, Context context) -->Line_15 $$ collectionElementType = t.getTypeArguments().get(0)[ FD ]
Line_2 $$ public static TypeMirror getCollectionElementType(DeclaredType t, String fqNameOfReturnedType, String explicitTargetEntityName, Context context) -->Line_5 $$ Elements elements = context.getElementUtils()[ FD ]
Line_4 $$ if (explicitTargetEntityName != null) -->Line_6 $$ TypeElement element = elements.getTypeElement(explicitTargetEntityName)[ CD ]
Line_2 $$ public static TypeMirror getCollectionElementType(DeclaredType t, String fqNameOfReturnedType, String explicitTargetEntityName, Context context) -->Line_13 $$ collectionElementType = t.getTypeArguments().get(1)[ FD ]
Line_2 $$ public static TypeMirror getCollectionElementType(DeclaredType t, String fqNameOfReturnedType, String explicitTargetEntityName, Context context) -->Line_4 $$ if (explicitTargetEntityName != null) [ CD ]
Line_9 $$ List<? extends TypeMirror> typeArguments = t.getTypeArguments()-->Line_10 $$ if (typeArguments.size() == 0) [ FD ]
Line_12 $$ if (Map.class.getCanonicalName().equals(fqNameOfReturnedType)) -->Line_15 $$ collectionElementType = t.getTypeArguments().get(0)[ CD ]
Line_4 $$ if (explicitTargetEntityName != null) -->Line_5 $$ Elements elements = context.getElementUtils()[ CD ]
Line_6 $$ TypeElement element = elements.getTypeElement(explicitTargetEntityName)-->Line_7 $$ collectionElementType = element.asType()[ FD ]
Line_3 $$ TypeMirror collectionElementType-->Line_7 $$ collectionElementType = element.asType()[ FD ]
Line_4 $$ if (explicitTargetEntityName != null) -->Line_7 $$ collectionElementType = element.asType()[ CD ]
Line_2 $$ public static TypeMirror getCollectionElementType(DeclaredType t, String fqNameOfReturnedType, String explicitTargetEntityName, Context context) -->Line_18 $$ return collectionElementType[ CD ]
Line_7 $$ collectionElementType = element.asType()-->Line_13 $$ collectionElementType = t.getTypeArguments().get(1)[ FD ]
Line_2 $$ public static TypeMirror getCollectionElementType(DeclaredType t, String fqNameOfReturnedType, String explicitTargetEntityName, Context context) -->Line_12 $$ if (Map.class.getCanonicalName().equals(fqNameOfReturnedType)) [ FD ]
Line_4 $$ if (explicitTargetEntityName != null) -->Line_10 $$ if (typeArguments.size() == 0) [ CD ]
Line_4 $$ if (explicitTargetEntityName != null) -->Line_9 $$ List<? extends TypeMirror> typeArguments = t.getTypeArguments()[ CD ]
Line_12 $$ if (Map.class.getCanonicalName().equals(fqNameOfReturnedType)) -->Line_13 $$ collectionElementType = t.getTypeArguments().get(1)[ CD ]
Line_2 $$ public static TypeMirror getCollectionElementType(DeclaredType t, String fqNameOfReturnedType, String explicitTargetEntityName, Context context) -->Line_4 $$ if (explicitTargetEntityName != null) [ FD ]
Line_2 $$ public static TypeMirror getCollectionElementType(DeclaredType t, String fqNameOfReturnedType, String explicitTargetEntityName, Context context) -->Line_3 $$ TypeMirror collectionElementType[ CD ]
Line_3 $$ TypeMirror collectionElementType-->Line_13 $$ collectionElementType = t.getTypeArguments().get(1)[ FD ]
Line_3 $$ TypeMirror collectionElementType-->Line_15 $$ collectionElementType = t.getTypeArguments().get(0)[ FD ]
Line_2 $$ public static TypeMirror getCollectionElementType(DeclaredType t, String fqNameOfReturnedType, String explicitTargetEntityName, Context context) -->Line_6 $$ TypeElement element = elements.getTypeElement(explicitTargetEntityName)[ FD ]
