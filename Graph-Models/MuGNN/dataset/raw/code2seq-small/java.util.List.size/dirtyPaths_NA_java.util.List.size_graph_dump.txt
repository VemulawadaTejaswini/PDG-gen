Line_3 $$ final List<String> allPaths = new ArrayList<String>()-->Line_18 $$ addToPaths(afterRevision.getFile(), allPaths)[ FD ]
Line_16 $$ ContentRevision afterRevision = c.getAfterRevision()-->Line_18 $$ addToPaths(afterRevision.getFile(), allPaths)[ FD ]
Line_4 $$ for (FilePath p : myDirtyScope.getRecursivelyDirtyDirectories()) -->Line_5 $$ addToPaths(p, allPaths)[ FD ]
Line_3 $$ final List<String> allPaths = new ArrayList<String>()-->Line_5 $$ addToPaths(p, allPaths)[ FD ]
Line_11 $$ for (Change c : myChangeListManager.getChangesIn(myVcsRoot)) -->Line_20 $$ ContentRevision beforeRevision = c.getBeforeRevision()[ FD ]
Line_20 $$ ContentRevision beforeRevision = c.getBeforeRevision()-->Line_22 $$ addToPaths(beforeRevision.getFile(), allPaths)[ FD ]
Line_11 $$ for (Change c : myChangeListManager.getChangesIn(myVcsRoot)) -->Line_16 $$ ContentRevision afterRevision = c.getAfterRevision()[ FD ]
Line_3 $$ final List<String> allPaths = new ArrayList<String>()-->Line_22 $$ addToPaths(beforeRevision.getFile(), allPaths)[ FD ]
Line_32 $$ final File file = new File(p)-->Line_33 $$ paths.add(VcsUtil.getFilePath(file))[ FD ]
Line_20 $$ ContentRevision beforeRevision = c.getBeforeRevision()-->Line_21 $$ if (beforeRevision != null) [ FD ]
Line_2 $$ protected Collection<FilePath> dirtyPaths(boolean includeChanges) -->Line_29 $$ removeCommonParents(allPaths)[ CD ]
Line_16 $$ ContentRevision afterRevision = c.getAfterRevision()-->Line_17 $$ if (afterRevision != null) [ FD ]
Line_2 $$ protected Collection<FilePath> dirtyPaths(boolean includeChanges) -->Line_10 $$ if (includeChanges) [ CD ]
Line_3 $$ final List<String> allPaths = new ArrayList<String>()-->Line_8 $$ addToPaths(p, allPaths)[ FD ]
Line_30 $$ final List<FilePath> paths = new ArrayList<FilePath>(allPaths.size())-->Line_33 $$ paths.add(VcsUtil.getFilePath(file))[ FD ]
Line_21 $$ if (beforeRevision != null) -->Line_22 $$ addToPaths(beforeRevision.getFile(), allPaths)[ CD ]
Line_3 $$ final List<String> allPaths = new ArrayList<String>()-->Line_30 $$ final List<FilePath> paths = new ArrayList<FilePath>(allPaths.size())[ FD ]
Line_2 $$ protected Collection<FilePath> dirtyPaths(boolean includeChanges) -->Line_30 $$ final List<FilePath> paths = new ArrayList<FilePath>(allPaths.size())[ CD ]
Line_2 $$ protected Collection<FilePath> dirtyPaths(boolean includeChanges) -->Line_35 $$ return paths[ CD ]
Line_2 $$ protected Collection<FilePath> dirtyPaths(boolean includeChanges) -->Line_3 $$ final List<String> allPaths = new ArrayList<String>()[ CD ]
Line_3 $$ final List<String> allPaths = new ArrayList<String>()-->Line_29 $$ removeCommonParents(allPaths)[ FD ]
Line_11 $$ for (Change c : myChangeListManager.getChangesIn(myVcsRoot)) -->Line_12 $$ switch(c.getType()) [ FD ]
Line_17 $$ if (afterRevision != null) -->Line_18 $$ addToPaths(afterRevision.getFile(), allPaths)[ CD ]
Line_4 $$ for (FilePath p : myDirtyScope.getRecursivelyDirtyDirectories()) -->Line_8 $$ addToPaths(p, allPaths)[ FD ]
