Line_10 $$ Session session = openSession()-->Line_12 $$ session.enableFilter("effectiveDate").setParameter("asOfDate", testData.lastMonth.getTime())[ FD ]
Line_14 $$ List results = session.createQuery("select s from Salesperson as s left join fetch s.orders").list()-->Line_20 $$ assertTrue(results.size() == 1)[ FD ]
Line_10 $$ Session session = openSession()-->Line_11 $$ session.enableFilter("region").setParameter("region", "APAC")[ FD ]
Line_16 $$ Salesperson result = (Salesperson) results.get(0)-->Line_17 $$ assertTrue("Incorrect collectionfilter count", result.getOrders().size() == 1)[ FD ]
Line_10 $$ Session session = openSession()-->Line_19 $$ results = session.createQuery("from Product as p where p.stockNumber = ?").setInteger(0, 124).list()[ FD ]
Line_10 $$ Session session = openSession()-->Line_21 $$ session.close()[ FD ]
Line_10 $$ Session session = openSession()-->Line_14 $$ List results = session.createQuery("select s from Salesperson as s left join fetch s.orders").list()[ FD ]
Line_19 $$ results = session.createQuery("from Product as p where p.stockNumber = ?").setInteger(0, 124).list()-->Line_20 $$ assertTrue(results.size() == 1)[ FD ]
Line_8 $$ TestData testData = new TestData()-->Line_9 $$ testData.prepare()[ FD ]
Line_8 $$ TestData testData = new TestData()-->Line_22 $$ testData.release()[ FD ]
Line_14 $$ List results = session.createQuery("select s from Salesperson as s left join fetch s.orders").list()-->Line_16 $$ Salesperson result = (Salesperson) results.get(0)[ FD ]
Line_14 $$ List results = session.createQuery("select s from Salesperson as s left join fetch s.orders").list()-->Line_15 $$ assertTrue("Incorrect filtered HQL result count [" + results.size() + "]", results.size() == 1)[ FD ]
Line_14 $$ List results = session.createQuery("select s from Salesperson as s left join fetch s.orders").list()-->Line_19 $$ results = session.createQuery("from Product as p where p.stockNumber = ?").setInteger(0, 124).list()[ FD ]
