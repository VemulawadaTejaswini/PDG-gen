Line_2 $$ public void testHqlFilters() -->Line_7 $$ session.enableFilter("region").setParameter("region", "APAC")[ CD ]
Line_2 $$ public void testHqlFilters() -->Line_5 $$ testData.prepare()[ CD ]
Line_2 $$ public void testHqlFilters() -->Line_4 $$ TestData testData = new TestData()[ CD ]
Line_6 $$ Session session = openSession()-->Line_17 $$ session.close()[ FD ]
Line_10 $$ List results = session.createQuery("select s from Salesperson as s left join fetch s.orders").list()-->Line_12 $$ Salesperson result = (Salesperson) results.get(0)[ FD ]
Line_10 $$ List results = session.createQuery("select s from Salesperson as s left join fetch s.orders").list()-->Line_15 $$ results = session.createQuery("from Product as p where p.stockNumber = ?").setInteger(0, 124).list()[ FD ]
Line_10 $$ List results = session.createQuery("select s from Salesperson as s left join fetch s.orders").list()-->Line_16 $$ assertTrue(results.size() == 1)[ FD ]
Line_2 $$ public void testHqlFilters() -->Line_17 $$ session.close()[ CD ]
Line_6 $$ Session session = openSession()-->Line_15 $$ results = session.createQuery("from Product as p where p.stockNumber = ?").setInteger(0, 124).list()[ FD ]
Line_6 $$ Session session = openSession()-->Line_7 $$ session.enableFilter("region").setParameter("region", "APAC")[ FD ]
Line_2 $$ public void testHqlFilters() -->Line_9 $$ log.info("HQL against Salesperson...")[ CD ]
Line_6 $$ Session session = openSession()-->Line_10 $$ List results = session.createQuery("select s from Salesperson as s left join fetch s.orders").list()[ FD ]
Line_2 $$ public void testHqlFilters() -->Line_8 $$ session.enableFilter("effectiveDate").setParameter("asOfDate", testData.lastMonth.getTime())[ CD ]
Line_12 $$ Salesperson result = (Salesperson) results.get(0)-->Line_13 $$ assertTrue("Incorrect collectionfilter count", result.getOrders().size() == 1)[ FD ]
Line_15 $$ results = session.createQuery("from Product as p where p.stockNumber = ?").setInteger(0, 124).list()-->Line_16 $$ assertTrue(results.size() == 1)[ FD ]
Line_2 $$ public void testHqlFilters() -->Line_12 $$ Salesperson result = (Salesperson) results.get(0)[ CD ]
Line_10 $$ List results = session.createQuery("select s from Salesperson as s left join fetch s.orders").list()-->Line_11 $$ assertTrue("Incorrect filtered HQL result count [" + results.size() + "]", results.size() == 1)[ FD ]
Line_2 $$ public void testHqlFilters() -->Line_10 $$ List results = session.createQuery("select s from Salesperson as s left join fetch s.orders").list()[ CD ]
Line_2 $$ public void testHqlFilters() -->Line_13 $$ assertTrue("Incorrect collectionfilter count", result.getOrders().size() == 1)[ CD ]
Line_2 $$ public void testHqlFilters() -->Line_3 $$ log.info("Starting HQL filter tests")[ CD ]
Line_2 $$ public void testHqlFilters() -->Line_15 $$ results = session.createQuery("from Product as p where p.stockNumber = ?").setInteger(0, 124).list()[ CD ]
Line_6 $$ Session session = openSession()-->Line_8 $$ session.enableFilter("effectiveDate").setParameter("asOfDate", testData.lastMonth.getTime())[ FD ]
Line_2 $$ public void testHqlFilters() -->Line_6 $$ Session session = openSession()[ CD ]
Line_4 $$ TestData testData = new TestData()-->Line_18 $$ testData.release()[ FD ]
Line_4 $$ TestData testData = new TestData()-->Line_5 $$ testData.prepare()[ FD ]
Line_2 $$ public void testHqlFilters() -->Line_16 $$ assertTrue(results.size() == 1)[ CD ]
Line_2 $$ public void testHqlFilters() -->Line_18 $$ testData.release()[ CD ]
Line_2 $$ public void testHqlFilters() -->Line_11 $$ assertTrue("Incorrect filtered HQL result count [" + results.size() + "]", results.size() == 1)[ CD ]
Line_2 $$ public void testHqlFilters() -->Line_14 $$ log.info("HQL against Product...")[ CD ]
