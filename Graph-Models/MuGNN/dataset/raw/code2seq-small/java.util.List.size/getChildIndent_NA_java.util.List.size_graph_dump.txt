Line_47 $$ if (doc != null) -->Line_49 $$ final int itemCol = exprItem.getTextOffset() - doc.getLineStartOffset(lineNum)[ CD ]
Line_48 $$ int lineNum = doc.getLineNumber(exprItem.getTextOffset())-->Line_52 $$ final int nodeCol = hereElt.getTextOffset() - doc.getLineStartOffset(lineNum)[ FD ]
Line_47 $$ if (doc != null) -->Line_51 $$ lineNum = doc.getLineNumber(hereElt.getTextOffset())[ CD ]
Line_80 $$ while (wsAfter != null && wsAfter.getElementType() == TokenType.WHITE_SPACE) -->Line_81 $$ if (wsAfter.getText().indexOf('\\') >= 0) [ CD ]
Line_21 $$ if (lastChild != null && PyElementTypes.LIST_LIKE_EXPRESSIONS.contains(lastChild.getElementType())) -->Line_24 $$ if (lastLastChild != null && lastLastChild.getPsi() instanceof PsiErrorElement) [ CD ]
Line_28 $$ PsiElement exprItem = expr.getFirstChild()-->Line_37 $$ if (exprItem instanceof PsiComment) [ FD ]
Line_42 $$ exprItem = exprItem.getNextSibling()-->Line_49 $$ final int itemCol = exprItem.getTextOffset() - doc.getLineStartOffset(lineNum)[ FD ]
Line_44 $$ if (found) -->Line_45 $$ final PsiDocumentManager docMgr = PsiDocumentManager.getInstance(exprItem.getProject())[ CD ]
Line_44 $$ if (found) -->Line_47 $$ if (doc != null) [ CD ]
Line_51 $$ lineNum = doc.getLineNumber(hereElt.getTextOffset())-->Line_52 $$ final int nodeCol = hereElt.getTextOffset() - doc.getLineStartOffset(lineNum)[ FD ]
Line_46 $$ final Document doc = docMgr.getDocument(exprItem.getContainingFile())-->Line_51 $$ lineNum = doc.getLineNumber(hereElt.getTextOffset())[ FD ]
Line_79 $$ ASTNode wsAfter = afterNode.getTreeNext()-->Line_80 $$ while (wsAfter != null && wsAfter.getElementType() == TokenType.WHITE_SPACE) [ FD ]
Line_47 $$ if (doc != null) -->Line_50 $$ final PsiElement hereElt = getNode().getPsi()[ CD ]
Line_42 $$ exprItem = exprItem.getNextSibling()-->Line_45 $$ final PsiDocumentManager docMgr = PsiDocumentManager.getInstance(exprItem.getProject())[ FD ]
Line_78 $$ if (afterNode != null) -->Line_79 $$ ASTNode wsAfter = afterNode.getTreeNext()[ CD ]
Line_6 $$ if (lastChild != null && lastChild.getElementType() == PyElementTypes.STATEMENT_LIST && mySubBlocks.size() >= newChildIndex) -->Line_7 $$ if (afterNode == null) [ CD ]
Line_47 $$ if (doc != null) -->Line_53 $$ final int padding = itemCol - nodeCol[ CD ]
Line_4 $$ final ASTNode afterNode = getAfterNode(newChildIndex)-->Line_65 $$ final PyKeyValueExpression keyValue = (PyKeyValueExpression) afterNode.getPsi()[ FD ]
Line_78 $$ if (afterNode != null) -->Line_80 $$ while (wsAfter != null && wsAfter.getElementType() == TokenType.WHITE_SPACE) [ CD ]
Line_6 $$ if (lastChild != null && lastChild.getElementType() == PyElementTypes.STATEMENT_LIST && mySubBlocks.size() >= newChildIndex) -->Line_18 $$ if (lastFirstChild != null && lastFirstChild == lastChild.getLastChildNode() && lastFirstChild.getPsi() instanceof PsiErrorElement) [ CD ]
Line_42 $$ exprItem = exprItem.getNextSibling()-->Line_37 $$ if (exprItem instanceof PsiComment) [ FD ]
Line_28 $$ PsiElement exprItem = expr.getFirstChild()-->Line_42 $$ exprItem = exprItem.getNextSibling()[ FD ]
Line_24 $$ if (lastLastChild != null && lastLastChild.getPsi() instanceof PsiErrorElement) -->Line_28 $$ PsiElement exprItem = expr.getFirstChild()[ CD ]
Line_64 $$ if (afterNode != null && afterNode.getElementType() == PyElementTypes.KEY_VALUE_EXPRESSION) -->Line_66 $$ if (keyValue != null && keyValue.getValue() == null) [ CD ]
Line_4 $$ final ASTNode afterNode = getAfterNode(newChildIndex)-->Line_78 $$ if (afterNode != null) [ FD ]
Line_47 $$ if (doc != null) -->Line_54 $$ if (padding > 0) [ CD ]
Line_75 $$ if (ourListElementTypes.contains(myNode.getElementType()) || myNode.getPsi() instanceof PyStatementPart) -->Line_76 $$ return Indent.getNormalIndent()[ CD ]
Line_48 $$ int lineNum = doc.getLineNumber(exprItem.getTextOffset())-->Line_49 $$ final int itemCol = exprItem.getTextOffset() - doc.getLineStartOffset(lineNum)[ FD ]
Line_42 $$ exprItem = exprItem.getNextSibling()-->Line_30 $$ while (exprItem != null) [ FD ]
Line_6 $$ if (lastChild != null && lastChild.getElementType() == PyElementTypes.STATEMENT_LIST && mySubBlocks.size() >= newChildIndex) -->Line_21 $$ if (lastChild != null && PyElementTypes.LIST_LIKE_EXPRESSIONS.contains(lastChild.getElementType())) [ CD ]
Line_64 $$ if (afterNode != null && afterNode.getElementType() == PyElementTypes.KEY_VALUE_EXPRESSION) -->Line_65 $$ final PyKeyValueExpression keyValue = (PyKeyValueExpression) afterNode.getPsi()[ CD ]
Line_46 $$ final Document doc = docMgr.getDocument(exprItem.getContainingFile())-->Line_48 $$ int lineNum = doc.getLineNumber(exprItem.getTextOffset())[ FD ]
Line_4 $$ final ASTNode afterNode = getAfterNode(newChildIndex)-->Line_7 $$ if (afterNode == null) [ FD ]
Line_30 $$ while (exprItem != null) -->Line_42 $$ exprItem = exprItem.getNextSibling()[ CD ]
Line_28 $$ PsiElement exprItem = expr.getFirstChild()-->Line_45 $$ final PsiDocumentManager docMgr = PsiDocumentManager.getInstance(exprItem.getProject())[ FD ]
Line_46 $$ final Document doc = docMgr.getDocument(exprItem.getContainingFile())-->Line_49 $$ final int itemCol = exprItem.getTextOffset() - doc.getLineStartOffset(lineNum)[ FD ]
Line_53 $$ final int padding = itemCol - nodeCol-->Line_54 $$ if (padding > 0) [ FD ]
Line_5 $$ final ASTNode lastChild = getLastNonSpaceChild(myNode, false)-->Line_6 $$ if (lastChild != null && lastChild.getElementType() == PyElementTypes.STATEMENT_LIST && mySubBlocks.size() >= newChildIndex) [ FD ]
Line_4 $$ final ASTNode afterNode = getAfterNode(newChildIndex)-->Line_64 $$ if (afterNode != null && afterNode.getElementType() == PyElementTypes.KEY_VALUE_EXPRESSION) [ FD ]
Line_79 $$ ASTNode wsAfter = afterNode.getTreeNext()-->Line_81 $$ if (wsAfter.getText().indexOf('\\') >= 0) [ FD ]
Line_46 $$ final Document doc = docMgr.getDocument(exprItem.getContainingFile())-->Line_47 $$ if (doc != null) [ FD ]
Line_42 $$ exprItem = exprItem.getNextSibling()-->Line_48 $$ int lineNum = doc.getLineNumber(exprItem.getTextOffset())[ FD ]
Line_50 $$ final PsiElement hereElt = getNode().getPsi()-->Line_51 $$ lineNum = doc.getLineNumber(hereElt.getTextOffset())[ FD ]
Line_65 $$ final PyKeyValueExpression keyValue = (PyKeyValueExpression) afterNode.getPsi()-->Line_66 $$ if (keyValue != null && keyValue.getValue() == null) [ FD ]
Line_24 $$ if (lastLastChild != null && lastLastChild.getPsi() instanceof PsiErrorElement) -->Line_30 $$ while (exprItem != null) [ CD ]
Line_42 $$ exprItem = exprItem.getNextSibling()-->Line_46 $$ final Document doc = docMgr.getDocument(exprItem.getContainingFile())[ FD ]
Line_7 $$ if (afterNode == null) -->Line_8 $$ return Indent.getNoneIndent()[ CD ]
Line_5 $$ final ASTNode lastChild = getLastNonSpaceChild(myNode, false)-->Line_18 $$ if (lastFirstChild != null && lastFirstChild == lastChild.getLastChildNode() && lastFirstChild.getPsi() instanceof PsiErrorElement) [ FD ]
Line_47 $$ if (doc != null) -->Line_52 $$ final int nodeCol = hereElt.getTextOffset() - doc.getLineStartOffset(lineNum)[ CD ]
Line_46 $$ final Document doc = docMgr.getDocument(exprItem.getContainingFile())-->Line_52 $$ final int nodeCol = hereElt.getTextOffset() - doc.getLineStartOffset(lineNum)[ FD ]
Line_24 $$ if (lastLastChild != null && lastLastChild.getPsi() instanceof PsiErrorElement) -->Line_29 $$ boolean found = false[ CD ]
Line_28 $$ PsiElement exprItem = expr.getFirstChild()-->Line_48 $$ int lineNum = doc.getLineNumber(exprItem.getTextOffset())[ FD ]
Line_24 $$ if (lastLastChild != null && lastLastChild.getPsi() instanceof PsiErrorElement) -->Line_44 $$ if (found) [ CD ]
Line_28 $$ PsiElement exprItem = expr.getFirstChild()-->Line_46 $$ final Document doc = docMgr.getDocument(exprItem.getContainingFile())[ FD ]
Line_4 $$ final ASTNode afterNode = getAfterNode(newChildIndex)-->Line_79 $$ ASTNode wsAfter = afterNode.getTreeNext()[ FD ]
Line_45 $$ final PsiDocumentManager docMgr = PsiDocumentManager.getInstance(exprItem.getProject())-->Line_46 $$ final Document doc = docMgr.getDocument(exprItem.getContainingFile())[ FD ]
Line_80 $$ while (wsAfter != null && wsAfter.getElementType() == TokenType.WHITE_SPACE) -->Line_84 $$ wsAfter = wsAfter.getTreeNext()[ CD ]
Line_48 $$ int lineNum = doc.getLineNumber(exprItem.getTextOffset())-->Line_51 $$ lineNum = doc.getLineNumber(hereElt.getTextOffset())[ FD ]
Line_84 $$ wsAfter = wsAfter.getTreeNext()-->Line_80 $$ while (wsAfter != null && wsAfter.getElementType() == TokenType.WHITE_SPACE) [ FD ]
Line_81 $$ if (wsAfter.getText().indexOf('\\') >= 0) -->Line_82 $$ return Indent.getNormalIndent()[ CD ]
Line_28 $$ PsiElement exprItem = expr.getFirstChild()-->Line_30 $$ while (exprItem != null) [ FD ]
Line_28 $$ PsiElement exprItem = expr.getFirstChild()-->Line_49 $$ final int itemCol = exprItem.getTextOffset() - doc.getLineStartOffset(lineNum)[ FD ]
Line_79 $$ ASTNode wsAfter = afterNode.getTreeNext()-->Line_84 $$ wsAfter = wsAfter.getTreeNext()[ FD ]
Line_30 $$ while (exprItem != null) -->Line_37 $$ if (exprItem instanceof PsiComment) [ CD ]
Line_18 $$ if (lastFirstChild != null && lastFirstChild == lastChild.getLastChildNode() && lastFirstChild.getPsi() instanceof PsiErrorElement) -->Line_19 $$ return Indent.getNormalIndent()[ CD ]
Line_50 $$ final PsiElement hereElt = getNode().getPsi()-->Line_52 $$ final int nodeCol = hereElt.getTextOffset() - doc.getLineStartOffset(lineNum)[ FD ]
Line_84 $$ wsAfter = wsAfter.getTreeNext()-->Line_81 $$ if (wsAfter.getText().indexOf('\\') >= 0) [ FD ]
Line_5 $$ final ASTNode lastChild = getLastNonSpaceChild(myNode, false)-->Line_21 $$ if (lastChild != null && PyElementTypes.LIST_LIKE_EXPRESSIONS.contains(lastChild.getElementType())) [ FD ]
Line_44 $$ if (found) -->Line_46 $$ final Document doc = docMgr.getDocument(exprItem.getContainingFile())[ CD ]
Line_47 $$ if (doc != null) -->Line_48 $$ int lineNum = doc.getLineNumber(exprItem.getTextOffset())[ CD ]
