Line_5 $$ if (importStatementBase instanceof PyFromImportStatement && names.isEmpty()) -->Line_7 $$ if (qName != null) [ CD ]
Line_4 $$ final List<GenerateBinaryStubsFix> result = new ArrayList<GenerateBinaryStubsFix>(names.size())-->Line_8 $$ result.add(new GenerateBinaryStubsFix(importStatementBase, qName.toString()))[ FD ]
Line_2 $$ public static Collection<GenerateBinaryStubsFix> generateFixes(@NotNull final PyImportStatementBase importStatementBase) -->Line_14 $$ return result[ CD ]
Line_3 $$ final List<String> names = importStatementBase.getFullyQualifiedObjectNames()-->Line_5 $$ if (importStatementBase instanceof PyFromImportStatement && names.isEmpty()) [ FD ]
Line_6 $$ final QualifiedName qName = ((PyFromImportStatement) importStatementBase).getImportSourceQName()-->Line_8 $$ result.add(new GenerateBinaryStubsFix(importStatementBase, qName.toString()))[ FD ]
Line_2 $$ public static Collection<GenerateBinaryStubsFix> generateFixes(@NotNull final PyImportStatementBase importStatementBase) -->Line_4 $$ final List<GenerateBinaryStubsFix> result = new ArrayList<GenerateBinaryStubsFix>(names.size())[ CD ]
Line_2 $$ public static Collection<GenerateBinaryStubsFix> generateFixes(@NotNull final PyImportStatementBase importStatementBase) -->Line_5 $$ if (importStatementBase instanceof PyFromImportStatement && names.isEmpty()) [ CD ]
Line_3 $$ final List<String> names = importStatementBase.getFullyQualifiedObjectNames()-->Line_4 $$ final List<GenerateBinaryStubsFix> result = new ArrayList<GenerateBinaryStubsFix>(names.size())[ FD ]
Line_2 $$ public static Collection<GenerateBinaryStubsFix> generateFixes(@NotNull final PyImportStatementBase importStatementBase) -->Line_3 $$ final List<String> names = importStatementBase.getFullyQualifiedObjectNames()[ FD ]
Line_5 $$ if (importStatementBase instanceof PyFromImportStatement && names.isEmpty()) -->Line_6 $$ final QualifiedName qName = ((PyFromImportStatement) importStatementBase).getImportSourceQName()[ CD ]
Line_2 $$ public static Collection<GenerateBinaryStubsFix> generateFixes(@NotNull final PyImportStatementBase importStatementBase) -->Line_3 $$ final List<String> names = importStatementBase.getFullyQualifiedObjectNames()[ CD ]
Line_6 $$ final QualifiedName qName = ((PyFromImportStatement) importStatementBase).getImportSourceQName()-->Line_7 $$ if (qName != null) [ FD ]
Line_7 $$ if (qName != null) -->Line_8 $$ result.add(new GenerateBinaryStubsFix(importStatementBase, qName.toString()))[ CD ]
Line_4 $$ final List<GenerateBinaryStubsFix> result = new ArrayList<GenerateBinaryStubsFix>(names.size())-->Line_12 $$ result.add(new GenerateBinaryStubsFix(importStatementBase, qualifiedName))[ FD ]
