Line_2 $$ public void minimal() -->Line_5 $$ List<Mapping> mappings = this.registration.getMappings()[ CD ]
Line_2 $$ public void minimal() -->Line_9 $$ assertEquals("/foo", m1.path)[ CD ]
Line_3 $$ WebSocketHandler handler = new TextWebSocketHandler()-->Line_8 $$ assertEquals(handler, m1.webSocketHandler)[ FD ]
Line_2 $$ public void minimal() -->Line_11 $$ assertEquals(OriginHandshakeInterceptor.class, m1.interceptors[0].getClass())[ CD ]
Line_5 $$ List<Mapping> mappings = this.registration.getMappings()-->Line_7 $$ Mapping m1 = mappings.get(0)[ FD ]
Line_5 $$ List<Mapping> mappings = this.registration.getMappings()-->Line_6 $$ assertEquals(2, mappings.size())[ FD ]
Line_2 $$ public void minimal() -->Line_12 $$ Mapping m2 = mappings.get(1)[ CD ]
Line_2 $$ public void minimal() -->Line_4 $$ this.registration.addHandler(handler, "/foo", "/bar")[ CD ]
Line_2 $$ public void minimal() -->Line_7 $$ Mapping m1 = mappings.get(0)[ CD ]
Line_2 $$ public void minimal() -->Line_14 $$ assertEquals("/bar", m2.path)[ CD ]
Line_2 $$ public void minimal() -->Line_13 $$ assertEquals(handler, m2.webSocketHandler)[ CD ]
Line_5 $$ List<Mapping> mappings = this.registration.getMappings()-->Line_12 $$ Mapping m2 = mappings.get(1)[ FD ]
Line_2 $$ public void minimal() -->Line_8 $$ assertEquals(handler, m1.webSocketHandler)[ CD ]
Line_2 $$ public void minimal() -->Line_3 $$ WebSocketHandler handler = new TextWebSocketHandler()[ CD ]
Line_3 $$ WebSocketHandler handler = new TextWebSocketHandler()-->Line_4 $$ this.registration.addHandler(handler, "/foo", "/bar")[ FD ]
Line_2 $$ public void minimal() -->Line_16 $$ assertEquals(OriginHandshakeInterceptor.class, m2.interceptors[0].getClass())[ CD ]
Line_3 $$ WebSocketHandler handler = new TextWebSocketHandler()-->Line_13 $$ assertEquals(handler, m2.webSocketHandler)[ FD ]
Line_2 $$ public void minimal() -->Line_10 $$ assertEquals(1, m1.interceptors.length)[ CD ]
Line_2 $$ public void minimal() -->Line_6 $$ assertEquals(2, mappings.size())[ CD ]
Line_2 $$ public void minimal() -->Line_15 $$ assertEquals(1, m2.interceptors.length)[ CD ]
