Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_12 $$ session.clear()[ CD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_18 $$ assertEquals("Incorrect order count", 1, sp.getOrders().size())[ CD ]
Line_10 $$ Salesperson sp = (Salesperson) salespersons.get(0)-->Line_23 $$ assertEquals("Incorrect order count", 1, sp.getOrders().size())[ FD ]
Line_17 $$ sp = (Salesperson) salespersons.get(0)-->Line_23 $$ assertEquals("Incorrect order count", 1, sp.getOrders().size())[ FD ]
Line_8 $$ List salespersons = session.createQuery("select s from Salesperson as s").list()-->Line_17 $$ sp = (Salesperson) salespersons.get(0)[ FD ]
Line_10 $$ Salesperson sp = (Salesperson) salespersons.get(0)-->Line_18 $$ assertEquals("Incorrect order count", 1, sp.getOrders().size())[ FD ]
Line_20 $$ salespersons = session.createQuery("select s from Salesperson as s left join fetch s.orders").list()-->Line_22 $$ sp = (Salesperson) salespersons.get(0)[ FD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_19 $$ session.clear()[ CD ]
Line_5 $$ Session session = openSession()-->Line_6 $$ session.enableFilter("regionlist").setParameterList("regions", new String[] [ FD ]
Line_5 $$ Session session = openSession()-->Line_13 $$ session.disableFilter("regionlist")[ FD ]
Line_15 $$ salespersons = session.createQuery("select s from Salesperson as s").list()-->Line_21 $$ assertEquals("Incorrect salesperson count", 1, salespersons.size())[ FD ]
Line_10 $$ Salesperson sp = (Salesperson) salespersons.get(0)-->Line_11 $$ assertEquals("Incorrect order count", 1, sp.getOrders().size())[ FD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_11 $$ assertEquals("Incorrect order count", 1, sp.getOrders().size())[ CD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_15 $$ salespersons = session.createQuery("select s from Salesperson as s").list()[ CD ]
Line_8 $$ List salespersons = session.createQuery("select s from Salesperson as s").list()-->Line_15 $$ salespersons = session.createQuery("select s from Salesperson as s").list()[ FD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_14 $$ session.enableFilter("regionlist").setParameterList("regions", new String[] [ CD ]
Line_22 $$ sp = (Salesperson) salespersons.get(0)-->Line_23 $$ assertEquals("Incorrect order count", 1, sp.getOrders().size())[ FD ]
Line_8 $$ List salespersons = session.createQuery("select s from Salesperson as s").list()-->Line_20 $$ salespersons = session.createQuery("select s from Salesperson as s left join fetch s.orders").list()[ FD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_24 $$ session.close()[ CD ]
Line_8 $$ List salespersons = session.createQuery("select s from Salesperson as s").list()-->Line_16 $$ assertEquals("Incorrect salesperson count", 1, salespersons.size())[ FD ]
Line_10 $$ Salesperson sp = (Salesperson) salespersons.get(0)-->Line_17 $$ sp = (Salesperson) salespersons.get(0)[ FD ]
Line_10 $$ Salesperson sp = (Salesperson) salespersons.get(0)-->Line_22 $$ sp = (Salesperson) salespersons.get(0)[ FD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_16 $$ assertEquals("Incorrect salesperson count", 1, salespersons.size())[ CD ]
Line_8 $$ List salespersons = session.createQuery("select s from Salesperson as s").list()-->Line_10 $$ Salesperson sp = (Salesperson) salespersons.get(0)[ FD ]
Line_5 $$ Session session = openSession()-->Line_8 $$ List salespersons = session.createQuery("select s from Salesperson as s").list()[ FD ]
Line_5 $$ Session session = openSession()-->Line_7 $$ session.enableFilter("fulfilledOrders").setParameter("asOfDate", testData.lastMonth.getTime())[ FD ]
Line_3 $$ TestData testData = new TestData()-->Line_25 $$ testData.release()[ FD ]
Line_17 $$ sp = (Salesperson) salespersons.get(0)-->Line_18 $$ assertEquals("Incorrect order count", 1, sp.getOrders().size())[ FD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_20 $$ salespersons = session.createQuery("select s from Salesperson as s left join fetch s.orders").list()[ CD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_7 $$ session.enableFilter("fulfilledOrders").setParameter("asOfDate", testData.lastMonth.getTime())[ CD ]
Line_5 $$ Session session = openSession()-->Line_12 $$ session.clear()[ FD ]
Line_17 $$ sp = (Salesperson) salespersons.get(0)-->Line_22 $$ sp = (Salesperson) salespersons.get(0)[ FD ]
Line_8 $$ List salespersons = session.createQuery("select s from Salesperson as s").list()-->Line_9 $$ assertEquals("Incorrect salesperson count", 1, salespersons.size())[ FD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_6 $$ session.enableFilter("regionlist").setParameterList("regions", new String[] [ CD ]
Line_15 $$ salespersons = session.createQuery("select s from Salesperson as s").list()-->Line_16 $$ assertEquals("Incorrect salesperson count", 1, salespersons.size())[ FD ]
Line_15 $$ salespersons = session.createQuery("select s from Salesperson as s").list()-->Line_22 $$ sp = (Salesperson) salespersons.get(0)[ FD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_17 $$ sp = (Salesperson) salespersons.get(0)[ CD ]
Line_5 $$ Session session = openSession()-->Line_15 $$ salespersons = session.createQuery("select s from Salesperson as s").list()[ FD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_4 $$ testData.prepare()[ CD ]
Line_15 $$ salespersons = session.createQuery("select s from Salesperson as s").list()-->Line_17 $$ sp = (Salesperson) salespersons.get(0)[ FD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_25 $$ testData.release()[ CD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_5 $$ Session session = openSession()[ CD ]
Line_5 $$ Session session = openSession()-->Line_24 $$ session.close()[ FD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_8 $$ List salespersons = session.createQuery("select s from Salesperson as s").list()[ CD ]
Line_5 $$ Session session = openSession()-->Line_14 $$ session.enableFilter("regionlist").setParameterList("regions", new String[] [ FD ]
Line_8 $$ List salespersons = session.createQuery("select s from Salesperson as s").list()-->Line_21 $$ assertEquals("Incorrect salesperson count", 1, salespersons.size())[ FD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_13 $$ session.disableFilter("regionlist")[ CD ]
Line_5 $$ Session session = openSession()-->Line_19 $$ session.clear()[ FD ]
Line_15 $$ salespersons = session.createQuery("select s from Salesperson as s").list()-->Line_20 $$ salespersons = session.createQuery("select s from Salesperson as s left join fetch s.orders").list()[ FD ]
Line_3 $$ TestData testData = new TestData()-->Line_4 $$ testData.prepare()[ FD ]
Line_8 $$ List salespersons = session.createQuery("select s from Salesperson as s").list()-->Line_22 $$ sp = (Salesperson) salespersons.get(0)[ FD ]
Line_20 $$ salespersons = session.createQuery("select s from Salesperson as s left join fetch s.orders").list()-->Line_21 $$ assertEquals("Incorrect salesperson count", 1, salespersons.size())[ FD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_22 $$ sp = (Salesperson) salespersons.get(0)[ CD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_10 $$ Salesperson sp = (Salesperson) salespersons.get(0)[ CD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_21 $$ assertEquals("Incorrect salesperson count", 1, salespersons.size())[ CD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_3 $$ TestData testData = new TestData()[ CD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_9 $$ assertEquals("Incorrect salesperson count", 1, salespersons.size())[ CD ]
Line_2 $$ public void testCombinedClassAndCollectionFiltersEnabled() -->Line_23 $$ assertEquals("Incorrect order count", 1, sp.getOrders().size())[ CD ]
Line_5 $$ Session session = openSession()-->Line_20 $$ salespersons = session.createQuery("select s from Salesperson as s left join fetch s.orders").list()[ FD ]
