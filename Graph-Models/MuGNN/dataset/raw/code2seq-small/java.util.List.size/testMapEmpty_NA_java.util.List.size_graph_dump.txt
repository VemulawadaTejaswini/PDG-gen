Line_4 $$ FP.Lambda1<String, String> func = new FP.Lambda1<String, String>() -->Line_12 $$ for (String what : FP.map(func, sequence)) [ FD ]
Line_2 $$ public void testMapEmpty() -->Line_16 $$ assertEquals(sequence.size(), count)[ CD ]
Line_2 $$ public void testMapEmpty() -->Line_4 $$ FP.Lambda1<String, String> func = new FP.Lambda1<String, String>() [ CD ]
Line_2 $$ public void testMapEmpty() -->Line_3 $$ List<String> sequence = Arrays.asList()[ CD ]
Line_3 $$ List<String> sequence = Arrays.asList()-->Line_12 $$ for (String what : FP.map(func, sequence)) [ FD ]
Line_4 $$ FP.Lambda1<String, String> func = new FP.Lambda1<String, String>() -->Line_8 $$ return arg.toUpperCase()[ FD ]
Line_4 $$ FP.Lambda1<String, String> func = new FP.Lambda1<String, String>() -->Line_8 $$ return arg.toUpperCase()[ CD ]
Line_3 $$ List<String> sequence = Arrays.asList()-->Line_16 $$ assertEquals(sequence.size(), count)[ FD ]
