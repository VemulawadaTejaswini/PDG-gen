Line_5 $$ String[] values = field.getValues()-->Line_6 $$ if (ArrayUtil.isEmpty(values)) [ FD ]
Line_19 $$ values = valuesList.toArray(new String[valuesList.size()])-->Line_20 $$ addField(xContentBuilder, field, name, values)[ FD ]
Line_2 $$ protected void addField(XContentBuilder xContentBuilder, Field field) throws IOException -->Line_3 $$ String name = field.getName()[ FD ]
Line_2 $$ protected void addField(XContentBuilder xContentBuilder, Field field) throws IOException -->Line_43 $$ addField(xContentBuilder, field, sortableFieldName, value)[ FD ]
Line_39 $$ String localizedName = DocumentImpl.getLocalizedName(languageId, name)-->Line_40 $$ addField(xContentBuilder, field, localizedName, value)[ FD ]
Line_10 $$ for (String value : values) -->Line_37 $$ addField(xContentBuilder, field, name, value)[ FD ]
Line_2 $$ protected void addField(XContentBuilder xContentBuilder, Field field) throws IOException -->Line_4 $$ if (!field.isLocalized()) [ CD ]
Line_36 $$ if (languageId.equals(defaultLanguageId)) -->Line_37 $$ addField(xContentBuilder, field, name, value)[ CD ]
Line_10 $$ for (String value : values) -->Line_40 $$ addField(xContentBuilder, field, localizedName, value)[ FD ]
Line_9 $$ List<String> valuesList = new ArrayList(values.length)-->Line_19 $$ values = valuesList.toArray(new String[valuesList.size()])[ FD ]
Line_42 $$ String sortableFieldName = DocumentImpl.getSortableFieldName(localizedName)-->Line_43 $$ addField(xContentBuilder, field, sortableFieldName, value)[ FD ]
Line_2 $$ protected void addField(XContentBuilder xContentBuilder, Field field) throws IOException -->Line_26 $$ Map<Locale, String> localizedValues = field.getLocalizedValues()[ FD ]
Line_35 $$ value = value.trim()-->Line_37 $$ addField(xContentBuilder, field, name, value)[ FD ]
Line_35 $$ value = value.trim()-->Line_43 $$ addField(xContentBuilder, field, sortableFieldName, value)[ FD ]
Line_39 $$ String localizedName = DocumentImpl.getLocalizedName(languageId, name)-->Line_42 $$ String sortableFieldName = DocumentImpl.getSortableFieldName(localizedName)[ FD ]
Line_33 $$ String languageId = LocaleUtil.toLanguageId(locale)-->Line_39 $$ String localizedName = DocumentImpl.getLocalizedName(languageId, name)[ FD ]
Line_2 $$ protected void addField(XContentBuilder xContentBuilder, Field field) throws IOException -->Line_4 $$ if (!field.isLocalized()) [ FD ]
Line_41 $$ if (field.isSortable()) -->Line_42 $$ String sortableFieldName = DocumentImpl.getSortableFieldName(localizedName)[ CD ]
Line_3 $$ String name = field.getName()-->Line_20 $$ addField(xContentBuilder, field, name, values)[ FD ]
Line_19 $$ values = valuesList.toArray(new String[valuesList.size()])-->Line_23 $$ addField(xContentBuilder, field, sortFieldName, values)[ FD ]
Line_2 $$ protected void addField(XContentBuilder xContentBuilder, Field field) throws IOException -->Line_41 $$ if (field.isSortable()) [ FD ]
Line_10 $$ for (String value : values) -->Line_43 $$ addField(xContentBuilder, field, sortableFieldName, value)[ FD ]
Line_4 $$ if (!field.isLocalized()) -->Line_6 $$ if (ArrayUtil.isEmpty(values)) [ CD ]
Line_4 $$ if (!field.isLocalized()) -->Line_20 $$ addField(xContentBuilder, field, name, values)[ CD ]
Line_4 $$ if (!field.isLocalized()) -->Line_9 $$ List<String> valuesList = new ArrayList(values.length)[ CD ]
Line_2 $$ protected void addField(XContentBuilder xContentBuilder, Field field) throws IOException -->Line_40 $$ addField(xContentBuilder, field, localizedName, value)[ FD ]
Line_9 $$ List<String> valuesList = new ArrayList(values.length)-->Line_14 $$ valuesList.add(value.trim())[ FD ]
Line_33 $$ String languageId = LocaleUtil.toLanguageId(locale)-->Line_36 $$ if (languageId.equals(defaultLanguageId)) [ FD ]
Line_35 $$ value = value.trim()-->Line_40 $$ addField(xContentBuilder, field, localizedName, value)[ FD ]
Line_16 $$ if (valuesList.isEmpty()) -->Line_17 $$ return[ CD ]
Line_4 $$ if (!field.isLocalized()) -->Line_19 $$ values = valuesList.toArray(new String[valuesList.size()])[ CD ]
Line_3 $$ String name = field.getName()-->Line_39 $$ String localizedName = DocumentImpl.getLocalizedName(languageId, name)[ FD ]
Line_27 $$ for (Map.Entry<Locale, String> entry : localizedValues.entrySet()) -->Line_32 $$ Locale locale = entry.getKey()[ FD ]
Line_2 $$ protected void addField(XContentBuilder xContentBuilder, Field field) throws IOException -->Line_3 $$ String name = field.getName()[ CD ]
Line_9 $$ List<String> valuesList = new ArrayList(values.length)-->Line_16 $$ if (valuesList.isEmpty()) [ FD ]
Line_3 $$ String name = field.getName()-->Line_22 $$ String sortFieldName = DocumentImpl.getSortableFieldName(name)[ FD ]
Line_5 $$ String[] values = field.getValues()-->Line_20 $$ addField(xContentBuilder, field, name, values)[ FD ]
Line_26 $$ Map<Locale, String> localizedValues = field.getLocalizedValues()-->Line_27 $$ for (Map.Entry<Locale, String> entry : localizedValues.entrySet()) [ FD ]
Line_41 $$ if (field.isSortable()) -->Line_43 $$ addField(xContentBuilder, field, sortableFieldName, value)[ CD ]
Line_4 $$ if (!field.isLocalized()) -->Line_26 $$ Map<Locale, String> localizedValues = field.getLocalizedValues()[ CD ]
Line_5 $$ String[] values = field.getValues()-->Line_23 $$ addField(xContentBuilder, field, sortFieldName, values)[ FD ]
Line_4 $$ if (!field.isLocalized()) -->Line_21 $$ if (field.isSortable()) [ CD ]
Line_10 $$ for (String value : values) -->Line_14 $$ valuesList.add(value.trim())[ FD ]
Line_21 $$ if (field.isSortable()) -->Line_22 $$ String sortFieldName = DocumentImpl.getSortableFieldName(name)[ CD ]
Line_22 $$ String sortFieldName = DocumentImpl.getSortableFieldName(name)-->Line_23 $$ addField(xContentBuilder, field, sortFieldName, values)[ FD ]
Line_6 $$ if (ArrayUtil.isEmpty(values)) -->Line_7 $$ return[ CD ]
Line_21 $$ if (field.isSortable()) -->Line_23 $$ addField(xContentBuilder, field, sortFieldName, values)[ CD ]
Line_2 $$ protected void addField(XContentBuilder xContentBuilder, Field field) throws IOException -->Line_20 $$ addField(xContentBuilder, field, name, values)[ FD ]
Line_10 $$ for (String value : values) -->Line_11 $$ if (Validator.isNull(value)) [ FD ]
Line_2 $$ protected void addField(XContentBuilder xContentBuilder, Field field) throws IOException -->Line_5 $$ String[] values = field.getValues()[ FD ]
Line_34 $$ String defaultLanguageId = LocaleUtil.toLanguageId(LocaleUtil.getDefault())-->Line_36 $$ if (languageId.equals(defaultLanguageId)) [ FD ]
Line_5 $$ String[] values = field.getValues()-->Line_19 $$ values = valuesList.toArray(new String[valuesList.size()])[ FD ]
Line_2 $$ protected void addField(XContentBuilder xContentBuilder, Field field) throws IOException -->Line_21 $$ if (field.isSortable()) [ FD ]
Line_27 $$ for (Map.Entry<Locale, String> entry : localizedValues.entrySet()) -->Line_28 $$ String value = entry.getValue()[ FD ]
Line_3 $$ String name = field.getName()-->Line_37 $$ addField(xContentBuilder, field, name, value)[ FD ]
Line_2 $$ protected void addField(XContentBuilder xContentBuilder, Field field) throws IOException -->Line_23 $$ addField(xContentBuilder, field, sortFieldName, values)[ FD ]
Line_4 $$ if (!field.isLocalized()) -->Line_5 $$ String[] values = field.getValues()[ CD ]
Line_2 $$ protected void addField(XContentBuilder xContentBuilder, Field field) throws IOException -->Line_37 $$ addField(xContentBuilder, field, name, value)[ FD ]
Line_32 $$ Locale locale = entry.getKey()-->Line_33 $$ String languageId = LocaleUtil.toLanguageId(locale)[ FD ]
Line_10 $$ for (String value : values) -->Line_35 $$ value = value.trim()[ FD ]
Line_4 $$ if (!field.isLocalized()) -->Line_16 $$ if (valuesList.isEmpty()) [ CD ]
Line_10 $$ for (String value : values) -->Line_29 $$ if (Validator.isNull(value)) [ FD ]
