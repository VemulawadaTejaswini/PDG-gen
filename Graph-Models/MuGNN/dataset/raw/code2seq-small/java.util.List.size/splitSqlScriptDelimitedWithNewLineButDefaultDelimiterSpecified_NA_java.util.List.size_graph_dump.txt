Line_2 $$ public void splitSqlScriptDelimitedWithNewLineButDefaultDelimiterSpecified() -->Line_7 $$ List<String> statements = new ArrayList<String>()[ CD ]
Line_2 $$ public void splitSqlScriptDelimitedWithNewLineButDefaultDelimiterSpecified() -->Line_5 $$ char delim = '\n'[ CD ]
Line_2 $$ public void splitSqlScriptDelimitedWithNewLineButDefaultDelimiterSpecified() -->Line_10 $$ assertEquals("script should have been 'stripped' but not actually 'split'", script.replace('\n', ' '), statements.get(0))[ CD ]
Line_7 $$ List<String> statements = new ArrayList<String>()-->Line_9 $$ assertEquals("wrong number of statements", 1, statements.size())[ FD ]
Line_2 $$ public void splitSqlScriptDelimitedWithNewLineButDefaultDelimiterSpecified() -->Line_9 $$ assertEquals("wrong number of statements", 1, statements.size())[ CD ]
Line_7 $$ List<String> statements = new ArrayList<String>()-->Line_10 $$ assertEquals("script should have been 'stripped' but not actually 'split'", script.replace('\n', ' '), statements.get(0))[ FD ]
Line_2 $$ public void splitSqlScriptDelimitedWithNewLineButDefaultDelimiterSpecified() -->Line_4 $$ String statement2 = "do something else"[ CD ]
Line_2 $$ public void splitSqlScriptDelimitedWithNewLineButDefaultDelimiterSpecified() -->Line_3 $$ String statement1 = "do something"[ CD ]
Line_6 $$ String script = statement1 + delim + statement2 + delim-->Line_10 $$ assertEquals("script should have been 'stripped' but not actually 'split'", script.replace('\n', ' '), statements.get(0))[ FD ]
Line_2 $$ public void splitSqlScriptDelimitedWithNewLineButDefaultDelimiterSpecified() -->Line_8 $$ splitSqlScript(script, DEFAULT_STATEMENT_SEPARATOR, statements)[ CD ]
Line_6 $$ String script = statement1 + delim + statement2 + delim-->Line_8 $$ splitSqlScript(script, DEFAULT_STATEMENT_SEPARATOR, statements)[ FD ]
Line_2 $$ public void splitSqlScriptDelimitedWithNewLineButDefaultDelimiterSpecified() -->Line_6 $$ String script = statement1 + delim + statement2 + delim[ CD ]
Line_7 $$ List<String> statements = new ArrayList<String>()-->Line_8 $$ splitSqlScript(script, DEFAULT_STATEMENT_SEPARATOR, statements)[ FD ]
