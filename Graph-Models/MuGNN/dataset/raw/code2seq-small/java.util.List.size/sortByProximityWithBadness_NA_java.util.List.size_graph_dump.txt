Line_18 $$ if (subsnitchScore > (sortedScoreIterator.next() * (1.0 + BADNESS_THRESHOLD))) -->Line_19 $$ sortByProximityWithScore(address, addresses)[ CD ]
Line_2 $$ private void sortByProximityWithBadness(final InetAddress address, List<InetAddress> addresses) -->Line_14 $$ ArrayList<Double> sortedScores = new ArrayList(subsnitchOrderedScores)[ CD ]
Line_10 $$ if (score == null)-->Line_11 $$ return[ CD ]
Line_9 $$ Double score = scores.get(inet)-->Line_12 $$ subsnitchOrderedScores.add(score)[ FD ]
Line_14 $$ ArrayList<Double> sortedScores = new ArrayList(subsnitchOrderedScores)-->Line_15 $$ Collections.sort(sortedScores)[ FD ]
Line_2 $$ private void sortByProximityWithBadness(final InetAddress address, List<InetAddress> addresses) -->Line_16 $$ Iterator<Double> sortedScoreIterator = sortedScores.iterator()[ CD ]
Line_14 $$ ArrayList<Double> sortedScores = new ArrayList(subsnitchOrderedScores)-->Line_16 $$ Iterator<Double> sortedScoreIterator = sortedScores.iterator()[ FD ]
Line_2 $$ private void sortByProximityWithBadness(final InetAddress address, List<InetAddress> addresses) -->Line_3 $$ if (addresses.size() < 2)[ CD ]
Line_18 $$ if (subsnitchScore > (sortedScoreIterator.next() * (1.0 + BADNESS_THRESHOLD))) -->Line_20 $$ return[ CD ]
Line_3 $$ if (addresses.size() < 2)-->Line_4 $$ return[ CD ]
Line_6 $$ HashMap<InetAddress, Double> scores = this.scores-->Line_9 $$ Double score = scores.get(inet)[ FD ]
Line_2 $$ private void sortByProximityWithBadness(final InetAddress address, List<InetAddress> addresses) -->Line_7 $$ ArrayList<Double> subsnitchOrderedScores = new ArrayList(addresses.size())[ FD ]
Line_8 $$ for (InetAddress inet : addresses) -->Line_9 $$ Double score = scores.get(inet)[ FD ]
Line_9 $$ Double score = scores.get(inet)-->Line_10 $$ if (score == null)[ FD ]
Line_7 $$ ArrayList<Double> subsnitchOrderedScores = new ArrayList(addresses.size())-->Line_12 $$ subsnitchOrderedScores.add(score)[ FD ]
Line_2 $$ private void sortByProximityWithBadness(final InetAddress address, List<InetAddress> addresses) -->Line_15 $$ Collections.sort(sortedScores)[ CD ]
Line_16 $$ Iterator<Double> sortedScoreIterator = sortedScores.iterator()-->Line_18 $$ if (subsnitchScore > (sortedScoreIterator.next() * (1.0 + BADNESS_THRESHOLD))) [ FD ]
Line_2 $$ private void sortByProximityWithBadness(final InetAddress address, List<InetAddress> addresses) -->Line_7 $$ ArrayList<Double> subsnitchOrderedScores = new ArrayList(addresses.size())[ CD ]
Line_2 $$ private void sortByProximityWithBadness(final InetAddress address, List<InetAddress> addresses) -->Line_19 $$ sortByProximityWithScore(address, addresses)[ FD ]
Line_2 $$ private void sortByProximityWithBadness(final InetAddress address, List<InetAddress> addresses) -->Line_3 $$ if (addresses.size() < 2)[ FD ]
Line_2 $$ private void sortByProximityWithBadness(final InetAddress address, List<InetAddress> addresses) -->Line_5 $$ subsnitch.sortByProximity(address, addresses)[ CD ]
Line_2 $$ private void sortByProximityWithBadness(final InetAddress address, List<InetAddress> addresses) -->Line_6 $$ HashMap<InetAddress, Double> scores = this.scores[ CD ]
Line_17 $$ for (Double subsnitchScore : subsnitchOrderedScores) -->Line_18 $$ if (subsnitchScore > (sortedScoreIterator.next() * (1.0 + BADNESS_THRESHOLD))) [ FD ]
Line_2 $$ private void sortByProximityWithBadness(final InetAddress address, List<InetAddress> addresses) -->Line_5 $$ subsnitch.sortByProximity(address, addresses)[ FD ]
