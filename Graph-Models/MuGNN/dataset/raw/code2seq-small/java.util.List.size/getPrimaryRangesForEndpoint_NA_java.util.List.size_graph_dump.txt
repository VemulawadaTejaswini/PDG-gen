Line_6 $$ for (Token token : metadata.sortedTokens()) -->Line_7 $$ List<InetAddress> endpoints = strategy.calculateNaturalEndpoints(token, metadata)[ FD ]
Line_2 $$ public Collection<Range<Token>> getPrimaryRangesForEndpoint(String keyspace, InetAddress ep) -->Line_4 $$ Collection<Range<Token>> primaryRanges = new HashSet()[ CD ]
Line_3 $$ AbstractReplicationStrategy strategy = Keyspace.open(keyspace).getReplicationStrategy()-->Line_7 $$ List<InetAddress> endpoints = strategy.calculateNaturalEndpoints(token, metadata)[ FD ]
Line_5 $$ TokenMetadata metadata = tokenMetadata.cloneOnlyTokenMap()-->Line_7 $$ List<InetAddress> endpoints = strategy.calculateNaturalEndpoints(token, metadata)[ FD ]
Line_5 $$ TokenMetadata metadata = tokenMetadata.cloneOnlyTokenMap()-->Line_9 $$ primaryRanges.add(new Range(metadata.getPredecessor(token), token))[ FD ]
Line_2 $$ public Collection<Range<Token>> getPrimaryRangesForEndpoint(String keyspace, InetAddress ep) -->Line_8 $$ if (endpoints.size() > 0 && endpoints.get(0).equals(ep))[ FD ]
Line_2 $$ public Collection<Range<Token>> getPrimaryRangesForEndpoint(String keyspace, InetAddress ep) -->Line_3 $$ AbstractReplicationStrategy strategy = Keyspace.open(keyspace).getReplicationStrategy()[ CD ]
Line_2 $$ public Collection<Range<Token>> getPrimaryRangesForEndpoint(String keyspace, InetAddress ep) -->Line_3 $$ AbstractReplicationStrategy strategy = Keyspace.open(keyspace).getReplicationStrategy()[ FD ]
Line_2 $$ public Collection<Range<Token>> getPrimaryRangesForEndpoint(String keyspace, InetAddress ep) -->Line_11 $$ return primaryRanges[ CD ]
Line_8 $$ if (endpoints.size() > 0 && endpoints.get(0).equals(ep))-->Line_9 $$ primaryRanges.add(new Range(metadata.getPredecessor(token), token))[ CD ]
Line_7 $$ List<InetAddress> endpoints = strategy.calculateNaturalEndpoints(token, metadata)-->Line_8 $$ if (endpoints.size() > 0 && endpoints.get(0).equals(ep))[ FD ]
Line_2 $$ public Collection<Range<Token>> getPrimaryRangesForEndpoint(String keyspace, InetAddress ep) -->Line_5 $$ TokenMetadata metadata = tokenMetadata.cloneOnlyTokenMap()[ CD ]
Line_4 $$ Collection<Range<Token>> primaryRanges = new HashSet()-->Line_9 $$ primaryRanges.add(new Range(metadata.getPredecessor(token), token))[ FD ]
Line_6 $$ for (Token token : metadata.sortedTokens()) -->Line_9 $$ primaryRanges.add(new Range(metadata.getPredecessor(token), token))[ FD ]
Line_5 $$ TokenMetadata metadata = tokenMetadata.cloneOnlyTokenMap()-->Line_6 $$ for (Token token : metadata.sortedTokens()) [ FD ]
