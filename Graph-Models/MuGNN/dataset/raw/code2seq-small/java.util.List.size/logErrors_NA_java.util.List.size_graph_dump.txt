Line_2 $$ private static void logErrors(@NotNull final Map<String, List<String>> errors, @NotNull final List<String> failedSdks, @NotNull final String message) -->Line_9 $$ if (errors.size() > 0) [ FD ]
Line_9 $$ if (errors.size() > 0) -->Line_10 $$ LOG.warn(PyBundle.message("sdk.error.dialog.failed.modules"))[ CD ]
Line_5 $$ if (failedSdks.size() > 0) -->Line_7 $$ LOG.warn(StringUtil.join(failedSdks, ", "))[ CD ]
Line_2 $$ private static void logErrors(@NotNull final Map<String, List<String>> errors, @NotNull final List<String> failedSdks, @NotNull final String message) -->Line_4 $$ LOG.warn(message)[ FD ]
Line_2 $$ private static void logErrors(@NotNull final Map<String, List<String>> errors, @NotNull final List<String> failedSdks, @NotNull final String message) -->Line_9 $$ if (errors.size() > 0) [ CD ]
Line_2 $$ private static void logErrors(@NotNull final Map<String, List<String>> errors, @NotNull final List<String> failedSdks, @NotNull final String message) -->Line_5 $$ if (failedSdks.size() > 0) [ FD ]
Line_11 $$ for (String sdkName : errors.keySet()) -->Line_12 $$ for (String moduleName : errors.get(sdkName)) [ FD ]
Line_5 $$ if (failedSdks.size() > 0) -->Line_6 $$ LOG.warn(PyBundle.message("sdk.error.dialog.failed.sdks"))[ CD ]
Line_2 $$ private static void logErrors(@NotNull final Map<String, List<String>> errors, @NotNull final List<String> failedSdks, @NotNull final String message) -->Line_11 $$ for (String sdkName : errors.keySet()) [ FD ]
Line_2 $$ private static void logErrors(@NotNull final Map<String, List<String>> errors, @NotNull final List<String> failedSdks, @NotNull final String message) -->Line_12 $$ for (String moduleName : errors.get(sdkName)) [ FD ]
Line_2 $$ private static void logErrors(@NotNull final Map<String, List<String>> errors, @NotNull final List<String> failedSdks, @NotNull final String message) -->Line_3 $$ LOG.warn(PyBundle.message("sdk.some.skeletons.failed"))[ CD ]
Line_2 $$ private static void logErrors(@NotNull final Map<String, List<String>> errors, @NotNull final List<String> failedSdks, @NotNull final String message) -->Line_4 $$ LOG.warn(message)[ CD ]
Line_2 $$ private static void logErrors(@NotNull final Map<String, List<String>> errors, @NotNull final List<String> failedSdks, @NotNull final String message) -->Line_5 $$ if (failedSdks.size() > 0) [ CD ]
Line_2 $$ private static void logErrors(@NotNull final Map<String, List<String>> errors, @NotNull final List<String> failedSdks, @NotNull final String message) -->Line_7 $$ LOG.warn(StringUtil.join(failedSdks, ", "))[ FD ]
Line_12 $$ for (String moduleName : errors.get(sdkName)) -->Line_13 $$ LOG.warn(moduleName)[ FD ]
