Line_3 $$ Pair<NodeDescriptorImpl, List<String>> descriptorText = findDescriptorLog(descriptor)-->Line_8 $$ myDescriptorLog.add(descriptorText)[ FD ]
Line_2 $$ protected void logDescriptor(final NodeDescriptorImpl descriptor, String text) -->Line_3 $$ Pair<NodeDescriptorImpl, List<String>> descriptorText = findDescriptorLog(descriptor)[ FD ]
Line_3 $$ Pair<NodeDescriptorImpl, List<String>> descriptorText = findDescriptorLog(descriptor)-->Line_4 $$ if (descriptorText == null) [ FD ]
Line_3 $$ Pair<NodeDescriptorImpl, List<String>> descriptorText = findDescriptorLog(descriptor)-->Line_10 $$ List<String> allText = descriptorText.getSecond()[ FD ]
Line_4 $$ if (descriptorText == null) -->Line_7 $$ descriptorText = new Pair<NodeDescriptorImpl, List<String>>(descriptor, allText)[ CD ]
Line_2 $$ protected void logDescriptor(final NodeDescriptorImpl descriptor, String text) -->Line_6 $$ allText.add(text)[ FD ]
Line_3 $$ Pair<NodeDescriptorImpl, List<String>> descriptorText = findDescriptorLog(descriptor)-->Line_7 $$ descriptorText = new Pair<NodeDescriptorImpl, List<String>>(descriptor, allText)[ FD ]
Line_4 $$ if (descriptorText == null) -->Line_8 $$ myDescriptorLog.add(descriptorText)[ CD ]
Line_2 $$ protected void logDescriptor(final NodeDescriptorImpl descriptor, String text) -->Line_11 $$ if (!allText.get(allText.size() - 1).equals(text)) [ FD ]
Line_2 $$ protected void logDescriptor(final NodeDescriptorImpl descriptor, String text) -->Line_12 $$ allText.add(text)[ FD ]
Line_7 $$ descriptorText = new Pair<NodeDescriptorImpl, List<String>>(descriptor, allText)-->Line_10 $$ List<String> allText = descriptorText.getSecond()[ FD ]
Line_2 $$ protected void logDescriptor(final NodeDescriptorImpl descriptor, String text) -->Line_3 $$ Pair<NodeDescriptorImpl, List<String>> descriptorText = findDescriptorLog(descriptor)[ CD ]
Line_2 $$ protected void logDescriptor(final NodeDescriptorImpl descriptor, String text) -->Line_4 $$ if (descriptorText == null) [ CD ]
Line_7 $$ descriptorText = new Pair<NodeDescriptorImpl, List<String>>(descriptor, allText)-->Line_8 $$ myDescriptorLog.add(descriptorText)[ FD ]
Line_4 $$ if (descriptorText == null) -->Line_6 $$ allText.add(text)[ CD ]
Line_11 $$ if (!allText.get(allText.size() - 1).equals(text)) -->Line_12 $$ allText.add(text)[ CD ]
Line_4 $$ if (descriptorText == null) -->Line_5 $$ ArrayList<String> allText = new ArrayList<String>()[ CD ]
Line_5 $$ ArrayList<String> allText = new ArrayList<String>()-->Line_11 $$ if (!allText.get(allText.size() - 1).equals(text)) [ FD ]
Line_4 $$ if (descriptorText == null) -->Line_10 $$ List<String> allText = descriptorText.getSecond()[ CD ]
Line_5 $$ ArrayList<String> allText = new ArrayList<String>()-->Line_12 $$ allText.add(text)[ FD ]
Line_4 $$ if (descriptorText == null) -->Line_11 $$ if (!allText.get(allText.size() - 1).equals(text)) [ CD ]
Line_5 $$ ArrayList<String> allText = new ArrayList<String>()-->Line_6 $$ allText.add(text)[ FD ]
