Line_12 $$ HttpClientSPIAgent httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))-->Line_26 $$ httpClientSPIAgent.destroy()[ FD ]
Line_10 $$ Socket socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_23 $$ socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())[ FD ]
Line_10 $$ Socket socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_16 $$ swapSocketImpl(socket, socketImpl)[ FD ]
Line_10 $$ Socket socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_14 $$ socketBlockingQueue.add(socket)[ FD ]
Line_24 $$ socketImpl = swapSocketImpl(socket, null)-->Line_27 $$ swapSocketImpl(socket, socketImpl)[ FD ]
Line_37 $$ socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_38 $$ socketBlockingQueue.add(socket)[ FD ]
Line_10 $$ Socket socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_11 $$ SocketImpl socketImpl = swapSocketImpl(socket, null)[ FD ]
Line_12 $$ HttpClientSPIAgent httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))-->Line_15 $$ httpClientSPIAgent.destroy()[ FD ]
Line_23 $$ socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_40 $$ closePeers(socket, serverSocket)[ FD ]
Line_23 $$ socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_38 $$ socketBlockingQueue.add(socket)[ FD ]
Line_23 $$ socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_27 $$ swapSocketImpl(socket, socketImpl)[ FD ]
Line_7 $$ ServerSocketChannel serverSocketChannel = SocketUtil.createServerSocketChannel(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort(), null)-->Line_8 $$ serverSocketChannel.configureBlocking(true)[ FD ]
Line_12 $$ HttpClientSPIAgent httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))-->Line_39 $$ httpClientSPIAgent.destroy()[ FD ]
Line_11 $$ SocketImpl socketImpl = swapSocketImpl(socket, null)-->Line_27 $$ swapSocketImpl(socket, socketImpl)[ FD ]
Line_23 $$ socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_37 $$ socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())[ FD ]
Line_10 $$ Socket socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_38 $$ socketBlockingQueue.add(socket)[ FD ]
Line_13 $$ Queue<Socket> socketBlockingQueue = httpClientSPIAgent.socketBlockingQueue-->Line_38 $$ socketBlockingQueue.add(socket)[ FD ]
Line_22 $$ socketBlockingQueue = httpClientSPIAgent.socketBlockingQueue-->Line_36 $$ socketBlockingQueue = httpClientSPIAgent.socketBlockingQueue[ FD ]
Line_13 $$ Queue<Socket> socketBlockingQueue = httpClientSPIAgent.socketBlockingQueue-->Line_36 $$ socketBlockingQueue = httpClientSPIAgent.socketBlockingQueue[ FD ]
Line_23 $$ socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_25 $$ socketBlockingQueue.add(socket)[ FD ]
Line_7 $$ ServerSocketChannel serverSocketChannel = SocketUtil.createServerSocketChannel(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort(), null)-->Line_9 $$ try (ServerSocket serverSocket = serverSocketChannel.socket()) [ FD ]
Line_13 $$ Queue<Socket> socketBlockingQueue = httpClientSPIAgent.socketBlockingQueue-->Line_14 $$ socketBlockingQueue.add(socket)[ FD ]
Line_31 $$ Throwable throwable = logRecord.getThrown()-->Line_32 $$ Assert.assertSame(IOException.class, throwable.getClass())[ FD ]
Line_13 $$ Queue<Socket> socketBlockingQueue = httpClientSPIAgent.socketBlockingQueue-->Line_25 $$ socketBlockingQueue.add(socket)[ FD ]
Line_10 $$ Socket socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_27 $$ swapSocketImpl(socket, socketImpl)[ FD ]
Line_22 $$ socketBlockingQueue = httpClientSPIAgent.socketBlockingQueue-->Line_25 $$ socketBlockingQueue.add(socket)[ FD ]
Line_10 $$ Socket socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_37 $$ socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())[ FD ]
Line_11 $$ SocketImpl socketImpl = swapSocketImpl(socket, null)-->Line_16 $$ swapSocketImpl(socket, socketImpl)[ FD ]
Line_11 $$ SocketImpl socketImpl = swapSocketImpl(socket, null)-->Line_24 $$ socketImpl = swapSocketImpl(socket, null)[ FD ]
Line_10 $$ Socket socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_40 $$ closePeers(socket, serverSocket)[ FD ]
Line_9 $$ try (ServerSocket serverSocket = serverSocketChannel.socket()) -->Line_40 $$ closePeers(socket, serverSocket)[ FD ]
Line_13 $$ Queue<Socket> socketBlockingQueue = httpClientSPIAgent.socketBlockingQueue-->Line_22 $$ socketBlockingQueue = httpClientSPIAgent.socketBlockingQueue[ FD ]
Line_9 $$ try (ServerSocket serverSocket = serverSocketChannel.socket()) -->Line_28 $$ closePeers(socket, serverSocket)[ FD ]
Line_9 $$ try (ServerSocket serverSocket = serverSocketChannel.socket()) -->Line_17 $$ closePeers(socket, serverSocket)[ FD ]
Line_10 $$ Socket socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_24 $$ socketImpl = swapSocketImpl(socket, null)[ FD ]
Line_21 $$ httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))-->Line_35 $$ httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))[ FD ]
Line_10 $$ Socket socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_25 $$ socketBlockingQueue.add(socket)[ FD ]
Line_10 $$ Socket socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_28 $$ closePeers(socket, serverSocket)[ FD ]
Line_22 $$ socketBlockingQueue = httpClientSPIAgent.socketBlockingQueue-->Line_38 $$ socketBlockingQueue.add(socket)[ FD ]
Line_30 $$ LogRecord logRecord = logRecords.get(0)-->Line_31 $$ Throwable throwable = logRecord.getThrown()[ FD ]
Line_12 $$ HttpClientSPIAgent httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))-->Line_21 $$ httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))[ FD ]
Line_37 $$ socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_40 $$ closePeers(socket, serverSocket)[ FD ]
Line_23 $$ socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_28 $$ closePeers(socket, serverSocket)[ FD ]
Line_36 $$ socketBlockingQueue = httpClientSPIAgent.socketBlockingQueue-->Line_38 $$ socketBlockingQueue.add(socket)[ FD ]
Line_10 $$ Socket socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_17 $$ closePeers(socket, serverSocket)[ FD ]
Line_21 $$ httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))-->Line_39 $$ httpClientSPIAgent.destroy()[ FD ]
Line_12 $$ HttpClientSPIAgent httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))-->Line_35 $$ httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))[ FD ]
Line_35 $$ httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))-->Line_39 $$ httpClientSPIAgent.destroy()[ FD ]
Line_23 $$ socket = new Socket(InetAddressUtil.getLoopbackInetAddress(), _spiConfiguration.getConnectorPort())-->Line_24 $$ socketImpl = swapSocketImpl(socket, null)[ FD ]
Line_21 $$ httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))-->Line_26 $$ httpClientSPIAgent.destroy()[ FD ]
