Line_29 $$ if (element instanceof ItemElement) -->Line_30 $$ ItemElement itemElement = (ItemElement) element[ CD ]
Line_18 $$ if (element instanceof OrderRootTypeElement) -->Line_19 $$ OrderRootTypeElement rootTypeElement = (OrderRootTypeElement) element[ CD ]
Line_31 $$ List<String> excludedUrls = new ArrayList<String>()-->Line_37 $$ ExcludedRootElement[] items = new ExcludedRootElement[excludedUrls.size()][ FD ]
Line_4 $$ if (element == myRootElementDescriptor) -->Line_16 $$ return elements.toArray()[ CD ]
Line_6 $$ for (OrderRootType type : myComponentDescriptor.getRootTypes()) -->Line_7 $$ final String[] urls = libraryEditor.getUrls(type)[ FD ]
Line_31 $$ List<String> excludedUrls = new ArrayList<String>()-->Line_39 $$ for (int i = 0; i < excludedUrls.size(); i++) [ FD ]
Line_39 $$ for (int i = 0; i < excludedUrls.size(); i++) -->Line_40 $$ items[i] = new ExcludedRootElement(itemElement, itemElement.getUrl(), excludedUrls.get(i))[ CD ]
Line_30 $$ ItemElement itemElement = (ItemElement) element-->Line_33 $$ if (VfsUtilCore.isEqualOrAncestor(itemElement.getUrl(), excludedUrl)) [ FD ]
Line_2 $$ public Object[] getChildElements(Object element) -->Line_4 $$ if (element == myRootElementDescriptor) [ CD ]
Line_18 $$ if (element instanceof OrderRootTypeElement) -->Line_21 $$ ArrayList<ItemElement> items = new ArrayList<ItemElement>()[ CD ]
Line_18 $$ if (element instanceof OrderRootTypeElement) -->Line_22 $$ final String[] urls = libraryEditor.getUrls(orderRootType).clone()[ CD ]
Line_2 $$ public Object[] getChildElements(Object element) -->Line_18 $$ if (element instanceof OrderRootTypeElement) [ FD ]
Line_7 $$ final String[] urls = libraryEditor.getUrls(type)-->Line_23 $$ Arrays.sort(urls, LibraryRootsComponent.ourUrlComparator)[ FD ]
Line_9 $$ OrderRootTypePresentation presentation = myComponentDescriptor.getRootTypePresentation(type)-->Line_11 $$ presentation = DefaultLibraryRootsComponentDescriptor.getDefaultPresentation(type)[ FD ]
Line_3 $$ final LibraryEditor libraryEditor = myParentEditor.getLibraryEditor()-->Line_32 $$ for (String excludedUrl : libraryEditor.getExcludedRootUrls()) [ FD ]
Line_5 $$ ArrayList<LibraryTableTreeContentElement> elements = new ArrayList<LibraryTableTreeContentElement>(3)-->Line_13 $$ elements.add(new OrderRootTypeElement(myRootElementDescriptor, type, presentation.getNodeText(), presentation.getIcon()))[ FD ]
Line_3 $$ final LibraryEditor libraryEditor = myParentEditor.getLibraryEditor()-->Line_25 $$ items.add(new ItemElement(rootTypeElement, url, orderRootType, libraryEditor.isJarDirectory(url, orderRootType), libraryEditor.isValid(url, orderRootType)))[ FD ]
Line_3 $$ final LibraryEditor libraryEditor = myParentEditor.getLibraryEditor()-->Line_7 $$ final String[] urls = libraryEditor.getUrls(type)[ FD ]
Line_9 $$ OrderRootTypePresentation presentation = myComponentDescriptor.getRootTypePresentation(type)-->Line_13 $$ elements.add(new OrderRootTypeElement(myRootElementDescriptor, type, presentation.getNodeText(), presentation.getIcon()))[ FD ]
Line_32 $$ for (String excludedUrl : libraryEditor.getExcludedRootUrls()) -->Line_34 $$ excludedUrls.add(excludedUrl)[ FD ]
Line_8 $$ if (urls.length > 0) -->Line_9 $$ OrderRootTypePresentation presentation = myComponentDescriptor.getRootTypePresentation(type)[ CD ]
Line_18 $$ if (element instanceof OrderRootTypeElement) -->Line_23 $$ Arrays.sort(urls, LibraryRootsComponent.ourUrlComparator)[ CD ]
Line_31 $$ List<String> excludedUrls = new ArrayList<String>()-->Line_40 $$ items[i] = new ExcludedRootElement(itemElement, itemElement.getUrl(), excludedUrls.get(i))[ FD ]
Line_31 $$ List<String> excludedUrls = new ArrayList<String>()-->Line_34 $$ excludedUrls.add(excludedUrl)[ FD ]
Line_2 $$ public Object[] getChildElements(Object element) -->Line_18 $$ if (element instanceof OrderRootTypeElement) [ CD ]
Line_9 $$ OrderRootTypePresentation presentation = myComponentDescriptor.getRootTypePresentation(type)-->Line_10 $$ if (presentation == null) [ FD ]
Line_31 $$ List<String> excludedUrls = new ArrayList<String>()-->Line_38 $$ Collections.sort(excludedUrls, LibraryRootsComponent.ourUrlComparator)[ FD ]
Line_2 $$ public Object[] getChildElements(Object element) -->Line_29 $$ if (element instanceof ItemElement) [ CD ]
Line_6 $$ for (OrderRootType type : myComponentDescriptor.getRootTypes()) -->Line_11 $$ presentation = DefaultLibraryRootsComponentDescriptor.getDefaultPresentation(type)[ FD ]
Line_39 $$ for (int i = 0; i < excludedUrls.size(); i++) -->Line_40 $$ items[i] = new ExcludedRootElement(itemElement, itemElement.getUrl(), excludedUrls.get(i))[ FD ]
Line_32 $$ for (String excludedUrl : libraryEditor.getExcludedRootUrls()) -->Line_33 $$ if (VfsUtilCore.isEqualOrAncestor(itemElement.getUrl(), excludedUrl)) [ FD ]
Line_4 $$ if (element == myRootElementDescriptor) -->Line_5 $$ ArrayList<LibraryTableTreeContentElement> elements = new ArrayList<LibraryTableTreeContentElement>(3)[ CD ]
Line_29 $$ if (element instanceof ItemElement) -->Line_38 $$ Collections.sort(excludedUrls, LibraryRootsComponent.ourUrlComparator)[ CD ]
Line_29 $$ if (element instanceof ItemElement) -->Line_39 $$ for (int i = 0; i < excludedUrls.size(); i++) [ CD ]
Line_10 $$ if (presentation == null) -->Line_11 $$ presentation = DefaultLibraryRootsComponentDescriptor.getDefaultPresentation(type)[ CD ]
Line_8 $$ if (urls.length > 0) -->Line_13 $$ elements.add(new OrderRootTypeElement(myRootElementDescriptor, type, presentation.getNodeText(), presentation.getIcon()))[ CD ]
Line_20 $$ OrderRootType orderRootType = rootTypeElement.getOrderRootType()-->Line_25 $$ items.add(new ItemElement(rootTypeElement, url, orderRootType, libraryEditor.isJarDirectory(url, orderRootType), libraryEditor.isValid(url, orderRootType)))[ FD ]
Line_30 $$ ItemElement itemElement = (ItemElement) element-->Line_40 $$ items[i] = new ExcludedRootElement(itemElement, itemElement.getUrl(), excludedUrls.get(i))[ FD ]
Line_19 $$ OrderRootTypeElement rootTypeElement = (OrderRootTypeElement) element-->Line_20 $$ OrderRootType orderRootType = rootTypeElement.getOrderRootType()[ FD ]
Line_2 $$ public Object[] getChildElements(Object element) -->Line_4 $$ if (element == myRootElementDescriptor) [ FD ]
Line_11 $$ presentation = DefaultLibraryRootsComponentDescriptor.getDefaultPresentation(type)-->Line_13 $$ elements.add(new OrderRootTypeElement(myRootElementDescriptor, type, presentation.getNodeText(), presentation.getIcon()))[ FD ]
Line_33 $$ if (VfsUtilCore.isEqualOrAncestor(itemElement.getUrl(), excludedUrl)) -->Line_34 $$ excludedUrls.add(excludedUrl)[ CD ]
Line_6 $$ for (OrderRootType type : myComponentDescriptor.getRootTypes()) -->Line_9 $$ OrderRootTypePresentation presentation = myComponentDescriptor.getRootTypePresentation(type)[ FD ]
Line_18 $$ if (element instanceof OrderRootTypeElement) -->Line_20 $$ OrderRootType orderRootType = rootTypeElement.getOrderRootType()[ CD ]
Line_5 $$ ArrayList<LibraryTableTreeContentElement> elements = new ArrayList<LibraryTableTreeContentElement>(3)-->Line_16 $$ return elements.toArray()[ FD ]
Line_24 $$ for (String url : urls) -->Line_25 $$ items.add(new ItemElement(rootTypeElement, url, orderRootType, libraryEditor.isJarDirectory(url, orderRootType), libraryEditor.isValid(url, orderRootType)))[ FD ]
Line_2 $$ public Object[] getChildElements(Object element) -->Line_29 $$ if (element instanceof ItemElement) [ FD ]
Line_20 $$ OrderRootType orderRootType = rootTypeElement.getOrderRootType()-->Line_22 $$ final String[] urls = libraryEditor.getUrls(orderRootType).clone()[ FD ]
Line_2 $$ public Object[] getChildElements(Object element) -->Line_44 $$ return ArrayUtil.EMPTY_OBJECT_ARRAY[ CD ]
Line_3 $$ final LibraryEditor libraryEditor = myParentEditor.getLibraryEditor()-->Line_22 $$ final String[] urls = libraryEditor.getUrls(orderRootType).clone()[ FD ]
Line_8 $$ if (urls.length > 0) -->Line_10 $$ if (presentation == null) [ CD ]
Line_18 $$ if (element instanceof OrderRootTypeElement) -->Line_27 $$ return items.toArray()[ CD ]
Line_21 $$ ArrayList<ItemElement> items = new ArrayList<ItemElement>()-->Line_27 $$ return items.toArray()[ FD ]
Line_2 $$ public Object[] getChildElements(Object element) -->Line_3 $$ final LibraryEditor libraryEditor = myParentEditor.getLibraryEditor()[ CD ]
Line_21 $$ ArrayList<ItemElement> items = new ArrayList<ItemElement>()-->Line_25 $$ items.add(new ItemElement(rootTypeElement, url, orderRootType, libraryEditor.isJarDirectory(url, orderRootType), libraryEditor.isValid(url, orderRootType)))[ FD ]
Line_29 $$ if (element instanceof ItemElement) -->Line_31 $$ List<String> excludedUrls = new ArrayList<String>()[ CD ]
Line_29 $$ if (element instanceof ItemElement) -->Line_42 $$ return items[ CD ]
