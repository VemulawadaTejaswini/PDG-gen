Line_4 $$ List<String> result = expressionResolver.resolve(context, indexExpressions)-->Line_7 $$ assertThat(result.get(1), equalTo(".watch_history-" + DateTimeFormat.forPattern("YYYY.MM.dd").print(new DateTime(context.getStartTime(), UTC))))[ FD ]
Line_4 $$ List<String> result = expressionResolver.resolve(context, indexExpressions)-->Line_6 $$ assertThat(result.get(0), equalTo(".marvel-" + DateTimeFormat.forPattern("YYYY.MM.dd").print(new DateTime(context.getStartTime(), UTC))))[ FD ]
Line_4 $$ List<String> result = expressionResolver.resolve(context, indexExpressions)-->Line_8 $$ assertThat(result.get(2), equalTo("logstash-" + DateTimeFormat.forPattern("YYYY.MM.dd").print(new DateTime(context.getStartTime(), UTC))))[ FD ]
Line_2 $$ public void testExpression() throws Exception -->Line_6 $$ assertThat(result.get(0), equalTo(".marvel-" + DateTimeFormat.forPattern("YYYY.MM.dd").print(new DateTime(context.getStartTime(), UTC))))[ CD ]
Line_3 $$ List<String> indexExpressions = Arrays.asList("<.marvel--->Line_4 $$ List<String> result = expressionResolver.resolve(context, indexExpressions)[ FD ]
Line_4 $$ List<String> result = expressionResolver.resolve(context, indexExpressions)-->Line_5 $$ assertThat(result.size(), equalTo(3))[ FD ]
Line_2 $$ public void testExpression() throws Exception -->Line_5 $$ assertThat(result.size(), equalTo(3))[ CD ]
Line_2 $$ public void testExpression() throws Exception -->Line_4 $$ List<String> result = expressionResolver.resolve(context, indexExpressions)[ CD ]
Line_2 $$ public void testExpression() throws Exception -->Line_8 $$ assertThat(result.get(2), equalTo("logstash-" + DateTimeFormat.forPattern("YYYY.MM.dd").print(new DateTime(context.getStartTime(), UTC))))[ CD ]
Line_2 $$ public void testExpression() throws Exception -->Line_3 $$ List<String> indexExpressions = Arrays.asList("<.marvel-[ CD ]
Line_2 $$ public void testExpression() throws Exception -->Line_7 $$ assertThat(result.get(1), equalTo(".watch_history-" + DateTimeFormat.forPattern("YYYY.MM.dd").print(new DateTime(context.getStartTime(), UTC))))[ CD ]
