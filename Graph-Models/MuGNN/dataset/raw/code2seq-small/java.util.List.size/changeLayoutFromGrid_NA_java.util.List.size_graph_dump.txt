Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_10 $$ rowSpecs[i * 2] = canRowsGrow.get(i).booleanValue() ? new RowSpec(ENCODED_FORMSPEC_GROW) : new RowSpec(DEFAULT_NOGROW_SIZE)[ FD ]
Line_11 $$ if (i * 2 + 1 < rowSpecs.length) -->Line_12 $$ rowSpecs[i * 2 + 1] = FormFactory.RELATED_GAP_ROWSPEC[ CD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_16 $$ colSpecs[i * 2] = canColumnsGrow.get(i).booleanValue() ? new ColumnSpec(ENCODED_FORMSPEC_GROW) : new ColumnSpec(DEFAULT_NOGROW_SIZE)[ FD ]
Line_15 $$ for (int i = 0; i < columnCount; i++) -->Line_16 $$ colSpecs[i * 2] = canColumnsGrow.get(i).booleanValue() ? new ColumnSpec(ENCODED_FORMSPEC_GROW) : new ColumnSpec(DEFAULT_NOGROW_SIZE)[ CD ]
Line_2 $$ protected void changeLayoutFromGrid(final RadContainer container, final List<RadComponent> contents, final List<Boolean> canRowsGrow, final List<Boolean> canColumnsGrow) -->Line_3 $$ int rowCount = canRowsGrow.size()[ CD ]
Line_2 $$ protected void changeLayoutFromGrid(final RadContainer container, final List<RadComponent> contents, final List<Boolean> canRowsGrow, final List<Boolean> canColumnsGrow) -->Line_3 $$ int rowCount = canRowsGrow.size()[ FD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_11 $$ if (i * 2 + 1 < rowSpecs.length) [ CD ]
Line_2 $$ protected void changeLayoutFromGrid(final RadContainer container, final List<RadComponent> contents, final List<Boolean> canRowsGrow, final List<Boolean> canColumnsGrow) -->Line_16 $$ colSpecs[i * 2] = canColumnsGrow.get(i).booleanValue() ? new ColumnSpec(ENCODED_FORMSPEC_GROW) : new ColumnSpec(DEFAULT_NOGROW_SIZE)[ FD ]
Line_2 $$ protected void changeLayoutFromGrid(final RadContainer container, final List<RadComponent> contents, final List<Boolean> canRowsGrow, final List<Boolean> canColumnsGrow) -->Line_6 $$ int columnCountWithGaps = (columnCount == 0) ? 0 : columnCount * 2 - 1[ CD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_10 $$ rowSpecs[i * 2] = canRowsGrow.get(i).booleanValue() ? new RowSpec(ENCODED_FORMSPEC_GROW) : new RowSpec(DEFAULT_NOGROW_SIZE)[ CD ]
Line_2 $$ protected void changeLayoutFromGrid(final RadContainer container, final List<RadComponent> contents, final List<Boolean> canRowsGrow, final List<Boolean> canColumnsGrow) -->Line_9 $$ for (int i = 0; i < rowCount; i++) [ CD ]
Line_2 $$ protected void changeLayoutFromGrid(final RadContainer container, final List<RadComponent> contents, final List<Boolean> canRowsGrow, final List<Boolean> canColumnsGrow) -->Line_4 $$ int columnCount = canColumnsGrow.size()[ FD ]
Line_17 $$ if (i * 2 + 1 < colSpecs.length) -->Line_18 $$ colSpecs[i * 2 + 1] = FormFactory.RELATED_GAP_COLSPEC[ CD ]
Line_2 $$ protected void changeLayoutFromGrid(final RadContainer container, final List<RadComponent> contents, final List<Boolean> canRowsGrow, final List<Boolean> canColumnsGrow) -->Line_4 $$ int columnCount = canColumnsGrow.size()[ CD ]
Line_2 $$ protected void changeLayoutFromGrid(final RadContainer container, final List<RadComponent> contents, final List<Boolean> canRowsGrow, final List<Boolean> canColumnsGrow) -->Line_10 $$ rowSpecs[i * 2] = canRowsGrow.get(i).booleanValue() ? new RowSpec(ENCODED_FORMSPEC_GROW) : new RowSpec(DEFAULT_NOGROW_SIZE)[ FD ]
Line_3 $$ int rowCount = canRowsGrow.size()-->Line_9 $$ for (int i = 0; i < rowCount; i++) [ FD ]
Line_2 $$ protected void changeLayoutFromGrid(final RadContainer container, final List<RadComponent> contents, final List<Boolean> canRowsGrow, final List<Boolean> canColumnsGrow) -->Line_21 $$ container.setLayoutManager(this, new FormLayout(colSpecs, rowSpecs))[ FD ]
Line_2 $$ protected void changeLayoutFromGrid(final RadContainer container, final List<RadComponent> contents, final List<Boolean> canRowsGrow, final List<Boolean> canColumnsGrow) -->Line_7 $$ RowSpec[] rowSpecs = new RowSpec[rowCountWithGaps][ CD ]
Line_2 $$ protected void changeLayoutFromGrid(final RadContainer container, final List<RadComponent> contents, final List<Boolean> canRowsGrow, final List<Boolean> canColumnsGrow) -->Line_8 $$ ColumnSpec[] colSpecs = new ColumnSpec[columnCountWithGaps][ CD ]
Line_15 $$ for (int i = 0; i < columnCount; i++) -->Line_17 $$ if (i * 2 + 1 < colSpecs.length) [ CD ]
Line_2 $$ protected void changeLayoutFromGrid(final RadContainer container, final List<RadComponent> contents, final List<Boolean> canRowsGrow, final List<Boolean> canColumnsGrow) -->Line_21 $$ container.setLayoutManager(this, new FormLayout(colSpecs, rowSpecs))[ CD ]
Line_15 $$ for (int i = 0; i < columnCount; i++) -->Line_16 $$ colSpecs[i * 2] = canColumnsGrow.get(i).booleanValue() ? new ColumnSpec(ENCODED_FORMSPEC_GROW) : new ColumnSpec(DEFAULT_NOGROW_SIZE)[ FD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_15 $$ for (int i = 0; i < columnCount; i++) [ FD ]
Line_4 $$ int columnCount = canColumnsGrow.size()-->Line_15 $$ for (int i = 0; i < columnCount; i++) [ FD ]
Line_2 $$ protected void changeLayoutFromGrid(final RadContainer container, final List<RadComponent> contents, final List<Boolean> canRowsGrow, final List<Boolean> canColumnsGrow) -->Line_15 $$ for (int i = 0; i < columnCount; i++) [ CD ]
Line_2 $$ protected void changeLayoutFromGrid(final RadContainer container, final List<RadComponent> contents, final List<Boolean> canRowsGrow, final List<Boolean> canColumnsGrow) -->Line_5 $$ int rowCountWithGaps = (rowCount == 0) ? 0 : rowCount * 2 - 1[ CD ]
