Line_18 $$ if (methodCallInfo.size() >= 3) -->Line_20 $$ GradleImplicitContributor.processImplicitDeclarations(processor, state, place)[ CD ]
Line_10 $$ if (methodCallInfo.size() == 2) -->Line_18 $$ if (methodCallInfo.size() >= 3) [ CD ]
Line_18 $$ if (methodCallInfo.size() >= 3) -->Line_24 $$ if (place.getText().equals(GradleDistributionsContributor.DISTRIBUTIONS) && StringUtil.startsWith(methodCallInfo.get(0), GradleDistributionsContributor.DISTRIBUTIONS + '.')) [ CD ]
Line_21 $$ if (place.getText().equals(GradleSourceSetsContributor.SOURCE_SETS) && StringUtil.startsWith(methodCallInfo.get(0), GradleSourceSetsContributor.SOURCE_SETS + '.')) -->Line_22 $$ GradleResolverUtil.addImplicitVariable(processor, state, place, GradleCommonClassNames.GRADLE_API_SOURCE_SET_CONTAINER)[ CD ]
Line_7 $$ if (GradleResolverUtil.isLShiftElement(place.getParent())) -->Line_8 $$ GradleResolverUtil.addImplicitVariable(processor, state, place, GradleCommonClassNames.GRADLE_API_TASK)[ CD ]
Line_10 $$ if (methodCallInfo.size() == 2) -->Line_17 $$ GradleImplicitContributor.processImplicitDeclarations(processor, state, place)[ CD ]
Line_18 $$ if (methodCallInfo.size() >= 3) -->Line_21 $$ if (place.getText().equals(GradleSourceSetsContributor.SOURCE_SETS) && StringUtil.startsWith(methodCallInfo.get(0), GradleSourceSetsContributor.SOURCE_SETS + '.')) [ CD ]
Line_11 $$ if (place.getParent().getParent() instanceof GrCommandArgumentList) -->Line_15 $$ processTaskTypeParameter(methodCallInfo.get(0), processor, state, place)[ CD ]
Line_10 $$ if (methodCallInfo.size() == 2) -->Line_11 $$ if (place.getParent().getParent() instanceof GrCommandArgumentList) [ CD ]
Line_4 $$ if (methodCallInfo.isEmpty())-->Line_5 $$ return[ CD ]
Line_6 $$ if (methodCallInfo.size() == 1) -->Line_10 $$ if (methodCallInfo.size() == 2) [ CD ]
Line_18 $$ if (methodCallInfo.size() >= 3) -->Line_19 $$ processTaskTypeParameter(methodCallInfo.get(0), processor, state, place)[ CD ]
Line_24 $$ if (place.getText().equals(GradleDistributionsContributor.DISTRIBUTIONS) && StringUtil.startsWith(methodCallInfo.get(0), GradleDistributionsContributor.DISTRIBUTIONS + '.')) -->Line_25 $$ GradleResolverUtil.addImplicitVariable(processor, state, place, GradleCommonClassNames.GRADLE_API_DISTRIBUTION_CONTAINER)[ CD ]
Line_6 $$ if (methodCallInfo.size() == 1) -->Line_7 $$ if (GradleResolverUtil.isLShiftElement(place.getParent())) [ CD ]
