Line_4 $$ Session s = openSession()-->Line_30 $$ s.getTransaction().commit()[ FD ]
Line_23 $$ if (order3.getOrderId() == o.getOrderId()) -->Line_24 $$ assertEquals(order3.getLines().size(), o.getLines().size())[ CD ]
Line_20 $$ if (order1.getOrderId() == o.getOrderId()) -->Line_22 $$ assertEquals("3000", ol.getArticleId())[ CD ]
Line_4 $$ Session s = openSession()-->Line_6 $$ Criteria rootCriteria = s.createCriteria(Order.class, "o")[ FD ]
Line_15 $$ for (Iterator it = orders.iterator(); it.hasNext(); ) -->Line_16 $$ Map map = (Map) it.next()[ FD ]
Line_15 $$ for (Iterator it = orders.iterator(); it.hasNext(); ) -->Line_17 $$ Order o = (Order) map.get("o")[ CD ]
Line_17 $$ Order o = (Order) map.get("o")-->Line_23 $$ if (order3.getOrderId() == o.getOrderId()) [ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ s.getTransaction().begin()[ FD ]
Line_23 $$ if (order3.getOrderId() == o.getOrderId()) -->Line_25 $$ assertEquals("3000", ol.getArticleId())[ CD ]
Line_15 $$ for (Iterator it = orders.iterator(); it.hasNext(); ) -->Line_16 $$ Map map = (Map) it.next()[ CD ]
Line_4 $$ Session s = openSession()-->Line_31 $$ s.close()[ FD ]
Line_20 $$ if (order1.getOrderId() == o.getOrderId()) -->Line_21 $$ assertEquals(order1.getLines().size(), o.getLines().size())[ CD ]
Line_6 $$ Criteria rootCriteria = s.createCriteria(Order.class, "o")-->Line_11 $$ List orders = rootCriteria.setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).list()[ FD ]
Line_17 $$ Order o = (Order) map.get("o")-->Line_20 $$ if (order1.getOrderId() == o.getOrderId()) [ FD ]
Line_11 $$ List orders = rootCriteria.setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).list()-->Line_15 $$ for (Iterator it = orders.iterator(); it.hasNext(); ) [ FD ]
Line_7 $$ Criteria subCriteria = rootCriteria.createCriteria("orderLines", "ol", JoinFragment.LEFT_OUTER_JOIN)-->Line_8 $$ assertNotSame(rootCriteria, subCriteria)[ FD ]
Line_20 $$ if (order1.getOrderId() == o.getOrderId()) -->Line_23 $$ if (order3.getOrderId() == o.getOrderId()) [ CD ]
Line_6 $$ Criteria rootCriteria = s.createCriteria(Order.class, "o")-->Line_7 $$ Criteria subCriteria = rootCriteria.createCriteria("orderLines", "ol", JoinFragment.LEFT_OUTER_JOIN)[ FD ]
Line_6 $$ Criteria rootCriteria = s.createCriteria(Order.class, "o")-->Line_8 $$ assertNotSame(rootCriteria, subCriteria)[ FD ]
Line_23 $$ if (order3.getOrderId() == o.getOrderId()) -->Line_27 $$ fail("unknown order")[ CD ]
Line_17 $$ Order o = (Order) map.get("o")-->Line_21 $$ assertEquals(order1.getLines().size(), o.getLines().size())[ FD ]
Line_15 $$ for (Iterator it = orders.iterator(); it.hasNext(); ) -->Line_20 $$ if (order1.getOrderId() == o.getOrderId()) [ CD ]
Line_16 $$ Map map = (Map) it.next()-->Line_17 $$ Order o = (Order) map.get("o")[ FD ]
Line_17 $$ Order o = (Order) map.get("o")-->Line_24 $$ assertEquals(order3.getLines().size(), o.getLines().size())[ FD ]
