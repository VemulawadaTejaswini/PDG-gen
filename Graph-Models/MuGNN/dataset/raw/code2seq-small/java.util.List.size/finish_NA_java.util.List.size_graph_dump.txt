Line_9 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ sb.append(values.get(i))[ FD ]
Line_9 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ sb.append("\n")[ FD ]
Line_6 $$ for (int indent : indents.getValues()) -->Line_7 $$ minIndent = Math.min(minIndent, indent)[ FD ]
Line_10 $$ for (int i = 0; i < values.size(); i++) -->Line_18 $$ sb.append(values.get(i))[ CD ]
Line_10 $$ for (int i = 0; i < values.size(); i++) -->Line_14 $$ int indent = indents.get(i)[ FD ]
Line_4 $$ if (processed && !values.contains(null) && !project.isDisposed()) -->Line_20 $$ handleInCollector(project, sb.toString(), myTree)[ CD ]
Line_2 $$ public void finish() -->Line_4 $$ if (processed && !values.contains(null) && !project.isDisposed()) [ CD ]
Line_5 $$ int minIndent = Integer.MAX_VALUE-->Line_7 $$ minIndent = Math.min(minIndent, indent)[ FD ]
Line_9 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ StringUtil.repeatSymbol(sb, ' ', indent - minIndent)[ FD ]
Line_2 $$ public void finish() -->Line_3 $$ Project project = myTree.getProject()[ CD ]
Line_10 $$ for (int i = 0; i < values.size(); i++) -->Line_18 $$ sb.append(values.get(i))[ FD ]
Line_14 $$ int indent = indents.get(i)-->Line_15 $$ if (indent > 0) [ FD ]
Line_9 $$ StringBuilder sb = new StringBuilder()-->Line_20 $$ handleInCollector(project, sb.toString(), myTree)[ FD ]
Line_4 $$ if (processed && !values.contains(null) && !project.isDisposed()) -->Line_9 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_10 $$ for (int i = 0; i < values.size(); i++) -->Line_11 $$ if (i > 0) [ FD ]
Line_11 $$ if (i > 0) -->Line_12 $$ sb.append("\n")[ CD ]
Line_10 $$ for (int i = 0; i < values.size(); i++) -->Line_11 $$ if (i > 0) [ CD ]
Line_4 $$ if (processed && !values.contains(null) && !project.isDisposed()) -->Line_5 $$ int minIndent = Integer.MAX_VALUE[ CD ]
Line_10 $$ for (int i = 0; i < values.size(); i++) -->Line_14 $$ int indent = indents.get(i)[ CD ]
Line_15 $$ if (indent > 0) -->Line_16 $$ StringUtil.repeatSymbol(sb, ' ', indent - minIndent)[ CD ]
Line_3 $$ Project project = myTree.getProject()-->Line_20 $$ handleInCollector(project, sb.toString(), myTree)[ FD ]
Line_4 $$ if (processed && !values.contains(null) && !project.isDisposed()) -->Line_10 $$ for (int i = 0; i < values.size(); i++) [ CD ]
Line_6 $$ for (int indent : indents.getValues()) -->Line_15 $$ if (indent > 0) [ FD ]
Line_3 $$ Project project = myTree.getProject()-->Line_4 $$ if (processed && !values.contains(null) && !project.isDisposed()) [ FD ]
Line_10 $$ for (int i = 0; i < values.size(); i++) -->Line_15 $$ if (indent > 0) [ CD ]
