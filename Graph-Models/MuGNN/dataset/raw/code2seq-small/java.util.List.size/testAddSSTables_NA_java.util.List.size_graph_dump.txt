Line_2 $$ public void testAddSSTables() -->Line_5 $$ ColumnFamilyStore cfs = MockSchema.newCFS()[ CD ]
Line_7 $$ MockListener listener = new MockListener(false)-->Line_8 $$ tracker.subscribe(listener)[ FD ]
Line_2 $$ public void testAddSSTables() -->Line_17 $$ DatabaseDescriptor.setIncrementalBackupsEnabled(backups)[ CD ]
Line_2 $$ public void testAddSSTables() -->Line_13 $$ Assert.assertEquals(17 + 121 + 9, cfs.metric.liveDiskSpaceUsed.getCount())[ CD ]
Line_2 $$ public void testAddSSTables() -->Line_6 $$ Tracker tracker = new Tracker(cfs, false)[ CD ]
Line_6 $$ Tracker tracker = new Tracker(cfs, false)-->Line_8 $$ tracker.subscribe(listener)[ FD ]
Line_2 $$ public void testAddSSTables() -->Line_10 $$ tracker.addSSTables(copyOf(readers))[ CD ]
Line_2 $$ public void testAddSSTables() -->Line_14 $$ Assert.assertEquals(1, listener.senders.size())[ CD ]
Line_2 $$ public void testAddSSTables() -->Line_8 $$ tracker.subscribe(listener)[ CD ]
Line_2 $$ public void testAddSSTables() -->Line_11 $$ Assert.assertEquals(3, tracker.view.get().sstables.size())[ CD ]
Line_2 $$ public void testAddSSTables() -->Line_15 $$ Assert.assertEquals(tracker, listener.senders.get(0))[ CD ]
Line_2 $$ public void testAddSSTables() -->Line_16 $$ Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification)[ CD ]
Line_6 $$ Tracker tracker = new Tracker(cfs, false)-->Line_15 $$ Assert.assertEquals(tracker, listener.senders.get(0))[ FD ]
Line_2 $$ public void testAddSSTables() -->Line_3 $$ boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled()[ CD ]
Line_2 $$ public void testAddSSTables() -->Line_9 $$ List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs), MockSchema.sstable(1, 121, cfs), MockSchema.sstable(2, 9, cfs))[ CD ]
Line_6 $$ Tracker tracker = new Tracker(cfs, false)-->Line_10 $$ tracker.addSSTables(copyOf(readers))[ FD ]
Line_2 $$ public void testAddSSTables() -->Line_7 $$ MockListener listener = new MockListener(false)[ CD ]
Line_5 $$ ColumnFamilyStore cfs = MockSchema.newCFS()-->Line_9 $$ List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs), MockSchema.sstable(1, 121, cfs), MockSchema.sstable(2, 9, cfs))[ FD ]
Line_2 $$ public void testAddSSTables() -->Line_4 $$ DatabaseDescriptor.setIncrementalBackupsEnabled(false)[ CD ]
Line_9 $$ List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0, 17, cfs), MockSchema.sstable(1, 121, cfs), MockSchema.sstable(2, 9, cfs))-->Line_10 $$ tracker.addSSTables(copyOf(readers))[ FD ]
Line_3 $$ boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled()-->Line_17 $$ DatabaseDescriptor.setIncrementalBackupsEnabled(backups)[ FD ]
