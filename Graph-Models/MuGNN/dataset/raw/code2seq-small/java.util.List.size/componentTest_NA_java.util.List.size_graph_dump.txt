Line_9 $$ Componentizable co = (Componentizable) list.get(0)-->Line_13 $$ session.delete(co)[ FD ]
Line_2 $$ private void componentTest(String sql) throws SQLException -->Line_7 $$ List list = q.list()[ CD ]
Line_4 $$ Session session = openSession()-->Line_14 $$ session.getTransaction().commit()[ FD ]
Line_3 $$ Componentizable c = setupComponentData()-->Line_10 $$ assertEquals(c.getNickName(), co.getNickName())[ FD ]
Line_3 $$ Componentizable c = setupComponentData()-->Line_12 $$ assertEquals(c.getComponent().getSubComponent().getSubName(), co.getComponent().getSubComponent().getSubName())[ FD ]
Line_6 $$ SQLQuery q = session.createSQLQuery(sql).addEntity("comp", Componentizable.class)-->Line_7 $$ List list = q.list()[ FD ]
Line_2 $$ private void componentTest(String sql) throws SQLException -->Line_5 $$ session.beginTransaction()[ CD ]
Line_3 $$ Componentizable c = setupComponentData()-->Line_11 $$ assertEquals(c.getComponent().getName(), co.getComponent().getName())[ FD ]
Line_4 $$ Session session = openSession()-->Line_15 $$ session.close()[ FD ]
Line_4 $$ Session session = openSession()-->Line_13 $$ session.delete(co)[ FD ]
Line_2 $$ private void componentTest(String sql) throws SQLException -->Line_6 $$ SQLQuery q = session.createSQLQuery(sql).addEntity("comp", Componentizable.class)[ FD ]
Line_2 $$ private void componentTest(String sql) throws SQLException -->Line_4 $$ Session session = openSession()[ CD ]
Line_2 $$ private void componentTest(String sql) throws SQLException -->Line_11 $$ assertEquals(c.getComponent().getName(), co.getComponent().getName())[ CD ]
Line_2 $$ private void componentTest(String sql) throws SQLException -->Line_8 $$ assertEquals(list.size(), 1)[ CD ]
Line_2 $$ private void componentTest(String sql) throws SQLException -->Line_10 $$ assertEquals(c.getNickName(), co.getNickName())[ CD ]
Line_9 $$ Componentizable co = (Componentizable) list.get(0)-->Line_10 $$ assertEquals(c.getNickName(), co.getNickName())[ FD ]
Line_7 $$ List list = q.list()-->Line_9 $$ Componentizable co = (Componentizable) list.get(0)[ FD ]
Line_9 $$ Componentizable co = (Componentizable) list.get(0)-->Line_11 $$ assertEquals(c.getComponent().getName(), co.getComponent().getName())[ FD ]
Line_7 $$ List list = q.list()-->Line_8 $$ assertEquals(list.size(), 1)[ FD ]
Line_9 $$ Componentizable co = (Componentizable) list.get(0)-->Line_12 $$ assertEquals(c.getComponent().getSubComponent().getSubName(), co.getComponent().getSubComponent().getSubName())[ FD ]
Line_2 $$ private void componentTest(String sql) throws SQLException -->Line_13 $$ session.delete(co)[ CD ]
Line_4 $$ Session session = openSession()-->Line_5 $$ session.beginTransaction()[ FD ]
Line_2 $$ private void componentTest(String sql) throws SQLException -->Line_3 $$ Componentizable c = setupComponentData()[ CD ]
Line_2 $$ private void componentTest(String sql) throws SQLException -->Line_12 $$ assertEquals(c.getComponent().getSubComponent().getSubName(), co.getComponent().getSubComponent().getSubName())[ CD ]
Line_2 $$ private void componentTest(String sql) throws SQLException -->Line_15 $$ session.close()[ CD ]
Line_4 $$ Session session = openSession()-->Line_6 $$ SQLQuery q = session.createSQLQuery(sql).addEntity("comp", Componentizable.class)[ FD ]
Line_2 $$ private void componentTest(String sql) throws SQLException -->Line_6 $$ SQLQuery q = session.createSQLQuery(sql).addEntity("comp", Componentizable.class)[ CD ]
Line_2 $$ private void componentTest(String sql) throws SQLException -->Line_9 $$ Componentizable co = (Componentizable) list.get(0)[ CD ]
Line_2 $$ private void componentTest(String sql) throws SQLException -->Line_14 $$ session.getTransaction().commit()[ CD ]
