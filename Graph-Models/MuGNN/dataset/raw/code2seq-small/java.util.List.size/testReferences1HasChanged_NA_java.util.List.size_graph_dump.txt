Line_7 $$ list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references1")-->Line_8 $$ assertEquals(3, list.size())[ FD ]
Line_4 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references1")-->Line_5 $$ assertEquals(3, list.size())[ FD ]
Line_4 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references1")-->Line_8 $$ assertEquals(3, list.size())[ FD ]
Line_4 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references1")-->Line_13 $$ assertEquals(0, list.size())[ FD ]
Line_4 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references1")-->Line_6 $$ assertEquals(makeList(1, 2, 4), extractRevisionNumbers(list))[ FD ]
Line_4 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references1")-->Line_9 $$ assertEquals(makeList(1, 2, 4), extractRevisionNumbers(list))[ FD ]
Line_7 $$ list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references1")-->Line_13 $$ assertEquals(0, list.size())[ FD ]
Line_7 $$ list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references1")-->Line_11 $$ assertEquals(0, list.size())[ FD ]
Line_7 $$ list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references1")-->Line_10 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references1")[ FD ]
Line_4 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references1")-->Line_10 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references1")[ FD ]
Line_10 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references1")-->Line_11 $$ assertEquals(0, list.size())[ FD ]
Line_4 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references1")-->Line_12 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references1")[ FD ]
Line_7 $$ list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references1")-->Line_12 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references1")[ FD ]
Line_10 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references1")-->Line_12 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references1")[ FD ]
Line_4 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references1")-->Line_7 $$ list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references1")[ FD ]
Line_7 $$ list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references1")-->Line_9 $$ assertEquals(makeList(1, 2, 4), extractRevisionNumbers(list))[ FD ]
Line_4 $$ List list = queryForPropertyHasChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references1")-->Line_11 $$ assertEquals(0, list.size())[ FD ]
Line_10 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing1_id, "references1")-->Line_13 $$ assertEquals(0, list.size())[ FD ]
Line_12 $$ list = queryForPropertyHasNotChanged(DoubleListJoinColumnBidirectionalRefIngEntity.class, ing2_id, "references1")-->Line_13 $$ assertEquals(0, list.size())[ FD ]
