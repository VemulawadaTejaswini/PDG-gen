Line_14 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_19 $$ procs.close()[ FD ]
Line_12 $$ ResultSet procs = null-->Line_19 $$ procs.close()[ FD ]
Line_14 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_33 $$ int columnType = procs.getInt("COLUMN_TYPE")[ FD ]
Line_41 $$ if (logger.isDebugEnabled()) -->Line_42 $$ logger.debug("Retrieved metadata: " + meta.getParameterName() + " " + meta.getParameterType() + " " + meta.getSqlType() + " " + meta.getTypeName() + " " + meta.isNullable())[ CD ]
Line_12 $$ ResultSet procs = null-->Line_53 $$ procs.close()[ FD ]
Line_31 $$ while (procs.next()) -->Line_34 $$ if (columnName == null && (columnType == DatabaseMetaData.procedureColumnIn || columnType == DatabaseMetaData.procedureColumnInOut || columnType == DatabaseMetaData.procedureColumnOut)) [ CD ]
Line_6 $$ String metaDataCatalogName = metaDataCatalogNameToUse(catalogName)-->Line_23 $$ if (metaDataProcedureName.contains(".") && !StringUtils.hasText(metaDataCatalogName)) [ FD ]
Line_30 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)-->Line_39 $$ CallParameterMetaData meta = new CallParameterMetaData(columnName, columnType, procs.getInt("DATA_TYPE"), procs.getString("TYPE_NAME"), procs.getBoolean("NULLABLE"))[ FD ]
Line_9 $$ if (logger.isDebugEnabled()) -->Line_10 $$ logger.debug("Retrieving metadata for " + metaDataCatalogName + "/" + metaDataSchemaName + "/" + metaDataProcedureName)[ CD ]
Line_15 $$ List<String> found = new ArrayList<String>()-->Line_22 $$ if (found.isEmpty()) [ FD ]
Line_14 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_39 $$ CallParameterMetaData meta = new CallParameterMetaData(columnName, columnType, procs.getInt("DATA_TYPE"), procs.getString("TYPE_NAME"), procs.getBoolean("NULLABLE"))[ FD ]
Line_8 $$ String metaDataProcedureName = procedureNameToUse(procedureName)-->Line_24 $$ String packageName = metaDataProcedureName.substring(0, metaDataProcedureName.indexOf("."))[ FD ]
Line_14 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_53 $$ procs.close()[ FD ]
Line_7 $$ String metaDataSchemaName = metaDataSchemaNameToUse(schemaName)-->Line_14 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)[ FD ]
Line_12 $$ ResultSet procs = null-->Line_36 $$ logger.debug("Skipping metadata for: " + columnType + " " + procs.getInt("DATA_TYPE") + " " + procs.getString("TYPE_NAME") + " " + procs.getBoolean("NULLABLE") + " (probably a member of a collection)")[ FD ]
Line_14 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_36 $$ logger.debug("Skipping metadata for: " + columnType + " " + procs.getInt("DATA_TYPE") + " " + procs.getString("TYPE_NAME") + " " + procs.getBoolean("NULLABLE") + " (probably a member of a collection)")[ FD ]
Line_8 $$ String metaDataProcedureName = procedureNameToUse(procedureName)-->Line_14 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)[ FD ]
Line_14 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_17 $$ found.add(procs.getString("PROCEDURE_CAT") + "." + procs.getString("PROCEDURE_SCHEM") + "." + procs.getString("PROCEDURE_NAME"))[ FD ]
Line_20 $$ if (found.size() > 1) -->Line_22 $$ if (found.isEmpty()) [ CD ]
Line_6 $$ String metaDataCatalogName = metaDataCatalogNameToUse(catalogName)-->Line_30 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)[ FD ]
Line_8 $$ String metaDataProcedureName = procedureNameToUse(procedureName)-->Line_23 $$ if (metaDataProcedureName.contains(".") && !StringUtils.hasText(metaDataCatalogName)) [ FD ]
Line_12 $$ ResultSet procs = null-->Line_14 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)[ FD ]
Line_8 $$ String metaDataProcedureName = procedureNameToUse(procedureName)-->Line_30 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)[ FD ]
Line_31 $$ while (procs.next()) -->Line_33 $$ int columnType = procs.getInt("COLUMN_TYPE")[ CD ]
Line_7 $$ String metaDataSchemaName = metaDataSchemaNameToUse(schemaName)-->Line_30 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)[ FD ]
Line_12 $$ ResultSet procs = null-->Line_31 $$ while (procs.next()) [ FD ]
Line_12 $$ ResultSet procs = null-->Line_16 $$ while (procs.next()) [ FD ]
Line_56 $$ if (logger.isWarnEnabled()) -->Line_57 $$ logger.warn("Problem closing ResultSet for procedure column metadata: " + ex)[ CD ]
Line_39 $$ CallParameterMetaData meta = new CallParameterMetaData(columnName, columnType, procs.getInt("DATA_TYPE"), procs.getString("TYPE_NAME"), procs.getBoolean("NULLABLE"))-->Line_40 $$ this.callParameterMetaData.add(meta)[ FD ]
Line_23 $$ if (metaDataProcedureName.contains(".") && !StringUtils.hasText(metaDataCatalogName)) -->Line_24 $$ String packageName = metaDataProcedureName.substring(0, metaDataProcedureName.indexOf("."))[ CD ]
Line_14 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_32 $$ String columnName = procs.getString("COLUMN_NAME")[ FD ]
Line_14 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_16 $$ while (procs.next()) [ FD ]
Line_47 $$ if (logger.isWarnEnabled()) -->Line_48 $$ logger.warn("Error while retrieving metadata for procedure columns: " + ex)[ CD ]
Line_30 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)-->Line_33 $$ int columnType = procs.getInt("COLUMN_TYPE")[ FD ]
Line_31 $$ while (procs.next()) -->Line_32 $$ String columnName = procs.getString("COLUMN_NAME")[ CD ]
Line_16 $$ while (procs.next()) -->Line_17 $$ found.add(procs.getString("PROCEDURE_CAT") + "." + procs.getString("PROCEDURE_SCHEM") + "." + procs.getString("PROCEDURE_NAME"))[ CD ]
Line_6 $$ String metaDataCatalogName = metaDataCatalogNameToUse(catalogName)-->Line_14 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)[ FD ]
Line_14 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_30 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)[ FD ]
Line_15 $$ List<String> found = new ArrayList<String>()-->Line_17 $$ found.add(procs.getString("PROCEDURE_CAT") + "." + procs.getString("PROCEDURE_SCHEM") + "." + procs.getString("PROCEDURE_NAME"))[ FD ]
Line_12 $$ ResultSet procs = null-->Line_30 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)[ FD ]
Line_14 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_31 $$ while (procs.next()) [ FD ]
Line_12 $$ ResultSet procs = null-->Line_32 $$ String columnName = procs.getString("COLUMN_NAME")[ FD ]
Line_15 $$ List<String> found = new ArrayList<String>()-->Line_20 $$ if (found.size() > 1) [ FD ]
Line_12 $$ ResultSet procs = null-->Line_39 $$ CallParameterMetaData meta = new CallParameterMetaData(columnName, columnType, procs.getInt("DATA_TYPE"), procs.getString("TYPE_NAME"), procs.getBoolean("NULLABLE"))[ FD ]
Line_34 $$ if (columnName == null && (columnType == DatabaseMetaData.procedureColumnIn || columnType == DatabaseMetaData.procedureColumnInOut || columnType == DatabaseMetaData.procedureColumnOut)) -->Line_40 $$ this.callParameterMetaData.add(meta)[ CD ]
Line_30 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)-->Line_36 $$ logger.debug("Skipping metadata for: " + columnType + " " + procs.getInt("DATA_TYPE") + " " + procs.getString("TYPE_NAME") + " " + procs.getBoolean("NULLABLE") + " (probably a member of a collection)")[ FD ]
Line_12 $$ ResultSet procs = null-->Line_33 $$ int columnType = procs.getInt("COLUMN_TYPE")[ FD ]
Line_30 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)-->Line_53 $$ procs.close()[ FD ]
Line_30 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)-->Line_31 $$ while (procs.next()) [ FD ]
Line_30 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)-->Line_52 $$ if (procs != null) [ FD ]
Line_39 $$ CallParameterMetaData meta = new CallParameterMetaData(columnName, columnType, procs.getInt("DATA_TYPE"), procs.getString("TYPE_NAME"), procs.getBoolean("NULLABLE"))-->Line_42 $$ logger.debug("Retrieved metadata: " + meta.getParameterName() + " " + meta.getParameterType() + " " + meta.getSqlType() + " " + meta.getTypeName() + " " + meta.isNullable())[ FD ]
Line_34 $$ if (columnName == null && (columnType == DatabaseMetaData.procedureColumnIn || columnType == DatabaseMetaData.procedureColumnInOut || columnType == DatabaseMetaData.procedureColumnOut)) -->Line_35 $$ if (logger.isDebugEnabled()) [ CD ]
Line_34 $$ if (columnName == null && (columnType == DatabaseMetaData.procedureColumnIn || columnType == DatabaseMetaData.procedureColumnInOut || columnType == DatabaseMetaData.procedureColumnOut)) -->Line_39 $$ CallParameterMetaData meta = new CallParameterMetaData(columnName, columnType, procs.getInt("DATA_TYPE"), procs.getString("TYPE_NAME"), procs.getBoolean("NULLABLE"))[ CD ]
Line_34 $$ if (columnName == null && (columnType == DatabaseMetaData.procedureColumnIn || columnType == DatabaseMetaData.procedureColumnInOut || columnType == DatabaseMetaData.procedureColumnOut)) -->Line_41 $$ if (logger.isDebugEnabled()) [ CD ]
Line_12 $$ ResultSet procs = null-->Line_52 $$ if (procs != null) [ FD ]
Line_14 $$ procs = databaseMetaData.getProcedures(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName)-->Line_52 $$ if (procs != null) [ FD ]
Line_30 $$ procs = databaseMetaData.getProcedureColumns(metaDataCatalogName, metaDataSchemaName, metaDataProcedureName, null)-->Line_32 $$ String columnName = procs.getString("COLUMN_NAME")[ FD ]
Line_52 $$ if (procs != null) -->Line_53 $$ procs.close()[ CD ]
Line_12 $$ ResultSet procs = null-->Line_17 $$ found.add(procs.getString("PROCEDURE_CAT") + "." + procs.getString("PROCEDURE_SCHEM") + "." + procs.getString("PROCEDURE_NAME"))[ FD ]
Line_22 $$ if (found.isEmpty()) -->Line_23 $$ if (metaDataProcedureName.contains(".") && !StringUtils.hasText(metaDataCatalogName)) [ CD ]
Line_35 $$ if (logger.isDebugEnabled()) -->Line_36 $$ logger.debug("Skipping metadata for: " + columnType + " " + procs.getInt("DATA_TYPE") + " " + procs.getString("TYPE_NAME") + " " + procs.getBoolean("NULLABLE") + " (probably a member of a collection)")[ CD ]
