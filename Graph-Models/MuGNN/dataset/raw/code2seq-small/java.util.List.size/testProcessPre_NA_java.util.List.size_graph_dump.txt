Line_2 $$ public void testProcessPre() throws Exception -->Line_16 $$ stringWriter = new StringWriter()[ CD ]
Line_20 $$ charBuffer = CharBuffer.wrap("pre>a b </pre> \r\n\tc")-->Line_22 $$ stripFilter.processPre(charBuffer, stringWriter)[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("pre>abcde")-->Line_7 $$ stripFilter.processPre(charBuffer, stringWriter)[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("pre>abcde")-->Line_15 $$ charBuffer = CharBuffer.wrap("pre>a b </pre>")[ FD ]
Line_2 $$ public void testProcessPre() throws Exception -->Line_19 $$ Assert.assertEquals(14, charBuffer.position())[ CD ]
Line_3 $$ StripFilter stripFilter = new StripFilter()-->Line_7 $$ stripFilter.processPre(charBuffer, stringWriter)[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("pre>abcde")-->Line_13 $$ Assert.assertEquals(3, charBuffer.position())[ FD ]
Line_21 $$ stringWriter = new StringWriter()-->Line_22 $$ stripFilter.processPre(charBuffer, stringWriter)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_23 $$ Assert.assertEquals("pre>a b </pre> ", stringWriter.toString())[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_7 $$ stripFilter.processPre(charBuffer, stringWriter)[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("pre>abcde")-->Line_19 $$ Assert.assertEquals(14, charBuffer.position())[ FD ]
Line_2 $$ public void testProcessPre() throws Exception -->Line_5 $$ StringWriter stringWriter = new StringWriter()[ CD ]
Line_10 $$ LogRecord logRecord = logRecords.get(0)-->Line_11 $$ Assert.assertEquals("Missing </pre>", logRecord.getMessage())[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("pre>abcde")-->Line_17 $$ stripFilter.processPre(charBuffer, stringWriter)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_21 $$ stringWriter = new StringWriter()[ FD ]
Line_20 $$ charBuffer = CharBuffer.wrap("pre>a b </pre> \r\n\tc")-->Line_24 $$ Assert.assertEquals(18, charBuffer.position())[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("pre>abcde")-->Line_20 $$ charBuffer = CharBuffer.wrap("pre>a b </pre> \r\n\tc")[ FD ]
Line_8 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_9 $$ Assert.assertEquals(1, logRecords.size())[ FD ]
Line_15 $$ charBuffer = CharBuffer.wrap("pre>a b </pre>")-->Line_17 $$ stripFilter.processPre(charBuffer, stringWriter)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_12 $$ Assert.assertEquals("pre", stringWriter.toString())[ FD ]
Line_21 $$ stringWriter = new StringWriter()-->Line_23 $$ Assert.assertEquals("pre>a b </pre> ", stringWriter.toString())[ FD ]
Line_15 $$ charBuffer = CharBuffer.wrap("pre>a b </pre>")-->Line_22 $$ stripFilter.processPre(charBuffer, stringWriter)[ FD ]
Line_15 $$ charBuffer = CharBuffer.wrap("pre>a b </pre>")-->Line_19 $$ Assert.assertEquals(14, charBuffer.position())[ FD ]
Line_16 $$ stringWriter = new StringWriter()-->Line_21 $$ stringWriter = new StringWriter()[ FD ]
Line_2 $$ public void testProcessPre() throws Exception -->Line_23 $$ Assert.assertEquals("pre>a b </pre> ", stringWriter.toString())[ CD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("pre>abcde")-->Line_24 $$ Assert.assertEquals(18, charBuffer.position())[ FD ]
Line_15 $$ charBuffer = CharBuffer.wrap("pre>a b </pre>")-->Line_24 $$ Assert.assertEquals(18, charBuffer.position())[ FD ]
Line_3 $$ StripFilter stripFilter = new StripFilter()-->Line_17 $$ stripFilter.processPre(charBuffer, stringWriter)[ FD ]
Line_3 $$ StripFilter stripFilter = new StripFilter()-->Line_22 $$ stripFilter.processPre(charBuffer, stringWriter)[ FD ]
Line_16 $$ stringWriter = new StringWriter()-->Line_22 $$ stripFilter.processPre(charBuffer, stringWriter)[ FD ]
Line_2 $$ public void testProcessPre() throws Exception -->Line_24 $$ Assert.assertEquals(18, charBuffer.position())[ CD ]
Line_8 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_10 $$ LogRecord logRecord = logRecords.get(0)[ FD ]
Line_2 $$ public void testProcessPre() throws Exception -->Line_18 $$ Assert.assertEquals("pre>a b </pre>", stringWriter.toString())[ CD ]
Line_16 $$ stringWriter = new StringWriter()-->Line_23 $$ Assert.assertEquals("pre>a b </pre> ", stringWriter.toString())[ FD ]
Line_6 $$ try (CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(StripFilter.class.getName(), Level.WARNING)) -->Line_8 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ FD ]
Line_2 $$ public void testProcessPre() throws Exception -->Line_17 $$ stripFilter.processPre(charBuffer, stringWriter)[ CD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_16 $$ stringWriter = new StringWriter()[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("pre>abcde")-->Line_22 $$ stripFilter.processPre(charBuffer, stringWriter)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_17 $$ stripFilter.processPre(charBuffer, stringWriter)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_22 $$ stripFilter.processPre(charBuffer, stringWriter)[ FD ]
Line_2 $$ public void testProcessPre() throws Exception -->Line_15 $$ charBuffer = CharBuffer.wrap("pre>a b </pre>")[ CD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_18 $$ Assert.assertEquals("pre>a b </pre>", stringWriter.toString())[ FD ]
Line_2 $$ public void testProcessPre() throws Exception -->Line_21 $$ stringWriter = new StringWriter()[ CD ]
Line_2 $$ public void testProcessPre() throws Exception -->Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("pre>abcde")[ CD ]
Line_15 $$ charBuffer = CharBuffer.wrap("pre>a b </pre>")-->Line_20 $$ charBuffer = CharBuffer.wrap("pre>a b </pre> \r\n\tc")[ FD ]
Line_2 $$ public void testProcessPre() throws Exception -->Line_22 $$ stripFilter.processPre(charBuffer, stringWriter)[ CD ]
Line_2 $$ public void testProcessPre() throws Exception -->Line_20 $$ charBuffer = CharBuffer.wrap("pre>a b </pre> \r\n\tc")[ CD ]
Line_2 $$ public void testProcessPre() throws Exception -->Line_3 $$ StripFilter stripFilter = new StripFilter()[ CD ]
Line_16 $$ stringWriter = new StringWriter()-->Line_18 $$ Assert.assertEquals("pre>a b </pre>", stringWriter.toString())[ FD ]
Line_16 $$ stringWriter = new StringWriter()-->Line_17 $$ stripFilter.processPre(charBuffer, stringWriter)[ FD ]
