Line_36 $$ if (p.getName().equals("John Doe")) -->Line_37 $$ Employee john = (Employee) p[ CD ]
Line_33 $$ while (itr.hasNext()) -->Line_36 $$ if (p.getName().equals("John Doe")) [ CD ]
Line_5 $$ Session s = openSession()-->Line_59 $$ s.createQuery("delete Customer where contactOwner is not null").executeUpdate()[ FD ]
Line_10 $$ List results = s.createQuery("from Person").list()-->Line_31 $$ assertEquals("Incorrect qry result count", 4, results.size())[ FD ]
Line_13 $$ results = s.createQuery("from Employee").list()-->Line_44 $$ assertEquals("Incorrect qry result count", 2, results.size())[ FD ]
Line_7 $$ Transaction t = s.beginTransaction()-->Line_62 $$ t.commit()[ FD ]
Line_10 $$ List results = s.createQuery("from Person").list()-->Line_13 $$ results = s.createQuery("from Employee").list()[ FD ]
Line_13 $$ results = s.createQuery("from Employee").list()-->Line_31 $$ assertEquals("Incorrect qry result count", 4, results.size())[ FD ]
Line_5 $$ Session s = openSession()-->Line_60 $$ s.createQuery("delete Employee where manager is not null").executeUpdate()[ FD ]
Line_5 $$ Session s = openSession()-->Line_43 $$ results = new ArrayList(new HashSet(s.createQuery("from Employee as p left join fetch p.minions").list()))[ FD ]
Line_20 $$ Employee john = (Employee) p-->Line_21 $$ assertEquals("Incorrect fecthed minions count", 2, john.getMinions().size())[ FD ]
Line_49 $$ if (p.getName().equals("John Doe")) -->Line_51 $$ assertEquals("Incorrect fecthed minions count", 2, john.getMinions().size())[ CD ]
Line_46 $$ while (itr.hasNext()) -->Line_49 $$ if (p.getName().equals("John Doe")) [ CD ]
Line_5 $$ Session s = openSession()-->Line_56 $$ s.close()[ FD ]
Line_5 $$ Session s = openSession()-->Line_42 $$ s.clear()[ FD ]
Line_13 $$ results = s.createQuery("from Employee").list()-->Line_45 $$ itr = results.iterator()[ FD ]
Line_43 $$ results = new ArrayList(new HashSet(s.createQuery("from Employee as p left join fetch p.minions").list()))-->Line_45 $$ itr = results.iterator()[ FD ]
Line_5 $$ Session s = openSession()-->Line_63 $$ s.close()[ FD ]
Line_37 $$ Employee john = (Employee) p-->Line_51 $$ assertEquals("Incorrect fecthed minions count", 2, john.getMinions().size())[ FD ]
Line_5 $$ Session s = openSession()-->Line_9 $$ s.clear()[ FD ]
Line_10 $$ List results = s.createQuery("from Person").list()-->Line_32 $$ itr = results.iterator()[ FD ]
Line_5 $$ Session s = openSession()-->Line_57 $$ s = openSession()[ FD ]
Line_19 $$ if (p.getName().equals("John Doe")) -->Line_21 $$ assertEquals("Incorrect fecthed minions count", 2, john.getMinions().size())[ CD ]
Line_5 $$ Session s = openSession()-->Line_12 $$ s.clear()[ FD ]
Line_7 $$ Transaction t = s.beginTransaction()-->Line_58 $$ t = s.beginTransaction()[ FD ]
Line_57 $$ s = openSession()-->Line_58 $$ t = s.beginTransaction()[ FD ]
Line_32 $$ itr = results.iterator()-->Line_33 $$ while (itr.hasNext()) [ FD ]
Line_57 $$ s = openSession()-->Line_60 $$ s.createQuery("delete Employee where manager is not null").executeUpdate()[ FD ]
Line_36 $$ if (p.getName().equals("John Doe")) -->Line_38 $$ assertEquals("Incorrect fecthed minions count", 2, john.getMinions().size())[ CD ]
Line_10 $$ List results = s.createQuery("from Person").list()-->Line_44 $$ assertEquals("Incorrect qry result count", 2, results.size())[ FD ]
Line_5 $$ Session s = openSession()-->Line_25 $$ s.clear()[ FD ]
Line_50 $$ Employee john = (Employee) p-->Line_51 $$ assertEquals("Incorrect fecthed minions count", 2, john.getMinions().size())[ FD ]
Line_57 $$ s = openSession()-->Line_61 $$ s.createQuery("delete Person").executeUpdate()[ FD ]
Line_19 $$ if (p.getName().equals("John Doe")) -->Line_20 $$ Employee john = (Employee) p[ CD ]
Line_5 $$ Session s = openSession()-->Line_6 $$ s.enableFilter("region").setParameter("userRegion", "US")[ FD ]
Line_45 $$ itr = results.iterator()-->Line_46 $$ while (itr.hasNext()) [ FD ]
Line_13 $$ results = s.createQuery("from Employee").list()-->Line_43 $$ results = new ArrayList(new HashSet(s.createQuery("from Employee as p left join fetch p.minions").list()))[ FD ]
Line_5 $$ Session s = openSession()-->Line_58 $$ t = s.beginTransaction()[ FD ]
Line_15 $$ Iterator itr = results.iterator()-->Line_33 $$ while (itr.hasNext()) [ FD ]
Line_10 $$ List results = s.createQuery("from Person").list()-->Line_15 $$ Iterator itr = results.iterator()[ FD ]
Line_49 $$ if (p.getName().equals("John Doe")) -->Line_50 $$ Employee john = (Employee) p[ CD ]
Line_43 $$ results = new ArrayList(new HashSet(s.createQuery("from Employee as p left join fetch p.minions").list()))-->Line_44 $$ assertEquals("Incorrect qry result count", 2, results.size())[ FD ]
Line_5 $$ Session s = openSession()-->Line_8 $$ prepareTestData(s)[ FD ]
Line_15 $$ Iterator itr = results.iterator()-->Line_16 $$ while (itr.hasNext()) [ FD ]
Line_16 $$ while (itr.hasNext()) -->Line_19 $$ if (p.getName().equals("John Doe")) [ CD ]
Line_57 $$ s = openSession()-->Line_59 $$ s.createQuery("delete Customer where contactOwner is not null").executeUpdate()[ FD ]
Line_10 $$ List results = s.createQuery("from Person").list()-->Line_14 $$ assertEquals("Incorrect qry result count", 2, results.size())[ FD ]
Line_10 $$ List results = s.createQuery("from Person").list()-->Line_11 $$ assertEquals("Incorrect qry result count", 4, results.size())[ FD ]
Line_32 $$ itr = results.iterator()-->Line_46 $$ while (itr.hasNext()) [ FD ]
Line_15 $$ Iterator itr = results.iterator()-->Line_32 $$ itr = results.iterator()[ FD ]
Line_13 $$ results = s.createQuery("from Employee").list()-->Line_15 $$ Iterator itr = results.iterator()[ FD ]
Line_15 $$ Iterator itr = results.iterator()-->Line_45 $$ itr = results.iterator()[ FD ]
Line_10 $$ List results = s.createQuery("from Person").list()-->Line_43 $$ results = new ArrayList(new HashSet(s.createQuery("from Employee as p left join fetch p.minions").list()))[ FD ]
Line_58 $$ t = s.beginTransaction()-->Line_62 $$ t.commit()[ FD ]
Line_15 $$ Iterator itr = results.iterator()-->Line_46 $$ while (itr.hasNext()) [ FD ]
Line_5 $$ Session s = openSession()-->Line_61 $$ s.createQuery("delete Person").executeUpdate()[ FD ]
Line_5 $$ Session s = openSession()-->Line_13 $$ results = s.createQuery("from Employee").list()[ FD ]
Line_10 $$ List results = s.createQuery("from Person").list()-->Line_45 $$ itr = results.iterator()[ FD ]
Line_57 $$ s = openSession()-->Line_63 $$ s.close()[ FD ]
Line_20 $$ Employee john = (Employee) p-->Line_38 $$ assertEquals("Incorrect fecthed minions count", 2, john.getMinions().size())[ FD ]
Line_20 $$ Employee john = (Employee) p-->Line_51 $$ assertEquals("Incorrect fecthed minions count", 2, john.getMinions().size())[ FD ]
Line_37 $$ Employee john = (Employee) p-->Line_38 $$ assertEquals("Incorrect fecthed minions count", 2, john.getMinions().size())[ FD ]
Line_32 $$ itr = results.iterator()-->Line_45 $$ itr = results.iterator()[ FD ]
Line_5 $$ Session s = openSession()-->Line_7 $$ Transaction t = s.beginTransaction()[ FD ]
Line_7 $$ Transaction t = s.beginTransaction()-->Line_55 $$ t.commit()[ FD ]
Line_13 $$ results = s.createQuery("from Employee").list()-->Line_32 $$ itr = results.iterator()[ FD ]
Line_13 $$ results = s.createQuery("from Employee").list()-->Line_14 $$ assertEquals("Incorrect qry result count", 2, results.size())[ FD ]
Line_5 $$ Session s = openSession()-->Line_10 $$ List results = s.createQuery("from Person").list()[ FD ]
