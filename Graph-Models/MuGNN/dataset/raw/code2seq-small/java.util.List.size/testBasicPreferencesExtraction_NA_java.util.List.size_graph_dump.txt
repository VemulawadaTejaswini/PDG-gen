Line_2 $$ public void testBasicPreferencesExtraction() throws Exception -->Line_6 $$ String preferences = getPortalPreferencesString()[ CD ]
Line_4 $$ long ownerId = 1234-->Line_9 $$ upgradeCustomizablePreferences(portalPreferencesWrapper, ownerId, ownerType, preferences)[ FD ]
Line_4 $$ long ownerId = 1234-->Line_8 $$ PortalPreferencesWrapper portalPreferencesWrapper = getPortalPreferences(ownerId, ownerType, preferences)[ FD ]
Line_6 $$ String preferences = getPortalPreferencesString()-->Line_8 $$ PortalPreferencesWrapper portalPreferencesWrapper = getPortalPreferences(ownerId, ownerType, preferences)[ FD ]
Line_5 $$ int ownerType = PortletKeys.PREFS_OWNER_TYPE_USER-->Line_9 $$ upgradeCustomizablePreferences(portalPreferencesWrapper, ownerId, ownerType, preferences)[ FD ]
Line_6 $$ String preferences = getPortalPreferencesString()-->Line_9 $$ upgradeCustomizablePreferences(portalPreferencesWrapper, ownerId, ownerType, preferences)[ FD ]
Line_3 $$ Layout layout = getLayout()-->Line_7 $$ preferences = StringUtil.replace(preferences, new String[] [ FD ]
Line_2 $$ public void testBasicPreferencesExtraction() throws Exception -->Line_14 $$ Assert.assertTrue(PortletConstants.hasUserId(_newPortletIds.get(3)))[ CD ]
Line_2 $$ public void testBasicPreferencesExtraction() throws Exception -->Line_12 $$ Assert.assertTrue(PortletConstants.hasUserId(_newPortletIds.get(1)))[ CD ]
Line_2 $$ public void testBasicPreferencesExtraction() throws Exception -->Line_13 $$ Assert.assertTrue(PortletConstants.hasUserId(_newPortletIds.get(2)))[ CD ]
Line_2 $$ public void testBasicPreferencesExtraction() throws Exception -->Line_15 $$ Assert.assertFalse(PortletConstants.hasInstanceId(_newPortletIds.get(0)))[ CD ]
Line_2 $$ public void testBasicPreferencesExtraction() throws Exception -->Line_7 $$ preferences = StringUtil.replace(preferences, new String[] [ CD ]
Line_5 $$ int ownerType = PortletKeys.PREFS_OWNER_TYPE_USER-->Line_8 $$ PortalPreferencesWrapper portalPreferencesWrapper = getPortalPreferences(ownerId, ownerType, preferences)[ FD ]
Line_2 $$ public void testBasicPreferencesExtraction() throws Exception -->Line_17 $$ Assert.assertTrue(PortletConstants.hasInstanceId(_newPortletIds.get(2)))[ CD ]
Line_2 $$ public void testBasicPreferencesExtraction() throws Exception -->Line_5 $$ int ownerType = PortletKeys.PREFS_OWNER_TYPE_USER[ CD ]
Line_2 $$ public void testBasicPreferencesExtraction() throws Exception -->Line_4 $$ long ownerId = 1234[ CD ]
Line_2 $$ public void testBasicPreferencesExtraction() throws Exception -->Line_10 $$ Assert.assertEquals(_newPortletIds.size(), 4)[ CD ]
Line_7 $$ preferences = StringUtil.replace(preferences, new String[] -->Line_8 $$ PortalPreferencesWrapper portalPreferencesWrapper = getPortalPreferences(ownerId, ownerType, preferences)[ FD ]
Line_2 $$ public void testBasicPreferencesExtraction() throws Exception -->Line_11 $$ Assert.assertFalse(PortletConstants.hasUserId(_newPortletIds.get(0)))[ CD ]
Line_2 $$ public void testBasicPreferencesExtraction() throws Exception -->Line_18 $$ Assert.assertTrue(PortletConstants.hasInstanceId(_newPortletIds.get(3)))[ CD ]
Line_2 $$ public void testBasicPreferencesExtraction() throws Exception -->Line_9 $$ upgradeCustomizablePreferences(portalPreferencesWrapper, ownerId, ownerType, preferences)[ CD ]
Line_6 $$ String preferences = getPortalPreferencesString()-->Line_7 $$ preferences = StringUtil.replace(preferences, new String[] [ FD ]
Line_2 $$ public void testBasicPreferencesExtraction() throws Exception -->Line_3 $$ Layout layout = getLayout()[ CD ]
Line_2 $$ public void testBasicPreferencesExtraction() throws Exception -->Line_16 $$ Assert.assertTrue(PortletConstants.hasInstanceId(_newPortletIds.get(1)))[ CD ]
Line_2 $$ public void testBasicPreferencesExtraction() throws Exception -->Line_8 $$ PortalPreferencesWrapper portalPreferencesWrapper = getPortalPreferences(ownerId, ownerType, preferences)[ CD ]
Line_8 $$ PortalPreferencesWrapper portalPreferencesWrapper = getPortalPreferences(ownerId, ownerType, preferences)-->Line_9 $$ upgradeCustomizablePreferences(portalPreferencesWrapper, ownerId, ownerType, preferences)[ FD ]
Line_7 $$ preferences = StringUtil.replace(preferences, new String[] -->Line_9 $$ upgradeCustomizablePreferences(portalPreferencesWrapper, ownerId, ownerType, preferences)[ FD ]
