Line_3 $$ Session session = openSession()-->Line_21 $$ List results = session.createCriteria(Student.class).setFetchMode("studyAbroads", FetchMode.JOIN).setFetchMode("studyAbroads.country", FetchMode.JOIN).list()[ FD ]
Line_23 $$ Student st = (Student) results.get(0)-->Line_26 $$ assertEquals(st.getStudyAbroads().size(), 2)[ FD ]
Line_3 $$ Session session = openSession()-->Line_4 $$ Transaction t = session.beginTransaction()[ FD ]
Line_23 $$ Student st = (Student) results.get(0)-->Line_27 $$ Country c1 = ((StudyAbroad) st.getStudyAbroads().get(0)).getCountry()[ FD ]
Line_23 $$ Student st = (Student) results.get(0)-->Line_28 $$ Country c2 = ((StudyAbroad) st.getStudyAbroads().get(1)).getCountry()[ FD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_20 $$ session.clear()[ CD ]
Line_3 $$ Session session = openSession()-->Line_11 $$ session.persist(fr)[ FD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_24 $$ assertNotNull(st.getStudyAbroads())[ CD ]
Line_3 $$ Session session = openSession()-->Line_33 $$ session.delete(c2)[ FD ]
Line_23 $$ Student st = (Student) results.get(0)-->Line_31 $$ session.delete(st)[ FD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_29 $$ assertTrue(Hibernate.isInitialized(c1))[ CD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_19 $$ session.flush()[ CD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_33 $$ session.delete(c2)[ CD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_32 $$ session.delete(c1)[ CD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_6 $$ gavin.setName("Gavin King")[ CD ]
Line_13 $$ StudyAbroad sa1 = new StudyAbroad(gb, new Date())-->Line_14 $$ StudyAbroad sa2 = new StudyAbroad(fr, new Date(sa1.getDate().getTime() + 1))[ FD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_15 $$ studyAbroads.add(sa1)[ CD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_23 $$ Student st = (Student) results.get(0)[ CD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_13 $$ StudyAbroad sa1 = new StudyAbroad(gb, new Date())[ CD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_18 $$ session.persist(gavin)[ CD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_5 $$ Student gavin = new Student()[ CD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_7 $$ gavin.setStudentNumber(232)[ CD ]
Line_14 $$ StudyAbroad sa2 = new StudyAbroad(fr, new Date(sa1.getDate().getTime() + 1))-->Line_16 $$ studyAbroads.add(sa2)[ FD ]
Line_5 $$ Student gavin = new Student()-->Line_7 $$ gavin.setStudentNumber(232)[ FD ]
Line_12 $$ List studyAbroads = new ArrayList()-->Line_17 $$ gavin.setStudyAbroads(studyAbroads)[ FD ]
Line_12 $$ List studyAbroads = new ArrayList()-->Line_16 $$ studyAbroads.add(sa2)[ FD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_28 $$ Country c2 = ((StudyAbroad) st.getStudyAbroads().get(1)).getCountry()[ CD ]
Line_4 $$ Transaction t = session.beginTransaction()-->Line_34 $$ t.commit()[ FD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_3 $$ Session session = openSession()[ CD ]
Line_3 $$ Session session = openSession()-->Line_32 $$ session.delete(c1)[ FD ]
Line_8 $$ Country gb = new Country("GB", "United Kingdom")-->Line_10 $$ session.persist(gb)[ FD ]
Line_5 $$ Student gavin = new Student()-->Line_17 $$ gavin.setStudyAbroads(studyAbroads)[ FD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_12 $$ List studyAbroads = new ArrayList()[ CD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_21 $$ List results = session.createCriteria(Student.class).setFetchMode("studyAbroads", FetchMode.JOIN).setFetchMode("studyAbroads.country", FetchMode.JOIN).list()[ CD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_4 $$ Transaction t = session.beginTransaction()[ CD ]
Line_3 $$ Session session = openSession()-->Line_20 $$ session.clear()[ FD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_10 $$ session.persist(gb)[ CD ]
Line_5 $$ Student gavin = new Student()-->Line_18 $$ session.persist(gavin)[ FD ]
Line_3 $$ Session session = openSession()-->Line_19 $$ session.flush()[ FD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_25 $$ assertTrue(Hibernate.isInitialized(st.getStudyAbroads()))[ CD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_27 $$ Country c1 = ((StudyAbroad) st.getStudyAbroads().get(0)).getCountry()[ CD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_16 $$ studyAbroads.add(sa2)[ CD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_8 $$ Country gb = new Country("GB", "United Kingdom")[ CD ]
Line_3 $$ Session session = openSession()-->Line_35 $$ session.close()[ FD ]
Line_21 $$ List results = session.createCriteria(Student.class).setFetchMode("studyAbroads", FetchMode.JOIN).setFetchMode("studyAbroads.country", FetchMode.JOIN).list()-->Line_22 $$ assertEquals(results.size(), 2)[ FD ]
Line_12 $$ List studyAbroads = new ArrayList()-->Line_15 $$ studyAbroads.add(sa1)[ FD ]
Line_23 $$ Student st = (Student) results.get(0)-->Line_24 $$ assertNotNull(st.getStudyAbroads())[ FD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_34 $$ t.commit()[ CD ]
Line_9 $$ Country fr = new Country("FR", "France")-->Line_11 $$ session.persist(fr)[ FD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_14 $$ StudyAbroad sa2 = new StudyAbroad(fr, new Date(sa1.getDate().getTime() + 1))[ CD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_26 $$ assertEquals(st.getStudyAbroads().size(), 2)[ CD ]
Line_3 $$ Session session = openSession()-->Line_10 $$ session.persist(gb)[ FD ]
Line_3 $$ Session session = openSession()-->Line_18 $$ session.persist(gavin)[ FD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_9 $$ Country fr = new Country("FR", "France")[ CD ]
Line_5 $$ Student gavin = new Student()-->Line_6 $$ gavin.setName("Gavin King")[ FD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_11 $$ session.persist(fr)[ CD ]
Line_13 $$ StudyAbroad sa1 = new StudyAbroad(gb, new Date())-->Line_15 $$ studyAbroads.add(sa1)[ FD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_17 $$ gavin.setStudyAbroads(studyAbroads)[ CD ]
Line_3 $$ Session session = openSession()-->Line_31 $$ session.delete(st)[ FD ]
Line_28 $$ Country c2 = ((StudyAbroad) st.getStudyAbroads().get(1)).getCountry()-->Line_33 $$ session.delete(c2)[ FD ]
Line_27 $$ Country c1 = ((StudyAbroad) st.getStudyAbroads().get(0)).getCountry()-->Line_32 $$ session.delete(c1)[ FD ]
Line_27 $$ Country c1 = ((StudyAbroad) st.getStudyAbroads().get(0)).getCountry()-->Line_30 $$ assertEquals(c1.getName(), "United Kingdom")[ FD ]
Line_27 $$ Country c1 = ((StudyAbroad) st.getStudyAbroads().get(0)).getCountry()-->Line_29 $$ assertTrue(Hibernate.isInitialized(c1))[ FD ]
Line_21 $$ List results = session.createCriteria(Student.class).setFetchMode("studyAbroads", FetchMode.JOIN).setFetchMode("studyAbroads.country", FetchMode.JOIN).list()-->Line_23 $$ Student st = (Student) results.get(0)[ FD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_30 $$ assertEquals(c1.getName(), "United Kingdom")[ CD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_35 $$ session.close()[ CD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_31 $$ session.delete(st)[ CD ]
Line_23 $$ Student st = (Student) results.get(0)-->Line_25 $$ assertTrue(Hibernate.isInitialized(st.getStudyAbroads()))[ FD ]
Line_2 $$ public void testCriteriaFetchMode() -->Line_22 $$ assertEquals(results.size(), 2)[ CD ]
