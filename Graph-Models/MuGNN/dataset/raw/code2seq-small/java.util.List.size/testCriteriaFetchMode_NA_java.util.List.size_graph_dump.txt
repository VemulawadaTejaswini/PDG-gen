Line_24 $$ Student st = (Student) results.get(0)-->Line_26 $$ assertTrue(Hibernate.isInitialized(st.getStudyAbroads()))[ FD ]
Line_24 $$ Student st = (Student) results.get(0)-->Line_27 $$ assertEquals(st.getStudyAbroads().size(), 2)[ FD ]
Line_6 $$ Student gavin = new Student()-->Line_7 $$ gavin.setName("Gavin King")[ FD ]
Line_4 $$ Session session = openSession()-->Line_34 $$ session.delete(c2)[ FD ]
Line_4 $$ Session session = openSession()-->Line_33 $$ session.delete(c1)[ FD ]
Line_4 $$ Session session = openSession()-->Line_11 $$ session.persist(gb)[ FD ]
Line_5 $$ Transaction t = session.beginTransaction()-->Line_35 $$ t.commit()[ FD ]
Line_4 $$ Session session = openSession()-->Line_5 $$ Transaction t = session.beginTransaction()[ FD ]
Line_13 $$ List studyAbroads = new ArrayList()-->Line_18 $$ gavin.setStudyAbroads(studyAbroads)[ FD ]
Line_4 $$ Session session = openSession()-->Line_32 $$ session.delete(st)[ FD ]
Line_24 $$ Student st = (Student) results.get(0)-->Line_32 $$ session.delete(st)[ FD ]
Line_4 $$ Session session = openSession()-->Line_36 $$ session.close()[ FD ]
Line_28 $$ Country c1 = ((StudyAbroad) st.getStudyAbroads().get(0)).getCountry()-->Line_33 $$ session.delete(c1)[ FD ]
Line_22 $$ List results = session.createCriteria(Student.class).setFetchMode("studyAbroads", FetchMode.JOIN).setFetchMode("studyAbroads.country", FetchMode.JOIN).list()-->Line_23 $$ assertEquals(results.size(), 2)[ FD ]
Line_14 $$ StudyAbroad sa1 = new StudyAbroad(gb, new Date())-->Line_15 $$ StudyAbroad sa2 = new StudyAbroad(fr, new Date(sa1.getDate().getTime() + 1))[ FD ]
Line_28 $$ Country c1 = ((StudyAbroad) st.getStudyAbroads().get(0)).getCountry()-->Line_31 $$ assertEquals(c1.getName(), "United Kingdom")[ FD ]
Line_6 $$ Student gavin = new Student()-->Line_18 $$ gavin.setStudyAbroads(studyAbroads)[ FD ]
Line_13 $$ List studyAbroads = new ArrayList()-->Line_17 $$ studyAbroads.add(sa2)[ FD ]
Line_4 $$ Session session = openSession()-->Line_19 $$ session.persist(gavin)[ FD ]
Line_14 $$ StudyAbroad sa1 = new StudyAbroad(gb, new Date())-->Line_16 $$ studyAbroads.add(sa1)[ FD ]
Line_9 $$ Country gb = new Country("GB", "United Kingdom")-->Line_11 $$ session.persist(gb)[ FD ]
Line_4 $$ Session session = openSession()-->Line_21 $$ session.clear()[ FD ]
Line_22 $$ List results = session.createCriteria(Student.class).setFetchMode("studyAbroads", FetchMode.JOIN).setFetchMode("studyAbroads.country", FetchMode.JOIN).list()-->Line_24 $$ Student st = (Student) results.get(0)[ FD ]
Line_24 $$ Student st = (Student) results.get(0)-->Line_25 $$ assertNotNull(st.getStudyAbroads())[ FD ]
Line_24 $$ Student st = (Student) results.get(0)-->Line_29 $$ Country c2 = ((StudyAbroad) st.getStudyAbroads().get(1)).getCountry()[ FD ]
Line_24 $$ Student st = (Student) results.get(0)-->Line_28 $$ Country c1 = ((StudyAbroad) st.getStudyAbroads().get(0)).getCountry()[ FD ]
Line_29 $$ Country c2 = ((StudyAbroad) st.getStudyAbroads().get(1)).getCountry()-->Line_34 $$ session.delete(c2)[ FD ]
Line_4 $$ Session session = openSession()-->Line_20 $$ session.flush()[ FD ]
Line_28 $$ Country c1 = ((StudyAbroad) st.getStudyAbroads().get(0)).getCountry()-->Line_30 $$ assertTrue(Hibernate.isInitialized(c1))[ FD ]
Line_4 $$ Session session = openSession()-->Line_22 $$ List results = session.createCriteria(Student.class).setFetchMode("studyAbroads", FetchMode.JOIN).setFetchMode("studyAbroads.country", FetchMode.JOIN).list()[ FD ]
Line_6 $$ Student gavin = new Student()-->Line_8 $$ gavin.setStudentNumber(232)[ FD ]
Line_10 $$ Country fr = new Country("FR", "France")-->Line_12 $$ session.persist(fr)[ FD ]
Line_15 $$ StudyAbroad sa2 = new StudyAbroad(fr, new Date(sa1.getDate().getTime() + 1))-->Line_17 $$ studyAbroads.add(sa2)[ FD ]
Line_13 $$ List studyAbroads = new ArrayList()-->Line_16 $$ studyAbroads.add(sa1)[ FD ]
Line_6 $$ Student gavin = new Student()-->Line_19 $$ session.persist(gavin)[ FD ]
Line_4 $$ Session session = openSession()-->Line_12 $$ session.persist(fr)[ FD ]
