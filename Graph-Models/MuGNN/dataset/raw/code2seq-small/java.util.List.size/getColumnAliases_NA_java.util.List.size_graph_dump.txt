Line_6 $$ final String[] aliases = getColumnAliases(position, criteria, criteriaQuery, projection)-->Line_7 $$ Collections.addAll(result, aliases)[ FD ]
Line_2 $$ public String[] getColumnAliases(final int loc, Criteria criteria, CriteriaQuery criteriaQuery) -->Line_3 $$ int position = loc[ CD ]
Line_2 $$ public String[] getColumnAliases(final int loc, Criteria criteria, CriteriaQuery criteriaQuery) -->Line_6 $$ final String[] aliases = getColumnAliases(position, criteria, criteriaQuery, projection)[ FD ]
Line_5 $$ for (Projection projection : elements) -->Line_6 $$ final String[] aliases = getColumnAliases(position, criteria, criteriaQuery, projection)[ FD ]
Line_2 $$ public String[] getColumnAliases(final int loc, Criteria criteria, CriteriaQuery criteriaQuery) -->Line_4 $$ final List<String> result = new ArrayList<String>(getLength())[ CD ]
Line_4 $$ final List<String> result = new ArrayList<String>(getLength())-->Line_10 $$ return result.toArray(new String[result.size()])[ FD ]
Line_3 $$ int position = loc-->Line_8 $$ position += aliases.length[ FD ]
Line_3 $$ int position = loc-->Line_6 $$ final String[] aliases = getColumnAliases(position, criteria, criteriaQuery, projection)[ FD ]
Line_2 $$ public String[] getColumnAliases(final int loc, Criteria criteria, CriteriaQuery criteriaQuery) -->Line_10 $$ return result.toArray(new String[result.size()])[ CD ]
Line_4 $$ final List<String> result = new ArrayList<String>(getLength())-->Line_7 $$ Collections.addAll(result, aliases)[ FD ]
