Line_2 $$ private static void insertShardNodes(Connection connection, Map<String, Integer> nodeIds, List<Long> shardIds, List<ShardInfo> shards) throws SQLException -->Line_3 $$ checkArgument(shardIds.size() == shards.size(), "lists are not the same size")[ CD ]
Line_4 $$ String sql = "INSERT INTO shard_nodes (shard_id, node_id) VALUES (?, ?)"-->Line_5 $$ try (PreparedStatement statement = connection.prepareStatement(sql)) [ FD ]
Line_6 $$ for (int i = 0; i < shards.size(); i++) -->Line_8 $$ statement.setLong(1, shardIds.get(i))[ FD ]
Line_7 $$ for (String identifier : shards.get(i).getNodeIdentifiers()) -->Line_9 $$ statement.setInt(2, nodeIds.get(identifier))[ FD ]
Line_2 $$ private static void insertShardNodes(Connection connection, Map<String, Integer> nodeIds, List<Long> shardIds, List<ShardInfo> shards) throws SQLException -->Line_5 $$ try (PreparedStatement statement = connection.prepareStatement(sql)) [ FD ]
Line_2 $$ private static void insertShardNodes(Connection connection, Map<String, Integer> nodeIds, List<Long> shardIds, List<ShardInfo> shards) throws SQLException -->Line_9 $$ statement.setInt(2, nodeIds.get(identifier))[ FD ]
Line_2 $$ private static void insertShardNodes(Connection connection, Map<String, Integer> nodeIds, List<Long> shardIds, List<ShardInfo> shards) throws SQLException -->Line_3 $$ checkArgument(shardIds.size() == shards.size(), "lists are not the same size")[ FD ]
Line_5 $$ try (PreparedStatement statement = connection.prepareStatement(sql)) -->Line_13 $$ statement.executeBatch()[ FD ]
Line_2 $$ private static void insertShardNodes(Connection connection, Map<String, Integer> nodeIds, List<Long> shardIds, List<ShardInfo> shards) throws SQLException -->Line_7 $$ for (String identifier : shards.get(i).getNodeIdentifiers()) [ FD ]
Line_5 $$ try (PreparedStatement statement = connection.prepareStatement(sql)) -->Line_8 $$ statement.setLong(1, shardIds.get(i))[ FD ]
Line_2 $$ private static void insertShardNodes(Connection connection, Map<String, Integer> nodeIds, List<Long> shardIds, List<ShardInfo> shards) throws SQLException -->Line_8 $$ statement.setLong(1, shardIds.get(i))[ FD ]
Line_5 $$ try (PreparedStatement statement = connection.prepareStatement(sql)) -->Line_10 $$ statement.addBatch()[ FD ]
Line_2 $$ private static void insertShardNodes(Connection connection, Map<String, Integer> nodeIds, List<Long> shardIds, List<ShardInfo> shards) throws SQLException -->Line_6 $$ for (int i = 0; i < shards.size(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < shards.size(); i++) -->Line_7 $$ for (String identifier : shards.get(i).getNodeIdentifiers()) [ FD ]
Line_2 $$ private static void insertShardNodes(Connection connection, Map<String, Integer> nodeIds, List<Long> shardIds, List<ShardInfo> shards) throws SQLException -->Line_4 $$ String sql = "INSERT INTO shard_nodes (shard_id, node_id) VALUES (?, ?)"[ CD ]
Line_5 $$ try (PreparedStatement statement = connection.prepareStatement(sql)) -->Line_9 $$ statement.setInt(2, nodeIds.get(identifier))[ FD ]
