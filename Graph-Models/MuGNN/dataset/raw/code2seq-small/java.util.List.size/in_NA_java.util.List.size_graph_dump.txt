Line_2 $$ private static InPredicate in(Symbol symbol, List<?> values) -->Line_5 $$ return new InPredicate(reference(symbol), new InListExpression(expressions))[ FD ]
Line_2 $$ private static InPredicate in(Symbol symbol, List<?> values) -->Line_5 $$ return new InPredicate(reference(symbol), new InListExpression(expressions))[ CD ]
Line_2 $$ private static InPredicate in(Symbol symbol, List<?> values) -->Line_3 $$ List<Type> types = nCopies(values.size(), TYPES.get(symbol))[ CD ]
Line_3 $$ List<Type> types = nCopies(values.size(), TYPES.get(symbol))-->Line_4 $$ List<Expression> expressions = LiteralInterpreter.toExpressions(values, types)[ FD ]
Line_2 $$ private static InPredicate in(Symbol symbol, List<?> values) -->Line_4 $$ List<Expression> expressions = LiteralInterpreter.toExpressions(values, types)[ FD ]
Line_2 $$ private static InPredicate in(Symbol symbol, List<?> values) -->Line_3 $$ List<Type> types = nCopies(values.size(), TYPES.get(symbol))[ FD ]
Line_2 $$ private static InPredicate in(Symbol symbol, List<?> values) -->Line_4 $$ List<Expression> expressions = LiteralInterpreter.toExpressions(values, types)[ CD ]
