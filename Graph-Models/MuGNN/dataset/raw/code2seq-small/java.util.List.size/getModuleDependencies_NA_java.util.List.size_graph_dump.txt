Line_11 $$ Module module = ((ModuleOrderEntry) entry).getModule()-->Line_12 $$ if (module != null) [ FD ]
Line_10 $$ if (includeTests || scope.isForProductionCompile() || scope.isForProductionRuntime()) -->Line_12 $$ if (module != null) [ CD ]
Line_8 $$ if (entry instanceof ModuleOrderEntry) -->Line_9 $$ DependencyScope scope = ((ModuleOrderEntry) entry).getScope()[ CD ]
Line_8 $$ if (entry instanceof ModuleOrderEntry) -->Line_10 $$ if (includeTests || scope.isForProductionCompile() || scope.isForProductionRuntime()) [ CD ]
Line_7 $$ for (OrderEntry entry : entries) -->Line_8 $$ if (entry instanceof ModuleOrderEntry) [ FD ]
Line_12 $$ if (module != null) -->Line_13 $$ result.add(module)[ CD ]
Line_6 $$ List<Module> result = new ArrayList<Module>(entries.length)-->Line_18 $$ return result.isEmpty() ? Module.EMPTY_ARRAY : ContainerUtil.toArray(result, new Module[result.size()])[ FD ]
Line_6 $$ List<Module> result = new ArrayList<Module>(entries.length)-->Line_13 $$ result.add(module)[ FD ]
Line_9 $$ DependencyScope scope = ((ModuleOrderEntry) entry).getScope()-->Line_10 $$ if (includeTests || scope.isForProductionCompile() || scope.isForProductionRuntime()) [ FD ]
Line_11 $$ Module module = ((ModuleOrderEntry) entry).getModule()-->Line_13 $$ result.add(module)[ FD ]
Line_10 $$ if (includeTests || scope.isForProductionCompile() || scope.isForProductionRuntime()) -->Line_11 $$ Module module = ((ModuleOrderEntry) entry).getModule()[ CD ]
