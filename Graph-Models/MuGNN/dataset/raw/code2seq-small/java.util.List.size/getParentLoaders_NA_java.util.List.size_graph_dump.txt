Line_6 $$ final List<ClassLoader> classLoaders = new ArrayList<ClassLoader>()-->Line_19 $$ return classLoaders.toArray(new ClassLoader[classLoaders.size()])[ FD ]
Line_8 $$ IdeaPluginDescriptor pluginDescriptor = idToDescriptorMap.get(id)-->Line_9 $$ if (pluginDescriptor == null) [ FD ]
Line_8 $$ IdeaPluginDescriptor pluginDescriptor = idToDescriptorMap.get(id)-->Line_13 $$ final ClassLoader loader = pluginDescriptor.getPluginClassLoader()[ FD ]
Line_6 $$ final List<ClassLoader> classLoaders = new ArrayList<ClassLoader>()-->Line_17 $$ classLoaders.add(loader)[ FD ]
Line_13 $$ final ClassLoader loader = pluginDescriptor.getPluginClassLoader()-->Line_17 $$ classLoaders.add(loader)[ FD ]
Line_7 $$ for (final PluginId id : pluginIds) -->Line_8 $$ IdeaPluginDescriptor pluginDescriptor = idToDescriptorMap.get(id)[ FD ]
Line_13 $$ final ClassLoader loader = pluginDescriptor.getPluginClassLoader()-->Line_14 $$ if (loader == null) [ FD ]
Line_14 $$ if (loader == null) -->Line_15 $$ getLogger().error("Plugin class loader should be initialized for plugin " + id)[ CD ]
Line_4 $$ if (isUnitTestMode())-->Line_5 $$ return new ClassLoader[0][ CD ]
