Line_11 $$ ContainerUtil.sort(entries, new Comparator<E>() -->Line_13 $$ String name1 = e1 instanceof NameAwareArrangementEntry ? ((NameAwareArrangementEntry) e1).getName() : null[ CD ]
Line_7 $$ int i = 0-->Line_9 $$ weights.put(e, ++i)[ FD ]
Line_11 $$ ContainerUtil.sort(entries, new Comparator<E>() -->Line_14 $$ String name2 = e2 instanceof NameAwareArrangementEntry ? ((NameAwareArrangementEntry) e2).getName() : null[ CD ]
Line_17 $$ if (name1 == null && name2 == null) -->Line_19 $$ if (name2 == null) [ CD ]
Line_3 $$ if (entries.size() < 2) -->Line_4 $$ return[ CD ]
Line_2 $$ private static <E extends ArrangementEntry> void sortByName(@NotNull List<E> entries) -->Line_11 $$ ContainerUtil.sort(entries, new Comparator<E>() [ FD ]
Line_2 $$ private static <E extends ArrangementEntry> void sortByName(@NotNull List<E> entries) -->Line_7 $$ int i = 0[ CD ]
Line_11 $$ ContainerUtil.sort(entries, new Comparator<E>() -->Line_15 $$ if (name1 != null && name2 != null) [ CD ]
Line_15 $$ if (name1 != null && name2 != null) -->Line_17 $$ if (name1 == null && name2 == null) [ CD ]
Line_2 $$ private static <E extends ArrangementEntry> void sortByName(@NotNull List<E> entries) -->Line_11 $$ ContainerUtil.sort(entries, new Comparator<E>() [ CD ]
Line_6 $$ final TObjectIntHashMap<E> weights = new TObjectIntHashMap<E>()-->Line_18 $$ return weights.get(e1) - weights.get(e2)[ FD ]
Line_11 $$ ContainerUtil.sort(entries, new Comparator<E>() -->Line_18 $$ return weights.get(e1) - weights.get(e2)[ FD ]
Line_19 $$ if (name2 == null) -->Line_22 $$ return 1[ CD ]
Line_14 $$ String name2 = e2 instanceof NameAwareArrangementEntry ? ((NameAwareArrangementEntry) e2).getName() : null-->Line_16 $$ return name1.compareTo(name2)[ FD ]
Line_17 $$ if (name1 == null && name2 == null) -->Line_18 $$ return weights.get(e1) - weights.get(e2)[ CD ]
Line_2 $$ private static <E extends ArrangementEntry> void sortByName(@NotNull List<E> entries) -->Line_3 $$ if (entries.size() < 2) [ CD ]
Line_2 $$ private static <E extends ArrangementEntry> void sortByName(@NotNull List<E> entries) -->Line_3 $$ if (entries.size() < 2) [ FD ]
Line_2 $$ private static <E extends ArrangementEntry> void sortByName(@NotNull List<E> entries) -->Line_6 $$ final TObjectIntHashMap<E> weights = new TObjectIntHashMap<E>()[ CD ]
Line_14 $$ String name2 = e2 instanceof NameAwareArrangementEntry ? ((NameAwareArrangementEntry) e2).getName() : null-->Line_19 $$ if (name2 == null) [ FD ]
Line_19 $$ if (name2 == null) -->Line_20 $$ return -1[ CD ]
Line_15 $$ if (name1 != null && name2 != null) -->Line_16 $$ return name1.compareTo(name2)[ CD ]
Line_8 $$ for (E e : entries) -->Line_9 $$ weights.put(e, ++i)[ FD ]
Line_13 $$ String name1 = e1 instanceof NameAwareArrangementEntry ? ((NameAwareArrangementEntry) e1).getName() : null-->Line_16 $$ return name1.compareTo(name2)[ FD ]
Line_6 $$ final TObjectIntHashMap<E> weights = new TObjectIntHashMap<E>()-->Line_9 $$ weights.put(e, ++i)[ FD ]
