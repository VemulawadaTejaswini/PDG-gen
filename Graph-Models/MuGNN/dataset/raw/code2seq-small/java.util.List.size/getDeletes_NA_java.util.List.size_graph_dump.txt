Line_12 $$ if (bag.size() > i && elementType.isSame(old, bag.get(i++))) -->Line_13 $$ found = true[ CD ]
Line_6 $$ final Iterator olditer = sn.iterator()-->Line_9 $$ final Object old = olditer.next()[ FD ]
Line_8 $$ while (olditer.hasNext()) -->Line_12 $$ if (bag.size() > i && elementType.isSame(old, bag.get(i++))) [ CD ]
Line_2 $$ public Iterator getDeletes(CollectionPersister persister, boolean indexIsFormula) throws HibernateException -->Line_3 $$ final Type elementType = persister.getElementType()[ FD ]
Line_10 $$ final Iterator newiter = bag.iterator()-->Line_16 $$ if (elementType.isSame(old, newiter.next())) [ FD ]
Line_17 $$ found = true-->Line_22 $$ if (!found) [ FD ]
Line_2 $$ public Iterator getDeletes(CollectionPersister persister, boolean indexIsFormula) throws HibernateException -->Line_6 $$ final Iterator olditer = sn.iterator()[ CD ]
Line_15 $$ while (newiter.hasNext()) -->Line_16 $$ if (elementType.isSame(old, newiter.next())) [ CD ]
Line_3 $$ final Type elementType = persister.getElementType()-->Line_12 $$ if (bag.size() > i && elementType.isSame(old, bag.get(i++))) [ FD ]
Line_22 $$ if (!found) -->Line_23 $$ deletes.add(old)[ CD ]
Line_3 $$ final Type elementType = persister.getElementType()-->Line_16 $$ if (elementType.isSame(old, newiter.next())) [ FD ]
Line_11 $$ boolean found = false-->Line_22 $$ if (!found) [ FD ]
Line_8 $$ while (olditer.hasNext()) -->Line_11 $$ boolean found = false[ CD ]
Line_13 $$ found = true-->Line_17 $$ found = true[ FD ]
Line_8 $$ while (olditer.hasNext()) -->Line_10 $$ final Iterator newiter = bag.iterator()[ CD ]
Line_2 $$ public Iterator getDeletes(CollectionPersister persister, boolean indexIsFormula) throws HibernateException -->Line_26 $$ return deletes.iterator()[ CD ]
Line_5 $$ final List sn = (List) getSnapshot()-->Line_6 $$ final Iterator olditer = sn.iterator()[ FD ]
Line_2 $$ public Iterator getDeletes(CollectionPersister persister, boolean indexIsFormula) throws HibernateException -->Line_8 $$ while (olditer.hasNext()) [ CD ]
Line_6 $$ final Iterator olditer = sn.iterator()-->Line_8 $$ while (olditer.hasNext()) [ FD ]
Line_2 $$ public Iterator getDeletes(CollectionPersister persister, boolean indexIsFormula) throws HibernateException -->Line_4 $$ final ArrayList deletes = new ArrayList()[ CD ]
Line_8 $$ while (olditer.hasNext()) -->Line_22 $$ if (!found) [ CD ]
Line_13 $$ found = true-->Line_22 $$ if (!found) [ FD ]
Line_16 $$ if (elementType.isSame(old, newiter.next())) -->Line_17 $$ found = true[ CD ]
Line_8 $$ while (olditer.hasNext()) -->Line_9 $$ final Object old = olditer.next()[ CD ]
Line_11 $$ boolean found = false-->Line_17 $$ found = true[ FD ]
Line_2 $$ public Iterator getDeletes(CollectionPersister persister, boolean indexIsFormula) throws HibernateException -->Line_3 $$ final Type elementType = persister.getElementType()[ CD ]
Line_2 $$ public Iterator getDeletes(CollectionPersister persister, boolean indexIsFormula) throws HibernateException -->Line_5 $$ final List sn = (List) getSnapshot()[ CD ]
Line_2 $$ public Iterator getDeletes(CollectionPersister persister, boolean indexIsFormula) throws HibernateException -->Line_7 $$ int i = 0[ CD ]
Line_7 $$ int i = 0-->Line_12 $$ if (bag.size() > i && elementType.isSame(old, bag.get(i++))) [ FD ]
Line_9 $$ final Object old = olditer.next()-->Line_12 $$ if (bag.size() > i && elementType.isSame(old, bag.get(i++))) [ FD ]
Line_12 $$ if (bag.size() > i && elementType.isSame(old, bag.get(i++))) -->Line_15 $$ while (newiter.hasNext()) [ CD ]
Line_4 $$ final ArrayList deletes = new ArrayList()-->Line_23 $$ deletes.add(old)[ FD ]
Line_4 $$ final ArrayList deletes = new ArrayList()-->Line_26 $$ return deletes.iterator()[ FD ]
Line_10 $$ final Iterator newiter = bag.iterator()-->Line_15 $$ while (newiter.hasNext()) [ FD ]
Line_9 $$ final Object old = olditer.next()-->Line_23 $$ deletes.add(old)[ FD ]
Line_11 $$ boolean found = false-->Line_13 $$ found = true[ FD ]
Line_9 $$ final Object old = olditer.next()-->Line_16 $$ if (elementType.isSame(old, newiter.next())) [ FD ]
