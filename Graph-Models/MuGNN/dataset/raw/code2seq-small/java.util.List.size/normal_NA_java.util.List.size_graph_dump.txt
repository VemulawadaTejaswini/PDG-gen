Line_4 $$ String headerName = "My-Custom-Header"-->Line_11 $$ assertTrue(responseEntity.getHeaders().containsKey(headerName))[ FD ]
Line_4 $$ String headerName = "My-Custom-Header"-->Line_12 $$ List<String> list = responseEntity.getHeaders().get(headerName)[ FD ]
Line_8 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)-->Line_12 $$ List<String> list = responseEntity.getHeaders().get(headerName)[ FD ]
Line_4 $$ String headerName = "My-Custom-Header"-->Line_8 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)[ FD ]
Line_7 $$ Integer entity = 42-->Line_8 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)[ FD ]
Line_12 $$ List<String> list = responseEntity.getHeaders().get(headerName)-->Line_13 $$ assertEquals(2, list.size())[ FD ]
Line_6 $$ String headerValue2 = "HeaderValue2"-->Line_15 $$ assertEquals(headerValue2, list.get(1))[ FD ]
Line_5 $$ String headerValue1 = "HeaderValue1"-->Line_8 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)[ FD ]
Line_6 $$ String headerValue2 = "HeaderValue2"-->Line_8 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)[ FD ]
Line_8 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)-->Line_16 $$ assertEquals(entity, responseEntity.getBody())[ FD ]
Line_8 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)-->Line_9 $$ assertNotNull(responseEntity)[ FD ]
Line_12 $$ List<String> list = responseEntity.getHeaders().get(headerName)-->Line_14 $$ assertEquals(headerValue1, list.get(0))[ FD ]
Line_8 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)-->Line_11 $$ assertTrue(responseEntity.getHeaders().containsKey(headerName))[ FD ]
Line_7 $$ Integer entity = 42-->Line_16 $$ assertEquals(entity, responseEntity.getBody())[ FD ]
Line_5 $$ String headerValue1 = "HeaderValue1"-->Line_14 $$ assertEquals(headerValue1, list.get(0))[ FD ]
Line_8 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)-->Line_10 $$ assertEquals(HttpStatus.OK, responseEntity.getStatusCode())[ FD ]
Line_12 $$ List<String> list = responseEntity.getHeaders().get(headerName)-->Line_15 $$ assertEquals(headerValue2, list.get(1))[ FD ]
