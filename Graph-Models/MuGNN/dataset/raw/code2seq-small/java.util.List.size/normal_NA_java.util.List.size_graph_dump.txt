Line_11 $$ List<String> list = responseEntity.getHeaders().get(headerName)-->Line_14 $$ assertEquals(headerValue2, list.get(1))[ FD ]
Line_2 $$ public void normal() -->Line_4 $$ String headerValue1 = "HeaderValue1"[ CD ]
Line_3 $$ String headerName = "My-Custom-Header"-->Line_11 $$ List<String> list = responseEntity.getHeaders().get(headerName)[ FD ]
Line_2 $$ public void normal() -->Line_9 $$ assertEquals(HttpStatus.OK, responseEntity.getStatusCode())[ CD ]
Line_2 $$ public void normal() -->Line_7 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)[ CD ]
Line_3 $$ String headerName = "My-Custom-Header"-->Line_10 $$ assertTrue(responseEntity.getHeaders().containsKey(headerName))[ FD ]
Line_2 $$ public void normal() -->Line_8 $$ assertNotNull(responseEntity)[ CD ]
Line_5 $$ String headerValue2 = "HeaderValue2"-->Line_14 $$ assertEquals(headerValue2, list.get(1))[ FD ]
Line_2 $$ public void normal() -->Line_6 $$ Integer entity = 42[ CD ]
Line_6 $$ Integer entity = 42-->Line_7 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)[ FD ]
Line_4 $$ String headerValue1 = "HeaderValue1"-->Line_7 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)[ FD ]
Line_2 $$ public void normal() -->Line_14 $$ assertEquals(headerValue2, list.get(1))[ CD ]
Line_2 $$ public void normal() -->Line_10 $$ assertTrue(responseEntity.getHeaders().containsKey(headerName))[ CD ]
Line_7 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)-->Line_10 $$ assertTrue(responseEntity.getHeaders().containsKey(headerName))[ FD ]
Line_7 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)-->Line_8 $$ assertNotNull(responseEntity)[ FD ]
Line_2 $$ public void normal() -->Line_15 $$ assertEquals(entity, responseEntity.getBody())[ CD ]
Line_2 $$ public void normal() -->Line_13 $$ assertEquals(headerValue1, list.get(0))[ CD ]
Line_4 $$ String headerValue1 = "HeaderValue1"-->Line_13 $$ assertEquals(headerValue1, list.get(0))[ FD ]
Line_11 $$ List<String> list = responseEntity.getHeaders().get(headerName)-->Line_13 $$ assertEquals(headerValue1, list.get(0))[ FD ]
Line_7 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)-->Line_15 $$ assertEquals(entity, responseEntity.getBody())[ FD ]
Line_3 $$ String headerName = "My-Custom-Header"-->Line_7 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)[ FD ]
Line_2 $$ public void normal() -->Line_5 $$ String headerValue2 = "HeaderValue2"[ CD ]
Line_2 $$ public void normal() -->Line_12 $$ assertEquals(2, list.size())[ CD ]
Line_7 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)-->Line_9 $$ assertEquals(HttpStatus.OK, responseEntity.getStatusCode())[ FD ]
Line_2 $$ public void normal() -->Line_3 $$ String headerName = "My-Custom-Header"[ CD ]
Line_2 $$ public void normal() -->Line_11 $$ List<String> list = responseEntity.getHeaders().get(headerName)[ CD ]
Line_6 $$ Integer entity = 42-->Line_15 $$ assertEquals(entity, responseEntity.getBody())[ FD ]
Line_7 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)-->Line_11 $$ List<String> list = responseEntity.getHeaders().get(headerName)[ FD ]
Line_5 $$ String headerValue2 = "HeaderValue2"-->Line_7 $$ ResponseEntity<Integer> responseEntity = ResponseEntity.status(HttpStatus.OK).header(headerName, headerValue1, headerValue2).body(entity)[ FD ]
Line_11 $$ List<String> list = responseEntity.getHeaders().get(headerName)-->Line_12 $$ assertEquals(2, list.size())[ FD ]
