Line_13 $$ List resultList = (List) results-->Line_14 $$ assertEquals(2, resultList.size())[ FD ]
Line_10 $$ ResultChecker checker = new ResultChecker() -->Line_14 $$ assertEquals(2, resultList.size())[ CD ]
Line_13 $$ List resultList = (List) results-->Line_24 $$ assertTrue(Hibernate.isInitialized(((Student) resultList.get(1)).getEnrolments()))[ FD ]
Line_4 $$ CriteriaExecutor criteriaExecutor = new CriteriaExecutor() -->Line_29 $$ runTest(null, criteriaExecutor, checker, false)[ FD ]
Line_13 $$ List resultList = (List) results-->Line_15 $$ assertEquals(yogiExpected, resultList.get(0))[ FD ]
Line_21 $$ if (areDynamicNonLazyAssociationsChecked()) -->Line_24 $$ assertTrue(Hibernate.isInitialized(((Student) resultList.get(1)).getEnrolments()))[ CD ]
Line_21 $$ if (areDynamicNonLazyAssociationsChecked()) -->Line_25 $$ assertEquals(shermanExpected.getEnrolments(), (((Student) resultList.get(1)).getEnrolments()))[ CD ]
Line_13 $$ List resultList = (List) results-->Line_23 $$ assertEquals(yogiExpected.getEnrolments(), ((Student) resultList.get(0)).getEnrolments())[ FD ]
Line_4 $$ CriteriaExecutor criteriaExecutor = new CriteriaExecutor() -->Line_7 $$ return s.createCriteria(Student.class, "s").createAlias("s.preferredCourse", "pc", Criteria.LEFT_JOIN).setFetchMode("enrolments", FetchMode.JOIN).addOrder(Order.asc("s.studentNumber"))[ CD ]
Line_10 $$ ResultChecker checker = new ResultChecker() -->Line_13 $$ List resultList = (List) results[ CD ]
Line_4 $$ CriteriaExecutor criteriaExecutor = new CriteriaExecutor() -->Line_7 $$ return s.createCriteria(Student.class, "s").createAlias("s.preferredCourse", "pc", Criteria.LEFT_JOIN).setFetchMode("enrolments", FetchMode.JOIN).addOrder(Order.asc("s.studentNumber"))[ FD ]
Line_13 $$ List resultList = (List) results-->Line_20 $$ assertNull(((Student) resultList.get(1)).getPreferredCourse())[ FD ]
Line_10 $$ ResultChecker checker = new ResultChecker() -->Line_15 $$ assertEquals(yogiExpected, resultList.get(0))[ CD ]
Line_13 $$ List resultList = (List) results-->Line_19 $$ assertEquals(shermanExpected, resultList.get(1))[ FD ]
Line_21 $$ if (areDynamicNonLazyAssociationsChecked()) -->Line_23 $$ assertEquals(yogiExpected.getEnrolments(), ((Student) resultList.get(0)).getEnrolments())[ CD ]
Line_10 $$ ResultChecker checker = new ResultChecker() -->Line_19 $$ assertEquals(shermanExpected, resultList.get(1))[ CD ]
Line_10 $$ ResultChecker checker = new ResultChecker() -->Line_21 $$ if (areDynamicNonLazyAssociationsChecked()) [ CD ]
Line_21 $$ if (areDynamicNonLazyAssociationsChecked()) -->Line_22 $$ assertTrue(Hibernate.isInitialized(((Student) resultList.get(0)).getEnrolments()))[ CD ]
Line_10 $$ ResultChecker checker = new ResultChecker() -->Line_20 $$ assertNull(((Student) resultList.get(1)).getPreferredCourse())[ CD ]
Line_13 $$ List resultList = (List) results-->Line_25 $$ assertEquals(shermanExpected.getEnrolments(), (((Student) resultList.get(1)).getEnrolments()))[ FD ]
Line_13 $$ List resultList = (List) results-->Line_22 $$ assertTrue(Hibernate.isInitialized(((Student) resultList.get(0)).getEnrolments()))[ FD ]
