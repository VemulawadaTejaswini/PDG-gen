Line_2 $$ public void testRevisionTypeEqQuery() -->Line_7 $$ Assert.assertEquals(new StrIntTestEntity("d", 5, id1), results.get(2))[ CD ]
Line_3 $$ List results = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, true, true).add(AuditEntity.id().eq(id1)).add(AuditEntity.revisionType().eq(RevisionType.MOD)).getResultList()-->Line_5 $$ Assert.assertEquals(new StrIntTestEntity("d", 10, id1), results.get(0))[ FD ]
Line_3 $$ List results = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, true, true).add(AuditEntity.id().eq(id1)).add(AuditEntity.revisionType().eq(RevisionType.MOD)).getResultList()-->Line_7 $$ Assert.assertEquals(new StrIntTestEntity("d", 5, id1), results.get(2))[ FD ]
Line_2 $$ public void testRevisionTypeEqQuery() -->Line_4 $$ Assert.assertEquals(3, results.size())[ CD ]
Line_3 $$ List results = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, true, true).add(AuditEntity.id().eq(id1)).add(AuditEntity.revisionType().eq(RevisionType.MOD)).getResultList()-->Line_4 $$ Assert.assertEquals(3, results.size())[ FD ]
Line_2 $$ public void testRevisionTypeEqQuery() -->Line_6 $$ Assert.assertEquals(new StrIntTestEntity("d", 1, id1), results.get(1))[ CD ]
Line_2 $$ public void testRevisionTypeEqQuery() -->Line_5 $$ Assert.assertEquals(new StrIntTestEntity("d", 10, id1), results.get(0))[ CD ]
Line_3 $$ List results = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, true, true).add(AuditEntity.id().eq(id1)).add(AuditEntity.revisionType().eq(RevisionType.MOD)).getResultList()-->Line_6 $$ Assert.assertEquals(new StrIntTestEntity("d", 1, id1), results.get(1))[ FD ]
Line_2 $$ public void testRevisionTypeEqQuery() -->Line_3 $$ List results = getAuditReader().createQuery().forRevisionsOfEntity(StrIntTestEntity.class, true, true).add(AuditEntity.id().eq(id1)).add(AuditEntity.revisionType().eq(RevisionType.MOD)).getResultList()[ CD ]
