Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_18 $$ List list = s.createQuery("from Up up order by up.id2 asc").list()[ CD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_16 $$ s = openSession()[ CD ]
Line_18 $$ List list = s.createQuery("from Up up order by up.id2 asc").list()-->Line_20 $$ assertFalse(list.get(0) instanceof Down)[ FD ]
Line_3 $$ Session s = openSession()-->Line_12 $$ s.save(up)[ FD ]
Line_18 $$ List list = s.createQuery("from Up up order by up.id2 asc").list()-->Line_26 $$ assertTrue(list.get(0) instanceof Down)[ FD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_6 $$ up.setId1("foo")[ CD ]
Line_3 $$ Session s = openSession()-->Line_27 $$ for (Object entity : s.createQuery("from Up").list()) [ FD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_19 $$ assertTrue(list.size() == 2)[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_30 $$ t.commit()[ FD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_26 $$ assertTrue(list.get(0) instanceof Down)[ CD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_12 $$ s.save(up)[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_17 $$ t = s.beginTransaction()[ FD ]
Line_16 $$ s = openSession()-->Line_18 $$ List list = s.createQuery("from Up up order by up.id2 asc").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_18 $$ List list = s.createQuery("from Up up order by up.id2 asc").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_15 $$ s.close()[ FD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_7 $$ up.setId2(123l)[ CD ]
Line_5 $$ Up up = new Up()-->Line_7 $$ up.setId2(123l)[ FD ]
Line_16 $$ s = openSession()-->Line_17 $$ t = s.beginTransaction()[ FD ]
Line_16 $$ s = openSession()-->Line_28 $$ s.delete(entity)[ FD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_31 $$ s.close()[ CD ]
Line_5 $$ Up up = new Up()-->Line_6 $$ up.setId1("foo")[ FD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_24 $$ assertTrue(list.get(0) instanceof Down)[ CD ]
Line_27 $$ for (Object entity : s.createQuery("from Up").list()) -->Line_28 $$ s.delete(entity)[ FD ]
Line_22 $$ list = s.createQuery("from Down down").list()-->Line_23 $$ assertTrue(list.size() == 1)[ FD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_21 $$ assertTrue(list.get(1) instanceof Down)[ CD ]
Line_3 $$ Session s = openSession()-->Line_28 $$ s.delete(entity)[ FD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_14 $$ t.commit()[ CD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_23 $$ assertTrue(list.size() == 1)[ CD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_11 $$ down.setValue(12312312l)[ CD ]
Line_16 $$ s = openSession()-->Line_22 $$ list = s.createQuery("from Down down").list()[ FD ]
Line_18 $$ List list = s.createQuery("from Up up order by up.id2 asc").list()-->Line_23 $$ assertTrue(list.size() == 1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_31 $$ s.close()[ FD ]
Line_16 $$ s = openSession()-->Line_27 $$ for (Object entity : s.createQuery("from Up").list()) [ FD ]
Line_3 $$ Session s = openSession()-->Line_17 $$ t = s.beginTransaction()[ FD ]
Line_8 $$ Down down = new Down()-->Line_11 $$ down.setValue(12312312l)[ FD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_22 $$ list = s.createQuery("from Down down").list()[ CD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_17 $$ t = s.beginTransaction()[ CD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_25 $$ assertTrue(list.size() == 1)[ CD ]
Line_22 $$ list = s.createQuery("from Down down").list()-->Line_25 $$ assertTrue(list.size() == 1)[ FD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_3 $$ Session s = openSession()[ CD ]
Line_5 $$ Up up = new Up()-->Line_12 $$ s.save(up)[ FD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_20 $$ assertFalse(list.get(0) instanceof Down)[ CD ]
Line_22 $$ list = s.createQuery("from Down down").list()-->Line_24 $$ assertTrue(list.get(0) instanceof Down)[ FD ]
Line_17 $$ t = s.beginTransaction()-->Line_30 $$ t.commit()[ FD ]
Line_16 $$ s = openSession()-->Line_31 $$ s.close()[ FD ]
Line_8 $$ Down down = new Down()-->Line_10 $$ down.setId2(321l)[ FD ]
Line_8 $$ Down down = new Down()-->Line_13 $$ s.save(down)[ FD ]
Line_22 $$ list = s.createQuery("from Down down").list()-->Line_26 $$ assertTrue(list.get(0) instanceof Down)[ FD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_4 $$ Transaction t = s.beginTransaction()[ CD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_10 $$ down.setId2(321l)[ CD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction t = s.beginTransaction()[ FD ]
Line_18 $$ List list = s.createQuery("from Up up order by up.id2 asc").list()-->Line_21 $$ assertTrue(list.get(1) instanceof Down)[ FD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_30 $$ t.commit()[ CD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_15 $$ s.close()[ CD ]
Line_18 $$ List list = s.createQuery("from Up up order by up.id2 asc").list()-->Line_19 $$ assertTrue(list.size() == 2)[ FD ]
Line_18 $$ List list = s.createQuery("from Up up order by up.id2 asc").list()-->Line_24 $$ assertTrue(list.get(0) instanceof Down)[ FD ]
Line_18 $$ List list = s.createQuery("from Up up order by up.id2 asc").list()-->Line_25 $$ assertTrue(list.size() == 1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_16 $$ s = openSession()[ FD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_5 $$ Up up = new Up()[ CD ]
Line_3 $$ Session s = openSession()-->Line_13 $$ s.save(down)[ FD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_13 $$ s.save(down)[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_14 $$ t.commit()[ FD ]
Line_8 $$ Down down = new Down()-->Line_9 $$ down.setId1("foo")[ FD ]
Line_18 $$ List list = s.createQuery("from Up up order by up.id2 asc").list()-->Line_22 $$ list = s.createQuery("from Down down").list()[ FD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_9 $$ down.setId1("foo")[ CD ]
Line_2 $$ public void testNotNullDiscriminator() throws Exception -->Line_8 $$ Down down = new Down()[ CD ]
Line_3 $$ Session s = openSession()-->Line_22 $$ list = s.createQuery("from Down down").list()[ FD ]
