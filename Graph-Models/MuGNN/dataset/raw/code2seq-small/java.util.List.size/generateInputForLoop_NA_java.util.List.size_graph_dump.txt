Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_3 $$ Variable page = scope.getVariable("page")[ FD ]
Line_5 $$ Variable sampleWeightVariable = null-->Line_7 $$ sampleWeightVariable = scope.declareVariable(long.class, "sampleWeight")[ FD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_6 $$ if (sampleWeightsBlock != null) [ CD ]
Line_3 $$ Variable page = scope.getVariable("page")-->Line_10 $$ ByteCodeBlock block = new ByteCodeBlock().append(page).invokeVirtual(Page.class, "getPositionCount", int.class).putVariable(rowsVariable).initializeVariable(positionVariable)[ FD ]
Line_4 $$ Variable positionVariable = scope.declareVariable(int.class, "position")-->Line_41 $$ block.append(new ForLoop().initialize(new ByteCodeBlock().putVariable(positionVariable, 0)).condition(new ByteCodeBlock().getVariable(positionVariable).getVariable(rowsVariable).invokeStatic(CompilerOperations.class, "lessThan", boolean.class, int.class, int.class)).update(new ByteCodeBlock().incrementVariable(positionVariable, (byte) 1)).body(loopBody))[ FD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_4 $$ Variable positionVariable = scope.declareVariable(int.class, "position")[ FD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_9 $$ Variable rowsVariable = scope.declareVariable(int.class, "rows")[ FD ]
Line_16 $$ for (ParameterMetadata metadata : parameterMetadatas) -->Line_17 $$ switch(metadata.getParameterType()) [ FD ]
Line_10 $$ ByteCodeBlock block = new ByteCodeBlock().append(page).invokeVirtual(Page.class, "getPositionCount", int.class).putVariable(rowsVariable).initializeVariable(positionVariable)-->Line_41 $$ block.append(new ForLoop().initialize(new ByteCodeBlock().putVariable(positionVariable, 0)).condition(new ByteCodeBlock().getVariable(positionVariable).getVariable(rowsVariable).invokeStatic(CompilerOperations.class, "lessThan", boolean.class, int.class, int.class)).update(new ByteCodeBlock().incrementVariable(positionVariable, (byte) 1)).body(loopBody))[ FD ]
Line_36 $$ loopBody = generateComputeSampleWeightAndCheckGreaterThanZero(loopBody, sampleWeightVariable, masksBlock, sampleWeightsBlock, positionVariable)-->Line_41 $$ block.append(new ForLoop().initialize(new ByteCodeBlock().putVariable(positionVariable, 0)).condition(new ByteCodeBlock().getVariable(positionVariable).getVariable(rowsVariable).invokeStatic(CompilerOperations.class, "lessThan", boolean.class, int.class, int.class)).update(new ByteCodeBlock().incrementVariable(positionVariable, (byte) 1)).body(loopBody))[ FD ]
Line_9 $$ Variable rowsVariable = scope.declareVariable(int.class, "rows")-->Line_41 $$ block.append(new ForLoop().initialize(new ByteCodeBlock().putVariable(positionVariable, 0)).condition(new ByteCodeBlock().getVariable(positionVariable).getVariable(rowsVariable).invokeStatic(CompilerOperations.class, "lessThan", boolean.class, int.class, int.class)).update(new ByteCodeBlock().incrementVariable(positionVariable, (byte) 1)).body(loopBody))[ FD ]
Line_10 $$ ByteCodeBlock block = new ByteCodeBlock().append(page).invokeVirtual(Page.class, "getPositionCount", int.class).putVariable(rowsVariable).initializeVariable(positionVariable)-->Line_12 $$ block.initializeVariable(sampleWeightVariable)[ FD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_28 $$ checkState(nullable.size() == parameterVariables.size(), "Number of parameters does not match")[ CD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_39 $$ loopBody = new IfStatement("if(testMask(%s, position))", masksBlock.getName()).condition(new ByteCodeBlock().getVariable(masksBlock).getVariable(positionVariable).invokeStatic(CompilerOperations.class, "testMask", boolean.class, Block.class, int.class)).ifTrue(loopBody)[ FD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_3 $$ Variable page = scope.getVariable("page")[ CD ]
Line_7 $$ sampleWeightVariable = scope.declareVariable(long.class, "sampleWeight")-->Line_14 $$ ByteCodeNode loopBody = generateInvokeInputFunction(scope, stateField, positionVariable, sampleWeightVariable, parameterVariables, parameterMetadatas, inputFunction, callSiteBinder, grouped)[ FD ]
Line_14 $$ ByteCodeNode loopBody = generateInvokeInputFunction(scope, stateField, positionVariable, sampleWeightVariable, parameterVariables, parameterMetadatas, inputFunction, callSiteBinder, grouped)-->Line_36 $$ loopBody = generateComputeSampleWeightAndCheckGreaterThanZero(loopBody, sampleWeightVariable, masksBlock, sampleWeightsBlock, positionVariable)[ FD ]
Line_35 $$ if (sampleWeightVariable != null) -->Line_39 $$ loopBody = new IfStatement("if(testMask(%s, position))", masksBlock.getName()).condition(new ByteCodeBlock().getVariable(masksBlock).getVariable(positionVariable).invokeStatic(CompilerOperations.class, "testMask", boolean.class, Block.class, int.class)).ifTrue(loopBody)[ CD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_41 $$ block.append(new ForLoop().initialize(new ByteCodeBlock().putVariable(positionVariable, 0)).condition(new ByteCodeBlock().getVariable(positionVariable).getVariable(rowsVariable).invokeStatic(CompilerOperations.class, "lessThan", boolean.class, int.class, int.class)).update(new ByteCodeBlock().incrementVariable(positionVariable, (byte) 1)).body(loopBody))[ CD ]
Line_14 $$ ByteCodeNode loopBody = generateInvokeInputFunction(scope, stateField, positionVariable, sampleWeightVariable, parameterVariables, parameterMetadatas, inputFunction, callSiteBinder, grouped)-->Line_32 $$ loopBody = new IfStatement("if(!%s.isNull(position))", variableDefinition.getName()).condition(new ByteCodeBlock().getVariable(variableDefinition).getVariable(positionVariable).invokeInterface(Block.class, "isNull", boolean.class, int.class)).ifFalse(loopBody)[ FD ]
Line_7 $$ sampleWeightVariable = scope.declareVariable(long.class, "sampleWeight")-->Line_36 $$ loopBody = generateComputeSampleWeightAndCheckGreaterThanZero(loopBody, sampleWeightVariable, masksBlock, sampleWeightsBlock, positionVariable)[ FD ]
Line_29 $$ for (int i = 0; i < parameterVariables.size(); i++) -->Line_30 $$ if (!nullable.get(i)) [ FD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_29 $$ for (int i = 0; i < parameterVariables.size(); i++) [ FD ]
Line_9 $$ Variable rowsVariable = scope.declareVariable(int.class, "rows")-->Line_10 $$ ByteCodeBlock block = new ByteCodeBlock().append(page).invokeVirtual(Page.class, "getPositionCount", int.class).putVariable(rowsVariable).initializeVariable(positionVariable)[ FD ]
Line_15 $$ List<Boolean> nullable = new ArrayList()-->Line_28 $$ checkState(nullable.size() == parameterVariables.size(), "Number of parameters does not match")[ FD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_35 $$ if (sampleWeightVariable != null) [ CD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_10 $$ ByteCodeBlock block = new ByteCodeBlock().append(page).invokeVirtual(Page.class, "getPositionCount", int.class).putVariable(rowsVariable).initializeVariable(positionVariable)[ CD ]
Line_7 $$ sampleWeightVariable = scope.declareVariable(long.class, "sampleWeight")-->Line_12 $$ block.initializeVariable(sampleWeightVariable)[ FD ]
Line_6 $$ if (sampleWeightsBlock != null) -->Line_7 $$ sampleWeightVariable = scope.declareVariable(long.class, "sampleWeight")[ CD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_15 $$ List<Boolean> nullable = new ArrayList()[ CD ]
Line_5 $$ Variable sampleWeightVariable = null-->Line_35 $$ if (sampleWeightVariable != null) [ FD ]
Line_7 $$ sampleWeightVariable = scope.declareVariable(long.class, "sampleWeight")-->Line_35 $$ if (sampleWeightVariable != null) [ FD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_9 $$ Variable rowsVariable = scope.declareVariable(int.class, "rows")[ CD ]
Line_5 $$ Variable sampleWeightVariable = null-->Line_11 $$ if (sampleWeightVariable != null) [ FD ]
Line_4 $$ Variable positionVariable = scope.declareVariable(int.class, "position")-->Line_39 $$ loopBody = new IfStatement("if(testMask(%s, position))", masksBlock.getName()).condition(new ByteCodeBlock().getVariable(masksBlock).getVariable(positionVariable).invokeStatic(CompilerOperations.class, "testMask", boolean.class, Block.class, int.class)).ifTrue(loopBody)[ FD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_28 $$ checkState(nullable.size() == parameterVariables.size(), "Number of parameters does not match")[ FD ]
Line_30 $$ if (!nullable.get(i)) -->Line_32 $$ loopBody = new IfStatement("if(!%s.isNull(position))", variableDefinition.getName()).condition(new ByteCodeBlock().getVariable(variableDefinition).getVariable(positionVariable).invokeInterface(Block.class, "isNull", boolean.class, int.class)).ifFalse(loopBody)[ CD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_7 $$ sampleWeightVariable = scope.declareVariable(long.class, "sampleWeight")[ FD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_5 $$ Variable sampleWeightVariable = null[ CD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_14 $$ ByteCodeNode loopBody = generateInvokeInputFunction(scope, stateField, positionVariable, sampleWeightVariable, parameterVariables, parameterMetadatas, inputFunction, callSiteBinder, grouped)[ CD ]
Line_14 $$ ByteCodeNode loopBody = generateInvokeInputFunction(scope, stateField, positionVariable, sampleWeightVariable, parameterVariables, parameterMetadatas, inputFunction, callSiteBinder, grouped)-->Line_41 $$ block.append(new ForLoop().initialize(new ByteCodeBlock().putVariable(positionVariable, 0)).condition(new ByteCodeBlock().getVariable(positionVariable).getVariable(rowsVariable).invokeStatic(CompilerOperations.class, "lessThan", boolean.class, int.class, int.class)).update(new ByteCodeBlock().incrementVariable(positionVariable, (byte) 1)).body(loopBody))[ FD ]
Line_39 $$ loopBody = new IfStatement("if(testMask(%s, position))", masksBlock.getName()).condition(new ByteCodeBlock().getVariable(masksBlock).getVariable(positionVariable).invokeStatic(CompilerOperations.class, "testMask", boolean.class, Block.class, int.class)).ifTrue(loopBody)-->Line_41 $$ block.append(new ForLoop().initialize(new ByteCodeBlock().putVariable(positionVariable, 0)).condition(new ByteCodeBlock().getVariable(positionVariable).getVariable(rowsVariable).invokeStatic(CompilerOperations.class, "lessThan", boolean.class, int.class, int.class)).update(new ByteCodeBlock().incrementVariable(positionVariable, (byte) 1)).body(loopBody))[ FD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_36 $$ loopBody = generateComputeSampleWeightAndCheckGreaterThanZero(loopBody, sampleWeightVariable, masksBlock, sampleWeightsBlock, positionVariable)[ FD ]
Line_4 $$ Variable positionVariable = scope.declareVariable(int.class, "position")-->Line_10 $$ ByteCodeBlock block = new ByteCodeBlock().append(page).invokeVirtual(Page.class, "getPositionCount", int.class).putVariable(rowsVariable).initializeVariable(positionVariable)[ FD ]
Line_4 $$ Variable positionVariable = scope.declareVariable(int.class, "position")-->Line_14 $$ ByteCodeNode loopBody = generateInvokeInputFunction(scope, stateField, positionVariable, sampleWeightVariable, parameterVariables, parameterMetadatas, inputFunction, callSiteBinder, grouped)[ FD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_31 $$ Variable variableDefinition = parameterVariables.get(i)[ FD ]
Line_31 $$ Variable variableDefinition = parameterVariables.get(i)-->Line_32 $$ loopBody = new IfStatement("if(!%s.isNull(position))", variableDefinition.getName()).condition(new ByteCodeBlock().getVariable(variableDefinition).getVariable(positionVariable).invokeInterface(Block.class, "isNull", boolean.class, int.class)).ifFalse(loopBody)[ FD ]
Line_30 $$ if (!nullable.get(i)) -->Line_31 $$ Variable variableDefinition = parameterVariables.get(i)[ CD ]
Line_15 $$ List<Boolean> nullable = new ArrayList()-->Line_30 $$ if (!nullable.get(i)) [ FD ]
Line_32 $$ loopBody = new IfStatement("if(!%s.isNull(position))", variableDefinition.getName()).condition(new ByteCodeBlock().getVariable(variableDefinition).getVariable(positionVariable).invokeInterface(Block.class, "isNull", boolean.class, int.class)).ifFalse(loopBody)-->Line_41 $$ block.append(new ForLoop().initialize(new ByteCodeBlock().putVariable(positionVariable, 0)).condition(new ByteCodeBlock().getVariable(positionVariable).getVariable(rowsVariable).invokeStatic(CompilerOperations.class, "lessThan", boolean.class, int.class, int.class)).update(new ByteCodeBlock().incrementVariable(positionVariable, (byte) 1)).body(loopBody))[ FD ]
Line_7 $$ sampleWeightVariable = scope.declareVariable(long.class, "sampleWeight")-->Line_11 $$ if (sampleWeightVariable != null) [ FD ]
Line_11 $$ if (sampleWeightVariable != null) -->Line_12 $$ block.initializeVariable(sampleWeightVariable)[ CD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_29 $$ for (int i = 0; i < parameterVariables.size(); i++) [ CD ]
Line_36 $$ loopBody = generateComputeSampleWeightAndCheckGreaterThanZero(loopBody, sampleWeightVariable, masksBlock, sampleWeightsBlock, positionVariable)-->Line_39 $$ loopBody = new IfStatement("if(testMask(%s, position))", masksBlock.getName()).condition(new ByteCodeBlock().getVariable(masksBlock).getVariable(positionVariable).invokeStatic(CompilerOperations.class, "testMask", boolean.class, Block.class, int.class)).ifTrue(loopBody)[ FD ]
Line_15 $$ List<Boolean> nullable = new ArrayList()-->Line_20 $$ nullable.add(false)[ FD ]
Line_29 $$ for (int i = 0; i < parameterVariables.size(); i++) -->Line_30 $$ if (!nullable.get(i)) [ CD ]
Line_4 $$ Variable positionVariable = scope.declareVariable(int.class, "position")-->Line_36 $$ loopBody = generateComputeSampleWeightAndCheckGreaterThanZero(loopBody, sampleWeightVariable, masksBlock, sampleWeightsBlock, positionVariable)[ FD ]
Line_5 $$ Variable sampleWeightVariable = null-->Line_12 $$ block.initializeVariable(sampleWeightVariable)[ FD ]
Line_15 $$ List<Boolean> nullable = new ArrayList()-->Line_23 $$ nullable.add(true)[ FD ]
Line_5 $$ Variable sampleWeightVariable = null-->Line_36 $$ loopBody = generateComputeSampleWeightAndCheckGreaterThanZero(loopBody, sampleWeightVariable, masksBlock, sampleWeightsBlock, positionVariable)[ FD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_6 $$ if (sampleWeightsBlock != null) [ FD ]
Line_4 $$ Variable positionVariable = scope.declareVariable(int.class, "position")-->Line_32 $$ loopBody = new IfStatement("if(!%s.isNull(position))", variableDefinition.getName()).condition(new ByteCodeBlock().getVariable(variableDefinition).getVariable(positionVariable).invokeInterface(Block.class, "isNull", boolean.class, int.class)).ifFalse(loopBody)[ FD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_14 $$ ByteCodeNode loopBody = generateInvokeInputFunction(scope, stateField, positionVariable, sampleWeightVariable, parameterVariables, parameterMetadatas, inputFunction, callSiteBinder, grouped)[ FD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_4 $$ Variable positionVariable = scope.declareVariable(int.class, "position")[ CD ]
Line_29 $$ for (int i = 0; i < parameterVariables.size(); i++) -->Line_31 $$ Variable variableDefinition = parameterVariables.get(i)[ FD ]
Line_35 $$ if (sampleWeightVariable != null) -->Line_36 $$ loopBody = generateComputeSampleWeightAndCheckGreaterThanZero(loopBody, sampleWeightVariable, masksBlock, sampleWeightsBlock, positionVariable)[ CD ]
Line_32 $$ loopBody = new IfStatement("if(!%s.isNull(position))", variableDefinition.getName()).condition(new ByteCodeBlock().getVariable(variableDefinition).getVariable(positionVariable).invokeInterface(Block.class, "isNull", boolean.class, int.class)).ifFalse(loopBody)-->Line_39 $$ loopBody = new IfStatement("if(testMask(%s, position))", masksBlock.getName()).condition(new ByteCodeBlock().getVariable(masksBlock).getVariable(positionVariable).invokeStatic(CompilerOperations.class, "testMask", boolean.class, Block.class, int.class)).ifTrue(loopBody)[ FD ]
Line_14 $$ ByteCodeNode loopBody = generateInvokeInputFunction(scope, stateField, positionVariable, sampleWeightVariable, parameterVariables, parameterMetadatas, inputFunction, callSiteBinder, grouped)-->Line_39 $$ loopBody = new IfStatement("if(testMask(%s, position))", masksBlock.getName()).condition(new ByteCodeBlock().getVariable(masksBlock).getVariable(positionVariable).invokeStatic(CompilerOperations.class, "testMask", boolean.class, Block.class, int.class)).ifTrue(loopBody)[ FD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_11 $$ if (sampleWeightVariable != null) [ CD ]
Line_32 $$ loopBody = new IfStatement("if(!%s.isNull(position))", variableDefinition.getName()).condition(new ByteCodeBlock().getVariable(variableDefinition).getVariable(positionVariable).invokeInterface(Block.class, "isNull", boolean.class, int.class)).ifFalse(loopBody)-->Line_36 $$ loopBody = generateComputeSampleWeightAndCheckGreaterThanZero(loopBody, sampleWeightVariable, masksBlock, sampleWeightsBlock, positionVariable)[ FD ]
Line_2 $$ private static ByteCodeBlock generateInputForLoop(FieldDefinition stateField, List<ParameterMetadata> parameterMetadatas, MethodHandle inputFunction, Scope scope, List<Variable> parameterVariables, Variable masksBlock, @Nullable Variable sampleWeightsBlock, CallSiteBinder callSiteBinder, boolean grouped) -->Line_42 $$ return block[ CD ]
Line_5 $$ Variable sampleWeightVariable = null-->Line_14 $$ ByteCodeNode loopBody = generateInvokeInputFunction(scope, stateField, positionVariable, sampleWeightVariable, parameterVariables, parameterMetadatas, inputFunction, callSiteBinder, grouped)[ FD ]
