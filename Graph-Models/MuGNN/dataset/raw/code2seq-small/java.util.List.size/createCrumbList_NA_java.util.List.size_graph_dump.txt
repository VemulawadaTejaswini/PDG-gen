Line_7 $$ final LinkedList<Crumb> result = new LinkedList<Crumb>()-->Line_63 $$ for (int i = result.size() - 1; i >= 0; i--) [ FD ]
Line_30 $$ if (dummyWidth > 0) -->Line_31 $$ final DummyCrumb dummy = new DummyCrumb(dummyWidth)[ CD ]
Line_12 $$ for (int i = elements.size() - 1; i >= 0; i--) -->Line_16 $$ final String s = element.getDisplayText()[ CD ]
Line_31 $$ final DummyCrumb dummy = new DummyCrumb(dummyWidth)-->Line_35 $$ result.addLast(dummy)[ FD ]
Line_7 $$ final LinkedList<Crumb> result = new LinkedList<Crumb>()-->Line_40 $$ result.addFirst(forward)[ FD ]
Line_4 $$ if (elements.size() == 0) -->Line_5 $$ return null[ CD ]
Line_32 $$ if (rightmostCrumb != null) -->Line_33 $$ result.add(result.indexOf(rightmostCrumb) + 1, dummy)[ CD ]
Line_20 $$ Crumb first = null-->Line_42 $$ result.addFirst(first)[ FD ]
Line_12 $$ for (int i = elements.size() - 1; i >= 0; i--) -->Line_15 $$ final BreadcrumbsItem element = elements.get(i)[ FD ]
Line_9 $$ Crumb rightmostCrumb = null-->Line_33 $$ result.add(result.indexOf(rightmostCrumb) + 1, dummy)[ FD ]
Line_20 $$ Crumb first = null-->Line_22 $$ first = result.removeFirst()[ FD ]
Line_9 $$ Crumb rightmostCrumb = null-->Line_32 $$ if (rightmostCrumb != null) [ FD ]
Line_14 $$ final NavigationCrumb backward = new NavigationCrumb(this, fm, false, DEFAULT_PAINTER)-->Line_27 $$ screenWidth += backward.getWidth() - myOffset[ FD ]
Line_19 $$ if (screenWidth + d.width > width) -->Line_30 $$ if (dummyWidth > 0) [ CD ]
Line_22 $$ first = result.removeFirst()-->Line_23 $$ screenWidth -= first.getWidth()[ FD ]
Line_22 $$ first = result.removeFirst()-->Line_43 $$ screenWidth += first.getWidth()[ FD ]
Line_57 $$ for (final Crumb each : result) -->Line_58 $$ each.setOffset(offset)[ FD ]
Line_41 $$ if (first != null) -->Line_43 $$ screenWidth += first.getWidth()[ CD ]
Line_12 $$ for (int i = elements.size() - 1; i >= 0; i--) -->Line_15 $$ final BreadcrumbsItem element = elements.get(i)[ CD ]
Line_15 $$ final BreadcrumbsItem element = elements.get(i)-->Line_16 $$ final String s = element.getDisplayText()[ FD ]
Line_19 $$ if (screenWidth + d.width > width) -->Line_21 $$ if (screenWidth + backward.getWidth() > width && !result.isEmpty()) [ CD ]
Line_12 $$ for (int i = elements.size() - 1; i >= 0; i--) -->Line_17 $$ final Dimension d = DEFAULT_PAINTER.getSize(s, fm, width - forward.getWidth() - backward.getWidth())[ CD ]
Line_14 $$ final NavigationCrumb backward = new NavigationCrumb(this, fm, false, DEFAULT_PAINTER)-->Line_17 $$ final Dimension d = DEFAULT_PAINTER.getSize(s, fm, width - forward.getWidth() - backward.getWidth())[ FD ]
Line_19 $$ if (screenWidth + d.width > width) -->Line_27 $$ screenWidth += backward.getWidth() - myOffset[ CD ]
Line_43 $$ screenWidth += first.getWidth()-->Line_48 $$ screenWidth += d.width[ FD ]
Line_63 $$ for (int i = result.size() - 1; i >= 0; i--) -->Line_64 $$ final Crumb c = result.get(i)[ CD ]
Line_27 $$ screenWidth += backward.getWidth() - myOffset-->Line_48 $$ screenWidth += d.width[ FD ]
Line_21 $$ if (screenWidth + backward.getWidth() > width && !result.isEmpty()) -->Line_22 $$ first = result.removeFirst()[ CD ]
Line_7 $$ final LinkedList<Crumb> result = new LinkedList<Crumb>()-->Line_33 $$ result.add(result.indexOf(rightmostCrumb) + 1, dummy)[ FD ]
Line_45 $$ rightmostCrumb = first != null ? first : crumb-->Line_33 $$ result.add(result.indexOf(rightmostCrumb) + 1, dummy)[ FD ]
Line_31 $$ final DummyCrumb dummy = new DummyCrumb(dummyWidth)-->Line_33 $$ result.add(result.indexOf(rightmostCrumb) + 1, dummy)[ FD ]
Line_65 $$ if (!(c instanceof DummyCrumb)) -->Line_66 $$ c.setSelected(true)[ CD ]
Line_23 $$ screenWidth -= first.getWidth()-->Line_43 $$ screenWidth += first.getWidth()[ FD ]
Line_7 $$ final LinkedList<Crumb> result = new LinkedList<Crumb>()-->Line_47 $$ result.addFirst(crumb)[ FD ]
Line_23 $$ screenWidth -= first.getWidth()-->Line_48 $$ screenWidth += d.width[ FD ]
Line_63 $$ for (int i = result.size() - 1; i >= 0; i--) -->Line_65 $$ if (!(c instanceof DummyCrumb)) [ CD ]
Line_9 $$ Crumb rightmostCrumb = null-->Line_45 $$ rightmostCrumb = first != null ? first : crumb[ FD ]
Line_32 $$ if (rightmostCrumb != null) -->Line_35 $$ result.addLast(dummy)[ CD ]
Line_22 $$ first = result.removeFirst()-->Line_42 $$ result.addFirst(first)[ FD ]
Line_7 $$ final LinkedList<Crumb> result = new LinkedList<Crumb>()-->Line_42 $$ result.addFirst(first)[ FD ]
Line_13 $$ final NavigationCrumb forward = new NavigationCrumb(this, fm, true, DEFAULT_PAINTER)-->Line_17 $$ final Dimension d = DEFAULT_PAINTER.getSize(s, fm, width - forward.getWidth() - backward.getWidth())[ FD ]
Line_23 $$ screenWidth -= first.getWidth()-->Line_27 $$ screenWidth += backward.getWidth() - myOffset[ FD ]
Line_8 $$ int screenWidth = 0-->Line_48 $$ screenWidth += d.width[ FD ]
Line_19 $$ if (screenWidth + d.width > width) -->Line_41 $$ if (first != null) [ CD ]
Line_41 $$ if (first != null) -->Line_42 $$ result.addFirst(first)[ CD ]
Line_7 $$ final LinkedList<Crumb> result = new LinkedList<Crumb>()-->Line_64 $$ final Crumb c = result.get(i)[ FD ]
Line_19 $$ if (screenWidth + d.width > width) -->Line_20 $$ Crumb first = null[ CD ]
Line_64 $$ final Crumb c = result.get(i)-->Line_66 $$ c.setSelected(true)[ FD ]
Line_12 $$ for (int i = elements.size() - 1; i >= 0; i--) -->Line_14 $$ final NavigationCrumb backward = new NavigationCrumb(this, fm, false, DEFAULT_PAINTER)[ CD ]
Line_21 $$ if (screenWidth + backward.getWidth() > width && !result.isEmpty()) -->Line_23 $$ screenWidth -= first.getWidth()[ CD ]
Line_30 $$ if (dummyWidth > 0) -->Line_32 $$ if (rightmostCrumb != null) [ CD ]
Line_13 $$ final NavigationCrumb forward = new NavigationCrumb(this, fm, true, DEFAULT_PAINTER)-->Line_40 $$ result.addFirst(forward)[ FD ]
Line_14 $$ final NavigationCrumb backward = new NavigationCrumb(this, fm, false, DEFAULT_PAINTER)-->Line_21 $$ if (screenWidth + backward.getWidth() > width && !result.isEmpty()) [ FD ]
Line_8 $$ int screenWidth = 0-->Line_23 $$ screenWidth -= first.getWidth()[ FD ]
Line_7 $$ final LinkedList<Crumb> result = new LinkedList<Crumb>()-->Line_21 $$ if (screenWidth + backward.getWidth() > width && !result.isEmpty()) [ FD ]
Line_22 $$ first = result.removeFirst()-->Line_41 $$ if (first != null) [ FD ]
Line_57 $$ for (final Crumb each : result) -->Line_59 $$ offset += each.getWidth()[ FD ]
Line_12 $$ for (int i = elements.size() - 1; i >= 0; i--) -->Line_19 $$ if (screenWidth + d.width > width) [ CD ]
Line_20 $$ Crumb first = null-->Line_43 $$ screenWidth += first.getWidth()[ FD ]
Line_12 $$ for (int i = elements.size() - 1; i >= 0; i--) -->Line_48 $$ screenWidth += d.width[ CD ]
Line_12 $$ for (int i = elements.size() - 1; i >= 0; i--) -->Line_64 $$ final Crumb c = result.get(i)[ FD ]
Line_12 $$ for (int i = elements.size() - 1; i >= 0; i--) -->Line_63 $$ for (int i = result.size() - 1; i >= 0; i--) [ FD ]
Line_16 $$ final String s = element.getDisplayText()-->Line_17 $$ final Dimension d = DEFAULT_PAINTER.getSize(s, fm, width - forward.getWidth() - backward.getWidth())[ FD ]
Line_20 $$ Crumb first = null-->Line_23 $$ screenWidth -= first.getWidth()[ FD ]
Line_12 $$ for (int i = elements.size() - 1; i >= 0; i--) -->Line_13 $$ final NavigationCrumb forward = new NavigationCrumb(this, fm, true, DEFAULT_PAINTER)[ CD ]
Line_8 $$ int screenWidth = 0-->Line_43 $$ screenWidth += first.getWidth()[ FD ]
Line_27 $$ screenWidth += backward.getWidth() - myOffset-->Line_43 $$ screenWidth += first.getWidth()[ FD ]
Line_45 $$ rightmostCrumb = first != null ? first : crumb-->Line_32 $$ if (rightmostCrumb != null) [ FD ]
Line_12 $$ for (int i = elements.size() - 1; i >= 0; i--) -->Line_18 $$ final Crumb crumb = new Crumb(this, s, d.width + EXTRA_WIDTH, element)[ CD ]
Line_7 $$ final LinkedList<Crumb> result = new LinkedList<Crumb>()-->Line_35 $$ result.addLast(dummy)[ FD ]
Line_19 $$ if (screenWidth + d.width > width) -->Line_45 $$ rightmostCrumb = first != null ? first : crumb[ CD ]
Line_18 $$ final Crumb crumb = new Crumb(this, s, d.width + EXTRA_WIDTH, element)-->Line_47 $$ result.addFirst(crumb)[ FD ]
Line_20 $$ Crumb first = null-->Line_41 $$ if (first != null) [ FD ]
Line_8 $$ int screenWidth = 0-->Line_27 $$ screenWidth += backward.getWidth() - myOffset[ FD ]
Line_63 $$ for (int i = result.size() - 1; i >= 0; i--) -->Line_64 $$ final Crumb c = result.get(i)[ FD ]
Line_19 $$ if (screenWidth + d.width > width) -->Line_40 $$ result.addFirst(forward)[ CD ]
Line_12 $$ for (int i = elements.size() - 1; i >= 0; i--) -->Line_47 $$ result.addFirst(crumb)[ CD ]
Line_7 $$ final LinkedList<Crumb> result = new LinkedList<Crumb>()-->Line_22 $$ first = result.removeFirst()[ FD ]
