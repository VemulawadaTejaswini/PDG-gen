Line_16 $$ Long categoryId = categoryIds.get(i)-->Line_17 $$ qPos.add(categoryId)[ FD ]
Line_2 $$ protected int doCountByG_C(long groupId, List<Long> categoryIds, boolean inlineSQLHelper) -->Line_15 $$ for (int i = 0; i < categoryIds.size(); i++) [ FD ]
Line_5 $$ session = openSession()-->Line_30 $$ closeSession(session)[ FD ]
Line_2 $$ protected int doCountByG_C(long groupId, List<Long> categoryIds, boolean inlineSQLHelper) -->Line_8 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, ShoppingItem.class.getName(), "ShoppingItem.itemId", groupId)[ FD ]
Line_8 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, ShoppingItem.class.getName(), "ShoppingItem.itemId", groupId)-->Line_10 $$ sql = StringUtil.replace(sql, "[$CATEGORY_ID$]", getCategoryIds(categoryIds))[ FD ]
Line_5 $$ session = openSession()-->Line_11 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_3 $$ Session session = null-->Line_11 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_6 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_C)-->Line_11 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_20 $$ if (itr.hasNext()) -->Line_21 $$ Long count = itr.next()[ CD ]
Line_11 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_13 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_7 $$ if (inlineSQLHelper) -->Line_8 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, ShoppingItem.class.getName(), "ShoppingItem.itemId", groupId)[ CD ]
Line_13 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_14 $$ qPos.add(groupId)[ FD ]
Line_10 $$ sql = StringUtil.replace(sql, "[$CATEGORY_ID$]", getCategoryIds(categoryIds))-->Line_11 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_19 $$ Iterator<Long> itr = q.iterate()-->Line_21 $$ Long count = itr.next()[ FD ]
Line_20 $$ if (itr.hasNext()) -->Line_22 $$ if (count != null) [ CD ]
Line_15 $$ for (int i = 0; i < categoryIds.size(); i++) -->Line_16 $$ Long categoryId = categoryIds.get(i)[ FD ]
Line_6 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_C)-->Line_10 $$ sql = StringUtil.replace(sql, "[$CATEGORY_ID$]", getCategoryIds(categoryIds))[ FD ]
Line_21 $$ Long count = itr.next()-->Line_23 $$ return count.intValue()[ FD ]
Line_6 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_C)-->Line_8 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, ShoppingItem.class.getName(), "ShoppingItem.itemId", groupId)[ FD ]
Line_15 $$ for (int i = 0; i < categoryIds.size(); i++) -->Line_17 $$ qPos.add(categoryId)[ CD ]
Line_19 $$ Iterator<Long> itr = q.iterate()-->Line_20 $$ if (itr.hasNext()) [ FD ]
Line_13 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_17 $$ qPos.add(categoryId)[ FD ]
Line_15 $$ for (int i = 0; i < categoryIds.size(); i++) -->Line_16 $$ Long categoryId = categoryIds.get(i)[ CD ]
Line_21 $$ Long count = itr.next()-->Line_22 $$ if (count != null) [ FD ]
Line_11 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_19 $$ Iterator<Long> itr = q.iterate()[ FD ]
Line_11 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_12 $$ q.addScalar(COUNT_COLUMN_NAME, Type.LONG)[ FD ]
Line_22 $$ if (count != null) -->Line_23 $$ return count.intValue()[ CD ]
Line_2 $$ protected int doCountByG_C(long groupId, List<Long> categoryIds, boolean inlineSQLHelper) -->Line_16 $$ Long categoryId = categoryIds.get(i)[ FD ]
Line_2 $$ protected int doCountByG_C(long groupId, List<Long> categoryIds, boolean inlineSQLHelper) -->Line_10 $$ sql = StringUtil.replace(sql, "[$CATEGORY_ID$]", getCategoryIds(categoryIds))[ FD ]
Line_8 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, ShoppingItem.class.getName(), "ShoppingItem.itemId", groupId)-->Line_11 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByG_C(long groupId, List<Long> categoryIds, boolean inlineSQLHelper) -->Line_3 $$ Session session = null[ CD ]
Line_3 $$ Session session = null-->Line_5 $$ session = openSession()[ FD ]
Line_3 $$ Session session = null-->Line_30 $$ closeSession(session)[ FD ]
Line_2 $$ protected int doCountByG_C(long groupId, List<Long> categoryIds, boolean inlineSQLHelper) -->Line_14 $$ qPos.add(groupId)[ FD ]
