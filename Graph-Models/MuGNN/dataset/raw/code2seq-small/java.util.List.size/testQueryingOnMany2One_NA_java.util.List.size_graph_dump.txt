Line_5 $$ Customer cust = new Customer("Acme, Inc.")-->Line_19 $$ s.delete(cust)[ FD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_6 $$ Order order = new Order(cust, 1)[ CD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_21 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_10 $$ s.close()[ FD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_8 $$ s.save(cust)[ CD ]
Line_11 $$ s = openSession()-->Line_15 $$ s.getTransaction().commit()[ FD ]
Line_5 $$ Customer cust = new Customer("Acme, Inc.")-->Line_8 $$ s.save(cust)[ FD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_18 $$ s.beginTransaction()[ CD ]
Line_11 $$ s = openSession()-->Line_12 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_7 $$ cust.getOrders().add(order)[ CD ]
Line_3 $$ Session s = openSession()-->Line_12 $$ s.beginTransaction()[ FD ]
Line_5 $$ Customer cust = new Customer("Acme, Inc.")-->Line_13 $$ List results = s.createQuery("from Order o where o.customer.name = :name").setParameter("name", cust.getName()).list()[ FD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_5 $$ Customer cust = new Customer("Acme, Inc.")[ CD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_20 $$ s.getTransaction().commit()[ CD ]
Line_11 $$ s = openSession()-->Line_16 $$ s.close()[ FD ]
Line_11 $$ s = openSession()-->Line_20 $$ s.getTransaction().commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_16 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_13 $$ List results = s.createQuery("from Order o where o.customer.name = :name").setParameter("name", cust.getName()).list()[ FD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_3 $$ Session s = openSession()[ CD ]
Line_11 $$ s = openSession()-->Line_21 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_15 $$ s.getTransaction().commit()[ FD ]
Line_13 $$ List results = s.createQuery("from Order o where o.customer.name = :name").setParameter("name", cust.getName()).list()-->Line_14 $$ assertEquals(1, results.size())[ FD ]
Line_11 $$ s = openSession()-->Line_17 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_8 $$ s.save(cust)[ FD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_13 $$ List results = s.createQuery("from Order o where o.customer.name = :name").setParameter("name", cust.getName()).list()[ CD ]
Line_11 $$ s = openSession()-->Line_19 $$ s.delete(cust)[ FD ]
Line_17 $$ s = openSession()-->Line_21 $$ s.close()[ FD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_19 $$ s.delete(cust)[ CD ]
Line_3 $$ Session s = openSession()-->Line_19 $$ s.delete(cust)[ FD ]
Line_3 $$ Session s = openSession()-->Line_11 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_9 $$ s.getTransaction().commit()[ FD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_12 $$ s.beginTransaction()[ CD ]
Line_11 $$ s = openSession()-->Line_18 $$ s.beginTransaction()[ FD ]
Line_17 $$ s = openSession()-->Line_18 $$ s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_20 $$ s.getTransaction().commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_21 $$ s.close()[ FD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_4 $$ s.beginTransaction()[ CD ]
Line_11 $$ s = openSession()-->Line_13 $$ List results = s.createQuery("from Order o where o.customer.name = :name").setParameter("name", cust.getName()).list()[ FD ]
Line_6 $$ Order order = new Order(cust, 1)-->Line_7 $$ cust.getOrders().add(order)[ FD ]
Line_17 $$ s = openSession()-->Line_19 $$ s.delete(cust)[ FD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_10 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_16 $$ s.close()[ CD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_15 $$ s.getTransaction().commit()[ CD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_17 $$ s = openSession()[ CD ]
Line_3 $$ Session s = openSession()-->Line_17 $$ s = openSession()[ FD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_9 $$ s.getTransaction().commit()[ CD ]
Line_17 $$ s = openSession()-->Line_20 $$ s.getTransaction().commit()[ FD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_11 $$ s = openSession()[ CD ]
Line_5 $$ Customer cust = new Customer("Acme, Inc.")-->Line_7 $$ cust.getOrders().add(order)[ FD ]
Line_2 $$ public void testQueryingOnMany2One() -->Line_14 $$ assertEquals(1, results.size())[ CD ]
Line_3 $$ Session s = openSession()-->Line_18 $$ s.beginTransaction()[ FD ]
