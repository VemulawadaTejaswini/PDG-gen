Line_4 $$ try (CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(LocalProcessExecutor.class.getName(), Level.INFO)) -->Line_8 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ FD ]
Line_3 $$ NonprocessCallablePipingBackProcessCallable nonprocessCallablePipingBackProcessCallable = new NonprocessCallablePipingBackProcessCallable()-->Line_14 $$ ProcessChannel<Serializable> processChannel = _localProcessExecutor.execute(_createJPDAProcessConfig(_JPDA_OPTIONS1), nonprocessCallablePipingBackProcessCallable)[ FD ]
Line_8 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_10 $$ LogRecord logRecord = logRecords.get(0)[ FD ]
Line_6 $$ NoticeableFuture<Serializable> noticeableFuture = processChannel.getProcessNoticeableFuture()-->Line_7 $$ noticeableFuture.get()[ FD ]
Line_8 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_9 $$ Assert.assertEquals(1, logRecords.size())[ FD ]
Line_10 $$ LogRecord logRecord = logRecords.get(0)-->Line_11 $$ Assert.assertEquals("Received a nonprocess callable piping back string piping " + "back object", logRecord.getMessage())[ FD ]
Line_8 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_18 $$ Assert.assertTrue(logRecords.isEmpty())[ FD ]
Line_6 $$ NoticeableFuture<Serializable> noticeableFuture = processChannel.getProcessNoticeableFuture()-->Line_16 $$ noticeableFuture.get()[ FD ]
Line_3 $$ NonprocessCallablePipingBackProcessCallable nonprocessCallablePipingBackProcessCallable = new NonprocessCallablePipingBackProcessCallable()-->Line_5 $$ ProcessChannel<Serializable> processChannel = _localProcessExecutor.execute(_createJPDAProcessConfig(_JPDA_OPTIONS1), nonprocessCallablePipingBackProcessCallable)[ FD ]
Line_2 $$ public void testNonprocessCallablePipingBackProcessCallable() throws Exception -->Line_3 $$ NonprocessCallablePipingBackProcessCallable nonprocessCallablePipingBackProcessCallable = new NonprocessCallablePipingBackProcessCallable()[ CD ]
Line_5 $$ ProcessChannel<Serializable> processChannel = _localProcessExecutor.execute(_createJPDAProcessConfig(_JPDA_OPTIONS1), nonprocessCallablePipingBackProcessCallable)-->Line_15 $$ NoticeableFuture<Serializable> noticeableFuture = processChannel.getProcessNoticeableFuture()[ FD ]
Line_5 $$ ProcessChannel<Serializable> processChannel = _localProcessExecutor.execute(_createJPDAProcessConfig(_JPDA_OPTIONS1), nonprocessCallablePipingBackProcessCallable)-->Line_6 $$ NoticeableFuture<Serializable> noticeableFuture = processChannel.getProcessNoticeableFuture()[ FD ]
Line_4 $$ try (CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(LocalProcessExecutor.class.getName(), Level.INFO)) -->Line_17 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ FD ]
