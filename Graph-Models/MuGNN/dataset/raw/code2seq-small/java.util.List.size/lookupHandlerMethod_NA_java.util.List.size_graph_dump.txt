Line_29 $$ if (CorsUtils.isPreFlightRequest(request)) -->Line_30 $$ return PREFLIGHT_AMBIGUOUS_MATCH[ CD ]
Line_32 $$ Match secondBestMatch = matches.get(1)-->Line_33 $$ if (comparator.compare(bestMatch, secondBestMatch) == 0) [ FD ]
Line_21 $$ if (!matches.isEmpty()) -->Line_23 $$ Collections.sort(matches, comparator)[ CD ]
Line_21 $$ if (!matches.isEmpty()) -->Line_22 $$ Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))[ CD ]
Line_21 $$ if (!matches.isEmpty()) -->Line_40 $$ return bestMatch.handlerMethod[ CD ]
Line_12 $$ List<Match> matches = new ArrayList<Match>()-->Line_32 $$ Match secondBestMatch = matches.get(1)[ FD ]
Line_12 $$ List<Match> matches = new ArrayList<Match>()-->Line_21 $$ if (!matches.isEmpty()) [ FD ]
Line_28 $$ if (matches.size() > 1) -->Line_33 $$ if (comparator.compare(bestMatch, secondBestMatch) == 0) [ CD ]
Line_33 $$ if (comparator.compare(bestMatch, secondBestMatch) == 0) -->Line_34 $$ Method m1 = bestMatch.handlerMethod.getMethod()[ CD ]
Line_13 $$ List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)-->Line_15 $$ addMatchingMappings(directPathMatches, matches, request)[ FD ]
Line_12 $$ List<Match> matches = new ArrayList<Match>()-->Line_23 $$ Collections.sort(matches, comparator)[ FD ]
Line_24 $$ if (logger.isTraceEnabled()) -->Line_25 $$ logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)[ CD ]
Line_28 $$ if (matches.size() > 1) -->Line_29 $$ if (CorsUtils.isPreFlightRequest(request)) [ CD ]
Line_33 $$ if (comparator.compare(bestMatch, secondBestMatch) == 0) -->Line_35 $$ Method m2 = secondBestMatch.handlerMethod.getMethod()[ CD ]
Line_22 $$ Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))-->Line_23 $$ Collections.sort(matches, comparator)[ FD ]
Line_28 $$ if (matches.size() > 1) -->Line_32 $$ Match secondBestMatch = matches.get(1)[ CD ]
Line_21 $$ if (!matches.isEmpty()) -->Line_24 $$ if (logger.isTraceEnabled()) [ CD ]
Line_13 $$ List<T> directPathMatches = this.mappingRegistry.getMappingsByUrl(lookupPath)-->Line_14 $$ if (directPathMatches != null) [ FD ]
Line_12 $$ List<Match> matches = new ArrayList<Match>()-->Line_25 $$ logger.trace("Found " + matches.size() + " matching mapping(s) for [" + lookupPath + "] : " + matches)[ FD ]
Line_12 $$ List<Match> matches = new ArrayList<Match>()-->Line_27 $$ Match bestMatch = matches.get(0)[ FD ]
Line_21 $$ if (!matches.isEmpty()) -->Line_28 $$ if (matches.size() > 1) [ CD ]
Line_21 $$ if (!matches.isEmpty()) -->Line_42 $$ return handleNoMatch(this.mappingRegistry.getMappings().keySet(), lookupPath, request)[ CD ]
Line_27 $$ Match bestMatch = matches.get(0)-->Line_33 $$ if (comparator.compare(bestMatch, secondBestMatch) == 0) [ FD ]
Line_12 $$ List<Match> matches = new ArrayList<Match>()-->Line_28 $$ if (matches.size() > 1) [ FD ]
Line_12 $$ List<Match> matches = new ArrayList<Match>()-->Line_15 $$ addMatchingMappings(directPathMatches, matches, request)[ FD ]
Line_22 $$ Comparator<Match> comparator = new MatchComparator(getMappingComparator(request))-->Line_33 $$ if (comparator.compare(bestMatch, secondBestMatch) == 0) [ FD ]
Line_21 $$ if (!matches.isEmpty()) -->Line_27 $$ Match bestMatch = matches.get(0)[ CD ]
Line_12 $$ List<Match> matches = new ArrayList<Match>()-->Line_17 $$ if (matches.isEmpty()) [ FD ]
Line_14 $$ if (directPathMatches != null) -->Line_15 $$ addMatchingMappings(directPathMatches, matches, request)[ CD ]
Line_21 $$ if (!matches.isEmpty()) -->Line_39 $$ handleMatch(bestMatch.mapping, lookupPath, request)[ CD ]
