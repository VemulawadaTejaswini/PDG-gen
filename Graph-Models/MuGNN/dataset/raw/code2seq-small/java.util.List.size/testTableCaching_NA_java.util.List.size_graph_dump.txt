Line_4 $$ File mapFile = File.createTempFile(getClass().getSimpleName() + ".testTableCaching", ".txt")-->Line_5 $$ Files.write("a.b.c /rack1\n" + "1.2.3.4\t/rack2\n", mapFile, Charsets.UTF_8)[ FD ]
Line_11 $$ List<String> names = new ArrayList<String>()-->Line_14 $$ List<String> result1 = mapping.resolve(names)[ FD ]
Line_11 $$ List<String> names = new ArrayList<String>()-->Line_13 $$ names.add("1.2.3.4")[ FD ]
Line_8 $$ Configuration conf = new Configuration()-->Line_9 $$ conf.set(NET_TOPOLOGY_TABLE_MAPPING_FILE_KEY, mapFile.getCanonicalPath())[ FD ]
Line_11 $$ List<String> names = new ArrayList<String>()-->Line_20 $$ List<String> result2 = mapping.resolve(names)[ FD ]
Line_7 $$ TableMapping mapping = new TableMapping()-->Line_10 $$ mapping.setConf(conf)[ FD ]
Line_14 $$ List<String> result1 = mapping.resolve(names)-->Line_21 $$ assertEquals(result1, result2)[ FD ]
Line_4 $$ File mapFile = File.createTempFile(getClass().getSimpleName() + ".testTableCaching", ".txt")-->Line_6 $$ mapFile.deleteOnExit()[ FD ]
Line_14 $$ List<String> result1 = mapping.resolve(names)-->Line_15 $$ assertEquals(names.size(), result1.size())[ FD ]
Line_11 $$ List<String> names = new ArrayList<String>()-->Line_12 $$ names.add("a.b.c")[ FD ]
Line_14 $$ List<String> result1 = mapping.resolve(names)-->Line_16 $$ assertEquals("/rack1", result1.get(0))[ FD ]
Line_20 $$ List<String> result2 = mapping.resolve(names)-->Line_21 $$ assertEquals(result1, result2)[ FD ]
Line_7 $$ TableMapping mapping = new TableMapping()-->Line_14 $$ List<String> result1 = mapping.resolve(names)[ FD ]
Line_8 $$ Configuration conf = new Configuration()-->Line_10 $$ mapping.setConf(conf)[ FD ]
Line_7 $$ TableMapping mapping = new TableMapping()-->Line_20 $$ List<String> result2 = mapping.resolve(names)[ FD ]
Line_14 $$ List<String> result1 = mapping.resolve(names)-->Line_17 $$ assertEquals("/rack2", result1.get(1))[ FD ]
Line_4 $$ File mapFile = File.createTempFile(getClass().getSimpleName() + ".testTableCaching", ".txt")-->Line_9 $$ conf.set(NET_TOPOLOGY_TABLE_MAPPING_FILE_KEY, mapFile.getCanonicalPath())[ FD ]
Line_11 $$ List<String> names = new ArrayList<String>()-->Line_15 $$ assertEquals(names.size(), result1.size())[ FD ]
