Line_9 $$ Iterator<String> iter = columns.iterator()-->Line_11 $$ while (iter.hasNext()) [ FD ]
Line_2 $$ public String toStatementString() -->Line_10 $$ boolean appendComma = false[ CD ]
Line_2 $$ public String toStatementString() -->Line_4 $$ if (comment != null) [ CD ]
Line_2 $$ public String toStatementString() -->Line_7 $$ buf.append("select ")[ CD ]
Line_14 $$ if (uniqueColumns.add(alias == null ? col : alias)) -->Line_18 $$ buf.append(col)[ CD ]
Line_10 $$ boolean appendComma = false-->Line_22 $$ appendComma = true[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder(columns.size() * 10 + tableName.length() + whereTokens.size() * 10 + 10)-->Line_18 $$ buf.append(col)[ FD ]
Line_2 $$ public String toStatementString() -->Line_25 $$ buf.append(" from ").append(dialect.appendLockHint(lockOptions, tableName))[ CD ]
Line_9 $$ Iterator<String> iter = columns.iterator()-->Line_12 $$ String col = iter.next()[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder(columns.size() * 10 + tableName.length() + whereTokens.size() * 10 + 10)-->Line_35 $$ return dialect.transformSelectString(buf.toString())[ FD ]
Line_2 $$ public String toStatementString() -->Line_29 $$ if (orderBy != null) [ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder(columns.size() * 10 + tableName.length() + whereTokens.size() * 10 + 10)-->Line_25 $$ buf.append(" from ").append(dialect.appendLockHint(lockOptions, tableName))[ FD ]
Line_32 $$ if (lockOptions != null) -->Line_33 $$ buf = new StringBuilder(dialect.applyLocksToSql(buf.toString(), lockOptions, null))[ CD ]
Line_12 $$ String col = iter.next()-->Line_18 $$ buf.append(col)[ FD ]
Line_26 $$ if (whereTokens.size() > 0) -->Line_27 $$ buf.append(" where ").append(toWhereClause())[ CD ]
Line_8 $$ Set<String> uniqueColumns = new HashSet<String>()-->Line_14 $$ if (uniqueColumns.add(alias == null ? col : alias)) [ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder(columns.size() * 10 + tableName.length() + whereTokens.size() * 10 + 10)-->Line_7 $$ buf.append("select ")[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder(columns.size() * 10 + tableName.length() + whereTokens.size() * 10 + 10)-->Line_16 $$ buf.append(", ")[ FD ]
Line_2 $$ public String toStatementString() -->Line_8 $$ Set<String> uniqueColumns = new HashSet<String>()[ CD ]
Line_14 $$ if (uniqueColumns.add(alias == null ? col : alias)) -->Line_15 $$ if (appendComma) [ CD ]
Line_29 $$ if (orderBy != null) -->Line_30 $$ buf.append(orderBy)[ CD ]
Line_2 $$ public String toStatementString() -->Line_32 $$ if (lockOptions != null) [ CD ]
Line_2 $$ public String toStatementString() -->Line_35 $$ return dialect.transformSelectString(buf.toString())[ CD ]
Line_19 $$ if (alias != null && !alias.equals(col)) -->Line_20 $$ buf.append(" as ").append(alias)[ CD ]
Line_14 $$ if (uniqueColumns.add(alias == null ? col : alias)) -->Line_22 $$ appendComma = true[ CD ]
Line_11 $$ while (iter.hasNext()) -->Line_12 $$ String col = iter.next()[ CD ]
Line_12 $$ String col = iter.next()-->Line_13 $$ String alias = aliases.get(col)[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder(columns.size() * 10 + tableName.length() + whereTokens.size() * 10 + 10)-->Line_30 $$ buf.append(orderBy)[ FD ]
Line_14 $$ if (uniqueColumns.add(alias == null ? col : alias)) -->Line_19 $$ if (alias != null && !alias.equals(col)) [ CD ]
Line_13 $$ String alias = aliases.get(col)-->Line_20 $$ buf.append(" as ").append(alias)[ FD ]
Line_2 $$ public String toStatementString() -->Line_9 $$ Iterator<String> iter = columns.iterator()[ CD ]
Line_33 $$ buf = new StringBuilder(dialect.applyLocksToSql(buf.toString(), lockOptions, null))-->Line_35 $$ return dialect.transformSelectString(buf.toString())[ FD ]
Line_11 $$ while (iter.hasNext()) -->Line_13 $$ String alias = aliases.get(col)[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder(columns.size() * 10 + tableName.length() + whereTokens.size() * 10 + 10)-->Line_5 $$ buf.append(" ")[ FD ]
Line_15 $$ if (appendComma) -->Line_16 $$ buf.append(", ")[ CD ]
Line_13 $$ String alias = aliases.get(col)-->Line_19 $$ if (alias != null && !alias.equals(col)) [ FD ]
Line_2 $$ public String toStatementString() -->Line_26 $$ if (whereTokens.size() > 0) [ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder(columns.size() * 10 + tableName.length() + whereTokens.size() * 10 + 10)-->Line_20 $$ buf.append(" as ").append(alias)[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder(columns.size() * 10 + tableName.length() + whereTokens.size() * 10 + 10)-->Line_27 $$ buf.append(" where ").append(toWhereClause())[ FD ]
Line_2 $$ public String toStatementString() -->Line_3 $$ StringBuilder buf = new StringBuilder(columns.size() * 10 + tableName.length() + whereTokens.size() * 10 + 10)[ CD ]
Line_2 $$ public String toStatementString() -->Line_11 $$ while (iter.hasNext()) [ CD ]
Line_11 $$ while (iter.hasNext()) -->Line_14 $$ if (uniqueColumns.add(alias == null ? col : alias)) [ CD ]
Line_12 $$ String col = iter.next()-->Line_19 $$ if (alias != null && !alias.equals(col)) [ FD ]
Line_4 $$ if (comment != null) -->Line_5 $$ buf.append(" ")[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder(columns.size() * 10 + tableName.length() + whereTokens.size() * 10 + 10)-->Line_33 $$ buf = new StringBuilder(dialect.applyLocksToSql(buf.toString(), lockOptions, null))[ FD ]
