Line_4 $$ for (Page page : pages) -->Line_7 $$ for (int i = 0; i < page.getChannelCount(); i++) [ FD ]
Line_2 $$ static List<Page> dropChannel(List<Page> pages, List<Integer> channels) -->Line_8 $$ if (channels.contains(i)) [ FD ]
Line_7 $$ for (int i = 0; i < page.getChannelCount(); i++) -->Line_11 $$ blocks[channel++] = page.getBlock(i)[ CD ]
Line_3 $$ List<Page> actualPages = new ArrayList()-->Line_13 $$ actualPages.add(new Page(blocks))[ FD ]
Line_2 $$ static List<Page> dropChannel(List<Page> pages, List<Integer> channels) -->Line_15 $$ return actualPages[ CD ]
Line_7 $$ for (int i = 0; i < page.getChannelCount(); i++) -->Line_8 $$ if (channels.contains(i)) [ CD ]
Line_2 $$ static List<Page> dropChannel(List<Page> pages, List<Integer> channels) -->Line_6 $$ Block[] blocks = new Block[page.getChannelCount() - channels.size()][ FD ]
Line_5 $$ int channel = 0-->Line_11 $$ blocks[channel++] = page.getBlock(i)[ FD ]
Line_2 $$ static List<Page> dropChannel(List<Page> pages, List<Integer> channels) -->Line_3 $$ List<Page> actualPages = new ArrayList()[ CD ]
Line_4 $$ for (Page page : pages) -->Line_6 $$ Block[] blocks = new Block[page.getChannelCount() - channels.size()][ FD ]
Line_7 $$ for (int i = 0; i < page.getChannelCount(); i++) -->Line_11 $$ blocks[channel++] = page.getBlock(i)[ FD ]
Line_4 $$ for (Page page : pages) -->Line_11 $$ blocks[channel++] = page.getBlock(i)[ FD ]
Line_7 $$ for (int i = 0; i < page.getChannelCount(); i++) -->Line_8 $$ if (channels.contains(i)) [ FD ]
