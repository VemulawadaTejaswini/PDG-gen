Line_16 $$ TextMergeChange change = scheduled.get(i)-->Line_19 $$ change.setInnerFragments(result.get(i))[ FD ]
Line_22 $$ if (!myScheduled.isEmpty()) -->Line_23 $$ launchRediff()[ CD ]
Line_15 $$ for (int i = 0; i < scheduled.size(); i++) -->Line_19 $$ change.setInnerFragments(result.get(i))[ FD ]
Line_15 $$ for (int i = 0; i < scheduled.size(); i++) -->Line_19 $$ change.setInnerFragments(result.get(i))[ CD ]
Line_15 $$ for (int i = 0; i < scheduled.size(); i++) -->Line_17 $$ if (myScheduled.contains(change))[ CD ]
Line_12 $$ if (!myEnabled || indicator.isCanceled())-->Line_13 $$ return[ CD ]
Line_15 $$ for (int i = 0; i < scheduled.size(); i++) -->Line_16 $$ TextMergeChange change = scheduled.get(i)[ CD ]
Line_4 $$ final List<List<MergeWordFragment>> result = new ArrayList<List<MergeWordFragment>>(data.size())-->Line_19 $$ change.setInnerFragments(result.get(i))[ FD ]
Line_4 $$ final List<List<MergeWordFragment>> result = new ArrayList<List<MergeWordFragment>>(data.size())-->Line_6 $$ result.add(DiffUtil.compareThreesideInner(chunkData.text, ComparisonPolicy.DEFAULT, indicator))[ FD ]
Line_16 $$ TextMergeChange change = scheduled.get(i)-->Line_17 $$ if (myScheduled.contains(change))[ FD ]
Line_8 $$ ApplicationManager.getApplication().invokeAndWait(new Runnable() -->Line_12 $$ if (!myEnabled || indicator.isCanceled())[ CD ]
Line_8 $$ ApplicationManager.getApplication().invokeAndWait(new Runnable() -->Line_15 $$ for (int i = 0; i < scheduled.size(); i++) [ CD ]
Line_8 $$ ApplicationManager.getApplication().invokeAndWait(new Runnable() -->Line_21 $$ myStatusPanel.setBusy(false)[ CD ]
Line_8 $$ ApplicationManager.getApplication().invokeAndWait(new Runnable() -->Line_22 $$ if (!myScheduled.isEmpty()) [ CD ]
Line_15 $$ for (int i = 0; i < scheduled.size(); i++) -->Line_16 $$ TextMergeChange change = scheduled.get(i)[ FD ]
