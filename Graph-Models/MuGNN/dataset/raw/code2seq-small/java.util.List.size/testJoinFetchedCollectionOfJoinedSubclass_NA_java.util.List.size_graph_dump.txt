Line_5 $$ Mammal mammal = new Mammal()-->Line_9 $$ zoo.getMammals().put("zebra", mammal)[ FD ]
Line_18 $$ txn = session.beginTransaction()-->Line_29 $$ txn.commit()[ FD ]
Line_11 $$ Session session = openSession()-->Line_12 $$ Transaction txn = session.beginTransaction()[ FD ]
Line_12 $$ Transaction txn = session.beginTransaction()-->Line_29 $$ txn.commit()[ FD ]
Line_19 $$ List results = session.createQuery("from Zoo z join fetch z.mammals").list()-->Line_20 $$ assertEquals("Incorrect result size", 1, results.size())[ FD ]
Line_7 $$ Zoo zoo = new Zoo()-->Line_23 $$ assertEquals(zoo, zooRead)[ FD ]
Line_22 $$ Zoo zooRead = (Zoo) results.get(0)-->Line_24 $$ assertTrue(Hibernate.isInitialized(zooRead.getMammals()))[ FD ]
Line_11 $$ Session session = openSession()-->Line_28 $$ session.delete(zooRead)[ FD ]
Line_25 $$ Mammal mammalRead = (Mammal) zooRead.getMammals().get("zebra")-->Line_26 $$ assertEquals(mammal, mammalRead)[ FD ]
Line_25 $$ Mammal mammalRead = (Mammal) zooRead.getMammals().get("zebra")-->Line_27 $$ session.delete(mammalRead)[ FD ]
Line_5 $$ Mammal mammal = new Mammal()-->Line_13 $$ session.save(mammal)[ FD ]
Line_5 $$ Mammal mammal = new Mammal()-->Line_6 $$ mammal.setDescription("A Zebra")[ FD ]
Line_17 $$ session = openSession()-->Line_28 $$ session.delete(zooRead)[ FD ]
Line_19 $$ List results = session.createQuery("from Zoo z join fetch z.mammals").list()-->Line_22 $$ Zoo zooRead = (Zoo) results.get(0)[ FD ]
Line_12 $$ Transaction txn = session.beginTransaction()-->Line_15 $$ txn.commit()[ FD ]
Line_19 $$ List results = session.createQuery("from Zoo z join fetch z.mammals").list()-->Line_21 $$ assertTrue("Incorrect result return type", results.get(0) instanceof Zoo)[ FD ]
Line_7 $$ Zoo zoo = new Zoo()-->Line_8 $$ zoo.setName("A Zoo")[ FD ]
Line_11 $$ Session session = openSession()-->Line_30 $$ session.close()[ FD ]
Line_17 $$ session = openSession()-->Line_27 $$ session.delete(mammalRead)[ FD ]
Line_17 $$ session = openSession()-->Line_19 $$ List results = session.createQuery("from Zoo z join fetch z.mammals").list()[ FD ]
Line_11 $$ Session session = openSession()-->Line_16 $$ session.close()[ FD ]
Line_11 $$ Session session = openSession()-->Line_14 $$ session.save(zoo)[ FD ]
Line_7 $$ Zoo zoo = new Zoo()-->Line_10 $$ mammal.setZoo(zoo)[ FD ]
Line_11 $$ Session session = openSession()-->Line_13 $$ session.save(mammal)[ FD ]
Line_11 $$ Session session = openSession()-->Line_18 $$ txn = session.beginTransaction()[ FD ]
Line_22 $$ Zoo zooRead = (Zoo) results.get(0)-->Line_23 $$ assertEquals(zoo, zooRead)[ FD ]
Line_11 $$ Session session = openSession()-->Line_27 $$ session.delete(mammalRead)[ FD ]
Line_11 $$ Session session = openSession()-->Line_19 $$ List results = session.createQuery("from Zoo z join fetch z.mammals").list()[ FD ]
Line_17 $$ session = openSession()-->Line_30 $$ session.close()[ FD ]
Line_12 $$ Transaction txn = session.beginTransaction()-->Line_18 $$ txn = session.beginTransaction()[ FD ]
Line_7 $$ Zoo zoo = new Zoo()-->Line_9 $$ zoo.getMammals().put("zebra", mammal)[ FD ]
Line_5 $$ Mammal mammal = new Mammal()-->Line_10 $$ mammal.setZoo(zoo)[ FD ]
Line_22 $$ Zoo zooRead = (Zoo) results.get(0)-->Line_25 $$ Mammal mammalRead = (Mammal) zooRead.getMammals().get("zebra")[ FD ]
Line_7 $$ Zoo zoo = new Zoo()-->Line_14 $$ session.save(zoo)[ FD ]
Line_17 $$ session = openSession()-->Line_18 $$ txn = session.beginTransaction()[ FD ]
Line_11 $$ Session session = openSession()-->Line_17 $$ session = openSession()[ FD ]
Line_22 $$ Zoo zooRead = (Zoo) results.get(0)-->Line_28 $$ session.delete(zooRead)[ FD ]
Line_5 $$ Mammal mammal = new Mammal()-->Line_26 $$ assertEquals(mammal, mammalRead)[ FD ]
