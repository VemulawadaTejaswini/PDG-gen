Line_10 $$ List resultList = (List) results-->Line_12 $$ assertTrue(resultList.contains(yogiExpected.getAddresses().get("home")))[ FD ]
Line_3 $$ HqlExecutor hqlExecutor = new HqlExecutor() -->Line_16 $$ runTest(hqlExecutor, null, checker, false)[ FD ]
Line_10 $$ List resultList = (List) results-->Line_11 $$ assertEquals(2, resultList.size())[ FD ]
Line_3 $$ HqlExecutor hqlExecutor = new HqlExecutor() -->Line_5 $$ return s.createQuery("select elements(a) from Student s inner join s.addresses a")[ CD ]
Line_8 $$ ResultChecker checker = new ResultChecker() -->Line_12 $$ assertTrue(resultList.contains(yogiExpected.getAddresses().get("home")))[ CD ]
Line_10 $$ List resultList = (List) results-->Line_13 $$ assertTrue(resultList.contains(yogiExpected.getAddresses().get("work")))[ FD ]
Line_2 $$ public void testMapElementsList() throws Exception -->Line_3 $$ HqlExecutor hqlExecutor = new HqlExecutor() [ CD ]
Line_8 $$ ResultChecker checker = new ResultChecker() -->Line_13 $$ assertTrue(resultList.contains(yogiExpected.getAddresses().get("work")))[ CD ]
Line_3 $$ HqlExecutor hqlExecutor = new HqlExecutor() -->Line_5 $$ return s.createQuery("select elements(a) from Student s inner join s.addresses a")[ FD ]
Line_8 $$ ResultChecker checker = new ResultChecker() -->Line_11 $$ assertEquals(2, resultList.size())[ CD ]
Line_8 $$ ResultChecker checker = new ResultChecker() -->Line_10 $$ List resultList = (List) results[ CD ]
Line_2 $$ public void testMapElementsList() throws Exception -->Line_16 $$ runTest(hqlExecutor, null, checker, false)[ CD ]
