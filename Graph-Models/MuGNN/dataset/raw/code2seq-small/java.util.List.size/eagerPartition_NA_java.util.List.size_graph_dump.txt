Line_9 $$ List<List<E>> result = new ArrayList((int) Math.ceil(list.size() / size))-->Line_22 $$ result.add(accumulator)[ FD ]
Line_2 $$ public static <E> List<List<E>> eagerPartition(List<E> list, int size) -->Line_13 $$ if (count == size) [ FD ]
Line_13 $$ if (count == size) -->Line_14 $$ result.add(accumulator)[ CD ]
Line_10 $$ List<E> accumulator = new ArrayList(size)-->Line_22 $$ result.add(accumulator)[ FD ]
Line_13 $$ if (count == size) -->Line_16 $$ count = 0[ CD ]
Line_16 $$ count = 0-->Line_19 $$ count++[ FD ]
Line_2 $$ public static <E> List<List<E>> eagerPartition(List<E> list, int size) -->Line_9 $$ List<List<E>> result = new ArrayList((int) Math.ceil(list.size() / size))[ FD ]
Line_10 $$ List<E> accumulator = new ArrayList(size)-->Line_18 $$ accumulator.add(element)[ FD ]
Line_2 $$ public static <E> List<List<E>> eagerPartition(List<E> list, int size) -->Line_3 $$ if (list == null) [ FD ]
Line_16 $$ count = 0-->Line_21 $$ if (count > 0) [ FD ]
Line_10 $$ List<E> accumulator = new ArrayList(size)-->Line_15 $$ accumulator = new ArrayList(size)[ FD ]
Line_2 $$ public static <E> List<List<E>> eagerPartition(List<E> list, int size) -->Line_21 $$ if (count > 0) [ CD ]
Line_15 $$ accumulator = new ArrayList(size)-->Line_22 $$ result.add(accumulator)[ FD ]
Line_2 $$ public static <E> List<List<E>> eagerPartition(List<E> list, int size) -->Line_11 $$ int count = 0[ CD ]
Line_2 $$ public static <E> List<List<E>> eagerPartition(List<E> list, int size) -->Line_6 $$ if (size <= 0) [ FD ]
Line_2 $$ public static <E> List<List<E>> eagerPartition(List<E> list, int size) -->Line_3 $$ if (list == null) [ CD ]
Line_12 $$ for (E element : list) -->Line_18 $$ accumulator.add(element)[ FD ]
Line_21 $$ if (count > 0) -->Line_22 $$ result.add(accumulator)[ CD ]
Line_2 $$ public static <E> List<List<E>> eagerPartition(List<E> list, int size) -->Line_6 $$ if (size <= 0) [ CD ]
Line_2 $$ public static <E> List<List<E>> eagerPartition(List<E> list, int size) -->Line_24 $$ return result[ CD ]
Line_11 $$ int count = 0-->Line_13 $$ if (count == size) [ FD ]
Line_2 $$ public static <E> List<List<E>> eagerPartition(List<E> list, int size) -->Line_9 $$ List<List<E>> result = new ArrayList((int) Math.ceil(list.size() / size))[ CD ]
Line_9 $$ List<List<E>> result = new ArrayList((int) Math.ceil(list.size() / size))-->Line_14 $$ result.add(accumulator)[ FD ]
Line_15 $$ accumulator = new ArrayList(size)-->Line_18 $$ accumulator.add(element)[ FD ]
Line_10 $$ List<E> accumulator = new ArrayList(size)-->Line_14 $$ result.add(accumulator)[ FD ]
Line_11 $$ int count = 0-->Line_16 $$ count = 0[ FD ]
Line_13 $$ if (count == size) -->Line_15 $$ accumulator = new ArrayList(size)[ CD ]
Line_11 $$ int count = 0-->Line_21 $$ if (count > 0) [ FD ]
Line_11 $$ int count = 0-->Line_19 $$ count++[ FD ]
Line_2 $$ public static <E> List<List<E>> eagerPartition(List<E> list, int size) -->Line_10 $$ List<E> accumulator = new ArrayList(size)[ CD ]
