Line_2 $$ private void assertStringArray() throws JspException, DocumentException -->Line_5 $$ String output = getOutput()[ CD ]
Line_10 $$ Element rootElement = document.getRootElement()-->Line_13 $$ List children = rootElement.elements()[ FD ]
Line_2 $$ private void assertStringArray() throws JspException, DocumentException -->Line_7 $$ assertTrue(output.endsWith("</select>"))[ CD ]
Line_2 $$ private void assertStringArray() throws JspException, DocumentException -->Line_10 $$ Element rootElement = document.getRootElement()[ CD ]
Line_9 $$ Document document = reader.read(new StringReader(output))-->Line_10 $$ Element rootElement = document.getRootElement()[ FD ]
Line_13 $$ List children = rootElement.elements()-->Line_14 $$ assertEquals("Incorrect number of children", 4, children.size())[ FD ]
Line_10 $$ Element rootElement = document.getRootElement()-->Line_15 $$ Element e = (Element) rootElement.selectSingleNode("option[text() = 'Rob']")[ FD ]
Line_2 $$ private void assertStringArray() throws JspException, DocumentException -->Line_8 $$ SAXReader reader = new SAXReader()[ CD ]
Line_2 $$ private void assertStringArray() throws JspException, DocumentException -->Line_6 $$ assertTrue(output.startsWith("<select "))[ CD ]
Line_2 $$ private void assertStringArray() throws JspException, DocumentException -->Line_11 $$ assertEquals("select", rootElement.getName())[ CD ]
Line_2 $$ private void assertStringArray() throws JspException, DocumentException -->Line_4 $$ assertEquals(Tag.SKIP_BODY, result)[ CD ]
Line_5 $$ String output = getOutput()-->Line_6 $$ assertTrue(output.startsWith("<select "))[ FD ]
Line_2 $$ private void assertStringArray() throws JspException, DocumentException -->Line_12 $$ assertEquals("name", rootElement.attribute("name").getValue())[ CD ]
Line_8 $$ SAXReader reader = new SAXReader()-->Line_9 $$ Document document = reader.read(new StringReader(output))[ FD ]
Line_15 $$ Element e = (Element) rootElement.selectSingleNode("option[text() = 'Rob']")-->Line_16 $$ assertEquals("Rob node not selected", "selected", e.attribute("selected").getValue())[ FD ]
Line_10 $$ Element rootElement = document.getRootElement()-->Line_11 $$ assertEquals("select", rootElement.getName())[ FD ]
Line_2 $$ private void assertStringArray() throws JspException, DocumentException -->Line_9 $$ Document document = reader.read(new StringReader(output))[ CD ]
Line_2 $$ private void assertStringArray() throws JspException, DocumentException -->Line_3 $$ int result = this.tag.doStartTag()[ CD ]
Line_2 $$ private void assertStringArray() throws JspException, DocumentException -->Line_15 $$ Element e = (Element) rootElement.selectSingleNode("option[text() = 'Rob']")[ CD ]
Line_10 $$ Element rootElement = document.getRootElement()-->Line_12 $$ assertEquals("name", rootElement.attribute("name").getValue())[ FD ]
Line_2 $$ private void assertStringArray() throws JspException, DocumentException -->Line_14 $$ assertEquals("Incorrect number of children", 4, children.size())[ CD ]
Line_2 $$ private void assertStringArray() throws JspException, DocumentException -->Line_16 $$ assertEquals("Rob node not selected", "selected", e.attribute("selected").getValue())[ CD ]
Line_2 $$ private void assertStringArray() throws JspException, DocumentException -->Line_13 $$ List children = rootElement.elements()[ CD ]
Line_3 $$ int result = this.tag.doStartTag()-->Line_4 $$ assertEquals(Tag.SKIP_BODY, result)[ FD ]
Line_5 $$ String output = getOutput()-->Line_7 $$ assertTrue(output.endsWith("</select>"))[ FD ]
