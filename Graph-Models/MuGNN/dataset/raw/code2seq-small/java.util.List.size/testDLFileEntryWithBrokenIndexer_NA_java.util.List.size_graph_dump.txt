Line_6 $$ Document document = SearchTestUtil.createAttachmentDocument(_DL_FILE_ENTRY_CLASS_NAME)-->Line_14 $$ long entryClassPK = GetterUtil.getLong(document.get(Field.ENTRY_CLASS_PK))[ FD ]
Line_7 $$ String snippet = RandomTestUtil.randomString()-->Line_20 $$ Mockito.verify(_indexer).getSummary(document, snippet, null, null)[ FD ]
Line_2 $$ public void testDLFileEntryWithBrokenIndexer() throws Exception -->Line_3 $$ Mockito.when(_dlAppLocalService.getFileEntry(SearchTestUtil.ENTRY_CLASS_PK)).thenReturn(_fileEntry)[ CD ]
Line_13 $$ LogRecord logRecord = logRecords.get(0)-->Line_15 $$ Assert.assertEquals("Search index is stale and contains entry [ FD ]
Line_6 $$ Document document = SearchTestUtil.createAttachmentDocument(_DL_FILE_ENTRY_CLASS_NAME)-->Line_20 $$ Mockito.verify(_indexer).getSummary(document, snippet, null, null)[ FD ]
Line_10 $$ SearchResult searchResult = assertOneSearchResult(document)-->Line_24 $$ assertEmptyVersions(searchResult)[ FD ]
Line_2 $$ public void testDLFileEntryWithBrokenIndexer() throws Exception -->Line_6 $$ Document document = SearchTestUtil.createAttachmentDocument(_DL_FILE_ENTRY_CLASS_NAME)[ CD ]
Line_11 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_13 $$ LogRecord logRecord = logRecords.get(0)[ FD ]
Line_6 $$ Document document = SearchTestUtil.createAttachmentDocument(_DL_FILE_ENTRY_CLASS_NAME)-->Line_10 $$ SearchResult searchResult = assertOneSearchResult(document)[ FD ]
Line_10 $$ SearchResult searchResult = assertOneSearchResult(document)-->Line_23 $$ assertEmptyCommentRelatedSearchResults(searchResult)[ FD ]
Line_10 $$ SearchResult searchResult = assertOneSearchResult(document)-->Line_21 $$ assertEmptyFileEntryRelatedSearchResults(searchResult)[ FD ]
Line_10 $$ SearchResult searchResult = assertOneSearchResult(document)-->Line_16 $$ Assert.assertEquals(SearchTestUtil.ATTACHMENT_OWNER_CLASS_NAME, searchResult.getClassName())[ FD ]
Line_2 $$ public void testDLFileEntryWithBrokenIndexer() throws Exception -->Line_8 $$ document.add(new Field(Field.SNIPPET, snippet))[ CD ]
Line_6 $$ Document document = SearchTestUtil.createAttachmentDocument(_DL_FILE_ENTRY_CLASS_NAME)-->Line_8 $$ document.add(new Field(Field.SNIPPET, snippet))[ FD ]
Line_10 $$ SearchResult searchResult = assertOneSearchResult(document)-->Line_18 $$ Assert.assertNull(searchResult.getSummary())[ FD ]
Line_2 $$ public void testDLFileEntryWithBrokenIndexer() throws Exception -->Line_7 $$ String snippet = RandomTestUtil.randomString()[ CD ]
Line_2 $$ public void testDLFileEntryWithBrokenIndexer() throws Exception -->Line_5 $$ Mockito.when(_indexerRegistry.getIndexer(Mockito.anyString())).thenReturn(_indexer)[ CD ]
Line_9 $$ try (CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(SearchResultTranslatorImpl.class.getName(), Level.WARNING)) -->Line_11 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ FD ]
Line_10 $$ SearchResult searchResult = assertOneSearchResult(document)-->Line_17 $$ Assert.assertEquals(SearchTestUtil.ATTACHMENT_OWNER_CLASS_PK, searchResult.getClassPK())[ FD ]
Line_11 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_12 $$ Assert.assertEquals(1, logRecords.size())[ FD ]
Line_2 $$ public void testDLFileEntryWithBrokenIndexer() throws Exception -->Line_4 $$ Mockito.doThrow(new IllegalArgumentException()).when(_indexer).getSummary((Document) Matchers.any(), Matchers.anyString(), (PortletRequest) Matchers.any(), (PortletResponse) Matchers.any())[ CD ]
