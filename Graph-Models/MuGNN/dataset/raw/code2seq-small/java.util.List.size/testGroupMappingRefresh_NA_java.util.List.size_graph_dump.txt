Line_7 $$ String user = UserGroupInformation.getCurrentUser().getUserName()-->Line_22 $$ List<String> g3 = groups.getGroups(user)[ FD ]
Line_6 $$ Groups groups = Groups.getUserToGroupsMappingService(config)-->Line_31 $$ List<String> g4 = groups.getGroups(user)[ FD ]
Line_25 $$ for (int i = 0; i < g3.size(); i++) -->Line_26 $$ assertFalse("Should be different group: " + g1.get(i) + " and " + g3.get(i), g1.get(i).equals(g3.get(i)))[ CD ]
Line_10 $$ String[] str_groups = new String[g1.size()]-->Line_16 $$ System.out.println(Arrays.toString(str_groups))[ FD ]
Line_22 $$ List<String> g3 = groups.getGroups(user)-->Line_35 $$ assertFalse("Should be different group ", g3.get(i).equals(g4.get(i)))[ FD ]
Line_22 $$ List<String> g3 = groups.getGroups(user)-->Line_23 $$ g3.toArray(str_groups)[ FD ]
Line_10 $$ String[] str_groups = new String[g1.size()]-->Line_33 $$ System.out.println(Arrays.toString(str_groups))[ FD ]
Line_10 $$ String[] str_groups = new String[g1.size()]-->Line_15 $$ g2.toArray(str_groups)[ FD ]
Line_14 $$ List<String> g2 = groups.getGroups(user)-->Line_15 $$ g2.toArray(str_groups)[ FD ]
Line_31 $$ List<String> g4 = groups.getGroups(user)-->Line_32 $$ g4.toArray(str_groups)[ FD ]
Line_31 $$ List<String> g4 = groups.getGroups(user)-->Line_34 $$ for (int i = 0; i < g4.size(); i++) [ FD ]
Line_4 $$ DFSAdmin admin = new DFSAdmin(config)-->Line_20 $$ admin.run(args)[ FD ]
Line_7 $$ String user = UserGroupInformation.getCurrentUser().getUserName()-->Line_9 $$ List<String> g1 = groups.getGroups(user)[ FD ]
Line_6 $$ Groups groups = Groups.getUserToGroupsMappingService(config)-->Line_22 $$ List<String> g3 = groups.getGroups(user)[ FD ]
Line_9 $$ List<String> g1 = groups.getGroups(user)-->Line_18 $$ assertEquals("Should be same group ", g1.get(i), g2.get(i))[ FD ]
Line_34 $$ for (int i = 0; i < g4.size(); i++) -->Line_35 $$ assertFalse("Should be different group ", g3.get(i).equals(g4.get(i)))[ FD ]
Line_25 $$ for (int i = 0; i < g3.size(); i++) -->Line_26 $$ assertFalse("Should be different group: " + g1.get(i) + " and " + g3.get(i), g1.get(i).equals(g3.get(i)))[ FD ]
Line_14 $$ List<String> g2 = groups.getGroups(user)-->Line_18 $$ assertEquals("Should be same group ", g1.get(i), g2.get(i))[ FD ]
Line_10 $$ String[] str_groups = new String[g1.size()]-->Line_23 $$ g3.toArray(str_groups)[ FD ]
Line_5 $$ String[] args = new String[] -->Line_20 $$ admin.run(args)[ FD ]
Line_10 $$ String[] str_groups = new String[g1.size()]-->Line_24 $$ System.out.println(Arrays.toString(str_groups))[ FD ]
Line_6 $$ Groups groups = Groups.getUserToGroupsMappingService(config)-->Line_9 $$ List<String> g1 = groups.getGroups(user)[ FD ]
Line_9 $$ List<String> g1 = groups.getGroups(user)-->Line_26 $$ assertFalse("Should be different group: " + g1.get(i) + " and " + g3.get(i), g1.get(i).equals(g3.get(i)))[ FD ]
Line_25 $$ for (int i = 0; i < g3.size(); i++) -->Line_35 $$ assertFalse("Should be different group ", g3.get(i).equals(g4.get(i)))[ FD ]
Line_17 $$ for (int i = 0; i < g2.size(); i++) -->Line_18 $$ assertEquals("Should be same group ", g1.get(i), g2.get(i))[ FD ]
Line_22 $$ List<String> g3 = groups.getGroups(user)-->Line_26 $$ assertFalse("Should be different group: " + g1.get(i) + " and " + g3.get(i), g1.get(i).equals(g3.get(i)))[ FD ]
Line_31 $$ List<String> g4 = groups.getGroups(user)-->Line_35 $$ assertFalse("Should be different group ", g3.get(i).equals(g4.get(i)))[ FD ]
Line_10 $$ String[] str_groups = new String[g1.size()]-->Line_12 $$ System.out.println(Arrays.toString(str_groups))[ FD ]
Line_17 $$ for (int i = 0; i < g2.size(); i++) -->Line_35 $$ assertFalse("Should be different group ", g3.get(i).equals(g4.get(i)))[ FD ]
Line_34 $$ for (int i = 0; i < g4.size(); i++) -->Line_35 $$ assertFalse("Should be different group ", g3.get(i).equals(g4.get(i)))[ CD ]
Line_17 $$ for (int i = 0; i < g2.size(); i++) -->Line_34 $$ for (int i = 0; i < g4.size(); i++) [ FD ]
Line_6 $$ Groups groups = Groups.getUserToGroupsMappingService(config)-->Line_14 $$ List<String> g2 = groups.getGroups(user)[ FD ]
Line_17 $$ for (int i = 0; i < g2.size(); i++) -->Line_26 $$ assertFalse("Should be different group: " + g1.get(i) + " and " + g3.get(i), g1.get(i).equals(g3.get(i)))[ FD ]
Line_10 $$ String[] str_groups = new String[g1.size()]-->Line_11 $$ g1.toArray(str_groups)[ FD ]
Line_9 $$ List<String> g1 = groups.getGroups(user)-->Line_10 $$ String[] str_groups = new String[g1.size()][ FD ]
Line_17 $$ for (int i = 0; i < g2.size(); i++) -->Line_18 $$ assertEquals("Should be same group ", g1.get(i), g2.get(i))[ CD ]
Line_22 $$ List<String> g3 = groups.getGroups(user)-->Line_25 $$ for (int i = 0; i < g3.size(); i++) [ FD ]
Line_10 $$ String[] str_groups = new String[g1.size()]-->Line_32 $$ g4.toArray(str_groups)[ FD ]
Line_25 $$ for (int i = 0; i < g3.size(); i++) -->Line_34 $$ for (int i = 0; i < g4.size(); i++) [ FD ]
Line_7 $$ String user = UserGroupInformation.getCurrentUser().getUserName()-->Line_31 $$ List<String> g4 = groups.getGroups(user)[ FD ]
Line_7 $$ String user = UserGroupInformation.getCurrentUser().getUserName()-->Line_14 $$ List<String> g2 = groups.getGroups(user)[ FD ]
Line_14 $$ List<String> g2 = groups.getGroups(user)-->Line_17 $$ for (int i = 0; i < g2.size(); i++) [ FD ]
Line_17 $$ for (int i = 0; i < g2.size(); i++) -->Line_25 $$ for (int i = 0; i < g3.size(); i++) [ FD ]
Line_9 $$ List<String> g1 = groups.getGroups(user)-->Line_11 $$ g1.toArray(str_groups)[ FD ]
