Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_34 $$ if (testRunningSettings.isPassEnvironmentVariables() && isEnabled("environmentVariables")) [ CD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_3 $$ if (module == null)[ CD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_14 $$ if (paths.size() > 0) [ CD ]
Line_25 $$ String value = resolveSurefireProperties(element.getValue(), domModel)-->Line_43 $$ javaParameters.addEnv(variableName, value)[ FD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_9 $$ if (config == null)[ CD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_5 $$ MavenProject mavenProject = MavenProjectsManager.getInstance(module.getProject()).findProject(module)[ FD ]
Line_20 $$ Element systemPropertyVariables = config.getChild("systemPropertyVariables")-->Line_21 $$ if (systemPropertyVariables != null) [ FD ]
Line_50 $$ Element argLine = config.getChild("argLine")-->Line_51 $$ if (argLine != null) [ FD ]
Line_53 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)-->Line_54 $$ if (StringUtil.isNotEmpty(value) && isResolved(value)) [ FD ]
Line_24 $$ if (!javaParameters.getVMParametersList().hasProperty(propertyName)) -->Line_26 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)[ CD ]
Line_39 $$ if (!javaParameters.getEnv().containsKey(variableName)) -->Line_41 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)[ CD ]
Line_5 $$ MavenProject mavenProject = MavenProjectsManager.getInstance(module.getProject()).findProject(module)-->Line_11 $$ MavenDomProjectModel domModel = MavenDomUtil.getMavenDomProjectModel(module.getProject(), mavenProject.getFile())[ FD ]
Line_11 $$ MavenDomProjectModel domModel = MavenDomUtil.getMavenDomProjectModel(module.getProject(), mavenProject.getFile())-->Line_16 $$ javaParameters.getClassPath().add(resolveSurefireProperties(path, domModel))[ FD ]
Line_12 $$ MavenTestRunningSettings testRunningSettings = MavenProjectSettings.getInstance(module.getProject()).getTestRunningSettings()-->Line_19 $$ if (testRunningSettings.isPassSystemProperties() && isEnabled("systemPropertyVariables")) [ FD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_3 $$ if (module == null)[ FD ]
Line_22 $$ for (Element element : systemPropertyVariables.getChildren()) -->Line_23 $$ String propertyName = element.getName()[ FD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_53 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)[ FD ]
Line_22 $$ for (Element element : systemPropertyVariables.getChildren()) -->Line_38 $$ String variableName = element.getName()[ FD ]
Line_26 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)-->Line_53 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)[ FD ]
Line_6 $$ if (mavenProject == null)-->Line_7 $$ return[ CD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_5 $$ MavenProject mavenProject = MavenProjectsManager.getInstance(module.getProject()).findProject(module)[ CD ]
Line_22 $$ for (Element element : systemPropertyVariables.getChildren()) -->Line_25 $$ String value = resolveSurefireProperties(element.getValue(), domModel)[ FD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_41 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)[ FD ]
Line_26 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)-->Line_42 $$ if (isResolved(value)) [ FD ]
Line_5 $$ MavenProject mavenProject = MavenProjectsManager.getInstance(module.getProject()).findProject(module)-->Line_6 $$ if (mavenProject == null)[ FD ]
Line_22 $$ for (Element element : systemPropertyVariables.getChildren()) -->Line_40 $$ String value = resolveSurefireProperties(element.getValue(), domModel)[ FD ]
Line_26 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)-->Line_55 $$ javaParameters.getVMParametersList().addParametersString(value)[ FD ]
Line_12 $$ MavenTestRunningSettings testRunningSettings = MavenProjectSettings.getInstance(module.getProject()).getTestRunningSettings()-->Line_49 $$ if (testRunningSettings.isPassArgLine() && isEnabled("argLine")) [ FD ]
Line_35 $$ Element environmentVariables = config.getChild("environmentVariables")-->Line_37 $$ for (Element element : environmentVariables.getChildren()) [ FD ]
Line_25 $$ String value = resolveSurefireProperties(element.getValue(), domModel)-->Line_53 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)[ FD ]
Line_8 $$ Element config = mavenProject.getPluginConfiguration("org.apache.maven.plugins", "maven-surefire-plugin")-->Line_9 $$ if (config == null)[ FD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_11 $$ MavenDomProjectModel domModel = MavenDomUtil.getMavenDomProjectModel(module.getProject(), mavenProject.getFile())[ FD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_55 $$ javaParameters.getVMParametersList().addParametersString(value)[ FD ]
Line_25 $$ String value = resolveSurefireProperties(element.getValue(), domModel)-->Line_41 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)[ FD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_13 $$ List<String> paths = MavenJDOMUtil.findChildrenValuesByPath(config, "additionalClasspathElements", "additionalClasspathElement")[ CD ]
Line_11 $$ MavenDomProjectModel domModel = MavenDomUtil.getMavenDomProjectModel(module.getProject(), mavenProject.getFile())-->Line_52 $$ String value = resolveSurefireProperties(argLine.getTextTrim(), domModel)[ FD ]
Line_38 $$ String variableName = element.getName()-->Line_43 $$ javaParameters.addEnv(variableName, value)[ FD ]
Line_26 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)-->Line_41 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)[ FD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_28 $$ javaParameters.getVMParametersList().addProperty(propertyName, value)[ FD ]
Line_41 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)-->Line_43 $$ javaParameters.addEnv(variableName, value)[ FD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_24 $$ if (!javaParameters.getVMParametersList().hasProperty(propertyName)) [ FD ]
Line_26 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)-->Line_27 $$ if (isResolved(value)) [ FD ]
Line_8 $$ Element config = mavenProject.getPluginConfiguration("org.apache.maven.plugins", "maven-surefire-plugin")-->Line_13 $$ List<String> paths = MavenJDOMUtil.findChildrenValuesByPath(config, "additionalClasspathElements", "additionalClasspathElement")[ FD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_8 $$ Element config = mavenProject.getPluginConfiguration("org.apache.maven.plugins", "maven-surefire-plugin")[ CD ]
Line_26 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)-->Line_28 $$ javaParameters.getVMParametersList().addProperty(propertyName, value)[ FD ]
Line_41 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)-->Line_53 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)[ FD ]
Line_25 $$ String value = resolveSurefireProperties(element.getValue(), domModel)-->Line_27 $$ if (isResolved(value)) [ FD ]
Line_12 $$ MavenTestRunningSettings testRunningSettings = MavenProjectSettings.getInstance(module.getProject()).getTestRunningSettings()-->Line_34 $$ if (testRunningSettings.isPassEnvironmentVariables() && isEnabled("environmentVariables")) [ FD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_43 $$ javaParameters.addEnv(variableName, value)[ FD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_39 $$ if (!javaParameters.getEnv().containsKey(variableName)) [ FD ]
Line_34 $$ if (testRunningSettings.isPassEnvironmentVariables() && isEnabled("environmentVariables")) -->Line_35 $$ Element environmentVariables = config.getChild("environmentVariables")[ CD ]
Line_9 $$ if (config == null)-->Line_10 $$ return[ CD ]
Line_39 $$ if (!javaParameters.getEnv().containsKey(variableName)) -->Line_40 $$ String value = resolveSurefireProperties(element.getValue(), domModel)[ CD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_49 $$ if (testRunningSettings.isPassArgLine() && isEnabled("argLine")) [ CD ]
Line_25 $$ String value = resolveSurefireProperties(element.getValue(), domModel)-->Line_54 $$ if (StringUtil.isNotEmpty(value) && isResolved(value)) [ FD ]
Line_38 $$ String variableName = element.getName()-->Line_39 $$ if (!javaParameters.getEnv().containsKey(variableName)) [ FD ]
Line_24 $$ if (!javaParameters.getVMParametersList().hasProperty(propertyName)) -->Line_27 $$ if (isResolved(value)) [ CD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_6 $$ if (mavenProject == null)[ CD ]
Line_11 $$ MavenDomProjectModel domModel = MavenDomUtil.getMavenDomProjectModel(module.getProject(), mavenProject.getFile())-->Line_25 $$ String value = resolveSurefireProperties(element.getValue(), domModel)[ FD ]
Line_41 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)-->Line_55 $$ javaParameters.getVMParametersList().addParametersString(value)[ FD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_12 $$ MavenTestRunningSettings testRunningSettings = MavenProjectSettings.getInstance(module.getProject()).getTestRunningSettings()[ FD ]
Line_42 $$ if (isResolved(value)) -->Line_43 $$ javaParameters.addEnv(variableName, value)[ CD ]
Line_25 $$ String value = resolveSurefireProperties(element.getValue(), domModel)-->Line_28 $$ javaParameters.getVMParametersList().addProperty(propertyName, value)[ FD ]
Line_19 $$ if (testRunningSettings.isPassSystemProperties() && isEnabled("systemPropertyVariables")) -->Line_20 $$ Element systemPropertyVariables = config.getChild("systemPropertyVariables")[ CD ]
Line_25 $$ String value = resolveSurefireProperties(element.getValue(), domModel)-->Line_26 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)[ FD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_26 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)[ FD ]
Line_26 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)-->Line_43 $$ javaParameters.addEnv(variableName, value)[ FD ]
Line_11 $$ MavenDomProjectModel domModel = MavenDomUtil.getMavenDomProjectModel(module.getProject(), mavenProject.getFile())-->Line_40 $$ String value = resolveSurefireProperties(element.getValue(), domModel)[ FD ]
Line_13 $$ List<String> paths = MavenJDOMUtil.findChildrenValuesByPath(config, "additionalClasspathElements", "additionalClasspathElement")-->Line_14 $$ if (paths.size() > 0) [ FD ]
Line_41 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)-->Line_42 $$ if (isResolved(value)) [ FD ]
Line_5 $$ MavenProject mavenProject = MavenProjectsManager.getInstance(module.getProject()).findProject(module)-->Line_8 $$ Element config = mavenProject.getPluginConfiguration("org.apache.maven.plugins", "maven-surefire-plugin")[ FD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_16 $$ javaParameters.getClassPath().add(resolveSurefireProperties(path, domModel))[ FD ]
Line_26 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)-->Line_54 $$ if (StringUtil.isNotEmpty(value) && isResolved(value)) [ FD ]
Line_25 $$ String value = resolveSurefireProperties(element.getValue(), domModel)-->Line_55 $$ javaParameters.getVMParametersList().addParametersString(value)[ FD ]
Line_41 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)-->Line_54 $$ if (StringUtil.isNotEmpty(value) && isResolved(value)) [ FD ]
Line_51 $$ if (argLine != null) -->Line_54 $$ if (StringUtil.isNotEmpty(value) && isResolved(value)) [ CD ]
Line_39 $$ if (!javaParameters.getEnv().containsKey(variableName)) -->Line_42 $$ if (isResolved(value)) [ CD ]
Line_23 $$ String propertyName = element.getName()-->Line_28 $$ javaParameters.getVMParametersList().addProperty(propertyName, value)[ FD ]
Line_23 $$ String propertyName = element.getName()-->Line_24 $$ if (!javaParameters.getVMParametersList().hasProperty(propertyName)) [ FD ]
Line_49 $$ if (testRunningSettings.isPassArgLine() && isEnabled("argLine")) -->Line_51 $$ if (argLine != null) [ CD ]
Line_25 $$ String value = resolveSurefireProperties(element.getValue(), domModel)-->Line_42 $$ if (isResolved(value)) [ FD ]
Line_15 $$ for (String path : paths) -->Line_16 $$ javaParameters.getClassPath().add(resolveSurefireProperties(path, domModel))[ FD ]
Line_8 $$ Element config = mavenProject.getPluginConfiguration("org.apache.maven.plugins", "maven-surefire-plugin")-->Line_35 $$ Element environmentVariables = config.getChild("environmentVariables")[ FD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_12 $$ MavenTestRunningSettings testRunningSettings = MavenProjectSettings.getInstance(module.getProject()).getTestRunningSettings()[ CD ]
Line_35 $$ Element environmentVariables = config.getChild("environmentVariables")-->Line_36 $$ if (environmentVariables != null) [ FD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_11 $$ MavenDomProjectModel domModel = MavenDomUtil.getMavenDomProjectModel(module.getProject(), mavenProject.getFile())[ CD ]
Line_20 $$ Element systemPropertyVariables = config.getChild("systemPropertyVariables")-->Line_22 $$ for (Element element : systemPropertyVariables.getChildren()) [ FD ]
Line_51 $$ if (argLine != null) -->Line_52 $$ String value = resolveSurefireProperties(argLine.getTextTrim(), domModel)[ CD ]
Line_34 $$ if (testRunningSettings.isPassEnvironmentVariables() && isEnabled("environmentVariables")) -->Line_36 $$ if (environmentVariables != null) [ CD ]
Line_2 $$ public void patchJavaParameters(@Nullable Module module, JavaParameters javaParameters) -->Line_19 $$ if (testRunningSettings.isPassSystemProperties() && isEnabled("systemPropertyVariables")) [ CD ]
Line_24 $$ if (!javaParameters.getVMParametersList().hasProperty(propertyName)) -->Line_25 $$ String value = resolveSurefireProperties(element.getValue(), domModel)[ CD ]
Line_53 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)-->Line_55 $$ javaParameters.getVMParametersList().addParametersString(value)[ FD ]
Line_8 $$ Element config = mavenProject.getPluginConfiguration("org.apache.maven.plugins", "maven-surefire-plugin")-->Line_50 $$ Element argLine = config.getChild("argLine")[ FD ]
Line_27 $$ if (isResolved(value)) -->Line_28 $$ javaParameters.getVMParametersList().addProperty(propertyName, value)[ CD ]
Line_19 $$ if (testRunningSettings.isPassSystemProperties() && isEnabled("systemPropertyVariables")) -->Line_21 $$ if (systemPropertyVariables != null) [ CD ]
Line_8 $$ Element config = mavenProject.getPluginConfiguration("org.apache.maven.plugins", "maven-surefire-plugin")-->Line_20 $$ Element systemPropertyVariables = config.getChild("systemPropertyVariables")[ FD ]
Line_49 $$ if (testRunningSettings.isPassArgLine() && isEnabled("argLine")) -->Line_50 $$ Element argLine = config.getChild("argLine")[ CD ]
Line_54 $$ if (StringUtil.isNotEmpty(value) && isResolved(value)) -->Line_55 $$ javaParameters.getVMParametersList().addParametersString(value)[ CD ]
Line_3 $$ if (module == null)-->Line_4 $$ return[ CD ]
Line_51 $$ if (argLine != null) -->Line_53 $$ value = resolveVmProperties(javaParameters.getVMParametersList(), value)[ CD ]
Line_50 $$ Element argLine = config.getChild("argLine")-->Line_52 $$ String value = resolveSurefireProperties(argLine.getTextTrim(), domModel)[ FD ]
