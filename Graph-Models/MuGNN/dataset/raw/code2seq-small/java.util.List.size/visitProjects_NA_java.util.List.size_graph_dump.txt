Line_9 $$ ProjectView project = iterator.next()-->Line_11 $$ P userProjectObject = visitor.visitProject(project, index, parentProjectObject)[ FD ]
Line_2 $$ private static <P, T> List<P> visitProjects(Visitor<P, T> visitor, ProjectAndTaskFilter filter, List<ProjectView> sourceProjects, P parentProjectObject, Comparator<ProjectView> projectSorter, Comparator<TaskView> taskSorter) -->Line_8 $$ while (iterator.hasNext()) [ CD ]
Line_2 $$ private static <P, T> List<P> visitProjects(Visitor<P, T> visitor, ProjectAndTaskFilter filter, List<ProjectView> sourceProjects, P parentProjectObject, Comparator<ProjectView> projectSorter, Comparator<TaskView> taskSorter) -->Line_6 $$ Iterator<ProjectView> iterator = sourceProjects.iterator()[ CD ]
Line_2 $$ private static <P, T> List<P> visitProjects(Visitor<P, T> visitor, ProjectAndTaskFilter filter, List<ProjectView> sourceProjects, P parentProjectObject, Comparator<ProjectView> projectSorter, Comparator<TaskView> taskSorter) -->Line_3 $$ List<P> projectObjects = new ArrayList<P>()[ CD ]
Line_10 $$ if (filter.doesAllowProject(project)) -->Line_11 $$ P userProjectObject = visitor.visitProject(project, index, parentProjectObject)[ CD ]
Line_8 $$ while (iterator.hasNext()) -->Line_10 $$ if (filter.doesAllowProject(project)) [ CD ]
Line_10 $$ if (filter.doesAllowProject(project)) -->Line_17 $$ visitor.completedVisitingProject(userProjectObject, subProjectObjects, taskObjects)[ CD ]
Line_8 $$ while (iterator.hasNext()) -->Line_19 $$ index++[ CD ]
Line_7 $$ int index = 0-->Line_11 $$ P userProjectObject = visitor.visitProject(project, index, parentProjectObject)[ FD ]
Line_7 $$ int index = 0-->Line_19 $$ index++[ FD ]
Line_2 $$ private static <P, T> List<P> visitProjects(Visitor<P, T> visitor, ProjectAndTaskFilter filter, List<ProjectView> sourceProjects, P parentProjectObject, Comparator<ProjectView> projectSorter, Comparator<TaskView> taskSorter) -->Line_11 $$ P userProjectObject = visitor.visitProject(project, index, parentProjectObject)[ FD ]
Line_9 $$ ProjectView project = iterator.next()-->Line_10 $$ if (filter.doesAllowProject(project)) [ FD ]
Line_2 $$ private static <P, T> List<P> visitProjects(Visitor<P, T> visitor, ProjectAndTaskFilter filter, List<ProjectView> sourceProjects, P parentProjectObject, Comparator<ProjectView> projectSorter, Comparator<TaskView> taskSorter) -->Line_17 $$ visitor.completedVisitingProject(userProjectObject, subProjectObjects, taskObjects)[ FD ]
Line_11 $$ P userProjectObject = visitor.visitProject(project, index, parentProjectObject)-->Line_12 $$ projectObjects.add(userProjectObject)[ FD ]
Line_2 $$ private static <P, T> List<P> visitProjects(Visitor<P, T> visitor, ProjectAndTaskFilter filter, List<ProjectView> sourceProjects, P parentProjectObject, Comparator<ProjectView> projectSorter, Comparator<TaskView> taskSorter) -->Line_10 $$ if (filter.doesAllowProject(project)) [ FD ]
Line_6 $$ Iterator<ProjectView> iterator = sourceProjects.iterator()-->Line_9 $$ ProjectView project = iterator.next()[ FD ]
Line_11 $$ P userProjectObject = visitor.visitProject(project, index, parentProjectObject)-->Line_17 $$ visitor.completedVisitingProject(userProjectObject, subProjectObjects, taskObjects)[ FD ]
Line_10 $$ if (filter.doesAllowProject(project)) -->Line_12 $$ projectObjects.add(userProjectObject)[ CD ]
Line_3 $$ List<P> projectObjects = new ArrayList<P>()-->Line_12 $$ projectObjects.add(userProjectObject)[ FD ]
Line_2 $$ private static <P, T> List<P> visitProjects(Visitor<P, T> visitor, ProjectAndTaskFilter filter, List<ProjectView> sourceProjects, P parentProjectObject, Comparator<ProjectView> projectSorter, Comparator<TaskView> taskSorter) -->Line_7 $$ int index = 0[ CD ]
Line_2 $$ private static <P, T> List<P> visitProjects(Visitor<P, T> visitor, ProjectAndTaskFilter filter, List<ProjectView> sourceProjects, P parentProjectObject, Comparator<ProjectView> projectSorter, Comparator<TaskView> taskSorter) -->Line_21 $$ return projectObjects[ CD ]
Line_2 $$ private static <P, T> List<P> visitProjects(Visitor<P, T> visitor, ProjectAndTaskFilter filter, List<ProjectView> sourceProjects, P parentProjectObject, Comparator<ProjectView> projectSorter, Comparator<TaskView> taskSorter) -->Line_6 $$ Iterator<ProjectView> iterator = sourceProjects.iterator()[ FD ]
Line_8 $$ while (iterator.hasNext()) -->Line_9 $$ ProjectView project = iterator.next()[ CD ]
Line_6 $$ Iterator<ProjectView> iterator = sourceProjects.iterator()-->Line_8 $$ while (iterator.hasNext()) [ FD ]
