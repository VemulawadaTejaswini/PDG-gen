Line_3 $$ if (parentTrace == null) -->Line_4 $$ return 0[ CD ]
Line_2 $$ private int countCommonElements(List<StackTraceElement> stackTrace, @Nullable List<StackTraceElement> parentTrace) -->Line_3 $$ if (parentTrace == null) [ FD ]
Line_2 $$ private int countCommonElements(List<StackTraceElement> stackTrace, @Nullable List<StackTraceElement> parentTrace) -->Line_3 $$ if (parentTrace == null) [ CD ]
Line_7 $$ for (int i = stackTrace.size() - 1, j = parentTrace.size() - 1; i >= 1 && j >= 0 && stackTrace.get(i).equals(parentTrace.get(j)); i--, j--) -->Line_9 $$ commonElements++[ CD ]
Line_6 $$ int commonElements = 0-->Line_9 $$ commonElements++[ FD ]
Line_2 $$ private int countCommonElements(List<StackTraceElement> stackTrace, @Nullable List<StackTraceElement> parentTrace) -->Line_7 $$ for (int i = stackTrace.size() - 1, j = parentTrace.size() - 1; i >= 1 && j >= 0 && stackTrace.get(i).equals(parentTrace.get(j)); i--, j--) [ FD ]
Line_2 $$ private int countCommonElements(List<StackTraceElement> stackTrace, @Nullable List<StackTraceElement> parentTrace) -->Line_7 $$ for (int i = stackTrace.size() - 1, j = parentTrace.size() - 1; i >= 1 && j >= 0 && stackTrace.get(i).equals(parentTrace.get(j)); i--, j--) [ CD ]
Line_2 $$ private int countCommonElements(List<StackTraceElement> stackTrace, @Nullable List<StackTraceElement> parentTrace) -->Line_11 $$ return commonElements[ CD ]
Line_2 $$ private int countCommonElements(List<StackTraceElement> stackTrace, @Nullable List<StackTraceElement> parentTrace) -->Line_6 $$ int commonElements = 0[ CD ]
