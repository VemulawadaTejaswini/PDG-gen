Line_20 $$ if (roleName.equals(RoleConstants.GUEST) && !guestUnsupportedActions.contains(action) && guestDefaultActions.contains(action) && siteGroup.hasPublicLayouts()) -->Line_22 $$ if (roleName.equals(defaultGroupRole.getName()) && groupDefaultActions.contains(action)) [ CD ]
Line_20 $$ if (roleName.equals(RoleConstants.GUEST) && !guestUnsupportedActions.contains(action) && guestDefaultActions.contains(action) && siteGroup.hasPublicLayouts()) -->Line_21 $$ guestPermissionsList.add(action)[ CD ]
Line_17 $$ List<String> guestUnsupportedActions = ResourceActionsUtil.getModelResourceGuestUnsupportedActions(modelName)-->Line_20 $$ if (roleName.equals(RoleConstants.GUEST) && !guestUnsupportedActions.contains(action) && guestDefaultActions.contains(action) && siteGroup.hasPublicLayouts()) [ FD ]
Line_19 $$ for (String action : supportedActions) -->Line_20 $$ if (roleName.equals(RoleConstants.GUEST) && !guestUnsupportedActions.contains(action) && guestDefaultActions.contains(action) && siteGroup.hasPublicLayouts()) [ FD ]
Line_16 $$ List<String> guestDefaultActions = ResourceActionsUtil.getModelResourceGuestDefaultActions(modelName)-->Line_20 $$ if (roleName.equals(RoleConstants.GUEST) && !guestUnsupportedActions.contains(action) && guestDefaultActions.contains(action) && siteGroup.hasPublicLayouts()) [ FD ]
Line_22 $$ if (roleName.equals(defaultGroupRole.getName()) && groupDefaultActions.contains(action)) -->Line_23 $$ groupPermissionsList.add(action)[ CD ]
Line_12 $$ List<String> guestPermissionsList = new ArrayList()-->Line_21 $$ guestPermissionsList.add(action)[ FD ]
Line_9 $$ Group siteGroup = GroupLocalServiceUtil.getGroup(siteGroupId)-->Line_20 $$ if (roleName.equals(RoleConstants.GUEST) && !guestUnsupportedActions.contains(action) && guestDefaultActions.contains(action) && siteGroup.hasPublicLayouts()) [ FD ]
Line_12 $$ List<String> guestPermissionsList = new ArrayList()-->Line_29 $$ String[] guestPermissions = guestPermissionsList.toArray(new String[guestPermissionsList.size()])[ FD ]
Line_27 $$ String[] groupPermissions = groupPermissionsList.toArray(new String[groupPermissionsList.size()])-->Line_28 $$ setGroupPermissions(groupPermissions)[ FD ]
Line_18 $$ for (String roleName : roleNames) -->Line_22 $$ if (roleName.equals(defaultGroupRole.getName()) && groupDefaultActions.contains(action)) [ FD ]
Line_8 $$ long siteGroupId = PortalUtil.getSiteGroupId(repositoryId)-->Line_9 $$ Group siteGroup = GroupLocalServiceUtil.getGroup(siteGroupId)[ FD ]
Line_8 $$ long siteGroupId = PortalUtil.getSiteGroupId(repositoryId)-->Line_10 $$ Role defaultGroupRole = RoleLocalServiceUtil.getDefaultGroupRole(siteGroupId)[ FD ]
Line_18 $$ for (String roleName : roleNames) -->Line_20 $$ if (roleName.equals(RoleConstants.GUEST) && !guestUnsupportedActions.contains(action) && guestDefaultActions.contains(action) && siteGroup.hasPublicLayouts()) [ FD ]
Line_19 $$ for (String action : supportedActions) -->Line_21 $$ guestPermissionsList.add(action)[ FD ]
Line_19 $$ for (String action : supportedActions) -->Line_22 $$ if (roleName.equals(defaultGroupRole.getName()) && groupDefaultActions.contains(action)) [ FD ]
Line_19 $$ for (String action : supportedActions) -->Line_23 $$ groupPermissionsList.add(action)[ FD ]
Line_11 $$ List<String> groupPermissionsList = new ArrayList()-->Line_27 $$ String[] groupPermissions = groupPermissionsList.toArray(new String[groupPermissionsList.size()])[ FD ]
Line_10 $$ Role defaultGroupRole = RoleLocalServiceUtil.getDefaultGroupRole(siteGroupId)-->Line_22 $$ if (roleName.equals(defaultGroupRole.getName()) && groupDefaultActions.contains(action)) [ FD ]
Line_10 $$ Role defaultGroupRole = RoleLocalServiceUtil.getDefaultGroupRole(siteGroupId)-->Line_13 $$ String[] roleNames = [ FD ]
Line_15 $$ List<String> groupDefaultActions = ResourceActionsUtil.getModelResourceGroupDefaultActions(modelName)-->Line_22 $$ if (roleName.equals(defaultGroupRole.getName()) && groupDefaultActions.contains(action)) [ FD ]
Line_29 $$ String[] guestPermissions = guestPermissionsList.toArray(new String[guestPermissionsList.size()])-->Line_30 $$ setGuestPermissions(guestPermissions)[ FD ]
Line_11 $$ List<String> groupPermissionsList = new ArrayList()-->Line_23 $$ groupPermissionsList.add(action)[ FD ]
