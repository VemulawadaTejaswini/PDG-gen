Line_9 $$ ClobStringType type = new ClobStringType(lobHandler, null)-->Line_14 $$ assertEquals("content", type.deepCopy("content"))[ FD ]
Line_9 $$ ClobStringType type = new ClobStringType(lobHandler, null)-->Line_10 $$ assertEquals(1, type.sqlTypes().length)[ FD ]
Line_21 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_22 $$ assertEquals(2, synchs.size())[ FD ]
Line_5 $$ Session session = mock(Session.class)-->Line_31 $$ verify(session).close()[ FD ]
Line_21 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_24 $$ ((TransactionSynchronization) synchs.get(0)).beforeCompletion()[ FD ]
Line_9 $$ ClobStringType type = new ClobStringType(lobHandler, null)-->Line_13 $$ assertTrue(type.equals("content", "content"))[ FD ]
Line_4 $$ SessionFactory sf = mock(SessionFactory.class)-->Line_6 $$ given(sf.openSession()).willReturn(session)[ FD ]
Line_9 $$ ClobStringType type = new ClobStringType(lobHandler, null)-->Line_15 $$ assertFalse(type.isMutable())[ FD ]
Line_5 $$ Session session = mock(Session.class)-->Line_6 $$ given(sf.openSession()).willReturn(session)[ FD ]
Line_21 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_26 $$ ((TransactionSynchronization) synchs.get(1)).beforeCompletion()[ FD ]
Line_9 $$ ClobStringType type = new ClobStringType(lobHandler, null)-->Line_16 $$ assertEquals("content", type.nullSafeGet(rs, new String[] [ FD ]
Line_5 $$ Session session = mock(Session.class)-->Line_7 $$ given(session.getSessionFactory()).willReturn(sf)[ FD ]
Line_21 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_27 $$ ((TransactionSynchronization) synchs.get(1)).afterCompletion(TransactionSynchronization.STATUS_COMMITTED)[ FD ]
Line_4 $$ SessionFactory sf = mock(SessionFactory.class)-->Line_19 $$ SessionFactoryUtils.getSession(sf, true)[ FD ]
Line_9 $$ ClobStringType type = new ClobStringType(lobHandler, null)-->Line_20 $$ type.nullSafeSet(ps, "content", 1)[ FD ]
Line_9 $$ ClobStringType type = new ClobStringType(lobHandler, null)-->Line_11 $$ assertEquals(Types.CLOB, type.sqlTypes()[0])[ FD ]
Line_21 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_23 $$ assertTrue(synchs.get(0).getClass().getName().endsWith("SpringLobCreatorSynchronization"))[ FD ]
Line_9 $$ ClobStringType type = new ClobStringType(lobHandler, null)-->Line_12 $$ assertEquals(String.class, type.returnedClass())[ FD ]
Line_4 $$ SessionFactory sf = mock(SessionFactory.class)-->Line_7 $$ given(session.getSessionFactory()).willReturn(sf)[ FD ]
Line_21 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_25 $$ ((TransactionSynchronization) synchs.get(0)).afterCompletion(TransactionSynchronization.STATUS_COMMITTED)[ FD ]
