Line_2 $$ private static TreePath getTreePath(final int positionInPath, final List<String> path, final Object root) -->Line_19 $$ TreePath currentPath = new TreePath(treeNode.getPath())[ CD ]
Line_8 $$ if (path.size() > positionInPath) -->Line_9 $$ pathElement = path.get(positionInPath)[ CD ]
Line_2 $$ private static TreePath getTreePath(final int positionInPath, final List<String> path, final Object root) -->Line_25 $$ currentPath = getTreePath(positionInPath + 1, path, child)[ FD ]
Line_2 $$ private static TreePath getTreePath(final int positionInPath, final List<String> path, final Object root) -->Line_23 $$ for (int j = 0; j < treeNode.getChildCount(); j++) [ CD ]
Line_2 $$ private static TreePath getTreePath(final int positionInPath, final List<String> path, final Object root) -->Line_3 $$ if (!(root instanceof DefaultMutableTreeNode))[ CD ]
Line_7 $$ final String pathElement-->Line_9 $$ pathElement = path.get(positionInPath)[ FD ]
Line_7 $$ final String pathElement-->Line_13 $$ if (pathElement == null)[ FD ]
Line_3 $$ if (!(root instanceof DefaultMutableTreeNode))-->Line_4 $$ return null[ CD ]
Line_25 $$ currentPath = getTreePath(positionInPath + 1, path, child)-->Line_26 $$ if (currentPath != null) [ FD ]
Line_2 $$ private static TreePath getTreePath(final int positionInPath, final List<String> path, final Object root) -->Line_8 $$ if (path.size() > positionInPath) [ CD ]
Line_23 $$ for (int j = 0; j < treeNode.getChildCount(); j++) -->Line_24 $$ final TreeNode child = treeNode.getChildAt(j)[ CD ]
Line_17 $$ if (!pathElement.equals(((Group) userObject).getName()))-->Line_18 $$ return null[ CD ]
Line_2 $$ private static TreePath getTreePath(final int positionInPath, final List<String> path, final Object root) -->Line_6 $$ final Object userObject = treeNode.getUserObject()[ CD ]
Line_2 $$ private static TreePath getTreePath(final int positionInPath, final List<String> path, final Object root) -->Line_7 $$ final String pathElement[ CD ]
Line_2 $$ private static TreePath getTreePath(final int positionInPath, final List<String> path, final Object root) -->Line_5 $$ final DefaultMutableTreeNode treeNode = ((DefaultMutableTreeNode) root)[ CD ]
Line_24 $$ final TreeNode child = treeNode.getChildAt(j)-->Line_25 $$ currentPath = getTreePath(positionInPath + 1, path, child)[ FD ]
Line_2 $$ private static TreePath getTreePath(final int positionInPath, final List<String> path, final Object root) -->Line_30 $$ return currentPath[ CD ]
Line_2 $$ private static TreePath getTreePath(final int positionInPath, final List<String> path, final Object root) -->Line_13 $$ if (pathElement == null)[ CD ]
Line_8 $$ if (path.size() > positionInPath) -->Line_11 $$ return null[ CD ]
Line_2 $$ private static TreePath getTreePath(final int positionInPath, final List<String> path, final Object root) -->Line_20 $$ if (positionInPath == path.size() - 1) [ CD ]
Line_2 $$ private static TreePath getTreePath(final int positionInPath, final List<String> path, final Object root) -->Line_9 $$ pathElement = path.get(positionInPath)[ FD ]
Line_2 $$ private static TreePath getTreePath(final int positionInPath, final List<String> path, final Object root) -->Line_8 $$ if (path.size() > positionInPath) [ FD ]
Line_15 $$ if (!(userObject instanceof Group))-->Line_16 $$ return null[ CD ]
Line_23 $$ for (int j = 0; j < treeNode.getChildCount(); j++) -->Line_26 $$ if (currentPath != null) [ CD ]
Line_9 $$ pathElement = path.get(positionInPath)-->Line_13 $$ if (pathElement == null)[ FD ]
Line_7 $$ final String pathElement-->Line_17 $$ if (!pathElement.equals(((Group) userObject).getName()))[ FD ]
Line_5 $$ final DefaultMutableTreeNode treeNode = ((DefaultMutableTreeNode) root)-->Line_6 $$ final Object userObject = treeNode.getUserObject()[ FD ]
Line_5 $$ final DefaultMutableTreeNode treeNode = ((DefaultMutableTreeNode) root)-->Line_24 $$ final TreeNode child = treeNode.getChildAt(j)[ FD ]
Line_2 $$ private static TreePath getTreePath(final int positionInPath, final List<String> path, final Object root) -->Line_20 $$ if (positionInPath == path.size() - 1) [ FD ]
Line_23 $$ for (int j = 0; j < treeNode.getChildCount(); j++) -->Line_24 $$ final TreeNode child = treeNode.getChildAt(j)[ FD ]
Line_19 $$ TreePath currentPath = new TreePath(treeNode.getPath())-->Line_25 $$ currentPath = getTreePath(positionInPath + 1, path, child)[ FD ]
Line_13 $$ if (pathElement == null)-->Line_14 $$ return null[ CD ]
Line_20 $$ if (positionInPath == path.size() - 1) -->Line_21 $$ return currentPath[ CD ]
Line_23 $$ for (int j = 0; j < treeNode.getChildCount(); j++) -->Line_25 $$ currentPath = getTreePath(positionInPath + 1, path, child)[ CD ]
Line_19 $$ TreePath currentPath = new TreePath(treeNode.getPath())-->Line_26 $$ if (currentPath != null) [ FD ]
Line_5 $$ final DefaultMutableTreeNode treeNode = ((DefaultMutableTreeNode) root)-->Line_19 $$ TreePath currentPath = new TreePath(treeNode.getPath())[ FD ]
Line_5 $$ final DefaultMutableTreeNode treeNode = ((DefaultMutableTreeNode) root)-->Line_23 $$ for (int j = 0; j < treeNode.getChildCount(); j++) [ FD ]
Line_2 $$ private static TreePath getTreePath(final int positionInPath, final List<String> path, final Object root) -->Line_17 $$ if (!pathElement.equals(((Group) userObject).getName()))[ CD ]
Line_2 $$ private static TreePath getTreePath(final int positionInPath, final List<String> path, final Object root) -->Line_15 $$ if (!(userObject instanceof Group))[ CD ]
Line_9 $$ pathElement = path.get(positionInPath)-->Line_17 $$ if (!pathElement.equals(((Group) userObject).getName()))[ FD ]
