Line_2 $$ public Module fetchByA_CN(long appId, String contextName, boolean retrieveFromCache) -->Line_14 $$ if (result == null) [ CD ]
Line_2 $$ public Module fetchByA_CN(long appId, String contextName, boolean retrieveFromCache) -->Line_35 $$ qPos.add(contextName)[ FD ]
Line_21 $$ if (contextName.equals(StringPool.BLANK)) -->Line_25 $$ query.append(_FINDER_COLUMN_A_CN_CONTEXTNAME_2)[ CD ]
Line_34 $$ if (bindContextName) -->Line_35 $$ qPos.add(contextName)[ CD ]
Line_15 $$ StringBundler query = new StringBundler(4)-->Line_20 $$ query.append(_FINDER_COLUMN_A_CN_CONTEXTNAME_1)[ FD ]
Line_10 $$ if ((appId != module.getAppId()) || !Validator.equals(contextName, module.getContextName())) -->Line_11 $$ result = null[ CD ]
Line_3 $$ Object[] finderArgs = new Object[] -->Line_42 $$ _log.warn("ModulePersistenceImpl.fetchByA_CN(long, String, boolean) with parameters (" + StringUtil.merge(finderArgs) + ") yields a result set with more than 1 result. This violates the logical unique restriction. There is no order guarantee on which result is returned by this finder.")[ FD ]
Line_6 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_CN, finderArgs, this)-->Line_58 $$ if (result instanceof List<?>) [ FD ]
Line_8 $$ if (result instanceof Module) -->Line_10 $$ if ((appId != module.getAppId()) || !Validator.equals(contextName, module.getContextName())) [ CD ]
Line_30 $$ session = openSession()-->Line_31 $$ Query q = session.createQuery(sql)[ FD ]
Line_9 $$ Module module = (Module) result-->Line_45 $$ result = module[ FD ]
Line_38 $$ if (list.isEmpty()) -->Line_41 $$ if ((list.size() > 1) && _log.isWarnEnabled()) [ CD ]
Line_37 $$ List<Module> list = q.list()-->Line_38 $$ if (list.isEmpty()) [ FD ]
Line_41 $$ if ((list.size() > 1) && _log.isWarnEnabled()) -->Line_42 $$ _log.warn("ModulePersistenceImpl.fetchByA_CN(long, String, boolean) with parameters (" + StringUtil.merge(finderArgs) + ") yields a result set with more than 1 result. This violates the logical unique restriction. There is no order guarantee on which result is returned by this finder.")[ CD ]
Line_45 $$ result = module-->Line_58 $$ if (result instanceof List<?>) [ FD ]
Line_6 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_CN, finderArgs, this)-->Line_11 $$ result = null[ FD ]
Line_28 $$ Session session = null-->Line_30 $$ session = openSession()[ FD ]
Line_8 $$ if (result instanceof Module) -->Line_9 $$ Module module = (Module) result[ CD ]
Line_58 $$ if (result instanceof List<?>) -->Line_59 $$ return null[ CD ]
Line_4 $$ Object result = null-->Line_45 $$ result = module[ FD ]
Line_32 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_33 $$ qPos.add(appId)[ FD ]
Line_21 $$ if (contextName.equals(StringPool.BLANK)) -->Line_22 $$ query.append(_FINDER_COLUMN_A_CN_CONTEXTNAME_3)[ CD ]
Line_14 $$ if (result == null) -->Line_15 $$ StringBundler query = new StringBundler(4)[ CD ]
Line_15 $$ StringBundler query = new StringBundler(4)-->Line_22 $$ query.append(_FINDER_COLUMN_A_CN_CONTEXTNAME_3)[ FD ]
Line_9 $$ Module module = (Module) result-->Line_46 $$ cacheResult(module)[ FD ]
Line_11 $$ result = null-->Line_14 $$ if (result == null) [ FD ]
Line_3 $$ Object[] finderArgs = new Object[] -->Line_6 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_CN, finderArgs, this)[ FD ]
Line_15 $$ StringBundler query = new StringBundler(4)-->Line_25 $$ query.append(_FINDER_COLUMN_A_CN_CONTEXTNAME_2)[ FD ]
Line_2 $$ public Module fetchByA_CN(long appId, String contextName, boolean retrieveFromCache) -->Line_47 $$ if ((module.getAppId() != appId) || (module.getContextName() == null) || !module.getContextName().equals(contextName)) [ FD ]
Line_5 $$ if (retrieveFromCache) -->Line_6 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_CN, finderArgs, this)[ CD ]
Line_38 $$ if (list.isEmpty()) -->Line_45 $$ result = module[ CD ]
Line_32 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_35 $$ qPos.add(contextName)[ FD ]
Line_2 $$ public Module fetchByA_CN(long appId, String contextName, boolean retrieveFromCache) -->Line_10 $$ if ((appId != module.getAppId()) || !Validator.equals(contextName, module.getContextName())) [ FD ]
Line_37 $$ List<Module> list = q.list()-->Line_44 $$ Module module = list.get(0)[ FD ]
Line_47 $$ if ((module.getAppId() != appId) || (module.getContextName() == null) || !module.getContextName().equals(contextName)) -->Line_48 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_CN, finderArgs, module)[ CD ]
Line_19 $$ if (contextName == null) -->Line_20 $$ query.append(_FINDER_COLUMN_A_CN_CONTEXTNAME_1)[ CD ]
Line_19 $$ if (contextName == null) -->Line_21 $$ if (contextName.equals(StringPool.BLANK)) [ CD ]
Line_6 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_CN, finderArgs, this)-->Line_8 $$ if (result instanceof Module) [ FD ]
Line_3 $$ Object[] finderArgs = new Object[] -->Line_39 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_CN, finderArgs, list)[ FD ]
Line_2 $$ public Module fetchByA_CN(long appId, String contextName, boolean retrieveFromCache) -->Line_3 $$ Object[] finderArgs = new Object[] [ CD ]
Line_2 $$ public Module fetchByA_CN(long appId, String contextName, boolean retrieveFromCache) -->Line_33 $$ qPos.add(appId)[ FD ]
Line_4 $$ Object result = null-->Line_58 $$ if (result instanceof List<?>) [ FD ]
Line_4 $$ Object result = null-->Line_11 $$ result = null[ FD ]
Line_2 $$ public Module fetchByA_CN(long appId, String contextName, boolean retrieveFromCache) -->Line_5 $$ if (retrieveFromCache) [ CD ]
Line_11 $$ result = null-->Line_45 $$ result = module[ FD ]
Line_58 $$ if (result instanceof List<?>) -->Line_61 $$ return (Module) result[ CD ]
Line_28 $$ Session session = null-->Line_31 $$ Query q = session.createQuery(sql)[ FD ]
Line_38 $$ if (list.isEmpty()) -->Line_46 $$ cacheResult(module)[ CD ]
Line_2 $$ public Module fetchByA_CN(long appId, String contextName, boolean retrieveFromCache) -->Line_8 $$ if (result instanceof Module) [ CD ]
Line_2 $$ public Module fetchByA_CN(long appId, String contextName, boolean retrieveFromCache) -->Line_21 $$ if (contextName.equals(StringPool.BLANK)) [ FD ]
Line_14 $$ if (result == null) -->Line_16 $$ query.append(_SQL_SELECT_MODULE_WHERE)[ CD ]
Line_15 $$ StringBundler query = new StringBundler(4)-->Line_17 $$ query.append(_FINDER_COLUMN_A_CN_APPID_2)[ FD ]
Line_4 $$ Object result = null-->Line_6 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_CN, finderArgs, this)[ FD ]
Line_2 $$ public Module fetchByA_CN(long appId, String contextName, boolean retrieveFromCache) -->Line_58 $$ if (result instanceof List<?>) [ CD ]
Line_38 $$ if (list.isEmpty()) -->Line_47 $$ if ((module.getAppId() != appId) || (module.getContextName() == null) || !module.getContextName().equals(contextName)) [ CD ]
Line_14 $$ if (result == null) -->Line_19 $$ if (contextName == null) [ CD ]
Line_37 $$ List<Module> list = q.list()-->Line_41 $$ if ((list.size() > 1) && _log.isWarnEnabled()) [ FD ]
Line_31 $$ Query q = session.createQuery(sql)-->Line_37 $$ List<Module> list = q.list()[ FD ]
Line_28 $$ Session session = null-->Line_55 $$ closeSession(session)[ FD ]
Line_4 $$ Object result = null-->Line_8 $$ if (result instanceof Module) [ FD ]
Line_18 $$ boolean bindContextName = false-->Line_24 $$ bindContextName = true[ FD ]
Line_38 $$ if (list.isEmpty()) -->Line_44 $$ Module module = list.get(0)[ CD ]
Line_3 $$ Object[] finderArgs = new Object[] -->Line_52 $$ finderCache.removeResult(FINDER_PATH_FETCH_BY_A_CN, finderArgs)[ FD ]
Line_14 $$ if (result == null) -->Line_18 $$ boolean bindContextName = false[ CD ]
Line_15 $$ StringBundler query = new StringBundler(4)-->Line_16 $$ query.append(_SQL_SELECT_MODULE_WHERE)[ FD ]
Line_3 $$ Object[] finderArgs = new Object[] -->Line_48 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_CN, finderArgs, module)[ FD ]
Line_30 $$ session = openSession()-->Line_55 $$ closeSession(session)[ FD ]
Line_9 $$ Module module = (Module) result-->Line_10 $$ if ((appId != module.getAppId()) || !Validator.equals(contextName, module.getContextName())) [ FD ]
Line_37 $$ List<Module> list = q.list()-->Line_39 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_CN, finderArgs, list)[ FD ]
Line_21 $$ if (contextName.equals(StringPool.BLANK)) -->Line_24 $$ bindContextName = true[ CD ]
Line_2 $$ public Module fetchByA_CN(long appId, String contextName, boolean retrieveFromCache) -->Line_19 $$ if (contextName == null) [ FD ]
Line_14 $$ if (result == null) -->Line_28 $$ Session session = null[ CD ]
Line_14 $$ if (result == null) -->Line_17 $$ query.append(_FINDER_COLUMN_A_CN_APPID_2)[ CD ]
Line_4 $$ Object result = null-->Line_14 $$ if (result == null) [ FD ]
Line_38 $$ if (list.isEmpty()) -->Line_39 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_CN, finderArgs, list)[ CD ]
Line_14 $$ if (result == null) -->Line_27 $$ String sql = query.toString()[ CD ]
Line_9 $$ Module module = (Module) result-->Line_47 $$ if ((module.getAppId() != appId) || (module.getContextName() == null) || !module.getContextName().equals(contextName)) [ FD ]
Line_6 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_CN, finderArgs, this)-->Line_45 $$ result = module[ FD ]
Line_6 $$ result = finderCache.getResult(FINDER_PATH_FETCH_BY_A_CN, finderArgs, this)-->Line_14 $$ if (result == null) [ FD ]
Line_2 $$ public Module fetchByA_CN(long appId, String contextName, boolean retrieveFromCache) -->Line_4 $$ Object result = null[ CD ]
Line_31 $$ Query q = session.createQuery(sql)-->Line_32 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_15 $$ StringBundler query = new StringBundler(4)-->Line_27 $$ String sql = query.toString()[ FD ]
Line_27 $$ String sql = query.toString()-->Line_31 $$ Query q = session.createQuery(sql)[ FD ]
Line_11 $$ result = null-->Line_58 $$ if (result instanceof List<?>) [ FD ]
Line_9 $$ Module module = (Module) result-->Line_48 $$ finderCache.putResult(FINDER_PATH_FETCH_BY_A_CN, finderArgs, module)[ FD ]
