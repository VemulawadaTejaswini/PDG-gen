Line_2 $$ public void copyPortletPermissions(Layout targetLayout, Layout sourceLayout) throws Exception -->Line_17 $$ ResourcePermissionLocalServiceUtil.setResourcePermissions(targetLayout.getCompanyId(), resourceName, ResourceConstants.SCOPE_INDIVIDUAL, targetResourcePrimKey, role.getRoleId(), actions.toArray(new String[actions.size()]))[ FD ]
Line_2 $$ public void copyPortletPermissions(Layout targetLayout, Layout sourceLayout) throws Exception -->Line_16 $$ List<String> actions = ResourcePermissionLocalServiceUtil.getAvailableResourcePermissionActionIds(targetLayout.getCompanyId(), resourceName, ResourceConstants.SCOPE_INDIVIDUAL, sourceResourcePrimKey, role.getRoleId(), actionIds)[ FD ]
Line_6 $$ for (String sourcePortletId : sourcePortletIds) -->Line_8 $$ String sourceResourcePrimKey = PortletPermissionUtil.getPrimaryKey(sourceLayout.getPlid(), sourcePortletId)[ FD ]
Line_11 $$ for (Role role : roles) -->Line_16 $$ List<String> actions = ResourcePermissionLocalServiceUtil.getAvailableResourcePermissionActionIds(targetLayout.getCompanyId(), resourceName, ResourceConstants.SCOPE_INDIVIDUAL, sourceResourcePrimKey, role.getRoleId(), actionIds)[ FD ]
Line_4 $$ LayoutTypePortlet sourceLayoutTypePortlet = (LayoutTypePortlet) sourceLayout.getLayoutType()-->Line_5 $$ List<String> sourcePortletIds = sourceLayoutTypePortlet.getPortletIds()[ FD ]
Line_7 $$ String resourceName = PortletConstants.getRootPortletId(sourcePortletId)-->Line_17 $$ ResourcePermissionLocalServiceUtil.setResourcePermissions(targetLayout.getCompanyId(), resourceName, ResourceConstants.SCOPE_INDIVIDUAL, targetResourcePrimKey, role.getRoleId(), actions.toArray(new String[actions.size()]))[ FD ]
Line_2 $$ public void copyPortletPermissions(Layout targetLayout, Layout sourceLayout) throws Exception -->Line_9 $$ String targetResourcePrimKey = PortletPermissionUtil.getPrimaryKey(targetLayout.getPlid(), sourcePortletId)[ FD ]
Line_2 $$ public void copyPortletPermissions(Layout targetLayout, Layout sourceLayout) throws Exception -->Line_4 $$ LayoutTypePortlet sourceLayoutTypePortlet = (LayoutTypePortlet) sourceLayout.getLayoutType()[ FD ]
Line_11 $$ for (Role role : roles) -->Line_12 $$ String roleName = role.getName()[ FD ]
Line_7 $$ String resourceName = PortletConstants.getRootPortletId(sourcePortletId)-->Line_10 $$ List<String> actionIds = ResourceActionsUtil.getPortletResourceActions(resourceName)[ FD ]
Line_2 $$ public void copyPortletPermissions(Layout targetLayout, Layout sourceLayout) throws Exception -->Line_4 $$ LayoutTypePortlet sourceLayoutTypePortlet = (LayoutTypePortlet) sourceLayout.getLayoutType()[ CD ]
Line_12 $$ String roleName = role.getName()-->Line_13 $$ if (roleName.equals(RoleConstants.ADMINISTRATOR) || (targetLayout.isPrivateLayout() && roleName.equals(RoleConstants.GUEST))) [ FD ]
Line_2 $$ public void copyPortletPermissions(Layout targetLayout, Layout sourceLayout) throws Exception -->Line_8 $$ String sourceResourcePrimKey = PortletPermissionUtil.getPrimaryKey(sourceLayout.getPlid(), sourcePortletId)[ FD ]
Line_2 $$ public void copyPortletPermissions(Layout targetLayout, Layout sourceLayout) throws Exception -->Line_13 $$ if (roleName.equals(RoleConstants.ADMINISTRATOR) || (targetLayout.isPrivateLayout() && roleName.equals(RoleConstants.GUEST))) [ FD ]
Line_7 $$ String resourceName = PortletConstants.getRootPortletId(sourcePortletId)-->Line_16 $$ List<String> actions = ResourcePermissionLocalServiceUtil.getAvailableResourcePermissionActionIds(targetLayout.getCompanyId(), resourceName, ResourceConstants.SCOPE_INDIVIDUAL, sourceResourcePrimKey, role.getRoleId(), actionIds)[ FD ]
Line_2 $$ public void copyPortletPermissions(Layout targetLayout, Layout sourceLayout) throws Exception -->Line_3 $$ List<Role> roles = RoleLocalServiceUtil.getGroupRelatedRoles(targetLayout.getGroupId())[ CD ]
Line_8 $$ String sourceResourcePrimKey = PortletPermissionUtil.getPrimaryKey(sourceLayout.getPlid(), sourcePortletId)-->Line_16 $$ List<String> actions = ResourcePermissionLocalServiceUtil.getAvailableResourcePermissionActionIds(targetLayout.getCompanyId(), resourceName, ResourceConstants.SCOPE_INDIVIDUAL, sourceResourcePrimKey, role.getRoleId(), actionIds)[ FD ]
Line_10 $$ List<String> actionIds = ResourceActionsUtil.getPortletResourceActions(resourceName)-->Line_16 $$ List<String> actions = ResourcePermissionLocalServiceUtil.getAvailableResourcePermissionActionIds(targetLayout.getCompanyId(), resourceName, ResourceConstants.SCOPE_INDIVIDUAL, sourceResourcePrimKey, role.getRoleId(), actionIds)[ FD ]
Line_16 $$ List<String> actions = ResourcePermissionLocalServiceUtil.getAvailableResourcePermissionActionIds(targetLayout.getCompanyId(), resourceName, ResourceConstants.SCOPE_INDIVIDUAL, sourceResourcePrimKey, role.getRoleId(), actionIds)-->Line_17 $$ ResourcePermissionLocalServiceUtil.setResourcePermissions(targetLayout.getCompanyId(), resourceName, ResourceConstants.SCOPE_INDIVIDUAL, targetResourcePrimKey, role.getRoleId(), actions.toArray(new String[actions.size()]))[ FD ]
Line_6 $$ for (String sourcePortletId : sourcePortletIds) -->Line_9 $$ String targetResourcePrimKey = PortletPermissionUtil.getPrimaryKey(targetLayout.getPlid(), sourcePortletId)[ FD ]
Line_2 $$ public void copyPortletPermissions(Layout targetLayout, Layout sourceLayout) throws Exception -->Line_3 $$ List<Role> roles = RoleLocalServiceUtil.getGroupRelatedRoles(targetLayout.getGroupId())[ FD ]
Line_6 $$ for (String sourcePortletId : sourcePortletIds) -->Line_7 $$ String resourceName = PortletConstants.getRootPortletId(sourcePortletId)[ FD ]
Line_2 $$ public void copyPortletPermissions(Layout targetLayout, Layout sourceLayout) throws Exception -->Line_5 $$ List<String> sourcePortletIds = sourceLayoutTypePortlet.getPortletIds()[ CD ]
Line_9 $$ String targetResourcePrimKey = PortletPermissionUtil.getPrimaryKey(targetLayout.getPlid(), sourcePortletId)-->Line_17 $$ ResourcePermissionLocalServiceUtil.setResourcePermissions(targetLayout.getCompanyId(), resourceName, ResourceConstants.SCOPE_INDIVIDUAL, targetResourcePrimKey, role.getRoleId(), actions.toArray(new String[actions.size()]))[ FD ]
Line_11 $$ for (Role role : roles) -->Line_17 $$ ResourcePermissionLocalServiceUtil.setResourcePermissions(targetLayout.getCompanyId(), resourceName, ResourceConstants.SCOPE_INDIVIDUAL, targetResourcePrimKey, role.getRoleId(), actions.toArray(new String[actions.size()]))[ FD ]
