Line_3 $$ if (primaryKey instanceof List<?>) -->Line_9 $$ Map<Serializable, ? extends BaseModel<?>> map = basePersistenceImpl.fetchByPrimaryKeys(primaryKeysSet)[ CD ]
Line_3 $$ if (primaryKey instanceof List<?>) -->Line_17 $$ return (Serializable) Collections.unmodifiableList(list)[ CD ]
Line_18 $$ if (BaseModel.class.isAssignableFrom(finderPath.getResultClass())) -->Line_19 $$ return _entityCache.loadResult(finderPath.isEntityCacheEnabled(), finderPath.getResultClass(), primaryKey, basePersistenceImpl)[ CD ]
Line_4 $$ List<Serializable> primaryKeys = (List<Serializable>) primaryKey-->Line_5 $$ if (primaryKeys.isEmpty()) [ FD ]
Line_3 $$ if (primaryKey instanceof List<?>) -->Line_5 $$ if (primaryKeys.isEmpty()) [ CD ]
Line_2 $$ private Serializable _primaryKeyToResult(FinderPath finderPath, BasePersistenceImpl<? extends BaseModel<?>> basePersistenceImpl, Serializable primaryKey) -->Line_21 $$ return primaryKey[ CD ]
Line_3 $$ if (primaryKey instanceof List<?>) -->Line_10 $$ if (map.size() < primaryKeysSet.size()) [ CD ]
Line_2 $$ private Serializable _primaryKeyToResult(FinderPath finderPath, BasePersistenceImpl<? extends BaseModel<?>> basePersistenceImpl, Serializable primaryKey) -->Line_3 $$ if (primaryKey instanceof List<?>) [ FD ]
Line_5 $$ if (primaryKeys.isEmpty()) -->Line_6 $$ return (Serializable) Collections.emptyList()[ CD ]
Line_8 $$ Set<Serializable> primaryKeysSet = new HashSet(primaryKeys)-->Line_10 $$ if (map.size() < primaryKeysSet.size()) [ FD ]
Line_2 $$ private Serializable _primaryKeyToResult(FinderPath finderPath, BasePersistenceImpl<? extends BaseModel<?>> basePersistenceImpl, Serializable primaryKey) -->Line_19 $$ return _entityCache.loadResult(finderPath.isEntityCacheEnabled(), finderPath.getResultClass(), primaryKey, basePersistenceImpl)[ FD ]
Line_10 $$ if (map.size() < primaryKeysSet.size()) -->Line_11 $$ return null[ CD ]
Line_4 $$ List<Serializable> primaryKeys = (List<Serializable>) primaryKey-->Line_13 $$ List<Serializable> list = new ArrayList(primaryKeys.size())[ FD ]
Line_2 $$ private Serializable _primaryKeyToResult(FinderPath finderPath, BasePersistenceImpl<? extends BaseModel<?>> basePersistenceImpl, Serializable primaryKey) -->Line_9 $$ Map<Serializable, ? extends BaseModel<?>> map = basePersistenceImpl.fetchByPrimaryKeys(primaryKeysSet)[ FD ]
Line_3 $$ if (primaryKey instanceof List<?>) -->Line_8 $$ Set<Serializable> primaryKeysSet = new HashSet(primaryKeys)[ CD ]
Line_13 $$ List<Serializable> list = new ArrayList(primaryKeys.size())-->Line_17 $$ return (Serializable) Collections.unmodifiableList(list)[ FD ]
Line_9 $$ Map<Serializable, ? extends BaseModel<?>> map = basePersistenceImpl.fetchByPrimaryKeys(primaryKeysSet)-->Line_15 $$ list.add(map.get(curPrimaryKey))[ FD ]
Line_3 $$ if (primaryKey instanceof List<?>) -->Line_13 $$ List<Serializable> list = new ArrayList(primaryKeys.size())[ CD ]
Line_2 $$ private Serializable _primaryKeyToResult(FinderPath finderPath, BasePersistenceImpl<? extends BaseModel<?>> basePersistenceImpl, Serializable primaryKey) -->Line_3 $$ if (primaryKey instanceof List<?>) [ CD ]
Line_3 $$ if (primaryKey instanceof List<?>) -->Line_18 $$ if (BaseModel.class.isAssignableFrom(finderPath.getResultClass())) [ CD ]
Line_3 $$ if (primaryKey instanceof List<?>) -->Line_4 $$ List<Serializable> primaryKeys = (List<Serializable>) primaryKey[ CD ]
Line_2 $$ private Serializable _primaryKeyToResult(FinderPath finderPath, BasePersistenceImpl<? extends BaseModel<?>> basePersistenceImpl, Serializable primaryKey) -->Line_18 $$ if (BaseModel.class.isAssignableFrom(finderPath.getResultClass())) [ FD ]
Line_8 $$ Set<Serializable> primaryKeysSet = new HashSet(primaryKeys)-->Line_9 $$ Map<Serializable, ? extends BaseModel<?>> map = basePersistenceImpl.fetchByPrimaryKeys(primaryKeysSet)[ FD ]
Line_13 $$ List<Serializable> list = new ArrayList(primaryKeys.size())-->Line_15 $$ list.add(map.get(curPrimaryKey))[ FD ]
Line_9 $$ Map<Serializable, ? extends BaseModel<?>> map = basePersistenceImpl.fetchByPrimaryKeys(primaryKeysSet)-->Line_10 $$ if (map.size() < primaryKeysSet.size()) [ FD ]
Line_14 $$ for (Serializable curPrimaryKey : primaryKeys) -->Line_15 $$ list.add(map.get(curPrimaryKey))[ FD ]
