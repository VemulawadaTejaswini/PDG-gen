Line_2 $$ void removeChild(@NotNull ObjectNode<T> child) -->Line_4 $$ if (children != null) [ CD ]
Line_2 $$ void removeChild(@NotNull ObjectNode<T> child) -->Line_3 $$ List<ObjectNode<T>> children = myChildren[ CD ]
Line_3 $$ List<ObjectNode<T>> children = myChildren-->Line_8 $$ children.remove(i)[ FD ]
Line_5 $$ for (int i = children.size() - 1; i >= 0; i--) -->Line_8 $$ children.remove(i)[ FD ]
Line_3 $$ List<ObjectNode<T>> children = myChildren-->Line_4 $$ if (children != null) [ FD ]
Line_5 $$ for (int i = children.size() - 1; i >= 0; i--) -->Line_6 $$ ObjectNode<T> node = children.get(i)[ CD ]
Line_7 $$ if (node.equals(child)) -->Line_8 $$ children.remove(i)[ CD ]
Line_5 $$ for (int i = children.size() - 1; i >= 0; i--) -->Line_6 $$ ObjectNode<T> node = children.get(i)[ FD ]
Line_6 $$ ObjectNode<T> node = children.get(i)-->Line_7 $$ if (node.equals(child)) [ FD ]
Line_2 $$ void removeChild(@NotNull ObjectNode<T> child) -->Line_7 $$ if (node.equals(child)) [ FD ]
Line_2 $$ void removeChild(@NotNull ObjectNode<T> child) -->Line_13 $$ child.myParent = null[ CD ]
Line_3 $$ List<ObjectNode<T>> children = myChildren-->Line_6 $$ ObjectNode<T> node = children.get(i)[ FD ]
Line_3 $$ List<ObjectNode<T>> children = myChildren-->Line_5 $$ for (int i = children.size() - 1; i >= 0; i--) [ FD ]
Line_5 $$ for (int i = children.size() - 1; i >= 0; i--) -->Line_7 $$ if (node.equals(child)) [ CD ]
Line_4 $$ if (children != null) -->Line_5 $$ for (int i = children.size() - 1; i >= 0; i--) [ CD ]
