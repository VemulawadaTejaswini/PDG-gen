Line_2 $$ public int addPath(String path) -->Line_4 $$ if (!mySeqToIdx.containsKey(seq)) [ CD ]
Line_3 $$ PathInterner.SubstringWrapper[] seq = myInterner.internParts(path, true)-->Line_4 $$ if (!mySeqToIdx.containsKey(seq)) [ FD ]
Line_4 $$ if (!mySeqToIdx.containsKey(seq)) -->Line_5 $$ mySeqToIdx.put(seq, myIdxToSeq.size())[ CD ]
Line_2 $$ public int addPath(String path) -->Line_3 $$ PathInterner.SubstringWrapper[] seq = myInterner.internParts(path, true)[ FD ]
Line_3 $$ PathInterner.SubstringWrapper[] seq = myInterner.internParts(path, true)-->Line_8 $$ return mySeqToIdx.get(seq)[ FD ]
Line_2 $$ public int addPath(String path) -->Line_3 $$ PathInterner.SubstringWrapper[] seq = myInterner.internParts(path, true)[ CD ]
Line_3 $$ PathInterner.SubstringWrapper[] seq = myInterner.internParts(path, true)-->Line_6 $$ myIdxToSeq.add(seq)[ FD ]
Line_3 $$ PathInterner.SubstringWrapper[] seq = myInterner.internParts(path, true)-->Line_5 $$ mySeqToIdx.put(seq, myIdxToSeq.size())[ FD ]
Line_2 $$ public int addPath(String path) -->Line_8 $$ return mySeqToIdx.get(seq)[ CD ]
Line_4 $$ if (!mySeqToIdx.containsKey(seq)) -->Line_6 $$ myIdxToSeq.add(seq)[ CD ]
