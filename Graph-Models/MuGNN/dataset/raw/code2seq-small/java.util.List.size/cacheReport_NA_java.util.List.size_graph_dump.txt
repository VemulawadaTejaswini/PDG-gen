Line_14 $$ List<Long> blockIds = dn.getFSDataset().getCacheReport(bpid)-->Line_16 $$ cmd = bpNamenode.cacheReport(bpRegistration, bpid, blockIds)[ FD ]
Line_2 $$ DatanodeCommand cacheReport() throws IOException -->Line_3 $$ if (dn.getFSDataset().getCacheCapacity() == 0) [ CD ]
Line_9 $$ if (LOG.isDebugEnabled()) -->Line_10 $$ LOG.debug("Sending cacheReport from service actor: " + this)[ CD ]
Line_8 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_14 $$ List<Long> blockIds = dn.getFSDataset().getCacheReport(bpid)[ CD ]
Line_8 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_13 $$ String bpid = bpos.getBlockPoolId()[ CD ]
Line_19 $$ long sendCost = sendTime - createTime-->Line_20 $$ dn.getMetrics().addCacheReport(sendCost)[ FD ]
Line_14 $$ List<Long> blockIds = dn.getFSDataset().getCacheReport(bpid)-->Line_21 $$ LOG.debug("CacheReport of " + blockIds.size() + " block(s) took " + createCost + " msec to generate and " + sendCost + " msecs for RPC and NN processing")[ FD ]
Line_8 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_9 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_3 $$ if (dn.getFSDataset().getCacheCapacity() == 0) -->Line_4 $$ return null[ CD ]
Line_8 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_19 $$ long sendCost = sendTime - createTime[ CD ]
Line_6 $$ DatanodeCommand cmd = null-->Line_16 $$ cmd = bpNamenode.cacheReport(bpRegistration, bpid, blockIds)[ FD ]
Line_2 $$ DatanodeCommand cacheReport() throws IOException -->Line_8 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) [ CD ]
Line_2 $$ DatanodeCommand cacheReport() throws IOException -->Line_7 $$ final long startTime = Time.monotonicNow()[ CD ]
Line_2 $$ DatanodeCommand cacheReport() throws IOException -->Line_23 $$ return cmd[ CD ]
Line_8 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_15 $$ long createTime = Time.monotonicNow()[ CD ]
Line_8 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_16 $$ cmd = bpNamenode.cacheReport(bpRegistration, bpid, blockIds)[ CD ]
Line_13 $$ String bpid = bpos.getBlockPoolId()-->Line_16 $$ cmd = bpNamenode.cacheReport(bpRegistration, bpid, blockIds)[ FD ]
Line_8 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_20 $$ dn.getMetrics().addCacheReport(sendCost)[ CD ]
Line_2 $$ DatanodeCommand cacheReport() throws IOException -->Line_6 $$ DatanodeCommand cmd = null[ CD ]
Line_8 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_18 $$ long createCost = createTime - startTime[ CD ]
Line_8 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_21 $$ LOG.debug("CacheReport of " + blockIds.size() + " block(s) took " + createCost + " msec to generate and " + sendCost + " msecs for RPC and NN processing")[ CD ]
Line_8 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_17 $$ long sendTime = Time.monotonicNow()[ CD ]
Line_13 $$ String bpid = bpos.getBlockPoolId()-->Line_14 $$ List<Long> blockIds = dn.getFSDataset().getCacheReport(bpid)[ FD ]
