Line_2 $$ DatanodeCommand cacheReport() throws IOException -->Line_10 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) [ CD ]
Line_10 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_20 $$ long createCost = createTime - startTime[ CD ]
Line_11 $$ if (LOG.isDebugEnabled()) -->Line_12 $$ LOG.debug("Sending cacheReport from service actor: " + this)[ CD ]
Line_10 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_22 $$ dn.getMetrics().addCacheReport(sendCost)[ CD ]
Line_10 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_21 $$ long sendCost = sendTime - createTime[ CD ]
Line_16 $$ List<Long> blockIds = dn.getFSDataset().getCacheReport(bpid)-->Line_18 $$ cmd = bpNamenode.cacheReport(bpRegistration, bpid, blockIds)[ FD ]
Line_2 $$ DatanodeCommand cacheReport() throws IOException -->Line_25 $$ return cmd[ CD ]
Line_15 $$ String bpid = bpos.getBlockPoolId()-->Line_16 $$ List<Long> blockIds = dn.getFSDataset().getCacheReport(bpid)[ FD ]
Line_15 $$ String bpid = bpos.getBlockPoolId()-->Line_18 $$ cmd = bpNamenode.cacheReport(bpRegistration, bpid, blockIds)[ FD ]
Line_10 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_16 $$ List<Long> blockIds = dn.getFSDataset().getCacheReport(bpid)[ CD ]
Line_21 $$ long sendCost = sendTime - createTime-->Line_22 $$ dn.getMetrics().addCacheReport(sendCost)[ FD ]
Line_16 $$ List<Long> blockIds = dn.getFSDataset().getCacheReport(bpid)-->Line_23 $$ LOG.debug("CacheReport of " + blockIds.size() + " block(s) took " + createCost + " msec to generate and " + sendCost + " msecs for RPC and NN processing")[ FD ]
Line_10 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_18 $$ cmd = bpNamenode.cacheReport(bpRegistration, bpid, blockIds)[ CD ]
Line_2 $$ DatanodeCommand cacheReport() throws IOException -->Line_9 $$ final long startTime = Time.monotonicNow()[ CD ]
Line_10 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_15 $$ String bpid = bpos.getBlockPoolId()[ CD ]
Line_10 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_11 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_10 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_19 $$ long sendTime = Time.monotonicNow()[ CD ]
Line_10 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_17 $$ long createTime = Time.monotonicNow()[ CD ]
Line_10 $$ if (startTime - lastCacheReport > dnConf.cacheReportInterval) -->Line_23 $$ LOG.debug("CacheReport of " + blockIds.size() + " block(s) took " + createCost + " msec to generate and " + sendCost + " msecs for RPC and NN processing")[ CD ]
