Line_3 $$ if (Path.WINDOWS) -->Line_4 $$ System.out.println("Cannot run test for Windows")[ CD ]
Line_2 $$ public void testSetOwner() throws IOException -->Line_9 $$ createFile(fc, f)[ CD ]
Line_8 $$ Path f = fileContextTestHelper.getTestRootPath(fc, filename)-->Line_13 $$ System.out.println(filename + ": " + fc.getFileStatus(f).getPermission())[ FD ]
Line_10 $$ List<String> groups = null-->Line_12 $$ groups = getGroups()[ FD ]
Line_2 $$ public void testSetOwner() throws IOException -->Line_8 $$ Path f = fileContextTestHelper.getTestRootPath(fc, filename)[ CD ]
Line_10 $$ List<String> groups = null-->Line_28 $$ String g1 = groups.get(1)[ FD ]
Line_28 $$ String g1 = groups.get(1)-->Line_29 $$ fc.setOwner(f, null, g1)[ FD ]
Line_19 $$ if (groups == null || groups.size() < 1) -->Line_21 $$ return[ CD ]
Line_2 $$ public void testSetOwner() throws IOException -->Line_10 $$ List<String> groups = null[ CD ]
Line_12 $$ groups = getGroups()-->Line_28 $$ String g1 = groups.get(1)[ FD ]
Line_8 $$ Path f = fileContextTestHelper.getTestRootPath(fc, filename)-->Line_25 $$ fc.setOwner(f, null, g0)[ FD ]
Line_8 $$ Path f = fileContextTestHelper.getTestRootPath(fc, filename)-->Line_30 $$ Assert.assertEquals(g1, fc.getFileStatus(f).getGroup())[ FD ]
Line_2 $$ public void testSetOwner() throws IOException -->Line_7 $$ String filename = "bar"[ CD ]
Line_27 $$ if (groups.size() > 1) -->Line_29 $$ fc.setOwner(f, null, g1)[ CD ]
Line_12 $$ groups = getGroups()-->Line_24 $$ String g0 = groups.get(0)[ FD ]
Line_12 $$ groups = getGroups()-->Line_27 $$ if (groups.size() > 1) [ FD ]
Line_27 $$ if (groups.size() > 1) -->Line_28 $$ String g1 = groups.get(1)[ CD ]
Line_12 $$ groups = getGroups()-->Line_19 $$ if (groups == null || groups.size() < 1) [ FD ]
Line_8 $$ Path f = fileContextTestHelper.getTestRootPath(fc, filename)-->Line_40 $$ cleanupFile(fc, f)[ FD ]
Line_8 $$ Path f = fileContextTestHelper.getTestRootPath(fc, filename)-->Line_9 $$ createFile(fc, f)[ FD ]
Line_19 $$ if (groups == null || groups.size() < 1) -->Line_20 $$ System.out.println("Cannot run test: need at least one group.  groups=" + groups)[ CD ]
Line_27 $$ if (groups.size() > 1) -->Line_32 $$ System.out.println("Not testing changing the group since user " + "belongs to only one group.")[ CD ]
Line_27 $$ if (groups.size() > 1) -->Line_30 $$ Assert.assertEquals(g1, fc.getFileStatus(f).getGroup())[ CD ]
Line_3 $$ if (Path.WINDOWS) -->Line_5 $$ return[ CD ]
Line_7 $$ String filename = "bar"-->Line_8 $$ Path f = fileContextTestHelper.getTestRootPath(fc, filename)[ FD ]
Line_10 $$ List<String> groups = null-->Line_24 $$ String g0 = groups.get(0)[ FD ]
Line_24 $$ String g0 = groups.get(0)-->Line_26 $$ Assert.assertEquals(g0, fc.getFileStatus(f).getGroup())[ FD ]
Line_8 $$ Path f = fileContextTestHelper.getTestRootPath(fc, filename)-->Line_35 $$ fc.setOwner(f, null, null)[ FD ]
Line_10 $$ List<String> groups = null-->Line_19 $$ if (groups == null || groups.size() < 1) [ FD ]
Line_2 $$ public void testSetOwner() throws IOException -->Line_19 $$ if (groups == null || groups.size() < 1) [ CD ]
Line_24 $$ String g0 = groups.get(0)-->Line_25 $$ fc.setOwner(f, null, g0)[ FD ]
Line_2 $$ public void testSetOwner() throws IOException -->Line_3 $$ if (Path.WINDOWS) [ CD ]
Line_10 $$ List<String> groups = null-->Line_27 $$ if (groups.size() > 1) [ FD ]
Line_8 $$ Path f = fileContextTestHelper.getTestRootPath(fc, filename)-->Line_26 $$ Assert.assertEquals(g0, fc.getFileStatus(f).getGroup())[ FD ]
Line_8 $$ Path f = fileContextTestHelper.getTestRootPath(fc, filename)-->Line_29 $$ fc.setOwner(f, null, g1)[ FD ]
Line_28 $$ String g1 = groups.get(1)-->Line_30 $$ Assert.assertEquals(g1, fc.getFileStatus(f).getGroup())[ FD ]
