Line_2 $$ public <S> List<S> filterUniqueRoots(final List<S> in, final Convertor<S, VirtualFile> convertor) -->Line_6 $$ final SvnFileUrlMappingImpl mapping = (SvnFileUrlMappingImpl) getSvnFileUrlMapping()[ CD ]
Line_15 $$ url = SvnUtil.getUrl(this, ioFile)-->Line_21 $$ infos.add(new MyPair<S>(vf, url.toString(), s))[ FD ]
Line_5 $$ final List<MyPair<S>> infos = new ArrayList<MyPair<S>>(in.size())-->Line_23 $$ final List<MyPair<S>> filtered = new UniqueRootsFilter().filter(infos)[ FD ]
Line_2 $$ public <S> List<S> filterUniqueRoots(final List<S> in, final Convertor<S, VirtualFile> convertor) -->Line_24 $$ final List<S> converted = ObjectsConvertor.convert(filtered, new Convertor<MyPair<S>, S>() [ CD ]
Line_24 $$ final List<S> converted = ObjectsConvertor.convert(filtered, new Convertor<MyPair<S>, S>() -->Line_26 $$ return o.getSrc()[ CD ]
Line_2 $$ public <S> List<S> filterUniqueRoots(final List<S> in, final Convertor<S, VirtualFile> convertor) -->Line_32 $$ return converted[ CD ]
Line_23 $$ final List<MyPair<S>> filtered = new UniqueRootsFilter().filter(infos)-->Line_24 $$ final List<S> converted = ObjectsConvertor.convert(filtered, new Convertor<MyPair<S>, S>() [ FD ]
Line_8 $$ for (S s : in) -->Line_17 $$ notMatched.add(s)[ FD ]
Line_12 $$ final File ioFile = new File(vf.getPath())-->Line_15 $$ url = SvnUtil.getUrl(this, ioFile)[ FD ]
Line_14 $$ if (url == null) -->Line_15 $$ url = SvnUtil.getUrl(this, ioFile)[ CD ]
Line_6 $$ final SvnFileUrlMappingImpl mapping = (SvnFileUrlMappingImpl) getSvnFileUrlMapping()-->Line_13 $$ SVNURL url = mapping.getUrlForFile(ioFile)[ FD ]
Line_9 $$ final VirtualFile vf = convertor.convert(s)-->Line_10 $$ if (vf == null)[ FD ]
Line_2 $$ public <S> List<S> filterUniqueRoots(final List<S> in, final Convertor<S, VirtualFile> convertor) -->Line_5 $$ final List<MyPair<S>> infos = new ArrayList<MyPair<S>>(in.size())[ FD ]
Line_16 $$ if (url == null) -->Line_17 $$ notMatched.add(s)[ CD ]
Line_7 $$ final List<S> notMatched = new LinkedList<S>()-->Line_17 $$ notMatched.add(s)[ FD ]
Line_29 $$ if (!notMatched.isEmpty()) -->Line_30 $$ converted.addAll(notMatched)[ CD ]
Line_2 $$ public <S> List<S> filterUniqueRoots(final List<S> in, final Convertor<S, VirtualFile> convertor) -->Line_23 $$ final List<MyPair<S>> filtered = new UniqueRootsFilter().filter(infos)[ CD ]
Line_3 $$ if (in.size() <= 1)-->Line_4 $$ return in[ CD ]
Line_9 $$ final VirtualFile vf = convertor.convert(s)-->Line_12 $$ final File ioFile = new File(vf.getPath())[ FD ]
Line_12 $$ final File ioFile = new File(vf.getPath())-->Line_13 $$ SVNURL url = mapping.getUrlForFile(ioFile)[ FD ]
Line_15 $$ url = SvnUtil.getUrl(this, ioFile)-->Line_16 $$ if (url == null) [ FD ]
Line_2 $$ public <S> List<S> filterUniqueRoots(final List<S> in, final Convertor<S, VirtualFile> convertor) -->Line_29 $$ if (!notMatched.isEmpty()) [ CD ]
Line_8 $$ for (S s : in) -->Line_9 $$ final VirtualFile vf = convertor.convert(s)[ FD ]
Line_24 $$ final List<S> converted = ObjectsConvertor.convert(filtered, new Convertor<MyPair<S>, S>() -->Line_26 $$ return o.getSrc()[ FD ]
Line_24 $$ final List<S> converted = ObjectsConvertor.convert(filtered, new Convertor<MyPair<S>, S>() -->Line_30 $$ converted.addAll(notMatched)[ FD ]
Line_13 $$ SVNURL url = mapping.getUrlForFile(ioFile)-->Line_14 $$ if (url == null) [ FD ]
Line_2 $$ public <S> List<S> filterUniqueRoots(final List<S> in, final Convertor<S, VirtualFile> convertor) -->Line_3 $$ if (in.size() <= 1)[ FD ]
Line_5 $$ final List<MyPair<S>> infos = new ArrayList<MyPair<S>>(in.size())-->Line_21 $$ infos.add(new MyPair<S>(vf, url.toString(), s))[ FD ]
Line_2 $$ public <S> List<S> filterUniqueRoots(final List<S> in, final Convertor<S, VirtualFile> convertor) -->Line_5 $$ final List<MyPair<S>> infos = new ArrayList<MyPair<S>>(in.size())[ CD ]
Line_2 $$ public <S> List<S> filterUniqueRoots(final List<S> in, final Convertor<S, VirtualFile> convertor) -->Line_9 $$ final VirtualFile vf = convertor.convert(s)[ FD ]
Line_13 $$ SVNURL url = mapping.getUrlForFile(ioFile)-->Line_16 $$ if (url == null) [ FD ]
Line_13 $$ SVNURL url = mapping.getUrlForFile(ioFile)-->Line_21 $$ infos.add(new MyPair<S>(vf, url.toString(), s))[ FD ]
Line_7 $$ final List<S> notMatched = new LinkedList<S>()-->Line_30 $$ converted.addAll(notMatched)[ FD ]
Line_13 $$ SVNURL url = mapping.getUrlForFile(ioFile)-->Line_15 $$ url = SvnUtil.getUrl(this, ioFile)[ FD ]
Line_2 $$ public <S> List<S> filterUniqueRoots(final List<S> in, final Convertor<S, VirtualFile> convertor) -->Line_7 $$ final List<S> notMatched = new LinkedList<S>()[ CD ]
Line_14 $$ if (url == null) -->Line_16 $$ if (url == null) [ CD ]
Line_2 $$ public <S> List<S> filterUniqueRoots(final List<S> in, final Convertor<S, VirtualFile> convertor) -->Line_3 $$ if (in.size() <= 1)[ CD ]
Line_7 $$ final List<S> notMatched = new LinkedList<S>()-->Line_29 $$ if (!notMatched.isEmpty()) [ FD ]
