Line_6 $$ int cur = myLexPosition-->Line_14 $$ return cur < myShrunkSequence.size() ? myShrunkSequence.get(cur).elementType : null[ FD ]
Line_6 $$ int cur = myLexPosition-->Line_10 $$ cur++[ FD ]
Line_7 $$ while (steps > 0) -->Line_8 $$ ++cur[ CD ]
Line_2 $$ public IElementType lookAhead(int steps) -->Line_14 $$ return cur < myShrunkSequence.size() ? myShrunkSequence.get(cur).elementType : null[ CD ]
Line_2 $$ public IElementType lookAhead(int steps) -->Line_6 $$ int cur = myLexPosition[ CD ]
Line_6 $$ int cur = myLexPosition-->Line_8 $$ ++cur[ FD ]
Line_2 $$ public IElementType lookAhead(int steps) -->Line_7 $$ while (steps > 0) [ FD ]
Line_6 $$ int cur = myLexPosition-->Line_9 $$ while (cur < myShrunkSequence.size() && isWhiteSpaceOnPos(cur)) [ FD ]
Line_2 $$ public IElementType lookAhead(int steps) -->Line_12 $$ steps--[ FD ]
Line_2 $$ public IElementType lookAhead(int steps) -->Line_3 $$ if (eof()) [ CD ]
Line_3 $$ if (eof()) -->Line_4 $$ return null[ CD ]
Line_9 $$ while (cur < myShrunkSequence.size() && isWhiteSpaceOnPos(cur)) -->Line_10 $$ cur++[ CD ]
Line_7 $$ while (steps > 0) -->Line_9 $$ while (cur < myShrunkSequence.size() && isWhiteSpaceOnPos(cur)) [ CD ]
Line_2 $$ public IElementType lookAhead(int steps) -->Line_7 $$ while (steps > 0) [ CD ]
Line_7 $$ while (steps > 0) -->Line_12 $$ steps--[ CD ]
