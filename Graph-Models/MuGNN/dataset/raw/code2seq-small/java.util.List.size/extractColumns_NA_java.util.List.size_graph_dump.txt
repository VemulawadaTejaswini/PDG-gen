Line_3 $$ ImmutableList.Builder<MaterializedRow> rows = ImmutableList.builder()-->Line_9 $$ rows.add(new MaterializedRow(MaterializedResult.DEFAULT_PRECISION, values))[ FD ]
Line_2 $$ private static MaterializedResult extractColumns(MaterializedResult materializedRows, List<Integer> indexes, List<Type> types) -->Line_6 $$ for (int i = 0; i < indexes.size(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < indexes.size(); i++) -->Line_7 $$ values[i] = row.getField(indexes.get(i))[ FD ]
Line_4 $$ for (MaterializedRow row : materializedRows) -->Line_7 $$ values[i] = row.getField(indexes.get(i))[ FD ]
Line_2 $$ private static MaterializedResult extractColumns(MaterializedResult materializedRows, List<Integer> indexes, List<Type> types) -->Line_5 $$ Object[] values = new Object[indexes.size()][ FD ]
Line_3 $$ ImmutableList.Builder<MaterializedRow> rows = ImmutableList.builder()-->Line_11 $$ return new MaterializedResult(rows.build(), types)[ FD ]
Line_6 $$ for (int i = 0; i < indexes.size(); i++) -->Line_7 $$ values[i] = row.getField(indexes.get(i))[ CD ]
Line_2 $$ private static MaterializedResult extractColumns(MaterializedResult materializedRows, List<Integer> indexes, List<Type> types) -->Line_7 $$ values[i] = row.getField(indexes.get(i))[ FD ]
Line_2 $$ private static MaterializedResult extractColumns(MaterializedResult materializedRows, List<Integer> indexes, List<Type> types) -->Line_3 $$ ImmutableList.Builder<MaterializedRow> rows = ImmutableList.builder()[ CD ]
Line_2 $$ private static MaterializedResult extractColumns(MaterializedResult materializedRows, List<Integer> indexes, List<Type> types) -->Line_11 $$ return new MaterializedResult(rows.build(), types)[ CD ]
