Line_4 $$ final List sn = (List) getSnapshot()-->Line_9 $$ final boolean unequal = countOccurrences(elt, bag, elementType) != countOccurrences(elt, sn, elementType)[ FD ]
Line_2 $$ public boolean equalsSnapshot(CollectionPersister persister) throws HibernateException -->Line_4 $$ final List sn = (List) getSnapshot()[ CD ]
Line_4 $$ final List sn = (List) getSnapshot()-->Line_5 $$ if (sn.size() != bag.size()) [ FD ]
Line_2 $$ public boolean equalsSnapshot(CollectionPersister persister) throws HibernateException -->Line_14 $$ return true[ CD ]
Line_5 $$ if (sn.size() != bag.size()) -->Line_6 $$ return false[ CD ]
Line_2 $$ public boolean equalsSnapshot(CollectionPersister persister) throws HibernateException -->Line_3 $$ final Type elementType = persister.getElementType()[ FD ]
Line_2 $$ public boolean equalsSnapshot(CollectionPersister persister) throws HibernateException -->Line_3 $$ final Type elementType = persister.getElementType()[ CD ]
Line_10 $$ if (unequal) -->Line_11 $$ return false[ CD ]
Line_3 $$ final Type elementType = persister.getElementType()-->Line_9 $$ final boolean unequal = countOccurrences(elt, bag, elementType) != countOccurrences(elt, sn, elementType)[ FD ]
Line_2 $$ public boolean equalsSnapshot(CollectionPersister persister) throws HibernateException -->Line_5 $$ if (sn.size() != bag.size()) [ CD ]
Line_8 $$ for (Object elt : bag) -->Line_9 $$ final boolean unequal = countOccurrences(elt, bag, elementType) != countOccurrences(elt, sn, elementType)[ FD ]
