Line_6 $$ list = queryForPropertyHasNotChanged(ManyToOneComponentTestEntity.class, mtocte_id1, "comp1")-->Line_7 $$ assertEquals(0, list.size())[ FD ]
Line_2 $$ public void testHasChangedId1() throws Exception -->Line_3 $$ List list = queryForPropertyHasChanged(ManyToOneComponentTestEntity.class, mtocte_id1, "comp1")[ CD ]
Line_3 $$ List list = queryForPropertyHasChanged(ManyToOneComponentTestEntity.class, mtocte_id1, "comp1")-->Line_7 $$ assertEquals(0, list.size())[ FD ]
Line_3 $$ List list = queryForPropertyHasChanged(ManyToOneComponentTestEntity.class, mtocte_id1, "comp1")-->Line_5 $$ assertEquals(makeList(2, 3), extractRevisionNumbers(list))[ FD ]
Line_2 $$ public void testHasChangedId1() throws Exception -->Line_7 $$ assertEquals(0, list.size())[ CD ]
Line_3 $$ List list = queryForPropertyHasChanged(ManyToOneComponentTestEntity.class, mtocte_id1, "comp1")-->Line_6 $$ list = queryForPropertyHasNotChanged(ManyToOneComponentTestEntity.class, mtocte_id1, "comp1")[ FD ]
Line_2 $$ public void testHasChangedId1() throws Exception -->Line_6 $$ list = queryForPropertyHasNotChanged(ManyToOneComponentTestEntity.class, mtocte_id1, "comp1")[ CD ]
Line_2 $$ public void testHasChangedId1() throws Exception -->Line_4 $$ assertEquals(2, list.size())[ CD ]
Line_3 $$ List list = queryForPropertyHasChanged(ManyToOneComponentTestEntity.class, mtocte_id1, "comp1")-->Line_4 $$ assertEquals(2, list.size())[ FD ]
Line_2 $$ public void testHasChangedId1() throws Exception -->Line_5 $$ assertEquals(makeList(2, 3), extractRevisionNumbers(list))[ CD ]
