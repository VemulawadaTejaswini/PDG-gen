Line_2 $$ public void testHQL() -->Line_3 $$ performWithStandardData(new TestCode() [ CD ]
Line_3 $$ performWithStandardData(new TestCode() -->Line_15 $$ session.close()[ CD ]
Line_3 $$ performWithStandardData(new TestCode() -->Line_10 $$ int sectionCount = sections.size()[ CD ]
Line_5 $$ Session session = openSession()-->Line_15 $$ session.close()[ FD ]
Line_3 $$ performWithStandardData(new TestCode() -->Line_12 $$ assertEquals(1, sessionFactory().getStatistics().getEntityLoadCount())[ CD ]
Line_9 $$ List sections = session.createQuery("from CourseOffering").list()-->Line_10 $$ int sectionCount = sections.size()[ FD ]
Line_10 $$ int sectionCount = sections.size()-->Line_11 $$ assertEquals("unexpected CourseOffering count", 1, sectionCount)[ FD ]
Line_5 $$ Session session = openSession()-->Line_14 $$ session.getTransaction().commit()[ FD ]
Line_3 $$ performWithStandardData(new TestCode() -->Line_13 $$ assertEquals(0, sessionFactory().getStatistics().getEntityFetchCount())[ CD ]
Line_3 $$ performWithStandardData(new TestCode() -->Line_14 $$ session.getTransaction().commit()[ CD ]
Line_5 $$ Session session = openSession()-->Line_9 $$ List sections = session.createQuery("from CourseOffering").list()[ FD ]
Line_5 $$ Session session = openSession()-->Line_7 $$ session.enableFetchProfile("offering.details")[ FD ]
Line_3 $$ performWithStandardData(new TestCode() -->Line_7 $$ session.enableFetchProfile("offering.details")[ CD ]
Line_3 $$ performWithStandardData(new TestCode() -->Line_9 $$ List sections = session.createQuery("from CourseOffering").list()[ CD ]
Line_3 $$ performWithStandardData(new TestCode() -->Line_5 $$ Session session = openSession()[ CD ]
Line_5 $$ Session session = openSession()-->Line_6 $$ session.beginTransaction()[ FD ]
Line_3 $$ performWithStandardData(new TestCode() -->Line_8 $$ session.enableFetchProfile("enrollment.details")[ CD ]
Line_5 $$ Session session = openSession()-->Line_8 $$ session.enableFetchProfile("enrollment.details")[ FD ]
Line_3 $$ performWithStandardData(new TestCode() -->Line_6 $$ session.beginTransaction()[ CD ]
Line_3 $$ performWithStandardData(new TestCode() -->Line_11 $$ assertEquals("unexpected CourseOffering count", 1, sectionCount)[ CD ]
