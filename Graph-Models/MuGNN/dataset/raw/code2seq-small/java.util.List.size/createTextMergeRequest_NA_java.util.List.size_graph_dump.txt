Line_7 $$ final Document outputDocument = FileDocumentManager.getInstance().getDocument(output)-->Line_12 $$ DocumentContent outputContent = myContentFactory.create(project, outputDocument)[ FD ]
Line_2 $$ public TextMergeRequest createTextMergeRequest(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<byte[]> byteContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_18 $$ return new TextMergeRequestImpl(project, outputContent, originalContent, contents, title, contentTitles, applyCallback)[ CD ]
Line_2 $$ public TextMergeRequest createTextMergeRequest(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<byte[]> byteContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_8 $$ if (outputDocument == null)[ CD ]
Line_2 $$ public TextMergeRequest createTextMergeRequest(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<byte[]> byteContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_3 $$ if (byteContents.size() != 3)[ CD ]
Line_2 $$ public TextMergeRequest createTextMergeRequest(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<byte[]> byteContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_16 $$ contents.add(FileAwareDocumentContent.create(project, bytes, output))[ FD ]
Line_2 $$ public TextMergeRequest createTextMergeRequest(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<byte[]> byteContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_13 $$ CharSequence originalContent = outputDocument.getImmutableCharSequence()[ CD ]
Line_7 $$ final Document outputDocument = FileDocumentManager.getInstance().getDocument(output)-->Line_10 $$ if (!DiffUtil.canMakeWritable(outputDocument))[ FD ]
Line_2 $$ public TextMergeRequest createTextMergeRequest(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<byte[]> byteContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_7 $$ final Document outputDocument = FileDocumentManager.getInstance().getDocument(output)[ FD ]
Line_14 $$ List<DocumentContent> contents = new ArrayList<DocumentContent>(3)-->Line_16 $$ contents.add(FileAwareDocumentContent.create(project, bytes, output))[ FD ]
Line_2 $$ public TextMergeRequest createTextMergeRequest(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<byte[]> byteContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_5 $$ if (contentTitles.size() != 3)[ CD ]
Line_2 $$ public TextMergeRequest createTextMergeRequest(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<byte[]> byteContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_7 $$ final Document outputDocument = FileDocumentManager.getInstance().getDocument(output)[ CD ]
Line_15 $$ for (byte[] bytes : byteContents) -->Line_16 $$ contents.add(FileAwareDocumentContent.create(project, bytes, output))[ FD ]
Line_2 $$ public TextMergeRequest createTextMergeRequest(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<byte[]> byteContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_3 $$ if (byteContents.size() != 3)[ FD ]
Line_7 $$ final Document outputDocument = FileDocumentManager.getInstance().getDocument(output)-->Line_8 $$ if (outputDocument == null)[ FD ]
Line_2 $$ public TextMergeRequest createTextMergeRequest(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<byte[]> byteContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_5 $$ if (contentTitles.size() != 3)[ FD ]
Line_2 $$ public TextMergeRequest createTextMergeRequest(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<byte[]> byteContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_12 $$ DocumentContent outputContent = myContentFactory.create(project, outputDocument)[ CD ]
Line_2 $$ public TextMergeRequest createTextMergeRequest(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<byte[]> byteContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_14 $$ List<DocumentContent> contents = new ArrayList<DocumentContent>(3)[ CD ]
Line_2 $$ public TextMergeRequest createTextMergeRequest(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<byte[]> byteContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_11 $$ throw new InvalidDiffRequestException("Output is read only: " + output.getPresentableUrl())[ FD ]
Line_2 $$ public TextMergeRequest createTextMergeRequest(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<byte[]> byteContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_10 $$ if (!DiffUtil.canMakeWritable(outputDocument))[ CD ]
Line_7 $$ final Document outputDocument = FileDocumentManager.getInstance().getDocument(output)-->Line_13 $$ CharSequence originalContent = outputDocument.getImmutableCharSequence()[ FD ]
Line_2 $$ public TextMergeRequest createTextMergeRequest(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<byte[]> byteContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_12 $$ DocumentContent outputContent = myContentFactory.create(project, outputDocument)[ FD ]
Line_2 $$ public TextMergeRequest createTextMergeRequest(@Nullable Project project, @NotNull VirtualFile output, @NotNull List<byte[]> byteContents, @Nullable String title, @NotNull List<String> contentTitles, @Nullable Consumer<MergeResult> applyCallback) throws InvalidDiffRequestException -->Line_9 $$ throw new InvalidDiffRequestException("Can't get output document: " + output.getPresentableUrl())[ FD ]
