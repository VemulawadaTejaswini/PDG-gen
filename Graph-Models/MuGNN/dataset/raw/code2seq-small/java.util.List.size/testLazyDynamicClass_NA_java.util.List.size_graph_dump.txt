Line_22 $$ s = openSession()-->Line_44 $$ s.close()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_29 $$ s.clear()[ CD ]
Line_39 $$ s = openSession()-->Line_42 $$ s.delete(cars)[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_35 $$ assertTrue(((List) ((Map) model.get("productLine")).get("models")).contains(model))[ CD ]
Line_41 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()-->Line_42 $$ s.delete(cars)[ FD ]
Line_22 $$ s = openSession()-->Line_38 $$ s.close()[ FD ]
Line_5 $$ Map cars = new HashMap()-->Line_6 $$ cars.put("description", "Cars")[ FD ]
Line_3 $$ Session s = openSession()-->Line_42 $$ s.delete(cars)[ FD ]
Line_15 $$ List models = new ArrayList()-->Line_27 $$ assertEquals(models.size(), 2)[ FD ]
Line_23 $$ t = s.beginTransaction()-->Line_43 $$ t.commit()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_38 $$ s.close()[ CD ]
Line_25 $$ models = (List) cars.get("models")-->Line_27 $$ assertEquals(models.size(), 2)[ FD ]
Line_24 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()-->Line_25 $$ models = (List) cars.get("models")[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_30 $$ List list = s.createQuery("from Model m").list()[ CD ]
Line_11 $$ Map hsv = new HashMap()-->Line_13 $$ hsv.put("name", "hsv")[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_37 $$ t.commit()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_21 $$ s.close()[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_20 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_36 $$ s.clear()[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction t = s.beginTransaction()[ FD ]
Line_24 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()-->Line_42 $$ s.delete(cars)[ FD ]
Line_11 $$ Map hsv = new HashMap()-->Line_12 $$ hsv.put("productLine", cars)[ FD ]
Line_3 $$ Session s = openSession()-->Line_24 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ FD ]
Line_7 $$ Map monaro = new HashMap()-->Line_10 $$ monaro.put("description", "Holden Monaro")[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_15 $$ List models = new ArrayList()[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_40 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Map cars = new HashMap()-->Line_24 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_39 $$ s = openSession()[ CD ]
Line_15 $$ List models = new ArrayList()-->Line_25 $$ models = (List) cars.get("models")[ FD ]
Line_7 $$ Map monaro = new HashMap()-->Line_9 $$ monaro.put("name", "monaro")[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_16 $$ cars.put("models", models)[ CD ]
Line_25 $$ models = (List) cars.get("models")-->Line_28 $$ assertTrue(Hibernate.isInitialized(models))[ FD ]
Line_3 $$ Session s = openSession()-->Line_23 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_3 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_24 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ CD ]
Line_25 $$ models = (List) cars.get("models")-->Line_26 $$ assertFalse(Hibernate.isInitialized(models))[ FD ]
Line_15 $$ List models = new ArrayList()-->Line_17 $$ models.add(hsv)[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_41 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ CD ]
Line_5 $$ Map cars = new HashMap()-->Line_19 $$ s.save("ProductLine", cars)[ FD ]
Line_24 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()-->Line_41 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ FD ]
Line_5 $$ Map cars = new HashMap()-->Line_41 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ FD ]
Line_30 $$ List list = s.createQuery("from Model m").list()-->Line_34 $$ Map model = (Map) list.get(0)[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_6 $$ cars.put("description", "Cars")[ CD ]
Line_5 $$ Map cars = new HashMap()-->Line_12 $$ hsv.put("productLine", cars)[ FD ]
Line_22 $$ s = openSession()-->Line_24 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ FD ]
Line_39 $$ s = openSession()-->Line_41 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ FD ]
Line_5 $$ Map cars = new HashMap()-->Line_16 $$ cars.put("models", models)[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_28 $$ assertTrue(Hibernate.isInitialized(models))[ CD ]
Line_5 $$ Map cars = new HashMap()-->Line_8 $$ monaro.put("productLine", cars)[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_31 $$ for (Iterator i = list.iterator(); i.hasNext(); ) [ CD ]
Line_3 $$ Session s = openSession()-->Line_44 $$ s.close()[ FD ]
Line_15 $$ List models = new ArrayList()-->Line_16 $$ cars.put("models", models)[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_17 $$ models.add(hsv)[ CD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_5 $$ Map cars = new HashMap()[ CD ]
Line_22 $$ s = openSession()-->Line_30 $$ List list = s.createQuery("from Model m").list()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_14 $$ hsv.put("description", "Holden Commodore HSV")[ CD ]
Line_31 $$ for (Iterator i = list.iterator(); i.hasNext(); ) -->Line_32 $$ assertFalse(Hibernate.isInitialized(((Map) i.next()).get("productLine")))[ CD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_40 $$ t = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_41 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_18 $$ models.add(monaro)[ CD ]
Line_22 $$ s = openSession()-->Line_29 $$ s.clear()[ FD ]
Line_7 $$ Map monaro = new HashMap()-->Line_8 $$ monaro.put("productLine", cars)[ FD ]
Line_22 $$ s = openSession()-->Line_41 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_19 $$ s.save("ProductLine", cars)[ CD ]
Line_11 $$ Map hsv = new HashMap()-->Line_14 $$ hsv.put("description", "Holden Commodore HSV")[ FD ]
Line_3 $$ Session s = openSession()-->Line_39 $$ s = openSession()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_20 $$ t.commit()[ CD ]
Line_22 $$ s = openSession()-->Line_42 $$ s.delete(cars)[ FD ]
Line_23 $$ t = s.beginTransaction()-->Line_37 $$ t.commit()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_23 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_8 $$ monaro.put("productLine", cars)[ CD ]
Line_34 $$ Map model = (Map) list.get(0)-->Line_35 $$ assertTrue(((List) ((Map) model.get("productLine")).get("models")).contains(model))[ FD ]
Line_22 $$ s = openSession()-->Line_39 $$ s = openSession()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_23 $$ t = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_29 $$ s.clear()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_43 $$ t.commit()[ CD ]
Line_22 $$ s = openSession()-->Line_36 $$ s.clear()[ FD ]
Line_15 $$ List models = new ArrayList()-->Line_18 $$ models.add(monaro)[ FD ]
Line_3 $$ Session s = openSession()-->Line_21 $$ s.close()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_26 $$ assertFalse(Hibernate.isInitialized(models))[ CD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_4 $$ Transaction t = s.beginTransaction()[ CD ]
Line_15 $$ List models = new ArrayList()-->Line_28 $$ assertTrue(Hibernate.isInitialized(models))[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_44 $$ s.close()[ CD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_37 $$ t.commit()[ CD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_12 $$ hsv.put("productLine", cars)[ CD ]
Line_30 $$ List list = s.createQuery("from Model m").list()-->Line_31 $$ for (Iterator i = list.iterator(); i.hasNext(); ) [ FD ]
Line_11 $$ Map hsv = new HashMap()-->Line_17 $$ models.add(hsv)[ FD ]
Line_40 $$ t = s.beginTransaction()-->Line_43 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_40 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_25 $$ models = (List) cars.get("models")[ CD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_9 $$ monaro.put("name", "monaro")[ CD ]
Line_3 $$ Session s = openSession()-->Line_22 $$ s = openSession()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_22 $$ s = openSession()[ CD ]
Line_22 $$ s = openSession()-->Line_40 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_10 $$ monaro.put("description", "Holden Monaro")[ CD ]
Line_5 $$ Map cars = new HashMap()-->Line_42 $$ s.delete(cars)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_43 $$ t.commit()[ FD ]
Line_31 $$ for (Iterator i = list.iterator(); i.hasNext(); ) -->Line_32 $$ assertFalse(Hibernate.isInitialized(((Map) i.next()).get("productLine")))[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_7 $$ Map monaro = new HashMap()[ CD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_11 $$ Map hsv = new HashMap()[ CD ]
Line_5 $$ Map cars = new HashMap()-->Line_25 $$ models = (List) cars.get("models")[ FD ]
Line_39 $$ s = openSession()-->Line_44 $$ s.close()[ FD ]
Line_15 $$ List models = new ArrayList()-->Line_26 $$ assertFalse(Hibernate.isInitialized(models))[ FD ]
Line_39 $$ s = openSession()-->Line_40 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_13 $$ hsv.put("name", "hsv")[ CD ]
Line_7 $$ Map monaro = new HashMap()-->Line_18 $$ models.add(monaro)[ FD ]
Line_23 $$ t = s.beginTransaction()-->Line_40 $$ t = s.beginTransaction()[ FD ]
Line_22 $$ s = openSession()-->Line_23 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_34 $$ Map model = (Map) list.get(0)[ CD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_27 $$ assertEquals(models.size(), 2)[ CD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_36 $$ s.clear()[ CD ]
Line_2 $$ public void testLazyDynamicClass() -->Line_42 $$ s.delete(cars)[ CD ]
Line_3 $$ Session s = openSession()-->Line_38 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_30 $$ List list = s.createQuery("from Model m").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_19 $$ s.save("ProductLine", cars)[ FD ]
