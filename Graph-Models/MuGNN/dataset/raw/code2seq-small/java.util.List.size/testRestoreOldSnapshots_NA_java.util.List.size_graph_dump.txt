Line_29 $$ if (expectedVersions.isEmpty() == false) -->Line_30 $$ StringBuilder msg = new StringBuilder("Old repositories tests are missing versions:")[ CD ]
Line_2 $$ public void testRestoreOldSnapshots() throws Exception -->Line_11 $$ SortedSet<String> expectedVersions = new TreeSet()[ CD ]
Line_13 $$ if (Modifier.isStatic(field.getModifiers()) && field.getType() == Version.class) -->Line_19 $$ if (v.equals(Version.CURRENT))[ CD ]
Line_7 $$ for (String version : repoVersions) -->Line_8 $$ createRepo("repo", version, repo)[ FD ]
Line_12 $$ for (java.lang.reflect.Field field : Version.class.getFields()) -->Line_14 $$ Version v = (Version) field.get(Version.class)[ FD ]
Line_2 $$ public void testRestoreOldSnapshots() throws Exception -->Line_29 $$ if (expectedVersions.isEmpty() == false) [ CD ]
Line_14 $$ Version v = (Version) field.get(Version.class)-->Line_19 $$ if (v.equals(Version.CURRENT))[ FD ]
Line_11 $$ SortedSet<String> expectedVersions = new TreeSet()-->Line_29 $$ if (expectedVersions.isEmpty() == false) [ FD ]
Line_14 $$ Version v = (Version) field.get(Version.class)-->Line_17 $$ if (v.onOrBefore(Version.V_2_0_0_beta1))[ FD ]
Line_11 $$ SortedSet<String> expectedVersions = new TreeSet()-->Line_21 $$ expectedVersions.add(v.toString())[ FD ]
Line_2 $$ public void testRestoreOldSnapshots() throws Exception -->Line_5 $$ List<String> repoVersions = repoVersions()[ CD ]
Line_25 $$ if (expectedVersions.remove(repoVersion) == false) -->Line_26 $$ logger.warn("Old repositories tests contain extra repo: " + repoVersion)[ CD ]
Line_3 $$ String repo = "test_repo"-->Line_8 $$ createRepo("repo", version, repo)[ FD ]
Line_13 $$ if (Modifier.isStatic(field.getModifiers()) && field.getType() == Version.class) -->Line_15 $$ if (v.snapshot())[ CD ]
Line_3 $$ String repo = "test_repo"-->Line_9 $$ testOldSnapshot(version, repo, snapshot)[ FD ]
Line_13 $$ if (Modifier.isStatic(field.getModifiers()) && field.getType() == Version.class) -->Line_14 $$ Version v = (Version) field.get(Version.class)[ CD ]
Line_4 $$ String snapshot = "test_1"-->Line_9 $$ testOldSnapshot(version, repo, snapshot)[ FD ]
Line_29 $$ if (expectedVersions.isEmpty() == false) -->Line_34 $$ fail(msg.toString())[ CD ]
Line_30 $$ StringBuilder msg = new StringBuilder("Old repositories tests are missing versions:")-->Line_32 $$ msg.append("\n" + expected)[ FD ]
Line_2 $$ public void testRestoreOldSnapshots() throws Exception -->Line_4 $$ String snapshot = "test_1"[ CD ]
Line_24 $$ for (String repoVersion : repoVersions) -->Line_25 $$ if (expectedVersions.remove(repoVersion) == false) [ FD ]
Line_30 $$ StringBuilder msg = new StringBuilder("Old repositories tests are missing versions:")-->Line_34 $$ fail(msg.toString())[ FD ]
Line_2 $$ public void testRestoreOldSnapshots() throws Exception -->Line_3 $$ String repo = "test_repo"[ CD ]
Line_14 $$ Version v = (Version) field.get(Version.class)-->Line_21 $$ expectedVersions.add(v.toString())[ FD ]
Line_13 $$ if (Modifier.isStatic(field.getModifiers()) && field.getType() == Version.class) -->Line_21 $$ expectedVersions.add(v.toString())[ CD ]
Line_2 $$ public void testRestoreOldSnapshots() throws Exception -->Line_6 $$ assertThat(repoVersions.size(), greaterThan(0))[ CD ]
Line_14 $$ Version v = (Version) field.get(Version.class)-->Line_15 $$ if (v.snapshot())[ FD ]
Line_13 $$ if (Modifier.isStatic(field.getModifiers()) && field.getType() == Version.class) -->Line_17 $$ if (v.onOrBefore(Version.V_2_0_0_beta1))[ CD ]
Line_12 $$ for (java.lang.reflect.Field field : Version.class.getFields()) -->Line_13 $$ if (Modifier.isStatic(field.getModifiers()) && field.getType() == Version.class) [ FD ]
Line_11 $$ SortedSet<String> expectedVersions = new TreeSet()-->Line_25 $$ if (expectedVersions.remove(repoVersion) == false) [ FD ]
Line_7 $$ for (String version : repoVersions) -->Line_9 $$ testOldSnapshot(version, repo, snapshot)[ FD ]
Line_5 $$ List<String> repoVersions = repoVersions()-->Line_6 $$ assertThat(repoVersions.size(), greaterThan(0))[ FD ]
