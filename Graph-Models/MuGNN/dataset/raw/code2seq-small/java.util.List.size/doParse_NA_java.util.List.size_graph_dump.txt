Line_4 $$ if (!childElements.isEmpty()) -->Line_9 $$ builder.addPropertyValue("definitions", locations.toArray(new String[locations.size()]))[ CD ]
Line_17 $$ if (element.hasAttribute("definitions-factory")) -->Line_18 $$ builder.addPropertyValue("definitionsFactoryClass", element.getAttribute("definitions-factory"))[ CD ]
Line_11 $$ if (element.hasAttribute("check-refresh")) -->Line_12 $$ builder.addPropertyValue("checkRefresh", element.getAttribute("check-refresh"))[ CD ]
Line_2 $$ protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) -->Line_11 $$ if (element.hasAttribute("check-refresh")) [ CD ]
Line_2 $$ protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) -->Line_14 $$ if (element.hasAttribute("validate-definitions")) [ CD ]
Line_2 $$ protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) -->Line_17 $$ if (element.hasAttribute("definitions-factory")) [ CD ]
Line_2 $$ protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) -->Line_14 $$ if (element.hasAttribute("validate-definitions")) [ FD ]
Line_14 $$ if (element.hasAttribute("validate-definitions")) -->Line_15 $$ builder.addPropertyValue("validateDefinitions", element.getAttribute("validate-definitions"))[ CD ]
Line_2 $$ protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) -->Line_20 $$ if (element.hasAttribute("preparer-factory")) [ FD ]
Line_2 $$ protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) -->Line_3 $$ List<Element> childElements = DomUtils.getChildElementsByTagName(element, "definitions")[ FD ]
Line_3 $$ List<Element> childElements = DomUtils.getChildElementsByTagName(element, "definitions")-->Line_5 $$ List<String> locations = new ArrayList<String>(childElements.size())[ FD ]
Line_5 $$ List<String> locations = new ArrayList<String>(childElements.size())-->Line_9 $$ builder.addPropertyValue("definitions", locations.toArray(new String[locations.size()]))[ FD ]
Line_2 $$ protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) -->Line_15 $$ builder.addPropertyValue("validateDefinitions", element.getAttribute("validate-definitions"))[ FD ]
Line_2 $$ protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) -->Line_4 $$ if (!childElements.isEmpty()) [ CD ]
Line_2 $$ protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) -->Line_18 $$ builder.addPropertyValue("definitionsFactoryClass", element.getAttribute("definitions-factory"))[ FD ]
Line_2 $$ protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) -->Line_12 $$ builder.addPropertyValue("checkRefresh", element.getAttribute("check-refresh"))[ FD ]
Line_2 $$ protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) -->Line_9 $$ builder.addPropertyValue("definitions", locations.toArray(new String[locations.size()]))[ FD ]
Line_6 $$ for (Element childElement : childElements) -->Line_7 $$ locations.add(childElement.getAttribute("location"))[ FD ]
Line_2 $$ protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) -->Line_20 $$ if (element.hasAttribute("preparer-factory")) [ CD ]
Line_2 $$ protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) -->Line_3 $$ List<Element> childElements = DomUtils.getChildElementsByTagName(element, "definitions")[ CD ]
Line_20 $$ if (element.hasAttribute("preparer-factory")) -->Line_21 $$ builder.addPropertyValue("preparerFactoryClass", element.getAttribute("preparer-factory"))[ CD ]
Line_5 $$ List<String> locations = new ArrayList<String>(childElements.size())-->Line_7 $$ locations.add(childElement.getAttribute("location"))[ FD ]
Line_2 $$ protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) -->Line_17 $$ if (element.hasAttribute("definitions-factory")) [ FD ]
Line_2 $$ protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) -->Line_11 $$ if (element.hasAttribute("check-refresh")) [ FD ]
Line_4 $$ if (!childElements.isEmpty()) -->Line_5 $$ List<String> locations = new ArrayList<String>(childElements.size())[ CD ]
Line_2 $$ protected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) -->Line_21 $$ builder.addPropertyValue("preparerFactoryClass", element.getAttribute("preparer-factory"))[ FD ]
Line_3 $$ List<Element> childElements = DomUtils.getChildElementsByTagName(element, "definitions")-->Line_4 $$ if (!childElements.isEmpty()) [ FD ]
