Line_20 $$ List<Number> revisionsForRolledbackClass = getAuditReader().getRevisions(IntTestEntity.class, rollbackedIteId)-->Line_21 $$ Assert.assertEquals("There should be no revision for rolled back transaction.", 0, revisionsForRolledbackClass.size())[ FD ]
Line_9 $$ Integer rollbackedIteId = iteToRollback.getId()-->Line_20 $$ List<Number> revisionsForRolledbackClass = getAuditReader().getRevisions(IntTestEntity.class, rollbackedIteId)[ FD ]
Line_13 $$ IntTestEntity ite2 = new IntTestEntity(50)-->Line_15 $$ Integer ite2Id = ite2.getId()[ FD ]
Line_13 $$ IntTestEntity ite2 = new IntTestEntity(50)-->Line_14 $$ em.persist(ite2)[ FD ]
Line_7 $$ IntTestEntity iteToRollback = new IntTestEntity(30)-->Line_9 $$ Integer rollbackedIteId = iteToRollback.getId()[ FD ]
Line_7 $$ IntTestEntity iteToRollback = new IntTestEntity(30)-->Line_8 $$ em.persist(iteToRollback)[ FD ]
