Line_3 $$ if (UsefulTestCase.IS_UNDER_TEAMCITY && IS_ENV_CONFIGURATION) -->Line_5 $$ List<String> roots = getPythonRoots()[ CD ]
Line_3 $$ if (UsefulTestCase.IS_UNDER_TEAMCITY && IS_ENV_CONFIGURATION) -->Line_12 $$ List<String> missing = Lists.newArrayList()[ CD ]
Line_5 $$ List<String> roots = getPythonRoots()-->Line_6 $$ if (roots.size() == 0) [ FD ]
Line_9 $$ for (String root : roots) -->Line_10 $$ tags.addAll(loadEnvTags(root))[ FD ]
Line_13 $$ for (String tag : necessaryTags()) -->Line_14 $$ if (!tags.contains(tag)) [ FD ]
Line_12 $$ List<String> missing = Lists.newArrayList()-->Line_18 $$ assertEmpty("Agent is missing environments: " + StringUtil.join(missing, ", "), missing)[ FD ]
Line_3 $$ if (UsefulTestCase.IS_UNDER_TEAMCITY && IS_ENV_CONFIGURATION) -->Line_18 $$ assertEmpty("Agent is missing environments: " + StringUtil.join(missing, ", "), missing)[ CD ]
Line_14 $$ if (!tags.contains(tag)) -->Line_15 $$ missing.add(tag)[ CD ]
Line_4 $$ Set<String> tags = Sets.newHashSet()-->Line_14 $$ if (!tags.contains(tag)) [ FD ]
Line_12 $$ List<String> missing = Lists.newArrayList()-->Line_15 $$ missing.add(tag)[ FD ]
Line_2 $$ public void testSufficiency() -->Line_3 $$ if (UsefulTestCase.IS_UNDER_TEAMCITY && IS_ENV_CONFIGURATION) [ CD ]
Line_4 $$ Set<String> tags = Sets.newHashSet()-->Line_10 $$ tags.addAll(loadEnvTags(root))[ FD ]
Line_13 $$ for (String tag : necessaryTags()) -->Line_15 $$ missing.add(tag)[ FD ]
Line_3 $$ if (UsefulTestCase.IS_UNDER_TEAMCITY && IS_ENV_CONFIGURATION) -->Line_6 $$ if (roots.size() == 0) [ CD ]
Line_3 $$ if (UsefulTestCase.IS_UNDER_TEAMCITY && IS_ENV_CONFIGURATION) -->Line_4 $$ Set<String> tags = Sets.newHashSet()[ CD ]
Line_6 $$ if (roots.size() == 0) -->Line_7 $$ return[ CD ]
