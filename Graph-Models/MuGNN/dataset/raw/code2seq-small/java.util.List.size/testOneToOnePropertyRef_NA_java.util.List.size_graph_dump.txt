Line_5 $$ Session s = openSession()-->Line_81 $$ s.close()[ FD ]
Line_56 $$ for (int i = 0; i < 2; i++) -->Line_57 $$ Object[] row = (Object[]) l.get(i)[ CD ]
Line_10 $$ Address a = new Address()-->Line_11 $$ a.setAddress("Texas")[ FD ]
Line_5 $$ Session s = openSession()-->Line_26 $$ s.clear()[ FD ]
Line_20 $$ Account act = new Account()-->Line_21 $$ act.setType('c')[ FD ]
Line_58 $$ Person px = (Person) row[0]-->Line_61 $$ assertTrue(px.getAccounts().size() > 0 || row[1] == null)[ FD ]
Line_7 $$ Person p = new Person()-->Line_13 $$ p.setAddress(a)[ FD ]
Line_64 $$ l = s.createQuery("from Person p left join fetch p.accounts a order by p.name").list()-->Line_75 $$ l = s.createQuery("from Person p left join fetch p.address").list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_43 $$ s.clear()[ FD ]
Line_5 $$ Session s = openSession()-->Line_15 $$ s.save(p)[ FD ]
Line_5 $$ Session s = openSession()-->Line_77 $$ s.createQuery("delete Address").executeUpdate()[ FD ]
Line_5 $$ Session s = openSession()-->Line_6 $$ Transaction t = s.beginTransaction()[ FD ]
Line_7 $$ Person p = new Person()-->Line_15 $$ s.save(p)[ FD ]
Line_5 $$ Session s = openSession()-->Line_19 $$ s.save(p2)[ FD ]
Line_59 $$ Set accounts = px.getAccounts()-->Line_60 $$ assertFalse(Hibernate.isInitialized(accounts))[ FD ]
Line_65 $$ Person p0 = (Person) l.get(0)-->Line_68 $$ assertSame(((Account) p0.getAccounts().iterator().next()).getUser(), p0)[ FD ]
Line_65 $$ Person p0 = (Person) l.get(0)-->Line_67 $$ assertEquals(p0.getAccounts().size(), 1)[ FD ]
Line_56 $$ for (int i = 0; i < 2; i++) -->Line_57 $$ Object[] row = (Object[]) l.get(i)[ FD ]
Line_55 $$ l = s.createQuery("from Person p left join p.accounts").list()-->Line_64 $$ l = s.createQuery("from Person p left join fetch p.accounts a order by p.name").list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_73 $$ l = s.createQuery("from Account a join fetch a.user").list()[ FD ]
Line_7 $$ Person p = new Person()-->Line_32 $$ assertNotNull(p.getAddress())[ FD ]
Line_55 $$ l = s.createQuery("from Person p left join p.accounts").list()-->Line_75 $$ l = s.createQuery("from Person p left join fetch p.address").list()[ FD ]
Line_16 $$ Person p2 = new Person()-->Line_18 $$ p2.setUserId("max")[ FD ]
Line_16 $$ Person p2 = new Person()-->Line_23 $$ p2.getAccounts().add(act)[ FD ]
Line_56 $$ for (int i = 0; i < 2; i++) -->Line_59 $$ Set accounts = px.getAccounts()[ CD ]
Line_5 $$ Session s = openSession()-->Line_64 $$ l = s.createQuery("from Person p left join fetch p.accounts a order by p.name").list()[ FD ]
Line_16 $$ Person p2 = new Person()-->Line_17 $$ p2.setName("Max")[ FD ]
Line_5 $$ Session s = openSession()-->Line_24 $$ s.save(act)[ FD ]
Line_10 $$ Address a = new Address()-->Line_14 $$ a.setPerson(p)[ FD ]
Line_5 $$ Session s = openSession()-->Line_25 $$ s.flush()[ FD ]
Line_56 $$ for (int i = 0; i < 2; i++) -->Line_58 $$ Person px = (Person) row[0][ CD ]
Line_69 $$ Person p1 = (Person) l.get(1)-->Line_70 $$ assertTrue(Hibernate.isInitialized(p1.getAccounts()))[ FD ]
Line_10 $$ Address a = new Address()-->Line_12 $$ a.setCountry("USA")[ FD ]
Line_55 $$ l = s.createQuery("from Person p left join p.accounts").list()-->Line_65 $$ Person p0 = (Person) l.get(0)[ FD ]
Line_7 $$ Person p = new Person()-->Line_8 $$ p.setName("Steve")[ FD ]
Line_64 $$ l = s.createQuery("from Person p left join fetch p.accounts a order by p.name").list()-->Line_69 $$ Person p1 = (Person) l.get(1)[ FD ]
Line_5 $$ Session s = openSession()-->Line_74 $$ s.clear()[ FD ]
Line_73 $$ l = s.createQuery("from Account a join fetch a.user").list()-->Line_75 $$ l = s.createQuery("from Person p left join fetch p.address").list()[ FD ]
Line_20 $$ Account act = new Account()-->Line_23 $$ p2.getAccounts().add(act)[ FD ]
Line_69 $$ Person p1 = (Person) l.get(1)-->Line_71 $$ assertEquals(p1.getAccounts().size(), 0)[ FD ]
Line_64 $$ l = s.createQuery("from Person p left join fetch p.accounts a order by p.name").list()-->Line_65 $$ Person p0 = (Person) l.get(0)[ FD ]
Line_16 $$ Person p2 = new Person()-->Line_36 $$ assertTrue(l.contains(p) && l.contains(p2))[ FD ]
Line_7 $$ Person p = new Person()-->Line_36 $$ assertTrue(l.contains(p) && l.contains(p2))[ FD ]
Line_16 $$ Person p2 = new Person()-->Line_22 $$ act.setUser(p2)[ FD ]
Line_56 $$ for (int i = 0; i < 2; i++) -->Line_61 $$ assertTrue(px.getAccounts().size() > 0 || row[1] == null)[ CD ]
Line_5 $$ Session s = openSession()-->Line_75 $$ l = s.createQuery("from Person p left join fetch p.address").list()[ FD ]
Line_20 $$ Account act = new Account()-->Line_22 $$ act.setUser(p2)[ FD ]
Line_47 $$ if (((Person) l.get(0)).getName().equals("Max")) -->Line_48 $$ assertNull(((Person) l.get(0)).getAddress())[ CD ]
Line_47 $$ if (((Person) l.get(0)).getName().equals("Max")) -->Line_49 $$ assertNotNull(((Person) l.get(1)).getAddress())[ CD ]
Line_55 $$ l = s.createQuery("from Person p left join p.accounts").list()-->Line_73 $$ l = s.createQuery("from Account a join fetch a.user").list()[ FD ]
Line_7 $$ Person p = new Person()-->Line_14 $$ a.setPerson(p)[ FD ]
Line_5 $$ Session s = openSession()-->Line_55 $$ l = s.createQuery("from Person p left join p.accounts").list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_76 $$ s.clear()[ FD ]
Line_7 $$ Person p = new Person()-->Line_9 $$ p.setUserId("steve")[ FD ]
Line_58 $$ Person px = (Person) row[0]-->Line_59 $$ Set accounts = px.getAccounts()[ FD ]
Line_5 $$ Session s = openSession()-->Line_72 $$ s.clear()[ FD ]
Line_16 $$ Person p2 = new Person()-->Line_19 $$ s.save(p2)[ FD ]
Line_47 $$ if (((Person) l.get(0)).getName().equals("Max")) -->Line_52 $$ assertNotNull(((Person) l.get(0)).getAddress())[ CD ]
Line_64 $$ l = s.createQuery("from Person p left join fetch p.accounts a order by p.name").list()-->Line_73 $$ l = s.createQuery("from Account a join fetch a.user").list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_37 $$ s.clear()[ FD ]
Line_5 $$ Session s = openSession()-->Line_79 $$ s.createQuery("delete Person").executeUpdate()[ FD ]
Line_16 $$ Person p2 = new Person()-->Line_31 $$ assertNull(p2.getAddress())[ FD ]
Line_10 $$ Address a = new Address()-->Line_13 $$ p.setAddress(a)[ FD ]
Line_56 $$ for (int i = 0; i < 2; i++) -->Line_60 $$ assertFalse(Hibernate.isInitialized(accounts))[ CD ]
Line_55 $$ l = s.createQuery("from Person p left join p.accounts").list()-->Line_69 $$ Person p1 = (Person) l.get(1)[ FD ]
Line_5 $$ Session s = openSession()-->Line_54 $$ s.clear()[ FD ]
Line_5 $$ Session s = openSession()-->Line_78 $$ s.createQuery("delete Account").executeUpdate()[ FD ]
Line_5 $$ Session s = openSession()-->Line_63 $$ s.clear()[ FD ]
Line_20 $$ Account act = new Account()-->Line_24 $$ s.save(act)[ FD ]
Line_65 $$ Person p0 = (Person) l.get(0)-->Line_66 $$ assertTrue(Hibernate.isInitialized(p0.getAccounts()))[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_80 $$ t.commit()[ FD ]
Line_55 $$ l = s.createQuery("from Person p left join p.accounts").list()-->Line_57 $$ Object[] row = (Object[]) l.get(i)[ FD ]
Line_47 $$ if (((Person) l.get(0)).getName().equals("Max")) -->Line_51 $$ assertNull(((Person) l.get(1)).getAddress())[ CD ]
