Line_33 $$ if (result instanceof JournalFolder) -->Line_36 $$ if (result instanceof JournalArticle) [ CD ]
Line_7 $$ for (Object result : results) -->Line_11 $$ if (result instanceof JournalArticle) [ FD ]
Line_13 $$ String title = article.getTitleCurrentValue()-->Line_14 $$ Assert.assertTrue(title, title.equals("Article 1") || title.equals("Article 2"))[ FD ]
Line_3 $$ QueryDefinition<Object> queryDefinition = new QueryDefinition()-->Line_17 $$ queryDefinition.setStatus(WorkflowConstants.STATUS_IN_TRASH)[ FD ]
Line_7 $$ for (Object result : results) -->Line_24 $$ if (result instanceof JournalArticle) [ FD ]
Line_2 $$ public void testFindF_A_ByG_F() throws Exception -->Line_30 $$ results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)[ CD ]
Line_3 $$ QueryDefinition<Object> queryDefinition = new QueryDefinition()-->Line_5 $$ List<Object> results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)[ FD ]
Line_5 $$ List<Object> results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)-->Line_18 $$ results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)[ FD ]
Line_2 $$ public void testFindF_A_ByG_F() throws Exception -->Line_4 $$ queryDefinition.setStatus(WorkflowConstants.STATUS_ANY)[ CD ]
Line_3 $$ QueryDefinition<Object> queryDefinition = new QueryDefinition()-->Line_4 $$ queryDefinition.setStatus(WorkflowConstants.STATUS_ANY)[ FD ]
Line_9 $$ JournalFolder folder = (JournalFolder) result-->Line_23 $$ Assert.assertEquals("Folder 2", folder.getName())[ FD ]
Line_3 $$ QueryDefinition<Object> queryDefinition = new QueryDefinition()-->Line_29 $$ queryDefinition.setStatus(WorkflowConstants.STATUS_IN_TRASH, true)[ FD ]
Line_8 $$ if (result instanceof JournalFolder) -->Line_10 $$ Assert.assertEquals("Folder 2", folder.getName())[ CD ]
Line_8 $$ if (result instanceof JournalFolder) -->Line_9 $$ JournalFolder folder = (JournalFolder) result[ CD ]
Line_2 $$ public void testFindF_A_ByG_F() throws Exception -->Line_29 $$ queryDefinition.setStatus(WorkflowConstants.STATUS_IN_TRASH, true)[ CD ]
Line_2 $$ public void testFindF_A_ByG_F() throws Exception -->Line_17 $$ queryDefinition.setStatus(WorkflowConstants.STATUS_IN_TRASH)[ CD ]
Line_21 $$ if (result instanceof JournalFolder) -->Line_23 $$ Assert.assertEquals("Folder 2", folder.getName())[ CD ]
Line_3 $$ QueryDefinition<Object> queryDefinition = new QueryDefinition()-->Line_18 $$ results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)[ FD ]
Line_11 $$ if (result instanceof JournalArticle) -->Line_13 $$ String title = article.getTitleCurrentValue()[ CD ]
Line_5 $$ List<Object> results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)-->Line_31 $$ Assert.assertEquals(2, results.size())[ FD ]
Line_2 $$ public void testFindF_A_ByG_F() throws Exception -->Line_5 $$ List<Object> results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)[ CD ]
Line_7 $$ for (Object result : results) -->Line_21 $$ if (result instanceof JournalFolder) [ FD ]
Line_7 $$ for (Object result : results) -->Line_36 $$ if (result instanceof JournalArticle) [ FD ]
Line_2 $$ public void testFindF_A_ByG_F() throws Exception -->Line_18 $$ results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)[ CD ]
Line_11 $$ if (result instanceof JournalArticle) -->Line_12 $$ JournalArticle article = (JournalArticle) result[ CD ]
Line_5 $$ List<Object> results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)-->Line_30 $$ results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)[ FD ]
Line_8 $$ if (result instanceof JournalFolder) -->Line_11 $$ if (result instanceof JournalArticle) [ CD ]
Line_9 $$ JournalFolder folder = (JournalFolder) result-->Line_35 $$ Assert.assertEquals("Folder 2", folder.getName())[ FD ]
Line_5 $$ List<Object> results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)-->Line_6 $$ Assert.assertEquals(3, results.size())[ FD ]
Line_12 $$ JournalArticle article = (JournalArticle) result-->Line_26 $$ Assert.assertEquals("Article 2", article.getTitleCurrentValue())[ FD ]
Line_30 $$ results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)-->Line_31 $$ Assert.assertEquals(2, results.size())[ FD ]
Line_12 $$ JournalArticle article = (JournalArticle) result-->Line_38 $$ Assert.assertEquals("Article 1", article.getTitleCurrentValue())[ FD ]
Line_33 $$ if (result instanceof JournalFolder) -->Line_35 $$ Assert.assertEquals("Folder 2", folder.getName())[ CD ]
Line_2 $$ public void testFindF_A_ByG_F() throws Exception -->Line_3 $$ QueryDefinition<Object> queryDefinition = new QueryDefinition()[ CD ]
Line_24 $$ if (result instanceof JournalArticle) -->Line_26 $$ Assert.assertEquals("Article 2", article.getTitleCurrentValue())[ CD ]
Line_11 $$ if (result instanceof JournalArticle) -->Line_14 $$ Assert.assertTrue(title, title.equals("Article 1") || title.equals("Article 2"))[ CD ]
Line_12 $$ JournalArticle article = (JournalArticle) result-->Line_13 $$ String title = article.getTitleCurrentValue()[ FD ]
Line_2 $$ public void testFindF_A_ByG_F() throws Exception -->Line_6 $$ Assert.assertEquals(3, results.size())[ CD ]
Line_7 $$ for (Object result : results) -->Line_33 $$ if (result instanceof JournalFolder) [ FD ]
Line_5 $$ List<Object> results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)-->Line_19 $$ Assert.assertEquals(1, results.size())[ FD ]
Line_36 $$ if (result instanceof JournalArticle) -->Line_38 $$ Assert.assertEquals("Article 1", article.getTitleCurrentValue())[ CD ]
Line_2 $$ public void testFindF_A_ByG_F() throws Exception -->Line_19 $$ Assert.assertEquals(1, results.size())[ CD ]
Line_18 $$ results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)-->Line_19 $$ Assert.assertEquals(1, results.size())[ FD ]
Line_3 $$ QueryDefinition<Object> queryDefinition = new QueryDefinition()-->Line_30 $$ results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)[ FD ]
Line_7 $$ for (Object result : results) -->Line_8 $$ if (result instanceof JournalFolder) [ FD ]
Line_18 $$ results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)-->Line_30 $$ results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)[ FD ]
Line_21 $$ if (result instanceof JournalFolder) -->Line_24 $$ if (result instanceof JournalArticle) [ CD ]
Line_2 $$ public void testFindF_A_ByG_F() throws Exception -->Line_31 $$ Assert.assertEquals(2, results.size())[ CD ]
Line_18 $$ results = _journalFolderFinder.findF_A_ByG_F(_group.getGroupId(), _folder1.getFolderId(), queryDefinition)-->Line_31 $$ Assert.assertEquals(2, results.size())[ FD ]
Line_9 $$ JournalFolder folder = (JournalFolder) result-->Line_10 $$ Assert.assertEquals("Folder 2", folder.getName())[ FD ]
