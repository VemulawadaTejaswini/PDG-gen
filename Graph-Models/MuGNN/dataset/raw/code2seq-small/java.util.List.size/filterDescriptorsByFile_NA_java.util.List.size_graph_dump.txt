Line_6 $$ if (isFileAccepted(file, descriptor) && isParentDirectoriesAccepted(file, parentsToCheck, descriptor)) -->Line_10 $$ if (result == descriptors) [ CD ]
Line_4 $$ for (int i = 0; i < descriptors.size(); i++) -->Line_5 $$ R descriptor = descriptors.get(i)[ CD ]
Line_3 $$ List<R> result = descriptors-->Line_7 $$ if (result != descriptors) [ FD ]
Line_12 $$ for (int j = 0; j < i; j++) -->Line_13 $$ result.add(descriptors.get(j))[ FD ]
Line_4 $$ for (int i = 0; i < descriptors.size(); i++) -->Line_6 $$ if (isFileAccepted(file, descriptor) && isParentDirectoriesAccepted(file, parentsToCheck, descriptor)) [ CD ]
Line_12 $$ for (int j = 0; j < i; j++) -->Line_13 $$ result.add(descriptors.get(j))[ CD ]
Line_5 $$ R descriptor = descriptors.get(i)-->Line_8 $$ result.add(descriptor)[ FD ]
Line_11 $$ result = new ArrayList<R>(descriptors.size() - 1)-->Line_8 $$ result.add(descriptor)[ FD ]
Line_4 $$ for (int i = 0; i < descriptors.size(); i++) -->Line_5 $$ R descriptor = descriptors.get(i)[ FD ]
Line_10 $$ if (result == descriptors) -->Line_11 $$ result = new ArrayList<R>(descriptors.size() - 1)[ CD ]
Line_4 $$ for (int i = 0; i < descriptors.size(); i++) -->Line_12 $$ for (int j = 0; j < i; j++) [ FD ]
Line_2 $$ private <R extends BuildRootDescriptor> List<R> filterDescriptorsByFile(@NotNull List<R> descriptors, File file, int parentsToCheck) -->Line_11 $$ result = new ArrayList<R>(descriptors.size() - 1)[ FD ]
Line_2 $$ private <R extends BuildRootDescriptor> List<R> filterDescriptorsByFile(@NotNull List<R> descriptors, File file, int parentsToCheck) -->Line_17 $$ return result[ CD ]
Line_3 $$ List<R> result = descriptors-->Line_10 $$ if (result == descriptors) [ FD ]
Line_2 $$ private <R extends BuildRootDescriptor> List<R> filterDescriptorsByFile(@NotNull List<R> descriptors, File file, int parentsToCheck) -->Line_5 $$ R descriptor = descriptors.get(i)[ FD ]
Line_3 $$ List<R> result = descriptors-->Line_11 $$ result = new ArrayList<R>(descriptors.size() - 1)[ FD ]
Line_7 $$ if (result != descriptors) -->Line_8 $$ result.add(descriptor)[ CD ]
Line_11 $$ result = new ArrayList<R>(descriptors.size() - 1)-->Line_10 $$ if (result == descriptors) [ FD ]
Line_3 $$ List<R> result = descriptors-->Line_13 $$ result.add(descriptors.get(j))[ FD ]
Line_2 $$ private <R extends BuildRootDescriptor> List<R> filterDescriptorsByFile(@NotNull List<R> descriptors, File file, int parentsToCheck) -->Line_7 $$ if (result != descriptors) [ FD ]
Line_2 $$ private <R extends BuildRootDescriptor> List<R> filterDescriptorsByFile(@NotNull List<R> descriptors, File file, int parentsToCheck) -->Line_10 $$ if (result == descriptors) [ FD ]
Line_2 $$ private <R extends BuildRootDescriptor> List<R> filterDescriptorsByFile(@NotNull List<R> descriptors, File file, int parentsToCheck) -->Line_3 $$ List<R> result = descriptors[ CD ]
Line_2 $$ private <R extends BuildRootDescriptor> List<R> filterDescriptorsByFile(@NotNull List<R> descriptors, File file, int parentsToCheck) -->Line_4 $$ for (int i = 0; i < descriptors.size(); i++) [ CD ]
Line_6 $$ if (isFileAccepted(file, descriptor) && isParentDirectoriesAccepted(file, parentsToCheck, descriptor)) -->Line_7 $$ if (result != descriptors) [ CD ]
Line_11 $$ result = new ArrayList<R>(descriptors.size() - 1)-->Line_7 $$ if (result != descriptors) [ FD ]
Line_5 $$ R descriptor = descriptors.get(i)-->Line_6 $$ if (isFileAccepted(file, descriptor) && isParentDirectoriesAccepted(file, parentsToCheck, descriptor)) [ FD ]
Line_2 $$ private <R extends BuildRootDescriptor> List<R> filterDescriptorsByFile(@NotNull List<R> descriptors, File file, int parentsToCheck) -->Line_13 $$ result.add(descriptors.get(j))[ FD ]
Line_10 $$ if (result == descriptors) -->Line_12 $$ for (int j = 0; j < i; j++) [ CD ]
Line_3 $$ List<R> result = descriptors-->Line_8 $$ result.add(descriptor)[ FD ]
Line_11 $$ result = new ArrayList<R>(descriptors.size() - 1)-->Line_13 $$ result.add(descriptors.get(j))[ FD ]
Line_2 $$ private <R extends BuildRootDescriptor> List<R> filterDescriptorsByFile(@NotNull List<R> descriptors, File file, int parentsToCheck) -->Line_4 $$ for (int i = 0; i < descriptors.size(); i++) [ FD ]
Line_2 $$ private <R extends BuildRootDescriptor> List<R> filterDescriptorsByFile(@NotNull List<R> descriptors, File file, int parentsToCheck) -->Line_6 $$ if (isFileAccepted(file, descriptor) && isParentDirectoriesAccepted(file, parentsToCheck, descriptor)) [ FD ]
