Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_50 $$ list = queryWithCollection.list()[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_61 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_8 $$ Organization jboss = new Organization("JBoss")-->Line_71 $$ s.delete(jboss)[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_56 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_17 $$ s = openSession()-->Line_67 $$ s.close()[ FD ]
Line_5 $$ Session s = openSession()-->Line_81 $$ s.delete(dim)[ FD ]
Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_54 $$ assertEquals(2, list.size())[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_57 $$ assertEquals(2, list.size())[ FD ]
Line_86 $$ SpaceShip enterprise = new SpaceShip()-->Line_96 $$ assertTrue(50d == enterprise.getSpeed())[ FD ]
Line_85 $$ t = s.beginTransaction()-->Line_100 $$ t.commit()[ FD ]
Line_17 $$ s = openSession()-->Line_68 $$ s = openSession()[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_74 $$ t.commit()[ FD ]
Line_68 $$ s = openSession()-->Line_72 $$ s.delete(gavin)[ FD ]
Line_10 $$ Employment emp = new Employment(gavin, jboss, "AU")-->Line_23 $$ assertEquals(emp2.getStartDate().getDate(), emp.getStartDate().getDate())[ FD ]
Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_80 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_50 $$ list = queryWithCollection.list()-->Line_51 $$ assertEquals(list.size(), 1)[ FD ]
Line_77 $$ t = s.beginTransaction()-->Line_85 $$ t = s.beginTransaction()[ FD ]
Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_65 $$ assertEquals(2, list.size())[ FD ]
Line_68 $$ s = openSession()-->Line_84 $$ s = openSession()[ FD ]
Line_64 $$ list = s.getNamedQuery("organizationautodetect").list()-->Line_65 $$ assertEquals(2, list.size())[ FD ]
Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_43 $$ assertEquals(1, list.size())[ FD ]
Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_50 $$ list = queryWithCollection.list()[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_57 $$ assertEquals(2, list.size())[ FD ]
Line_33 $$ Object[] o = (Object[]) list.get(0)-->Line_44 $$ o = (Object[]) list.get(0)[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_53 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_78 $$ Dimension dim = new Dimension(3, Integer.MAX_VALUE)-->Line_79 $$ s.save(dim)[ FD ]
Line_61 $$ list = s.getNamedQuery("organizationreturnproperty").list()-->Line_80 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_69 $$ t = s.beginTransaction()-->Line_82 $$ t.commit()[ FD ]
Line_17 $$ s = openSession()-->Line_48 $$ Query queryWithCollection = s.getNamedQuery("organizationEmploymentsExplicitAliases")[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_100 $$ t.commit()[ FD ]
Line_53 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_64 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_69 $$ t = s.beginTransaction()-->Line_85 $$ t = s.beginTransaction()[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_54 $$ assertEquals(2, list.size())[ FD ]
Line_5 $$ Session s = openSession()-->Line_76 $$ s = openSession()[ FD ]
Line_76 $$ s = openSession()-->Line_92 $$ s.save(enterprise)[ FD ]
Line_10 $$ Employment emp = new Employment(gavin, jboss, "AU")-->Line_14 $$ s.save(emp)[ FD ]
Line_17 $$ s = openSession()-->Line_64 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_17 $$ s = openSession()-->Line_84 $$ s = openSession()[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()[ FD ]
Line_37 $$ m = (Map) list.get(0)-->Line_41 $$ assertEquals(8, m.size())[ FD ]
Line_56 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_57 $$ assertEquals(2, list.size())[ FD ]
Line_5 $$ Session s = openSession()-->Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()[ FD ]
Line_76 $$ s = openSession()-->Line_77 $$ t = s.beginTransaction()[ FD ]
Line_68 $$ s = openSession()-->Line_81 $$ s.delete(dim)[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_51 $$ assertEquals(list.size(), 1)[ FD ]
Line_95 $$ enterprise = (SpaceShip) result[0]-->Line_99 $$ s.delete(enterprise)[ FD ]
Line_86 $$ SpaceShip enterprise = new SpaceShip()-->Line_89 $$ enterprise.setSpeed(50d)[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_51 $$ assertEquals(list.size(), 1)[ FD ]
Line_5 $$ Session s = openSession()-->Line_70 $$ s.delete(emp2)[ FD ]
Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_54 $$ assertEquals(2, list.size())[ FD ]
Line_5 $$ Session s = openSession()-->Line_93 $$ Object[] result = (Object[]) s.getNamedQuery("spaceship").uniqueResult()[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_64 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_17 $$ s = openSession()-->Line_53 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_18 $$ t = s.beginTransaction()[ FD ]
Line_17 $$ s = openSession()-->Line_101 $$ s.close()[ FD ]
Line_5 $$ Session s = openSession()-->Line_17 $$ s = openSession()[ FD ]
Line_5 $$ Session s = openSession()-->Line_11 $$ Serializable orgId = s.save(jboss)[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_36 $$ assertEquals(1, list.size())[ FD ]
Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_44 $$ o = (Object[]) list.get(0)[ FD ]
Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_53 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_17 $$ s = openSession()-->Line_58 $$ s.clear()[ FD ]
Line_5 $$ Session s = openSession()-->Line_63 $$ s.clear()[ FD ]
Line_5 $$ Session s = openSession()-->Line_48 $$ Query queryWithCollection = s.getNamedQuery("organizationEmploymentsExplicitAliases")[ FD ]
Line_56 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_80 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_17 $$ s = openSession()-->Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_36 $$ assertEquals(1, list.size())[ FD ]
Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_51 $$ assertEquals(list.size(), 1)[ FD ]
Line_5 $$ Session s = openSession()-->Line_75 $$ s.close()[ FD ]
Line_18 $$ t = s.beginTransaction()-->Line_85 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Session s = openSession()-->Line_69 $$ t = s.beginTransaction()[ FD ]
Line_76 $$ s = openSession()-->Line_81 $$ s.delete(dim)[ FD ]
Line_5 $$ Session s = openSession()-->Line_71 $$ s.delete(jboss)[ FD ]
Line_68 $$ s = openSession()-->Line_85 $$ t = s.beginTransaction()[ FD ]
Line_53 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_56 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_56 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_86 $$ SpaceShip enterprise = new SpaceShip()-->Line_91 $$ enterprise.setDimensions(d)[ FD ]
Line_5 $$ Session s = openSession()-->Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()[ FD ]
Line_17 $$ s = openSession()-->Line_61 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_43 $$ assertEquals(1, list.size())[ FD ]
Line_17 $$ s = openSession()-->Line_56 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_17 $$ s = openSession()-->Line_18 $$ t = s.beginTransaction()[ FD ]
Line_17 $$ s = openSession()-->Line_83 $$ s.close()[ FD ]
Line_28 $$ Map m = (Map) list.get(0)-->Line_29 $$ assertTrue(m.containsKey("Employment"))[ FD ]
Line_5 $$ Session s = openSession()-->Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_50 $$ list = queryWithCollection.list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_79 $$ s.save(dim)[ FD ]
Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_80 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_57 $$ assertEquals(2, list.size())[ FD ]
Line_5 $$ Session s = openSession()-->Line_52 $$ s.clear()[ FD ]
Line_18 $$ t = s.beginTransaction()-->Line_74 $$ t.commit()[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_27 $$ assertEquals(1, list.size())[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_65 $$ assertEquals(2, list.size())[ FD ]
Line_5 $$ Session s = openSession()-->Line_72 $$ s.delete(gavin)[ FD ]
Line_68 $$ s = openSession()-->Line_77 $$ t = s.beginTransaction()[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_80 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_14 $$ s.save(emp)[ FD ]
Line_17 $$ s = openSession()-->Line_76 $$ s = openSession()[ FD ]
Line_50 $$ list = queryWithCollection.list()-->Line_53 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_61 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_17 $$ s = openSession()-->Line_85 $$ t = s.beginTransaction()[ FD ]
Line_17 $$ s = openSession()-->Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()[ FD ]
Line_7 $$ Organization ifa = new Organization("IFA")-->Line_12 $$ Serializable orgId2 = s.save(ifa)[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_77 $$ t = s.beginTransaction()[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_80 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_53 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_76 $$ s = openSession()-->Line_85 $$ t = s.beginTransaction()[ FD ]
Line_68 $$ s = openSession()-->Line_92 $$ s.save(enterprise)[ FD ]
Line_5 $$ Session s = openSession()-->Line_80 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_21 $$ Employment emp2 = (Employment) list.get(0)-->Line_24 $$ assertEquals(emp2.getEndDate(), emp.getEndDate())[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_53 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_17 $$ s = openSession()-->Line_25 $$ s.clear()[ FD ]
Line_28 $$ Map m = (Map) list.get(0)-->Line_41 $$ assertEquals(8, m.size())[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_5 $$ Session s = openSession()-->Line_101 $$ s.close()[ FD ]
Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_36 $$ assertEquals(1, list.size())[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_65 $$ assertEquals(2, list.size())[ FD ]
Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_43 $$ assertEquals(1, list.size())[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_64 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_53 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_54 $$ assertEquals(2, list.size())[ FD ]
Line_68 $$ s = openSession()-->Line_93 $$ Object[] result = (Object[]) s.getNamedQuery("spaceship").uniqueResult()[ FD ]
Line_18 $$ t = s.beginTransaction()-->Line_77 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Session s = openSession()-->Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_83 $$ s.close()[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_54 $$ assertEquals(2, list.size())[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_56 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_50 $$ list = queryWithCollection.list()-->Line_65 $$ assertEquals(2, list.size())[ FD ]
Line_17 $$ s = openSession()-->Line_92 $$ s.save(enterprise)[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_33 $$ Object[] o = (Object[]) list.get(0)[ FD ]
Line_5 $$ Session s = openSession()-->Line_58 $$ s.clear()[ FD ]
Line_8 $$ Organization jboss = new Organization("JBoss")-->Line_49 $$ queryWithCollection.setLong("id", jboss.getId())[ FD ]
Line_68 $$ s = openSession()-->Line_69 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Session s = openSession()-->Line_85 $$ t = s.beginTransaction()[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_32 $$ assertEquals(1, list.size())[ FD ]
Line_5 $$ Session s = openSession()-->Line_68 $$ s = openSession()[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_36 $$ assertEquals(1, list.size())[ FD ]
Line_53 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_65 $$ assertEquals(2, list.size())[ FD ]
Line_5 $$ Session s = openSession()-->Line_99 $$ s.delete(enterprise)[ FD ]
Line_8 $$ Organization jboss = new Organization("JBoss")-->Line_11 $$ Serializable orgId = s.save(jboss)[ FD ]
Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_53 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_50 $$ list = queryWithCollection.list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_5 $$ Session s = openSession()-->Line_55 $$ s.clear()[ FD ]
Line_84 $$ s = openSession()-->Line_85 $$ t = s.beginTransaction()[ FD ]
Line_84 $$ s = openSession()-->Line_101 $$ s.close()[ FD ]
Line_56 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_65 $$ assertEquals(2, list.size())[ FD ]
Line_69 $$ t = s.beginTransaction()-->Line_77 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_85 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Session s = openSession()-->Line_67 $$ s.close()[ FD ]
Line_76 $$ s = openSession()-->Line_84 $$ s = openSession()[ FD ]
Line_68 $$ s = openSession()-->Line_83 $$ s.close()[ FD ]
Line_5 $$ Session s = openSession()-->Line_6 $$ Transaction t = s.beginTransaction()[ FD ]
Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()[ FD ]
Line_53 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_61 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_17 $$ s = openSession()-->Line_75 $$ s.close()[ FD ]
Line_21 $$ Employment emp2 = (Employment) list.get(0)-->Line_22 $$ assertEquals(emp2.getEmploymentId(), emp.getEmploymentId())[ FD ]
Line_17 $$ s = openSession()-->Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_33 $$ Object[] o = (Object[]) list.get(0)[ FD ]
Line_9 $$ Person gavin = new Person("Gavin")-->Line_72 $$ s.delete(gavin)[ FD ]
Line_17 $$ s = openSession()-->Line_81 $$ s.delete(dim)[ FD ]
Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_50 $$ list = queryWithCollection.list()[ FD ]
Line_64 $$ list = s.getNamedQuery("organizationautodetect").list()-->Line_80 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_61 $$ list = s.getNamedQuery("organizationreturnproperty").list()-->Line_65 $$ assertEquals(2, list.size())[ FD ]
Line_86 $$ SpaceShip enterprise = new SpaceShip()-->Line_88 $$ enterprise.setName("Entreprise")[ FD ]
Line_5 $$ Session s = openSession()-->Line_64 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_32 $$ assertEquals(1, list.size())[ FD ]
Line_50 $$ list = queryWithCollection.list()-->Line_54 $$ assertEquals(2, list.size())[ FD ]
Line_50 $$ list = queryWithCollection.list()-->Line_80 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_86 $$ SpaceShip enterprise = new SpaceShip()-->Line_87 $$ enterprise.setModel("USS")[ FD ]
Line_69 $$ t = s.beginTransaction()-->Line_100 $$ t.commit()[ FD ]
Line_50 $$ list = queryWithCollection.list()-->Line_57 $$ assertEquals(2, list.size())[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_43 $$ assertEquals(1, list.size())[ FD ]
Line_53 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_80 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_32 $$ assertEquals(1, list.size())[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()[ FD ]
Line_17 $$ s = openSession()-->Line_71 $$ s.delete(jboss)[ FD ]
Line_17 $$ s = openSession()-->Line_72 $$ s.delete(gavin)[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_66 $$ t.commit()[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_64 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_68 $$ s = openSession()-->Line_75 $$ s.close()[ FD ]
Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_57 $$ assertEquals(2, list.size())[ FD ]
Line_76 $$ s = openSession()-->Line_79 $$ s.save(dim)[ FD ]
Line_77 $$ t = s.beginTransaction()-->Line_82 $$ t.commit()[ FD ]
Line_17 $$ s = openSession()-->Line_70 $$ s.delete(emp2)[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_82 $$ t.commit()[ FD ]
Line_17 $$ s = openSession()-->Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()[ FD ]
Line_9 $$ Person gavin = new Person("Gavin")-->Line_13 $$ s.save(gavin)[ FD ]
Line_84 $$ s = openSession()-->Line_99 $$ s.delete(enterprise)[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_56 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_28 $$ Map m = (Map) list.get(0)[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_33 $$ Object[] o = (Object[]) list.get(0)[ FD ]
Line_76 $$ s = openSession()-->Line_101 $$ s.close()[ FD ]
Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_76 $$ s = openSession()-->Line_99 $$ s.delete(enterprise)[ FD ]
Line_61 $$ list = s.getNamedQuery("organizationreturnproperty").list()-->Line_64 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_37 $$ m = (Map) list.get(0)[ FD ]
Line_10 $$ Employment emp = new Employment(gavin, jboss, "AU")-->Line_24 $$ assertEquals(emp2.getEndDate(), emp.getEndDate())[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_20 $$ assertEquals(1, list.size())[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_50 $$ list = queryWithCollection.list()-->Line_61 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_17 $$ s = openSession()-->Line_80 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_56 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_61 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_64 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_69 $$ t = s.beginTransaction()[ FD ]
Line_18 $$ t = s.beginTransaction()-->Line_69 $$ t = s.beginTransaction()[ FD ]
Line_17 $$ s = openSession()-->Line_99 $$ s.delete(enterprise)[ FD ]
Line_86 $$ SpaceShip enterprise = new SpaceShip()-->Line_99 $$ s.delete(enterprise)[ FD ]
Line_17 $$ s = openSession()-->Line_93 $$ Object[] result = (Object[]) s.getNamedQuery("spaceship").uniqueResult()[ FD ]
Line_76 $$ s = openSession()-->Line_83 $$ s.close()[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_53 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_73 $$ s.delete(ifa)[ FD ]
Line_18 $$ t = s.beginTransaction()-->Line_100 $$ t.commit()[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_43 $$ assertEquals(1, list.size())[ FD ]
Line_17 $$ s = openSession()-->Line_69 $$ t = s.beginTransaction()[ FD ]
Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_57 $$ assertEquals(2, list.size())[ FD ]
Line_69 $$ t = s.beginTransaction()-->Line_74 $$ t.commit()[ FD ]
Line_76 $$ s = openSession()-->Line_93 $$ Object[] result = (Object[]) s.getNamedQuery("spaceship").uniqueResult()[ FD ]
Line_95 $$ enterprise = (SpaceShip) result[0]-->Line_96 $$ assertTrue(50d == enterprise.getSpeed())[ FD ]
Line_68 $$ s = openSession()-->Line_80 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_27 $$ assertEquals(1, list.size())[ FD ]
Line_86 $$ SpaceShip enterprise = new SpaceShip()-->Line_95 $$ enterprise = (SpaceShip) result[0][ FD ]
Line_21 $$ Employment emp2 = (Employment) list.get(0)-->Line_23 $$ assertEquals(emp2.getStartDate().getDate(), emp.getStartDate().getDate())[ FD ]
Line_28 $$ Map m = (Map) list.get(0)-->Line_39 $$ assertTrue(m.containsKey("AMOUNT"))[ FD ]
Line_56 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_64 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_50 $$ list = queryWithCollection.list()-->Line_64 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_37 $$ m = (Map) list.get(0)[ FD ]
Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_61 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_64 $$ list = s.getNamedQuery("organizationautodetect").list()[ FD ]
Line_7 $$ Organization ifa = new Organization("IFA")-->Line_73 $$ s.delete(ifa)[ FD ]
Line_5 $$ Session s = openSession()-->Line_16 $$ s.close()[ FD ]
Line_48 $$ Query queryWithCollection = s.getNamedQuery("organizationEmploymentsExplicitAliases")-->Line_49 $$ queryWithCollection.setLong("id", jboss.getId())[ FD ]
Line_42 $$ list = s.createSQLQuery(getEmploymentSQLMixedScalarEntity()).addScalar("employerid").addEntity(Employment.class).list()-->Line_44 $$ o = (Object[]) list.get(0)[ FD ]
Line_53 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_57 $$ assertEquals(2, list.size())[ FD ]
Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_37 $$ m = (Map) list.get(0)[ FD ]
Line_68 $$ s = openSession()-->Line_71 $$ s.delete(jboss)[ FD ]
Line_68 $$ s = openSession()-->Line_76 $$ s = openSession()[ FD ]
Line_5 $$ Session s = openSession()-->Line_25 $$ s.clear()[ FD ]
Line_5 $$ Session s = openSession()-->Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_18 $$ t = s.beginTransaction()[ FD ]
Line_68 $$ s = openSession()-->Line_70 $$ s.delete(emp2)[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_80 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_51 $$ assertEquals(list.size(), 1)[ FD ]
Line_84 $$ s = openSession()-->Line_93 $$ Object[] result = (Object[]) s.getNamedQuery("spaceship").uniqueResult()[ FD ]
Line_68 $$ s = openSession()-->Line_99 $$ s.delete(enterprise)[ FD ]
Line_17 $$ s = openSession()-->Line_52 $$ s.clear()[ FD ]
Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_56 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_17 $$ s = openSession()-->Line_73 $$ s.delete(ifa)[ FD ]
Line_76 $$ s = openSession()-->Line_80 $$ list = s.createSQLQuery("select d_len * d_width as surface, d_len * d_width * 10 as volume from Dimension").list()[ FD ]
Line_28 $$ Map m = (Map) list.get(0)-->Line_40 $$ assertTrue(m.containsKey("ENDDATE"))[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_21 $$ Employment emp2 = (Employment) list.get(0)[ FD ]
Line_5 $$ Session s = openSession()-->Line_13 $$ s.save(gavin)[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()[ FD ]
Line_17 $$ s = openSession()-->Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_44 $$ o = (Object[]) list.get(0)[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_50 $$ list = queryWithCollection.list()[ FD ]
Line_48 $$ Query queryWithCollection = s.getNamedQuery("organizationEmploymentsExplicitAliases")-->Line_50 $$ list = queryWithCollection.list()[ FD ]
Line_61 $$ list = s.getNamedQuery("organizationreturnproperty").list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_68 $$ s = openSession()-->Line_79 $$ s.save(dim)[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_54 $$ assertEquals(2, list.size())[ FD ]
Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()-->Line_51 $$ assertEquals(list.size(), 1)[ FD ]
Line_50 $$ list = queryWithCollection.list()-->Line_56 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_17 $$ s = openSession()-->Line_55 $$ s.clear()[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()[ FD ]
Line_28 $$ Map m = (Map) list.get(0)-->Line_37 $$ m = (Map) list.get(0)[ FD ]
Line_37 $$ m = (Map) list.get(0)-->Line_40 $$ assertTrue(m.containsKey("ENDDATE"))[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_15 $$ t.commit()[ FD ]
Line_56 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_62 $$ assertEquals(2, list.size())[ FD ]
Line_18 $$ t = s.beginTransaction()-->Line_82 $$ t.commit()[ FD ]
Line_21 $$ Employment emp2 = (Employment) list.get(0)-->Line_70 $$ s.delete(emp2)[ FD ]
Line_37 $$ m = (Map) list.get(0)-->Line_38 $$ assertTrue(m.containsKey("EMPID"))[ FD ]
Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_61 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_17 $$ s = openSession()-->Line_63 $$ s.clear()[ FD ]
Line_86 $$ SpaceShip enterprise = new SpaceShip()-->Line_92 $$ s.save(enterprise)[ FD ]
Line_5 $$ Session s = openSession()-->Line_84 $$ s = openSession()[ FD ]
Line_10 $$ Employment emp = new Employment(gavin, jboss, "AU")-->Line_22 $$ assertEquals(emp2.getEmploymentId(), emp.getEmploymentId())[ FD ]
Line_78 $$ Dimension dim = new Dimension(3, Integer.MAX_VALUE)-->Line_81 $$ s.delete(dim)[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_37 $$ m = (Map) list.get(0)[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_28 $$ Map m = (Map) list.get(0)[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_61 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_31 $$ list = s.createSQLQuery(getEmploymentSQL()).list()[ FD ]
Line_35 $$ list = s.createSQLQuery(getEmploymentSQL()).setResultTransformer(new UpperCasedAliasToEntityMapResultTransformer()).list()-->Line_65 $$ assertEquals(2, list.size())[ FD ]
Line_17 $$ s = openSession()-->Line_79 $$ s.save(dim)[ FD ]
Line_90 $$ Dimension d = new Dimension(45, 10)-->Line_91 $$ enterprise.setDimensions(d)[ FD ]
Line_5 $$ Session s = openSession()-->Line_92 $$ s.save(enterprise)[ FD ]
Line_84 $$ s = openSession()-->Line_92 $$ s.save(enterprise)[ FD ]
Line_5 $$ Session s = openSession()-->Line_77 $$ t = s.beginTransaction()[ FD ]
Line_77 $$ t = s.beginTransaction()-->Line_100 $$ t.commit()[ FD ]
Line_68 $$ s = openSession()-->Line_101 $$ s.close()[ FD ]
Line_37 $$ m = (Map) list.get(0)-->Line_39 $$ assertTrue(m.containsKey("AMOUNT"))[ FD ]
Line_68 $$ s = openSession()-->Line_73 $$ s.delete(ifa)[ FD ]
Line_28 $$ Map m = (Map) list.get(0)-->Line_30 $$ assertEquals(1, m.size())[ FD ]
Line_56 $$ list = s.createSQLQuery(getOrganizationFetchJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()-->Line_61 $$ list = s.getNamedQuery("organizationreturnproperty").list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_12 $$ Serializable orgId2 = s.save(ifa)[ FD ]
Line_5 $$ Session s = openSession()-->Line_53 $$ list = s.createSQLQuery(getOrganizationJoinEmploymentSQL()).addEntity("org", Organization.class).addJoin("emp", "org.employments").list()[ FD ]
Line_18 $$ t = s.beginTransaction()-->Line_66 $$ t.commit()[ FD ]
Line_19 $$ List list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).list()-->Line_44 $$ o = (Object[]) list.get(0)[ FD ]
Line_17 $$ s = openSession()-->Line_77 $$ t = s.beginTransaction()[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_44 $$ o = (Object[]) list.get(0)[ FD ]
Line_26 $$ list = s.createSQLQuery(getEmploymentSQL()).addEntity(Employment.class.getName()).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list()-->Line_65 $$ assertEquals(2, list.size())[ FD ]
Line_28 $$ Map m = (Map) list.get(0)-->Line_38 $$ assertTrue(m.containsKey("EMPID"))[ FD ]
