Line_29 $$ record = records.get(3)-->Line_36 $$ assertThat(record, notNullValue())[ FD ]
Line_17 $$ record = records.get(1)-->Line_30 $$ assertThat(record, notNullValue())[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_32 $$ assertThat(record.getMessage(), equalTo("This is a debug"))[ CD ]
Line_2 $$ public void testLocationInfoTest() -->Line_17 $$ record = records.get(1)[ CD ]
Line_2 $$ public void testLocationInfoTest() -->Line_27 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ CD ]
Line_23 $$ record = records.get(2)-->Line_26 $$ assertThat(record.getMessage(), equalTo("This is an info"))[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_16 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ CD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_29 $$ record = records.get(3)[ FD ]
Line_23 $$ record = records.get(2)-->Line_29 $$ record = records.get(3)[ FD ]
Line_17 $$ record = records.get(1)-->Line_38 $$ assertThat(record.getMessage(), equalTo("This is a trace"))[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_10 $$ assertThat(records.size(), equalTo(5))[ CD ]
Line_2 $$ public void testLocationInfoTest() -->Line_21 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ CD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_31 $$ assertThat(record.getLevel(), equalTo(Level.FINE))[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_18 $$ assertThat(record, notNullValue())[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_19 $$ assertThat(record.getLevel(), equalTo(Level.WARNING))[ CD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_34 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_28 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_26 $$ assertThat(record.getMessage(), equalTo("This is an info"))[ CD ]
Line_29 $$ record = records.get(3)-->Line_32 $$ assertThat(record.getMessage(), equalTo("This is a debug"))[ FD ]
Line_17 $$ record = records.get(1)-->Line_31 $$ assertThat(record.getLevel(), equalTo(Level.FINE))[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_14 $$ assertThat(record.getMessage(), equalTo("This is an error"))[ CD ]
Line_2 $$ public void testLocationInfoTest() -->Line_18 $$ assertThat(record, notNullValue())[ CD ]
Line_29 $$ record = records.get(3)-->Line_38 $$ assertThat(record.getMessage(), equalTo("This is a trace"))[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_20 $$ assertThat(record.getMessage(), equalTo("This is a warning"))[ CD ]
Line_2 $$ public void testLocationInfoTest() -->Line_28 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ CD ]
Line_2 $$ public void testLocationInfoTest() -->Line_13 $$ assertThat(record.getLevel(), equalTo(Level.SEVERE))[ CD ]
Line_2 $$ public void testLocationInfoTest() -->Line_38 $$ assertThat(record.getMessage(), equalTo("This is a trace"))[ CD ]
Line_2 $$ public void testLocationInfoTest() -->Line_35 $$ record = records.get(4)[ CD ]
Line_17 $$ record = records.get(1)-->Line_23 $$ record = records.get(2)[ FD ]
Line_23 $$ record = records.get(2)-->Line_38 $$ assertThat(record.getMessage(), equalTo("This is a trace"))[ FD ]
Line_17 $$ record = records.get(1)-->Line_40 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_30 $$ assertThat(record, notNullValue())[ CD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_27 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_16 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_31 $$ assertThat(record.getLevel(), equalTo(Level.FINE))[ CD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_22 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ FD ]
Line_17 $$ record = records.get(1)-->Line_39 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ FD ]
Line_29 $$ record = records.get(3)-->Line_40 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ FD ]
Line_23 $$ record = records.get(2)-->Line_30 $$ assertThat(record, notNullValue())[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_26 $$ assertThat(record.getMessage(), equalTo("This is an info"))[ FD ]
Line_17 $$ record = records.get(1)-->Line_34 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_3 $$ esTestLogger.error("This is an error")[ CD ]
Line_2 $$ public void testLocationInfoTest() -->Line_6 $$ esTestLogger.debug("This is a debug")[ CD ]
Line_2 $$ public void testLocationInfoTest() -->Line_7 $$ esTestLogger.trace("This is a trace")[ CD ]
Line_2 $$ public void testLocationInfoTest() -->Line_8 $$ List<LogRecord> records = testHandler.getEvents()[ CD ]
Line_2 $$ public void testLocationInfoTest() -->Line_4 $$ esTestLogger.warn("This is a warning")[ CD ]
Line_17 $$ record = records.get(1)-->Line_35 $$ record = records.get(4)[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_33 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ CD ]
Line_17 $$ record = records.get(1)-->Line_22 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_19 $$ assertThat(record.getLevel(), equalTo(Level.WARNING))[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_33 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_34 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ CD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_12 $$ assertThat(record, notNullValue())[ FD ]
Line_23 $$ record = records.get(2)-->Line_35 $$ record = records.get(4)[ FD ]
Line_8 $$ List<LogRecord> records = testHandler.getEvents()-->Line_11 $$ LogRecord record = records.get(0)[ FD ]
Line_29 $$ record = records.get(3)-->Line_39 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_24 $$ assertThat(record, notNullValue())[ FD ]
Line_8 $$ List<LogRecord> records = testHandler.getEvents()-->Line_23 $$ record = records.get(2)[ FD ]
Line_17 $$ record = records.get(1)-->Line_29 $$ record = records.get(3)[ FD ]
Line_17 $$ record = records.get(1)-->Line_28 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ FD ]
Line_35 $$ record = records.get(4)-->Line_39 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ FD ]
Line_23 $$ record = records.get(2)-->Line_36 $$ assertThat(record, notNullValue())[ FD ]
Line_23 $$ record = records.get(2)-->Line_34 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_35 $$ record = records.get(4)[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_40 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ CD ]
Line_2 $$ public void testLocationInfoTest() -->Line_9 $$ assertThat(records, notNullValue())[ CD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_17 $$ record = records.get(1)[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_15 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ FD ]
Line_17 $$ record = records.get(1)-->Line_25 $$ assertThat(record.getLevel(), equalTo(Level.INFO))[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_13 $$ assertThat(record.getLevel(), equalTo(Level.SEVERE))[ FD ]
Line_17 $$ record = records.get(1)-->Line_26 $$ assertThat(record.getMessage(), equalTo("This is an info"))[ FD ]
Line_17 $$ record = records.get(1)-->Line_32 $$ assertThat(record.getMessage(), equalTo("This is a debug"))[ FD ]
Line_17 $$ record = records.get(1)-->Line_21 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ FD ]
Line_23 $$ record = records.get(2)-->Line_24 $$ assertThat(record, notNullValue())[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_15 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ CD ]
Line_2 $$ public void testLocationInfoTest() -->Line_5 $$ esTestLogger.info("This is an info")[ CD ]
Line_2 $$ public void testLocationInfoTest() -->Line_12 $$ assertThat(record, notNullValue())[ CD ]
Line_17 $$ record = records.get(1)-->Line_33 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ FD ]
Line_23 $$ record = records.get(2)-->Line_31 $$ assertThat(record.getLevel(), equalTo(Level.FINE))[ FD ]
Line_17 $$ record = records.get(1)-->Line_18 $$ assertThat(record, notNullValue())[ FD ]
Line_23 $$ record = records.get(2)-->Line_37 $$ assertThat(record.getLevel(), equalTo(Level.FINEST))[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_32 $$ assertThat(record.getMessage(), equalTo("This is a debug"))[ FD ]
Line_23 $$ record = records.get(2)-->Line_28 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_21 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ FD ]
Line_23 $$ record = records.get(2)-->Line_32 $$ assertThat(record.getMessage(), equalTo("This is a debug"))[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_25 $$ assertThat(record.getLevel(), equalTo(Level.INFO))[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_23 $$ record = records.get(2)[ FD ]
Line_8 $$ List<LogRecord> records = testHandler.getEvents()-->Line_35 $$ record = records.get(4)[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_23 $$ record = records.get(2)[ CD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_14 $$ assertThat(record.getMessage(), equalTo("This is an error"))[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_29 $$ record = records.get(3)[ CD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_30 $$ assertThat(record, notNullValue())[ FD ]
Line_17 $$ record = records.get(1)-->Line_19 $$ assertThat(record.getLevel(), equalTo(Level.WARNING))[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_25 $$ assertThat(record.getLevel(), equalTo(Level.INFO))[ CD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_38 $$ assertThat(record.getMessage(), equalTo("This is a trace"))[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_20 $$ assertThat(record.getMessage(), equalTo("This is a warning"))[ FD ]
Line_23 $$ record = records.get(2)-->Line_25 $$ assertThat(record.getLevel(), equalTo(Level.INFO))[ FD ]
Line_29 $$ record = records.get(3)-->Line_34 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_39 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ CD ]
Line_8 $$ List<LogRecord> records = testHandler.getEvents()-->Line_10 $$ assertThat(records.size(), equalTo(5))[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_22 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ CD ]
Line_2 $$ public void testLocationInfoTest() -->Line_37 $$ assertThat(record.getLevel(), equalTo(Level.FINEST))[ CD ]
Line_23 $$ record = records.get(2)-->Line_39 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ FD ]
Line_29 $$ record = records.get(3)-->Line_33 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ FD ]
Line_8 $$ List<LogRecord> records = testHandler.getEvents()-->Line_17 $$ record = records.get(1)[ FD ]
Line_35 $$ record = records.get(4)-->Line_36 $$ assertThat(record, notNullValue())[ FD ]
Line_35 $$ record = records.get(4)-->Line_37 $$ assertThat(record.getLevel(), equalTo(Level.FINEST))[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_36 $$ assertThat(record, notNullValue())[ FD ]
Line_8 $$ List<LogRecord> records = testHandler.getEvents()-->Line_29 $$ record = records.get(3)[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_40 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ FD ]
Line_17 $$ record = records.get(1)-->Line_27 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ FD ]
Line_23 $$ record = records.get(2)-->Line_33 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_37 $$ assertThat(record.getLevel(), equalTo(Level.FINEST))[ FD ]
Line_17 $$ record = records.get(1)-->Line_20 $$ assertThat(record.getMessage(), equalTo("This is a warning"))[ FD ]
Line_29 $$ record = records.get(3)-->Line_30 $$ assertThat(record, notNullValue())[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_36 $$ assertThat(record, notNullValue())[ CD ]
Line_17 $$ record = records.get(1)-->Line_24 $$ assertThat(record, notNullValue())[ FD ]
Line_23 $$ record = records.get(2)-->Line_40 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ FD ]
Line_35 $$ record = records.get(4)-->Line_38 $$ assertThat(record.getMessage(), equalTo("This is a trace"))[ FD ]
Line_8 $$ List<LogRecord> records = testHandler.getEvents()-->Line_9 $$ assertThat(records, notNullValue())[ FD ]
Line_17 $$ record = records.get(1)-->Line_37 $$ assertThat(record.getLevel(), equalTo(Level.FINEST))[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_11 $$ LogRecord record = records.get(0)[ CD ]
Line_23 $$ record = records.get(2)-->Line_27 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ FD ]
Line_11 $$ LogRecord record = records.get(0)-->Line_39 $$ assertThat(record.getSourceClassName(), equalTo(JDKESLoggerTests.class.getCanonicalName()))[ FD ]
Line_35 $$ record = records.get(4)-->Line_40 $$ assertThat(record.getSourceMethodName(), equalTo("testLocationInfoTest"))[ FD ]
Line_17 $$ record = records.get(1)-->Line_36 $$ assertThat(record, notNullValue())[ FD ]
Line_2 $$ public void testLocationInfoTest() -->Line_24 $$ assertThat(record, notNullValue())[ CD ]
Line_29 $$ record = records.get(3)-->Line_35 $$ record = records.get(4)[ FD ]
Line_29 $$ record = records.get(3)-->Line_31 $$ assertThat(record.getLevel(), equalTo(Level.FINE))[ FD ]
Line_29 $$ record = records.get(3)-->Line_37 $$ assertThat(record.getLevel(), equalTo(Level.FINEST))[ FD ]
