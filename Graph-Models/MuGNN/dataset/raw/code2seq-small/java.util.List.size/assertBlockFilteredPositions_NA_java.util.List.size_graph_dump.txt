Line_4 $$ T[] filteredExpectedValues = filter(expectedValues, positions)-->Line_6 $$ assertBlock(filteredBlock, filteredExpectedValues)[ FD ]
Line_3 $$ Block filteredBlock = block.copyPositions(positions)-->Line_5 $$ assertEquals(filteredBlock.getPositionCount(), positions.size())[ FD ]
Line_3 $$ Block filteredBlock = block.copyPositions(positions)-->Line_6 $$ assertBlock(filteredBlock, filteredExpectedValues)[ FD ]
Line_2 $$ protected <T> void assertBlockFilteredPositions(T[] expectedValues, Block block, List<Integer> positions) -->Line_4 $$ T[] filteredExpectedValues = filter(expectedValues, positions)[ CD ]
Line_2 $$ protected <T> void assertBlockFilteredPositions(T[] expectedValues, Block block, List<Integer> positions) -->Line_6 $$ assertBlock(filteredBlock, filteredExpectedValues)[ CD ]
Line_2 $$ protected <T> void assertBlockFilteredPositions(T[] expectedValues, Block block, List<Integer> positions) -->Line_5 $$ assertEquals(filteredBlock.getPositionCount(), positions.size())[ FD ]
Line_2 $$ protected <T> void assertBlockFilteredPositions(T[] expectedValues, Block block, List<Integer> positions) -->Line_3 $$ Block filteredBlock = block.copyPositions(positions)[ FD ]
Line_2 $$ protected <T> void assertBlockFilteredPositions(T[] expectedValues, Block block, List<Integer> positions) -->Line_4 $$ T[] filteredExpectedValues = filter(expectedValues, positions)[ FD ]
Line_2 $$ protected <T> void assertBlockFilteredPositions(T[] expectedValues, Block block, List<Integer> positions) -->Line_5 $$ assertEquals(filteredBlock.getPositionCount(), positions.size())[ CD ]
Line_2 $$ protected <T> void assertBlockFilteredPositions(T[] expectedValues, Block block, List<Integer> positions) -->Line_3 $$ Block filteredBlock = block.copyPositions(positions)[ CD ]
