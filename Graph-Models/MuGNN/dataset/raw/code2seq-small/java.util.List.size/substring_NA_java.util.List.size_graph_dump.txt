Line_21 $$ int originalStart = 0-->Line_45 $$ System.arraycopy(originalData, originalStart, data, outputOffset, data.length - outputOffset)[ FD ]
Line_21 $$ int originalStart = 0-->Line_66 $$ originalStart = changeEntry.change.getEnd()[ FD ]
Line_22 $$ if (startChangeIndex < 0) -->Line_24 $$ if (startChangeIndex > 0 && startChangeIndex <= myChanges.size()) [ CD ]
Line_38 $$ for (int i = startChangeIndex; i < myChanges.size() && outputOffset < data.length; i++) -->Line_41 $$ if (clientStart >= end) [ CD ]
Line_27 $$ originalStart = changeEntry.change.getEnd()-->Line_69 $$ System.arraycopy(originalData, originalStart, data, outputOffset, data.length - outputOffset)[ FD ]
Line_11 $$ if (myChanges.isEmpty()) -->Line_12 $$ return new String(originalData, start, end - start)[ CD ]
Line_54 $$ outputOffset += length-->Line_69 $$ System.arraycopy(originalData, originalStart, data, outputOffset, data.length - outputOffset)[ FD ]
Line_37 $$ int outputOffset = 0-->Line_54 $$ outputOffset += length[ FD ]
Line_26 $$ clientShift = changeEntry.clientStartOffset - changeEntry.change.getStart() + changeEntry.change.getDiff()-->Line_31 $$ clientShift = changeEntry.clientStartOffset - changeEntry.change.getStart()[ FD ]
Line_59 $$ if (end >= clientStart && clientStart < clientEnd) -->Line_62 $$ CharArrayUtil.getChars(changeEntry.change.getText(), data, changeTextStartOffset, outputOffset, length)[ CD ]
Line_48 $$ int clientEnd = clientStart + changeEntry.change.getText().length()-->Line_61 $$ int length = Math.min(clientEnd, end) - Math.max(clientStart, start)[ FD ]
Line_27 $$ originalStart = changeEntry.change.getEnd()-->Line_66 $$ originalStart = changeEntry.change.getEnd()[ FD ]
Line_36 $$ char[] data = new char[end - start]-->Line_71 $$ return StringFactory.createShared(data)[ FD ]
Line_37 $$ int outputOffset = 0-->Line_68 $$ if (outputOffset < data.length) [ FD ]
Line_14 $$ if (end == start) -->Line_15 $$ return ""[ CD ]
Line_50 $$ if (clientStart > start) -->Line_52 $$ length = Math.min(length, data.length - outputOffset)[ CD ]
Line_37 $$ int outputOffset = 0-->Line_45 $$ System.arraycopy(originalData, originalStart, data, outputOffset, data.length - outputOffset)[ FD ]
Line_54 $$ outputOffset += length-->Line_63 $$ outputOffset += length[ FD ]
Line_24 $$ if (startChangeIndex > 0 && startChangeIndex <= myChanges.size()) -->Line_25 $$ ChangeEntry changeEntry = myChanges.get(startChangeIndex - 1)[ CD ]
Line_54 $$ outputOffset += length-->Line_62 $$ CharArrayUtil.getChars(changeEntry.change.getText(), data, changeTextStartOffset, outputOffset, length)[ FD ]
Line_17 $$ int startChangeIndex = getChangeIndex(start)-->Line_22 $$ if (startChangeIndex < 0) [ FD ]
Line_54 $$ outputOffset += length-->Line_53 $$ System.arraycopy(originalData, changeEntry.change.getStart() - length, data, outputOffset, length)[ FD ]
Line_37 $$ int outputOffset = 0-->Line_63 $$ outputOffset += length[ FD ]
Line_24 $$ if (startChangeIndex > 0 && startChangeIndex <= myChanges.size()) -->Line_27 $$ originalStart = changeEntry.change.getEnd()[ CD ]
Line_40 $$ int clientStart = changeEntry.clientStartOffset-->Line_50 $$ if (clientStart > start) [ FD ]
Line_40 $$ int clientStart = changeEntry.clientStartOffset-->Line_61 $$ int length = Math.min(clientEnd, end) - Math.max(clientStart, start)[ FD ]
Line_37 $$ int outputOffset = 0-->Line_62 $$ CharArrayUtil.getChars(changeEntry.change.getText(), data, changeTextStartOffset, outputOffset, length)[ FD ]
Line_20 $$ int clientShift = 0-->Line_31 $$ clientShift = changeEntry.clientStartOffset - changeEntry.change.getStart()[ FD ]
Line_63 $$ outputOffset += length-->Line_69 $$ System.arraycopy(originalData, originalStart, data, outputOffset, data.length - outputOffset)[ FD ]
Line_22 $$ if (startChangeIndex < 0) -->Line_31 $$ clientShift = changeEntry.clientStartOffset - changeEntry.change.getStart()[ CD ]
Line_51 $$ int length = Math.min(clientStart - start, changeEntry.change.getStart() - originalStart)-->Line_54 $$ outputOffset += length[ FD ]
Line_51 $$ int length = Math.min(clientStart - start, changeEntry.change.getStart() - originalStart)-->Line_52 $$ length = Math.min(length, data.length - outputOffset)[ FD ]
Line_52 $$ length = Math.min(length, data.length - outputOffset)-->Line_53 $$ System.arraycopy(originalData, changeEntry.change.getStart() - length, data, outputOffset, length)[ FD ]
Line_50 $$ if (clientStart > start) -->Line_55 $$ if (outputOffset >= data.length) [ CD ]
Line_21 $$ int originalStart = 0-->Line_27 $$ originalStart = changeEntry.change.getEnd()[ FD ]
Line_52 $$ length = Math.min(length, data.length - outputOffset)-->Line_63 $$ outputOffset += length[ FD ]
Line_22 $$ if (startChangeIndex < 0) -->Line_30 $$ ChangeEntry changeEntry = myChanges.get(startChangeIndex)[ CD ]
Line_38 $$ for (int i = startChangeIndex; i < myChanges.size() && outputOffset < data.length; i++) -->Line_42 $$ if (i == startChangeIndex) [ FD ]
Line_23 $$ startChangeIndex = -startChangeIndex - 1-->Line_42 $$ if (i == startChangeIndex) [ FD ]
Line_48 $$ int clientEnd = clientStart + changeEntry.change.getText().length()-->Line_49 $$ if (clientEnd > start) [ FD ]
Line_40 $$ int clientStart = changeEntry.clientStartOffset-->Line_41 $$ if (clientStart >= end) [ FD ]
Line_38 $$ for (int i = startChangeIndex; i < myChanges.size() && outputOffset < data.length; i++) -->Line_49 $$ if (clientEnd > start) [ CD ]
Line_50 $$ if (clientStart > start) -->Line_54 $$ outputOffset += length[ CD ]
Line_50 $$ if (clientStart > start) -->Line_53 $$ System.arraycopy(originalData, changeEntry.change.getStart() - length, data, outputOffset, length)[ CD ]
Line_54 $$ outputOffset += length-->Line_68 $$ if (outputOffset < data.length) [ FD ]
Line_36 $$ char[] data = new char[end - start]-->Line_53 $$ System.arraycopy(originalData, changeEntry.change.getStart() - length, data, outputOffset, length)[ FD ]
Line_42 $$ if (i == startChangeIndex) -->Line_43 $$ return new String(originalData, start - clientShift, end - start)[ CD ]
Line_38 $$ for (int i = startChangeIndex; i < myChanges.size() && outputOffset < data.length; i++) -->Line_39 $$ ChangeEntry changeEntry = myChanges.get(i)[ FD ]
Line_66 $$ originalStart = changeEntry.change.getEnd()-->Line_69 $$ System.arraycopy(originalData, originalStart, data, outputOffset, data.length - outputOffset)[ FD ]
Line_63 $$ outputOffset += length-->Line_68 $$ if (outputOffset < data.length) [ FD ]
Line_37 $$ int outputOffset = 0-->Line_69 $$ System.arraycopy(originalData, originalStart, data, outputOffset, data.length - outputOffset)[ FD ]
Line_59 $$ if (end >= clientStart && clientStart < clientEnd) -->Line_63 $$ outputOffset += length[ CD ]
Line_36 $$ char[] data = new char[end - start]-->Line_69 $$ System.arraycopy(originalData, originalStart, data, outputOffset, data.length - outputOffset)[ FD ]
Line_54 $$ outputOffset += length-->Line_45 $$ System.arraycopy(originalData, originalStart, data, outputOffset, data.length - outputOffset)[ FD ]
Line_63 $$ outputOffset += length-->Line_45 $$ System.arraycopy(originalData, originalStart, data, outputOffset, data.length - outputOffset)[ FD ]
Line_63 $$ outputOffset += length-->Line_53 $$ System.arraycopy(originalData, changeEntry.change.getStart() - length, data, outputOffset, length)[ FD ]
Line_17 $$ int startChangeIndex = getChangeIndex(start)-->Line_42 $$ if (i == startChangeIndex) [ FD ]
Line_68 $$ if (outputOffset < data.length) -->Line_69 $$ System.arraycopy(originalData, originalStart, data, outputOffset, data.length - outputOffset)[ CD ]
Line_41 $$ if (clientStart >= end) -->Line_42 $$ if (i == startChangeIndex) [ CD ]
Line_49 $$ if (clientEnd > start) -->Line_50 $$ if (clientStart > start) [ CD ]
Line_66 $$ originalStart = changeEntry.change.getEnd()-->Line_45 $$ System.arraycopy(originalData, originalStart, data, outputOffset, data.length - outputOffset)[ FD ]
Line_52 $$ length = Math.min(length, data.length - outputOffset)-->Line_54 $$ outputOffset += length[ FD ]
Line_17 $$ int startChangeIndex = getChangeIndex(start)-->Line_23 $$ startChangeIndex = -startChangeIndex - 1[ FD ]
Line_49 $$ if (clientEnd > start) -->Line_59 $$ if (end >= clientStart && clientStart < clientEnd) [ CD ]
Line_36 $$ char[] data = new char[end - start]-->Line_62 $$ CharArrayUtil.getChars(changeEntry.change.getText(), data, changeTextStartOffset, outputOffset, length)[ FD ]
Line_51 $$ int length = Math.min(clientStart - start, changeEntry.change.getStart() - originalStart)-->Line_62 $$ CharArrayUtil.getChars(changeEntry.change.getText(), data, changeTextStartOffset, outputOffset, length)[ FD ]
Line_37 $$ int outputOffset = 0-->Line_55 $$ if (outputOffset >= data.length) [ FD ]
Line_63 $$ outputOffset += length-->Line_55 $$ if (outputOffset >= data.length) [ FD ]
Line_60 $$ int changeTextStartOffset = start <= clientStart ? 0 : start - clientStart-->Line_62 $$ CharArrayUtil.getChars(changeEntry.change.getText(), data, changeTextStartOffset, outputOffset, length)[ FD ]
Line_41 $$ if (clientStart >= end) -->Line_45 $$ System.arraycopy(originalData, originalStart, data, outputOffset, data.length - outputOffset)[ CD ]
Line_38 $$ for (int i = startChangeIndex; i < myChanges.size() && outputOffset < data.length; i++) -->Line_66 $$ originalStart = changeEntry.change.getEnd()[ CD ]
Line_37 $$ int outputOffset = 0-->Line_53 $$ System.arraycopy(originalData, changeEntry.change.getStart() - length, data, outputOffset, length)[ FD ]
Line_23 $$ startChangeIndex = -startChangeIndex - 1-->Line_30 $$ ChangeEntry changeEntry = myChanges.get(startChangeIndex)[ FD ]
Line_38 $$ for (int i = startChangeIndex; i < myChanges.size() && outputOffset < data.length; i++) -->Line_48 $$ int clientEnd = clientStart + changeEntry.change.getText().length()[ CD ]
Line_36 $$ char[] data = new char[end - start]-->Line_45 $$ System.arraycopy(originalData, originalStart, data, outputOffset, data.length - outputOffset)[ FD ]
Line_21 $$ int originalStart = 0-->Line_69 $$ System.arraycopy(originalData, originalStart, data, outputOffset, data.length - outputOffset)[ FD ]
Line_63 $$ outputOffset += length-->Line_62 $$ CharArrayUtil.getChars(changeEntry.change.getText(), data, changeTextStartOffset, outputOffset, length)[ FD ]
Line_38 $$ for (int i = startChangeIndex; i < myChanges.size() && outputOffset < data.length; i++) -->Line_40 $$ int clientStart = changeEntry.clientStartOffset[ CD ]
Line_50 $$ if (clientStart > start) -->Line_51 $$ int length = Math.min(clientStart - start, changeEntry.change.getStart() - originalStart)[ CD ]
Line_33 $$ if (!substringAffectedByChanges) -->Line_34 $$ return new String(originalData, start - clientShift, end - start)[ CD ]
Line_54 $$ outputOffset += length-->Line_55 $$ if (outputOffset >= data.length) [ FD ]
Line_17 $$ int startChangeIndex = getChangeIndex(start)-->Line_30 $$ ChangeEntry changeEntry = myChanges.get(startChangeIndex)[ FD ]
Line_27 $$ originalStart = changeEntry.change.getEnd()-->Line_45 $$ System.arraycopy(originalData, originalStart, data, outputOffset, data.length - outputOffset)[ FD ]
Line_38 $$ for (int i = startChangeIndex; i < myChanges.size() && outputOffset < data.length; i++) -->Line_39 $$ ChangeEntry changeEntry = myChanges.get(i)[ CD ]
Line_20 $$ int clientShift = 0-->Line_26 $$ clientShift = changeEntry.clientStartOffset - changeEntry.change.getStart() + changeEntry.change.getDiff()[ FD ]
Line_52 $$ length = Math.min(length, data.length - outputOffset)-->Line_62 $$ CharArrayUtil.getChars(changeEntry.change.getText(), data, changeTextStartOffset, outputOffset, length)[ FD ]
Line_24 $$ if (startChangeIndex > 0 && startChangeIndex <= myChanges.size()) -->Line_26 $$ clientShift = changeEntry.clientStartOffset - changeEntry.change.getStart() + changeEntry.change.getDiff()[ CD ]
Line_59 $$ if (end >= clientStart && clientStart < clientEnd) -->Line_60 $$ int changeTextStartOffset = start <= clientStart ? 0 : start - clientStart[ CD ]
Line_51 $$ int length = Math.min(clientStart - start, changeEntry.change.getStart() - originalStart)-->Line_63 $$ outputOffset += length[ FD ]
Line_22 $$ if (startChangeIndex < 0) -->Line_23 $$ startChangeIndex = -startChangeIndex - 1[ CD ]
Line_51 $$ int length = Math.min(clientStart - start, changeEntry.change.getStart() - originalStart)-->Line_53 $$ System.arraycopy(originalData, changeEntry.change.getStart() - length, data, outputOffset, length)[ FD ]
Line_19 $$ boolean substringAffectedByChanges = startChangeIndex >= 0 || endChangeIndex >= 0 || startChangeIndex != endChangeIndex-->Line_33 $$ if (!substringAffectedByChanges) [ FD ]
