Line_2 $$ public void testMultiLoadClearsBatchFetchQueue() -->Line_9 $$ assertEquals(56, list.size())[ CD ]
Line_8 $$ List<SimpleEntity> list = session.byMultipleIds(SimpleEntity.class).enableSessionCheck(true).multiLoad(ids(56))-->Line_9 $$ assertEquals(56, list.size())[ FD ]
Line_2 $$ public void testMultiLoadClearsBatchFetchQueue() -->Line_10 $$ assertFalse(((SessionImplementor) session).getPersistenceContext().getBatchFetchQueue().containsEntityKey(entityKey))[ CD ]
Line_2 $$ public void testMultiLoadClearsBatchFetchQueue() -->Line_5 $$ session.getTransaction().begin()[ CD ]
Line_2 $$ public void testMultiLoadClearsBatchFetchQueue() -->Line_12 $$ session.close()[ CD ]
Line_4 $$ Session session = openSession()-->Line_8 $$ List<SimpleEntity> list = session.byMultipleIds(SimpleEntity.class).enableSessionCheck(true).multiLoad(ids(56))[ FD ]
Line_4 $$ Session session = openSession()-->Line_12 $$ session.close()[ FD ]
Line_2 $$ public void testMultiLoadClearsBatchFetchQueue() -->Line_4 $$ Session session = openSession()[ CD ]
Line_4 $$ Session session = openSession()-->Line_5 $$ session.getTransaction().begin()[ FD ]
Line_2 $$ public void testMultiLoadClearsBatchFetchQueue() -->Line_6 $$ SimpleEntity first = session.byId(SimpleEntity.class).getReference(1)[ CD ]
Line_2 $$ public void testMultiLoadClearsBatchFetchQueue() -->Line_8 $$ List<SimpleEntity> list = session.byMultipleIds(SimpleEntity.class).enableSessionCheck(true).multiLoad(ids(56))[ CD ]
Line_2 $$ public void testMultiLoadClearsBatchFetchQueue() -->Line_7 $$ assertTrue(((SessionImplementor) session).getPersistenceContext().getBatchFetchQueue().containsEntityKey(entityKey))[ CD ]
Line_4 $$ Session session = openSession()-->Line_6 $$ SimpleEntity first = session.byId(SimpleEntity.class).getReference(1)[ FD ]
Line_3 $$ final EntityKey entityKey = new EntityKey(1, sessionFactory().getEntityPersister(SimpleEntity.class.getName()))-->Line_10 $$ assertFalse(((SessionImplementor) session).getPersistenceContext().getBatchFetchQueue().containsEntityKey(entityKey))[ FD ]
Line_2 $$ public void testMultiLoadClearsBatchFetchQueue() -->Line_3 $$ final EntityKey entityKey = new EntityKey(1, sessionFactory().getEntityPersister(SimpleEntity.class.getName()))[ CD ]
Line_2 $$ public void testMultiLoadClearsBatchFetchQueue() -->Line_11 $$ session.getTransaction().commit()[ CD ]
Line_4 $$ Session session = openSession()-->Line_11 $$ session.getTransaction().commit()[ FD ]
Line_3 $$ final EntityKey entityKey = new EntityKey(1, sessionFactory().getEntityPersister(SimpleEntity.class.getName()))-->Line_7 $$ assertTrue(((SessionImplementor) session).getPersistenceContext().getBatchFetchQueue().containsEntityKey(entityKey))[ FD ]
