Line_4 $$ Session s = openSession()-->Line_12 $$ list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zaddress, zname").list()[ FD ]
Line_6 $$ List list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zname, zaddress").list()-->Line_8 $$ assertEquals(zoo2, list.get(0))[ FD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_11 $$ assertEquals(zoo1, list.get(3))[ CD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_18 $$ t.commit()[ CD ]
Line_12 $$ list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zaddress, zname").list()-->Line_13 $$ assertEquals(4, list.size())[ FD ]
Line_6 $$ List list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zname, zaddress").list()-->Line_7 $$ assertEquals(4, list.size())[ FD ]
Line_6 $$ List list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zname, zaddress").list()-->Line_10 $$ assertEquals(zoo3, list.get(2))[ FD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_13 $$ assertEquals(4, list.size())[ CD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_4 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_12 $$ list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zaddress, zname").list()[ CD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_7 $$ assertEquals(4, list.size())[ CD ]
Line_12 $$ list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zaddress, zname").list()-->Line_14 $$ assertEquals(zoo3, list.get(0))[ FD ]
Line_6 $$ List list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zname, zaddress").list()-->Line_15 $$ assertEquals(zoo4, list.get(1))[ FD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_6 $$ List list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zname, zaddress").list()[ CD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_20 $$ cleanupData()[ CD ]
Line_6 $$ List list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zname, zaddress").list()-->Line_16 $$ assertEquals(zoo2, list.get(2))[ FD ]
Line_12 $$ list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zaddress, zname").list()-->Line_17 $$ assertEquals(zoo1, list.get(3))[ FD ]
Line_6 $$ List list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zname, zaddress").list()-->Line_12 $$ list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zaddress, zname").list()[ FD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_15 $$ assertEquals(zoo4, list.get(1))[ CD ]
Line_12 $$ list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zaddress, zname").list()-->Line_15 $$ assertEquals(zoo4, list.get(1))[ FD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_19 $$ s.close()[ CD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_10 $$ assertEquals(zoo3, list.get(2))[ CD ]
Line_6 $$ List list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zname, zaddress").list()-->Line_11 $$ assertEquals(zoo1, list.get(3))[ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ Transaction t = s.beginTransaction()[ FD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_9 $$ assertEquals(zoo4, list.get(1))[ CD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_3 $$ createData()[ CD ]
Line_6 $$ List list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zname, zaddress").list()-->Line_14 $$ assertEquals(zoo3, list.get(0))[ FD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_8 $$ assertEquals(zoo2, list.get(0))[ CD ]
Line_6 $$ List list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zname, zaddress").list()-->Line_9 $$ assertEquals(zoo4, list.get(1))[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_18 $$ t.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_6 $$ List list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zname, zaddress").list()[ FD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_16 $$ assertEquals(zoo2, list.get(2))[ CD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_14 $$ assertEquals(zoo3, list.get(0))[ CD ]
Line_12 $$ list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zaddress, zname").list()-->Line_16 $$ assertEquals(zoo2, list.get(2))[ FD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_5 $$ Transaction t = s.beginTransaction()[ CD ]
Line_4 $$ Session s = openSession()-->Line_19 $$ s.close()[ FD ]
Line_6 $$ List list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zname, zaddress").list()-->Line_13 $$ assertEquals(4, list.size())[ FD ]
Line_6 $$ List list = s.createQuery("select new Zoo( z.name as zname, z.address as zaddress) from Zoo z order by zname, zaddress").list()-->Line_17 $$ assertEquals(zoo1, list.get(3))[ FD ]
Line_2 $$ public void testOrderBySelectNewArgAliasRef() -->Line_17 $$ assertEquals(zoo1, list.get(3))[ CD ]
