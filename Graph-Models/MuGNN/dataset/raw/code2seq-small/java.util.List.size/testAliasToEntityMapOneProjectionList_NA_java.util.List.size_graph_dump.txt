Line_22 $$ Map shermanMap = (Map) resultList.get(1)-->Line_29 $$ assertTrue(shermanMap.get("student") instanceof Student)[ FD ]
Line_16 $$ ResultChecker checker = new ResultChecker() -->Line_19 $$ List resultList = (List) results[ CD ]
Line_16 $$ ResultChecker checker = new ResultChecker() -->Line_23 $$ assertEquals(1, yogiMap.size())[ CD ]
Line_19 $$ List resultList = (List) results-->Line_21 $$ Map yogiMap = (Map) resultList.get(0)[ FD ]
Line_16 $$ ResultChecker checker = new ResultChecker() -->Line_21 $$ Map yogiMap = (Map) resultList.get(0)[ CD ]
Line_4 $$ CriteriaExecutor criteriaExecutor = new CriteriaExecutor() -->Line_13 $$ return s.createQuery("select e.student as student from Enrolment e order by e.studentNumber").setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)[ FD ]
Line_10 $$ HqlExecutor hqlExecutor = new HqlExecutor() -->Line_13 $$ return s.createQuery("select e.student as student from Enrolment e order by e.studentNumber").setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)[ FD ]
Line_4 $$ CriteriaExecutor criteriaExecutor = new CriteriaExecutor() -->Line_34 $$ runTest(hqlExecutor, criteriaExecutor, checker, false)[ FD ]
Line_22 $$ Map shermanMap = (Map) resultList.get(1)-->Line_24 $$ assertEquals(1, shermanMap.size())[ FD ]
Line_10 $$ HqlExecutor hqlExecutor = new HqlExecutor() -->Line_13 $$ return s.createQuery("select e.student as student from Enrolment e order by e.studentNumber").setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)[ CD ]
Line_4 $$ CriteriaExecutor criteriaExecutor = new CriteriaExecutor() -->Line_7 $$ return s.createCriteria(Enrolment.class, "e").setProjection(Projections.property("e.student").as("student")).addOrder(Order.asc("e.studentNumber")).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)[ FD ]
Line_19 $$ List resultList = (List) results-->Line_20 $$ assertEquals(2, resultList.size())[ FD ]
Line_21 $$ Map yogiMap = (Map) resultList.get(0)-->Line_23 $$ assertEquals(1, yogiMap.size())[ FD ]
Line_16 $$ ResultChecker checker = new ResultChecker() -->Line_20 $$ assertEquals(2, resultList.size())[ CD ]
Line_19 $$ List resultList = (List) results-->Line_22 $$ Map shermanMap = (Map) resultList.get(1)[ FD ]
Line_16 $$ ResultChecker checker = new ResultChecker() -->Line_30 $$ assertEquals(yogiExpected.getStudentNumber(), ((Student) yogiMap.get("student")).getStudentNumber())[ CD ]
Line_16 $$ ResultChecker checker = new ResultChecker() -->Line_22 $$ Map shermanMap = (Map) resultList.get(1)[ CD ]
Line_16 $$ ResultChecker checker = new ResultChecker() -->Line_29 $$ assertTrue(shermanMap.get("student") instanceof Student)[ CD ]
Line_22 $$ Map shermanMap = (Map) resultList.get(1)-->Line_31 $$ assertEquals(shermanExpected.getStudentNumber(), ((Student) shermanMap.get("student")).getStudentNumber())[ FD ]
Line_4 $$ CriteriaExecutor criteriaExecutor = new CriteriaExecutor() -->Line_7 $$ return s.createCriteria(Enrolment.class, "e").setProjection(Projections.property("e.student").as("student")).addOrder(Order.asc("e.studentNumber")).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)[ CD ]
Line_21 $$ Map yogiMap = (Map) resultList.get(0)-->Line_30 $$ assertEquals(yogiExpected.getStudentNumber(), ((Student) yogiMap.get("student")).getStudentNumber())[ FD ]
Line_16 $$ ResultChecker checker = new ResultChecker() -->Line_31 $$ assertEquals(shermanExpected.getStudentNumber(), ((Student) shermanMap.get("student")).getStudentNumber())[ CD ]
Line_16 $$ ResultChecker checker = new ResultChecker() -->Line_24 $$ assertEquals(1, shermanMap.size())[ CD ]
