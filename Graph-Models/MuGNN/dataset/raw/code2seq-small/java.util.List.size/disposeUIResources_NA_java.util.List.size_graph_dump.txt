Line_11 $$ final RowSorter.SortKey sortKey = sortKeys.get(0)-->Line_12 $$ myUISettings.AVAILABLE_SORT_COLUMN_ORDER = sortKey.getSortOrder().ordinal()[ FD ]
Line_10 $$ if (sortKeys.size() > 0) -->Line_12 $$ myUISettings.AVAILABLE_SORT_COLUMN_ORDER = sortKey.getSortOrder().ordinal()[ CD ]
Line_9 $$ final List<? extends RowSorter.SortKey> sortKeys = rowSorter.getSortKeys()-->Line_10 $$ if (sortKeys.size() > 0) [ FD ]
Line_10 $$ if (sortKeys.size() > 0) -->Line_11 $$ final RowSorter.SortKey sortKey = sortKeys.get(0)[ CD ]
Line_9 $$ final List<? extends RowSorter.SortKey> sortKeys = rowSorter.getSortKeys()-->Line_11 $$ final RowSorter.SortKey sortKey = sortKeys.get(0)[ FD ]
Line_8 $$ if (rowSorter != null) -->Line_10 $$ if (sortKeys.size() > 0) [ CD ]
Line_6 $$ if (myAvailable) -->Line_17 $$ myUISettings.installedSortByStatus = myPluginManagerMain.pluginsModel.isSortByStatus()[ CD ]
Line_7 $$ final RowSorter<? extends TableModel> rowSorter = myPluginManagerMain.pluginTable.getRowSorter()-->Line_8 $$ if (rowSorter != null) [ FD ]
Line_6 $$ if (myAvailable) -->Line_7 $$ final RowSorter<? extends TableModel> rowSorter = myPluginManagerMain.pluginTable.getRowSorter()[ CD ]
Line_4 $$ if (myPluginManagerMain != null) -->Line_19 $$ Disposer.dispose(myPluginManagerMain)[ CD ]
Line_8 $$ if (rowSorter != null) -->Line_9 $$ final List<? extends RowSorter.SortKey> sortKeys = rowSorter.getSortKeys()[ CD ]
Line_4 $$ if (myPluginManagerMain != null) -->Line_6 $$ if (myAvailable) [ CD ]
Line_7 $$ final RowSorter<? extends TableModel> rowSorter = myPluginManagerMain.pluginTable.getRowSorter()-->Line_9 $$ final List<? extends RowSorter.SortKey> sortKeys = rowSorter.getSortKeys()[ FD ]
Line_4 $$ if (myPluginManagerMain != null) -->Line_5 $$ getSplitterProportions().saveSplitterProportions(myPluginManagerMain.getMainPanel())[ CD ]
Line_6 $$ if (myAvailable) -->Line_15 $$ myUISettings.availableSortByStatus = myPluginManagerMain.pluginsModel.isSortByStatus()[ CD ]
Line_6 $$ if (myAvailable) -->Line_8 $$ if (rowSorter != null) [ CD ]
