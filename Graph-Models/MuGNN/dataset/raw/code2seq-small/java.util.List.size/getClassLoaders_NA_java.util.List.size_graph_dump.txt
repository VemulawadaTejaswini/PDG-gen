Line_7 $$ ServletContext servletContext = ServletContextPool.get(servletContextName)-->Line_8 $$ ClassLoader pluginClassLoader = (ClassLoader) servletContext.getAttribute(PluginContextListener.PLUGIN_CLASS_LOADER)[ FD ]
Line_3 $$ List<ClassLoader> classLoaders = new ArrayList(servletContextNames.length + 2)-->Line_11 $$ return classLoaders.toArray(new ClassLoader[classLoaders.size()])[ FD ]
Line_3 $$ List<ClassLoader> classLoaders = new ArrayList(servletContextNames.length + 2)-->Line_9 $$ classLoaders.add(pluginClassLoader)[ FD ]
Line_2 $$ public static ClassLoader[] getClassLoaders(String[] servletContextNames) -->Line_4 $$ classLoaders.add(_getContextClassLoader())[ CD ]
Line_2 $$ public static ClassLoader[] getClassLoaders(String[] servletContextNames) -->Line_3 $$ List<ClassLoader> classLoaders = new ArrayList(servletContextNames.length + 2)[ CD ]
Line_2 $$ public static ClassLoader[] getClassLoaders(String[] servletContextNames) -->Line_5 $$ classLoaders.add(PortalClassLoaderUtil.getClassLoader())[ CD ]
Line_3 $$ List<ClassLoader> classLoaders = new ArrayList(servletContextNames.length + 2)-->Line_5 $$ classLoaders.add(PortalClassLoaderUtil.getClassLoader())[ FD ]
Line_6 $$ for (String servletContextName : servletContextNames) -->Line_7 $$ ServletContext servletContext = ServletContextPool.get(servletContextName)[ FD ]
Line_2 $$ public static ClassLoader[] getClassLoaders(String[] servletContextNames) -->Line_11 $$ return classLoaders.toArray(new ClassLoader[classLoaders.size()])[ CD ]
Line_8 $$ ClassLoader pluginClassLoader = (ClassLoader) servletContext.getAttribute(PluginContextListener.PLUGIN_CLASS_LOADER)-->Line_9 $$ classLoaders.add(pluginClassLoader)[ FD ]
Line_3 $$ List<ClassLoader> classLoaders = new ArrayList(servletContextNames.length + 2)-->Line_4 $$ classLoaders.add(_getContextClassLoader())[ FD ]
