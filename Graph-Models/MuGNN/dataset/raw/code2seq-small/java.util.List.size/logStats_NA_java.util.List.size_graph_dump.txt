Line_2 $$ private static void logStats(Collection<VirtualFile> otherFiles, long start) -->Line_14 $$ String message = "Search in " + otherFiles.size() + " files with unknown types took " + time + "ms.\n" + "Mapping their extensions to an existing file type (e.g. Plain Text) might speed up the search.\n" + "Most frequent non-indexed file extensions: "[ FD ]
Line_4 $$ final Multiset<String> stats = HashMultiset.create()-->Line_6 $$ stats.add(StringUtil.notNullize(file.getExtension()).toLowerCase())[ FD ]
Line_9 $$ Collections.sort(extensions, new Comparator<String>() -->Line_11 $$ return stats.count(o2) - stats.count(o1)[ CD ]
Line_2 $$ private static void logStats(Collection<VirtualFile> otherFiles, long start) -->Line_19 $$ LOG.info(message)[ CD ]
Line_2 $$ private static void logStats(Collection<VirtualFile> otherFiles, long start) -->Line_3 $$ long time = System.currentTimeMillis() - start[ CD ]
Line_16 $$ String extension = extensions.get(i)-->Line_17 $$ message += extension + "(" + stats.count(extension) + ") "[ FD ]
Line_8 $$ List<String> extensions = ContainerUtil.newArrayList(stats.elementSet())-->Line_15 $$ for (int i = 0; i < Math.min(10, extensions.size()); i++) [ FD ]
Line_2 $$ private static void logStats(Collection<VirtualFile> otherFiles, long start) -->Line_15 $$ for (int i = 0; i < Math.min(10, extensions.size()); i++) [ CD ]
Line_5 $$ for (VirtualFile file : otherFiles) -->Line_6 $$ stats.add(StringUtil.notNullize(file.getExtension()).toLowerCase())[ FD ]
Line_9 $$ Collections.sort(extensions, new Comparator<String>() -->Line_11 $$ return stats.count(o2) - stats.count(o1)[ FD ]
Line_4 $$ final Multiset<String> stats = HashMultiset.create()-->Line_11 $$ return stats.count(o2) - stats.count(o1)[ FD ]
Line_8 $$ List<String> extensions = ContainerUtil.newArrayList(stats.elementSet())-->Line_16 $$ String extension = extensions.get(i)[ FD ]
Line_2 $$ private static void logStats(Collection<VirtualFile> otherFiles, long start) -->Line_4 $$ final Multiset<String> stats = HashMultiset.create()[ CD ]
Line_4 $$ final Multiset<String> stats = HashMultiset.create()-->Line_8 $$ List<String> extensions = ContainerUtil.newArrayList(stats.elementSet())[ FD ]
Line_8 $$ List<String> extensions = ContainerUtil.newArrayList(stats.elementSet())-->Line_9 $$ Collections.sort(extensions, new Comparator<String>() [ FD ]
Line_4 $$ final Multiset<String> stats = HashMultiset.create()-->Line_17 $$ message += extension + "(" + stats.count(extension) + ") "[ FD ]
Line_2 $$ private static void logStats(Collection<VirtualFile> otherFiles, long start) -->Line_8 $$ List<String> extensions = ContainerUtil.newArrayList(stats.elementSet())[ CD ]
Line_15 $$ for (int i = 0; i < Math.min(10, extensions.size()); i++) -->Line_16 $$ String extension = extensions.get(i)[ FD ]
Line_15 $$ for (int i = 0; i < Math.min(10, extensions.size()); i++) -->Line_16 $$ String extension = extensions.get(i)[ CD ]
Line_2 $$ private static void logStats(Collection<VirtualFile> otherFiles, long start) -->Line_9 $$ Collections.sort(extensions, new Comparator<String>() [ CD ]
