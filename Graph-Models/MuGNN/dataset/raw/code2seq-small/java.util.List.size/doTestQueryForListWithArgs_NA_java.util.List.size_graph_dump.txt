Line_2 $$ private void doTestQueryForListWithArgs(String sql) throws Exception -->Line_8 $$ assertEquals("Second row is Integer", 12, ((Integer) li.get(1).get("age")).intValue())[ CD ]
Line_2 $$ private void doTestQueryForListWithArgs(String sql) throws Exception -->Line_9 $$ verify(this.preparedStatement).setObject(1, 3)[ CD ]
Line_2 $$ private void doTestQueryForListWithArgs(String sql) throws Exception -->Line_11 $$ verify(this.preparedStatement).close()[ CD ]
Line_2 $$ private void doTestQueryForListWithArgs(String sql) throws Exception -->Line_7 $$ assertEquals("First row is Integer", 11, ((Integer) li.get(0).get("age")).intValue())[ CD ]
Line_2 $$ private void doTestQueryForListWithArgs(String sql) throws Exception -->Line_10 $$ verify(this.resultSet).close()[ CD ]
Line_2 $$ private void doTestQueryForListWithArgs(String sql) throws Exception -->Line_3 $$ given(this.resultSet.next()).willReturn(true, true, false)[ CD ]
Line_2 $$ private void doTestQueryForListWithArgs(String sql) throws Exception -->Line_6 $$ assertEquals("All rows returned", 2, li.size())[ CD ]
Line_5 $$ List<Map<String, Object>> li = this.template.queryForList(sql, new Object[] -->Line_7 $$ assertEquals("First row is Integer", 11, ((Integer) li.get(0).get("age")).intValue())[ FD ]
Line_2 $$ private void doTestQueryForListWithArgs(String sql) throws Exception -->Line_5 $$ List<Map<String, Object>> li = this.template.queryForList(sql, new Object[] [ CD ]
Line_5 $$ List<Map<String, Object>> li = this.template.queryForList(sql, new Object[] -->Line_6 $$ assertEquals("All rows returned", 2, li.size())[ FD ]
Line_2 $$ private void doTestQueryForListWithArgs(String sql) throws Exception -->Line_4 $$ given(this.resultSet.getObject(1)).willReturn(11, 12)[ CD ]
Line_5 $$ List<Map<String, Object>> li = this.template.queryForList(sql, new Object[] -->Line_8 $$ assertEquals("Second row is Integer", 12, ((Integer) li.get(1).get("age")).intValue())[ FD ]
Line_2 $$ private void doTestQueryForListWithArgs(String sql) throws Exception -->Line_5 $$ List<Map<String, Object>> li = this.template.queryForList(sql, new Object[] [ FD ]
