Line_25 $$ c = new Category()-->Line_32 $$ c.setAssignable(assn)[ FD ]
Line_17 $$ Assignable assn = new Assignable()-->Line_32 $$ c.setAssignable(assn)[ FD ]
Line_15 $$ Category c = new Category()-->Line_22 $$ c.setAssignable(assn)[ FD ]
Line_3 $$ Session s = openSession()-->Line_34 $$ s.flush()[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_21 $$ assn.setCategories(l)[ CD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_37 $$ s.save(assn)[ CD ]
Line_35 $$ assn = new Assignable()-->Line_37 $$ s.save(assn)[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_24 $$ s.flush()[ CD ]
Line_3 $$ Session s = openSession()-->Line_9 $$ s.delete(entity)[ FD ]
Line_13 $$ s = openSession()-->Line_38 $$ s.getTransaction().commit()[ FD ]
Line_29 $$ l = new ArrayList()-->Line_31 $$ assn.setCategories(l)[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_44 $$ s.beginTransaction()[ CD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_40 $$ if (getDialect() instanceof MySQLDialect) [ CD ]
Line_19 $$ List l = new ArrayList()-->Line_31 $$ assn.setCategories(l)[ FD ]
Line_3 $$ Session s = openSession()-->Line_39 $$ s.close()[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_43 $$ s = openSession()[ CD ]
Line_19 $$ List l = new ArrayList()-->Line_20 $$ l.add(c)[ FD ]
Line_27 $$ assn = new Assignable()-->Line_35 $$ assn = new Assignable()[ FD ]
Line_3 $$ Session s = openSession()-->Line_50 $$ s.close()[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_22 $$ c.setAssignable(assn)[ CD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_16 $$ c.setName("NAME")[ CD ]
Line_5 $$ for (Object entity : s.createQuery("from Assignable").list()) -->Line_9 $$ s.delete(entity)[ FD ]
Line_19 $$ List l = new ArrayList()-->Line_29 $$ l = new ArrayList()[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_17 $$ Assignable assn = new Assignable()[ CD ]
Line_17 $$ Assignable assn = new Assignable()-->Line_28 $$ assn.setId("i.d.2")[ FD ]
Line_3 $$ Session s = openSession()-->Line_33 $$ s.save(assn)[ FD ]
Line_3 $$ Session s = openSession()-->Line_49 $$ s.getTransaction().commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_6 $$ s.delete(entity)[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_30 $$ l.add(c)[ CD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_23 $$ s.save(assn)[ CD ]
Line_13 $$ s = openSession()-->Line_49 $$ s.getTransaction().commit()[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_33 $$ s.save(assn)[ CD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_38 $$ s.getTransaction().commit()[ CD ]
Line_13 $$ s = openSession()-->Line_44 $$ s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_37 $$ s.save(assn)[ FD ]
Line_43 $$ s = openSession()-->Line_46 $$ List list = s.createSQLQuery(sql).addEntity("category", Category.class).addEntity("assignable", Assignable.class).list()[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_32 $$ c.setAssignable(assn)[ CD ]
Line_17 $$ Assignable assn = new Assignable()-->Line_37 $$ s.save(assn)[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_46 $$ List list = s.createSQLQuery(sql).addEntity("category", Category.class).addEntity("assignable", Assignable.class).list()[ CD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_19 $$ List l = new ArrayList()[ CD ]
Line_13 $$ s = openSession()-->Line_37 $$ s.save(assn)[ FD ]
Line_15 $$ Category c = new Category()-->Line_30 $$ l.add(c)[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_49 $$ s.getTransaction().commit()[ CD ]
Line_27 $$ assn = new Assignable()-->Line_32 $$ c.setAssignable(assn)[ FD ]
Line_3 $$ Session s = openSession()-->Line_8 $$ for (Object entity : s.createQuery("from Category").list()) [ FD ]
Line_46 $$ List list = s.createSQLQuery(sql).addEntity("category", Category.class).addEntity("assignable", Assignable.class).list()-->Line_48 $$ assertTrue(list.get(0) instanceof Object[])[ FD ]
Line_3 $$ Session s = openSession()-->Line_12 $$ s.close()[ FD ]
Line_13 $$ s = openSession()-->Line_14 $$ s.beginTransaction()[ FD ]
Line_27 $$ assn = new Assignable()-->Line_31 $$ assn.setCategories(l)[ FD ]
Line_15 $$ Category c = new Category()-->Line_20 $$ l.add(c)[ FD ]
Line_13 $$ s = openSession()-->Line_50 $$ s.close()[ FD ]
Line_13 $$ s = openSession()-->Line_24 $$ s.flush()[ FD ]
Line_43 $$ s = openSession()-->Line_49 $$ s.getTransaction().commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_43 $$ s = openSession()[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_14 $$ s.beginTransaction()[ CD ]
Line_25 $$ c = new Category()-->Line_30 $$ l.add(c)[ FD ]
Line_19 $$ List l = new ArrayList()-->Line_30 $$ l.add(c)[ FD ]
Line_13 $$ s = openSession()-->Line_46 $$ List list = s.createSQLQuery(sql).addEntity("category", Category.class).addEntity("assignable", Assignable.class).list()[ FD ]
Line_15 $$ Category c = new Category()-->Line_26 $$ c.setName("NAME2")[ FD ]
Line_29 $$ l = new ArrayList()-->Line_30 $$ l.add(c)[ FD ]
Line_17 $$ Assignable assn = new Assignable()-->Line_31 $$ assn.setCategories(l)[ FD ]
Line_15 $$ Category c = new Category()-->Line_16 $$ c.setName("NAME")[ FD ]
Line_17 $$ Assignable assn = new Assignable()-->Line_27 $$ assn = new Assignable()[ FD ]
Line_46 $$ List list = s.createSQLQuery(sql).addEntity("category", Category.class).addEntity("assignable", Assignable.class).list()-->Line_47 $$ assertTrue(list.size() == 6)[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_18 $$ assn.setId("i.d.")[ CD ]
Line_13 $$ s = openSession()-->Line_33 $$ s.save(assn)[ FD ]
Line_27 $$ assn = new Assignable()-->Line_37 $$ s.save(assn)[ FD ]
Line_5 $$ for (Object entity : s.createQuery("from Assignable").list()) -->Line_6 $$ s.delete(entity)[ FD ]
Line_3 $$ Session s = openSession()-->Line_23 $$ s.save(assn)[ FD ]
Line_3 $$ Session s = openSession()-->Line_11 $$ s.getTransaction().commit()[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_15 $$ Category c = new Category()[ CD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_45 $$ String sql = "select [ CD ]
Line_17 $$ Assignable assn = new Assignable()-->Line_33 $$ s.save(assn)[ FD ]
Line_27 $$ assn = new Assignable()-->Line_36 $$ assn.setId("i.d.3")[ FD ]
Line_40 $$ if (getDialect() instanceof MySQLDialect) -->Line_41 $$ return[ CD ]
Line_17 $$ Assignable assn = new Assignable()-->Line_21 $$ assn.setCategories(l)[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_26 $$ c.setName("NAME2")[ CD ]
Line_17 $$ Assignable assn = new Assignable()-->Line_36 $$ assn.setId("i.d.3")[ FD ]
Line_25 $$ c = new Category()-->Line_26 $$ c.setName("NAME2")[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_50 $$ s.close()[ CD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_3 $$ Session s = openSession()[ CD ]
Line_17 $$ Assignable assn = new Assignable()-->Line_22 $$ c.setAssignable(assn)[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_11 $$ s.getTransaction().commit()[ CD ]
Line_3 $$ Session s = openSession()-->Line_13 $$ s = openSession()[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_36 $$ assn.setId("i.d.3")[ CD ]
Line_45 $$ String sql = "select -->Line_46 $$ List list = s.createSQLQuery(sql).addEntity("category", Category.class).addEntity("assignable", Assignable.class).list()[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_27 $$ assn = new Assignable()[ CD ]
Line_3 $$ Session s = openSession()-->Line_24 $$ s.flush()[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_35 $$ assn = new Assignable()[ CD ]
Line_17 $$ Assignable assn = new Assignable()-->Line_23 $$ s.save(assn)[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_13 $$ s = openSession()[ CD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_31 $$ assn.setCategories(l)[ CD ]
Line_43 $$ s = openSession()-->Line_50 $$ s.close()[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_29 $$ l = new ArrayList()[ CD ]
Line_13 $$ s = openSession()-->Line_34 $$ s.flush()[ FD ]
Line_13 $$ s = openSession()-->Line_43 $$ s = openSession()[ FD ]
Line_15 $$ Category c = new Category()-->Line_25 $$ c = new Category()[ FD ]
Line_35 $$ assn = new Assignable()-->Line_36 $$ assn.setId("i.d.3")[ FD ]
Line_17 $$ Assignable assn = new Assignable()-->Line_35 $$ assn = new Assignable()[ FD ]
Line_3 $$ Session s = openSession()-->Line_5 $$ for (Object entity : s.createQuery("from Assignable").list()) [ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_28 $$ assn.setId("i.d.2")[ CD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_47 $$ assertTrue(list.size() == 6)[ CD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_20 $$ l.add(c)[ CD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_12 $$ s.close()[ CD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_34 $$ s.flush()[ CD ]
Line_3 $$ Session s = openSession()-->Line_46 $$ List list = s.createSQLQuery(sql).addEntity("category", Category.class).addEntity("assignable", Assignable.class).list()[ FD ]
Line_13 $$ s = openSession()-->Line_39 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_14 $$ s.beginTransaction()[ FD ]
Line_19 $$ List l = new ArrayList()-->Line_21 $$ assn.setCategories(l)[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_25 $$ c = new Category()[ CD ]
Line_43 $$ s = openSession()-->Line_44 $$ s.beginTransaction()[ FD ]
Line_27 $$ assn = new Assignable()-->Line_33 $$ s.save(assn)[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_39 $$ s.close()[ CD ]
Line_27 $$ assn = new Assignable()-->Line_28 $$ assn.setId("i.d.2")[ FD ]
Line_3 $$ Session s = openSession()-->Line_44 $$ s.beginTransaction()[ FD ]
Line_13 $$ s = openSession()-->Line_23 $$ s.save(assn)[ FD ]
Line_17 $$ Assignable assn = new Assignable()-->Line_18 $$ assn.setId("i.d.")[ FD ]
Line_3 $$ Session s = openSession()-->Line_38 $$ s.getTransaction().commit()[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_4 $$ s.beginTransaction()[ CD ]
Line_15 $$ Category c = new Category()-->Line_32 $$ c.setAssignable(assn)[ FD ]
Line_2 $$ public void testFindBySQLMultipleObject() throws HibernateException, SQLException -->Line_48 $$ assertTrue(list.get(0) instanceof Object[])[ CD ]
