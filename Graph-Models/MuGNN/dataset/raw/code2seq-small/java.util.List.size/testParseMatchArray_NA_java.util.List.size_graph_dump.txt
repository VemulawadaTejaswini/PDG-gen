Line_2 $$ public void testParseMatchArray() throws Exception -->Line_8 $$ assertThat(matchAssertion.getExpectedValue(), instanceOf(List.class))[ CD ]
Line_2 $$ public void testParseMatchArray() throws Exception -->Line_7 $$ assertThat(matchAssertion.getField(), equalTo("matches"))[ CD ]
Line_5 $$ MatchAssertion matchAssertion = matchParser.parse(new RestTestSuiteParseContext("api", "suite", parser))-->Line_9 $$ List strings = (List) matchAssertion.getExpectedValue()[ FD ]
Line_4 $$ MatchParser matchParser = new MatchParser()-->Line_5 $$ MatchAssertion matchAssertion = matchParser.parse(new RestTestSuiteParseContext("api", "suite", parser))[ FD ]
Line_2 $$ public void testParseMatchArray() throws Exception -->Line_4 $$ MatchParser matchParser = new MatchParser()[ CD ]
Line_5 $$ MatchAssertion matchAssertion = matchParser.parse(new RestTestSuiteParseContext("api", "suite", parser))-->Line_7 $$ assertThat(matchAssertion.getField(), equalTo("matches"))[ FD ]
Line_2 $$ public void testParseMatchArray() throws Exception -->Line_5 $$ MatchAssertion matchAssertion = matchParser.parse(new RestTestSuiteParseContext("api", "suite", parser))[ CD ]
Line_9 $$ List strings = (List) matchAssertion.getExpectedValue()-->Line_12 $$ assertThat(strings.get(1).toString(), equalTo("test_percolator_2"))[ FD ]
Line_5 $$ MatchAssertion matchAssertion = matchParser.parse(new RestTestSuiteParseContext("api", "suite", parser))-->Line_6 $$ assertThat(matchAssertion, notNullValue())[ FD ]
Line_5 $$ MatchAssertion matchAssertion = matchParser.parse(new RestTestSuiteParseContext("api", "suite", parser))-->Line_8 $$ assertThat(matchAssertion.getExpectedValue(), instanceOf(List.class))[ FD ]
Line_2 $$ public void testParseMatchArray() throws Exception -->Line_6 $$ assertThat(matchAssertion, notNullValue())[ CD ]
Line_2 $$ public void testParseMatchArray() throws Exception -->Line_10 $$ assertThat(strings.size(), equalTo(2))[ CD ]
Line_9 $$ List strings = (List) matchAssertion.getExpectedValue()-->Line_10 $$ assertThat(strings.size(), equalTo(2))[ FD ]
Line_2 $$ public void testParseMatchArray() throws Exception -->Line_12 $$ assertThat(strings.get(1).toString(), equalTo("test_percolator_2"))[ CD ]
Line_9 $$ List strings = (List) matchAssertion.getExpectedValue()-->Line_11 $$ assertThat(strings.get(0).toString(), equalTo("test_percolator_1"))[ FD ]
Line_2 $$ public void testParseMatchArray() throws Exception -->Line_3 $$ parser = YamlXContent.yamlXContent.createParser("[ CD ]
Line_2 $$ public void testParseMatchArray() throws Exception -->Line_11 $$ assertThat(strings.get(0).toString(), equalTo("test_percolator_1"))[ CD ]
Line_2 $$ public void testParseMatchArray() throws Exception -->Line_9 $$ List strings = (List) matchAssertion.getExpectedValue()[ CD ]
