Line_14 $$ String spriteRootDirName = PropsValues.SPRITE_ROOT_DIR-->Line_15 $$ if (Validator.isNotNull(spriteRootDirName)) [ FD ]
Line_28 $$ if ((ifModifiedSince > 0) && (ifModifiedSince == lastModified)) -->Line_29 $$ response.setStatus(HttpServletResponse.SC_NOT_MODIFIED)[ CD ]
Line_25 $$ long lastModified = file.lastModified()-->Line_34 $$ response.setDateHeader(HttpHeaders.LAST_MODIFIED, lastModified)[ FD ]
Line_20 $$ String canonicalPath = file.getCanonicalPath()-->Line_21 $$ if (!file.exists() || file.isDirectory() || !file.canRead() || file.isHidden() || !canonicalPath.startsWith(rootDir.getCanonicalPath())) [ FD ]
Line_36 $$ String fileName = file.getName()-->Line_43 $$ ServletResponseUtil.sendFile(request, response, fileName, new FileInputStream(file), file.length(), contentType)[ FD ]
Line_21 $$ if (!file.exists() || file.isDirectory() || !file.canRead() || file.isHidden() || !canonicalPath.startsWith(rootDir.getCanonicalPath())) -->Line_23 $$ return[ CD ]
Line_12 $$ File file = new File(rootDir, path)-->Line_41 $$ ServletResponseUtil.sendFileWithRangeHeader(request, response, fileName, new FileInputStream(file), file.length(), contentType)[ FD ]
Line_17 $$ file = new File(rootDir, pathInfo)-->Line_41 $$ ServletResponseUtil.sendFileWithRangeHeader(request, response, fileName, new FileInputStream(file), file.length(), contentType)[ FD ]
Line_4 $$ String servletPath = request.getServletPath()-->Line_6 $$ String path = servletPath.concat(pathInfo)[ FD ]
Line_12 $$ File file = new File(rootDir, path)-->Line_20 $$ String canonicalPath = file.getCanonicalPath()[ FD ]
Line_25 $$ long lastModified = file.lastModified()-->Line_26 $$ if (lastModified > 0) [ FD ]
Line_28 $$ if ((ifModifiedSince > 0) && (ifModifiedSince == lastModified)) -->Line_30 $$ return[ CD ]
Line_12 $$ File file = new File(rootDir, path)-->Line_17 $$ file = new File(rootDir, pathInfo)[ FD ]
Line_13 $$ if (servletPath.equals(SpriteProcessor.PATH)) -->Line_15 $$ if (Validator.isNotNull(spriteRootDirName)) [ CD ]
Line_15 $$ if (Validator.isNotNull(spriteRootDirName)) -->Line_17 $$ file = new File(rootDir, pathInfo)[ CD ]
Line_26 $$ if (lastModified > 0) -->Line_27 $$ long ifModifiedSince = request.getDateHeader(HttpHeaders.IF_MODIFIED_SINCE)[ CD ]
Line_26 $$ if (lastModified > 0) -->Line_28 $$ if ((ifModifiedSince > 0) && (ifModifiedSince == lastModified)) [ CD ]
Line_33 $$ if (lastModified > 0) -->Line_34 $$ response.setDateHeader(HttpHeaders.LAST_MODIFIED, lastModified)[ CD ]
Line_12 $$ File file = new File(rootDir, path)-->Line_43 $$ ServletResponseUtil.sendFile(request, response, fileName, new FileInputStream(file), file.length(), contentType)[ FD ]
Line_5 $$ String pathInfo = URLDecoder.decode(request.getPathInfo(), StringPool.UTF8)-->Line_6 $$ String path = servletPath.concat(pathInfo)[ FD ]
Line_25 $$ long lastModified = file.lastModified()-->Line_33 $$ if (lastModified > 0) [ FD ]
Line_13 $$ if (servletPath.equals(SpriteProcessor.PATH)) -->Line_14 $$ String spriteRootDirName = PropsValues.SPRITE_ROOT_DIR[ CD ]
Line_15 $$ if (Validator.isNotNull(spriteRootDirName)) -->Line_16 $$ rootDir = new File(spriteRootDirName)[ CD ]
Line_16 $$ rootDir = new File(spriteRootDirName)-->Line_21 $$ if (!file.exists() || file.isDirectory() || !file.canRead() || file.isHidden() || !canonicalPath.startsWith(rootDir.getCanonicalPath())) [ FD ]
Line_12 $$ File file = new File(rootDir, path)-->Line_25 $$ long lastModified = file.lastModified()[ FD ]
Line_11 $$ File rootDir = _tempDir-->Line_21 $$ if (!file.exists() || file.isDirectory() || !file.canRead() || file.isHidden() || !canonicalPath.startsWith(rootDir.getCanonicalPath())) [ FD ]
Line_4 $$ String servletPath = request.getServletPath()-->Line_13 $$ if (servletPath.equals(SpriteProcessor.PATH)) [ FD ]
Line_7 $$ if (!isAllowedPath(path)) -->Line_8 $$ response.setStatus(HttpServletResponse.SC_NOT_FOUND)[ CD ]
Line_21 $$ if (!file.exists() || file.isDirectory() || !file.canRead() || file.isHidden() || !canonicalPath.startsWith(rootDir.getCanonicalPath())) -->Line_22 $$ response.setStatus(HttpServletResponse.SC_NOT_FOUND)[ CD ]
Line_12 $$ File file = new File(rootDir, path)-->Line_36 $$ String fileName = file.getName()[ FD ]
Line_36 $$ String fileName = file.getName()-->Line_41 $$ ServletResponseUtil.sendFileWithRangeHeader(request, response, fileName, new FileInputStream(file), file.length(), contentType)[ FD ]
Line_17 $$ file = new File(rootDir, pathInfo)-->Line_20 $$ String canonicalPath = file.getCanonicalPath()[ FD ]
Line_17 $$ file = new File(rootDir, pathInfo)-->Line_25 $$ long lastModified = file.lastModified()[ FD ]
Line_17 $$ file = new File(rootDir, pathInfo)-->Line_21 $$ if (!file.exists() || file.isDirectory() || !file.canRead() || file.isHidden() || !canonicalPath.startsWith(rootDir.getCanonicalPath())) [ FD ]
Line_17 $$ file = new File(rootDir, pathInfo)-->Line_36 $$ String fileName = file.getName()[ FD ]
Line_7 $$ if (!isAllowedPath(path)) -->Line_9 $$ return[ CD ]
Line_17 $$ file = new File(rootDir, pathInfo)-->Line_43 $$ ServletResponseUtil.sendFile(request, response, fileName, new FileInputStream(file), file.length(), contentType)[ FD ]
Line_11 $$ File rootDir = _tempDir-->Line_16 $$ rootDir = new File(spriteRootDirName)[ FD ]
Line_6 $$ String path = servletPath.concat(pathInfo)-->Line_7 $$ if (!isAllowedPath(path)) [ FD ]
Line_12 $$ File file = new File(rootDir, path)-->Line_21 $$ if (!file.exists() || file.isDirectory() || !file.canRead() || file.isHidden() || !canonicalPath.startsWith(rootDir.getCanonicalPath())) [ FD ]
