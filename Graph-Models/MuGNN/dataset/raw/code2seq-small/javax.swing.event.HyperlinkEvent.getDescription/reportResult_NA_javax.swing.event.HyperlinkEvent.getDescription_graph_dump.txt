Line_26 $$ if (apply && myDialog != null) -->Line_36 $$ CodeStyleScheme derivedScheme = CodeStyleSchemes.getInstance().createNewScheme("Derived from " + file.getName(), null)[ CD ]
Line_7 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) -->Line_26 $$ if (apply && myDialog != null) [ CD ]
Line_54 $$ BalloonLayout layout = ((IdeFrame) window).getBalloonLayout()-->Line_55 $$ if (layout != null) [ FD ]
Line_26 $$ if (apply && myDialog != null) -->Line_29 $$ forSelection.applyConditioned(new Condition<Value>() [ CD ]
Line_7 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) -->Line_8 $$ boolean apply = "apply".equals(e.getDescription())[ CD ]
Line_10 $$ if (!apply) -->Line_12 $$ final LanguageCodeStyleSettingsProvider[] providers = Extensions.getExtensions(LanguageCodeStyleSettingsProvider.EP_NAME)[ CD ]
Line_26 $$ if (apply && myDialog != null) -->Line_38 $$ CodeStyleSchemes.getInstance().addScheme(derivedScheme)[ CD ]
Line_10 $$ if (!apply) -->Line_11 $$ final List<Value> values = forSelection.getValues()[ CD ]
Line_2 $$ public void reportResult(final ValuesExtractionResult forSelection, final Project project, final CodeStyleSettings cloneSettings, final PsiFile file, final Map<Value, Object> backup) -->Line_40 $$ CodeStyleSettingsManager.getInstance(project).PREFERRED_PROJECT_CODE_STYLE = derivedScheme.getName()[ FD ]
Line_15 $$ for (final LanguageCodeStyleSettingsProvider provider : providers) -->Line_16 $$ Language target = provider.getLanguage()[ FD ]
Line_17 $$ if (target.equals(language)) -->Line_20 $$ myDialog = new ExtractedSettingsDialog(project, nameProvider, values)[ CD ]
Line_51 $$ window = JOptionPane.getRootFrame()-->Line_53 $$ if (window instanceof IdeFrame) [ FD ]
Line_45 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_49 $$ Window window = WindowManager.getInstance().getFrame(project)[ CD ]
Line_45 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_50 $$ if (window == null) [ CD ]
Line_3 $$ final Balloon balloon = JBPopupFactory.getInstance().createHtmlTextBalloonBuilder("Formatting Options were extracted<br/><a href=\"apply\">Apply</a> <a href=\"details\">Details...</a>", MessageType.INFO, new HyperlinkListener() -->Line_7 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) [ CD ]
Line_3 $$ final Balloon balloon = JBPopupFactory.getInstance().createHtmlTextBalloonBuilder("Formatting Options were extracted<br/><a href=\"apply\">Apply</a> <a href=\"details\">Details...</a>", MessageType.INFO, new HyperlinkListener() -->Line_7 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) [ FD ]
Line_21 $$ apply = myDialog.showAndGet()-->Line_26 $$ if (apply && myDialog != null) [ FD ]
Line_2 $$ public void reportResult(final ValuesExtractionResult forSelection, final Project project, final CodeStyleSettings cloneSettings, final PsiFile file, final Map<Value, Object> backup) -->Line_29 $$ forSelection.applyConditioned(new Condition<Value>() [ FD ]
Line_49 $$ Window window = WindowManager.getInstance().getFrame(project)-->Line_51 $$ window = JOptionPane.getRootFrame()[ FD ]
Line_49 $$ Window window = WindowManager.getInstance().getFrame(project)-->Line_53 $$ if (window instanceof IdeFrame) [ FD ]
Line_2 $$ public void reportResult(final ValuesExtractionResult forSelection, final Project project, final CodeStyleSettings cloneSettings, final PsiFile file, final Map<Value, Object> backup) -->Line_45 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ CD ]
Line_8 $$ boolean apply = "apply".equals(e.getDescription())-->Line_21 $$ apply = myDialog.showAndGet()[ FD ]
Line_2 $$ public void reportResult(final ValuesExtractionResult forSelection, final Project project, final CodeStyleSettings cloneSettings, final PsiFile file, final Map<Value, Object> backup) -->Line_49 $$ Window window = WindowManager.getInstance().getFrame(project)[ FD ]
Line_45 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_53 $$ if (window instanceof IdeFrame) [ CD ]
Line_10 $$ if (!apply) -->Line_13 $$ Language language = file.getLanguage()[ CD ]
Line_8 $$ boolean apply = "apply".equals(e.getDescription())-->Line_26 $$ if (apply && myDialog != null) [ FD ]
Line_3 $$ final Balloon balloon = JBPopupFactory.getInstance().createHtmlTextBalloonBuilder("Formatting Options were extracted<br/><a href=\"apply\">Apply</a> <a href=\"details\">Details...</a>", MessageType.INFO, new HyperlinkListener() -->Line_8 $$ boolean apply = "apply".equals(e.getDescription())[ FD ]
Line_29 $$ forSelection.applyConditioned(new Condition<Value>() -->Line_33 $$ return finalMyDialog.valueIsSelectedInTree(value)[ CD ]
Line_54 $$ BalloonLayout layout = ((IdeFrame) window).getBalloonLayout()-->Line_56 $$ layout.add(balloon)[ FD ]
Line_2 $$ public void reportResult(final ValuesExtractionResult forSelection, final Project project, final CodeStyleSettings cloneSettings, final PsiFile file, final Map<Value, Object> backup) -->Line_36 $$ CodeStyleScheme derivedScheme = CodeStyleSchemes.getInstance().createNewScheme("Derived from " + file.getName(), null)[ FD ]
Line_50 $$ if (window == null) -->Line_51 $$ window = JOptionPane.getRootFrame()[ CD ]
Line_16 $$ Language target = provider.getLanguage()-->Line_17 $$ if (target.equals(language)) [ FD ]
Line_26 $$ if (apply && myDialog != null) -->Line_40 $$ CodeStyleSettingsManager.getInstance(project).PREFERRED_PROJECT_CODE_STYLE = derivedScheme.getName()[ CD ]
Line_2 $$ public void reportResult(final ValuesExtractionResult forSelection, final Project project, final CodeStyleSettings cloneSettings, final PsiFile file, final Map<Value, Object> backup) -->Line_37 $$ derivedScheme.getCodeStyleSettings().copyFrom(cloneSettings)[ FD ]
Line_2 $$ public void reportResult(final ValuesExtractionResult forSelection, final Project project, final CodeStyleSettings cloneSettings, final PsiFile file, final Map<Value, Object> backup) -->Line_3 $$ final Balloon balloon = JBPopupFactory.getInstance().createHtmlTextBalloonBuilder("Formatting Options were extracted<br/><a href=\"apply\">Apply</a> <a href=\"details\">Details...</a>", MessageType.INFO, new HyperlinkListener() [ CD ]
Line_9 $$ ExtractedSettingsDialog myDialog = null-->Line_21 $$ apply = myDialog.showAndGet()[ FD ]
Line_53 $$ if (window instanceof IdeFrame) -->Line_54 $$ BalloonLayout layout = ((IdeFrame) window).getBalloonLayout()[ CD ]
Line_13 $$ Language language = file.getLanguage()-->Line_17 $$ if (target.equals(language)) [ FD ]
Line_53 $$ if (window instanceof IdeFrame) -->Line_55 $$ if (layout != null) [ CD ]
Line_7 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) -->Line_10 $$ if (!apply) [ CD ]
Line_3 $$ final Balloon balloon = JBPopupFactory.getInstance().createHtmlTextBalloonBuilder("Formatting Options were extracted<br/><a href=\"apply\">Apply</a> <a href=\"details\">Details...</a>", MessageType.INFO, new HyperlinkListener() -->Line_56 $$ layout.add(balloon)[ FD ]
Line_26 $$ if (apply && myDialog != null) -->Line_39 $$ ((CodeStyleSchemesImpl) CodeStyleSchemes.getInstance()).getSchemeManager().setCurrent(derivedScheme)[ CD ]
Line_17 $$ if (target.equals(language)) -->Line_21 $$ apply = myDialog.showAndGet()[ CD ]
Line_7 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) -->Line_9 $$ ExtractedSettingsDialog myDialog = null[ CD ]
Line_20 $$ myDialog = new ExtractedSettingsDialog(project, nameProvider, values)-->Line_21 $$ apply = myDialog.showAndGet()[ FD ]
Line_2 $$ public void reportResult(final ValuesExtractionResult forSelection, final Project project, final CodeStyleSettings cloneSettings, final PsiFile file, final Map<Value, Object> backup) -->Line_11 $$ final List<Value> values = forSelection.getValues()[ FD ]
Line_10 $$ if (!apply) -->Line_14 $$ CodeStyleSettingsNameProvider nameProvider = new CodeStyleSettingsNameProvider()[ CD ]
Line_29 $$ forSelection.applyConditioned(new Condition<Value>() -->Line_33 $$ return finalMyDialog.valueIsSelectedInTree(value)[ FD ]
Line_49 $$ Window window = WindowManager.getInstance().getFrame(project)-->Line_50 $$ if (window == null) [ FD ]
Line_2 $$ public void reportResult(final ValuesExtractionResult forSelection, final Project project, final CodeStyleSettings cloneSettings, final PsiFile file, final Map<Value, Object> backup) -->Line_13 $$ Language language = file.getLanguage()[ FD ]
Line_55 $$ if (layout != null) -->Line_56 $$ layout.add(balloon)[ CD ]
Line_26 $$ if (apply && myDialog != null) -->Line_37 $$ derivedScheme.getCodeStyleSettings().copyFrom(cloneSettings)[ CD ]
Line_9 $$ ExtractedSettingsDialog myDialog = null-->Line_20 $$ myDialog = new ExtractedSettingsDialog(project, nameProvider, values)[ FD ]
Line_8 $$ boolean apply = "apply".equals(e.getDescription())-->Line_10 $$ if (!apply) [ FD ]
