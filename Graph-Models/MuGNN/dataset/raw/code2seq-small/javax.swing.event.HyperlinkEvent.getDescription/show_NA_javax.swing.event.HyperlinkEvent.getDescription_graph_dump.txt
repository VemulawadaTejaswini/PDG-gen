Line_12 $$ if (!editorComponent.isShowing())-->Line_13 $$ return null[ CD ]
Line_8 $$ final boolean expanded = myCurrentWidth > 0 && dressDescription(editor)-->Line_18 $$ correctLocation(editor, pane, p, alignToRight, expanded, myCurrentWidth)[ FD ]
Line_54 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_70 $$ final String description = e.getDescription()[ FD ]
Line_42 $$ actionRef.set(new AnAction() -->Line_92 $$ MouseEvent newMouseEvent = SwingUtilities.convertMouseEvent(e.getComponent(), e, contentComponent)[ FD ]
Line_29 $$ final Ref<AnAction> actionRef = new Ref<AnAction>()-->Line_36 $$ final AnAction action = actionRef.get()[ FD ]
Line_9 $$ final HintManagerImpl hintManager = HintManagerImpl.getInstanceImpl()-->Line_105 $$ hintManager.showEditorHint(hint, editor, p, HintManager.HIDE_BY_ANY_KEY | HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_OTHER_HINT | HintManager.HIDE_BY_SCROLLING, 0, false, hintHint)[ FD ]
Line_20 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)-->Line_22 $$ scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED)[ FD ]
Line_15 $$ final JEditorPane pane = IdeTooltipManager.initPane(new Html(myText).setKeepFont(true), hintHint, layeredPane)-->Line_51 $$ expand(hint, editor, p, pane, alignToRight, group, hintHint)[ FD ]
Line_75 $$ if (!expanded) -->Line_79 $$ hint.hide()[ CD ]
Line_42 $$ actionRef.set(new AnAction() -->Line_64 $$ final URL url = e.getURL()[ FD ]
Line_14 $$ final JLayeredPane layeredPane = editorComponent.getRootPane().getLayeredPane()-->Line_15 $$ final JEditorPane pane = IdeTooltipManager.initPane(new Html(myText).setKeepFont(true), hintHint, layeredPane)[ FD ]
Line_54 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_64 $$ final URL url = e.getURL()[ FD ]
Line_11 $$ final JComponent editorComponent = editor.getComponent()-->Line_12 $$ if (!editorComponent.isShowing())[ FD ]
Line_36 $$ final AnAction action = actionRef.get()-->Line_37 $$ if (action != null) [ FD ]
Line_37 $$ if (action != null) -->Line_38 $$ action.unregisterCustomShortcutSet(contentComponent)[ CD ]
Line_20 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)-->Line_25 $$ scrollPane.getViewport().setOpaque(hintHint.isOpaqueAllowed())[ FD ]
Line_20 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)-->Line_26 $$ scrollPane.setBackground(hintHint.getTextBackground())[ FD ]
Line_42 $$ actionRef.set(new AnAction() -->Line_59 $$ if (e.getEventType() == HyperlinkEvent.EventType.EXITED) [ FD ]
Line_64 $$ final URL url = e.getURL()-->Line_66 $$ BrowserUtil.browse(url)[ FD ]
Line_91 $$ if (!myActiveLink) -->Line_93 $$ hint.hide()[ CD ]
Line_75 $$ if (!expanded) -->Line_78 $$ stripDescription()[ CD ]
Line_8 $$ final boolean expanded = myCurrentWidth > 0 && dressDescription(editor)-->Line_75 $$ if (!expanded) [ FD ]
Line_20 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)-->Line_21 $$ scrollPane.setBorder(null)[ FD ]
Line_29 $$ final Ref<AnAction> actionRef = new Ref<AnAction>()-->Line_42 $$ actionRef.set(new AnAction() [ FD ]
Line_15 $$ final JEditorPane pane = IdeTooltipManager.initPane(new Html(myText).setKeepFont(true), hintHint, layeredPane)-->Line_54 $$ pane.addHyperlinkListener(new HyperlinkListener() [ FD ]
Line_54 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_92 $$ MouseEvent newMouseEvent = SwingUtilities.convertMouseEvent(e.getComponent(), e, contentComponent)[ FD ]
Line_63 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) -->Line_64 $$ final URL url = e.getURL()[ CD ]
Line_20 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)-->Line_27 $$ scrollPane.getViewport().setBackground(hintHint.getTextBackground())[ FD ]
Line_91 $$ if (!myActiveLink) -->Line_94 $$ contentComponent.dispatchEvent(newMouseEvent)[ CD ]
Line_42 $$ actionRef.set(new AnAction() -->Line_70 $$ final String description = e.getDescription()[ FD ]
Line_92 $$ MouseEvent newMouseEvent = SwingUtilities.convertMouseEvent(e.getComponent(), e, contentComponent)-->Line_94 $$ contentComponent.dispatchEvent(newMouseEvent)[ FD ]
Line_20 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)-->Line_24 $$ scrollPane.setOpaque(hintHint.isOpaqueAllowed())[ FD ]
Line_42 $$ actionRef.set(new AnAction() -->Line_51 $$ expand(hint, editor, p, pane, alignToRight, group, hintHint)[ CD ]
Line_75 $$ if (!expanded) -->Line_76 $$ expand(hint, editor, p, pane, alignToRight, group, hintHint)[ CD ]
Line_15 $$ final JEditorPane pane = IdeTooltipManager.initPane(new Html(myText).setKeepFont(true), hintHint, layeredPane)-->Line_20 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)[ FD ]
Line_30 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_36 $$ final AnAction action = actionRef.get()[ CD ]
Line_59 $$ if (e.getEventType() == HyperlinkEvent.EventType.EXITED) -->Line_61 $$ return[ CD ]
Line_42 $$ actionRef.set(new AnAction() -->Line_63 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) [ FD ]
Line_64 $$ final URL url = e.getURL()-->Line_65 $$ if (url != null) [ FD ]
Line_30 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_79 $$ hint.hide()[ FD ]
Line_15 $$ final JEditorPane pane = IdeTooltipManager.initPane(new Html(myText).setKeepFont(true), hintHint, layeredPane)-->Line_18 $$ correctLocation(editor, pane, p, alignToRight, expanded, myCurrentWidth)[ FD ]
Line_70 $$ final String description = e.getDescription()-->Line_71 $$ if (description != null && handle(description, editor)) [ FD ]
Line_91 $$ if (!myActiveLink) -->Line_92 $$ MouseEvent newMouseEvent = SwingUtilities.convertMouseEvent(e.getComponent(), e, contentComponent)[ CD ]
Line_54 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_63 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) [ FD ]
Line_65 $$ if (url != null) -->Line_68 $$ return[ CD ]
Line_30 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_35 $$ super.hide()[ CD ]
Line_63 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) -->Line_71 $$ if (description != null && handle(description, editor)) [ CD ]
Line_20 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)-->Line_28 $$ scrollPane.setViewportBorder(null)[ FD ]
Line_30 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_51 $$ expand(hint, editor, p, pane, alignToRight, group, hintHint)[ FD ]
Line_30 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_67 $$ hint.hide()[ FD ]
Line_36 $$ final AnAction action = actionRef.get()-->Line_38 $$ action.unregisterCustomShortcutSet(contentComponent)[ FD ]
Line_71 $$ if (description != null && handle(description, editor)) -->Line_73 $$ return[ CD ]
Line_30 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_93 $$ hint.hide()[ FD ]
Line_4 $$ if (myText == null)-->Line_5 $$ return null[ CD ]
Line_20 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)-->Line_23 $$ scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED)[ FD ]
Line_30 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_72 $$ hint.hide()[ FD ]
Line_30 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_101 $$ hint.hide()[ FD ]
Line_65 $$ if (url != null) -->Line_66 $$ BrowserUtil.browse(url)[ CD ]
Line_63 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) -->Line_70 $$ final String description = e.getDescription()[ CD ]
Line_100 $$ if (!expanded) -->Line_101 $$ hint.hide()[ CD ]
Line_75 $$ if (!expanded) -->Line_80 $$ TooltipController.getInstance().showTooltip(editor, new Point(p.x - 3, p.y - 3), createRenderer(myText, 0), false, group, hintHint)[ CD ]
Line_30 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_76 $$ expand(hint, editor, p, pane, alignToRight, group, hintHint)[ FD ]
Line_54 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_59 $$ if (e.getEventType() == HyperlinkEvent.EventType.EXITED) [ CD ]
Line_30 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_37 $$ if (action != null) [ CD ]
Line_8 $$ final boolean expanded = myCurrentWidth > 0 && dressDescription(editor)-->Line_100 $$ if (!expanded) [ FD ]
Line_54 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_59 $$ if (e.getEventType() == HyperlinkEvent.EventType.EXITED) [ FD ]
Line_11 $$ final JComponent editorComponent = editor.getComponent()-->Line_14 $$ final JLayeredPane layeredPane = editorComponent.getRootPane().getLayeredPane()[ FD ]
Line_15 $$ final JEditorPane pane = IdeTooltipManager.initPane(new Html(myText).setKeepFont(true), hintHint, layeredPane)-->Line_34 $$ onHide(pane)[ FD ]
Line_10 $$ final JComponent contentComponent = editor.getContentComponent()-->Line_46 $$ registerCustomShortcutSet(new CustomShortcutSet(KeymapManager.getInstance().getActiveKeymap().getShortcuts(IdeActions.ACTION_SHOW_ERROR_DESCRIPTION)), contentComponent)[ FD ]
Line_63 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) -->Line_75 $$ if (!expanded) [ CD ]
Line_15 $$ final JEditorPane pane = IdeTooltipManager.initPane(new Html(myText).setKeepFont(true), hintHint, layeredPane)-->Line_76 $$ expand(hint, editor, p, pane, alignToRight, group, hintHint)[ FD ]
Line_65 $$ if (url != null) -->Line_67 $$ hint.hide()[ CD ]
Line_54 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_63 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) [ CD ]
Line_10 $$ final JComponent contentComponent = editor.getContentComponent()-->Line_38 $$ action.unregisterCustomShortcutSet(contentComponent)[ FD ]
Line_63 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) -->Line_65 $$ if (url != null) [ CD ]
Line_71 $$ if (description != null && handle(description, editor)) -->Line_72 $$ hint.hide()[ CD ]
Line_10 $$ final JComponent contentComponent = editor.getContentComponent()-->Line_92 $$ MouseEvent newMouseEvent = SwingUtilities.convertMouseEvent(e.getComponent(), e, contentComponent)[ FD ]
Line_30 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_105 $$ hintManager.showEditorHint(hint, editor, p, HintManager.HIDE_BY_ANY_KEY | HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_OTHER_HINT | HintManager.HIDE_BY_SCROLLING, 0, false, hintHint)[ FD ]
Line_30 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_34 $$ onHide(pane)[ CD ]
Line_17 $$ if (!hintHint.isAwtTooltip()) -->Line_18 $$ correctLocation(editor, pane, p, alignToRight, expanded, myCurrentWidth)[ CD ]
Line_10 $$ final JComponent contentComponent = editor.getContentComponent()-->Line_94 $$ contentComponent.dispatchEvent(newMouseEvent)[ FD ]
