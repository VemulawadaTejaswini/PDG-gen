Line_2 $$ public void testTimeStampFunctions() -->Line_10 $$ Query q = s.createQuery("select now(), current_timestamp(), localtime(), localtimestamp(), sysdate() from MySQL57TimestampFspFunctionTest$Entity")[ CD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_19 $$ assertTrue(sysdate.getNanos() > 0)[ CD ]
Line_3 $$ Session s = openSession()-->Line_8 $$ s = openSession()[ FD ]
Line_4 $$ Transaction tx = s.beginTransaction()-->Line_6 $$ tx.commit()[ FD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_15 $$ assertEquals(now, oArray[3])[ CD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_3 $$ Session s = openSession()[ CD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction tx = s.beginTransaction()[ FD ]
Line_4 $$ Transaction tx = s.beginTransaction()-->Line_20 $$ tx.commit()[ FD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_16 $$ final Timestamp sysdate = (Timestamp) oArray[4][ CD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_7 $$ s.close()[ CD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_20 $$ tx.commit()[ CD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_14 $$ assertEquals(now, oArray[2])[ CD ]
Line_8 $$ s = openSession()-->Line_21 $$ s.close()[ FD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_12 $$ final Timestamp now = (Timestamp) oArray[0][ CD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_5 $$ s.persist(new Entity())[ CD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_6 $$ tx.commit()[ CD ]
Line_8 $$ s = openSession()-->Line_9 $$ tx = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_10 $$ Query q = s.createQuery("select now(), current_timestamp(), localtime(), localtimestamp(), sysdate() from MySQL57TimestampFspFunctionTest$Entity")[ FD ]
Line_12 $$ final Timestamp now = (Timestamp) oArray[0]-->Line_17 $$ assertTrue(now.compareTo(sysdate) < 0)[ FD ]
Line_9 $$ tx = s.beginTransaction()-->Line_20 $$ tx.commit()[ FD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_8 $$ s = openSession()[ CD ]
Line_16 $$ final Timestamp sysdate = (Timestamp) oArray[4]-->Line_19 $$ assertTrue(sysdate.getNanos() > 0)[ FD ]
Line_12 $$ final Timestamp now = (Timestamp) oArray[0]-->Line_14 $$ assertEquals(now, oArray[2])[ FD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_11 $$ Object[] oArray = (Object[]) q.uniqueResult()[ CD ]
Line_12 $$ final Timestamp now = (Timestamp) oArray[0]-->Line_15 $$ assertEquals(now, oArray[3])[ FD ]
Line_12 $$ final Timestamp now = (Timestamp) oArray[0]-->Line_13 $$ assertEquals(now, oArray[1])[ FD ]
Line_3 $$ Session s = openSession()-->Line_21 $$ s.close()[ FD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_21 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_9 $$ tx = s.beginTransaction()[ FD ]
Line_12 $$ final Timestamp now = (Timestamp) oArray[0]-->Line_18 $$ assertTrue(now.getNanos() > 0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_5 $$ s.persist(new Entity())[ FD ]
Line_10 $$ Query q = s.createQuery("select now(), current_timestamp(), localtime(), localtimestamp(), sysdate() from MySQL57TimestampFspFunctionTest$Entity")-->Line_11 $$ Object[] oArray = (Object[]) q.uniqueResult()[ FD ]
Line_16 $$ final Timestamp sysdate = (Timestamp) oArray[4]-->Line_17 $$ assertTrue(now.compareTo(sysdate) < 0)[ FD ]
Line_4 $$ Transaction tx = s.beginTransaction()-->Line_9 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_9 $$ tx = s.beginTransaction()[ CD ]
Line_8 $$ s = openSession()-->Line_10 $$ Query q = s.createQuery("select now(), current_timestamp(), localtime(), localtimestamp(), sysdate() from MySQL57TimestampFspFunctionTest$Entity")[ FD ]
Line_3 $$ Session s = openSession()-->Line_7 $$ s.close()[ FD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_17 $$ assertTrue(now.compareTo(sysdate) < 0)[ CD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_4 $$ Transaction tx = s.beginTransaction()[ CD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_13 $$ assertEquals(now, oArray[1])[ CD ]
Line_2 $$ public void testTimeStampFunctions() -->Line_18 $$ assertTrue(now.getNanos() > 0)[ CD ]
