Line_5 $$ do -->Line_7 $$ long next = (l + 1) | l[ CD ]
Line_5 $$ do -->Line_9 $$ set = bits.compareAndSet(l, next)[ CD ]
Line_3 $$ boolean set-->Line_5 $$ do [ FD ]
Line_2 $$ private int addThread() -->Line_3 $$ boolean set[ CD ]
Line_2 $$ private int addThread() -->Line_11 $$ return n[ CD ]
Line_2 $$ private int addThread() -->Line_4 $$ int n[ CD ]
Line_5 $$ do -->Line_6 $$ long l = bits.longValue()[ CD ]
Line_3 $$ boolean set-->Line_9 $$ set = bits.compareAndSet(l, next)[ FD ]
Line_7 $$ long next = (l + 1) | l-->Line_9 $$ set = bits.compareAndSet(l, next)[ FD ]
Line_2 $$ private int addThread() -->Line_5 $$ do [ CD ]
Line_4 $$ int n-->Line_8 $$ n = Long.numberOfTrailingZeros(l + 1)[ FD ]
Line_9 $$ set = bits.compareAndSet(l, next)-->Line_5 $$ do [ FD ]
Line_6 $$ long l = bits.longValue()-->Line_9 $$ set = bits.compareAndSet(l, next)[ FD ]
Line_5 $$ do -->Line_8 $$ n = Long.numberOfTrailingZeros(l + 1)[ CD ]
