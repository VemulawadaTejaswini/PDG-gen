Line_3 $$ List<InetAddress> list = new ArrayList()-->Line_8 $$ list.add(address)[ FD ]
Line_3 $$ List<InetAddress> list = new ArrayList()-->Line_16 $$ return list.toArray(new InetAddress[list.size()])[ FD ]
Line_2 $$ static InetAddress[] getGlobalAddresses() throws SocketException -->Line_3 $$ List<InetAddress> list = new ArrayList()[ CD ]
Line_4 $$ for (NetworkInterface intf : getInterfaces()) -->Line_5 $$ if (intf.isUp()) [ FD ]
Line_3 $$ List<InetAddress> list = new ArrayList()-->Line_13 $$ if (list.isEmpty()) [ FD ]
Line_2 $$ static InetAddress[] getGlobalAddresses() throws SocketException -->Line_16 $$ return list.toArray(new InetAddress[list.size()])[ CD ]
Line_2 $$ static InetAddress[] getGlobalAddresses() throws SocketException -->Line_13 $$ if (list.isEmpty()) [ CD ]
Line_4 $$ for (NetworkInterface intf : getInterfaces()) -->Line_6 $$ for (InetAddress address : Collections.list(intf.getInetAddresses())) [ FD ]
Line_6 $$ for (InetAddress address : Collections.list(intf.getInetAddresses())) -->Line_7 $$ if (address.isLoopbackAddress() == false && address.isSiteLocalAddress() == false && address.isLinkLocalAddress() == false) [ FD ]
Line_7 $$ if (address.isLoopbackAddress() == false && address.isSiteLocalAddress() == false && address.isLinkLocalAddress() == false) -->Line_8 $$ list.add(address)[ CD ]
Line_6 $$ for (InetAddress address : Collections.list(intf.getInetAddresses())) -->Line_8 $$ list.add(address)[ FD ]
