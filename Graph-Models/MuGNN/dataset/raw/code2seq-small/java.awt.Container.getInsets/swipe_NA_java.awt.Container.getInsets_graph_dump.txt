Line_31 $$ ActionListener listener = new ActionListener() -->Line_51 $$ int x = (int) ((naturalProgress * r.width))[ CD ]
Line_37 $$ Component currentFocusComponent = IdeFocusManager.getGlobalInstance().getFocusedDescendantFor(parent)-->Line_39 $$ if (currentFocusComponent != null)[ FD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_58 $$ parent.repaint()[ FD ]
Line_8 $$ if (mySwipeFrom == null || mySwipeFrom == mySwipeTo) -->Line_10 $$ if (onDone != null) [ CD ]
Line_17 $$ boolean b = true-->Line_24 $$ isForward = b[ FD ]
Line_16 $$ if (direction == SwipeDirection.AUTO) -->Line_26 $$ isForward = direction == SwipeDirection.FORWARD[ CD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_16 $$ if (direction == SwipeDirection.AUTO) [ FD ]
Line_36 $$ if (timePassed >= mySwipeTime) -->Line_38 $$ show(parent, name)[ CD ]
Line_36 $$ if (timePassed >= mySwipeTime) -->Line_37 $$ Component currentFocusComponent = IdeFocusManager.getGlobalInstance().getFocusedDescendantFor(parent)[ CD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_38 $$ show(parent, name)[ FD ]
Line_36 $$ if (timePassed >= mySwipeTime) -->Line_41 $$ if (onDone != null) [ CD ]
Line_48 $$ Rectangle bounds = new Rectangle(parent.getWidth(), parent.getHeight())-->Line_49 $$ JBInsets.removeFrom(bounds, parent.getInsets())[ FD ]
Line_15 $$ final boolean isForward-->Line_26 $$ isForward = direction == SwipeDirection.FORWARD[ FD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_9 $$ super.show(parent, name)[ FD ]
Line_15 $$ final boolean isForward-->Line_24 $$ isForward = b[ FD ]
Line_31 $$ ActionListener listener = new ActionListener() -->Line_49 $$ JBInsets.removeFrom(bounds, parent.getInsets())[ CD ]
Line_31 $$ ActionListener listener = new ActionListener() -->Line_54 $$ Rectangle r2 = new Rectangle(bounds)[ CD ]
Line_31 $$ ActionListener listener = new ActionListener() -->Line_56 $$ mySwipeTo.setVisible(true)[ CD ]
Line_31 $$ ActionListener listener = new ActionListener() -->Line_58 $$ parent.repaint()[ CD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_42 $$ onDone.run()[ FD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_64 $$ myTimer.addActionListener(listener)[ CD ]
Line_31 $$ ActionListener listener = new ActionListener() -->Line_55 $$ r2.translate(isForward ? r2.width - x : x - r2.width, 0)[ CD ]
Line_31 $$ ActionListener listener = new ActionListener() -->Line_48 $$ Rectangle bounds = new Rectangle(parent.getWidth(), parent.getHeight())[ CD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_10 $$ if (onDone != null) [ FD ]
Line_41 $$ if (onDone != null) -->Line_42 $$ onDone.run()[ CD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_28 $$ final double[] linearProgress = new double[1][ CD ]
Line_31 $$ ActionListener listener = new ActionListener() -->Line_52 $$ r.translate(isForward ? -x : x, 0)[ CD ]
Line_31 $$ ActionListener listener = new ActionListener() -->Line_64 $$ myTimer.addActionListener(listener)[ FD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_4 $$ mySwipeFrom = findVisible(parent)[ CD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_26 $$ isForward = direction == SwipeDirection.FORWARD[ FD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_16 $$ if (direction == SwipeDirection.AUTO) [ CD ]
Line_16 $$ if (direction == SwipeDirection.AUTO) -->Line_24 $$ isForward = b[ CD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_31 $$ ActionListener listener = new ActionListener() [ CD ]
Line_50 $$ Rectangle r = new Rectangle(bounds)-->Line_53 $$ mySwipeFrom.setBounds(r)[ FD ]
Line_20 $$ b = component == mySwipeFrom-->Line_24 $$ isForward = b[ FD ]
Line_31 $$ ActionListener listener = new ActionListener() -->Line_35 $$ long timePassed = System.currentTimeMillis() - startTime[ CD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_37 $$ Component currentFocusComponent = IdeFocusManager.getGlobalInstance().getFocusedDescendantFor(parent)[ FD ]
Line_37 $$ Component currentFocusComponent = IdeFocusManager.getGlobalInstance().getFocusedDescendantFor(parent)-->Line_40 $$ currentFocusComponent.requestFocusInWindow()[ FD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_29 $$ linearProgress[0] = 0[ CD ]
Line_31 $$ ActionListener listener = new ActionListener() -->Line_53 $$ mySwipeFrom.setBounds(r)[ CD ]
Line_54 $$ Rectangle r2 = new Rectangle(bounds)-->Line_55 $$ r2.translate(isForward ? r2.width - x : x - r2.width, 0)[ FD ]
Line_50 $$ Rectangle r = new Rectangle(bounds)-->Line_52 $$ r.translate(isForward ? -x : x, 0)[ FD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_11 $$ onDone.run()[ FD ]
Line_16 $$ if (direction == SwipeDirection.AUTO) -->Line_17 $$ boolean b = true[ CD ]
Line_6 $$ if (mySwipeTo == null)-->Line_7 $$ return[ CD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_30 $$ final long startTime = System.currentTimeMillis()[ CD ]
Line_39 $$ if (currentFocusComponent != null)-->Line_40 $$ currentFocusComponent.requestFocusInWindow()[ CD ]
Line_10 $$ if (onDone != null) -->Line_11 $$ onDone.run()[ CD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_5 $$ mySwipeTo = myMap.get(name)[ CD ]
Line_8 $$ if (mySwipeFrom == null || mySwipeFrom == mySwipeTo) -->Line_9 $$ super.show(parent, name)[ CD ]
Line_31 $$ ActionListener listener = new ActionListener() -->Line_36 $$ if (timePassed >= mySwipeTime) [ CD ]
Line_31 $$ ActionListener listener = new ActionListener() -->Line_46 $$ linearProgress[0] = Math.min(1, Math.max(0, (float) timePassed / mySwipeTime))[ CD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_41 $$ if (onDone != null) [ FD ]
Line_31 $$ ActionListener listener = new ActionListener() -->Line_50 $$ Rectangle r = new Rectangle(bounds)[ CD ]
Line_36 $$ if (timePassed >= mySwipeTime) -->Line_44 $$ return[ CD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_65 $$ myTimer.start()[ CD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_5 $$ mySwipeTo = myMap.get(name)[ FD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_8 $$ if (mySwipeFrom == null || mySwipeFrom == mySwipeTo) [ CD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_48 $$ Rectangle bounds = new Rectangle(parent.getWidth(), parent.getHeight())[ FD ]
Line_18 $$ for (Component component : myMap.values()) -->Line_20 $$ b = component == mySwipeFrom[ FD ]
Line_24 $$ isForward = b-->Line_26 $$ isForward = direction == SwipeDirection.FORWARD[ FD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_15 $$ final boolean isForward[ CD ]
Line_35 $$ long timePassed = System.currentTimeMillis() - startTime-->Line_36 $$ if (timePassed >= mySwipeTime) [ FD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_3 $$ stopSwipeIfNeed()[ CD ]
Line_31 $$ ActionListener listener = new ActionListener() -->Line_57 $$ mySwipeTo.setBounds(r2)[ CD ]
Line_51 $$ int x = (int) ((naturalProgress * r.width))-->Line_52 $$ r.translate(isForward ? -x : x, 0)[ FD ]
Line_54 $$ Rectangle r2 = new Rectangle(bounds)-->Line_57 $$ mySwipeTo.setBounds(r2)[ FD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_6 $$ if (mySwipeTo == null)[ CD ]
Line_19 $$ if (component == mySwipeFrom || component == mySwipeTo) -->Line_20 $$ b = component == mySwipeFrom[ CD ]
Line_31 $$ ActionListener listener = new ActionListener() -->Line_47 $$ double naturalProgress = (1 - Math.cos(Math.PI * linearProgress[0])) / 2[ CD ]
Line_8 $$ if (mySwipeFrom == null || mySwipeFrom == mySwipeTo) -->Line_13 $$ return[ CD ]
Line_36 $$ if (timePassed >= mySwipeTime) -->Line_39 $$ if (currentFocusComponent != null)[ CD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_49 $$ JBInsets.removeFrom(bounds, parent.getInsets())[ FD ]
Line_2 $$ public void swipe(@NotNull final Container parent, @NotNull final String name, @NotNull SwipeDirection direction, @Nullable final Runnable onDone) -->Line_4 $$ mySwipeFrom = findVisible(parent)[ FD ]
Line_17 $$ boolean b = true-->Line_20 $$ b = component == mySwipeFrom[ FD ]
