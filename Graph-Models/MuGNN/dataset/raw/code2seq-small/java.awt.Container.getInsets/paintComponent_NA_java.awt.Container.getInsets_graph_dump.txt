Line_38 $$ if (theTitle != null) -->Line_39 $$ FontMetrics fm = SwingUtilities2.getFontMetrics(rootPane, g)[ CD ]
Line_47 $$ if (leftToRight) -->Line_55 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)[ CD ]
Line_13 $$ Color foreground-->Line_40 $$ g.setColor(foreground)[ FD ]
Line_3 $$ if (getFrame() != null) -->Line_4 $$ setState(getFrame().getExtendedState())[ CD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_10 $$ int width = getWidth()[ CD ]
Line_37 $$ String theTitle = getTitle()-->Line_38 $$ if (theTitle != null) [ FD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_7 $$ Window window = getWindow()[ CD ]
Line_18 $$ foreground = myActiveForeground-->Line_24 $$ foreground = myInactiveForeground[ FD ]
Line_42 $$ Rectangle rect = new Rectangle(0, 0, 0, 0)-->Line_44 $$ rect = myIconifyButton.getBounds()[ FD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_38 $$ if (theTitle != null) [ CD ]
Line_38 $$ if (theTitle != null) -->Line_43 $$ if (myIconifyButton != null && myIconifyButton.getParent() != null) [ CD ]
Line_37 $$ String theTitle = getTitle()-->Line_58 $$ int titleLength = SwingUtilities2.stringWidth(rootPane, fm, theTitle)[ FD ]
Line_39 $$ FontMetrics fm = SwingUtilities2.getFontMetrics(rootPane, g)-->Line_58 $$ int titleLength = SwingUtilities2.stringWidth(rootPane, fm, theTitle)[ FD ]
Line_43 $$ if (myIconifyButton != null && myIconifyButton.getParent() != null) -->Line_44 $$ rect = myIconifyButton.getBounds()[ CD ]
Line_51 $$ titleW = rect.x - xOffset - 4-->Line_55 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)[ FD ]
Line_39 $$ FontMetrics fm = SwingUtilities2.getFontMetrics(rootPane, g)-->Line_52 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)[ FD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_13 $$ Color foreground[ CD ]
Line_6 $$ JRootPane rootPane = getRootPane()-->Line_52 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)[ FD ]
Line_52 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)-->Line_56 $$ xOffset -= SwingUtilities2.stringWidth(rootPane, fm, theTitle)[ FD ]
Line_35 $$ xOffset += leftToRight ? IMAGE_WIDTH + 5 : -IMAGE_WIDTH - 5-->Line_60 $$ xOffset += leftToRight ? titleLength + 5 : -5[ FD ]
Line_11 $$ int height = getHeight()-->Line_28 $$ g.fillRect(0, 0, width, height)[ FD ]
Line_38 $$ if (theTitle != null) -->Line_60 $$ xOffset += leftToRight ? titleLength + 5 : -5[ CD ]
Line_18 $$ foreground = myActiveForeground-->Line_40 $$ g.setColor(foreground)[ FD ]
Line_39 $$ FontMetrics fm = SwingUtilities2.getFontMetrics(rootPane, g)-->Line_41 $$ int yOffset = ((height - fm.getHeight()) / 2) + fm.getAscent()[ FD ]
Line_38 $$ if (theTitle != null) -->Line_41 $$ int yOffset = ((height - fm.getHeight()) / 2) + fm.getAscent()[ CD ]
Line_46 $$ int titleW-->Line_51 $$ titleW = rect.x - xOffset - 4[ FD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_15 $$ if (isSelected) [ CD ]
Line_15 $$ if (isSelected) -->Line_25 $$ darkShadow = myInactiveShadow[ CD ]
Line_12 $$ Color background-->Line_27 $$ g.setColor(background)[ FD ]
Line_56 $$ xOffset -= SwingUtilities2.stringWidth(rootPane, fm, theTitle)-->Line_59 $$ SwingUtilities2.drawString(rootPane, g, theTitle, xOffset, yOffset)[ FD ]
Line_41 $$ int yOffset = ((height - fm.getHeight()) / 2) + fm.getAscent()-->Line_59 $$ SwingUtilities2.drawString(rootPane, g, theTitle, xOffset, yOffset)[ FD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_28 $$ g.fillRect(0, 0, width, height)[ FD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_27 $$ g.setColor(background)[ FD ]
Line_37 $$ String theTitle = getTitle()-->Line_59 $$ SwingUtilities2.drawString(rootPane, g, theTitle, xOffset, yOffset)[ FD ]
Line_6 $$ JRootPane rootPane = getRootPane()-->Line_8 $$ boolean leftToRight = (window == null) ? rootPane.getComponentOrientation().isLeftToRight() : window.getComponentOrientation().isLeftToRight()[ FD ]
Line_46 $$ int titleW-->Line_55 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)[ FD ]
Line_10 $$ int width = getWidth()-->Line_28 $$ g.fillRect(0, 0, width, height)[ FD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_34 $$ if (getWindowDecorationStyle() == JRootPane.FRAME) [ CD ]
Line_47 $$ if (leftToRight) -->Line_52 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)[ CD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_8 $$ boolean leftToRight = (window == null) ? rootPane.getComponentOrientation().isLeftToRight() : window.getComponentOrientation().isLeftToRight()[ CD ]
Line_7 $$ Window window = getWindow()-->Line_9 $$ boolean isSelected = (window == null) ? true : window.isActive()[ FD ]
Line_38 $$ if (theTitle != null) -->Line_47 $$ if (leftToRight) [ CD ]
Line_47 $$ if (leftToRight) -->Line_48 $$ if (rect.x == 0) [ CD ]
Line_7 $$ Window window = getWindow()-->Line_49 $$ rect.x = window.getWidth() - window.getInsets().right - 2[ FD ]
Line_46 $$ int titleW-->Line_52 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)[ FD ]
Line_54 $$ titleW = xOffset - rect.x - rect.width - 4-->Line_55 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)[ FD ]
Line_55 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)-->Line_58 $$ int titleLength = SwingUtilities2.stringWidth(rootPane, fm, theTitle)[ FD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_28 $$ g.fillRect(0, 0, width, height)[ CD ]
Line_38 $$ if (theTitle != null) -->Line_58 $$ int titleLength = SwingUtilities2.stringWidth(rootPane, fm, theTitle)[ CD ]
Line_34 $$ if (getWindowDecorationStyle() == JRootPane.FRAME) -->Line_35 $$ xOffset += leftToRight ? IMAGE_WIDTH + 5 : -IMAGE_WIDTH - 5[ CD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_59 $$ SwingUtilities2.drawString(rootPane, g, theTitle, xOffset, yOffset)[ FD ]
Line_55 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)-->Line_56 $$ xOffset -= SwingUtilities2.stringWidth(rootPane, fm, theTitle)[ FD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_11 $$ int height = getHeight()[ CD ]
Line_48 $$ if (rect.x == 0) -->Line_49 $$ rect.x = window.getWidth() - window.getInsets().right - 2[ CD ]
Line_51 $$ titleW = rect.x - xOffset - 4-->Line_52 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)[ FD ]
Line_39 $$ FontMetrics fm = SwingUtilities2.getFontMetrics(rootPane, g)-->Line_55 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)[ FD ]
Line_6 $$ JRootPane rootPane = getRootPane()-->Line_59 $$ SwingUtilities2.drawString(rootPane, g, theTitle, xOffset, yOffset)[ FD ]
Line_35 $$ xOffset += leftToRight ? IMAGE_WIDTH + 5 : -IMAGE_WIDTH - 5-->Line_56 $$ xOffset -= SwingUtilities2.stringWidth(rootPane, fm, theTitle)[ FD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_37 $$ String theTitle = getTitle()[ CD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_40 $$ g.setColor(foreground)[ FD ]
Line_37 $$ String theTitle = getTitle()-->Line_52 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)[ FD ]
Line_52 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)-->Line_59 $$ SwingUtilities2.drawString(rootPane, g, theTitle, xOffset, yOffset)[ FD ]
Line_46 $$ int titleW-->Line_54 $$ titleW = xOffset - rect.x - rect.width - 4[ FD ]
Line_38 $$ if (theTitle != null) -->Line_59 $$ SwingUtilities2.drawString(rootPane, g, theTitle, xOffset, yOffset)[ CD ]
Line_38 $$ if (theTitle != null) -->Line_46 $$ int titleW[ CD ]
Line_37 $$ String theTitle = getTitle()-->Line_55 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)[ FD ]
Line_52 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)-->Line_55 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)[ FD ]
Line_35 $$ xOffset += leftToRight ? IMAGE_WIDTH + 5 : -IMAGE_WIDTH - 5-->Line_59 $$ SwingUtilities2.drawString(rootPane, g, theTitle, xOffset, yOffset)[ FD ]
Line_7 $$ Window window = getWindow()-->Line_8 $$ boolean leftToRight = (window == null) ? rootPane.getComponentOrientation().isLeftToRight() : window.getComponentOrientation().isLeftToRight()[ FD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_3 $$ if (getFrame() != null) [ CD ]
Line_47 $$ if (leftToRight) -->Line_56 $$ xOffset -= SwingUtilities2.stringWidth(rootPane, fm, theTitle)[ CD ]
Line_14 $$ Color darkShadow-->Line_25 $$ darkShadow = myInactiveShadow[ FD ]
Line_37 $$ String theTitle = getTitle()-->Line_56 $$ xOffset -= SwingUtilities2.stringWidth(rootPane, fm, theTitle)[ FD ]
Line_6 $$ JRootPane rootPane = getRootPane()-->Line_39 $$ FontMetrics fm = SwingUtilities2.getFontMetrics(rootPane, g)[ FD ]
Line_55 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)-->Line_59 $$ SwingUtilities2.drawString(rootPane, g, theTitle, xOffset, yOffset)[ FD ]
Line_6 $$ JRootPane rootPane = getRootPane()-->Line_55 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)[ FD ]
Line_38 $$ if (theTitle != null) -->Line_42 $$ Rectangle rect = new Rectangle(0, 0, 0, 0)[ CD ]
Line_6 $$ JRootPane rootPane = getRootPane()-->Line_58 $$ int titleLength = SwingUtilities2.stringWidth(rootPane, fm, theTitle)[ FD ]
Line_13 $$ Color foreground-->Line_24 $$ foreground = myInactiveForeground[ FD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_9 $$ boolean isSelected = (window == null) ? true : window.isActive()[ CD ]
Line_38 $$ if (theTitle != null) -->Line_40 $$ g.setColor(foreground)[ CD ]
Line_6 $$ JRootPane rootPane = getRootPane()-->Line_56 $$ xOffset -= SwingUtilities2.stringWidth(rootPane, fm, theTitle)[ FD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_39 $$ FontMetrics fm = SwingUtilities2.getFontMetrics(rootPane, g)[ FD ]
Line_47 $$ if (leftToRight) -->Line_51 $$ titleW = rect.x - xOffset - 4[ CD ]
Line_24 $$ foreground = myInactiveForeground-->Line_40 $$ g.setColor(foreground)[ FD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_14 $$ Color darkShadow[ CD ]
Line_52 $$ theTitle = SwingUtilities2.clipStringIfNecessary(rootPane, fm, theTitle, titleW)-->Line_58 $$ int titleLength = SwingUtilities2.stringWidth(rootPane, fm, theTitle)[ FD ]
Line_15 $$ if (isSelected) -->Line_24 $$ foreground = myInactiveForeground[ CD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_6 $$ JRootPane rootPane = getRootPane()[ CD ]
Line_51 $$ titleW = rect.x - xOffset - 4-->Line_54 $$ titleW = xOffset - rect.x - rect.width - 4[ FD ]
Line_13 $$ Color foreground-->Line_18 $$ foreground = myActiveForeground[ FD ]
Line_15 $$ if (isSelected) -->Line_18 $$ foreground = myActiveForeground[ CD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_27 $$ g.setColor(background)[ CD ]
Line_56 $$ xOffset -= SwingUtilities2.stringWidth(rootPane, fm, theTitle)-->Line_60 $$ xOffset += leftToRight ? titleLength + 5 : -5[ FD ]
Line_2 $$ public void paintComponent(Graphics g) -->Line_12 $$ Color background[ CD ]
Line_47 $$ if (leftToRight) -->Line_54 $$ titleW = xOffset - rect.x - rect.width - 4[ CD ]
Line_39 $$ FontMetrics fm = SwingUtilities2.getFontMetrics(rootPane, g)-->Line_56 $$ xOffset -= SwingUtilities2.stringWidth(rootPane, fm, theTitle)[ FD ]
