Line_8 $$ if (Instant.class.isAssignableFrom(type)) -->Line_9 $$ return (X) instant[ CD ]
Line_11 $$ if (Calendar.class.isAssignableFrom(type)) -->Line_13 $$ return (X) GregorianCalendar.from(instant.atZone(zoneId))[ CD ]
Line_15 $$ if (java.sql.Timestamp.class.isAssignableFrom(type)) -->Line_16 $$ return (X) Timestamp.from(instant)[ CD ]
Line_21 $$ if (java.sql.Time.class.isAssignableFrom(type)) -->Line_22 $$ return (X) java.sql.Time.from(instant)[ CD ]
Line_5 $$ if (instant == null) -->Line_6 $$ return null[ CD ]
Line_11 $$ if (Calendar.class.isAssignableFrom(type)) -->Line_12 $$ final ZoneId zoneId = ZoneId.ofOffset("UTC", ZoneOffset.UTC)[ CD ]
Line_27 $$ if (Long.class.isAssignableFrom(type)) -->Line_28 $$ return (X) Long.valueOf(instant.toEpochMilli())[ CD ]
Line_24 $$ if (java.util.Date.class.isAssignableFrom(type)) -->Line_25 $$ return (X) Date.from(instant)[ CD ]
Line_18 $$ if (java.sql.Date.class.isAssignableFrom(type)) -->Line_19 $$ return (X) java.sql.Date.from(instant)[ CD ]
Line_12 $$ final ZoneId zoneId = ZoneId.ofOffset("UTC", ZoneOffset.UTC)-->Line_13 $$ return (X) GregorianCalendar.from(instant.atZone(zoneId))[ FD ]
