Line_2 $$ public void launchFetchRemote(@NotNull final ForkInfo fork) -->Line_8 $$ if (fork.getFetchTask() != null)[ FD ]
Line_10 $$ final MasterFutureTask<Void> task = new MasterFutureTask<Void>(new Callable<Void>() -->Line_13 $$ return null[ CD ]
Line_10 $$ final MasterFutureTask<Void> task = new MasterFutureTask<Void>(new Callable<Void>() -->Line_19 $$ task.run()[ FD ]
Line_10 $$ final MasterFutureTask<Void> task = new MasterFutureTask<Void>(new Callable<Void>() -->Line_12 $$ doFetchRemote(fork)[ CD ]
Line_2 $$ public void launchFetchRemote(@NotNull final ForkInfo fork) -->Line_5 $$ if (fork.getFetchTask() != null)[ CD ]
Line_2 $$ public void launchFetchRemote(@NotNull final ForkInfo fork) -->Line_3 $$ if (fork.getRemoteName() == null)[ CD ]
Line_2 $$ public void launchFetchRemote(@NotNull final ForkInfo fork) -->Line_16 $$ fork.setFetchTask(task)[ FD ]
Line_2 $$ public void launchFetchRemote(@NotNull final ForkInfo fork) -->Line_5 $$ if (fork.getFetchTask() != null)[ FD ]
Line_5 $$ if (fork.getFetchTask() != null)-->Line_6 $$ return[ CD ]
Line_8 $$ if (fork.getFetchTask() != null)-->Line_9 $$ return[ CD ]
Line_10 $$ final MasterFutureTask<Void> task = new MasterFutureTask<Void>(new Callable<Void>() -->Line_16 $$ fork.setFetchTask(task)[ FD ]
Line_3 $$ if (fork.getRemoteName() == null)-->Line_4 $$ return[ CD ]
Line_17 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_19 $$ task.run()[ CD ]
Line_2 $$ public void launchFetchRemote(@NotNull final ForkInfo fork) -->Line_3 $$ if (fork.getRemoteName() == null)[ FD ]
Line_2 $$ public void launchFetchRemote(@NotNull final ForkInfo fork) -->Line_12 $$ doFetchRemote(fork)[ FD ]
