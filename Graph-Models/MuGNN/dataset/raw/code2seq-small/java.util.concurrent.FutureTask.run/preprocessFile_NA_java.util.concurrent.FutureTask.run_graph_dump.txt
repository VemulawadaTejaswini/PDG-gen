Line_4 $$ final FutureTask<Boolean> currentTask = prepareTask(file, processChangedTextOnly)-->Line_14 $$ currentTask.run()[ FD ]
Line_4 $$ final FutureTask<Boolean> currentTask = prepareTask(file, processChangedTextOnly)-->Line_17 $$ return currentTask.get() && !currentTask.isCancelled()[ FD ]
Line_5 $$ return new FutureTask<Boolean>(new Callable<Boolean>() -->Line_7 $$ if (previousTask != null) [ CD ]
Line_7 $$ if (previousTask != null) -->Line_9 $$ if (!previousTask.get() || previousTask.isCancelled())[ CD ]
Line_9 $$ if (!previousTask.get() || previousTask.isCancelled())-->Line_10 $$ return false[ CD ]
Line_5 $$ return new FutureTask<Boolean>(new Callable<Boolean>() -->Line_12 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() [ CD ]
Line_2 $$ public FutureTask<Boolean> preprocessFile(@NotNull PsiFile file, boolean processChangedTextOnly) throws IncorrectOperationException -->Line_3 $$ final FutureTask<Boolean> previousTask = getPreviousProcessorTask(file, processChangedTextOnly)[ FD ]
Line_3 $$ final FutureTask<Boolean> previousTask = getPreviousProcessorTask(file, processChangedTextOnly)-->Line_7 $$ if (previousTask != null) [ FD ]
Line_2 $$ public FutureTask<Boolean> preprocessFile(@NotNull PsiFile file, boolean processChangedTextOnly) throws IncorrectOperationException -->Line_3 $$ final FutureTask<Boolean> previousTask = getPreviousProcessorTask(file, processChangedTextOnly)[ CD ]
Line_5 $$ return new FutureTask<Boolean>(new Callable<Boolean>() -->Line_17 $$ return currentTask.get() && !currentTask.isCancelled()[ CD ]
Line_12 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_14 $$ currentTask.run()[ CD ]
Line_3 $$ final FutureTask<Boolean> previousTask = getPreviousProcessorTask(file, processChangedTextOnly)-->Line_9 $$ if (!previousTask.get() || previousTask.isCancelled())[ FD ]
Line_2 $$ public FutureTask<Boolean> preprocessFile(@NotNull PsiFile file, boolean processChangedTextOnly) throws IncorrectOperationException -->Line_4 $$ final FutureTask<Boolean> currentTask = prepareTask(file, processChangedTextOnly)[ FD ]
Line_3 $$ final FutureTask<Boolean> previousTask = getPreviousProcessorTask(file, processChangedTextOnly)-->Line_8 $$ previousTask.run()[ FD ]
Line_2 $$ public FutureTask<Boolean> preprocessFile(@NotNull PsiFile file, boolean processChangedTextOnly) throws IncorrectOperationException -->Line_4 $$ final FutureTask<Boolean> currentTask = prepareTask(file, processChangedTextOnly)[ CD ]
Line_2 $$ public FutureTask<Boolean> preprocessFile(@NotNull PsiFile file, boolean processChangedTextOnly) throws IncorrectOperationException -->Line_5 $$ return new FutureTask<Boolean>(new Callable<Boolean>() [ CD ]
Line_7 $$ if (previousTask != null) -->Line_8 $$ previousTask.run()[ CD ]
