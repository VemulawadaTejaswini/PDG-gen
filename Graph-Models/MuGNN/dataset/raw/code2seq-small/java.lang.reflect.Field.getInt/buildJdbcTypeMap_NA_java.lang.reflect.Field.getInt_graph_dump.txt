Line_3 $$ HashMap<Integer, String> map = new HashMap<Integer, String>()-->Line_19 $$ return Collections.unmodifiableMap(map)[ FD ]
Line_10 $$ final int code = field.getInt(null)-->Line_13 $$ LOG.JavaSqlTypesMappedSameCodeMultipleTimes(code, old, field.getName())[ FD ]
Line_2 $$ private static Map<Integer, String> buildJdbcTypeMap() -->Line_3 $$ HashMap<Integer, String> map = new HashMap<Integer, String>()[ CD ]
Line_4 $$ Field[] fields = java.sql.Types.class.getFields()-->Line_5 $$ if (fields == null) [ FD ]
Line_2 $$ private static Map<Integer, String> buildJdbcTypeMap() -->Line_4 $$ Field[] fields = java.sql.Types.class.getFields()[ CD ]
Line_12 $$ if (old != null) -->Line_13 $$ LOG.JavaSqlTypesMappedSameCodeMultipleTimes(code, old, field.getName())[ CD ]
Line_2 $$ private static Map<Integer, String> buildJdbcTypeMap() -->Line_5 $$ if (fields == null) [ CD ]
Line_8 $$ for (Field field : fields) -->Line_16 $$ throw new HibernateException("Unable to access JDBC type mapping [" + field.getName() + "]", e)[ FD ]
Line_2 $$ private static Map<Integer, String> buildJdbcTypeMap() -->Line_19 $$ return Collections.unmodifiableMap(map)[ CD ]
Line_8 $$ for (Field field : fields) -->Line_10 $$ final int code = field.getInt(null)[ FD ]
Line_8 $$ for (Field field : fields) -->Line_11 $$ String old = map.put(code, field.getName())[ FD ]
Line_10 $$ final int code = field.getInt(null)-->Line_11 $$ String old = map.put(code, field.getName())[ FD ]
Line_11 $$ String old = map.put(code, field.getName())-->Line_12 $$ if (old != null) [ FD ]
Line_11 $$ String old = map.put(code, field.getName())-->Line_13 $$ LOG.JavaSqlTypesMappedSameCodeMultipleTimes(code, old, field.getName())[ FD ]
Line_8 $$ for (Field field : fields) -->Line_13 $$ LOG.JavaSqlTypesMappedSameCodeMultipleTimes(code, old, field.getName())[ FD ]
Line_3 $$ HashMap<Integer, String> map = new HashMap<Integer, String>()-->Line_11 $$ String old = map.put(code, field.getName())[ FD ]
