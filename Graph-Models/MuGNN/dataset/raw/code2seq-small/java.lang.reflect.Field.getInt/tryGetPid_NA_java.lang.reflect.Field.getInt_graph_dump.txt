Line_4 $$ Class<? extends Process> clazz = p.getClass()-->Line_5 $$ if (clazz.getName().equals("java.lang.UNIXProcess")) [ FD ]
Line_5 $$ if (clazz.getName().equals("java.lang.UNIXProcess")) -->Line_8 $$ return String.valueOf(f.getInt(p))[ CD ]
Line_5 $$ if (clazz.getName().equals("java.lang.UNIXProcess")) -->Line_11 $$ return null[ CD ]
Line_4 $$ Class<? extends Process> clazz = p.getClass()-->Line_6 $$ Field f = clazz.getDeclaredField("pid")[ FD ]
Line_2 $$ private static String tryGetPid(Process p) -->Line_4 $$ Class<? extends Process> clazz = p.getClass()[ FD ]
Line_5 $$ if (clazz.getName().equals("java.lang.UNIXProcess")) -->Line_6 $$ Field f = clazz.getDeclaredField("pid")[ CD ]
Line_6 $$ Field f = clazz.getDeclaredField("pid")-->Line_8 $$ return String.valueOf(f.getInt(p))[ FD ]
Line_2 $$ private static String tryGetPid(Process p) -->Line_8 $$ return String.valueOf(f.getInt(p))[ FD ]
Line_6 $$ Field f = clazz.getDeclaredField("pid")-->Line_7 $$ f.setAccessible(true)[ FD ]
Line_5 $$ if (clazz.getName().equals("java.lang.UNIXProcess")) -->Line_10 $$ LOG.trace("Unable to determine pid for " + p + " since it is not a UNIXProcess")[ CD ]
Line_5 $$ if (clazz.getName().equals("java.lang.UNIXProcess")) -->Line_7 $$ f.setAccessible(true)[ CD ]
