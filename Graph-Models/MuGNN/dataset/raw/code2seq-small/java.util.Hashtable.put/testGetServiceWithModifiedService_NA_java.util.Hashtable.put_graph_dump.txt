Line_3 $$ ServiceTrackerMap<String, TrackedOne> serviceTrackerMap = createServiceTrackerMap(_bundleContext)-->Line_12 $$ Assert.assertTrue(serviceTrackerMap.containsKey("three"))[ FD ]
Line_2 $$ public void testGetServiceWithModifiedService() -->Line_4 $$ Hashtable<String, Object> properties = new Hashtable()[ CD ]
Line_2 $$ public void testGetServiceWithModifiedService() -->Line_14 $$ serviceRegistration.unregister()[ CD ]
Line_4 $$ Hashtable<String, Object> properties = new Hashtable()-->Line_5 $$ properties.put("target", new String[] [ FD ]
Line_4 $$ Hashtable<String, Object> properties = new Hashtable()-->Line_6 $$ ServiceRegistration<TrackedOne> serviceRegistration = _bundleContext.registerService(TrackedOne.class, new TrackedOne(), properties)[ FD ]
Line_3 $$ ServiceTrackerMap<String, TrackedOne> serviceTrackerMap = createServiceTrackerMap(_bundleContext)-->Line_11 $$ Assert.assertTrue(serviceTrackerMap.containsKey("two"))[ FD ]
Line_2 $$ public void testGetServiceWithModifiedService() -->Line_3 $$ ServiceTrackerMap<String, TrackedOne> serviceTrackerMap = createServiceTrackerMap(_bundleContext)[ CD ]
Line_4 $$ Hashtable<String, Object> properties = new Hashtable()-->Line_10 $$ serviceRegistration.setProperties(properties)[ FD ]
Line_2 $$ public void testGetServiceWithModifiedService() -->Line_8 $$ Assert.assertTrue(serviceTrackerMap.containsKey("two"))[ CD ]
Line_3 $$ ServiceTrackerMap<String, TrackedOne> serviceTrackerMap = createServiceTrackerMap(_bundleContext)-->Line_13 $$ Assert.assertFalse(serviceTrackerMap.containsKey("one"))[ FD ]
Line_2 $$ public void testGetServiceWithModifiedService() -->Line_9 $$ properties.put("target", new String[] [ CD ]
Line_2 $$ public void testGetServiceWithModifiedService() -->Line_6 $$ ServiceRegistration<TrackedOne> serviceRegistration = _bundleContext.registerService(TrackedOne.class, new TrackedOne(), properties)[ CD ]
Line_2 $$ public void testGetServiceWithModifiedService() -->Line_10 $$ serviceRegistration.setProperties(properties)[ CD ]
Line_3 $$ ServiceTrackerMap<String, TrackedOne> serviceTrackerMap = createServiceTrackerMap(_bundleContext)-->Line_8 $$ Assert.assertTrue(serviceTrackerMap.containsKey("two"))[ FD ]
Line_4 $$ Hashtable<String, Object> properties = new Hashtable()-->Line_9 $$ properties.put("target", new String[] [ FD ]
Line_2 $$ public void testGetServiceWithModifiedService() -->Line_15 $$ serviceTrackerMap.close()[ CD ]
Line_3 $$ ServiceTrackerMap<String, TrackedOne> serviceTrackerMap = createServiceTrackerMap(_bundleContext)-->Line_15 $$ serviceTrackerMap.close()[ FD ]
Line_2 $$ public void testGetServiceWithModifiedService() -->Line_12 $$ Assert.assertTrue(serviceTrackerMap.containsKey("three"))[ CD ]
Line_2 $$ public void testGetServiceWithModifiedService() -->Line_5 $$ properties.put("target", new String[] [ CD ]
Line_2 $$ public void testGetServiceWithModifiedService() -->Line_7 $$ Assert.assertTrue(serviceTrackerMap.containsKey("one"))[ CD ]
Line_3 $$ ServiceTrackerMap<String, TrackedOne> serviceTrackerMap = createServiceTrackerMap(_bundleContext)-->Line_7 $$ Assert.assertTrue(serviceTrackerMap.containsKey("one"))[ FD ]
Line_2 $$ public void testGetServiceWithModifiedService() -->Line_13 $$ Assert.assertFalse(serviceTrackerMap.containsKey("one"))[ CD ]
Line_6 $$ ServiceRegistration<TrackedOne> serviceRegistration = _bundleContext.registerService(TrackedOne.class, new TrackedOne(), properties)-->Line_14 $$ serviceRegistration.unregister()[ FD ]
Line_6 $$ ServiceRegistration<TrackedOne> serviceRegistration = _bundleContext.registerService(TrackedOne.class, new TrackedOne(), properties)-->Line_10 $$ serviceRegistration.setProperties(properties)[ FD ]
Line_2 $$ public void testGetServiceWithModifiedService() -->Line_11 $$ Assert.assertTrue(serviceTrackerMap.containsKey("two"))[ CD ]
