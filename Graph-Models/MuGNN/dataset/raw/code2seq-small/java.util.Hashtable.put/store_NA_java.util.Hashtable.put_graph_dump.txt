Line_8 $$ if (sourceCompatibility == JavaVersion.VERSION_1_4) -->Line_12 $$ properties.put("org.eclipse.jdt.core.compiler.problem.assertIdentifier", "error")[ CD ]
Line_2 $$ protected void store(Properties properties) -->Line_3 $$ properties.put("org.eclipse.jdt.core.compiler.compliance", sourceCompatibility.toString())[ FD ]
Line_8 $$ if (sourceCompatibility == JavaVersion.VERSION_1_4) -->Line_10 $$ properties.put("org.eclipse.jdt.core.compiler.problem.enumIdentifier", "warning")[ CD ]
Line_2 $$ protected void store(Properties properties) -->Line_6 $$ properties.put("org.eclipse.jdt.core.compiler.problem.assertIdentifier", "ignore")[ FD ]
Line_2 $$ protected void store(Properties properties) -->Line_10 $$ properties.put("org.eclipse.jdt.core.compiler.problem.enumIdentifier", "warning")[ FD ]
Line_2 $$ protected void store(Properties properties) -->Line_9 $$ properties.put("org.eclipse.jdt.core.compiler.problem.assertIdentifier", "error")[ FD ]
Line_8 $$ if (sourceCompatibility == JavaVersion.VERSION_1_4) -->Line_13 $$ properties.put("org.eclipse.jdt.core.compiler.problem.enumIdentifier", "error")[ CD ]
Line_2 $$ protected void store(Properties properties) -->Line_5 $$ if (sourceCompatibility.compareTo(JavaVersion.VERSION_1_3) <= 0) [ CD ]
Line_2 $$ protected void store(Properties properties) -->Line_4 $$ properties.put("org.eclipse.jdt.core.compiler.source", sourceCompatibility.toString())[ CD ]
Line_2 $$ protected void store(Properties properties) -->Line_15 $$ properties.put("org.eclipse.jdt.core.compiler.codegen.targetPlatform", targetCompatibility.toString())[ FD ]
Line_2 $$ protected void store(Properties properties) -->Line_7 $$ properties.put("org.eclipse.jdt.core.compiler.problem.enumIdentifier", "ignore")[ FD ]
Line_2 $$ protected void store(Properties properties) -->Line_12 $$ properties.put("org.eclipse.jdt.core.compiler.problem.assertIdentifier", "error")[ FD ]
Line_5 $$ if (sourceCompatibility.compareTo(JavaVersion.VERSION_1_3) <= 0) -->Line_6 $$ properties.put("org.eclipse.jdt.core.compiler.problem.assertIdentifier", "ignore")[ CD ]
Line_5 $$ if (sourceCompatibility.compareTo(JavaVersion.VERSION_1_3) <= 0) -->Line_8 $$ if (sourceCompatibility == JavaVersion.VERSION_1_4) [ CD ]
Line_2 $$ protected void store(Properties properties) -->Line_3 $$ properties.put("org.eclipse.jdt.core.compiler.compliance", sourceCompatibility.toString())[ CD ]
Line_8 $$ if (sourceCompatibility == JavaVersion.VERSION_1_4) -->Line_9 $$ properties.put("org.eclipse.jdt.core.compiler.problem.assertIdentifier", "error")[ CD ]
Line_5 $$ if (sourceCompatibility.compareTo(JavaVersion.VERSION_1_3) <= 0) -->Line_7 $$ properties.put("org.eclipse.jdt.core.compiler.problem.enumIdentifier", "ignore")[ CD ]
Line_2 $$ protected void store(Properties properties) -->Line_4 $$ properties.put("org.eclipse.jdt.core.compiler.source", sourceCompatibility.toString())[ FD ]
Line_2 $$ protected void store(Properties properties) -->Line_13 $$ properties.put("org.eclipse.jdt.core.compiler.problem.enumIdentifier", "error")[ FD ]
Line_2 $$ protected void store(Properties properties) -->Line_15 $$ properties.put("org.eclipse.jdt.core.compiler.codegen.targetPlatform", targetCompatibility.toString())[ CD ]
