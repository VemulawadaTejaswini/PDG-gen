Line_2 $$ public BufferedImage getBufferedImage(RenderedImage renderedImage) -->Line_16 $$ renderedImage.copyData(writableRaster)[ FD ]
Line_7 $$ WritableRaster writableRaster = colorModel.createCompatibleWritableRaster(renderedImage.getWidth(), renderedImage.getHeight())-->Line_16 $$ renderedImage.copyData(writableRaster)[ FD ]
Line_2 $$ public BufferedImage getBufferedImage(RenderedImage renderedImage) -->Line_6 $$ ColorModel colorModel = renderedImage.getColorModel()[ FD ]
Line_2 $$ public BufferedImage getBufferedImage(RenderedImage renderedImage) -->Line_10 $$ if (!ArrayUtil.isEmpty(keys)) [ CD ]
Line_3 $$ if (renderedImage instanceof BufferedImage) -->Line_4 $$ return (BufferedImage) renderedImage[ CD ]
Line_2 $$ public BufferedImage getBufferedImage(RenderedImage renderedImage) -->Line_7 $$ WritableRaster writableRaster = colorModel.createCompatibleWritableRaster(renderedImage.getWidth(), renderedImage.getHeight())[ FD ]
Line_2 $$ public BufferedImage getBufferedImage(RenderedImage renderedImage) -->Line_7 $$ WritableRaster writableRaster = colorModel.createCompatibleWritableRaster(renderedImage.getWidth(), renderedImage.getHeight())[ CD ]
Line_6 $$ ColorModel colorModel = renderedImage.getColorModel()-->Line_7 $$ WritableRaster writableRaster = colorModel.createCompatibleWritableRaster(renderedImage.getWidth(), renderedImage.getHeight())[ FD ]
Line_2 $$ public BufferedImage getBufferedImage(RenderedImage renderedImage) -->Line_3 $$ if (renderedImage instanceof BufferedImage) [ FD ]
Line_2 $$ public BufferedImage getBufferedImage(RenderedImage renderedImage) -->Line_12 $$ properties.put(key, renderedImage.getProperty(key))[ FD ]
Line_6 $$ ColorModel colorModel = renderedImage.getColorModel()-->Line_15 $$ BufferedImage bufferedImage = new BufferedImage(colorModel, writableRaster, colorModel.isAlphaPremultiplied(), properties)[ FD ]
Line_2 $$ public BufferedImage getBufferedImage(RenderedImage renderedImage) -->Line_15 $$ BufferedImage bufferedImage = new BufferedImage(colorModel, writableRaster, colorModel.isAlphaPremultiplied(), properties)[ CD ]
Line_2 $$ public BufferedImage getBufferedImage(RenderedImage renderedImage) -->Line_9 $$ String[] keys = renderedImage.getPropertyNames()[ CD ]
Line_2 $$ public BufferedImage getBufferedImage(RenderedImage renderedImage) -->Line_16 $$ renderedImage.copyData(writableRaster)[ CD ]
Line_9 $$ String[] keys = renderedImage.getPropertyNames()-->Line_10 $$ if (!ArrayUtil.isEmpty(keys)) [ FD ]
Line_2 $$ public BufferedImage getBufferedImage(RenderedImage renderedImage) -->Line_8 $$ Hashtable<String, Object> properties = new Hashtable()[ CD ]
Line_2 $$ public BufferedImage getBufferedImage(RenderedImage renderedImage) -->Line_6 $$ ColorModel colorModel = renderedImage.getColorModel()[ CD ]
Line_2 $$ public BufferedImage getBufferedImage(RenderedImage renderedImage) -->Line_17 $$ return bufferedImage[ CD ]
Line_11 $$ for (String key : keys) -->Line_12 $$ properties.put(key, renderedImage.getProperty(key))[ FD ]
Line_2 $$ public BufferedImage getBufferedImage(RenderedImage renderedImage) -->Line_9 $$ String[] keys = renderedImage.getPropertyNames()[ FD ]
Line_2 $$ public BufferedImage getBufferedImage(RenderedImage renderedImage) -->Line_3 $$ if (renderedImage instanceof BufferedImage) [ CD ]
Line_8 $$ Hashtable<String, Object> properties = new Hashtable()-->Line_12 $$ properties.put(key, renderedImage.getProperty(key))[ FD ]
