Line_11 $$ for (String connectionProperty : connectionProperties) -->Line_12 $$ String[] connectionPropertySplit = StringUtil.split(connectionProperty, CharPool.EQUAL)[ FD ]
Line_13 $$ if (connectionPropertySplit.length != 2) -->Line_14 $$ if (_log.isWarnEnabled()) [ CD ]
Line_2 $$ public LdapContext getContext(long companyId, String providerURL, String principal, String credentials) throws Exception -->Line_10 $$ String[] connectionProperties = systemLDAPConfiguration.connectionProperties()[ CD ]
Line_2 $$ public LdapContext getContext(long companyId, String providerURL, String principal, String credentials) throws Exception -->Line_6 $$ environmentProperties.put(Context.PROVIDER_URL, providerURL)[ FD ]
Line_4 $$ Properties environmentProperties = new Properties()-->Line_9 $$ environmentProperties.put(Context.SECURITY_PRINCIPAL, principal)[ FD ]
Line_2 $$ public LdapContext getContext(long companyId, String providerURL, String principal, String credentials) throws Exception -->Line_6 $$ environmentProperties.put(Context.PROVIDER_URL, providerURL)[ CD ]
Line_2 $$ public LdapContext getContext(long companyId, String providerURL, String principal, String credentials) throws Exception -->Line_3 $$ SystemLDAPConfiguration systemLDAPConfiguration = _systemLDAPConfigurationProvider.getConfiguration(companyId)[ FD ]
Line_2 $$ public LdapContext getContext(long companyId, String providerURL, String principal, String credentials) throws Exception -->Line_9 $$ environmentProperties.put(Context.SECURITY_PRINCIPAL, principal)[ CD ]
Line_4 $$ Properties environmentProperties = new Properties()-->Line_8 $$ environmentProperties.put(Context.SECURITY_CREDENTIALS, credentials)[ FD ]
Line_4 $$ Properties environmentProperties = new Properties()-->Line_21 $$ LogUtil.debug(_log, environmentProperties)[ FD ]
Line_4 $$ Properties environmentProperties = new Properties()-->Line_5 $$ environmentProperties.put(Context.INITIAL_CONTEXT_FACTORY, systemLDAPConfiguration.factoryInitial())[ FD ]
Line_14 $$ if (_log.isWarnEnabled()) -->Line_15 $$ _log.warn("Invalid LDAP connection property: " + connectionProperty)[ CD ]
Line_2 $$ public LdapContext getContext(long companyId, String providerURL, String principal, String credentials) throws Exception -->Line_22 $$ LdapContext ldapContext = null[ CD ]
Line_2 $$ public LdapContext getContext(long companyId, String providerURL, String principal, String credentials) throws Exception -->Line_8 $$ environmentProperties.put(Context.SECURITY_CREDENTIALS, credentials)[ FD ]
Line_22 $$ LdapContext ldapContext = null-->Line_24 $$ ldapContext = new InitialLdapContext(environmentProperties, null)[ FD ]
Line_3 $$ SystemLDAPConfiguration systemLDAPConfiguration = _systemLDAPConfigurationProvider.getConfiguration(companyId)-->Line_5 $$ environmentProperties.put(Context.INITIAL_CONTEXT_FACTORY, systemLDAPConfiguration.factoryInitial())[ FD ]
Line_26 $$ if (_log.isWarnEnabled()) -->Line_27 $$ _log.warn("Unable to bind to the LDAP server")[ CD ]
Line_4 $$ Properties environmentProperties = new Properties()-->Line_19 $$ environmentProperties.put(connectionPropertySplit[0], connectionPropertySplit[1])[ FD ]
Line_2 $$ public LdapContext getContext(long companyId, String providerURL, String principal, String credentials) throws Exception -->Line_4 $$ Properties environmentProperties = new Properties()[ CD ]
Line_2 $$ public LdapContext getContext(long companyId, String providerURL, String principal, String credentials) throws Exception -->Line_5 $$ environmentProperties.put(Context.INITIAL_CONTEXT_FACTORY, systemLDAPConfiguration.factoryInitial())[ CD ]
Line_2 $$ public LdapContext getContext(long companyId, String providerURL, String principal, String credentials) throws Exception -->Line_9 $$ environmentProperties.put(Context.SECURITY_PRINCIPAL, principal)[ FD ]
Line_2 $$ public LdapContext getContext(long companyId, String providerURL, String principal, String credentials) throws Exception -->Line_21 $$ LogUtil.debug(_log, environmentProperties)[ CD ]
Line_29 $$ if (_log.isDebugEnabled()) -->Line_30 $$ _log.debug(e, e)[ CD ]
Line_4 $$ Properties environmentProperties = new Properties()-->Line_7 $$ environmentProperties.put(Context.REFERRAL, systemLDAPConfiguration.referral())[ FD ]
Line_2 $$ public LdapContext getContext(long companyId, String providerURL, String principal, String credentials) throws Exception -->Line_8 $$ environmentProperties.put(Context.SECURITY_CREDENTIALS, credentials)[ CD ]
Line_3 $$ SystemLDAPConfiguration systemLDAPConfiguration = _systemLDAPConfigurationProvider.getConfiguration(companyId)-->Line_10 $$ String[] connectionProperties = systemLDAPConfiguration.connectionProperties()[ FD ]
Line_2 $$ public LdapContext getContext(long companyId, String providerURL, String principal, String credentials) throws Exception -->Line_7 $$ environmentProperties.put(Context.REFERRAL, systemLDAPConfiguration.referral())[ CD ]
Line_3 $$ SystemLDAPConfiguration systemLDAPConfiguration = _systemLDAPConfigurationProvider.getConfiguration(companyId)-->Line_7 $$ environmentProperties.put(Context.REFERRAL, systemLDAPConfiguration.referral())[ FD ]
Line_2 $$ public LdapContext getContext(long companyId, String providerURL, String principal, String credentials) throws Exception -->Line_33 $$ return ldapContext[ CD ]
Line_4 $$ Properties environmentProperties = new Properties()-->Line_6 $$ environmentProperties.put(Context.PROVIDER_URL, providerURL)[ FD ]
Line_2 $$ public LdapContext getContext(long companyId, String providerURL, String principal, String credentials) throws Exception -->Line_3 $$ SystemLDAPConfiguration systemLDAPConfiguration = _systemLDAPConfigurationProvider.getConfiguration(companyId)[ CD ]
