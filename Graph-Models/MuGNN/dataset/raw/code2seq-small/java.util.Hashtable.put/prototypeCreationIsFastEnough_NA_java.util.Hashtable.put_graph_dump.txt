Line_2 $$ public void prototypeCreationIsFastEnough() -->Line_3 $$ Assume.group(TestGroup.PERFORMANCE)[ CD ]
Line_2 $$ public void prototypeCreationIsFastEnough() -->Line_13 $$ sw.start("prototype")[ CD ]
Line_17 $$ for (int i = 0; i < 100000; i++) -->Line_20 $$ assertEquals("UK", tb.getCountry())[ CD ]
Line_2 $$ public void prototypeCreationIsFastEnough() -->Line_8 $$ rbd.getConstructorArgumentValues().addGenericArgumentValue("#[ CD ]
Line_6 $$ RootBeanDefinition rbd = new RootBeanDefinition(TestBean.class)-->Line_7 $$ rbd.setScope(RootBeanDefinition.SCOPE_PROTOTYPE)[ FD ]
Line_2 $$ public void prototypeCreationIsFastEnough() -->Line_15 $$ System.getProperties().put("country", "UK")[ CD ]
Line_2 $$ public void prototypeCreationIsFastEnough() -->Line_12 $$ StopWatch sw = new StopWatch()[ CD ]
Line_2 $$ public void prototypeCreationIsFastEnough() -->Line_7 $$ rbd.setScope(RootBeanDefinition.SCOPE_PROTOTYPE)[ CD ]
Line_12 $$ StopWatch sw = new StopWatch()-->Line_13 $$ sw.start("prototype")[ FD ]
Line_6 $$ RootBeanDefinition rbd = new RootBeanDefinition(TestBean.class)-->Line_9 $$ rbd.getPropertyValues().add("country", "#[ FD ]
Line_18 $$ TestBean tb = (TestBean) ac.getBean("test")-->Line_20 $$ assertEquals("UK", tb.getCountry())[ FD ]
Line_6 $$ RootBeanDefinition rbd = new RootBeanDefinition(TestBean.class)-->Line_10 $$ ac.registerBeanDefinition("test", rbd)[ FD ]
Line_2 $$ public void prototypeCreationIsFastEnough() -->Line_11 $$ ac.refresh()[ CD ]
Line_2 $$ public void prototypeCreationIsFastEnough() -->Line_10 $$ ac.registerBeanDefinition("test", rbd)[ CD ]
Line_2 $$ public void prototypeCreationIsFastEnough() -->Line_5 $$ GenericApplicationContext ac = new GenericApplicationContext()[ CD ]
Line_2 $$ public void prototypeCreationIsFastEnough() -->Line_4 $$ Assume.notLogging(factoryLog)[ CD ]
Line_2 $$ public void prototypeCreationIsFastEnough() -->Line_6 $$ RootBeanDefinition rbd = new RootBeanDefinition(TestBean.class)[ CD ]
Line_5 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_11 $$ ac.refresh()[ FD ]
Line_5 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_18 $$ TestBean tb = (TestBean) ac.getBean("test")[ FD ]
Line_12 $$ StopWatch sw = new StopWatch()-->Line_22 $$ sw.stop()[ FD ]
Line_2 $$ public void prototypeCreationIsFastEnough() -->Line_27 $$ assertTrue("Prototype creation took too long: " + sw.getTotalTimeMillis(), sw.getTotalTimeMillis() < 6000)[ CD ]
Line_17 $$ for (int i = 0; i < 100000; i++) -->Line_18 $$ TestBean tb = (TestBean) ac.getBean("test")[ CD ]
Line_5 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_10 $$ ac.registerBeanDefinition("test", rbd)[ FD ]
Line_17 $$ for (int i = 0; i < 100000; i++) -->Line_19 $$ assertEquals("juergen", tb.getName())[ CD ]
Line_18 $$ TestBean tb = (TestBean) ac.getBean("test")-->Line_19 $$ assertEquals("juergen", tb.getName())[ FD ]
Line_2 $$ public void prototypeCreationIsFastEnough() -->Line_9 $$ rbd.getPropertyValues().add("country", "#[ CD ]
Line_6 $$ RootBeanDefinition rbd = new RootBeanDefinition(TestBean.class)-->Line_8 $$ rbd.getConstructorArgumentValues().addGenericArgumentValue("#[ FD ]
Line_12 $$ StopWatch sw = new StopWatch()-->Line_27 $$ assertTrue("Prototype creation took too long: " + sw.getTotalTimeMillis(), sw.getTotalTimeMillis() < 6000)[ FD ]
Line_2 $$ public void prototypeCreationIsFastEnough() -->Line_14 $$ System.getProperties().put("name", "juergen")[ CD ]
