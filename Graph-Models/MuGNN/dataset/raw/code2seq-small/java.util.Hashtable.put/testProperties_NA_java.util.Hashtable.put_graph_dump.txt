Line_5 $$ Properties props = new Properties()-->Line_8 $$ props.put("env", System.getenv(USER_SYS_PROP))[ FD ]
Line_11 $$ Properties p1 = (Properties) o1-->Line_26 $$ Object v1 = p1.get(key)[ FD ]
Line_12 $$ Properties p2 = (Properties) o2-->Line_20 $$ if (!p1.keySet().containsAll(p2.keySet())) [ FD ]
Line_11 $$ Properties p1 = (Properties) o1-->Line_13 $$ System.err.println("[" + p1.size() + "]:" + p1 + "\n[" + p2.size() + "]:" + p2)[ FD ]
Line_27 $$ Object v2 = p2.get(key)-->Line_28 $$ if (!v1.equals(v2)) [ FD ]
Line_9 $$ performTest("Properties", props, new Comparator() -->Line_33 $$ return 0[ CD ]
Line_12 $$ Properties p2 = (Properties) o2-->Line_15 $$ if (p1.size() != p2.size()) [ FD ]
Line_9 $$ performTest("Properties", props, new Comparator() -->Line_20 $$ if (!p1.keySet().containsAll(p2.keySet())) [ CD ]
Line_28 $$ if (!v1.equals(v2)) -->Line_30 $$ return 1[ CD ]
Line_5 $$ Properties props = new Properties()-->Line_9 $$ performTest("Properties", props, new Comparator() [ FD ]
Line_9 $$ performTest("Properties", props, new Comparator() -->Line_24 $$ Set<Object> keys1 = p1.keySet()[ CD ]
Line_9 $$ performTest("Properties", props, new Comparator() -->Line_12 $$ Properties p2 = (Properties) o2[ CD ]
Line_9 $$ performTest("Properties", props, new Comparator() -->Line_14 $$ System.err.println("------- x")[ CD ]
Line_20 $$ if (!p1.keySet().containsAll(p2.keySet())) -->Line_21 $$ System.err.println("------- 2")[ CD ]
Line_20 $$ if (!p1.keySet().containsAll(p2.keySet())) -->Line_22 $$ return 1[ CD ]
Line_26 $$ Object v1 = p1.get(key)-->Line_28 $$ if (!v1.equals(v2)) [ FD ]
Line_15 $$ if (p1.size() != p2.size()) -->Line_16 $$ System.err.println("------- 0")[ CD ]
Line_28 $$ if (!v1.equals(v2)) -->Line_29 $$ System.err.println("------- 3: " + v1 + ":" + v2)[ CD ]
Line_11 $$ Properties p1 = (Properties) o1-->Line_20 $$ if (!p1.keySet().containsAll(p2.keySet())) [ FD ]
Line_15 $$ if (p1.size() != p2.size()) -->Line_17 $$ return 1[ CD ]
Line_5 $$ Properties props = new Properties()-->Line_7 $$ props.put("prop2", "HAHA")[ FD ]
Line_9 $$ performTest("Properties", props, new Comparator() -->Line_11 $$ Properties p1 = (Properties) o1[ CD ]
Line_11 $$ Properties p1 = (Properties) o1-->Line_15 $$ if (p1.size() != p2.size()) [ FD ]
Line_11 $$ Properties p1 = (Properties) o1-->Line_24 $$ Set<Object> keys1 = p1.keySet()[ FD ]
Line_9 $$ performTest("Properties", props, new Comparator() -->Line_13 $$ System.err.println("[" + p1.size() + "]:" + p1 + "\n[" + p2.size() + "]:" + p2)[ CD ]
Line_25 $$ for (Object key : keys1) -->Line_27 $$ Object v2 = p2.get(key)[ FD ]
Line_9 $$ performTest("Properties", props, new Comparator() -->Line_15 $$ if (p1.size() != p2.size()) [ CD ]
Line_12 $$ Properties p2 = (Properties) o2-->Line_27 $$ Object v2 = p2.get(key)[ FD ]
Line_9 $$ performTest("Properties", props, new Comparator() -->Line_19 $$ System.err.println("------- 1")[ CD ]
Line_25 $$ for (Object key : keys1) -->Line_26 $$ Object v1 = p1.get(key)[ FD ]
Line_12 $$ Properties p2 = (Properties) o2-->Line_13 $$ System.err.println("[" + p1.size() + "]:" + p1 + "\n[" + p2.size() + "]:" + p2)[ FD ]
Line_5 $$ Properties props = new Properties()-->Line_6 $$ props.put("prop1", "ugabuga")[ FD ]
