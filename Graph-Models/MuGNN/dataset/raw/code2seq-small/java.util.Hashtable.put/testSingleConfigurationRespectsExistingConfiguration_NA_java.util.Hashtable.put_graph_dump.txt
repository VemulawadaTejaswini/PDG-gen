Line_2 $$ public void testSingleConfigurationRespectsExistingConfiguration() throws Exception -->Line_9 $$ _startExtension("aBundle", new StringSingleNamedConfigurationContent("test.pid", "key=value2"))[ CD ]
Line_12 $$ Dictionary<String, Object> properties = configurations[0].getProperties()-->Line_13 $$ Assert.assertEquals("value", properties.get("key"))[ FD ]
Line_2 $$ public void testSingleConfigurationRespectsExistingConfiguration() throws Exception -->Line_11 $$ Assert.assertEquals(1, configurations.length)[ CD ]
Line_2 $$ public void testSingleConfigurationRespectsExistingConfiguration() throws Exception -->Line_4 $$ configuration.update(new Hashtable<String, Object>() [ CD ]
Line_2 $$ public void testSingleConfigurationRespectsExistingConfiguration() throws Exception -->Line_13 $$ Assert.assertEquals("value", properties.get("key"))[ CD ]
Line_2 $$ public void testSingleConfigurationRespectsExistingConfiguration() throws Exception -->Line_10 $$ Configuration[] configurations = _configurationAdmin.listConfigurations(null)[ CD ]
Line_2 $$ public void testSingleConfigurationRespectsExistingConfiguration() throws Exception -->Line_12 $$ Dictionary<String, Object> properties = configurations[0].getProperties()[ CD ]
Line_3 $$ Configuration configuration = _configurationAdmin.getConfiguration("test.pid", null)-->Line_4 $$ configuration.update(new Hashtable<String, Object>() [ FD ]
Line_2 $$ public void testSingleConfigurationRespectsExistingConfiguration() throws Exception -->Line_3 $$ Configuration configuration = _configurationAdmin.getConfiguration("test.pid", null)[ CD ]
