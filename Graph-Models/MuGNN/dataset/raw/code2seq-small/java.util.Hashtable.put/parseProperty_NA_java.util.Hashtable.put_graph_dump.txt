Line_2 $$ protected Properties parseProperty(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_3 $$ final Set<EJBClientDescriptorXMLAttribute> required = EnumSet.of(EJBClientDescriptorXMLAttribute.NAME, EJBClientDescriptorXMLAttribute.VALUE)[ CD ]
Line_2 $$ protected Properties parseProperty(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_25 $$ requireNoContent(reader)[ CD ]
Line_3 $$ final Set<EJBClientDescriptorXMLAttribute> required = EnumSet.of(EJBClientDescriptorXMLAttribute.NAME, EJBClientDescriptorXMLAttribute.VALUE)-->Line_23 $$ missingAttributes(reader.getLocation(), required)[ FD ]
Line_26 $$ final Properties property = new Properties()-->Line_27 $$ property.put(name, value)[ FD ]
Line_6 $$ String value = null-->Line_27 $$ property.put(name, value)[ FD ]
Line_3 $$ final Set<EJBClientDescriptorXMLAttribute> required = EnumSet.of(EJBClientDescriptorXMLAttribute.NAME, EJBClientDescriptorXMLAttribute.VALUE)-->Line_9 $$ required.remove(attribute)[ FD ]
Line_2 $$ protected Properties parseProperty(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_5 $$ String name = null[ CD ]
Line_2 $$ protected Properties parseProperty(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_19 $$ unexpectedContent(reader)[ FD ]
Line_2 $$ protected Properties parseProperty(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_8 $$ final EJBClientDescriptorXMLAttribute attribute = EJBClientDescriptorXMLAttribute.forName(reader.getAttributeLocalName(i))[ FD ]
Line_3 $$ final Set<EJBClientDescriptorXMLAttribute> required = EnumSet.of(EJBClientDescriptorXMLAttribute.NAME, EJBClientDescriptorXMLAttribute.VALUE)-->Line_22 $$ if (!required.isEmpty()) [ FD ]
Line_2 $$ protected Properties parseProperty(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_7 $$ for (int i = 0; i < count; i++) [ CD ]
Line_2 $$ protected Properties parseProperty(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_23 $$ missingAttributes(reader.getLocation(), required)[ FD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_10 $$ final String val = readResolveValue(reader, i)[ CD ]
Line_2 $$ protected Properties parseProperty(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_4 $$ final int count = reader.getAttributeCount()[ FD ]
Line_10 $$ final String val = readResolveValue(reader, i)-->Line_16 $$ value = val[ FD ]
Line_2 $$ protected Properties parseProperty(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_25 $$ requireNoContent(reader)[ FD ]
Line_2 $$ protected Properties parseProperty(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_28 $$ return property[ CD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_10 $$ final String val = readResolveValue(reader, i)[ FD ]
Line_13 $$ name = val-->Line_27 $$ property.put(name, value)[ FD ]
Line_10 $$ final String val = readResolveValue(reader, i)-->Line_13 $$ name = val[ FD ]
Line_6 $$ String value = null-->Line_16 $$ value = val[ FD ]
Line_2 $$ protected Properties parseProperty(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_27 $$ property.put(name, value)[ CD ]
Line_16 $$ value = val-->Line_27 $$ property.put(name, value)[ FD ]
Line_2 $$ protected Properties parseProperty(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_4 $$ final int count = reader.getAttributeCount()[ CD ]
Line_2 $$ protected Properties parseProperty(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_6 $$ String value = null[ CD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_9 $$ required.remove(attribute)[ CD ]
Line_4 $$ final int count = reader.getAttributeCount()-->Line_7 $$ for (int i = 0; i < count; i++) [ FD ]
Line_22 $$ if (!required.isEmpty()) -->Line_23 $$ missingAttributes(reader.getLocation(), required)[ CD ]
Line_5 $$ String name = null-->Line_27 $$ property.put(name, value)[ FD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_8 $$ final EJBClientDescriptorXMLAttribute attribute = EJBClientDescriptorXMLAttribute.forName(reader.getAttributeLocalName(i))[ FD ]
Line_2 $$ protected Properties parseProperty(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_22 $$ if (!required.isEmpty()) [ CD ]
Line_7 $$ for (int i = 0; i < count; i++) -->Line_8 $$ final EJBClientDescriptorXMLAttribute attribute = EJBClientDescriptorXMLAttribute.forName(reader.getAttributeLocalName(i))[ CD ]
Line_2 $$ protected Properties parseProperty(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_10 $$ final String val = readResolveValue(reader, i)[ FD ]
Line_5 $$ String name = null-->Line_13 $$ name = val[ FD ]
Line_8 $$ final EJBClientDescriptorXMLAttribute attribute = EJBClientDescriptorXMLAttribute.forName(reader.getAttributeLocalName(i))-->Line_9 $$ required.remove(attribute)[ FD ]
Line_2 $$ protected Properties parseProperty(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_26 $$ final Properties property = new Properties()[ CD ]
