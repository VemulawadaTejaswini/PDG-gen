Line_2 $$ public void genericApplicationContext() throws Exception -->Line_29 $$ ac.addBeanFactoryPostProcessor(ppc)[ CD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_71 $$ TestBean tb2 = ac.getBean("tb2", TestBean.class)[ FD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_68 $$ TestBean tb1 = ac.getBean("tb1", TestBean.class)[ FD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_29 $$ ac.addBeanFactoryPostProcessor(ppc)[ FD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_51 $$ ac.registerBeanDefinition("tb3", bd3)[ CD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_40 $$ ac.registerBeanDefinition("tb1", bd1)[ FD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_47 $$ ac.registerBeanDefinition("tb2", bd2)[ FD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_49 $$ bd3.setBeanClass(ValueTestBean.class)[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_45 $$ bd2.getPropertyValues().add("age", "#[ CD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_51 $$ ac.registerBeanDefinition("tb3", bd3)[ FD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_34 $$ ac.registerBeanDefinition("tb0", bd0)[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_39 $$ bd1.getConstructorArgumentValues().addGenericArgumentValue("#[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_57 $$ bd5.setBeanClass(MethodValueTestBean.class)[ CD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_75 $$ ValueTestBean tb3 = ac.getBean("tb3", ValueTestBean.class)[ FD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_90 $$ ConstructorValueTestBean tb4 = ac.getBean("tb4", ConstructorValueTestBean.class)[ FD ]
Line_5 $$ ac.getBeanFactory().registerScope("myScope", new Scope() -->Line_15 $$ if (key.equals("mySpecialAttr")) [ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_31 $$ bd0.setBeanClass(TestBean.class)[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_54 $$ bd4.setScope("myScope")[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_40 $$ ac.registerBeanDefinition("tb1", bd1)[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_43 $$ bd2.setScope("myScope")[ CD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_100 $$ PropertyValueTestBean tb6 = ac.getBean("tb6", PropertyValueTestBean.class)[ FD ]
Line_5 $$ ac.getBeanFactory().registerScope("myScope", new Scope() -->Line_7 $$ return objectFactory.getObject()[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_47 $$ ac.registerBeanDefinition("tb2", bd2)[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_64 $$ System.getProperties().put("country", "UK")[ CD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_55 $$ ac.registerBeanDefinition("tb4", bd4)[ FD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_37 $$ bd1.setScope("myScope")[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_4 $$ AnnotationConfigUtils.registerAnnotationConfigProcessors(ac)[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_58 $$ bd5.setScope("myScope")[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_32 $$ bd0.getPropertyValues().add("name", "myName")[ CD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_4 $$ AnnotationConfigUtils.registerAnnotationConfigProcessors(ac)[ FD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_67 $$ TestBean tb0 = ac.getBean("tb0", TestBean.class)[ FD ]
Line_15 $$ if (key.equals("mySpecialAttr")) -->Line_16 $$ return "42"[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_36 $$ bd1.setBeanClassName("#[ CD ]
Line_5 $$ ac.getBeanFactory().registerScope("myScope", new Scope() -->Line_10 $$ return null[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_61 $$ bd6.setBeanClass(PropertyValueTestBean.class)[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_62 $$ bd6.setScope("myScope")[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_63 $$ ac.registerBeanDefinition("tb6", bd6)[ CD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_95 $$ MethodValueTestBean tb5 = ac.getBean("tb5", MethodValueTestBean.class)[ FD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_59 $$ ac.registerBeanDefinition("tb5", bd5)[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_27 $$ placeholders.setProperty("code", "123")[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_50 $$ bd3.setScope("myScope")[ CD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_63 $$ ac.registerBeanDefinition("tb6", bd6)[ FD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()[ CD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_5 $$ ac.getBeanFactory().registerScope("myScope", new Scope() [ FD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_38 $$ bd1.getConstructorArgumentValues().addGenericArgumentValue("XXX#[ CD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_34 $$ ac.registerBeanDefinition("tb0", bd0)[ FD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_33 $$ bd0.addQualifier(new AutowireCandidateQualifier(Qualifier.class, "original"))[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_5 $$ ac.getBeanFactory().registerScope("myScope", new Scope() [ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_55 $$ ac.registerBeanDefinition("tb4", bd4)[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_44 $$ bd2.getPropertyValues().add("name", "[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_46 $$ bd2.getPropertyValues().add("country", "$[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_53 $$ bd4.setBeanClass(ConstructorValueTestBean.class)[ CD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_59 $$ ac.registerBeanDefinition("tb5", bd5)[ FD ]
Line_15 $$ if (key.equals("mySpecialAttr")) -->Line_18 $$ return null[ CD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_42 $$ bd2.setBeanClassName("#[ CD ]
Line_5 $$ ac.getBeanFactory().registerScope("myScope", new Scope() -->Line_15 $$ if (key.equals("mySpecialAttr")) [ FD ]
Line_5 $$ ac.getBeanFactory().registerScope("myScope", new Scope() -->Line_7 $$ return objectFactory.getObject()[ FD ]
Line_5 $$ ac.getBeanFactory().registerScope("myScope", new Scope() -->Line_22 $$ return null[ CD ]
Line_3 $$ GenericApplicationContext ac = new GenericApplicationContext()-->Line_66 $$ ac.refresh()[ FD ]
Line_2 $$ public void genericApplicationContext() throws Exception -->Line_28 $$ ppc.setProperties(placeholders)[ CD ]
