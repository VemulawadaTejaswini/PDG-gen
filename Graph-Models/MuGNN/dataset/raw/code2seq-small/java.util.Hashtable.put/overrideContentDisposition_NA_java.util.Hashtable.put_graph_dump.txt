Line_2 $$ public void overrideContentDisposition() throws Exception -->Line_6 $$ Map<String, Object> model = getBaseModel()[ CD ]
Line_2 $$ public void overrideContentDisposition() throws Exception -->Line_13 $$ assertEquals("Invalid Content-Disposition header value", headerValue, response.getHeader("Content-Disposition"))[ CD ]
Line_8 $$ String headerValue = "inline; filename=foo.txt"-->Line_13 $$ assertEquals("Invalid Content-Disposition header value", headerValue, response.getHeader("Content-Disposition"))[ FD ]
Line_2 $$ public void overrideContentDisposition() throws Exception -->Line_7 $$ model.put(getDiscriminatorKey(), "csv")[ CD ]
Line_6 $$ Map<String, Object> model = getBaseModel()-->Line_7 $$ model.put(getDiscriminatorKey(), "csv")[ FD ]
Line_8 $$ String headerValue = "inline; filename=foo.txt"-->Line_10 $$ mappings.put("csv", headerValue)[ FD ]
Line_9 $$ Properties mappings = new Properties()-->Line_10 $$ mappings.put("csv", headerValue)[ FD ]
Line_2 $$ public void overrideContentDisposition() throws Exception -->Line_8 $$ String headerValue = "inline; filename=foo.txt"[ CD ]
Line_6 $$ Map<String, Object> model = getBaseModel()-->Line_12 $$ view.render(model, request, response)[ FD ]
Line_2 $$ public void overrideContentDisposition() throws Exception -->Line_4 $$ assumeTrue(canCompileReport)[ CD ]
Line_2 $$ public void overrideContentDisposition() throws Exception -->Line_9 $$ Properties mappings = new Properties()[ CD ]
Line_9 $$ Properties mappings = new Properties()-->Line_11 $$ ((JasperReportsMultiFormatView) view).setContentDispositionMappings(mappings)[ FD ]
Line_2 $$ public void overrideContentDisposition() throws Exception -->Line_12 $$ view.render(model, request, response)[ CD ]
Line_2 $$ public void overrideContentDisposition() throws Exception -->Line_5 $$ AbstractJasperReportsView view = getView(UNCOMPILED_REPORT)[ CD ]
Line_5 $$ AbstractJasperReportsView view = getView(UNCOMPILED_REPORT)-->Line_12 $$ view.render(model, request, response)[ FD ]
Line_2 $$ public void overrideContentDisposition() throws Exception -->Line_3 $$ Assume.group(TestGroup.CUSTOM_COMPILATION)[ CD ]
Line_2 $$ public void overrideContentDisposition() throws Exception -->Line_11 $$ ((JasperReportsMultiFormatView) view).setContentDispositionMappings(mappings)[ CD ]
Line_2 $$ public void overrideContentDisposition() throws Exception -->Line_10 $$ mappings.put("csv", headerValue)[ CD ]
