Line_11 $$ final FlowTracker bean = (FlowTracker) jndiCtx.lookup("ejb:/" + EJB_JAR_NAME + "/" + FlowTrackingBean.class.getSimpleName() + "!" + FlowTracker.class.getName())-->Line_14 $$ final String firstResult = bean.echo(message)[ FD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_21 $$ Assert.assertEquals("Unexpected result invoking on bean when passing context data via EJB client interceptor", expectedResultForSecondInvocation, secondResult)[ CD ]
Line_19 $$ final String expectedResultForSecondInvocation = ContainerInterceptorOne.class.getName() + " " + FlowTrackingBean.class.getName() + " " + secondMessage-->Line_21 $$ Assert.assertEquals("Unexpected result invoking on bean when passing context data via EJB client interceptor", expectedResultForSecondInvocation, secondResult)[ FD ]
Line_6 $$ final SimpleEJBClientInterceptor clientInterceptor = new SimpleEJBClientInterceptor(interceptorData)-->Line_7 $$ ejbClientContext.registerInterceptor(CLIENT_INTERCEPTOR_ORDER, clientInterceptor)[ FD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_20 $$ final String secondResult = bean.echo(secondMessage)[ CD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_9 $$ jndiProps.put(Context.URL_PKG_PREFIXES, "org.jboss.ejb.client.naming")[ CD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_12 $$ final String message = "foo"[ CD ]
Line_4 $$ final Map<String, Object> interceptorData = new HashMap<String, Object>()-->Line_5 $$ interceptorData.put(FlowTrackingBean.CONTEXT_DATA_KEY, ContainerInterceptorOne.class.getName())[ FD ]
Line_11 $$ final FlowTracker bean = (FlowTracker) jndiCtx.lookup("ejb:/" + EJB_JAR_NAME + "/" + FlowTrackingBean.class.getSimpleName() + "!" + FlowTracker.class.getName())-->Line_20 $$ final String secondResult = bean.echo(secondMessage)[ FD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_19 $$ final String expectedResultForSecondInvocation = ContainerInterceptorOne.class.getName() + " " + FlowTrackingBean.class.getName() + " " + secondMessage[ CD ]
Line_4 $$ final Map<String, Object> interceptorData = new HashMap<String, Object>()-->Line_17 $$ interceptorData.put(FlowTrackingBean.CONTEXT_DATA_KEY, NonContainerInterceptor.class.getName())[ FD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_7 $$ ejbClientContext.registerInterceptor(CLIENT_INTERCEPTOR_ORDER, clientInterceptor)[ CD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_10 $$ final Context jndiCtx = new InitialContext(jndiProps)[ CD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_3 $$ final EJBClientContext ejbClientContext = EJBClientContext.requireCurrent()[ CD ]
Line_18 $$ final String secondMessage = "bar"-->Line_20 $$ final String secondResult = bean.echo(secondMessage)[ FD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_11 $$ final FlowTracker bean = (FlowTracker) jndiCtx.lookup("ejb:/" + EJB_JAR_NAME + "/" + FlowTrackingBean.class.getSimpleName() + "!" + FlowTracker.class.getName())[ CD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_13 $$ final String expectedResultForFirstInvocation = NonContainerInterceptor.class.getName() + " " + FlowTrackingBean.class.getName() + " " + message[ CD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_5 $$ interceptorData.put(FlowTrackingBean.CONTEXT_DATA_KEY, ContainerInterceptorOne.class.getName())[ CD ]
Line_4 $$ final Map<String, Object> interceptorData = new HashMap<String, Object>()-->Line_16 $$ interceptorData.clear()[ FD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_8 $$ final Hashtable<String, Object> jndiProps = new Hashtable<String, Object>()[ CD ]
Line_13 $$ final String expectedResultForFirstInvocation = NonContainerInterceptor.class.getName() + " " + FlowTrackingBean.class.getName() + " " + message-->Line_15 $$ Assert.assertEquals("Unexpected result invoking on bean when passing context data via EJB client interceptor", expectedResultForFirstInvocation, firstResult)[ FD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_15 $$ Assert.assertEquals("Unexpected result invoking on bean when passing context data via EJB client interceptor", expectedResultForFirstInvocation, firstResult)[ CD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_16 $$ interceptorData.clear()[ CD ]
Line_3 $$ final EJBClientContext ejbClientContext = EJBClientContext.requireCurrent()-->Line_7 $$ ejbClientContext.registerInterceptor(CLIENT_INTERCEPTOR_ORDER, clientInterceptor)[ FD ]
Line_20 $$ final String secondResult = bean.echo(secondMessage)-->Line_21 $$ Assert.assertEquals("Unexpected result invoking on bean when passing context data via EJB client interceptor", expectedResultForSecondInvocation, secondResult)[ FD ]
Line_14 $$ final String firstResult = bean.echo(message)-->Line_15 $$ Assert.assertEquals("Unexpected result invoking on bean when passing context data via EJB client interceptor", expectedResultForFirstInvocation, firstResult)[ FD ]
Line_10 $$ final Context jndiCtx = new InitialContext(jndiProps)-->Line_11 $$ final FlowTracker bean = (FlowTracker) jndiCtx.lookup("ejb:/" + EJB_JAR_NAME + "/" + FlowTrackingBean.class.getSimpleName() + "!" + FlowTracker.class.getName())[ FD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_18 $$ final String secondMessage = "bar"[ CD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_6 $$ final SimpleEJBClientInterceptor clientInterceptor = new SimpleEJBClientInterceptor(interceptorData)[ CD ]
Line_8 $$ final Hashtable<String, Object> jndiProps = new Hashtable<String, Object>()-->Line_9 $$ jndiProps.put(Context.URL_PKG_PREFIXES, "org.jboss.ejb.client.naming")[ FD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_4 $$ final Map<String, Object> interceptorData = new HashMap<String, Object>()[ CD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_14 $$ final String firstResult = bean.echo(message)[ CD ]
Line_2 $$ public void testDataPassingForContainerInterceptorsOnRemoteView() throws Exception -->Line_17 $$ interceptorData.put(FlowTrackingBean.CONTEXT_DATA_KEY, NonContainerInterceptor.class.getName())[ CD ]
Line_12 $$ final String message = "foo"-->Line_14 $$ final String firstResult = bean.echo(message)[ FD ]
