Line_2 $$ public void testConfigurationMethods() throws Exception -->Line_3 $$ Configuration ac = new Configuration()[ CD ]
Line_3 $$ Configuration ac = new Configuration()-->Line_11 $$ ac.setProperties(p)[ FD ]
Line_14 $$ ServiceRegistry serviceRegistry = null-->Line_17 $$ sf = ac.buildSessionFactory(serviceRegistry)[ FD ]
Line_4 $$ Properties p = new Properties()-->Line_7 $$ p.put("hibernate.connection.url", "jdbc:hsqldb:.")[ FD ]
Line_25 $$ if (sf != null) -->Line_26 $$ sf.close()[ CD ]
Line_2 $$ public void testConfigurationMethods() throws Exception -->Line_13 $$ SessionFactory sf = null[ CD ]
Line_14 $$ ServiceRegistry serviceRegistry = null-->Line_29 $$ ServiceRegistryBuilder.destroy(serviceRegistry)[ FD ]
Line_2 $$ public void testConfigurationMethods() throws Exception -->Line_7 $$ p.put("hibernate.connection.url", "jdbc:hsqldb:.")[ CD ]
Line_13 $$ SessionFactory sf = null-->Line_26 $$ sf.close()[ FD ]
Line_13 $$ SessionFactory sf = null-->Line_25 $$ if (sf != null) [ FD ]
Line_2 $$ public void testConfigurationMethods() throws Exception -->Line_6 $$ p.put("hibernate.connection.driver_class", "org.hsqldb.jdbcDrive")[ CD ]
Line_16 $$ serviceRegistry = ServiceRegistryBuilder.buildServiceRegistry(p)-->Line_29 $$ ServiceRegistryBuilder.destroy(serviceRegistry)[ FD ]
Line_17 $$ sf = ac.buildSessionFactory(serviceRegistry)-->Line_26 $$ sf.close()[ FD ]
Line_2 $$ public void testConfigurationMethods() throws Exception -->Line_14 $$ ServiceRegistry serviceRegistry = null[ CD ]
Line_16 $$ serviceRegistry = ServiceRegistryBuilder.buildServiceRegistry(p)-->Line_28 $$ if (serviceRegistry != null) [ FD ]
Line_13 $$ SessionFactory sf = null-->Line_17 $$ sf = ac.buildSessionFactory(serviceRegistry)[ FD ]
Line_2 $$ public void testConfigurationMethods() throws Exception -->Line_8 $$ p.put("hibernate.connection.username", "sa")[ CD ]
Line_2 $$ public void testConfigurationMethods() throws Exception -->Line_5 $$ p.put(Environment.DIALECT, "org.hibernate.dialect.HSQLDialect")[ CD ]
Line_3 $$ Configuration ac = new Configuration()-->Line_12 $$ ac.addAnnotatedClass(Plane.class)[ FD ]
Line_2 $$ public void testConfigurationMethods() throws Exception -->Line_4 $$ Properties p = new Properties()[ CD ]
Line_2 $$ public void testConfigurationMethods() throws Exception -->Line_11 $$ ac.setProperties(p)[ CD ]
Line_4 $$ Properties p = new Properties()-->Line_9 $$ p.put("hibernate.connection.password", "")[ FD ]
Line_2 $$ public void testConfigurationMethods() throws Exception -->Line_12 $$ ac.addAnnotatedClass(Plane.class)[ CD ]
Line_14 $$ ServiceRegistry serviceRegistry = null-->Line_28 $$ if (serviceRegistry != null) [ FD ]
Line_17 $$ sf = ac.buildSessionFactory(serviceRegistry)-->Line_25 $$ if (sf != null) [ FD ]
Line_2 $$ public void testConfigurationMethods() throws Exception -->Line_9 $$ p.put("hibernate.connection.password", "")[ CD ]
Line_4 $$ Properties p = new Properties()-->Line_8 $$ p.put("hibernate.connection.username", "sa")[ FD ]
Line_4 $$ Properties p = new Properties()-->Line_6 $$ p.put("hibernate.connection.driver_class", "org.hsqldb.jdbcDrive")[ FD ]
Line_16 $$ serviceRegistry = ServiceRegistryBuilder.buildServiceRegistry(p)-->Line_17 $$ sf = ac.buildSessionFactory(serviceRegistry)[ FD ]
Line_4 $$ Properties p = new Properties()-->Line_11 $$ ac.setProperties(p)[ FD ]
Line_28 $$ if (serviceRegistry != null) -->Line_29 $$ ServiceRegistryBuilder.destroy(serviceRegistry)[ CD ]
Line_4 $$ Properties p = new Properties()-->Line_16 $$ serviceRegistry = ServiceRegistryBuilder.buildServiceRegistry(p)[ FD ]
Line_13 $$ SessionFactory sf = null-->Line_19 $$ sf.close()[ FD ]
Line_3 $$ Configuration ac = new Configuration()-->Line_17 $$ sf = ac.buildSessionFactory(serviceRegistry)[ FD ]
Line_4 $$ Properties p = new Properties()-->Line_10 $$ p.put("hibernate.show_sql", "true")[ FD ]
Line_14 $$ ServiceRegistry serviceRegistry = null-->Line_16 $$ serviceRegistry = ServiceRegistryBuilder.buildServiceRegistry(p)[ FD ]
Line_17 $$ sf = ac.buildSessionFactory(serviceRegistry)-->Line_19 $$ sf.close()[ FD ]
Line_2 $$ public void testConfigurationMethods() throws Exception -->Line_10 $$ p.put("hibernate.show_sql", "true")[ CD ]
Line_4 $$ Properties p = new Properties()-->Line_5 $$ p.put(Environment.DIALECT, "org.hibernate.dialect.HSQLDialect")[ FD ]
