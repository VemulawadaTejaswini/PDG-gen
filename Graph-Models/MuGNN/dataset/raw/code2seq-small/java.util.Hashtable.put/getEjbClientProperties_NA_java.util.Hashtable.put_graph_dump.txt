Line_2 $$ private Properties getEjbClientProperties(String node, int port) -->Line_3 $$ Properties props = new Properties()[ CD ]
Line_2 $$ private Properties getEjbClientProperties(String node, int port) -->Line_4 $$ props.put("org.jboss.ejb.client.scoped.context", true)[ CD ]
Line_2 $$ private Properties getEjbClientProperties(String node, int port) -->Line_12 $$ props.put("remote.connection.main.connect.options.org.xnio.Options.SASL_POLICY_NOPLAINTEXT", "true")[ CD ]
Line_3 $$ Properties props = new Properties()-->Line_10 $$ props.put("remote.connection.main.callback.handler.class", CustomCallbackHandler.class.getName())[ FD ]
Line_2 $$ private Properties getEjbClientProperties(String node, int port) -->Line_9 $$ props.put("remote.connection.main.port", Integer.toString(port))[ CD ]
Line_3 $$ Properties props = new Properties()-->Line_13 $$ props.put("remote.connectionprovider.create.options.org.xnio.Options.SSL_ENABLED", "false")[ FD ]
Line_2 $$ private Properties getEjbClientProperties(String node, int port) -->Line_7 $$ props.put("remote.connections", "main")[ CD ]
Line_2 $$ private Properties getEjbClientProperties(String node, int port) -->Line_8 $$ props.put("remote.connection.main.host", node)[ CD ]
Line_2 $$ private Properties getEjbClientProperties(String node, int port) -->Line_5 $$ props.put(Context.URL_PKG_PREFIXES, "org.jboss.ejb.client.naming")[ CD ]
Line_2 $$ private Properties getEjbClientProperties(String node, int port) -->Line_10 $$ props.put("remote.connection.main.callback.handler.class", CustomCallbackHandler.class.getName())[ CD ]
Line_2 $$ private Properties getEjbClientProperties(String node, int port) -->Line_8 $$ props.put("remote.connection.main.host", node)[ FD ]
Line_2 $$ private Properties getEjbClientProperties(String node, int port) -->Line_11 $$ props.put("remote.connection.main.connect.options.org.xnio.Options.SASL_POLICY_NOANONYMOUS", "false")[ CD ]
Line_2 $$ private Properties getEjbClientProperties(String node, int port) -->Line_13 $$ props.put("remote.connectionprovider.create.options.org.xnio.Options.SSL_ENABLED", "false")[ CD ]
Line_3 $$ Properties props = new Properties()-->Line_12 $$ props.put("remote.connection.main.connect.options.org.xnio.Options.SASL_POLICY_NOPLAINTEXT", "true")[ FD ]
Line_3 $$ Properties props = new Properties()-->Line_7 $$ props.put("remote.connections", "main")[ FD ]
Line_2 $$ private Properties getEjbClientProperties(String node, int port) -->Line_14 $$ return props[ CD ]
Line_3 $$ Properties props = new Properties()-->Line_6 $$ props.put("endpoint.name", "client")[ FD ]
Line_2 $$ private Properties getEjbClientProperties(String node, int port) -->Line_9 $$ props.put("remote.connection.main.port", Integer.toString(port))[ FD ]
Line_3 $$ Properties props = new Properties()-->Line_4 $$ props.put("org.jboss.ejb.client.scoped.context", true)[ FD ]
Line_3 $$ Properties props = new Properties()-->Line_5 $$ props.put(Context.URL_PKG_PREFIXES, "org.jboss.ejb.client.naming")[ FD ]
Line_3 $$ Properties props = new Properties()-->Line_8 $$ props.put("remote.connection.main.host", node)[ FD ]
Line_3 $$ Properties props = new Properties()-->Line_9 $$ props.put("remote.connection.main.port", Integer.toString(port))[ FD ]
Line_3 $$ Properties props = new Properties()-->Line_11 $$ props.put("remote.connection.main.connect.options.org.xnio.Options.SASL_POLICY_NOANONYMOUS", "false")[ FD ]
Line_2 $$ private Properties getEjbClientProperties(String node, int port) -->Line_6 $$ props.put("endpoint.name", "client")[ CD ]
