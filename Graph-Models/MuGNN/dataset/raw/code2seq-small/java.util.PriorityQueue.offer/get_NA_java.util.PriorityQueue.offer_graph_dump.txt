Line_5 $$ if (accessExpirationPeriod > 0) -->Line_6 $$ final Entry existing = (Entry) entry[ CD ]
Line_2 $$ public E get(K key) -->Line_3 $$ final E entry = super.get(key)[ CD ]
Line_6 $$ final Entry existing = (Entry) entry-->Line_8 $$ setExpirationTime(existing, accessExpirationPeriod)[ FD ]
Line_3 $$ final E entry = super.get(key)-->Line_4 $$ if (entry != null) [ FD ]
Line_4 $$ if (entry != null) -->Line_5 $$ if (accessExpirationPeriod > 0) [ CD ]
Line_2 $$ public E get(K key) -->Line_12 $$ return entry[ CD ]
Line_5 $$ if (accessExpirationPeriod > 0) -->Line_7 $$ Preconditions.checkState(queue.remove(existing))[ CD ]
Line_5 $$ if (accessExpirationPeriod > 0) -->Line_8 $$ setExpirationTime(existing, accessExpirationPeriod)[ CD ]
Line_2 $$ public E get(K key) -->Line_4 $$ if (entry != null) [ CD ]
Line_2 $$ public E get(K key) -->Line_3 $$ final E entry = super.get(key)[ FD ]
Line_5 $$ if (accessExpirationPeriod > 0) -->Line_9 $$ queue.offer(existing)[ CD ]
Line_6 $$ final Entry existing = (Entry) entry-->Line_9 $$ queue.offer(existing)[ FD ]
Line_6 $$ final Entry existing = (Entry) entry-->Line_7 $$ Preconditions.checkState(queue.remove(existing))[ FD ]
