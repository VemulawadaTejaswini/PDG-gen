Line_2 $$ public E put(final E entry) -->Line_15 $$ return existing[ CD ]
Line_2 $$ public E put(final E entry) -->Line_6 $$ evictExpiredEntries()[ CD ]
Line_2 $$ public E put(final E entry) -->Line_7 $$ final E existing = super.put(entry)[ CD ]
Line_2 $$ public E put(final E entry) -->Line_3 $$ if (!(entry instanceof Entry)) [ CD ]
Line_2 $$ public E put(final E entry) -->Line_14 $$ evictEntries()[ CD ]
Line_2 $$ public E put(final E entry) -->Line_4 $$ throw new HadoopIllegalArgumentException("!(entry instanceof Entry), entry.getClass()=" + entry.getClass())[ FD ]
Line_2 $$ public E put(final E entry) -->Line_12 $$ setExpirationTime(e, creationExpirationPeriod)[ CD ]
Line_11 $$ final Entry e = (Entry) entry-->Line_12 $$ setExpirationTime(e, creationExpirationPeriod)[ FD ]
Line_2 $$ public E put(final E entry) -->Line_7 $$ final E existing = super.put(entry)[ FD ]
Line_2 $$ public E put(final E entry) -->Line_8 $$ if (existing != null) [ CD ]
Line_7 $$ final E existing = super.put(entry)-->Line_8 $$ if (existing != null) [ FD ]
Line_11 $$ final Entry e = (Entry) entry-->Line_13 $$ queue.offer(e)[ FD ]
Line_7 $$ final E existing = super.put(entry)-->Line_9 $$ queue.remove(existing)[ FD ]
Line_2 $$ public E put(final E entry) -->Line_13 $$ queue.offer(e)[ CD ]
Line_8 $$ if (existing != null) -->Line_9 $$ queue.remove(existing)[ CD ]
Line_2 $$ public E put(final E entry) -->Line_11 $$ final Entry e = (Entry) entry[ CD ]
