Line_15 $$ remainingNanos = end - System.nanoTime()-->Line_18 $$ if (remainingNanos < 0) [ FD ]
Line_6 $$ if (!isPossibleStateChange(currentState)) -->Line_7 $$ return maxWait[ CD ]
Line_2 $$ public Duration waitForStateChange(T currentState, Duration maxWait) throws InterruptedException -->Line_3 $$ checkState(!Thread.holdsLock(lock), "Can not wait for state change while holding the lock")[ CD ]
Line_2 $$ public Duration waitForStateChange(T currentState, Duration maxWait) throws InterruptedException -->Line_4 $$ requireNonNull(currentState, "currentState is null")[ CD ]
Line_2 $$ public Duration waitForStateChange(T currentState, Duration maxWait) throws InterruptedException -->Line_13 $$ while (remainingNanos > 0 && isPossibleStateChange(currentState)) [ FD ]
Line_2 $$ public Duration waitForStateChange(T currentState, Duration maxWait) throws InterruptedException -->Line_9 $$ long remainingNanos = maxWait.roundTo(NANOSECONDS)[ CD ]
Line_2 $$ public Duration waitForStateChange(T currentState, Duration maxWait) throws InterruptedException -->Line_9 $$ long remainingNanos = maxWait.roundTo(NANOSECONDS)[ FD ]
Line_2 $$ public Duration waitForStateChange(T currentState, Duration maxWait) throws InterruptedException -->Line_5 $$ requireNonNull(maxWait, "maxWait is null")[ FD ]
Line_2 $$ public Duration waitForStateChange(T currentState, Duration maxWait) throws InterruptedException -->Line_18 $$ if (remainingNanos < 0) [ CD ]
Line_18 $$ if (remainingNanos < 0) -->Line_19 $$ remainingNanos = 0[ CD ]
Line_9 $$ long remainingNanos = maxWait.roundTo(NANOSECONDS)-->Line_15 $$ remainingNanos = end - System.nanoTime()[ FD ]
Line_9 $$ long remainingNanos = maxWait.roundTo(NANOSECONDS)-->Line_18 $$ if (remainingNanos < 0) [ FD ]
Line_9 $$ long remainingNanos = maxWait.roundTo(NANOSECONDS)-->Line_19 $$ remainingNanos = 0[ FD ]
Line_2 $$ public Duration waitForStateChange(T currentState, Duration maxWait) throws InterruptedException -->Line_4 $$ requireNonNull(currentState, "currentState is null")[ FD ]
Line_2 $$ public Duration waitForStateChange(T currentState, Duration maxWait) throws InterruptedException -->Line_6 $$ if (!isPossibleStateChange(currentState)) [ FD ]
Line_2 $$ public Duration waitForStateChange(T currentState, Duration maxWait) throws InterruptedException -->Line_21 $$ return new Duration(remainingNanos, NANOSECONDS)[ CD ]
Line_2 $$ public Duration waitForStateChange(T currentState, Duration maxWait) throws InterruptedException -->Line_5 $$ requireNonNull(maxWait, "maxWait is null")[ CD ]
Line_9 $$ long remainingNanos = maxWait.roundTo(NANOSECONDS)-->Line_14 $$ NANOSECONDS.timedWait(lock, remainingNanos)[ FD ]
Line_13 $$ while (remainingNanos > 0 && isPossibleStateChange(currentState)) -->Line_15 $$ remainingNanos = end - System.nanoTime()[ CD ]
Line_2 $$ public Duration waitForStateChange(T currentState, Duration maxWait) throws InterruptedException -->Line_6 $$ if (!isPossibleStateChange(currentState)) [ CD ]
Line_15 $$ remainingNanos = end - System.nanoTime()-->Line_14 $$ NANOSECONDS.timedWait(lock, remainingNanos)[ FD ]
Line_13 $$ while (remainingNanos > 0 && isPossibleStateChange(currentState)) -->Line_14 $$ NANOSECONDS.timedWait(lock, remainingNanos)[ CD ]
Line_11 $$ long end = start + remainingNanos-->Line_15 $$ remainingNanos = end - System.nanoTime()[ FD ]
Line_15 $$ remainingNanos = end - System.nanoTime()-->Line_19 $$ remainingNanos = 0[ FD ]
Line_2 $$ public Duration waitForStateChange(T currentState, Duration maxWait) throws InterruptedException -->Line_10 $$ long start = System.nanoTime()[ CD ]
Line_2 $$ public Duration waitForStateChange(T currentState, Duration maxWait) throws InterruptedException -->Line_11 $$ long end = start + remainingNanos[ CD ]
