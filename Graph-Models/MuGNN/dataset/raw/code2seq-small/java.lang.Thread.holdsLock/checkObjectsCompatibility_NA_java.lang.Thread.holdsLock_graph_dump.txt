Line_7 $$ if (existingObjectMapper != null) -->Line_8 $$ existingObjectMapper.merge(newObjectMapper, updateAllTypes)[ CD ]
Line_2 $$ private void checkObjectsCompatibility(String type, Collection<ObjectMapper> objectMappers, Collection<FieldMapper> fieldMappers, boolean updateAllTypes) -->Line_4 $$ checkFieldUniqueness(type, objectMappers, fieldMappers)[ FD ]
Line_11 $$ for (FieldMapper fieldMapper : fieldMappers) -->Line_12 $$ if (fullPathObjectMappers.containsKey(fieldMapper.name())) [ FD ]
Line_6 $$ ObjectMapper existingObjectMapper = fullPathObjectMappers.get(newObjectMapper.fullPath())-->Line_8 $$ existingObjectMapper.merge(newObjectMapper, updateAllTypes)[ FD ]
Line_5 $$ for (ObjectMapper newObjectMapper : objectMappers) -->Line_8 $$ existingObjectMapper.merge(newObjectMapper, updateAllTypes)[ FD ]
Line_2 $$ private void checkObjectsCompatibility(String type, Collection<ObjectMapper> objectMappers, Collection<FieldMapper> fieldMappers, boolean updateAllTypes) -->Line_4 $$ checkFieldUniqueness(type, objectMappers, fieldMappers)[ CD ]
Line_2 $$ private void checkObjectsCompatibility(String type, Collection<ObjectMapper> objectMappers, Collection<FieldMapper> fieldMappers, boolean updateAllTypes) -->Line_8 $$ existingObjectMapper.merge(newObjectMapper, updateAllTypes)[ FD ]
Line_6 $$ ObjectMapper existingObjectMapper = fullPathObjectMappers.get(newObjectMapper.fullPath())-->Line_7 $$ if (existingObjectMapper != null) [ FD ]
Line_11 $$ for (FieldMapper fieldMapper : fieldMappers) -->Line_13 $$ throw new IllegalArgumentException("Field [" + fieldMapper.name() + "] is defined as a field in mapping [" + type + "] but this name is already used for an object in other types")[ FD ]
Line_5 $$ for (ObjectMapper newObjectMapper : objectMappers) -->Line_6 $$ ObjectMapper existingObjectMapper = fullPathObjectMappers.get(newObjectMapper.fullPath())[ FD ]
