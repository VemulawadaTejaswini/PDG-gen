Line_2 $$ private void fireStateChanged(T newState, FutureStateChange<T> futureStateChange, List<StateChangeListener<T>> stateChangeListeners) -->Line_8 $$ futureStateChange.complete(newState)[ FD ]
Line_2 $$ private void fireStateChanged(T newState, FutureStateChange<T> futureStateChange, List<StateChangeListener<T>> stateChangeListeners) -->Line_3 $$ checkState(!Thread.holdsLock(lock), "Can not fire state change event while holding the lock")[ CD ]
Line_2 $$ private void fireStateChanged(T newState, FutureStateChange<T> futureStateChange, List<StateChangeListener<T>> stateChangeListeners) -->Line_14 $$ stateChangeListener.stateChanged(newState)[ FD ]
Line_2 $$ private void fireStateChanged(T newState, FutureStateChange<T> futureStateChange, List<StateChangeListener<T>> stateChangeListeners) -->Line_5 $$ executor.execute(() -> [ CD ]
Line_12 $$ for (StateChangeListener<T> stateChangeListener : stateChangeListeners) -->Line_14 $$ stateChangeListener.stateChanged(newState)[ FD ]
Line_2 $$ private void fireStateChanged(T newState, FutureStateChange<T> futureStateChange, List<StateChangeListener<T>> stateChangeListeners) -->Line_4 $$ requireNonNull(newState, "newState is null")[ CD ]
Line_2 $$ private void fireStateChanged(T newState, FutureStateChange<T> futureStateChange, List<StateChangeListener<T>> stateChangeListeners) -->Line_4 $$ requireNonNull(newState, "newState is null")[ FD ]
