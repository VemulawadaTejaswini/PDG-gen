Line_2 $$ public T set(T newState) -->Line_22 $$ fireStateChanged(newState, futureStateChange, stateChangeListeners)[ FD ]
Line_2 $$ public T set(T newState) -->Line_22 $$ fireStateChanged(newState, futureStateChange, stateChangeListeners)[ CD ]
Line_15 $$ futureStateChange = this.futureStateChange.getAndSet(new FutureStateChange())-->Line_22 $$ fireStateChanged(newState, futureStateChange, stateChangeListeners)[ FD ]
Line_2 $$ public T set(T newState) -->Line_9 $$ if (state.equals(newState)) [ FD ]
Line_6 $$ FutureStateChange<T> futureStateChange-->Line_15 $$ futureStateChange = this.futureStateChange.getAndSet(new FutureStateChange())[ FD ]
Line_9 $$ if (state.equals(newState)) -->Line_10 $$ return state[ CD ]
Line_2 $$ public T set(T newState) -->Line_23 $$ return oldState[ CD ]
Line_2 $$ public T set(T newState) -->Line_6 $$ FutureStateChange<T> futureStateChange[ CD ]
Line_2 $$ public T set(T newState) -->Line_12 $$ checkState(!isTerminalState(state), "%s can not transition from %s to %s", name, state, newState)[ FD ]
Line_2 $$ public T set(T newState) -->Line_5 $$ T oldState[ CD ]
Line_5 $$ T oldState-->Line_13 $$ oldState = state[ FD ]
Line_2 $$ public T set(T newState) -->Line_7 $$ ImmutableList<StateChangeListener<T>> stateChangeListeners[ CD ]
Line_6 $$ FutureStateChange<T> futureStateChange-->Line_22 $$ fireStateChanged(newState, futureStateChange, stateChangeListeners)[ FD ]
Line_16 $$ stateChangeListeners = ImmutableList.copyOf(this.stateChangeListeners)-->Line_22 $$ fireStateChanged(newState, futureStateChange, stateChangeListeners)[ FD ]
Line_2 $$ public T set(T newState) -->Line_4 $$ requireNonNull(newState, "newState is null")[ CD ]
Line_2 $$ public T set(T newState) -->Line_4 $$ requireNonNull(newState, "newState is null")[ FD ]
Line_2 $$ public T set(T newState) -->Line_3 $$ checkState(!Thread.holdsLock(lock), "Can not set state while holding the lock")[ CD ]
Line_17 $$ if (isTerminalState(state)) -->Line_18 $$ this.stateChangeListeners.clear()[ CD ]
Line_7 $$ ImmutableList<StateChangeListener<T>> stateChangeListeners-->Line_22 $$ fireStateChanged(newState, futureStateChange, stateChangeListeners)[ FD ]
Line_7 $$ ImmutableList<StateChangeListener<T>> stateChangeListeners-->Line_16 $$ stateChangeListeners = ImmutableList.copyOf(this.stateChangeListeners)[ FD ]
