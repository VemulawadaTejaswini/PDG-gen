Line_5 $$ settings = getSettings(nodeId, seed, settings)-->Line_9 $$ Settings finalSettings = settingsBuilder().put("path.home", baseDir).put(settings).put("name", name).put(DiscoveryService.SETTING_DISCOVERY_SEED, seed).build()[ FD ]
Line_2 $$ private NodeAndClient buildNode(int nodeId, long seed, Settings settings, Version version) -->Line_6 $$ Collection<Class<? extends Plugin>> plugins = getPlugins(seed)[ CD ]
Line_2 $$ private NodeAndClient buildNode(int nodeId, long seed, Settings settings, Version version) -->Line_5 $$ settings = getSettings(nodeId, seed, settings)[ CD ]
Line_2 $$ private NodeAndClient buildNode(int nodeId, long seed, Settings settings, Version version) -->Line_6 $$ Collection<Class<? extends Plugin>> plugins = getPlugins(seed)[ FD ]
Line_2 $$ private NodeAndClient buildNode(int nodeId, long seed, Settings settings, Version version) -->Line_9 $$ Settings finalSettings = settingsBuilder().put("path.home", baseDir).put(settings).put("name", name).put(DiscoveryService.SETTING_DISCOVERY_SEED, seed).build()[ FD ]
Line_2 $$ private NodeAndClient buildNode(int nodeId, long seed, Settings settings, Version version) -->Line_12 $$ return new NodeAndClient(name, node)[ CD ]
Line_2 $$ private NodeAndClient buildNode(int nodeId, long seed, Settings settings, Version version) -->Line_4 $$ ensureOpen()[ CD ]
Line_2 $$ private NodeAndClient buildNode(int nodeId, long seed, Settings settings, Version version) -->Line_7 $$ String name = buildNodeName(nodeId)[ FD ]
Line_7 $$ String name = buildNodeName(nodeId)-->Line_8 $$ assert !nodes.containsKey(name)[ FD ]
Line_2 $$ private NodeAndClient buildNode(int nodeId, long seed, Settings settings, Version version) -->Line_7 $$ String name = buildNodeName(nodeId)[ CD ]
Line_2 $$ private NodeAndClient buildNode(int nodeId, long seed, Settings settings, Version version) -->Line_5 $$ settings = getSettings(nodeId, seed, settings)[ FD ]
Line_2 $$ private NodeAndClient buildNode(int nodeId, long seed, Settings settings, Version version) -->Line_9 $$ Settings finalSettings = settingsBuilder().put("path.home", baseDir).put(settings).put("name", name).put(DiscoveryService.SETTING_DISCOVERY_SEED, seed).build()[ CD ]
Line_7 $$ String name = buildNodeName(nodeId)-->Line_9 $$ Settings finalSettings = settingsBuilder().put("path.home", baseDir).put(settings).put("name", name).put(DiscoveryService.SETTING_DISCOVERY_SEED, seed).build()[ FD ]
Line_2 $$ private NodeAndClient buildNode(int nodeId, long seed, Settings settings, Version version) -->Line_11 $$ MockNode node = new MockNode(finalSettings, version, plugins)[ CD ]
