Line_5 $$ if (enabled && opaque) -->Line_6 $$ setOpaque(false)[ CD ]
Line_2 $$ public boolean isFileColorsEnabled() -->Line_5 $$ if (enabled && opaque) [ CD ]
Line_2 $$ public boolean isFileColorsEnabled() -->Line_4 $$ final boolean opaque = isOpaque()[ CD ]
Line_4 $$ final boolean opaque = isOpaque()-->Line_7 $$ if (!enabled && !opaque) [ FD ]
Line_2 $$ public boolean isFileColorsEnabled() -->Line_3 $$ final boolean enabled = Registry.is("file.colors.in.commit.dialog") && FileColorManager.getInstance(myProject).isEnabled() && FileColorManager.getInstance(myProject).isEnabledForProjectView()[ CD ]
Line_4 $$ final boolean opaque = isOpaque()-->Line_5 $$ if (enabled && opaque) [ FD ]
Line_3 $$ final boolean enabled = Registry.is("file.colors.in.commit.dialog") && FileColorManager.getInstance(myProject).isEnabled() && FileColorManager.getInstance(myProject).isEnabledForProjectView()-->Line_7 $$ if (!enabled && !opaque) [ FD ]
Line_2 $$ public boolean isFileColorsEnabled() -->Line_10 $$ return enabled[ CD ]
Line_7 $$ if (!enabled && !opaque) -->Line_8 $$ setOpaque(true)[ CD ]
Line_5 $$ if (enabled && opaque) -->Line_7 $$ if (!enabled && !opaque) [ CD ]
Line_3 $$ final boolean enabled = Registry.is("file.colors.in.commit.dialog") && FileColorManager.getInstance(myProject).isEnabled() && FileColorManager.getInstance(myProject).isEnabledForProjectView()-->Line_5 $$ if (enabled && opaque) [ FD ]
