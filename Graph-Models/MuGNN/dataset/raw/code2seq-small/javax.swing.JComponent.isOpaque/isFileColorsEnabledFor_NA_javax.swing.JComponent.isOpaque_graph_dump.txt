Line_5 $$ if (enabled && opaque) -->Line_6 $$ tree.setOpaque(false)[ CD ]
Line_2 $$ public static boolean isFileColorsEnabledFor(JTree tree) -->Line_10 $$ return enabled[ CD ]
Line_2 $$ public static boolean isFileColorsEnabledFor(JTree tree) -->Line_4 $$ final boolean opaque = tree.isOpaque()[ CD ]
Line_2 $$ public static boolean isFileColorsEnabledFor(JTree tree) -->Line_3 $$ final boolean enabled = FileColorManagerImpl._isEnabled() && FileColorManagerImpl._isEnabledForProjectView()[ CD ]
Line_2 $$ public static boolean isFileColorsEnabledFor(JTree tree) -->Line_8 $$ tree.setOpaque(true)[ FD ]
Line_5 $$ if (enabled && opaque) -->Line_7 $$ if (!enabled && !opaque) [ CD ]
Line_3 $$ final boolean enabled = FileColorManagerImpl._isEnabled() && FileColorManagerImpl._isEnabledForProjectView()-->Line_7 $$ if (!enabled && !opaque) [ FD ]
Line_3 $$ final boolean enabled = FileColorManagerImpl._isEnabled() && FileColorManagerImpl._isEnabledForProjectView()-->Line_5 $$ if (enabled && opaque) [ FD ]
Line_4 $$ final boolean opaque = tree.isOpaque()-->Line_5 $$ if (enabled && opaque) [ FD ]
Line_7 $$ if (!enabled && !opaque) -->Line_8 $$ tree.setOpaque(true)[ CD ]
Line_2 $$ public static boolean isFileColorsEnabledFor(JTree tree) -->Line_5 $$ if (enabled && opaque) [ CD ]
Line_2 $$ public static boolean isFileColorsEnabledFor(JTree tree) -->Line_4 $$ final boolean opaque = tree.isOpaque()[ FD ]
Line_4 $$ final boolean opaque = tree.isOpaque()-->Line_7 $$ if (!enabled && !opaque) [ FD ]
Line_2 $$ public static boolean isFileColorsEnabledFor(JTree tree) -->Line_6 $$ tree.setOpaque(false)[ FD ]
