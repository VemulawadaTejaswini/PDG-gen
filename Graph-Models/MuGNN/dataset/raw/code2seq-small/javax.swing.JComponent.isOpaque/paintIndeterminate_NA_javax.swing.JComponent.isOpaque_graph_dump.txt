Line_55 $$ if (progressBar.getOrientation() == SwingConstants.HORIZONTAL) -->Line_58 $$ paintString(g, b.left, b.top, barRectWidth, barRectHeight, boxRect.y, boxRect.height)[ CD ]
Line_9 $$ int barRectHeight = progressBar.getHeight() - (b.top + b.bottom)-->Line_56 $$ paintString(g, b.left, b.top, barRectWidth, barRectHeight, boxRect.x, boxRect.width)[ FD ]
Line_26 $$ while (x < Math.max(c.getWidth(), c.getHeight())) -->Line_38 $$ x += getPeriodLength()[ CD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_13 $$ g.setColor(new JBColor(Gray._240, Gray._128))[ CD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_44 $$ if (c.isOpaque()) [ CD ]
Line_6 $$ Graphics2D g = (Graphics2D) g2d-->Line_37 $$ g.fill(area)[ FD ]
Line_38 $$ x += getPeriodLength()-->Line_29 $$ path.moveTo(x, 0)[ FD ]
Line_44 $$ if (c.isOpaque()) -->Line_45 $$ g.fill(area)[ CD ]
Line_27 $$ Path2D.Double path = new Path2D.Double()-->Line_33 $$ path.lineTo(x, 0)[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_53 $$ g.translate(0f, -(c.getHeight() - h) / 2f)[ FD ]
Line_26 $$ while (x < Math.max(c.getWidth(), c.getHeight())) -->Line_36 $$ area.intersect(containingRoundRect)[ CD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_54 $$ if (progressBar.isStringPainted()) [ CD ]
Line_35 $$ final Area area = new Area(path)-->Line_47 $$ area.subtract(new Area(new RoundRectangle2D.Float(0, 0, w, h, R2, R2)))[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_21 $$ g.translate(0f, (c.getHeight() - h) / 2f)[ FD ]
Line_6 $$ Graphics2D g = (Graphics2D) g2d-->Line_17 $$ g.fillRect(0, (c.getHeight() - h) / 2, w, h)[ FD ]
Line_26 $$ while (x < Math.max(c.getWidth(), c.getHeight())) -->Line_29 $$ path.moveTo(x, 0)[ CD ]
Line_25 $$ final Area containingRoundRect = new Area(new RoundRectangle2D.Float(1f, 1f, w - 2f, h - 2f, R, R))-->Line_36 $$ area.intersect(containingRoundRect)[ FD ]
Line_6 $$ Graphics2D g = (Graphics2D) g2d-->Line_50 $$ g.fill(area)[ FD ]
Line_3 $$ if (!(g2d instanceof Graphics2D)) -->Line_4 $$ return[ CD ]
Line_6 $$ Graphics2D g = (Graphics2D) g2d-->Line_13 $$ g.setColor(new JBColor(Gray._240, Gray._128))[ FD ]
Line_35 $$ final Area area = new Area(path)-->Line_36 $$ area.intersect(containingRoundRect)[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_47 $$ area.subtract(new Area(new RoundRectangle2D.Float(0, 0, w, h, R2, R2)))[ CD ]
Line_38 $$ x += getPeriodLength()-->Line_33 $$ path.lineTo(x, 0)[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_24 $$ final float R2 = JBUI.scale(9f)[ CD ]
Line_26 $$ while (x < Math.max(c.getWidth(), c.getHeight())) -->Line_34 $$ path.closePath()[ CD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_16 $$ if (c.isOpaque()) [ CD ]
Line_26 $$ while (x < Math.max(c.getWidth(), c.getHeight())) -->Line_37 $$ g.fill(area)[ CD ]
Line_15 $$ int h = c.getPreferredSize().height-->Line_17 $$ g.fillRect(0, (c.getHeight() - h) / 2, w, h)[ FD ]
Line_6 $$ Graphics2D g = (Graphics2D) g2d-->Line_19 $$ g.setColor(new JBColor(Gray._165, Gray._88))[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_6 $$ Graphics2D g = (Graphics2D) g2d[ CD ]
Line_6 $$ Graphics2D g = (Graphics2D) g2d-->Line_20 $$ final GraphicsConfig config = GraphicsUtil.setupAAPainting(g)[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_43 $$ g.setPaint(Gray._128)[ CD ]
Line_35 $$ final Area area = new Area(path)-->Line_50 $$ g.fill(area)[ FD ]
Line_8 $$ int barRectWidth = progressBar.getWidth() - (b.right + b.left)-->Line_58 $$ paintString(g, b.left, b.top, barRectWidth, barRectHeight, boxRect.y, boxRect.height)[ FD ]
Line_27 $$ Path2D.Double path = new Path2D.Double()-->Line_34 $$ path.closePath()[ FD ]
Line_35 $$ final Area area = new Area(path)-->Line_45 $$ g.fill(area)[ FD ]
Line_26 $$ while (x < Math.max(c.getWidth(), c.getHeight())) -->Line_32 $$ path.lineTo(x - h / 2, h)[ CD ]
Line_26 $$ while (x < Math.max(c.getWidth(), c.getHeight())) -->Line_28 $$ float ww = getPeriodLength() / 2f[ CD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_22 $$ int x = -offset[ CD ]
Line_6 $$ Graphics2D g = (Graphics2D) g2d-->Line_45 $$ g.fill(area)[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_48 $$ g.setPaint(c.getParent().getBackground())[ CD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_61 $$ config.restore()[ CD ]
Line_41 $$ Area area = new Area(new Rectangle2D.Float(0, 0, w, h))-->Line_42 $$ area.subtract(new Area(new RoundRectangle2D.Float(1f, 1f, w - 2f, h - 2f, R, R)))[ FD ]
Line_41 $$ Area area = new Area(new Rectangle2D.Float(0, 0, w, h))-->Line_47 $$ area.subtract(new Area(new RoundRectangle2D.Float(0, 0, w, h, R2, R2)))[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_26 $$ while (x < Math.max(c.getWidth(), c.getHeight())) [ CD ]
Line_55 $$ if (progressBar.getOrientation() == SwingConstants.HORIZONTAL) -->Line_56 $$ paintString(g, b.left, b.top, barRectWidth, barRectHeight, boxRect.x, boxRect.width)[ CD ]
Line_6 $$ Graphics2D g = (Graphics2D) g2d-->Line_56 $$ paintString(g, b.left, b.top, barRectWidth, barRectHeight, boxRect.x, boxRect.width)[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_17 $$ g.fillRect(0, (c.getHeight() - h) / 2, w, h)[ FD ]
Line_26 $$ while (x < Math.max(c.getWidth(), c.getHeight())) -->Line_33 $$ path.lineTo(x, 0)[ CD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_44 $$ if (c.isOpaque()) [ FD ]
Line_54 $$ if (progressBar.isStringPainted()) -->Line_55 $$ if (progressBar.getOrientation() == SwingConstants.HORIZONTAL) [ CD ]
Line_41 $$ Area area = new Area(new Rectangle2D.Float(0, 0, w, h))-->Line_50 $$ g.fill(area)[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_7 $$ Insets b = progressBar.getInsets()[ CD ]
Line_22 $$ int x = -offset-->Line_26 $$ while (x < Math.max(c.getWidth(), c.getHeight())) [ FD ]
Line_8 $$ int barRectWidth = progressBar.getWidth() - (b.right + b.left)-->Line_56 $$ paintString(g, b.left, b.top, barRectWidth, barRectHeight, boxRect.x, boxRect.width)[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_19 $$ g.setColor(new JBColor(Gray._165, Gray._88))[ CD ]
Line_22 $$ int x = -offset-->Line_29 $$ path.moveTo(x, 0)[ FD ]
Line_35 $$ final Area area = new Area(path)-->Line_42 $$ area.subtract(new Area(new RoundRectangle2D.Float(1f, 1f, w - 2f, h - 2f, R, R)))[ FD ]
Line_9 $$ int barRectHeight = progressBar.getHeight() - (b.top + b.bottom)-->Line_58 $$ paintString(g, b.left, b.top, barRectWidth, barRectHeight, boxRect.y, boxRect.height)[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_48 $$ g.setPaint(c.getParent().getBackground())[ FD ]
Line_22 $$ int x = -offset-->Line_38 $$ x += getPeriodLength()[ FD ]
Line_6 $$ Graphics2D g = (Graphics2D) g2d-->Line_43 $$ g.setPaint(Gray._128)[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_25 $$ final Area containingRoundRect = new Area(new RoundRectangle2D.Float(1f, 1f, w - 2f, h - 2f, R, R))[ CD ]
Line_6 $$ Graphics2D g = (Graphics2D) g2d-->Line_48 $$ g.setPaint(c.getParent().getBackground())[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_9 $$ int barRectHeight = progressBar.getHeight() - (b.top + b.bottom)[ CD ]
Line_14 $$ int w = c.getWidth()-->Line_17 $$ g.fillRect(0, (c.getHeight() - h) / 2, w, h)[ FD ]
Line_15 $$ int h = c.getPreferredSize().height-->Line_32 $$ path.lineTo(x - h / 2, h)[ FD ]
Line_38 $$ x += getPeriodLength()-->Line_26 $$ while (x < Math.max(c.getWidth(), c.getHeight())) [ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_49 $$ if (c.isOpaque()) [ CD ]
Line_27 $$ Path2D.Double path = new Path2D.Double()-->Line_29 $$ path.moveTo(x, 0)[ FD ]
Line_6 $$ Graphics2D g = (Graphics2D) g2d-->Line_21 $$ g.translate(0f, (c.getHeight() - h) / 2f)[ FD ]
Line_26 $$ while (x < Math.max(c.getWidth(), c.getHeight())) -->Line_30 $$ path.lineTo(x + ww, 0)[ CD ]
Line_27 $$ Path2D.Double path = new Path2D.Double()-->Line_32 $$ path.lineTo(x - h / 2, h)[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_23 $$ final float R = JBUI.scale(8f)[ CD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_10 $$ if (barRectWidth <= 0 || barRectHeight <= 0) [ CD ]
Line_41 $$ Area area = new Area(new Rectangle2D.Float(0, 0, w, h))-->Line_45 $$ g.fill(area)[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_8 $$ int barRectWidth = progressBar.getWidth() - (b.right + b.left)[ CD ]
Line_26 $$ while (x < Math.max(c.getWidth(), c.getHeight())) -->Line_27 $$ Path2D.Double path = new Path2D.Double()[ CD ]
Line_15 $$ int h = c.getPreferredSize().height-->Line_31 $$ path.lineTo(x + ww - h / 2, h)[ FD ]
Line_35 $$ final Area area = new Area(path)-->Line_37 $$ g.fill(area)[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_15 $$ int h = c.getPreferredSize().height[ FD ]
Line_6 $$ Graphics2D g = (Graphics2D) g2d-->Line_58 $$ paintString(g, b.left, b.top, barRectWidth, barRectHeight, boxRect.y, boxRect.height)[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_15 $$ int h = c.getPreferredSize().height[ CD ]
Line_26 $$ while (x < Math.max(c.getWidth(), c.getHeight())) -->Line_31 $$ path.lineTo(x + ww - h / 2, h)[ CD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_14 $$ int w = c.getWidth()[ FD ]
Line_26 $$ while (x < Math.max(c.getWidth(), c.getHeight())) -->Line_35 $$ final Area area = new Area(path)[ CD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_49 $$ if (c.isOpaque()) [ FD ]
Line_6 $$ Graphics2D g = (Graphics2D) g2d-->Line_53 $$ g.translate(0f, -(c.getHeight() - h) / 2f)[ FD ]
Line_20 $$ final GraphicsConfig config = GraphicsUtil.setupAAPainting(g)-->Line_61 $$ config.restore()[ FD ]
Line_22 $$ int x = -offset-->Line_33 $$ path.lineTo(x, 0)[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_53 $$ g.translate(0f, -(c.getHeight() - h) / 2f)[ CD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_21 $$ g.translate(0f, (c.getHeight() - h) / 2f)[ CD ]
Line_10 $$ if (barRectWidth <= 0 || barRectHeight <= 0) -->Line_11 $$ return[ CD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_3 $$ if (!(g2d instanceof Graphics2D)) [ CD ]
Line_27 $$ Path2D.Double path = new Path2D.Double()-->Line_30 $$ path.lineTo(x + ww, 0)[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_52 $$ g.draw(new RoundRectangle2D.Float(1f, 1f, w - 2f - 1f, h - 2f - 1f, R, R))[ CD ]
Line_49 $$ if (c.isOpaque()) -->Line_50 $$ g.fill(area)[ CD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_26 $$ while (x < Math.max(c.getWidth(), c.getHeight())) [ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_20 $$ final GraphicsConfig config = GraphicsUtil.setupAAPainting(g)[ CD ]
Line_27 $$ Path2D.Double path = new Path2D.Double()-->Line_31 $$ path.lineTo(x + ww - h / 2, h)[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_16 $$ if (c.isOpaque()) [ FD ]
Line_16 $$ if (c.isOpaque()) -->Line_17 $$ g.fillRect(0, (c.getHeight() - h) / 2, w, h)[ CD ]
Line_6 $$ Graphics2D g = (Graphics2D) g2d-->Line_52 $$ g.draw(new RoundRectangle2D.Float(1f, 1f, w - 2f - 1f, h - 2f - 1f, R, R))[ FD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_42 $$ area.subtract(new Area(new RoundRectangle2D.Float(1f, 1f, w - 2f, h - 2f, R, R)))[ CD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_14 $$ int w = c.getWidth()[ CD ]
Line_2 $$ protected void paintIndeterminate(Graphics g2d, JComponent c) -->Line_41 $$ Area area = new Area(new Rectangle2D.Float(0, 0, w, h))[ CD ]
