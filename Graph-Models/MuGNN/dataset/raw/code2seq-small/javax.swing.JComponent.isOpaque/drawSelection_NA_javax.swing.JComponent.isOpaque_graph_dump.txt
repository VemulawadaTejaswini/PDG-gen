Line_3 $$ int y = 0-->Line_15 $$ g.translate(0, y)[ FD ]
Line_2 $$ private static void drawSelection(JTree tree, Graphics g, final int width) -->Line_7 $$ final TreeCellRenderer renderer = tree.getCellRenderer()[ FD ]
Line_2 $$ private static void drawSelection(JTree tree, Graphics g, final int width) -->Line_13 $$ component.setFont(tree.getFont())[ FD ]
Line_11 $$ final Component component = renderer.getTreeCellRendererComponent(tree, value, false, false, false, row, false)-->Line_18 $$ if (component instanceof JComponent) [ FD ]
Line_2 $$ private static void drawSelection(JTree tree, Graphics g, final int width) -->Line_8 $$ final Object value = tree.getPathForRow(row).getLastPathComponent()[ FD ]
Line_2 $$ private static void drawSelection(JTree tree, Graphics g, final int width) -->Line_11 $$ final Component component = renderer.getTreeCellRendererComponent(tree, value, false, false, false, row, false)[ FD ]
Line_11 $$ final Component component = renderer.getTreeCellRendererComponent(tree, value, false, false, false, row, false)-->Line_12 $$ if (component.getFont() == null) [ FD ]
Line_2 $$ private static void drawSelection(JTree tree, Graphics g, final int width) -->Line_16 $$ component.setBounds(0, 0, width, height)[ FD ]
Line_8 $$ final Object value = tree.getPathForRow(row).getLastPathComponent()-->Line_9 $$ if (value == null)[ FD ]
Line_2 $$ private static void drawSelection(JTree tree, Graphics g, final int width) -->Line_5 $$ final int height = tree.getRowHeight()[ FD ]
Line_5 $$ final int height = tree.getRowHeight()-->Line_16 $$ component.setBounds(0, 0, width, height)[ FD ]
Line_28 $$ y += height-->Line_29 $$ g.translate(0, -y)[ FD ]
Line_2 $$ private static void drawSelection(JTree tree, Graphics g, final int width) -->Line_5 $$ final int height = tree.getRowHeight()[ CD ]
Line_3 $$ int y = 0-->Line_28 $$ y += height[ FD ]
Line_25 $$ if (wasOpaque) -->Line_26 $$ ((JComponent) component).setOpaque(true)[ CD ]
Line_5 $$ final int height = tree.getRowHeight()-->Line_28 $$ y += height[ FD ]
Line_8 $$ final Object value = tree.getPathForRow(row).getLastPathComponent()-->Line_11 $$ final Component component = renderer.getTreeCellRendererComponent(tree, value, false, false, false, row, false)[ FD ]
Line_18 $$ if (component instanceof JComponent) -->Line_19 $$ final JComponent j = (JComponent) component[ CD ]
Line_17 $$ boolean wasOpaque = false-->Line_21 $$ wasOpaque = true[ FD ]
Line_2 $$ private static void drawSelection(JTree tree, Graphics g, final int width) -->Line_3 $$ int y = 0[ CD ]
Line_2 $$ private static void drawSelection(JTree tree, Graphics g, final int width) -->Line_4 $$ final int[] rows = tree.getSelectionRows()[ CD ]
Line_3 $$ int y = 0-->Line_29 $$ g.translate(0, -y)[ FD ]
Line_2 $$ private static void drawSelection(JTree tree, Graphics g, final int width) -->Line_15 $$ g.translate(0, y)[ FD ]
Line_6 $$ for (int row : rows) -->Line_11 $$ final Component component = renderer.getTreeCellRendererComponent(tree, value, false, false, false, row, false)[ FD ]
Line_18 $$ if (component instanceof JComponent) -->Line_22 $$ j.setOpaque(false)[ CD ]
Line_19 $$ final JComponent j = (JComponent) component-->Line_22 $$ j.setOpaque(false)[ FD ]
Line_7 $$ final TreeCellRenderer renderer = tree.getCellRenderer()-->Line_11 $$ final Component component = renderer.getTreeCellRendererComponent(tree, value, false, false, false, row, false)[ FD ]
Line_2 $$ private static void drawSelection(JTree tree, Graphics g, final int width) -->Line_29 $$ g.translate(0, -y)[ FD ]
Line_12 $$ if (component.getFont() == null) -->Line_13 $$ component.setFont(tree.getFont())[ CD ]
Line_11 $$ final Component component = renderer.getTreeCellRendererComponent(tree, value, false, false, false, row, false)-->Line_24 $$ component.paint(g)[ FD ]
Line_2 $$ private static void drawSelection(JTree tree, Graphics g, final int width) -->Line_4 $$ final int[] rows = tree.getSelectionRows()[ FD ]
Line_19 $$ final JComponent j = (JComponent) component-->Line_20 $$ if (j.isOpaque())[ FD ]
Line_2 $$ private static void drawSelection(JTree tree, Graphics g, final int width) -->Line_24 $$ component.paint(g)[ FD ]
Line_20 $$ if (j.isOpaque())-->Line_21 $$ wasOpaque = true[ CD ]
Line_6 $$ for (int row : rows) -->Line_8 $$ final Object value = tree.getPathForRow(row).getLastPathComponent()[ FD ]
Line_11 $$ final Component component = renderer.getTreeCellRendererComponent(tree, value, false, false, false, row, false)-->Line_13 $$ component.setFont(tree.getFont())[ FD ]
Line_18 $$ if (component instanceof JComponent) -->Line_20 $$ if (j.isOpaque())[ CD ]
Line_11 $$ final Component component = renderer.getTreeCellRendererComponent(tree, value, false, false, false, row, false)-->Line_16 $$ component.setBounds(0, 0, width, height)[ FD ]
