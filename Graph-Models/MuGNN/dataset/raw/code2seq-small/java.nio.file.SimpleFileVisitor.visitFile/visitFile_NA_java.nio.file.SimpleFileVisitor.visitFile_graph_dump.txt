Line_5 $$ entry = entry.replace(sep, ".").substring(0, entry.length() - 6)-->Line_6 $$ checkClass(clazzes, entry, path)[ FD ]
Line_3 $$ String entry = root.relativize(file).toString()-->Line_6 $$ checkClass(clazzes, entry, path)[ FD ]
Line_4 $$ if (entry.endsWith(".class")) -->Line_5 $$ entry = entry.replace(sep, ".").substring(0, entry.length() - 6)[ CD ]
Line_2 $$ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException -->Line_3 $$ String entry = root.relativize(file).toString()[ FD ]
Line_2 $$ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException -->Line_8 $$ return super.visitFile(file, attrs)[ CD ]
Line_3 $$ String entry = root.relativize(file).toString()-->Line_5 $$ entry = entry.replace(sep, ".").substring(0, entry.length() - 6)[ FD ]
Line_2 $$ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException -->Line_3 $$ String entry = root.relativize(file).toString()[ CD ]
Line_4 $$ if (entry.endsWith(".class")) -->Line_6 $$ checkClass(clazzes, entry, path)[ CD ]
Line_3 $$ String entry = root.relativize(file).toString()-->Line_4 $$ if (entry.endsWith(".class")) [ FD ]
Line_2 $$ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException -->Line_8 $$ return super.visitFile(file, attrs)[ FD ]
Line_2 $$ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException -->Line_4 $$ if (entry.endsWith(".class")) [ CD ]
