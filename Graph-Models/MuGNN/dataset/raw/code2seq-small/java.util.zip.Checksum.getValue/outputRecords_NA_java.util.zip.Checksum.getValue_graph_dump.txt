Line_6 $$ Checksum crc = new PureJavaCrc32()-->Line_20 $$ crc.update(row, 0, row.length)[ FD ]
Line_4 $$ Unsigned16 recordNumber = new Unsigned16(firstRecordNumber)-->Line_11 $$ while (!recordNumber.equals(lastRecordNumber)) [ FD ]
Line_2 $$ public static void outputRecords(OutputStream out, boolean useAscii, Unsigned16 firstRecordNumber, Unsigned16 recordsToGenerate, Unsigned16 checksum) throws IOException -->Line_18 $$ if (checksum != null) [ FD ]
Line_6 $$ Checksum crc = new PureJavaCrc32()-->Line_21 $$ tmp.set(crc.getValue())[ FD ]
Line_5 $$ Unsigned16 lastRecordNumber = new Unsigned16(firstRecordNumber)-->Line_11 $$ while (!recordNumber.equals(lastRecordNumber)) [ FD ]
Line_2 $$ public static void outputRecords(OutputStream out, boolean useAscii, Unsigned16 firstRecordNumber, Unsigned16 recordsToGenerate, Unsigned16 checksum) throws IOException -->Line_3 $$ byte[] row = new byte[100][ CD ]
Line_2 $$ public static void outputRecords(OutputStream out, boolean useAscii, Unsigned16 firstRecordNumber, Unsigned16 recordsToGenerate, Unsigned16 checksum) throws IOException -->Line_8 $$ lastRecordNumber.add(recordsToGenerate)[ FD ]
Line_11 $$ while (!recordNumber.equals(lastRecordNumber)) -->Line_13 $$ if (useAscii) [ CD ]
Line_13 $$ if (useAscii) -->Line_16 $$ generateRecord(row, rand, recordNumber)[ CD ]
Line_3 $$ byte[] row = new byte[100]-->Line_16 $$ generateRecord(row, rand, recordNumber)[ FD ]
Line_2 $$ public static void outputRecords(OutputStream out, boolean useAscii, Unsigned16 firstRecordNumber, Unsigned16 recordsToGenerate, Unsigned16 checksum) throws IOException -->Line_10 $$ Unsigned16 rand = Random16.skipAhead(firstRecordNumber)[ CD ]
Line_6 $$ Checksum crc = new PureJavaCrc32()-->Line_19 $$ crc.reset()[ FD ]
Line_7 $$ Unsigned16 tmp = new Unsigned16()-->Line_21 $$ tmp.set(crc.getValue())[ FD ]
Line_4 $$ Unsigned16 recordNumber = new Unsigned16(firstRecordNumber)-->Line_14 $$ generateAsciiRecord(row, rand, recordNumber)[ FD ]
Line_11 $$ while (!recordNumber.equals(lastRecordNumber)) -->Line_12 $$ Random16.nextRand(rand)[ CD ]
Line_2 $$ public static void outputRecords(OutputStream out, boolean useAscii, Unsigned16 firstRecordNumber, Unsigned16 recordsToGenerate, Unsigned16 checksum) throws IOException -->Line_7 $$ Unsigned16 tmp = new Unsigned16()[ CD ]
Line_2 $$ public static void outputRecords(OutputStream out, boolean useAscii, Unsigned16 firstRecordNumber, Unsigned16 recordsToGenerate, Unsigned16 checksum) throws IOException -->Line_22 $$ checksum.add(tmp)[ FD ]
Line_2 $$ public static void outputRecords(OutputStream out, boolean useAscii, Unsigned16 firstRecordNumber, Unsigned16 recordsToGenerate, Unsigned16 checksum) throws IOException -->Line_25 $$ out.write(row)[ FD ]
Line_2 $$ public static void outputRecords(OutputStream out, boolean useAscii, Unsigned16 firstRecordNumber, Unsigned16 recordsToGenerate, Unsigned16 checksum) throws IOException -->Line_9 $$ Unsigned16 ONE = new Unsigned16(1)[ CD ]
Line_3 $$ byte[] row = new byte[100]-->Line_14 $$ generateAsciiRecord(row, rand, recordNumber)[ FD ]
Line_2 $$ public static void outputRecords(OutputStream out, boolean useAscii, Unsigned16 firstRecordNumber, Unsigned16 recordsToGenerate, Unsigned16 checksum) throws IOException -->Line_5 $$ Unsigned16 lastRecordNumber = new Unsigned16(firstRecordNumber)[ CD ]
Line_13 $$ if (useAscii) -->Line_14 $$ generateAsciiRecord(row, rand, recordNumber)[ CD ]
Line_18 $$ if (checksum != null) -->Line_19 $$ crc.reset()[ CD ]
Line_18 $$ if (checksum != null) -->Line_22 $$ checksum.add(tmp)[ CD ]
Line_18 $$ if (checksum != null) -->Line_20 $$ crc.update(row, 0, row.length)[ CD ]
Line_3 $$ byte[] row = new byte[100]-->Line_25 $$ out.write(row)[ FD ]
Line_7 $$ Unsigned16 tmp = new Unsigned16()-->Line_22 $$ checksum.add(tmp)[ FD ]
Line_4 $$ Unsigned16 recordNumber = new Unsigned16(firstRecordNumber)-->Line_16 $$ generateRecord(row, rand, recordNumber)[ FD ]
Line_2 $$ public static void outputRecords(OutputStream out, boolean useAscii, Unsigned16 firstRecordNumber, Unsigned16 recordsToGenerate, Unsigned16 checksum) throws IOException -->Line_8 $$ lastRecordNumber.add(recordsToGenerate)[ CD ]
Line_11 $$ while (!recordNumber.equals(lastRecordNumber)) -->Line_18 $$ if (checksum != null) [ CD ]
Line_18 $$ if (checksum != null) -->Line_21 $$ tmp.set(crc.getValue())[ CD ]
Line_11 $$ while (!recordNumber.equals(lastRecordNumber)) -->Line_25 $$ out.write(row)[ CD ]
Line_2 $$ public static void outputRecords(OutputStream out, boolean useAscii, Unsigned16 firstRecordNumber, Unsigned16 recordsToGenerate, Unsigned16 checksum) throws IOException -->Line_6 $$ Checksum crc = new PureJavaCrc32()[ CD ]
Line_10 $$ Unsigned16 rand = Random16.skipAhead(firstRecordNumber)-->Line_14 $$ generateAsciiRecord(row, rand, recordNumber)[ FD ]
Line_10 $$ Unsigned16 rand = Random16.skipAhead(firstRecordNumber)-->Line_16 $$ generateRecord(row, rand, recordNumber)[ FD ]
Line_11 $$ while (!recordNumber.equals(lastRecordNumber)) -->Line_24 $$ recordNumber.add(ONE)[ CD ]
Line_2 $$ public static void outputRecords(OutputStream out, boolean useAscii, Unsigned16 firstRecordNumber, Unsigned16 recordsToGenerate, Unsigned16 checksum) throws IOException -->Line_10 $$ Unsigned16 rand = Random16.skipAhead(firstRecordNumber)[ FD ]
Line_3 $$ byte[] row = new byte[100]-->Line_20 $$ crc.update(row, 0, row.length)[ FD ]
Line_2 $$ public static void outputRecords(OutputStream out, boolean useAscii, Unsigned16 firstRecordNumber, Unsigned16 recordsToGenerate, Unsigned16 checksum) throws IOException -->Line_4 $$ Unsigned16 recordNumber = new Unsigned16(firstRecordNumber)[ CD ]
Line_5 $$ Unsigned16 lastRecordNumber = new Unsigned16(firstRecordNumber)-->Line_8 $$ lastRecordNumber.add(recordsToGenerate)[ FD ]
Line_9 $$ Unsigned16 ONE = new Unsigned16(1)-->Line_24 $$ recordNumber.add(ONE)[ FD ]
Line_2 $$ public static void outputRecords(OutputStream out, boolean useAscii, Unsigned16 firstRecordNumber, Unsigned16 recordsToGenerate, Unsigned16 checksum) throws IOException -->Line_11 $$ while (!recordNumber.equals(lastRecordNumber)) [ CD ]
Line_10 $$ Unsigned16 rand = Random16.skipAhead(firstRecordNumber)-->Line_12 $$ Random16.nextRand(rand)[ FD ]
Line_4 $$ Unsigned16 recordNumber = new Unsigned16(firstRecordNumber)-->Line_24 $$ recordNumber.add(ONE)[ FD ]
