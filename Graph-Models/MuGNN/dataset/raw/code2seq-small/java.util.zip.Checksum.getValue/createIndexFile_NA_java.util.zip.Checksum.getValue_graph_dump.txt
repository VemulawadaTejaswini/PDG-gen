Line_2 $$ private static void createIndexFile(File indexFile, Configuration conf) throws IOException -->Line_3 $$ if (indexFile.exists()) [ FD ]
Line_2 $$ private static void createIndexFile(File indexFile, Configuration conf) throws IOException -->Line_9 $$ Checksum crc = new PureJavaCrc32()[ CD ]
Line_2 $$ private static void createIndexFile(File indexFile, Configuration conf) throws IOException -->Line_14 $$ output.writeLong(chk.getChecksum().getValue())[ CD ]
Line_9 $$ Checksum crc = new PureJavaCrc32()-->Line_10 $$ crc.reset()[ FD ]
Line_2 $$ private static void createIndexFile(File indexFile, Configuration conf) throws IOException -->Line_5 $$ indexFile.delete()[ FD ]
Line_3 $$ if (indexFile.exists()) -->Line_5 $$ indexFile.delete()[ CD ]
Line_2 $$ private static void createIndexFile(File indexFile, Configuration conf) throws IOException -->Line_13 $$ chk.write(Arrays.copyOf(msg.getBytes(), MapTask.MAP_OUTPUT_INDEX_RECORD_LENGTH))[ CD ]
Line_11 $$ CheckedOutputStream chk = new CheckedOutputStream(output, crc)-->Line_13 $$ chk.write(Arrays.copyOf(msg.getBytes(), MapTask.MAP_OUTPUT_INDEX_RECORD_LENGTH))[ FD ]
Line_8 $$ FSDataOutputStream output = FileSystem.getLocal(conf).getRaw().append(new Path(indexFile.getAbsolutePath()))-->Line_14 $$ output.writeLong(chk.getChecksum().getValue())[ FD ]
Line_2 $$ private static void createIndexFile(File indexFile, Configuration conf) throws IOException -->Line_15 $$ output.close()[ CD ]
Line_2 $$ private static void createIndexFile(File indexFile, Configuration conf) throws IOException -->Line_7 $$ indexFile.createNewFile()[ FD ]
Line_12 $$ String msg = "Writing new index file. This file will be used only " + "for the testing."-->Line_13 $$ chk.write(Arrays.copyOf(msg.getBytes(), MapTask.MAP_OUTPUT_INDEX_RECORD_LENGTH))[ FD ]
Line_2 $$ private static void createIndexFile(File indexFile, Configuration conf) throws IOException -->Line_3 $$ if (indexFile.exists()) [ CD ]
Line_2 $$ private static void createIndexFile(File indexFile, Configuration conf) throws IOException -->Line_8 $$ FSDataOutputStream output = FileSystem.getLocal(conf).getRaw().append(new Path(indexFile.getAbsolutePath()))[ FD ]
Line_2 $$ private static void createIndexFile(File indexFile, Configuration conf) throws IOException -->Line_10 $$ crc.reset()[ CD ]
Line_2 $$ private static void createIndexFile(File indexFile, Configuration conf) throws IOException -->Line_12 $$ String msg = "Writing new index file. This file will be used only " + "for the testing."[ CD ]
Line_2 $$ private static void createIndexFile(File indexFile, Configuration conf) throws IOException -->Line_11 $$ CheckedOutputStream chk = new CheckedOutputStream(output, crc)[ CD ]
Line_11 $$ CheckedOutputStream chk = new CheckedOutputStream(output, crc)-->Line_14 $$ output.writeLong(chk.getChecksum().getValue())[ FD ]
Line_2 $$ private static void createIndexFile(File indexFile, Configuration conf) throws IOException -->Line_8 $$ FSDataOutputStream output = FileSystem.getLocal(conf).getRaw().append(new Path(indexFile.getAbsolutePath()))[ CD ]
Line_3 $$ if (indexFile.exists()) -->Line_4 $$ System.out.println("Deleting existing file")[ CD ]
Line_8 $$ FSDataOutputStream output = FileSystem.getLocal(conf).getRaw().append(new Path(indexFile.getAbsolutePath()))-->Line_15 $$ output.close()[ FD ]
Line_2 $$ private static void createIndexFile(File indexFile, Configuration conf) throws IOException -->Line_7 $$ indexFile.createNewFile()[ CD ]
