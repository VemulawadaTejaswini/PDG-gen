Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_13 $$ assertFalse(MutableDetector.isMutable(this.getClass()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_46 $$ assertFalse(MutableDetector.isMutable(Period.ZERO))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_32 $$ assertFalse(MutableDetector.isMutable(file))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_49 $$ assertFalse(MutableDetector.isMutable(Year.now()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_33 $$ assertFalse(MutableDetector.isMutable(file.toURI()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_11 $$ assertFalse(MutableDetector.isMutable(Boolean.TRUE))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_18 $$ assertFalse(MutableDetector.isMutable(Integer.valueOf(1)))[ CD ]
Line_31 $$ File file = new File(System.getProperty("user.home"))-->Line_32 $$ assertFalse(MutableDetector.isMutable(file))[ FD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_31 $$ File file = new File(System.getProperty("user.home"))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_39 $$ assertFalse(MutableDetector.isMutable(DecimalStyle.STANDARD))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_54 $$ assertFalse(MutableDetector.isMutable(ZoneRules.of(ZoneOffset.UTC)))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_36 $$ assertFalse(MutableDetector.isMutable(new AllPermission()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_50 $$ assertFalse(MutableDetector.isMutable(YearMonth.now()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_10 $$ assertFalse(MutableDetector.isMutable(Collections.EMPTY_SET))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_29 $$ assertFalse(MutableDetector.isMutable(UUID.randomUUID()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_23 $$ assertFalse(MutableDetector.isMutable(BigDecimal.valueOf(1)))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_34 $$ assertFalse(MutableDetector.isMutable(file.toURI().toURL()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_35 $$ assertFalse(MutableDetector.isMutable(FileSystems.getDefault().getRootDirectories().iterator().next()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_37 $$ assertFalse(MutableDetector.isMutable(new ImmutableObject()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_22 $$ assertFalse(MutableDetector.isMutable(BigInteger.valueOf(1)))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_51 $$ assertFalse(MutableDetector.isMutable(ZoneOffset.UTC))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_28 $$ assertFalse(MutableDetector.isMutable(TimeZone.getDefault()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_55 $$ assertFalse(MutableDetector.isMutable(ZonedDateTime.now()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_19 $$ assertFalse(MutableDetector.isMutable(Long.valueOf(1)))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_56 $$ assertFalse(MutableDetector.isMutable(new JCIPImmutableObject()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_6 $$ assertTrue(MutableDetector.isMutable(new AtomicLong()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_53 $$ assertFalse(MutableDetector.isMutable(ZoneOffsetTransitionRule.of(Month.JANUARY, 1, DayOfWeek.SUNDAY, LocalTime.MIDNIGHT, true, TimeDefinition.STANDARD, ZoneOffset.UTC, ZoneOffset.ofHours(1), ZoneOffset.ofHours(2))))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_47 $$ assertFalse(MutableDetector.isMutable(ValueRange.of(0L, 10L)))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_38 $$ assertFalse(MutableDetector.isMutable(DateTimeFormatter.BASIC_ISO_DATE))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_40 $$ assertFalse(MutableDetector.isMutable(Duration.ZERO))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_24 $$ assertFalse(MutableDetector.isMutable(InetAddress.getLocalHost()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_26 $$ assertFalse(MutableDetector.isMutable(MathContext.UNLIMITED))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_21 $$ assertFalse(MutableDetector.isMutable(Double.valueOf(1)))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_41 $$ assertFalse(MutableDetector.isMutable(Instant.now()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_5 $$ assertTrue(MutableDetector.isMutable(new AtomicInteger()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_12 $$ assertFalse(MutableDetector.isMutable(Character.valueOf('a')))[ CD ]
Line_31 $$ File file = new File(System.getProperty("user.home"))-->Line_33 $$ assertFalse(MutableDetector.isMutable(file.toURI()))[ FD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_45 $$ assertFalse(MutableDetector.isMutable(MonthDay.now()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_15 $$ assertFalse(MutableDetector.isMutable(Locale.getDefault()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_17 $$ assertFalse(MutableDetector.isMutable(Short.valueOf(Integer.valueOf(1).shortValue())))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_20 $$ assertFalse(MutableDetector.isMutable(Float.valueOf(1)))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_25 $$ assertFalse(MutableDetector.isMutable(new InetSocketAddress(InetAddress.getLocalHost(), 80)))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_4 $$ assertTrue(MutableDetector.isMutable(new Date()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_43 $$ assertFalse(MutableDetector.isMutable(LocalDateTime.now()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_48 $$ assertFalse(MutableDetector.isMutable(WeekFields.ISO))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_27 $$ assertFalse(MutableDetector.isMutable("test"))[ CD ]
Line_31 $$ File file = new File(System.getProperty("user.home"))-->Line_34 $$ assertFalse(MutableDetector.isMutable(file.toURI().toURL()))[ FD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_9 $$ assertFalse(MutableDetector.isMutable(Collections.EMPTY_MAP))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_14 $$ assertFalse(MutableDetector.isMutable(Currency.getInstance(Locale.US)))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_52 $$ assertFalse(MutableDetector.isMutable(ZoneRules.of(ZoneOffset.UTC).nextTransition(Instant.now())))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_42 $$ assertFalse(MutableDetector.isMutable(LocalDate.now()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_3 $$ assertTrue(MutableDetector.isMutable(new Object()))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_8 $$ assertFalse(MutableDetector.isMutable(Collections.EMPTY_LIST))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_7 $$ assertFalse(MutableDetector.isMutable(null))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_30 $$ assertFalse(MutableDetector.isMutable(TimeUnit.DAYS))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_16 $$ assertFalse(MutableDetector.isMutable(Byte.valueOf(Integer.valueOf(1).byteValue())))[ CD ]
Line_2 $$ public void isMutable() throws MalformedURLException, UnknownHostException -->Line_44 $$ assertFalse(MutableDetector.isMutable(LocalTime.now()))[ CD ]
