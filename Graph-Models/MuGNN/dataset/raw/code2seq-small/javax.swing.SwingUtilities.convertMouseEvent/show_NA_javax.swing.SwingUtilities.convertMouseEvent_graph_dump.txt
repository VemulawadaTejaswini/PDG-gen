Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_23 $$ scrollPane.getViewport().setOpaque(hintHint.isOpaqueAllowed())[ CD ]
Line_28 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_43 $$ expand(hint, editor, p, pane, alignToRight, group, hintHint)[ FD ]
Line_46 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_53 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) [ CD ]
Line_3 $$ if (myText == null)-->Line_4 $$ return null[ CD ]
Line_75 $$ pane.addMouseListener(new MouseAdapter() -->Line_84 $$ if (!expanded) [ CD ]
Line_84 $$ if (!expanded) -->Line_85 $$ hint.hide()[ CD ]
Line_8 $$ final JComponent contentComponent = editor.getContentComponent()-->Line_34 $$ action.unregisterCustomShortcutSet(contentComponent)[ FD ]
Line_65 $$ if (!expanded) -->Line_68 $$ stripDescription()[ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_89 $$ hintManager.showEditorHint(hint, editor, p, HintManager.HIDE_BY_ANY_KEY | HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_OTHER_HINT | HintManager.HIDE_BY_SCROLLING, 0, false, hintHint)[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_5 $$ myText = myText.replaceAll(String.valueOf(UIUtil.MNEMONIC), "")[ CD ]
Line_6 $$ final boolean expanded = myCurrentWidth > 0 && dressDescription(editor)-->Line_84 $$ if (!expanded) [ FD ]
Line_75 $$ pane.addMouseListener(new MouseAdapter() -->Line_77 $$ if (!myActiveLink) [ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_6 $$ final boolean expanded = myCurrentWidth > 0 && dressDescription(editor)[ FD ]
Line_18 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)-->Line_23 $$ scrollPane.getViewport().setOpaque(hintHint.isOpaqueAllowed())[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_13 $$ final JEditorPane pane = IdeTooltipManager.initPane(new Html(myText).setKeepFont(true), hintHint, layeredPane)[ CD ]
Line_38 $$ actionRef.set(new AnAction() -->Line_60 $$ final String description = e.getDescription()[ FD ]
Line_18 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)-->Line_26 $$ scrollPane.setViewportBorder(null)[ FD ]
Line_28 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_69 $$ hint.hide()[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_8 $$ final JComponent contentComponent = editor.getContentComponent()[ FD ]
Line_18 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)-->Line_25 $$ scrollPane.getViewport().setBackground(hintHint.getTextBackground())[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_70 $$ TooltipController.getInstance().showTooltip(editor, new Point(p.x - 3, p.y - 3), createRenderer(myText, 0), false, group, hintHint)[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_18 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)[ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_12 $$ final JLayeredPane layeredPane = editorComponent.getRootPane().getLayeredPane()[ CD ]
Line_38 $$ actionRef.set(new AnAction() -->Line_54 $$ final URL url = e.getURL()[ FD ]
Line_13 $$ final JEditorPane pane = IdeTooltipManager.initPane(new Html(myText).setKeepFont(true), hintHint, layeredPane)-->Line_75 $$ pane.addMouseListener(new MouseAdapter() [ FD ]
Line_32 $$ final AnAction action = actionRef.get()-->Line_34 $$ action.unregisterCustomShortcutSet(contentComponent)[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_61 $$ if (description != null && handle(description, editor)) [ FD ]
Line_13 $$ final JEditorPane pane = IdeTooltipManager.initPane(new Html(myText).setKeepFont(true), hintHint, layeredPane)-->Line_43 $$ expand(hint, editor, p, pane, alignToRight, group, hintHint)[ FD ]
Line_46 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_49 $$ if (e.getEventType() == HyperlinkEvent.EventType.EXITED) [ CD ]
Line_55 $$ if (url != null) -->Line_57 $$ hint.hide()[ CD ]
Line_65 $$ if (!expanded) -->Line_70 $$ TooltipController.getInstance().showTooltip(editor, new Point(p.x - 3, p.y - 3), createRenderer(myText, 0), false, group, hintHint)[ CD ]
Line_13 $$ final JEditorPane pane = IdeTooltipManager.initPane(new Html(myText).setKeepFont(true), hintHint, layeredPane)-->Line_18 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_43 $$ expand(hint, editor, p, pane, alignToRight, group, hintHint)[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_20 $$ scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED)[ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_28 $$ final LightweightHint hint = new LightweightHint(scrollPane) [ CD ]
Line_10 $$ if (!editorComponent.isShowing())-->Line_11 $$ return null[ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_24 $$ scrollPane.setBackground(hintHint.getTextBackground())[ FD ]
Line_38 $$ actionRef.set(new AnAction() -->Line_49 $$ if (e.getEventType() == HyperlinkEvent.EventType.EXITED) [ FD ]
Line_46 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_78 $$ MouseEvent newMouseEvent = SwingUtilities.convertMouseEvent(e.getComponent(), e, contentComponent)[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_19 $$ scrollPane.setBorder(null)[ CD ]
Line_28 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_31 $$ super.hide()[ CD ]
Line_28 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_89 $$ hintManager.showEditorHint(hint, editor, p, HintManager.HIDE_BY_ANY_KEY | HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_OTHER_HINT | HintManager.HIDE_BY_SCROLLING, 0, false, hintHint)[ FD ]
Line_28 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_30 $$ onHide(pane)[ CD ]
Line_8 $$ final JComponent contentComponent = editor.getContentComponent()-->Line_40 $$ registerCustomShortcutSet(new CustomShortcutSet(KeymapManager.getInstance().getActiveKeymap().getShortcuts(IdeActions.ACTION_SHOW_ERROR_DESCRIPTION)), contentComponent)[ FD ]
Line_28 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_85 $$ hint.hide()[ FD ]
Line_12 $$ final JLayeredPane layeredPane = editorComponent.getRootPane().getLayeredPane()-->Line_13 $$ final JEditorPane pane = IdeTooltipManager.initPane(new Html(myText).setKeepFont(true), hintHint, layeredPane)[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_66 $$ expand(hint, editor, p, pane, alignToRight, group, hintHint)[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_9 $$ final JComponent editorComponent = editor.getComponent()[ CD ]
Line_6 $$ final boolean expanded = myCurrentWidth > 0 && dressDescription(editor)-->Line_16 $$ correctLocation(editor, pane, p, alignToRight, expanded, myCurrentWidth)[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_22 $$ scrollPane.setOpaque(hintHint.isOpaqueAllowed())[ CD ]
Line_60 $$ final String description = e.getDescription()-->Line_61 $$ if (description != null && handle(description, editor)) [ FD ]
Line_65 $$ if (!expanded) -->Line_66 $$ expand(hint, editor, p, pane, alignToRight, group, hintHint)[ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_75 $$ pane.addMouseListener(new MouseAdapter() [ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_14 $$ hintHint.setContentActive(isActiveHtml(myText))[ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_15 $$ if (!hintHint.isAwtTooltip()) [ CD ]
Line_61 $$ if (description != null && handle(description, editor)) -->Line_62 $$ hint.hide()[ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_38 $$ actionRef.set(new AnAction() [ CD ]
Line_8 $$ final JComponent contentComponent = editor.getContentComponent()-->Line_78 $$ MouseEvent newMouseEvent = SwingUtilities.convertMouseEvent(e.getComponent(), e, contentComponent)[ FD ]
Line_27 $$ final Ref<AnAction> actionRef = new Ref<AnAction>()-->Line_32 $$ final AnAction action = actionRef.get()[ FD ]
Line_54 $$ final URL url = e.getURL()-->Line_55 $$ if (url != null) [ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_15 $$ if (!hintHint.isAwtTooltip()) [ FD ]
Line_28 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_79 $$ hint.hide()[ FD ]
Line_55 $$ if (url != null) -->Line_56 $$ BrowserUtil.browse(url)[ CD ]
Line_18 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)-->Line_19 $$ scrollPane.setBorder(null)[ FD ]
Line_46 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_54 $$ final URL url = e.getURL()[ FD ]
Line_9 $$ final JComponent editorComponent = editor.getComponent()-->Line_12 $$ final JLayeredPane layeredPane = editorComponent.getRootPane().getLayeredPane()[ FD ]
Line_65 $$ if (!expanded) -->Line_69 $$ hint.hide()[ CD ]
Line_13 $$ final JEditorPane pane = IdeTooltipManager.initPane(new Html(myText).setKeepFont(true), hintHint, layeredPane)-->Line_66 $$ expand(hint, editor, p, pane, alignToRight, group, hintHint)[ FD ]
Line_18 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)-->Line_24 $$ scrollPane.setBackground(hintHint.getTextBackground())[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_90 $$ return hint[ CD ]
Line_46 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_53 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) [ FD ]
Line_75 $$ pane.addMouseListener(new MouseAdapter() -->Line_78 $$ MouseEvent newMouseEvent = SwingUtilities.convertMouseEvent(e.getComponent(), e, contentComponent)[ FD ]
Line_53 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) -->Line_54 $$ final URL url = e.getURL()[ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_13 $$ final JEditorPane pane = IdeTooltipManager.initPane(new Html(myText).setKeepFont(true), hintHint, layeredPane)[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_24 $$ scrollPane.setBackground(hintHint.getTextBackground())[ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_8 $$ final JComponent contentComponent = editor.getContentComponent()[ CD ]
Line_28 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_33 $$ if (action != null) [ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_27 $$ final Ref<AnAction> actionRef = new Ref<AnAction>()[ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_89 $$ hintManager.showEditorHint(hint, editor, p, HintManager.HIDE_BY_ANY_KEY | HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_OTHER_HINT | HintManager.HIDE_BY_SCROLLING, 0, false, hintHint)[ CD ]
Line_53 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) -->Line_61 $$ if (description != null && handle(description, editor)) [ CD ]
Line_27 $$ final Ref<AnAction> actionRef = new Ref<AnAction>()-->Line_38 $$ actionRef.set(new AnAction() [ FD ]
Line_38 $$ actionRef.set(new AnAction() -->Line_43 $$ expand(hint, editor, p, pane, alignToRight, group, hintHint)[ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_25 $$ scrollPane.getViewport().setBackground(hintHint.getTextBackground())[ CD ]
Line_38 $$ actionRef.set(new AnAction() -->Line_78 $$ MouseEvent newMouseEvent = SwingUtilities.convertMouseEvent(e.getComponent(), e, contentComponent)[ FD ]
Line_77 $$ if (!myActiveLink) -->Line_79 $$ hint.hide()[ CD ]
Line_13 $$ final JEditorPane pane = IdeTooltipManager.initPane(new Html(myText).setKeepFont(true), hintHint, layeredPane)-->Line_30 $$ onHide(pane)[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_10 $$ if (!editorComponent.isShowing())[ CD ]
Line_13 $$ final JEditorPane pane = IdeTooltipManager.initPane(new Html(myText).setKeepFont(true), hintHint, layeredPane)-->Line_16 $$ correctLocation(editor, pane, p, alignToRight, expanded, myCurrentWidth)[ FD ]
Line_28 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_66 $$ expand(hint, editor, p, pane, alignToRight, group, hintHint)[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_23 $$ scrollPane.getViewport().setOpaque(hintHint.isOpaqueAllowed())[ FD ]
Line_77 $$ if (!myActiveLink) -->Line_80 $$ contentComponent.dispatchEvent(newMouseEvent)[ CD ]
Line_46 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_60 $$ final String description = e.getDescription()[ FD ]
Line_18 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)-->Line_22 $$ scrollPane.setOpaque(hintHint.isOpaqueAllowed())[ FD ]
Line_15 $$ if (!hintHint.isAwtTooltip()) -->Line_16 $$ correctLocation(editor, pane, p, alignToRight, expanded, myCurrentWidth)[ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_3 $$ if (myText == null)[ CD ]
Line_18 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)-->Line_20 $$ scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED)[ FD ]
Line_53 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) -->Line_60 $$ final String description = e.getDescription()[ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_26 $$ scrollPane.setViewportBorder(null)[ CD ]
Line_77 $$ if (!myActiveLink) -->Line_78 $$ MouseEvent newMouseEvent = SwingUtilities.convertMouseEvent(e.getComponent(), e, contentComponent)[ CD ]
Line_28 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_62 $$ hint.hide()[ FD ]
Line_61 $$ if (description != null && handle(description, editor)) -->Line_63 $$ return[ CD ]
Line_55 $$ if (url != null) -->Line_58 $$ return[ CD ]
Line_78 $$ MouseEvent newMouseEvent = SwingUtilities.convertMouseEvent(e.getComponent(), e, contentComponent)-->Line_80 $$ contentComponent.dispatchEvent(newMouseEvent)[ FD ]
Line_38 $$ actionRef.set(new AnAction() -->Line_53 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) [ FD ]
Line_7 $$ final HintManagerImpl hintManager = HintManagerImpl.getInstanceImpl()-->Line_89 $$ hintManager.showEditorHint(hint, editor, p, HintManager.HIDE_BY_ANY_KEY | HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_OTHER_HINT | HintManager.HIDE_BY_SCROLLING, 0, false, hintHint)[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_46 $$ pane.addHyperlinkListener(new HyperlinkListener() [ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_9 $$ final JComponent editorComponent = editor.getComponent()[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_14 $$ hintHint.setContentActive(isActiveHtml(myText))[ FD ]
Line_28 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_32 $$ final AnAction action = actionRef.get()[ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_6 $$ final boolean expanded = myCurrentWidth > 0 && dressDescription(editor)[ CD ]
Line_54 $$ final URL url = e.getURL()-->Line_56 $$ BrowserUtil.browse(url)[ FD ]
Line_32 $$ final AnAction action = actionRef.get()-->Line_33 $$ if (action != null) [ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_7 $$ final HintManagerImpl hintManager = HintManagerImpl.getInstanceImpl()[ CD ]
Line_28 $$ final LightweightHint hint = new LightweightHint(scrollPane) -->Line_57 $$ hint.hide()[ FD ]
Line_9 $$ final JComponent editorComponent = editor.getComponent()-->Line_10 $$ if (!editorComponent.isShowing())[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_25 $$ scrollPane.getViewport().setBackground(hintHint.getTextBackground())[ FD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_22 $$ scrollPane.setOpaque(hintHint.isOpaqueAllowed())[ FD ]
Line_6 $$ final boolean expanded = myCurrentWidth > 0 && dressDescription(editor)-->Line_65 $$ if (!expanded) [ FD ]
Line_46 $$ pane.addHyperlinkListener(new HyperlinkListener() -->Line_49 $$ if (e.getEventType() == HyperlinkEvent.EventType.EXITED) [ FD ]
Line_49 $$ if (e.getEventType() == HyperlinkEvent.EventType.EXITED) -->Line_51 $$ return[ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_21 $$ scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED)[ CD ]
Line_53 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) -->Line_55 $$ if (url != null) [ CD ]
Line_53 $$ if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) -->Line_65 $$ if (!expanded) [ CD ]
Line_8 $$ final JComponent contentComponent = editor.getContentComponent()-->Line_80 $$ contentComponent.dispatchEvent(newMouseEvent)[ FD ]
Line_13 $$ final JEditorPane pane = IdeTooltipManager.initPane(new Html(myText).setKeepFont(true), hintHint, layeredPane)-->Line_46 $$ pane.addHyperlinkListener(new HyperlinkListener() [ FD ]
Line_33 $$ if (action != null) -->Line_34 $$ action.unregisterCustomShortcutSet(contentComponent)[ CD ]
Line_2 $$ public LightweightHint show(@NotNull final Editor editor, @NotNull final Point p, final boolean alignToRight, @NotNull final TooltipGroup group, @NotNull final HintHint hintHint) -->Line_16 $$ correctLocation(editor, pane, p, alignToRight, expanded, myCurrentWidth)[ FD ]
Line_18 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(pane)-->Line_21 $$ scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED)[ FD ]
