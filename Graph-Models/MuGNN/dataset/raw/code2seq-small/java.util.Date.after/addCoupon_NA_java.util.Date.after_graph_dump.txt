Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_12 $$ endDate = PortalUtil.getDate(endDateMonth, endDateDay, endDateYear, endDateHour, endDateMinute, user.getTimeZone(), CouponEndDateException.class)[ FD ]
Line_10 $$ Date endDate = null-->Line_28 $$ coupon.setEndDate(endDate)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_11 $$ if (!neverExpire) [ CD ]
Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)-->Line_20 $$ coupon.setGroupId(groupId)[ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_21 $$ coupon.setCompanyId(user.getCompanyId())[ FD ]
Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)-->Line_22 $$ coupon.setUserId(user.getUserId())[ FD ]
Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)-->Line_29 $$ coupon.setActive(active)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_36 $$ return coupon[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_31 $$ coupon.setLimitSkus(limitSkus)[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_25 $$ coupon.setName(name)[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_28 $$ coupon.setEndDate(endDate)[ CD ]
Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)-->Line_32 $$ coupon.setMinOrder(minOrder)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_4 $$ long groupId = serviceContext.getScopeGroupId()[ FD ]
Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)-->Line_26 $$ coupon.setDescription(description)[ FD ]
Line_18 $$ long couponId = counterLocalService.increment()-->Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)[ FD ]
Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)-->Line_27 $$ coupon.setStartDate(startDate)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_27 $$ coupon.setStartDate(startDate)[ CD ]
Line_4 $$ long groupId = serviceContext.getScopeGroupId()-->Line_17 $$ validate(user.getCompanyId(), groupId, code, autoCode, name, description, limitCategories, limitSkus, minOrder, discount)[ FD ]
Line_5 $$ code = StringUtil.toUpperCase(code.trim())-->Line_7 $$ code = getCode()[ FD ]
Line_5 $$ code = StringUtil.toUpperCase(code.trim())-->Line_17 $$ validate(user.getCompanyId(), groupId, code, autoCode, name, description, limitCategories, limitSkus, minOrder, discount)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_17 $$ validate(user.getCompanyId(), groupId, code, autoCode, name, description, limitCategories, limitSkus, minOrder, discount)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_24 $$ coupon.setCode(code)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_25 $$ coupon.setName(name)[ FD ]
Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)-->Line_23 $$ coupon.setUserName(user.getFullName())[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_26 $$ coupon.setDescription(description)[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_35 $$ shoppingCouponPersistence.update(coupon)[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_30 $$ coupon.setLimitCategories(limitCategories)[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_4 $$ long groupId = serviceContext.getScopeGroupId()[ CD ]
Line_4 $$ long groupId = serviceContext.getScopeGroupId()-->Line_20 $$ coupon.setGroupId(groupId)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_6 $$ if (autoCode) [ CD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_22 $$ coupon.setUserId(user.getUserId())[ FD ]
Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)-->Line_34 $$ coupon.setDiscountType(discountType)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_34 $$ coupon.setDiscountType(discountType)[ FD ]
Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)-->Line_24 $$ coupon.setCode(code)[ FD ]
Line_11 $$ if (!neverExpire) -->Line_12 $$ endDate = PortalUtil.getDate(endDateMonth, endDateDay, endDateYear, endDateHour, endDateMinute, user.getTimeZone(), CouponEndDateException.class)[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_5 $$ code = StringUtil.toUpperCase(code.trim())[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_32 $$ coupon.setMinOrder(minOrder)[ CD ]
Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)-->Line_25 $$ coupon.setName(name)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_11 $$ if (!neverExpire) [ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_33 $$ coupon.setDiscount(discount)[ FD ]
Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)-->Line_30 $$ coupon.setLimitCategories(limitCategories)[ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_23 $$ coupon.setUserName(user.getFullName())[ FD ]
Line_6 $$ if (autoCode) -->Line_7 $$ code = getCode()[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_9 $$ Date startDate = PortalUtil.getDate(startDateMonth, startDateDay, startDateYear, startDateHour, startDateMinute, user.getTimeZone(), CouponStartDateException.class)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_18 $$ long couponId = counterLocalService.increment()[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_14 $$ if ((endDate != null) && startDate.after(endDate)) [ CD ]
Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)-->Line_35 $$ shoppingCouponPersistence.update(coupon)[ FD ]
Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)-->Line_31 $$ coupon.setLimitSkus(limitSkus)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_7 $$ code = getCode()[ FD ]
Line_7 $$ code = getCode()-->Line_17 $$ validate(user.getCompanyId(), groupId, code, autoCode, name, description, limitCategories, limitSkus, minOrder, discount)[ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_9 $$ Date startDate = PortalUtil.getDate(startDateMonth, startDateDay, startDateYear, startDateHour, startDateMinute, user.getTimeZone(), CouponStartDateException.class)[ FD ]
Line_9 $$ Date startDate = PortalUtil.getDate(startDateMonth, startDateDay, startDateYear, startDateHour, startDateMinute, user.getTimeZone(), CouponStartDateException.class)-->Line_27 $$ coupon.setStartDate(startDate)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_24 $$ coupon.setCode(code)[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_30 $$ coupon.setLimitCategories(limitCategories)[ FD ]
Line_5 $$ code = StringUtil.toUpperCase(code.trim())-->Line_24 $$ coupon.setCode(code)[ FD ]
Line_7 $$ code = getCode()-->Line_24 $$ coupon.setCode(code)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_17 $$ validate(user.getCompanyId(), groupId, code, autoCode, name, description, limitCategories, limitSkus, minOrder, discount)[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_21 $$ coupon.setCompanyId(user.getCompanyId())[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_22 $$ coupon.setUserId(user.getUserId())[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_9 $$ Date startDate = PortalUtil.getDate(startDateMonth, startDateDay, startDateYear, startDateHour, startDateMinute, user.getTimeZone(), CouponStartDateException.class)[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_26 $$ coupon.setDescription(description)[ FD ]
Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)-->Line_33 $$ coupon.setDiscount(discount)[ FD ]
Line_10 $$ Date endDate = null-->Line_12 $$ endDate = PortalUtil.getDate(endDateMonth, endDateDay, endDateYear, endDateHour, endDateMinute, user.getTimeZone(), CouponEndDateException.class)[ FD ]
Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)-->Line_21 $$ coupon.setCompanyId(user.getCompanyId())[ FD ]
Line_10 $$ Date endDate = null-->Line_14 $$ if ((endDate != null) && startDate.after(endDate)) [ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_32 $$ coupon.setMinOrder(minOrder)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)[ FD ]
Line_9 $$ Date startDate = PortalUtil.getDate(startDateMonth, startDateDay, startDateYear, startDateHour, startDateMinute, user.getTimeZone(), CouponStartDateException.class)-->Line_14 $$ if ((endDate != null) && startDate.after(endDate)) [ FD ]
Line_12 $$ endDate = PortalUtil.getDate(endDateMonth, endDateDay, endDateYear, endDateHour, endDateMinute, user.getTimeZone(), CouponEndDateException.class)-->Line_28 $$ coupon.setEndDate(endDate)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_5 $$ code = StringUtil.toUpperCase(code.trim())[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_23 $$ coupon.setUserName(user.getFullName())[ CD ]
Line_12 $$ endDate = PortalUtil.getDate(endDateMonth, endDateDay, endDateYear, endDateHour, endDateMinute, user.getTimeZone(), CouponEndDateException.class)-->Line_14 $$ if ((endDate != null) && startDate.after(endDate)) [ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_17 $$ validate(user.getCompanyId(), groupId, code, autoCode, name, description, limitCategories, limitSkus, minOrder, discount)[ FD ]
Line_19 $$ ShoppingCoupon coupon = shoppingCouponPersistence.create(couponId)-->Line_28 $$ coupon.setEndDate(endDate)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_31 $$ coupon.setLimitSkus(limitSkus)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_10 $$ Date endDate = null[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_29 $$ coupon.setActive(active)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_29 $$ coupon.setActive(active)[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_34 $$ coupon.setDiscountType(discountType)[ CD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_12 $$ endDate = PortalUtil.getDate(endDateMonth, endDateDay, endDateYear, endDateHour, endDateMinute, user.getTimeZone(), CouponEndDateException.class)[ FD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_33 $$ coupon.setDiscount(discount)[ CD ]
Line_2 $$ public ShoppingCoupon addCoupon(long userId, String code, boolean autoCode, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_20 $$ coupon.setGroupId(groupId)[ CD ]
