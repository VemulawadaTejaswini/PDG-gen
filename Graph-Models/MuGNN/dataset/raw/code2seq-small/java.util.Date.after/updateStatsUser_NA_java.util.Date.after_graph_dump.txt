Line_23 $$ if (displayDate.after(lastPostDate)) -->Line_24 $$ statsUser.setLastPostDate(displayDate)[ CD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_15 $$ BlogsStatsUser statsUser = getStatsUser(groupId, userId)[ FD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_19 $$ Date lastPostDate = statsUser.getLastPostDate()[ CD ]
Line_19 $$ Date lastPostDate = statsUser.getLastPostDate()-->Line_28 $$ if ((lastPostDate == null) || lastPostDate.before(lastDisplayDate)) [ FD ]
Line_20 $$ if ((displayDate != null) && displayDate.before(now)) -->Line_21 $$ if (lastPostDate == null) [ CD ]
Line_3 $$ Date now = new Date()-->Line_4 $$ int entryCount = blogsEntryPersistence.countByG_U_LtD_S(groupId, userId, now, WorkflowConstants.STATUS_APPROVED)[ FD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_4 $$ int entryCount = blogsEntryPersistence.countByG_U_LtD_S(groupId, userId, now, WorkflowConstants.STATUS_APPROVED)[ FD ]
Line_5 $$ if (entryCount == 0) -->Line_13 $$ return[ CD ]
Line_15 $$ BlogsStatsUser statsUser = getStatsUser(groupId, userId)-->Line_24 $$ statsUser.setLastPostDate(displayDate)[ FD ]
Line_20 $$ if ((displayDate != null) && displayDate.before(now)) -->Line_28 $$ if ((lastPostDate == null) || lastPostDate.before(lastDisplayDate)) [ CD ]
Line_15 $$ BlogsStatsUser statsUser = getStatsUser(groupId, userId)-->Line_31 $$ blogsStatsUserPersistence.update(statsUser)[ FD ]
Line_18 $$ Date lastDisplayDate = blogsEntry.getDisplayDate()-->Line_28 $$ if ((lastPostDate == null) || lastPostDate.before(lastDisplayDate)) [ FD ]
Line_15 $$ BlogsStatsUser statsUser = getStatsUser(groupId, userId)-->Line_26 $$ statsUser.setLastPostDate(lastDisplayDate)[ FD ]
Line_28 $$ if ((lastPostDate == null) || lastPostDate.before(lastDisplayDate)) -->Line_29 $$ statsUser.setLastPostDate(lastDisplayDate)[ CD ]
Line_3 $$ Date now = new Date()-->Line_20 $$ if ((displayDate != null) && displayDate.before(now)) [ FD ]
Line_18 $$ Date lastDisplayDate = blogsEntry.getDisplayDate()-->Line_26 $$ statsUser.setLastPostDate(lastDisplayDate)[ FD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_17 $$ BlogsEntry blogsEntry = blogsEntryPersistence.findByG_U_LtD_S_First(groupId, userId, now, WorkflowConstants.STATUS_APPROVED, new EntryDisplayDateComparator())[ FD ]
Line_15 $$ BlogsStatsUser statsUser = getStatsUser(groupId, userId)-->Line_22 $$ statsUser.setLastPostDate(displayDate)[ FD ]
Line_18 $$ Date lastDisplayDate = blogsEntry.getDisplayDate()-->Line_29 $$ statsUser.setLastPostDate(lastDisplayDate)[ FD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_24 $$ statsUser.setLastPostDate(displayDate)[ FD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_22 $$ statsUser.setLastPostDate(displayDate)[ FD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_4 $$ int entryCount = blogsEntryPersistence.countByG_U_LtD_S(groupId, userId, now, WorkflowConstants.STATUS_APPROVED)[ CD ]
Line_19 $$ Date lastPostDate = statsUser.getLastPostDate()-->Line_21 $$ if (lastPostDate == null) [ FD ]
Line_15 $$ BlogsStatsUser statsUser = getStatsUser(groupId, userId)-->Line_16 $$ statsUser.setEntryCount(entryCount)[ FD ]
Line_4 $$ int entryCount = blogsEntryPersistence.countByG_U_LtD_S(groupId, userId, now, WorkflowConstants.STATUS_APPROVED)-->Line_16 $$ statsUser.setEntryCount(entryCount)[ FD ]
Line_21 $$ if (lastPostDate == null) -->Line_23 $$ if (displayDate.after(lastPostDate)) [ CD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_18 $$ Date lastDisplayDate = blogsEntry.getDisplayDate()[ CD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_3 $$ Date now = new Date()[ CD ]
Line_23 $$ if (displayDate.after(lastPostDate)) -->Line_25 $$ if (lastDisplayDate.before(lastPostDate)) [ CD ]
Line_15 $$ BlogsStatsUser statsUser = getStatsUser(groupId, userId)-->Line_19 $$ Date lastPostDate = statsUser.getLastPostDate()[ FD ]
Line_19 $$ Date lastPostDate = statsUser.getLastPostDate()-->Line_23 $$ if (displayDate.after(lastPostDate)) [ FD ]
Line_19 $$ Date lastPostDate = statsUser.getLastPostDate()-->Line_25 $$ if (lastDisplayDate.before(lastPostDate)) [ FD ]
Line_17 $$ BlogsEntry blogsEntry = blogsEntryPersistence.findByG_U_LtD_S_First(groupId, userId, now, WorkflowConstants.STATUS_APPROVED, new EntryDisplayDateComparator())-->Line_18 $$ Date lastDisplayDate = blogsEntry.getDisplayDate()[ FD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_16 $$ statsUser.setEntryCount(entryCount)[ CD ]
Line_25 $$ if (lastDisplayDate.before(lastPostDate)) -->Line_26 $$ statsUser.setLastPostDate(lastDisplayDate)[ CD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_7 $$ blogsStatsUserPersistence.removeByG_U(groupId, userId)[ FD ]
Line_9 $$ if (_log.isWarnEnabled()) -->Line_10 $$ _log.warn(nssue, nssue)[ CD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_17 $$ BlogsEntry blogsEntry = blogsEntryPersistence.findByG_U_LtD_S_First(groupId, userId, now, WorkflowConstants.STATUS_APPROVED, new EntryDisplayDateComparator())[ CD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_23 $$ if (displayDate.after(lastPostDate)) [ FD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_20 $$ if ((displayDate != null) && displayDate.before(now)) [ CD ]
Line_4 $$ int entryCount = blogsEntryPersistence.countByG_U_LtD_S(groupId, userId, now, WorkflowConstants.STATUS_APPROVED)-->Line_5 $$ if (entryCount == 0) [ FD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_5 $$ if (entryCount == 0) [ CD ]
Line_18 $$ Date lastDisplayDate = blogsEntry.getDisplayDate()-->Line_25 $$ if (lastDisplayDate.before(lastPostDate)) [ FD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_15 $$ BlogsStatsUser statsUser = getStatsUser(groupId, userId)[ CD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_20 $$ if ((displayDate != null) && displayDate.before(now)) [ FD ]
Line_2 $$ public void updateStatsUser(long groupId, long userId, Date displayDate) throws PortalException -->Line_31 $$ blogsStatsUserPersistence.update(statsUser)[ CD ]
Line_15 $$ BlogsStatsUser statsUser = getStatsUser(groupId, userId)-->Line_29 $$ statsUser.setLastPostDate(lastDisplayDate)[ FD ]
Line_21 $$ if (lastPostDate == null) -->Line_22 $$ statsUser.setLastPostDate(displayDate)[ CD ]
Line_3 $$ Date now = new Date()-->Line_17 $$ BlogsEntry blogsEntry = blogsEntryPersistence.findByG_U_LtD_S_First(groupId, userId, now, WorkflowConstants.STATUS_APPROVED, new EntryDisplayDateComparator())[ FD ]
