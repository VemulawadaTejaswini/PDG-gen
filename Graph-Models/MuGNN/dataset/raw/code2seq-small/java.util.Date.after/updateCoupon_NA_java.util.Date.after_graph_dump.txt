Line_4 $$ ShoppingCoupon coupon = shoppingCouponPersistence.findByPrimaryKey(couponId)-->Line_13 $$ validate(coupon.getCompanyId(), coupon.getGroupId(), name, description, limitCategories, limitSkus, minOrder, discount)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_19 $$ coupon.setLimitCategories(limitCategories)[ CD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_21 $$ coupon.setMinOrder(minOrder)[ CD ]
Line_6 $$ Date endDate = null-->Line_17 $$ coupon.setEndDate(endDate)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_20 $$ coupon.setLimitSkus(limitSkus)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_4 $$ ShoppingCoupon coupon = shoppingCouponPersistence.findByPrimaryKey(couponId)[ CD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_14 $$ coupon.setName(name)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_16 $$ coupon.setStartDate(startDate)[ CD ]
Line_4 $$ ShoppingCoupon coupon = shoppingCouponPersistence.findByPrimaryKey(couponId)-->Line_24 $$ shoppingCouponPersistence.update(coupon)[ FD ]
Line_7 $$ if (!neverExpire) -->Line_8 $$ endDate = PortalUtil.getDate(endDateMonth, endDateDay, endDateYear, endDateHour, endDateMinute, user.getTimeZone(), CouponEndDateException.class)[ CD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_18 $$ coupon.setActive(active)[ CD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_10 $$ if ((endDate != null) && startDate.after(endDate)) [ CD ]
Line_4 $$ ShoppingCoupon coupon = shoppingCouponPersistence.findByPrimaryKey(couponId)-->Line_21 $$ coupon.setMinOrder(minOrder)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_24 $$ shoppingCouponPersistence.update(coupon)[ CD ]
Line_4 $$ ShoppingCoupon coupon = shoppingCouponPersistence.findByPrimaryKey(couponId)-->Line_23 $$ coupon.setDiscountType(discountType)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_14 $$ coupon.setName(name)[ CD ]
Line_4 $$ ShoppingCoupon coupon = shoppingCouponPersistence.findByPrimaryKey(couponId)-->Line_19 $$ coupon.setLimitCategories(limitCategories)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_22 $$ coupon.setDiscount(discount)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_5 $$ Date startDate = PortalUtil.getDate(startDateMonth, startDateDay, startDateYear, startDateHour, startDateMinute, user.getTimeZone(), CouponStartDateException.class)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_21 $$ coupon.setMinOrder(minOrder)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_22 $$ coupon.setDiscount(discount)[ CD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_15 $$ coupon.setDescription(description)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_15 $$ coupon.setDescription(description)[ CD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_7 $$ if (!neverExpire) [ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_6 $$ Date endDate = null[ CD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)[ CD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_8 $$ endDate = PortalUtil.getDate(endDateMonth, endDateDay, endDateYear, endDateHour, endDateMinute, user.getTimeZone(), CouponEndDateException.class)[ FD ]
Line_6 $$ Date endDate = null-->Line_10 $$ if ((endDate != null) && startDate.after(endDate)) [ FD ]
Line_5 $$ Date startDate = PortalUtil.getDate(startDateMonth, startDateDay, startDateYear, startDateHour, startDateMinute, user.getTimeZone(), CouponStartDateException.class)-->Line_10 $$ if ((endDate != null) && startDate.after(endDate)) [ FD ]
Line_4 $$ ShoppingCoupon coupon = shoppingCouponPersistence.findByPrimaryKey(couponId)-->Line_15 $$ coupon.setDescription(description)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_18 $$ coupon.setActive(active)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_20 $$ coupon.setLimitSkus(limitSkus)[ CD ]
Line_4 $$ ShoppingCoupon coupon = shoppingCouponPersistence.findByPrimaryKey(couponId)-->Line_17 $$ coupon.setEndDate(endDate)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_13 $$ validate(coupon.getCompanyId(), coupon.getGroupId(), name, description, limitCategories, limitSkus, minOrder, discount)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_13 $$ validate(coupon.getCompanyId(), coupon.getGroupId(), name, description, limitCategories, limitSkus, minOrder, discount)[ CD ]
Line_8 $$ endDate = PortalUtil.getDate(endDateMonth, endDateDay, endDateYear, endDateHour, endDateMinute, user.getTimeZone(), CouponEndDateException.class)-->Line_17 $$ coupon.setEndDate(endDate)[ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_5 $$ Date startDate = PortalUtil.getDate(startDateMonth, startDateDay, startDateYear, startDateHour, startDateMinute, user.getTimeZone(), CouponStartDateException.class)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_7 $$ if (!neverExpire) [ CD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_5 $$ Date startDate = PortalUtil.getDate(startDateMonth, startDateDay, startDateYear, startDateHour, startDateMinute, user.getTimeZone(), CouponStartDateException.class)[ CD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_17 $$ coupon.setEndDate(endDate)[ CD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_19 $$ coupon.setLimitCategories(limitCategories)[ FD ]
Line_4 $$ ShoppingCoupon coupon = shoppingCouponPersistence.findByPrimaryKey(couponId)-->Line_18 $$ coupon.setActive(active)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_23 $$ coupon.setDiscountType(discountType)[ FD ]
Line_4 $$ ShoppingCoupon coupon = shoppingCouponPersistence.findByPrimaryKey(couponId)-->Line_22 $$ coupon.setDiscount(discount)[ FD ]
Line_4 $$ ShoppingCoupon coupon = shoppingCouponPersistence.findByPrimaryKey(couponId)-->Line_14 $$ coupon.setName(name)[ FD ]
Line_5 $$ Date startDate = PortalUtil.getDate(startDateMonth, startDateDay, startDateYear, startDateHour, startDateMinute, user.getTimeZone(), CouponStartDateException.class)-->Line_16 $$ coupon.setStartDate(startDate)[ FD ]
Line_8 $$ endDate = PortalUtil.getDate(endDateMonth, endDateDay, endDateYear, endDateHour, endDateMinute, user.getTimeZone(), CouponEndDateException.class)-->Line_10 $$ if ((endDate != null) && startDate.after(endDate)) [ FD ]
Line_4 $$ ShoppingCoupon coupon = shoppingCouponPersistence.findByPrimaryKey(couponId)-->Line_16 $$ coupon.setStartDate(startDate)[ FD ]
Line_4 $$ ShoppingCoupon coupon = shoppingCouponPersistence.findByPrimaryKey(couponId)-->Line_20 $$ coupon.setLimitSkus(limitSkus)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_23 $$ coupon.setDiscountType(discountType)[ CD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_4 $$ ShoppingCoupon coupon = shoppingCouponPersistence.findByPrimaryKey(couponId)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_25 $$ return coupon[ CD ]
Line_6 $$ Date endDate = null-->Line_8 $$ endDate = PortalUtil.getDate(endDateMonth, endDateDay, endDateYear, endDateHour, endDateMinute, user.getTimeZone(), CouponEndDateException.class)[ FD ]
Line_2 $$ public ShoppingCoupon updateCoupon(long userId, long couponId, String name, String description, int startDateMonth, int startDateDay, int startDateYear, int startDateHour, int startDateMinute, int endDateMonth, int endDateDay, int endDateYear, int endDateHour, int endDateMinute, boolean neverExpire, boolean active, String limitCategories, String limitSkus, double minOrder, double discount, String discountType, ServiceContext serviceContext) throws PortalException -->Line_8 $$ endDate = PortalUtil.getDate(endDateMonth, endDateDay, endDateYear, endDateHour, endDateMinute, user.getTimeZone(), CouponEndDateException.class)[ FD ]
