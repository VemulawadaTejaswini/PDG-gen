Line_2 $$ public void testExpiry() throws Exception -->Line_9 $$ final long id = dfs.addCacheDirective(new CacheDirectiveInfo.Builder().setPath(p).setPool(pool).setExpiration(CacheDirectiveInfo.Expiration.newAbsolute(expiry)).setReplication((short) 2).build())[ CD ]
Line_13 $$ RemoteIterator<CacheDirectiveEntry> it = dfs.listCacheDirectives(null)-->Line_15 $$ assertFalse(it.hasNext())[ FD ]
Line_13 $$ RemoteIterator<CacheDirectiveEntry> it = dfs.listCacheDirectives(null)-->Line_14 $$ CacheDirectiveEntry ent = it.next()[ FD ]
Line_9 $$ final long id = dfs.addCacheDirective(new CacheDirectiveInfo.Builder().setPath(p).setPool(pool).setExpiration(CacheDirectiveInfo.Expiration.newAbsolute(expiry)).setReplication((short) 2).build())-->Line_26 $$ dfs.modifyCacheDirective(new CacheDirectiveInfo.Builder().setId(id).setExpiration(Expiration.newRelative(-1)).build())[ FD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_8 $$ Date expiry = DateUtils.addSeconds(start, 120)[ CD ]
Line_9 $$ final long id = dfs.addCacheDirective(new CacheDirectiveInfo.Builder().setPath(p).setPool(pool).setExpiration(CacheDirectiveInfo.Expiration.newAbsolute(expiry)).setReplication((short) 2).build())-->Line_11 $$ dfs.modifyCacheDirective(new CacheDirectiveInfo.Builder().setId(id).setExpiration(Expiration.newRelative(0)).build())[ FD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_11 $$ dfs.modifyCacheDirective(new CacheDirectiveInfo.Builder().setId(id).setExpiration(Expiration.newRelative(0)).build())[ CD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_24 $$ assertTrue("Directive should not have expired", entryExpiry.after(new Date()))[ CD ]
Line_7 $$ Date start = new Date()-->Line_8 $$ Date expiry = DateUtils.addSeconds(start, 120)[ FD ]
Line_3 $$ String pool = "pool1"-->Line_9 $$ final long id = dfs.addCacheDirective(new CacheDirectiveInfo.Builder().setPath(p).setPool(pool).setExpiration(CacheDirectiveInfo.Expiration.newAbsolute(expiry)).setReplication((short) 2).build())[ FD ]
Line_5 $$ Path p = new Path("/mypath")-->Line_6 $$ DFSTestUtil.createFile(dfs, p, BLOCK_SIZE * 2, (short) 2, 0x999)[ FD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_19 $$ waitForCachedBlocks(cluster.getNameNode(), 2, 4, "testExpiry:3")[ CD ]
Line_14 $$ CacheDirectiveEntry ent = it.next()-->Line_21 $$ ent = it.next()[ FD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_16 $$ Date entryExpiry = new Date(ent.getInfo().getExpiration().getMillis())[ CD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_21 $$ ent = it.next()[ CD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_15 $$ assertFalse(it.hasNext())[ CD ]
Line_14 $$ CacheDirectiveEntry ent = it.next()-->Line_23 $$ entryExpiry = new Date(ent.getInfo().getExpiration().getMillis())[ FD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_10 $$ waitForCachedBlocks(cluster.getNameNode(), 2, 4, "testExpiry:1")[ CD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_22 $$ assertFalse(it.hasNext())[ CD ]
Line_16 $$ Date entryExpiry = new Date(ent.getInfo().getExpiration().getMillis())-->Line_24 $$ assertTrue("Directive should not have expired", entryExpiry.after(new Date()))[ FD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_5 $$ Path p = new Path("/mypath")[ CD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_12 $$ waitForCachedBlocks(cluster.getNameNode(), 0, 0, "testExpiry:2")[ CD ]
Line_14 $$ CacheDirectiveEntry ent = it.next()-->Line_16 $$ Date entryExpiry = new Date(ent.getInfo().getExpiration().getMillis())[ FD ]
Line_9 $$ final long id = dfs.addCacheDirective(new CacheDirectiveInfo.Builder().setPath(p).setPool(pool).setExpiration(CacheDirectiveInfo.Expiration.newAbsolute(expiry)).setReplication((short) 2).build())-->Line_18 $$ dfs.modifyCacheDirective(new CacheDirectiveInfo.Builder().setId(id).setExpiration(Expiration.newRelative(120000)).build())[ FD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_23 $$ entryExpiry = new Date(ent.getInfo().getExpiration().getMillis())[ CD ]
Line_8 $$ Date expiry = DateUtils.addSeconds(start, 120)-->Line_9 $$ final long id = dfs.addCacheDirective(new CacheDirectiveInfo.Builder().setPath(p).setPool(pool).setExpiration(CacheDirectiveInfo.Expiration.newAbsolute(expiry)).setReplication((short) 2).build())[ FD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_17 $$ assertTrue("Directive should have expired", entryExpiry.before(new Date()))[ CD ]
Line_23 $$ entryExpiry = new Date(ent.getInfo().getExpiration().getMillis())-->Line_24 $$ assertTrue("Directive should not have expired", entryExpiry.after(new Date()))[ FD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_6 $$ DFSTestUtil.createFile(dfs, p, BLOCK_SIZE * 2, (short) 2, 0x999)[ CD ]
Line_21 $$ ent = it.next()-->Line_23 $$ entryExpiry = new Date(ent.getInfo().getExpiration().getMillis())[ FD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_13 $$ RemoteIterator<CacheDirectiveEntry> it = dfs.listCacheDirectives(null)[ CD ]
Line_13 $$ RemoteIterator<CacheDirectiveEntry> it = dfs.listCacheDirectives(null)-->Line_22 $$ assertFalse(it.hasNext())[ FD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_18 $$ dfs.modifyCacheDirective(new CacheDirectiveInfo.Builder().setId(id).setExpiration(Expiration.newRelative(120000)).build())[ CD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_7 $$ Date start = new Date()[ CD ]
Line_5 $$ Path p = new Path("/mypath")-->Line_9 $$ final long id = dfs.addCacheDirective(new CacheDirectiveInfo.Builder().setPath(p).setPool(pool).setExpiration(CacheDirectiveInfo.Expiration.newAbsolute(expiry)).setReplication((short) 2).build())[ FD ]
Line_13 $$ RemoteIterator<CacheDirectiveEntry> it = dfs.listCacheDirectives(null)-->Line_20 $$ it = dfs.listCacheDirectives(null)[ FD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_3 $$ String pool = "pool1"[ CD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_20 $$ it = dfs.listCacheDirectives(null)[ CD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_4 $$ dfs.addCachePool(new CachePoolInfo(pool))[ CD ]
Line_20 $$ it = dfs.listCacheDirectives(null)-->Line_22 $$ assertFalse(it.hasNext())[ FD ]
Line_16 $$ Date entryExpiry = new Date(ent.getInfo().getExpiration().getMillis())-->Line_17 $$ assertTrue("Directive should have expired", entryExpiry.before(new Date()))[ FD ]
Line_16 $$ Date entryExpiry = new Date(ent.getInfo().getExpiration().getMillis())-->Line_23 $$ entryExpiry = new Date(ent.getInfo().getExpiration().getMillis())[ FD ]
Line_20 $$ it = dfs.listCacheDirectives(null)-->Line_21 $$ ent = it.next()[ FD ]
Line_13 $$ RemoteIterator<CacheDirectiveEntry> it = dfs.listCacheDirectives(null)-->Line_21 $$ ent = it.next()[ FD ]
Line_2 $$ public void testExpiry() throws Exception -->Line_14 $$ CacheDirectiveEntry ent = it.next()[ CD ]
