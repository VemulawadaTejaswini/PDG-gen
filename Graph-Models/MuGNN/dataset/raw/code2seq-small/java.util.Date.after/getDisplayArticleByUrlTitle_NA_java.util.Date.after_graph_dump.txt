Line_5 $$ articles = journalArticlePersistence.findByG_UT_ST(groupId, urlTitle, WorkflowConstants.STATUS_APPROVED, QueryUtil.ALL_POS, QueryUtil.ALL_POS, orderByComparator)-->Line_17 $$ return articles.get(0)[ FD ]
Line_2 $$ public JournalArticle getDisplayArticleByUrlTitle(long groupId, String urlTitle) throws PortalException -->Line_4 $$ OrderByComparator<JournalArticle> orderByComparator = new ArticleVersionComparator()[ CD ]
Line_3 $$ List<JournalArticle> articles = null-->Line_17 $$ return articles.get(0)[ FD ]
Line_5 $$ articles = journalArticlePersistence.findByG_UT_ST(groupId, urlTitle, WorkflowConstants.STATUS_APPROVED, QueryUtil.ALL_POS, QueryUtil.ALL_POS, orderByComparator)-->Line_6 $$ if (articles.isEmpty()) [ FD ]
Line_2 $$ public JournalArticle getDisplayArticleByUrlTitle(long groupId, String urlTitle) throws PortalException -->Line_6 $$ if (articles.isEmpty()) [ CD ]
Line_11 $$ Date displayDate = article.getDisplayDate()-->Line_13 $$ if ((displayDate != null) && displayDate.before(now) && ((expirationDate == null) || expirationDate.after(now))) [ FD ]
Line_3 $$ List<JournalArticle> articles = null-->Line_6 $$ if (articles.isEmpty()) [ FD ]
Line_10 $$ for (JournalArticle article : articles) -->Line_12 $$ Date expirationDate = article.getExpirationDate()[ FD ]
Line_2 $$ public JournalArticle getDisplayArticleByUrlTitle(long groupId, String urlTitle) throws PortalException -->Line_5 $$ articles = journalArticlePersistence.findByG_UT_ST(groupId, urlTitle, WorkflowConstants.STATUS_APPROVED, QueryUtil.ALL_POS, QueryUtil.ALL_POS, orderByComparator)[ FD ]
Line_2 $$ public JournalArticle getDisplayArticleByUrlTitle(long groupId, String urlTitle) throws PortalException -->Line_9 $$ Date now = new Date()[ CD ]
Line_2 $$ public JournalArticle getDisplayArticleByUrlTitle(long groupId, String urlTitle) throws PortalException -->Line_5 $$ articles = journalArticlePersistence.findByG_UT_ST(groupId, urlTitle, WorkflowConstants.STATUS_APPROVED, QueryUtil.ALL_POS, QueryUtil.ALL_POS, orderByComparator)[ CD ]
Line_10 $$ for (JournalArticle article : articles) -->Line_11 $$ Date displayDate = article.getDisplayDate()[ FD ]
Line_3 $$ List<JournalArticle> articles = null-->Line_5 $$ articles = journalArticlePersistence.findByG_UT_ST(groupId, urlTitle, WorkflowConstants.STATUS_APPROVED, QueryUtil.ALL_POS, QueryUtil.ALL_POS, orderByComparator)[ FD ]
Line_13 $$ if ((displayDate != null) && displayDate.before(now) && ((expirationDate == null) || expirationDate.after(now))) -->Line_14 $$ return article[ CD ]
Line_12 $$ Date expirationDate = article.getExpirationDate()-->Line_13 $$ if ((displayDate != null) && displayDate.before(now) && ((expirationDate == null) || expirationDate.after(now))) [ FD ]
Line_9 $$ Date now = new Date()-->Line_13 $$ if ((displayDate != null) && displayDate.before(now) && ((expirationDate == null) || expirationDate.after(now))) [ FD ]
Line_2 $$ public JournalArticle getDisplayArticleByUrlTitle(long groupId, String urlTitle) throws PortalException -->Line_17 $$ return articles.get(0)[ CD ]
Line_4 $$ OrderByComparator<JournalArticle> orderByComparator = new ArticleVersionComparator()-->Line_5 $$ articles = journalArticlePersistence.findByG_UT_ST(groupId, urlTitle, WorkflowConstants.STATUS_APPROVED, QueryUtil.ALL_POS, QueryUtil.ALL_POS, orderByComparator)[ FD ]
Line_2 $$ public JournalArticle getDisplayArticleByUrlTitle(long groupId, String urlTitle) throws PortalException -->Line_3 $$ List<JournalArticle> articles = null[ CD ]
