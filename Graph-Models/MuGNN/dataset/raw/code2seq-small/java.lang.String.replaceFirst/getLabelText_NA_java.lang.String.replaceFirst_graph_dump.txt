Line_30 $$ if (refClass instanceof PsiClass) -->Line_31 $$ PsiElement scope = context[ CD ]
Line_2 $$ public static String getLabelText(Project project, PsiManager manager, String refText, PsiElement context) -->Line_25 $$ String classRef = refText.substring(0, poundIndex).trim()[ FD ]
Line_30 $$ if (refClass instanceof PsiClass) -->Line_32 $$ while (true) [ CD ]
Line_8 $$ if (poundIndex < 0) -->Line_27 $$ String memberLabel = getMemberLabelText(project, manager, memberText, context)[ CD ]
Line_28 $$ if (!classRef.isEmpty()) -->Line_29 $$ PsiElement refClass = findReferenceTarget(manager, classRef, context)[ CD ]
Line_2 $$ public static String getLabelText(Project project, PsiManager manager, String refText, PsiElement context) -->Line_4 $$ if (refElement == null) [ CD ]
Line_8 $$ if (poundIndex < 0) -->Line_15 $$ PsiClass aClass = null[ CD ]
Line_17 $$ aClass = ((PsiField) refElement).getContainingClass()-->Line_19 $$ aClass = ((PsiMethod) refElement).getContainingClass()[ FD ]
Line_32 $$ while (true) -->Line_35 $$ if (scope.equals(refClass)) [ CD ]
Line_2 $$ public static String getLabelText(Project project, PsiManager manager, String refText, PsiElement context) -->Line_8 $$ if (poundIndex < 0) [ CD ]
Line_19 $$ aClass = ((PsiMethod) refElement).getContainingClass()-->Line_23 $$ if (aClass == null)[ FD ]
Line_26 $$ String memberText = refText.substring(poundIndex + 1)-->Line_27 $$ String memberLabel = getMemberLabelText(project, manager, memberText, context)[ FD ]
Line_18 $$ if (refElement instanceof PsiMethod) -->Line_19 $$ aClass = ((PsiMethod) refElement).getContainingClass()[ CD ]
Line_16 $$ if (refElement instanceof PsiField) -->Line_17 $$ aClass = ((PsiField) refElement).getContainingClass()[ CD ]
Line_2 $$ public static String getLabelText(Project project, PsiManager manager, String refText, PsiElement context) -->Line_10 $$ return getShortestClassName((PsiClass) refElement, context)[ FD ]
Line_2 $$ public static String getLabelText(Project project, PsiManager manager, String refText, PsiElement context) -->Line_3 $$ PsiElement refElement = findReferenceTarget(manager, refText, context, false)[ CD ]
Line_15 $$ PsiClass aClass = null-->Line_23 $$ if (aClass == null)[ FD ]
Line_2 $$ public static String getLabelText(Project project, PsiManager manager, String refText, PsiElement context) -->Line_23 $$ if (aClass == null)[ FD ]
Line_3 $$ PsiElement refElement = findReferenceTarget(manager, refText, context, false)-->Line_16 $$ if (refElement instanceof PsiField) [ FD ]
Line_3 $$ PsiElement refElement = findReferenceTarget(manager, refText, context, false)-->Line_18 $$ if (refElement instanceof PsiMethod) [ FD ]
Line_28 $$ if (!classRef.isEmpty()) -->Line_43 $$ return memberLabel[ CD ]
Line_29 $$ PsiElement refClass = findReferenceTarget(manager, classRef, context)-->Line_35 $$ if (scope.equals(refClass)) [ FD ]
Line_8 $$ if (poundIndex < 0) -->Line_28 $$ if (!classRef.isEmpty()) [ CD ]
Line_35 $$ if (scope.equals(refClass)) -->Line_36 $$ return memberLabel[ CD ]
Line_9 $$ if (refElement instanceof PsiClass) -->Line_12 $$ return refText[ CD ]
Line_9 $$ if (refElement instanceof PsiClass) -->Line_10 $$ return getShortestClassName((PsiClass) refElement, context)[ CD ]
Line_17 $$ aClass = ((PsiField) refElement).getContainingClass()-->Line_23 $$ if (aClass == null)[ FD ]
Line_32 $$ while (true) -->Line_33 $$ if (scope == null || scope instanceof PsiFile)[ CD ]
Line_32 $$ while (true) -->Line_38 $$ scope = scope.getParent()[ CD ]
Line_2 $$ public static String getLabelText(Project project, PsiManager manager, String refText, PsiElement context) -->Line_26 $$ String memberText = refText.substring(poundIndex + 1)[ FD ]
Line_8 $$ if (poundIndex < 0) -->Line_26 $$ String memberText = refText.substring(poundIndex + 1)[ CD ]
Line_29 $$ PsiElement refClass = findReferenceTarget(manager, classRef, context)-->Line_30 $$ if (refClass instanceof PsiClass) [ FD ]
Line_8 $$ if (poundIndex < 0) -->Line_25 $$ String classRef = refText.substring(0, poundIndex).trim()[ CD ]
Line_2 $$ public static String getLabelText(Project project, PsiManager manager, String refText, PsiElement context) -->Line_7 $$ int poundIndex = refText.indexOf('#')[ CD ]
Line_3 $$ PsiElement refElement = findReferenceTarget(manager, refText, context, false)-->Line_20 $$ if (refElement instanceof PsiClass) [ FD ]
Line_7 $$ int poundIndex = refText.indexOf('#')-->Line_8 $$ if (poundIndex < 0) [ FD ]
Line_2 $$ public static String getLabelText(Project project, PsiManager manager, String refText, PsiElement context) -->Line_29 $$ PsiElement refClass = findReferenceTarget(manager, classRef, context)[ FD ]
Line_2 $$ public static String getLabelText(Project project, PsiManager manager, String refText, PsiElement context) -->Line_7 $$ int poundIndex = refText.indexOf('#')[ FD ]
Line_3 $$ PsiElement refElement = findReferenceTarget(manager, refText, context, false)-->Line_4 $$ if (refElement == null) [ FD ]
Line_28 $$ if (!classRef.isEmpty()) -->Line_41 $$ return getLabelText(project, manager, classRef, context) + "." + memberLabel[ CD ]
Line_2 $$ public static String getLabelText(Project project, PsiManager manager, String refText, PsiElement context) -->Line_5 $$ return refText.replaceFirst("^#", "").replaceAll("#", ".")[ FD ]
Line_3 $$ PsiElement refElement = findReferenceTarget(manager, refText, context, false)-->Line_9 $$ if (refElement instanceof PsiClass) [ FD ]
Line_15 $$ PsiClass aClass = null-->Line_19 $$ aClass = ((PsiMethod) refElement).getContainingClass()[ FD ]
Line_8 $$ if (poundIndex < 0) -->Line_16 $$ if (refElement instanceof PsiField) [ CD ]
Line_7 $$ int poundIndex = refText.indexOf('#')-->Line_25 $$ String classRef = refText.substring(0, poundIndex).trim()[ FD ]
Line_25 $$ String classRef = refText.substring(0, poundIndex).trim()-->Line_28 $$ if (!classRef.isEmpty()) [ FD ]
Line_2 $$ public static String getLabelText(Project project, PsiManager manager, String refText, PsiElement context) -->Line_27 $$ String memberLabel = getMemberLabelText(project, manager, memberText, context)[ FD ]
Line_31 $$ PsiElement scope = context-->Line_35 $$ if (scope.equals(refClass)) [ FD ]
Line_28 $$ if (!classRef.isEmpty()) -->Line_30 $$ if (refClass instanceof PsiClass) [ CD ]
Line_8 $$ if (poundIndex < 0) -->Line_23 $$ if (aClass == null)[ CD ]
Line_18 $$ if (refElement instanceof PsiMethod) -->Line_20 $$ if (refElement instanceof PsiClass) [ CD ]
Line_4 $$ if (refElement == null) -->Line_5 $$ return refText.replaceFirst("^#", "").replaceAll("#", ".")[ CD ]
Line_8 $$ if (poundIndex < 0) -->Line_9 $$ if (refElement instanceof PsiClass) [ CD ]
Line_15 $$ PsiClass aClass = null-->Line_17 $$ aClass = ((PsiField) refElement).getContainingClass()[ FD ]
Line_2 $$ public static String getLabelText(Project project, PsiManager manager, String refText, PsiElement context) -->Line_3 $$ PsiElement refElement = findReferenceTarget(manager, refText, context, false)[ FD ]
Line_20 $$ if (refElement instanceof PsiClass) -->Line_21 $$ return refText.replaceAll("#", ".")[ CD ]
Line_2 $$ public static String getLabelText(Project project, PsiManager manager, String refText, PsiElement context) -->Line_21 $$ return refText.replaceAll("#", ".")[ FD ]
Line_31 $$ PsiElement scope = context-->Line_38 $$ scope = scope.getParent()[ FD ]
Line_38 $$ scope = scope.getParent()-->Line_35 $$ if (scope.equals(refClass)) [ FD ]
Line_25 $$ String classRef = refText.substring(0, poundIndex).trim()-->Line_41 $$ return getLabelText(project, manager, classRef, context) + "." + memberLabel[ FD ]
Line_25 $$ String classRef = refText.substring(0, poundIndex).trim()-->Line_29 $$ PsiElement refClass = findReferenceTarget(manager, classRef, context)[ FD ]
Line_2 $$ public static String getLabelText(Project project, PsiManager manager, String refText, PsiElement context) -->Line_41 $$ return getLabelText(project, manager, classRef, context) + "." + memberLabel[ FD ]
Line_23 $$ if (aClass == null)-->Line_24 $$ return refText[ CD ]
Line_16 $$ if (refElement instanceof PsiField) -->Line_18 $$ if (refElement instanceof PsiMethod) [ CD ]
