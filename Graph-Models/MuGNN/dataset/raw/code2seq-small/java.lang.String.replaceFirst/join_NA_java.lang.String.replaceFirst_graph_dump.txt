Line_5 $$ if (index >= 0) -->Line_6 $$ if (req.leftElem == req.rightElem && SINGLE_QUOTED_STRINGS.contains(req.leftElem.getNode().getElementType())) [ CD ]
Line_2 $$ public Result join(@NotNull Request req) -->Line_5 $$ if (index >= 0) [ CD ]
Line_6 $$ if (req.leftElem == req.rightElem && SINGLE_QUOTED_STRINGS.contains(req.leftElem.getNode().getElementType())) -->Line_7 $$ return new Result(gap.replaceFirst("\\\\\\n", ""), 0)[ CD ]
Line_2 $$ public Result join(@NotNull Request req) -->Line_3 $$ final String gap = req.document.getText(new TextRange(req.firstLineEndOffset + 1, req.secondLineStartOffset))[ CD ]
Line_3 $$ final String gap = req.document.getText(new TextRange(req.firstLineEndOffset + 1, req.secondLineStartOffset))-->Line_7 $$ return new Result(gap.replaceFirst("\\\\\\n", ""), 0)[ FD ]
Line_4 $$ final int index = gap.indexOf('\\')-->Line_9 $$ return new Result(gap.substring(0, index), 0)[ FD ]
Line_2 $$ public Result join(@NotNull Request req) -->Line_12 $$ return null[ CD ]
Line_3 $$ final String gap = req.document.getText(new TextRange(req.firstLineEndOffset + 1, req.secondLineStartOffset))-->Line_9 $$ return new Result(gap.substring(0, index), 0)[ FD ]
Line_4 $$ final int index = gap.indexOf('\\')-->Line_5 $$ if (index >= 0) [ FD ]
Line_6 $$ if (req.leftElem == req.rightElem && SINGLE_QUOTED_STRINGS.contains(req.leftElem.getNode().getElementType())) -->Line_9 $$ return new Result(gap.substring(0, index), 0)[ CD ]
Line_3 $$ final String gap = req.document.getText(new TextRange(req.firstLineEndOffset + 1, req.secondLineStartOffset))-->Line_4 $$ final int index = gap.indexOf('\\')[ FD ]
Line_2 $$ public Result join(@NotNull Request req) -->Line_4 $$ final int index = gap.indexOf('\\')[ CD ]
