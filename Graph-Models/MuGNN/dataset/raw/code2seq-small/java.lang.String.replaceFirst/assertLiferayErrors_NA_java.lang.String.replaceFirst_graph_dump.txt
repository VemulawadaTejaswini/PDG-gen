Line_13 $$ content = content.replaceAll("log4j:", "")-->Line_14 $$ Document document = UnsecureSAXReaderUtil.read(content, true)[ FD ]
Line_29 $$ Exception exception = null-->Line_36 $$ addToLiferayExceptions(exception)[ FD ]
Line_2 $$ public static void assertLiferayErrors() throws Exception -->Line_4 $$ String fileName = PropsValues.LIFERAY_HOME + "/logs/liferay." + currentDate + ".xml"[ CD ]
Line_29 $$ Exception exception = null-->Line_35 $$ exception = new Exception(messageText)[ FD ]
Line_2 $$ public static void assertLiferayErrors() throws Exception -->Line_14 $$ Document document = UnsecureSAXReaderUtil.read(content, true)[ CD ]
Line_2 $$ public static void assertLiferayErrors() throws Exception -->Line_12 $$ content = "<log4j>" + content + "</log4j>"[ CD ]
Line_20 $$ String fileContent = FileUtil.read(fileName)-->Line_22 $$ FileUtil.write(fileName, fileContent)[ FD ]
Line_5 $$ if (!FileUtil.exists(fileName)) -->Line_6 $$ return[ CD ]
Line_2 $$ public static void assertLiferayErrors() throws Exception -->Line_8 $$ String content = FileUtil.read(fileName)[ CD ]
Line_2 $$ public static void assertLiferayErrors() throws Exception -->Line_5 $$ if (!FileUtil.exists(fileName)) [ CD ]
Line_19 $$ if (level.equals("ERROR")) -->Line_20 $$ String fileContent = FileUtil.read(fileName)[ CD ]
Line_20 $$ String fileContent = FileUtil.read(fileName)-->Line_21 $$ fileContent = fileContent.replaceFirst("level=\"ERROR\"", "level=\"ERROR_FOUND\"")[ FD ]
Line_28 $$ Element throwableElement = eventElement.element("throwable")-->Line_31 $$ exception = new Exception(messageText + throwableElement.getText())[ FD ]
Line_18 $$ String level = eventElement.attributeValue("level")-->Line_19 $$ if (level.equals("ERROR")) [ FD ]
Line_19 $$ if (level.equals("ERROR")) -->Line_30 $$ if (throwableElement != null) [ CD ]
Line_2 $$ public static void assertLiferayErrors() throws Exception -->Line_9 $$ if (content.equals("")) [ CD ]
Line_19 $$ if (level.equals("ERROR")) -->Line_36 $$ addToLiferayExceptions(exception)[ CD ]
Line_19 $$ if (level.equals("ERROR")) -->Line_25 $$ if (isIgnorableErrorLine(messageText)) [ CD ]
Line_23 $$ Element messageElement = eventElement.element("message")-->Line_24 $$ String messageText = messageElement.getText()[ FD ]
Line_4 $$ String fileName = PropsValues.LIFERAY_HOME + "/logs/liferay." + currentDate + ".xml"-->Line_5 $$ if (!FileUtil.exists(fileName)) [ FD ]
Line_9 $$ if (content.equals("")) -->Line_10 $$ return[ CD ]
Line_12 $$ content = "<log4j>" + content + "</log4j>"-->Line_13 $$ content = content.replaceAll("log4j:", "")[ FD ]
Line_19 $$ if (level.equals("ERROR")) -->Line_29 $$ Exception exception = null[ CD ]
Line_28 $$ Element throwableElement = eventElement.element("throwable")-->Line_30 $$ if (throwableElement != null) [ FD ]
Line_2 $$ public static void assertLiferayErrors() throws Exception -->Line_13 $$ content = content.replaceAll("log4j:", "")[ CD ]
Line_8 $$ String content = FileUtil.read(fileName)-->Line_14 $$ Document document = UnsecureSAXReaderUtil.read(content, true)[ FD ]
Line_19 $$ if (level.equals("ERROR")) -->Line_24 $$ String messageText = messageElement.getText()[ CD ]
Line_17 $$ for (Element eventElement : eventElements) -->Line_28 $$ Element throwableElement = eventElement.element("throwable")[ FD ]
Line_8 $$ String content = FileUtil.read(fileName)-->Line_9 $$ if (content.equals("")) [ FD ]
Line_21 $$ fileContent = fileContent.replaceFirst("level=\"ERROR\"", "level=\"ERROR_FOUND\"")-->Line_22 $$ FileUtil.write(fileName, fileContent)[ FD ]
Line_30 $$ if (throwableElement != null) -->Line_32 $$ addToLiferayExceptions(exception)[ CD ]
Line_29 $$ Exception exception = null-->Line_32 $$ addToLiferayExceptions(exception)[ FD ]
Line_8 $$ String content = FileUtil.read(fileName)-->Line_13 $$ content = content.replaceAll("log4j:", "")[ FD ]
Line_17 $$ for (Element eventElement : eventElements) -->Line_18 $$ String level = eventElement.attributeValue("level")[ FD ]
Line_29 $$ Exception exception = null-->Line_31 $$ exception = new Exception(messageText + throwableElement.getText())[ FD ]
Line_31 $$ exception = new Exception(messageText + throwableElement.getText())-->Line_32 $$ addToLiferayExceptions(exception)[ FD ]
Line_4 $$ String fileName = PropsValues.LIFERAY_HOME + "/logs/liferay." + currentDate + ".xml"-->Line_22 $$ FileUtil.write(fileName, fileContent)[ FD ]
Line_17 $$ for (Element eventElement : eventElements) -->Line_23 $$ Element messageElement = eventElement.element("message")[ FD ]
Line_31 $$ exception = new Exception(messageText + throwableElement.getText())-->Line_35 $$ exception = new Exception(messageText)[ FD ]
Line_19 $$ if (level.equals("ERROR")) -->Line_21 $$ fileContent = fileContent.replaceFirst("level=\"ERROR\"", "level=\"ERROR_FOUND\"")[ CD ]
Line_2 $$ public static void assertLiferayErrors() throws Exception -->Line_16 $$ List<Element> eventElements = rootElement.elements("event")[ CD ]
Line_30 $$ if (throwableElement != null) -->Line_31 $$ exception = new Exception(messageText + throwableElement.getText())[ CD ]
Line_15 $$ Element rootElement = document.getRootElement()-->Line_16 $$ List<Element> eventElements = rootElement.elements("event")[ FD ]
Line_19 $$ if (level.equals("ERROR")) -->Line_23 $$ Element messageElement = eventElement.element("message")[ CD ]
Line_4 $$ String fileName = PropsValues.LIFERAY_HOME + "/logs/liferay." + currentDate + ".xml"-->Line_8 $$ String content = FileUtil.read(fileName)[ FD ]
Line_24 $$ String messageText = messageElement.getText()-->Line_25 $$ if (isIgnorableErrorLine(messageText)) [ FD ]
Line_2 $$ public static void assertLiferayErrors() throws Exception -->Line_15 $$ Element rootElement = document.getRootElement()[ CD ]
Line_14 $$ Document document = UnsecureSAXReaderUtil.read(content, true)-->Line_15 $$ Element rootElement = document.getRootElement()[ FD ]
Line_31 $$ exception = new Exception(messageText + throwableElement.getText())-->Line_36 $$ addToLiferayExceptions(exception)[ FD ]
Line_12 $$ content = "<log4j>" + content + "</log4j>"-->Line_14 $$ Document document = UnsecureSAXReaderUtil.read(content, true)[ FD ]
Line_2 $$ public static void assertLiferayErrors() throws Exception -->Line_3 $$ String currentDate = DateUtil.getCurrentDate("yyyy-MM-dd", LocaleUtil.getDefault())[ CD ]
Line_19 $$ if (level.equals("ERROR")) -->Line_28 $$ Element throwableElement = eventElement.element("throwable")[ CD ]
Line_35 $$ exception = new Exception(messageText)-->Line_36 $$ addToLiferayExceptions(exception)[ FD ]
Line_19 $$ if (level.equals("ERROR")) -->Line_22 $$ FileUtil.write(fileName, fileContent)[ CD ]
Line_19 $$ if (level.equals("ERROR")) -->Line_35 $$ exception = new Exception(messageText)[ CD ]
Line_4 $$ String fileName = PropsValues.LIFERAY_HOME + "/logs/liferay." + currentDate + ".xml"-->Line_20 $$ String fileContent = FileUtil.read(fileName)[ FD ]
Line_8 $$ String content = FileUtil.read(fileName)-->Line_12 $$ content = "<log4j>" + content + "</log4j>"[ FD ]
