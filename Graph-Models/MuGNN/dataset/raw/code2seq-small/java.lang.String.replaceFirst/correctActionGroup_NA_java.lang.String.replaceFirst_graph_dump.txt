Line_2 $$ public static ActionGroup correctActionGroup(final ActionGroup group, final CustomActionsSchema schema, final String defaultGroupName, final String rootGroupName) -->Line_6 $$ String text = group.getTemplatePresentation().getText()[ FD ]
Line_7 $$ final int mnemonic = group.getTemplatePresentation().getMnemonic()-->Line_10 $$ if (Character.toUpperCase(text.charAt(i)) == mnemonic) [ FD ]
Line_2 $$ public static ActionGroup correctActionGroup(final ActionGroup group, final CustomActionsSchema schema, final String defaultGroupName, final String rootGroupName) -->Line_7 $$ final int mnemonic = group.getTemplatePresentation().getMnemonic()[ FD ]
Line_2 $$ public static ActionGroup correctActionGroup(final ActionGroup group, final CustomActionsSchema schema, final String defaultGroupName, final String rootGroupName) -->Line_7 $$ final int mnemonic = group.getTemplatePresentation().getMnemonic()[ CD ]
Line_9 $$ for (int i = 0; i < text.length(); i++) -->Line_10 $$ if (Character.toUpperCase(text.charAt(i)) == mnemonic) [ CD ]
Line_11 $$ text = text.replaceFirst(String.valueOf(text.charAt(i)), "_" + text.charAt(i))-->Line_10 $$ if (Character.toUpperCase(text.charAt(i)) == mnemonic) [ FD ]
Line_11 $$ text = text.replaceFirst(String.valueOf(text.charAt(i)), "_" + text.charAt(i))-->Line_9 $$ for (int i = 0; i < text.length(); i++) [ FD ]
Line_6 $$ String text = group.getTemplatePresentation().getText()-->Line_9 $$ for (int i = 0; i < text.length(); i++) [ FD ]
Line_6 $$ String text = group.getTemplatePresentation().getText()-->Line_11 $$ text = text.replaceFirst(String.valueOf(text.charAt(i)), "_" + text.charAt(i))[ FD ]
Line_2 $$ public static ActionGroup correctActionGroup(final ActionGroup group, final CustomActionsSchema schema, final String defaultGroupName, final String rootGroupName) -->Line_8 $$ if (text != null) [ CD ]
Line_6 $$ String text = group.getTemplatePresentation().getText()-->Line_10 $$ if (Character.toUpperCase(text.charAt(i)) == mnemonic) [ FD ]
Line_9 $$ for (int i = 0; i < text.length(); i++) -->Line_11 $$ text = text.replaceFirst(String.valueOf(text.charAt(i)), "_" + text.charAt(i))[ FD ]
Line_10 $$ if (Character.toUpperCase(text.charAt(i)) == mnemonic) -->Line_11 $$ text = text.replaceFirst(String.valueOf(text.charAt(i)), "_" + text.charAt(i))[ CD ]
Line_9 $$ for (int i = 0; i < text.length(); i++) -->Line_10 $$ if (Character.toUpperCase(text.charAt(i)) == mnemonic) [ FD ]
Line_6 $$ String text = group.getTemplatePresentation().getText()-->Line_8 $$ if (text != null) [ FD ]
Line_2 $$ public static ActionGroup correctActionGroup(final ActionGroup group, final CustomActionsSchema schema, final String defaultGroupName, final String rootGroupName) -->Line_16 $$ return new CustomisedActionGroup(text, group.isPopup(), group, schema, defaultGroupName, rootGroupName)[ CD ]
Line_2 $$ public static ActionGroup correctActionGroup(final ActionGroup group, final CustomActionsSchema schema, final String defaultGroupName, final String rootGroupName) -->Line_16 $$ return new CustomisedActionGroup(text, group.isPopup(), group, schema, defaultGroupName, rootGroupName)[ FD ]
Line_2 $$ public static ActionGroup correctActionGroup(final ActionGroup group, final CustomActionsSchema schema, final String defaultGroupName, final String rootGroupName) -->Line_3 $$ if (!schema.isCorrectActionGroup(group, defaultGroupName)) [ FD ]
Line_2 $$ public static ActionGroup correctActionGroup(final ActionGroup group, final CustomActionsSchema schema, final String defaultGroupName, final String rootGroupName) -->Line_6 $$ String text = group.getTemplatePresentation().getText()[ CD ]
Line_2 $$ public static ActionGroup correctActionGroup(final ActionGroup group, final CustomActionsSchema schema, final String defaultGroupName, final String rootGroupName) -->Line_3 $$ if (!schema.isCorrectActionGroup(group, defaultGroupName)) [ CD ]
Line_8 $$ if (text != null) -->Line_9 $$ for (int i = 0; i < text.length(); i++) [ CD ]
Line_3 $$ if (!schema.isCorrectActionGroup(group, defaultGroupName)) -->Line_4 $$ return group[ CD ]
