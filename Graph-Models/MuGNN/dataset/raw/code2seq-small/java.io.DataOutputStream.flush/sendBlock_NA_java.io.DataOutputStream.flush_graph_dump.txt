Line_23 $$ maxChunksPerPacket = numberOfChunks(TRANSFERTO_BUFFER_SIZE)-->Line_39 $$ sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)[ FD ]
Line_29 $$ ByteBuffer pktBuf = ByteBuffer.allocate(pktBufSize)-->Line_32 $$ long len = sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)[ FD ]
Line_8 $$ OutputStream streamForSendChunks = out-->Line_32 $$ long len = sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)[ FD ]
Line_16 $$ int maxChunksPerPacket-->Line_23 $$ maxChunksPerPacket = numberOfChunks(TRANSFERTO_BUFFER_SIZE)[ FD ]
Line_17 $$ int pktBufSize = PacketHeader.PKT_MAX_HEADER_LEN-->Line_29 $$ ByteBuffer pktBuf = ByteBuffer.allocate(pktBufSize)[ FD ]
Line_26 $$ maxChunksPerPacket = Math.max(1, numberOfChunks(HdfsConstants.IO_FILE_BUFFER_SIZE))-->Line_32 $$ long len = sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)[ FD ]
Line_34 $$ totalRead += len + (numberOfChunks(len) * checksumSize)-->Line_49 $$ ClientTraceLog.debug(String.format(clientTraceFmt, totalRead, initialOffset, endTime - startTime))[ FD ]
Line_16 $$ int maxChunksPerPacket-->Line_27 $$ pktBufSize += (chunkSize + checksumSize) * maxChunksPerPacket[ FD ]
Line_27 $$ pktBufSize += (chunkSize + checksumSize) * maxChunksPerPacket-->Line_29 $$ ByteBuffer pktBuf = ByteBuffer.allocate(pktBufSize)[ FD ]
Line_22 $$ streamForSendChunks = baseStream-->Line_32 $$ long len = sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)[ FD ]
Line_26 $$ maxChunksPerPacket = Math.max(1, numberOfChunks(HdfsConstants.IO_FILE_BUFFER_SIZE))-->Line_27 $$ pktBufSize += (chunkSize + checksumSize) * maxChunksPerPacket[ FD ]
Line_7 $$ long totalRead = 0-->Line_34 $$ totalRead += len + (numberOfChunks(len) * checksumSize)[ FD ]
Line_19 $$ if (transferTo) -->Line_22 $$ streamForSendChunks = baseStream[ CD ]
Line_16 $$ int maxChunksPerPacket-->Line_24 $$ pktBufSize += checksumSize * maxChunksPerPacket[ FD ]
Line_23 $$ maxChunksPerPacket = numberOfChunks(TRANSFERTO_BUFFER_SIZE)-->Line_27 $$ pktBufSize += (chunkSize + checksumSize) * maxChunksPerPacket[ FD ]
Line_2 $$ long sendBlock(DataOutputStream out, OutputStream baseStream, DataTransferThrottler throttler) throws IOException -->Line_39 $$ sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)[ FD ]
Line_30 $$ while (endOffset > offset && !Thread.currentThread().isInterrupted()) -->Line_32 $$ long len = sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)[ CD ]
Line_17 $$ int pktBufSize = PacketHeader.PKT_MAX_HEADER_LEN-->Line_24 $$ pktBufSize += checksumSize * maxChunksPerPacket[ FD ]
Line_30 $$ while (endOffset > offset && !Thread.currentThread().isInterrupted()) -->Line_31 $$ manageOsCache()[ CD ]
Line_19 $$ if (transferTo) -->Line_23 $$ maxChunksPerPacket = numberOfChunks(TRANSFERTO_BUFFER_SIZE)[ CD ]
Line_24 $$ pktBufSize += checksumSize * maxChunksPerPacket-->Line_29 $$ ByteBuffer pktBuf = ByteBuffer.allocate(pktBufSize)[ FD ]
Line_23 $$ maxChunksPerPacket = numberOfChunks(TRANSFERTO_BUFFER_SIZE)-->Line_26 $$ maxChunksPerPacket = Math.max(1, numberOfChunks(HdfsConstants.IO_FILE_BUFFER_SIZE))[ FD ]
Line_19 $$ if (transferTo) -->Line_24 $$ pktBufSize += checksumSize * maxChunksPerPacket[ CD ]
Line_2 $$ long sendBlock(DataOutputStream out, OutputStream baseStream, DataTransferThrottler throttler) throws IOException -->Line_22 $$ streamForSendChunks = baseStream[ FD ]
Line_19 $$ if (transferTo) -->Line_27 $$ pktBufSize += (chunkSize + checksumSize) * maxChunksPerPacket[ CD ]
Line_16 $$ int maxChunksPerPacket-->Line_32 $$ long len = sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)[ FD ]
Line_18 $$ boolean transferTo = transferToAllowed && !verifyChecksum && baseStream instanceof SocketOutputStream && blockIn instanceof FileInputStream-->Line_32 $$ long len = sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)[ FD ]
Line_2 $$ long sendBlock(DataOutputStream out, OutputStream baseStream, DataTransferThrottler throttler) throws IOException -->Line_32 $$ long len = sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)[ FD ]
Line_47 $$ if ((clientTraceFmt != null) && ClientTraceLog.isDebugEnabled()) -->Line_49 $$ ClientTraceLog.debug(String.format(clientTraceFmt, totalRead, initialOffset, endTime - startTime))[ CD ]
Line_2 $$ long sendBlock(DataOutputStream out, OutputStream baseStream, DataTransferThrottler throttler) throws IOException -->Line_53 $$ return totalRead[ CD ]
Line_22 $$ streamForSendChunks = baseStream-->Line_39 $$ sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)[ FD ]
Line_8 $$ OutputStream streamForSendChunks = out-->Line_39 $$ sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)[ FD ]
Line_29 $$ ByteBuffer pktBuf = ByteBuffer.allocate(pktBufSize)-->Line_39 $$ sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)[ FD ]
Line_23 $$ maxChunksPerPacket = numberOfChunks(TRANSFERTO_BUFFER_SIZE)-->Line_32 $$ long len = sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)[ FD ]
Line_7 $$ long totalRead = 0-->Line_49 $$ ClientTraceLog.debug(String.format(clientTraceFmt, totalRead, initialOffset, endTime - startTime))[ FD ]
Line_17 $$ int pktBufSize = PacketHeader.PKT_MAX_HEADER_LEN-->Line_27 $$ pktBufSize += (chunkSize + checksumSize) * maxChunksPerPacket[ FD ]
Line_16 $$ int maxChunksPerPacket-->Line_26 $$ maxChunksPerPacket = Math.max(1, numberOfChunks(HdfsConstants.IO_FILE_BUFFER_SIZE))[ FD ]
Line_2 $$ long sendBlock(DataOutputStream out, OutputStream baseStream, DataTransferThrottler throttler) throws IOException -->Line_8 $$ OutputStream streamForSendChunks = out[ CD ]
Line_32 $$ long len = sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)-->Line_34 $$ totalRead += len + (numberOfChunks(len) * checksumSize)[ FD ]
Line_8 $$ OutputStream streamForSendChunks = out-->Line_22 $$ streamForSendChunks = baseStream[ FD ]
Line_20 $$ FileChannel fileChannel = ((FileInputStream) blockIn).getChannel()-->Line_21 $$ blockInPosition = fileChannel.position()[ FD ]
Line_2 $$ long sendBlock(DataOutputStream out, OutputStream baseStream, DataTransferThrottler throttler) throws IOException -->Line_13 $$ manageOsCache()[ CD ]
Line_18 $$ boolean transferTo = transferToAllowed && !verifyChecksum && baseStream instanceof SocketOutputStream && blockIn instanceof FileInputStream-->Line_39 $$ sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)[ FD ]
Line_2 $$ long sendBlock(DataOutputStream out, OutputStream baseStream, DataTransferThrottler throttler) throws IOException -->Line_40 $$ out.flush()[ FD ]
Line_2 $$ long sendBlock(DataOutputStream out, OutputStream baseStream, DataTransferThrottler throttler) throws IOException -->Line_10 $$ if (isLongRead() && blockInFd != null) [ CD ]
Line_26 $$ maxChunksPerPacket = Math.max(1, numberOfChunks(HdfsConstants.IO_FILE_BUFFER_SIZE))-->Line_39 $$ sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)[ FD ]
Line_2 $$ long sendBlock(DataOutputStream out, OutputStream baseStream, DataTransferThrottler throttler) throws IOException -->Line_14 $$ final long startTime = ClientTraceLog.isDebugEnabled() ? System.nanoTime() : 0[ CD ]
Line_19 $$ if (transferTo) -->Line_26 $$ maxChunksPerPacket = Math.max(1, numberOfChunks(HdfsConstants.IO_FILE_BUFFER_SIZE))[ CD ]
Line_23 $$ maxChunksPerPacket = numberOfChunks(TRANSFERTO_BUFFER_SIZE)-->Line_24 $$ pktBufSize += checksumSize * maxChunksPerPacket[ FD ]
Line_19 $$ if (transferTo) -->Line_21 $$ blockInPosition = fileChannel.position()[ CD ]
Line_24 $$ pktBufSize += checksumSize * maxChunksPerPacket-->Line_27 $$ pktBufSize += (chunkSize + checksumSize) * maxChunksPerPacket[ FD ]
Line_47 $$ if ((clientTraceFmt != null) && ClientTraceLog.isDebugEnabled()) -->Line_48 $$ final long endTime = System.nanoTime()[ CD ]
Line_16 $$ int maxChunksPerPacket-->Line_39 $$ sendPacket(pktBuf, maxChunksPerPacket, streamForSendChunks, transferTo, throttler)[ FD ]
Line_2 $$ long sendBlock(DataOutputStream out, OutputStream baseStream, DataTransferThrottler throttler) throws IOException -->Line_3 $$ if (out == null) [ FD ]
Line_2 $$ long sendBlock(DataOutputStream out, OutputStream baseStream, DataTransferThrottler throttler) throws IOException -->Line_7 $$ long totalRead = 0[ CD ]
Line_19 $$ if (transferTo) -->Line_20 $$ FileChannel fileChannel = ((FileInputStream) blockIn).getChannel()[ CD ]
Line_2 $$ long sendBlock(DataOutputStream out, OutputStream baseStream, DataTransferThrottler throttler) throws IOException -->Line_3 $$ if (out == null) [ CD ]
Line_30 $$ while (endOffset > offset && !Thread.currentThread().isInterrupted()) -->Line_34 $$ totalRead += len + (numberOfChunks(len) * checksumSize)[ CD ]
Line_10 $$ if (isLongRead() && blockInFd != null) -->Line_11 $$ NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(block.getBlockName(), blockInFd, 0, 0, NativeIO.POSIX.POSIX_FADV_SEQUENTIAL)[ CD ]
