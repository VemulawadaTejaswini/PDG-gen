Line_2 $$ private int dumpTypedBytes(List<FileStatus> files) throws IOException -->Line_3 $$ JobConf job = new JobConf(getConf())[ CD ]
Line_5 $$ AutoInputFormat autoInputFormat = new AutoInputFormat()-->Line_10 $$ recReader = autoInputFormat.getRecordReader(split, job, Reporter.NULL)[ FD ]
Line_10 $$ recReader = autoInputFormat.getRecordReader(split, job, Reporter.NULL)-->Line_27 $$ recReader.close()[ FD ]
Line_10 $$ recReader = autoInputFormat.getRecordReader(split, job, Reporter.NULL)-->Line_12 $$ Object value = recReader.createValue()[ FD ]
Line_13 $$ while (recReader.next(key, value)) -->Line_14 $$ if (key instanceof Writable) [ CD ]
Line_3 $$ JobConf job = new JobConf(getConf())-->Line_10 $$ recReader = autoInputFormat.getRecordReader(split, job, Reporter.NULL)[ FD ]
Line_10 $$ recReader = autoInputFormat.getRecordReader(split, job, Reporter.NULL)-->Line_13 $$ while (recReader.next(key, value)) [ FD ]
Line_8 $$ RecordReader recReader = null-->Line_11 $$ Object key = recReader.createKey()[ FD ]
Line_8 $$ RecordReader recReader = null-->Line_12 $$ Object value = recReader.createValue()[ FD ]
Line_11 $$ Object key = recReader.createKey()-->Line_17 $$ TypedBytesOutput.get(dout).write(key)[ FD ]
Line_12 $$ Object value = recReader.createValue()-->Line_19 $$ if (value instanceof Writable) [ FD ]
Line_8 $$ RecordReader recReader = null-->Line_10 $$ recReader = autoInputFormat.getRecordReader(split, job, Reporter.NULL)[ FD ]
Line_6 $$ for (FileStatus fileStatus : files) -->Line_7 $$ FileSplit split = new FileSplit(fileStatus.getPath(), 0, fileStatus.getLen() * fileStatus.getBlockSize(), (String[]) null)[ FD ]
Line_4 $$ DataOutputStream dout = new DataOutputStream(System.out)-->Line_20 $$ TypedBytesWritableOutput.get(dout).write((Writable) value)[ FD ]
Line_2 $$ private int dumpTypedBytes(List<FileStatus> files) throws IOException -->Line_31 $$ dout.flush()[ CD ]
Line_4 $$ DataOutputStream dout = new DataOutputStream(System.out)-->Line_17 $$ TypedBytesOutput.get(dout).write(key)[ FD ]
Line_26 $$ if (recReader != null) -->Line_27 $$ recReader.close()[ CD ]
Line_10 $$ recReader = autoInputFormat.getRecordReader(split, job, Reporter.NULL)-->Line_26 $$ if (recReader != null) [ FD ]
Line_19 $$ if (value instanceof Writable) -->Line_20 $$ TypedBytesWritableOutput.get(dout).write((Writable) value)[ CD ]
Line_4 $$ DataOutputStream dout = new DataOutputStream(System.out)-->Line_31 $$ dout.flush()[ FD ]
Line_12 $$ Object value = recReader.createValue()-->Line_13 $$ while (recReader.next(key, value)) [ FD ]
Line_8 $$ RecordReader recReader = null-->Line_13 $$ while (recReader.next(key, value)) [ FD ]
Line_11 $$ Object key = recReader.createKey()-->Line_14 $$ if (key instanceof Writable) [ FD ]
Line_8 $$ RecordReader recReader = null-->Line_27 $$ recReader.close()[ FD ]
Line_11 $$ Object key = recReader.createKey()-->Line_13 $$ while (recReader.next(key, value)) [ FD ]
Line_4 $$ DataOutputStream dout = new DataOutputStream(System.out)-->Line_22 $$ TypedBytesOutput.get(dout).write(value)[ FD ]
Line_2 $$ private int dumpTypedBytes(List<FileStatus> files) throws IOException -->Line_32 $$ return 0[ CD ]
Line_7 $$ FileSplit split = new FileSplit(fileStatus.getPath(), 0, fileStatus.getLen() * fileStatus.getBlockSize(), (String[]) null)-->Line_10 $$ recReader = autoInputFormat.getRecordReader(split, job, Reporter.NULL)[ FD ]
Line_19 $$ if (value instanceof Writable) -->Line_22 $$ TypedBytesOutput.get(dout).write(value)[ CD ]
Line_12 $$ Object value = recReader.createValue()-->Line_22 $$ TypedBytesOutput.get(dout).write(value)[ FD ]
Line_4 $$ DataOutputStream dout = new DataOutputStream(System.out)-->Line_15 $$ TypedBytesWritableOutput.get(dout).write((Writable) key)[ FD ]
Line_13 $$ while (recReader.next(key, value)) -->Line_19 $$ if (value instanceof Writable) [ CD ]
Line_2 $$ private int dumpTypedBytes(List<FileStatus> files) throws IOException -->Line_4 $$ DataOutputStream dout = new DataOutputStream(System.out)[ CD ]
Line_2 $$ private int dumpTypedBytes(List<FileStatus> files) throws IOException -->Line_5 $$ AutoInputFormat autoInputFormat = new AutoInputFormat()[ CD ]
Line_8 $$ RecordReader recReader = null-->Line_26 $$ if (recReader != null) [ FD ]
Line_14 $$ if (key instanceof Writable) -->Line_15 $$ TypedBytesWritableOutput.get(dout).write((Writable) key)[ CD ]
Line_10 $$ recReader = autoInputFormat.getRecordReader(split, job, Reporter.NULL)-->Line_11 $$ Object key = recReader.createKey()[ FD ]
Line_14 $$ if (key instanceof Writable) -->Line_17 $$ TypedBytesOutput.get(dout).write(key)[ CD ]
