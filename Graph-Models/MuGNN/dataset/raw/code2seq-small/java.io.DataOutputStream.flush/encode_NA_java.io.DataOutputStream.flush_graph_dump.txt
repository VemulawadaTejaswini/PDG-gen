Line_2 $$ private static byte[] encode(long lockId) throws IOException -->Line_3 $$ ByteArrayOutputStream packet = new ByteArrayOutputStream()[ CD ]
Line_4 $$ DataOutputStream dataOutput = new DataOutputStream(packet)-->Line_6 $$ dataOutput.writeLong(lockId)[ FD ]
Line_2 $$ private static byte[] encode(long lockId) throws IOException -->Line_8 $$ return packet.toByteArray()[ CD ]
Line_4 $$ DataOutputStream dataOutput = new DataOutputStream(packet)-->Line_5 $$ dataOutput.writeByte(PROTOCOL_VERSION)[ FD ]
Line_3 $$ ByteArrayOutputStream packet = new ByteArrayOutputStream()-->Line_8 $$ return packet.toByteArray()[ FD ]
Line_2 $$ private static byte[] encode(long lockId) throws IOException -->Line_5 $$ dataOutput.writeByte(PROTOCOL_VERSION)[ CD ]
Line_2 $$ private static byte[] encode(long lockId) throws IOException -->Line_7 $$ dataOutput.flush()[ CD ]
Line_4 $$ DataOutputStream dataOutput = new DataOutputStream(packet)-->Line_7 $$ dataOutput.flush()[ FD ]
Line_2 $$ private static byte[] encode(long lockId) throws IOException -->Line_6 $$ dataOutput.writeLong(lockId)[ CD ]
Line_2 $$ private static byte[] encode(long lockId) throws IOException -->Line_4 $$ DataOutputStream dataOutput = new DataOutputStream(packet)[ CD ]
Line_2 $$ private static byte[] encode(long lockId) throws IOException -->Line_6 $$ dataOutput.writeLong(lockId)[ FD ]
