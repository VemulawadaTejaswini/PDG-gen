Line_3 $$ DataOutputStream dataOut = new DataOutputStream(out)-->Line_13 $$ writeActions(dataOut, myActions)[ FD ]
Line_3 $$ DataOutputStream dataOut = new DataOutputStream(out)-->Line_6 $$ dataOut.writeUTF(myNewBuild)[ FD ]
Line_3 $$ DataOutputStream dataOut = new DataOutputStream(out)-->Line_8 $$ dataOut.writeBoolean(myIsBinary)[ FD ]
Line_3 $$ DataOutputStream dataOut = new DataOutputStream(out)-->Line_11 $$ writeMap(dataOut, myWarnings)[ FD ]
Line_2 $$ public void write(OutputStream out) throws IOException -->Line_3 $$ DataOutputStream dataOut = new DataOutputStream(out)[ CD ]
Line_3 $$ DataOutputStream dataOut = new DataOutputStream(out)-->Line_7 $$ dataOut.writeUTF(myRoot)[ FD ]
Line_3 $$ DataOutputStream dataOut = new DataOutputStream(out)-->Line_9 $$ dataOut.writeBoolean(myIsStrict)[ FD ]
Line_3 $$ DataOutputStream dataOut = new DataOutputStream(out)-->Line_5 $$ dataOut.writeUTF(myOldBuild)[ FD ]
Line_3 $$ DataOutputStream dataOut = new DataOutputStream(out)-->Line_10 $$ dataOut.writeBoolean(myIsNormalized)[ FD ]
Line_3 $$ DataOutputStream dataOut = new DataOutputStream(out)-->Line_12 $$ writeList(dataOut, myDeleteFiles)[ FD ]
Line_3 $$ DataOutputStream dataOut = new DataOutputStream(out)-->Line_15 $$ dataOut.flush()[ FD ]
