Line_2 $$ public static void main(String[] args) -->Line_3 $$ final int portNumber = Integer.parseInt(args[0])[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ final String pathToProject = new File(args[1]).getAbsolutePath()[ CD ]
Line_7 $$ Socket socket = new Socket(lba, portNumber)-->Line_8 $$ socket.setSoTimeout(300)[ FD ]
Line_15 $$ if (response.equals("ok")) -->Line_16 $$ System.err.println("Activated.")[ CD ]
Line_10 $$ DataOutputStream out = new DataOutputStream(socket.getOutputStream())-->Line_20 $$ out.close()[ FD ]
Line_7 $$ Socket socket = new Socket(lba, portNumber)-->Line_10 $$ DataOutputStream out = new DataOutputStream(socket.getOutputStream())[ FD ]
Line_7 $$ Socket socket = new Socket(lba, portNumber)-->Line_21 $$ socket.close()[ FD ]
Line_7 $$ Socket socket = new Socket(lba, portNumber)-->Line_9 $$ DataInputStream in = new DataInputStream(socket.getInputStream())[ FD ]
Line_9 $$ DataInputStream in = new DataInputStream(socket.getInputStream())-->Line_19 $$ in.close()[ FD ]
Line_10 $$ DataOutputStream out = new DataOutputStream(socket.getOutputStream())-->Line_13 $$ out.flush()[ FD ]
Line_14 $$ String response = in.readUTF()-->Line_15 $$ if (response.equals("ok")) [ FD ]
Line_10 $$ DataOutputStream out = new DataOutputStream(socket.getOutputStream())-->Line_12 $$ out.writeUTF(ACTIVATE_COMMAND + new File(".").getAbsolutePath() + "\0" + "reopen" + "\0" + pathToProject)[ FD ]
Line_9 $$ DataInputStream in = new DataInputStream(socket.getInputStream())-->Line_14 $$ String response = in.readUTF()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ final InetAddress lba = getLoopbackAddress()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_25 $$ System.err.println("Activation failed")[ CD ]
