Line_2 $$ public static BlockOpResponseProto transferRbw(final ExtendedBlock b, final DFSClient dfsClient, final DatanodeInfo... datanodes) throws IOException -->Line_8 $$ new Sender(out).transferBlock(b, new Token<BlockTokenIdentifier>(), dfsClient.clientName, new DatanodeInfo[] [ CD ]
Line_2 $$ public static BlockOpResponseProto transferRbw(final ExtendedBlock b, final DFSClient dfsClient, final DatanodeInfo... datanodes) throws IOException -->Line_4 $$ final Socket s = DFSOutputStream.createSocketForPipeline(datanodes[0], datanodes.length, dfsClient)[ FD ]
Line_4 $$ final Socket s = DFSOutputStream.createSocketForPipeline(datanodes[0], datanodes.length, dfsClient)-->Line_7 $$ final DataInputStream in = new DataInputStream(NetUtils.getInputStream(s))[ FD ]
Line_2 $$ public static BlockOpResponseProto transferRbw(final ExtendedBlock b, final DFSClient dfsClient, final DatanodeInfo... datanodes) throws IOException -->Line_3 $$ assertEquals(2, datanodes.length)[ CD ]
Line_5 $$ final long writeTimeout = dfsClient.getDatanodeWriteTimeout(datanodes.length)-->Line_6 $$ final DataOutputStream out = new DataOutputStream(new BufferedOutputStream(NetUtils.getOutputStream(s, writeTimeout), HdfsConstants.SMALL_BUFFER_SIZE))[ FD ]
Line_2 $$ public static BlockOpResponseProto transferRbw(final ExtendedBlock b, final DFSClient dfsClient, final DatanodeInfo... datanodes) throws IOException -->Line_9 $$ out.flush()[ CD ]
Line_2 $$ public static BlockOpResponseProto transferRbw(final ExtendedBlock b, final DFSClient dfsClient, final DatanodeInfo... datanodes) throws IOException -->Line_7 $$ final DataInputStream in = new DataInputStream(NetUtils.getInputStream(s))[ CD ]
Line_2 $$ public static BlockOpResponseProto transferRbw(final ExtendedBlock b, final DFSClient dfsClient, final DatanodeInfo... datanodes) throws IOException -->Line_6 $$ final DataOutputStream out = new DataOutputStream(new BufferedOutputStream(NetUtils.getOutputStream(s, writeTimeout), HdfsConstants.SMALL_BUFFER_SIZE))[ CD ]
Line_4 $$ final Socket s = DFSOutputStream.createSocketForPipeline(datanodes[0], datanodes.length, dfsClient)-->Line_6 $$ final DataOutputStream out = new DataOutputStream(new BufferedOutputStream(NetUtils.getOutputStream(s, writeTimeout), HdfsConstants.SMALL_BUFFER_SIZE))[ FD ]
Line_2 $$ public static BlockOpResponseProto transferRbw(final ExtendedBlock b, final DFSClient dfsClient, final DatanodeInfo... datanodes) throws IOException -->Line_5 $$ final long writeTimeout = dfsClient.getDatanodeWriteTimeout(datanodes.length)[ CD ]
Line_2 $$ public static BlockOpResponseProto transferRbw(final ExtendedBlock b, final DFSClient dfsClient, final DatanodeInfo... datanodes) throws IOException -->Line_5 $$ final long writeTimeout = dfsClient.getDatanodeWriteTimeout(datanodes.length)[ FD ]
Line_6 $$ final DataOutputStream out = new DataOutputStream(new BufferedOutputStream(NetUtils.getOutputStream(s, writeTimeout), HdfsConstants.SMALL_BUFFER_SIZE))-->Line_9 $$ out.flush()[ FD ]
Line_7 $$ final DataInputStream in = new DataInputStream(NetUtils.getInputStream(s))-->Line_10 $$ return BlockOpResponseProto.parseDelimitedFrom(in)[ FD ]
Line_2 $$ public static BlockOpResponseProto transferRbw(final ExtendedBlock b, final DFSClient dfsClient, final DatanodeInfo... datanodes) throws IOException -->Line_10 $$ return BlockOpResponseProto.parseDelimitedFrom(in)[ CD ]
Line_2 $$ public static BlockOpResponseProto transferRbw(final ExtendedBlock b, final DFSClient dfsClient, final DatanodeInfo... datanodes) throws IOException -->Line_8 $$ new Sender(out).transferBlock(b, new Token<BlockTokenIdentifier>(), dfsClient.clientName, new DatanodeInfo[] [ FD ]
Line_2 $$ public static BlockOpResponseProto transferRbw(final ExtendedBlock b, final DFSClient dfsClient, final DatanodeInfo... datanodes) throws IOException -->Line_4 $$ final Socket s = DFSOutputStream.createSocketForPipeline(datanodes[0], datanodes.length, dfsClient)[ CD ]
