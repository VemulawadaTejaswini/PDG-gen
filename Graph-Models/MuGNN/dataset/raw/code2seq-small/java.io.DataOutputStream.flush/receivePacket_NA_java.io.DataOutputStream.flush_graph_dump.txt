Line_124 $$ BlockOpResponseProto.Builder response = BlockOpResponseProto.newBuilder().setStatus(Status.IN_PROGRESS)-->Line_125 $$ response.build().writeDelimitedTo(replyOut)[ FD ]
Line_70 $$ if (needsChecksumTranslation) -->Line_71 $$ translateChunks(dataBuf, checksumBuf)[ CD ]
Line_43 $$ ByteBuffer dataBuf = packetReceiver.getDataSlice()-->Line_89 $$ out.write(dataBuf.array(), startByteToDisk, numBytesToDisk)[ FD ]
Line_46 $$ if (LOG.isDebugEnabled()) -->Line_47 $$ LOG.debug("Receiving an empty packet or the end of the block " + block)[ CD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_18 $$ boolean syncBlock = header.getSyncBlock()[ CD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_24 $$ if (replicaInfo.getNumBytes() < offsetInBlock) [ CD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_15 $$ long seqno = header.getSeqno()[ CD ]
Line_44 $$ ByteBuffer checksumBuf = packetReceiver.getChecksumSlice()-->Line_59 $$ verifyChunks(dataBuf, checksumBuf)[ FD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_8 $$ if (header.getOffsetInBlock() > replicaInfo.getNumBytes()) [ CD ]
Line_120 $$ if (responder != null && (syncBlock || shouldVerifyChecksum())) -->Line_121 $$ ((PacketResponder) responder.getRunnable()).enqueue(seqno, lastPacketInBlock, offsetInBlock, Status.SUCCESS)[ CD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_44 $$ ByteBuffer checksumBuf = packetReceiver.getChecksumSlice()[ CD ]
Line_123 $$ if (isReplaceBlock && (Time.monotonicNow() - lastResponseTime > responseInterval)) -->Line_124 $$ BlockOpResponseProto.Builder response = BlockOpResponseProto.newBuilder().setStatus(Status.IN_PROGRESS)[ CD ]
Line_74 $$ byte[] lastChunkChecksum-->Line_111 $$ replicaInfo.setLastChecksumAndDataLen(offsetInBlock, lastChunkChecksum)[ FD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_4 $$ PacketHeader header = packetReceiver.getHeader()[ CD ]
Line_43 $$ ByteBuffer dataBuf = packetReceiver.getDataSlice()-->Line_86 $$ int startByteToDisk = (int) (onDiskLen - firstByteInBlock) + dataBuf.arrayOffset() + dataBuf.position()[ FD ]
Line_16 $$ boolean lastPacketInBlock = header.isLastPacketInBlock()-->Line_28 $$ ((PacketResponder) responder.getRunnable()).enqueue(seqno, lastPacketInBlock, offsetInBlock, Status.SUCCESS)[ FD ]
Line_17 $$ int len = header.getDataLen()-->Line_130 $$ throttler.throttle(len)[ FD ]
Line_24 $$ if (replicaInfo.getNumBytes() < offsetInBlock) -->Line_25 $$ replicaInfo.setNumBytes(offsetInBlock)[ CD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_43 $$ ByteBuffer dataBuf = packetReceiver.getDataSlice()[ CD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_120 $$ if (responder != null && (syncBlock || shouldVerifyChecksum())) [ CD ]
Line_77 $$ if (onDiskLen < offsetInBlock) -->Line_91 $$ if (duration > datanodeSlowLogThresholdMs) [ CD ]
Line_123 $$ if (isReplaceBlock && (Time.monotonicNow() - lastResponseTime > responseInterval)) -->Line_125 $$ response.build().writeDelimitedTo(replyOut)[ CD ]
Line_76 $$ long onDiskLen = replicaInfo.getBytesOnDisk()-->Line_77 $$ if (onDiskLen < offsetInBlock) [ FD ]
Line_4 $$ PacketHeader header = packetReceiver.getHeader()-->Line_12 $$ throw new IOException("Got wrong length during writeBlock(" + block + ") from " + inAddr + " at offset " + header.getOffsetInBlock() + ": " + header.getDataLen())[ FD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_17 $$ int len = header.getDataLen()[ CD ]
Line_4 $$ PacketHeader header = packetReceiver.getHeader()-->Line_9 $$ throw new IOException("Received an out-of-sequence packet for " + block + "from " + inAddr + " at offset " + header.getOffsetInBlock() + ". Expecting packet starting at " + replicaInfo.getNumBytes())[ FD ]
Line_16 $$ boolean lastPacketInBlock = header.isLastPacketInBlock()-->Line_19 $$ if (syncBlock && lastPacketInBlock) [ FD ]
Line_94 $$ if (partialCrc != null) -->Line_107 $$ lastChunkChecksum = Arrays.copyOfRange(checksumBuf.array(), checksumBuf.arrayOffset() + checksumBuf.position() + checksumLen - checksumSize, checksumBuf.arrayOffset() + checksumBuf.position() + checksumLen)[ CD ]
Line_4 $$ PacketHeader header = packetReceiver.getHeader()-->Line_18 $$ boolean syncBlock = header.getSyncBlock()[ FD ]
Line_36 $$ if (duration > datanodeSlowLogThresholdMs) -->Line_37 $$ LOG.warn("Slow BlockReceiver write packet to mirror took " + duration + "ms (threshold=" + datanodeSlowLogThresholdMs + "ms)")[ CD ]
Line_77 $$ if (onDiskLen < offsetInBlock) -->Line_110 $$ flushOrSync(syncBlock)[ CD ]
Line_99 $$ byte[] buf = FSOutputSummer.convertToByteStream(partialCrc, checksumSize)-->Line_101 $$ checksumOut.write(buf)[ FD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_23 $$ offsetInBlock += len[ CD ]
Line_4 $$ PacketHeader header = packetReceiver.getHeader()-->Line_17 $$ int len = header.getDataLen()[ FD ]
Line_18 $$ boolean syncBlock = header.getSyncBlock()-->Line_19 $$ if (syncBlock && lastPacketInBlock) [ FD ]
Line_18 $$ boolean syncBlock = header.getSyncBlock()-->Line_110 $$ flushOrSync(syncBlock)[ FD ]
Line_14 $$ long offsetInBlock = header.getOffsetInBlock()-->Line_63 $$ ((PacketResponder) responder.getRunnable()).enqueue(seqno, lastPacketInBlock, offsetInBlock, Status.ERROR_CHECKSUM)[ FD ]
Line_18 $$ boolean syncBlock = header.getSyncBlock()-->Line_27 $$ if (responder != null && !syncBlock && !shouldVerifyChecksum()) [ FD ]
Line_99 $$ byte[] buf = FSOutputSummer.convertToByteStream(partialCrc, checksumSize)-->Line_100 $$ lastChunkChecksum = Arrays.copyOfRange(buf, buf.length - checksumSize, buf.length)[ FD ]
Line_23 $$ offsetInBlock += len-->Line_77 $$ if (onDiskLen < offsetInBlock) [ FD ]
Line_23 $$ offsetInBlock += len-->Line_111 $$ replicaInfo.setLastChecksumAndDataLen(offsetInBlock, lastChunkChecksum)[ FD ]
Line_14 $$ long offsetInBlock = header.getOffsetInBlock()-->Line_113 $$ manageWriterOsCache(offsetInBlock)[ FD ]
Line_14 $$ long offsetInBlock = header.getOffsetInBlock()-->Line_28 $$ ((PacketResponder) responder.getRunnable()).enqueue(seqno, lastPacketInBlock, offsetInBlock, Status.SUCCESS)[ FD ]
Line_102 $$ if (LOG.isDebugEnabled()) -->Line_103 $$ LOG.debug("Writing out partial crc for data len " + len)[ CD ]
Line_15 $$ long seqno = header.getSeqno()-->Line_121 $$ ((PacketResponder) responder.getRunnable()).enqueue(seqno, lastPacketInBlock, offsetInBlock, Status.SUCCESS)[ FD ]
Line_23 $$ offsetInBlock += len-->Line_24 $$ if (replicaInfo.getNumBytes() < offsetInBlock) [ FD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_45 $$ if (lastPacketInBlock || len == 0) [ CD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_30 $$ if (mirrorOut != null && !mirrorError) [ CD ]
Line_77 $$ if (onDiskLen < offsetInBlock) -->Line_112 $$ datanode.metrics.incrBytesWritten(len)[ CD ]
Line_23 $$ offsetInBlock += len-->Line_121 $$ ((PacketResponder) responder.getRunnable()).enqueue(seqno, lastPacketInBlock, offsetInBlock, Status.SUCCESS)[ FD ]
Line_43 $$ ByteBuffer dataBuf = packetReceiver.getDataSlice()-->Line_98 $$ partialCrc.update(dataBuf.array(), startByteToDisk, numBytesToDisk)[ FD ]
Line_4 $$ PacketHeader header = packetReceiver.getHeader()-->Line_11 $$ if (header.getDataLen() < 0) [ FD ]
Line_16 $$ boolean lastPacketInBlock = header.isLastPacketInBlock()-->Line_63 $$ ((PacketResponder) responder.getRunnable()).enqueue(seqno, lastPacketInBlock, offsetInBlock, Status.ERROR_CHECKSUM)[ FD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_5 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_87 $$ int numBytesToDisk = (int) (offsetInBlock - onDiskLen)-->Line_98 $$ partialCrc.update(dataBuf.array(), startByteToDisk, numBytesToDisk)[ FD ]
Line_49 $$ if (syncBlock) -->Line_50 $$ flushOrSync(true)[ CD ]
Line_57 $$ if (shouldVerifyChecksum()) -->Line_70 $$ if (needsChecksumTranslation) [ CD ]
Line_14 $$ long offsetInBlock = header.getOffsetInBlock()-->Line_111 $$ replicaInfo.setLastChecksumAndDataLen(offsetInBlock, lastChunkChecksum)[ FD ]
Line_17 $$ int len = header.getDataLen()-->Line_95 $$ if (len > bytesPerChecksum) [ FD ]
Line_81 $$ if (firstByteInBlock % bytesPerChecksum != 0) -->Line_83 $$ long offsetInChecksum = BlockMetadataHeader.getHeaderSize() + onDiskLen / bytesPerChecksum * checksumSize[ CD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_16 $$ boolean lastPacketInBlock = header.isLastPacketInBlock()[ CD ]
Line_4 $$ PacketHeader header = packetReceiver.getHeader()-->Line_8 $$ if (header.getOffsetInBlock() > replicaInfo.getNumBytes()) [ FD ]
Line_44 $$ ByteBuffer checksumBuf = packetReceiver.getChecksumSlice()-->Line_54 $$ if (checksumBuf.capacity() != checksumLen) [ FD ]
Line_78 $$ if (onDiskLen % bytesPerChecksum != 0) -->Line_79 $$ adjustCrcFilePosition()[ CD ]
Line_74 $$ byte[] lastChunkChecksum-->Line_107 $$ lastChunkChecksum = Arrays.copyOfRange(checksumBuf.array(), checksumBuf.arrayOffset() + checksumBuf.position() + checksumLen - checksumSize, checksumBuf.arrayOffset() + checksumBuf.position() + checksumLen)[ FD ]
Line_123 $$ if (isReplaceBlock && (Time.monotonicNow() - lastResponseTime > responseInterval)) -->Line_126 $$ replyOut.flush()[ CD ]
Line_77 $$ if (onDiskLen < offsetInBlock) -->Line_88 $$ long begin = Time.monotonicNow()[ CD ]
Line_14 $$ long offsetInBlock = header.getOffsetInBlock()-->Line_121 $$ ((PacketResponder) responder.getRunnable()).enqueue(seqno, lastPacketInBlock, offsetInBlock, Status.SUCCESS)[ FD ]
Line_35 $$ long duration = Time.monotonicNow() - begin-->Line_91 $$ if (duration > datanodeSlowLogThresholdMs) [ FD ]
Line_86 $$ int startByteToDisk = (int) (onDiskLen - firstByteInBlock) + dataBuf.arrayOffset() + dataBuf.position()-->Line_89 $$ out.write(dataBuf.array(), startByteToDisk, numBytesToDisk)[ FD ]
Line_94 $$ if (partialCrc != null) -->Line_102 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_22 $$ long firstByteInBlock = offsetInBlock[ CD ]
Line_53 $$ int checksumLen = ((len + bytesPerChecksum - 1) / bytesPerChecksum) * checksumSize-->Line_54 $$ if (checksumBuf.capacity() != checksumLen) [ FD ]
Line_81 $$ if (firstByteInBlock % bytesPerChecksum != 0) -->Line_84 $$ computePartialChunkCrc(onDiskLen, offsetInChecksum, bytesPerChecksum)[ CD ]
Line_77 $$ if (onDiskLen < offsetInBlock) -->Line_113 $$ manageWriterOsCache(offsetInBlock)[ CD ]
Line_77 $$ if (onDiskLen < offsetInBlock) -->Line_81 $$ if (firstByteInBlock % bytesPerChecksum != 0) [ CD ]
Line_19 $$ if (syncBlock && lastPacketInBlock) -->Line_20 $$ this.syncOnClose = false[ CD ]
Line_87 $$ int numBytesToDisk = (int) (offsetInBlock - onDiskLen)-->Line_89 $$ out.write(dataBuf.array(), startByteToDisk, numBytesToDisk)[ FD ]
Line_14 $$ long offsetInBlock = header.getOffsetInBlock()-->Line_25 $$ replicaInfo.setNumBytes(offsetInBlock)[ FD ]
Line_45 $$ if (lastPacketInBlock || len == 0) -->Line_46 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_45 $$ if (lastPacketInBlock || len == 0) -->Line_57 $$ if (shouldVerifyChecksum()) [ CD ]
Line_44 $$ ByteBuffer checksumBuf = packetReceiver.getChecksumSlice()-->Line_108 $$ checksumOut.write(checksumBuf.array(), checksumBuf.arrayOffset() + checksumBuf.position(), checksumLen)[ FD ]
Line_17 $$ int len = header.getDataLen()-->Line_23 $$ offsetInBlock += len[ FD ]
Line_45 $$ if (lastPacketInBlock || len == 0) -->Line_49 $$ if (syncBlock) [ CD ]
Line_14 $$ long offsetInBlock = header.getOffsetInBlock()-->Line_77 $$ if (onDiskLen < offsetInBlock) [ FD ]
Line_83 $$ long offsetInChecksum = BlockMetadataHeader.getHeaderSize() + onDiskLen / bytesPerChecksum * checksumSize-->Line_84 $$ computePartialChunkCrc(onDiskLen, offsetInChecksum, bytesPerChecksum)[ FD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_132 $$ return lastPacketInBlock ? -1 : len[ CD ]
Line_4 $$ PacketHeader header = packetReceiver.getHeader()-->Line_15 $$ long seqno = header.getSeqno()[ FD ]
Line_4 $$ PacketHeader header = packetReceiver.getHeader()-->Line_16 $$ boolean lastPacketInBlock = header.isLastPacketInBlock()[ FD ]
Line_77 $$ if (onDiskLen < offsetInBlock) -->Line_78 $$ if (onDiskLen % bytesPerChecksum != 0) [ CD ]
Line_81 $$ if (firstByteInBlock % bytesPerChecksum != 0) -->Line_82 $$ LOG.info("Packet starts at " + firstByteInBlock + " for " + block + " which is not a multiple of bytesPerChecksum " + bytesPerChecksum)[ CD ]
Line_17 $$ int len = header.getDataLen()-->Line_112 $$ datanode.metrics.incrBytesWritten(len)[ FD ]
Line_44 $$ ByteBuffer checksumBuf = packetReceiver.getChecksumSlice()-->Line_107 $$ lastChunkChecksum = Arrays.copyOfRange(checksumBuf.array(), checksumBuf.arrayOffset() + checksumBuf.position() + checksumLen - checksumSize, checksumBuf.arrayOffset() + checksumBuf.position() + checksumLen)[ FD ]
Line_91 $$ if (duration > datanodeSlowLogThresholdMs) -->Line_92 $$ LOG.warn("Slow BlockReceiver write data to disk cost:" + duration + "ms (threshold=" + datanodeSlowLogThresholdMs + "ms)")[ CD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_19 $$ if (syncBlock && lastPacketInBlock) [ CD ]
Line_43 $$ ByteBuffer dataBuf = packetReceiver.getDataSlice()-->Line_59 $$ verifyChunks(dataBuf, checksumBuf)[ FD ]
Line_77 $$ if (onDiskLen < offsetInBlock) -->Line_86 $$ int startByteToDisk = (int) (onDiskLen - firstByteInBlock) + dataBuf.arrayOffset() + dataBuf.position()[ CD ]
Line_94 $$ if (partialCrc != null) -->Line_95 $$ if (len > bytesPerChecksum) [ CD ]
Line_53 $$ int checksumLen = ((len + bytesPerChecksum - 1) / bytesPerChecksum) * checksumSize-->Line_108 $$ checksumOut.write(checksumBuf.array(), checksumBuf.arrayOffset() + checksumBuf.position(), checksumLen)[ FD ]
Line_77 $$ if (onDiskLen < offsetInBlock) -->Line_87 $$ int numBytesToDisk = (int) (offsetInBlock - onDiskLen)[ CD ]
Line_77 $$ if (onDiskLen < offsetInBlock) -->Line_89 $$ out.write(dataBuf.array(), startByteToDisk, numBytesToDisk)[ CD ]
Line_94 $$ if (partialCrc != null) -->Line_98 $$ partialCrc.update(dataBuf.array(), startByteToDisk, numBytesToDisk)[ CD ]
Line_15 $$ long seqno = header.getSeqno()-->Line_28 $$ ((PacketResponder) responder.getRunnable()).enqueue(seqno, lastPacketInBlock, offsetInBlock, Status.SUCCESS)[ FD ]
Line_23 $$ offsetInBlock += len-->Line_63 $$ ((PacketResponder) responder.getRunnable()).enqueue(seqno, lastPacketInBlock, offsetInBlock, Status.ERROR_CHECKSUM)[ FD ]
Line_100 $$ lastChunkChecksum = Arrays.copyOfRange(buf, buf.length - checksumSize, buf.length)-->Line_111 $$ replicaInfo.setLastChecksumAndDataLen(offsetInBlock, lastChunkChecksum)[ FD ]
Line_5 $$ if (LOG.isDebugEnabled()) -->Line_6 $$ LOG.debug("Receiving one packet for block " + block + ": " + header)[ CD ]
Line_94 $$ if (partialCrc != null) -->Line_99 $$ byte[] buf = FSOutputSummer.convertToByteStream(partialCrc, checksumSize)[ CD ]
Line_16 $$ boolean lastPacketInBlock = header.isLastPacketInBlock()-->Line_121 $$ ((PacketResponder) responder.getRunnable()).enqueue(seqno, lastPacketInBlock, offsetInBlock, Status.SUCCESS)[ FD ]
Line_100 $$ lastChunkChecksum = Arrays.copyOfRange(buf, buf.length - checksumSize, buf.length)-->Line_107 $$ lastChunkChecksum = Arrays.copyOfRange(checksumBuf.array(), checksumBuf.arrayOffset() + checksumBuf.position() + checksumLen - checksumSize, checksumBuf.arrayOffset() + checksumBuf.position() + checksumLen)[ FD ]
Line_94 $$ if (partialCrc != null) -->Line_101 $$ checksumOut.write(buf)[ CD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_27 $$ if (responder != null && !syncBlock && !shouldVerifyChecksum()) [ CD ]
Line_35 $$ long duration = Time.monotonicNow() - begin-->Line_36 $$ if (duration > datanodeSlowLogThresholdMs) [ FD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_123 $$ if (isReplaceBlock && (Time.monotonicNow() - lastResponseTime > responseInterval)) [ CD ]
Line_23 $$ offsetInBlock += len-->Line_28 $$ ((PacketResponder) responder.getRunnable()).enqueue(seqno, lastPacketInBlock, offsetInBlock, Status.SUCCESS)[ FD ]
Line_14 $$ long offsetInBlock = header.getOffsetInBlock()-->Line_23 $$ offsetInBlock += len[ FD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_11 $$ if (header.getDataLen() < 0) [ CD ]
Line_94 $$ if (partialCrc != null) -->Line_108 $$ checksumOut.write(checksumBuf.array(), checksumBuf.arrayOffset() + checksumBuf.position(), checksumLen)[ CD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_3 $$ packetReceiver.receiveNextPacket(in)[ CD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_129 $$ if (throttler != null) [ CD ]
Line_129 $$ if (throttler != null) -->Line_130 $$ throttler.throttle(len)[ CD ]
Line_77 $$ if (onDiskLen < offsetInBlock) -->Line_94 $$ if (partialCrc != null) [ CD ]
Line_94 $$ if (partialCrc != null) -->Line_100 $$ lastChunkChecksum = Arrays.copyOfRange(buf, buf.length - checksumSize, buf.length)[ CD ]
Line_23 $$ offsetInBlock += len-->Line_113 $$ manageWriterOsCache(offsetInBlock)[ FD ]
Line_45 $$ if (lastPacketInBlock || len == 0) -->Line_54 $$ if (checksumBuf.capacity() != checksumLen) [ CD ]
Line_107 $$ lastChunkChecksum = Arrays.copyOfRange(checksumBuf.array(), checksumBuf.arrayOffset() + checksumBuf.position() + checksumLen - checksumSize, checksumBuf.arrayOffset() + checksumBuf.position() + checksumLen)-->Line_111 $$ replicaInfo.setLastChecksumAndDataLen(offsetInBlock, lastChunkChecksum)[ FD ]
Line_86 $$ int startByteToDisk = (int) (onDiskLen - firstByteInBlock) + dataBuf.arrayOffset() + dataBuf.position()-->Line_98 $$ partialCrc.update(dataBuf.array(), startByteToDisk, numBytesToDisk)[ FD ]
Line_15 $$ long seqno = header.getSeqno()-->Line_63 $$ ((PacketResponder) responder.getRunnable()).enqueue(seqno, lastPacketInBlock, offsetInBlock, Status.ERROR_CHECKSUM)[ FD ]
Line_14 $$ long offsetInBlock = header.getOffsetInBlock()-->Line_24 $$ if (replicaInfo.getNumBytes() < offsetInBlock) [ FD ]
Line_16 $$ boolean lastPacketInBlock = header.isLastPacketInBlock()-->Line_45 $$ if (lastPacketInBlock || len == 0) [ FD ]
Line_123 $$ if (isReplaceBlock && (Time.monotonicNow() - lastResponseTime > responseInterval)) -->Line_127 $$ lastResponseTime = Time.monotonicNow()[ CD ]
Line_2 $$ private int receivePacket() throws IOException -->Line_14 $$ long offsetInBlock = header.getOffsetInBlock()[ CD ]
Line_23 $$ offsetInBlock += len-->Line_25 $$ replicaInfo.setNumBytes(offsetInBlock)[ FD ]
Line_44 $$ ByteBuffer checksumBuf = packetReceiver.getChecksumSlice()-->Line_71 $$ translateChunks(dataBuf, checksumBuf)[ FD ]
Line_4 $$ PacketHeader header = packetReceiver.getHeader()-->Line_14 $$ long offsetInBlock = header.getOffsetInBlock()[ FD ]
Line_76 $$ long onDiskLen = replicaInfo.getBytesOnDisk()-->Line_84 $$ computePartialChunkCrc(onDiskLen, offsetInChecksum, bytesPerChecksum)[ FD ]
Line_74 $$ byte[] lastChunkChecksum-->Line_100 $$ lastChunkChecksum = Arrays.copyOfRange(buf, buf.length - checksumSize, buf.length)[ FD ]
Line_27 $$ if (responder != null && !syncBlock && !shouldVerifyChecksum()) -->Line_28 $$ ((PacketResponder) responder.getRunnable()).enqueue(seqno, lastPacketInBlock, offsetInBlock, Status.SUCCESS)[ CD ]
Line_45 $$ if (lastPacketInBlock || len == 0) -->Line_74 $$ byte[] lastChunkChecksum[ CD ]
Line_77 $$ if (onDiskLen < offsetInBlock) -->Line_111 $$ replicaInfo.setLastChecksumAndDataLen(offsetInBlock, lastChunkChecksum)[ CD ]
Line_45 $$ if (lastPacketInBlock || len == 0) -->Line_53 $$ int checksumLen = ((len + bytesPerChecksum - 1) / bytesPerChecksum) * checksumSize[ CD ]
Line_44 $$ ByteBuffer checksumBuf = packetReceiver.getChecksumSlice()-->Line_55 $$ throw new IOException("Length of checksums in packet " + checksumBuf.capacity() + " does not match calculated checksum " + "length " + checksumLen)[ FD ]
Line_43 $$ ByteBuffer dataBuf = packetReceiver.getDataSlice()-->Line_71 $$ translateChunks(dataBuf, checksumBuf)[ FD ]
