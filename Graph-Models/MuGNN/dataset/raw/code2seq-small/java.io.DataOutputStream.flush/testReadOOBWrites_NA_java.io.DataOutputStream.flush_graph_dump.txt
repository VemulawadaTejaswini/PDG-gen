Line_20 $$ int c = 0-->Line_22 $$ c = inputStream.read(dataBlockRead, 0, UPLOAD_BLOCK_SIZE)[ FD ]
Line_21 $$ while (c >= 0) -->Line_23 $$ if (c < 0) [ CD ]
Line_22 $$ c = inputStream.read(dataBlockRead, 0, UPLOAD_BLOCK_SIZE)-->Line_23 $$ if (c < 0) [ FD ]
Line_2 $$ public void testReadOOBWrites() throws Exception -->Line_13 $$ writeBlockTask.startWriting()[ CD ]
Line_15 $$ DataInputStream inputStream = null-->Line_18 $$ inputStream = testAccount.getStore().retrieve("WASB_String.txt", 0)[ FD ]
Line_14 $$ int count = 0-->Line_26 $$ count += c[ FD ]
Line_18 $$ inputStream = testAccount.getStore().retrieve("WASB_String.txt", 0)-->Line_22 $$ c = inputStream.read(dataBlockRead, 0, UPLOAD_BLOCK_SIZE)[ FD ]
Line_19 $$ count = 0-->Line_26 $$ count += c[ FD ]
Line_2 $$ public void testReadOOBWrites() throws Exception -->Line_10 $$ outputStream.flush()[ CD ]
Line_15 $$ DataInputStream inputStream = null-->Line_34 $$ inputStream.close()[ FD ]
Line_3 $$ byte[] dataBlockWrite = new byte[UPLOAD_BLOCK_SIZE]-->Line_8 $$ outputStream.write(dataBlockWrite)[ FD ]
Line_14 $$ int count = 0-->Line_19 $$ count = 0[ FD ]
Line_2 $$ public void testReadOOBWrites() throws Exception -->Line_14 $$ int count = 0[ CD ]
Line_18 $$ inputStream = testAccount.getStore().retrieve("WASB_String.txt", 0)-->Line_33 $$ if (null != inputStream) [ FD ]
Line_2 $$ public void testReadOOBWrites() throws Exception -->Line_38 $$ assertEquals(NUMBER_OF_BLOCKS * UPLOAD_BLOCK_SIZE, count)[ CD ]
Line_16 $$ for (int i = 0; i < 5; i++) -->Line_33 $$ if (null != inputStream) [ CD ]
Line_15 $$ DataInputStream inputStream = null-->Line_33 $$ if (null != inputStream) [ FD ]
Line_14 $$ int count = 0-->Line_38 $$ assertEquals(NUMBER_OF_BLOCKS * UPLOAD_BLOCK_SIZE, count)[ FD ]
Line_21 $$ while (c >= 0) -->Line_22 $$ c = inputStream.read(dataBlockRead, 0, UPLOAD_BLOCK_SIZE)[ CD ]
Line_5 $$ DataOutputStream outputStream = testAccount.getStore().storefile("WASB_String.txt", new PermissionStatus("", "", FsPermission.getDefault()))-->Line_10 $$ outputStream.flush()[ FD ]
Line_2 $$ public void testReadOOBWrites() throws Exception -->Line_37 $$ writeBlockTask.stopWriting()[ CD ]
Line_2 $$ public void testReadOOBWrites() throws Exception -->Line_12 $$ DataBlockWriter writeBlockTask = new DataBlockWriter(testAccount, "WASB_String.txt")[ CD ]
Line_21 $$ while (c >= 0) -->Line_26 $$ count += c[ CD ]
Line_2 $$ public void testReadOOBWrites() throws Exception -->Line_4 $$ byte[] dataBlockRead = new byte[UPLOAD_BLOCK_SIZE][ CD ]
Line_22 $$ c = inputStream.read(dataBlockRead, 0, UPLOAD_BLOCK_SIZE)-->Line_21 $$ while (c >= 0) [ FD ]
Line_5 $$ DataOutputStream outputStream = testAccount.getStore().storefile("WASB_String.txt", new PermissionStatus("", "", FsPermission.getDefault()))-->Line_11 $$ outputStream.close()[ FD ]
Line_4 $$ byte[] dataBlockRead = new byte[UPLOAD_BLOCK_SIZE]-->Line_22 $$ c = inputStream.read(dataBlockRead, 0, UPLOAD_BLOCK_SIZE)[ FD ]
Line_33 $$ if (null != inputStream) -->Line_34 $$ inputStream.close()[ CD ]
Line_12 $$ DataBlockWriter writeBlockTask = new DataBlockWriter(testAccount, "WASB_String.txt")-->Line_37 $$ writeBlockTask.stopWriting()[ FD ]
Line_2 $$ public void testReadOOBWrites() throws Exception -->Line_16 $$ for (int i = 0; i < 5; i++) [ CD ]
Line_22 $$ c = inputStream.read(dataBlockRead, 0, UPLOAD_BLOCK_SIZE)-->Line_26 $$ count += c[ FD ]
Line_2 $$ public void testReadOOBWrites() throws Exception -->Line_15 $$ DataInputStream inputStream = null[ CD ]
Line_26 $$ count += c-->Line_38 $$ assertEquals(NUMBER_OF_BLOCKS * UPLOAD_BLOCK_SIZE, count)[ FD ]
Line_15 $$ DataInputStream inputStream = null-->Line_22 $$ c = inputStream.read(dataBlockRead, 0, UPLOAD_BLOCK_SIZE)[ FD ]
Line_5 $$ DataOutputStream outputStream = testAccount.getStore().storefile("WASB_String.txt", new PermissionStatus("", "", FsPermission.getDefault()))-->Line_8 $$ outputStream.write(dataBlockWrite)[ FD ]
Line_2 $$ public void testReadOOBWrites() throws Exception -->Line_11 $$ outputStream.close()[ CD ]
Line_2 $$ public void testReadOOBWrites() throws Exception -->Line_7 $$ for (int i = 0; i < NUMBER_OF_BLOCKS; i++) [ CD ]
Line_7 $$ for (int i = 0; i < NUMBER_OF_BLOCKS; i++) -->Line_8 $$ outputStream.write(dataBlockWrite)[ CD ]
Line_2 $$ public void testReadOOBWrites() throws Exception -->Line_5 $$ DataOutputStream outputStream = testAccount.getStore().storefile("WASB_String.txt", new PermissionStatus("", "", FsPermission.getDefault()))[ CD ]
Line_20 $$ int c = 0-->Line_21 $$ while (c >= 0) [ FD ]
Line_2 $$ public void testReadOOBWrites() throws Exception -->Line_6 $$ Arrays.fill(dataBlockWrite, (byte) 255)[ CD ]
Line_12 $$ DataBlockWriter writeBlockTask = new DataBlockWriter(testAccount, "WASB_String.txt")-->Line_13 $$ writeBlockTask.startWriting()[ FD ]
Line_3 $$ byte[] dataBlockWrite = new byte[UPLOAD_BLOCK_SIZE]-->Line_6 $$ Arrays.fill(dataBlockWrite, (byte) 255)[ FD ]
Line_2 $$ public void testReadOOBWrites() throws Exception -->Line_3 $$ byte[] dataBlockWrite = new byte[UPLOAD_BLOCK_SIZE][ CD ]
Line_20 $$ int c = 0-->Line_26 $$ count += c[ FD ]
Line_19 $$ count = 0-->Line_38 $$ assertEquals(NUMBER_OF_BLOCKS * UPLOAD_BLOCK_SIZE, count)[ FD ]
Line_18 $$ inputStream = testAccount.getStore().retrieve("WASB_String.txt", 0)-->Line_34 $$ inputStream.close()[ FD ]
Line_7 $$ for (int i = 0; i < NUMBER_OF_BLOCKS; i++) -->Line_16 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_20 $$ int c = 0-->Line_23 $$ if (c < 0) [ FD ]
