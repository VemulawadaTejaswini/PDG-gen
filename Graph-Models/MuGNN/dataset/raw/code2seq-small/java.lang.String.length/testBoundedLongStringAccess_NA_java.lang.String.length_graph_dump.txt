Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_54 $$ s.delete(entity)[ FD ]
Line_12 $$ s = openSession()-->Line_25 $$ s.getTransaction().commit()[ FD ]
Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_32 $$ entity.setLongString(null)[ FD ]
Line_6 $$ Session s = openSession()-->Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_42 $$ s = openSession()[ CD ]
Line_27 $$ s = openSession()-->Line_36 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_45 $$ if (entity.getLongString() != null) [ CD ]
Line_12 $$ s = openSession()-->Line_18 $$ s.close()[ FD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_39 $$ entity.setLongString(empty)[ FD ]
Line_6 $$ Session s = openSession()-->Line_26 $$ s.close()[ FD ]
Line_35 $$ s = openSession()-->Line_40 $$ s.getTransaction().commit()[ FD ]
Line_19 $$ s = openSession()-->Line_34 $$ s.close()[ FD ]
Line_6 $$ Session s = openSession()-->Line_20 $$ s.beginTransaction()[ FD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_51 $$ assertEquals(empty, entity.getLongString())[ FD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_24 $$ entity.setLongString(changed)[ FD ]
Line_12 $$ s = openSession()-->Line_28 $$ s.beginTransaction()[ FD ]
Line_3 $$ String original = buildRecursively(LONG_STRING_SIZE, 'x')-->Line_16 $$ entity.setLongString(original)[ FD ]
Line_12 $$ s = openSession()-->Line_17 $$ s.getTransaction().commit()[ FD ]
Line_12 $$ s = openSession()-->Line_27 $$ s = openSession()[ FD ]
Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_39 $$ entity.setLongString(empty)[ FD ]
Line_42 $$ s = openSession()-->Line_56 $$ s.close()[ FD ]
Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_48 $$ assertEquals(empty, entity.getLongString().trim())[ FD ]
Line_6 $$ Session s = openSession()-->Line_13 $$ s.beginTransaction()[ FD ]
Line_5 $$ String empty = ""-->Line_48 $$ assertEquals(empty, entity.getLongString().trim())[ FD ]
Line_27 $$ s = openSession()-->Line_33 $$ s.getTransaction().commit()[ FD ]
Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_38 $$ assertNull(entity.getLongString())[ FD ]
Line_46 $$ if (getDialect() instanceof SybaseASE15Dialect) -->Line_51 $$ assertEquals(empty, entity.getLongString())[ CD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_12 $$ s = openSession()-->Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_22 $$ assertEquals(LONG_STRING_SIZE, entity.getLongString().length())[ FD ]
Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_51 $$ assertEquals(empty, entity.getLongString())[ FD ]
Line_12 $$ s = openSession()-->Line_20 $$ s.beginTransaction()[ FD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_45 $$ if (entity.getLongString() != null) [ FD ]
Line_5 $$ String empty = ""-->Line_39 $$ entity.setLongString(empty)[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ CD ]
Line_45 $$ if (entity.getLongString() != null) -->Line_46 $$ if (getDialect() instanceof SybaseASE15Dialect) [ CD ]
Line_12 $$ s = openSession()-->Line_35 $$ s = openSession()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_3 $$ String original = buildRecursively(LONG_STRING_SIZE, 'x')[ CD ]
Line_27 $$ s = openSession()-->Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_27 $$ s = openSession()-->Line_43 $$ s.beginTransaction()[ FD ]
Line_46 $$ if (getDialect() instanceof SybaseASE15Dialect) -->Line_47 $$ assertEquals(empty.length(), entity.getLongString().trim().length())[ CD ]
Line_6 $$ Session s = openSession()-->Line_9 $$ s.save(entity)[ FD ]
Line_42 $$ s = openSession()-->Line_43 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_38 $$ assertNull(entity.getLongString())[ CD ]
Line_27 $$ s = openSession()-->Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_39 $$ entity.setLongString(empty)[ CD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_15 $$ assertNull(entity.getLongString())[ FD ]
Line_6 $$ Session s = openSession()-->Line_17 $$ s.getTransaction().commit()[ FD ]
Line_27 $$ s = openSession()-->Line_35 $$ s = openSession()[ FD ]
Line_6 $$ Session s = openSession()-->Line_11 $$ s.close()[ FD ]
Line_27 $$ s = openSession()-->Line_28 $$ s.beginTransaction()[ FD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_36 $$ s.beginTransaction()[ CD ]
Line_12 $$ s = openSession()-->Line_41 $$ s.close()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_9 $$ s.save(entity)[ CD ]
Line_19 $$ s = openSession()-->Line_55 $$ s.getTransaction().commit()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_15 $$ assertNull(entity.getLongString())[ CD ]
Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_51 $$ assertEquals(empty, entity.getLongString())[ FD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_9 $$ s.save(entity)[ FD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_16 $$ entity.setLongString(original)[ FD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_23 $$ assertEquals(original, entity.getLongString())[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_18 $$ s.close()[ CD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_43 $$ s.beginTransaction()[ CD ]
Line_46 $$ if (getDialect() instanceof SybaseASE15Dialect) -->Line_50 $$ assertEquals(empty.length(), entity.getLongString().length())[ CD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_54 $$ s.delete(entity)[ FD ]
Line_19 $$ s = openSession()-->Line_41 $$ s.close()[ FD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_30 $$ assertEquals(LONG_STRING_SIZE, entity.getLongString().length())[ FD ]
Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_48 $$ assertEquals(empty, entity.getLongString().trim())[ FD ]
Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_24 $$ entity.setLongString(changed)[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_55 $$ s.getTransaction().commit()[ CD ]
Line_27 $$ s = openSession()-->Line_55 $$ s.getTransaction().commit()[ FD ]
Line_12 $$ s = openSession()-->Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_4 $$ String changed = buildRecursively(LONG_STRING_SIZE, 'y')-->Line_24 $$ entity.setLongString(changed)[ FD ]
Line_35 $$ s = openSession()-->Line_55 $$ s.getTransaction().commit()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_13 $$ s.beginTransaction()[ CD ]
Line_6 $$ Session s = openSession()-->Line_33 $$ s.getTransaction().commit()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_6 $$ Session s = openSession()[ CD ]
Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_39 $$ entity.setLongString(empty)[ FD ]
Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_47 $$ assertEquals(empty.length(), entity.getLongString().trim().length())[ FD ]
Line_6 $$ Session s = openSession()-->Line_19 $$ s = openSession()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_30 $$ assertEquals(LONG_STRING_SIZE, entity.getLongString().length())[ CD ]
Line_12 $$ s = openSession()-->Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_45 $$ if (entity.getLongString() != null) [ FD ]
Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_41 $$ s.close()[ CD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_50 $$ assertEquals(empty.length(), entity.getLongString().length())[ FD ]
Line_19 $$ s = openSession()-->Line_26 $$ s.close()[ FD ]
Line_5 $$ String empty = ""-->Line_51 $$ assertEquals(empty, entity.getLongString())[ FD ]
Line_12 $$ s = openSession()-->Line_56 $$ s.close()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_5 $$ String empty = ""[ CD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_11 $$ s.close()[ CD ]
Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_54 $$ s.delete(entity)[ FD ]
Line_12 $$ s = openSession()-->Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_19 $$ s = openSession()-->Line_36 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_19 $$ s = openSession()[ CD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_22 $$ assertEquals(LONG_STRING_SIZE, entity.getLongString().length())[ CD ]
Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_47 $$ assertEquals(empty.length(), entity.getLongString().trim().length())[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_20 $$ s.beginTransaction()[ CD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_40 $$ s.getTransaction().commit()[ CD ]
Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_51 $$ assertEquals(empty, entity.getLongString())[ FD ]
Line_19 $$ s = openSession()-->Line_27 $$ s = openSession()[ FD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_51 $$ assertEquals(empty, entity.getLongString())[ FD ]
Line_27 $$ s = openSession()-->Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_6 $$ Session s = openSession()-->Line_27 $$ s = openSession()[ FD ]
Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_48 $$ assertEquals(empty, entity.getLongString().trim())[ FD ]
Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_32 $$ entity.setLongString(null)[ FD ]
Line_19 $$ s = openSession()-->Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_6 $$ Session s = openSession()-->Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_42 $$ s = openSession()-->Line_55 $$ s.getTransaction().commit()[ FD ]
Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_54 $$ s.delete(entity)[ FD ]
Line_12 $$ s = openSession()-->Line_13 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ CD ]
Line_12 $$ s = openSession()-->Line_34 $$ s.close()[ FD ]
Line_12 $$ s = openSession()-->Line_40 $$ s.getTransaction().commit()[ FD ]
Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_54 $$ s.delete(entity)[ FD ]
Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_48 $$ assertEquals(empty, entity.getLongString().trim())[ FD ]
Line_6 $$ Session s = openSession()-->Line_56 $$ s.close()[ FD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_50 $$ assertEquals(empty.length(), entity.getLongString().length())[ FD ]
Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_51 $$ assertEquals(empty, entity.getLongString())[ FD ]
Line_27 $$ s = openSession()-->Line_40 $$ s.getTransaction().commit()[ FD ]
Line_35 $$ s = openSession()-->Line_43 $$ s.beginTransaction()[ FD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_38 $$ assertNull(entity.getLongString())[ FD ]
Line_6 $$ Session s = openSession()-->Line_40 $$ s.getTransaction().commit()[ FD ]
Line_6 $$ Session s = openSession()-->Line_10 $$ s.getTransaction().commit()[ FD ]
Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_31 $$ assertEquals(changed, entity.getLongString())[ FD ]
Line_19 $$ s = openSession()-->Line_33 $$ s.getTransaction().commit()[ FD ]
Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_45 $$ if (entity.getLongString() != null) [ FD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_39 $$ entity.setLongString(empty)[ FD ]
Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_47 $$ assertEquals(empty.length(), entity.getLongString().trim().length())[ FD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_12 $$ s = openSession()-->Line_26 $$ s.close()[ FD ]
Line_6 $$ Session s = openSession()-->Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_47 $$ assertEquals(empty.length(), entity.getLongString().trim().length())[ FD ]
Line_6 $$ Session s = openSession()-->Line_28 $$ s.beginTransaction()[ FD ]
Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_50 $$ assertEquals(empty.length(), entity.getLongString().length())[ FD ]
Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_23 $$ assertEquals(original, entity.getLongString())[ FD ]
Line_19 $$ s = openSession()-->Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_23 $$ assertEquals(original, entity.getLongString())[ FD ]
Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_30 $$ assertEquals(LONG_STRING_SIZE, entity.getLongString().length())[ FD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_32 $$ entity.setLongString(null)[ FD ]
Line_46 $$ if (getDialect() instanceof SybaseASE15Dialect) -->Line_48 $$ assertEquals(empty, entity.getLongString().trim())[ CD ]
Line_35 $$ s = openSession()-->Line_36 $$ s.beginTransaction()[ FD ]
Line_6 $$ Session s = openSession()-->Line_35 $$ s = openSession()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_4 $$ String changed = buildRecursively(LONG_STRING_SIZE, 'y')[ CD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_54 $$ s.delete(entity)[ CD ]
Line_6 $$ Session s = openSession()-->Line_36 $$ s.beginTransaction()[ FD ]
Line_12 $$ s = openSession()-->Line_19 $$ s = openSession()[ FD ]
Line_6 $$ Session s = openSession()-->Line_42 $$ s = openSession()[ FD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_22 $$ assertEquals(LONG_STRING_SIZE, entity.getLongString().length())[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_31 $$ assertEquals(changed, entity.getLongString())[ CD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_35 $$ s = openSession()[ CD ]
Line_12 $$ s = openSession()-->Line_43 $$ s.beginTransaction()[ FD ]
Line_6 $$ Session s = openSession()-->Line_18 $$ s.close()[ FD ]
Line_6 $$ Session s = openSession()-->Line_34 $$ s.close()[ FD ]
Line_5 $$ String empty = ""-->Line_50 $$ assertEquals(empty.length(), entity.getLongString().length())[ FD ]
Line_27 $$ s = openSession()-->Line_54 $$ s.delete(entity)[ FD ]
Line_42 $$ s = openSession()-->Line_54 $$ s.delete(entity)[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_8 $$ LongStringHolder entity = new LongStringHolder()[ CD ]
Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_45 $$ if (entity.getLongString() != null) [ FD ]
Line_12 $$ s = openSession()-->Line_55 $$ s.getTransaction().commit()[ FD ]
Line_19 $$ s = openSession()-->Line_43 $$ s.beginTransaction()[ FD ]
Line_27 $$ s = openSession()-->Line_34 $$ s.close()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_7 $$ s.beginTransaction()[ CD ]
Line_6 $$ Session s = openSession()-->Line_25 $$ s.getTransaction().commit()[ FD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_32 $$ entity.setLongString(null)[ FD ]
Line_35 $$ s = openSession()-->Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_35 $$ s = openSession()-->Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_50 $$ assertEquals(empty.length(), entity.getLongString().length())[ FD ]
Line_6 $$ Session s = openSession()-->Line_12 $$ s = openSession()[ FD ]
Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_30 $$ assertEquals(LONG_STRING_SIZE, entity.getLongString().length())[ FD ]
Line_6 $$ Session s = openSession()-->Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_27 $$ s = openSession()[ CD ]
Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_38 $$ assertNull(entity.getLongString())[ FD ]
Line_12 $$ s = openSession()-->Line_33 $$ s.getTransaction().commit()[ FD ]
Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_22 $$ assertEquals(LONG_STRING_SIZE, entity.getLongString().length())[ FD ]
Line_19 $$ s = openSession()-->Line_56 $$ s.close()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_16 $$ entity.setLongString(original)[ CD ]
Line_19 $$ s = openSession()-->Line_25 $$ s.getTransaction().commit()[ FD ]
Line_12 $$ s = openSession()-->Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_42 $$ s = openSession()-->Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_35 $$ s = openSession()-->Line_56 $$ s.close()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_10 $$ s.getTransaction().commit()[ CD ]
Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_48 $$ assertEquals(empty, entity.getLongString().trim())[ FD ]
Line_35 $$ s = openSession()-->Line_54 $$ s.delete(entity)[ FD ]
Line_12 $$ s = openSession()-->Line_54 $$ s.delete(entity)[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_28 $$ s.beginTransaction()[ CD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_31 $$ assertEquals(changed, entity.getLongString())[ FD ]
Line_6 $$ Session s = openSession()-->Line_55 $$ s.getTransaction().commit()[ FD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_47 $$ assertEquals(empty.length(), entity.getLongString().trim().length())[ FD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_38 $$ assertNull(entity.getLongString())[ FD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_47 $$ assertEquals(empty.length(), entity.getLongString().trim().length())[ FD ]
Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_50 $$ assertEquals(empty.length(), entity.getLongString().length())[ FD ]
Line_19 $$ s = openSession()-->Line_20 $$ s.beginTransaction()[ FD ]
Line_6 $$ Session s = openSession()-->Line_54 $$ s.delete(entity)[ FD ]
Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_30 $$ assertEquals(LONG_STRING_SIZE, entity.getLongString().length())[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_26 $$ s.close()[ CD ]
Line_6 $$ Session s = openSession()-->Line_41 $$ s.close()[ FD ]
Line_27 $$ s = openSession()-->Line_56 $$ s.close()[ FD ]
Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_50 $$ assertEquals(empty.length(), entity.getLongString().length())[ FD ]
Line_3 $$ String original = buildRecursively(LONG_STRING_SIZE, 'x')-->Line_23 $$ assertEquals(original, entity.getLongString())[ FD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_45 $$ if (entity.getLongString() != null) [ FD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_38 $$ assertNull(entity.getLongString())[ FD ]
Line_35 $$ s = openSession()-->Line_42 $$ s = openSession()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ CD ]
Line_19 $$ s = openSession()-->Line_40 $$ s.getTransaction().commit()[ FD ]
Line_19 $$ s = openSession()-->Line_35 $$ s = openSession()[ FD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_16 $$ entity.setLongString(original)[ FD ]
Line_19 $$ s = openSession()-->Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_39 $$ entity.setLongString(empty)[ FD ]
Line_27 $$ s = openSession()-->Line_42 $$ s = openSession()[ FD ]
Line_6 $$ Session s = openSession()-->Line_43 $$ s.beginTransaction()[ FD ]
Line_6 $$ Session s = openSession()-->Line_7 $$ s.beginTransaction()[ FD ]
Line_19 $$ s = openSession()-->Line_28 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ CD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_24 $$ entity.setLongString(changed)[ FD ]
Line_5 $$ String empty = ""-->Line_47 $$ assertEquals(empty.length(), entity.getLongString().trim().length())[ FD ]
Line_27 $$ s = openSession()-->Line_41 $$ s.close()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ CD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_24 $$ entity.setLongString(changed)[ CD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_35 $$ s = openSession()-->Line_41 $$ s.close()[ FD ]
Line_12 $$ s = openSession()-->Line_42 $$ s = openSession()[ FD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_45 $$ if (entity.getLongString() != null) [ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_12 $$ s = openSession()[ CD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_48 $$ assertEquals(empty, entity.getLongString().trim())[ FD ]
Line_19 $$ s = openSession()-->Line_54 $$ s.delete(entity)[ FD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_37 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_19 $$ s = openSession()-->Line_42 $$ s = openSession()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_34 $$ s.close()[ CD ]
Line_14 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_31 $$ assertEquals(changed, entity.getLongString())[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_25 $$ s.getTransaction().commit()[ CD ]
Line_19 $$ s = openSession()-->Line_44 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_6 $$ Session s = openSession()-->Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())[ FD ]
Line_4 $$ String changed = buildRecursively(LONG_STRING_SIZE, 'y')-->Line_31 $$ assertEquals(changed, entity.getLongString())[ FD ]
Line_12 $$ s = openSession()-->Line_36 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_17 $$ s.getTransaction().commit()[ CD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_32 $$ entity.setLongString(null)[ CD ]
Line_21 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_54 $$ s.delete(entity)[ FD ]
Line_29 $$ entity = (LongStringHolder) s.get(LongStringHolder.class, entity.getId())-->Line_31 $$ assertEquals(changed, entity.getLongString())[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_33 $$ s.getTransaction().commit()[ CD ]
Line_8 $$ LongStringHolder entity = new LongStringHolder()-->Line_15 $$ assertNull(entity.getLongString())[ FD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_23 $$ assertEquals(original, entity.getLongString())[ CD ]
Line_2 $$ public void testBoundedLongStringAccess() -->Line_56 $$ s.close()[ CD ]
