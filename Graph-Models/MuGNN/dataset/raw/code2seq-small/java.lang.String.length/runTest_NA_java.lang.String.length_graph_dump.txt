Line_4 $$ int i = in.indexOf(SEPARATOR)-->Line_5 $$ List<GraphCommit<CommitId>> commits = getCommitIdManager().parseCommitList(in.substring(0, i))[ FD ]
Line_5 $$ List<GraphCommit<CommitId>> commits = getCommitIdManager().parseCommitList(in.substring(0, i))-->Line_6 $$ LinearGraph graph = PermanentLinearGraphBuilder.newInstance(commits).build()[ FD ]
Line_6 $$ LinearGraph graph = PermanentLinearGraphBuilder.newInstance(commits).build()-->Line_8 $$ ReachableNodes reachableNodes = new ReachableNodes(LinearGraphUtils.asLiteLinearGraph(graph))[ FD ]
Line_8 $$ ReachableNodes reachableNodes = new ReachableNodes(LinearGraphUtils.asLiteLinearGraph(graph))-->Line_9 $$ assertEquals(out, containingBranchesGetterToStr(reachableNodes, branches, graph.nodesCount()))[ FD ]
Line_6 $$ LinearGraph graph = PermanentLinearGraphBuilder.newInstance(commits).build()-->Line_9 $$ assertEquals(out, containingBranchesGetterToStr(reachableNodes, branches, graph.nodesCount()))[ FD ]
Line_7 $$ Set<Integer> branches = parseBranchNodeIndex(in.substring(i + SEPARATOR.length()))-->Line_9 $$ assertEquals(out, containingBranchesGetterToStr(reachableNodes, branches, graph.nodesCount()))[ FD ]
