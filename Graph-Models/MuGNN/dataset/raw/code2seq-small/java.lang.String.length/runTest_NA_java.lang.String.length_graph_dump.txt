Line_2 $$ protected void runTest(String in, String out) -->Line_6 $$ Set<Integer> branches = parseBranchNodeIndex(in.substring(i + SEPARATOR.length()))[ FD ]
Line_2 $$ protected void runTest(String in, String out) -->Line_8 $$ assertEquals(out, containingBranchesGetterToStr(reachableNodes, branches, graph.nodesCount()))[ CD ]
Line_2 $$ protected void runTest(String in, String out) -->Line_3 $$ int i = in.indexOf(SEPARATOR)[ FD ]
Line_2 $$ protected void runTest(String in, String out) -->Line_8 $$ assertEquals(out, containingBranchesGetterToStr(reachableNodes, branches, graph.nodesCount()))[ FD ]
Line_7 $$ ReachableNodes reachableNodes = new ReachableNodes(LinearGraphUtils.asLiteLinearGraph(graph))-->Line_8 $$ assertEquals(out, containingBranchesGetterToStr(reachableNodes, branches, graph.nodesCount()))[ FD ]
Line_6 $$ Set<Integer> branches = parseBranchNodeIndex(in.substring(i + SEPARATOR.length()))-->Line_8 $$ assertEquals(out, containingBranchesGetterToStr(reachableNodes, branches, graph.nodesCount()))[ FD ]
Line_2 $$ protected void runTest(String in, String out) -->Line_4 $$ List<GraphCommit<CommitId>> commits = getCommitIdManager().parseCommitList(in.substring(0, i))[ CD ]
Line_5 $$ LinearGraph graph = PermanentLinearGraphBuilder.newInstance(commits).build()-->Line_7 $$ ReachableNodes reachableNodes = new ReachableNodes(LinearGraphUtils.asLiteLinearGraph(graph))[ FD ]
Line_5 $$ LinearGraph graph = PermanentLinearGraphBuilder.newInstance(commits).build()-->Line_8 $$ assertEquals(out, containingBranchesGetterToStr(reachableNodes, branches, graph.nodesCount()))[ FD ]
Line_2 $$ protected void runTest(String in, String out) -->Line_5 $$ LinearGraph graph = PermanentLinearGraphBuilder.newInstance(commits).build()[ CD ]
Line_2 $$ protected void runTest(String in, String out) -->Line_7 $$ ReachableNodes reachableNodes = new ReachableNodes(LinearGraphUtils.asLiteLinearGraph(graph))[ CD ]
Line_2 $$ protected void runTest(String in, String out) -->Line_3 $$ int i = in.indexOf(SEPARATOR)[ CD ]
Line_2 $$ protected void runTest(String in, String out) -->Line_4 $$ List<GraphCommit<CommitId>> commits = getCommitIdManager().parseCommitList(in.substring(0, i))[ FD ]
Line_4 $$ List<GraphCommit<CommitId>> commits = getCommitIdManager().parseCommitList(in.substring(0, i))-->Line_5 $$ LinearGraph graph = PermanentLinearGraphBuilder.newInstance(commits).build()[ FD ]
Line_2 $$ protected void runTest(String in, String out) -->Line_6 $$ Set<Integer> branches = parseBranchNodeIndex(in.substring(i + SEPARATOR.length()))[ CD ]
Line_3 $$ int i = in.indexOf(SEPARATOR)-->Line_4 $$ List<GraphCommit<CommitId>> commits = getCommitIdManager().parseCommitList(in.substring(0, i))[ FD ]
