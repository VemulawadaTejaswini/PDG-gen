Line_2 $$ private static int findLongestDirPrefix(String cwd, String path, boolean isDir) -->Line_7 $$ if (isDir && !path.endsWith(Path.SEPARATOR)) [ FD ]
Line_7 $$ if (isDir && !path.endsWith(Path.SEPARATOR)) -->Line_8 $$ path += Path.SEPARATOR[ CD ]
Line_13 $$ for (int i = 0; i < len; i++) -->Line_14 $$ if (cwd.charAt(i) != path.charAt(i))[ CD ]
Line_13 $$ for (int i = 0; i < len; i++) -->Line_16 $$ if (cwd.charAt(i) == Path.SEPARATOR_CHAR)[ CD ]
Line_2 $$ private static int findLongestDirPrefix(String cwd, String path, boolean isDir) -->Line_7 $$ if (isDir && !path.endsWith(Path.SEPARATOR)) [ CD ]
Line_2 $$ private static int findLongestDirPrefix(String cwd, String path, boolean isDir) -->Line_14 $$ if (cwd.charAt(i) != path.charAt(i))[ FD ]
Line_13 $$ for (int i = 0; i < len; i++) -->Line_17 $$ lastSep = i[ FD ]
Line_2 $$ private static int findLongestDirPrefix(String cwd, String path, boolean isDir) -->Line_8 $$ path += Path.SEPARATOR[ FD ]
Line_2 $$ private static int findLongestDirPrefix(String cwd, String path, boolean isDir) -->Line_16 $$ if (cwd.charAt(i) == Path.SEPARATOR_CHAR)[ FD ]
Line_13 $$ for (int i = 0; i < len; i++) -->Line_14 $$ if (cwd.charAt(i) != path.charAt(i))[ FD ]
Line_12 $$ int lastSep = -1-->Line_17 $$ lastSep = i[ FD ]
Line_16 $$ if (cwd.charAt(i) == Path.SEPARATOR_CHAR)-->Line_17 $$ lastSep = i[ CD ]
Line_2 $$ private static int findLongestDirPrefix(String cwd, String path, boolean isDir) -->Line_12 $$ int lastSep = -1[ CD ]
Line_2 $$ private static int findLongestDirPrefix(String cwd, String path, boolean isDir) -->Line_13 $$ for (int i = 0; i < len; i++) [ CD ]
Line_8 $$ path += Path.SEPARATOR-->Line_14 $$ if (cwd.charAt(i) != path.charAt(i))[ FD ]
Line_5 $$ cwd += Path.SEPARATOR-->Line_16 $$ if (cwd.charAt(i) == Path.SEPARATOR_CHAR)[ FD ]
Line_2 $$ private static int findLongestDirPrefix(String cwd, String path, boolean isDir) -->Line_5 $$ cwd += Path.SEPARATOR[ FD ]
Line_5 $$ cwd += Path.SEPARATOR-->Line_14 $$ if (cwd.charAt(i) != path.charAt(i))[ FD ]
Line_2 $$ private static int findLongestDirPrefix(String cwd, String path, boolean isDir) -->Line_19 $$ return lastSep[ CD ]
Line_13 $$ for (int i = 0; i < len; i++) -->Line_16 $$ if (cwd.charAt(i) == Path.SEPARATOR_CHAR)[ FD ]
