Line_4 $$ final XmlFileImpl file = (XmlFileImpl) createFile(name + ".xml", text)-->Line_30 $$ performFormatting(file)[ FD ]
Line_4 $$ final XmlFileImpl file = (XmlFileImpl) createFile(name + ".xml", text)-->Line_10 $$ performFormatting(file)[ FD ]
Line_16 $$ CommandProcessor.getInstance().executeCommand(getProject(), new Runnable() -->Line_18 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() [ CD ]
Line_6 $$ CommandProcessor.getInstance().executeCommand(getProject(), new Runnable() -->Line_8 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() [ CD ]
Line_18 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_20 $$ performFormatting(file)[ CD ]
Line_2 $$ protected void checkFormattingDoesNotProduceException(String name) throws Exception -->Line_26 $$ CommandProcessor.getInstance().executeCommand(getProject(), new Runnable() [ CD ]
Line_3 $$ String text = loadFile(name + ".xml", null)-->Line_25 $$ myTextRange = new TextRange(0, text.length())[ FD ]
Line_4 $$ final XmlFileImpl file = (XmlFileImpl) createFile(name + ".xml", text)-->Line_20 $$ performFormatting(file)[ FD ]
Line_8 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_10 $$ performFormatting(file)[ CD ]
Line_2 $$ protected void checkFormattingDoesNotProduceException(String name) throws Exception -->Line_6 $$ CommandProcessor.getInstance().executeCommand(getProject(), new Runnable() [ CD ]
Line_2 $$ protected void checkFormattingDoesNotProduceException(String name) throws Exception -->Line_3 $$ String text = loadFile(name + ".xml", null)[ CD ]
Line_28 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_30 $$ performFormatting(file)[ CD ]
Line_26 $$ CommandProcessor.getInstance().executeCommand(getProject(), new Runnable() -->Line_28 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() [ CD ]
Line_2 $$ protected void checkFormattingDoesNotProduceException(String name) throws Exception -->Line_4 $$ final XmlFileImpl file = (XmlFileImpl) createFile(name + ".xml", text)[ CD ]
Line_2 $$ protected void checkFormattingDoesNotProduceException(String name) throws Exception -->Line_16 $$ CommandProcessor.getInstance().executeCommand(getProject(), new Runnable() [ CD ]
Line_3 $$ String text = loadFile(name + ".xml", null)-->Line_4 $$ final XmlFileImpl file = (XmlFileImpl) createFile(name + ".xml", text)[ FD ]
