Line_6 $$ String tabs2 = matcher.group(2)-->Line_7 $$ if ((startTag && ((tabs1.length() + 1) == tabs2.length())) || (!startTag && ((tabs1.length() - 1) == tabs2.length()))) [ FD ]
Line_4 $$ while (matcher.find()) -->Line_5 $$ String tabs1 = matcher.group(1)[ CD ]
Line_2 $$ protected String fixEmptyLineInNestedTags(String content, Pattern pattern, boolean startTag) -->Line_8 $$ content = StringUtil.replaceFirst(content, StringPool.NEW_LINE, StringPool.BLANK, matcher.end(1))[ FD ]
Line_2 $$ protected String fixEmptyLineInNestedTags(String content, Pattern pattern, boolean startTag) -->Line_3 $$ Matcher matcher = pattern.matcher(content)[ FD ]
Line_3 $$ Matcher matcher = pattern.matcher(content)-->Line_8 $$ content = StringUtil.replaceFirst(content, StringPool.NEW_LINE, StringPool.BLANK, matcher.end(1))[ FD ]
Line_2 $$ protected String fixEmptyLineInNestedTags(String content, Pattern pattern, boolean startTag) -->Line_7 $$ if ((startTag && ((tabs1.length() + 1) == tabs2.length())) || (!startTag && ((tabs1.length() - 1) == tabs2.length()))) [ FD ]
Line_4 $$ while (matcher.find()) -->Line_7 $$ if ((startTag && ((tabs1.length() + 1) == tabs2.length())) || (!startTag && ((tabs1.length() - 1) == tabs2.length()))) [ CD ]
Line_5 $$ String tabs1 = matcher.group(1)-->Line_7 $$ if ((startTag && ((tabs1.length() + 1) == tabs2.length())) || (!startTag && ((tabs1.length() - 1) == tabs2.length()))) [ FD ]
Line_2 $$ protected String fixEmptyLineInNestedTags(String content, Pattern pattern, boolean startTag) -->Line_3 $$ Matcher matcher = pattern.matcher(content)[ CD ]
Line_2 $$ protected String fixEmptyLineInNestedTags(String content, Pattern pattern, boolean startTag) -->Line_11 $$ return content[ CD ]
Line_7 $$ if ((startTag && ((tabs1.length() + 1) == tabs2.length())) || (!startTag && ((tabs1.length() - 1) == tabs2.length()))) -->Line_8 $$ content = StringUtil.replaceFirst(content, StringPool.NEW_LINE, StringPool.BLANK, matcher.end(1))[ CD ]
Line_3 $$ Matcher matcher = pattern.matcher(content)-->Line_5 $$ String tabs1 = matcher.group(1)[ FD ]
Line_2 $$ protected String fixEmptyLineInNestedTags(String content, Pattern pattern, boolean startTag) -->Line_4 $$ while (matcher.find()) [ CD ]
Line_4 $$ while (matcher.find()) -->Line_6 $$ String tabs2 = matcher.group(2)[ CD ]
Line_3 $$ Matcher matcher = pattern.matcher(content)-->Line_4 $$ while (matcher.find()) [ FD ]
Line_3 $$ Matcher matcher = pattern.matcher(content)-->Line_6 $$ String tabs2 = matcher.group(2)[ FD ]
