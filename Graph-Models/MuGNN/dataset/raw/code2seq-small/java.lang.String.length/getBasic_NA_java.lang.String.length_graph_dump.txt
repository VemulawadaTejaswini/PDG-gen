Line_28 $$ if (work.inTxn())-->Line_31 $$ res = work.oldState.get(name)[ CD ]
Line_21 $$ res = String.valueOf(work.commitCnt)-->Line_39 $$ res = work.recoveryUrl[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_34 $$ if (work == null)[ CD ]
Line_19 $$ res = String.valueOf(work.syncCount)-->Line_41 $$ res = work.status[ FD ]
Line_24 $$ if ("rollbackCnt".equals(name))-->Line_25 $$ res = String.valueOf(work.rollbackCnt)[ CD ]
Line_9 $$ if (work == null) -->Line_12 $$ faults.put(work.id, work)[ CD ]
Line_38 $$ if ("recoveryUrl".equals(query))-->Line_40 $$ if ("status".equals(query))[ CD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_6 $$ boolean isTwoPhaseAware = "true".equals(twoPhaseAware)[ CD ]
Line_41 $$ res = work.status-->Line_42 $$ if (res == null)[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_5 $$ boolean isVolatile = "true".equals(isVolatileParticipant)[ CD ]
Line_25 $$ res = String.valueOf(work.rollbackCnt)-->Line_27 $$ res = String.valueOf(work.commmitOnePhaseCnt)[ FD ]
Line_23 $$ res = String.valueOf(work.prepareCnt)-->Line_29 $$ res = work.newState.get(name)[ FD ]
Line_29 $$ res = work.newState.get(name)-->Line_42 $$ if (res == null)[ FD ]
Line_9 $$ if (work == null) -->Line_11 $$ work.oldState.put(name, value)[ CD ]
Line_9 $$ if (work == null) -->Line_13 $$ return work.id[ CD ]
Line_21 $$ res = String.valueOf(work.commitCnt)-->Line_43 $$ res = work.pLinks[ FD ]
Line_8 $$ if (value.length() != 0) -->Line_15 $$ work.newState.put(name, value)[ CD ]
Line_25 $$ res = String.valueOf(work.rollbackCnt)-->Line_41 $$ res = work.status[ FD ]
Line_19 $$ res = String.valueOf(work.syncCount)-->Line_39 $$ res = work.recoveryUrl[ FD ]
Line_19 $$ res = String.valueOf(work.syncCount)-->Line_27 $$ res = String.valueOf(work.commmitOnePhaseCnt)[ FD ]
Line_22 $$ if ("prepareCnt".equals(name))-->Line_24 $$ if ("rollbackCnt".equals(name))[ CD ]
Line_27 $$ res = String.valueOf(work.commmitOnePhaseCnt)-->Line_41 $$ res = work.status[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_15 $$ work.newState.put(name, value)[ FD ]
Line_18 $$ if ("syncCount".equals(name))-->Line_20 $$ if ("commitCnt".equals(name))[ CD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_44 $$ return res[ CD ]
Line_19 $$ res = String.valueOf(work.syncCount)-->Line_25 $$ res = String.valueOf(work.rollbackCnt)[ FD ]
Line_7 $$ if (name.length() != 0) -->Line_17 $$ if (work != null) [ CD ]
Line_6 $$ boolean isTwoPhaseAware = "true".equals(twoPhaseAware)-->Line_10 $$ work = makeWork(new TxSupport(), info.getAbsolutePath().toString(), String.valueOf(++pid), null, null, isTwoPhaseAware, isVolatile, null, null)[ FD ]
Line_26 $$ if ("commmitOnePhaseCnt".equals(name))-->Line_27 $$ res = String.valueOf(work.commmitOnePhaseCnt)[ CD ]
Line_21 $$ res = String.valueOf(work.commitCnt)-->Line_31 $$ res = work.oldState.get(name)[ FD ]
Line_4 $$ String res = null-->Line_39 $$ res = work.recoveryUrl[ FD ]
Line_5 $$ boolean isVolatile = "true".equals(isVolatileParticipant)-->Line_10 $$ work = makeWork(new TxSupport(), info.getAbsolutePath().toString(), String.valueOf(++pid), null, null, isTwoPhaseAware, isVolatile, null, null)[ FD ]
Line_4 $$ String res = null-->Line_43 $$ res = work.pLinks[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_31 $$ res = work.oldState.get(name)[ FD ]
Line_42 $$ if (res == null)-->Line_43 $$ res = work.pLinks[ CD ]
Line_21 $$ res = String.valueOf(work.commitCnt)-->Line_23 $$ res = String.valueOf(work.prepareCnt)[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_22 $$ if ("prepareCnt".equals(name))[ FD ]
Line_40 $$ if ("status".equals(query))-->Line_42 $$ if (res == null)[ CD ]
Line_21 $$ res = String.valueOf(work.commitCnt)-->Line_27 $$ res = String.valueOf(work.commmitOnePhaseCnt)[ FD ]
Line_3 $$ Work work = faults.get(pId)-->Line_12 $$ faults.put(work.id, work)[ FD ]
Line_23 $$ res = String.valueOf(work.prepareCnt)-->Line_31 $$ res = work.oldState.get(name)[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_4 $$ String res = null[ CD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_40 $$ if ("status".equals(query))[ FD ]
Line_10 $$ work = makeWork(new TxSupport(), info.getAbsolutePath().toString(), String.valueOf(++pid), null, null, isTwoPhaseAware, isVolatile, null, null)-->Line_28 $$ if (work.inTxn())[ FD ]
Line_23 $$ res = String.valueOf(work.prepareCnt)-->Line_41 $$ res = work.status[ FD ]
Line_9 $$ if (work == null) -->Line_10 $$ work = makeWork(new TxSupport(), info.getAbsolutePath().toString(), String.valueOf(++pid), null, null, isTwoPhaseAware, isVolatile, null, null)[ CD ]
Line_39 $$ res = work.recoveryUrl-->Line_41 $$ res = work.status[ FD ]
Line_27 $$ res = String.valueOf(work.commmitOnePhaseCnt)-->Line_42 $$ if (res == null)[ FD ]
Line_25 $$ res = String.valueOf(work.rollbackCnt)-->Line_43 $$ res = work.pLinks[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_3 $$ Work work = faults.get(pId)[ FD ]
Line_20 $$ if ("commitCnt".equals(name))-->Line_22 $$ if ("prepareCnt".equals(name))[ CD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_7 $$ if (name.length() != 0) [ FD ]
Line_4 $$ String res = null-->Line_31 $$ res = work.oldState.get(name)[ FD ]
Line_28 $$ if (work.inTxn())-->Line_29 $$ res = work.newState.get(name)[ CD ]
Line_4 $$ String res = null-->Line_41 $$ res = work.status[ FD ]
Line_29 $$ res = work.newState.get(name)-->Line_31 $$ res = work.oldState.get(name)[ FD ]
Line_3 $$ Work work = faults.get(pId)-->Line_34 $$ if (work == null)[ FD ]
Line_20 $$ if ("commitCnt".equals(name))-->Line_21 $$ res = String.valueOf(work.commitCnt)[ CD ]
Line_31 $$ res = work.oldState.get(name)-->Line_39 $$ res = work.recoveryUrl[ FD ]
Line_4 $$ String res = null-->Line_27 $$ res = String.valueOf(work.commmitOnePhaseCnt)[ FD ]
Line_31 $$ res = work.oldState.get(name)-->Line_42 $$ if (res == null)[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_20 $$ if ("commitCnt".equals(name))[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_5 $$ boolean isVolatile = "true".equals(isVolatileParticipant)[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_24 $$ if ("rollbackCnt".equals(name))[ FD ]
Line_19 $$ res = String.valueOf(work.syncCount)-->Line_23 $$ res = String.valueOf(work.prepareCnt)[ FD ]
Line_39 $$ res = work.recoveryUrl-->Line_43 $$ res = work.pLinks[ FD ]
Line_23 $$ res = String.valueOf(work.prepareCnt)-->Line_39 $$ res = work.recoveryUrl[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_3 $$ Work work = faults.get(pId)[ CD ]
Line_19 $$ res = String.valueOf(work.syncCount)-->Line_31 $$ res = work.oldState.get(name)[ FD ]
Line_22 $$ if ("prepareCnt".equals(name))-->Line_23 $$ res = String.valueOf(work.prepareCnt)[ CD ]
Line_3 $$ Work work = faults.get(pId)-->Line_10 $$ work = makeWork(new TxSupport(), info.getAbsolutePath().toString(), String.valueOf(++pid), null, null, isTwoPhaseAware, isVolatile, null, null)[ FD ]
Line_29 $$ res = work.newState.get(name)-->Line_41 $$ res = work.status[ FD ]
Line_4 $$ String res = null-->Line_25 $$ res = String.valueOf(work.rollbackCnt)[ FD ]
Line_3 $$ Work work = faults.get(pId)-->Line_17 $$ if (work != null) [ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_11 $$ work.oldState.put(name, value)[ FD ]
Line_25 $$ res = String.valueOf(work.rollbackCnt)-->Line_31 $$ res = work.oldState.get(name)[ FD ]
Line_17 $$ if (work != null) -->Line_18 $$ if ("syncCount".equals(name))[ CD ]
Line_4 $$ String res = null-->Line_29 $$ res = work.newState.get(name)[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_7 $$ if (name.length() != 0) [ CD ]
Line_36 $$ if ("move".equals(query))-->Line_38 $$ if ("recoveryUrl".equals(query))[ CD ]
Line_29 $$ res = work.newState.get(name)-->Line_39 $$ res = work.recoveryUrl[ FD ]
Line_24 $$ if ("rollbackCnt".equals(name))-->Line_26 $$ if ("commmitOnePhaseCnt".equals(name))[ CD ]
Line_21 $$ res = String.valueOf(work.commitCnt)-->Line_29 $$ res = work.newState.get(name)[ FD ]
Line_25 $$ res = String.valueOf(work.rollbackCnt)-->Line_42 $$ if (res == null)[ FD ]
Line_23 $$ res = String.valueOf(work.prepareCnt)-->Line_42 $$ if (res == null)[ FD ]
Line_19 $$ res = String.valueOf(work.syncCount)-->Line_42 $$ if (res == null)[ FD ]
Line_23 $$ res = String.valueOf(work.prepareCnt)-->Line_27 $$ res = String.valueOf(work.commmitOnePhaseCnt)[ FD ]
Line_8 $$ if (value.length() != 0) -->Line_9 $$ if (work == null) [ CD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_18 $$ if ("syncCount".equals(name))[ FD ]
Line_27 $$ res = String.valueOf(work.commmitOnePhaseCnt)-->Line_39 $$ res = work.recoveryUrl[ FD ]
Line_10 $$ work = makeWork(new TxSupport(), info.getAbsolutePath().toString(), String.valueOf(++pid), null, null, isTwoPhaseAware, isVolatile, null, null)-->Line_12 $$ faults.put(work.id, work)[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_10 $$ work = makeWork(new TxSupport(), info.getAbsolutePath().toString(), String.valueOf(++pid), null, null, isTwoPhaseAware, isVolatile, null, null)[ FD ]
Line_4 $$ String res = null-->Line_21 $$ res = String.valueOf(work.commitCnt)[ FD ]
Line_4 $$ String res = null-->Line_23 $$ res = String.valueOf(work.prepareCnt)[ FD ]
Line_3 $$ Work work = faults.get(pId)-->Line_9 $$ if (work == null) [ FD ]
Line_31 $$ res = work.oldState.get(name)-->Line_41 $$ res = work.status[ FD ]
Line_21 $$ res = String.valueOf(work.commitCnt)-->Line_41 $$ res = work.status[ FD ]
Line_29 $$ res = work.newState.get(name)-->Line_43 $$ res = work.pLinks[ FD ]
Line_23 $$ res = String.valueOf(work.prepareCnt)-->Line_43 $$ res = work.pLinks[ FD ]
Line_41 $$ res = work.status-->Line_43 $$ res = work.pLinks[ FD ]
Line_25 $$ res = String.valueOf(work.rollbackCnt)-->Line_29 $$ res = work.newState.get(name)[ FD ]
Line_7 $$ if (name.length() != 0) -->Line_8 $$ if (value.length() != 0) [ CD ]
Line_4 $$ String res = null-->Line_19 $$ res = String.valueOf(work.syncCount)[ FD ]
Line_21 $$ res = String.valueOf(work.commitCnt)-->Line_42 $$ if (res == null)[ FD ]
Line_38 $$ if ("recoveryUrl".equals(query))-->Line_39 $$ res = work.recoveryUrl[ CD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_38 $$ if ("recoveryUrl".equals(query))[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_26 $$ if ("commmitOnePhaseCnt".equals(name))[ FD ]
Line_31 $$ res = work.oldState.get(name)-->Line_43 $$ res = work.pLinks[ FD ]
Line_19 $$ res = String.valueOf(work.syncCount)-->Line_21 $$ res = String.valueOf(work.commitCnt)[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_8 $$ if (value.length() != 0) [ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_36 $$ if ("move".equals(query))[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_29 $$ res = work.newState.get(name)[ FD ]
Line_39 $$ res = work.recoveryUrl-->Line_42 $$ if (res == null)[ FD ]
Line_26 $$ if ("commmitOnePhaseCnt".equals(name))-->Line_28 $$ if (work.inTxn())[ CD ]
Line_19 $$ res = String.valueOf(work.syncCount)-->Line_29 $$ res = work.newState.get(name)[ FD ]
Line_23 $$ res = String.valueOf(work.prepareCnt)-->Line_25 $$ res = String.valueOf(work.rollbackCnt)[ FD ]
Line_25 $$ res = String.valueOf(work.rollbackCnt)-->Line_39 $$ res = work.recoveryUrl[ FD ]
Line_3 $$ Work work = faults.get(pId)-->Line_28 $$ if (work.inTxn())[ FD ]
Line_21 $$ res = String.valueOf(work.commitCnt)-->Line_25 $$ res = String.valueOf(work.rollbackCnt)[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_36 $$ if ("move".equals(query))[ CD ]
Line_10 $$ work = makeWork(new TxSupport(), info.getAbsolutePath().toString(), String.valueOf(++pid), null, null, isTwoPhaseAware, isVolatile, null, null)-->Line_17 $$ if (work != null) [ FD ]
Line_40 $$ if ("status".equals(query))-->Line_41 $$ res = work.status[ CD ]
Line_10 $$ work = makeWork(new TxSupport(), info.getAbsolutePath().toString(), String.valueOf(++pid), null, null, isTwoPhaseAware, isVolatile, null, null)-->Line_34 $$ if (work == null)[ FD ]
Line_19 $$ res = String.valueOf(work.syncCount)-->Line_43 $$ res = work.pLinks[ FD ]
Line_2 $$ public String getBasic(@Context UriInfo info, @QueryParam("pId") @DefaultValue("") String pId, @QueryParam("context") @DefaultValue("") String ctx, @QueryParam("name") @DefaultValue("") String name, @QueryParam("value") @DefaultValue("") String value, @QueryParam("query") @DefaultValue("pUrl") String query, @QueryParam("arg") @DefaultValue("") String arg, @QueryParam("twoPhaseAware") @DefaultValue("true") String twoPhaseAware, @QueryParam("isVolatile") @DefaultValue("false") String isVolatileParticipant, @QueryParam("register") @DefaultValue("true") String register) -->Line_6 $$ boolean isTwoPhaseAware = "true".equals(twoPhaseAware)[ FD ]
Line_27 $$ res = String.valueOf(work.commmitOnePhaseCnt)-->Line_29 $$ res = work.newState.get(name)[ FD ]
Line_27 $$ res = String.valueOf(work.commmitOnePhaseCnt)-->Line_31 $$ res = work.oldState.get(name)[ FD ]
Line_4 $$ String res = null-->Line_42 $$ if (res == null)[ FD ]
Line_27 $$ res = String.valueOf(work.commmitOnePhaseCnt)-->Line_43 $$ res = work.pLinks[ FD ]
Line_18 $$ if ("syncCount".equals(name))-->Line_19 $$ res = String.valueOf(work.syncCount)[ CD ]
