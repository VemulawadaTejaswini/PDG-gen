Line_12 $$ final String arg = args[i]-->Line_24 $$ if (!processProperties(arg, args[++i])) [ FD ]
Line_16 $$ if (CommandLineConstants.VERSION.equals(arg) || CommandLineConstants.SHORT_VERSION.equals(arg) || CommandLineConstants.OLD_VERSION.equals(arg) || CommandLineConstants.OLD_SHORT_VERSION.equals(arg)) -->Line_18 $$ STDOUT.println(productConfig.getPrettyVersionString())[ CD ]
Line_9 $$ ProductConfig productConfig-->Line_100 $$ productConfig = new ProductConfig(Module.getBootModuleLoader(), WildFlySecurityManager.getPropertyPrivileged(ServerEnvironment.HOME_DIR, null), systemProperties)[ FD ]
Line_70 $$ String name, value-->Line_73 $$ name = arg.substring(2)[ FD ]
Line_70 $$ String name, value-->Line_76 $$ name = arg.substring(2, idx)[ FD ]
Line_39 $$ if (urlSpec == null || !processProperties(arg, urlSpec)) -->Line_40 $$ return null[ CD ]
Line_12 $$ final String arg = args[i]-->Line_37 $$ if (arg.startsWith(CommandLineConstants.OLD_PROPERTIES)) [ FD ]
Line_12 $$ final String arg = args[i]-->Line_39 $$ if (urlSpec == null || !processProperties(arg, urlSpec)) [ FD ]
Line_63 $$ if (arg.startsWith(CommandLineConstants.CONNECTION_PROPERTIES)) -->Line_67 $$ String fileUrl = parseValue(arg, CommandLineConstants.CONNECTION_PROPERTIES)[ CD ]
Line_10 $$ boolean hostSet = false-->Line_53 $$ hostSet = true[ FD ]
Line_63 $$ if (arg.startsWith(CommandLineConstants.CONNECTION_PROPERTIES)) -->Line_64 $$ if (hostSet) [ CD ]
Line_76 $$ name = arg.substring(2, idx)-->Line_79 $$ systemProperties.setProperty(name, value)[ FD ]
Line_85 $$ if (arg.startsWith("-")) -->Line_87 $$ usage()[ CD ]
Line_2 $$ public static ParsedOptions determineEnvironment(String[] args, Properties systemProperties, Map<String, String> systemEnvironment, ServerEnvironment.LaunchType launchType) -->Line_7 $$ String appClientConfig = "appclient.xml"[ CD ]
Line_9 $$ ProductConfig productConfig-->Line_18 $$ STDOUT.println(productConfig.getPrettyVersionString())[ FD ]
Line_2 $$ public static ParsedOptions determineEnvironment(String[] args, Properties systemProperties, Map<String, String> systemEnvironment, ServerEnvironment.LaunchType launchType) -->Line_101 $$ ret.environment = new ServerEnvironment(hostControllerName, systemProperties, systemEnvironment, appClientConfig, null, launchType, null, productConfig)[ CD ]
Line_56 $$ if (arg.startsWith(CommandLineConstants.HOST)) -->Line_57 $$ if (ret.propertiesFile != null) [ CD ]
Line_29 $$ if (urlSpec == null || !processProperties(arg, urlSpec)) -->Line_30 $$ return null[ CD ]
Line_2 $$ public static ParsedOptions determineEnvironment(String[] args, Properties systemProperties, Map<String, String> systemEnvironment, ServerEnvironment.LaunchType launchType) -->Line_99 $$ String hostControllerName = null[ CD ]
Line_20 $$ if (CommandLineConstants.HELP.equals(arg) || CommandLineConstants.SHORT_HELP.equals(arg) || CommandLineConstants.OLD_HELP.equals(arg)) -->Line_21 $$ usage()[ CD ]
Line_37 $$ if (arg.startsWith(CommandLineConstants.OLD_PROPERTIES)) -->Line_38 $$ String urlSpec = parseValue(arg, CommandLineConstants.OLD_PROPERTIES)[ CD ]
Line_12 $$ final String arg = args[i]-->Line_20 $$ if (CommandLineConstants.HELP.equals(arg) || CommandLineConstants.SHORT_HELP.equals(arg) || CommandLineConstants.OLD_HELP.equals(arg)) [ FD ]
Line_77 $$ value = arg.substring(idx + 1, arg.length())-->Line_80 $$ WildFlySecurityManager.setPropertyPrivileged(name, value)[ FD ]
Line_85 $$ if (arg.startsWith("-")) -->Line_88 $$ return null[ CD ]
Line_10 $$ boolean hostSet = false-->Line_60 $$ hostSet = true[ FD ]
Line_67 $$ String fileUrl = parseValue(arg, CommandLineConstants.CONNECTION_PROPERTIES)-->Line_68 $$ ret.propertiesFile = fileUrl[ FD ]
Line_70 $$ String name, value-->Line_79 $$ systemProperties.setProperty(name, value)[ FD ]
Line_2 $$ public static ParsedOptions determineEnvironment(String[] args, Properties systemProperties, Map<String, String> systemEnvironment, ServerEnvironment.LaunchType launchType) -->Line_10 $$ boolean hostSet = false[ CD ]
Line_14 $$ if (clientArgs) -->Line_16 $$ if (CommandLineConstants.VERSION.equals(arg) || CommandLineConstants.SHORT_VERSION.equals(arg) || CommandLineConstants.OLD_VERSION.equals(arg) || CommandLineConstants.OLD_SHORT_VERSION.equals(arg)) [ CD ]
Line_11 $$ for (int i = 0; i < argsLength; i++) -->Line_12 $$ final String arg = args[i][ CD ]
Line_28 $$ String urlSpec = parseValue(arg, CommandLineConstants.PROPERTIES)-->Line_34 $$ if (urlSpec == null || !processProperties(arg, urlSpec)) [ FD ]
Line_12 $$ final String arg = args[i]-->Line_54 $$ String urlSpec = parseValue(arg, CommandLineConstants.SHORT_HOST)[ FD ]
Line_17 $$ productConfig = new ProductConfig(Module.getBootModuleLoader(), WildFlySecurityManager.getPropertyPrivileged(ServerEnvironment.HOME_DIR, null), null)-->Line_18 $$ STDOUT.println(productConfig.getPrettyVersionString())[ FD ]
Line_32 $$ if (arg.startsWith(CommandLineConstants.SHORT_PROPERTIES)) -->Line_34 $$ if (urlSpec == null || !processProperties(arg, urlSpec)) [ CD ]
Line_28 $$ String urlSpec = parseValue(arg, CommandLineConstants.PROPERTIES)-->Line_62 $$ ret.hostUrl = urlSpec[ FD ]
Line_81 $$ if (arg.startsWith(CommandLineConstants.APPCLIENT_CONFIG)) -->Line_83 $$ if (CommandLineConstants.SECMGR.equals(arg)) [ CD ]
Line_12 $$ final String arg = args[i]-->Line_76 $$ name = arg.substring(2, idx)[ FD ]
Line_8 $$ boolean clientArgs = false-->Line_90 $$ clientArgs = true[ FD ]
Line_10 $$ boolean hostSet = false-->Line_46 $$ hostSet = true[ FD ]
Line_63 $$ if (arg.startsWith(CommandLineConstants.CONNECTION_PROPERTIES)) -->Line_69 $$ if (arg.startsWith(CommandLineConstants.SYS_PROP)) [ CD ]
Line_3 $$ List<String> clientArguments = new ArrayList<String>()-->Line_91 $$ clientArguments.add(arg)[ FD ]
Line_2 $$ public static ParsedOptions determineEnvironment(String[] args, Properties systemProperties, Map<String, String> systemEnvironment, ServerEnvironment.LaunchType launchType) -->Line_11 $$ for (int i = 0; i < argsLength; i++) [ CD ]
Line_56 $$ if (arg.startsWith(CommandLineConstants.HOST)) -->Line_63 $$ if (arg.startsWith(CommandLineConstants.CONNECTION_PROPERTIES)) [ CD ]
Line_2 $$ public static ParsedOptions determineEnvironment(String[] args, Properties systemProperties, Map<String, String> systemEnvironment, ServerEnvironment.LaunchType launchType) -->Line_5 $$ ret.clientArguments = clientArguments[ CD ]
Line_32 $$ if (arg.startsWith(CommandLineConstants.SHORT_PROPERTIES)) -->Line_33 $$ String urlSpec = parseValue(arg, CommandLineConstants.SHORT_PROPERTIES)[ CD ]
Line_12 $$ final String arg = args[i]-->Line_77 $$ value = arg.substring(idx + 1, arg.length())[ FD ]
Line_42 $$ if (arg.equals(CommandLineConstants.SHORT_HOST) || arg.equals(CommandLineConstants.HOST)) -->Line_49 $$ if (arg.startsWith(CommandLineConstants.SHORT_HOST)) [ CD ]
Line_28 $$ String urlSpec = parseValue(arg, CommandLineConstants.PROPERTIES)-->Line_29 $$ if (urlSpec == null || !processProperties(arg, urlSpec)) [ FD ]
Line_14 $$ if (clientArgs) -->Line_15 $$ clientArguments.add(arg)[ CD ]
Line_69 $$ if (arg.startsWith(CommandLineConstants.SYS_PROP)) -->Line_70 $$ String name, value[ CD ]
Line_23 $$ if (CommandLineConstants.PROPERTIES.equals(arg) || CommandLineConstants.OLD_PROPERTIES.equals(arg) || CommandLineConstants.SHORT_PROPERTIES.equals(arg)) -->Line_27 $$ if (arg.startsWith(CommandLineConstants.PROPERTIES)) [ CD ]
Line_6 $$ final int argsLength = args.length-->Line_11 $$ for (int i = 0; i < argsLength; i++) [ FD ]
Line_73 $$ name = arg.substring(2)-->Line_76 $$ name = arg.substring(2, idx)[ FD ]
Line_12 $$ final String arg = args[i]-->Line_16 $$ if (CommandLineConstants.VERSION.equals(arg) || CommandLineConstants.SHORT_VERSION.equals(arg) || CommandLineConstants.OLD_VERSION.equals(arg) || CommandLineConstants.OLD_SHORT_VERSION.equals(arg)) [ FD ]
Line_16 $$ if (CommandLineConstants.VERSION.equals(arg) || CommandLineConstants.SHORT_VERSION.equals(arg) || CommandLineConstants.OLD_VERSION.equals(arg) || CommandLineConstants.OLD_SHORT_VERSION.equals(arg)) -->Line_19 $$ return null[ CD ]
Line_2 $$ public static ParsedOptions determineEnvironment(String[] args, Properties systemProperties, Map<String, String> systemEnvironment, ServerEnvironment.LaunchType launchType) -->Line_4 $$ ParsedOptions ret = new ParsedOptions()[ CD ]
Line_7 $$ String appClientConfig = "appclient.xml"-->Line_82 $$ appClientConfig = parseValue(arg, CommandLineConstants.APPCLIENT_CONFIG)[ FD ]
Line_83 $$ if (CommandLineConstants.SECMGR.equals(arg)) -->Line_90 $$ clientArgs = true[ CD ]
Line_27 $$ if (arg.startsWith(CommandLineConstants.PROPERTIES)) -->Line_32 $$ if (arg.startsWith(CommandLineConstants.SHORT_PROPERTIES)) [ CD ]
Line_3 $$ List<String> clientArguments = new ArrayList<String>()-->Line_5 $$ ret.clientArguments = clientArguments[ FD ]
Line_20 $$ if (CommandLineConstants.HELP.equals(arg) || CommandLineConstants.SHORT_HELP.equals(arg) || CommandLineConstants.OLD_HELP.equals(arg)) -->Line_23 $$ if (CommandLineConstants.PROPERTIES.equals(arg) || CommandLineConstants.OLD_PROPERTIES.equals(arg) || CommandLineConstants.SHORT_PROPERTIES.equals(arg)) [ CD ]
Line_34 $$ if (urlSpec == null || !processProperties(arg, urlSpec)) -->Line_35 $$ return null[ CD ]
Line_63 $$ if (arg.startsWith(CommandLineConstants.CONNECTION_PROPERTIES)) -->Line_68 $$ ret.propertiesFile = fileUrl[ CD ]
Line_49 $$ if (arg.startsWith(CommandLineConstants.SHORT_HOST)) -->Line_50 $$ if (ret.propertiesFile != null) [ CD ]
Line_46 $$ hostSet = true-->Line_60 $$ hostSet = true[ FD ]
Line_69 $$ if (arg.startsWith(CommandLineConstants.SYS_PROP)) -->Line_72 $$ if (idx == -1) [ CD ]
Line_12 $$ final String arg = args[i]-->Line_81 $$ if (arg.startsWith(CommandLineConstants.APPCLIENT_CONFIG)) [ FD ]
Line_42 $$ if (arg.equals(CommandLineConstants.SHORT_HOST) || arg.equals(CommandLineConstants.HOST)) -->Line_43 $$ if (ret.propertiesFile != null) [ CD ]
Line_73 $$ name = arg.substring(2)-->Line_80 $$ WildFlySecurityManager.setPropertyPrivileged(name, value)[ FD ]
Line_12 $$ final String arg = args[i]-->Line_69 $$ if (arg.startsWith(CommandLineConstants.SYS_PROP)) [ FD ]
Line_2 $$ public static ParsedOptions determineEnvironment(String[] args, Properties systemProperties, Map<String, String> systemEnvironment, ServerEnvironment.LaunchType launchType) -->Line_8 $$ boolean clientArgs = false[ CD ]
Line_12 $$ final String arg = args[i]-->Line_32 $$ if (arg.startsWith(CommandLineConstants.SHORT_PROPERTIES)) [ FD ]
Line_20 $$ if (CommandLineConstants.HELP.equals(arg) || CommandLineConstants.SHORT_HELP.equals(arg) || CommandLineConstants.OLD_HELP.equals(arg)) -->Line_22 $$ return null[ CD ]
Line_24 $$ if (!processProperties(arg, args[++i])) -->Line_25 $$ return null[ CD ]
Line_37 $$ if (arg.startsWith(CommandLineConstants.OLD_PROPERTIES)) -->Line_42 $$ if (arg.equals(CommandLineConstants.SHORT_HOST) || arg.equals(CommandLineConstants.HOST)) [ CD ]
Line_12 $$ final String arg = args[i]-->Line_42 $$ if (arg.equals(CommandLineConstants.SHORT_HOST) || arg.equals(CommandLineConstants.HOST)) [ FD ]
Line_49 $$ if (arg.startsWith(CommandLineConstants.SHORT_HOST)) -->Line_56 $$ if (arg.startsWith(CommandLineConstants.HOST)) [ CD ]
Line_12 $$ final String arg = args[i]-->Line_63 $$ if (arg.startsWith(CommandLineConstants.CONNECTION_PROPERTIES)) [ FD ]
Line_12 $$ final String arg = args[i]-->Line_91 $$ clientArguments.add(arg)[ FD ]
Line_53 $$ hostSet = true-->Line_60 $$ hostSet = true[ FD ]
Line_71 $$ int idx = arg.indexOf("=")-->Line_76 $$ name = arg.substring(2, idx)[ FD ]
Line_49 $$ if (arg.startsWith(CommandLineConstants.SHORT_HOST)) -->Line_54 $$ String urlSpec = parseValue(arg, CommandLineConstants.SHORT_HOST)[ CD ]
Line_2 $$ public static ParsedOptions determineEnvironment(String[] args, Properties systemProperties, Map<String, String> systemEnvironment, ServerEnvironment.LaunchType launchType) -->Line_9 $$ ProductConfig productConfig[ CD ]
Line_12 $$ final String arg = args[i]-->Line_27 $$ if (arg.startsWith(CommandLineConstants.PROPERTIES)) [ FD ]
Line_74 $$ value = "true"-->Line_79 $$ systemProperties.setProperty(name, value)[ FD ]
Line_32 $$ if (arg.startsWith(CommandLineConstants.SHORT_PROPERTIES)) -->Line_37 $$ if (arg.startsWith(CommandLineConstants.OLD_PROPERTIES)) [ CD ]
Line_71 $$ int idx = arg.indexOf("=")-->Line_72 $$ if (idx == -1) [ FD ]
Line_28 $$ String urlSpec = parseValue(arg, CommandLineConstants.PROPERTIES)-->Line_55 $$ ret.hostUrl = urlSpec[ FD ]
Line_2 $$ public static ParsedOptions determineEnvironment(String[] args, Properties systemProperties, Map<String, String> systemEnvironment, ServerEnvironment.LaunchType launchType) -->Line_79 $$ systemProperties.setProperty(name, value)[ FD ]
Line_83 $$ if (CommandLineConstants.SECMGR.equals(arg)) -->Line_85 $$ if (arg.startsWith("-")) [ CD ]
Line_42 $$ if (arg.equals(CommandLineConstants.SHORT_HOST) || arg.equals(CommandLineConstants.HOST)) -->Line_46 $$ hostSet = true[ CD ]
Line_17 $$ productConfig = new ProductConfig(Module.getBootModuleLoader(), WildFlySecurityManager.getPropertyPrivileged(ServerEnvironment.HOME_DIR, null), null)-->Line_100 $$ productConfig = new ProductConfig(Module.getBootModuleLoader(), WildFlySecurityManager.getPropertyPrivileged(ServerEnvironment.HOME_DIR, null), systemProperties)[ FD ]
Line_27 $$ if (arg.startsWith(CommandLineConstants.PROPERTIES)) -->Line_28 $$ String urlSpec = parseValue(arg, CommandLineConstants.PROPERTIES)[ CD ]
Line_2 $$ public static ParsedOptions determineEnvironment(String[] args, Properties systemProperties, Map<String, String> systemEnvironment, ServerEnvironment.LaunchType launchType) -->Line_100 $$ productConfig = new ProductConfig(Module.getBootModuleLoader(), WildFlySecurityManager.getPropertyPrivileged(ServerEnvironment.HOME_DIR, null), systemProperties)[ CD ]
Line_72 $$ if (idx == -1) -->Line_76 $$ name = arg.substring(2, idx)[ CD ]
Line_12 $$ final String arg = args[i]-->Line_56 $$ if (arg.startsWith(CommandLineConstants.HOST)) [ FD ]
Line_81 $$ if (arg.startsWith(CommandLineConstants.APPCLIENT_CONFIG)) -->Line_82 $$ appClientConfig = parseValue(arg, CommandLineConstants.APPCLIENT_CONFIG)[ CD ]
Line_12 $$ final String arg = args[i]-->Line_34 $$ if (urlSpec == null || !processProperties(arg, urlSpec)) [ FD ]
Line_12 $$ final String arg = args[i]-->Line_71 $$ int idx = arg.indexOf("=")[ FD ]
Line_11 $$ for (int i = 0; i < argsLength; i++) -->Line_47 $$ String urlSpec = args[++i][ FD ]
Line_74 $$ value = "true"-->Line_80 $$ WildFlySecurityManager.setPropertyPrivileged(name, value)[ FD ]
Line_9 $$ ProductConfig productConfig-->Line_17 $$ productConfig = new ProductConfig(Module.getBootModuleLoader(), WildFlySecurityManager.getPropertyPrivileged(ServerEnvironment.HOME_DIR, null), null)[ FD ]
Line_12 $$ final String arg = args[i]-->Line_29 $$ if (urlSpec == null || !processProperties(arg, urlSpec)) [ FD ]
Line_16 $$ if (CommandLineConstants.VERSION.equals(arg) || CommandLineConstants.SHORT_VERSION.equals(arg) || CommandLineConstants.OLD_VERSION.equals(arg) || CommandLineConstants.OLD_SHORT_VERSION.equals(arg)) -->Line_17 $$ productConfig = new ProductConfig(Module.getBootModuleLoader(), WildFlySecurityManager.getPropertyPrivileged(ServerEnvironment.HOME_DIR, null), null)[ CD ]
Line_72 $$ if (idx == -1) -->Line_73 $$ name = arg.substring(2)[ CD ]
Line_70 $$ String name, value-->Line_80 $$ WildFlySecurityManager.setPropertyPrivileged(name, value)[ FD ]
Line_56 $$ if (arg.startsWith(CommandLineConstants.HOST)) -->Line_61 $$ String urlSpec = parseValue(arg, CommandLineConstants.HOST)[ CD ]
Line_12 $$ final String arg = args[i]-->Line_33 $$ String urlSpec = parseValue(arg, CommandLineConstants.SHORT_PROPERTIES)[ FD ]
Line_76 $$ name = arg.substring(2, idx)-->Line_80 $$ WildFlySecurityManager.setPropertyPrivileged(name, value)[ FD ]
Line_72 $$ if (idx == -1) -->Line_77 $$ value = arg.substring(idx + 1, arg.length())[ CD ]
Line_69 $$ if (arg.startsWith(CommandLineConstants.SYS_PROP)) -->Line_80 $$ WildFlySecurityManager.setPropertyPrivileged(name, value)[ CD ]
Line_27 $$ if (arg.startsWith(CommandLineConstants.PROPERTIES)) -->Line_29 $$ if (urlSpec == null || !processProperties(arg, urlSpec)) [ CD ]
Line_12 $$ final String arg = args[i]-->Line_73 $$ name = arg.substring(2)[ FD ]
Line_85 $$ if (arg.startsWith("-")) -->Line_86 $$ STDOUT.println(AppClientLogger.ROOT_LOGGER.unknownOption(arg))[ CD ]
Line_12 $$ final String arg = args[i]-->Line_94 $$ STDERR.println(AppClientLogger.ROOT_LOGGER.argumentExpected(arg))[ FD ]
Line_42 $$ if (arg.equals(CommandLineConstants.SHORT_HOST) || arg.equals(CommandLineConstants.HOST)) -->Line_48 $$ ret.hostUrl = urlSpec[ CD ]
Line_12 $$ final String arg = args[i]-->Line_83 $$ if (CommandLineConstants.SECMGR.equals(arg)) [ FD ]
Line_12 $$ final String arg = args[i]-->Line_28 $$ String urlSpec = parseValue(arg, CommandLineConstants.PROPERTIES)[ FD ]
Line_12 $$ final String arg = args[i]-->Line_85 $$ if (arg.startsWith("-")) [ FD ]
Line_2 $$ public static ParsedOptions determineEnvironment(String[] args, Properties systemProperties, Map<String, String> systemEnvironment, ServerEnvironment.LaunchType launchType) -->Line_102 $$ return ret[ CD ]
Line_12 $$ final String arg = args[i]-->Line_61 $$ String urlSpec = parseValue(arg, CommandLineConstants.HOST)[ FD ]
Line_73 $$ name = arg.substring(2)-->Line_79 $$ systemProperties.setProperty(name, value)[ FD ]
Line_72 $$ if (idx == -1) -->Line_74 $$ value = "true"[ CD ]
Line_12 $$ final String arg = args[i]-->Line_38 $$ String urlSpec = parseValue(arg, CommandLineConstants.OLD_PROPERTIES)[ FD ]
Line_69 $$ if (arg.startsWith(CommandLineConstants.SYS_PROP)) -->Line_81 $$ if (arg.startsWith(CommandLineConstants.APPCLIENT_CONFIG)) [ CD ]
Line_28 $$ String urlSpec = parseValue(arg, CommandLineConstants.PROPERTIES)-->Line_39 $$ if (urlSpec == null || !processProperties(arg, urlSpec)) [ FD ]
Line_70 $$ String name, value-->Line_74 $$ value = "true"[ FD ]
Line_69 $$ if (arg.startsWith(CommandLineConstants.SYS_PROP)) -->Line_71 $$ int idx = arg.indexOf("=")[ CD ]
Line_3 $$ List<String> clientArguments = new ArrayList<String>()-->Line_15 $$ clientArguments.add(arg)[ FD ]
Line_12 $$ final String arg = args[i]-->Line_49 $$ if (arg.startsWith(CommandLineConstants.SHORT_HOST)) [ FD ]
Line_46 $$ hostSet = true-->Line_53 $$ hostSet = true[ FD ]
Line_56 $$ if (arg.startsWith(CommandLineConstants.HOST)) -->Line_62 $$ ret.hostUrl = urlSpec[ CD ]
Line_28 $$ String urlSpec = parseValue(arg, CommandLineConstants.PROPERTIES)-->Line_48 $$ ret.hostUrl = urlSpec[ FD ]
Line_83 $$ if (CommandLineConstants.SECMGR.equals(arg)) -->Line_91 $$ clientArguments.add(arg)[ CD ]
Line_12 $$ final String arg = args[i]-->Line_86 $$ STDOUT.println(AppClientLogger.ROOT_LOGGER.unknownOption(arg))[ FD ]
Line_37 $$ if (arg.startsWith(CommandLineConstants.OLD_PROPERTIES)) -->Line_39 $$ if (urlSpec == null || !processProperties(arg, urlSpec)) [ CD ]
Line_12 $$ final String arg = args[i]-->Line_67 $$ String fileUrl = parseValue(arg, CommandLineConstants.CONNECTION_PROPERTIES)[ FD ]
Line_70 $$ String name, value-->Line_77 $$ value = arg.substring(idx + 1, arg.length())[ FD ]
Line_12 $$ final String arg = args[i]-->Line_15 $$ clientArguments.add(arg)[ FD ]
Line_77 $$ value = arg.substring(idx + 1, arg.length())-->Line_79 $$ systemProperties.setProperty(name, value)[ FD ]
Line_11 $$ for (int i = 0; i < argsLength; i++) -->Line_24 $$ if (!processProperties(arg, args[++i])) [ FD ]
Line_12 $$ final String arg = args[i]-->Line_23 $$ if (CommandLineConstants.PROPERTIES.equals(arg) || CommandLineConstants.OLD_PROPERTIES.equals(arg) || CommandLineConstants.SHORT_PROPERTIES.equals(arg)) [ FD ]
Line_69 $$ if (arg.startsWith(CommandLineConstants.SYS_PROP)) -->Line_79 $$ systemProperties.setProperty(name, value)[ CD ]
Line_56 $$ if (arg.startsWith(CommandLineConstants.HOST)) -->Line_60 $$ hostSet = true[ CD ]
Line_23 $$ if (CommandLineConstants.PROPERTIES.equals(arg) || CommandLineConstants.OLD_PROPERTIES.equals(arg) || CommandLineConstants.SHORT_PROPERTIES.equals(arg)) -->Line_24 $$ if (!processProperties(arg, args[++i])) [ CD ]
Line_49 $$ if (arg.startsWith(CommandLineConstants.SHORT_HOST)) -->Line_55 $$ ret.hostUrl = urlSpec[ CD ]
Line_2 $$ public static ParsedOptions determineEnvironment(String[] args, Properties systemProperties, Map<String, String> systemEnvironment, ServerEnvironment.LaunchType launchType) -->Line_3 $$ List<String> clientArguments = new ArrayList<String>()[ CD ]
Line_12 $$ final String arg = args[i]-->Line_82 $$ appClientConfig = parseValue(arg, CommandLineConstants.APPCLIENT_CONFIG)[ FD ]
Line_74 $$ value = "true"-->Line_77 $$ value = arg.substring(idx + 1, arg.length())[ FD ]
Line_16 $$ if (CommandLineConstants.VERSION.equals(arg) || CommandLineConstants.SHORT_VERSION.equals(arg) || CommandLineConstants.OLD_VERSION.equals(arg) || CommandLineConstants.OLD_SHORT_VERSION.equals(arg)) -->Line_20 $$ if (CommandLineConstants.HELP.equals(arg) || CommandLineConstants.SHORT_HELP.equals(arg) || CommandLineConstants.OLD_HELP.equals(arg)) [ CD ]
Line_49 $$ if (arg.startsWith(CommandLineConstants.SHORT_HOST)) -->Line_53 $$ hostSet = true[ CD ]
Line_2 $$ public static ParsedOptions determineEnvironment(String[] args, Properties systemProperties, Map<String, String> systemEnvironment, ServerEnvironment.LaunchType launchType) -->Line_6 $$ final int argsLength = args.length[ CD ]
