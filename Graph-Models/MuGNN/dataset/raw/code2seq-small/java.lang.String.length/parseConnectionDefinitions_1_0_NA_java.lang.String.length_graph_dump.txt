Line_21 $$ String value = reader.getAttributeValue(i)-->Line_61 $$ CLASS_NAME.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_13 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_56 $$ ENLISTMENT.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_36 $$ poolName = value-->Line_73 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ FD ]
Line_73 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)-->Line_98 $$ if (!configMap.containsKey(poolName)) [ FD ]
Line_13 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_46 $$ USE_CCM.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_36 $$ poolName = value-->Line_71 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)[ FD ]
Line_36 $$ poolName = value-->Line_84 $$ map.put(poolName, connectionDefinitionNode)[ FD ]
Line_36 $$ poolName = value-->Line_101 $$ parseConfigProperties(reader, configMap.get(poolName))[ FD ]
Line_30 $$ jndiName = value-->Line_31 $$ JNDINAME.parseAndSetParameter(jndiName, connectionDefinitionNode, reader)[ FD ]
Line_16 $$ String jndiName = null-->Line_70 $$ if (jndiName.contains("/")) [ FD ]
Line_83 $$ if (Activation.Tag.forName(reader.getLocalName()) == Activation.Tag.CONNECTION_DEFINITION) -->Line_84 $$ map.put(poolName, connectionDefinitionNode)[ CD ]
Line_19 $$ for (int i = 0; i < attributeSize; i++) -->Line_20 $$ ConnectionDefinition.Attribute attribute = ConnectionDefinition.Attribute.forName(reader.getAttributeLocalName(i))[ CD ]
Line_21 $$ String value = reader.getAttributeValue(i)-->Line_56 $$ ENLISTMENT.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_13 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_51 $$ SHARABLE.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_16 $$ String jndiName = null-->Line_73 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ FD ]
Line_13 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_25 $$ ENABLED.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_83 $$ if (Activation.Tag.forName(reader.getLocalName()) == Activation.Tag.CONNECTION_DEFINITION) -->Line_87 $$ if (ConnectionDefinition.Tag.forName(reader.getLocalName()) == ConnectionDefinition.Tag.UNKNOWN) [ CD ]
Line_98 $$ if (!configMap.containsKey(poolName)) -->Line_99 $$ configMap.put(poolName, new HashMap<String, ModelNode>(0))[ CD ]
Line_70 $$ if (jndiName.contains("/")) -->Line_73 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ CD ]
Line_71 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)-->Line_73 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ FD ]
Line_30 $$ jndiName = value-->Line_73 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ FD ]
Line_15 $$ String poolName = null-->Line_73 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ FD ]
Line_36 $$ poolName = value-->Line_98 $$ if (!configMap.containsKey(poolName)) [ FD ]
Line_15 $$ String poolName = null-->Line_99 $$ configMap.put(poolName, new HashMap<String, ModelNode>(0))[ FD ]
Line_19 $$ for (int i = 0; i < attributeSize; i++) -->Line_65 $$ throw ParseUtils.unexpectedAttribute(reader, i)[ FD ]
Line_30 $$ jndiName = value-->Line_70 $$ if (jndiName.contains("/")) [ FD ]
Line_16 $$ String jndiName = null-->Line_31 $$ JNDINAME.parseAndSetParameter(jndiName, connectionDefinitionNode, reader)[ FD ]
Line_13 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_111 $$ parseTimeOut(reader, isXa, connectionDefinitionNode)[ FD ]
Line_13 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_14 $$ connectionDefinitionNode.get(OP).set(ADD)[ FD ]
Line_71 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)-->Line_84 $$ map.put(poolName, connectionDefinitionNode)[ FD ]
Line_21 $$ String value = reader.getAttributeValue(i)-->Line_41 $$ USE_JAVA_CONTEXT.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_73 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)-->Line_84 $$ map.put(poolName, connectionDefinitionNode)[ FD ]
Line_13 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_31 $$ JNDINAME.parseAndSetParameter(jndiName, connectionDefinitionNode, reader)[ FD ]
Line_71 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)-->Line_101 $$ parseConfigProperties(reader, configMap.get(poolName))[ FD ]
Line_15 $$ String poolName = null-->Line_98 $$ if (!configMap.containsKey(poolName)) [ FD ]
Line_21 $$ String value = reader.getAttributeValue(i)-->Line_30 $$ jndiName = value[ FD ]
Line_15 $$ String poolName = null-->Line_36 $$ poolName = value[ FD ]
Line_73 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)-->Line_99 $$ configMap.put(poolName, new HashMap<String, ModelNode>(0))[ FD ]
Line_18 $$ boolean poolDefined = Boolean.FALSE-->Line_128 $$ poolDefined = true[ FD ]
Line_13 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_139 $$ parsePool(reader, connectionDefinitionNode)[ FD ]
Line_71 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)-->Line_99 $$ configMap.put(poolName, new HashMap<String, ModelNode>(0))[ FD ]
Line_13 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_84 $$ map.put(poolName, connectionDefinitionNode)[ FD ]
Line_36 $$ poolName = value-->Line_99 $$ configMap.put(poolName, new HashMap<String, ModelNode>(0))[ FD ]
Line_73 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)-->Line_101 $$ parseConfigProperties(reader, configMap.get(poolName))[ FD ]
Line_18 $$ boolean poolDefined = Boolean.FALSE-->Line_140 $$ poolDefined = true[ FD ]
Line_19 $$ for (int i = 0; i < attributeSize; i++) -->Line_21 $$ String value = reader.getAttributeValue(i)[ FD ]
Line_15 $$ String poolName = null-->Line_68 $$ if (poolName == null || poolName.trim().equals("")) [ FD ]
Line_30 $$ jndiName = value-->Line_71 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)[ FD ]
Line_13 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_41 $$ USE_JAVA_CONTEXT.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_36 $$ poolName = value-->Line_68 $$ if (poolName == null || poolName.trim().equals("")) [ FD ]
Line_70 $$ if (jndiName.contains("/")) -->Line_71 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)[ CD ]
Line_13 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_127 $$ parseXaPool(reader, connectionDefinitionNode)[ FD ]
Line_15 $$ String poolName = null-->Line_71 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)[ FD ]
Line_16 $$ String jndiName = null-->Line_71 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)[ FD ]
Line_15 $$ String poolName = null-->Line_84 $$ map.put(poolName, connectionDefinitionNode)[ FD ]
Line_13 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_116 $$ parseValidation(reader, connectionDefinitionNode)[ FD ]
Line_21 $$ String value = reader.getAttributeValue(i)-->Line_51 $$ SHARABLE.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_83 $$ if (Activation.Tag.forName(reader.getLocalName()) == Activation.Tag.CONNECTION_DEFINITION) -->Line_85 $$ return[ CD ]
Line_19 $$ for (int i = 0; i < attributeSize; i++) -->Line_21 $$ String value = reader.getAttributeValue(i)[ CD ]
Line_21 $$ String value = reader.getAttributeValue(i)-->Line_46 $$ USE_CCM.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_30 $$ jndiName = value-->Line_69 $$ if (jndiName != null && jndiName.trim().length() != 0) [ FD ]
Line_13 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_61 $$ CLASS_NAME.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_13 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_106 $$ parseSecuritySettings(reader, connectionDefinitionNode)[ FD ]
Line_21 $$ String value = reader.getAttributeValue(i)-->Line_25 $$ ENABLED.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_15 $$ String poolName = null-->Line_101 $$ parseConfigProperties(reader, configMap.get(poolName))[ FD ]
Line_16 $$ String jndiName = null-->Line_30 $$ jndiName = value[ FD ]
Line_68 $$ if (poolName == null || poolName.trim().equals("")) -->Line_69 $$ if (jndiName != null && jndiName.trim().length() != 0) [ CD ]
Line_16 $$ String jndiName = null-->Line_69 $$ if (jndiName != null && jndiName.trim().length() != 0) [ FD ]
Line_17 $$ int attributeSize = reader.getAttributeCount()-->Line_19 $$ for (int i = 0; i < attributeSize; i++) [ FD ]
Line_71 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)-->Line_98 $$ if (!configMap.containsKey(poolName)) [ FD ]
Line_13 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_145 $$ parseRecovery(reader, connectionDefinitionNode)[ FD ]
Line_69 $$ if (jndiName != null && jndiName.trim().length() != 0) -->Line_70 $$ if (jndiName.contains("/")) [ CD ]
Line_128 $$ poolDefined = true-->Line_140 $$ poolDefined = true[ FD ]
Line_21 $$ String value = reader.getAttributeValue(i)-->Line_36 $$ poolName = value[ FD ]
Line_19 $$ for (int i = 0; i < attributeSize; i++) -->Line_20 $$ ConnectionDefinition.Attribute attribute = ConnectionDefinition.Attribute.forName(reader.getAttributeLocalName(i))[ FD ]
