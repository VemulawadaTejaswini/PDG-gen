Line_2 $$ public static List<Pair<String, Integer>> getWordsWithOffset(@NotNull String s) -->Line_8 $$ if (Character.isWhitespace(s.charAt(i))) [ FD ]
Line_8 $$ if (Character.isWhitespace(s.charAt(i))) -->Line_9 $$ if (name.length() > 0) [ CD ]
Line_2 $$ public static List<Pair<String, Integer>> getWordsWithOffset(@NotNull String s) -->Line_6 $$ int startInd = -1[ CD ]
Line_2 $$ public static List<Pair<String, Integer>> getWordsWithOffset(@NotNull String s) -->Line_3 $$ List<Pair<String, Integer>> res = ContainerUtil.newArrayList()[ CD ]
Line_6 $$ int startInd = -1-->Line_16 $$ startInd = i[ FD ]
Line_2 $$ public static List<Pair<String, Integer>> getWordsWithOffset(@NotNull String s) -->Line_21 $$ return res[ CD ]
Line_16 $$ startInd = i-->Line_10 $$ res.add(Pair.create(name.toString(), startInd))[ FD ]
Line_9 $$ if (name.length() > 0) -->Line_12 $$ startInd = -1[ CD ]
Line_9 $$ if (name.length() > 0) -->Line_10 $$ res.add(Pair.create(name.toString(), startInd))[ CD ]
Line_2 $$ public static List<Pair<String, Integer>> getWordsWithOffset(@NotNull String s) -->Line_18 $$ name.append(s.charAt(i))[ FD ]
Line_2 $$ public static List<Pair<String, Integer>> getWordsWithOffset(@NotNull String s) -->Line_7 $$ for (int i = 0; i < s.length(); i++) [ CD ]
Line_6 $$ int startInd = -1-->Line_12 $$ startInd = -1[ FD ]
Line_16 $$ startInd = i-->Line_15 $$ if (startInd == -1) [ FD ]
Line_8 $$ if (Character.isWhitespace(s.charAt(i))) -->Line_18 $$ name.append(s.charAt(i))[ CD ]
Line_5 $$ StringBuilder name = new StringBuilder()-->Line_10 $$ res.add(Pair.create(name.toString(), startInd))[ FD ]
Line_12 $$ startInd = -1-->Line_16 $$ startInd = i[ FD ]
Line_5 $$ StringBuilder name = new StringBuilder()-->Line_18 $$ name.append(s.charAt(i))[ FD ]
Line_9 $$ if (name.length() > 0) -->Line_11 $$ name.setLength(0)[ CD ]
Line_5 $$ StringBuilder name = new StringBuilder()-->Line_11 $$ name.setLength(0)[ FD ]
Line_8 $$ if (Character.isWhitespace(s.charAt(i))) -->Line_15 $$ if (startInd == -1) [ CD ]
Line_6 $$ int startInd = -1-->Line_15 $$ if (startInd == -1) [ FD ]
Line_3 $$ List<Pair<String, Integer>> res = ContainerUtil.newArrayList()-->Line_10 $$ res.add(Pair.create(name.toString(), startInd))[ FD ]
Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_16 $$ startInd = i[ FD ]
Line_2 $$ public static List<Pair<String, Integer>> getWordsWithOffset(@NotNull String s) -->Line_5 $$ StringBuilder name = new StringBuilder()[ CD ]
Line_12 $$ startInd = -1-->Line_10 $$ res.add(Pair.create(name.toString(), startInd))[ FD ]
Line_5 $$ StringBuilder name = new StringBuilder()-->Line_9 $$ if (name.length() > 0) [ FD ]
Line_6 $$ int startInd = -1-->Line_10 $$ res.add(Pair.create(name.toString(), startInd))[ FD ]
Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_8 $$ if (Character.isWhitespace(s.charAt(i))) [ CD ]
Line_15 $$ if (startInd == -1) -->Line_16 $$ startInd = i[ CD ]
Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_18 $$ name.append(s.charAt(i))[ FD ]
Line_12 $$ startInd = -1-->Line_15 $$ if (startInd == -1) [ FD ]
Line_2 $$ public static List<Pair<String, Integer>> getWordsWithOffset(@NotNull String s) -->Line_7 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_8 $$ if (Character.isWhitespace(s.charAt(i))) [ FD ]
