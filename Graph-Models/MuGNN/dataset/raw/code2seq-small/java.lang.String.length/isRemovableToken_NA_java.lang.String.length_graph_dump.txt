Line_2 $$ private static boolean isRemovableToken(PsiElement element) -->Line_17 $$ if (text.length() != 1) [ CD ]
Line_4 $$ if (!(parent instanceof PsiAnnotationParameterList || parent instanceof PsiAssertStatement || parent instanceof PsiExpressionList || parent instanceof PsiParameterList || parent instanceof PsiPolyadicExpression || parent instanceof PsiReferenceList || parent instanceof PsiReferenceParameterList || parent instanceof PsiResourceList || parent instanceof PsiTypeParameterList || parent instanceof PsiVariable)) -->Line_14 $$ return false[ CD ]
Line_17 $$ if (text.length() != 1) -->Line_18 $$ return true[ CD ]
Line_2 $$ private static boolean isRemovableToken(PsiElement element) -->Line_16 $$ final String text = element.getText()[ CD ]
Line_2 $$ private static boolean isRemovableToken(PsiElement element) -->Line_16 $$ final String text = element.getText()[ FD ]
Line_2 $$ private static boolean isRemovableToken(PsiElement element) -->Line_4 $$ if (!(parent instanceof PsiAnnotationParameterList || parent instanceof PsiAssertStatement || parent instanceof PsiExpressionList || parent instanceof PsiParameterList || parent instanceof PsiPolyadicExpression || parent instanceof PsiReferenceList || parent instanceof PsiReferenceParameterList || parent instanceof PsiResourceList || parent instanceof PsiTypeParameterList || parent instanceof PsiVariable)) [ CD ]
Line_16 $$ final String text = element.getText()-->Line_17 $$ if (text.length() != 1) [ FD ]
Line_16 $$ final String text = element.getText()-->Line_20 $$ switch(text.charAt(0)) [ FD ]
Line_2 $$ private static boolean isRemovableToken(PsiElement element) -->Line_3 $$ final PsiElement parent = element.getParent()[ CD ]
Line_2 $$ private static boolean isRemovableToken(PsiElement element) -->Line_3 $$ final PsiElement parent = element.getParent()[ FD ]
