Line_20 $$ for (int i = 1; i < length; i++) -->Line_21 $$ ch = name.charAt(i)[ CD ]
Line_12 $$ int length = name.length()-->Line_20 $$ for (int i = 1; i < length; i++) [ FD ]
Line_16 $$ char ch = name.charAt(0)-->Line_21 $$ ch = name.charAt(i)[ FD ]
Line_2 $$ public static boolean isValidXmlName(String name) -->Line_21 $$ ch = name.charAt(i)[ FD ]
Line_16 $$ char ch = name.charAt(0)-->Line_22 $$ if (!isValidNameChar(ch)) [ FD ]
Line_12 $$ int length = name.length()-->Line_13 $$ if (length == 0) [ FD ]
Line_2 $$ public static boolean isValidXmlName(String name) -->Line_16 $$ char ch = name.charAt(0)[ CD ]
Line_22 $$ if (!isValidNameChar(ch)) -->Line_23 $$ return false[ CD ]
Line_16 $$ char ch = name.charAt(0)-->Line_17 $$ if (!isValidNameStartChar(ch)) [ FD ]
Line_21 $$ ch = name.charAt(i)-->Line_22 $$ if (!isValidNameChar(ch)) [ FD ]
Line_2 $$ public static boolean isValidXmlName(String name) -->Line_10 $$ return isValidXmlName(name.substring(0, name.indexOf(':'))) && isValidXmlName(name.substring(name.indexOf(':') + 1))[ FD ]
Line_2 $$ public static boolean isValidXmlName(String name) -->Line_12 $$ int length = name.length()[ FD ]
Line_2 $$ public static boolean isValidXmlName(String name) -->Line_12 $$ int length = name.length()[ CD ]
Line_2 $$ public static boolean isValidXmlName(String name) -->Line_26 $$ return true[ CD ]
Line_13 $$ if (length == 0) -->Line_14 $$ return false[ CD ]
Line_2 $$ public static boolean isValidXmlName(String name) -->Line_13 $$ if (length == 0) [ CD ]
Line_2 $$ public static boolean isValidXmlName(String name) -->Line_17 $$ if (!isValidNameStartChar(ch)) [ CD ]
Line_17 $$ if (!isValidNameStartChar(ch)) -->Line_18 $$ return false[ CD ]
Line_20 $$ for (int i = 1; i < length; i++) -->Line_21 $$ ch = name.charAt(i)[ FD ]
Line_2 $$ public static boolean isValidXmlName(String name) -->Line_16 $$ char ch = name.charAt(0)[ FD ]
Line_20 $$ for (int i = 1; i < length; i++) -->Line_22 $$ if (!isValidNameChar(ch)) [ CD ]
Line_2 $$ public static boolean isValidXmlName(String name) -->Line_20 $$ for (int i = 1; i < length; i++) [ CD ]
