Line_4 $$ for (int len = 1; len < string.length(); len++) -->Line_5 $$ String prefix = string.substring(0, len)[ FD ]
Line_6 $$ for (LookupElement shorterElement : myElements.get(prefix)) -->Line_7 $$ if (myCondition.shouldLift(shorterElement, element)) [ FD ]
Line_2 $$ private void calculateToLift(LookupElement element) -->Line_7 $$ if (myCondition.shouldLift(shorterElement, element)) [ FD ]
Line_7 $$ if (myCondition.shouldLift(shorterElement, element)) -->Line_8 $$ myToLift.putValue(element, shorterElement)[ CD ]
Line_6 $$ for (LookupElement shorterElement : myElements.get(prefix)) -->Line_8 $$ myToLift.putValue(element, shorterElement)[ FD ]
Line_3 $$ for (String string : CompletionUtil.iterateLookupStrings(element)) -->Line_4 $$ for (int len = 1; len < string.length(); len++) [ FD ]
Line_2 $$ private void calculateToLift(LookupElement element) -->Line_9 $$ myReversedToLift.putValue(shorterElement, element)[ FD ]
Line_2 $$ private void calculateToLift(LookupElement element) -->Line_8 $$ myToLift.putValue(element, shorterElement)[ FD ]
Line_3 $$ for (String string : CompletionUtil.iterateLookupStrings(element)) -->Line_5 $$ String prefix = string.substring(0, len)[ FD ]
Line_7 $$ if (myCondition.shouldLift(shorterElement, element)) -->Line_9 $$ myReversedToLift.putValue(shorterElement, element)[ CD ]
Line_5 $$ String prefix = string.substring(0, len)-->Line_6 $$ for (LookupElement shorterElement : myElements.get(prefix)) [ FD ]
Line_6 $$ for (LookupElement shorterElement : myElements.get(prefix)) -->Line_9 $$ myReversedToLift.putValue(shorterElement, element)[ FD ]
Line_4 $$ for (int len = 1; len < string.length(); len++) -->Line_5 $$ String prefix = string.substring(0, len)[ CD ]
Line_2 $$ private void calculateToLift(LookupElement element) -->Line_3 $$ for (String string : CompletionUtil.iterateLookupStrings(element)) [ FD ]
