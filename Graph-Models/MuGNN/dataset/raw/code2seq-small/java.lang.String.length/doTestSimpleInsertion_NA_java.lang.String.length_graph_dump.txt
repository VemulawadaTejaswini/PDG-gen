Line_2 $$ private static void doTestSimpleInsertion(final String text, final String textToInsert) throws IncorrectOperationException -->Line_11 $$ xmlText.insertText(textToInsert, i)[ FD ]
Line_12 $$ final StringBuilder expected = new StringBuilder(text)-->Line_14 $$ assertEquals(expected.toString(), xmlText.getValue())[ FD ]
Line_5 $$ for (int i = 0; i <= text.length(); i++) -->Line_14 $$ assertEquals(expected.toString(), xmlText.getValue())[ CD ]
Line_5 $$ for (int i = 0; i <= text.length(); i++) -->Line_13 $$ expected.insert(i, textToInsert)[ CD ]
Line_5 $$ for (int i = 0; i <= text.length(); i++) -->Line_8 $$ assertEquals(1, children.length)[ CD ]
Line_9 $$ final XmlText xmlText = (XmlText) children[0]-->Line_10 $$ assertEquals(text, xmlText.getValue())[ FD ]
Line_5 $$ for (int i = 0; i <= text.length(); i++) -->Line_7 $$ final PsiElement[] children = tag.getValue().getTextElements()[ CD ]
Line_12 $$ final StringBuilder expected = new StringBuilder(text)-->Line_13 $$ expected.insert(i, textToInsert)[ FD ]
Line_5 $$ for (int i = 0; i <= text.length(); i++) -->Line_6 $$ XmlTag tag = XmlElementFactory.getInstance(getProject()).createXHTMLTagFromText("<a>" + text + "</a>")[ CD ]
Line_2 $$ private static void doTestSimpleInsertion(final String text, final String textToInsert) throws IncorrectOperationException -->Line_13 $$ expected.insert(i, textToInsert)[ FD ]
Line_5 $$ for (int i = 0; i <= text.length(); i++) -->Line_11 $$ xmlText.insertText(textToInsert, i)[ CD ]
Line_5 $$ for (int i = 0; i <= text.length(); i++) -->Line_11 $$ xmlText.insertText(textToInsert, i)[ FD ]
Line_5 $$ for (int i = 0; i <= text.length(); i++) -->Line_9 $$ final XmlText xmlText = (XmlText) children[0][ CD ]
Line_5 $$ for (int i = 0; i <= text.length(); i++) -->Line_10 $$ assertEquals(text, xmlText.getValue())[ CD ]
Line_2 $$ private static void doTestSimpleInsertion(final String text, final String textToInsert) throws IncorrectOperationException -->Line_3 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() [ CD ]
Line_3 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_5 $$ for (int i = 0; i <= text.length(); i++) [ CD ]
Line_9 $$ final XmlText xmlText = (XmlText) children[0]-->Line_14 $$ assertEquals(expected.toString(), xmlText.getValue())[ FD ]
Line_5 $$ for (int i = 0; i <= text.length(); i++) -->Line_13 $$ expected.insert(i, textToInsert)[ FD ]
Line_2 $$ private static void doTestSimpleInsertion(final String text, final String textToInsert) throws IncorrectOperationException -->Line_10 $$ assertEquals(text, xmlText.getValue())[ FD ]
Line_2 $$ private static void doTestSimpleInsertion(final String text, final String textToInsert) throws IncorrectOperationException -->Line_5 $$ for (int i = 0; i <= text.length(); i++) [ FD ]
Line_6 $$ XmlTag tag = XmlElementFactory.getInstance(getProject()).createXHTMLTagFromText("<a>" + text + "</a>")-->Line_7 $$ final PsiElement[] children = tag.getValue().getTextElements()[ FD ]
Line_9 $$ final XmlText xmlText = (XmlText) children[0]-->Line_11 $$ xmlText.insertText(textToInsert, i)[ FD ]
Line_5 $$ for (int i = 0; i <= text.length(); i++) -->Line_12 $$ final StringBuilder expected = new StringBuilder(text)[ CD ]
