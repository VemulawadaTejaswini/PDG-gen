Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_53 $$ glassPanel.addSpotlight(rootComponent)[ FD ]
Line_16 $$ highlight = true-->Line_22 $$ highlight = true[ FD ]
Line_50 $$ final String title = ((TitledBorder) border).getTitle()-->Line_51 $$ if (isComponentHighlighted(title, option, force, configurable)) [ FD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_13 $$ if (rootComponent instanceof JRadioButton) [ FD ]
Line_14 $$ final JRadioButton radioButton = ((JRadioButton) rootComponent)-->Line_15 $$ if (isComponentHighlighted(radioButton.getText(), option, force, configurable)) [ FD ]
Line_28 $$ highlight = true-->Line_47 $$ if (!highlight && !innerHighlight) [ FD ]
Line_6 $$ boolean highlight = false-->Line_52 $$ highlight = true[ FD ]
Line_6 $$ boolean highlight = false-->Line_59 $$ highlight = true[ FD ]
Line_26 $$ final JButton button = ((JButton) rootComponent)-->Line_29 $$ glassPanel.addSpotlight(button)[ FD ]
Line_8 $$ final JCheckBox checkBox = ((JCheckBox) rootComponent)-->Line_9 $$ if (isComponentHighlighted(checkBox.getText(), option, force, configurable)) [ FD ]
Line_16 $$ highlight = true-->Line_47 $$ if (!highlight && !innerHighlight) [ FD ]
Line_31 $$ if (rootComponent instanceof JTabbedPane) -->Line_32 $$ final JTabbedPane tabbedPane = (JTabbedPane) rootComponent[ CD ]
Line_34 $$ if (path != null) -->Line_35 $$ final int index = getSelection(path, tabbedPane)[ CD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_48 $$ final Border border = rootComponent.getBorder()[ FD ]
Line_44 $$ for (Component component : components) -->Line_45 $$ if (component instanceof JComponent) [ FD ]
Line_22 $$ highlight = true-->Line_47 $$ if (!highlight && !innerHighlight) [ FD ]
Line_13 $$ if (rootComponent instanceof JRadioButton) -->Line_14 $$ final JRadioButton radioButton = ((JRadioButton) rootComponent)[ CD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_19 $$ if (rootComponent instanceof JLabel) [ FD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_33 $$ final String path = SearchableOptionsRegistrar.getInstance().getInnerPath(configurable, option)[ FD ]
Line_19 $$ if (rootComponent instanceof JLabel) -->Line_20 $$ final JLabel label = ((JLabel) rootComponent)[ CD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_63 $$ return highlight[ CD ]
Line_7 $$ if (rootComponent instanceof JCheckBox) -->Line_13 $$ if (rootComponent instanceof JRadioButton) [ CD ]
Line_6 $$ boolean highlight = false-->Line_16 $$ highlight = true[ FD ]
Line_22 $$ highlight = true-->Line_52 $$ highlight = true[ FD ]
Line_25 $$ if (rootComponent instanceof JButton) -->Line_27 $$ if (isComponentHighlighted(button.getText(), option, force, configurable)) [ CD ]
Line_22 $$ highlight = true-->Line_28 $$ highlight = true[ FD ]
Line_45 $$ if (component instanceof JComponent) -->Line_47 $$ if (!highlight && !innerHighlight) [ CD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_7 $$ if (rootComponent instanceof JCheckBox) [ CD ]
Line_10 $$ highlight = true-->Line_47 $$ if (!highlight && !innerHighlight) [ FD ]
Line_19 $$ if (rootComponent instanceof JLabel) -->Line_21 $$ if (isComponentHighlighted(label.getText(), option, force, configurable)) [ CD ]
Line_33 $$ final String path = SearchableOptionsRegistrar.getInstance().getInnerPath(configurable, option)-->Line_34 $$ if (path != null) [ FD ]
Line_31 $$ if (rootComponent instanceof JTabbedPane) -->Line_33 $$ final String path = SearchableOptionsRegistrar.getInstance().getInnerPath(configurable, option)[ CD ]
Line_21 $$ if (isComponentHighlighted(label.getText(), option, force, configurable)) -->Line_23 $$ glassPanel.addSpotlight(label)[ CD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_54 $$ rootComponent.putClientProperty(HIGHLIGHT_WITH_BORDER, Boolean.TRUE)[ FD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_43 $$ final Component[] components = rootComponent.getComponents()[ CD ]
Line_36 $$ if (index > -1 && index < tabbedPane.getTabCount()) -->Line_37 $$ if (tabbedPane.getTabComponentAt(index) instanceof JComponent) [ CD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_4 $$ if (option == null || option.trim().length() == 0)[ CD ]
Line_32 $$ final JTabbedPane tabbedPane = (JTabbedPane) rootComponent-->Line_37 $$ if (tabbedPane.getTabComponentAt(index) instanceof JComponent) [ FD ]
Line_35 $$ final int index = getSelection(path, tabbedPane)-->Line_37 $$ if (tabbedPane.getTabComponentAt(index) instanceof JComponent) [ FD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_38 $$ glassPanel.addSpotlight((JComponent) tabbedPane.getTabComponentAt(index))[ FD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_17 $$ glassPanel.addSpotlight(radioButton)[ FD ]
Line_6 $$ boolean highlight = false-->Line_47 $$ if (!highlight && !innerHighlight) [ FD ]
Line_27 $$ if (isComponentHighlighted(button.getText(), option, force, configurable)) -->Line_29 $$ glassPanel.addSpotlight(button)[ CD ]
Line_9 $$ if (isComponentHighlighted(checkBox.getText(), option, force, configurable)) -->Line_10 $$ highlight = true[ CD ]
Line_32 $$ final JTabbedPane tabbedPane = (JTabbedPane) rootComponent-->Line_38 $$ glassPanel.addSpotlight((JComponent) tabbedPane.getTabComponentAt(index))[ FD ]
Line_33 $$ final String path = SearchableOptionsRegistrar.getInstance().getInnerPath(configurable, option)-->Line_35 $$ final int index = getSelection(path, tabbedPane)[ FD ]
Line_6 $$ boolean highlight = false-->Line_22 $$ highlight = true[ FD ]
Line_7 $$ if (rootComponent instanceof JCheckBox) -->Line_8 $$ final JCheckBox checkBox = ((JCheckBox) rootComponent)[ CD ]
Line_6 $$ boolean highlight = false-->Line_28 $$ highlight = true[ FD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_7 $$ if (rootComponent instanceof JCheckBox) [ FD ]
Line_8 $$ final JCheckBox checkBox = ((JCheckBox) rootComponent)-->Line_11 $$ glassPanel.addSpotlight(checkBox)[ FD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_6 $$ boolean highlight = false[ CD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_4 $$ if (option == null || option.trim().length() == 0)[ FD ]
Line_28 $$ highlight = true-->Line_59 $$ highlight = true[ FD ]
Line_27 $$ if (isComponentHighlighted(button.getText(), option, force, configurable)) -->Line_28 $$ highlight = true[ CD ]
Line_10 $$ highlight = true-->Line_52 $$ highlight = true[ FD ]
Line_51 $$ if (isComponentHighlighted(title, option, force, configurable)) -->Line_53 $$ glassPanel.addSpotlight(rootComponent)[ CD ]
Line_35 $$ final int index = getSelection(path, tabbedPane)-->Line_38 $$ glassPanel.addSpotlight((JComponent) tabbedPane.getTabComponentAt(index))[ FD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_29 $$ glassPanel.addSpotlight(button)[ FD ]
Line_25 $$ if (rootComponent instanceof JButton) -->Line_31 $$ if (rootComponent instanceof JTabbedPane) [ CD ]
Line_6 $$ boolean highlight = false-->Line_10 $$ highlight = true[ FD ]
Line_47 $$ if (!highlight && !innerHighlight) -->Line_48 $$ final Border border = rootComponent.getBorder()[ CD ]
Line_28 $$ highlight = true-->Line_52 $$ highlight = true[ FD ]
Line_9 $$ if (isComponentHighlighted(checkBox.getText(), option, force, configurable)) -->Line_11 $$ glassPanel.addSpotlight(checkBox)[ CD ]
Line_16 $$ highlight = true-->Line_28 $$ highlight = true[ FD ]
Line_32 $$ final JTabbedPane tabbedPane = (JTabbedPane) rootComponent-->Line_35 $$ final int index = getSelection(path, tabbedPane)[ FD ]
Line_16 $$ highlight = true-->Line_52 $$ highlight = true[ FD ]
Line_15 $$ if (isComponentHighlighted(radioButton.getText(), option, force, configurable)) -->Line_17 $$ glassPanel.addSpotlight(radioButton)[ CD ]
Line_7 $$ if (rootComponent instanceof JCheckBox) -->Line_9 $$ if (isComponentHighlighted(checkBox.getText(), option, force, configurable)) [ CD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_25 $$ if (rootComponent instanceof JButton) [ FD ]
Line_51 $$ if (isComponentHighlighted(title, option, force, configurable)) -->Line_52 $$ highlight = true[ CD ]
Line_47 $$ if (!highlight && !innerHighlight) -->Line_49 $$ if (border instanceof TitledBorder) [ CD ]
Line_31 $$ if (rootComponent instanceof JTabbedPane) -->Line_34 $$ if (path != null) [ CD ]
Line_49 $$ if (border instanceof TitledBorder) -->Line_50 $$ final String title = ((TitledBorder) border).getTitle()[ CD ]
Line_10 $$ highlight = true-->Line_28 $$ highlight = true[ FD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_31 $$ if (rootComponent instanceof JTabbedPane) [ FD ]
Line_10 $$ highlight = true-->Line_59 $$ highlight = true[ FD ]
Line_10 $$ highlight = true-->Line_16 $$ highlight = true[ FD ]
Line_14 $$ final JRadioButton radioButton = ((JRadioButton) rootComponent)-->Line_17 $$ glassPanel.addSpotlight(radioButton)[ FD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_11 $$ glassPanel.addSpotlight(checkBox)[ FD ]
Line_37 $$ if (tabbedPane.getTabComponentAt(index) instanceof JComponent) -->Line_38 $$ glassPanel.addSpotlight((JComponent) tabbedPane.getTabComponentAt(index))[ CD ]
Line_20 $$ final JLabel label = ((JLabel) rootComponent)-->Line_23 $$ glassPanel.addSpotlight(label)[ FD ]
Line_34 $$ if (path != null) -->Line_36 $$ if (index > -1 && index < tabbedPane.getTabCount()) [ CD ]
Line_19 $$ if (rootComponent instanceof JLabel) -->Line_25 $$ if (rootComponent instanceof JButton) [ CD ]
Line_45 $$ if (component instanceof JComponent) -->Line_58 $$ if (innerHighlight) [ CD ]
Line_48 $$ final Border border = rootComponent.getBorder()-->Line_49 $$ if (border instanceof TitledBorder) [ FD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_27 $$ if (isComponentHighlighted(button.getText(), option, force, configurable)) [ FD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_23 $$ glassPanel.addSpotlight(label)[ FD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_46 $$ final boolean innerHighlight = traverseComponentsTree(configurable, glassPanel, (JComponent) component, option, force)[ FD ]
Line_20 $$ final JLabel label = ((JLabel) rootComponent)-->Line_21 $$ if (isComponentHighlighted(label.getText(), option, force, configurable)) [ FD ]
Line_26 $$ final JButton button = ((JButton) rootComponent)-->Line_27 $$ if (isComponentHighlighted(button.getText(), option, force, configurable)) [ FD ]
Line_13 $$ if (rootComponent instanceof JRadioButton) -->Line_19 $$ if (rootComponent instanceof JLabel) [ CD ]
Line_45 $$ if (component instanceof JComponent) -->Line_46 $$ final boolean innerHighlight = traverseComponentsTree(configurable, glassPanel, (JComponent) component, option, force)[ CD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_3 $$ rootComponent.putClientProperty(HIGHLIGHT_WITH_BORDER, null)[ CD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_43 $$ final Component[] components = rootComponent.getComponents()[ FD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_9 $$ if (isComponentHighlighted(checkBox.getText(), option, force, configurable)) [ FD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_51 $$ if (isComponentHighlighted(title, option, force, configurable)) [ FD ]
Line_25 $$ if (rootComponent instanceof JButton) -->Line_26 $$ final JButton button = ((JButton) rootComponent)[ CD ]
Line_10 $$ highlight = true-->Line_22 $$ highlight = true[ FD ]
Line_13 $$ if (rootComponent instanceof JRadioButton) -->Line_15 $$ if (isComponentHighlighted(radioButton.getText(), option, force, configurable)) [ CD ]
Line_58 $$ if (innerHighlight) -->Line_59 $$ highlight = true[ CD ]
Line_49 $$ if (border instanceof TitledBorder) -->Line_51 $$ if (isComponentHighlighted(title, option, force, configurable)) [ CD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_15 $$ if (isComponentHighlighted(radioButton.getText(), option, force, configurable)) [ FD ]
Line_21 $$ if (isComponentHighlighted(label.getText(), option, force, configurable)) -->Line_22 $$ highlight = true[ CD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_3 $$ rootComponent.putClientProperty(HIGHLIGHT_WITH_BORDER, null)[ FD ]
Line_4 $$ if (option == null || option.trim().length() == 0)-->Line_5 $$ return false[ CD ]
Line_32 $$ final JTabbedPane tabbedPane = (JTabbedPane) rootComponent-->Line_36 $$ if (index > -1 && index < tabbedPane.getTabCount()) [ FD ]
Line_16 $$ highlight = true-->Line_59 $$ highlight = true[ FD ]
Line_2 $$ private static boolean traverseComponentsTree(final SearchableConfigurable configurable, GlassPanel glassPanel, JComponent rootComponent, String option, boolean force) -->Line_21 $$ if (isComponentHighlighted(label.getText(), option, force, configurable)) [ FD ]
Line_15 $$ if (isComponentHighlighted(radioButton.getText(), option, force, configurable)) -->Line_16 $$ highlight = true[ CD ]
Line_46 $$ final boolean innerHighlight = traverseComponentsTree(configurable, glassPanel, (JComponent) component, option, force)-->Line_47 $$ if (!highlight && !innerHighlight) [ FD ]
Line_52 $$ highlight = true-->Line_59 $$ highlight = true[ FD ]
Line_22 $$ highlight = true-->Line_59 $$ highlight = true[ FD ]
Line_51 $$ if (isComponentHighlighted(title, option, force, configurable)) -->Line_54 $$ rootComponent.putClientProperty(HIGHLIGHT_WITH_BORDER, Boolean.TRUE)[ CD ]
