Line_50 $$ int oldEndOffset = hRegion.endOffset-->Line_70 $$ addHighlighter(i + 1, oldEndOffset, endOffset, attributes)[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_68 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(startOffset, oldEndOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ FD ]
Line_25 $$ if (endOffset < hRegion.endOffset) -->Line_27 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(hRegion.startOffset, endOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_34 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(hRegion.startOffset, endOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ FD ]
Line_49 $$ if (startOffset >= hRegion.startOffset && startOffset < hRegion.endOffset) -->Line_67 $$ if (endOffset > oldEndOffset) [ CD ]
Line_37 $$ if (endOffset > hRegion.endOffset) -->Line_40 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(hRegion.startOffset, hRegion.endOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ CD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_33 $$ myHighlightedRegions.add(i, new HighlightedRegion(startOffset, hRegion.startOffset, attributes))[ FD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_69 $$ if (i < myHighlightedRegions.size() - 1) [ FD ]
Line_6 $$ endOffset = myText.length()-->Line_7 $$ if (startOffset >= endOffset)[ FD ]
Line_24 $$ if (startOffset < hRegion.startOffset && endOffset > hRegion.startOffset) -->Line_25 $$ if (endOffset < hRegion.endOffset) [ CD ]
Line_13 $$ HighlightedRegion hRegion = myHighlightedRegions.get(i)-->Line_56 $$ myHighlightedRegions.remove(hRegion)[ FD ]
Line_6 $$ endOffset = myText.length()-->Line_70 $$ addHighlighter(i + 1, oldEndOffset, endOffset, attributes)[ FD ]
Line_52 $$ if (endOffset < oldEndOffset) -->Line_53 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(startOffset, endOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_74 $$ if (startOffset == hRegion.startOffset) [ FD ]
Line_4 $$ startOffset = 0-->Line_7 $$ if (startOffset >= endOffset)[ FD ]
Line_49 $$ if (startOffset >= hRegion.startOffset && startOffset < hRegion.endOffset) -->Line_60 $$ if (endOffset == oldEndOffset) [ CD ]
Line_6 $$ endOffset = myText.length()-->Line_31 $$ if (endOffset == hRegion.endOffset) [ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_62 $$ if (startOffset == hRegion.startOffset) [ FD ]
Line_5 $$ if (endOffset > myText.length())-->Line_6 $$ endOffset = myText.length()[ CD ]
Line_4 $$ startOffset = 0-->Line_18 $$ if (startOffset >= hRegion.endOffset) [ FD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_39 $$ myHighlightedRegions.add(i, new HighlightedRegion(startOffset, hRegion.startOffset, attributes))[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_9 $$ if (myHighlightedRegions.size() == 0) [ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_61 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(startOffset, oldEndOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_25 $$ if (endOffset < hRegion.endOffset) [ FD ]
Line_37 $$ if (endOffset > hRegion.endOffset) -->Line_39 $$ myHighlightedRegions.add(i, new HighlightedRegion(startOffset, hRegion.startOffset, attributes))[ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_3 $$ if (startOffset < 0)[ CD ]
Line_4 $$ startOffset = 0-->Line_51 $$ hRegion.endOffset = startOffset[ FD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_24 $$ if (startOffset < hRegion.startOffset && endOffset > hRegion.startOffset) [ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_7 $$ if (startOffset >= endOffset)[ FD ]
Line_74 $$ if (startOffset == hRegion.startOffset) -->Line_75 $$ myHighlightedRegions.remove(hRegion)[ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_42 $$ addHighlighter(i + 1, hRegion.endOffset, endOffset, attributes)[ FD ]
Line_69 $$ if (i < myHighlightedRegions.size() - 1) -->Line_72 $$ myHighlightedRegions.add(i + 2, new HighlightedRegion(hRegion.endOffset, endOffset, attributes))[ CD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_14 $$ if (startOffset < hRegion.startOffset && endOffset <= hRegion.startOffset) [ CD ]
Line_69 $$ if (i < myHighlightedRegions.size() - 1) -->Line_70 $$ addHighlighter(i + 1, oldEndOffset, endOffset, attributes)[ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_52 $$ if (endOffset < oldEndOffset) [ FD ]
Line_4 $$ startOffset = 0-->Line_74 $$ if (startOffset == hRegion.startOffset) [ FD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_13 $$ HighlightedRegion hRegion = myHighlightedRegions.get(i)[ FD ]
Line_52 $$ if (endOffset < oldEndOffset) -->Line_55 $$ if (startOffset == hRegion.startOffset) [ CD ]
Line_25 $$ if (endOffset < hRegion.endOffset) -->Line_26 $$ myHighlightedRegions.add(i, new HighlightedRegion(startOffset, hRegion.startOffset, attributes))[ CD ]
Line_24 $$ if (startOffset < hRegion.startOffset && endOffset > hRegion.startOffset) -->Line_37 $$ if (endOffset > hRegion.endOffset) [ CD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_41 $$ if (i < myHighlightedRegions.size() - 1) [ FD ]
Line_7 $$ if (startOffset >= endOffset)-->Line_8 $$ return[ CD ]
Line_18 $$ if (startOffset >= hRegion.endOffset) -->Line_19 $$ if (i == myHighlightedRegions.size() - 1) [ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_53 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(startOffset, endOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ FD ]
Line_50 $$ int oldEndOffset = hRegion.endOffset-->Line_60 $$ if (endOffset == oldEndOffset) [ FD ]
Line_37 $$ if (endOffset > hRegion.endOffset) -->Line_41 $$ if (i < myHighlightedRegions.size() - 1) [ CD ]
Line_62 $$ if (startOffset == hRegion.startOffset) -->Line_63 $$ myHighlightedRegions.remove(hRegion)[ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_51 $$ hRegion.endOffset = startOffset[ FD ]
Line_52 $$ if (endOffset < oldEndOffset) -->Line_54 $$ myHighlightedRegions.add(i + 2, new HighlightedRegion(endOffset, oldEndOffset, hRegion.textAttributes))[ CD ]
Line_9 $$ if (myHighlightedRegions.size() == 0) -->Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) [ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_5 $$ if (endOffset > myText.length())[ CD ]
Line_31 $$ if (endOffset == hRegion.endOffset) -->Line_34 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(hRegion.startOffset, endOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ CD ]
Line_67 $$ if (endOffset > oldEndOffset) -->Line_69 $$ if (i < myHighlightedRegions.size() - 1) [ CD ]
Line_13 $$ HighlightedRegion hRegion = myHighlightedRegions.get(i)-->Line_38 $$ myHighlightedRegions.remove(hRegion)[ FD ]
Line_13 $$ HighlightedRegion hRegion = myHighlightedRegions.get(i)-->Line_63 $$ myHighlightedRegions.remove(hRegion)[ FD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_13 $$ HighlightedRegion hRegion = myHighlightedRegions.get(i)[ CD ]
Line_24 $$ if (startOffset < hRegion.startOffset && endOffset > hRegion.startOffset) -->Line_31 $$ if (endOffset == hRegion.endOffset) [ CD ]
Line_6 $$ endOffset = myText.length()-->Line_67 $$ if (endOffset > oldEndOffset) [ FD ]
Line_6 $$ endOffset = myText.length()-->Line_60 $$ if (endOffset == oldEndOffset) [ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_60 $$ if (endOffset == oldEndOffset) [ FD ]
Line_6 $$ endOffset = myText.length()-->Line_25 $$ if (endOffset < hRegion.endOffset) [ FD ]
Line_6 $$ endOffset = myText.length()-->Line_42 $$ addHighlighter(i + 1, hRegion.endOffset, endOffset, attributes)[ FD ]
Line_37 $$ if (endOffset > hRegion.endOffset) -->Line_38 $$ myHighlightedRegions.remove(hRegion)[ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_37 $$ if (endOffset > hRegion.endOffset) [ FD ]
Line_67 $$ if (endOffset > oldEndOffset) -->Line_68 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(startOffset, oldEndOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ CD ]
Line_31 $$ if (endOffset == hRegion.endOffset) -->Line_33 $$ myHighlightedRegions.add(i, new HighlightedRegion(startOffset, hRegion.startOffset, attributes))[ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_67 $$ if (endOffset > oldEndOffset) [ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_7 $$ if (startOffset >= endOffset)[ CD ]
Line_6 $$ endOffset = myText.length()-->Line_52 $$ if (endOffset < oldEndOffset) [ FD ]
Line_31 $$ if (endOffset == hRegion.endOffset) -->Line_32 $$ myHighlightedRegions.remove(hRegion)[ CD ]
Line_67 $$ if (endOffset > oldEndOffset) -->Line_74 $$ if (startOffset == hRegion.startOffset) [ CD ]
Line_55 $$ if (startOffset == hRegion.startOffset) -->Line_56 $$ myHighlightedRegions.remove(hRegion)[ CD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_19 $$ if (i == myHighlightedRegions.size() - 1) [ FD ]
Line_19 $$ if (i == myHighlightedRegions.size() - 1) -->Line_20 $$ myHighlightedRegions.add(new HighlightedRegion(startOffset, endOffset, attributes))[ CD ]
Line_25 $$ if (endOffset < hRegion.endOffset) -->Line_28 $$ hRegion.startOffset = endOffset[ CD ]
Line_13 $$ HighlightedRegion hRegion = myHighlightedRegions.get(i)-->Line_75 $$ myHighlightedRegions.remove(hRegion)[ FD ]
Line_4 $$ startOffset = 0-->Line_62 $$ if (startOffset == hRegion.startOffset) [ FD ]
Line_3 $$ if (startOffset < 0)-->Line_4 $$ startOffset = 0[ CD ]
Line_60 $$ if (endOffset == oldEndOffset) -->Line_61 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(startOffset, oldEndOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ CD ]
Line_49 $$ if (startOffset >= hRegion.startOffset && startOffset < hRegion.endOffset) -->Line_50 $$ int oldEndOffset = hRegion.endOffset[ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_6 $$ endOffset = myText.length()[ FD ]
Line_50 $$ int oldEndOffset = hRegion.endOffset-->Line_52 $$ if (endOffset < oldEndOffset) [ FD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_26 $$ myHighlightedRegions.add(i, new HighlightedRegion(startOffset, hRegion.startOffset, attributes))[ FD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_15 $$ myHighlightedRegions.add(i, new HighlightedRegion(startOffset, endOffset, attributes))[ FD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_18 $$ if (startOffset >= hRegion.endOffset) [ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_70 $$ addHighlighter(i + 1, oldEndOffset, endOffset, attributes)[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_27 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(hRegion.startOffset, endOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_40 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(hRegion.startOffset, hRegion.endOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_4 $$ startOffset = 0[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_3 $$ if (startOffset < 0)[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_18 $$ if (startOffset >= hRegion.endOffset) [ FD ]
Line_41 $$ if (i < myHighlightedRegions.size() - 1) -->Line_42 $$ addHighlighter(i + 1, hRegion.endOffset, endOffset, attributes)[ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_55 $$ if (startOffset == hRegion.startOffset) [ FD ]
Line_13 $$ HighlightedRegion hRegion = myHighlightedRegions.get(i)-->Line_32 $$ myHighlightedRegions.remove(hRegion)[ FD ]
Line_41 $$ if (i < myHighlightedRegions.size() - 1) -->Line_44 $$ myHighlightedRegions.add(i + 2, new HighlightedRegion(hRegion.endOffset, endOffset, attributes))[ CD ]
Line_49 $$ if (startOffset >= hRegion.startOffset && startOffset < hRegion.endOffset) -->Line_51 $$ hRegion.endOffset = startOffset[ CD ]
Line_14 $$ if (startOffset < hRegion.startOffset && endOffset <= hRegion.startOffset) -->Line_15 $$ myHighlightedRegions.add(i, new HighlightedRegion(startOffset, endOffset, attributes))[ CD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_49 $$ if (startOffset >= hRegion.startOffset && startOffset < hRegion.endOffset) [ CD ]
Line_9 $$ if (myHighlightedRegions.size() == 0) -->Line_10 $$ myHighlightedRegions.add(new HighlightedRegion(startOffset, endOffset, attributes))[ CD ]
Line_6 $$ endOffset = myText.length()-->Line_37 $$ if (endOffset > hRegion.endOffset) [ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_28 $$ hRegion.startOffset = endOffset[ FD ]
Line_60 $$ if (endOffset == oldEndOffset) -->Line_62 $$ if (startOffset == hRegion.startOffset) [ CD ]
Line_49 $$ if (startOffset >= hRegion.startOffset && startOffset < hRegion.endOffset) -->Line_52 $$ if (endOffset < oldEndOffset) [ CD ]
Line_50 $$ int oldEndOffset = hRegion.endOffset-->Line_67 $$ if (endOffset > oldEndOffset) [ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_5 $$ if (endOffset > myText.length())[ FD ]
Line_4 $$ startOffset = 0-->Line_55 $$ if (startOffset == hRegion.startOffset) [ FD ]
Line_6 $$ endOffset = myText.length()-->Line_28 $$ hRegion.startOffset = endOffset[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_31 $$ if (endOffset == hRegion.endOffset) [ FD ]
