Line_3 $$ if (startOffset < 0)-->Line_4 $$ startOffset = 0[ CD ]
Line_56 $$ if (endOffset < oldEndOffset) -->Line_57 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(startOffset, endOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ CD ]
Line_71 $$ if (endOffset > oldEndOffset) -->Line_78 $$ if (startOffset == hRegion.startOffset) [ CD ]
Line_4 $$ startOffset = 0-->Line_7 $$ if (startOffset >= endOffset)[ FD ]
Line_34 $$ if (endOffset == hRegion.endOffset) -->Line_37 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(hRegion.startOffset, endOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ CD ]
Line_34 $$ if (endOffset == hRegion.endOffset) -->Line_35 $$ myHighlightedRegions.remove(hRegion)[ CD ]
Line_66 $$ if (startOffset == hRegion.startOffset) -->Line_67 $$ myHighlightedRegions.remove(hRegion)[ CD ]
Line_6 $$ endOffset = myText.length()-->Line_56 $$ if (endOffset < oldEndOffset) [ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_71 $$ if (endOffset > oldEndOffset) [ FD ]
Line_5 $$ if (endOffset > myText.length())-->Line_6 $$ endOffset = myText.length()[ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_55 $$ hRegion.endOffset = startOffset[ FD ]
Line_6 $$ endOffset = myText.length()-->Line_40 $$ if (endOffset > hRegion.endOffset) [ FD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_44 $$ if (i < myHighlightedRegions.size() - 1) [ FD ]
Line_9 $$ if (myHighlightedRegions.size() == 0) -->Line_10 $$ myHighlightedRegions.add(new HighlightedRegion(startOffset, endOffset, attributes))[ CD ]
Line_28 $$ if (endOffset < hRegion.endOffset) -->Line_29 $$ myHighlightedRegions.add(i, new HighlightedRegion(startOffset, hRegion.startOffset, attributes))[ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_9 $$ if (myHighlightedRegions.size() == 0) [ CD ]
Line_6 $$ endOffset = myText.length()-->Line_34 $$ if (endOffset == hRegion.endOffset) [ FD ]
Line_54 $$ int oldEndOffset = hRegion.endOffset-->Line_56 $$ if (endOffset < oldEndOffset) [ FD ]
Line_44 $$ if (i < myHighlightedRegions.size() - 1) -->Line_45 $$ addHighlighter(i + 1, hRegion.endOffset, endOffset, attributes)[ CD ]
Line_40 $$ if (endOffset > hRegion.endOffset) -->Line_43 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(hRegion.startOffset, hRegion.endOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ CD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_42 $$ myHighlightedRegions.add(i, new HighlightedRegion(startOffset, hRegion.startOffset, attributes))[ FD ]
Line_6 $$ endOffset = myText.length()-->Line_31 $$ hRegion.startOffset = endOffset[ FD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_13 $$ HighlightedRegion hRegion = myHighlightedRegions.get(i)[ FD ]
Line_73 $$ if (i < myHighlightedRegions.size() - 1) -->Line_76 $$ myHighlightedRegions.add(i + 2, new HighlightedRegion(hRegion.endOffset, endOffset, attributes))[ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_30 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(hRegion.startOffset, endOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ FD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_29 $$ myHighlightedRegions.add(i, new HighlightedRegion(startOffset, hRegion.startOffset, attributes))[ FD ]
Line_4 $$ startOffset = 0-->Line_55 $$ hRegion.endOffset = startOffset[ FD ]
Line_7 $$ if (startOffset >= endOffset)-->Line_8 $$ return[ CD ]
Line_40 $$ if (endOffset > hRegion.endOffset) -->Line_42 $$ myHighlightedRegions.add(i, new HighlightedRegion(startOffset, hRegion.startOffset, attributes))[ CD ]
Line_71 $$ if (endOffset > oldEndOffset) -->Line_72 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(startOffset, oldEndOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ CD ]
Line_4 $$ startOffset = 0-->Line_78 $$ if (startOffset == hRegion.startOffset) [ FD ]
Line_4 $$ startOffset = 0-->Line_66 $$ if (startOffset == hRegion.startOffset) [ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_34 $$ if (endOffset == hRegion.endOffset) [ FD ]
Line_13 $$ HighlightedRegion hRegion = myHighlightedRegions.get(i)-->Line_35 $$ myHighlightedRegions.remove(hRegion)[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_5 $$ if (endOffset > myText.length())[ CD ]
Line_6 $$ endOffset = myText.length()-->Line_7 $$ if (startOffset >= endOffset)[ FD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_13 $$ HighlightedRegion hRegion = myHighlightedRegions.get(i)[ CD ]
Line_6 $$ endOffset = myText.length()-->Line_28 $$ if (endOffset < hRegion.endOffset) [ FD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_73 $$ if (i < myHighlightedRegions.size() - 1) [ FD ]
Line_64 $$ if (endOffset == oldEndOffset) -->Line_65 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(startOffset, oldEndOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_64 $$ if (endOffset == oldEndOffset) [ FD ]
Line_13 $$ HighlightedRegion hRegion = myHighlightedRegions.get(i)-->Line_60 $$ myHighlightedRegions.remove(hRegion)[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_5 $$ if (endOffset > myText.length())[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_31 $$ hRegion.startOffset = endOffset[ FD ]
Line_13 $$ HighlightedRegion hRegion = myHighlightedRegions.get(i)-->Line_41 $$ myHighlightedRegions.remove(hRegion)[ FD ]
Line_56 $$ if (endOffset < oldEndOffset) -->Line_59 $$ if (startOffset == hRegion.startOffset) [ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_3 $$ if (startOffset < 0)[ CD ]
Line_28 $$ if (endOffset < hRegion.endOffset) -->Line_31 $$ hRegion.startOffset = endOffset[ CD ]
Line_34 $$ if (endOffset == hRegion.endOffset) -->Line_36 $$ myHighlightedRegions.add(i, new HighlightedRegion(startOffset, hRegion.startOffset, attributes))[ CD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_36 $$ myHighlightedRegions.add(i, new HighlightedRegion(startOffset, hRegion.startOffset, attributes))[ FD ]
Line_6 $$ endOffset = myText.length()-->Line_45 $$ addHighlighter(i + 1, hRegion.endOffset, endOffset, attributes)[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_57 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(startOffset, endOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_45 $$ addHighlighter(i + 1, hRegion.endOffset, endOffset, attributes)[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_37 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(hRegion.startOffset, endOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_65 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(startOffset, oldEndOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ FD ]
Line_13 $$ HighlightedRegion hRegion = myHighlightedRegions.get(i)-->Line_79 $$ myHighlightedRegions.remove(hRegion)[ FD ]
Line_13 $$ HighlightedRegion hRegion = myHighlightedRegions.get(i)-->Line_67 $$ myHighlightedRegions.remove(hRegion)[ FD ]
Line_4 $$ startOffset = 0-->Line_59 $$ if (startOffset == hRegion.startOffset) [ FD ]
Line_54 $$ int oldEndOffset = hRegion.endOffset-->Line_74 $$ addHighlighter(i + 1, oldEndOffset, endOffset, attributes)[ FD ]
Line_6 $$ endOffset = myText.length()-->Line_71 $$ if (endOffset > oldEndOffset) [ FD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_21 $$ if (i == myHighlightedRegions.size() - 1) [ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_43 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(hRegion.startOffset, hRegion.endOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_66 $$ if (startOffset == hRegion.startOffset) [ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_4 $$ startOffset = 0[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_3 $$ if (startOffset < 0)[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_6 $$ endOffset = myText.length()[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_7 $$ if (startOffset >= endOffset)[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_78 $$ if (startOffset == hRegion.startOffset) [ FD ]
Line_21 $$ if (i == myHighlightedRegions.size() - 1) -->Line_22 $$ myHighlightedRegions.add(new HighlightedRegion(startOffset, endOffset, attributes))[ CD ]
Line_54 $$ int oldEndOffset = hRegion.endOffset-->Line_71 $$ if (endOffset > oldEndOffset) [ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_72 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(startOffset, oldEndOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_7 $$ if (startOffset >= endOffset)[ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_40 $$ if (endOffset > hRegion.endOffset) [ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_59 $$ if (startOffset == hRegion.startOffset) [ FD ]
Line_44 $$ if (i < myHighlightedRegions.size() - 1) -->Line_47 $$ myHighlightedRegions.add(i + 2, new HighlightedRegion(hRegion.endOffset, endOffset, attributes))[ CD ]
Line_73 $$ if (i < myHighlightedRegions.size() - 1) -->Line_74 $$ addHighlighter(i + 1, oldEndOffset, endOffset, attributes)[ CD ]
Line_6 $$ endOffset = myText.length()-->Line_64 $$ if (endOffset == oldEndOffset) [ FD ]
Line_71 $$ if (endOffset > oldEndOffset) -->Line_73 $$ if (i < myHighlightedRegions.size() - 1) [ CD ]
Line_54 $$ int oldEndOffset = hRegion.endOffset-->Line_64 $$ if (endOffset == oldEndOffset) [ FD ]
Line_56 $$ if (endOffset < oldEndOffset) -->Line_58 $$ myHighlightedRegions.add(i + 2, new HighlightedRegion(endOffset, oldEndOffset, hRegion.textAttributes))[ CD ]
Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) -->Line_16 $$ myHighlightedRegions.add(i, new HighlightedRegion(startOffset, endOffset, attributes))[ FD ]
Line_28 $$ if (endOffset < hRegion.endOffset) -->Line_30 $$ myHighlightedRegions.add(i + 1, new HighlightedRegion(hRegion.startOffset, endOffset, TextAttributes.merge(hRegion.textAttributes, attributes)))[ CD ]
Line_6 $$ endOffset = myText.length()-->Line_74 $$ addHighlighter(i + 1, oldEndOffset, endOffset, attributes)[ FD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_28 $$ if (endOffset < hRegion.endOffset) [ FD ]
Line_59 $$ if (startOffset == hRegion.startOffset) -->Line_60 $$ myHighlightedRegions.remove(hRegion)[ CD ]
Line_64 $$ if (endOffset == oldEndOffset) -->Line_66 $$ if (startOffset == hRegion.startOffset) [ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_56 $$ if (endOffset < oldEndOffset) [ FD ]
Line_40 $$ if (endOffset > hRegion.endOffset) -->Line_41 $$ myHighlightedRegions.remove(hRegion)[ CD ]
Line_40 $$ if (endOffset > hRegion.endOffset) -->Line_44 $$ if (i < myHighlightedRegions.size() - 1) [ CD ]
Line_2 $$ private void addHighlighter(int startIndex, int startOffset, int endOffset, TextAttributes attributes) -->Line_74 $$ addHighlighter(i + 1, oldEndOffset, endOffset, attributes)[ FD ]
Line_9 $$ if (myHighlightedRegions.size() == 0) -->Line_12 $$ for (int i = startIndex; i < myHighlightedRegions.size(); i++) [ CD ]
Line_78 $$ if (startOffset == hRegion.startOffset) -->Line_79 $$ myHighlightedRegions.remove(hRegion)[ CD ]
