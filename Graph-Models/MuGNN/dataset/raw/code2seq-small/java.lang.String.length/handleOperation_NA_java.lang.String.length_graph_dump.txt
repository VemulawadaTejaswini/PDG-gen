Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_6 $$ String content = null[ CD ]
Line_13 $$ content = loader.getAclStatus(path)-->Line_25 $$ e.getChannel().write(content)[ FD ]
Line_9 $$ content = loader.getFileStatus(path)-->Line_11 $$ content = loader.listStatus(path)[ FD ]
Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_3 $$ HttpRequest request = (HttpRequest) e.getMessage()[ CD ]
Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_23 $$ e.getChannel().write(response)[ CD ]
Line_7 $$ if (request.getMethod() == HttpMethod.GET) -->Line_18 $$ response.setStatus(HttpResponseStatus.METHOD_NOT_ALLOWED)[ CD ]
Line_6 $$ String content = null-->Line_25 $$ e.getChannel().write(content)[ FD ]
Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_8 $$ if (op.equals("GETFILESTATUS")) [ FD ]
Line_11 $$ content = loader.listStatus(path)-->Line_24 $$ if (content != null) [ FD ]
Line_13 $$ content = loader.getAclStatus(path)-->Line_21 $$ HttpHeaders.setContentLength(response, content.length())[ FD ]
Line_9 $$ content = loader.getFileStatus(path)-->Line_24 $$ if (content != null) [ FD ]
Line_9 $$ content = loader.getFileStatus(path)-->Line_13 $$ content = loader.getAclStatus(path)[ FD ]
Line_6 $$ String content = null-->Line_24 $$ if (content != null) [ FD ]
Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_5 $$ response.setHeader(HttpHeaders.Names.CONTENT_TYPE, "application/json")[ CD ]
Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_10 $$ if (op.equals("LISTSTATUS")) [ FD ]
Line_11 $$ content = loader.listStatus(path)-->Line_13 $$ content = loader.getAclStatus(path)[ FD ]
Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_24 $$ if (content != null) [ CD ]
Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_4 $$ HttpResponse response = new DefaultHttpResponse(HttpVersion.HTTP_1_1, HttpResponseStatus.OK)[ CD ]
Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_12 $$ if (op.equals("GETACLSTATUS")) [ FD ]
Line_4 $$ HttpResponse response = new DefaultHttpResponse(HttpVersion.HTTP_1_1, HttpResponseStatus.OK)-->Line_23 $$ e.getChannel().write(response)[ FD ]
Line_13 $$ content = loader.getAclStatus(path)-->Line_24 $$ if (content != null) [ FD ]
Line_6 $$ String content = null-->Line_9 $$ content = loader.getFileStatus(path)[ FD ]
Line_6 $$ String content = null-->Line_20 $$ if (content != null) [ FD ]
Line_20 $$ if (content != null) -->Line_21 $$ HttpHeaders.setContentLength(response, content.length())[ CD ]
Line_4 $$ HttpResponse response = new DefaultHttpResponse(HttpVersion.HTTP_1_1, HttpResponseStatus.OK)-->Line_21 $$ HttpHeaders.setContentLength(response, content.length())[ FD ]
Line_3 $$ HttpRequest request = (HttpRequest) e.getMessage()-->Line_27 $$ LOG.info(response.getStatus().getCode() + " method=" + request.getMethod().getName() + " op=" + op + " target=" + path)[ FD ]
Line_8 $$ if (op.equals("GETFILESTATUS")) -->Line_10 $$ if (op.equals("LISTSTATUS")) [ CD ]
Line_4 $$ HttpResponse response = new DefaultHttpResponse(HttpVersion.HTTP_1_1, HttpResponseStatus.OK)-->Line_18 $$ response.setStatus(HttpResponseStatus.METHOD_NOT_ALLOWED)[ FD ]
Line_7 $$ if (request.getMethod() == HttpMethod.GET) -->Line_8 $$ if (op.equals("GETFILESTATUS")) [ CD ]
Line_3 $$ HttpRequest request = (HttpRequest) e.getMessage()-->Line_7 $$ if (request.getMethod() == HttpMethod.GET) [ FD ]
Line_8 $$ if (op.equals("GETFILESTATUS")) -->Line_9 $$ content = loader.getFileStatus(path)[ CD ]
Line_11 $$ content = loader.listStatus(path)-->Line_25 $$ e.getChannel().write(content)[ FD ]
Line_4 $$ HttpResponse response = new DefaultHttpResponse(HttpVersion.HTTP_1_1, HttpResponseStatus.OK)-->Line_27 $$ LOG.info(response.getStatus().getCode() + " method=" + request.getMethod().getName() + " op=" + op + " target=" + path)[ FD ]
Line_4 $$ HttpResponse response = new DefaultHttpResponse(HttpVersion.HTTP_1_1, HttpResponseStatus.OK)-->Line_5 $$ response.setHeader(HttpHeaders.Names.CONTENT_TYPE, "application/json")[ FD ]
Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_27 $$ LOG.info(response.getStatus().getCode() + " method=" + request.getMethod().getName() + " op=" + op + " target=" + path)[ CD ]
Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_9 $$ content = loader.getFileStatus(path)[ FD ]
Line_11 $$ content = loader.listStatus(path)-->Line_20 $$ if (content != null) [ FD ]
Line_9 $$ content = loader.getFileStatus(path)-->Line_21 $$ HttpHeaders.setContentLength(response, content.length())[ FD ]
Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_7 $$ if (request.getMethod() == HttpMethod.GET) [ CD ]
Line_9 $$ content = loader.getFileStatus(path)-->Line_20 $$ if (content != null) [ FD ]
Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_25 $$ e.getChannel().write(content)[ FD ]
Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_20 $$ if (content != null) [ CD ]
Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_23 $$ e.getChannel().write(response)[ FD ]
Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_3 $$ HttpRequest request = (HttpRequest) e.getMessage()[ FD ]
Line_12 $$ if (op.equals("GETACLSTATUS")) -->Line_15 $$ response.setStatus(HttpResponseStatus.BAD_REQUEST)[ CD ]
Line_4 $$ HttpResponse response = new DefaultHttpResponse(HttpVersion.HTTP_1_1, HttpResponseStatus.OK)-->Line_15 $$ response.setStatus(HttpResponseStatus.BAD_REQUEST)[ FD ]
Line_10 $$ if (op.equals("LISTSTATUS")) -->Line_12 $$ if (op.equals("GETACLSTATUS")) [ CD ]
Line_12 $$ if (op.equals("GETACLSTATUS")) -->Line_13 $$ content = loader.getAclStatus(path)[ CD ]
Line_13 $$ content = loader.getAclStatus(path)-->Line_20 $$ if (content != null) [ FD ]
Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_13 $$ content = loader.getAclStatus(path)[ FD ]
Line_11 $$ content = loader.listStatus(path)-->Line_21 $$ HttpHeaders.setContentLength(response, content.length())[ FD ]
Line_6 $$ String content = null-->Line_11 $$ content = loader.listStatus(path)[ FD ]
Line_2 $$ private void handleOperation(String op, String path, MessageEvent e) throws IOException -->Line_11 $$ content = loader.listStatus(path)[ FD ]
Line_6 $$ String content = null-->Line_21 $$ HttpHeaders.setContentLength(response, content.length())[ FD ]
Line_10 $$ if (op.equals("LISTSTATUS")) -->Line_11 $$ content = loader.listStatus(path)[ CD ]
Line_24 $$ if (content != null) -->Line_25 $$ e.getChannel().write(content)[ CD ]
Line_6 $$ String content = null-->Line_13 $$ content = loader.getAclStatus(path)[ FD ]
Line_9 $$ content = loader.getFileStatus(path)-->Line_25 $$ e.getChannel().write(content)[ FD ]
