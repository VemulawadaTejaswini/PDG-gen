Line_5 $$ String address = value.asString()-->Line_9 $$ if (!AddressUtils.isValidAddress(address)) [ FD ]
Line_2 $$ public void validateParameter(String parameterName, ModelNode value) throws OperationFailedException -->Line_3 $$ super.validateParameter(parameterName, value)[ CD ]
Line_4 $$ if (value.isDefined() && value.getType() != ModelType.EXPRESSION) -->Line_9 $$ if (!AddressUtils.isValidAddress(address)) [ CD ]
Line_7 $$ address = address.substring(1, address.length() - 1)-->Line_10 $$ throw new OperationFailedException(Messages.MESSAGES.invalidAddressProvided(address))[ FD ]
Line_2 $$ public void validateParameter(String parameterName, ModelNode value) throws OperationFailedException -->Line_4 $$ if (value.isDefined() && value.getType() != ModelType.EXPRESSION) [ FD ]
Line_2 $$ public void validateParameter(String parameterName, ModelNode value) throws OperationFailedException -->Line_3 $$ super.validateParameter(parameterName, value)[ FD ]
Line_5 $$ String address = value.asString()-->Line_7 $$ address = address.substring(1, address.length() - 1)[ FD ]
Line_4 $$ if (value.isDefined() && value.getType() != ModelType.EXPRESSION) -->Line_5 $$ String address = value.asString()[ CD ]
Line_4 $$ if (value.isDefined() && value.getType() != ModelType.EXPRESSION) -->Line_6 $$ if (address.startsWith("[") && address.endsWith("]")) [ CD ]
Line_6 $$ if (address.startsWith("[") && address.endsWith("]")) -->Line_7 $$ address = address.substring(1, address.length() - 1)[ CD ]
Line_7 $$ address = address.substring(1, address.length() - 1)-->Line_9 $$ if (!AddressUtils.isValidAddress(address)) [ FD ]
Line_5 $$ String address = value.asString()-->Line_10 $$ throw new OperationFailedException(Messages.MESSAGES.invalidAddressProvided(address))[ FD ]
Line_2 $$ public void validateParameter(String parameterName, ModelNode value) throws OperationFailedException -->Line_5 $$ String address = value.asString()[ FD ]
Line_5 $$ String address = value.asString()-->Line_6 $$ if (address.startsWith("[") && address.endsWith("]")) [ FD ]
Line_2 $$ public void validateParameter(String parameterName, ModelNode value) throws OperationFailedException -->Line_4 $$ if (value.isDefined() && value.getType() != ModelType.EXPRESSION) [ CD ]
