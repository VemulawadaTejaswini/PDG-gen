Line_2 $$ private List<String> getClassSearchResults(String pattern) -->Line_3 $$ List<String> actualArtifacts = new ArrayList<String>()[ CD ]
Line_5 $$ String s = eachResult.className + "(" + eachResult.packageName + ")"-->Line_9 $$ s += eachVersion.getGroupId() + ":" + eachVersion.getArtifactId() + ":" + eachVersion.getVersion()[ FD ]
Line_7 $$ if (s.length() > 0)-->Line_8 $$ s += " "[ CD ]
Line_5 $$ String s = eachResult.className + "(" + eachResult.packageName + ")"-->Line_8 $$ s += " "[ FD ]
Line_3 $$ List<String> actualArtifacts = new ArrayList<String>()-->Line_11 $$ actualArtifacts.add(s)[ FD ]
Line_5 $$ String s = eachResult.className + "(" + eachResult.packageName + ")"-->Line_11 $$ actualArtifacts.add(s)[ FD ]
Line_2 $$ private List<String> getClassSearchResults(String pattern) -->Line_4 $$ for (MavenClassSearchResult eachResult : new MavenClassSearcher().search(myProject, pattern, 100)) [ FD ]
Line_9 $$ s += eachVersion.getGroupId() + ":" + eachVersion.getArtifactId() + ":" + eachVersion.getVersion()-->Line_11 $$ actualArtifacts.add(s)[ FD ]
Line_2 $$ private List<String> getClassSearchResults(String pattern) -->Line_13 $$ return actualArtifacts[ CD ]
Line_5 $$ String s = eachResult.className + "(" + eachResult.packageName + ")"-->Line_7 $$ if (s.length() > 0)[ FD ]
Line_8 $$ s += " "-->Line_9 $$ s += eachVersion.getGroupId() + ":" + eachVersion.getArtifactId() + ":" + eachVersion.getVersion()[ FD ]
Line_6 $$ for (MavenArtifactInfo eachVersion : eachResult.versions) -->Line_9 $$ s += eachVersion.getGroupId() + ":" + eachVersion.getArtifactId() + ":" + eachVersion.getVersion()[ FD ]
Line_8 $$ s += " "-->Line_11 $$ actualArtifacts.add(s)[ FD ]
