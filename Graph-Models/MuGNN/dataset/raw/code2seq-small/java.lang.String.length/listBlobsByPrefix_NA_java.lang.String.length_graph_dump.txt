Line_6 $$ ObjectListing list-->Line_13 $$ list = blobStore.client().listObjects(blobStore.bucket(), keyPath)[ FD ]
Line_2 $$ public Map<String, BlobMetaData> listBlobsByPrefix(@Nullable String blobNamePrefix) throws IOException -->Line_10 $$ if (blobNamePrefix != null) [ FD ]
Line_13 $$ list = blobStore.client().listObjects(blobStore.bucket(), keyPath)-->Line_16 $$ for (S3ObjectSummary summary : list.getObjectSummaries()) [ FD ]
Line_8 $$ list = blobStore.client().listNextBatchOfObjects(prevListing)-->Line_21 $$ prevListing = list[ FD ]
Line_13 $$ list = blobStore.client().listObjects(blobStore.bucket(), keyPath)-->Line_20 $$ if (list.isTruncated()) [ FD ]
Line_8 $$ list = blobStore.client().listNextBatchOfObjects(prevListing)-->Line_20 $$ if (list.isTruncated()) [ FD ]
Line_11 $$ list = blobStore.client().listObjects(blobStore.bucket(), buildKey(blobNamePrefix))-->Line_20 $$ if (list.isTruncated()) [ FD ]
Line_6 $$ ObjectListing list-->Line_20 $$ if (list.isTruncated()) [ FD ]
Line_5 $$ while (true) -->Line_7 $$ if (prevListing != null) [ CD ]
Line_13 $$ list = blobStore.client().listObjects(blobStore.bucket(), keyPath)-->Line_21 $$ prevListing = list[ FD ]
Line_7 $$ if (prevListing != null) -->Line_10 $$ if (blobNamePrefix != null) [ CD ]
Line_2 $$ public Map<String, BlobMetaData> listBlobsByPrefix(@Nullable String blobNamePrefix) throws IOException -->Line_3 $$ MapBuilder<String, BlobMetaData> blobsBuilder = MapBuilder.newMapBuilder()[ CD ]
Line_3 $$ MapBuilder<String, BlobMetaData> blobsBuilder = MapBuilder.newMapBuilder()-->Line_18 $$ blobsBuilder.put(name, new PlainBlobMetaData(name, summary.getSize()))[ FD ]
Line_17 $$ String name = summary.getKey().substring(keyPath.length())-->Line_18 $$ blobsBuilder.put(name, new PlainBlobMetaData(name, summary.getSize()))[ FD ]
Line_5 $$ while (true) -->Line_20 $$ if (list.isTruncated()) [ CD ]
Line_16 $$ for (S3ObjectSummary summary : list.getObjectSummaries()) -->Line_18 $$ blobsBuilder.put(name, new PlainBlobMetaData(name, summary.getSize()))[ FD ]
Line_21 $$ prevListing = list-->Line_8 $$ list = blobStore.client().listNextBatchOfObjects(prevListing)[ FD ]
Line_8 $$ list = blobStore.client().listNextBatchOfObjects(prevListing)-->Line_11 $$ list = blobStore.client().listObjects(blobStore.bucket(), buildKey(blobNamePrefix))[ FD ]
Line_11 $$ list = blobStore.client().listObjects(blobStore.bucket(), buildKey(blobNamePrefix))-->Line_13 $$ list = blobStore.client().listObjects(blobStore.bucket(), keyPath)[ FD ]
Line_11 $$ list = blobStore.client().listObjects(blobStore.bucket(), buildKey(blobNamePrefix))-->Line_16 $$ for (S3ObjectSummary summary : list.getObjectSummaries()) [ FD ]
Line_16 $$ for (S3ObjectSummary summary : list.getObjectSummaries()) -->Line_17 $$ String name = summary.getKey().substring(keyPath.length())[ FD ]
Line_2 $$ public Map<String, BlobMetaData> listBlobsByPrefix(@Nullable String blobNamePrefix) throws IOException -->Line_11 $$ list = blobStore.client().listObjects(blobStore.bucket(), buildKey(blobNamePrefix))[ FD ]
Line_5 $$ while (true) -->Line_6 $$ ObjectListing list[ CD ]
Line_4 $$ ObjectListing prevListing = null-->Line_21 $$ prevListing = list[ FD ]
Line_2 $$ public Map<String, BlobMetaData> listBlobsByPrefix(@Nullable String blobNamePrefix) throws IOException -->Line_4 $$ ObjectListing prevListing = null[ CD ]
Line_6 $$ ObjectListing list-->Line_11 $$ list = blobStore.client().listObjects(blobStore.bucket(), buildKey(blobNamePrefix))[ FD ]
Line_6 $$ ObjectListing list-->Line_16 $$ for (S3ObjectSummary summary : list.getObjectSummaries()) [ FD ]
Line_2 $$ public Map<String, BlobMetaData> listBlobsByPrefix(@Nullable String blobNamePrefix) throws IOException -->Line_5 $$ while (true) [ CD ]
Line_8 $$ list = blobStore.client().listNextBatchOfObjects(prevListing)-->Line_16 $$ for (S3ObjectSummary summary : list.getObjectSummaries()) [ FD ]
Line_4 $$ ObjectListing prevListing = null-->Line_8 $$ list = blobStore.client().listNextBatchOfObjects(prevListing)[ FD ]
Line_6 $$ ObjectListing list-->Line_8 $$ list = blobStore.client().listNextBatchOfObjects(prevListing)[ FD ]
Line_11 $$ list = blobStore.client().listObjects(blobStore.bucket(), buildKey(blobNamePrefix))-->Line_21 $$ prevListing = list[ FD ]
Line_8 $$ list = blobStore.client().listNextBatchOfObjects(prevListing)-->Line_13 $$ list = blobStore.client().listObjects(blobStore.bucket(), keyPath)[ FD ]
Line_2 $$ public Map<String, BlobMetaData> listBlobsByPrefix(@Nullable String blobNamePrefix) throws IOException -->Line_26 $$ return blobsBuilder.immutableMap()[ CD ]
Line_3 $$ MapBuilder<String, BlobMetaData> blobsBuilder = MapBuilder.newMapBuilder()-->Line_26 $$ return blobsBuilder.immutableMap()[ FD ]
Line_21 $$ prevListing = list-->Line_7 $$ if (prevListing != null) [ FD ]
Line_10 $$ if (blobNamePrefix != null) -->Line_11 $$ list = blobStore.client().listObjects(blobStore.bucket(), buildKey(blobNamePrefix))[ CD ]
Line_10 $$ if (blobNamePrefix != null) -->Line_13 $$ list = blobStore.client().listObjects(blobStore.bucket(), keyPath)[ CD ]
Line_6 $$ ObjectListing list-->Line_21 $$ prevListing = list[ FD ]
Line_7 $$ if (prevListing != null) -->Line_8 $$ list = blobStore.client().listNextBatchOfObjects(prevListing)[ CD ]
Line_20 $$ if (list.isTruncated()) -->Line_21 $$ prevListing = list[ CD ]
Line_4 $$ ObjectListing prevListing = null-->Line_7 $$ if (prevListing != null) [ FD ]
