Line_3 $$ PsiExpression argument = myCallArguments[paramIndex]-->Line_8 $$ return TypeConversionUtil.isAssignable(parameter.getType(), argument.getType())[ FD ]
Line_4 $$ if (isLiteralExpression(argument) && argument.getType() != null) -->Line_6 $$ String paramName = parameter.getName()[ CD ]
Line_3 $$ PsiExpression argument = myCallArguments[paramIndex]-->Line_4 $$ if (isLiteralExpression(argument) && argument.getType() != null) [ FD ]
Line_2 $$ private boolean shouldInlineParameterName(int paramIndex) -->Line_3 $$ PsiExpression argument = myCallArguments[paramIndex][ CD ]
Line_4 $$ if (isLiteralExpression(argument) && argument.getType() != null) -->Line_7 $$ if (paramName != null && paramName.length() >= MIN_NAME_LENGTH_THRESHOLD) [ CD ]
Line_4 $$ if (isLiteralExpression(argument) && argument.getType() != null) -->Line_5 $$ PsiParameter parameter = myParameters[paramIndex][ CD ]
Line_5 $$ PsiParameter parameter = myParameters[paramIndex]-->Line_6 $$ String paramName = parameter.getName()[ FD ]
Line_2 $$ private boolean shouldInlineParameterName(int paramIndex) -->Line_4 $$ if (isLiteralExpression(argument) && argument.getType() != null) [ CD ]
Line_2 $$ private boolean shouldInlineParameterName(int paramIndex) -->Line_11 $$ return false[ CD ]
Line_5 $$ PsiParameter parameter = myParameters[paramIndex]-->Line_8 $$ return TypeConversionUtil.isAssignable(parameter.getType(), argument.getType())[ FD ]
Line_6 $$ String paramName = parameter.getName()-->Line_7 $$ if (paramName != null && paramName.length() >= MIN_NAME_LENGTH_THRESHOLD) [ FD ]
Line_7 $$ if (paramName != null && paramName.length() >= MIN_NAME_LENGTH_THRESHOLD) -->Line_8 $$ return TypeConversionUtil.isAssignable(parameter.getType(), argument.getType())[ CD ]
