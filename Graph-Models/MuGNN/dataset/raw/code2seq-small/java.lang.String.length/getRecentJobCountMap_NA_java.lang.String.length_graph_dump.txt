Line_17 $$ StringBuilder sb = new StringBuilder()-->Line_32 $$ if (sb.length() > 0) [ FD ]
Line_7 $$ for (File file : dir.listFiles()) -->Line_38 $$ file.delete()[ FD ]
Line_19 $$ for (String jobCountData : content.split("\\|")) -->Line_21 $$ int jobCount = Integer.parseInt(jobCountData.substring(0, x))[ FD ]
Line_19 $$ for (String jobCountData : content.split("\\|")) -->Line_22 $$ long timestamp = Long.parseLong(jobCountData.substring(x + 1))[ FD ]
Line_7 $$ for (File file : dir.listFiles()) -->Line_33 $$ JenkinsResultsParserUtil.write(file, sb.toString())[ FD ]
Line_23 $$ if ((timestamp + recentJobPeriod) > System.currentTimeMillis()) -->Line_27 $$ sb.append(jobCountData)[ CD ]
Line_2 $$ protected static Map<String, Integer> getRecentJobCountMap(File dir) throws Exception -->Line_3 $$ Map<String, Integer> jobCountMap = new HashMap()[ CD ]
Line_21 $$ int jobCount = Integer.parseInt(jobCountData.substring(0, x))-->Line_28 $$ totalJobCount += jobCount[ FD ]
Line_3 $$ Map<String, Integer> jobCountMap = new HashMap()-->Line_31 $$ jobCountMap.put(file.getName(), totalJobCount)[ FD ]
Line_2 $$ protected static Map<String, Integer> getRecentJobCountMap(File dir) throws Exception -->Line_4 $$ if (!dir.exists()) [ CD ]
Line_28 $$ totalJobCount += jobCount-->Line_31 $$ jobCountMap.put(file.getName(), totalJobCount)[ FD ]
Line_19 $$ for (String jobCountData : content.split("\\|")) -->Line_27 $$ sb.append(jobCountData)[ FD ]
Line_7 $$ for (File file : dir.listFiles()) -->Line_8 $$ if ((System.currentTimeMillis() - file.lastModified()) > recentJobPeriod) [ FD ]
Line_2 $$ protected static Map<String, Integer> getRecentJobCountMap(File dir) throws Exception -->Line_7 $$ for (File file : dir.listFiles()) [ FD ]
Line_7 $$ for (File file : dir.listFiles()) -->Line_13 $$ String content = JenkinsResultsParserUtil.read(file)[ FD ]
Line_32 $$ if (sb.length() > 0) -->Line_35 $$ file.delete()[ CD ]
Line_4 $$ if (!dir.exists()) -->Line_5 $$ return jobCountMap[ CD ]
Line_7 $$ for (File file : dir.listFiles()) -->Line_9 $$ file.delete()[ FD ]
Line_18 $$ int totalJobCount = 0-->Line_28 $$ totalJobCount += jobCount[ FD ]
Line_13 $$ String content = JenkinsResultsParserUtil.read(file)-->Line_19 $$ for (String jobCountData : content.split("\\|")) [ FD ]
Line_23 $$ if ((timestamp + recentJobPeriod) > System.currentTimeMillis()) -->Line_24 $$ if (sb.length() > 0) [ CD ]
Line_8 $$ if ((System.currentTimeMillis() - file.lastModified()) > recentJobPeriod) -->Line_9 $$ file.delete()[ CD ]
Line_20 $$ int x = jobCountData.indexOf("-")-->Line_21 $$ int jobCount = Integer.parseInt(jobCountData.substring(0, x))[ FD ]
Line_18 $$ int totalJobCount = 0-->Line_31 $$ jobCountMap.put(file.getName(), totalJobCount)[ FD ]
Line_19 $$ for (String jobCountData : content.split("\\|")) -->Line_20 $$ int x = jobCountData.indexOf("-")[ FD ]
Line_2 $$ protected static Map<String, Integer> getRecentJobCountMap(File dir) throws Exception -->Line_41 $$ return jobCountMap[ CD ]
Line_13 $$ String content = JenkinsResultsParserUtil.read(file)-->Line_14 $$ if (content.length() == 0) [ FD ]
Line_17 $$ StringBuilder sb = new StringBuilder()-->Line_33 $$ JenkinsResultsParserUtil.write(file, sb.toString())[ FD ]
Line_32 $$ if (sb.length() > 0) -->Line_33 $$ JenkinsResultsParserUtil.write(file, sb.toString())[ CD ]
Line_24 $$ if (sb.length() > 0) -->Line_25 $$ sb.append("|")[ CD ]
Line_17 $$ StringBuilder sb = new StringBuilder()-->Line_24 $$ if (sb.length() > 0) [ FD ]
Line_17 $$ StringBuilder sb = new StringBuilder()-->Line_25 $$ sb.append("|")[ FD ]
Line_7 $$ for (File file : dir.listFiles()) -->Line_31 $$ jobCountMap.put(file.getName(), totalJobCount)[ FD ]
Line_17 $$ StringBuilder sb = new StringBuilder()-->Line_27 $$ sb.append(jobCountData)[ FD ]
Line_2 $$ protected static Map<String, Integer> getRecentJobCountMap(File dir) throws Exception -->Line_4 $$ if (!dir.exists()) [ FD ]
Line_23 $$ if ((timestamp + recentJobPeriod) > System.currentTimeMillis()) -->Line_28 $$ totalJobCount += jobCount[ CD ]
Line_7 $$ for (File file : dir.listFiles()) -->Line_35 $$ file.delete()[ FD ]
