Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_16 $$ final PsiMethod method = PsiTreeUtil.getParentOfType(returnStatement, PsiMethod.class, true, PsiLambdaExpression.class)[ FD ]
Line_18 $$ offset = returnStatement.getTextRange().getStartOffset() + "return".length()-->Line_28 $$ editor.getDocument().insertString(offset, ";")[ FD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_27 $$ final int offset = returnStatement.getTextRange().getEndOffset()[ FD ]
Line_6 $$ final PsiElement lastChild = returnStatement.getLastChild()-->Line_10 $$ PsiElement prev = lastChild.getPrevSibling()[ FD ]
Line_18 $$ offset = returnStatement.getTextRange().getStartOffset() + "return".length()-->Line_20 $$ editor.getDocument().insertString(offset, ";")[ FD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_24 $$ if (prevToken.getTokenType() == JavaTokenType.SEMICOLON) [ CD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_29 $$ if (prevToken.getTokenType() == JavaTokenType.RETURN_KEYWORD) [ CD ]
Line_31 $$ if (method != null && !PsiType.VOID.equals(method.getReturnType())) -->Line_33 $$ processor.setSkipEnter(true)[ CD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_23 $$ PsiJavaToken prevToken = (PsiJavaToken) prev[ CD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_7 $$ if (!(lastChild instanceof PsiErrorElement)) [ CD ]
Line_23 $$ PsiJavaToken prevToken = (PsiJavaToken) prev-->Line_24 $$ if (prevToken.getTokenType() == JavaTokenType.SEMICOLON) [ FD ]
Line_31 $$ if (method != null && !PsiType.VOID.equals(method.getReturnType())) -->Line_32 $$ editor.getCaretModel().moveToOffset(offset)[ CD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_6 $$ final PsiElement lastChild = returnStatement.getLastChild()[ FD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_3 $$ if (returnStatement == null) [ CD ]
Line_14 $$ if (!(prev instanceof PsiJavaToken)) -->Line_15 $$ int offset = returnStatement.getTextRange().getEndOffset()[ CD ]
Line_14 $$ if (!(prev instanceof PsiJavaToken)) -->Line_17 $$ if (method != null && PsiType.VOID.equals(method.getReturnType())) [ CD ]
Line_16 $$ final PsiMethod method = PsiTreeUtil.getParentOfType(returnStatement, PsiMethod.class, true, PsiLambdaExpression.class)-->Line_17 $$ if (method != null && PsiType.VOID.equals(method.getReturnType())) [ FD ]
Line_15 $$ int offset = returnStatement.getTextRange().getEndOffset()-->Line_18 $$ offset = returnStatement.getTextRange().getStartOffset() + "return".length()[ FD ]
Line_24 $$ if (prevToken.getTokenType() == JavaTokenType.SEMICOLON) -->Line_25 $$ return false[ CD ]
Line_23 $$ PsiJavaToken prevToken = (PsiJavaToken) prev-->Line_29 $$ if (prevToken.getTokenType() == JavaTokenType.RETURN_KEYWORD) [ FD ]
Line_15 $$ int offset = returnStatement.getTextRange().getEndOffset()-->Line_20 $$ editor.getDocument().insertString(offset, ";")[ FD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_28 $$ editor.getDocument().insertString(offset, ";")[ CD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_27 $$ final int offset = returnStatement.getTextRange().getEndOffset()[ CD ]
Line_14 $$ if (!(prev instanceof PsiJavaToken)) -->Line_16 $$ final PsiMethod method = PsiTreeUtil.getParentOfType(returnStatement, PsiMethod.class, true, PsiLambdaExpression.class)[ CD ]
Line_14 $$ if (!(prev instanceof PsiJavaToken)) -->Line_21 $$ return true[ CD ]
Line_7 $$ if (!(lastChild instanceof PsiErrorElement)) -->Line_8 $$ return false[ CD ]
Line_11 $$ if (prev instanceof PsiWhiteSpace) -->Line_12 $$ prev = prev.getPrevSibling()[ CD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_18 $$ offset = returnStatement.getTextRange().getStartOffset() + "return".length()[ FD ]
Line_29 $$ if (prevToken.getTokenType() == JavaTokenType.RETURN_KEYWORD) -->Line_30 $$ final PsiMethod method = PsiTreeUtil.getParentOfType(returnStatement, PsiMethod.class)[ CD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_10 $$ PsiElement prev = lastChild.getPrevSibling()[ CD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_30 $$ final PsiMethod method = PsiTreeUtil.getParentOfType(returnStatement, PsiMethod.class)[ FD ]
Line_15 $$ int offset = returnStatement.getTextRange().getEndOffset()-->Line_32 $$ editor.getCaretModel().moveToOffset(offset)[ FD ]
Line_10 $$ PsiElement prev = lastChild.getPrevSibling()-->Line_11 $$ if (prev instanceof PsiWhiteSpace) [ FD ]
Line_29 $$ if (prevToken.getTokenType() == JavaTokenType.RETURN_KEYWORD) -->Line_31 $$ if (method != null && !PsiType.VOID.equals(method.getReturnType())) [ CD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_32 $$ editor.getCaretModel().moveToOffset(offset)[ FD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_28 $$ editor.getDocument().insertString(offset, ";")[ FD ]
Line_18 $$ offset = returnStatement.getTextRange().getStartOffset() + "return".length()-->Line_32 $$ editor.getCaretModel().moveToOffset(offset)[ FD ]
Line_10 $$ PsiElement prev = lastChild.getPrevSibling()-->Line_12 $$ prev = prev.getPrevSibling()[ FD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_14 $$ if (!(prev instanceof PsiJavaToken)) [ CD ]
Line_15 $$ int offset = returnStatement.getTextRange().getEndOffset()-->Line_28 $$ editor.getDocument().insertString(offset, ";")[ FD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_20 $$ editor.getDocument().insertString(offset, ";")[ FD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_36 $$ return true[ CD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_33 $$ processor.setSkipEnter(true)[ FD ]
Line_17 $$ if (method != null && PsiType.VOID.equals(method.getReturnType())) -->Line_18 $$ offset = returnStatement.getTextRange().getStartOffset() + "return".length()[ CD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_3 $$ if (returnStatement == null) [ FD ]
Line_14 $$ if (!(prev instanceof PsiJavaToken)) -->Line_20 $$ editor.getDocument().insertString(offset, ";")[ CD ]
Line_16 $$ final PsiMethod method = PsiTreeUtil.getParentOfType(returnStatement, PsiMethod.class, true, PsiLambdaExpression.class)-->Line_31 $$ if (method != null && !PsiType.VOID.equals(method.getReturnType())) [ FD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_15 $$ int offset = returnStatement.getTextRange().getEndOffset()[ FD ]
Line_3 $$ if (returnStatement == null) -->Line_4 $$ return false[ CD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_6 $$ final PsiElement lastChild = returnStatement.getLastChild()[ CD ]
Line_2 $$ private static boolean fixMethodCallWithoutTrailingSemicolon(@Nullable PsiReturnStatement returnStatement, @NotNull Editor editor, @NotNull JavaSmartEnterProcessor processor) -->Line_11 $$ if (prev instanceof PsiWhiteSpace) [ CD ]
