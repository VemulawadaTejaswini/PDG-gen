Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_8 $$ ModelMaterial jsonMaterial = new ModelMaterial()[ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_19 $$ final JsonValue emissive = material.get("emissive")[ FD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_34 $$ String textureId = texture.getString("id", null)[ CD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_37 $$ jsonTexture.id = textureId[ CD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_38 $$ String fileName = texture.getString("filename", null)[ CD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_42 $$ jsonTexture.uvTranslation = readVector2(texture.get("uvTranslation"), 0f, 0f)[ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_22 $$ final JsonValue specular = material.get("specular")[ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_13 $$ final JsonValue diffuse = material.get("diffuse")[ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_9 $$ String id = material.getString("id", null)[ CD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_38 $$ String fileName = texture.getString("filename", null)[ FD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_35 $$ if (textureId == null)[ CD ]
Line_2 $$ private void parseMaterials(ModelData model, JsonValue json, String materialDir) -->Line_4 $$ if (materials == null) [ CD ]
Line_13 $$ final JsonValue diffuse = material.get("diffuse")-->Line_15 $$ jsonMaterial.diffuse = parseColor(diffuse)[ FD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_16 $$ final JsonValue ambient = material.get("ambient")[ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_23 $$ if (specular != null)[ CD ]
Line_38 $$ String fileName = texture.getString("filename", null)-->Line_41 $$ jsonTexture.fileName = materialDir + (materialDir.length() == 0 || materialDir.endsWith("/") ? "" : "/") + fileName[ FD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_50 $$ jsonMaterial.textures.add(jsonTexture)[ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_9 $$ String id = material.getString("id", null)[ FD ]
Line_2 $$ private void parseMaterials(ModelData model, JsonValue json, String materialDir) -->Line_3 $$ JsonValue materials = json.get("materials")[ FD ]
Line_4 $$ if (materials == null) -->Line_6 $$ model.materials.ensureCapacity(materials.size)[ CD ]
Line_31 $$ if (textures != null) -->Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) [ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_30 $$ JsonValue textures = material.get("textures")[ CD ]
Line_38 $$ String fileName = texture.getString("filename", null)-->Line_39 $$ if (fileName == null)[ FD ]
Line_30 $$ JsonValue textures = material.get("textures")-->Line_31 $$ if (textures != null) [ FD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_33 $$ ModelTexture jsonTexture = new ModelTexture()[ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_29 $$ jsonMaterial.opacity = material.getFloat("opacity", 1.0f)[ CD ]
Line_34 $$ String textureId = texture.getString("id", null)-->Line_35 $$ if (textureId == null)[ FD ]
Line_44 $$ String textureType = texture.getString("type", null)-->Line_47 $$ jsonTexture.usage = parseTextureUsage(textureType)[ FD ]
Line_19 $$ final JsonValue emissive = material.get("emissive")-->Line_20 $$ if (emissive != null)[ FD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_30 $$ JsonValue textures = material.get("textures")[ FD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_34 $$ String textureId = texture.getString("id", null)[ FD ]
Line_22 $$ final JsonValue specular = material.get("specular")-->Line_23 $$ if (specular != null)[ FD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_43 $$ jsonTexture.uvScaling = readVector2(texture.get("uvScaling"), 1f, 1f)[ FD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_28 $$ jsonMaterial.shininess = material.getFloat("shininess", 0.0f)[ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_17 $$ if (ambient != null)[ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_29 $$ jsonMaterial.opacity = material.getFloat("opacity", 1.0f)[ FD ]
Line_34 $$ String textureId = texture.getString("id", null)-->Line_37 $$ jsonTexture.id = textureId[ FD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_22 $$ final JsonValue specular = material.get("specular")[ FD ]
Line_4 $$ if (materials == null) -->Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) [ CD ]
Line_23 $$ if (specular != null)-->Line_24 $$ jsonMaterial.specular = parseColor(specular)[ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_16 $$ final JsonValue ambient = material.get("ambient")[ FD ]
Line_22 $$ final JsonValue specular = material.get("specular")-->Line_24 $$ jsonMaterial.specular = parseColor(specular)[ FD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_43 $$ jsonTexture.uvScaling = readVector2(texture.get("uvScaling"), 1f, 1f)[ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_25 $$ final JsonValue reflection = material.get("reflection")[ FD ]
Line_9 $$ String id = material.getString("id", null)-->Line_10 $$ if (id == null)[ FD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_14 $$ if (diffuse != null)[ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_26 $$ if (reflection != null)[ CD ]
Line_8 $$ ModelMaterial jsonMaterial = new ModelMaterial()-->Line_53 $$ model.materials.add(jsonMaterial)[ FD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_10 $$ if (id == null)[ CD ]
Line_3 $$ JsonValue materials = json.get("materials")-->Line_4 $$ if (materials == null) [ FD ]
Line_33 $$ ModelTexture jsonTexture = new ModelTexture()-->Line_50 $$ jsonMaterial.textures.add(jsonTexture)[ FD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_44 $$ String textureType = texture.getString("type", null)[ FD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_48 $$ if (jsonMaterial.textures == null)[ CD ]
Line_14 $$ if (diffuse != null)-->Line_15 $$ jsonMaterial.diffuse = parseColor(diffuse)[ CD ]
Line_13 $$ final JsonValue diffuse = material.get("diffuse")-->Line_14 $$ if (diffuse != null)[ FD ]
Line_26 $$ if (reflection != null)-->Line_27 $$ jsonMaterial.reflection = parseColor(reflection)[ CD ]
Line_2 $$ private void parseMaterials(ModelData model, JsonValue json, String materialDir) -->Line_3 $$ JsonValue materials = json.get("materials")[ CD ]
Line_19 $$ final JsonValue emissive = material.get("emissive")-->Line_21 $$ jsonMaterial.emissive = parseColor(emissive)[ FD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_44 $$ String textureType = texture.getString("type", null)[ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_12 $$ jsonMaterial.id = id[ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_25 $$ final JsonValue reflection = material.get("reflection")[ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_13 $$ final JsonValue diffuse = material.get("diffuse")[ FD ]
Line_25 $$ final JsonValue reflection = material.get("reflection")-->Line_26 $$ if (reflection != null)[ FD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_53 $$ model.materials.add(jsonMaterial)[ CD ]
Line_44 $$ String textureType = texture.getString("type", null)-->Line_45 $$ if (textureType == null)[ FD ]
Line_9 $$ String id = material.getString("id", null)-->Line_12 $$ jsonMaterial.id = id[ FD ]
Line_16 $$ final JsonValue ambient = material.get("ambient")-->Line_17 $$ if (ambient != null)[ FD ]
Line_16 $$ final JsonValue ambient = material.get("ambient")-->Line_18 $$ jsonMaterial.ambient = parseColor(ambient)[ FD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_31 $$ if (textures != null) [ CD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_45 $$ if (textureType == null)[ CD ]
Line_2 $$ private void parseMaterials(ModelData model, JsonValue json, String materialDir) -->Line_41 $$ jsonTexture.fileName = materialDir + (materialDir.length() == 0 || materialDir.endsWith("/") ? "" : "/") + fileName[ FD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_41 $$ jsonTexture.fileName = materialDir + (materialDir.length() == 0 || materialDir.endsWith("/") ? "" : "/") + fileName[ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_28 $$ jsonMaterial.shininess = material.getFloat("shininess", 0.0f)[ FD ]
Line_17 $$ if (ambient != null)-->Line_18 $$ jsonMaterial.ambient = parseColor(ambient)[ CD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_42 $$ jsonTexture.uvTranslation = readVector2(texture.get("uvTranslation"), 0f, 0f)[ FD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_47 $$ jsonTexture.usage = parseTextureUsage(textureType)[ CD ]
Line_25 $$ final JsonValue reflection = material.get("reflection")-->Line_27 $$ jsonMaterial.reflection = parseColor(reflection)[ FD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_19 $$ final JsonValue emissive = material.get("emissive")[ CD ]
Line_20 $$ if (emissive != null)-->Line_21 $$ jsonMaterial.emissive = parseColor(emissive)[ CD ]
Line_32 $$ for (JsonValue texture = textures.child; texture != null; texture = texture.next) -->Line_39 $$ if (fileName == null)[ CD ]
Line_7 $$ for (JsonValue material = materials.child; material != null; material = material.next) -->Line_20 $$ if (emissive != null)[ CD ]
Line_48 $$ if (jsonMaterial.textures == null)-->Line_49 $$ jsonMaterial.textures = new Array<ModelTexture>()[ CD ]
