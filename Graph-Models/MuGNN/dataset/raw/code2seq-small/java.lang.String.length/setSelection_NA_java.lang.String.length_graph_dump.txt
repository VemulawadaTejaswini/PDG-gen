Line_2 $$ public void setSelection(int selectionStart, int selectionEnd) -->Line_9 $$ if (selectionEnd == selectionStart) [ CD ]
Line_14 $$ int temp = selectionEnd-->Line_16 $$ selectionStart = temp[ FD ]
Line_8 $$ selectionEnd = Math.min(text.length(), selectionEnd)-->Line_15 $$ selectionEnd = selectionStart[ FD ]
Line_8 $$ selectionEnd = Math.min(text.length(), selectionEnd)-->Line_9 $$ if (selectionEnd == selectionStart) [ FD ]
Line_2 $$ public void setSelection(int selectionStart, int selectionEnd) -->Line_8 $$ selectionEnd = Math.min(text.length(), selectionEnd)[ FD ]
Line_7 $$ selectionStart = Math.min(text.length(), selectionStart)-->Line_15 $$ selectionEnd = selectionStart[ FD ]
Line_2 $$ public void setSelection(int selectionStart, int selectionEnd) -->Line_13 $$ if (selectionEnd < selectionStart) [ CD ]
Line_7 $$ selectionStart = Math.min(text.length(), selectionStart)-->Line_19 $$ this.selectionStart = selectionStart[ FD ]
Line_9 $$ if (selectionEnd == selectionStart) -->Line_11 $$ return[ CD ]
Line_2 $$ public void setSelection(int selectionStart, int selectionEnd) -->Line_13 $$ if (selectionEnd < selectionStart) [ FD ]
Line_2 $$ public void setSelection(int selectionStart, int selectionEnd) -->Line_16 $$ selectionStart = temp[ FD ]
Line_2 $$ public void setSelection(int selectionStart, int selectionEnd) -->Line_8 $$ selectionEnd = Math.min(text.length(), selectionEnd)[ CD ]
Line_2 $$ public void setSelection(int selectionStart, int selectionEnd) -->Line_7 $$ selectionStart = Math.min(text.length(), selectionStart)[ CD ]
Line_2 $$ public void setSelection(int selectionStart, int selectionEnd) -->Line_7 $$ selectionStart = Math.min(text.length(), selectionStart)[ FD ]
Line_13 $$ if (selectionEnd < selectionStart) -->Line_16 $$ selectionStart = temp[ CD ]
Line_2 $$ public void setSelection(int selectionStart, int selectionEnd) -->Line_9 $$ if (selectionEnd == selectionStart) [ FD ]
Line_2 $$ public void setSelection(int selectionStart, int selectionEnd) -->Line_3 $$ if (selectionStart < 0)[ CD ]
Line_8 $$ selectionEnd = Math.min(text.length(), selectionEnd)-->Line_13 $$ if (selectionEnd < selectionStart) [ FD ]
Line_16 $$ selectionStart = temp-->Line_19 $$ this.selectionStart = selectionStart[ FD ]
Line_2 $$ public void setSelection(int selectionStart, int selectionEnd) -->Line_5 $$ if (selectionEnd < 0)[ CD ]
Line_2 $$ public void setSelection(int selectionStart, int selectionEnd) -->Line_19 $$ this.selectionStart = selectionStart[ CD ]
Line_9 $$ if (selectionEnd == selectionStart) -->Line_10 $$ clearSelection()[ CD ]
Line_2 $$ public void setSelection(int selectionStart, int selectionEnd) -->Line_19 $$ this.selectionStart = selectionStart[ FD ]
Line_7 $$ selectionStart = Math.min(text.length(), selectionStart)-->Line_16 $$ selectionStart = temp[ FD ]
Line_7 $$ selectionStart = Math.min(text.length(), selectionStart)-->Line_9 $$ if (selectionEnd == selectionStart) [ FD ]
Line_13 $$ if (selectionEnd < selectionStart) -->Line_14 $$ int temp = selectionEnd[ CD ]
Line_7 $$ selectionStart = Math.min(text.length(), selectionStart)-->Line_13 $$ if (selectionEnd < selectionStart) [ FD ]
Line_2 $$ public void setSelection(int selectionStart, int selectionEnd) -->Line_5 $$ if (selectionEnd < 0)[ FD ]
Line_2 $$ public void setSelection(int selectionStart, int selectionEnd) -->Line_3 $$ if (selectionStart < 0)[ FD ]
Line_2 $$ public void setSelection(int selectionStart, int selectionEnd) -->Line_15 $$ selectionEnd = selectionStart[ FD ]
Line_13 $$ if (selectionEnd < selectionStart) -->Line_15 $$ selectionEnd = selectionStart[ CD ]
