Line_2 $$ private void checkCanApply(FileTemplateTab list) throws ConfigurationException -->Line_3 $$ final FileTemplate[] templates = myCurrentTab.getTemplates()[ CD ]
Line_5 $$ FileTemplate itemWithError = null-->Line_33 $$ list.selectTemplate(itemWithError)[ FD ]
Line_34 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_36 $$ if (_errorInName) [ CD ]
Line_6 $$ boolean errorInName = true-->Line_24 $$ errorInName = false[ FD ]
Line_12 $$ itemWithError = template-->Line_22 $$ itemWithError = template[ FD ]
Line_7 $$ String errorString = null-->Line_23 $$ errorString = IdeBundle.message("error.please.specify.template.extension")[ FD ]
Line_5 $$ FileTemplate itemWithError = null-->Line_12 $$ itemWithError = template[ FD ]
Line_12 $$ itemWithError = template-->Line_29 $$ if (itemWithError != null) [ FD ]
Line_5 $$ FileTemplate itemWithError = null-->Line_17 $$ itemWithError = template[ FD ]
Line_17 $$ itemWithError = template-->Line_29 $$ if (itemWithError != null) [ FD ]
Line_2 $$ private void checkCanApply(FileTemplateTab list) throws ConfigurationException -->Line_7 $$ String errorString = null[ CD ]
Line_5 $$ FileTemplate itemWithError = null-->Line_32 $$ selectTemplate(itemWithError)[ FD ]
Line_11 $$ if (currName.length() == 0) -->Line_13 $$ errorString = IdeBundle.message("error.please.specify.template.name")[ CD ]
Line_5 $$ FileTemplate itemWithError = null-->Line_29 $$ if (itemWithError != null) [ FD ]
Line_2 $$ private void checkCanApply(FileTemplateTab list) throws ConfigurationException -->Line_4 $$ final List<String> allNames = new ArrayList<String>()[ CD ]
Line_4 $$ final List<String> allNames = new ArrayList<String>()-->Line_27 $$ allNames.add(currName)[ FD ]
Line_22 $$ itemWithError = template-->Line_29 $$ if (itemWithError != null) [ FD ]
Line_29 $$ if (itemWithError != null) -->Line_32 $$ selectTemplate(itemWithError)[ CD ]
Line_12 $$ itemWithError = template-->Line_17 $$ itemWithError = template[ FD ]
Line_29 $$ if (itemWithError != null) -->Line_31 $$ myTabbedPane.setSelectedIndex(Arrays.asList(myTabs).indexOf(list))[ CD ]
Line_10 $$ final String currExt = template.getExtension()-->Line_21 $$ if (currExt.length() == 0) [ FD ]
Line_2 $$ private void checkCanApply(FileTemplateTab list) throws ConfigurationException -->Line_6 $$ boolean errorInName = true[ CD ]
Line_9 $$ final String currName = template.getName()-->Line_27 $$ allNames.add(currName)[ FD ]
Line_17 $$ itemWithError = template-->Line_32 $$ selectTemplate(itemWithError)[ FD ]
Line_36 $$ if (_errorInName) -->Line_39 $$ myEditor.focusToExtensionField()[ CD ]
Line_16 $$ if (allNames.contains(currName)) -->Line_18 $$ errorString = "Template with name \'" + currName + "\' already exists. Please specify a different template name"[ CD ]
Line_17 $$ itemWithError = template-->Line_33 $$ list.selectTemplate(itemWithError)[ FD ]
Line_29 $$ if (itemWithError != null) -->Line_34 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ CD ]
Line_2 $$ private void checkCanApply(FileTemplateTab list) throws ConfigurationException -->Line_29 $$ if (itemWithError != null) [ CD ]
Line_11 $$ if (currName.length() == 0) -->Line_12 $$ itemWithError = template[ CD ]
Line_18 $$ errorString = "Template with name \'" + currName + "\' already exists. Please specify a different template name"-->Line_23 $$ errorString = IdeBundle.message("error.please.specify.template.extension")[ FD ]
Line_22 $$ itemWithError = template-->Line_33 $$ list.selectTemplate(itemWithError)[ FD ]
Line_12 $$ itemWithError = template-->Line_32 $$ selectTemplate(itemWithError)[ FD ]
Line_9 $$ final String currName = template.getName()-->Line_11 $$ if (currName.length() == 0) [ FD ]
Line_8 $$ for (FileTemplate template : templates) -->Line_22 $$ itemWithError = template[ FD ]
Line_29 $$ if (itemWithError != null) -->Line_30 $$ final boolean _errorInName = errorInName[ CD ]
Line_21 $$ if (currExt.length() == 0) -->Line_22 $$ itemWithError = template[ CD ]
Line_8 $$ for (FileTemplate template : templates) -->Line_10 $$ final String currExt = template.getExtension()[ FD ]
Line_13 $$ errorString = IdeBundle.message("error.please.specify.template.name")-->Line_23 $$ errorString = IdeBundle.message("error.please.specify.template.extension")[ FD ]
Line_21 $$ if (currExt.length() == 0) -->Line_23 $$ errorString = IdeBundle.message("error.please.specify.template.extension")[ CD ]
Line_7 $$ String errorString = null-->Line_13 $$ errorString = IdeBundle.message("error.please.specify.template.name")[ FD ]
Line_7 $$ String errorString = null-->Line_18 $$ errorString = "Template with name \'" + currName + "\' already exists. Please specify a different template name"[ FD ]
Line_5 $$ FileTemplate itemWithError = null-->Line_22 $$ itemWithError = template[ FD ]
Line_2 $$ private void checkCanApply(FileTemplateTab list) throws ConfigurationException -->Line_31 $$ myTabbedPane.setSelectedIndex(Arrays.asList(myTabs).indexOf(list))[ FD ]
Line_8 $$ for (FileTemplate template : templates) -->Line_17 $$ itemWithError = template[ FD ]
Line_16 $$ if (allNames.contains(currName)) -->Line_17 $$ itemWithError = template[ CD ]
Line_22 $$ itemWithError = template-->Line_32 $$ selectTemplate(itemWithError)[ FD ]
Line_17 $$ itemWithError = template-->Line_22 $$ itemWithError = template[ FD ]
Line_12 $$ itemWithError = template-->Line_33 $$ list.selectTemplate(itemWithError)[ FD ]
Line_29 $$ if (itemWithError != null) -->Line_33 $$ list.selectTemplate(itemWithError)[ CD ]
Line_2 $$ private void checkCanApply(FileTemplateTab list) throws ConfigurationException -->Line_33 $$ list.selectTemplate(itemWithError)[ FD ]
Line_2 $$ private void checkCanApply(FileTemplateTab list) throws ConfigurationException -->Line_5 $$ FileTemplate itemWithError = null[ CD ]
Line_21 $$ if (currExt.length() == 0) -->Line_24 $$ errorInName = false[ CD ]
Line_8 $$ for (FileTemplate template : templates) -->Line_12 $$ itemWithError = template[ FD ]
Line_8 $$ for (FileTemplate template : templates) -->Line_9 $$ final String currName = template.getName()[ FD ]
Line_9 $$ final String currName = template.getName()-->Line_16 $$ if (allNames.contains(currName)) [ FD ]
Line_36 $$ if (_errorInName) -->Line_37 $$ myEditor.focusToNameField()[ CD ]
Line_13 $$ errorString = IdeBundle.message("error.please.specify.template.name")-->Line_18 $$ errorString = "Template with name \'" + currName + "\' already exists. Please specify a different template name"[ FD ]
Line_4 $$ final List<String> allNames = new ArrayList<String>()-->Line_16 $$ if (allNames.contains(currName)) [ FD ]
