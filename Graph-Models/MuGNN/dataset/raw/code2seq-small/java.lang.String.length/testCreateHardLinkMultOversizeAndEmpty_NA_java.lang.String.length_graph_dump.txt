Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_33 $$ maxLength = overhead + (int) (0.5 * (float) (1 + name1.length()))[ CD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_16 $$ assertFalse(x2.exists())[ CD ]
Line_19 $$ String[] emptyList = -->Line_21 $$ int overhead = getLinkMultArgLength(src, emptyList, tgt_mult)[ FD ]
Line_25 $$ String[] tgt_multNames = tgt_mult.list()-->Line_27 $$ Arrays.sort(tgt_multNames)[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_25 $$ String[] tgt_multNames = tgt_mult.list()[ CD ]
Line_6 $$ File x1_long = new File(src, name1)-->Line_9 $$ x1.renameTo(x1_long)[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_15 $$ assertFalse(x1.exists())[ CD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_23 $$ callCount = createHardLinkMult(src, fileNames, tgt_mult, maxLength)[ CD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_4 $$ String name2 = "x22222222"[ CD ]
Line_23 $$ callCount = createHardLinkMult(src, fileNames, tgt_mult, maxLength)-->Line_24 $$ assertEquals(2, callCount)[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_3 $$ String name1 = "x11111111"[ CD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_37 $$ Arrays.sort(fileNames)[ CD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_39 $$ assertArrayEquals(fileNames, tgt_multNames)[ CD ]
Line_20 $$ String[] fileNames = src.list()-->Line_34 $$ callCount = createHardLinkMult(src, fileNames, tgt_mult, maxLength)[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_12 $$ assertTrue(x1_long.exists())[ CD ]
Line_36 $$ tgt_multNames = tgt_mult.list()-->Line_39 $$ assertArrayEquals(fileNames, tgt_multNames)[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_27 $$ Arrays.sort(tgt_multNames)[ CD ]
Line_34 $$ callCount = createHardLinkMult(src, fileNames, tgt_mult, maxLength)-->Line_35 $$ assertEquals(3, callCount)[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_10 $$ x2.renameTo(x2_long)[ CD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_22 $$ int maxLength = overhead + (int) (2.5 * (float) (1 + name1.length()))[ CD ]
Line_25 $$ String[] tgt_multNames = tgt_mult.list()-->Line_28 $$ assertArrayEquals(fileNames, tgt_multNames)[ FD ]
Line_3 $$ String name1 = "x11111111"-->Line_33 $$ maxLength = overhead + (int) (0.5 * (float) (1 + name1.length()))[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_36 $$ tgt_multNames = tgt_mult.list()[ CD ]
Line_18 $$ int callCount-->Line_34 $$ callCount = createHardLinkMult(src, fileNames, tgt_mult, maxLength)[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_18 $$ int callCount[ CD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_19 $$ String[] emptyList = [ CD ]
Line_7 $$ File x2_long = new File(src, name2)-->Line_13 $$ assertTrue(x2_long.exists())[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_38 $$ Arrays.sort(tgt_multNames)[ CD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_6 $$ File x1_long = new File(src, name1)[ CD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_13 $$ assertTrue(x2_long.exists())[ CD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_28 $$ assertArrayEquals(fileNames, tgt_multNames)[ CD ]
Line_6 $$ File x1_long = new File(src, name1)-->Line_12 $$ assertTrue(x1_long.exists())[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_24 $$ assertEquals(2, callCount)[ CD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_30 $$ assertFalse(tgt_mult.exists())[ CD ]
Line_8 $$ File x3_long = new File(src, name3)-->Line_11 $$ x3.renameTo(x3_long)[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_11 $$ x3.renameTo(x3_long)[ CD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_9 $$ x1.renameTo(x1_long)[ CD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_14 $$ assertTrue(x3_long.exists())[ CD ]
Line_22 $$ int maxLength = overhead + (int) (2.5 * (float) (1 + name1.length()))-->Line_23 $$ callCount = createHardLinkMult(src, fileNames, tgt_mult, maxLength)[ FD ]
Line_20 $$ String[] fileNames = src.list()-->Line_28 $$ assertArrayEquals(fileNames, tgt_multNames)[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_21 $$ int overhead = getLinkMultArgLength(src, emptyList, tgt_mult)[ CD ]
Line_20 $$ String[] fileNames = src.list()-->Line_26 $$ Arrays.sort(fileNames)[ FD ]
Line_25 $$ String[] tgt_multNames = tgt_mult.list()-->Line_39 $$ assertArrayEquals(fileNames, tgt_multNames)[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_35 $$ assertEquals(3, callCount)[ CD ]
Line_36 $$ tgt_multNames = tgt_mult.list()-->Line_38 $$ Arrays.sort(tgt_multNames)[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_34 $$ callCount = createHardLinkMult(src, fileNames, tgt_mult, maxLength)[ CD ]
Line_18 $$ int callCount-->Line_35 $$ assertEquals(3, callCount)[ FD ]
Line_8 $$ File x3_long = new File(src, name3)-->Line_14 $$ assertTrue(x3_long.exists())[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_20 $$ String[] fileNames = src.list()[ CD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_32 $$ assertTrue(tgt_mult.exists() && tgt_mult.list().length == 0)[ CD ]
Line_22 $$ int maxLength = overhead + (int) (2.5 * (float) (1 + name1.length()))-->Line_33 $$ maxLength = overhead + (int) (0.5 * (float) (1 + name1.length()))[ FD ]
Line_23 $$ callCount = createHardLinkMult(src, fileNames, tgt_mult, maxLength)-->Line_34 $$ callCount = createHardLinkMult(src, fileNames, tgt_mult, maxLength)[ FD ]
Line_20 $$ String[] fileNames = src.list()-->Line_37 $$ Arrays.sort(fileNames)[ FD ]
Line_33 $$ maxLength = overhead + (int) (0.5 * (float) (1 + name1.length()))-->Line_34 $$ callCount = createHardLinkMult(src, fileNames, tgt_mult, maxLength)[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_17 $$ assertFalse(x3.exists())[ CD ]
Line_20 $$ String[] fileNames = src.list()-->Line_23 $$ callCount = createHardLinkMult(src, fileNames, tgt_mult, maxLength)[ FD ]
Line_21 $$ int overhead = getLinkMultArgLength(src, emptyList, tgt_mult)-->Line_33 $$ maxLength = overhead + (int) (0.5 * (float) (1 + name1.length()))[ FD ]
Line_23 $$ callCount = createHardLinkMult(src, fileNames, tgt_mult, maxLength)-->Line_35 $$ assertEquals(3, callCount)[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_5 $$ String name3 = "x33333333"[ CD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_29 $$ FileUtil.fullyDelete(tgt_mult)[ CD ]
Line_25 $$ String[] tgt_multNames = tgt_mult.list()-->Line_38 $$ Arrays.sort(tgt_multNames)[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_26 $$ Arrays.sort(fileNames)[ CD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_31 $$ tgt_mult.mkdirs()[ CD ]
Line_18 $$ int callCount-->Line_24 $$ assertEquals(2, callCount)[ FD ]
Line_22 $$ int maxLength = overhead + (int) (2.5 * (float) (1 + name1.length()))-->Line_34 $$ callCount = createHardLinkMult(src, fileNames, tgt_mult, maxLength)[ FD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_7 $$ File x2_long = new File(src, name2)[ CD ]
Line_2 $$ public void testCreateHardLinkMultOversizeAndEmpty() throws IOException -->Line_8 $$ File x3_long = new File(src, name3)[ CD ]
Line_7 $$ File x2_long = new File(src, name2)-->Line_10 $$ x2.renameTo(x2_long)[ FD ]
Line_20 $$ String[] fileNames = src.list()-->Line_39 $$ assertArrayEquals(fileNames, tgt_multNames)[ FD ]
Line_25 $$ String[] tgt_multNames = tgt_mult.list()-->Line_36 $$ tgt_multNames = tgt_mult.list()[ FD ]
Line_18 $$ int callCount-->Line_23 $$ callCount = createHardLinkMult(src, fileNames, tgt_mult, maxLength)[ FD ]
Line_3 $$ String name1 = "x11111111"-->Line_22 $$ int maxLength = overhead + (int) (2.5 * (float) (1 + name1.length()))[ FD ]
