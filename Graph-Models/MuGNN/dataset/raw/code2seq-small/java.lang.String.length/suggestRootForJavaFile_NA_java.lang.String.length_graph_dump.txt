Line_11 $$ while (index > 0) -->Line_19 $$ root = root.getParent()[ CD ]
Line_23 $$ index = index1-->Line_11 $$ while (index > 0) [ FD ]
Line_11 $$ while (index > 0) -->Line_23 $$ index = index1[ CD ]
Line_10 $$ int index = packageName.length()-->Line_13 $$ String token = packageName.substring(index1 + 1, index)[ FD ]
Line_10 $$ int index = packageName.length()-->Line_11 $$ while (index > 0) [ FD ]
Line_11 $$ while (index > 0) -->Line_14 $$ String dirName = root.getName()[ CD ]
Line_7 $$ String packageName = JavaSourceRootDetectionUtil.getPackageName(chars)-->Line_8 $$ if (packageName != null) [ FD ]
Line_6 $$ CharSequence chars = LoadTextUtil.loadText(javaFile)-->Line_7 $$ String packageName = JavaSourceRootDetectionUtil.getPackageName(chars)[ FD ]
Line_11 $$ while (index > 0) -->Line_12 $$ int index1 = packageName.lastIndexOf('.', index - 1)[ CD ]
Line_19 $$ root = root.getParent()-->Line_14 $$ String dirName = root.getName()[ FD ]
Line_8 $$ if (packageName != null) -->Line_10 $$ int index = packageName.length()[ CD ]
Line_14 $$ String dirName = root.getName()-->Line_15 $$ final boolean equalsToToken = SystemInfo.isFileSystemCaseSensitive ? dirName.equals(token) : dirName.equalsIgnoreCase(token)[ FD ]
Line_11 $$ while (index > 0) -->Line_15 $$ final boolean equalsToToken = SystemInfo.isFileSystemCaseSensitive ? dirName.equals(token) : dirName.equalsIgnoreCase(token)[ CD ]
Line_20 $$ if (root == null) -->Line_21 $$ return null[ CD ]
Line_7 $$ String packageName = JavaSourceRootDetectionUtil.getPackageName(chars)-->Line_10 $$ int index = packageName.length()[ FD ]
Line_8 $$ if (packageName != null) -->Line_9 $$ VirtualFile root = javaFile.getParent()[ CD ]
Line_12 $$ int index1 = packageName.lastIndexOf('.', index - 1)-->Line_23 $$ index = index1[ FD ]
Line_8 $$ if (packageName != null) -->Line_25 $$ return root[ CD ]
Line_23 $$ index = index1-->Line_13 $$ String token = packageName.substring(index1 + 1, index)[ FD ]
Line_9 $$ VirtualFile root = javaFile.getParent()-->Line_19 $$ root = root.getParent()[ FD ]
Line_9 $$ VirtualFile root = javaFile.getParent()-->Line_20 $$ if (root == null) [ FD ]
Line_19 $$ root = root.getParent()-->Line_20 $$ if (root == null) [ FD ]
Line_11 $$ while (index > 0) -->Line_13 $$ String token = packageName.substring(index1 + 1, index)[ CD ]
Line_9 $$ VirtualFile root = javaFile.getParent()-->Line_14 $$ String dirName = root.getName()[ FD ]
Line_15 $$ final boolean equalsToToken = SystemInfo.isFileSystemCaseSensitive ? dirName.equals(token) : dirName.equalsIgnoreCase(token)-->Line_16 $$ if (!equalsToToken) [ FD ]
Line_7 $$ String packageName = JavaSourceRootDetectionUtil.getPackageName(chars)-->Line_13 $$ String token = packageName.substring(index1 + 1, index)[ FD ]
Line_16 $$ if (!equalsToToken) -->Line_17 $$ return null[ CD ]
Line_7 $$ String packageName = JavaSourceRootDetectionUtil.getPackageName(chars)-->Line_12 $$ int index1 = packageName.lastIndexOf('.', index - 1)[ FD ]
Line_13 $$ String token = packageName.substring(index1 + 1, index)-->Line_15 $$ final boolean equalsToToken = SystemInfo.isFileSystemCaseSensitive ? dirName.equals(token) : dirName.equalsIgnoreCase(token)[ FD ]
Line_10 $$ int index = packageName.length()-->Line_23 $$ index = index1[ FD ]
Line_8 $$ if (packageName != null) -->Line_11 $$ while (index > 0) [ CD ]
Line_4 $$ if (javaFile.isDirectory())-->Line_5 $$ return null[ CD ]
Line_11 $$ while (index > 0) -->Line_16 $$ if (!equalsToToken) [ CD ]
Line_11 $$ while (index > 0) -->Line_20 $$ if (root == null) [ CD ]
