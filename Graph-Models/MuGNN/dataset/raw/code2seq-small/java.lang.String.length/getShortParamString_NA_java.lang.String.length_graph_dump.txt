Line_9 $$ if (constraint.isPartOfSearchResults()) -->Line_10 $$ append(buf, SSRBundle.message("target.tooltip.message"))[ CD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_21 $$ if (constraint.isWriteAccess()) [ FD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_22 $$ append(buf, SSRBundle.message("value.written.tooltip.message", constraint.isInvertWriteAccess() ? SSRBundle.message("not.tooltip.message") : ""))[ FD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_27 $$ if (constraint.getNameOfFormalArgType() != null && constraint.getNameOfFormalArgType().length() > 0) [ FD ]
Line_31 $$ final String text = StringUtil.unquoteString(constraint.getWithinConstraint())-->Line_32 $$ append(buf, constraint.isInvertWithinConstraint() ? SSRBundle.message("not.within.constraints.tooltip.message", text) : SSRBundle.message("within.constraints.tooltip.message", text))[ FD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_37 $$ append(buf, SSRBundle.message("occurs.tooltip.message", constraint.getMinCount()))[ FD ]
Line_36 $$ if (constraint.getMinCount() == constraint.getMaxCount()) -->Line_39 $$ append(buf, SSRBundle.message("min.occurs.tooltip.message", constraint.getMinCount(), constraint.getMaxCount() == Integer.MAX_VALUE ? StringUtil.decapitalize(SSRBundle.message("editvarcontraints.unlimited")) : constraint.getMaxCount()))[ CD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_28 $$ append(buf, SSRBundle.message("expected.type.tooltip.message", constraint.isInvertFormalType() ? SSRBundle.message("not.tooltip.message") : "", constraint.getNameOfFormalArgType(), constraint.isFormalArgTypeWithinHierarchy() ? SSRBundle.message("supertype.tooltip.message") : ""))[ FD ]
Line_2 $$ public static String getShortParamString(NamedScriptableDefinition namedScriptableDefinition) -->Line_3 $$ if (namedScriptableDefinition == null) [ CD ]
Line_7 $$ if (namedScriptableDefinition instanceof MatchVariableConstraint) -->Line_30 $$ if (StringUtil.isNotEmpty(constraint.getWithinConstraint())) [ CD ]
Line_30 $$ if (StringUtil.isNotEmpty(constraint.getWithinConstraint())) -->Line_32 $$ append(buf, constraint.isInvertWithinConstraint() ? SSRBundle.message("not.within.constraints.tooltip.message", text) : SSRBundle.message("within.constraints.tooltip.message", text))[ CD ]
Line_2 $$ public static String getShortParamString(NamedScriptableDefinition namedScriptableDefinition) -->Line_44 $$ if (script != null && script.length() > 2) [ CD ]
Line_2 $$ public static String getShortParamString(NamedScriptableDefinition namedScriptableDefinition) -->Line_3 $$ if (namedScriptableDefinition == null) [ FD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_19 $$ append(buf, SSRBundle.message("value.read.tooltip.message", constraint.isInvertReadAccess() ? SSRBundle.message("not.tooltip.message") : ""))[ FD ]
Line_2 $$ public static String getShortParamString(NamedScriptableDefinition namedScriptableDefinition) -->Line_6 $$ final StringBuilder buf = new StringBuilder()[ CD ]
Line_6 $$ final StringBuilder buf = new StringBuilder()-->Line_22 $$ append(buf, SSRBundle.message("value.written.tooltip.message", constraint.isInvertWriteAccess() ? SSRBundle.message("not.tooltip.message") : ""))[ FD ]
Line_7 $$ if (namedScriptableDefinition instanceof MatchVariableConstraint) -->Line_34 $$ final String name = constraint.getName()[ CD ]
Line_24 $$ if (constraint.getNameOfExprType() != null && constraint.getNameOfExprType().length() > 0) -->Line_25 $$ append(buf, SSRBundle.message("exprtype.tooltip.message", constraint.isInvertExprType() ? SSRBundle.message("not.tooltip.message") : "", constraint.getNameOfExprType(), constraint.isExprTypeWithinHierarchy() ? SSRBundle.message("supertype.tooltip.message") : ""))[ CD ]
Line_7 $$ if (namedScriptableDefinition instanceof MatchVariableConstraint) -->Line_12 $$ if (constraint.getRegExp() != null && constraint.getRegExp().length() > 0) [ CD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_32 $$ append(buf, constraint.isInvertWithinConstraint() ? SSRBundle.message("not.within.constraints.tooltip.message", text) : SSRBundle.message("within.constraints.tooltip.message", text))[ FD ]
Line_6 $$ final StringBuilder buf = new StringBuilder()-->Line_46 $$ append(buf, str)[ FD ]
Line_3 $$ if (namedScriptableDefinition == null) -->Line_4 $$ return SSRBundle.message("no.constraints.specified.tooltip.message")[ CD ]
Line_7 $$ if (namedScriptableDefinition instanceof MatchVariableConstraint) -->Line_18 $$ if (constraint.isReadAccess()) [ CD ]
Line_7 $$ if (namedScriptableDefinition instanceof MatchVariableConstraint) -->Line_9 $$ if (constraint.isPartOfSearchResults()) [ CD ]
Line_43 $$ final String script = namedScriptableDefinition.getScriptCodeConstraint()-->Line_45 $$ final String str = SSRBundle.message("script.tooltip.message", StringUtil.stripQuotesAroundValue(script))[ FD ]
Line_27 $$ if (constraint.getNameOfFormalArgType() != null && constraint.getNameOfFormalArgType().length() > 0) -->Line_28 $$ append(buf, SSRBundle.message("expected.type.tooltip.message", constraint.isInvertFormalType() ? SSRBundle.message("not.tooltip.message") : "", constraint.getNameOfFormalArgType(), constraint.isFormalArgTypeWithinHierarchy() ? SSRBundle.message("supertype.tooltip.message") : ""))[ CD ]
Line_6 $$ final StringBuilder buf = new StringBuilder()-->Line_13 $$ append(buf, SSRBundle.message("text.tooltip.message", constraint.isInvertRegExp() ? SSRBundle.message("not.tooltip.message") : "", constraint.getRegExp()))[ FD ]
Line_6 $$ final StringBuilder buf = new StringBuilder()-->Line_10 $$ append(buf, SSRBundle.message("target.tooltip.message"))[ FD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_39 $$ append(buf, SSRBundle.message("min.occurs.tooltip.message", constraint.getMinCount(), constraint.getMaxCount() == Integer.MAX_VALUE ? StringUtil.decapitalize(SSRBundle.message("editvarcontraints.unlimited")) : constraint.getMaxCount()))[ FD ]
Line_2 $$ public static String getShortParamString(NamedScriptableDefinition namedScriptableDefinition) -->Line_43 $$ final String script = namedScriptableDefinition.getScriptCodeConstraint()[ FD ]
Line_45 $$ final String str = SSRBundle.message("script.tooltip.message", StringUtil.stripQuotesAroundValue(script))-->Line_46 $$ append(buf, str)[ FD ]
Line_6 $$ final StringBuilder buf = new StringBuilder()-->Line_19 $$ append(buf, SSRBundle.message("value.read.tooltip.message", constraint.isInvertReadAccess() ? SSRBundle.message("not.tooltip.message") : ""))[ FD ]
Line_6 $$ final StringBuilder buf = new StringBuilder()-->Line_28 $$ append(buf, SSRBundle.message("expected.type.tooltip.message", constraint.isInvertFormalType() ? SSRBundle.message("not.tooltip.message") : "", constraint.getNameOfFormalArgType(), constraint.isFormalArgTypeWithinHierarchy() ? SSRBundle.message("supertype.tooltip.message") : ""))[ FD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_34 $$ final String name = constraint.getName()[ FD ]
Line_2 $$ public static String getShortParamString(NamedScriptableDefinition namedScriptableDefinition) -->Line_51 $$ return buf.toString()[ CD ]
Line_7 $$ if (namedScriptableDefinition instanceof MatchVariableConstraint) -->Line_35 $$ if (!Configuration.CONTEXT_VAR_NAME.equals(name)) [ CD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_31 $$ final String text = StringUtil.unquoteString(constraint.getWithinConstraint())[ FD ]
Line_6 $$ final StringBuilder buf = new StringBuilder()-->Line_39 $$ append(buf, SSRBundle.message("min.occurs.tooltip.message", constraint.getMinCount(), constraint.getMaxCount() == Integer.MAX_VALUE ? StringUtil.decapitalize(SSRBundle.message("editvarcontraints.unlimited")) : constraint.getMaxCount()))[ FD ]
Line_7 $$ if (namedScriptableDefinition instanceof MatchVariableConstraint) -->Line_24 $$ if (constraint.getNameOfExprType() != null && constraint.getNameOfExprType().length() > 0) [ CD ]
Line_48 $$ if (buf.length() == 0) -->Line_49 $$ return SSRBundle.message("no.constraints.specified.tooltip.message")[ CD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_24 $$ if (constraint.getNameOfExprType() != null && constraint.getNameOfExprType().length() > 0) [ FD ]
Line_7 $$ if (namedScriptableDefinition instanceof MatchVariableConstraint) -->Line_15 $$ if (constraint.isWithinHierarchy() || constraint.isStrictlyWithinHierarchy()) [ CD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_15 $$ if (constraint.isWithinHierarchy() || constraint.isStrictlyWithinHierarchy()) [ FD ]
Line_30 $$ if (StringUtil.isNotEmpty(constraint.getWithinConstraint())) -->Line_31 $$ final String text = StringUtil.unquoteString(constraint.getWithinConstraint())[ CD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_36 $$ if (constraint.getMinCount() == constraint.getMaxCount()) [ FD ]
Line_6 $$ final StringBuilder buf = new StringBuilder()-->Line_32 $$ append(buf, constraint.isInvertWithinConstraint() ? SSRBundle.message("not.within.constraints.tooltip.message", text) : SSRBundle.message("within.constraints.tooltip.message", text))[ FD ]
Line_6 $$ final StringBuilder buf = new StringBuilder()-->Line_37 $$ append(buf, SSRBundle.message("occurs.tooltip.message", constraint.getMinCount()))[ FD ]
Line_2 $$ public static String getShortParamString(NamedScriptableDefinition namedScriptableDefinition) -->Line_43 $$ final String script = namedScriptableDefinition.getScriptCodeConstraint()[ CD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_13 $$ append(buf, SSRBundle.message("text.tooltip.message", constraint.isInvertRegExp() ? SSRBundle.message("not.tooltip.message") : "", constraint.getRegExp()))[ FD ]
Line_44 $$ if (script != null && script.length() > 2) -->Line_46 $$ append(buf, str)[ CD ]
Line_21 $$ if (constraint.isWriteAccess()) -->Line_22 $$ append(buf, SSRBundle.message("value.written.tooltip.message", constraint.isInvertWriteAccess() ? SSRBundle.message("not.tooltip.message") : ""))[ CD ]
Line_36 $$ if (constraint.getMinCount() == constraint.getMaxCount()) -->Line_37 $$ append(buf, SSRBundle.message("occurs.tooltip.message", constraint.getMinCount()))[ CD ]
Line_7 $$ if (namedScriptableDefinition instanceof MatchVariableConstraint) -->Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition[ CD ]
Line_6 $$ final StringBuilder buf = new StringBuilder()-->Line_16 $$ append(buf, SSRBundle.message("within.hierarchy.tooltip.message"))[ FD ]
Line_6 $$ final StringBuilder buf = new StringBuilder()-->Line_25 $$ append(buf, SSRBundle.message("exprtype.tooltip.message", constraint.isInvertExprType() ? SSRBundle.message("not.tooltip.message") : "", constraint.getNameOfExprType(), constraint.isExprTypeWithinHierarchy() ? SSRBundle.message("supertype.tooltip.message") : ""))[ FD ]
Line_7 $$ if (namedScriptableDefinition instanceof MatchVariableConstraint) -->Line_27 $$ if (constraint.getNameOfFormalArgType() != null && constraint.getNameOfFormalArgType().length() > 0) [ CD ]
Line_15 $$ if (constraint.isWithinHierarchy() || constraint.isStrictlyWithinHierarchy()) -->Line_16 $$ append(buf, SSRBundle.message("within.hierarchy.tooltip.message"))[ CD ]
Line_6 $$ final StringBuilder buf = new StringBuilder()-->Line_48 $$ if (buf.length() == 0) [ FD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_9 $$ if (constraint.isPartOfSearchResults()) [ FD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_18 $$ if (constraint.isReadAccess()) [ FD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_25 $$ append(buf, SSRBundle.message("exprtype.tooltip.message", constraint.isInvertExprType() ? SSRBundle.message("not.tooltip.message") : "", constraint.getNameOfExprType(), constraint.isExprTypeWithinHierarchy() ? SSRBundle.message("supertype.tooltip.message") : ""))[ FD ]
Line_18 $$ if (constraint.isReadAccess()) -->Line_19 $$ append(buf, SSRBundle.message("value.read.tooltip.message", constraint.isInvertReadAccess() ? SSRBundle.message("not.tooltip.message") : ""))[ CD ]
Line_34 $$ final String name = constraint.getName()-->Line_35 $$ if (!Configuration.CONTEXT_VAR_NAME.equals(name)) [ FD ]
Line_43 $$ final String script = namedScriptableDefinition.getScriptCodeConstraint()-->Line_44 $$ if (script != null && script.length() > 2) [ FD ]
Line_7 $$ if (namedScriptableDefinition instanceof MatchVariableConstraint) -->Line_21 $$ if (constraint.isWriteAccess()) [ CD ]
Line_12 $$ if (constraint.getRegExp() != null && constraint.getRegExp().length() > 0) -->Line_13 $$ append(buf, SSRBundle.message("text.tooltip.message", constraint.isInvertRegExp() ? SSRBundle.message("not.tooltip.message") : "", constraint.getRegExp()))[ CD ]
Line_44 $$ if (script != null && script.length() > 2) -->Line_45 $$ final String str = SSRBundle.message("script.tooltip.message", StringUtil.stripQuotesAroundValue(script))[ CD ]
Line_35 $$ if (!Configuration.CONTEXT_VAR_NAME.equals(name)) -->Line_36 $$ if (constraint.getMinCount() == constraint.getMaxCount()) [ CD ]
Line_2 $$ public static String getShortParamString(NamedScriptableDefinition namedScriptableDefinition) -->Line_7 $$ if (namedScriptableDefinition instanceof MatchVariableConstraint) [ CD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_30 $$ if (StringUtil.isNotEmpty(constraint.getWithinConstraint())) [ FD ]
Line_2 $$ public static String getShortParamString(NamedScriptableDefinition namedScriptableDefinition) -->Line_7 $$ if (namedScriptableDefinition instanceof MatchVariableConstraint) [ FD ]
Line_6 $$ final StringBuilder buf = new StringBuilder()-->Line_51 $$ return buf.toString()[ FD ]
Line_8 $$ final MatchVariableConstraint constraint = (MatchVariableConstraint) namedScriptableDefinition-->Line_12 $$ if (constraint.getRegExp() != null && constraint.getRegExp().length() > 0) [ FD ]
Line_2 $$ public static String getShortParamString(NamedScriptableDefinition namedScriptableDefinition) -->Line_48 $$ if (buf.length() == 0) [ CD ]
