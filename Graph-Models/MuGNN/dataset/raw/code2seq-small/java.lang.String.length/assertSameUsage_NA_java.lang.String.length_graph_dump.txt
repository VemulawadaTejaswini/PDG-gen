Line_2 $$ private void assertSameUsage(String usageText, UsageInfo usageInfo) -->Line_7 $$ assertEquals(usageText, myFixture.getFile().getText().substring(startIndex, startIndex + usageText.length()))[ FD ]
Line_2 $$ private void assertSameUsage(String usageText, UsageInfo usageInfo) -->Line_3 $$ int pos = usageText.indexOf("<caret>")[ CD ]
Line_2 $$ private void assertSameUsage(String usageText, UsageInfo usageInfo) -->Line_3 $$ int pos = usageText.indexOf("<caret>")[ FD ]
Line_2 $$ private void assertSameUsage(String usageText, UsageInfo usageInfo) -->Line_5 $$ usageText = usageText.replace("<caret>", "")[ CD ]
Line_2 $$ private void assertSameUsage(String usageText, UsageInfo usageInfo) -->Line_7 $$ assertEquals(usageText, myFixture.getFile().getText().substring(startIndex, startIndex + usageText.length()))[ CD ]
Line_5 $$ usageText = usageText.replace("<caret>", "")-->Line_7 $$ assertEquals(usageText, myFixture.getFile().getText().substring(startIndex, startIndex + usageText.length()))[ FD ]
Line_6 $$ final int startIndex = usageInfo.getElement().getTextOffset() + usageInfo.getRangeInElement().getStartOffset() - pos-->Line_7 $$ assertEquals(usageText, myFixture.getFile().getText().substring(startIndex, startIndex + usageText.length()))[ FD ]
Line_2 $$ private void assertSameUsage(String usageText, UsageInfo usageInfo) -->Line_6 $$ final int startIndex = usageInfo.getElement().getTextOffset() + usageInfo.getRangeInElement().getStartOffset() - pos[ CD ]
Line_2 $$ private void assertSameUsage(String usageText, UsageInfo usageInfo) -->Line_6 $$ final int startIndex = usageInfo.getElement().getTextOffset() + usageInfo.getRangeInElement().getStartOffset() - pos[ FD ]
Line_2 $$ private void assertSameUsage(String usageText, UsageInfo usageInfo) -->Line_5 $$ usageText = usageText.replace("<caret>", "")[ FD ]
