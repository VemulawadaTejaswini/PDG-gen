Line_6 $$ String warFile = urlFile.substring(0, endIndex)-->Line_7 $$ int startIndex = warFile.indexOf(WAR_URL_PREFIX)[ FD ]
Line_2 $$ public static URL extractArchiveURL(URL jarUrl) throws MalformedURLException -->Line_3 $$ String urlFile = jarUrl.getFile()[ FD ]
Line_2 $$ public static URL extractArchiveURL(URL jarUrl) throws MalformedURLException -->Line_4 $$ int endIndex = urlFile.indexOf(WAR_URL_SEPARATOR)[ CD ]
Line_6 $$ String warFile = urlFile.substring(0, endIndex)-->Line_9 $$ return new URL(warFile.substring(startIndex + WAR_URL_PREFIX.length()))[ FD ]
Line_3 $$ String urlFile = jarUrl.getFile()-->Line_4 $$ int endIndex = urlFile.indexOf(WAR_URL_SEPARATOR)[ FD ]
Line_4 $$ int endIndex = urlFile.indexOf(WAR_URL_SEPARATOR)-->Line_5 $$ if (endIndex != -1) [ FD ]
Line_5 $$ if (endIndex != -1) -->Line_6 $$ String warFile = urlFile.substring(0, endIndex)[ CD ]
Line_3 $$ String urlFile = jarUrl.getFile()-->Line_6 $$ String warFile = urlFile.substring(0, endIndex)[ FD ]
Line_5 $$ if (endIndex != -1) -->Line_7 $$ int startIndex = warFile.indexOf(WAR_URL_PREFIX)[ CD ]
Line_7 $$ int startIndex = warFile.indexOf(WAR_URL_PREFIX)-->Line_8 $$ if (startIndex != -1) [ FD ]
Line_8 $$ if (startIndex != -1) -->Line_9 $$ return new URL(warFile.substring(startIndex + WAR_URL_PREFIX.length()))[ CD ]
Line_2 $$ public static URL extractArchiveURL(URL jarUrl) throws MalformedURLException -->Line_12 $$ return extractJarFileURL(jarUrl)[ CD ]
Line_2 $$ public static URL extractArchiveURL(URL jarUrl) throws MalformedURLException -->Line_12 $$ return extractJarFileURL(jarUrl)[ FD ]
Line_5 $$ if (endIndex != -1) -->Line_8 $$ if (startIndex != -1) [ CD ]
Line_2 $$ public static URL extractArchiveURL(URL jarUrl) throws MalformedURLException -->Line_5 $$ if (endIndex != -1) [ CD ]
Line_2 $$ public static URL extractArchiveURL(URL jarUrl) throws MalformedURLException -->Line_3 $$ String urlFile = jarUrl.getFile()[ CD ]
Line_4 $$ int endIndex = urlFile.indexOf(WAR_URL_SEPARATOR)-->Line_6 $$ String warFile = urlFile.substring(0, endIndex)[ FD ]
