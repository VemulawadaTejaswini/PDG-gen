Line_2 $$ private static int getArgumentOffset(int caretOffset, String argument, CharSequence text) -->Line_5 $$ if (argumentOffset - 2 >= 0 && Character.isJavaIdentifierPart(text.charAt(argumentOffset - 2))) [ FD ]
Line_4 $$ if (argumentOffset > 0 && text.charAt(argumentOffset - 1) == ' ') -->Line_5 $$ if (argumentOffset - 2 >= 0 && Character.isJavaIdentifierPart(text.charAt(argumentOffset - 2))) [ CD ]
Line_2 $$ private static int getArgumentOffset(int caretOffset, String argument, CharSequence text) -->Line_9 $$ return argumentOffset[ CD ]
Line_2 $$ private static int getArgumentOffset(int caretOffset, String argument, CharSequence text) -->Line_4 $$ if (argumentOffset > 0 && text.charAt(argumentOffset - 1) == ' ') [ CD ]
Line_2 $$ private static int getArgumentOffset(int caretOffset, String argument, CharSequence text) -->Line_4 $$ if (argumentOffset > 0 && text.charAt(argumentOffset - 1) == ' ') [ FD ]
Line_2 $$ private static int getArgumentOffset(int caretOffset, String argument, CharSequence text) -->Line_3 $$ int argumentOffset = caretOffset - argument.length()[ FD ]
Line_2 $$ private static int getArgumentOffset(int caretOffset, String argument, CharSequence text) -->Line_3 $$ int argumentOffset = caretOffset - argument.length()[ CD ]
Line_5 $$ if (argumentOffset - 2 >= 0 && Character.isJavaIdentifierPart(text.charAt(argumentOffset - 2))) -->Line_6 $$ argumentOffset--[ CD ]
Line_3 $$ int argumentOffset = caretOffset - argument.length()-->Line_6 $$ argumentOffset--[ FD ]
