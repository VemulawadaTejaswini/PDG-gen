Line_2 $$ private String _assembleTagComment(String tagName, String elementName, String comment, String indent, String tagNameIndent) -->Line_10 $$ comment = _wrapText(comment, indent + tagNameIndent)[ FD ]
Line_2 $$ private String _assembleTagComment(String tagName, String elementName, String comment, String indent, String tagNameIndent) -->Line_13 $$ if (Validator.isNotNull(comment)) [ FD ]
Line_5 $$ if (Validator.isNotNull(comment)) -->Line_6 $$ comment = elementName + StringPool.SPACE + comment[ CD ]
Line_5 $$ if (Validator.isNotNull(comment)) -->Line_8 $$ comment = elementName[ CD ]
Line_8 $$ comment = elementName-->Line_14 $$ comment = _wrapText(comment, indent + tagNameIndent)[ FD ]
Line_13 $$ if (Validator.isNotNull(comment)) -->Line_14 $$ comment = _wrapText(comment, indent + tagNameIndent)[ CD ]
Line_2 $$ private String _assembleTagComment(String tagName, String elementName, String comment, String indent, String tagNameIndent) -->Line_8 $$ comment = elementName[ FD ]
Line_11 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())-->Line_13 $$ if (Validator.isNotNull(comment)) [ FD ]
Line_3 $$ String indentAndTagName = indent + StringPool.AT + tagName-->Line_15 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())[ FD ]
Line_4 $$ if (Validator.isNotNull(elementName)) -->Line_11 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())[ CD ]
Line_2 $$ private String _assembleTagComment(String tagName, String elementName, String comment, String indent, String tagNameIndent) -->Line_5 $$ if (Validator.isNotNull(comment)) [ FD ]
Line_10 $$ comment = _wrapText(comment, indent + tagNameIndent)-->Line_11 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())[ FD ]
Line_2 $$ private String _assembleTagComment(String tagName, String elementName, String comment, String indent, String tagNameIndent) -->Line_17 $$ comment = indentAndTagName + "\n"[ FD ]
Line_2 $$ private String _assembleTagComment(String tagName, String elementName, String comment, String indent, String tagNameIndent) -->Line_4 $$ if (Validator.isNotNull(elementName)) [ CD ]
Line_6 $$ comment = elementName + StringPool.SPACE + comment-->Line_13 $$ if (Validator.isNotNull(comment)) [ FD ]
Line_11 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())-->Line_15 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())[ FD ]
Line_6 $$ comment = elementName + StringPool.SPACE + comment-->Line_14 $$ comment = _wrapText(comment, indent + tagNameIndent)[ FD ]
Line_4 $$ if (Validator.isNotNull(elementName)) -->Line_13 $$ if (Validator.isNotNull(comment)) [ CD ]
Line_2 $$ private String _assembleTagComment(String tagName, String elementName, String comment, String indent, String tagNameIndent) -->Line_6 $$ comment = elementName + StringPool.SPACE + comment[ FD ]
Line_2 $$ private String _assembleTagComment(String tagName, String elementName, String comment, String indent, String tagNameIndent) -->Line_3 $$ String indentAndTagName = indent + StringPool.AT + tagName[ CD ]
Line_8 $$ comment = elementName-->Line_13 $$ if (Validator.isNotNull(comment)) [ FD ]
Line_6 $$ comment = elementName + StringPool.SPACE + comment-->Line_17 $$ comment = indentAndTagName + "\n"[ FD ]
Line_15 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())-->Line_17 $$ comment = indentAndTagName + "\n"[ FD ]
Line_6 $$ comment = elementName + StringPool.SPACE + comment-->Line_10 $$ comment = _wrapText(comment, indent + tagNameIndent)[ FD ]
Line_10 $$ comment = _wrapText(comment, indent + tagNameIndent)-->Line_14 $$ comment = _wrapText(comment, indent + tagNameIndent)[ FD ]
Line_2 $$ private String _assembleTagComment(String tagName, String elementName, String comment, String indent, String tagNameIndent) -->Line_11 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())[ FD ]
Line_10 $$ comment = _wrapText(comment, indent + tagNameIndent)-->Line_13 $$ if (Validator.isNotNull(comment)) [ FD ]
Line_8 $$ comment = elementName-->Line_11 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())[ FD ]
Line_6 $$ comment = elementName + StringPool.SPACE + comment-->Line_8 $$ comment = elementName[ FD ]
Line_6 $$ comment = elementName + StringPool.SPACE + comment-->Line_11 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())[ FD ]
Line_14 $$ comment = _wrapText(comment, indent + tagNameIndent)-->Line_17 $$ comment = indentAndTagName + "\n"[ FD ]
Line_13 $$ if (Validator.isNotNull(comment)) -->Line_15 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())[ CD ]
Line_2 $$ private String _assembleTagComment(String tagName, String elementName, String comment, String indent, String tagNameIndent) -->Line_4 $$ if (Validator.isNotNull(elementName)) [ FD ]
Line_2 $$ private String _assembleTagComment(String tagName, String elementName, String comment, String indent, String tagNameIndent) -->Line_15 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())[ FD ]
Line_4 $$ if (Validator.isNotNull(elementName)) -->Line_10 $$ comment = _wrapText(comment, indent + tagNameIndent)[ CD ]
Line_10 $$ comment = _wrapText(comment, indent + tagNameIndent)-->Line_17 $$ comment = indentAndTagName + "\n"[ FD ]
Line_8 $$ comment = elementName-->Line_15 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())[ FD ]
Line_10 $$ comment = _wrapText(comment, indent + tagNameIndent)-->Line_15 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())[ FD ]
Line_6 $$ comment = elementName + StringPool.SPACE + comment-->Line_15 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())[ FD ]
Line_11 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())-->Line_17 $$ comment = indentAndTagName + "\n"[ FD ]
Line_2 $$ private String _assembleTagComment(String tagName, String elementName, String comment, String indent, String tagNameIndent) -->Line_20 $$ return comment[ CD ]
Line_8 $$ comment = elementName-->Line_10 $$ comment = _wrapText(comment, indent + tagNameIndent)[ FD ]
Line_13 $$ if (Validator.isNotNull(comment)) -->Line_17 $$ comment = indentAndTagName + "\n"[ CD ]
Line_8 $$ comment = elementName-->Line_17 $$ comment = indentAndTagName + "\n"[ FD ]
Line_2 $$ private String _assembleTagComment(String tagName, String elementName, String comment, String indent, String tagNameIndent) -->Line_14 $$ comment = _wrapText(comment, indent + tagNameIndent)[ FD ]
Line_4 $$ if (Validator.isNotNull(elementName)) -->Line_5 $$ if (Validator.isNotNull(comment)) [ CD ]
Line_14 $$ comment = _wrapText(comment, indent + tagNameIndent)-->Line_15 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())[ FD ]
Line_3 $$ String indentAndTagName = indent + StringPool.AT + tagName-->Line_11 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())[ FD ]
Line_11 $$ comment = indentAndTagName + comment.substring(indentAndTagName.length())-->Line_14 $$ comment = _wrapText(comment, indent + tagNameIndent)[ FD ]
Line_3 $$ String indentAndTagName = indent + StringPool.AT + tagName-->Line_17 $$ comment = indentAndTagName + "\n"[ FD ]
