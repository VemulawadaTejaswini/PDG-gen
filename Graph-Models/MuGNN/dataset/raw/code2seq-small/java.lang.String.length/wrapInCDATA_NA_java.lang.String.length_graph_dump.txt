Line_8 $$ cur = next-->Line_6 $$ int next = StringUtil.indexOf(str, CDATA_END, cur)[ FD ]
Line_2 $$ public static String wrapInCDATA(@NotNull String str) -->Line_5 $$ while (cur < len) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_7 $$ sb.append(CDATA_START).append(str.subSequence(cur, next = next < 0 ? len : next + 1)).append(CDATA_END)[ FD ]
Line_4 $$ int cur = 0, len = str.length()-->Line_8 $$ cur = next[ FD ]
Line_8 $$ cur = next-->Line_7 $$ sb.append(CDATA_START).append(str.subSequence(cur, next = next < 0 ? len : next + 1)).append(CDATA_END)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ return sb.toString()[ FD ]
Line_5 $$ while (cur < len) -->Line_8 $$ cur = next[ CD ]
Line_2 $$ public static String wrapInCDATA(@NotNull String str) -->Line_4 $$ int cur = 0, len = str.length()[ FD ]
Line_2 $$ public static String wrapInCDATA(@NotNull String str) -->Line_7 $$ sb.append(CDATA_START).append(str.subSequence(cur, next = next < 0 ? len : next + 1)).append(CDATA_END)[ FD ]
Line_2 $$ public static String wrapInCDATA(@NotNull String str) -->Line_10 $$ return sb.toString()[ CD ]
Line_5 $$ while (cur < len) -->Line_6 $$ int next = StringUtil.indexOf(str, CDATA_END, cur)[ CD ]
Line_7 $$ sb.append(CDATA_START).append(str.subSequence(cur, next = next < 0 ? len : next + 1)).append(CDATA_END)-->Line_8 $$ cur = next[ FD ]
Line_2 $$ public static String wrapInCDATA(@NotNull String str) -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_4 $$ int cur = 0, len = str.length()-->Line_5 $$ while (cur < len) [ FD ]
Line_6 $$ int next = StringUtil.indexOf(str, CDATA_END, cur)-->Line_7 $$ sb.append(CDATA_START).append(str.subSequence(cur, next = next < 0 ? len : next + 1)).append(CDATA_END)[ FD ]
Line_5 $$ while (cur < len) -->Line_7 $$ sb.append(CDATA_START).append(str.subSequence(cur, next = next < 0 ? len : next + 1)).append(CDATA_END)[ CD ]
Line_2 $$ public static String wrapInCDATA(@NotNull String str) -->Line_4 $$ int cur = 0, len = str.length()[ CD ]
Line_6 $$ int next = StringUtil.indexOf(str, CDATA_END, cur)-->Line_8 $$ cur = next[ FD ]
Line_2 $$ public static String wrapInCDATA(@NotNull String str) -->Line_6 $$ int next = StringUtil.indexOf(str, CDATA_END, cur)[ FD ]
Line_8 $$ cur = next-->Line_5 $$ while (cur < len) [ FD ]
Line_4 $$ int cur = 0, len = str.length()-->Line_7 $$ sb.append(CDATA_START).append(str.subSequence(cur, next = next < 0 ? len : next + 1)).append(CDATA_END)[ FD ]
Line_4 $$ int cur = 0, len = str.length()-->Line_6 $$ int next = StringUtil.indexOf(str, CDATA_END, cur)[ FD ]
