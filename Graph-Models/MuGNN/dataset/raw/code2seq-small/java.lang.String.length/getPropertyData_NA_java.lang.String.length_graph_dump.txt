Line_2 $$ private static Pair<String, Boolean> getPropertyData(@NotNull String methodName) -->Line_6 $$ part = methodName.substring(3, methodName.length())[ FD ]
Line_3 $$ String part = ""-->Line_13 $$ return part.isEmpty() ? null : Pair.create(Introspector.decapitalize(part), isSetter)[ FD ]
Line_10 $$ part = methodName.substring(3, methodName.length())-->Line_13 $$ return part.isEmpty() ? null : Pair.create(Introspector.decapitalize(part), isSetter)[ FD ]
Line_3 $$ String part = ""-->Line_8 $$ part = methodName.substring(2, methodName.length())[ FD ]
Line_2 $$ private static Pair<String, Boolean> getPropertyData(@NotNull String methodName) -->Line_13 $$ return part.isEmpty() ? null : Pair.create(Introspector.decapitalize(part), isSetter)[ CD ]
Line_9 $$ if (methodName.startsWith("set")) -->Line_10 $$ part = methodName.substring(3, methodName.length())[ CD ]
Line_5 $$ if (methodName.startsWith("get")) -->Line_7 $$ if (methodName.startsWith("is")) [ CD ]
Line_2 $$ private static Pair<String, Boolean> getPropertyData(@NotNull String methodName) -->Line_3 $$ String part = ""[ CD ]
Line_6 $$ part = methodName.substring(3, methodName.length())-->Line_10 $$ part = methodName.substring(3, methodName.length())[ FD ]
Line_3 $$ String part = ""-->Line_6 $$ part = methodName.substring(3, methodName.length())[ FD ]
Line_7 $$ if (methodName.startsWith("is")) -->Line_9 $$ if (methodName.startsWith("set")) [ CD ]
Line_5 $$ if (methodName.startsWith("get")) -->Line_6 $$ part = methodName.substring(3, methodName.length())[ CD ]
Line_11 $$ isSetter = true-->Line_13 $$ return part.isEmpty() ? null : Pair.create(Introspector.decapitalize(part), isSetter)[ FD ]
Line_2 $$ private static Pair<String, Boolean> getPropertyData(@NotNull String methodName) -->Line_10 $$ part = methodName.substring(3, methodName.length())[ FD ]
Line_2 $$ private static Pair<String, Boolean> getPropertyData(@NotNull String methodName) -->Line_5 $$ if (methodName.startsWith("get")) [ FD ]
Line_4 $$ boolean isSetter = false-->Line_13 $$ return part.isEmpty() ? null : Pair.create(Introspector.decapitalize(part), isSetter)[ FD ]
Line_2 $$ private static Pair<String, Boolean> getPropertyData(@NotNull String methodName) -->Line_7 $$ if (methodName.startsWith("is")) [ FD ]
Line_6 $$ part = methodName.substring(3, methodName.length())-->Line_13 $$ return part.isEmpty() ? null : Pair.create(Introspector.decapitalize(part), isSetter)[ FD ]
Line_8 $$ part = methodName.substring(2, methodName.length())-->Line_13 $$ return part.isEmpty() ? null : Pair.create(Introspector.decapitalize(part), isSetter)[ FD ]
Line_7 $$ if (methodName.startsWith("is")) -->Line_8 $$ part = methodName.substring(2, methodName.length())[ CD ]
Line_2 $$ private static Pair<String, Boolean> getPropertyData(@NotNull String methodName) -->Line_4 $$ boolean isSetter = false[ CD ]
Line_2 $$ private static Pair<String, Boolean> getPropertyData(@NotNull String methodName) -->Line_8 $$ part = methodName.substring(2, methodName.length())[ FD ]
Line_3 $$ String part = ""-->Line_10 $$ part = methodName.substring(3, methodName.length())[ FD ]
Line_2 $$ private static Pair<String, Boolean> getPropertyData(@NotNull String methodName) -->Line_5 $$ if (methodName.startsWith("get")) [ CD ]
Line_4 $$ boolean isSetter = false-->Line_11 $$ isSetter = true[ FD ]
Line_9 $$ if (methodName.startsWith("set")) -->Line_11 $$ isSetter = true[ CD ]
Line_8 $$ part = methodName.substring(2, methodName.length())-->Line_10 $$ part = methodName.substring(3, methodName.length())[ FD ]
Line_2 $$ private static Pair<String, Boolean> getPropertyData(@NotNull String methodName) -->Line_9 $$ if (methodName.startsWith("set")) [ FD ]
Line_6 $$ part = methodName.substring(3, methodName.length())-->Line_8 $$ part = methodName.substring(2, methodName.length())[ FD ]
