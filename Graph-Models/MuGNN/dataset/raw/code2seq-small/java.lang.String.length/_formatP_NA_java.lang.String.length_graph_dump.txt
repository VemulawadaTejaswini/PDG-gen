Line_5 $$ char c = s.charAt(i)-->Line_6 $$ if (Character.isUpperCase(c)) [ FD ]
Line_6 $$ if (Character.isUpperCase(c)) -->Line_10 $$ if (Character.isUpperCase(s.charAt(i + 1))) [ CD ]
Line_2 $$ private static String _formatP(String s) -->Line_10 $$ if (Character.isUpperCase(s.charAt(i + 1))) [ FD ]
Line_2 $$ private static String _formatP(String s) -->Line_15 $$ sb.append(Character.toLowerCase(s.charAt(s.length() - 1)))[ FD ]
Line_2 $$ private static String _formatP(String s) -->Line_4 $$ for (int i = 0; i < s.length() - 1; i++) [ CD ]
Line_5 $$ char c = s.charAt(i)-->Line_7 $$ sb.append(Character.toLowerCase(c))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(s.length() + s.length() / 2)-->Line_7 $$ sb.append(Character.toLowerCase(c))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(s.length() + s.length() / 2)-->Line_11 $$ sb.append(CharPool.DASH)[ FD ]
Line_10 $$ if (Character.isUpperCase(s.charAt(i + 1))) -->Line_11 $$ sb.append(CharPool.DASH)[ CD ]
Line_4 $$ for (int i = 0; i < s.length() - 1; i++) -->Line_6 $$ if (Character.isUpperCase(c)) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(s.length() + s.length() / 2)-->Line_16 $$ return sb.toString()[ FD ]
Line_6 $$ if (Character.isUpperCase(c)) -->Line_9 $$ sb.append(c)[ CD ]
Line_2 $$ private static String _formatP(String s) -->Line_15 $$ sb.append(Character.toLowerCase(s.charAt(s.length() - 1)))[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(s.length() + s.length() / 2)-->Line_15 $$ sb.append(Character.toLowerCase(s.charAt(s.length() - 1)))[ FD ]
Line_6 $$ if (Character.isUpperCase(c)) -->Line_7 $$ sb.append(Character.toLowerCase(c))[ CD ]
Line_4 $$ for (int i = 0; i < s.length() - 1; i++) -->Line_5 $$ char c = s.charAt(i)[ FD ]
Line_2 $$ private static String _formatP(String s) -->Line_16 $$ return sb.toString()[ CD ]
Line_2 $$ private static String _formatP(String s) -->Line_4 $$ for (int i = 0; i < s.length() - 1; i++) [ FD ]
Line_2 $$ private static String _formatP(String s) -->Line_3 $$ StringBuilder sb = new StringBuilder(s.length() + s.length() / 2)[ CD ]
Line_5 $$ char c = s.charAt(i)-->Line_9 $$ sb.append(c)[ FD ]
Line_2 $$ private static String _formatP(String s) -->Line_3 $$ StringBuilder sb = new StringBuilder(s.length() + s.length() / 2)[ FD ]
Line_4 $$ for (int i = 0; i < s.length() - 1; i++) -->Line_5 $$ char c = s.charAt(i)[ CD ]
Line_2 $$ private static String _formatP(String s) -->Line_5 $$ char c = s.charAt(i)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(s.length() + s.length() / 2)-->Line_9 $$ sb.append(c)[ FD ]
