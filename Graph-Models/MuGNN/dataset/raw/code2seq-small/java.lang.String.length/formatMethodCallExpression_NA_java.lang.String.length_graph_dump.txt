Line_2 $$ private static String formatMethodCallExpression(PsiMethodCallExpression methodCallExpression) -->Line_3 $$ final PsiExpression[] args = methodCallExpression.getArgumentList().getExpressions()[ CD ]
Line_18 $$ text = text.replace("-->Line_24 $$ return text.length() > FOLD_MAX_LENGTH ? text.substring(0, FOLD_MAX_LENGTH - 3) + "...\"" : text[ FD ]
Line_14 $$ text = null-->Line_20 $$ if (text != null) [ FD ]
Line_7 $$ String text = getI18nMessage((PsiLiteralExpression) args[0])-->Line_24 $$ return text.length() > FOLD_MAX_LENGTH ? text.substring(0, FOLD_MAX_LENGTH - 3) + "...\"" : text[ FD ]
Line_18 $$ text = text.replace("-->Line_21 $$ if (!text.equals(methodCallExpression.getText())) [ FD ]
Line_7 $$ String text = getI18nMessage((PsiLiteralExpression) args[0])-->Line_22 $$ text = text.replace("''", "'")[ FD ]
Line_8 $$ for (int i = 1; i < count + 1; i++) -->Line_18 $$ text = text.replace("[ CD ]
Line_8 $$ for (int i = 1; i < count + 1; i++) -->Line_10 $$ if (value == null) [ CD ]
Line_2 $$ private static String formatMethodCallExpression(PsiMethodCallExpression methodCallExpression) -->Line_21 $$ if (!text.equals(methodCallExpression.getText())) [ FD ]
Line_11 $$ if (args[i] instanceof PsiReferenceExpression) -->Line_12 $$ value = "[ CD ]
Line_7 $$ String text = getI18nMessage((PsiLiteralExpression) args[0])-->Line_20 $$ if (text != null) [ FD ]
Line_10 $$ if (value == null) -->Line_11 $$ if (args[i] instanceof PsiReferenceExpression) [ CD ]
Line_12 $$ value = "-->Line_18 $$ text = text.replace("[ FD ]
Line_12 $$ value = "-->Line_10 $$ if (value == null) [ FD ]
Line_6 $$ if (args.length == 1 + count) -->Line_8 $$ for (int i = 1; i < count + 1; i++) [ CD ]
Line_21 $$ if (!text.equals(methodCallExpression.getText())) -->Line_22 $$ text = text.replace("''", "'")[ CD ]
Line_14 $$ text = null-->Line_21 $$ if (!text.equals(methodCallExpression.getText())) [ FD ]
Line_14 $$ text = null-->Line_22 $$ text = text.replace("''", "'")[ FD ]
Line_7 $$ String text = getI18nMessage((PsiLiteralExpression) args[0])-->Line_18 $$ text = text.replace("[ FD ]
Line_6 $$ if (args.length == 1 + count) -->Line_7 $$ String text = getI18nMessage((PsiLiteralExpression) args[0])[ CD ]
Line_8 $$ for (int i = 1; i < count + 1; i++) -->Line_9 $$ Object value = JavaConstantExpressionEvaluator.computeConstantExpression(args[i], false)[ CD ]
Line_18 $$ text = text.replace("-->Line_22 $$ text = text.replace("''", "'")[ FD ]
Line_6 $$ if (args.length == 1 + count) -->Line_20 $$ if (text != null) [ CD ]
Line_2 $$ private static String formatMethodCallExpression(PsiMethodCallExpression methodCallExpression) -->Line_28 $$ return methodCallExpression.getText()[ CD ]
Line_22 $$ text = text.replace("''", "'")-->Line_24 $$ return text.length() > FOLD_MAX_LENGTH ? text.substring(0, FOLD_MAX_LENGTH - 3) + "...\"" : text[ FD ]
Line_11 $$ if (args[i] instanceof PsiReferenceExpression) -->Line_14 $$ text = null[ CD ]
Line_4 $$ if (args.length > 0 && args[0] instanceof PsiLiteralExpression && args[0].isValid() && isI18nProperty((PsiLiteralExpression) args[0])) -->Line_6 $$ if (args.length == 1 + count) [ CD ]
Line_4 $$ if (args.length > 0 && args[0] instanceof PsiLiteralExpression && args[0].isValid() && isI18nProperty((PsiLiteralExpression) args[0])) -->Line_5 $$ final int count = JavaI18nUtil.getPropertyValueParamsMaxCount(args[0])[ CD ]
Line_2 $$ private static String formatMethodCallExpression(PsiMethodCallExpression methodCallExpression) -->Line_3 $$ final PsiExpression[] args = methodCallExpression.getArgumentList().getExpressions()[ FD ]
Line_9 $$ Object value = JavaConstantExpressionEvaluator.computeConstantExpression(args[i], false)-->Line_10 $$ if (value == null) [ FD ]
Line_7 $$ String text = getI18nMessage((PsiLiteralExpression) args[0])-->Line_14 $$ text = null[ FD ]
Line_2 $$ private static String formatMethodCallExpression(PsiMethodCallExpression methodCallExpression) -->Line_4 $$ if (args.length > 0 && args[0] instanceof PsiLiteralExpression && args[0].isValid() && isI18nProperty((PsiLiteralExpression) args[0])) [ CD ]
Line_18 $$ text = text.replace("-->Line_20 $$ if (text != null) [ FD ]
Line_14 $$ text = null-->Line_18 $$ text = text.replace("[ FD ]
Line_9 $$ Object value = JavaConstantExpressionEvaluator.computeConstantExpression(args[i], false)-->Line_12 $$ value = "[ FD ]
Line_7 $$ String text = getI18nMessage((PsiLiteralExpression) args[0])-->Line_21 $$ if (!text.equals(methodCallExpression.getText())) [ FD ]
Line_20 $$ if (text != null) -->Line_24 $$ return text.length() > FOLD_MAX_LENGTH ? text.substring(0, FOLD_MAX_LENGTH - 3) + "...\"" : text[ CD ]
Line_2 $$ private static String formatMethodCallExpression(PsiMethodCallExpression methodCallExpression) -->Line_28 $$ return methodCallExpression.getText()[ FD ]
Line_9 $$ Object value = JavaConstantExpressionEvaluator.computeConstantExpression(args[i], false)-->Line_18 $$ text = text.replace("[ FD ]
Line_20 $$ if (text != null) -->Line_21 $$ if (!text.equals(methodCallExpression.getText())) [ CD ]
Line_14 $$ text = null-->Line_24 $$ return text.length() > FOLD_MAX_LENGTH ? text.substring(0, FOLD_MAX_LENGTH - 3) + "...\"" : text[ FD ]
