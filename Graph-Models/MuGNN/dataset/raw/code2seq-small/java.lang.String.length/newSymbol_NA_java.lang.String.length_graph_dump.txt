Line_16 $$ String attempt = unique-->Line_18 $$ attempt = unique + "_" + nextId()[ FD ]
Line_5 $$ int index = nameHint.lastIndexOf("_")-->Line_9 $$ nameHint = nameHint.substring(0, index)[ FD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_6 $$ if (index > 0) [ CD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_4 $$ nameHint = nameHint.toLowerCase(ENGLISH)[ FD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_4 $$ nameHint = nameHint.toLowerCase(ENGLISH)[ CD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_7 $$ String tail = nameHint.substring(index + 1)[ FD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_20 $$ Symbol symbol = new Symbol(attempt)[ CD ]
Line_8 $$ if (Ints.tryParse(tail) != null || index == nameHint.length() - 1) -->Line_9 $$ nameHint = nameHint.substring(0, index)[ CD ]
Line_17 $$ while (symbols.containsKey(new Symbol(attempt))) -->Line_18 $$ attempt = unique + "_" + nextId()[ CD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_3 $$ requireNonNull(nameHint, "name is null")[ FD ]
Line_4 $$ nameHint = nameHint.toLowerCase(ENGLISH)-->Line_7 $$ String tail = nameHint.substring(index + 1)[ FD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_8 $$ if (Ints.tryParse(tail) != null || index == nameHint.length() - 1) [ FD ]
Line_6 $$ if (index > 0) -->Line_8 $$ if (Ints.tryParse(tail) != null || index == nameHint.length() - 1) [ CD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_21 $$ symbols.put(symbol, type)[ FD ]
Line_4 $$ nameHint = nameHint.toLowerCase(ENGLISH)-->Line_9 $$ nameHint = nameHint.substring(0, index)[ FD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_5 $$ int index = nameHint.lastIndexOf("_")[ CD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_3 $$ requireNonNull(nameHint, "name is null")[ CD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_16 $$ String attempt = unique[ CD ]
Line_4 $$ nameHint = nameHint.toLowerCase(ENGLISH)-->Line_5 $$ int index = nameHint.lastIndexOf("_")[ FD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_5 $$ int index = nameHint.lastIndexOf("_")[ FD ]
Line_12 $$ String unique = nameHint-->Line_14 $$ unique = unique + "$" + suffix[ FD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_9 $$ nameHint = nameHint.substring(0, index)[ FD ]
Line_4 $$ nameHint = nameHint.toLowerCase(ENGLISH)-->Line_8 $$ if (Ints.tryParse(tail) != null || index == nameHint.length() - 1) [ FD ]
Line_7 $$ String tail = nameHint.substring(index + 1)-->Line_8 $$ if (Ints.tryParse(tail) != null || index == nameHint.length() - 1) [ FD ]
Line_5 $$ int index = nameHint.lastIndexOf("_")-->Line_6 $$ if (index > 0) [ FD ]
Line_13 $$ if (suffix != null) -->Line_14 $$ unique = unique + "$" + suffix[ CD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_17 $$ while (symbols.containsKey(new Symbol(attempt))) [ CD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_22 $$ return symbol[ CD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_21 $$ symbols.put(symbol, type)[ CD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_14 $$ unique = unique + "$" + suffix[ FD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_12 $$ String unique = nameHint[ CD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_13 $$ if (suffix != null) [ CD ]
Line_2 $$ public Symbol newSymbol(String nameHint, Type type, String suffix) -->Line_13 $$ if (suffix != null) [ FD ]
Line_20 $$ Symbol symbol = new Symbol(attempt)-->Line_21 $$ symbols.put(symbol, type)[ FD ]
Line_6 $$ if (index > 0) -->Line_7 $$ String tail = nameHint.substring(index + 1)[ CD ]
