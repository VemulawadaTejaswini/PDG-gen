Line_29 $$ if (startOffset == -1 || endOffset == -1 || endOffset <= startOffset) -->Line_32 $$ return[ CD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_11 $$ final int startOffset[ CD ]
Line_17 $$ if (info.contentType != ConsoleViewContentType.USER_INPUT) -->Line_18 $$ consoleView.print(s, ConsoleViewContentType.USER_INPUT)[ CD ]
Line_10 $$ final Document document = editor.getDocument()-->Line_20 $$ editor.getCaretModel().moveToOffset(document.getTextLength())[ FD ]
Line_28 $$ endOffset = getEndOffset(end, info)-->Line_44 $$ document.replaceString(startOffset, endOffset, s)[ FD ]
Line_9 $$ final Editor editor = consoleView.myEditor-->Line_10 $$ final Document document = editor.getDocument()[ FD ]
Line_11 $$ final int startOffset-->Line_44 $$ document.replaceString(startOffset, endOffset, s)[ FD ]
Line_12 $$ final int endOffset-->Line_28 $$ endOffset = getEndOffset(end, info)[ FD ]
Line_10 $$ final Document document = editor.getDocument()-->Line_44 $$ document.replaceString(startOffset, endOffset, s)[ FD ]
Line_16 $$ final TokenInfo info = consoleView.myTokens.get(consoleView.myTokens.size() - 1)-->Line_27 $$ startOffset = getStartOffset(start, info, deferredOffset)[ FD ]
Line_17 $$ if (info.contentType != ConsoleViewContentType.USER_INPUT) -->Line_20 $$ editor.getCaretModel().moveToOffset(document.getTextLength())[ CD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_28 $$ endOffset = getEndOffset(end, info)[ FD ]
Line_11 $$ final int startOffset-->Line_27 $$ startOffset = getStartOffset(start, info, deferredOffset)[ FD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_9 $$ final Editor editor = consoleView.myEditor[ CD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_49 $$ editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE)[ CD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_48 $$ editor.getCaretModel().moveToOffset(startOffset + s.length())[ FD ]
Line_9 $$ final Editor editor = consoleView.myEditor-->Line_31 $$ editor.getCaretModel().moveToOffset(start)[ FD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_18 $$ consoleView.print(s, ConsoleViewContentType.USER_INPUT)[ FD ]
Line_9 $$ final Editor editor = consoleView.myEditor-->Line_49 $$ editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE)[ FD ]
Line_16 $$ final TokenInfo info = consoleView.myTokens.get(consoleView.myTokens.size() - 1)-->Line_28 $$ endOffset = getEndOffset(end, info)[ FD ]
Line_34 $$ int charCountToReplace = s.length() - endOffset + startOffset-->Line_40 $$ consoleView.myContentSize += charCountToReplace[ FD ]
Line_17 $$ if (info.contentType != ConsoleViewContentType.USER_INPUT) -->Line_21 $$ editor.getSelectionModel().removeSelection()[ CD ]
Line_17 $$ if (info.contentType != ConsoleViewContentType.USER_INPUT) -->Line_22 $$ return[ CD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_34 $$ int charCountToReplace = s.length() - endOffset + startOffset[ FD ]
Line_8 $$ final ConsoleBuffer buffer = consoleView.myBuffer-->Line_24 $$ if (buffer.getUserInputLength() <= 0)[ FD ]
Line_34 $$ int charCountToReplace = s.length() - endOffset + startOffset-->Line_36 $$ info.endOffset += charCountToReplace[ FD ]
Line_3 $$ if (start == end) -->Line_4 $$ insertUserText(s, start)[ CD ]
Line_17 $$ if (info.contentType != ConsoleViewContentType.USER_INPUT) -->Line_19 $$ consoleView.flushDeferredText()[ CD ]
Line_26 $$ final int deferredOffset = myContentSize - buffer.getLength() - buffer.getUserInputLength()-->Line_27 $$ startOffset = getStartOffset(start, info, deferredOffset)[ FD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_10 $$ final Document document = editor.getDocument()[ CD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_8 $$ final ConsoleBuffer buffer = consoleView.myBuffer[ CD ]
Line_27 $$ startOffset = getStartOffset(start, info, deferredOffset)-->Line_44 $$ document.replaceString(startOffset, endOffset, s)[ FD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_48 $$ editor.getCaretModel().moveToOffset(startOffset + s.length())[ CD ]
Line_8 $$ final ConsoleBuffer buffer = consoleView.myBuffer-->Line_26 $$ final int deferredOffset = myContentSize - buffer.getLength() - buffer.getUserInputLength()[ FD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_27 $$ startOffset = getStartOffset(start, info, deferredOffset)[ FD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_44 $$ document.replaceString(startOffset, endOffset, s)[ FD ]
Line_29 $$ if (startOffset == -1 || endOffset == -1 || endOffset <= startOffset) -->Line_30 $$ editor.getSelectionModel().removeSelection()[ CD ]
Line_9 $$ final Editor editor = consoleView.myEditor-->Line_30 $$ editor.getSelectionModel().removeSelection()[ FD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_50 $$ editor.getSelectionModel().removeSelection()[ CD ]
Line_9 $$ final Editor editor = consoleView.myEditor-->Line_21 $$ editor.getSelectionModel().removeSelection()[ FD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_31 $$ editor.getCaretModel().moveToOffset(start)[ FD ]
Line_14 $$ if (consoleView.myTokens.isEmpty())-->Line_15 $$ return[ CD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_12 $$ final int endOffset[ CD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_3 $$ if (start == end) [ CD ]
Line_9 $$ final Editor editor = consoleView.myEditor-->Line_50 $$ editor.getSelectionModel().removeSelection()[ FD ]
Line_9 $$ final Editor editor = consoleView.myEditor-->Line_48 $$ editor.getCaretModel().moveToOffset(startOffset + s.length())[ FD ]
Line_7 $$ final ConsoleViewImpl consoleView = this-->Line_18 $$ consoleView.print(s, ConsoleViewContentType.USER_INPUT)[ FD ]
Line_24 $$ if (buffer.getUserInputLength() <= 0)-->Line_25 $$ return[ CD ]
Line_29 $$ if (startOffset == -1 || endOffset == -1 || endOffset <= startOffset) -->Line_31 $$ editor.getCaretModel().moveToOffset(start)[ CD ]
Line_8 $$ final ConsoleBuffer buffer = consoleView.myBuffer-->Line_35 $$ buffer.replaceUserText(startOffset - deferredOffset, endOffset - deferredOffset, s)[ FD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_7 $$ final ConsoleViewImpl consoleView = this[ CD ]
Line_3 $$ if (start == end) -->Line_5 $$ return[ CD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_4 $$ insertUserText(s, start)[ FD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_35 $$ buffer.replaceUserText(startOffset - deferredOffset, endOffset - deferredOffset, s)[ FD ]
Line_2 $$ private void replaceUserText(final String s, int start, int end) -->Line_3 $$ if (start == end) [ FD ]
Line_7 $$ final ConsoleViewImpl consoleView = this-->Line_19 $$ consoleView.flushDeferredText()[ FD ]
Line_37 $$ if (info.startOffset == info.endOffset) -->Line_38 $$ consoleView.myTokens.remove(consoleView.myTokens.size() - 1)[ CD ]
Line_9 $$ final Editor editor = consoleView.myEditor-->Line_20 $$ editor.getCaretModel().moveToOffset(document.getTextLength())[ FD ]
Line_12 $$ final int endOffset-->Line_44 $$ document.replaceString(startOffset, endOffset, s)[ FD ]
