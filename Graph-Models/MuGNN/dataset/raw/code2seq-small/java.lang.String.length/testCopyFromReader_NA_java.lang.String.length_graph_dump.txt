Line_5 $$ StringWriter out = new StringWriter()-->Line_6 $$ int count = copy(in, out)[ FD ]
Line_2 $$ public void testCopyFromReader() throws IOException -->Line_3 $$ String content = "content"[ CD ]
Line_2 $$ public void testCopyFromReader() throws IOException -->Line_8 $$ assertThat(out.toString(), equalTo(content))[ CD ]
Line_2 $$ public void testCopyFromReader() throws IOException -->Line_5 $$ StringWriter out = new StringWriter()[ CD ]
Line_3 $$ String content = "content"-->Line_7 $$ assertThat(content.length(), equalTo(count))[ FD ]
Line_4 $$ StringReader in = new StringReader(content)-->Line_6 $$ int count = copy(in, out)[ FD ]
Line_2 $$ public void testCopyFromReader() throws IOException -->Line_6 $$ int count = copy(in, out)[ CD ]
Line_6 $$ int count = copy(in, out)-->Line_7 $$ assertThat(content.length(), equalTo(count))[ FD ]
Line_2 $$ public void testCopyFromReader() throws IOException -->Line_4 $$ StringReader in = new StringReader(content)[ CD ]
Line_5 $$ StringWriter out = new StringWriter()-->Line_8 $$ assertThat(out.toString(), equalTo(content))[ FD ]
Line_2 $$ public void testCopyFromReader() throws IOException -->Line_7 $$ assertThat(content.length(), equalTo(count))[ CD ]
Line_3 $$ String content = "content"-->Line_8 $$ assertThat(out.toString(), equalTo(content))[ FD ]
