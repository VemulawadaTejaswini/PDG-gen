Line_2 $$ public void testBlockSelectionAndCollapsedFolding() throws IOException -->Line_16 $$ assertFalse(getFoldRegion(foldStart2).isExpanded())[ CD ]
Line_6 $$ foldStart1 = text.indexOf('-->Line_8 $$ addCollapsedFoldRegion(foldStart1, foldEnd1, "...")[ FD ]
Line_2 $$ public void testBlockSelectionAndCollapsedFolding() throws IOException -->Line_14 $$ getEditor().getSelectionModel().setBlockSelection(blockStart, blockEnd)[ CD ]
Line_12 $$ LogicalPosition blockStart = new LogicalPosition(1, 4)-->Line_14 $$ getEditor().getSelectionModel().setBlockSelection(blockStart, blockEnd)[ FD ]
Line_2 $$ public void testBlockSelectionAndCollapsedFolding() throws IOException -->Line_9 $$ int foldStart2 = text.indexOf('[ CD ]
Line_3 $$ String text = "class Test -->Line_7 $$ int foldEnd1 = text.indexOf('}', foldStart1) + 1[ FD ]
Line_5 $$ int foldStart1 = text.indexOf("Inner1")-->Line_6 $$ foldStart1 = text.indexOf('[ FD ]
Line_7 $$ int foldEnd1 = text.indexOf('}', foldStart1) + 1-->Line_9 $$ int foldStart2 = text.indexOf('[ FD ]
Line_2 $$ public void testBlockSelectionAndCollapsedFolding() throws IOException -->Line_12 $$ LogicalPosition blockStart = new LogicalPosition(1, 4)[ CD ]
Line_3 $$ String text = "class Test -->Line_9 $$ int foldStart2 = text.indexOf('[ FD ]
Line_3 $$ String text = "class Test -->Line_10 $$ int foldEnd2 = text.indexOf('}', foldStart2) + 1[ FD ]
Line_2 $$ public void testBlockSelectionAndCollapsedFolding() throws IOException -->Line_13 $$ LogicalPosition blockEnd = new LogicalPosition(5, 5 + "private".length())[ CD ]
Line_2 $$ public void testBlockSelectionAndCollapsedFolding() throws IOException -->Line_10 $$ int foldEnd2 = text.indexOf('}', foldStart2) + 1[ CD ]
Line_9 $$ int foldStart2 = text.indexOf('-->Line_16 $$ assertFalse(getFoldRegion(foldStart2).isExpanded())[ FD ]
Line_2 $$ public void testBlockSelectionAndCollapsedFolding() throws IOException -->Line_6 $$ foldStart1 = text.indexOf('[ CD ]
Line_3 $$ String text = "class Test -->Line_6 $$ foldStart1 = text.indexOf('[ FD ]
Line_2 $$ public void testBlockSelectionAndCollapsedFolding() throws IOException -->Line_15 $$ assertTrue(getFoldRegion(foldStart1).isExpanded())[ CD ]
Line_5 $$ int foldStart1 = text.indexOf("Inner1")-->Line_8 $$ addCollapsedFoldRegion(foldStart1, foldEnd1, "...")[ FD ]
Line_6 $$ foldStart1 = text.indexOf('-->Line_15 $$ assertTrue(getFoldRegion(foldStart1).isExpanded())[ FD ]
Line_2 $$ public void testBlockSelectionAndCollapsedFolding() throws IOException -->Line_5 $$ int foldStart1 = text.indexOf("Inner1")[ CD ]
Line_6 $$ foldStart1 = text.indexOf('-->Line_7 $$ int foldEnd1 = text.indexOf('}', foldStart1) + 1[ FD ]
Line_5 $$ int foldStart1 = text.indexOf("Inner1")-->Line_7 $$ int foldEnd1 = text.indexOf('}', foldStart1) + 1[ FD ]
Line_9 $$ int foldStart2 = text.indexOf('-->Line_11 $$ addCollapsedFoldRegion(foldStart2, foldEnd2, "...")[ FD ]
Line_3 $$ String text = "class Test -->Line_4 $$ init(text, TestFileType.JAVA)[ FD ]
Line_5 $$ int foldStart1 = text.indexOf("Inner1")-->Line_15 $$ assertTrue(getFoldRegion(foldStart1).isExpanded())[ FD ]
Line_10 $$ int foldEnd2 = text.indexOf('}', foldStart2) + 1-->Line_11 $$ addCollapsedFoldRegion(foldStart2, foldEnd2, "...")[ FD ]
Line_2 $$ public void testBlockSelectionAndCollapsedFolding() throws IOException -->Line_11 $$ addCollapsedFoldRegion(foldStart2, foldEnd2, "...")[ CD ]
Line_7 $$ int foldEnd1 = text.indexOf('}', foldStart1) + 1-->Line_8 $$ addCollapsedFoldRegion(foldStart1, foldEnd1, "...")[ FD ]
Line_3 $$ String text = "class Test -->Line_5 $$ int foldStart1 = text.indexOf("Inner1")[ FD ]
Line_13 $$ LogicalPosition blockEnd = new LogicalPosition(5, 5 + "private".length())-->Line_14 $$ getEditor().getSelectionModel().setBlockSelection(blockStart, blockEnd)[ FD ]
Line_2 $$ public void testBlockSelectionAndCollapsedFolding() throws IOException -->Line_4 $$ init(text, TestFileType.JAVA)[ CD ]
Line_2 $$ public void testBlockSelectionAndCollapsedFolding() throws IOException -->Line_7 $$ int foldEnd1 = text.indexOf('}', foldStart1) + 1[ CD ]
Line_2 $$ public void testBlockSelectionAndCollapsedFolding() throws IOException -->Line_8 $$ addCollapsedFoldRegion(foldStart1, foldEnd1, "...")[ CD ]
Line_9 $$ int foldStart2 = text.indexOf('-->Line_10 $$ int foldEnd2 = text.indexOf('}', foldStart2) + 1[ FD ]
Line_2 $$ public void testBlockSelectionAndCollapsedFolding() throws IOException -->Line_3 $$ String text = "class Test [ CD ]
