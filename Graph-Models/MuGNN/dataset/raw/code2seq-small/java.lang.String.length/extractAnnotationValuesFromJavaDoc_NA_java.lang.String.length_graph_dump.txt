Line_11 $$ if (trimmed.length() > 0) -->Line_12 $$ results.add(trimmed)[ CD ]
Line_6 $$ Matcher matcher = Pattern.compile("\\@testng.test(?:.*)" + parameter + "\\s*=\\s*\"(.*?)\".*").matcher(tag.getText())-->Line_7 $$ if (matcher.matches()) [ FD ]
Line_7 $$ if (matcher.matches()) -->Line_8 $$ String[] groups = matcher.group(1).split("[,\\s]")[ CD ]
Line_10 $$ final String trimmed = group.trim()-->Line_11 $$ if (trimmed.length() > 0) [ FD ]
Line_9 $$ for (String group : groups) -->Line_10 $$ final String trimmed = group.trim()[ FD ]
Line_2 $$ private static Collection<String> extractAnnotationValuesFromJavaDoc(PsiDocTag tag, String parameter) -->Line_5 $$ Collection<String> results = new ArrayList<String>()[ CD ]
Line_2 $$ private static Collection<String> extractAnnotationValuesFromJavaDoc(PsiDocTag tag, String parameter) -->Line_6 $$ Matcher matcher = Pattern.compile("\\@testng.test(?:.*)" + parameter + "\\s*=\\s*\"(.*?)\".*").matcher(tag.getText())[ CD ]
Line_2 $$ private static Collection<String> extractAnnotationValuesFromJavaDoc(PsiDocTag tag, String parameter) -->Line_6 $$ Matcher matcher = Pattern.compile("\\@testng.test(?:.*)" + parameter + "\\s*=\\s*\"(.*?)\".*").matcher(tag.getText())[ FD ]
Line_2 $$ private static Collection<String> extractAnnotationValuesFromJavaDoc(PsiDocTag tag, String parameter) -->Line_7 $$ if (matcher.matches()) [ CD ]
Line_10 $$ final String trimmed = group.trim()-->Line_12 $$ results.add(trimmed)[ FD ]
Line_3 $$ if (tag == null)-->Line_4 $$ return Collections.emptyList()[ CD ]
Line_2 $$ private static Collection<String> extractAnnotationValuesFromJavaDoc(PsiDocTag tag, String parameter) -->Line_3 $$ if (tag == null)[ FD ]
Line_2 $$ private static Collection<String> extractAnnotationValuesFromJavaDoc(PsiDocTag tag, String parameter) -->Line_3 $$ if (tag == null)[ CD ]
Line_2 $$ private static Collection<String> extractAnnotationValuesFromJavaDoc(PsiDocTag tag, String parameter) -->Line_16 $$ return results[ CD ]
Line_5 $$ Collection<String> results = new ArrayList<String>()-->Line_12 $$ results.add(trimmed)[ FD ]
Line_6 $$ Matcher matcher = Pattern.compile("\\@testng.test(?:.*)" + parameter + "\\s*=\\s*\"(.*?)\".*").matcher(tag.getText())-->Line_8 $$ String[] groups = matcher.group(1).split("[,\\s]")[ FD ]
