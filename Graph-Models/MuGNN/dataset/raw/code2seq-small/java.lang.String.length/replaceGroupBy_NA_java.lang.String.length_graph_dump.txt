Line_2 $$ public String replaceGroupBy(String sql, String groupBy) -->Line_6 $$ int x = sql.indexOf(_GROUP_BY_CLAUSE)[ FD ]
Line_2 $$ public String replaceGroupBy(String sql, String groupBy) -->Line_7 $$ if (x != -1) [ CD ]
Line_6 $$ int x = sql.indexOf(_GROUP_BY_CLAUSE)-->Line_7 $$ if (x != -1) [ FD ]
Line_7 $$ if (x != -1) -->Line_16 $$ if (y == -1) [ CD ]
Line_16 $$ if (y == -1) -->Line_23 $$ sb.append(sql.substring(y))[ CD ]
Line_2 $$ public String replaceGroupBy(String sql, String groupBy) -->Line_20 $$ sb.append(sql.substring(0, y))[ FD ]
Line_17 $$ sql = sql.concat(_GROUP_BY_CLAUSE).concat(groupBy)-->Line_24 $$ sql = sb.toString()[ FD ]
Line_8 $$ int y = sql.indexOf(_ORDER_BY_CLAUSE)-->Line_9 $$ if (y == -1) [ FD ]
Line_2 $$ public String replaceGroupBy(String sql, String groupBy) -->Line_3 $$ if (groupBy == null) [ CD ]
Line_10 $$ sql = sql.substring(0, x + _GROUP_BY_CLAUSE.length()).concat(groupBy)-->Line_12 $$ sql = sql.substring(0, x + _GROUP_BY_CLAUSE.length()).concat(groupBy).concat(sql.substring(y))[ FD ]
Line_16 $$ if (y == -1) -->Line_20 $$ sb.append(sql.substring(0, y))[ CD ]
Line_17 $$ sql = sql.concat(_GROUP_BY_CLAUSE).concat(groupBy)-->Line_20 $$ sb.append(sql.substring(0, y))[ FD ]
Line_19 $$ StringBundler sb = new StringBundler(4)-->Line_24 $$ sql = sb.toString()[ FD ]
Line_7 $$ if (x != -1) -->Line_15 $$ int y = sql.indexOf(_ORDER_BY_CLAUSE)[ CD ]
Line_12 $$ sql = sql.substring(0, x + _GROUP_BY_CLAUSE.length()).concat(groupBy).concat(sql.substring(y))-->Line_24 $$ sql = sb.toString()[ FD ]
Line_10 $$ sql = sql.substring(0, x + _GROUP_BY_CLAUSE.length()).concat(groupBy)-->Line_17 $$ sql = sql.concat(_GROUP_BY_CLAUSE).concat(groupBy)[ FD ]
Line_12 $$ sql = sql.substring(0, x + _GROUP_BY_CLAUSE.length()).concat(groupBy).concat(sql.substring(y))-->Line_20 $$ sb.append(sql.substring(0, y))[ FD ]
Line_12 $$ sql = sql.substring(0, x + _GROUP_BY_CLAUSE.length()).concat(groupBy).concat(sql.substring(y))-->Line_17 $$ sql = sql.concat(_GROUP_BY_CLAUSE).concat(groupBy)[ FD ]
Line_16 $$ if (y == -1) -->Line_19 $$ StringBundler sb = new StringBundler(4)[ CD ]
Line_8 $$ int y = sql.indexOf(_ORDER_BY_CLAUSE)-->Line_20 $$ sb.append(sql.substring(0, y))[ FD ]
Line_12 $$ sql = sql.substring(0, x + _GROUP_BY_CLAUSE.length()).concat(groupBy).concat(sql.substring(y))-->Line_23 $$ sb.append(sql.substring(y))[ FD ]
Line_3 $$ if (groupBy == null) -->Line_4 $$ return sql[ CD ]
Line_19 $$ StringBundler sb = new StringBundler(4)-->Line_23 $$ sb.append(sql.substring(y))[ FD ]
Line_9 $$ if (y == -1) -->Line_12 $$ sql = sql.substring(0, x + _GROUP_BY_CLAUSE.length()).concat(groupBy).concat(sql.substring(y))[ CD ]
Line_9 $$ if (y == -1) -->Line_10 $$ sql = sql.substring(0, x + _GROUP_BY_CLAUSE.length()).concat(groupBy)[ CD ]
Line_17 $$ sql = sql.concat(_GROUP_BY_CLAUSE).concat(groupBy)-->Line_23 $$ sb.append(sql.substring(y))[ FD ]
Line_16 $$ if (y == -1) -->Line_21 $$ sb.append(_GROUP_BY_CLAUSE)[ CD ]
Line_7 $$ if (x != -1) -->Line_8 $$ int y = sql.indexOf(_ORDER_BY_CLAUSE)[ CD ]
Line_16 $$ if (y == -1) -->Line_24 $$ sql = sb.toString()[ CD ]
Line_2 $$ public String replaceGroupBy(String sql, String groupBy) -->Line_17 $$ sql = sql.concat(_GROUP_BY_CLAUSE).concat(groupBy)[ FD ]
Line_2 $$ public String replaceGroupBy(String sql, String groupBy) -->Line_22 $$ sb.append(groupBy)[ FD ]
Line_2 $$ public String replaceGroupBy(String sql, String groupBy) -->Line_10 $$ sql = sql.substring(0, x + _GROUP_BY_CLAUSE.length()).concat(groupBy)[ FD ]
Line_10 $$ sql = sql.substring(0, x + _GROUP_BY_CLAUSE.length()).concat(groupBy)-->Line_20 $$ sb.append(sql.substring(0, y))[ FD ]
Line_8 $$ int y = sql.indexOf(_ORDER_BY_CLAUSE)-->Line_23 $$ sb.append(sql.substring(y))[ FD ]
Line_2 $$ public String replaceGroupBy(String sql, String groupBy) -->Line_15 $$ int y = sql.indexOf(_ORDER_BY_CLAUSE)[ FD ]
Line_10 $$ sql = sql.substring(0, x + _GROUP_BY_CLAUSE.length()).concat(groupBy)-->Line_15 $$ int y = sql.indexOf(_ORDER_BY_CLAUSE)[ FD ]
Line_8 $$ int y = sql.indexOf(_ORDER_BY_CLAUSE)-->Line_16 $$ if (y == -1) [ FD ]
Line_2 $$ public String replaceGroupBy(String sql, String groupBy) -->Line_27 $$ return sql[ CD ]
Line_2 $$ public String replaceGroupBy(String sql, String groupBy) -->Line_6 $$ int x = sql.indexOf(_GROUP_BY_CLAUSE)[ CD ]
Line_2 $$ public String replaceGroupBy(String sql, String groupBy) -->Line_3 $$ if (groupBy == null) [ FD ]
Line_2 $$ public String replaceGroupBy(String sql, String groupBy) -->Line_8 $$ int y = sql.indexOf(_ORDER_BY_CLAUSE)[ FD ]
Line_16 $$ if (y == -1) -->Line_17 $$ sql = sql.concat(_GROUP_BY_CLAUSE).concat(groupBy)[ CD ]
Line_19 $$ StringBundler sb = new StringBundler(4)-->Line_21 $$ sb.append(_GROUP_BY_CLAUSE)[ FD ]
Line_10 $$ sql = sql.substring(0, x + _GROUP_BY_CLAUSE.length()).concat(groupBy)-->Line_23 $$ sb.append(sql.substring(y))[ FD ]
Line_7 $$ if (x != -1) -->Line_9 $$ if (y == -1) [ CD ]
Line_2 $$ public String replaceGroupBy(String sql, String groupBy) -->Line_24 $$ sql = sb.toString()[ FD ]
Line_10 $$ sql = sql.substring(0, x + _GROUP_BY_CLAUSE.length()).concat(groupBy)-->Line_24 $$ sql = sb.toString()[ FD ]
Line_2 $$ public String replaceGroupBy(String sql, String groupBy) -->Line_23 $$ sb.append(sql.substring(y))[ FD ]
Line_8 $$ int y = sql.indexOf(_ORDER_BY_CLAUSE)-->Line_12 $$ sql = sql.substring(0, x + _GROUP_BY_CLAUSE.length()).concat(groupBy).concat(sql.substring(y))[ FD ]
Line_12 $$ sql = sql.substring(0, x + _GROUP_BY_CLAUSE.length()).concat(groupBy).concat(sql.substring(y))-->Line_15 $$ int y = sql.indexOf(_ORDER_BY_CLAUSE)[ FD ]
Line_16 $$ if (y == -1) -->Line_22 $$ sb.append(groupBy)[ CD ]
Line_19 $$ StringBundler sb = new StringBundler(4)-->Line_22 $$ sb.append(groupBy)[ FD ]
Line_2 $$ public String replaceGroupBy(String sql, String groupBy) -->Line_12 $$ sql = sql.substring(0, x + _GROUP_BY_CLAUSE.length()).concat(groupBy).concat(sql.substring(y))[ FD ]
Line_19 $$ StringBundler sb = new StringBundler(4)-->Line_20 $$ sb.append(sql.substring(0, y))[ FD ]
