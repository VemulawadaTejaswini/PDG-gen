Line_2 $$ private static String prepareVariableName(@NotNull String attributeName) -->Line_4 $$ StringBuilder builder = new StringBuilder(attributeName.length())[ FD ]
Line_7 $$ boolean replaced = false-->Line_11 $$ replaced = true[ FD ]
Line_15 $$ if (!replaced) -->Line_16 $$ builder.append(c)[ CD ]
Line_6 $$ char c = attributeName.charAt(i)-->Line_16 $$ builder.append(c)[ FD ]
Line_2 $$ private static String prepareVariableName(@NotNull String attributeName) -->Line_5 $$ for (int i = 0; i < attributeName.length(); i++) [ FD ]
Line_5 $$ for (int i = 0; i < attributeName.length(); i++) -->Line_15 $$ if (!replaced) [ CD ]
Line_2 $$ private static String prepareVariableName(@NotNull String attributeName) -->Line_6 $$ char c = attributeName.charAt(i)[ FD ]
Line_2 $$ private static String prepareVariableName(@NotNull String attributeName) -->Line_3 $$ char[] toReplace = [ CD ]
Line_2 $$ private static String prepareVariableName(@NotNull String attributeName) -->Line_5 $$ for (int i = 0; i < attributeName.length(); i++) [ CD ]
Line_11 $$ replaced = true-->Line_15 $$ if (!replaced) [ FD ]
Line_4 $$ StringBuilder builder = new StringBuilder(attributeName.length())-->Line_19 $$ return builder.toString()[ FD ]
Line_9 $$ if (c == aToReplace) -->Line_10 $$ builder.append('_')[ CD ]
Line_4 $$ StringBuilder builder = new StringBuilder(attributeName.length())-->Line_10 $$ builder.append('_')[ FD ]
Line_2 $$ private static String prepareVariableName(@NotNull String attributeName) -->Line_19 $$ return builder.toString()[ CD ]
Line_8 $$ for (char aToReplace : toReplace) -->Line_9 $$ if (c == aToReplace) [ FD ]
Line_9 $$ if (c == aToReplace) -->Line_11 $$ replaced = true[ CD ]
Line_4 $$ StringBuilder builder = new StringBuilder(attributeName.length())-->Line_16 $$ builder.append(c)[ FD ]
Line_5 $$ for (int i = 0; i < attributeName.length(); i++) -->Line_6 $$ char c = attributeName.charAt(i)[ FD ]
Line_6 $$ char c = attributeName.charAt(i)-->Line_9 $$ if (c == aToReplace) [ FD ]
Line_7 $$ boolean replaced = false-->Line_15 $$ if (!replaced) [ FD ]
Line_5 $$ for (int i = 0; i < attributeName.length(); i++) -->Line_6 $$ char c = attributeName.charAt(i)[ CD ]
Line_2 $$ private static String prepareVariableName(@NotNull String attributeName) -->Line_4 $$ StringBuilder builder = new StringBuilder(attributeName.length())[ CD ]
Line_5 $$ for (int i = 0; i < attributeName.length(); i++) -->Line_7 $$ boolean replaced = false[ CD ]
