Line_6 $$ PyStringLiteralExpression string = PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()), PyStringLiteralExpression.class)-->Line_8 $$ final PyDocStringOwner docStringOwner = PsiTreeUtil.getParentOfType(string, PyDocStringOwner.class)[ FD ]
Line_7 $$ if (string != null) -->Line_9 $$ if (docStringOwner != null) [ CD ]
Line_21 $$ if (stringText.startsWith("'") && stringText.endsWith("'")) -->Line_22 $$ setText(PyBundle.message("INTN.quoted.string.single.to.double"))[ CD ]
Line_13 $$ String stringText = string.getText()-->Line_15 $$ stringText = stringText.substring(prefixLength)[ FD ]
Line_2 $$ public boolean isAvailable(@NotNull Project project, Editor editor, PsiFile file) -->Line_6 $$ PyStringLiteralExpression string = PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()), PyStringLiteralExpression.class)[ FD ]
Line_25 $$ if (stringText.startsWith("\"") && stringText.endsWith("\"")) -->Line_27 $$ return true[ CD ]
Line_7 $$ if (string != null) -->Line_14 $$ int prefixLength = PyStringLiteralExpressionImpl.getPrefixLength(stringText)[ CD ]
Line_20 $$ if (stringText.length() > 2) -->Line_25 $$ if (stringText.startsWith("\"") && stringText.endsWith("\"")) [ CD ]
Line_2 $$ public boolean isAvailable(@NotNull Project project, Editor editor, PsiFile file) -->Line_3 $$ if (!(file instanceof PyFile)) [ CD ]
Line_3 $$ if (!(file instanceof PyFile)) -->Line_4 $$ return false[ CD ]
Line_13 $$ String stringText = string.getText()-->Line_20 $$ if (stringText.length() > 2) [ FD ]
Line_7 $$ if (string != null) -->Line_20 $$ if (stringText.length() > 2) [ CD ]
Line_25 $$ if (stringText.startsWith("\"") && stringText.endsWith("\"")) -->Line_26 $$ setText(PyBundle.message("INTN.quoted.string.double.to.single"))[ CD ]
Line_6 $$ PyStringLiteralExpression string = PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()), PyStringLiteralExpression.class)-->Line_10 $$ if (docStringOwner.getDocStringExpression() == string)[ FD ]
Line_2 $$ public boolean isAvailable(@NotNull Project project, Editor editor, PsiFile file) -->Line_31 $$ return false[ CD ]
Line_2 $$ public boolean isAvailable(@NotNull Project project, Editor editor, PsiFile file) -->Line_7 $$ if (string != null) [ CD ]
Line_15 $$ stringText = stringText.substring(prefixLength)-->Line_20 $$ if (stringText.length() > 2) [ FD ]
Line_21 $$ if (stringText.startsWith("'") && stringText.endsWith("'")) -->Line_23 $$ return true[ CD ]
Line_15 $$ stringText = stringText.substring(prefixLength)-->Line_21 $$ if (stringText.startsWith("'") && stringText.endsWith("'")) [ FD ]
Line_15 $$ stringText = stringText.substring(prefixLength)-->Line_25 $$ if (stringText.startsWith("\"") && stringText.endsWith("\"")) [ FD ]
Line_17 $$ if (stringText.startsWith("'''") && stringText.endsWith("'''") || stringText.startsWith("\"\"\"") && stringText.endsWith("\"\"\""))-->Line_18 $$ return false[ CD ]
Line_16 $$ if (stringText.length() >= 6) -->Line_17 $$ if (stringText.startsWith("'''") && stringText.endsWith("'''") || stringText.startsWith("\"\"\"") && stringText.endsWith("\"\"\""))[ CD ]
Line_13 $$ String stringText = string.getText()-->Line_17 $$ if (stringText.startsWith("'''") && stringText.endsWith("'''") || stringText.startsWith("\"\"\"") && stringText.endsWith("\"\"\""))[ FD ]
Line_6 $$ PyStringLiteralExpression string = PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()), PyStringLiteralExpression.class)-->Line_7 $$ if (string != null) [ FD ]
Line_9 $$ if (docStringOwner != null) -->Line_10 $$ if (docStringOwner.getDocStringExpression() == string)[ CD ]
Line_13 $$ String stringText = string.getText()-->Line_16 $$ if (stringText.length() >= 6) [ FD ]
Line_8 $$ final PyDocStringOwner docStringOwner = PsiTreeUtil.getParentOfType(string, PyDocStringOwner.class)-->Line_10 $$ if (docStringOwner.getDocStringExpression() == string)[ FD ]
Line_13 $$ String stringText = string.getText()-->Line_21 $$ if (stringText.startsWith("'") && stringText.endsWith("'")) [ FD ]
Line_13 $$ String stringText = string.getText()-->Line_14 $$ int prefixLength = PyStringLiteralExpressionImpl.getPrefixLength(stringText)[ FD ]
Line_6 $$ PyStringLiteralExpression string = PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()), PyStringLiteralExpression.class)-->Line_13 $$ String stringText = string.getText()[ FD ]
Line_8 $$ final PyDocStringOwner docStringOwner = PsiTreeUtil.getParentOfType(string, PyDocStringOwner.class)-->Line_9 $$ if (docStringOwner != null) [ FD ]
Line_14 $$ int prefixLength = PyStringLiteralExpressionImpl.getPrefixLength(stringText)-->Line_15 $$ stringText = stringText.substring(prefixLength)[ FD ]
Line_20 $$ if (stringText.length() > 2) -->Line_21 $$ if (stringText.startsWith("'") && stringText.endsWith("'")) [ CD ]
Line_15 $$ stringText = stringText.substring(prefixLength)-->Line_16 $$ if (stringText.length() >= 6) [ FD ]
Line_7 $$ if (string != null) -->Line_16 $$ if (stringText.length() >= 6) [ CD ]
Line_2 $$ public boolean isAvailable(@NotNull Project project, Editor editor, PsiFile file) -->Line_6 $$ PyStringLiteralExpression string = PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()), PyStringLiteralExpression.class)[ CD ]
Line_7 $$ if (string != null) -->Line_13 $$ String stringText = string.getText()[ CD ]
Line_13 $$ String stringText = string.getText()-->Line_25 $$ if (stringText.startsWith("\"") && stringText.endsWith("\"")) [ FD ]
Line_7 $$ if (string != null) -->Line_8 $$ final PyDocStringOwner docStringOwner = PsiTreeUtil.getParentOfType(string, PyDocStringOwner.class)[ CD ]
Line_15 $$ stringText = stringText.substring(prefixLength)-->Line_17 $$ if (stringText.startsWith("'''") && stringText.endsWith("'''") || stringText.startsWith("\"\"\"") && stringText.endsWith("\"\"\""))[ FD ]
Line_10 $$ if (docStringOwner.getDocStringExpression() == string)-->Line_11 $$ return false[ CD ]
Line_7 $$ if (string != null) -->Line_15 $$ stringText = stringText.substring(prefixLength)[ CD ]
