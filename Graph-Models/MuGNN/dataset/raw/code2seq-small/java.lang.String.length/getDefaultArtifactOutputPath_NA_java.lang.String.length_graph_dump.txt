Line_4 $$ if (extension == null)-->Line_5 $$ return null[ CD ]
Line_2 $$ public static String getDefaultArtifactOutputPath(@NotNull String artifactName, @NotNull final Project project) -->Line_3 $$ final CompilerProjectExtension extension = CompilerProjectExtension.getInstance(project)[ CD ]
Line_7 $$ if (outputUrl == null || outputUrl.length() == 0) -->Line_9 $$ if (baseDir == null)[ CD ]
Line_2 $$ public static String getDefaultArtifactOutputPath(@NotNull String artifactName, @NotNull final Project project) -->Line_7 $$ if (outputUrl == null || outputUrl.length() == 0) [ CD ]
Line_9 $$ if (baseDir == null)-->Line_10 $$ return null[ CD ]
Line_8 $$ final VirtualFile baseDir = project.getBaseDir()-->Line_11 $$ outputUrl = baseDir.getUrl() + "/out"[ FD ]
Line_3 $$ final CompilerProjectExtension extension = CompilerProjectExtension.getInstance(project)-->Line_6 $$ String outputUrl = extension.getCompilerOutputUrl()[ FD ]
Line_7 $$ if (outputUrl == null || outputUrl.length() == 0) -->Line_8 $$ final VirtualFile baseDir = project.getBaseDir()[ CD ]
Line_2 $$ public static String getDefaultArtifactOutputPath(@NotNull String artifactName, @NotNull final Project project) -->Line_8 $$ final VirtualFile baseDir = project.getBaseDir()[ FD ]
Line_3 $$ final CompilerProjectExtension extension = CompilerProjectExtension.getInstance(project)-->Line_4 $$ if (extension == null)[ FD ]
Line_11 $$ outputUrl = baseDir.getUrl() + "/out"-->Line_13 $$ return VfsUtilCore.urlToPath(outputUrl) + "/artifacts/" + FileUtil.sanitizeFileName(artifactName)[ FD ]
Line_2 $$ public static String getDefaultArtifactOutputPath(@NotNull String artifactName, @NotNull final Project project) -->Line_3 $$ final CompilerProjectExtension extension = CompilerProjectExtension.getInstance(project)[ FD ]
Line_6 $$ String outputUrl = extension.getCompilerOutputUrl()-->Line_11 $$ outputUrl = baseDir.getUrl() + "/out"[ FD ]
Line_2 $$ public static String getDefaultArtifactOutputPath(@NotNull String artifactName, @NotNull final Project project) -->Line_13 $$ return VfsUtilCore.urlToPath(outputUrl) + "/artifacts/" + FileUtil.sanitizeFileName(artifactName)[ FD ]
Line_8 $$ final VirtualFile baseDir = project.getBaseDir()-->Line_9 $$ if (baseDir == null)[ FD ]
Line_2 $$ public static String getDefaultArtifactOutputPath(@NotNull String artifactName, @NotNull final Project project) -->Line_6 $$ String outputUrl = extension.getCompilerOutputUrl()[ CD ]
Line_2 $$ public static String getDefaultArtifactOutputPath(@NotNull String artifactName, @NotNull final Project project) -->Line_13 $$ return VfsUtilCore.urlToPath(outputUrl) + "/artifacts/" + FileUtil.sanitizeFileName(artifactName)[ CD ]
Line_7 $$ if (outputUrl == null || outputUrl.length() == 0) -->Line_11 $$ outputUrl = baseDir.getUrl() + "/out"[ CD ]
Line_6 $$ String outputUrl = extension.getCompilerOutputUrl()-->Line_13 $$ return VfsUtilCore.urlToPath(outputUrl) + "/artifacts/" + FileUtil.sanitizeFileName(artifactName)[ FD ]
Line_2 $$ public static String getDefaultArtifactOutputPath(@NotNull String artifactName, @NotNull final Project project) -->Line_4 $$ if (extension == null)[ CD ]
Line_6 $$ String outputUrl = extension.getCompilerOutputUrl()-->Line_7 $$ if (outputUrl == null || outputUrl.length() == 0) [ FD ]
