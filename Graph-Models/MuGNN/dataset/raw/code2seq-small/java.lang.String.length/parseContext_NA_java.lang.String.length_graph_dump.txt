Line_13 $$ if (token == Token.VALUE_NUMBER) -->Line_26 $$ while (token != Token.END_ARRAY) [ CD ]
Line_26 $$ while (token != Token.END_ARRAY) -->Line_29 $$ token = parser.nextToken()[ CD ]
Line_2 $$ public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser) throws IOException, ElasticsearchParseException -->Line_37 $$ GeoPoint point = GeoUtils.parseGeoPoint(parser)[ FD ]
Line_34 $$ final CharSequence truncatedGeoHash = geoHash.subSequence(0, Math.min(geoHash.length(), precision))-->Line_35 $$ contexts.add(truncatedGeoHash)[ FD ]
Line_13 $$ if (token == Token.VALUE_NUMBER) -->Line_14 $$ double lon = parser.doubleValue()[ CD ]
Line_29 $$ token = parser.nextToken()-->Line_32 $$ if (token == Token.VALUE_STRING) [ FD ]
Line_32 $$ if (token == Token.VALUE_STRING) -->Line_34 $$ final CharSequence truncatedGeoHash = geoHash.subSequence(0, Math.min(geoHash.length(), precision))[ CD ]
Line_10 $$ Token token = parser.currentToken()-->Line_11 $$ if (token == Token.START_ARRAY) [ FD ]
Line_2 $$ public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser) throws IOException, ElasticsearchParseException -->Line_10 $$ Token token = parser.currentToken()[ FD ]
Line_10 $$ Token token = parser.currentToken()-->Line_29 $$ token = parser.nextToken()[ FD ]
Line_10 $$ Token token = parser.currentToken()-->Line_32 $$ if (token == Token.VALUE_STRING) [ FD ]
Line_2 $$ public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser) throws IOException, ElasticsearchParseException -->Line_11 $$ if (token == Token.START_ARRAY) [ CD ]
Line_12 $$ token = parser.nextToken()-->Line_32 $$ if (token == Token.VALUE_STRING) [ FD ]
Line_12 $$ token = parser.nextToken()-->Line_29 $$ token = parser.nextToken()[ FD ]
Line_32 $$ if (token == Token.VALUE_STRING) -->Line_38 $$ contexts.add(GeoHashUtils.stringEncode(point.getLon(), point.getLat(), precision))[ CD ]
Line_32 $$ if (token == Token.VALUE_STRING) -->Line_35 $$ contexts.add(truncatedGeoHash)[ CD ]
Line_14 $$ double lon = parser.doubleValue()-->Line_18 $$ contexts.add(GeoHashUtils.stringEncode(lon, lat, precision))[ FD ]
Line_2 $$ public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser) throws IOException, ElasticsearchParseException -->Line_27 $$ GeoPoint point = GeoUtils.parseGeoPoint(parser)[ FD ]
Line_12 $$ token = parser.nextToken()-->Line_26 $$ while (token != Token.END_ARRAY) [ FD ]
Line_10 $$ Token token = parser.currentToken()-->Line_12 $$ token = parser.nextToken()[ FD ]
Line_2 $$ public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser) throws IOException, ElasticsearchParseException -->Line_33 $$ final String geoHash = parser.text()[ FD ]
Line_9 $$ final Set<CharSequence> contexts = new HashSet()-->Line_38 $$ contexts.add(GeoHashUtils.stringEncode(point.getLon(), point.getLat(), precision))[ FD ]
Line_2 $$ public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser) throws IOException, ElasticsearchParseException -->Line_10 $$ Token token = parser.currentToken()[ CD ]
Line_2 $$ public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser) throws IOException, ElasticsearchParseException -->Line_3 $$ if (fieldName != null) [ CD ]
Line_2 $$ public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser) throws IOException, ElasticsearchParseException -->Line_9 $$ final Set<CharSequence> contexts = new HashSet()[ CD ]
Line_2 $$ public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser) throws IOException, ElasticsearchParseException -->Line_15 $$ if (parser.nextToken() == Token.VALUE_NUMBER) [ FD ]
Line_32 $$ if (token == Token.VALUE_STRING) -->Line_33 $$ final String geoHash = parser.text()[ CD ]
Line_9 $$ final Set<CharSequence> contexts = new HashSet()-->Line_35 $$ contexts.add(truncatedGeoHash)[ FD ]
Line_27 $$ GeoPoint point = GeoUtils.parseGeoPoint(parser)-->Line_28 $$ contexts.add(GeoHashUtils.stringEncode(point.getLon(), point.getLat(), precision))[ FD ]
Line_11 $$ if (token == Token.START_ARRAY) -->Line_32 $$ if (token == Token.VALUE_STRING) [ CD ]
Line_10 $$ Token token = parser.currentToken()-->Line_13 $$ if (token == Token.VALUE_NUMBER) [ FD ]
Line_2 $$ public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser) throws IOException, ElasticsearchParseException -->Line_4 $$ FieldMapper mapper = parseContext.docMapper().mappers().getMapper(fieldName)[ FD ]
Line_12 $$ token = parser.nextToken()-->Line_13 $$ if (token == Token.VALUE_NUMBER) [ FD ]
Line_9 $$ final Set<CharSequence> contexts = new HashSet()-->Line_18 $$ contexts.add(GeoHashUtils.stringEncode(lon, lat, precision))[ FD ]
Line_17 $$ if (parser.nextToken() == Token.END_ARRAY) -->Line_18 $$ contexts.add(GeoHashUtils.stringEncode(lon, lat, precision))[ CD ]
Line_33 $$ final String geoHash = parser.text()-->Line_34 $$ final CharSequence truncatedGeoHash = geoHash.subSequence(0, Math.min(geoHash.length(), precision))[ FD ]
Line_27 $$ GeoPoint point = GeoUtils.parseGeoPoint(parser)-->Line_38 $$ contexts.add(GeoHashUtils.stringEncode(point.getLon(), point.getLat(), precision))[ FD ]
Line_11 $$ if (token == Token.START_ARRAY) -->Line_13 $$ if (token == Token.VALUE_NUMBER) [ CD ]
Line_2 $$ public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser) throws IOException, ElasticsearchParseException -->Line_17 $$ if (parser.nextToken() == Token.END_ARRAY) [ FD ]
Line_11 $$ if (token == Token.START_ARRAY) -->Line_12 $$ token = parser.nextToken()[ CD ]
Line_15 $$ if (parser.nextToken() == Token.VALUE_NUMBER) -->Line_17 $$ if (parser.nextToken() == Token.END_ARRAY) [ CD ]
Line_15 $$ if (parser.nextToken() == Token.VALUE_NUMBER) -->Line_16 $$ double lat = parser.doubleValue()[ CD ]
Line_2 $$ public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser) throws IOException, ElasticsearchParseException -->Line_40 $$ return contexts[ CD ]
Line_2 $$ public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser) throws IOException, ElasticsearchParseException -->Line_16 $$ double lat = parser.doubleValue()[ FD ]
Line_9 $$ final Set<CharSequence> contexts = new HashSet()-->Line_28 $$ contexts.add(GeoHashUtils.stringEncode(point.getLon(), point.getLat(), precision))[ FD ]
Line_29 $$ token = parser.nextToken()-->Line_26 $$ while (token != Token.END_ARRAY) [ FD ]
Line_10 $$ Token token = parser.currentToken()-->Line_26 $$ while (token != Token.END_ARRAY) [ FD ]
Line_3 $$ if (fieldName != null) -->Line_4 $$ FieldMapper mapper = parseContext.docMapper().mappers().getMapper(fieldName)[ CD ]
Line_13 $$ if (token == Token.VALUE_NUMBER) -->Line_15 $$ if (parser.nextToken() == Token.VALUE_NUMBER) [ CD ]
Line_3 $$ if (fieldName != null) -->Line_5 $$ if (!(mapper instanceof GeoPointFieldMapper)) [ CD ]
Line_16 $$ double lat = parser.doubleValue()-->Line_18 $$ contexts.add(GeoHashUtils.stringEncode(lon, lat, precision))[ FD ]
Line_2 $$ public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser) throws IOException, ElasticsearchParseException -->Line_12 $$ token = parser.nextToken()[ FD ]
Line_32 $$ if (token == Token.VALUE_STRING) -->Line_37 $$ GeoPoint point = GeoUtils.parseGeoPoint(parser)[ CD ]
Line_2 $$ public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser) throws IOException, ElasticsearchParseException -->Line_29 $$ token = parser.nextToken()[ FD ]
Line_37 $$ GeoPoint point = GeoUtils.parseGeoPoint(parser)-->Line_38 $$ contexts.add(GeoHashUtils.stringEncode(point.getLon(), point.getLat(), precision))[ FD ]
Line_26 $$ while (token != Token.END_ARRAY) -->Line_28 $$ contexts.add(GeoHashUtils.stringEncode(point.getLon(), point.getLat(), precision))[ CD ]
Line_2 $$ public Set<CharSequence> parseContext(ParseContext parseContext, XContentParser parser) throws IOException, ElasticsearchParseException -->Line_14 $$ double lon = parser.doubleValue()[ FD ]
Line_26 $$ while (token != Token.END_ARRAY) -->Line_27 $$ GeoPoint point = GeoUtils.parseGeoPoint(parser)[ CD ]
