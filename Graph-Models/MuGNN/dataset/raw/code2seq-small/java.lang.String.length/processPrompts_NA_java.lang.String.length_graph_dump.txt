Line_2 $$ static String processPrompts(final LanguageConsoleView languageConsole, String string) -->Line_5 $$ if (string.startsWith(prompt)) [ FD ]
Line_2 $$ static String processPrompts(final LanguageConsoleView languageConsole, String string) -->Line_26 $$ scrollDown(languageConsole.getConsoleEditor())[ FD ]
Line_17 $$ string = string.substring(multiPrompt.length())-->Line_19 $$ string = string.substring(prompt.length())[ FD ]
Line_2 $$ static String processPrompts(final LanguageConsoleView languageConsole, String string) -->Line_19 $$ string = string.substring(prompt.length())[ FD ]
Line_23 $$ final String trimmedPrompt = prompt.trim()-->Line_24 $$ if (currentPrompt != null && !currentPrompt.equals(trimmedPrompt)) [ FD ]
Line_8 $$ final StringBuilder builder = new StringBuilder()-->Line_13 $$ final String multiPrompt = builder.toString().substring(prompt.length())[ FD ]
Line_5 $$ if (string.startsWith(prompt)) -->Line_23 $$ final String trimmedPrompt = prompt.trim()[ CD ]
Line_8 $$ final StringBuilder builder = new StringBuilder()-->Line_11 $$ builder.append(prompt)[ FD ]
Line_15 $$ prompt = multiPrompt-->Line_19 $$ string = string.substring(prompt.length())[ FD ]
Line_13 $$ final String multiPrompt = builder.toString().substring(prompt.length())-->Line_17 $$ string = string.substring(multiPrompt.length())[ FD ]
Line_13 $$ final String multiPrompt = builder.toString().substring(prompt.length())-->Line_15 $$ prompt = multiPrompt[ FD ]
Line_10 $$ while (string.startsWith(builder.toString())) -->Line_11 $$ builder.append(prompt)[ CD ]
Line_2 $$ static String processPrompts(final LanguageConsoleView languageConsole, String string) -->Line_17 $$ string = string.substring(multiPrompt.length())[ FD ]
Line_8 $$ final StringBuilder builder = new StringBuilder()-->Line_10 $$ while (string.startsWith(builder.toString())) [ FD ]
Line_5 $$ if (string.startsWith(prompt)) -->Line_24 $$ if (currentPrompt != null && !currentPrompt.equals(trimmedPrompt)) [ CD ]
Line_24 $$ if (currentPrompt != null && !currentPrompt.equals(trimmedPrompt)) -->Line_25 $$ languageConsole.setPrompt(trimmedPrompt)[ CD ]
Line_14 $$ if (prompt == INDENT_PROMPT) -->Line_15 $$ prompt = multiPrompt[ CD ]
Line_2 $$ static String processPrompts(final LanguageConsoleView languageConsole, String string) -->Line_10 $$ while (string.startsWith(builder.toString())) [ FD ]
Line_2 $$ static String processPrompts(final LanguageConsoleView languageConsole, String string) -->Line_31 $$ return string[ CD ]
Line_23 $$ final String trimmedPrompt = prompt.trim()-->Line_25 $$ languageConsole.setPrompt(trimmedPrompt)[ FD ]
Line_24 $$ if (currentPrompt != null && !currentPrompt.equals(trimmedPrompt)) -->Line_26 $$ scrollDown(languageConsole.getConsoleEditor())[ CD ]
Line_8 $$ final StringBuilder builder = new StringBuilder()-->Line_9 $$ builder.append(prompt).append(prompt)[ FD ]
Line_2 $$ static String processPrompts(final LanguageConsoleView languageConsole, String string) -->Line_25 $$ languageConsole.setPrompt(trimmedPrompt)[ FD ]
Line_15 $$ prompt = multiPrompt-->Line_23 $$ final String trimmedPrompt = prompt.trim()[ FD ]
