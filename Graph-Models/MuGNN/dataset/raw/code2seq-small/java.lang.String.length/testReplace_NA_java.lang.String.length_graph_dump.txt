Line_2 $$ public String testReplace(String in, String what, String by, ReplaceOptions options, boolean filePattern, boolean createPhysicalFile, FileType sourceFileType, Language sourceDialect) -->Line_11 $$ checkSupportedReplacementPattern(project, options)[ CD ]
Line_15 $$ if (options.getMatchOptions().getScope() == null) -->Line_23 $$ firstElement = parent.getFirstChild()[ CD ]
Line_14 $$ PsiElement firstElement, lastElement, parent-->Line_23 $$ firstElement = parent.getFirstChild()[ FD ]
Line_12 $$ Matcher matcher = new Matcher(project)-->Line_28 $$ matcher.testFindMatches(sink, this.options.getMatchOptions())[ FD ]
Line_2 $$ public String testReplace(String in, String what, String by, ReplaceOptions options, boolean filePattern, boolean createPhysicalFile, FileType sourceFileType, Language sourceDialect) -->Line_16 $$ PsiElement[] elements = MatcherImplUtil.createTreeFromText(in, filePattern ? PatternTreeContext.File : PatternTreeContext.Block, sourceFileType, sourceDialect, null, project, createPhysicalFile)[ FD ]
Line_27 $$ CollectingMatchResultSink sink = new CollectingMatchResultSink()-->Line_30 $$ for (final MatchResult result : sink.getMatches()) [ FD ]
Line_41 $$ if (nextSibling instanceof PsiWhiteSpace) -->Line_42 $$ endOffset -= nextSibling.getTextLength() - 1[ CD ]
Line_23 $$ firstElement = parent.getFirstChild()-->Line_36 $$ PsiElement prevSibling = firstElement.getPrevSibling()[ FD ]
Line_35 $$ int endOffset = filePattern ? 0 : parent.getTextLength() - (lastElement.getTextRange().getEndOffset())-->Line_42 $$ endOffset -= nextSibling.getTextLength() - 1[ FD ]
Line_2 $$ public String testReplace(String in, String what, String by, ReplaceOptions options, boolean filePattern, boolean createPhysicalFile, FileType sourceFileType, Language sourceDialect) -->Line_9 $$ this.options.getMatchOptions().clearVariableConstraints()[ CD ]
Line_19 $$ parent = firstElement.getParent()-->Line_23 $$ firstElement = parent.getFirstChild()[ FD ]
Line_29 $$ final List<ReplacementInfo> resultPtrList = new ArrayList<ReplacementInfo>()-->Line_31 $$ resultPtrList.add(buildReplacement(result))[ FD ]
Line_18 $$ lastElement = elements[elements.length - 1]-->Line_35 $$ int endOffset = filePattern ? 0 : parent.getTextLength() - (lastElement.getTextRange().getEndOffset())[ FD ]
Line_22 $$ parent = ((LocalSearchScope) options.getMatchOptions().getScope()).getScope()[0]-->Line_24 $$ lastElement = parent.getLastChild()[ FD ]
Line_34 $$ int startOffset = firstElement.getTextRange().getStartOffset()-->Line_46 $$ result = result.substring(startOffset)[ FD ]
Line_23 $$ firstElement = parent.getFirstChild()-->Line_34 $$ int startOffset = firstElement.getTextRange().getStartOffset()[ FD ]
Line_2 $$ public String testReplace(String in, String what, String by, ReplaceOptions options, boolean filePattern, boolean createPhysicalFile, FileType sourceFileType, Language sourceDialect) -->Line_12 $$ Matcher matcher = new Matcher(project)[ CD ]
Line_15 $$ if (options.getMatchOptions().getScope() == null) -->Line_16 $$ PsiElement[] elements = MatcherImplUtil.createTreeFromText(in, filePattern ? PatternTreeContext.File : PatternTreeContext.Block, sourceFileType, sourceDialect, null, project, createPhysicalFile)[ CD ]
Line_14 $$ PsiElement firstElement, lastElement, parent-->Line_18 $$ lastElement = elements[elements.length - 1][ FD ]
Line_24 $$ lastElement = parent.getLastChild()-->Line_40 $$ PsiElement nextSibling = lastElement.getNextSibling()[ FD ]
Line_14 $$ PsiElement firstElement, lastElement, parent-->Line_34 $$ int startOffset = firstElement.getTextRange().getStartOffset()[ FD ]
Line_27 $$ CollectingMatchResultSink sink = new CollectingMatchResultSink()-->Line_28 $$ matcher.testFindMatches(sink, this.options.getMatchOptions())[ FD ]
Line_2 $$ public String testReplace(String in, String what, String by, ReplaceOptions options, boolean filePattern, boolean createPhysicalFile, FileType sourceFileType, Language sourceDialect) -->Line_15 $$ if (options.getMatchOptions().getScope() == null) [ FD ]
Line_2 $$ public String testReplace(String in, String what, String by, ReplaceOptions options, boolean filePattern, boolean createPhysicalFile, FileType sourceFileType, Language sourceDialect) -->Line_22 $$ parent = ((LocalSearchScope) options.getMatchOptions().getScope()).getScope()[0][ FD ]
Line_14 $$ PsiElement firstElement, lastElement, parent-->Line_24 $$ lastElement = parent.getLastChild()[ FD ]
Line_24 $$ lastElement = parent.getLastChild()-->Line_35 $$ int endOffset = filePattern ? 0 : parent.getTextLength() - (lastElement.getTextRange().getEndOffset())[ FD ]
Line_14 $$ PsiElement firstElement, lastElement, parent-->Line_19 $$ parent = firstElement.getParent()[ FD ]
Line_2 $$ public String testReplace(String in, String what, String by, ReplaceOptions options, boolean filePattern, boolean createPhysicalFile, FileType sourceFileType, Language sourceDialect) -->Line_5 $$ this.options.setReplacement(by)[ FD ]
Line_14 $$ PsiElement firstElement, lastElement, parent-->Line_22 $$ parent = ((LocalSearchScope) options.getMatchOptions().getScope()).getScope()[0][ FD ]
Line_17 $$ firstElement = elements[0]-->Line_34 $$ int startOffset = firstElement.getTextRange().getStartOffset()[ FD ]
Line_15 $$ if (options.getMatchOptions().getScope() == null) -->Line_22 $$ parent = ((LocalSearchScope) options.getMatchOptions().getScope()).getScope()[0][ CD ]
Line_36 $$ PsiElement prevSibling = firstElement.getPrevSibling()-->Line_37 $$ if (prevSibling instanceof PsiWhiteSpace) [ FD ]
Line_22 $$ parent = ((LocalSearchScope) options.getMatchOptions().getScope()).getScope()[0]-->Line_45 $$ String result = parent.getText()[ FD ]
Line_17 $$ firstElement = elements[0]-->Line_36 $$ PsiElement prevSibling = firstElement.getPrevSibling()[ FD ]
Line_2 $$ public String testReplace(String in, String what, String by, ReplaceOptions options, boolean filePattern, boolean createPhysicalFile, FileType sourceFileType, Language sourceDialect) -->Line_52 $$ options.getMatchOptions().setScope(null)[ FD ]
Line_2 $$ public String testReplace(String in, String what, String by, ReplaceOptions options, boolean filePattern, boolean createPhysicalFile, FileType sourceFileType, Language sourceDialect) -->Line_4 $$ this.options.getMatchOptions().setSearchPattern(what)[ CD ]
Line_14 $$ PsiElement firstElement, lastElement, parent-->Line_17 $$ firstElement = elements[0][ FD ]
Line_2 $$ public String testReplace(String in, String what, String by, ReplaceOptions options, boolean filePattern, boolean createPhysicalFile, FileType sourceFileType, Language sourceDialect) -->Line_10 $$ MatcherImplUtil.transform(this.options.getMatchOptions())[ CD ]
Line_15 $$ if (options.getMatchOptions().getScope() == null) -->Line_20 $$ this.options.getMatchOptions().setScope(new LocalSearchScope(parent))[ CD ]
Line_14 $$ PsiElement firstElement, lastElement, parent-->Line_35 $$ int endOffset = filePattern ? 0 : parent.getTextLength() - (lastElement.getTextRange().getEndOffset())[ FD ]
Line_2 $$ public String testReplace(String in, String what, String by, ReplaceOptions options, boolean filePattern, boolean createPhysicalFile, FileType sourceFileType, Language sourceDialect) -->Line_11 $$ checkSupportedReplacementPattern(project, options)[ FD ]
Line_17 $$ firstElement = elements[0]-->Line_19 $$ parent = firstElement.getParent()[ FD ]
Line_15 $$ if (options.getMatchOptions().getScope() == null) -->Line_24 $$ lastElement = parent.getLastChild()[ CD ]
Line_19 $$ parent = firstElement.getParent()-->Line_35 $$ int endOffset = filePattern ? 0 : parent.getTextLength() - (lastElement.getTextRange().getEndOffset())[ FD ]
Line_14 $$ PsiElement firstElement, lastElement, parent-->Line_40 $$ PsiElement nextSibling = lastElement.getNextSibling()[ FD ]
Line_17 $$ firstElement = elements[0]-->Line_23 $$ firstElement = parent.getFirstChild()[ FD ]
Line_22 $$ parent = ((LocalSearchScope) options.getMatchOptions().getScope()).getScope()[0]-->Line_23 $$ firstElement = parent.getFirstChild()[ FD ]
Line_2 $$ public String testReplace(String in, String what, String by, ReplaceOptions options, boolean filePattern, boolean createPhysicalFile, FileType sourceFileType, Language sourceDialect) -->Line_3 $$ this.options = options[ FD ]
Line_19 $$ parent = firstElement.getParent()-->Line_22 $$ parent = ((LocalSearchScope) options.getMatchOptions().getScope()).getScope()[0][ FD ]
Line_40 $$ PsiElement nextSibling = lastElement.getNextSibling()-->Line_42 $$ endOffset -= nextSibling.getTextLength() - 1[ FD ]
Line_30 $$ for (final MatchResult result : sink.getMatches()) -->Line_46 $$ result = result.substring(startOffset)[ FD ]
Line_38 $$ startOffset -= prevSibling.getTextLength() - 1-->Line_46 $$ result = result.substring(startOffset)[ FD ]
Line_2 $$ public String testReplace(String in, String what, String by, ReplaceOptions options, boolean filePattern, boolean createPhysicalFile, FileType sourceFileType, Language sourceDialect) -->Line_4 $$ this.options.getMatchOptions().setSearchPattern(what)[ FD ]
Line_37 $$ if (prevSibling instanceof PsiWhiteSpace) -->Line_38 $$ startOffset -= prevSibling.getTextLength() - 1[ CD ]
Line_46 $$ result = result.substring(startOffset)-->Line_47 $$ result = result.substring(0, result.length() - endOffset)[ FD ]
Line_27 $$ CollectingMatchResultSink sink = new CollectingMatchResultSink()-->Line_33 $$ sink.getMatches().clear()[ FD ]
Line_19 $$ parent = firstElement.getParent()-->Line_45 $$ String result = parent.getText()[ FD ]
Line_15 $$ if (options.getMatchOptions().getScope() == null) -->Line_18 $$ lastElement = elements[elements.length - 1][ CD ]
Line_34 $$ int startOffset = firstElement.getTextRange().getStartOffset()-->Line_38 $$ startOffset -= prevSibling.getTextLength() - 1[ FD ]
Line_22 $$ parent = ((LocalSearchScope) options.getMatchOptions().getScope()).getScope()[0]-->Line_35 $$ int endOffset = filePattern ? 0 : parent.getTextLength() - (lastElement.getTextRange().getEndOffset())[ FD ]
Line_36 $$ PsiElement prevSibling = firstElement.getPrevSibling()-->Line_38 $$ startOffset -= prevSibling.getTextLength() - 1[ FD ]
Line_18 $$ lastElement = elements[elements.length - 1]-->Line_24 $$ lastElement = parent.getLastChild()[ FD ]
Line_14 $$ PsiElement firstElement, lastElement, parent-->Line_45 $$ String result = parent.getText()[ FD ]
Line_30 $$ for (final MatchResult result : sink.getMatches()) -->Line_31 $$ resultPtrList.add(buildReplacement(result))[ FD ]
Line_14 $$ PsiElement firstElement, lastElement, parent-->Line_36 $$ PsiElement prevSibling = firstElement.getPrevSibling()[ FD ]
Line_15 $$ if (options.getMatchOptions().getScope() == null) -->Line_17 $$ firstElement = elements[0][ CD ]
Line_29 $$ final List<ReplacementInfo> resultPtrList = new ArrayList<ReplacementInfo>()-->Line_44 $$ replaceAll(resultPtrList)[ FD ]
Line_15 $$ if (options.getMatchOptions().getScope() == null) -->Line_19 $$ parent = firstElement.getParent()[ CD ]
Line_2 $$ public String testReplace(String in, String what, String by, ReplaceOptions options, boolean filePattern, boolean createPhysicalFile, FileType sourceFileType, Language sourceDialect) -->Line_3 $$ this.options = options[ CD ]
Line_18 $$ lastElement = elements[elements.length - 1]-->Line_40 $$ PsiElement nextSibling = lastElement.getNextSibling()[ FD ]
Line_40 $$ PsiElement nextSibling = lastElement.getNextSibling()-->Line_41 $$ if (nextSibling instanceof PsiWhiteSpace) [ FD ]
Line_30 $$ for (final MatchResult result : sink.getMatches()) -->Line_47 $$ result = result.substring(0, result.length() - endOffset)[ FD ]
Line_19 $$ parent = firstElement.getParent()-->Line_24 $$ lastElement = parent.getLastChild()[ FD ]
Line_2 $$ public String testReplace(String in, String what, String by, ReplaceOptions options, boolean filePattern, boolean createPhysicalFile, FileType sourceFileType, Language sourceDialect) -->Line_5 $$ this.options.setReplacement(by)[ CD ]
