Line_3 $$ final String prefix = "Python "-->Line_5 $$ final String version = versionString.substring(prefix.length())[ FD ]
Line_7 $$ if (dot > 0) -->Line_12 $$ return version[ CD ]
Line_5 $$ final String version = versionString.substring(prefix.length())-->Line_6 $$ int dot = version.indexOf('.')[ FD ]
Line_4 $$ if (versionString != null && versionString.startsWith(prefix)) -->Line_5 $$ final String version = versionString.substring(prefix.length())[ CD ]
Line_4 $$ if (versionString != null && versionString.startsWith(prefix)) -->Line_7 $$ if (dot > 0) [ CD ]
Line_2 $$ public static String pyVersion(@Nullable String versionString) -->Line_5 $$ final String version = versionString.substring(prefix.length())[ FD ]
Line_4 $$ if (versionString != null && versionString.startsWith(prefix)) -->Line_6 $$ int dot = version.indexOf('.')[ CD ]
Line_3 $$ final String prefix = "Python "-->Line_4 $$ if (versionString != null && versionString.startsWith(prefix)) [ FD ]
Line_6 $$ int dot = version.indexOf('.')-->Line_8 $$ dot = version.indexOf('.', dot + 1)[ FD ]
Line_6 $$ int dot = version.indexOf('.')-->Line_10 $$ return version.substring(0, dot)[ FD ]
Line_5 $$ final String version = versionString.substring(prefix.length())-->Line_8 $$ dot = version.indexOf('.', dot + 1)[ FD ]
Line_2 $$ public static String pyVersion(@Nullable String versionString) -->Line_15 $$ return null[ CD ]
Line_8 $$ dot = version.indexOf('.', dot + 1)-->Line_9 $$ if (dot > 0) [ FD ]
Line_6 $$ int dot = version.indexOf('.')-->Line_9 $$ if (dot > 0) [ FD ]
Line_6 $$ int dot = version.indexOf('.')-->Line_7 $$ if (dot > 0) [ FD ]
Line_2 $$ public static String pyVersion(@Nullable String versionString) -->Line_3 $$ final String prefix = "Python "[ CD ]
Line_8 $$ dot = version.indexOf('.', dot + 1)-->Line_10 $$ return version.substring(0, dot)[ FD ]
Line_7 $$ if (dot > 0) -->Line_8 $$ dot = version.indexOf('.', dot + 1)[ CD ]
Line_2 $$ public static String pyVersion(@Nullable String versionString) -->Line_4 $$ if (versionString != null && versionString.startsWith(prefix)) [ CD ]
Line_7 $$ if (dot > 0) -->Line_9 $$ if (dot > 0) [ CD ]
Line_9 $$ if (dot > 0) -->Line_10 $$ return version.substring(0, dot)[ CD ]
Line_5 $$ final String version = versionString.substring(prefix.length())-->Line_10 $$ return version.substring(0, dot)[ FD ]
Line_2 $$ public static String pyVersion(@Nullable String versionString) -->Line_4 $$ if (versionString != null && versionString.startsWith(prefix)) [ FD ]
