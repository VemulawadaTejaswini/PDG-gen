Line_4 $$ String srcq = src.makeQualified(srcFS).toString() + Path.SEPARATOR-->Line_6 $$ if (dstq.startsWith(srcq)) [ FD ]
Line_4 $$ String srcq = src.makeQualified(srcFS).toString() + Path.SEPARATOR-->Line_7 $$ if (srcq.length() == dstq.length()) [ FD ]
Line_2 $$ private static void checkDependencies(FileSystem srcFS, Path src, FileSystem dstFS, Path dst) throws IOException -->Line_5 $$ String dstq = dst.makeQualified(dstFS).toString() + Path.SEPARATOR[ FD ]
Line_6 $$ if (dstq.startsWith(srcq)) -->Line_7 $$ if (srcq.length() == dstq.length()) [ CD ]
Line_3 $$ if (srcFS == dstFS) -->Line_4 $$ String srcq = src.makeQualified(srcFS).toString() + Path.SEPARATOR[ CD ]
Line_2 $$ private static void checkDependencies(FileSystem srcFS, Path src, FileSystem dstFS, Path dst) throws IOException -->Line_4 $$ String srcq = src.makeQualified(srcFS).toString() + Path.SEPARATOR[ FD ]
Line_3 $$ if (srcFS == dstFS) -->Line_5 $$ String dstq = dst.makeQualified(dstFS).toString() + Path.SEPARATOR[ CD ]
Line_2 $$ private static void checkDependencies(FileSystem srcFS, Path src, FileSystem dstFS, Path dst) throws IOException -->Line_3 $$ if (srcFS == dstFS) [ FD ]
Line_5 $$ String dstq = dst.makeQualified(dstFS).toString() + Path.SEPARATOR-->Line_7 $$ if (srcq.length() == dstq.length()) [ FD ]
Line_3 $$ if (srcFS == dstFS) -->Line_6 $$ if (dstq.startsWith(srcq)) [ CD ]
Line_2 $$ private static void checkDependencies(FileSystem srcFS, Path src, FileSystem dstFS, Path dst) throws IOException -->Line_3 $$ if (srcFS == dstFS) [ CD ]
Line_5 $$ String dstq = dst.makeQualified(dstFS).toString() + Path.SEPARATOR-->Line_6 $$ if (dstq.startsWith(srcq)) [ FD ]
