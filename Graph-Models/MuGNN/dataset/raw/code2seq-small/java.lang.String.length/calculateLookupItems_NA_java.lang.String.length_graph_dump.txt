Line_6 $$ Set<LookupElement> set = new LinkedHashSet<LookupElement>()-->Line_11 $$ set.add(LookupElementBuilder.create(name))[ FD ]
Line_2 $$ public LookupElement[] calculateLookupItems(@NotNull Expression[] params, ExpressionContext context) -->Line_7 $$ boolean isShortName = params.length > 1 && !Boolean.valueOf(params[1].calculateResult(context).toString())[ CD ]
Line_4 $$ if (classes == null || classes.size() == 0)-->Line_5 $$ return null[ CD ]
Line_10 $$ if (name != null && name.length() > 0) -->Line_11 $$ set.add(LookupElementBuilder.create(name))[ CD ]
Line_3 $$ final List<PsiClass> classes = findDescendants(context, params)-->Line_4 $$ if (classes == null || classes.size() == 0)[ FD ]
Line_2 $$ public LookupElement[] calculateLookupItems(@NotNull Expression[] params, ExpressionContext context) -->Line_14 $$ return set.toArray(new LookupElement[set.size()])[ CD ]
Line_2 $$ public LookupElement[] calculateLookupItems(@NotNull Expression[] params, ExpressionContext context) -->Line_4 $$ if (classes == null || classes.size() == 0)[ CD ]
Line_9 $$ final String name = isShortName ? object.getName() : object.getQualifiedName()-->Line_11 $$ set.add(LookupElementBuilder.create(name))[ FD ]
Line_8 $$ for (PsiClass object : classes) -->Line_9 $$ final String name = isShortName ? object.getName() : object.getQualifiedName()[ FD ]
Line_6 $$ Set<LookupElement> set = new LinkedHashSet<LookupElement>()-->Line_14 $$ return set.toArray(new LookupElement[set.size()])[ FD ]
Line_2 $$ public LookupElement[] calculateLookupItems(@NotNull Expression[] params, ExpressionContext context) -->Line_7 $$ boolean isShortName = params.length > 1 && !Boolean.valueOf(params[1].calculateResult(context).toString())[ FD ]
Line_2 $$ public LookupElement[] calculateLookupItems(@NotNull Expression[] params, ExpressionContext context) -->Line_3 $$ final List<PsiClass> classes = findDescendants(context, params)[ CD ]
Line_2 $$ public LookupElement[] calculateLookupItems(@NotNull Expression[] params, ExpressionContext context) -->Line_3 $$ final List<PsiClass> classes = findDescendants(context, params)[ FD ]
Line_9 $$ final String name = isShortName ? object.getName() : object.getQualifiedName()-->Line_10 $$ if (name != null && name.length() > 0) [ FD ]
Line_2 $$ public LookupElement[] calculateLookupItems(@NotNull Expression[] params, ExpressionContext context) -->Line_6 $$ Set<LookupElement> set = new LinkedHashSet<LookupElement>()[ CD ]
