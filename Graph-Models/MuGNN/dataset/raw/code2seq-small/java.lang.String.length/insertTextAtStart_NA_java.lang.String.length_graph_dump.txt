Line_4 $$ for (int i = 0; i < myHighlightedRegions.size(); i++) -->Line_7 $$ info.endOffset += textLength[ CD ]
Line_2 $$ public void insertTextAtStart(String text, TextAttributes attributes) -->Line_10 $$ if (attributes != null) [ CD ]
Line_10 $$ if (attributes != null) -->Line_11 $$ myHighlightedRegions.add(new HighlightedRegion(0, textLength, attributes))[ CD ]
Line_2 $$ public void insertTextAtStart(String text, TextAttributes attributes) -->Line_4 $$ for (int i = 0; i < myHighlightedRegions.size(); i++) [ CD ]
Line_2 $$ public void insertTextAtStart(String text, TextAttributes attributes) -->Line_9 $$ myBuffer.insert(0, text)[ CD ]
Line_4 $$ for (int i = 0; i < myHighlightedRegions.size(); i++) -->Line_5 $$ HighlightedRegion info = (HighlightedRegion) myHighlightedRegions.get(i)[ FD ]
Line_2 $$ public void insertTextAtStart(String text, TextAttributes attributes) -->Line_3 $$ int textLength = text.length()[ CD ]
Line_4 $$ for (int i = 0; i < myHighlightedRegions.size(); i++) -->Line_5 $$ HighlightedRegion info = (HighlightedRegion) myHighlightedRegions.get(i)[ CD ]
Line_4 $$ for (int i = 0; i < myHighlightedRegions.size(); i++) -->Line_6 $$ info.startOffset += textLength[ CD ]
Line_2 $$ public void insertTextAtStart(String text, TextAttributes attributes) -->Line_9 $$ myBuffer.insert(0, text)[ FD ]
Line_3 $$ int textLength = text.length()-->Line_6 $$ info.startOffset += textLength[ FD ]
Line_2 $$ public void insertTextAtStart(String text, TextAttributes attributes) -->Line_10 $$ if (attributes != null) [ FD ]
Line_2 $$ public void insertTextAtStart(String text, TextAttributes attributes) -->Line_3 $$ int textLength = text.length()[ FD ]
Line_3 $$ int textLength = text.length()-->Line_7 $$ info.endOffset += textLength[ FD ]
