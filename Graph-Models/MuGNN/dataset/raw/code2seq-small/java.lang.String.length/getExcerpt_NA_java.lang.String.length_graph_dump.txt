Line_17 $$ body = textExtractor.toString()-->Line_20 $$ return StringUtil.shorten(body, PropsValues.BLOGS_LINKBACK_EXCERPT_LENGTH)[ FD ]
Line_16 $$ textExtractor = new TextExtractor(element)-->Line_17 $$ body = textExtractor.toString()[ FD ]
Line_2 $$ protected String getExcerpt() throws IOException -->Line_3 $$ String html = HttpUtil.URLtoString(_sourceURI)[ CD ]
Line_12 $$ String body = textExtractor.toString()-->Line_13 $$ if (body.length() < PropsValues.BLOGS_LINKBACK_EXCERPT_LENGTH) [ FD ]
Line_13 $$ if (body.length() < PropsValues.BLOGS_LINKBACK_EXCERPT_LENGTH) -->Line_15 $$ if (element != null) [ CD ]
Line_4 $$ Source source = new Source(html)-->Line_6 $$ List<Element> elements = source.getAllElements("a")[ FD ]
Line_14 $$ element = element.getParentElement()-->Line_15 $$ if (element != null) [ FD ]
Line_9 $$ if (href.equals(_targetURI)) -->Line_11 $$ TextExtractor textExtractor = new TextExtractor(element)[ CD ]
Line_15 $$ if (element != null) -->Line_17 $$ body = textExtractor.toString()[ CD ]
Line_7 $$ for (Element element : elements) -->Line_10 $$ element = element.getParentElement()[ FD ]
Line_11 $$ TextExtractor textExtractor = new TextExtractor(element)-->Line_17 $$ body = textExtractor.toString()[ FD ]
Line_9 $$ if (href.equals(_targetURI)) -->Line_13 $$ if (body.length() < PropsValues.BLOGS_LINKBACK_EXCERPT_LENGTH) [ CD ]
Line_7 $$ for (Element element : elements) -->Line_8 $$ String href = GetterUtil.getString(element.getAttributeValue("href"))[ FD ]
Line_8 $$ String href = GetterUtil.getString(element.getAttributeValue("href"))-->Line_9 $$ if (href.equals(_targetURI)) [ FD ]
Line_9 $$ if (href.equals(_targetURI)) -->Line_10 $$ element = element.getParentElement()[ CD ]
Line_2 $$ protected String getExcerpt() throws IOException -->Line_23 $$ return StringPool.BLANK[ CD ]
Line_10 $$ element = element.getParentElement()-->Line_14 $$ element = element.getParentElement()[ FD ]
Line_4 $$ Source source = new Source(html)-->Line_5 $$ source.fullSequentialParse()[ FD ]
Line_10 $$ element = element.getParentElement()-->Line_15 $$ if (element != null) [ FD ]
Line_12 $$ String body = textExtractor.toString()-->Line_17 $$ body = textExtractor.toString()[ FD ]
Line_13 $$ if (body.length() < PropsValues.BLOGS_LINKBACK_EXCERPT_LENGTH) -->Line_14 $$ element = element.getParentElement()[ CD ]
Line_11 $$ TextExtractor textExtractor = new TextExtractor(element)-->Line_16 $$ textExtractor = new TextExtractor(element)[ FD ]
Line_15 $$ if (element != null) -->Line_16 $$ textExtractor = new TextExtractor(element)[ CD ]
Line_2 $$ protected String getExcerpt() throws IOException -->Line_6 $$ List<Element> elements = source.getAllElements("a")[ CD ]
Line_12 $$ String body = textExtractor.toString()-->Line_20 $$ return StringUtil.shorten(body, PropsValues.BLOGS_LINKBACK_EXCERPT_LENGTH)[ FD ]
Line_9 $$ if (href.equals(_targetURI)) -->Line_12 $$ String body = textExtractor.toString()[ CD ]
Line_11 $$ TextExtractor textExtractor = new TextExtractor(element)-->Line_12 $$ String body = textExtractor.toString()[ FD ]
Line_2 $$ protected String getExcerpt() throws IOException -->Line_4 $$ Source source = new Source(html)[ CD ]
Line_7 $$ for (Element element : elements) -->Line_15 $$ if (element != null) [ FD ]
Line_9 $$ if (href.equals(_targetURI)) -->Line_20 $$ return StringUtil.shorten(body, PropsValues.BLOGS_LINKBACK_EXCERPT_LENGTH)[ CD ]
Line_2 $$ protected String getExcerpt() throws IOException -->Line_5 $$ source.fullSequentialParse()[ CD ]
Line_7 $$ for (Element element : elements) -->Line_14 $$ element = element.getParentElement()[ FD ]
