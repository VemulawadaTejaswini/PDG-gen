Line_2 $$ private void checkArrayCopy(ByteBuffer bb) -->Line_7 $$ ByteBufferUtil.arrayCopy(bb, bb.position() + 3, bytes, 1, 4)[ FD ]
Line_3 $$ byte[] bytes = new byte[s.length()]-->Line_7 $$ ByteBufferUtil.arrayCopy(bb, bb.position() + 3, bytes, 1, 4)[ FD ]
Line_2 $$ private void checkArrayCopy(ByteBuffer bb) -->Line_4 $$ ByteBufferUtil.arrayCopy(bb, bb.position(), bytes, 0, s.length())[ FD ]
Line_3 $$ byte[] bytes = new byte[s.length()]-->Line_6 $$ bytes = new byte[5][ FD ]
Line_2 $$ private void checkArrayCopy(ByteBuffer bb) -->Line_7 $$ ByteBufferUtil.arrayCopy(bb, bb.position() + 3, bytes, 1, 4)[ CD ]
Line_6 $$ bytes = new byte[5]-->Line_7 $$ ByteBufferUtil.arrayCopy(bb, bb.position() + 3, bytes, 1, 4)[ FD ]
Line_6 $$ bytes = new byte[5]-->Line_8 $$ assertArrayEquals(Arrays.copyOfRange(s.getBytes(), 3, 7), Arrays.copyOfRange(bytes, 1, 5))[ FD ]
Line_2 $$ private void checkArrayCopy(ByteBuffer bb) -->Line_4 $$ ByteBufferUtil.arrayCopy(bb, bb.position(), bytes, 0, s.length())[ CD ]
Line_2 $$ private void checkArrayCopy(ByteBuffer bb) -->Line_6 $$ bytes = new byte[5][ CD ]
Line_2 $$ private void checkArrayCopy(ByteBuffer bb) -->Line_3 $$ byte[] bytes = new byte[s.length()][ CD ]
Line_2 $$ private void checkArrayCopy(ByteBuffer bb) -->Line_5 $$ assertArrayEquals(s.getBytes(), bytes)[ CD ]
Line_3 $$ byte[] bytes = new byte[s.length()]-->Line_8 $$ assertArrayEquals(Arrays.copyOfRange(s.getBytes(), 3, 7), Arrays.copyOfRange(bytes, 1, 5))[ FD ]
Line_2 $$ private void checkArrayCopy(ByteBuffer bb) -->Line_8 $$ assertArrayEquals(Arrays.copyOfRange(s.getBytes(), 3, 7), Arrays.copyOfRange(bytes, 1, 5))[ CD ]
Line_3 $$ byte[] bytes = new byte[s.length()]-->Line_5 $$ assertArrayEquals(s.getBytes(), bytes)[ FD ]
Line_3 $$ byte[] bytes = new byte[s.length()]-->Line_4 $$ ByteBufferUtil.arrayCopy(bb, bb.position(), bytes, 0, s.length())[ FD ]
