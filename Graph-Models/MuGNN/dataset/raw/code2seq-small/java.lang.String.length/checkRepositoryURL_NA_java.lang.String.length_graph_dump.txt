Line_28 $$ File file = new File(repository)-->Line_30 $$ if (!file.isDirectory()) [ FD ]
Line_2 $$ private boolean checkRepositoryURL() -->Line_4 $$ if (repository.length() == 0) [ CD ]
Line_4 $$ if (repository.length() == 0) -->Line_6 $$ setOKActionEnabled(false)[ CD ]
Line_3 $$ String repository = getCurrentUrlText()-->Line_4 $$ if (repository.length() == 0) [ FD ]
Line_10 $$ if (!myTestResult.booleanValue()) -->Line_12 $$ setOKActionEnabled(false)[ CD ]
Line_2 $$ private boolean checkRepositoryURL() -->Line_40 $$ return false[ CD ]
Line_29 $$ if (file.exists()) -->Line_30 $$ if (!file.isDirectory()) [ CD ]
Line_9 $$ if (myTestResult != null && repository.equals(myTestURL)) -->Line_10 $$ if (!myTestResult.booleanValue()) [ CD ]
Line_2 $$ private boolean checkRepositoryURL() -->Line_9 $$ if (myTestResult != null && repository.equals(myTestURL)) [ CD ]
Line_10 $$ if (!myTestResult.booleanValue()) -->Line_15 $$ return true[ CD ]
Line_4 $$ if (repository.length() == 0) -->Line_5 $$ setErrorText(null)[ CD ]
Line_30 $$ if (!file.isDirectory()) -->Line_31 $$ setErrorText(DvcsBundle.getString("clone.url.is.not.directory.error"))[ CD ]
Line_19 $$ if (new URI(repository).isAbsolute()) -->Line_20 $$ return true[ CD ]
Line_29 $$ if (file.exists()) -->Line_34 $$ return true[ CD ]
Line_10 $$ if (!myTestResult.booleanValue()) -->Line_13 $$ return false[ CD ]
Line_2 $$ private boolean checkRepositoryURL() -->Line_3 $$ String repository = getCurrentUrlText()[ CD ]
Line_3 $$ String repository = getCurrentUrlText()-->Line_9 $$ if (myTestResult != null && repository.equals(myTestURL)) [ FD ]
Line_10 $$ if (!myTestResult.booleanValue()) -->Line_11 $$ setErrorText(DvcsBundle.getString("clone.test.failed.error"))[ CD ]
Line_2 $$ private boolean checkRepositoryURL() -->Line_39 $$ setOKActionEnabled(false)[ CD ]
Line_24 $$ if (SSH_URL_PATTERN.matcher(repository).matches()) -->Line_25 $$ return true[ CD ]
Line_2 $$ private boolean checkRepositoryURL() -->Line_24 $$ if (SSH_URL_PATTERN.matcher(repository).matches()) [ CD ]
Line_3 $$ String repository = getCurrentUrlText()-->Line_24 $$ if (SSH_URL_PATTERN.matcher(repository).matches()) [ FD ]
Line_28 $$ File file = new File(repository)-->Line_29 $$ if (file.exists()) [ FD ]
Line_2 $$ private boolean checkRepositoryURL() -->Line_38 $$ setErrorText(DvcsBundle.getString("clone.invalid.url"))[ CD ]
Line_4 $$ if (repository.length() == 0) -->Line_7 $$ return false[ CD ]
Line_30 $$ if (!file.isDirectory()) -->Line_32 $$ setOKActionEnabled(false)[ CD ]
