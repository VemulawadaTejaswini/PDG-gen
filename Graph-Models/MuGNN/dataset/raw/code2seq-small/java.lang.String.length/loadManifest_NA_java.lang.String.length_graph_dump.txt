Line_2 $$ private Manifest loadManifest(JarInfo jar, List<String> packedFilePaths) throws IOException -->Line_33 $$ return null[ CD ]
Line_20 $$ ((JarBasedArtifactRootDescriptor) descriptor).processEntries(new JarBasedArtifactRootDescriptor.EntryProcessor() -->Line_23 $$ manifestRef.set(createManifest(inputStream, descriptor.getRootFile()))[ FD ]
Line_4 $$ if (pair.getSecond() instanceof ArtifactRootDescriptor) -->Line_5 $$ final String rootPath = pair.getFirst()[ CD ]
Line_11 $$ if (descriptor instanceof FileBasedArtifactRootDescriptor) -->Line_27 $$ if (!manifestRef.isNull()) [ CD ]
Line_2 $$ private Manifest loadManifest(JarInfo jar, List<String> packedFilePaths) throws IOException -->Line_3 $$ for (Pair<String, Object> pair : jar.getContent()) [ FD ]
Line_11 $$ if (descriptor instanceof FileBasedArtifactRootDescriptor) -->Line_12 $$ final File manifestFile = new File(descriptor.getRootFile(), manifestPath)[ CD ]
Line_11 $$ if (descriptor instanceof FileBasedArtifactRootDescriptor) -->Line_13 $$ if (manifestFile.exists()) [ CD ]
Line_3 $$ for (Pair<String, Object> pair : jar.getContent()) -->Line_10 $$ final ArtifactRootDescriptor descriptor = (ArtifactRootDescriptor) pair.getSecond()[ FD ]
Line_13 $$ if (manifestFile.exists()) -->Line_15 $$ packedFilePaths.add(fullManifestPath)[ CD ]
Line_4 $$ if (pair.getSecond() instanceof ArtifactRootDescriptor) -->Line_9 $$ final String manifestPath = JpsArtifactPathUtil.trimForwardSlashes(JarFile.MANIFEST_NAME.substring(rootPath.length()))[ CD ]
Line_5 $$ final String rootPath = pair.getFirst()-->Line_6 $$ if (!JarFile.MANIFEST_NAME.startsWith(rootPath)) [ FD ]
Line_13 $$ if (manifestFile.exists()) -->Line_14 $$ final String fullManifestPath = FileUtil.toSystemIndependentName(manifestFile.getAbsolutePath())[ CD ]
Line_9 $$ final String manifestPath = JpsArtifactPathUtil.trimForwardSlashes(JarFile.MANIFEST_NAME.substring(rootPath.length()))-->Line_22 $$ if (manifestRef.isNull() && relativePath.equals(manifestPath) && inputStream != null) [ FD ]
Line_12 $$ final File manifestFile = new File(descriptor.getRootFile(), manifestPath)-->Line_13 $$ if (manifestFile.exists()) [ FD ]
Line_4 $$ if (pair.getSecond() instanceof ArtifactRootDescriptor) -->Line_6 $$ if (!JarFile.MANIFEST_NAME.startsWith(rootPath)) [ CD ]
Line_3 $$ for (Pair<String, Object> pair : jar.getContent()) -->Line_5 $$ final String rootPath = pair.getFirst()[ FD ]
Line_13 $$ if (manifestFile.exists()) -->Line_16 $$ return createManifest(new FileInputStream(manifestFile), manifestFile)[ CD ]
Line_11 $$ if (descriptor instanceof FileBasedArtifactRootDescriptor) -->Line_19 $$ final Ref<Manifest> manifestRef = Ref.create(null)[ CD ]
Line_11 $$ if (descriptor instanceof FileBasedArtifactRootDescriptor) -->Line_20 $$ ((JarBasedArtifactRootDescriptor) descriptor).processEntries(new JarBasedArtifactRootDescriptor.EntryProcessor() [ CD ]
Line_2 $$ private Manifest loadManifest(JarInfo jar, List<String> packedFilePaths) throws IOException -->Line_15 $$ packedFilePaths.add(fullManifestPath)[ FD ]
Line_5 $$ final String rootPath = pair.getFirst()-->Line_9 $$ final String manifestPath = JpsArtifactPathUtil.trimForwardSlashes(JarFile.MANIFEST_NAME.substring(rootPath.length()))[ FD ]
Line_14 $$ final String fullManifestPath = FileUtil.toSystemIndependentName(manifestFile.getAbsolutePath())-->Line_15 $$ packedFilePaths.add(fullManifestPath)[ FD ]
Line_27 $$ if (!manifestRef.isNull()) -->Line_28 $$ return manifestRef.get()[ CD ]
Line_4 $$ if (pair.getSecond() instanceof ArtifactRootDescriptor) -->Line_11 $$ if (descriptor instanceof FileBasedArtifactRootDescriptor) [ CD ]
Line_12 $$ final File manifestFile = new File(descriptor.getRootFile(), manifestPath)-->Line_16 $$ return createManifest(new FileInputStream(manifestFile), manifestFile)[ FD ]
Line_10 $$ final ArtifactRootDescriptor descriptor = (ArtifactRootDescriptor) pair.getSecond()-->Line_11 $$ if (descriptor instanceof FileBasedArtifactRootDescriptor) [ FD ]
Line_12 $$ final File manifestFile = new File(descriptor.getRootFile(), manifestPath)-->Line_14 $$ final String fullManifestPath = FileUtil.toSystemIndependentName(manifestFile.getAbsolutePath())[ FD ]
Line_20 $$ ((JarBasedArtifactRootDescriptor) descriptor).processEntries(new JarBasedArtifactRootDescriptor.EntryProcessor() -->Line_22 $$ if (manifestRef.isNull() && relativePath.equals(manifestPath) && inputStream != null) [ CD ]
Line_10 $$ final ArtifactRootDescriptor descriptor = (ArtifactRootDescriptor) pair.getSecond()-->Line_23 $$ manifestRef.set(createManifest(inputStream, descriptor.getRootFile()))[ FD ]
Line_19 $$ final Ref<Manifest> manifestRef = Ref.create(null)-->Line_23 $$ manifestRef.set(createManifest(inputStream, descriptor.getRootFile()))[ FD ]
Line_19 $$ final Ref<Manifest> manifestRef = Ref.create(null)-->Line_22 $$ if (manifestRef.isNull() && relativePath.equals(manifestPath) && inputStream != null) [ FD ]
Line_22 $$ if (manifestRef.isNull() && relativePath.equals(manifestPath) && inputStream != null) -->Line_23 $$ manifestRef.set(createManifest(inputStream, descriptor.getRootFile()))[ CD ]
Line_4 $$ if (pair.getSecond() instanceof ArtifactRootDescriptor) -->Line_10 $$ final ArtifactRootDescriptor descriptor = (ArtifactRootDescriptor) pair.getSecond()[ CD ]
Line_20 $$ ((JarBasedArtifactRootDescriptor) descriptor).processEntries(new JarBasedArtifactRootDescriptor.EntryProcessor() -->Line_22 $$ if (manifestRef.isNull() && relativePath.equals(manifestPath) && inputStream != null) [ FD ]
Line_19 $$ final Ref<Manifest> manifestRef = Ref.create(null)-->Line_28 $$ return manifestRef.get()[ FD ]
Line_3 $$ for (Pair<String, Object> pair : jar.getContent()) -->Line_4 $$ if (pair.getSecond() instanceof ArtifactRootDescriptor) [ FD ]
Line_10 $$ final ArtifactRootDescriptor descriptor = (ArtifactRootDescriptor) pair.getSecond()-->Line_12 $$ final File manifestFile = new File(descriptor.getRootFile(), manifestPath)[ FD ]
Line_19 $$ final Ref<Manifest> manifestRef = Ref.create(null)-->Line_27 $$ if (!manifestRef.isNull()) [ FD ]
