Line_4 $$ if (!oldText.equals(newValue)) -->Line_5 $$ mySegments.setNeighboursGreedy(segmentNumber, false)[ CD ]
Line_2 $$ private void replaceString(String newValue, int start, int end, int segmentNumber) -->Line_5 $$ mySegments.setNeighboursGreedy(segmentNumber, false)[ FD ]
Line_2 $$ private void replaceString(String newValue, int start, int end, int segmentNumber) -->Line_6 $$ myDocument.replaceString(start, end, newValue)[ FD ]
Line_4 $$ if (!oldText.equals(newValue)) -->Line_10 $$ fixOverlappedSegments(segmentNumber)[ CD ]
Line_2 $$ private void replaceString(String newValue, int start, int end, int segmentNumber) -->Line_4 $$ if (!oldText.equals(newValue)) [ FD ]
Line_4 $$ if (!oldText.equals(newValue)) -->Line_8 $$ mySegments.replaceSegmentAt(segmentNumber, start, newEnd)[ CD ]
Line_2 $$ private void replaceString(String newValue, int start, int end, int segmentNumber) -->Line_8 $$ mySegments.replaceSegmentAt(segmentNumber, start, newEnd)[ FD ]
Line_2 $$ private void replaceString(String newValue, int start, int end, int segmentNumber) -->Line_3 $$ String oldText = myDocument.getCharsSequence().subSequence(start, end).toString()[ CD ]
Line_2 $$ private void replaceString(String newValue, int start, int end, int segmentNumber) -->Line_7 $$ int newEnd = start + newValue.length()[ FD ]
Line_2 $$ private void replaceString(String newValue, int start, int end, int segmentNumber) -->Line_9 $$ mySegments.setNeighboursGreedy(segmentNumber, true)[ FD ]
Line_3 $$ String oldText = myDocument.getCharsSequence().subSequence(start, end).toString()-->Line_4 $$ if (!oldText.equals(newValue)) [ FD ]
Line_2 $$ private void replaceString(String newValue, int start, int end, int segmentNumber) -->Line_3 $$ String oldText = myDocument.getCharsSequence().subSequence(start, end).toString()[ FD ]
Line_7 $$ int newEnd = start + newValue.length()-->Line_8 $$ mySegments.replaceSegmentAt(segmentNumber, start, newEnd)[ FD ]
Line_4 $$ if (!oldText.equals(newValue)) -->Line_9 $$ mySegments.setNeighboursGreedy(segmentNumber, true)[ CD ]
Line_2 $$ private void replaceString(String newValue, int start, int end, int segmentNumber) -->Line_10 $$ fixOverlappedSegments(segmentNumber)[ FD ]
Line_4 $$ if (!oldText.equals(newValue)) -->Line_7 $$ int newEnd = start + newValue.length()[ CD ]
Line_2 $$ private void replaceString(String newValue, int start, int end, int segmentNumber) -->Line_4 $$ if (!oldText.equals(newValue)) [ CD ]
Line_4 $$ if (!oldText.equals(newValue)) -->Line_6 $$ myDocument.replaceString(start, end, newValue)[ CD ]
