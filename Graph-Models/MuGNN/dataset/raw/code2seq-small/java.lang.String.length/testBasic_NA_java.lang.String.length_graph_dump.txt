Line_4 $$ final String source = "-->Line_5 $$ indexRandom(true, client().prepareIndex("test", "type", "1").setSource(source))[ FD ]
Line_2 $$ public void testBasic() throws Exception -->Line_3 $$ assertAcked(prepareCreate("test").addMapping("type", "_size", "enabled=true"))[ CD ]
Line_2 $$ public void testBasic() throws Exception -->Line_7 $$ assertNotNull(getResponse.getField("_size"))[ CD ]
Line_2 $$ public void testBasic() throws Exception -->Line_4 $$ final String source = "[ CD ]
Line_6 $$ GetResponse getResponse = client().prepareGet("test", "type", "1").setFields("_size").get()-->Line_7 $$ assertNotNull(getResponse.getField("_size"))[ FD ]
Line_6 $$ GetResponse getResponse = client().prepareGet("test", "type", "1").setFields("_size").get()-->Line_8 $$ assertEquals(source.length(), getResponse.getField("_size").getValue())[ FD ]
Line_4 $$ final String source = "-->Line_8 $$ assertEquals(source.length(), getResponse.getField("_size").getValue())[ FD ]
Line_2 $$ public void testBasic() throws Exception -->Line_6 $$ GetResponse getResponse = client().prepareGet("test", "type", "1").setFields("_size").get()[ CD ]
Line_2 $$ public void testBasic() throws Exception -->Line_8 $$ assertEquals(source.length(), getResponse.getField("_size").getValue())[ CD ]
Line_2 $$ public void testBasic() throws Exception -->Line_5 $$ indexRandom(true, client().prepareIndex("test", "type", "1").setSource(source))[ CD ]
