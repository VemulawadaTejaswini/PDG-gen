Line_14 $$ if (tagMatcher != null) -->Line_18 $$ final int linesCount = getLineCount()[ CD ]
Line_16 $$ final Substring argName = line.getMatcherGroup(tagMatcher, 2).trim()-->Line_31 $$ if (argName.isEmpty()) [ FD ]
Line_2 $$ protected int parseTag(int lineno, String tagPrefix) -->Line_5 $$ final Substring line = lineWithPrefix.substring(tagPrefix.length())[ FD ]
Line_17 $$ final TextRange firstArgLineRange = line.getMatcherGroup(tagMatcher, 3).trim().getTextRange()-->Line_20 $$ int argEnd = firstArgLineRange.getEndOffset()[ FD ]
Line_16 $$ final Substring argName = line.getMatcherGroup(tagMatcher, 2).trim()-->Line_44 $$ getTagValuesMap(tagNameString).put(argName, argValue)[ FD ]
Line_38 $$ final Substring arg = argName.getMatcherGroup(argTypeMatcher, 2)-->Line_39 $$ getTagValuesMap(TYPE).put(arg, type)[ FD ]
Line_18 $$ final int linesCount = getLineCount()-->Line_21 $$ while (lineno + 1 < linesCount) [ FD ]
Line_12 $$ tagMatcher = looseTagMatcher-->Line_17 $$ final TextRange firstArgLineRange = line.getMatcherGroup(tagMatcher, 3).trim().getTextRange()[ FD ]
Line_10 $$ tagMatcher = strictTagMatcher-->Line_12 $$ tagMatcher = looseTagMatcher[ FD ]
Line_12 $$ tagMatcher = looseTagMatcher-->Line_14 $$ if (tagMatcher != null) [ FD ]
Line_4 $$ if (lineWithPrefix.startsWith(tagPrefix)) -->Line_6 $$ final Matcher strictTagMatcher = RE_STRICT_TAG_LINE.matcher(line)[ CD ]
Line_35 $$ final Matcher argTypeMatcher = RE_ARG_TYPE.matcher(argName)-->Line_37 $$ final Substring type = argName.getMatcherGroup(argTypeMatcher, 1).trim()[ FD ]
Line_14 $$ if (tagMatcher != null) -->Line_15 $$ final Substring tagName = line.getMatcherGroup(tagMatcher, 1)[ CD ]
Line_21 $$ while (lineno + 1 < linesCount) -->Line_22 $$ final Substring nextLine = getLine(lineno + 1).trim()[ CD ]
Line_11 $$ if (looseTagMatcher.matches()) -->Line_12 $$ tagMatcher = looseTagMatcher[ CD ]
Line_5 $$ final Substring line = lineWithPrefix.substring(tagPrefix.length())-->Line_15 $$ final Substring tagName = line.getMatcherGroup(tagMatcher, 1)[ FD ]
Line_4 $$ if (lineWithPrefix.startsWith(tagPrefix)) -->Line_14 $$ if (tagMatcher != null) [ CD ]
Line_16 $$ final Substring argName = line.getMatcherGroup(tagMatcher, 2).trim()-->Line_29 $$ final Substring argValue = new Substring(argName.getSuperString(), argStart, argEnd)[ FD ]
Line_2 $$ protected int parseTag(int lineno, String tagPrefix) -->Line_49 $$ return lineno[ CD ]
Line_12 $$ tagMatcher = looseTagMatcher-->Line_15 $$ final Substring tagName = line.getMatcherGroup(tagMatcher, 1)[ FD ]
Line_10 $$ tagMatcher = strictTagMatcher-->Line_17 $$ final TextRange firstArgLineRange = line.getMatcherGroup(tagMatcher, 3).trim().getTextRange()[ FD ]
Line_36 $$ if (argTypeMatcher.matches()) -->Line_39 $$ getTagValuesMap(TYPE).put(arg, type)[ CD ]
Line_37 $$ final Substring type = argName.getMatcherGroup(argTypeMatcher, 1).trim()-->Line_39 $$ getTagValuesMap(TYPE).put(arg, type)[ FD ]
Line_16 $$ final Substring argName = line.getMatcherGroup(tagMatcher, 2).trim()-->Line_38 $$ final Substring arg = argName.getMatcherGroup(argTypeMatcher, 2)[ FD ]
Line_10 $$ tagMatcher = strictTagMatcher-->Line_15 $$ final Substring tagName = line.getMatcherGroup(tagMatcher, 1)[ FD ]
Line_15 $$ final Substring tagName = line.getMatcherGroup(tagMatcher, 1)-->Line_30 $$ final String tagNameString = tagName.toString()[ FD ]
Line_14 $$ if (tagMatcher != null) -->Line_21 $$ while (lineno + 1 < linesCount) [ CD ]
Line_16 $$ final Substring argName = line.getMatcherGroup(tagMatcher, 2).trim()-->Line_37 $$ final Substring type = argName.getMatcherGroup(argTypeMatcher, 1).trim()[ FD ]
Line_5 $$ final Substring line = lineWithPrefix.substring(tagPrefix.length())-->Line_7 $$ final Matcher looseTagMatcher = RE_LOOSE_TAG_LINE.matcher(line)[ FD ]
Line_2 $$ protected int parseTag(int lineno, String tagPrefix) -->Line_23 $$ if (nextLine.isEmpty() || nextLine.startsWith(tagPrefix)) [ FD ]
Line_7 $$ final Matcher looseTagMatcher = RE_LOOSE_TAG_LINE.matcher(line)-->Line_12 $$ tagMatcher = looseTagMatcher[ FD ]
Line_36 $$ if (argTypeMatcher.matches()) -->Line_37 $$ final Substring type = argName.getMatcherGroup(argTypeMatcher, 1).trim()[ CD ]
Line_29 $$ final Substring argValue = new Substring(argName.getSuperString(), argStart, argEnd)-->Line_41 $$ getTagValuesMap(tagNameString).put(argName, argValue)[ FD ]
Line_30 $$ final String tagNameString = tagName.toString()-->Line_44 $$ getTagValuesMap(tagNameString).put(argName, argValue)[ FD ]
Line_30 $$ final String tagNameString = tagName.toString()-->Line_34 $$ if ("param".equals(tagNameString) || "parameter".equals(tagNameString) || "arg".equals(tagNameString) || "argument".equals(tagNameString)) [ FD ]
Line_34 $$ if ("param".equals(tagNameString) || "parameter".equals(tagNameString) || "arg".equals(tagNameString) || "argument".equals(tagNameString)) -->Line_36 $$ if (argTypeMatcher.matches()) [ CD ]
Line_30 $$ final String tagNameString = tagName.toString()-->Line_32 $$ mySimpleTagValues.put(tagNameString, argValue)[ FD ]
Line_4 $$ if (lineWithPrefix.startsWith(tagPrefix)) -->Line_8 $$ Matcher tagMatcher = null[ CD ]
Line_2 $$ protected int parseTag(int lineno, String tagPrefix) -->Line_4 $$ if (lineWithPrefix.startsWith(tagPrefix)) [ CD ]
Line_14 $$ if (tagMatcher != null) -->Line_19 $$ final int argStart = firstArgLineRange.getStartOffset()[ CD ]
Line_35 $$ final Matcher argTypeMatcher = RE_ARG_TYPE.matcher(argName)-->Line_36 $$ if (argTypeMatcher.matches()) [ FD ]
Line_6 $$ final Matcher strictTagMatcher = RE_STRICT_TAG_LINE.matcher(line)-->Line_9 $$ if (strictTagMatcher.matches()) [ FD ]
Line_4 $$ if (lineWithPrefix.startsWith(tagPrefix)) -->Line_9 $$ if (strictTagMatcher.matches()) [ CD ]
Line_5 $$ final Substring line = lineWithPrefix.substring(tagPrefix.length())-->Line_16 $$ final Substring argName = line.getMatcherGroup(tagMatcher, 2).trim()[ FD ]
Line_29 $$ final Substring argValue = new Substring(argName.getSuperString(), argStart, argEnd)-->Line_44 $$ getTagValuesMap(tagNameString).put(argName, argValue)[ FD ]
Line_2 $$ protected int parseTag(int lineno, String tagPrefix) -->Line_27 $$ lineno++[ FD ]
Line_10 $$ tagMatcher = strictTagMatcher-->Line_14 $$ if (tagMatcher != null) [ FD ]
Line_9 $$ if (strictTagMatcher.matches()) -->Line_10 $$ tagMatcher = strictTagMatcher[ CD ]
Line_7 $$ final Matcher looseTagMatcher = RE_LOOSE_TAG_LINE.matcher(line)-->Line_11 $$ if (looseTagMatcher.matches()) [ FD ]
Line_2 $$ protected int parseTag(int lineno, String tagPrefix) -->Line_4 $$ if (lineWithPrefix.startsWith(tagPrefix)) [ FD ]
Line_3 $$ final Substring lineWithPrefix = getLine(lineno).trimLeft()-->Line_4 $$ if (lineWithPrefix.startsWith(tagPrefix)) [ FD ]
Line_8 $$ Matcher tagMatcher = null-->Line_16 $$ final Substring argName = line.getMatcherGroup(tagMatcher, 2).trim()[ FD ]
Line_17 $$ final TextRange firstArgLineRange = line.getMatcherGroup(tagMatcher, 3).trim().getTextRange()-->Line_19 $$ final int argStart = firstArgLineRange.getStartOffset()[ FD ]
Line_8 $$ Matcher tagMatcher = null-->Line_15 $$ final Substring tagName = line.getMatcherGroup(tagMatcher, 1)[ FD ]
Line_14 $$ if (tagMatcher != null) -->Line_31 $$ if (argName.isEmpty()) [ CD ]
Line_21 $$ while (lineno + 1 < linesCount) -->Line_26 $$ argEnd = nextLine.getTextRange().getEndOffset()[ CD ]
Line_34 $$ if ("param".equals(tagNameString) || "parameter".equals(tagNameString) || "arg".equals(tagNameString) || "argument".equals(tagNameString)) -->Line_35 $$ final Matcher argTypeMatcher = RE_ARG_TYPE.matcher(argName)[ CD ]
Line_14 $$ if (tagMatcher != null) -->Line_17 $$ final TextRange firstArgLineRange = line.getMatcherGroup(tagMatcher, 3).trim().getTextRange()[ CD ]
Line_8 $$ Matcher tagMatcher = null-->Line_17 $$ final TextRange firstArgLineRange = line.getMatcherGroup(tagMatcher, 3).trim().getTextRange()[ FD ]
Line_3 $$ final Substring lineWithPrefix = getLine(lineno).trimLeft()-->Line_5 $$ final Substring line = lineWithPrefix.substring(tagPrefix.length())[ FD ]
Line_31 $$ if (argName.isEmpty()) -->Line_32 $$ mySimpleTagValues.put(tagNameString, argValue)[ CD ]
Line_4 $$ if (lineWithPrefix.startsWith(tagPrefix)) -->Line_5 $$ final Substring line = lineWithPrefix.substring(tagPrefix.length())[ CD ]
Line_8 $$ Matcher tagMatcher = null-->Line_12 $$ tagMatcher = looseTagMatcher[ FD ]
Line_21 $$ while (lineno + 1 < linesCount) -->Line_27 $$ lineno++[ CD ]
Line_16 $$ final Substring argName = line.getMatcherGroup(tagMatcher, 2).trim()-->Line_35 $$ final Matcher argTypeMatcher = RE_ARG_TYPE.matcher(argName)[ FD ]
Line_5 $$ final Substring line = lineWithPrefix.substring(tagPrefix.length())-->Line_17 $$ final TextRange firstArgLineRange = line.getMatcherGroup(tagMatcher, 3).trim().getTextRange()[ FD ]
Line_5 $$ final Substring line = lineWithPrefix.substring(tagPrefix.length())-->Line_6 $$ final Matcher strictTagMatcher = RE_STRICT_TAG_LINE.matcher(line)[ FD ]
Line_34 $$ if ("param".equals(tagNameString) || "parameter".equals(tagNameString) || "arg".equals(tagNameString) || "argument".equals(tagNameString)) -->Line_44 $$ getTagValuesMap(tagNameString).put(argName, argValue)[ CD ]
Line_6 $$ final Matcher strictTagMatcher = RE_STRICT_TAG_LINE.matcher(line)-->Line_10 $$ tagMatcher = strictTagMatcher[ FD ]
Line_16 $$ final Substring argName = line.getMatcherGroup(tagMatcher, 2).trim()-->Line_41 $$ getTagValuesMap(tagNameString).put(argName, argValue)[ FD ]
Line_22 $$ final Substring nextLine = getLine(lineno + 1).trim()-->Line_26 $$ argEnd = nextLine.getTextRange().getEndOffset()[ FD ]
Line_14 $$ if (tagMatcher != null) -->Line_16 $$ final Substring argName = line.getMatcherGroup(tagMatcher, 2).trim()[ CD ]
Line_21 $$ while (lineno + 1 < linesCount) -->Line_23 $$ if (nextLine.isEmpty() || nextLine.startsWith(tagPrefix)) [ CD ]
Line_22 $$ final Substring nextLine = getLine(lineno + 1).trim()-->Line_23 $$ if (nextLine.isEmpty() || nextLine.startsWith(tagPrefix)) [ FD ]
Line_14 $$ if (tagMatcher != null) -->Line_29 $$ final Substring argValue = new Substring(argName.getSuperString(), argStart, argEnd)[ CD ]
Line_14 $$ if (tagMatcher != null) -->Line_20 $$ int argEnd = firstArgLineRange.getEndOffset()[ CD ]
Line_29 $$ final Substring argValue = new Substring(argName.getSuperString(), argStart, argEnd)-->Line_32 $$ mySimpleTagValues.put(tagNameString, argValue)[ FD ]
Line_35 $$ final Matcher argTypeMatcher = RE_ARG_TYPE.matcher(argName)-->Line_38 $$ final Substring arg = argName.getMatcherGroup(argTypeMatcher, 2)[ FD ]
Line_8 $$ Matcher tagMatcher = null-->Line_10 $$ tagMatcher = strictTagMatcher[ FD ]
Line_9 $$ if (strictTagMatcher.matches()) -->Line_11 $$ if (looseTagMatcher.matches()) [ CD ]
Line_30 $$ final String tagNameString = tagName.toString()-->Line_41 $$ getTagValuesMap(tagNameString).put(argName, argValue)[ FD ]
Line_2 $$ protected int parseTag(int lineno, String tagPrefix) -->Line_3 $$ final Substring lineWithPrefix = getLine(lineno).trimLeft()[ CD ]
Line_12 $$ tagMatcher = looseTagMatcher-->Line_16 $$ final Substring argName = line.getMatcherGroup(tagMatcher, 2).trim()[ FD ]
Line_36 $$ if (argTypeMatcher.matches()) -->Line_41 $$ getTagValuesMap(tagNameString).put(argName, argValue)[ CD ]
Line_4 $$ if (lineWithPrefix.startsWith(tagPrefix)) -->Line_7 $$ final Matcher looseTagMatcher = RE_LOOSE_TAG_LINE.matcher(line)[ CD ]
Line_8 $$ Matcher tagMatcher = null-->Line_14 $$ if (tagMatcher != null) [ FD ]
Line_20 $$ int argEnd = firstArgLineRange.getEndOffset()-->Line_26 $$ argEnd = nextLine.getTextRange().getEndOffset()[ FD ]
Line_2 $$ protected int parseTag(int lineno, String tagPrefix) -->Line_3 $$ final Substring lineWithPrefix = getLine(lineno).trimLeft()[ FD ]
Line_14 $$ if (tagMatcher != null) -->Line_30 $$ final String tagNameString = tagName.toString()[ CD ]
Line_36 $$ if (argTypeMatcher.matches()) -->Line_38 $$ final Substring arg = argName.getMatcherGroup(argTypeMatcher, 2)[ CD ]
Line_10 $$ tagMatcher = strictTagMatcher-->Line_16 $$ final Substring argName = line.getMatcherGroup(tagMatcher, 2).trim()[ FD ]
Line_31 $$ if (argName.isEmpty()) -->Line_34 $$ if ("param".equals(tagNameString) || "parameter".equals(tagNameString) || "arg".equals(tagNameString) || "argument".equals(tagNameString)) [ CD ]
