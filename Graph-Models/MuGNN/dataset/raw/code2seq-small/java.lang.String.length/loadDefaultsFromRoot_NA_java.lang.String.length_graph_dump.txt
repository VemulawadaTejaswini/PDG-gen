Line_8 $$ for (String path : children) -->Line_9 $$ if (path.equals("default.html")) [ FD ]
Line_19 $$ final String prefix = entry.getKey()-->Line_26 $$ final String descriptionPath = getDescriptionPath(prefix, templateName, extension, descriptionPaths)[ FD ]
Line_22 $$ final String filename = path.substring(prefix.length(), path.length() - FTManager.TEMPLATE_EXTENSION_SUFFIX.length())-->Line_24 $$ final String templateName = filename.substring(0, filename.length() - extension.length() - 1)[ FD ]
Line_21 $$ if (path.endsWith(FTManager.TEMPLATE_EXTENSION_SUFFIX)) -->Line_26 $$ final String descriptionPath = getDescriptionPath(prefix, templateName, extension, descriptionPaths)[ CD ]
Line_11 $$ if (path.equals("includes/default.html")) -->Line_12 $$ myDefaultIncludeDescription = UrlClassLoader.internProtocol(new URL(root.toExternalForm() + "/" + path))[ CD ]
Line_2 $$ private void loadDefaultsFromRoot(final URL root) throws IOException -->Line_27 $$ final URL descriptionUrl = descriptionPath != null ? UrlClassLoader.internProtocol(new URL(root.toExternalForm() + "/" + descriptionPath)) : null[ FD ]
Line_2 $$ private void loadDefaultsFromRoot(final URL root) throws IOException -->Line_10 $$ myDefaultTemplateDescription = UrlClassLoader.internProtocol(new URL(root.toExternalForm() + "/" + path))[ FD ]
Line_8 $$ for (String path : children) -->Line_21 $$ if (path.endsWith(FTManager.TEMPLATE_EXTENSION_SUFFIX)) [ FD ]
Line_20 $$ if (matchesPrefix(path, prefix)) -->Line_21 $$ if (path.endsWith(FTManager.TEMPLATE_EXTENSION_SUFFIX)) [ CD ]
Line_19 $$ final String prefix = entry.getKey()-->Line_20 $$ if (matchesPrefix(path, prefix)) [ FD ]
Line_13 $$ if (path.endsWith(DESCRIPTION_EXTENSION_SUFFIX)) -->Line_14 $$ descriptionPaths.add(path)[ CD ]
Line_21 $$ if (path.endsWith(FTManager.TEMPLATE_EXTENSION_SUFFIX)) -->Line_22 $$ final String filename = path.substring(prefix.length(), path.length() - FTManager.TEMPLATE_EXTENSION_SUFFIX.length())[ CD ]
Line_22 $$ final String filename = path.substring(prefix.length(), path.length() - FTManager.TEMPLATE_EXTENSION_SUFFIX.length())-->Line_23 $$ final String extension = myTypeManager.getExtension(filename)[ FD ]
Line_24 $$ final String templateName = filename.substring(0, filename.length() - extension.length() - 1)-->Line_26 $$ final String descriptionPath = getDescriptionPath(prefix, templateName, extension, descriptionPaths)[ FD ]
Line_2 $$ private void loadDefaultsFromRoot(final URL root) throws IOException -->Line_3 $$ final List<String> children = UrlUtil.getChildrenRelativePaths(root)[ CD ]
Line_8 $$ for (String path : children) -->Line_11 $$ if (path.equals("includes/default.html")) [ FD ]
Line_21 $$ if (path.endsWith(FTManager.TEMPLATE_EXTENSION_SUFFIX)) -->Line_29 $$ entry.getValue().addDefaultTemplate(new DefaultTemplate(templateName, extension, templateUrl, descriptionUrl))[ CD ]
Line_7 $$ final Set<String> descriptionPaths = new HashSet<String>()-->Line_26 $$ final String descriptionPath = getDescriptionPath(prefix, templateName, extension, descriptionPaths)[ FD ]
Line_8 $$ for (String path : children) -->Line_20 $$ if (matchesPrefix(path, prefix)) [ FD ]
Line_9 $$ if (path.equals("default.html")) -->Line_11 $$ if (path.equals("includes/default.html")) [ CD ]
Line_2 $$ private void loadDefaultsFromRoot(final URL root) throws IOException -->Line_7 $$ final Set<String> descriptionPaths = new HashSet<String>()[ CD ]
Line_8 $$ for (String path : children) -->Line_22 $$ final String filename = path.substring(prefix.length(), path.length() - FTManager.TEMPLATE_EXTENSION_SUFFIX.length())[ FD ]
Line_19 $$ final String prefix = entry.getKey()-->Line_22 $$ final String filename = path.substring(prefix.length(), path.length() - FTManager.TEMPLATE_EXTENSION_SUFFIX.length())[ FD ]
Line_2 $$ private void loadDefaultsFromRoot(final URL root) throws IOException -->Line_4 $$ if (children.isEmpty()) [ CD ]
Line_21 $$ if (path.endsWith(FTManager.TEMPLATE_EXTENSION_SUFFIX)) -->Line_24 $$ final String templateName = filename.substring(0, filename.length() - extension.length() - 1)[ CD ]
Line_8 $$ for (String path : children) -->Line_14 $$ descriptionPaths.add(path)[ FD ]
Line_23 $$ final String extension = myTypeManager.getExtension(filename)-->Line_26 $$ final String descriptionPath = getDescriptionPath(prefix, templateName, extension, descriptionPaths)[ FD ]
Line_2 $$ private void loadDefaultsFromRoot(final URL root) throws IOException -->Line_3 $$ final List<String> children = UrlUtil.getChildrenRelativePaths(root)[ FD ]
Line_2 $$ private void loadDefaultsFromRoot(final URL root) throws IOException -->Line_12 $$ myDefaultIncludeDescription = UrlClassLoader.internProtocol(new URL(root.toExternalForm() + "/" + path))[ FD ]
Line_4 $$ if (children.isEmpty()) -->Line_5 $$ return[ CD ]
Line_21 $$ if (path.endsWith(FTManager.TEMPLATE_EXTENSION_SUFFIX)) -->Line_23 $$ final String extension = myTypeManager.getExtension(filename)[ CD ]
Line_2 $$ private void loadDefaultsFromRoot(final URL root) throws IOException -->Line_25 $$ final URL templateUrl = UrlClassLoader.internProtocol(new URL(root.toExternalForm() + "/" + path))[ FD ]
Line_8 $$ for (String path : children) -->Line_13 $$ if (path.endsWith(DESCRIPTION_EXTENSION_SUFFIX)) [ FD ]
Line_18 $$ for (Map.Entry<String, FTManager> entry : myDirToManagerMap.entrySet()) -->Line_19 $$ final String prefix = entry.getKey()[ FD ]
Line_21 $$ if (path.endsWith(FTManager.TEMPLATE_EXTENSION_SUFFIX)) -->Line_25 $$ final URL templateUrl = UrlClassLoader.internProtocol(new URL(root.toExternalForm() + "/" + path))[ CD ]
Line_21 $$ if (path.endsWith(FTManager.TEMPLATE_EXTENSION_SUFFIX)) -->Line_27 $$ final URL descriptionUrl = descriptionPath != null ? UrlClassLoader.internProtocol(new URL(root.toExternalForm() + "/" + descriptionPath)) : null[ CD ]
Line_9 $$ if (path.equals("default.html")) -->Line_10 $$ myDefaultTemplateDescription = UrlClassLoader.internProtocol(new URL(root.toExternalForm() + "/" + path))[ CD ]
Line_11 $$ if (path.equals("includes/default.html")) -->Line_13 $$ if (path.endsWith(DESCRIPTION_EXTENSION_SUFFIX)) [ CD ]
Line_18 $$ for (Map.Entry<String, FTManager> entry : myDirToManagerMap.entrySet()) -->Line_29 $$ entry.getValue().addDefaultTemplate(new DefaultTemplate(templateName, extension, templateUrl, descriptionUrl))[ FD ]
Line_7 $$ final Set<String> descriptionPaths = new HashSet<String>()-->Line_14 $$ descriptionPaths.add(path)[ FD ]
Line_3 $$ final List<String> children = UrlUtil.getChildrenRelativePaths(root)-->Line_4 $$ if (children.isEmpty()) [ FD ]
Line_23 $$ final String extension = myTypeManager.getExtension(filename)-->Line_24 $$ final String templateName = filename.substring(0, filename.length() - extension.length() - 1)[ FD ]
