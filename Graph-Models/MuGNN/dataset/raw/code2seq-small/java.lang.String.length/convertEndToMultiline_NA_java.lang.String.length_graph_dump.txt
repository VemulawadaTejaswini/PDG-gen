Line_2 $$ private static void convertEndToMultiline(int caretOffset, Document document, String fileText, char c) -->Line_3 $$ if (caretOffset < fileText.length() && fileText.charAt(caretOffset) == c || caretOffset > 0 && fileText.charAt(caretOffset - 1) == c) [ FD ]
Line_2 $$ private static void convertEndToMultiline(int caretOffset, Document document, String fileText, char c) -->Line_6 $$ document.insertString(caretOffset, new CharArrayCharSequence(c, c, c))[ FD ]
Line_3 $$ if (caretOffset < fileText.length() && fileText.charAt(caretOffset) == c || caretOffset > 0 && fileText.charAt(caretOffset - 1) == c) -->Line_6 $$ document.insertString(caretOffset, new CharArrayCharSequence(c, c, c))[ CD ]
Line_2 $$ private static void convertEndToMultiline(int caretOffset, Document document, String fileText, char c) -->Line_4 $$ document.insertString(caretOffset, new CharArrayCharSequence(c, c))[ FD ]
Line_2 $$ private static void convertEndToMultiline(int caretOffset, Document document, String fileText, char c) -->Line_3 $$ if (caretOffset < fileText.length() && fileText.charAt(caretOffset) == c || caretOffset > 0 && fileText.charAt(caretOffset - 1) == c) [ CD ]
Line_3 $$ if (caretOffset < fileText.length() && fileText.charAt(caretOffset) == c || caretOffset > 0 && fileText.charAt(caretOffset - 1) == c) -->Line_4 $$ document.insertString(caretOffset, new CharArrayCharSequence(c, c))[ CD ]
