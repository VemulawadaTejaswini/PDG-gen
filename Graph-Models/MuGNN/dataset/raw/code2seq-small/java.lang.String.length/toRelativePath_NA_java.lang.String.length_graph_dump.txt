Line_3 $$ path = normalizePath(path)-->Line_8 $$ if (!substitutedPath.equals(path)) [ FD ]
Line_19 $$ if (relativepath != null) -->Line_22 $$ return ".".equals(_relativePath) ? root : root + "/" + _relativePath[ CD ]
Line_12 $$ File base-->Line_14 $$ base = baseDir.getCanonicalFile()[ FD ]
Line_8 $$ if (!substitutedPath.equals(path)) -->Line_9 $$ return substitutedPath[ CD ]
Line_19 $$ if (relativepath != null) -->Line_20 $$ final String _relativePath = relativepath.replace(File.separatorChar, '/')[ CD ]
Line_2 $$ public static String toRelativePath(String path, File baseDir, @NonNls final String baseDirPropertyName, GenerationOptions genOptions) -->Line_11 $$ if (baseDir != null) [ CD ]
Line_2 $$ public static String toRelativePath(String path, File baseDir, @NonNls final String baseDirPropertyName, GenerationOptions genOptions) -->Line_8 $$ if (!substitutedPath.equals(path)) [ FD ]
Line_2 $$ public static String toRelativePath(String path, File baseDir, @NonNls final String baseDirPropertyName, GenerationOptions genOptions) -->Line_3 $$ path = normalizePath(path)[ CD ]
Line_4 $$ if (path.length() == 0) -->Line_5 $$ return path[ CD ]
Line_11 $$ if (baseDir != null) -->Line_19 $$ if (relativepath != null) [ CD ]
Line_18 $$ final String relativepath = FileUtil.getRelativePath(base, new File(path))-->Line_20 $$ final String _relativePath = relativepath.replace(File.separatorChar, '/')[ FD ]
Line_2 $$ public static String toRelativePath(String path, File baseDir, @NonNls final String baseDirPropertyName, GenerationOptions genOptions) -->Line_4 $$ if (path.length() == 0) [ FD ]
Line_2 $$ public static String toRelativePath(String path, File baseDir, @NonNls final String baseDirPropertyName, GenerationOptions genOptions) -->Line_3 $$ path = normalizePath(path)[ FD ]
Line_2 $$ public static String toRelativePath(String path, File baseDir, @NonNls final String baseDirPropertyName, GenerationOptions genOptions) -->Line_8 $$ if (!substitutedPath.equals(path)) [ CD ]
Line_2 $$ public static String toRelativePath(String path, File baseDir, @NonNls final String baseDirPropertyName, GenerationOptions genOptions) -->Line_11 $$ if (baseDir != null) [ FD ]
Line_2 $$ public static String toRelativePath(String path, File baseDir, @NonNls final String baseDirPropertyName, GenerationOptions genOptions) -->Line_7 $$ final String substitutedPath = genOptions.subsitutePathWithMacros(path)[ FD ]
Line_11 $$ if (baseDir != null) -->Line_18 $$ final String relativepath = FileUtil.getRelativePath(base, new File(path))[ CD ]
Line_16 $$ base = baseDir-->Line_18 $$ final String relativepath = FileUtil.getRelativePath(base, new File(path))[ FD ]
Line_14 $$ base = baseDir.getCanonicalFile()-->Line_18 $$ final String relativepath = FileUtil.getRelativePath(base, new File(path))[ FD ]
Line_3 $$ path = normalizePath(path)-->Line_4 $$ if (path.length() == 0) [ FD ]
Line_2 $$ public static String toRelativePath(String path, File baseDir, @NonNls final String baseDirPropertyName, GenerationOptions genOptions) -->Line_7 $$ final String substitutedPath = genOptions.subsitutePathWithMacros(path)[ CD ]
Line_2 $$ public static String toRelativePath(String path, File baseDir, @NonNls final String baseDirPropertyName, GenerationOptions genOptions) -->Line_14 $$ base = baseDir.getCanonicalFile()[ FD ]
Line_20 $$ final String _relativePath = relativepath.replace(File.separatorChar, '/')-->Line_22 $$ return ".".equals(_relativePath) ? root : root + "/" + _relativePath[ FD ]
Line_11 $$ if (baseDir != null) -->Line_12 $$ File base[ CD ]
Line_2 $$ public static String toRelativePath(String path, File baseDir, @NonNls final String baseDirPropertyName, GenerationOptions genOptions) -->Line_16 $$ base = baseDir[ FD ]
Line_14 $$ base = baseDir.getCanonicalFile()-->Line_16 $$ base = baseDir[ FD ]
Line_19 $$ if (relativepath != null) -->Line_21 $$ final String root = BuildProperties.propertyRef(baseDirPropertyName)[ CD ]
Line_2 $$ public static String toRelativePath(String path, File baseDir, @NonNls final String baseDirPropertyName, GenerationOptions genOptions) -->Line_25 $$ return substitutedPath[ CD ]
Line_2 $$ public static String toRelativePath(String path, File baseDir, @NonNls final String baseDirPropertyName, GenerationOptions genOptions) -->Line_21 $$ final String root = BuildProperties.propertyRef(baseDirPropertyName)[ FD ]
Line_12 $$ File base-->Line_18 $$ final String relativepath = FileUtil.getRelativePath(base, new File(path))[ FD ]
Line_3 $$ path = normalizePath(path)-->Line_7 $$ final String substitutedPath = genOptions.subsitutePathWithMacros(path)[ FD ]
Line_7 $$ final String substitutedPath = genOptions.subsitutePathWithMacros(path)-->Line_8 $$ if (!substitutedPath.equals(path)) [ FD ]
Line_18 $$ final String relativepath = FileUtil.getRelativePath(base, new File(path))-->Line_19 $$ if (relativepath != null) [ FD ]
Line_12 $$ File base-->Line_16 $$ base = baseDir[ FD ]
Line_2 $$ public static String toRelativePath(String path, File baseDir, @NonNls final String baseDirPropertyName, GenerationOptions genOptions) -->Line_4 $$ if (path.length() == 0) [ CD ]
