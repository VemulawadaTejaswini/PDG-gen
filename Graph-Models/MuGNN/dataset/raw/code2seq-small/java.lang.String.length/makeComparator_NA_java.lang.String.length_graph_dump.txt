Line_11 $$ Class compClass = Class.forName(compClassName)-->Line_12 $$ return new BytesComparator((RawComparator<Object>) compClass.newInstance())[ FD ]
Line_2 $$ static BytesComparator makeComparator(String comparator) -->Line_3 $$ if (comparator.length() == 0) [ CD ]
Line_3 $$ if (comparator.length() == 0) -->Line_4 $$ return null[ CD ]
Line_2 $$ static BytesComparator makeComparator(String comparator) -->Line_9 $$ String compClassName = comparator.substring(COMPARATOR_JCLASS.length()).trim()[ FD ]
Line_2 $$ static BytesComparator makeComparator(String comparator) -->Line_6 $$ if (comparator.equals(COMPARATOR_MEMCMP)) [ CD ]
Line_2 $$ static BytesComparator makeComparator(String comparator) -->Line_6 $$ if (comparator.equals(COMPARATOR_MEMCMP)) [ FD ]
Line_6 $$ if (comparator.equals(COMPARATOR_MEMCMP)) -->Line_8 $$ if (comparator.startsWith(COMPARATOR_JCLASS)) [ CD ]
Line_2 $$ static BytesComparator makeComparator(String comparator) -->Line_3 $$ if (comparator.length() == 0) [ FD ]
Line_8 $$ if (comparator.startsWith(COMPARATOR_JCLASS)) -->Line_9 $$ String compClassName = comparator.substring(COMPARATOR_JCLASS.length()).trim()[ CD ]
Line_9 $$ String compClassName = comparator.substring(COMPARATOR_JCLASS.length()).trim()-->Line_11 $$ Class compClass = Class.forName(compClassName)[ FD ]
Line_2 $$ static BytesComparator makeComparator(String comparator) -->Line_8 $$ if (comparator.startsWith(COMPARATOR_JCLASS)) [ FD ]
Line_6 $$ if (comparator.equals(COMPARATOR_MEMCMP)) -->Line_7 $$ return new BytesComparator(new MemcmpRawComparator())[ CD ]
