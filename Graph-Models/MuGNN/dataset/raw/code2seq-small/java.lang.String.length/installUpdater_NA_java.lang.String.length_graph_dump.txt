Line_20 $$ SwingUtilities.invokeLater(new Runnable() -->Line_24 $$ myTree.repaint()[ CD ]
Line_30 $$ if (!box.isSelected()) -->Line_32 $$ myTriggeredCheckboxes.add(0, Pair.create(filter, box))[ CD ]
Line_29 $$ for (JCheckBox box : myCheckBoxes.values()) -->Line_32 $$ myTriggeredCheckboxes.add(0, Pair.create(filter, box))[ FD ]
Line_7 $$ alarm.addRequest(new Runnable() -->Line_11 $$ String prefix = mySpeedSearch.getEnteredPrefix()[ CD ]
Line_30 $$ if (!box.isSelected()) -->Line_31 $$ myAutoClicked.add(box)[ CD ]
Line_2 $$ private void installUpdater() -->Line_3 $$ if (ApplicationManager.getApplication().isUnitTestMode() || myPopup.isDisposed()) [ CD ]
Line_3 $$ if (ApplicationManager.getApplication().isUnitTestMode() || myPopup.isDisposed()) -->Line_4 $$ return[ CD ]
Line_14 $$ prefix = ""-->Line_15 $$ if (!filter.equals(prefix)) [ FD ]
Line_6 $$ final Alarm alarm = new Alarm(Alarm.ThreadToUse.SWING_THREAD, myPopup)-->Line_7 $$ alarm.addRequest(new Runnable() [ FD ]
Line_20 $$ SwingUtilities.invokeLater(new Runnable() -->Line_28 $$ if (myFilteringStructure.getRootElement().getChildren().length == 0) [ CD ]
Line_11 $$ String prefix = mySpeedSearch.getEnteredPrefix()-->Line_14 $$ prefix = ""[ FD ]
Line_2 $$ private void installUpdater() -->Line_7 $$ alarm.addRequest(new Runnable() [ CD ]
Line_25 $$ if (isBackspace && handleBackspace(filter)) -->Line_26 $$ return[ CD ]
Line_20 $$ SwingUtilities.invokeLater(new Runnable() -->Line_22 $$ if (myAbstractTreeBuilder.isDisposed())[ CD ]
Line_22 $$ if (myAbstractTreeBuilder.isDisposed())-->Line_23 $$ return[ CD ]
Line_14 $$ prefix = ""-->Line_16 $$ final boolean isBackspace = prefix.length() < filter.length()[ FD ]
Line_16 $$ final boolean isBackspace = prefix.length() < filter.length()-->Line_25 $$ if (isBackspace && handleBackspace(filter)) [ FD ]
Line_29 $$ for (JCheckBox box : myCheckBoxes.values()) -->Line_33 $$ box.doClick()[ FD ]
Line_18 $$ myAbstractTreeBuilder.refilter(null, false, false).doWhenProcessed(new Runnable() -->Line_20 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_11 $$ String prefix = mySpeedSearch.getEnteredPrefix()-->Line_16 $$ final boolean isBackspace = prefix.length() < filter.length()[ FD ]
Line_29 $$ for (JCheckBox box : myCheckBoxes.values()) -->Line_31 $$ myAutoClicked.add(box)[ FD ]
Line_29 $$ for (JCheckBox box : myCheckBoxes.values()) -->Line_30 $$ if (!box.isSelected()) [ FD ]
Line_6 $$ final Alarm alarm = new Alarm(Alarm.ThreadToUse.SWING_THREAD, myPopup)-->Line_45 $$ alarm.addRequest(this, 300)[ FD ]
Line_15 $$ if (!filter.equals(prefix)) -->Line_18 $$ myAbstractTreeBuilder.refilter(null, false, false).doWhenProcessed(new Runnable() [ CD ]
Line_11 $$ String prefix = mySpeedSearch.getEnteredPrefix()-->Line_12 $$ myTree.getEmptyText().setText(StringUtil.isEmpty(prefix) ? "Nothing to show" : "Can't find '" + prefix + "'")[ FD ]
Line_7 $$ alarm.addRequest(new Runnable() -->Line_13 $$ if (prefix == null)[ CD ]
Line_6 $$ final Alarm alarm = new Alarm(Alarm.ThreadToUse.SWING_THREAD, myPopup)-->Line_10 $$ alarm.cancelAllRequests()[ FD ]
Line_11 $$ String prefix = mySpeedSearch.getEnteredPrefix()-->Line_15 $$ if (!filter.equals(prefix)) [ FD ]
Line_15 $$ if (!filter.equals(prefix)) -->Line_16 $$ final boolean isBackspace = prefix.length() < filter.length()[ CD ]
Line_7 $$ alarm.addRequest(new Runnable() -->Line_12 $$ myTree.getEmptyText().setText(StringUtil.isEmpty(prefix) ? "Nothing to show" : "Can't find '" + prefix + "'")[ CD ]
Line_13 $$ if (prefix == null)-->Line_14 $$ prefix = ""[ CD ]
Line_7 $$ alarm.addRequest(new Runnable() -->Line_44 $$ if (!alarm.isDisposed()) [ CD ]
Line_11 $$ String prefix = mySpeedSearch.getEnteredPrefix()-->Line_13 $$ if (prefix == null)[ FD ]
Line_30 $$ if (!box.isSelected()) -->Line_33 $$ box.doClick()[ CD ]
Line_6 $$ final Alarm alarm = new Alarm(Alarm.ThreadToUse.SWING_THREAD, myPopup)-->Line_44 $$ if (!alarm.isDisposed()) [ FD ]
Line_7 $$ alarm.addRequest(new Runnable() -->Line_15 $$ if (!filter.equals(prefix)) [ CD ]
Line_7 $$ alarm.addRequest(new Runnable() -->Line_10 $$ alarm.cancelAllRequests()[ CD ]
Line_44 $$ if (!alarm.isDisposed()) -->Line_45 $$ alarm.addRequest(this, 300)[ CD ]
Line_20 $$ SwingUtilities.invokeLater(new Runnable() -->Line_25 $$ if (isBackspace && handleBackspace(filter)) [ CD ]
Line_2 $$ private void installUpdater() -->Line_6 $$ final Alarm alarm = new Alarm(Alarm.ThreadToUse.SWING_THREAD, myPopup)[ CD ]
