Line_3 $$ if (e.getEventType() != HyperlinkEvent.EventType.ACTIVATED) -->Line_4 $$ return[ CD ]
Line_13 $$ URL url = null-->Line_15 $$ url = e.getURL()[ FD ]
Line_58 $$ if (!activeActions.isEmpty()) -->Line_60 $$ if (actionNumber > -1 && activeActions.size() > actionNumber) [ CD ]
Line_31 $$ PsiElement psiElement = ((ProblemDescriptor) myCurrentDescriptor).getPsiElement()-->Line_32 $$ if (psiElement == null)[ FD ]
Line_7 $$ if (e instanceof HTMLFrameHyperlinkEvent) -->Line_8 $$ HTMLFrameHyperlinkEvent evt = (HTMLFrameHyperlinkEvent) e[ CD ]
Line_7 $$ if (e instanceof HTMLFrameHyperlinkEvent) -->Line_10 $$ doc.processHTMLFrameHyperlinkEvent(evt)[ CD ]
Line_2 $$ private void hyperlinkUpdate(HyperlinkEvent e) -->Line_6 $$ JEditorPane pane = (JEditorPane) e.getSource()[ CD ]
Line_16 $$ String ref = url.getRef()-->Line_46 $$ if (ref.startsWith("invokelocal:")) [ FD ]
Line_51 $$ if (ref.startsWith("suppress:")) -->Line_65 $$ int offset = Integer.parseInt(ref)[ CD ]
Line_24 $$ fileURL = fileURL.substring(0, fileURL.indexOf('#'))-->Line_67 $$ fileURL = fileURL.substring(0, fileURL.indexOf('#'))[ FD ]
Line_30 $$ if (myCurrentDescriptor instanceof ProblemDescriptor) -->Line_35 $$ if (vFile != null) [ CD ]
Line_25 $$ VirtualFile vFile = VirtualFileManager.getInstance().findFileByUrl(fileURL)-->Line_69 $$ if (vFile == null) [ FD ]
Line_21 $$ Integer textStartOffset = new Integer(startPosition)-->Line_27 $$ fireClickEvent(vFile, textStartOffset.intValue(), textEndOffset.intValue())[ FD ]
Line_65 $$ int offset = Integer.parseInt(ref)-->Line_73 $$ fireClickEvent(vFile, offset, offset)[ FD ]
Line_25 $$ VirtualFile vFile = VirtualFileManager.getInstance().findFileByUrl(fileURL)-->Line_35 $$ if (vFile != null) [ FD ]
Line_30 $$ if (myCurrentDescriptor instanceof ProblemDescriptor) -->Line_31 $$ PsiElement psiElement = ((ProblemDescriptor) myCurrentDescriptor).getPsiElement()[ CD ]
Line_23 $$ String fileURL = url.toExternalForm()-->Line_68 $$ VirtualFile vFile = VirtualFileManager.getInstance().findFileByUrl(fileURL)[ FD ]
Line_30 $$ if (myCurrentDescriptor instanceof ProblemDescriptor) -->Line_34 $$ VirtualFile vFile = psiElement.getContainingFile().getVirtualFile()[ CD ]
Line_13 $$ URL url = null-->Line_77 $$ if (url != null) [ FD ]
Line_16 $$ String ref = url.getRef()-->Line_29 $$ if (ref.startsWith("descr:")) [ FD ]
Line_15 $$ url = e.getURL()-->Line_66 $$ String fileURL = url.toExternalForm()[ FD ]
Line_2 $$ private void hyperlinkUpdate(HyperlinkEvent e) -->Line_6 $$ JEditorPane pane = (JEditorPane) e.getSource()[ FD ]
Line_29 $$ if (ref.startsWith("descr:")) -->Line_40 $$ if (ref.startsWith("invoke:")) [ CD ]
Line_41 $$ int actionNumber = Integer.parseInt(ref.substring("invoke:".length()))-->Line_61 $$ activeActions.get(actionNumber).actionPerformed(null)[ FD ]
Line_16 $$ String ref = url.getRef()-->Line_17 $$ if (ref.startsWith("pos:")) [ FD ]
Line_13 $$ URL url = null-->Line_78 $$ BrowserUtil.browse(url)[ FD ]
Line_13 $$ URL url = null-->Line_16 $$ String ref = url.getRef()[ FD ]
Line_2 $$ private void hyperlinkUpdate(HyperlinkEvent e) -->Line_3 $$ if (e.getEventType() != HyperlinkEvent.EventType.ACTIVATED) [ FD ]
Line_51 $$ if (ref.startsWith("suppress:")) -->Line_72 $$ if (vFile != null) [ CD ]
Line_25 $$ VirtualFile vFile = VirtualFileManager.getInstance().findFileByUrl(fileURL)-->Line_72 $$ if (vFile != null) [ FD ]
Line_51 $$ if (ref.startsWith("suppress:")) -->Line_69 $$ if (vFile == null) [ CD ]
Line_25 $$ VirtualFile vFile = VirtualFileManager.getInstance().findFileByUrl(fileURL)-->Line_26 $$ if (vFile != null) [ FD ]
Line_16 $$ String ref = url.getRef()-->Line_51 $$ if (ref.startsWith("suppress:")) [ FD ]
Line_17 $$ if (ref.startsWith("pos:")) -->Line_24 $$ fileURL = fileURL.substring(0, fileURL.indexOf('#'))[ CD ]
Line_23 $$ String fileURL = url.toExternalForm()-->Line_24 $$ fileURL = fileURL.substring(0, fileURL.indexOf('#'))[ FD ]
Line_16 $$ String ref = url.getRef()-->Line_65 $$ int offset = Integer.parseInt(ref)[ FD ]
Line_24 $$ fileURL = fileURL.substring(0, fileURL.indexOf('#'))-->Line_68 $$ VirtualFile vFile = VirtualFileManager.getInstance().findFileByUrl(fileURL)[ FD ]
Line_17 $$ if (ref.startsWith("pos:")) -->Line_26 $$ if (vFile != null) [ CD ]
Line_51 $$ if (ref.startsWith("suppress:")) -->Line_58 $$ if (!activeActions.isEmpty()) [ CD ]
Line_40 $$ if (ref.startsWith("invoke:")) -->Line_41 $$ int actionNumber = Integer.parseInt(ref.substring("invoke:".length()))[ CD ]
Line_25 $$ VirtualFile vFile = VirtualFileManager.getInstance().findFileByUrl(fileURL)-->Line_73 $$ fireClickEvent(vFile, offset, offset)[ FD ]
Line_29 $$ if (ref.startsWith("descr:")) -->Line_30 $$ if (myCurrentDescriptor instanceof ProblemDescriptor) [ CD ]
Line_69 $$ if (vFile == null) -->Line_70 $$ vFile = VfsUtil.findFileByURL(url)[ CD ]
Line_70 $$ vFile = VfsUtil.findFileByURL(url)-->Line_73 $$ fireClickEvent(vFile, offset, offset)[ FD ]
Line_51 $$ if (ref.startsWith("suppress:")) -->Line_52 $$ final SuppressActionWrapper.SuppressTreeAction[] suppressTreeActions = new SuppressActionWrapper(myView.getProject(), getToolWrapper(), myView.getTree().getSelectionPaths()).getChildren(null)[ CD ]
Line_25 $$ VirtualFile vFile = VirtualFileManager.getInstance().findFileByUrl(fileURL)-->Line_70 $$ vFile = VfsUtil.findFileByURL(url)[ FD ]
Line_16 $$ String ref = url.getRef()-->Line_18 $$ int delimeterPos = ref.indexOf(':', "pos:".length() + 1)[ FD ]
Line_2 $$ private void hyperlinkUpdate(HyperlinkEvent e) -->Line_7 $$ if (e instanceof HTMLFrameHyperlinkEvent) [ FD ]
Line_30 $$ if (myCurrentDescriptor instanceof ProblemDescriptor) -->Line_32 $$ if (psiElement == null)[ CD ]
Line_17 $$ if (ref.startsWith("pos:")) -->Line_21 $$ Integer textStartOffset = new Integer(startPosition)[ CD ]
Line_16 $$ String ref = url.getRef()-->Line_19 $$ String startPosition = ref.substring("pos:".length(), delimeterPos)[ FD ]
Line_35 $$ if (vFile != null) -->Line_37 $$ fireClickEvent(vFile, range.getStartOffset(), range.getEndOffset())[ CD ]
Line_51 $$ if (ref.startsWith("suppress:")) -->Line_66 $$ String fileURL = url.toExternalForm()[ CD ]
Line_40 $$ if (ref.startsWith("invoke:")) -->Line_44 $$ QuickFixAction fixAction = presentation.getQuickFixes(new RefElement[] [ CD ]
Line_35 $$ if (vFile != null) -->Line_36 $$ TextRange range = ((ProblemDescriptorBase) myCurrentDescriptor).getTextRange()[ CD ]
Line_70 $$ vFile = VfsUtil.findFileByURL(url)-->Line_72 $$ if (vFile != null) [ FD ]
Line_6 $$ JEditorPane pane = (JEditorPane) e.getSource()-->Line_9 $$ HTMLDocument doc = (HTMLDocument) pane.getDocument()[ FD ]
Line_15 $$ url = e.getURL()-->Line_23 $$ String fileURL = url.toExternalForm()[ FD ]
Line_22 $$ Integer textEndOffset = new Integer(endPosition)-->Line_27 $$ fireClickEvent(vFile, textStartOffset.intValue(), textEndOffset.intValue())[ FD ]
Line_15 $$ url = e.getURL()-->Line_16 $$ String ref = url.getRef()[ FD ]
Line_23 $$ String fileURL = url.toExternalForm()-->Line_25 $$ VirtualFile vFile = VirtualFileManager.getInstance().findFileByUrl(fileURL)[ FD ]
Line_17 $$ if (ref.startsWith("pos:")) -->Line_25 $$ VirtualFile vFile = VirtualFileManager.getInstance().findFileByUrl(fileURL)[ CD ]
Line_40 $$ if (ref.startsWith("invoke:")) -->Line_42 $$ InspectionToolWrapper toolWrapper = getToolWrapper()[ CD ]
Line_2 $$ private void hyperlinkUpdate(HyperlinkEvent e) -->Line_13 $$ URL url = null[ CD ]
Line_13 $$ URL url = null-->Line_66 $$ String fileURL = url.toExternalForm()[ FD ]
Line_77 $$ if (url != null) -->Line_78 $$ BrowserUtil.browse(url)[ CD ]
Line_17 $$ if (ref.startsWith("pos:")) -->Line_29 $$ if (ref.startsWith("descr:")) [ CD ]
Line_51 $$ if (ref.startsWith("suppress:")) -->Line_53 $$ final List<AnAction> activeActions = new ArrayList<AnAction>()[ CD ]
Line_53 $$ final List<AnAction> activeActions = new ArrayList<AnAction>()-->Line_56 $$ activeActions.add(suppressTreeAction)[ FD ]
Line_48 $$ if (actionNumber > -1) -->Line_49 $$ invokeLocalFix(actionNumber)[ CD ]
Line_13 $$ URL url = null-->Line_70 $$ vFile = VfsUtil.findFileByURL(url)[ FD ]
Line_18 $$ int delimeterPos = ref.indexOf(':', "pos:".length() + 1)-->Line_19 $$ String startPosition = ref.substring("pos:".length(), delimeterPos)[ FD ]
Line_32 $$ if (psiElement == null)-->Line_33 $$ return[ CD ]
Line_40 $$ if (ref.startsWith("invoke:")) -->Line_43 $$ InspectionToolPresentation presentation = myView.getGlobalInspectionContext().getPresentation(toolWrapper)[ CD ]
Line_16 $$ String ref = url.getRef()-->Line_20 $$ String endPosition = ref.substring(delimeterPos + 1)[ FD ]
Line_54 $$ for (SuppressActionWrapper.SuppressTreeAction suppressTreeAction : suppressTreeActions) -->Line_55 $$ if (suppressTreeAction.isAvailable())[ FD ]
Line_43 $$ InspectionToolPresentation presentation = myView.getGlobalInspectionContext().getPresentation(toolWrapper)-->Line_44 $$ QuickFixAction fixAction = presentation.getQuickFixes(new RefElement[] [ FD ]
Line_17 $$ if (ref.startsWith("pos:")) -->Line_23 $$ String fileURL = url.toExternalForm()[ CD ]
Line_16 $$ String ref = url.getRef()-->Line_41 $$ int actionNumber = Integer.parseInt(ref.substring("invoke:".length()))[ FD ]
Line_41 $$ int actionNumber = Integer.parseInt(ref.substring("invoke:".length()))-->Line_48 $$ if (actionNumber > -1) [ FD ]
Line_15 $$ url = e.getURL()-->Line_70 $$ vFile = VfsUtil.findFileByURL(url)[ FD ]
Line_17 $$ if (ref.startsWith("pos:")) -->Line_19 $$ String startPosition = ref.substring("pos:".length(), delimeterPos)[ CD ]
Line_16 $$ String ref = url.getRef()-->Line_59 $$ int actionNumber = Integer.parseInt(ref.substring("suppress:".length()))[ FD ]
Line_7 $$ if (e instanceof HTMLFrameHyperlinkEvent) -->Line_9 $$ HTMLDocument doc = (HTMLDocument) pane.getDocument()[ CD ]
Line_7 $$ if (e instanceof HTMLFrameHyperlinkEvent) -->Line_11 $$ return[ CD ]
Line_51 $$ if (ref.startsWith("suppress:")) -->Line_68 $$ VirtualFile vFile = VirtualFileManager.getInstance().findFileByUrl(fileURL)[ CD ]
Line_72 $$ if (vFile != null) -->Line_73 $$ fireClickEvent(vFile, offset, offset)[ CD ]
Line_53 $$ final List<AnAction> activeActions = new ArrayList<AnAction>()-->Line_61 $$ activeActions.get(actionNumber).actionPerformed(null)[ FD ]
Line_26 $$ if (vFile != null) -->Line_27 $$ fireClickEvent(vFile, textStartOffset.intValue(), textEndOffset.intValue())[ CD ]
Line_25 $$ VirtualFile vFile = VirtualFileManager.getInstance().findFileByUrl(fileURL)-->Line_27 $$ fireClickEvent(vFile, textStartOffset.intValue(), textEndOffset.intValue())[ FD ]
Line_9 $$ HTMLDocument doc = (HTMLDocument) pane.getDocument()-->Line_10 $$ doc.processHTMLFrameHyperlinkEvent(evt)[ FD ]
Line_46 $$ if (ref.startsWith("invokelocal:")) -->Line_48 $$ if (actionNumber > -1) [ CD ]
Line_67 $$ fileURL = fileURL.substring(0, fileURL.indexOf('#'))-->Line_68 $$ VirtualFile vFile = VirtualFileManager.getInstance().findFileByUrl(fileURL)[ FD ]
Line_15 $$ url = e.getURL()-->Line_78 $$ BrowserUtil.browse(url)[ FD ]
Line_17 $$ if (ref.startsWith("pos:")) -->Line_20 $$ String endPosition = ref.substring(delimeterPos + 1)[ CD ]
Line_23 $$ String fileURL = url.toExternalForm()-->Line_67 $$ fileURL = fileURL.substring(0, fileURL.indexOf('#'))[ FD ]
Line_2 $$ private void hyperlinkUpdate(HyperlinkEvent e) -->Line_15 $$ url = e.getURL()[ FD ]
Line_51 $$ if (ref.startsWith("suppress:")) -->Line_67 $$ fileURL = fileURL.substring(0, fileURL.indexOf('#'))[ CD ]
Line_36 $$ TextRange range = ((ProblemDescriptorBase) myCurrentDescriptor).getTextRange()-->Line_37 $$ fireClickEvent(vFile, range.getStartOffset(), range.getEndOffset())[ FD ]
Line_25 $$ VirtualFile vFile = VirtualFileManager.getInstance().findFileByUrl(fileURL)-->Line_37 $$ fireClickEvent(vFile, range.getStartOffset(), range.getEndOffset())[ FD ]
Line_16 $$ String ref = url.getRef()-->Line_40 $$ if (ref.startsWith("invoke:")) [ FD ]
Line_15 $$ url = e.getURL()-->Line_77 $$ if (url != null) [ FD ]
Line_54 $$ for (SuppressActionWrapper.SuppressTreeAction suppressTreeAction : suppressTreeActions) -->Line_56 $$ activeActions.add(suppressTreeAction)[ FD ]
Line_46 $$ if (ref.startsWith("invokelocal:")) -->Line_51 $$ if (ref.startsWith("suppress:")) [ CD ]
Line_46 $$ if (ref.startsWith("invokelocal:")) -->Line_47 $$ int actionNumber = Integer.parseInt(ref.substring("invokelocal:".length()))[ CD ]
Line_13 $$ URL url = null-->Line_23 $$ String fileURL = url.toExternalForm()[ FD ]
Line_55 $$ if (suppressTreeAction.isAvailable())-->Line_56 $$ activeActions.add(suppressTreeAction)[ CD ]
Line_53 $$ final List<AnAction> activeActions = new ArrayList<AnAction>()-->Line_58 $$ if (!activeActions.isEmpty()) [ FD ]
Line_40 $$ if (ref.startsWith("invoke:")) -->Line_45 $$ fixAction.doApplyFix(new RefElement[] [ CD ]
Line_41 $$ int actionNumber = Integer.parseInt(ref.substring("invoke:".length()))-->Line_49 $$ invokeLocalFix(actionNumber)[ FD ]
Line_16 $$ String ref = url.getRef()-->Line_47 $$ int actionNumber = Integer.parseInt(ref.substring("invokelocal:".length()))[ FD ]
Line_31 $$ PsiElement psiElement = ((ProblemDescriptor) myCurrentDescriptor).getPsiElement()-->Line_34 $$ VirtualFile vFile = psiElement.getContainingFile().getVirtualFile()[ FD ]
Line_60 $$ if (actionNumber > -1 && activeActions.size() > actionNumber) -->Line_61 $$ activeActions.get(actionNumber).actionPerformed(null)[ CD ]
Line_8 $$ HTMLFrameHyperlinkEvent evt = (HTMLFrameHyperlinkEvent) e-->Line_10 $$ doc.processHTMLFrameHyperlinkEvent(evt)[ FD ]
Line_2 $$ private void hyperlinkUpdate(HyperlinkEvent e) -->Line_7 $$ if (e instanceof HTMLFrameHyperlinkEvent) [ CD ]
Line_58 $$ if (!activeActions.isEmpty()) -->Line_59 $$ int actionNumber = Integer.parseInt(ref.substring("suppress:".length()))[ CD ]
Line_17 $$ if (ref.startsWith("pos:")) -->Line_18 $$ int delimeterPos = ref.indexOf(':', "pos:".length() + 1)[ CD ]
Line_44 $$ QuickFixAction fixAction = presentation.getQuickFixes(new RefElement[] -->Line_45 $$ fixAction.doApplyFix(new RefElement[] [ FD ]
Line_2 $$ private void hyperlinkUpdate(HyperlinkEvent e) -->Line_3 $$ if (e.getEventType() != HyperlinkEvent.EventType.ACTIVATED) [ CD ]
Line_53 $$ final List<AnAction> activeActions = new ArrayList<AnAction>()-->Line_60 $$ if (actionNumber > -1 && activeActions.size() > actionNumber) [ FD ]
Line_42 $$ InspectionToolWrapper toolWrapper = getToolWrapper()-->Line_43 $$ InspectionToolPresentation presentation = myView.getGlobalInspectionContext().getPresentation(toolWrapper)[ FD ]
Line_24 $$ fileURL = fileURL.substring(0, fileURL.indexOf('#'))-->Line_25 $$ VirtualFile vFile = VirtualFileManager.getInstance().findFileByUrl(fileURL)[ FD ]
Line_40 $$ if (ref.startsWith("invoke:")) -->Line_46 $$ if (ref.startsWith("invokelocal:")) [ CD ]
Line_17 $$ if (ref.startsWith("pos:")) -->Line_22 $$ Integer textEndOffset = new Integer(endPosition)[ CD ]
