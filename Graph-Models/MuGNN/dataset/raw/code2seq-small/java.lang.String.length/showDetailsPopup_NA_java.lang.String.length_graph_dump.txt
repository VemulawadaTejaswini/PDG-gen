Line_5 $$ final AbstractVcs vcs = changeList.getVcs()-->Line_8 $$ provider = vcs.getCachingCommittedChangesProvider()[ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_17 $$ final CommittedChangeList originalChangeList = ReceivedChangeList.unwrap(changeList)[ FD ]
Line_3 $$ StringBuilder detailsBuilder = new StringBuilder("<html><head>")-->Line_24 $$ detailsBuilder.append(column.getTitle()).append(": ").append(XmlStringUtil.escapeString(value)).append("<br>")[ FD ]
Line_3 $$ StringBuilder detailsBuilder = new StringBuilder("<html><head>")-->Line_15 $$ detailsBuilder.append("<br>")[ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_7 $$ if (vcs != null) [ CD ]
Line_6 $$ CachingCommittedChangesProvider provider = null-->Line_10 $$ detailsBuilder.append(provider.getChangelistTitle()).append(" #").append(changeList.getNumber()).append("<br>")[ FD ]
Line_5 $$ final AbstractVcs vcs = changeList.getVcs()-->Line_7 $$ if (vcs != null) [ FD ]
Line_19 $$ if (ChangeListColumn.isCustom(column)) -->Line_20 $$ String value = column.getValue(originalChangeList).toString()[ CD ]
Line_22 $$ value = "<none>"-->Line_24 $$ detailsBuilder.append(column.getTitle()).append(": ").append(XmlStringUtil.escapeString(value)).append("<br>")[ FD ]
Line_18 $$ for (ChangeListColumn column : provider.getColumns()) -->Line_20 $$ String value = column.getValue(originalChangeList).toString()[ FD ]
Line_20 $$ String value = column.getValue(originalChangeList).toString()-->Line_24 $$ detailsBuilder.append(column.getTitle()).append(": ").append(XmlStringUtil.escapeString(value)).append("<br>")[ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_36 $$ final JBPopup hint = JBPopupFactory.getInstance().createComponentPopupBuilder(scrollPane, editorPane).setDimensionServiceKey(project, "changelist.details.popup", false).setResizable(true).setMovable(true).setRequestFocus(true).setTitle(VcsBundle.message("changelist.details.title")).createPopup()[ FD ]
Line_8 $$ provider = vcs.getCachingCommittedChangesProvider()-->Line_9 $$ if (provider != null && provider.getChangelistTitle() != null) [ FD ]
Line_21 $$ if (value.length() == 0) -->Line_22 $$ value = "<none>"[ CD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_30 $$ JEditorPane editorPane = new JEditorPane(UIUtil.HTML_MIME, detailsBuilder.toString())[ CD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_14 $$ detailsBuilder.append(VcsBundle.message("changelist.details.committed.format", committer, DateFormatUtil.formatPrettyDateTime(changeList.getCommitDate())))[ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_36 $$ final JBPopup hint = JBPopupFactory.getInstance().createComponentPopupBuilder(scrollPane, editorPane).setDimensionServiceKey(project, "changelist.details.popup", false).setResizable(true).setMovable(true).setRequestFocus(true).setTitle(VcsBundle.message("changelist.details.title")).createPopup()[ CD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_33 $$ editorPane.select(0, 0)[ CD ]
Line_7 $$ if (vcs != null) -->Line_8 $$ provider = vcs.getCachingCommittedChangesProvider()[ CD ]
Line_9 $$ if (provider != null && provider.getChangelistTitle() != null) -->Line_10 $$ detailsBuilder.append(provider.getChangelistTitle()).append(" #").append(changeList.getNumber()).append("<br>")[ CD ]
Line_30 $$ JEditorPane editorPane = new JEditorPane(UIUtil.HTML_MIME, detailsBuilder.toString())-->Line_32 $$ editorPane.setBackground(HintUtil.INFORMATION_COLOR)[ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_13 $$ String committer = "<b>" + changeList.getCommitterName() + "</b>"[ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_4 $$ detailsBuilder.append(UIUtil.getCssFontDeclaration(UIUtil.getLabelFont())).append("</head><body>")[ CD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_28 $$ detailsBuilder.append(IssueLinkHtmlRenderer.formatTextWithLinks(project, changeList.getComment()))[ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_34 $$ editorPane.addHyperlinkListener(BrowserHyperlinkListener.INSTANCE)[ CD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_28 $$ detailsBuilder.append(IssueLinkHtmlRenderer.formatTextWithLinks(project, changeList.getComment()))[ CD ]
Line_30 $$ JEditorPane editorPane = new JEditorPane(UIUtil.HTML_MIME, detailsBuilder.toString())-->Line_35 $$ JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(editorPane)[ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_29 $$ detailsBuilder.append("</body></html>")[ CD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_37 $$ hint.showInBestPositionFor(DataManager.getInstance().getDataContext())[ CD ]
Line_7 $$ if (vcs != null) -->Line_9 $$ if (provider != null && provider.getChangelistTitle() != null) [ CD ]
Line_13 $$ String committer = "<b>" + changeList.getCommitterName() + "</b>"-->Line_14 $$ detailsBuilder.append(VcsBundle.message("changelist.details.committed.format", committer, DateFormatUtil.formatPrettyDateTime(changeList.getCommitDate())))[ FD ]
Line_19 $$ if (ChangeListColumn.isCustom(column)) -->Line_21 $$ if (value.length() == 0) [ CD ]
Line_6 $$ CachingCommittedChangesProvider provider = null-->Line_8 $$ provider = vcs.getCachingCommittedChangesProvider()[ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_16 $$ if (provider != null) [ CD ]
Line_8 $$ provider = vcs.getCachingCommittedChangesProvider()-->Line_16 $$ if (provider != null) [ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_5 $$ final AbstractVcs vcs = changeList.getVcs()[ FD ]
Line_35 $$ JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(editorPane)-->Line_36 $$ final JBPopup hint = JBPopupFactory.getInstance().createComponentPopupBuilder(scrollPane, editorPane).setDimensionServiceKey(project, "changelist.details.popup", false).setResizable(true).setMovable(true).setRequestFocus(true).setTitle(VcsBundle.message("changelist.details.title")).createPopup()[ FD ]
Line_3 $$ StringBuilder detailsBuilder = new StringBuilder("<html><head>")-->Line_29 $$ detailsBuilder.append("</body></html>")[ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_10 $$ detailsBuilder.append(provider.getChangelistTitle()).append(" #").append(changeList.getNumber()).append("<br>")[ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_32 $$ editorPane.setBackground(HintUtil.INFORMATION_COLOR)[ CD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_31 $$ editorPane.setEditable(false)[ CD ]
Line_18 $$ for (ChangeListColumn column : provider.getColumns()) -->Line_19 $$ if (ChangeListColumn.isCustom(column)) [ FD ]
Line_30 $$ JEditorPane editorPane = new JEditorPane(UIUtil.HTML_MIME, detailsBuilder.toString())-->Line_33 $$ editorPane.select(0, 0)[ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_6 $$ CachingCommittedChangesProvider provider = null[ CD ]
Line_30 $$ JEditorPane editorPane = new JEditorPane(UIUtil.HTML_MIME, detailsBuilder.toString())-->Line_34 $$ editorPane.addHyperlinkListener(BrowserHyperlinkListener.INSTANCE)[ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_15 $$ detailsBuilder.append("<br>")[ CD ]
Line_18 $$ for (ChangeListColumn column : provider.getColumns()) -->Line_24 $$ detailsBuilder.append(column.getTitle()).append(": ").append(XmlStringUtil.escapeString(value)).append("<br>")[ FD ]
Line_36 $$ final JBPopup hint = JBPopupFactory.getInstance().createComponentPopupBuilder(scrollPane, editorPane).setDimensionServiceKey(project, "changelist.details.popup", false).setResizable(true).setMovable(true).setRequestFocus(true).setTitle(VcsBundle.message("changelist.details.title")).createPopup()-->Line_37 $$ hint.showInBestPositionFor(DataManager.getInstance().getDataContext())[ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_13 $$ String committer = "<b>" + changeList.getCommitterName() + "</b>"[ CD ]
Line_3 $$ StringBuilder detailsBuilder = new StringBuilder("<html><head>")-->Line_30 $$ JEditorPane editorPane = new JEditorPane(UIUtil.HTML_MIME, detailsBuilder.toString())[ FD ]
Line_16 $$ if (provider != null) -->Line_17 $$ final CommittedChangeList originalChangeList = ReceivedChangeList.unwrap(changeList)[ CD ]
Line_8 $$ provider = vcs.getCachingCommittedChangesProvider()-->Line_18 $$ for (ChangeListColumn column : provider.getColumns()) [ FD ]
Line_30 $$ JEditorPane editorPane = new JEditorPane(UIUtil.HTML_MIME, detailsBuilder.toString())-->Line_36 $$ final JBPopup hint = JBPopupFactory.getInstance().createComponentPopupBuilder(scrollPane, editorPane).setDimensionServiceKey(project, "changelist.details.popup", false).setResizable(true).setMovable(true).setRequestFocus(true).setTitle(VcsBundle.message("changelist.details.title")).createPopup()[ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_5 $$ final AbstractVcs vcs = changeList.getVcs()[ CD ]
Line_3 $$ StringBuilder detailsBuilder = new StringBuilder("<html><head>")-->Line_14 $$ detailsBuilder.append(VcsBundle.message("changelist.details.committed.format", committer, DateFormatUtil.formatPrettyDateTime(changeList.getCommitDate())))[ FD ]
Line_3 $$ StringBuilder detailsBuilder = new StringBuilder("<html><head>")-->Line_10 $$ detailsBuilder.append(provider.getChangelistTitle()).append(" #").append(changeList.getNumber()).append("<br>")[ FD ]
Line_20 $$ String value = column.getValue(originalChangeList).toString()-->Line_22 $$ value = "<none>"[ FD ]
Line_8 $$ provider = vcs.getCachingCommittedChangesProvider()-->Line_10 $$ detailsBuilder.append(provider.getChangelistTitle()).append(" #").append(changeList.getNumber()).append("<br>")[ FD ]
Line_20 $$ String value = column.getValue(originalChangeList).toString()-->Line_21 $$ if (value.length() == 0) [ FD ]
Line_3 $$ StringBuilder detailsBuilder = new StringBuilder("<html><head>")-->Line_4 $$ detailsBuilder.append(UIUtil.getCssFontDeclaration(UIUtil.getLabelFont())).append("</head><body>")[ FD ]
Line_6 $$ CachingCommittedChangesProvider provider = null-->Line_16 $$ if (provider != null) [ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_3 $$ StringBuilder detailsBuilder = new StringBuilder("<html><head>")[ CD ]
Line_6 $$ CachingCommittedChangesProvider provider = null-->Line_9 $$ if (provider != null && provider.getChangelistTitle() != null) [ FD ]
Line_17 $$ final CommittedChangeList originalChangeList = ReceivedChangeList.unwrap(changeList)-->Line_20 $$ String value = column.getValue(originalChangeList).toString()[ FD ]
Line_19 $$ if (ChangeListColumn.isCustom(column)) -->Line_24 $$ detailsBuilder.append(column.getTitle()).append(": ").append(XmlStringUtil.escapeString(value)).append("<br>")[ CD ]
Line_3 $$ StringBuilder detailsBuilder = new StringBuilder("<html><head>")-->Line_28 $$ detailsBuilder.append(IssueLinkHtmlRenderer.formatTextWithLinks(project, changeList.getComment()))[ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_14 $$ detailsBuilder.append(VcsBundle.message("changelist.details.committed.format", committer, DateFormatUtil.formatPrettyDateTime(changeList.getCommitDate())))[ CD ]
Line_30 $$ JEditorPane editorPane = new JEditorPane(UIUtil.HTML_MIME, detailsBuilder.toString())-->Line_31 $$ editorPane.setEditable(false)[ FD ]
Line_2 $$ public static void showDetailsPopup(final Project project, final CommittedChangeList changeList) -->Line_35 $$ JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(editorPane)[ CD ]
Line_6 $$ CachingCommittedChangesProvider provider = null-->Line_18 $$ for (ChangeListColumn column : provider.getColumns()) [ FD ]
