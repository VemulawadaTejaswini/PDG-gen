Line_2 $$ public static String calcRelativeModulePath(VirtualFile parentPom, VirtualFile modulePom) -->Line_8 $$ return result.substring(0, to)[ CD ]
Line_4 $$ int to = result.length() - ("/" + MavenConstants.POM_XML).length()-->Line_5 $$ if (to < 0) [ FD ]
Line_2 $$ public static String calcRelativeModulePath(VirtualFile parentPom, VirtualFile modulePom) -->Line_3 $$ String result = MavenDomUtil.calcRelativePath(parentPom.getParent(), modulePom)[ FD ]
Line_2 $$ public static String calcRelativeModulePath(VirtualFile parentPom, VirtualFile modulePom) -->Line_3 $$ String result = MavenDomUtil.calcRelativePath(parentPom.getParent(), modulePom)[ CD ]
Line_3 $$ String result = MavenDomUtil.calcRelativePath(parentPom.getParent(), modulePom)-->Line_8 $$ return result.substring(0, to)[ FD ]
Line_4 $$ int to = result.length() - ("/" + MavenConstants.POM_XML).length()-->Line_8 $$ return result.substring(0, to)[ FD ]
Line_2 $$ public static String calcRelativeModulePath(VirtualFile parentPom, VirtualFile modulePom) -->Line_6 $$ throw new RuntimeException("Filed to calculate relative path for:" + "\nparentPom: " + parentPom + "(valid: " + parentPom.isValid() + ")" + "\nmodulePom: " + modulePom + "(valid: " + modulePom.isValid() + ")" + "\nequals:" + parentPom.equals(modulePom))[ FD ]
Line_2 $$ public static String calcRelativeModulePath(VirtualFile parentPom, VirtualFile modulePom) -->Line_4 $$ int to = result.length() - ("/" + MavenConstants.POM_XML).length()[ CD ]
Line_3 $$ String result = MavenDomUtil.calcRelativePath(parentPom.getParent(), modulePom)-->Line_4 $$ int to = result.length() - ("/" + MavenConstants.POM_XML).length()[ FD ]
Line_2 $$ public static String calcRelativeModulePath(VirtualFile parentPom, VirtualFile modulePom) -->Line_5 $$ if (to < 0) [ CD ]
