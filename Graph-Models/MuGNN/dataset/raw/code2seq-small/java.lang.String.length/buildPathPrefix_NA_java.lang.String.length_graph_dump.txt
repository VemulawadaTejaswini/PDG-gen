Line_10 $$ if (this.basePackage != null) -->Line_12 $$ if (packageName.startsWith(this.basePackage)) [ CD ]
Line_4 $$ if (this.pathPrefix != null) -->Line_6 $$ pathMapping.append("/")[ CD ]
Line_3 $$ StringBuilder pathMapping = new StringBuilder()-->Line_14 $$ pathMapping.append(this.caseSensitive ? subPackage : subPackage.toLowerCase())[ FD ]
Line_10 $$ if (this.basePackage != null) -->Line_11 $$ String packageName = ClassUtils.getPackageName(beanClass)[ CD ]
Line_4 $$ if (this.pathPrefix != null) -->Line_8 $$ pathMapping.append("/")[ CD ]
Line_4 $$ if (this.pathPrefix != null) -->Line_5 $$ pathMapping.append(this.pathPrefix)[ CD ]
Line_2 $$ private StringBuilder buildPathPrefix(Class<?> beanClass) -->Line_18 $$ return pathMapping[ CD ]
Line_12 $$ if (packageName.startsWith(this.basePackage)) -->Line_13 $$ String subPackage = packageName.substring(this.basePackage.length()).replace('.', '/')[ CD ]
Line_11 $$ String packageName = ClassUtils.getPackageName(beanClass)-->Line_13 $$ String subPackage = packageName.substring(this.basePackage.length()).replace('.', '/')[ FD ]
Line_3 $$ StringBuilder pathMapping = new StringBuilder()-->Line_6 $$ pathMapping.append("/")[ FD ]
Line_12 $$ if (packageName.startsWith(this.basePackage)) -->Line_14 $$ pathMapping.append(this.caseSensitive ? subPackage : subPackage.toLowerCase())[ CD ]
Line_2 $$ private StringBuilder buildPathPrefix(Class<?> beanClass) -->Line_11 $$ String packageName = ClassUtils.getPackageName(beanClass)[ FD ]
Line_13 $$ String subPackage = packageName.substring(this.basePackage.length()).replace('.', '/')-->Line_14 $$ pathMapping.append(this.caseSensitive ? subPackage : subPackage.toLowerCase())[ FD ]
Line_12 $$ if (packageName.startsWith(this.basePackage)) -->Line_15 $$ pathMapping.append("/")[ CD ]
Line_3 $$ StringBuilder pathMapping = new StringBuilder()-->Line_5 $$ pathMapping.append(this.pathPrefix)[ FD ]
Line_3 $$ StringBuilder pathMapping = new StringBuilder()-->Line_15 $$ pathMapping.append("/")[ FD ]
Line_2 $$ private StringBuilder buildPathPrefix(Class<?> beanClass) -->Line_4 $$ if (this.pathPrefix != null) [ CD ]
Line_3 $$ StringBuilder pathMapping = new StringBuilder()-->Line_8 $$ pathMapping.append("/")[ FD ]
Line_11 $$ String packageName = ClassUtils.getPackageName(beanClass)-->Line_12 $$ if (packageName.startsWith(this.basePackage)) [ FD ]
Line_2 $$ private StringBuilder buildPathPrefix(Class<?> beanClass) -->Line_10 $$ if (this.basePackage != null) [ CD ]
Line_2 $$ private StringBuilder buildPathPrefix(Class<?> beanClass) -->Line_3 $$ StringBuilder pathMapping = new StringBuilder()[ CD ]
