Line_2 $$ private void processLine(String line) -->Line_6 $$ final int indexOpeningBracket = line.indexOf(SEPARATOR1)[ CD ]
Line_2 $$ private void processLine(String line) -->Line_7 $$ if (indexOpeningBracket < 0) [ CD ]
Line_2 $$ private void processLine(String line) -->Line_16 $$ final String contents = line.substring(indexClosingBracket + SEPARATOR2.length())[ CD ]
Line_15 $$ final String authorAndDate = line.substring(indexOpeningBracket + SEPARATOR1.length(), indexClosingBracket)-->Line_22 $$ final String dateString = authorAndDate.substring(lastSpace + 1)[ FD ]
Line_23 $$ final Date date-->Line_25 $$ date = DATE_FORMAT.parse(dateString)[ FD ]
Line_2 $$ private void processLine(String line) -->Line_10 $$ final int indexClosingBracket = line.indexOf(SEPARATOR2, indexOpeningBracket + 1)[ CD ]
Line_15 $$ final String authorAndDate = line.substring(indexOpeningBracket + SEPARATOR1.length(), indexClosingBracket)-->Line_17 $$ final int lastSpace = authorAndDate.lastIndexOf(' ')[ FD ]
Line_10 $$ final int indexClosingBracket = line.indexOf(SEPARATOR2, indexOpeningBracket + 1)-->Line_15 $$ final String authorAndDate = line.substring(indexOpeningBracket + SEPARATOR1.length(), indexClosingBracket)[ FD ]
Line_15 $$ final String authorAndDate = line.substring(indexOpeningBracket + SEPARATOR1.length(), indexClosingBracket)-->Line_21 $$ final String author = authorAndDate.substring(0, lastSpace).trim()[ FD ]
Line_22 $$ final String dateString = authorAndDate.substring(lastSpace + 1)-->Line_25 $$ date = DATE_FORMAT.parse(dateString)[ FD ]
Line_2 $$ private void processLine(String line) -->Line_15 $$ final String authorAndDate = line.substring(indexOpeningBracket + SEPARATOR1.length(), indexClosingBracket)[ FD ]
Line_2 $$ private void processLine(String line) -->Line_30 $$ annotateInformation.addLine(new AnnotateLine(revision, author, date, contents))[ CD ]
Line_2 $$ private void processLine(String line) -->Line_22 $$ final String dateString = authorAndDate.substring(lastSpace + 1)[ CD ]
Line_11 $$ if (indexClosingBracket < 0) -->Line_12 $$ return[ CD ]
Line_2 $$ private void processLine(String line) -->Line_6 $$ final int indexOpeningBracket = line.indexOf(SEPARATOR1)[ FD ]
Line_17 $$ final int lastSpace = authorAndDate.lastIndexOf(' ')-->Line_21 $$ final String author = authorAndDate.substring(0, lastSpace).trim()[ FD ]
Line_2 $$ private void processLine(String line) -->Line_14 $$ final String revision = line.substring(0, indexOpeningBracket).trim()[ CD ]
Line_18 $$ if (lastSpace < 0) -->Line_19 $$ return[ CD ]
Line_2 $$ private void processLine(String line) -->Line_3 $$ if (annotateInformation == null) [ CD ]
Line_7 $$ if (indexOpeningBracket < 0) -->Line_8 $$ return[ CD ]
Line_6 $$ final int indexOpeningBracket = line.indexOf(SEPARATOR1)-->Line_14 $$ final String revision = line.substring(0, indexOpeningBracket).trim()[ FD ]
Line_2 $$ private void processLine(String line) -->Line_15 $$ final String authorAndDate = line.substring(indexOpeningBracket + SEPARATOR1.length(), indexClosingBracket)[ CD ]
Line_2 $$ private void processLine(String line) -->Line_14 $$ final String revision = line.substring(0, indexOpeningBracket).trim()[ FD ]
Line_2 $$ private void processLine(String line) -->Line_17 $$ final int lastSpace = authorAndDate.lastIndexOf(' ')[ CD ]
Line_6 $$ final int indexOpeningBracket = line.indexOf(SEPARATOR1)-->Line_7 $$ if (indexOpeningBracket < 0) [ FD ]
Line_2 $$ private void processLine(String line) -->Line_10 $$ final int indexClosingBracket = line.indexOf(SEPARATOR2, indexOpeningBracket + 1)[ FD ]
Line_2 $$ private void processLine(String line) -->Line_11 $$ if (indexClosingBracket < 0) [ CD ]
Line_2 $$ private void processLine(String line) -->Line_18 $$ if (lastSpace < 0) [ CD ]
Line_17 $$ final int lastSpace = authorAndDate.lastIndexOf(' ')-->Line_18 $$ if (lastSpace < 0) [ FD ]
Line_2 $$ private void processLine(String line) -->Line_21 $$ final String author = authorAndDate.substring(0, lastSpace).trim()[ CD ]
Line_10 $$ final int indexClosingBracket = line.indexOf(SEPARATOR2, indexOpeningBracket + 1)-->Line_11 $$ if (indexClosingBracket < 0) [ FD ]
Line_2 $$ private void processLine(String line) -->Line_23 $$ final Date date[ CD ]
Line_3 $$ if (annotateInformation == null) -->Line_4 $$ return[ CD ]
Line_2 $$ private void processLine(String line) -->Line_16 $$ final String contents = line.substring(indexClosingBracket + SEPARATOR2.length())[ FD ]
