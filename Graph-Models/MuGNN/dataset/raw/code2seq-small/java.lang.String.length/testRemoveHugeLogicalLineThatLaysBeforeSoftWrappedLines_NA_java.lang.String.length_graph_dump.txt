Line_2 $$ public void testRemoveHugeLogicalLineThatLaysBeforeSoftWrappedLines() throws IOException -->Line_9 $$ List<VisualPosition> positionsBefore = new ArrayList()[ CD ]
Line_2 $$ public void testRemoveHugeLogicalLineThatLaysBeforeSoftWrappedLines() throws IOException -->Line_14 $$ myEditor.getSelectionModel().setSelection(start, end)[ CD ]
Line_2 $$ public void testRemoveHugeLogicalLineThatLaysBeforeSoftWrappedLines() throws IOException -->Line_5 $$ Document document = myEditor.getDocument()[ CD ]
Line_2 $$ public void testRemoveHugeLogicalLineThatLaysBeforeSoftWrappedLines() throws IOException -->Line_8 $$ int visualLinesToRemove = getSoftWrapModel().getSoftWrapsForLine(1).size() + 1[ CD ]
Line_9 $$ List<VisualPosition> positionsBefore = new ArrayList()-->Line_13 $$ Collections.reverse(positionsBefore)[ FD ]
Line_6 $$ int start = document.getLineStartOffset(1)-->Line_14 $$ myEditor.getSelectionModel().setSelection(start, end)[ FD ]
Line_2 $$ public void testRemoveHugeLogicalLineThatLaysBeforeSoftWrappedLines() throws IOException -->Line_6 $$ int start = document.getLineStartOffset(1)[ CD ]
Line_2 $$ public void testRemoveHugeLogicalLineThatLaysBeforeSoftWrappedLines() throws IOException -->Line_15 $$ delete()[ CD ]
Line_2 $$ public void testRemoveHugeLogicalLineThatLaysBeforeSoftWrappedLines() throws IOException -->Line_3 $$ String text = "short line\n" + "this is a long line that is expected to be soft wrapped into more than one or even two visual lines\n" + "1. just a line that is long enough to be soft wrapped\n" + "2. just a line that is long enough to be soft wrapped\n" + "3. just a line that is long enough to be soft wrapped\n" + "4. just a line that is long enough to be soft wrapped"[ CD ]
Line_2 $$ public void testRemoveHugeLogicalLineThatLaysBeforeSoftWrappedLines() throws IOException -->Line_13 $$ Collections.reverse(positionsBefore)[ CD ]
Line_3 $$ String text = "short line\n" + "this is a long line that is expected to be soft wrapped into more than one or even two visual lines\n" + "1. just a line that is long enough to be soft wrapped\n" + "2. just a line that is long enough to be soft wrapped\n" + "3. just a line that is long enough to be soft wrapped\n" + "4. just a line that is long enough to be soft wrapped"-->Line_4 $$ init(15, text)[ FD ]
Line_5 $$ Document document = myEditor.getDocument()-->Line_6 $$ int start = document.getLineStartOffset(1)[ FD ]
Line_9 $$ List<VisualPosition> positionsBefore = new ArrayList()-->Line_11 $$ positionsBefore.add(myEditor.offsetToVisualPosition(i))[ FD ]
Line_5 $$ Document document = myEditor.getDocument()-->Line_7 $$ int end = document.getLineEndOffset(1) + 1[ FD ]
Line_7 $$ int end = document.getLineEndOffset(1) + 1-->Line_14 $$ myEditor.getSelectionModel().setSelection(start, end)[ FD ]
Line_2 $$ public void testRemoveHugeLogicalLineThatLaysBeforeSoftWrappedLines() throws IOException -->Line_7 $$ int end = document.getLineEndOffset(1) + 1[ CD ]
Line_10 $$ for (int i = end; i < text.length(); i++) -->Line_11 $$ positionsBefore.add(myEditor.offsetToVisualPosition(i))[ FD ]
Line_9 $$ List<VisualPosition> positionsBefore = new ArrayList()-->Line_18 $$ VisualPosition position = positionsBefore.remove(positionsBefore.size() - 1)[ FD ]
Line_10 $$ for (int i = end; i < text.length(); i++) -->Line_11 $$ positionsBefore.add(myEditor.offsetToVisualPosition(i))[ CD ]
Line_10 $$ for (int i = end; i < text.length(); i++) -->Line_19 $$ assertEquals(new VisualPosition(position.line - visualLinesToRemove, position.column), myEditor.offsetToVisualPosition(i))[ FD ]
Line_3 $$ String text = "short line\n" + "this is a long line that is expected to be soft wrapped into more than one or even two visual lines\n" + "1. just a line that is long enough to be soft wrapped\n" + "2. just a line that is long enough to be soft wrapped\n" + "3. just a line that is long enough to be soft wrapped\n" + "4. just a line that is long enough to be soft wrapped"-->Line_10 $$ for (int i = end; i < text.length(); i++) [ FD ]
Line_2 $$ public void testRemoveHugeLogicalLineThatLaysBeforeSoftWrappedLines() throws IOException -->Line_4 $$ init(15, text)[ CD ]
Line_2 $$ public void testRemoveHugeLogicalLineThatLaysBeforeSoftWrappedLines() throws IOException -->Line_10 $$ for (int i = end; i < text.length(); i++) [ CD ]
