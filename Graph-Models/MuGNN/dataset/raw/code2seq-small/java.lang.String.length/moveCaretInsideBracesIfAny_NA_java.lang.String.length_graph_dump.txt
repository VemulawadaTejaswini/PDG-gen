Line_12 $$ if (CharArrayUtil.regionMatches(chars, caretOffset - "-->Line_17 $$ PsiElement elt = PsiTreeUtil.getParentOfType(file.findElementAt(caretOffset - 1), GrCodeBlock.class, GrTypeDefinitionBody.class)[ CD ]
Line_5 $$ final CharSequence chars = editor.getDocument().getCharsSequence()-->Line_11 $$ caretOffset = CharArrayUtil.shiftBackward(chars, caretOffset - 1, " \t") + 1[ FD ]
Line_12 $$ if (CharArrayUtil.regionMatches(chars, caretOffset - "-->Line_15 $$ final boolean old = settings.KEEP_SIMPLE_BLOCKS_IN_ONE_LINE[ CD ]
Line_12 $$ if (CharArrayUtil.regionMatches(chars, caretOffset - "-->Line_16 $$ settings.KEEP_SIMPLE_BLOCKS_IN_ONE_LINE = false[ CD ]
Line_12 $$ if (CharArrayUtil.regionMatches(chars, caretOffset - "-->Line_20 $$ editor.getCaretModel().moveToOffset(caretOffset - 1)[ CD ]
Line_7 $$ caretOffset += 2-->Line_9 $$ caretOffset += 3[ FD ]
Line_6 $$ if (CharArrayUtil.regionMatches(chars, caretOffset, "-->Line_8 $$ if (CharArrayUtil.regionMatches(chars, caretOffset, "[ CD ]
Line_6 $$ if (CharArrayUtil.regionMatches(chars, caretOffset, "-->Line_7 $$ caretOffset += 2[ CD ]
Line_12 $$ if (CharArrayUtil.regionMatches(chars, caretOffset - "-->Line_19 $$ settings.KEEP_SIMPLE_BLOCKS_IN_ONE_LINE = old[ CD ]
Line_15 $$ final boolean old = settings.KEEP_SIMPLE_BLOCKS_IN_ONE_LINE-->Line_19 $$ settings.KEEP_SIMPLE_BLOCKS_IN_ONE_LINE = old[ FD ]
Line_4 $$ int caretOffset = editor.getCaretModel().getOffset()-->Line_6 $$ if (CharArrayUtil.regionMatches(chars, caretOffset, "[ FD ]
Line_12 $$ if (CharArrayUtil.regionMatches(chars, caretOffset - "-->Line_13 $$ commit(editor)[ CD ]
Line_9 $$ caretOffset += 3-->Line_11 $$ caretOffset = CharArrayUtil.shiftBackward(chars, caretOffset - 1, " \t") + 1[ FD ]
Line_12 $$ if (CharArrayUtil.regionMatches(chars, caretOffset - "-->Line_18 $$ reformat(elt)[ CD ]
Line_4 $$ int caretOffset = editor.getCaretModel().getOffset()-->Line_9 $$ caretOffset += 3[ FD ]
Line_4 $$ int caretOffset = editor.getCaretModel().getOffset()-->Line_8 $$ if (CharArrayUtil.regionMatches(chars, caretOffset, "[ FD ]
Line_5 $$ final CharSequence chars = editor.getDocument().getCharsSequence()-->Line_8 $$ if (CharArrayUtil.regionMatches(chars, caretOffset, "[ FD ]
Line_12 $$ if (CharArrayUtil.regionMatches(chars, caretOffset - "-->Line_14 $$ final CodeStyleSettings settings = CodeStyleSettingsManager.getSettings(file.getProject())[ CD ]
Line_4 $$ int caretOffset = editor.getCaretModel().getOffset()-->Line_7 $$ caretOffset += 2[ FD ]
Line_7 $$ caretOffset += 2-->Line_11 $$ caretOffset = CharArrayUtil.shiftBackward(chars, caretOffset - 1, " \t") + 1[ FD ]
Line_5 $$ final CharSequence chars = editor.getDocument().getCharsSequence()-->Line_12 $$ if (CharArrayUtil.regionMatches(chars, caretOffset - "[ FD ]
Line_8 $$ if (CharArrayUtil.regionMatches(chars, caretOffset, "-->Line_9 $$ caretOffset += 3[ CD ]
Line_7 $$ caretOffset += 2-->Line_8 $$ if (CharArrayUtil.regionMatches(chars, caretOffset, "[ FD ]
Line_4 $$ int caretOffset = editor.getCaretModel().getOffset()-->Line_11 $$ caretOffset = CharArrayUtil.shiftBackward(chars, caretOffset - 1, " \t") + 1[ FD ]
Line_17 $$ PsiElement elt = PsiTreeUtil.getParentOfType(file.findElementAt(caretOffset - 1), GrCodeBlock.class, GrTypeDefinitionBody.class)-->Line_18 $$ reformat(elt)[ FD ]
Line_5 $$ final CharSequence chars = editor.getDocument().getCharsSequence()-->Line_6 $$ if (CharArrayUtil.regionMatches(chars, caretOffset, "[ FD ]
