Line_13 $$ final LogicalPosition logicalPosition = getEditor().offsetToLogicalPosition(offset)-->Line_16 $$ assertEquals(visualPosition, getEditor().logicalToVisualPosition(logicalPosition))[ FD ]
Line_5 $$ final EditorSettings settings = getEditor().getSettings()-->Line_6 $$ settings.setUseSoftWraps(false)[ FD ]
Line_2 $$ public void testSoftWrapCacheReset() throws IOException -->Line_10 $$ getEditor().getCaretModel().moveToOffset(getEditor().getDocument().getTextLength())[ CD ]
Line_15 $$ final VisualPosition visualPosition = getEditor().offsetToVisualPosition(offset)-->Line_16 $$ assertEquals(visualPosition, getEditor().logicalToVisualPosition(logicalPosition))[ FD ]
Line_13 $$ final LogicalPosition logicalPosition = getEditor().offsetToLogicalPosition(offset)-->Line_14 $$ assertEquals(offset, getEditor().logicalPositionToOffset(logicalPosition))[ FD ]
Line_2 $$ public void testSoftWrapCacheReset() throws IOException -->Line_11 $$ type("\n test")[ CD ]
Line_2 $$ public void testSoftWrapCacheReset() throws IOException -->Line_13 $$ final LogicalPosition logicalPosition = getEditor().offsetToLogicalPosition(offset)[ CD ]
Line_2 $$ public void testSoftWrapCacheReset() throws IOException -->Line_14 $$ assertEquals(offset, getEditor().logicalPositionToOffset(logicalPosition))[ CD ]
Line_12 $$ final int offset = getEditor().getDocument().getTextLength() - 1-->Line_14 $$ assertEquals(offset, getEditor().logicalPositionToOffset(logicalPosition))[ FD ]
Line_2 $$ public void testSoftWrapCacheReset() throws IOException -->Line_3 $$ String text = "\t first line\n" + "\t second line\n" + "\t third line"[ CD ]
Line_2 $$ public void testSoftWrapCacheReset() throws IOException -->Line_15 $$ final VisualPosition visualPosition = getEditor().offsetToVisualPosition(offset)[ CD ]
Line_2 $$ public void testSoftWrapCacheReset() throws IOException -->Line_17 $$ assertEquals(logicalPosition, getEditor().visualToLogicalPosition(visualPosition))[ CD ]
Line_3 $$ String text = "\t first line\n" + "\t second line\n" + "\t third line"-->Line_7 $$ int startOffset = text.indexOf("\t third") - 1[ FD ]
Line_2 $$ public void testSoftWrapCacheReset() throws IOException -->Line_4 $$ init(40, text)[ CD ]
Line_2 $$ public void testSoftWrapCacheReset() throws IOException -->Line_8 $$ getEditor().getDocument().deleteString(startOffset, text.length())[ CD ]
Line_2 $$ public void testSoftWrapCacheReset() throws IOException -->Line_7 $$ int startOffset = text.indexOf("\t third") - 1[ CD ]
Line_12 $$ final int offset = getEditor().getDocument().getTextLength() - 1-->Line_15 $$ final VisualPosition visualPosition = getEditor().offsetToVisualPosition(offset)[ FD ]
Line_2 $$ public void testSoftWrapCacheReset() throws IOException -->Line_5 $$ final EditorSettings settings = getEditor().getSettings()[ CD ]
Line_13 $$ final LogicalPosition logicalPosition = getEditor().offsetToLogicalPosition(offset)-->Line_17 $$ assertEquals(logicalPosition, getEditor().visualToLogicalPosition(visualPosition))[ FD ]
Line_15 $$ final VisualPosition visualPosition = getEditor().offsetToVisualPosition(offset)-->Line_17 $$ assertEquals(logicalPosition, getEditor().visualToLogicalPosition(visualPosition))[ FD ]
Line_5 $$ final EditorSettings settings = getEditor().getSettings()-->Line_9 $$ settings.setUseSoftWraps(true)[ FD ]
Line_3 $$ String text = "\t first line\n" + "\t second line\n" + "\t third line"-->Line_8 $$ getEditor().getDocument().deleteString(startOffset, text.length())[ FD ]
Line_7 $$ int startOffset = text.indexOf("\t third") - 1-->Line_8 $$ getEditor().getDocument().deleteString(startOffset, text.length())[ FD ]
Line_2 $$ public void testSoftWrapCacheReset() throws IOException -->Line_16 $$ assertEquals(visualPosition, getEditor().logicalToVisualPosition(logicalPosition))[ CD ]
Line_3 $$ String text = "\t first line\n" + "\t second line\n" + "\t third line"-->Line_4 $$ init(40, text)[ FD ]
Line_2 $$ public void testSoftWrapCacheReset() throws IOException -->Line_6 $$ settings.setUseSoftWraps(false)[ CD ]
Line_2 $$ public void testSoftWrapCacheReset() throws IOException -->Line_12 $$ final int offset = getEditor().getDocument().getTextLength() - 1[ CD ]
Line_2 $$ public void testSoftWrapCacheReset() throws IOException -->Line_9 $$ settings.setUseSoftWraps(true)[ CD ]
Line_12 $$ final int offset = getEditor().getDocument().getTextLength() - 1-->Line_13 $$ final LogicalPosition logicalPosition = getEditor().offsetToLogicalPosition(offset)[ FD ]
