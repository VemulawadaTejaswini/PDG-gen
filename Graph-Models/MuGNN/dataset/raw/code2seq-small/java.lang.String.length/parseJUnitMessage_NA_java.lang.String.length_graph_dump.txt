Line_5 $$ if (message.startsWith(RUNNING_SUBSTRING)) -->Line_6 $$ startIndex = RUNNING_SUBSTRING.length()[ CD ]
Line_7 $$ endIndex = message.length()-->Line_20 $$ if (endIndex < startIndex)[ FD ]
Line_11 $$ endIndex = message.length() - FAILED_SUBSTRING.length()-->Line_22 $$ final String possibleTestClassName = message.substring(startIndex, endIndex)[ FD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_24 $$ final PsiManager psiManager = PsiManager.getInstance(project)[ CD ]
Line_4 $$ int endIndex-->Line_20 $$ if (endIndex < startIndex)[ FD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_20 $$ if (endIndex < startIndex)[ CD ]
Line_9 $$ startIndex = TEST_SUBSTRING.length()-->Line_20 $$ if (endIndex < startIndex)[ FD ]
Line_28 $$ if (psiClass == null)-->Line_29 $$ return[ CD ]
Line_36 $$ if (psiFile[0] == null)-->Line_37 $$ return null[ CD ]
Line_5 $$ if (message.startsWith(RUNNING_SUBSTRING)) -->Line_8 $$ if (message.startsWith(TEST_SUBSTRING)) [ CD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_11 $$ endIndex = message.length() - FAILED_SUBSTRING.length()[ FD ]
Line_3 $$ int startIndex-->Line_20 $$ if (endIndex < startIndex)[ FD ]
Line_6 $$ startIndex = RUNNING_SUBSTRING.length()-->Line_9 $$ startIndex = TEST_SUBSTRING.length()[ FD ]
Line_30 $$ PsiElement parent = psiClass.getParent()-->Line_31 $$ if (parent instanceof PsiFile) [ FD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_22 $$ final String possibleTestClassName = message.substring(startIndex, endIndex)[ FD ]
Line_7 $$ endIndex = message.length()-->Line_22 $$ final String possibleTestClassName = message.substring(startIndex, endIndex)[ FD ]
Line_25 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_30 $$ PsiElement parent = psiClass.getParent()[ CD ]
Line_3 $$ int startIndex-->Line_6 $$ startIndex = RUNNING_SUBSTRING.length()[ FD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_27 $$ PsiClass psiClass = JavaPsiFacade.getInstance(psiManager.getProject()).findClass(possibleTestClassName, GlobalSearchScope.allScope(project))[ FD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_10 $$ if (message.endsWith(FAILED_SUBSTRING)) [ FD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_24 $$ final PsiManager psiManager = PsiManager.getInstance(project)[ FD ]
Line_4 $$ int endIndex-->Line_11 $$ endIndex = message.length() - FAILED_SUBSTRING.length()[ FD ]
Line_13 $$ endIndex = message.length() - FAILED_SUBSTRING_2.length()-->Line_20 $$ if (endIndex < startIndex)[ FD ]
Line_11 $$ endIndex = message.length() - FAILED_SUBSTRING.length()-->Line_13 $$ endIndex = message.length() - FAILED_SUBSTRING_2.length()[ FD ]
Line_4 $$ int endIndex-->Line_7 $$ endIndex = message.length()[ FD ]
Line_5 $$ if (message.startsWith(RUNNING_SUBSTRING)) -->Line_7 $$ endIndex = message.length()[ CD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_12 $$ if (message.endsWith(FAILED_SUBSTRING_2)) [ FD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_22 $$ final String possibleTestClassName = message.substring(startIndex, endIndex)[ CD ]
Line_6 $$ startIndex = RUNNING_SUBSTRING.length()-->Line_22 $$ final String possibleTestClassName = message.substring(startIndex, endIndex)[ FD ]
Line_3 $$ int startIndex-->Line_22 $$ final String possibleTestClassName = message.substring(startIndex, endIndex)[ FD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_13 $$ endIndex = message.length() - FAILED_SUBSTRING_2.length()[ FD ]
Line_8 $$ if (message.startsWith(TEST_SUBSTRING)) -->Line_9 $$ startIndex = TEST_SUBSTRING.length()[ CD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_5 $$ if (message.startsWith(RUNNING_SUBSTRING)) [ CD ]
Line_8 $$ if (message.startsWith(TEST_SUBSTRING)) -->Line_18 $$ return null[ CD ]
Line_27 $$ PsiClass psiClass = JavaPsiFacade.getInstance(psiManager.getProject()).findClass(possibleTestClassName, GlobalSearchScope.allScope(project))-->Line_30 $$ PsiElement parent = psiClass.getParent()[ FD ]
Line_22 $$ final String possibleTestClassName = message.substring(startIndex, endIndex)-->Line_27 $$ PsiClass psiClass = JavaPsiFacade.getInstance(psiManager.getProject()).findClass(possibleTestClassName, GlobalSearchScope.allScope(project))[ FD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_4 $$ int endIndex[ CD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_38 $$ return new PlaceInfo(psiFile[0].getVirtualFile(), 1, 1, startIndex, endIndex - 1)[ CD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_7 $$ endIndex = message.length()[ FD ]
Line_10 $$ if (message.endsWith(FAILED_SUBSTRING)) -->Line_11 $$ endIndex = message.length() - FAILED_SUBSTRING.length()[ CD ]
Line_12 $$ if (message.endsWith(FAILED_SUBSTRING_2)) -->Line_13 $$ endIndex = message.length() - FAILED_SUBSTRING_2.length()[ CD ]
Line_9 $$ startIndex = TEST_SUBSTRING.length()-->Line_22 $$ final String possibleTestClassName = message.substring(startIndex, endIndex)[ FD ]
Line_4 $$ int endIndex-->Line_22 $$ final String possibleTestClassName = message.substring(startIndex, endIndex)[ FD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_3 $$ int startIndex[ CD ]
Line_20 $$ if (endIndex < startIndex)-->Line_21 $$ return null[ CD ]
Line_24 $$ final PsiManager psiManager = PsiManager.getInstance(project)-->Line_27 $$ PsiClass psiClass = JavaPsiFacade.getInstance(psiManager.getProject()).findClass(possibleTestClassName, GlobalSearchScope.allScope(project))[ FD ]
Line_7 $$ endIndex = message.length()-->Line_13 $$ endIndex = message.length() - FAILED_SUBSTRING_2.length()[ FD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_8 $$ if (message.startsWith(TEST_SUBSTRING)) [ FD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_25 $$ ApplicationManager.getApplication().runReadAction(new Runnable() [ CD ]
Line_4 $$ int endIndex-->Line_13 $$ endIndex = message.length() - FAILED_SUBSTRING_2.length()[ FD ]
Line_25 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_27 $$ PsiClass psiClass = JavaPsiFacade.getInstance(psiManager.getProject()).findClass(possibleTestClassName, GlobalSearchScope.allScope(project))[ CD ]
Line_8 $$ if (message.startsWith(TEST_SUBSTRING)) -->Line_10 $$ if (message.endsWith(FAILED_SUBSTRING)) [ CD ]
Line_6 $$ startIndex = RUNNING_SUBSTRING.length()-->Line_20 $$ if (endIndex < startIndex)[ FD ]
Line_7 $$ endIndex = message.length()-->Line_11 $$ endIndex = message.length() - FAILED_SUBSTRING.length()[ FD ]
Line_12 $$ if (message.endsWith(FAILED_SUBSTRING_2)) -->Line_15 $$ return null[ CD ]
Line_3 $$ int startIndex-->Line_9 $$ startIndex = TEST_SUBSTRING.length()[ FD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_23 $$ final PsiFile[] psiFile = new PsiFile[1][ CD ]
Line_31 $$ if (parent instanceof PsiFile) -->Line_32 $$ psiFile[0] = (PsiFile) parent[ CD ]
Line_10 $$ if (message.endsWith(FAILED_SUBSTRING)) -->Line_12 $$ if (message.endsWith(FAILED_SUBSTRING_2)) [ CD ]
Line_25 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_31 $$ if (parent instanceof PsiFile) [ CD ]
Line_27 $$ PsiClass psiClass = JavaPsiFacade.getInstance(psiManager.getProject()).findClass(possibleTestClassName, GlobalSearchScope.allScope(project))-->Line_28 $$ if (psiClass == null)[ FD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_36 $$ if (psiFile[0] == null)[ CD ]
Line_13 $$ endIndex = message.length() - FAILED_SUBSTRING_2.length()-->Line_22 $$ final String possibleTestClassName = message.substring(startIndex, endIndex)[ FD ]
Line_25 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_28 $$ if (psiClass == null)[ CD ]
Line_2 $$ static PlaceInfo parseJUnitMessage(final Project project, String message) -->Line_5 $$ if (message.startsWith(RUNNING_SUBSTRING)) [ FD ]
Line_11 $$ endIndex = message.length() - FAILED_SUBSTRING.length()-->Line_20 $$ if (endIndex < startIndex)[ FD ]
