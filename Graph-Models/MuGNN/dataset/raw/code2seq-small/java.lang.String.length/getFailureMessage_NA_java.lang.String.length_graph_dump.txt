Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_99 $$ sb.append("</pre>")[ CD ]
Line_60 $$ Matcher messageMatcher = pattern.matcher(consoleOutput)-->Line_61 $$ if (messageMatcher.find()) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_56 $$ sb.append(".</p>")[ FD ]
Line_90 $$ consoleOutput = consoleOutput.substring(x)-->Line_94 $$ y = consoleOutput.indexOf("\n", y)[ FD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_27 $$ sb.append("/git-commit-plugins\\\">")[ CD ]
Line_71 $$ x = consoleOutput.indexOf("\n", x)-->Line_90 $$ consoleOutput = consoleOutput.substring(x)[ FD ]
Line_68 $$ int x = consoleOutput.indexOf("[exec] * Exception is:")-->Line_79 $$ x = consoleOutput.indexOf("Total time:", x)[ FD ]
Line_4 $$ String consoleOutput = JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"))-->Line_79 $$ x = consoleOutput.indexOf("Total time:", x)[ FD ]
Line_4 $$ String consoleOutput = JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"))-->Line_83 $$ consoleOutput = consoleOutput.substring(0, x)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_52 $$ sb.append("/git-commit-plugins\\\">git-commit-plugins</a>. ")[ FD ]
Line_5 $$ if (consoleOutput.indexOf("--abort") != -1) -->Line_16 $$ sb.append(project.getProperty("github.pull.request.head.branch"))[ CD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_8 $$ sb.append(project.getProperty("github.pull.request.head.username"))[ FD ]
Line_68 $$ int x = consoleOutput.indexOf("[exec] * Exception is:")-->Line_74 $$ x = consoleOutput.indexOf("merge-test-results:")[ FD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_29 $$ sb.append("</a></strong>")[ CD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_30 $$ sb.append(" to an existing git id from ")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_35 $$ sb.append("\\\">")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_54 $$ sb.append("global.engineering/blog/-/blogs/new-tests-for-the-")[ FD ]
Line_44 $$ if (buildURL.contains("plugins") || jobVariant.contains("plugins")) -->Line_56 $$ sb.append(".</p>")[ CD ]
Line_60 $$ Matcher messageMatcher = pattern.matcher(consoleOutput)-->Line_63 $$ sb.append(messageMatcher.group("snippet"))[ FD ]
Line_69 $$ if (x != -1) -->Line_71 $$ x = consoleOutput.indexOf("\n", x)[ CD ]
Line_68 $$ int x = consoleOutput.indexOf("[exec] * Exception is:")-->Line_78 $$ if (x != -1) [ FD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_26 $$ sb.append(project.getProperty("github.pull.request.head.branch"))[ CD ]
Line_76 $$ if (x == -1) -->Line_77 $$ x = consoleOutput.indexOf("BUILD FAILED")[ CD ]
Line_68 $$ int x = consoleOutput.indexOf("[exec] * Exception is:")-->Line_82 $$ if (x != -1) [ FD ]
Line_89 $$ if (x != -1) -->Line_90 $$ consoleOutput = consoleOutput.substring(x)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_8 $$ sb.append(project.getProperty("github.pull.request.head.username"))[ FD ]
Line_79 $$ x = consoleOutput.indexOf("Total time:", x)-->Line_89 $$ if (x != -1) [ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_12 $$ sb.append(project.getProperty("github.pull.request.head.branch"))[ FD ]
Line_70 $$ x = x + 500-->Line_77 $$ x = consoleOutput.indexOf("BUILD FAILED")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_46 $$ sb.append("please edit your <a href=\\\"https://github.com/")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_40 $$ sb.append(".</strong></p>")[ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_14 $$ sb.append(project.getProperty("github.pull.request.head.username"))[ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_68 $$ int x = consoleOutput.indexOf("[exec] * Exception is:")[ CD ]
Line_61 $$ if (messageMatcher.find()) -->Line_62 $$ sb.append("<pre>")[ CD ]
Line_68 $$ int x = consoleOutput.indexOf("[exec] * Exception is:")-->Line_87 $$ x = matcher.start() + 1[ FD ]
Line_90 $$ consoleOutput = consoleOutput.substring(x)-->Line_95 $$ consoleOutput = consoleOutput.substring(y)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_53 $$ sb.append("Click <a href=\\\"https://in.liferay.com/web/")[ FD ]
Line_79 $$ x = consoleOutput.indexOf("Total time:", x)-->Line_82 $$ if (x != -1) [ FD ]
Line_68 $$ int x = consoleOutput.indexOf("[exec] * Exception is:")-->Line_89 $$ if (x != -1) [ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_38 $$ sb.append(project.getProperty("plugins.branch.name"))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_65 $$ return sb.toString()[ FD ]
Line_71 $$ x = consoleOutput.indexOf("\n", x)-->Line_76 $$ if (x == -1) [ FD ]
Line_85 $$ Matcher matcher = _pattern.matcher(consoleOutput)-->Line_86 $$ while (matcher.find()) [ FD ]
Line_68 $$ int x = consoleOutput.indexOf("[exec] * Exception is:")-->Line_76 $$ if (x == -1) [ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_98 $$ sb.append(JenkinsResultsParserUtil.fixJSON(consoleOutput))[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_36 $$ sb.append(project.getProperty("plugins.repository"))[ FD ]
Line_4 $$ String consoleOutput = JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"))-->Line_74 $$ x = consoleOutput.indexOf("merge-test-results:")[ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_22 $$ sb.append(project.getProperty("github.pull.request.head.username"))[ FD ]
Line_68 $$ int x = consoleOutput.indexOf("[exec] * Exception is:")-->Line_73 $$ if (x == -1) [ FD ]
Line_71 $$ x = consoleOutput.indexOf("\n", x)-->Line_83 $$ consoleOutput = consoleOutput.substring(0, x)[ FD ]
Line_74 $$ x = consoleOutput.indexOf("merge-test-results:")-->Line_87 $$ x = matcher.start() + 1[ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_34 $$ sb.append(project.getProperty("plugins.branch.name"))[ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_73 $$ if (x == -1) [ CD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_100 $$ return sb.toString()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_97 $$ sb.append("<pre>")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_23 $$ sb.append("/")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_45 $$ sb.append("<p>To include a plugin fix for this pull request, ")[ FD ]
Line_73 $$ if (x == -1) -->Line_74 $$ x = consoleOutput.indexOf("merge-test-results:")[ CD ]
Line_4 $$ String consoleOutput = JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"))-->Line_77 $$ x = consoleOutput.indexOf("BUILD FAILED")[ FD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_22 $$ sb.append(project.getProperty("github.pull.request.head.username"))[ CD ]
Line_70 $$ x = x + 500-->Line_90 $$ consoleOutput = consoleOutput.substring(x)[ FD ]
Line_74 $$ x = consoleOutput.indexOf("merge-test-results:")-->Line_83 $$ consoleOutput = consoleOutput.substring(0, x)[ FD ]
Line_4 $$ String consoleOutput = JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"))-->Line_92 $$ if (consoleOutput.length() > 2500) [ FD ]
Line_4 $$ String consoleOutput = JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"))-->Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) [ FD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_21 $$ sb.append("<strong><a href=\\\"https://github.com/")[ CD ]
Line_61 $$ if (messageMatcher.find()) -->Line_64 $$ sb.append("</pre>")[ CD ]
Line_5 $$ if (consoleOutput.indexOf("--abort") != -1) -->Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ sb.append(project.getProperty("github.pull.request.head.branch"))[ FD ]
Line_93 $$ int y = consoleOutput.length() - 2500-->Line_95 $$ consoleOutput = consoleOutput.substring(y)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_38 $$ sb.append(project.getProperty("plugins.branch.name"))[ FD ]
Line_41 $$ if (buildURL.contains("portal-acceptance")) -->Line_42 $$ JSONObject jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(buildURL + "api/json"))[ CD ]
Line_74 $$ x = consoleOutput.indexOf("merge-test-results:")-->Line_79 $$ x = consoleOutput.indexOf("Total time:", x)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_62 $$ sb.append("<pre>")[ FD ]
Line_74 $$ x = consoleOutput.indexOf("merge-test-results:")-->Line_82 $$ if (x != -1) [ FD ]
Line_70 $$ x = x + 500-->Line_87 $$ x = matcher.start() + 1[ FD ]
Line_44 $$ if (buildURL.contains("plugins") || jobVariant.contains("plugins")) -->Line_45 $$ sb.append("<p>To include a plugin fix for this pull request, ")[ CD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_47 $$ sb.append(project.getProperty("github.pull.request.head.username"))[ FD ]
Line_44 $$ if (buildURL.contains("plugins") || jobVariant.contains("plugins")) -->Line_54 $$ sb.append("global.engineering/blog/-/blogs/new-tests-for-the-")[ CD ]
Line_86 $$ while (matcher.find()) -->Line_87 $$ x = matcher.start() + 1[ CD ]
Line_70 $$ x = x + 500-->Line_74 $$ x = consoleOutput.indexOf("merge-test-results:")[ FD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_34 $$ sb.append(project.getProperty("plugins.branch.name"))[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_27 $$ sb.append("/git-commit-plugins\\\">")[ FD ]
Line_44 $$ if (buildURL.contains("plugins") || jobVariant.contains("plugins")) -->Line_46 $$ sb.append("please edit your <a href=\\\"https://github.com/")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ sb.append(project.getProperty("github.pull.request.head.branch"))[ FD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_37 $$ sb.append("/")[ CD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_69 $$ if (x != -1) [ CD ]
Line_77 $$ x = consoleOutput.indexOf("BUILD FAILED")-->Line_83 $$ consoleOutput = consoleOutput.substring(0, x)[ FD ]
Line_90 $$ consoleOutput = consoleOutput.substring(x)-->Line_98 $$ sb.append(JenkinsResultsParserUtil.fixJSON(consoleOutput))[ FD ]
Line_92 $$ if (consoleOutput.length() > 2500) -->Line_93 $$ int y = consoleOutput.length() - 2500[ CD ]
Line_82 $$ if (x != -1) -->Line_83 $$ consoleOutput = consoleOutput.substring(0, x)[ CD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_35 $$ sb.append("\\\">")[ CD ]
Line_71 $$ x = consoleOutput.indexOf("\n", x)-->Line_74 $$ x = consoleOutput.indexOf("merge-test-results:")[ FD ]
Line_74 $$ x = consoleOutput.indexOf("merge-test-results:")-->Line_78 $$ if (x != -1) [ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_85 $$ Matcher matcher = _pattern.matcher(consoleOutput)[ CD ]
Line_71 $$ x = consoleOutput.indexOf("\n", x)-->Line_87 $$ x = matcher.start() + 1[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_48 $$ sb.append("/")[ FD ]
Line_90 $$ consoleOutput = consoleOutput.substring(x)-->Line_93 $$ int y = consoleOutput.length() - 2500[ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_97 $$ sb.append("<pre>")[ CD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_92 $$ if (consoleOutput.length() > 2500) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_28 $$ sb.append("git-commit-plugins")[ FD ]
Line_5 $$ if (consoleOutput.indexOf("--abort") != -1) -->Line_6 $$ sb.append("<p>Please fix <strong>rebase errors</strong> on ")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_51 $$ sb.append(project.getProperty("github.pull.request.head.branch"))[ FD ]
Line_68 $$ int x = consoleOutput.indexOf("[exec] * Exception is:")-->Line_69 $$ if (x != -1) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_39 $$ sb.append("</a>")[ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_49 $$ sb.append(project.getProperty("portal.repository"))[ FD ]
Line_4 $$ String consoleOutput = JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"))-->Line_85 $$ Matcher matcher = _pattern.matcher(consoleOutput)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_20 $$ sb.append("<p>Please update ")[ FD ]
Line_74 $$ x = consoleOutput.indexOf("merge-test-results:")-->Line_90 $$ consoleOutput = consoleOutput.substring(x)[ FD ]
Line_61 $$ if (messageMatcher.find()) -->Line_63 $$ sb.append(messageMatcher.group("snippet"))[ CD ]
Line_68 $$ int x = consoleOutput.indexOf("[exec] * Exception is:")-->Line_77 $$ x = consoleOutput.indexOf("BUILD FAILED")[ FD ]
Line_5 $$ if (consoleOutput.indexOf("--abort") != -1) -->Line_12 $$ sb.append(project.getProperty("github.pull.request.head.branch"))[ CD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_41 $$ if (buildURL.contains("portal-acceptance")) [ FD ]
Line_70 $$ x = x + 500-->Line_83 $$ consoleOutput = consoleOutput.substring(0, x)[ FD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_41 $$ if (buildURL.contains("portal-acceptance")) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_29 $$ sb.append("</a></strong>")[ FD ]
Line_70 $$ x = x + 500-->Line_82 $$ if (x != -1) [ FD ]
Line_77 $$ x = consoleOutput.indexOf("BUILD FAILED")-->Line_78 $$ if (x != -1) [ FD ]
Line_71 $$ x = consoleOutput.indexOf("\n", x)-->Line_79 $$ x = consoleOutput.indexOf("Total time:", x)[ FD ]
Line_77 $$ x = consoleOutput.indexOf("BUILD FAILED")-->Line_89 $$ if (x != -1) [ FD ]
Line_41 $$ if (buildURL.contains("portal-acceptance")) -->Line_44 $$ if (buildURL.contains("plugins") || jobVariant.contains("plugins")) [ CD ]
Line_77 $$ x = consoleOutput.indexOf("BUILD FAILED")-->Line_82 $$ if (x != -1) [ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_89 $$ if (x != -1) [ CD ]
Line_83 $$ consoleOutput = consoleOutput.substring(0, x)-->Line_95 $$ consoleOutput = consoleOutput.substring(y)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_17 $$ sb.append("</a></strong>")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_99 $$ sb.append("</pre>")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.append("/tree/")[ FD ]
Line_71 $$ x = consoleOutput.indexOf("\n", x)-->Line_78 $$ if (x != -1) [ FD ]
Line_79 $$ x = consoleOutput.indexOf("Total time:", x)-->Line_90 $$ consoleOutput = consoleOutput.substring(x)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ sb.append(project.getProperty("repository"))[ FD ]
Line_74 $$ x = consoleOutput.indexOf("merge-test-results:")-->Line_89 $$ if (x != -1) [ FD ]
Line_44 $$ if (buildURL.contains("plugins") || jobVariant.contains("plugins")) -->Line_53 $$ sb.append("Click <a href=\\\"https://in.liferay.com/web/")[ CD ]
Line_4 $$ String consoleOutput = JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"))-->Line_5 $$ if (consoleOutput.indexOf("--abort") != -1) [ FD ]
Line_83 $$ consoleOutput = consoleOutput.substring(0, x)-->Line_94 $$ y = consoleOutput.indexOf("\n", y)[ FD ]
Line_5 $$ if (consoleOutput.indexOf("--abort") != -1) -->Line_17 $$ sb.append("</a></strong>")[ CD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_32 $$ sb.append(project.getProperty("plugins.repository"))[ FD ]
Line_43 $$ String jobVariant = JenkinsResultsParserUtil.getJobVariant(jsonObject)-->Line_44 $$ if (buildURL.contains("plugins") || jobVariant.contains("plugins")) [ FD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_31 $$ sb.append("<strong><a href=\\\"https://github.com/liferay/")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_26 $$ sb.append(project.getProperty("github.pull.request.head.branch"))[ FD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_38 $$ sb.append(project.getProperty("plugins.branch.name"))[ CD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_44 $$ if (buildURL.contains("plugins") || jobVariant.contains("plugins")) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_49 $$ sb.append(project.getProperty("portal.repository"))[ FD ]
Line_68 $$ int x = consoleOutput.indexOf("[exec] * Exception is:")-->Line_90 $$ consoleOutput = consoleOutput.substring(x)[ FD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_32 $$ sb.append(project.getProperty("plugins.repository"))[ CD ]
Line_83 $$ consoleOutput = consoleOutput.substring(0, x)-->Line_85 $$ Matcher matcher = _pattern.matcher(consoleOutput)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_37 $$ sb.append("/")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_25 $$ sb.append("/blob/")[ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_76 $$ if (x == -1) [ CD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_23 $$ sb.append("/")[ CD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_36 $$ sb.append(project.getProperty("plugins.repository"))[ CD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_10 $$ sb.append(project.getProperty("repository"))[ FD ]
Line_44 $$ if (buildURL.contains("plugins") || jobVariant.contains("plugins")) -->Line_47 $$ sb.append(project.getProperty("github.pull.request.head.username"))[ CD ]
Line_74 $$ x = consoleOutput.indexOf("merge-test-results:")-->Line_76 $$ if (x == -1) [ FD ]
Line_95 $$ consoleOutput = consoleOutput.substring(y)-->Line_98 $$ sb.append(JenkinsResultsParserUtil.fixJSON(consoleOutput))[ FD ]
Line_61 $$ if (messageMatcher.find()) -->Line_65 $$ return sb.toString()[ CD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_24 $$ sb.append(project.getProperty("portal.repository"))[ CD ]
Line_70 $$ x = x + 500-->Line_71 $$ x = consoleOutput.indexOf("\n", x)[ FD ]
Line_71 $$ x = consoleOutput.indexOf("\n", x)-->Line_73 $$ if (x == -1) [ FD ]
Line_70 $$ x = x + 500-->Line_73 $$ if (x == -1) [ FD ]
Line_5 $$ if (consoleOutput.indexOf("--abort") != -1) -->Line_7 $$ sb.append("<strong><a href=\\\"https://github.com/")[ CD ]
Line_83 $$ consoleOutput = consoleOutput.substring(0, x)-->Line_93 $$ int y = consoleOutput.length() - 2500[ FD ]
Line_5 $$ if (consoleOutput.indexOf("--abort") != -1) -->Line_13 $$ sb.append("\\\">")[ CD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_4 $$ String consoleOutput = JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"))[ CD ]
Line_79 $$ x = consoleOutput.indexOf("Total time:", x)-->Line_87 $$ x = matcher.start() + 1[ FD ]
Line_87 $$ x = matcher.start() + 1-->Line_90 $$ consoleOutput = consoleOutput.substring(x)[ FD ]
Line_93 $$ int y = consoleOutput.length() - 2500-->Line_94 $$ y = consoleOutput.indexOf("\n", y)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_63 $$ sb.append(messageMatcher.group("snippet"))[ FD ]
Line_4 $$ String consoleOutput = JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"))-->Line_68 $$ int x = consoleOutput.indexOf("[exec] * Exception is:")[ FD ]
Line_5 $$ if (consoleOutput.indexOf("--abort") != -1) -->Line_10 $$ sb.append(project.getProperty("repository"))[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_14 $$ sb.append(project.getProperty("github.pull.request.head.username"))[ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_5 $$ if (consoleOutput.indexOf("--abort") != -1) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_21 $$ sb.append("<strong><a href=\\\"https://github.com/")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_22 $$ sb.append(project.getProperty("github.pull.request.head.username"))[ FD ]
Line_71 $$ x = consoleOutput.indexOf("\n", x)-->Line_82 $$ if (x != -1) [ FD ]
Line_83 $$ consoleOutput = consoleOutput.substring(0, x)-->Line_98 $$ sb.append(JenkinsResultsParserUtil.fixJSON(consoleOutput))[ FD ]
Line_41 $$ if (buildURL.contains("portal-acceptance")) -->Line_43 $$ String jobVariant = JenkinsResultsParserUtil.getJobVariant(jsonObject)[ CD ]
Line_4 $$ String consoleOutput = JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"))-->Line_90 $$ consoleOutput = consoleOutput.substring(x)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_100 $$ return sb.toString()[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ sb.append(".</p>")[ FD ]
Line_94 $$ y = consoleOutput.indexOf("\n", y)-->Line_95 $$ consoleOutput = consoleOutput.substring(y)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_98 $$ sb.append(JenkinsResultsParserUtil.fixJSON(consoleOutput))[ FD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_25 $$ sb.append("/blob/")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_34 $$ sb.append(project.getProperty("plugins.branch.name"))[ FD ]
Line_44 $$ if (buildURL.contains("plugins") || jobVariant.contains("plugins")) -->Line_50 $$ sb.append("/blob/")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_24 $$ sb.append(project.getProperty("portal.repository"))[ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_51 $$ sb.append(project.getProperty("github.pull.request.head.branch"))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_9 $$ sb.append("/")[ FD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_40 $$ sb.append(".</strong></p>")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_50 $$ sb.append("/blob/")[ FD ]
Line_71 $$ x = consoleOutput.indexOf("\n", x)-->Line_77 $$ x = consoleOutput.indexOf("BUILD FAILED")[ FD ]
Line_77 $$ x = consoleOutput.indexOf("BUILD FAILED")-->Line_79 $$ x = consoleOutput.indexOf("Total time:", x)[ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_24 $$ sb.append(project.getProperty("portal.repository"))[ FD ]
Line_78 $$ if (x != -1) -->Line_79 $$ x = consoleOutput.indexOf("Total time:", x)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ sb.append("/")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_33 $$ sb.append("/commits/")[ FD ]
Line_44 $$ if (buildURL.contains("plugins") || jobVariant.contains("plugins")) -->Line_49 $$ sb.append(project.getProperty("portal.repository"))[ CD ]
Line_59 $$ for (Pattern pattern : _messagePatterns) -->Line_60 $$ Matcher messageMatcher = pattern.matcher(consoleOutput)[ FD ]
Line_79 $$ x = consoleOutput.indexOf("Total time:", x)-->Line_83 $$ consoleOutput = consoleOutput.substring(0, x)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_7 $$ sb.append("<strong><a href=\\\"https://github.com/")[ FD ]
Line_68 $$ int x = consoleOutput.indexOf("[exec] * Exception is:")-->Line_83 $$ consoleOutput = consoleOutput.substring(0, x)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_55 $$ sb.append("pull-request-tester-\\\">here</a> for more details")[ FD ]
Line_5 $$ if (consoleOutput.indexOf("--abort") != -1) -->Line_15 $$ sb.append("/")[ CD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_26 $$ sb.append(project.getProperty("github.pull.request.head.branch"))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_32 $$ sb.append(project.getProperty("plugins.repository"))[ FD ]
Line_4 $$ String consoleOutput = JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"))-->Line_98 $$ sb.append(JenkinsResultsParserUtil.fixJSON(consoleOutput))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_13 $$ sb.append("\\\">")[ FD ]
Line_44 $$ if (buildURL.contains("plugins") || jobVariant.contains("plugins")) -->Line_51 $$ sb.append(project.getProperty("github.pull.request.head.branch"))[ CD ]
Line_68 $$ int x = consoleOutput.indexOf("[exec] * Exception is:")-->Line_70 $$ x = x + 500[ FD ]
Line_5 $$ if (consoleOutput.indexOf("--abort") != -1) -->Line_8 $$ sb.append(project.getProperty("github.pull.request.head.username"))[ CD ]
Line_44 $$ if (buildURL.contains("plugins") || jobVariant.contains("plugins")) -->Line_52 $$ sb.append("/git-commit-plugins\\\">git-commit-plugins</a>. ")[ CD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_39 $$ sb.append("</a>")[ CD ]
Line_83 $$ consoleOutput = consoleOutput.substring(0, x)-->Line_90 $$ consoleOutput = consoleOutput.substring(x)[ FD ]
Line_76 $$ if (x == -1) -->Line_78 $$ if (x != -1) [ CD ]
Line_90 $$ consoleOutput = consoleOutput.substring(x)-->Line_92 $$ if (consoleOutput.length() > 2500) [ FD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_33 $$ sb.append("/commits/")[ CD ]
Line_83 $$ consoleOutput = consoleOutput.substring(0, x)-->Line_92 $$ if (consoleOutput.length() > 2500) [ FD ]
Line_92 $$ if (consoleOutput.length() > 2500) -->Line_95 $$ consoleOutput = consoleOutput.substring(y)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_6 $$ sb.append("<p>Please fix <strong>rebase errors</strong> on ")[ FD ]
Line_70 $$ x = x + 500-->Line_89 $$ if (x != -1) [ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_16 $$ sb.append(project.getProperty("github.pull.request.head.branch"))[ FD ]
Line_5 $$ if (consoleOutput.indexOf("--abort") != -1) -->Line_18 $$ sb.append(".</p>")[ CD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_28 $$ sb.append("git-commit-plugins")[ CD ]
Line_4 $$ String consoleOutput = JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"))-->Line_95 $$ consoleOutput = consoleOutput.substring(y)[ FD ]
Line_77 $$ x = consoleOutput.indexOf("BUILD FAILED")-->Line_87 $$ x = matcher.start() + 1[ FD ]
Line_74 $$ x = consoleOutput.indexOf("merge-test-results:")-->Line_77 $$ x = consoleOutput.indexOf("BUILD FAILED")[ FD ]
Line_85 $$ Matcher matcher = _pattern.matcher(consoleOutput)-->Line_87 $$ x = matcher.start() + 1[ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_82 $$ if (x != -1) [ CD ]
Line_4 $$ String consoleOutput = JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"))-->Line_71 $$ x = consoleOutput.indexOf("\n", x)[ FD ]
Line_77 $$ x = consoleOutput.indexOf("BUILD FAILED")-->Line_90 $$ consoleOutput = consoleOutput.substring(x)[ FD ]
Line_71 $$ x = consoleOutput.indexOf("\n", x)-->Line_89 $$ if (x != -1) [ FD ]
Line_4 $$ String consoleOutput = JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"))-->Line_94 $$ y = consoleOutput.indexOf("\n", y)[ FD ]
Line_5 $$ if (consoleOutput.indexOf("--abort") != -1) -->Line_14 $$ sb.append(project.getProperty("github.pull.request.head.username"))[ CD ]
Line_70 $$ x = x + 500-->Line_76 $$ if (x == -1) [ FD ]
Line_70 $$ x = x + 500-->Line_79 $$ x = consoleOutput.indexOf("Total time:", x)[ FD ]
Line_4 $$ String consoleOutput = JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"))-->Line_93 $$ int y = consoleOutput.length() - 2500[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_31 $$ sb.append("<strong><a href=\\\"https://github.com/liferay/")[ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_4 $$ String consoleOutput = JenkinsResultsParserUtil.toString(JenkinsResultsParserUtil.getLocalURL(buildURL + "/logText/progressiveText"))-->Line_60 $$ Matcher messageMatcher = pattern.matcher(consoleOutput)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_30 $$ sb.append(" to an existing git id from ")[ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_36 $$ sb.append(project.getProperty("plugins.repository"))[ FD ]
Line_42 $$ JSONObject jsonObject = JenkinsResultsParserUtil.toJSONObject(JenkinsResultsParserUtil.getLocalURL(buildURL + "api/json"))-->Line_43 $$ String jobVariant = JenkinsResultsParserUtil.getJobVariant(jsonObject)[ FD ]
Line_2 $$ public static String getFailureMessage(Project project, String buildURL) throws Exception -->Line_86 $$ while (matcher.find()) [ CD ]
Line_69 $$ if (x != -1) -->Line_70 $$ x = x + 500[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_47 $$ sb.append(project.getProperty("github.pull.request.head.username"))[ FD ]
Line_70 $$ x = x + 500-->Line_78 $$ if (x != -1) [ FD ]
Line_5 $$ if (consoleOutput.indexOf("--abort") != -1) -->Line_11 $$ sb.append("/tree/")[ CD ]
Line_68 $$ int x = consoleOutput.indexOf("[exec] * Exception is:")-->Line_71 $$ x = consoleOutput.indexOf("\n", x)[ FD ]
Line_44 $$ if (buildURL.contains("plugins") || jobVariant.contains("plugins")) -->Line_55 $$ sb.append("pull-request-tester-\\\">here</a> for more details")[ CD ]
Line_44 $$ if (buildURL.contains("plugins") || jobVariant.contains("plugins")) -->Line_48 $$ sb.append("/")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_64 $$ sb.append("</pre>")[ FD ]
Line_5 $$ if (consoleOutput.indexOf("--abort") != -1) -->Line_9 $$ sb.append("/")[ CD ]
Line_19 $$ if (consoleOutput.indexOf("fatal: Could not parse object") != -1) -->Line_20 $$ sb.append("<p>Please update ")[ CD ]
Line_92 $$ if (consoleOutput.length() > 2500) -->Line_94 $$ y = consoleOutput.indexOf("\n", y)[ CD ]
Line_87 $$ x = matcher.start() + 1-->Line_89 $$ if (x != -1) [ FD ]
