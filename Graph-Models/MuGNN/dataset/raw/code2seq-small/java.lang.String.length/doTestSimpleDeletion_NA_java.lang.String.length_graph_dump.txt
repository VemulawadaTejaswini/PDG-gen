Line_7 $$ XmlTag tag = XmlElementFactory.getInstance(getProject()).createXHTMLTagFromText("<a>" + text + "</a>")-->Line_8 $$ final PsiElement[] children = tag.getValue().getTextElements()[ FD ]
Line_6 $$ for (int j = i; j < text.length(); j++) -->Line_11 $$ assertEquals(text, xmlText.getText())[ CD ]
Line_2 $$ private static void doTestSimpleDeletion(final String text) throws IncorrectOperationException -->Line_6 $$ for (int j = i; j < text.length(); j++) [ FD ]
Line_6 $$ for (int j = i; j < text.length(); j++) -->Line_13 $$ final StringBuilder expected = new StringBuilder(text)[ CD ]
Line_6 $$ for (int j = i; j < text.length(); j++) -->Line_9 $$ assertEquals(1, children.length)[ CD ]
Line_2 $$ private static void doTestSimpleDeletion(final String text) throws IncorrectOperationException -->Line_11 $$ assertEquals(text, xmlText.getText())[ FD ]
Line_6 $$ for (int j = i; j < text.length(); j++) -->Line_14 $$ expected.delete(i, j)[ CD ]
Line_10 $$ final XmlText xmlText = (XmlText) children[0]-->Line_11 $$ assertEquals(text, xmlText.getText())[ FD ]
Line_6 $$ for (int j = i; j < text.length(); j++) -->Line_10 $$ final XmlText xmlText = (XmlText) children[0][ CD ]
Line_6 $$ for (int j = i; j < text.length(); j++) -->Line_12 $$ xmlText.removeText(i, j)[ CD ]
Line_2 $$ private static void doTestSimpleDeletion(final String text) throws IncorrectOperationException -->Line_5 $$ for (int i = 0; i < text.length(); i++) [ FD ]
Line_6 $$ for (int j = i; j < text.length(); j++) -->Line_8 $$ final PsiElement[] children = tag.getValue().getTextElements()[ CD ]
Line_13 $$ final StringBuilder expected = new StringBuilder(text)-->Line_14 $$ expected.delete(i, j)[ FD ]
Line_10 $$ final XmlText xmlText = (XmlText) children[0]-->Line_15 $$ assertEquals(expected.toString(), xmlText.getValue())[ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_12 $$ xmlText.removeText(i, j)[ FD ]
Line_6 $$ for (int j = i; j < text.length(); j++) -->Line_14 $$ expected.delete(i, j)[ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_6 $$ for (int j = i; j < text.length(); j++) [ CD ]
Line_6 $$ for (int j = i; j < text.length(); j++) -->Line_15 $$ assertEquals(expected.toString(), xmlText.getValue())[ CD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_14 $$ expected.delete(i, j)[ FD ]
Line_2 $$ private static void doTestSimpleDeletion(final String text) throws IncorrectOperationException -->Line_3 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() [ CD ]
Line_6 $$ for (int j = i; j < text.length(); j++) -->Line_12 $$ xmlText.removeText(i, j)[ FD ]
Line_10 $$ final XmlText xmlText = (XmlText) children[0]-->Line_12 $$ xmlText.removeText(i, j)[ FD ]
Line_13 $$ final StringBuilder expected = new StringBuilder(text)-->Line_15 $$ assertEquals(expected.toString(), xmlText.getValue())[ FD ]
Line_6 $$ for (int j = i; j < text.length(); j++) -->Line_7 $$ XmlTag tag = XmlElementFactory.getInstance(getProject()).createXHTMLTagFromText("<a>" + text + "</a>")[ CD ]
Line_3 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_5 $$ for (int i = 0; i < text.length(); i++) [ CD ]
