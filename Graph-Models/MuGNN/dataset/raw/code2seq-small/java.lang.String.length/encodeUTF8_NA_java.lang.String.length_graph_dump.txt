Line_22 $$ char c-->Line_27 $$ if (c > '߿') [ FD ]
Line_24 $$ c = s.charAt(j)-->Line_46 $$ c = s.charAt(j)[ FD ]
Line_44 $$ int len = length-->Line_50 $$ data[len++] = (byte) (0xE0 | c >> 12 & 0xF)[ FD ]
Line_45 $$ for (int j = i; j < charLength; ++j) -->Line_47 $$ if (c >= '\001' && c <= '\177') [ CD ]
Line_49 $$ if (c > '߿') -->Line_54 $$ data[len++] = (byte) (0xC0 | c >> 6 & 0x1F)[ CD ]
Line_21 $$ int byteLength = i-->Line_28 $$ byteLength += 3[ FD ]
Line_25 $$ if (c >= '\001' && c <= '\177') -->Line_27 $$ if (c > '߿') [ CD ]
Line_47 $$ if (c >= '\001' && c <= '\177') -->Line_48 $$ data[len++] = (byte) c[ CD ]
Line_23 $$ for (int j = i; j < charLength; ++j) -->Line_45 $$ for (int j = i; j < charLength; ++j) [ FD ]
Line_21 $$ int byteLength = i-->Line_33 $$ if (byteLength > maxByteLength) [ FD ]
Line_44 $$ int len = length-->Line_52 $$ data[len++] = (byte) (0x80 | c & 0x3F)[ FD ]
Line_49 $$ if (c > '߿') -->Line_55 $$ data[len++] = (byte) (0x80 | c & 0x3F)[ CD ]
Line_28 $$ byteLength += 3-->Line_33 $$ if (byteLength > maxByteLength) [ FD ]
Line_44 $$ int len = length-->Line_48 $$ data[len++] = (byte) c[ FD ]
Line_49 $$ if (c > '߿') -->Line_51 $$ data[len++] = (byte) (0x80 | c >> 6 & 0x3F)[ CD ]
Line_20 $$ int charLength = s.length()-->Line_23 $$ for (int j = i; j < charLength; ++j) [ FD ]
Line_46 $$ c = s.charAt(j)-->Line_49 $$ if (c > '߿') [ FD ]
Line_20 $$ int charLength = s.length()-->Line_45 $$ for (int j = i; j < charLength; ++j) [ FD ]
Line_30 $$ byteLength += 2-->Line_33 $$ if (byteLength > maxByteLength) [ FD ]
Line_24 $$ c = s.charAt(j)-->Line_27 $$ if (c > '߿') [ FD ]
Line_41 $$ if (length + byteLength - i > data.length) -->Line_42 $$ enlarge(byteLength - i)[ CD ]
Line_44 $$ int len = length-->Line_55 $$ data[len++] = (byte) (0x80 | c & 0x3F)[ FD ]
Line_44 $$ int len = length-->Line_54 $$ data[len++] = (byte) (0xC0 | c >> 6 & 0x1F)[ FD ]
Line_21 $$ int byteLength = i-->Line_26 $$ byteLength++[ FD ]
Line_27 $$ if (c > '߿') -->Line_30 $$ byteLength += 2[ CD ]
Line_28 $$ byteLength += 3-->Line_30 $$ byteLength += 2[ FD ]
Line_37 $$ if (start >= 0) -->Line_39 $$ data[start + 1] = (byte) byteLength[ CD ]
Line_49 $$ if (c > '߿') -->Line_52 $$ data[len++] = (byte) (0x80 | c & 0x3F)[ CD ]
Line_27 $$ if (c > '߿') -->Line_28 $$ byteLength += 3[ CD ]
Line_23 $$ for (int j = i; j < charLength; ++j) -->Line_25 $$ if (c >= '\001' && c <= '\177') [ CD ]
Line_23 $$ for (int j = i; j < charLength; ++j) -->Line_24 $$ c = s.charAt(j)[ FD ]
Line_36 $$ int start = length - i - 2-->Line_37 $$ if (start >= 0) [ FD ]
Line_45 $$ for (int j = i; j < charLength; ++j) -->Line_46 $$ c = s.charAt(j)[ CD ]
Line_45 $$ for (int j = i; j < charLength; ++j) -->Line_46 $$ c = s.charAt(j)[ FD ]
Line_23 $$ for (int j = i; j < charLength; ++j) -->Line_24 $$ c = s.charAt(j)[ CD ]
Line_49 $$ if (c > '߿') -->Line_50 $$ data[len++] = (byte) (0xE0 | c >> 12 & 0xF)[ CD ]
Line_37 $$ if (start >= 0) -->Line_38 $$ data[start] = (byte) (byteLength >>> 8)[ CD ]
Line_28 $$ byteLength += 3-->Line_26 $$ byteLength++[ FD ]
Line_23 $$ for (int j = i; j < charLength; ++j) -->Line_46 $$ c = s.charAt(j)[ FD ]
Line_30 $$ byteLength += 2-->Line_26 $$ byteLength++[ FD ]
Line_24 $$ c = s.charAt(j)-->Line_49 $$ if (c > '߿') [ FD ]
Line_21 $$ int byteLength = i-->Line_30 $$ byteLength += 2[ FD ]
Line_25 $$ if (c >= '\001' && c <= '\177') -->Line_26 $$ byteLength++[ CD ]
Line_22 $$ char c-->Line_49 $$ if (c > '߿') [ FD ]
Line_44 $$ int len = length-->Line_51 $$ data[len++] = (byte) (0x80 | c >> 6 & 0x3F)[ FD ]
Line_47 $$ if (c >= '\001' && c <= '\177') -->Line_49 $$ if (c > '߿') [ CD ]
Line_22 $$ char c-->Line_24 $$ c = s.charAt(j)[ FD ]
Line_22 $$ char c-->Line_46 $$ c = s.charAt(j)[ FD ]
