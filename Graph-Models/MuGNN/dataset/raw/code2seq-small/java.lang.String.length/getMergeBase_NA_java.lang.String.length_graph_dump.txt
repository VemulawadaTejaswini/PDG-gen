Line_2 $$ public static GitRevisionNumber getMergeBase(final Project project, final VirtualFile root, @NotNull final String first, @NotNull final String second) throws VcsException -->Line_4 $$ h.setSilent(true)[ CD ]
Line_7 $$ if (output.length() == 0) -->Line_10 $$ return GitRevisionNumber.resolve(project, root, output)[ CD ]
Line_3 $$ GitSimpleHandler h = new GitSimpleHandler(project, root, GitCommand.MERGE_BASE)-->Line_6 $$ String output = h.run().trim()[ FD ]
Line_2 $$ public static GitRevisionNumber getMergeBase(final Project project, final VirtualFile root, @NotNull final String first, @NotNull final String second) throws VcsException -->Line_7 $$ if (output.length() == 0) [ CD ]
Line_6 $$ String output = h.run().trim()-->Line_10 $$ return GitRevisionNumber.resolve(project, root, output)[ FD ]
Line_2 $$ public static GitRevisionNumber getMergeBase(final Project project, final VirtualFile root, @NotNull final String first, @NotNull final String second) throws VcsException -->Line_5 $$ h.addParameters(first, second)[ FD ]
Line_3 $$ GitSimpleHandler h = new GitSimpleHandler(project, root, GitCommand.MERGE_BASE)-->Line_4 $$ h.setSilent(true)[ FD ]
Line_6 $$ String output = h.run().trim()-->Line_7 $$ if (output.length() == 0) [ FD ]
Line_2 $$ public static GitRevisionNumber getMergeBase(final Project project, final VirtualFile root, @NotNull final String first, @NotNull final String second) throws VcsException -->Line_6 $$ String output = h.run().trim()[ CD ]
Line_3 $$ GitSimpleHandler h = new GitSimpleHandler(project, root, GitCommand.MERGE_BASE)-->Line_5 $$ h.addParameters(first, second)[ FD ]
Line_2 $$ public static GitRevisionNumber getMergeBase(final Project project, final VirtualFile root, @NotNull final String first, @NotNull final String second) throws VcsException -->Line_5 $$ h.addParameters(first, second)[ CD ]
Line_2 $$ public static GitRevisionNumber getMergeBase(final Project project, final VirtualFile root, @NotNull final String first, @NotNull final String second) throws VcsException -->Line_10 $$ return GitRevisionNumber.resolve(project, root, output)[ FD ]
Line_2 $$ public static GitRevisionNumber getMergeBase(final Project project, final VirtualFile root, @NotNull final String first, @NotNull final String second) throws VcsException -->Line_3 $$ GitSimpleHandler h = new GitSimpleHandler(project, root, GitCommand.MERGE_BASE)[ CD ]
Line_7 $$ if (output.length() == 0) -->Line_8 $$ return null[ CD ]
