Line_5 $$ final GradleVersion current = adjust(myGradleVersion, targetVersions.checkBaseVersions())-->Line_8 $$ return compare(current, minVersion, targetVersions.checkBaseVersions()) >= 0[ FD ]
Line_2 $$ public boolean isVersionMatch(@Nullable TargetVersions targetVersions) -->Line_6 $$ if (targetVersions.value().endsWith("+")) [ CD ]
Line_2 $$ public boolean isVersionMatch(@Nullable TargetVersions targetVersions) -->Line_6 $$ if (targetVersions.value().endsWith("+")) [ FD ]
Line_11 $$ if (rangeIndex != -1) -->Line_16 $$ return compare(current, targetVersions.value(), targetVersions.checkBaseVersions()) == 0[ CD ]
Line_2 $$ public boolean isVersionMatch(@Nullable TargetVersions targetVersions) -->Line_3 $$ if (targetVersions == null || targetVersions.value() == null || targetVersions.value().isEmpty())[ FD ]
Line_11 $$ if (rangeIndex != -1) -->Line_12 $$ String minVersion = targetVersions.value().substring(0, rangeIndex)[ CD ]
Line_3 $$ if (targetVersions == null || targetVersions.value() == null || targetVersions.value().isEmpty())-->Line_4 $$ return true[ CD ]
Line_2 $$ public boolean isVersionMatch(@Nullable TargetVersions targetVersions) -->Line_13 $$ String maxVersion = targetVersions.value().substring(rangeIndex + RANGE_TOKEN.length())[ FD ]
Line_2 $$ public boolean isVersionMatch(@Nullable TargetVersions targetVersions) -->Line_5 $$ final GradleVersion current = adjust(myGradleVersion, targetVersions.checkBaseVersions())[ FD ]
Line_2 $$ public boolean isVersionMatch(@Nullable TargetVersions targetVersions) -->Line_12 $$ String minVersion = targetVersions.value().substring(0, rangeIndex)[ FD ]
Line_2 $$ public boolean isVersionMatch(@Nullable TargetVersions targetVersions) -->Line_3 $$ if (targetVersions == null || targetVersions.value() == null || targetVersions.value().isEmpty())[ CD ]
Line_13 $$ String maxVersion = targetVersions.value().substring(rangeIndex + RANGE_TOKEN.length())-->Line_14 $$ return compare(current, minVersion, targetVersions.checkBaseVersions()) >= 0 && compare(current, maxVersion, targetVersions.checkBaseVersions()) <= 0[ FD ]
Line_10 $$ final int rangeIndex = targetVersions.value().indexOf(RANGE_TOKEN)-->Line_12 $$ String minVersion = targetVersions.value().substring(0, rangeIndex)[ FD ]
Line_11 $$ if (rangeIndex != -1) -->Line_14 $$ return compare(current, minVersion, targetVersions.checkBaseVersions()) >= 0 && compare(current, maxVersion, targetVersions.checkBaseVersions()) <= 0[ CD ]
Line_2 $$ public boolean isVersionMatch(@Nullable TargetVersions targetVersions) -->Line_10 $$ final int rangeIndex = targetVersions.value().indexOf(RANGE_TOKEN)[ FD ]
Line_5 $$ final GradleVersion current = adjust(myGradleVersion, targetVersions.checkBaseVersions())-->Line_14 $$ return compare(current, minVersion, targetVersions.checkBaseVersions()) >= 0 && compare(current, maxVersion, targetVersions.checkBaseVersions()) <= 0[ FD ]
Line_10 $$ final int rangeIndex = targetVersions.value().indexOf(RANGE_TOKEN)-->Line_11 $$ if (rangeIndex != -1) [ FD ]
Line_6 $$ if (targetVersions.value().endsWith("+")) -->Line_8 $$ return compare(current, minVersion, targetVersions.checkBaseVersions()) >= 0[ CD ]
Line_6 $$ if (targetVersions.value().endsWith("+")) -->Line_11 $$ if (rangeIndex != -1) [ CD ]
Line_2 $$ public boolean isVersionMatch(@Nullable TargetVersions targetVersions) -->Line_14 $$ return compare(current, minVersion, targetVersions.checkBaseVersions()) >= 0 && compare(current, maxVersion, targetVersions.checkBaseVersions()) <= 0[ FD ]
Line_7 $$ String minVersion = targetVersions.value().substring(0, targetVersions.value().length() - 1)-->Line_8 $$ return compare(current, minVersion, targetVersions.checkBaseVersions()) >= 0[ FD ]
Line_5 $$ final GradleVersion current = adjust(myGradleVersion, targetVersions.checkBaseVersions())-->Line_16 $$ return compare(current, targetVersions.value(), targetVersions.checkBaseVersions()) == 0[ FD ]
Line_11 $$ if (rangeIndex != -1) -->Line_13 $$ String maxVersion = targetVersions.value().substring(rangeIndex + RANGE_TOKEN.length())[ CD ]
Line_6 $$ if (targetVersions.value().endsWith("+")) -->Line_10 $$ final int rangeIndex = targetVersions.value().indexOf(RANGE_TOKEN)[ CD ]
Line_7 $$ String minVersion = targetVersions.value().substring(0, targetVersions.value().length() - 1)-->Line_14 $$ return compare(current, minVersion, targetVersions.checkBaseVersions()) >= 0 && compare(current, maxVersion, targetVersions.checkBaseVersions()) <= 0[ FD ]
Line_6 $$ if (targetVersions.value().endsWith("+")) -->Line_7 $$ String minVersion = targetVersions.value().substring(0, targetVersions.value().length() - 1)[ CD ]
Line_2 $$ public boolean isVersionMatch(@Nullable TargetVersions targetVersions) -->Line_8 $$ return compare(current, minVersion, targetVersions.checkBaseVersions()) >= 0[ FD ]
Line_2 $$ public boolean isVersionMatch(@Nullable TargetVersions targetVersions) -->Line_7 $$ String minVersion = targetVersions.value().substring(0, targetVersions.value().length() - 1)[ FD ]
Line_2 $$ public boolean isVersionMatch(@Nullable TargetVersions targetVersions) -->Line_5 $$ final GradleVersion current = adjust(myGradleVersion, targetVersions.checkBaseVersions())[ CD ]
Line_2 $$ public boolean isVersionMatch(@Nullable TargetVersions targetVersions) -->Line_16 $$ return compare(current, targetVersions.value(), targetVersions.checkBaseVersions()) == 0[ FD ]
