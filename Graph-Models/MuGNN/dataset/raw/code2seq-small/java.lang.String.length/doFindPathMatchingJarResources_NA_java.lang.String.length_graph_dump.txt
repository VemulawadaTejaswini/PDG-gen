Line_4 $$ JarFile jarFile-->Line_44 $$ for (Enumeration<JarEntry> entries = jarFile.entries(); entries.hasMoreElements(); ) [ FD ]
Line_47 $$ if (entryPath.startsWith(rootEntryPath)) -->Line_48 $$ String relativePath = entryPath.substring(rootEntryPath.length())[ CD ]
Line_24 $$ jarFile = new JarFile(urlFile)-->Line_44 $$ for (Enumeration<JarEntry> entries = jarFile.entries(); entries.hasMoreElements(); ) [ FD ]
Line_14 $$ rootEntryPath = (jarEntry != null ? jarEntry.getName() : "")-->Line_47 $$ if (entryPath.startsWith(rootEntryPath)) [ FD ]
Line_49 $$ if (getPathMatcher().match(subPattern, relativePath)) -->Line_50 $$ result.add(rootDirResource.createRelative(relativePath))[ CD ]
Line_8 $$ if (con instanceof JarURLConnection) -->Line_14 $$ rootEntryPath = (jarEntry != null ? jarEntry.getName() : "")[ CD ]
Line_18 $$ int separatorIndex = urlFile.indexOf(ResourceUtils.JAR_URL_SEPARATOR)-->Line_20 $$ jarFileUrl = urlFile.substring(0, separatorIndex)[ FD ]
Line_24 $$ jarFile = new JarFile(urlFile)-->Line_57 $$ jarFile.close()[ FD ]
Line_48 $$ String relativePath = entryPath.substring(rootEntryPath.length())-->Line_49 $$ if (getPathMatcher().match(subPattern, relativePath)) [ FD ]
Line_6 $$ String rootEntryPath-->Line_26 $$ rootEntryPath = ""[ FD ]
Line_26 $$ rootEntryPath = ""-->Line_41 $$ rootEntryPath = rootEntryPath + "/"[ FD ]
Line_21 $$ rootEntryPath = urlFile.substring(separatorIndex + ResourceUtils.JAR_URL_SEPARATOR.length())-->Line_26 $$ rootEntryPath = ""[ FD ]
Line_48 $$ String relativePath = entryPath.substring(rootEntryPath.length())-->Line_50 $$ result.add(rootDirResource.createRelative(relativePath))[ FD ]
Line_44 $$ for (Enumeration<JarEntry> entries = jarFile.entries(); entries.hasMoreElements(); ) -->Line_45 $$ JarEntry entry = entries.nextElement()[ FD ]
Line_26 $$ rootEntryPath = ""-->Line_47 $$ if (entryPath.startsWith(rootEntryPath)) [ FD ]
Line_47 $$ if (entryPath.startsWith(rootEntryPath)) -->Line_49 $$ if (getPathMatcher().match(subPattern, relativePath)) [ CD ]
Line_4 $$ JarFile jarFile-->Line_22 $$ jarFile = getJarFile(jarFileUrl)[ FD ]
Line_19 $$ if (separatorIndex != -1) -->Line_22 $$ jarFile = getJarFile(jarFileUrl)[ CD ]
Line_2 $$ protected Set<Resource> doFindPathMatchingJarResources(Resource rootDirResource, String subPattern) throws IOException -->Line_50 $$ result.add(rootDirResource.createRelative(relativePath))[ FD ]
Line_16 $$ String urlFile = rootDirResource.getURL().getFile()-->Line_18 $$ int separatorIndex = urlFile.indexOf(ResourceUtils.JAR_URL_SEPARATOR)[ FD ]
Line_2 $$ protected Set<Resource> doFindPathMatchingJarResources(Resource rootDirResource, String subPattern) throws IOException -->Line_6 $$ String rootEntryPath[ CD ]
Line_19 $$ if (separatorIndex != -1) -->Line_26 $$ rootEntryPath = ""[ CD ]
Line_8 $$ if (con instanceof JarURLConnection) -->Line_13 $$ JarEntry jarEntry = jarCon.getJarEntry()[ CD ]
Line_41 $$ rootEntryPath = rootEntryPath + "/"-->Line_48 $$ String relativePath = entryPath.substring(rootEntryPath.length())[ FD ]
Line_9 $$ JarURLConnection jarCon = (JarURLConnection) con-->Line_10 $$ ResourceUtils.useCachesIfNecessary(jarCon)[ FD ]
Line_46 $$ String entryPath = entry.getName()-->Line_48 $$ String relativePath = entryPath.substring(rootEntryPath.length())[ FD ]
Line_16 $$ String urlFile = rootDirResource.getURL().getFile()-->Line_20 $$ jarFileUrl = urlFile.substring(0, separatorIndex)[ FD ]
Line_45 $$ JarEntry entry = entries.nextElement()-->Line_46 $$ String entryPath = entry.getName()[ FD ]
Line_12 $$ jarFileUrl = jarCon.getJarFileURL().toExternalForm()-->Line_20 $$ jarFileUrl = urlFile.substring(0, separatorIndex)[ FD ]
Line_11 $$ jarFile = jarCon.getJarFile()-->Line_44 $$ for (Enumeration<JarEntry> entries = jarFile.entries(); entries.hasMoreElements(); ) [ FD ]
Line_7 $$ boolean newJarFile = false-->Line_28 $$ newJarFile = true[ FD ]
Line_2 $$ protected Set<Resource> doFindPathMatchingJarResources(Resource rootDirResource, String subPattern) throws IOException -->Line_7 $$ boolean newJarFile = false[ CD ]
Line_56 $$ if (newJarFile) -->Line_57 $$ jarFile.close()[ CD ]
Line_13 $$ JarEntry jarEntry = jarCon.getJarEntry()-->Line_14 $$ rootEntryPath = (jarEntry != null ? jarEntry.getName() : "")[ FD ]
Line_6 $$ String rootEntryPath-->Line_40 $$ if (!"".equals(rootEntryPath) && !rootEntryPath.endsWith("/")) [ FD ]
Line_21 $$ rootEntryPath = urlFile.substring(separatorIndex + ResourceUtils.JAR_URL_SEPARATOR.length())-->Line_40 $$ if (!"".equals(rootEntryPath) && !rootEntryPath.endsWith("/")) [ FD ]
Line_21 $$ rootEntryPath = urlFile.substring(separatorIndex + ResourceUtils.JAR_URL_SEPARATOR.length())-->Line_48 $$ String relativePath = entryPath.substring(rootEntryPath.length())[ FD ]
Line_40 $$ if (!"".equals(rootEntryPath) && !rootEntryPath.endsWith("/")) -->Line_41 $$ rootEntryPath = rootEntryPath + "/"[ CD ]
Line_41 $$ rootEntryPath = rootEntryPath + "/"-->Line_47 $$ if (entryPath.startsWith(rootEntryPath)) [ FD ]
Line_4 $$ JarFile jarFile-->Line_11 $$ jarFile = jarCon.getJarFile()[ FD ]
Line_2 $$ protected Set<Resource> doFindPathMatchingJarResources(Resource rootDirResource, String subPattern) throws IOException -->Line_49 $$ if (getPathMatcher().match(subPattern, relativePath)) [ FD ]
Line_2 $$ protected Set<Resource> doFindPathMatchingJarResources(Resource rootDirResource, String subPattern) throws IOException -->Line_3 $$ URLConnection con = rootDirResource.getURL().openConnection()[ CD ]
Line_22 $$ jarFile = getJarFile(jarFileUrl)-->Line_44 $$ for (Enumeration<JarEntry> entries = jarFile.entries(); entries.hasMoreElements(); ) [ FD ]
Line_21 $$ rootEntryPath = urlFile.substring(separatorIndex + ResourceUtils.JAR_URL_SEPARATOR.length())-->Line_41 $$ rootEntryPath = rootEntryPath + "/"[ FD ]
Line_5 $$ String jarFileUrl-->Line_20 $$ jarFileUrl = urlFile.substring(0, separatorIndex)[ FD ]
Line_8 $$ if (con instanceof JarURLConnection) -->Line_9 $$ JarURLConnection jarCon = (JarURLConnection) con[ CD ]
Line_9 $$ JarURLConnection jarCon = (JarURLConnection) con-->Line_12 $$ jarFileUrl = jarCon.getJarFileURL().toExternalForm()[ FD ]
Line_20 $$ jarFileUrl = urlFile.substring(0, separatorIndex)-->Line_25 $$ jarFileUrl = urlFile[ FD ]
Line_8 $$ if (con instanceof JarURLConnection) -->Line_16 $$ String urlFile = rootDirResource.getURL().getFile()[ CD ]
Line_4 $$ JarFile jarFile-->Line_57 $$ jarFile.close()[ FD ]
Line_2 $$ protected Set<Resource> doFindPathMatchingJarResources(Resource rootDirResource, String subPattern) throws IOException -->Line_3 $$ URLConnection con = rootDirResource.getURL().openConnection()[ FD ]
Line_3 $$ URLConnection con = rootDirResource.getURL().openConnection()-->Line_8 $$ if (con instanceof JarURLConnection) [ FD ]
Line_5 $$ String jarFileUrl-->Line_25 $$ jarFileUrl = urlFile[ FD ]
Line_37 $$ if (logger.isDebugEnabled()) -->Line_38 $$ logger.debug("Looking for matching resources in jar file [" + jarFileUrl + "]")[ CD ]
Line_22 $$ jarFile = getJarFile(jarFileUrl)-->Line_24 $$ jarFile = new JarFile(urlFile)[ FD ]
Line_8 $$ if (con instanceof JarURLConnection) -->Line_11 $$ jarFile = jarCon.getJarFile()[ CD ]
Line_30 $$ if (logger.isDebugEnabled()) -->Line_31 $$ logger.debug("Skipping invalid jar classpath entry [" + urlFile + "]")[ CD ]
Line_11 $$ jarFile = jarCon.getJarFile()-->Line_24 $$ jarFile = new JarFile(urlFile)[ FD ]
Line_2 $$ protected Set<Resource> doFindPathMatchingJarResources(Resource rootDirResource, String subPattern) throws IOException -->Line_16 $$ String urlFile = rootDirResource.getURL().getFile()[ FD ]
Line_6 $$ String rootEntryPath-->Line_47 $$ if (entryPath.startsWith(rootEntryPath)) [ FD ]
Line_2 $$ protected Set<Resource> doFindPathMatchingJarResources(Resource rootDirResource, String subPattern) throws IOException -->Line_8 $$ if (con instanceof JarURLConnection) [ CD ]
Line_26 $$ rootEntryPath = ""-->Line_40 $$ if (!"".equals(rootEntryPath) && !rootEntryPath.endsWith("/")) [ FD ]
Line_5 $$ String jarFileUrl-->Line_22 $$ jarFile = getJarFile(jarFileUrl)[ FD ]
Line_20 $$ jarFileUrl = urlFile.substring(0, separatorIndex)-->Line_22 $$ jarFile = getJarFile(jarFileUrl)[ FD ]
Line_6 $$ String rootEntryPath-->Line_41 $$ rootEntryPath = rootEntryPath + "/"[ FD ]
Line_16 $$ String urlFile = rootDirResource.getURL().getFile()-->Line_21 $$ rootEntryPath = urlFile.substring(separatorIndex + ResourceUtils.JAR_URL_SEPARATOR.length())[ FD ]
Line_8 $$ if (con instanceof JarURLConnection) -->Line_10 $$ ResourceUtils.useCachesIfNecessary(jarCon)[ CD ]
Line_12 $$ jarFileUrl = jarCon.getJarFileURL().toExternalForm()-->Line_25 $$ jarFileUrl = urlFile[ FD ]
Line_4 $$ JarFile jarFile-->Line_24 $$ jarFile = new JarFile(urlFile)[ FD ]
Line_6 $$ String rootEntryPath-->Line_48 $$ String relativePath = entryPath.substring(rootEntryPath.length())[ FD ]
Line_19 $$ if (separatorIndex != -1) -->Line_20 $$ jarFileUrl = urlFile.substring(0, separatorIndex)[ CD ]
Line_5 $$ String jarFileUrl-->Line_12 $$ jarFileUrl = jarCon.getJarFileURL().toExternalForm()[ FD ]
Line_16 $$ String urlFile = rootDirResource.getURL().getFile()-->Line_25 $$ jarFileUrl = urlFile[ FD ]
Line_14 $$ rootEntryPath = (jarEntry != null ? jarEntry.getName() : "")-->Line_26 $$ rootEntryPath = ""[ FD ]
Line_11 $$ jarFile = jarCon.getJarFile()-->Line_22 $$ jarFile = getJarFile(jarFileUrl)[ FD ]
Line_44 $$ for (Enumeration<JarEntry> entries = jarFile.entries(); entries.hasMoreElements(); ) -->Line_47 $$ if (entryPath.startsWith(rootEntryPath)) [ CD ]
Line_9 $$ JarURLConnection jarCon = (JarURLConnection) con-->Line_11 $$ jarFile = jarCon.getJarFile()[ FD ]
Line_46 $$ String entryPath = entry.getName()-->Line_47 $$ if (entryPath.startsWith(rootEntryPath)) [ FD ]
Line_6 $$ String rootEntryPath-->Line_14 $$ rootEntryPath = (jarEntry != null ? jarEntry.getName() : "")[ FD ]
Line_14 $$ rootEntryPath = (jarEntry != null ? jarEntry.getName() : "")-->Line_21 $$ rootEntryPath = urlFile.substring(separatorIndex + ResourceUtils.JAR_URL_SEPARATOR.length())[ FD ]
Line_8 $$ if (con instanceof JarURLConnection) -->Line_12 $$ jarFileUrl = jarCon.getJarFileURL().toExternalForm()[ CD ]
Line_18 $$ int separatorIndex = urlFile.indexOf(ResourceUtils.JAR_URL_SEPARATOR)-->Line_19 $$ if (separatorIndex != -1) [ FD ]
Line_12 $$ jarFileUrl = jarCon.getJarFileURL().toExternalForm()-->Line_22 $$ jarFile = getJarFile(jarFileUrl)[ FD ]
Line_14 $$ rootEntryPath = (jarEntry != null ? jarEntry.getName() : "")-->Line_40 $$ if (!"".equals(rootEntryPath) && !rootEntryPath.endsWith("/")) [ FD ]
Line_43 $$ Set<Resource> result = new LinkedHashSet<Resource>(8)-->Line_50 $$ result.add(rootDirResource.createRelative(relativePath))[ FD ]
Line_2 $$ protected Set<Resource> doFindPathMatchingJarResources(Resource rootDirResource, String subPattern) throws IOException -->Line_5 $$ String jarFileUrl[ CD ]
Line_21 $$ rootEntryPath = urlFile.substring(separatorIndex + ResourceUtils.JAR_URL_SEPARATOR.length())-->Line_47 $$ if (entryPath.startsWith(rootEntryPath)) [ FD ]
Line_11 $$ jarFile = jarCon.getJarFile()-->Line_57 $$ jarFile.close()[ FD ]
Line_22 $$ jarFile = getJarFile(jarFileUrl)-->Line_57 $$ jarFile.close()[ FD ]
Line_19 $$ if (separatorIndex != -1) -->Line_21 $$ rootEntryPath = urlFile.substring(separatorIndex + ResourceUtils.JAR_URL_SEPARATOR.length())[ CD ]
Line_26 $$ rootEntryPath = ""-->Line_48 $$ String relativePath = entryPath.substring(rootEntryPath.length())[ FD ]
Line_2 $$ protected Set<Resource> doFindPathMatchingJarResources(Resource rootDirResource, String subPattern) throws IOException -->Line_4 $$ JarFile jarFile[ CD ]
Line_19 $$ if (separatorIndex != -1) -->Line_25 $$ jarFileUrl = urlFile[ CD ]
Line_14 $$ rootEntryPath = (jarEntry != null ? jarEntry.getName() : "")-->Line_41 $$ rootEntryPath = rootEntryPath + "/"[ FD ]
Line_9 $$ JarURLConnection jarCon = (JarURLConnection) con-->Line_13 $$ JarEntry jarEntry = jarCon.getJarEntry()[ FD ]
Line_44 $$ for (Enumeration<JarEntry> entries = jarFile.entries(); entries.hasMoreElements(); ) -->Line_46 $$ String entryPath = entry.getName()[ CD ]
Line_14 $$ rootEntryPath = (jarEntry != null ? jarEntry.getName() : "")-->Line_48 $$ String relativePath = entryPath.substring(rootEntryPath.length())[ FD ]
Line_6 $$ String rootEntryPath-->Line_21 $$ rootEntryPath = urlFile.substring(separatorIndex + ResourceUtils.JAR_URL_SEPARATOR.length())[ FD ]
Line_19 $$ if (separatorIndex != -1) -->Line_24 $$ jarFile = new JarFile(urlFile)[ CD ]
Line_44 $$ for (Enumeration<JarEntry> entries = jarFile.entries(); entries.hasMoreElements(); ) -->Line_45 $$ JarEntry entry = entries.nextElement()[ CD ]
