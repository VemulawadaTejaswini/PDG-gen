Line_2 $$ private static void processImports(final List<FoldingDescriptor> descriptors, GrImportStatement[] imports) -->Line_3 $$ if (imports.length < 2)[ CD ]
Line_9 $$ while (next instanceof GrImportStatement || next instanceof LeafPsiElement) -->Line_12 $$ next = next.getNextSibling()[ CD ]
Line_7 $$ PsiElement marker = first-->Line_16 $$ int end = marker.getTextRange().getEndOffset()[ FD ]
Line_6 $$ while (first != null) -->Line_8 $$ PsiElement next = first.getNextSibling()[ CD ]
Line_10 $$ if (next instanceof GrImportStatement)-->Line_11 $$ marker = next[ CD ]
Line_5 $$ PsiElement first = imports[0]-->Line_6 $$ while (first != null) [ FD ]
Line_11 $$ marker = next-->Line_16 $$ int end = marker.getTextRange().getEndOffset()[ FD ]
Line_12 $$ next = next.getNextSibling()-->Line_23 $$ first = next[ FD ]
Line_6 $$ while (first != null) -->Line_23 $$ first = next[ CD ]
Line_5 $$ PsiElement first = imports[0]-->Line_14 $$ if (marker != first) [ FD ]
Line_8 $$ PsiElement next = first.getNextSibling()-->Line_10 $$ if (next instanceof GrImportStatement)[ FD ]
Line_5 $$ PsiElement first = imports[0]-->Line_19 $$ descriptors.add(new FoldingDescriptor(first.getNode(), new TextRange(start + tail, end)))[ FD ]
Line_8 $$ PsiElement next = first.getNextSibling()-->Line_22 $$ next = next.getNextSibling()[ FD ]
Line_23 $$ first = next-->Line_14 $$ if (marker != first) [ FD ]
Line_5 $$ PsiElement first = imports[0]-->Line_15 $$ int start = first.getTextRange().getStartOffset()[ FD ]
Line_23 $$ first = next-->Line_8 $$ PsiElement next = first.getNextSibling()[ FD ]
Line_6 $$ while (first != null) -->Line_22 $$ while (!(next instanceof GrImportStatement) && next != null) next = next.getNextSibling()[ CD ]
Line_14 $$ if (marker != first) -->Line_15 $$ int start = first.getTextRange().getStartOffset()[ CD ]
Line_2 $$ private static void processImports(final List<FoldingDescriptor> descriptors, GrImportStatement[] imports) -->Line_19 $$ descriptors.add(new FoldingDescriptor(first.getNode(), new TextRange(start + tail, end)))[ FD ]
Line_14 $$ if (marker != first) -->Line_16 $$ int end = marker.getTextRange().getEndOffset()[ CD ]
Line_14 $$ if (marker != first) -->Line_17 $$ int tail = "import ".length()[ CD ]
Line_5 $$ PsiElement first = imports[0]-->Line_23 $$ first = next[ FD ]
Line_8 $$ PsiElement next = first.getNextSibling()-->Line_12 $$ next = next.getNextSibling()[ FD ]
Line_8 $$ PsiElement next = first.getNextSibling()-->Line_23 $$ first = next[ FD ]
Line_18 $$ if (start + tail < end && !JavaFoldingBuilderBase.hasErrorElementsNearby(first.getContainingFile(), start, end)) -->Line_19 $$ descriptors.add(new FoldingDescriptor(first.getNode(), new TextRange(start + tail, end)))[ CD ]
Line_23 $$ first = next-->Line_15 $$ int start = first.getTextRange().getStartOffset()[ FD ]
Line_5 $$ PsiElement first = imports[0]-->Line_18 $$ if (start + tail < end && !JavaFoldingBuilderBase.hasErrorElementsNearby(first.getContainingFile(), start, end)) [ FD ]
Line_12 $$ next = next.getNextSibling()-->Line_22 $$ next = next.getNextSibling()[ FD ]
Line_23 $$ first = next-->Line_18 $$ if (start + tail < end && !JavaFoldingBuilderBase.hasErrorElementsNearby(first.getContainingFile(), start, end)) [ FD ]
Line_6 $$ while (first != null) -->Line_7 $$ PsiElement marker = first[ CD ]
Line_6 $$ while (first != null) -->Line_9 $$ while (next instanceof GrImportStatement || next instanceof LeafPsiElement) [ CD ]
Line_9 $$ while (next instanceof GrImportStatement || next instanceof LeafPsiElement) -->Line_10 $$ if (next instanceof GrImportStatement)[ CD ]
Line_6 $$ while (first != null) -->Line_14 $$ if (marker != first) [ CD ]
Line_12 $$ next = next.getNextSibling()-->Line_10 $$ if (next instanceof GrImportStatement)[ FD ]
Line_23 $$ first = next-->Line_19 $$ descriptors.add(new FoldingDescriptor(first.getNode(), new TextRange(start + tail, end)))[ FD ]
Line_8 $$ PsiElement next = first.getNextSibling()-->Line_11 $$ marker = next[ FD ]
Line_7 $$ PsiElement marker = first-->Line_11 $$ marker = next[ FD ]
Line_2 $$ private static void processImports(final List<FoldingDescriptor> descriptors, GrImportStatement[] imports) -->Line_6 $$ while (first != null) [ CD ]
Line_12 $$ next = next.getNextSibling()-->Line_11 $$ marker = next[ FD ]
Line_2 $$ private static void processImports(final List<FoldingDescriptor> descriptors, GrImportStatement[] imports) -->Line_5 $$ PsiElement first = imports[0][ CD ]
Line_22 $$ next = next.getNextSibling()-->Line_23 $$ first = next[ FD ]
Line_7 $$ PsiElement marker = first-->Line_14 $$ if (marker != first) [ FD ]
Line_11 $$ marker = next-->Line_14 $$ if (marker != first) [ FD ]
Line_23 $$ first = next-->Line_6 $$ while (first != null) [ FD ]
Line_3 $$ if (imports.length < 2)-->Line_4 $$ return[ CD ]
Line_14 $$ if (marker != first) -->Line_18 $$ if (start + tail < end && !JavaFoldingBuilderBase.hasErrorElementsNearby(first.getContainingFile(), start, end)) [ CD ]
Line_5 $$ PsiElement first = imports[0]-->Line_8 $$ PsiElement next = first.getNextSibling()[ FD ]
