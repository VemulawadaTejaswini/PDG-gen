Line_7 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1, jsonKey.length())-->Line_10 $$ type.writeBoolean(blockBuilder, Boolean.parseBoolean(jsonKey))[ FD ]
Line_9 $$ if (type.getJavaType() == boolean.class) -->Line_10 $$ type.writeBoolean(blockBuilder, Boolean.parseBoolean(jsonKey))[ CD ]
Line_13 $$ if (type.getJavaType() == double.class) -->Line_14 $$ type.writeDouble(blockBuilder, Double.parseDouble(jsonKey))[ CD ]
Line_5 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1)-->Line_7 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1, jsonKey.length())[ FD ]
Line_3 $$ BlockBuilder blockBuilder-->Line_12 $$ type.writeLong(blockBuilder, Long.parseLong(jsonKey))[ FD ]
Line_2 $$ private static Object mapKeyToObject(ConnectorSession session, String jsonKey, Type type) -->Line_12 $$ type.writeLong(blockBuilder, Long.parseLong(jsonKey))[ FD ]
Line_11 $$ if (type.getJavaType() == long.class) -->Line_12 $$ type.writeLong(blockBuilder, Long.parseLong(jsonKey))[ CD ]
Line_5 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1)-->Line_16 $$ type.writeSlice(blockBuilder, Slices.utf8Slice(jsonKey))[ FD ]
Line_2 $$ private static Object mapKeyToObject(ConnectorSession session, String jsonKey, Type type) -->Line_9 $$ if (type.getJavaType() == boolean.class) [ CD ]
Line_13 $$ if (type.getJavaType() == double.class) -->Line_15 $$ if (type.getJavaType() == Slice.class) [ CD ]
Line_2 $$ private static Object mapKeyToObject(ConnectorSession session, String jsonKey, Type type) -->Line_7 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1, jsonKey.length())[ FD ]
Line_2 $$ private static Object mapKeyToObject(ConnectorSession session, String jsonKey, Type type) -->Line_5 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1)[ FD ]
Line_3 $$ BlockBuilder blockBuilder-->Line_14 $$ type.writeDouble(blockBuilder, Double.parseDouble(jsonKey))[ FD ]
Line_2 $$ private static Object mapKeyToObject(ConnectorSession session, String jsonKey, Type type) -->Line_15 $$ if (type.getJavaType() == Slice.class) [ FD ]
Line_4 $$ if (type instanceof FixedWidthType) -->Line_7 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1, jsonKey.length())[ CD ]
Line_7 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1, jsonKey.length())-->Line_16 $$ type.writeSlice(blockBuilder, Slices.utf8Slice(jsonKey))[ FD ]
Line_3 $$ BlockBuilder blockBuilder-->Line_5 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1)[ FD ]
Line_2 $$ private static Object mapKeyToObject(ConnectorSession session, String jsonKey, Type type) -->Line_18 $$ return type.getObjectValue(session, blockBuilder.build(), 0)[ CD ]
Line_2 $$ private static Object mapKeyToObject(ConnectorSession session, String jsonKey, Type type) -->Line_14 $$ type.writeDouble(blockBuilder, Double.parseDouble(jsonKey))[ FD ]
Line_3 $$ BlockBuilder blockBuilder-->Line_7 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1, jsonKey.length())[ FD ]
Line_5 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1)-->Line_14 $$ type.writeDouble(blockBuilder, Double.parseDouble(jsonKey))[ FD ]
Line_3 $$ BlockBuilder blockBuilder-->Line_16 $$ type.writeSlice(blockBuilder, Slices.utf8Slice(jsonKey))[ FD ]
Line_2 $$ private static Object mapKeyToObject(ConnectorSession session, String jsonKey, Type type) -->Line_4 $$ if (type instanceof FixedWidthType) [ CD ]
Line_5 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1)-->Line_18 $$ return type.getObjectValue(session, blockBuilder.build(), 0)[ FD ]
Line_2 $$ private static Object mapKeyToObject(ConnectorSession session, String jsonKey, Type type) -->Line_11 $$ if (type.getJavaType() == long.class) [ FD ]
Line_2 $$ private static Object mapKeyToObject(ConnectorSession session, String jsonKey, Type type) -->Line_10 $$ type.writeBoolean(blockBuilder, Boolean.parseBoolean(jsonKey))[ FD ]
Line_5 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1)-->Line_12 $$ type.writeLong(blockBuilder, Long.parseLong(jsonKey))[ FD ]
Line_3 $$ BlockBuilder blockBuilder-->Line_18 $$ return type.getObjectValue(session, blockBuilder.build(), 0)[ FD ]
Line_2 $$ private static Object mapKeyToObject(ConnectorSession session, String jsonKey, Type type) -->Line_9 $$ if (type.getJavaType() == boolean.class) [ FD ]
Line_15 $$ if (type.getJavaType() == Slice.class) -->Line_16 $$ type.writeSlice(blockBuilder, Slices.utf8Slice(jsonKey))[ CD ]
Line_7 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1, jsonKey.length())-->Line_14 $$ type.writeDouble(blockBuilder, Double.parseDouble(jsonKey))[ FD ]
Line_11 $$ if (type.getJavaType() == long.class) -->Line_13 $$ if (type.getJavaType() == double.class) [ CD ]
Line_3 $$ BlockBuilder blockBuilder-->Line_10 $$ type.writeBoolean(blockBuilder, Boolean.parseBoolean(jsonKey))[ FD ]
Line_2 $$ private static Object mapKeyToObject(ConnectorSession session, String jsonKey, Type type) -->Line_18 $$ return type.getObjectValue(session, blockBuilder.build(), 0)[ FD ]
Line_2 $$ private static Object mapKeyToObject(ConnectorSession session, String jsonKey, Type type) -->Line_13 $$ if (type.getJavaType() == double.class) [ FD ]
Line_2 $$ private static Object mapKeyToObject(ConnectorSession session, String jsonKey, Type type) -->Line_16 $$ type.writeSlice(blockBuilder, Slices.utf8Slice(jsonKey))[ FD ]
Line_7 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1, jsonKey.length())-->Line_12 $$ type.writeLong(blockBuilder, Long.parseLong(jsonKey))[ FD ]
Line_2 $$ private static Object mapKeyToObject(ConnectorSession session, String jsonKey, Type type) -->Line_4 $$ if (type instanceof FixedWidthType) [ FD ]
Line_5 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1)-->Line_10 $$ type.writeBoolean(blockBuilder, Boolean.parseBoolean(jsonKey))[ FD ]
Line_7 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1, jsonKey.length())-->Line_18 $$ return type.getObjectValue(session, blockBuilder.build(), 0)[ FD ]
Line_2 $$ private static Object mapKeyToObject(ConnectorSession session, String jsonKey, Type type) -->Line_3 $$ BlockBuilder blockBuilder[ CD ]
Line_4 $$ if (type instanceof FixedWidthType) -->Line_5 $$ blockBuilder = type.createBlockBuilder(new BlockBuilderStatus(), 1)[ CD ]
Line_9 $$ if (type.getJavaType() == boolean.class) -->Line_11 $$ if (type.getJavaType() == long.class) [ CD ]
