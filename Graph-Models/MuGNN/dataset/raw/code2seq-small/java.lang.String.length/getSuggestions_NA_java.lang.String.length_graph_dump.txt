Line_2 $$ public List<String> getSuggestions(@NotNull String text) -->Line_5 $$ List[] res = new List[words.length][ CD ]
Line_6 $$ int i = 0-->Line_27 $$ for (int j = 0; j < i; j++) [ FD ]
Line_22 $$ for (int j = 0; j < i; j++) -->Line_27 $$ for (int j = 0; j < i; j++) [ FD ]
Line_22 $$ for (int j = 0; j < i; j++) -->Line_23 $$ size *= res[j].size()[ CD ]
Line_7 $$ for (String word : words) -->Line_9 $$ int end = start + word.length()[ FD ]
Line_11 $$ List<String> variants = manager.getRawSuggestions(word)-->Line_12 $$ res[i++] = variants[ FD ]
Line_2 $$ public List<String> getSuggestions(@NotNull String text) -->Line_21 $$ int size = 1[ CD ]
Line_27 $$ for (int j = 0; j < i; j++) -->Line_28 $$ if (all[k] == null) [ CD ]
Line_11 $$ List<String> variants = manager.getRawSuggestions(word)-->Line_15 $$ variants.add(word)[ FD ]
Line_7 $$ for (String word : words) -->Line_11 $$ List<String> variants = manager.getRawSuggestions(word)[ FD ]
Line_10 $$ if (manager.hasProblem(word)) -->Line_16 $$ res[i++] = variants[ CD ]
Line_23 $$ size *= res[j].size()-->Line_26 $$ for (int k = 0; k < size; k++) [ FD ]
Line_7 $$ for (String word : words) -->Line_8 $$ int start = text.indexOf(word, index)[ FD ]
Line_6 $$ int i = 0-->Line_16 $$ res[i++] = variants[ FD ]
Line_21 $$ int size = 1-->Line_23 $$ size *= res[j].size()[ FD ]
Line_21 $$ int size = 1-->Line_26 $$ for (int k = 0; k < size; k++) [ FD ]
Line_28 $$ if (all[k] == null) -->Line_29 $$ all[k] = ""[ CD ]
Line_25 $$ String[] all = new String[size]-->Line_38 $$ return Arrays.asList(all)[ FD ]
Line_7 $$ for (String word : words) -->Line_10 $$ if (manager.hasProblem(word)) [ FD ]
Line_7 $$ for (String word : words) -->Line_15 $$ variants.add(word)[ FD ]
Line_26 $$ for (int k = 0; k < size; k++) -->Line_27 $$ for (int j = 0; j < i; j++) [ CD ]
Line_6 $$ int i = 0-->Line_12 $$ res[i++] = variants[ FD ]
Line_2 $$ public List<String> getSuggestions(@NotNull String text) -->Line_25 $$ String[] all = new String[size][ CD ]
Line_9 $$ int end = start + word.length()-->Line_18 $$ index = end[ FD ]
Line_2 $$ public List<String> getSuggestions(@NotNull String text) -->Line_20 $$ int[] counter = new int[i][ CD ]
Line_2 $$ public List<String> getSuggestions(@NotNull String text) -->Line_22 $$ for (int j = 0; j < i; j++) [ CD ]
Line_2 $$ public List<String> getSuggestions(@NotNull String text) -->Line_3 $$ String[] words = NameUtil.nameToWords(text)[ CD ]
Line_4 $$ int index = 0-->Line_8 $$ int start = text.indexOf(word, index)[ FD ]
Line_33 $$ if (counter[j] >= res[j].size()) -->Line_34 $$ counter[j] = 0[ CD ]
Line_11 $$ List<String> variants = manager.getRawSuggestions(word)-->Line_16 $$ res[i++] = variants[ FD ]
Line_2 $$ public List<String> getSuggestions(@NotNull String text) -->Line_4 $$ int index = 0[ CD ]
Line_2 $$ public List<String> getSuggestions(@NotNull String text) -->Line_26 $$ for (int k = 0; k < size; k++) [ CD ]
Line_27 $$ for (int j = 0; j < i; j++) -->Line_31 $$ all[k] += res[j].get(counter[j])[ CD ]
Line_27 $$ for (int j = 0; j < i; j++) -->Line_33 $$ if (counter[j] >= res[j].size()) [ CD ]
Line_6 $$ int i = 0-->Line_22 $$ for (int j = 0; j < i; j++) [ FD ]
Line_10 $$ if (manager.hasProblem(word)) -->Line_12 $$ res[i++] = variants[ CD ]
Line_27 $$ for (int j = 0; j < i; j++) -->Line_32 $$ counter[j]++[ CD ]
Line_2 $$ public List<String> getSuggestions(@NotNull String text) -->Line_8 $$ int start = text.indexOf(word, index)[ FD ]
Line_2 $$ public List<String> getSuggestions(@NotNull String text) -->Line_38 $$ return Arrays.asList(all)[ CD ]
Line_2 $$ public List<String> getSuggestions(@NotNull String text) -->Line_6 $$ int i = 0[ CD ]
Line_10 $$ if (manager.hasProblem(word)) -->Line_11 $$ List<String> variants = manager.getRawSuggestions(word)[ CD ]
Line_2 $$ public List<String> getSuggestions(@NotNull String text) -->Line_3 $$ String[] words = NameUtil.nameToWords(text)[ FD ]
Line_4 $$ int index = 0-->Line_18 $$ index = end[ FD ]
Line_10 $$ if (manager.hasProblem(word)) -->Line_15 $$ variants.add(word)[ CD ]
