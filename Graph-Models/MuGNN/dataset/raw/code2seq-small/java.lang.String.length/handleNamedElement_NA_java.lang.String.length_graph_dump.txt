Line_6 $$ name = name.substring(1, name.length() - 1)-->Line_9 $$ namedElements.put(name, named)[ FD ]
Line_2 $$ private void handleNamedElement(final PsiNamedElement named) -->Line_8 $$ if (!namedElements.containsKey(name))[ CD ]
Line_8 $$ if (!namedElements.containsKey(name))-->Line_9 $$ namedElements.put(name, named)[ CD ]
Line_2 $$ private void handleNamedElement(final PsiNamedElement named) -->Line_10 $$ named.acceptChildren(this)[ CD ]
Line_2 $$ private void handleNamedElement(final PsiNamedElement named) -->Line_10 $$ named.acceptChildren(this)[ FD ]
Line_2 $$ private void handleNamedElement(final PsiNamedElement named) -->Line_5 $$ if (StructuralSearchUtil.isTypedVariable(name)) [ CD ]
Line_3 $$ String name = named.getName()-->Line_6 $$ name = name.substring(1, name.length() - 1)[ FD ]
Line_3 $$ String name = named.getName()-->Line_9 $$ namedElements.put(name, named)[ FD ]
Line_2 $$ private void handleNamedElement(final PsiNamedElement named) -->Line_3 $$ String name = named.getName()[ FD ]
Line_2 $$ private void handleNamedElement(final PsiNamedElement named) -->Line_3 $$ String name = named.getName()[ CD ]
Line_3 $$ String name = named.getName()-->Line_5 $$ if (StructuralSearchUtil.isTypedVariable(name)) [ FD ]
Line_3 $$ String name = named.getName()-->Line_8 $$ if (!namedElements.containsKey(name))[ FD ]
Line_2 $$ private void handleNamedElement(final PsiNamedElement named) -->Line_9 $$ namedElements.put(name, named)[ FD ]
Line_5 $$ if (StructuralSearchUtil.isTypedVariable(name)) -->Line_6 $$ name = name.substring(1, name.length() - 1)[ CD ]
Line_6 $$ name = name.substring(1, name.length() - 1)-->Line_8 $$ if (!namedElements.containsKey(name))[ FD ]
