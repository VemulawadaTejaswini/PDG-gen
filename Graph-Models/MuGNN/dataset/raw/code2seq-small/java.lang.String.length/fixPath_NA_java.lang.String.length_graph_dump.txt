Line_7 $$ int leadingSlashCount = 0-->Line_12 $$ leadingSlashCount++[ FD ]
Line_20 $$ if (path.charAt(i) == CharPool.SLASH) -->Line_21 $$ trailingSlashCount++[ CD ]
Line_19 $$ for (int i = path.length() - 1; i >= 0; i--) -->Line_20 $$ if (path.charAt(i) == CharPool.SLASH) [ CD ]
Line_27 $$ int slashCount = leadingSlashCount + trailingSlashCount-->Line_31 $$ if (slashCount > 0) [ FD ]
Line_10 $$ for (int i = 0; i < path.length(); i++) -->Line_11 $$ if (path.charAt(i) == CharPool.SLASH) [ CD ]
Line_28 $$ if (slashCount > path.length()) -->Line_29 $$ return StringPool.BLANK[ CD ]
Line_10 $$ for (int i = 0; i < path.length(); i++) -->Line_11 $$ if (path.charAt(i) == CharPool.SLASH) [ FD ]
Line_9 $$ if (leading) -->Line_10 $$ for (int i = 0; i < path.length(); i++) [ CD ]
Line_7 $$ int leadingSlashCount = 0-->Line_32 $$ path = path.substring(leadingSlashCount, path.length() - trailingSlashCount)[ FD ]
Line_19 $$ for (int i = path.length() - 1; i >= 0; i--) -->Line_20 $$ if (path.charAt(i) == CharPool.SLASH) [ FD ]
Line_11 $$ if (path.charAt(i) == CharPool.SLASH) -->Line_12 $$ leadingSlashCount++[ CD ]
Line_18 $$ if (trailing) -->Line_19 $$ for (int i = path.length() - 1; i >= 0; i--) [ CD ]
Line_8 $$ int trailingSlashCount = 0-->Line_21 $$ trailingSlashCount++[ FD ]
Line_27 $$ int slashCount = leadingSlashCount + trailingSlashCount-->Line_28 $$ if (slashCount > path.length()) [ FD ]
Line_31 $$ if (slashCount > 0) -->Line_32 $$ path = path.substring(leadingSlashCount, path.length() - trailingSlashCount)[ CD ]
Line_4 $$ if (path == null) -->Line_5 $$ return StringPool.BLANK[ CD ]
Line_10 $$ for (int i = 0; i < path.length(); i++) -->Line_19 $$ for (int i = path.length() - 1; i >= 0; i--) [ FD ]
Line_10 $$ for (int i = 0; i < path.length(); i++) -->Line_20 $$ if (path.charAt(i) == CharPool.SLASH) [ FD ]
