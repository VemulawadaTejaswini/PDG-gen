Line_4 $$ int start = 0-->Line_10 $$ if (start == i) [ FD ]
Line_2 $$ public static List<List<String>> chunkRelativePaths(List<String> files) -->Line_11 $$ rc.add(files.subList(i, i + 1))[ FD ]
Line_2 $$ public static List<List<String>> chunkRelativePaths(List<String> files) -->Line_8 $$ String p = files.get(i)[ FD ]
Line_2 $$ public static List<List<String>> chunkRelativePaths(List<String> files) -->Line_7 $$ for (; i < files.size(); i++) [ FD ]
Line_2 $$ public static List<List<String>> chunkRelativePaths(List<String> files) -->Line_23 $$ rc.add(files.subList(start, i))[ FD ]
Line_15 $$ start = i-->Line_14 $$ rc.add(files.subList(start, i))[ FD ]
Line_10 $$ if (start == i) -->Line_14 $$ rc.add(files.subList(start, i))[ CD ]
Line_3 $$ ArrayList<List<String>> rc = new ArrayList<List<String>>()-->Line_23 $$ rc.add(files.subList(start, i))[ FD ]
Line_12 $$ start = i + 1-->Line_23 $$ rc.add(files.subList(start, i))[ FD ]
Line_6 $$ int i = 0-->Line_12 $$ start = i + 1[ FD ]
Line_6 $$ int i = 0-->Line_15 $$ start = i[ FD ]
Line_6 $$ int i = 0-->Line_8 $$ String p = files.get(i)[ FD ]
Line_5 $$ int size = 0-->Line_19 $$ size += p.length()[ FD ]
Line_15 $$ start = i-->Line_22 $$ if (start != files.size()) [ FD ]
Line_6 $$ int i = 0-->Line_11 $$ rc.add(files.subList(i, i + 1))[ FD ]
Line_2 $$ public static List<List<String>> chunkRelativePaths(List<String> files) -->Line_4 $$ int start = 0[ CD ]
Line_7 $$ for (; i < files.size(); i++) -->Line_9 $$ if (size + p.length() > FILE_PATH_LIMIT) [ CD ]
Line_17 $$ size = 0-->Line_19 $$ size += p.length()[ FD ]
Line_2 $$ public static List<List<String>> chunkRelativePaths(List<String> files) -->Line_22 $$ if (start != files.size()) [ CD ]
Line_12 $$ start = i + 1-->Line_14 $$ rc.add(files.subList(start, i))[ FD ]
Line_15 $$ start = i-->Line_23 $$ rc.add(files.subList(start, i))[ FD ]
Line_4 $$ int start = 0-->Line_22 $$ if (start != files.size()) [ FD ]
Line_6 $$ int i = 0-->Line_10 $$ if (start == i) [ FD ]
Line_2 $$ public static List<List<String>> chunkRelativePaths(List<String> files) -->Line_14 $$ rc.add(files.subList(start, i))[ FD ]
Line_3 $$ ArrayList<List<String>> rc = new ArrayList<List<String>>()-->Line_11 $$ rc.add(files.subList(i, i + 1))[ FD ]
Line_6 $$ int i = 0-->Line_14 $$ rc.add(files.subList(start, i))[ FD ]
Line_10 $$ if (start == i) -->Line_12 $$ start = i + 1[ CD ]
Line_8 $$ String p = files.get(i)-->Line_9 $$ if (size + p.length() > FILE_PATH_LIMIT) [ FD ]
Line_4 $$ int start = 0-->Line_12 $$ start = i + 1[ FD ]
Line_10 $$ if (start == i) -->Line_11 $$ rc.add(files.subList(i, i + 1))[ CD ]
Line_9 $$ if (size + p.length() > FILE_PATH_LIMIT) -->Line_17 $$ size = 0[ CD ]
Line_5 $$ int size = 0-->Line_17 $$ size = 0[ FD ]
Line_12 $$ start = i + 1-->Line_22 $$ if (start != files.size()) [ FD ]
Line_12 $$ start = i + 1-->Line_10 $$ if (start == i) [ FD ]
Line_8 $$ String p = files.get(i)-->Line_19 $$ size += p.length()[ FD ]
Line_7 $$ for (; i < files.size(); i++) -->Line_8 $$ String p = files.get(i)[ CD ]
Line_10 $$ if (start == i) -->Line_15 $$ start = i[ CD ]
Line_2 $$ public static List<List<String>> chunkRelativePaths(List<String> files) -->Line_22 $$ if (start != files.size()) [ FD ]
Line_4 $$ int start = 0-->Line_15 $$ start = i[ FD ]
Line_2 $$ public static List<List<String>> chunkRelativePaths(List<String> files) -->Line_6 $$ int i = 0[ CD ]
Line_4 $$ int start = 0-->Line_23 $$ rc.add(files.subList(start, i))[ FD ]
Line_2 $$ public static List<List<String>> chunkRelativePaths(List<String> files) -->Line_5 $$ int size = 0[ CD ]
Line_9 $$ if (size + p.length() > FILE_PATH_LIMIT) -->Line_10 $$ if (start == i) [ CD ]
Line_2 $$ public static List<List<String>> chunkRelativePaths(List<String> files) -->Line_3 $$ ArrayList<List<String>> rc = new ArrayList<List<String>>()[ CD ]
Line_6 $$ int i = 0-->Line_7 $$ for (; i < files.size(); i++) [ FD ]
Line_12 $$ start = i + 1-->Line_15 $$ start = i[ FD ]
Line_6 $$ int i = 0-->Line_23 $$ rc.add(files.subList(start, i))[ FD ]
Line_3 $$ ArrayList<List<String>> rc = new ArrayList<List<String>>()-->Line_14 $$ rc.add(files.subList(start, i))[ FD ]
Line_15 $$ start = i-->Line_10 $$ if (start == i) [ FD ]
Line_9 $$ if (size + p.length() > FILE_PATH_LIMIT) -->Line_19 $$ size += p.length()[ CD ]
Line_2 $$ public static List<List<String>> chunkRelativePaths(List<String> files) -->Line_25 $$ return rc[ CD ]
Line_2 $$ public static List<List<String>> chunkRelativePaths(List<String> files) -->Line_7 $$ for (; i < files.size(); i++) [ CD ]
Line_4 $$ int start = 0-->Line_14 $$ rc.add(files.subList(start, i))[ FD ]
Line_22 $$ if (start != files.size()) -->Line_23 $$ rc.add(files.subList(start, i))[ CD ]
