Line_20 $$ StringBuilder result = new StringBuilder()-->Line_115 $$ result.append(renderWhereStringTemplate(trimOperands.trimSource, placeholder, dialect, functionRegistry)).append(')')[ FD ]
Line_33 $$ boolean isQuoteCharacter = false-->Line_44 $$ isQuoteCharacter = true[ FD ]
Line_71 $$ List<String> operands = new ArrayList<String>()-->Line_81 $$ operands.add(builder.append('\'').toString())[ FD ]
Line_143 $$ if (isBoolean(token)) -->Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))[ CD ]
Line_134 $$ if (isIdentifier(token) && !isFunctionOrKeyword(lcToken, nextToken, dialect, functionRegistry)) -->Line_137 $$ if (BEFORE_TABLE_KEYWORDS.contains(lcToken)) [ CD ]
Line_20 $$ StringBuilder result = new StringBuilder()-->Line_64 $$ result.append("extract(").append(field).append(" from ").append(source).append(')')[ FD ]
Line_28 $$ while (hasMore) -->Line_29 $$ String token = nextToken[ CD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_135 $$ result.append(placeholder).append('.').append(dialect.quote(token))[ FD ]
Line_49 $$ if (quotedIdentifier && (dialect.closeQuote() == token.charAt(0))) -->Line_52 $$ isOpenQuote = false[ CD ]
Line_101 $$ if (trimOperands.trimChar != null) -->Line_107 $$ result.append(' ')[ CD ]
Line_27 $$ String nextToken = hasMore ? tokens.nextToken() : null-->Line_117 $$ nextToken = hasMore ? tokens.nextToken() : null[ FD ]
Line_88 $$ if (operandToken.length() == 1 && Character.isWhitespace(operandToken.charAt(0))) -->Line_91 $$ operands.add(operandToken)[ CD ]
Line_19 $$ StringTokenizer tokens = new StringTokenizer(sqlWhereString, symbols, true)-->Line_94 $$ hasMoreOperands = tokens.hasMoreTokens() && !")".equals(operandToken)[ FD ]
Line_76 $$ while (hasMoreOperands) -->Line_78 $$ if (isQuote) [ CD ]
Line_36 $$ isQuoteCharacter = true-->Line_48 $$ isQuoteCharacter = true[ FD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_124 $$ result.append(token)[ FD ]
Line_86 $$ if (quotedOperand) -->Line_88 $$ if (operandToken.length() == 1 && Character.isWhitespace(operandToken.charAt(0))) [ CD ]
Line_66 $$ nextToken = hasMore ? tokens.nextToken() : null-->Line_134 $$ if (isIdentifier(token) && !isFunctionOrKeyword(lcToken, nextToken, dialect, functionRegistry)) [ FD ]
Line_134 $$ if (isIdentifier(token) && !isFunctionOrKeyword(lcToken, nextToken, dialect, functionRegistry)) -->Line_146 $$ result.append(token)[ CD ]
Line_41 $$ isOpenQuote = !quotedIdentifier-->Line_52 $$ isOpenQuote = false[ FD ]
Line_46 $$ isOpenQuote = true-->Line_54 $$ isOpenQuote = false[ FD ]
Line_33 $$ boolean isQuoteCharacter = false-->Line_48 $$ isQuoteCharacter = true[ FD ]
Line_38 $$ if (!quoted) -->Line_56 $$ if (isOpenQuote) [ CD ]
Line_28 $$ while (hasMore) -->Line_33 $$ boolean isQuoteCharacter = false[ CD ]
Line_20 $$ StringBuilder result = new StringBuilder()-->Line_110 $$ result.append(trimOperands.from).append(' ')[ FD ]
Line_139 $$ inFromClause = true-->Line_140 $$ if (inFromClause && ",".equals(lcToken)) [ FD ]
Line_93 $$ operandToken = tokens.nextToken()-->Line_77 $$ final boolean isQuote = "'".equals(operandToken)[ FD ]
Line_30 $$ String lcToken = token.toLowerCase(Locale.ROOT)-->Line_140 $$ if (inFromClause && ",".equals(lcToken)) [ FD ]
Line_30 $$ String lcToken = token.toLowerCase(Locale.ROOT)-->Line_137 $$ if (BEFORE_TABLE_KEYWORDS.contains(lcToken)) [ FD ]
Line_34 $$ if (!quotedIdentifier && "'".equals(token)) -->Line_36 $$ isQuoteCharacter = true[ CD ]
Line_29 $$ String token = nextToken-->Line_133 $$ result.append(token)[ FD ]
Line_29 $$ String token = nextToken-->Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())[ FD ]
Line_43 $$ quotedIdentifier = isOpenQuote-->Line_45 $$ if (!quotedIdentifier && (dialect.openQuote() == token.charAt(0))) [ FD ]
Line_20 $$ StringBuilder result = new StringBuilder()-->Line_124 $$ result.append(token)[ FD ]
Line_47 $$ quotedIdentifier = true-->Line_50 $$ quotedIdentifier = false[ FD ]
Line_127 $$ if (afterFromTable) -->Line_131 $$ result.append(token)[ CD ]
Line_19 $$ StringTokenizer tokens = new StringTokenizer(sqlWhereString, symbols, true)-->Line_65 $$ hasMore = tokens.hasMoreTokens()[ FD ]
Line_19 $$ StringTokenizer tokens = new StringTokenizer(sqlWhereString, symbols, true)-->Line_116 $$ hasMore = tokens.hasMoreTokens()[ FD ]
Line_20 $$ StringBuilder result = new StringBuilder()-->Line_107 $$ result.append(' ')[ FD ]
Line_123 $$ if (beforeTable) -->Line_127 $$ if (afterFromTable) [ CD ]
Line_127 $$ if (afterFromTable) -->Line_128 $$ if (!"as".equals(lcToken)) [ CD ]
Line_79 $$ quotedOperand = !quotedOperand-->Line_80 $$ if (!quotedOperand) [ FD ]
Line_36 $$ isQuoteCharacter = true-->Line_51 $$ isQuoteCharacter = true[ FD ]
Line_25 $$ boolean afterFromTable = false-->Line_126 $$ afterFromTable = true[ FD ]
Line_128 $$ if (!"as".equals(lcToken)) -->Line_129 $$ afterFromTable = false[ CD ]
Line_20 $$ StringBuilder result = new StringBuilder()-->Line_133 $$ result.append(token)[ FD ]
Line_140 $$ if (inFromClause && ",".equals(lcToken)) -->Line_141 $$ beforeTable = true[ CD ]
Line_21 $$ boolean quoted = false-->Line_38 $$ if (!quoted) [ FD ]
Line_151 $$ inFromClause = false-->Line_140 $$ if (inFromClause && ",".equals(lcToken)) [ FD ]
Line_29 $$ String token = nextToken-->Line_122 $$ result.append(token)[ FD ]
Line_33 $$ boolean isQuoteCharacter = false-->Line_51 $$ isQuoteCharacter = true[ FD ]
Line_32 $$ nextToken = hasMore ? tokens.nextToken() : null-->Line_66 $$ nextToken = hasMore ? tokens.nextToken() : null[ FD ]
Line_22 $$ boolean quotedIdentifier = false-->Line_49 $$ if (quotedIdentifier && (dialect.closeQuote() == token.charAt(0))) [ FD ]
Line_43 $$ quotedIdentifier = isOpenQuote-->Line_47 $$ quotedIdentifier = true[ FD ]
Line_79 $$ quotedOperand = !quotedOperand-->Line_78 $$ if (isQuote) [ FD ]
Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))-->Line_124 $$ result.append(token)[ FD ]
Line_32 $$ nextToken = hasMore ? tokens.nextToken() : null-->Line_134 $$ if (isIdentifier(token) && !isFunctionOrKeyword(lcToken, nextToken, dialect, functionRegistry)) [ FD ]
Line_36 $$ isQuoteCharacter = true-->Line_44 $$ isQuoteCharacter = true[ FD ]
Line_30 $$ String lcToken = token.toLowerCase(Locale.ROOT)-->Line_134 $$ if (isIdentifier(token) && !isFunctionOrKeyword(lcToken, nextToken, dialect, functionRegistry)) [ FD ]
Line_74 $$ String operandToken = tokens.nextToken()-->Line_93 $$ operandToken = tokens.nextToken()[ FD ]
Line_44 $$ isQuoteCharacter = true-->Line_51 $$ isQuoteCharacter = true[ FD ]
Line_74 $$ String operandToken = tokens.nextToken()-->Line_94 $$ hasMoreOperands = tokens.hasMoreTokens() && !")".equals(operandToken)[ FD ]
Line_31 $$ hasMore = tokens.hasMoreTokens()-->Line_65 $$ hasMore = tokens.hasMoreTokens()[ FD ]
Line_43 $$ quotedIdentifier = isOpenQuote-->Line_49 $$ if (quotedIdentifier && (dialect.closeQuote() == token.charAt(0))) [ FD ]
Line_44 $$ isQuoteCharacter = true-->Line_48 $$ isQuoteCharacter = true[ FD ]
Line_74 $$ String operandToken = tokens.nextToken()-->Line_88 $$ if (operandToken.length() == 1 && Character.isWhitespace(operandToken.charAt(0))) [ FD ]
Line_72 $$ StringBuilder builder = new StringBuilder()-->Line_82 $$ builder.setLength(0)[ FD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_143 $$ if (isBoolean(token)) [ FD ]
Line_138 $$ beforeTable = true-->Line_141 $$ beforeTable = true[ FD ]
Line_29 $$ String token = nextToken-->Line_49 $$ if (quotedIdentifier && (dialect.closeQuote() == token.charAt(0))) [ FD ]
Line_75 $$ boolean quotedOperand = false-->Line_80 $$ if (!quotedOperand) [ FD ]
Line_38 $$ if (!quoted) -->Line_40 $$ if ("`".equals(token)) [ CD ]
Line_20 $$ StringBuilder result = new StringBuilder()-->Line_154 $$ return result.toString()[ FD ]
Line_76 $$ while (hasMoreOperands) -->Line_77 $$ final boolean isQuote = "'".equals(operandToken)[ CD ]
Line_62 $$ final String field = extractUntil(tokens, "from")-->Line_64 $$ result.append("extract(").append(field).append(" from ").append(source).append(')')[ FD ]
Line_80 $$ if (!quotedOperand) -->Line_84 $$ builder.append('\'')[ CD ]
Line_93 $$ operandToken = tokens.nextToken()-->Line_88 $$ if (operandToken.length() == 1 && Character.isWhitespace(operandToken.charAt(0))) [ FD ]
Line_20 $$ StringBuilder result = new StringBuilder()-->Line_146 $$ result.append(token)[ FD ]
Line_40 $$ if ("`".equals(token)) -->Line_45 $$ if (!quotedIdentifier && (dialect.openQuote() == token.charAt(0))) [ CD ]
Line_121 $$ if (quotedOrWhitespace) -->Line_122 $$ result.append(token)[ CD ]
Line_52 $$ isOpenQuote = false-->Line_43 $$ quotedIdentifier = isOpenQuote[ FD ]
Line_19 $$ StringTokenizer tokens = new StringTokenizer(sqlWhereString, symbols, true)-->Line_26 $$ boolean hasMore = tokens.hasMoreTokens()[ FD ]
Line_132 $$ if (isNamedParameter(token)) -->Line_133 $$ result.append(token)[ CD ]
Line_73 $$ boolean hasMoreOperands = true-->Line_94 $$ hasMoreOperands = tokens.hasMoreTokens() && !")".equals(operandToken)[ FD ]
Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))-->Line_49 $$ if (quotedIdentifier && (dialect.closeQuote() == token.charAt(0))) [ FD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_132 $$ if (isNamedParameter(token)) [ FD ]
Line_80 $$ if (!quotedOperand) -->Line_81 $$ operands.add(builder.append('\'').toString())[ CD ]
Line_41 $$ isOpenQuote = !quotedIdentifier-->Line_54 $$ isOpenQuote = false[ FD ]
Line_33 $$ boolean isQuoteCharacter = false-->Line_36 $$ isQuoteCharacter = true[ FD ]
Line_43 $$ quotedIdentifier = isOpenQuote-->Line_41 $$ isOpenQuote = !quotedIdentifier[ FD ]
Line_20 $$ StringBuilder result = new StringBuilder()-->Line_131 $$ result.append(token)[ FD ]
Line_24 $$ boolean inFromClause = false-->Line_151 $$ inFromClause = false[ FD ]
Line_30 $$ String lcToken = token.toLowerCase(Locale.ROOT)-->Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())[ FD ]
Line_22 $$ boolean quotedIdentifier = false-->Line_50 $$ quotedIdentifier = false[ FD ]
Line_22 $$ boolean quotedIdentifier = false-->Line_45 $$ if (!quotedIdentifier && (dialect.openQuote() == token.charAt(0))) [ FD ]
Line_78 $$ if (isQuote) -->Line_80 $$ if (!quotedOperand) [ CD ]
Line_20 $$ StringBuilder result = new StringBuilder()-->Line_97 $$ result.append("trim(")[ FD ]
Line_23 $$ boolean beforeTable = false-->Line_138 $$ beforeTable = true[ FD ]
Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))-->Line_135 $$ result.append(placeholder).append('.').append(dialect.quote(token))[ FD ]
Line_22 $$ boolean quotedIdentifier = false-->Line_34 $$ if (!quotedIdentifier && "'".equals(token)) [ FD ]
Line_74 $$ String operandToken = tokens.nextToken()-->Line_87 $$ builder.append(operandToken)[ FD ]
Line_43 $$ quotedIdentifier = isOpenQuote-->Line_50 $$ quotedIdentifier = false[ FD ]
Line_19 $$ StringTokenizer tokens = new StringTokenizer(sqlWhereString, symbols, true)-->Line_74 $$ String operandToken = tokens.nextToken()[ FD ]
Line_28 $$ while (hasMore) -->Line_31 $$ hasMore = tokens.hasMoreTokens()[ CD ]
Line_49 $$ if (quotedIdentifier && (dialect.closeQuote() == token.charAt(0))) -->Line_54 $$ isOpenQuote = false[ CD ]
Line_75 $$ boolean quotedOperand = false-->Line_78 $$ if (isQuote) [ FD ]
Line_121 $$ if (quotedOrWhitespace) -->Line_123 $$ if (beforeTable) [ CD ]
Line_29 $$ String token = nextToken-->Line_132 $$ if (isNamedParameter(token)) [ FD ]
Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))-->Line_122 $$ result.append(token)[ FD ]
Line_29 $$ String token = nextToken-->Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))[ FD ]
Line_93 $$ operandToken = tokens.nextToken()-->Line_91 $$ operands.add(operandToken)[ FD ]
Line_71 $$ List<String> operands = new ArrayList<String>()-->Line_91 $$ operands.add(operandToken)[ FD ]
Line_19 $$ StringTokenizer tokens = new StringTokenizer(sqlWhereString, symbols, true)-->Line_27 $$ String nextToken = hasMore ? tokens.nextToken() : null[ FD ]
Line_101 $$ if (trimOperands.trimChar != null) -->Line_102 $$ if (trimOperands.trimChar.startsWith("'") && trimOperands.trimChar.endsWith("'")) [ CD ]
Line_30 $$ String lcToken = token.toLowerCase(Locale.ROOT)-->Line_128 $$ if (!"as".equals(lcToken)) [ FD ]
Line_132 $$ if (isNamedParameter(token)) -->Line_134 $$ if (isIdentifier(token) && !isFunctionOrKeyword(lcToken, nextToken, dialect, functionRegistry)) [ CD ]
Line_20 $$ StringBuilder result = new StringBuilder()-->Line_135 $$ result.append(placeholder).append('.').append(dialect.quote(token))[ FD ]
Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))-->Line_45 $$ if (!quotedIdentifier && (dialect.openQuote() == token.charAt(0))) [ FD ]
Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))-->Line_143 $$ if (isBoolean(token)) [ FD ]
Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))-->Line_34 $$ if (!quotedIdentifier && "'".equals(token)) [ FD ]
Line_27 $$ String nextToken = hasMore ? tokens.nextToken() : null-->Line_32 $$ nextToken = hasMore ? tokens.nextToken() : null[ FD ]
Line_134 $$ if (isIdentifier(token) && !isFunctionOrKeyword(lcToken, nextToken, dialect, functionRegistry)) -->Line_143 $$ if (isBoolean(token)) [ CD ]
Line_72 $$ StringBuilder builder = new StringBuilder()-->Line_81 $$ operands.add(builder.append('\'').toString())[ FD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_128 $$ if (!"as".equals(lcToken)) [ FD ]
Line_47 $$ quotedIdentifier = true-->Line_45 $$ if (!quotedIdentifier && (dialect.openQuote() == token.charAt(0))) [ FD ]
Line_56 $$ if (isOpenQuote) -->Line_57 $$ result.append(placeholder).append('.')[ CD ]
Line_31 $$ hasMore = tokens.hasMoreTokens()-->Line_116 $$ hasMore = tokens.hasMoreTokens()[ FD ]
Line_123 $$ if (beforeTable) -->Line_124 $$ result.append(token)[ CD ]
Line_123 $$ if (beforeTable) -->Line_126 $$ afterFromTable = true[ CD ]
Line_126 $$ afterFromTable = true-->Line_129 $$ afterFromTable = false[ FD ]
Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))-->Line_134 $$ if (isIdentifier(token) && !isFunctionOrKeyword(lcToken, nextToken, dialect, functionRegistry)) [ FD ]
Line_98 $$ if (trimOperands.trimSpec != null) -->Line_99 $$ result.append(trimOperands.trimSpec).append(' ')[ CD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))[ FD ]
Line_125 $$ beforeTable = false-->Line_121 $$ if (quotedOrWhitespace) [ FD ]
Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))-->Line_30 $$ String lcToken = token.toLowerCase(Locale.ROOT)[ FD ]
Line_19 $$ StringTokenizer tokens = new StringTokenizer(sqlWhereString, symbols, true)-->Line_66 $$ nextToken = hasMore ? tokens.nextToken() : null[ FD ]
Line_40 $$ if ("`".equals(token)) -->Line_41 $$ isOpenQuote = !quotedIdentifier[ CD ]
Line_74 $$ String operandToken = tokens.nextToken()-->Line_77 $$ final boolean isQuote = "'".equals(operandToken)[ FD ]
Line_63 $$ final String source = renderWhereStringTemplate(extractUntil(tokens, ")"), placeholder, dialect, functionRegistry)-->Line_64 $$ result.append("extract(").append(field).append(" from ").append(source).append(')')[ FD ]
Line_22 $$ boolean quotedIdentifier = false-->Line_47 $$ quotedIdentifier = true[ FD ]
Line_41 $$ isOpenQuote = !quotedIdentifier-->Line_43 $$ quotedIdentifier = isOpenQuote[ FD ]
Line_129 $$ afterFromTable = false-->Line_123 $$ if (beforeTable) [ FD ]
Line_50 $$ quotedIdentifier = false-->Line_41 $$ isOpenQuote = !quotedIdentifier[ FD ]
Line_27 $$ String nextToken = hasMore ? tokens.nextToken() : null-->Line_66 $$ nextToken = hasMore ? tokens.nextToken() : null[ FD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_140 $$ if (inFromClause && ",".equals(lcToken)) [ FD ]
Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))-->Line_133 $$ result.append(token)[ FD ]
Line_29 $$ String token = nextToken-->Line_40 $$ if ("`".equals(token)) [ FD ]
Line_39 $$ boolean isOpenQuote-->Line_46 $$ isOpenQuote = true[ FD ]
Line_29 $$ String token = nextToken-->Line_30 $$ String lcToken = token.toLowerCase(Locale.ROOT)[ FD ]
Line_20 $$ StringBuilder result = new StringBuilder()-->Line_57 $$ result.append(placeholder).append('.')[ FD ]
Line_35 $$ quoted = !quoted-->Line_38 $$ if (!quoted) [ FD ]
Line_40 $$ if ("`".equals(token)) -->Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())[ CD ]
Line_93 $$ operandToken = tokens.nextToken()-->Line_87 $$ builder.append(operandToken)[ FD ]
Line_20 $$ StringBuilder result = new StringBuilder()-->Line_122 $$ result.append(token)[ FD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_122 $$ result.append(token)[ FD ]
Line_45 $$ if (!quotedIdentifier && (dialect.openQuote() == token.charAt(0))) -->Line_49 $$ if (quotedIdentifier && (dialect.closeQuote() == token.charAt(0))) [ CD ]
Line_137 $$ if (BEFORE_TABLE_KEYWORDS.contains(lcToken)) -->Line_139 $$ inFromClause = true[ CD ]
Line_50 $$ quotedIdentifier = false-->Line_49 $$ if (quotedIdentifier && (dialect.closeQuote() == token.charAt(0))) [ FD ]
Line_28 $$ while (hasMore) -->Line_32 $$ nextToken = hasMore ? tokens.nextToken() : null[ CD ]
Line_26 $$ boolean hasMore = tokens.hasMoreTokens()-->Line_65 $$ hasMore = tokens.hasMoreTokens()[ FD ]
Line_28 $$ while (hasMore) -->Line_121 $$ if (quotedOrWhitespace) [ CD ]
Line_23 $$ boolean beforeTable = false-->Line_125 $$ beforeTable = false[ FD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_134 $$ if (isIdentifier(token) && !isFunctionOrKeyword(lcToken, nextToken, dialect, functionRegistry)) [ FD ]
Line_126 $$ afterFromTable = true-->Line_123 $$ if (beforeTable) [ FD ]
Line_29 $$ String token = nextToken-->Line_134 $$ if (isIdentifier(token) && !isFunctionOrKeyword(lcToken, nextToken, dialect, functionRegistry)) [ FD ]
Line_39 $$ boolean isOpenQuote-->Line_54 $$ isOpenQuote = false[ FD ]
Line_48 $$ isQuoteCharacter = true-->Line_51 $$ isQuoteCharacter = true[ FD ]
Line_45 $$ if (!quotedIdentifier && (dialect.openQuote() == token.charAt(0))) -->Line_47 $$ quotedIdentifier = true[ CD ]
Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))-->Line_120 $$ boolean quotedOrWhitespace = quoted || quotedIdentifier || isQuoteCharacter || Character.isWhitespace(token.charAt(0))[ FD ]
Line_141 $$ beforeTable = true-->Line_121 $$ if (quotedOrWhitespace) [ FD ]
Line_24 $$ boolean inFromClause = false-->Line_139 $$ inFromClause = true[ FD ]
Line_138 $$ beforeTable = true-->Line_121 $$ if (quotedOrWhitespace) [ FD ]
Line_125 $$ beforeTable = false-->Line_138 $$ beforeTable = true[ FD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_146 $$ result.append(token)[ FD ]
Line_39 $$ boolean isOpenQuote-->Line_43 $$ quotedIdentifier = isOpenQuote[ FD ]
Line_52 $$ isOpenQuote = false-->Line_54 $$ isOpenQuote = false[ FD ]
Line_65 $$ hasMore = tokens.hasMoreTokens()-->Line_116 $$ hasMore = tokens.hasMoreTokens()[ FD ]
Line_41 $$ isOpenQuote = !quotedIdentifier-->Line_46 $$ isOpenQuote = true[ FD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_131 $$ result.append(token)[ FD ]
Line_137 $$ if (BEFORE_TABLE_KEYWORDS.contains(lcToken)) -->Line_140 $$ if (inFromClause && ",".equals(lcToken)) [ CD ]
Line_78 $$ if (isQuote) -->Line_79 $$ quotedOperand = !quotedOperand[ CD ]
Line_23 $$ boolean beforeTable = false-->Line_121 $$ if (quotedOrWhitespace) [ FD ]
Line_125 $$ beforeTable = false-->Line_141 $$ beforeTable = true[ FD ]
Line_47 $$ quotedIdentifier = true-->Line_49 $$ if (quotedIdentifier && (dialect.closeQuote() == token.charAt(0))) [ FD ]
Line_25 $$ boolean afterFromTable = false-->Line_123 $$ if (beforeTable) [ FD ]
Line_32 $$ nextToken = hasMore ? tokens.nextToken() : null-->Line_117 $$ nextToken = hasMore ? tokens.nextToken() : null[ FD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_133 $$ result.append(token)[ FD ]
Line_139 $$ inFromClause = true-->Line_151 $$ inFromClause = false[ FD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_120 $$ boolean quotedOrWhitespace = quoted || quotedIdentifier || isQuoteCharacter || Character.isWhitespace(token.charAt(0))[ FD ]
Line_29 $$ String token = nextToken-->Line_143 $$ if (isBoolean(token)) [ FD ]
Line_29 $$ String token = nextToken-->Line_146 $$ result.append(token)[ FD ]
Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))-->Line_40 $$ if ("`".equals(token)) [ FD ]
Line_28 $$ while (hasMore) -->Line_30 $$ String lcToken = token.toLowerCase(Locale.ROOT)[ CD ]
Line_19 $$ StringTokenizer tokens = new StringTokenizer(sqlWhereString, symbols, true)-->Line_31 $$ hasMore = tokens.hasMoreTokens()[ FD ]
Line_45 $$ if (!quotedIdentifier && (dialect.openQuote() == token.charAt(0))) -->Line_48 $$ isQuoteCharacter = true[ CD ]
Line_28 $$ while (hasMore) -->Line_34 $$ if (!quotedIdentifier && "'".equals(token)) [ CD ]
Line_22 $$ boolean quotedIdentifier = false-->Line_41 $$ isOpenQuote = !quotedIdentifier[ FD ]
Line_74 $$ String operandToken = tokens.nextToken()-->Line_91 $$ operands.add(operandToken)[ FD ]
Line_109 $$ if (trimOperands.from != null) -->Line_111 $$ if (trimOperands.trimSpec != null || trimOperands.trimChar != null) [ CD ]
Line_75 $$ boolean quotedOperand = false-->Line_79 $$ quotedOperand = !quotedOperand[ FD ]
Line_27 $$ String nextToken = hasMore ? tokens.nextToken() : null-->Line_134 $$ if (isIdentifier(token) && !isFunctionOrKeyword(lcToken, nextToken, dialect, functionRegistry)) [ FD ]
Line_137 $$ if (BEFORE_TABLE_KEYWORDS.contains(lcToken)) -->Line_138 $$ beforeTable = true[ CD ]
Line_29 $$ String token = nextToken-->Line_124 $$ result.append(token)[ FD ]
Line_22 $$ boolean quotedIdentifier = false-->Line_43 $$ quotedIdentifier = isOpenQuote[ FD ]
Line_47 $$ quotedIdentifier = true-->Line_34 $$ if (!quotedIdentifier && "'".equals(token)) [ FD ]
Line_45 $$ if (!quotedIdentifier && (dialect.openQuote() == token.charAt(0))) -->Line_46 $$ isOpenQuote = true[ CD ]
Line_19 $$ StringTokenizer tokens = new StringTokenizer(sqlWhereString, symbols, true)-->Line_93 $$ operandToken = tokens.nextToken()[ FD ]
Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))-->Line_131 $$ result.append(token)[ FD ]
Line_28 $$ while (hasMore) -->Line_38 $$ if (!quoted) [ CD ]
Line_93 $$ operandToken = tokens.nextToken()-->Line_94 $$ hasMoreOperands = tokens.hasMoreTokens() && !")".equals(operandToken)[ FD ]
Line_66 $$ nextToken = hasMore ? tokens.nextToken() : null-->Line_117 $$ nextToken = hasMore ? tokens.nextToken() : null[ FD ]
Line_134 $$ if (isIdentifier(token) && !isFunctionOrKeyword(lcToken, nextToken, dialect, functionRegistry)) -->Line_135 $$ result.append(placeholder).append('.').append(dialect.quote(token))[ CD ]
Line_39 $$ boolean isOpenQuote-->Line_52 $$ isOpenQuote = false[ FD ]
Line_29 $$ String token = nextToken-->Line_135 $$ result.append(placeholder).append('.').append(dialect.quote(token))[ FD ]
Line_49 $$ if (quotedIdentifier && (dialect.closeQuote() == token.charAt(0))) -->Line_50 $$ quotedIdentifier = false[ CD ]
Line_54 $$ isOpenQuote = false-->Line_43 $$ quotedIdentifier = isOpenQuote[ FD ]
Line_72 $$ StringBuilder builder = new StringBuilder()-->Line_84 $$ builder.append('\'')[ FD ]
Line_38 $$ if (!quoted) -->Line_39 $$ boolean isOpenQuote[ CD ]
Line_21 $$ boolean quoted = false-->Line_35 $$ quoted = !quoted[ FD ]
Line_78 $$ if (isQuote) -->Line_86 $$ if (quotedOperand) [ CD ]
Line_25 $$ boolean afterFromTable = false-->Line_129 $$ afterFromTable = false[ FD ]
Line_127 $$ if (afterFromTable) -->Line_132 $$ if (isNamedParameter(token)) [ CD ]
Line_49 $$ if (quotedIdentifier && (dialect.closeQuote() == token.charAt(0))) -->Line_51 $$ isQuoteCharacter = true[ CD ]
Line_50 $$ quotedIdentifier = false-->Line_34 $$ if (!quotedIdentifier && "'".equals(token)) [ FD ]
Line_40 $$ if ("`".equals(token)) -->Line_43 $$ quotedIdentifier = isOpenQuote[ CD ]
Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))-->Line_132 $$ if (isNamedParameter(token)) [ FD ]
Line_72 $$ StringBuilder builder = new StringBuilder()-->Line_87 $$ builder.append(operandToken)[ FD ]
Line_46 $$ isOpenQuote = true-->Line_43 $$ quotedIdentifier = isOpenQuote[ FD ]
Line_46 $$ isOpenQuote = true-->Line_52 $$ isOpenQuote = false[ FD ]
Line_23 $$ boolean beforeTable = false-->Line_141 $$ beforeTable = true[ FD ]
Line_19 $$ StringTokenizer tokens = new StringTokenizer(sqlWhereString, symbols, true)-->Line_32 $$ nextToken = hasMore ? tokens.nextToken() : null[ FD ]
Line_19 $$ StringTokenizer tokens = new StringTokenizer(sqlWhereString, symbols, true)-->Line_63 $$ final String source = renderWhereStringTemplate(extractUntil(tokens, ")"), placeholder, dialect, functionRegistry)[ FD ]
Line_19 $$ StringTokenizer tokens = new StringTokenizer(sqlWhereString, symbols, true)-->Line_117 $$ nextToken = hasMore ? tokens.nextToken() : null[ FD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_137 $$ if (BEFORE_TABLE_KEYWORDS.contains(lcToken)) [ FD ]
Line_29 $$ String token = nextToken-->Line_131 $$ result.append(token)[ FD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_30 $$ String lcToken = token.toLowerCase(Locale.ROOT)[ FD ]
Line_19 $$ StringTokenizer tokens = new StringTokenizer(sqlWhereString, symbols, true)-->Line_62 $$ final String field = extractUntil(tokens, "from")[ FD ]
Line_76 $$ while (hasMoreOperands) -->Line_93 $$ operandToken = tokens.nextToken()[ CD ]
Line_43 $$ quotedIdentifier = isOpenQuote-->Line_34 $$ if (!quotedIdentifier && "'".equals(token)) [ FD ]
Line_50 $$ quotedIdentifier = false-->Line_45 $$ if (!quotedIdentifier && (dialect.openQuote() == token.charAt(0))) [ FD ]
Line_86 $$ if (quotedOperand) -->Line_87 $$ builder.append(operandToken)[ CD ]
Line_29 $$ String token = nextToken-->Line_45 $$ if (!quotedIdentifier && (dialect.openQuote() == token.charAt(0))) [ FD ]
Line_40 $$ if ("`".equals(token)) -->Line_44 $$ isQuoteCharacter = true[ CD ]
Line_102 $$ if (trimOperands.trimChar.startsWith("'") && trimOperands.trimChar.endsWith("'")) -->Line_105 $$ result.append(renderWhereStringTemplate(trimOperands.trimSpec, placeholder, dialect, functionRegistry))[ CD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_40 $$ if ("`".equals(token)) [ FD ]
Line_102 $$ if (trimOperands.trimChar.startsWith("'") && trimOperands.trimChar.endsWith("'")) -->Line_103 $$ result.append(trimOperands.trimChar)[ CD ]
Line_76 $$ while (hasMoreOperands) -->Line_94 $$ hasMoreOperands = tokens.hasMoreTokens() && !")".equals(operandToken)[ CD ]
Line_47 $$ quotedIdentifier = true-->Line_41 $$ isOpenQuote = !quotedIdentifier[ FD ]
Line_39 $$ boolean isOpenQuote-->Line_41 $$ isOpenQuote = !quotedIdentifier[ FD ]
Line_117 $$ nextToken = hasMore ? tokens.nextToken() : null-->Line_134 $$ if (isIdentifier(token) && !isFunctionOrKeyword(lcToken, nextToken, dialect, functionRegistry)) [ FD ]
Line_109 $$ if (trimOperands.from != null) -->Line_110 $$ result.append(trimOperands.from).append(' ')[ CD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_45 $$ if (!quotedIdentifier && (dialect.openQuote() == token.charAt(0))) [ FD ]
Line_26 $$ boolean hasMore = tokens.hasMoreTokens()-->Line_116 $$ hasMore = tokens.hasMoreTokens()[ FD ]
Line_20 $$ StringBuilder result = new StringBuilder()-->Line_99 $$ result.append(trimOperands.trimSpec).append(' ')[ FD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_49 $$ if (quotedIdentifier && (dialect.closeQuote() == token.charAt(0))) [ FD ]
Line_42 $$ token = lcToken = isOpenQuote ? Character.toString(dialect.openQuote()) : Character.toString(dialect.closeQuote())-->Line_34 $$ if (!quotedIdentifier && "'".equals(token)) [ FD ]
Line_24 $$ boolean inFromClause = false-->Line_140 $$ if (inFromClause && ",".equals(lcToken)) [ FD ]
Line_20 $$ StringBuilder result = new StringBuilder()-->Line_105 $$ result.append(renderWhereStringTemplate(trimOperands.trimSpec, placeholder, dialect, functionRegistry))[ FD ]
Line_29 $$ String token = nextToken-->Line_34 $$ if (!quotedIdentifier && "'".equals(token)) [ FD ]
Line_26 $$ boolean hasMore = tokens.hasMoreTokens()-->Line_31 $$ hasMore = tokens.hasMoreTokens()[ FD ]
Line_34 $$ if (!quotedIdentifier && "'".equals(token)) -->Line_35 $$ quoted = !quoted[ CD ]
Line_80 $$ if (!quotedOperand) -->Line_82 $$ builder.setLength(0)[ CD ]
Line_144 $$ token = dialect.toBooleanValueString(Boolean.parseBoolean(token))-->Line_146 $$ result.append(token)[ FD ]
Line_123 $$ if (beforeTable) -->Line_125 $$ beforeTable = false[ CD ]
Line_29 $$ String token = nextToken-->Line_120 $$ boolean quotedOrWhitespace = quoted || quotedIdentifier || isQuoteCharacter || Character.isWhitespace(token.charAt(0))[ FD ]
Line_20 $$ StringBuilder result = new StringBuilder()-->Line_103 $$ result.append(trimOperands.trimChar)[ FD ]
