Line_3 $$ if (operand instanceof ParameterNode) -->Line_5 $$ Arrays.fill(rtn, "?")[ CD ]
Line_10 $$ AST node = operand.getFirstChild()-->Line_13 $$ node = node.getNextSibling()[ FD ]
Line_17 $$ String nodeText = operand.getText()-->Line_19 $$ nodeText = nodeText.substring(1)[ FD ]
Line_2 $$ protected static String[] extractMutationTexts(Node operand, int count) -->Line_7 $$ if (operand.getType() == HqlSqlTokenTypes.VECTOR_EXPR) [ FD ]
Line_7 $$ if (operand.getType() == HqlSqlTokenTypes.VECTOR_EXPR) -->Line_11 $$ while (node != null) [ CD ]
Line_13 $$ node = node.getNextSibling()-->Line_12 $$ rtn[x++] = node.getText()[ FD ]
Line_7 $$ if (operand.getType() == HqlSqlTokenTypes.VECTOR_EXPR) -->Line_10 $$ AST node = operand.getFirstChild()[ CD ]
Line_2 $$ protected static String[] extractMutationTexts(Node operand, int count) -->Line_16 $$ if (operand instanceof SqlNode) [ FD ]
Line_7 $$ if (operand.getType() == HqlSqlTokenTypes.VECTOR_EXPR) -->Line_9 $$ int x = 0[ CD ]
Line_2 $$ protected static String[] extractMutationTexts(Node operand, int count) -->Line_8 $$ String[] rtn = new String[operand.getNumberOfChildren()][ FD ]
Line_3 $$ if (operand instanceof ParameterNode) -->Line_7 $$ if (operand.getType() == HqlSqlTokenTypes.VECTOR_EXPR) [ CD ]
Line_2 $$ protected static String[] extractMutationTexts(Node operand, int count) -->Line_25 $$ if (count != splits.length) [ FD ]
Line_2 $$ protected static String[] extractMutationTexts(Node operand, int count) -->Line_10 $$ AST node = operand.getFirstChild()[ FD ]
Line_13 $$ node = node.getNextSibling()-->Line_11 $$ while (node != null) [ FD ]
Line_17 $$ String nodeText = operand.getText()-->Line_18 $$ if (nodeText.startsWith("(")) [ FD ]
Line_11 $$ while (node != null) -->Line_12 $$ rtn[x++] = node.getText()[ CD ]
Line_17 $$ String nodeText = operand.getText()-->Line_21 $$ if (nodeText.endsWith(")")) [ FD ]
Line_4 $$ String[] rtn = new String[count]-->Line_5 $$ Arrays.fill(rtn, "?")[ FD ]
Line_16 $$ if (operand instanceof SqlNode) -->Line_17 $$ String nodeText = operand.getText()[ CD ]
Line_10 $$ AST node = operand.getFirstChild()-->Line_11 $$ while (node != null) [ FD ]
Line_2 $$ protected static String[] extractMutationTexts(Node operand, int count) -->Line_3 $$ if (operand instanceof ParameterNode) [ FD ]
Line_21 $$ if (nodeText.endsWith(")")) -->Line_22 $$ nodeText = nodeText.substring(0, nodeText.length() - 1)[ CD ]
Line_22 $$ nodeText = nodeText.substring(0, nodeText.length() - 1)-->Line_24 $$ String[] splits = StringHelper.split(", ", nodeText)[ FD ]
Line_16 $$ if (operand instanceof SqlNode) -->Line_28 $$ return splits[ CD ]
Line_10 $$ AST node = operand.getFirstChild()-->Line_12 $$ rtn[x++] = node.getText()[ FD ]
Line_3 $$ if (operand instanceof ParameterNode) -->Line_4 $$ String[] rtn = new String[count][ CD ]
Line_19 $$ nodeText = nodeText.substring(1)-->Line_24 $$ String[] splits = StringHelper.split(", ", nodeText)[ FD ]
Line_19 $$ nodeText = nodeText.substring(1)-->Line_21 $$ if (nodeText.endsWith(")")) [ FD ]
Line_17 $$ String nodeText = operand.getText()-->Line_22 $$ nodeText = nodeText.substring(0, nodeText.length() - 1)[ FD ]
Line_18 $$ if (nodeText.startsWith("(")) -->Line_19 $$ nodeText = nodeText.substring(1)[ CD ]
Line_9 $$ int x = 0-->Line_12 $$ rtn[x++] = node.getText()[ FD ]
Line_7 $$ if (operand.getType() == HqlSqlTokenTypes.VECTOR_EXPR) -->Line_16 $$ if (operand instanceof SqlNode) [ CD ]
Line_16 $$ if (operand instanceof SqlNode) -->Line_21 $$ if (nodeText.endsWith(")")) [ CD ]
Line_7 $$ if (operand.getType() == HqlSqlTokenTypes.VECTOR_EXPR) -->Line_15 $$ return rtn[ CD ]
Line_19 $$ nodeText = nodeText.substring(1)-->Line_22 $$ nodeText = nodeText.substring(0, nodeText.length() - 1)[ FD ]
Line_17 $$ String nodeText = operand.getText()-->Line_24 $$ String[] splits = StringHelper.split(", ", nodeText)[ FD ]
Line_2 $$ protected static String[] extractMutationTexts(Node operand, int count) -->Line_3 $$ if (operand instanceof ParameterNode) [ CD ]
Line_16 $$ if (operand instanceof SqlNode) -->Line_24 $$ String[] splits = StringHelper.split(", ", nodeText)[ CD ]
Line_2 $$ protected static String[] extractMutationTexts(Node operand, int count) -->Line_17 $$ String nodeText = operand.getText()[ FD ]
Line_11 $$ while (node != null) -->Line_13 $$ node = node.getNextSibling()[ CD ]
Line_3 $$ if (operand instanceof ParameterNode) -->Line_6 $$ return rtn[ CD ]
Line_16 $$ if (operand instanceof SqlNode) -->Line_18 $$ if (nodeText.startsWith("(")) [ CD ]
Line_16 $$ if (operand instanceof SqlNode) -->Line_25 $$ if (count != splits.length) [ CD ]
