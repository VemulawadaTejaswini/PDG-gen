Line_9 $$ if (classToBind != null && classToBind.length() > 0) -->Line_10 $$ PsiClass psiClass = FormEditingUtil.findClassToBind(getModule(), classToBind)[ CD ]
Line_12 $$ sourceFileToCheckOut = psiClass.getContainingFile().getVirtualFile()-->Line_17 $$ if (sourceFileToCheckOut != null) [ FD ]
Line_2 $$ public boolean ensureEditable() -->Line_22 $$ return !status.hasReadonlyFiles()[ CD ]
Line_6 $$ VirtualFile sourceFileToCheckOut = null-->Line_18 $$ status = ReadonlyStatusHandler.getInstance(getProject()).ensureFilesWritable(myFile, sourceFileToCheckOut)[ FD ]
Line_6 $$ VirtualFile sourceFileToCheckOut = null-->Line_12 $$ sourceFileToCheckOut = psiClass.getContainingFile().getVirtualFile()[ FD ]
Line_8 $$ final String classToBind = myRootContainer.getClassToBind()-->Line_9 $$ if (classToBind != null && classToBind.length() > 0) [ FD ]
Line_16 $$ final ReadonlyStatusHandler.OperationStatus status-->Line_22 $$ return !status.hasReadonlyFiles()[ FD ]
Line_17 $$ if (sourceFileToCheckOut != null) -->Line_18 $$ status = ReadonlyStatusHandler.getInstance(getProject()).ensureFilesWritable(myFile, sourceFileToCheckOut)[ CD ]
Line_16 $$ final ReadonlyStatusHandler.OperationStatus status-->Line_20 $$ status = ReadonlyStatusHandler.getInstance(getProject()).ensureFilesWritable(myFile)[ FD ]
Line_3 $$ if (isEditable()) -->Line_4 $$ return true[ CD ]
Line_2 $$ public boolean ensureEditable() -->Line_3 $$ if (isEditable()) [ CD ]
Line_2 $$ public boolean ensureEditable() -->Line_16 $$ final ReadonlyStatusHandler.OperationStatus status[ CD ]
Line_20 $$ status = ReadonlyStatusHandler.getInstance(getProject()).ensureFilesWritable(myFile)-->Line_22 $$ return !status.hasReadonlyFiles()[ FD ]
Line_2 $$ public boolean ensureEditable() -->Line_17 $$ if (sourceFileToCheckOut != null) [ CD ]
Line_6 $$ VirtualFile sourceFileToCheckOut = null-->Line_17 $$ if (sourceFileToCheckOut != null) [ FD ]
Line_2 $$ public boolean ensureEditable() -->Line_7 $$ if (!GuiDesignerConfiguration.getInstance(getProject()).INSTRUMENT_CLASSES) [ CD ]
Line_16 $$ final ReadonlyStatusHandler.OperationStatus status-->Line_18 $$ status = ReadonlyStatusHandler.getInstance(getProject()).ensureFilesWritable(myFile, sourceFileToCheckOut)[ FD ]
Line_17 $$ if (sourceFileToCheckOut != null) -->Line_20 $$ status = ReadonlyStatusHandler.getInstance(getProject()).ensureFilesWritable(myFile)[ CD ]
Line_10 $$ PsiClass psiClass = FormEditingUtil.findClassToBind(getModule(), classToBind)-->Line_12 $$ sourceFileToCheckOut = psiClass.getContainingFile().getVirtualFile()[ FD ]
Line_18 $$ status = ReadonlyStatusHandler.getInstance(getProject()).ensureFilesWritable(myFile, sourceFileToCheckOut)-->Line_22 $$ return !status.hasReadonlyFiles()[ FD ]
Line_7 $$ if (!GuiDesignerConfiguration.getInstance(getProject()).INSTRUMENT_CLASSES) -->Line_8 $$ final String classToBind = myRootContainer.getClassToBind()[ CD ]
Line_9 $$ if (classToBind != null && classToBind.length() > 0) -->Line_11 $$ if (psiClass != null) [ CD ]
Line_2 $$ public boolean ensureEditable() -->Line_6 $$ VirtualFile sourceFileToCheckOut = null[ CD ]
Line_8 $$ final String classToBind = myRootContainer.getClassToBind()-->Line_10 $$ PsiClass psiClass = FormEditingUtil.findClassToBind(getModule(), classToBind)[ FD ]
Line_7 $$ if (!GuiDesignerConfiguration.getInstance(getProject()).INSTRUMENT_CLASSES) -->Line_9 $$ if (classToBind != null && classToBind.length() > 0) [ CD ]
Line_18 $$ status = ReadonlyStatusHandler.getInstance(getProject()).ensureFilesWritable(myFile, sourceFileToCheckOut)-->Line_20 $$ status = ReadonlyStatusHandler.getInstance(getProject()).ensureFilesWritable(myFile)[ FD ]
Line_12 $$ sourceFileToCheckOut = psiClass.getContainingFile().getVirtualFile()-->Line_18 $$ status = ReadonlyStatusHandler.getInstance(getProject()).ensureFilesWritable(myFile, sourceFileToCheckOut)[ FD ]
Line_10 $$ PsiClass psiClass = FormEditingUtil.findClassToBind(getModule(), classToBind)-->Line_11 $$ if (psiClass != null) [ FD ]
Line_11 $$ if (psiClass != null) -->Line_12 $$ sourceFileToCheckOut = psiClass.getContainingFile().getVirtualFile()[ CD ]
