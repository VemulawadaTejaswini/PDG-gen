Line_10 $$ if (target != null) -->Line_14 $$ endMethod()[ CD ]
Line_2 $$ private void generateComponentReferenceProperties(final LwComponent component, final HashMap<LwComponent, String> component2variable, final TObjectIntHashMap<String> class2variableIndex, final HashMap<String, LwComponent> id2component, final PsiClass aClass) -->Line_19 $$ if (component instanceof LwContainer) [ CD ]
Line_2 $$ private void generateComponentReferenceProperties(final LwComponent component, final HashMap<LwComponent, String> component2variable, final TObjectIntHashMap<String> class2variableIndex, final HashMap<String, LwComponent> id2component, final PsiClass aClass) -->Line_9 $$ LwComponent target = id2component.get(componentId)[ FD ]
Line_2 $$ private void generateComponentReferenceProperties(final LwComponent component, final HashMap<LwComponent, String> component2variable, final TObjectIntHashMap<String> class2variableIndex, final HashMap<String, LwComponent> id2component, final PsiClass aClass) -->Line_19 $$ if (component instanceof LwContainer) [ FD ]
Line_7 $$ String componentId = (String) component.getPropertyValue(property)-->Line_9 $$ LwComponent target = id2component.get(componentId)[ FD ]
Line_11 $$ String targetVariable = getVariable(target, component2variable, class2variableIndex, aClass)-->Line_13 $$ pushVar(targetVariable)[ FD ]
Line_9 $$ LwComponent target = id2component.get(componentId)-->Line_10 $$ if (target != null) [ FD ]
Line_20 $$ final LwContainer container = (LwContainer) component-->Line_22 $$ generateComponentReferenceProperties((LwComponent) container.getComponent(i), component2variable, class2variableIndex, id2component, aClass)[ FD ]
Line_21 $$ for (int i = 0; i < container.getComponentCount(); i++) -->Line_22 $$ generateComponentReferenceProperties((LwComponent) container.getComponent(i), component2variable, class2variableIndex, id2component, aClass)[ FD ]
Line_2 $$ private void generateComponentReferenceProperties(final LwComponent component, final HashMap<LwComponent, String> component2variable, final TObjectIntHashMap<String> class2variableIndex, final HashMap<String, LwComponent> id2component, final PsiClass aClass) -->Line_22 $$ generateComponentReferenceProperties((LwComponent) container.getComponent(i), component2variable, class2variableIndex, id2component, aClass)[ FD ]
Line_6 $$ if (property instanceof LwIntroComponentProperty) -->Line_8 $$ if (componentId != null && componentId.length() > 0) [ CD ]
Line_21 $$ for (int i = 0; i < container.getComponentCount(); i++) -->Line_22 $$ generateComponentReferenceProperties((LwComponent) container.getComponent(i), component2variable, class2variableIndex, id2component, aClass)[ CD ]
Line_5 $$ for (final LwIntrospectedProperty property : introspectedProperties) -->Line_6 $$ if (property instanceof LwIntroComponentProperty) [ FD ]
Line_5 $$ for (final LwIntrospectedProperty property : introspectedProperties) -->Line_7 $$ String componentId = (String) component.getPropertyValue(property)[ FD ]
Line_2 $$ private void generateComponentReferenceProperties(final LwComponent component, final HashMap<LwComponent, String> component2variable, final TObjectIntHashMap<String> class2variableIndex, final HashMap<String, LwComponent> id2component, final PsiClass aClass) -->Line_11 $$ String targetVariable = getVariable(target, component2variable, class2variableIndex, aClass)[ FD ]
Line_10 $$ if (target != null) -->Line_11 $$ String targetVariable = getVariable(target, component2variable, class2variableIndex, aClass)[ CD ]
Line_9 $$ LwComponent target = id2component.get(componentId)-->Line_11 $$ String targetVariable = getVariable(target, component2variable, class2variableIndex, aClass)[ FD ]
Line_2 $$ private void generateComponentReferenceProperties(final LwComponent component, final HashMap<LwComponent, String> component2variable, final TObjectIntHashMap<String> class2variableIndex, final HashMap<String, LwComponent> id2component, final PsiClass aClass) -->Line_3 $$ String variable = getVariable(component, component2variable, class2variableIndex, aClass)[ CD ]
Line_10 $$ if (target != null) -->Line_12 $$ startMethodCall(variable, property.getWriteMethodName())[ CD ]
Line_3 $$ String variable = getVariable(component, component2variable, class2variableIndex, aClass)-->Line_12 $$ startMethodCall(variable, property.getWriteMethodName())[ FD ]
Line_20 $$ final LwContainer container = (LwContainer) component-->Line_21 $$ for (int i = 0; i < container.getComponentCount(); i++) [ FD ]
Line_8 $$ if (componentId != null && componentId.length() > 0) -->Line_10 $$ if (target != null) [ CD ]
Line_8 $$ if (componentId != null && componentId.length() > 0) -->Line_9 $$ LwComponent target = id2component.get(componentId)[ CD ]
Line_7 $$ String componentId = (String) component.getPropertyValue(property)-->Line_8 $$ if (componentId != null && componentId.length() > 0) [ FD ]
Line_2 $$ private void generateComponentReferenceProperties(final LwComponent component, final HashMap<LwComponent, String> component2variable, final TObjectIntHashMap<String> class2variableIndex, final HashMap<String, LwComponent> id2component, final PsiClass aClass) -->Line_4 $$ final LwIntrospectedProperty[] introspectedProperties = component.getAssignedIntrospectedProperties()[ CD ]
Line_6 $$ if (property instanceof LwIntroComponentProperty) -->Line_7 $$ String componentId = (String) component.getPropertyValue(property)[ CD ]
Line_19 $$ if (component instanceof LwContainer) -->Line_20 $$ final LwContainer container = (LwContainer) component[ CD ]
Line_2 $$ private void generateComponentReferenceProperties(final LwComponent component, final HashMap<LwComponent, String> component2variable, final TObjectIntHashMap<String> class2variableIndex, final HashMap<String, LwComponent> id2component, final PsiClass aClass) -->Line_4 $$ final LwIntrospectedProperty[] introspectedProperties = component.getAssignedIntrospectedProperties()[ FD ]
Line_10 $$ if (target != null) -->Line_13 $$ pushVar(targetVariable)[ CD ]
Line_5 $$ for (final LwIntrospectedProperty property : introspectedProperties) -->Line_12 $$ startMethodCall(variable, property.getWriteMethodName())[ FD ]
Line_2 $$ private void generateComponentReferenceProperties(final LwComponent component, final HashMap<LwComponent, String> component2variable, final TObjectIntHashMap<String> class2variableIndex, final HashMap<String, LwComponent> id2component, final PsiClass aClass) -->Line_7 $$ String componentId = (String) component.getPropertyValue(property)[ FD ]
Line_19 $$ if (component instanceof LwContainer) -->Line_21 $$ for (int i = 0; i < container.getComponentCount(); i++) [ CD ]
Line_2 $$ private void generateComponentReferenceProperties(final LwComponent component, final HashMap<LwComponent, String> component2variable, final TObjectIntHashMap<String> class2variableIndex, final HashMap<String, LwComponent> id2component, final PsiClass aClass) -->Line_3 $$ String variable = getVariable(component, component2variable, class2variableIndex, aClass)[ FD ]
