Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_7 $$ ifClause = stripQuotes(ifClause, CharPool.QUOTE)[ FD ]
Line_8 $$ ifClause = stripQuotes(ifClause, CharPool.APOSTROPHE)-->Line_17 $$ int max = StringUtil.count(ifClause, StringPool.OPEN_PARENTHESIS)[ FD ]
Line_20 $$ for (int i = 0; i < ifClause.length(); i++) -->Line_21 $$ char c = ifClause.charAt(i)[ FD ]
Line_7 $$ ifClause = stripQuotes(ifClause, CharPool.QUOTE)-->Line_12 $$ if (hasRedundantParentheses(ifClause, "||", "&&") || hasRedundantParentheses(ifClause, "&&", "||")) [ FD ]
Line_23 $$ if (previousParenthesisPos != -1) -->Line_24 $$ String s = ifClause.substring(previousParenthesisPos + 1, i)[ CD ]
Line_20 $$ for (int i = 0; i < ifClause.length(); i++) -->Line_21 $$ char c = ifClause.charAt(i)[ CD ]
Line_48 $$ level -= 1-->Line_35 $$ if (level > 1) [ FD ]
Line_20 $$ for (int i = 0; i < ifClause.length(); i++) -->Line_29 $$ previousParenthesisPos = i[ FD ]
Line_30 $$ if (c == CharPool.OPEN_PARENTHESIS) -->Line_35 $$ if (level > 1) [ CD ]
Line_22 $$ if ((c == CharPool.OPEN_PARENTHESIS) || (c == CharPool.CLOSE_PARENTHESIS)) -->Line_30 $$ if (c == CharPool.OPEN_PARENTHESIS) [ CD ]
Line_30 $$ if (c == CharPool.OPEN_PARENTHESIS) -->Line_31 $$ levels[level] = i[ CD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_36 $$ char nextChar = ifClause.charAt(i + 1)[ FD ]
Line_22 $$ if ((c == CharPool.OPEN_PARENTHESIS) || (c == CharPool.CLOSE_PARENTHESIS)) -->Line_29 $$ previousParenthesisPos = i[ CD ]
Line_7 $$ ifClause = stripQuotes(ifClause, CharPool.QUOTE)-->Line_9 $$ if (ifClause.contains(StringPool.DOUBLE_SLASH) || ifClause.contains("")) [ FD ]
Line_36 $$ char nextChar = ifClause.charAt(i + 1)-->Line_38 $$ if (!Character.isLetterOrDigit(nextChar) && (nextChar != CharPool.PERIOD) && !Character.isLetterOrDigit(previousChar)) [ FD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_39 $$ String s = ifClause.substring(posOpenParenthesis + 1, i)[ FD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_15 $$ ifClause = stripRedundantParentheses(ifClause)[ CD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_3 $$ int quoteCount = StringUtil.count(ifClause, StringPool.QUOTE)[ FD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_41 $$ processErrorMessage(fileName, "redundant parentheses: " + fileName + " " + lineCount)[ FD ]
Line_15 $$ ifClause = stripRedundantParentheses(ifClause)-->Line_21 $$ char c = ifClause.charAt(i)[ FD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_13 $$ processErrorMessage(fileName, "redundant parentheses: " + fileName + " " + lineCount)[ FD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_17 $$ int max = StringUtil.count(ifClause, StringPool.OPEN_PARENTHESIS)[ CD ]
Line_8 $$ ifClause = stripQuotes(ifClause, CharPool.APOSTROPHE)-->Line_21 $$ char c = ifClause.charAt(i)[ FD ]
Line_35 $$ if (level > 1) -->Line_38 $$ if (!Character.isLetterOrDigit(nextChar) && (nextChar != CharPool.PERIOD) && !Character.isLetterOrDigit(previousChar)) [ CD ]
Line_32 $$ level += 1-->Line_48 $$ level -= 1[ FD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_24 $$ String s = ifClause.substring(previousParenthesisPos + 1, i)[ FD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_26 $$ processErrorMessage(fileName, "missing parentheses: " + fileName + " " + lineCount)[ FD ]
Line_8 $$ ifClause = stripQuotes(ifClause, CharPool.APOSTROPHE)-->Line_12 $$ if (hasRedundantParentheses(ifClause, "||", "&&") || hasRedundantParentheses(ifClause, "&&", "||")) [ FD ]
Line_30 $$ if (c == CharPool.OPEN_PARENTHESIS) -->Line_32 $$ level += 1[ CD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_12 $$ if (hasRedundantParentheses(ifClause, "||", "&&") || hasRedundantParentheses(ifClause, "&&", "||")) [ FD ]
Line_38 $$ if (!Character.isLetterOrDigit(nextChar) && (nextChar != CharPool.PERIOD) && !Character.isLetterOrDigit(previousChar)) -->Line_40 $$ if (hasRedundantParentheses(s)) [ CD ]
Line_35 $$ if (level > 1) -->Line_36 $$ char nextChar = ifClause.charAt(i + 1)[ CD ]
Line_20 $$ for (int i = 0; i < ifClause.length(); i++) -->Line_22 $$ if ((c == CharPool.OPEN_PARENTHESIS) || (c == CharPool.CLOSE_PARENTHESIS)) [ CD ]
Line_20 $$ for (int i = 0; i < ifClause.length(); i++) -->Line_31 $$ levels[level] = i[ FD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_9 $$ if (ifClause.contains(StringPool.DOUBLE_SLASH) || ifClause.contains("")) [ CD ]
Line_38 $$ if (!Character.isLetterOrDigit(nextChar) && (nextChar != CharPool.PERIOD) && !Character.isLetterOrDigit(previousChar)) -->Line_39 $$ String s = ifClause.substring(posOpenParenthesis + 1, i)[ CD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_20 $$ for (int i = 0; i < ifClause.length(); i++) [ CD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_4 $$ if ((quoteCount % 2) == 1) [ CD ]
Line_15 $$ ifClause = stripRedundantParentheses(ifClause)-->Line_37 $$ char previousChar = ifClause.charAt(posOpenParenthesis - 1)[ FD ]
Line_25 $$ if (hasMissingParentheses(s)) -->Line_26 $$ processErrorMessage(fileName, "missing parentheses: " + fileName + " " + lineCount)[ CD ]
Line_40 $$ if (hasRedundantParentheses(s)) -->Line_41 $$ processErrorMessage(fileName, "redundant parentheses: " + fileName + " " + lineCount)[ CD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_12 $$ if (hasRedundantParentheses(ifClause, "||", "&&") || hasRedundantParentheses(ifClause, "&&", "||")) [ CD ]
Line_4 $$ if ((quoteCount % 2) == 1) -->Line_5 $$ return[ CD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_17 $$ int max = StringUtil.count(ifClause, StringPool.OPEN_PARENTHESIS)[ FD ]
Line_24 $$ String s = ifClause.substring(previousParenthesisPos + 1, i)-->Line_25 $$ if (hasMissingParentheses(s)) [ FD ]
Line_16 $$ int level = 0-->Line_48 $$ level -= 1[ FD ]
Line_23 $$ if (previousParenthesisPos != -1) -->Line_25 $$ if (hasMissingParentheses(s)) [ CD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_8 $$ ifClause = stripQuotes(ifClause, CharPool.APOSTROPHE)[ CD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_9 $$ if (ifClause.contains(StringPool.DOUBLE_SLASH) || ifClause.contains("")) [ FD ]
Line_20 $$ for (int i = 0; i < ifClause.length(); i++) -->Line_39 $$ String s = ifClause.substring(posOpenParenthesis + 1, i)[ FD ]
Line_24 $$ String s = ifClause.substring(previousParenthesisPos + 1, i)-->Line_40 $$ if (hasRedundantParentheses(s)) [ FD ]
Line_35 $$ if (level > 1) -->Line_44 $$ if ((previousChar == CharPool.OPEN_PARENTHESIS) && (nextChar == CharPool.CLOSE_PARENTHESIS)) [ CD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_7 $$ ifClause = stripQuotes(ifClause, CharPool.QUOTE)[ CD ]
Line_8 $$ ifClause = stripQuotes(ifClause, CharPool.APOSTROPHE)-->Line_39 $$ String s = ifClause.substring(posOpenParenthesis + 1, i)[ FD ]
Line_15 $$ ifClause = stripRedundantParentheses(ifClause)-->Line_36 $$ char nextChar = ifClause.charAt(i + 1)[ FD ]
Line_15 $$ ifClause = stripRedundantParentheses(ifClause)-->Line_24 $$ String s = ifClause.substring(previousParenthesisPos + 1, i)[ FD ]
Line_37 $$ char previousChar = ifClause.charAt(posOpenParenthesis - 1)-->Line_38 $$ if (!Character.isLetterOrDigit(nextChar) && (nextChar != CharPool.PERIOD) && !Character.isLetterOrDigit(previousChar)) [ FD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_21 $$ char c = ifClause.charAt(i)[ FD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_45 $$ processErrorMessage(fileName, "redundant parentheses: " + fileName + " " + lineCount)[ FD ]
Line_7 $$ ifClause = stripQuotes(ifClause, CharPool.QUOTE)-->Line_8 $$ ifClause = stripQuotes(ifClause, CharPool.APOSTROPHE)[ FD ]
Line_7 $$ ifClause = stripQuotes(ifClause, CharPool.QUOTE)-->Line_24 $$ String s = ifClause.substring(previousParenthesisPos + 1, i)[ FD ]
Line_7 $$ ifClause = stripQuotes(ifClause, CharPool.QUOTE)-->Line_37 $$ char previousChar = ifClause.charAt(posOpenParenthesis - 1)[ FD ]
Line_7 $$ ifClause = stripQuotes(ifClause, CharPool.QUOTE)-->Line_17 $$ int max = StringUtil.count(ifClause, StringPool.OPEN_PARENTHESIS)[ FD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_8 $$ ifClause = stripQuotes(ifClause, CharPool.APOSTROPHE)[ FD ]
Line_9 $$ if (ifClause.contains(StringPool.DOUBLE_SLASH) || ifClause.contains("")) -->Line_10 $$ return[ CD ]
Line_8 $$ ifClause = stripQuotes(ifClause, CharPool.APOSTROPHE)-->Line_24 $$ String s = ifClause.substring(previousParenthesisPos + 1, i)[ FD ]
Line_30 $$ if (c == CharPool.OPEN_PARENTHESIS) -->Line_34 $$ int posOpenParenthesis = levels[level - 1][ CD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_19 $$ int[] levels = new int[max][ CD ]
Line_18 $$ int previousParenthesisPos = -1-->Line_23 $$ if (previousParenthesisPos != -1) [ FD ]
Line_22 $$ if ((c == CharPool.OPEN_PARENTHESIS) || (c == CharPool.CLOSE_PARENTHESIS)) -->Line_23 $$ if (previousParenthesisPos != -1) [ CD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_16 $$ int level = 0[ CD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_15 $$ ifClause = stripRedundantParentheses(ifClause)[ FD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_18 $$ int previousParenthesisPos = -1[ CD ]
Line_29 $$ previousParenthesisPos = i-->Line_23 $$ if (previousParenthesisPos != -1) [ FD ]
Line_7 $$ ifClause = stripQuotes(ifClause, CharPool.QUOTE)-->Line_36 $$ char nextChar = ifClause.charAt(i + 1)[ FD ]
Line_32 $$ level += 1-->Line_35 $$ if (level > 1) [ FD ]
Line_7 $$ ifClause = stripQuotes(ifClause, CharPool.QUOTE)-->Line_21 $$ char c = ifClause.charAt(i)[ FD ]
Line_8 $$ ifClause = stripQuotes(ifClause, CharPool.APOSTROPHE)-->Line_20 $$ for (int i = 0; i < ifClause.length(); i++) [ FD ]
Line_16 $$ int level = 0-->Line_35 $$ if (level > 1) [ FD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_20 $$ for (int i = 0; i < ifClause.length(); i++) [ FD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_37 $$ char previousChar = ifClause.charAt(posOpenParenthesis - 1)[ FD ]
Line_15 $$ ifClause = stripRedundantParentheses(ifClause)-->Line_17 $$ int max = StringUtil.count(ifClause, StringPool.OPEN_PARENTHESIS)[ FD ]
Line_30 $$ if (c == CharPool.OPEN_PARENTHESIS) -->Line_48 $$ level -= 1[ CD ]
Line_8 $$ ifClause = stripQuotes(ifClause, CharPool.APOSTROPHE)-->Line_37 $$ char previousChar = ifClause.charAt(posOpenParenthesis - 1)[ FD ]
Line_12 $$ if (hasRedundantParentheses(ifClause, "||", "&&") || hasRedundantParentheses(ifClause, "&&", "||")) -->Line_13 $$ processErrorMessage(fileName, "redundant parentheses: " + fileName + " " + lineCount)[ CD ]
Line_7 $$ ifClause = stripQuotes(ifClause, CharPool.QUOTE)-->Line_39 $$ String s = ifClause.substring(posOpenParenthesis + 1, i)[ FD ]
Line_2 $$ protected void checkIfClauseParentheses(String ifClause, String fileName, int lineCount) -->Line_3 $$ int quoteCount = StringUtil.count(ifClause, StringPool.QUOTE)[ CD ]
Line_7 $$ ifClause = stripQuotes(ifClause, CharPool.QUOTE)-->Line_15 $$ ifClause = stripRedundantParentheses(ifClause)[ FD ]
Line_8 $$ ifClause = stripQuotes(ifClause, CharPool.APOSTROPHE)-->Line_15 $$ ifClause = stripRedundantParentheses(ifClause)[ FD ]
Line_7 $$ ifClause = stripQuotes(ifClause, CharPool.QUOTE)-->Line_20 $$ for (int i = 0; i < ifClause.length(); i++) [ FD ]
Line_8 $$ ifClause = stripQuotes(ifClause, CharPool.APOSTROPHE)-->Line_36 $$ char nextChar = ifClause.charAt(i + 1)[ FD ]
Line_21 $$ char c = ifClause.charAt(i)-->Line_30 $$ if (c == CharPool.OPEN_PARENTHESIS) [ FD ]
Line_8 $$ ifClause = stripQuotes(ifClause, CharPool.APOSTROPHE)-->Line_9 $$ if (ifClause.contains(StringPool.DOUBLE_SLASH) || ifClause.contains("")) [ FD ]
Line_20 $$ for (int i = 0; i < ifClause.length(); i++) -->Line_24 $$ String s = ifClause.substring(previousParenthesisPos + 1, i)[ FD ]
Line_18 $$ int previousParenthesisPos = -1-->Line_29 $$ previousParenthesisPos = i[ FD ]
Line_35 $$ if (level > 1) -->Line_37 $$ char previousChar = ifClause.charAt(posOpenParenthesis - 1)[ CD ]
Line_16 $$ int level = 0-->Line_32 $$ level += 1[ FD ]
Line_15 $$ ifClause = stripRedundantParentheses(ifClause)-->Line_20 $$ for (int i = 0; i < ifClause.length(); i++) [ FD ]
Line_15 $$ ifClause = stripRedundantParentheses(ifClause)-->Line_39 $$ String s = ifClause.substring(posOpenParenthesis + 1, i)[ FD ]
Line_44 $$ if ((previousChar == CharPool.OPEN_PARENTHESIS) && (nextChar == CharPool.CLOSE_PARENTHESIS)) -->Line_45 $$ processErrorMessage(fileName, "redundant parentheses: " + fileName + " " + lineCount)[ CD ]
