Line_12 $$ child = this-->Line_23 $$ if (child == null)[ FD ]
Line_11 $$ if (name.equals(".")) -->Line_13 $$ if (name.equals("..")) [ CD ]
Line_14 $$ if (is(VFileProperty.SYMLINK)) -->Line_18 $$ child = getParent()[ CD ]
Line_21 $$ child = findChild(name)-->Line_26 $$ return child.findFileByRelativePath(relPath.substring(index + 1))[ FD ]
Line_2 $$ public VirtualFile findFileByRelativePath(@NotNull @NonNls String relPath) -->Line_5 $$ relPath = StringUtil.trimStart(relPath, "/")[ FD ]
Line_12 $$ child = this-->Line_18 $$ child = getParent()[ FD ]
Line_18 $$ child = getParent()-->Line_21 $$ child = findChild(name)[ FD ]
Line_12 $$ child = this-->Line_21 $$ child = findChild(name)[ FD ]
Line_10 $$ VirtualFile child-->Line_16 $$ child = canonicalFile != null ? canonicalFile.getParent() : null[ FD ]
Line_7 $$ if (index < 0)-->Line_8 $$ index = relPath.length()[ CD ]
Line_8 $$ index = relPath.length()-->Line_25 $$ if (index < relPath.length()) [ FD ]
Line_18 $$ child = getParent()-->Line_26 $$ return child.findFileByRelativePath(relPath.substring(index + 1))[ FD ]
Line_15 $$ final VirtualFile canonicalFile = getCanonicalFile()-->Line_16 $$ child = canonicalFile != null ? canonicalFile.getParent() : null[ FD ]
Line_16 $$ child = canonicalFile != null ? canonicalFile.getParent() : null-->Line_23 $$ if (child == null)[ FD ]
Line_2 $$ public VirtualFile findFileByRelativePath(@NotNull @NonNls String relPath) -->Line_25 $$ if (index < relPath.length()) [ FD ]
Line_2 $$ public VirtualFile findFileByRelativePath(@NotNull @NonNls String relPath) -->Line_9 $$ String name = relPath.substring(0, index)[ FD ]
Line_9 $$ String name = relPath.substring(0, index)-->Line_13 $$ if (name.equals("..")) [ FD ]
Line_16 $$ child = canonicalFile != null ? canonicalFile.getParent() : null-->Line_21 $$ child = findChild(name)[ FD ]
Line_10 $$ VirtualFile child-->Line_26 $$ return child.findFileByRelativePath(relPath.substring(index + 1))[ FD ]
Line_21 $$ child = findChild(name)-->Line_23 $$ if (child == null)[ FD ]
Line_2 $$ public VirtualFile findFileByRelativePath(@NotNull @NonNls String relPath) -->Line_10 $$ VirtualFile child[ CD ]
Line_10 $$ VirtualFile child-->Line_18 $$ child = getParent()[ FD ]
Line_6 $$ int index = relPath.indexOf('/')-->Line_9 $$ String name = relPath.substring(0, index)[ FD ]
Line_6 $$ int index = relPath.indexOf('/')-->Line_25 $$ if (index < relPath.length()) [ FD ]
Line_2 $$ public VirtualFile findFileByRelativePath(@NotNull @NonNls String relPath) -->Line_11 $$ if (name.equals(".")) [ CD ]
Line_2 $$ public VirtualFile findFileByRelativePath(@NotNull @NonNls String relPath) -->Line_5 $$ relPath = StringUtil.trimStart(relPath, "/")[ CD ]
Line_14 $$ if (is(VFileProperty.SYMLINK)) -->Line_15 $$ final VirtualFile canonicalFile = getCanonicalFile()[ CD ]
Line_2 $$ public VirtualFile findFileByRelativePath(@NotNull @NonNls String relPath) -->Line_7 $$ if (index < 0)[ CD ]
Line_13 $$ if (name.equals("..")) -->Line_14 $$ if (is(VFileProperty.SYMLINK)) [ CD ]
Line_2 $$ public VirtualFile findFileByRelativePath(@NotNull @NonNls String relPath) -->Line_3 $$ if (relPath.isEmpty())[ CD ]
Line_10 $$ VirtualFile child-->Line_23 $$ if (child == null)[ FD ]
Line_13 $$ if (name.equals("..")) -->Line_21 $$ child = findChild(name)[ CD ]
Line_8 $$ index = relPath.length()-->Line_9 $$ String name = relPath.substring(0, index)[ FD ]
Line_14 $$ if (is(VFileProperty.SYMLINK)) -->Line_16 $$ child = canonicalFile != null ? canonicalFile.getParent() : null[ CD ]
Line_2 $$ public VirtualFile findFileByRelativePath(@NotNull @NonNls String relPath) -->Line_23 $$ if (child == null)[ CD ]
Line_9 $$ String name = relPath.substring(0, index)-->Line_11 $$ if (name.equals(".")) [ FD ]
Line_18 $$ child = getParent()-->Line_23 $$ if (child == null)[ FD ]
Line_11 $$ if (name.equals(".")) -->Line_12 $$ child = this[ CD ]
Line_6 $$ int index = relPath.indexOf('/')-->Line_7 $$ if (index < 0)[ FD ]
Line_10 $$ VirtualFile child-->Line_21 $$ child = findChild(name)[ FD ]
Line_3 $$ if (relPath.isEmpty())-->Line_4 $$ return this[ CD ]
Line_2 $$ public VirtualFile findFileByRelativePath(@NotNull @NonNls String relPath) -->Line_9 $$ String name = relPath.substring(0, index)[ CD ]
Line_2 $$ public VirtualFile findFileByRelativePath(@NotNull @NonNls String relPath) -->Line_3 $$ if (relPath.isEmpty())[ FD ]
Line_10 $$ VirtualFile child-->Line_12 $$ child = this[ FD ]
Line_16 $$ child = canonicalFile != null ? canonicalFile.getParent() : null-->Line_26 $$ return child.findFileByRelativePath(relPath.substring(index + 1))[ FD ]
Line_2 $$ public VirtualFile findFileByRelativePath(@NotNull @NonNls String relPath) -->Line_28 $$ return child[ CD ]
Line_6 $$ int index = relPath.indexOf('/')-->Line_8 $$ index = relPath.length()[ FD ]
Line_2 $$ public VirtualFile findFileByRelativePath(@NotNull @NonNls String relPath) -->Line_8 $$ index = relPath.length()[ FD ]
Line_25 $$ if (index < relPath.length()) -->Line_26 $$ return child.findFileByRelativePath(relPath.substring(index + 1))[ CD ]
Line_16 $$ child = canonicalFile != null ? canonicalFile.getParent() : null-->Line_18 $$ child = getParent()[ FD ]
Line_2 $$ public VirtualFile findFileByRelativePath(@NotNull @NonNls String relPath) -->Line_6 $$ int index = relPath.indexOf('/')[ FD ]
Line_9 $$ String name = relPath.substring(0, index)-->Line_21 $$ child = findChild(name)[ FD ]
Line_2 $$ public VirtualFile findFileByRelativePath(@NotNull @NonNls String relPath) -->Line_25 $$ if (index < relPath.length()) [ CD ]
Line_2 $$ public VirtualFile findFileByRelativePath(@NotNull @NonNls String relPath) -->Line_6 $$ int index = relPath.indexOf('/')[ CD ]
Line_23 $$ if (child == null)-->Line_24 $$ return null[ CD ]
Line_12 $$ child = this-->Line_26 $$ return child.findFileByRelativePath(relPath.substring(index + 1))[ FD ]
Line_12 $$ child = this-->Line_16 $$ child = canonicalFile != null ? canonicalFile.getParent() : null[ FD ]
Line_2 $$ public VirtualFile findFileByRelativePath(@NotNull @NonNls String relPath) -->Line_26 $$ return child.findFileByRelativePath(relPath.substring(index + 1))[ FD ]
