Line_26 $$ VirtualFile subdir = the_root.findChild(dirs[i])-->Line_32 $$ subdir = the_root.createChildDirectory(lfs, dirs[i])[ FD ]
Line_37 $$ the_root = subdir-->Line_40 $$ ret = psi_mgr.findDirectory(the_root)[ FD ]
Line_11 $$ the_root = file-->Line_37 $$ the_root = subdir[ FD ]
Line_26 $$ VirtualFile subdir = the_root.findChild(dirs[i])-->Line_29 $$ throw new IOException("Expected dir, but got non-dir: " + subdir.getPath())[ FD ]
Line_2 $$ private static PsiDirectory createDirectories(Project project, String target) throws IOException -->Line_5 $$ PsiDirectory ret = null[ CD ]
Line_36 $$ init_vfile = subdir.createChildData(lfs, PyNames.INIT_DOT_PY)-->Line_35 $$ if (init_vfile == null)[ FD ]
Line_18 $$ if (the_rest != null) -->Line_20 $$ final PsiManager psi_mgr = PsiManager.getInstance(project)[ CD ]
Line_19 $$ final LocalFileSystem lfs = LocalFileSystem.getInstance()-->Line_36 $$ init_vfile = subdir.createChildData(lfs, PyNames.INIT_DOT_PY)[ FD ]
Line_10 $$ the_rest = target.substring(root_path.length())-->Line_21 $$ String[] dirs = the_rest.split("/")[ FD ]
Line_32 $$ subdir = the_root.createChildDirectory(lfs, dirs[i])-->Line_36 $$ init_vfile = subdir.createChildData(lfs, PyNames.INIT_DOT_PY)[ FD ]
Line_32 $$ subdir = the_root.createChildDirectory(lfs, dirs[i])-->Line_27 $$ if (subdir != null) [ FD ]
Line_27 $$ if (subdir != null) -->Line_28 $$ if (!subdir.isDirectory()) [ CD ]
Line_2 $$ private static PsiDirectory createDirectories(Project project, String target) throws IOException -->Line_4 $$ VirtualFile the_root = null[ CD ]
Line_9 $$ if (target.startsWith(root_path)) -->Line_10 $$ the_rest = target.substring(root_path.length())[ CD ]
Line_22 $$ int i = 0-->Line_25 $$ while (i < dirs.length) [ FD ]
Line_10 $$ the_rest = target.substring(root_path.length())-->Line_18 $$ if (the_rest != null) [ FD ]
Line_34 $$ VirtualFile init_vfile = subdir.findChild(PyNames.INIT_DOT_PY)-->Line_35 $$ if (init_vfile == null)[ FD ]
Line_9 $$ if (target.startsWith(root_path)) -->Line_11 $$ the_root = file[ CD ]
Line_24 $$ i = 1-->Line_38 $$ i += 1[ FD ]
Line_5 $$ PsiDirectory ret = null-->Line_40 $$ ret = psi_mgr.findDirectory(the_root)[ FD ]
Line_32 $$ subdir = the_root.createChildDirectory(lfs, dirs[i])-->Line_28 $$ if (!subdir.isDirectory()) [ FD ]
Line_4 $$ VirtualFile the_root = null-->Line_26 $$ VirtualFile subdir = the_root.findChild(dirs[i])[ FD ]
Line_18 $$ if (the_rest != null) -->Line_23 $$ if ("".equals(dirs[0]))[ CD ]
Line_4 $$ VirtualFile the_root = null-->Line_40 $$ ret = psi_mgr.findDirectory(the_root)[ FD ]
Line_2 $$ private static PsiDirectory createDirectories(Project project, String target) throws IOException -->Line_9 $$ if (target.startsWith(root_path)) [ FD ]
Line_25 $$ while (i < dirs.length) -->Line_34 $$ VirtualFile init_vfile = subdir.findChild(PyNames.INIT_DOT_PY)[ CD ]
Line_38 $$ i += 1-->Line_25 $$ while (i < dirs.length) [ FD ]
Line_26 $$ VirtualFile subdir = the_root.findChild(dirs[i])-->Line_27 $$ if (subdir != null) [ FD ]
Line_19 $$ final LocalFileSystem lfs = LocalFileSystem.getInstance()-->Line_32 $$ subdir = the_root.createChildDirectory(lfs, dirs[i])[ FD ]
Line_32 $$ subdir = the_root.createChildDirectory(lfs, dirs[i])-->Line_29 $$ throw new IOException("Expected dir, but got non-dir: " + subdir.getPath())[ FD ]
Line_20 $$ final PsiManager psi_mgr = PsiManager.getInstance(project)-->Line_40 $$ ret = psi_mgr.findDirectory(the_root)[ FD ]
Line_4 $$ VirtualFile the_root = null-->Line_32 $$ subdir = the_root.createChildDirectory(lfs, dirs[i])[ FD ]
Line_26 $$ VirtualFile subdir = the_root.findChild(dirs[i])-->Line_28 $$ if (!subdir.isDirectory()) [ FD ]
Line_6 $$ target = FileUtil.toSystemIndependentName(target)-->Line_9 $$ if (target.startsWith(root_path)) [ FD ]
Line_25 $$ while (i < dirs.length) -->Line_38 $$ i += 1[ CD ]
Line_25 $$ while (i < dirs.length) -->Line_37 $$ the_root = subdir[ CD ]
Line_11 $$ the_root = file-->Line_32 $$ subdir = the_root.createChildDirectory(lfs, dirs[i])[ FD ]
Line_26 $$ VirtualFile subdir = the_root.findChild(dirs[i])-->Line_37 $$ the_root = subdir[ FD ]
Line_35 $$ if (init_vfile == null)-->Line_36 $$ init_vfile = subdir.createChildData(lfs, PyNames.INIT_DOT_PY)[ CD ]
Line_8 $$ final String root_path = file.getPath()-->Line_9 $$ if (target.startsWith(root_path)) [ FD ]
Line_2 $$ private static PsiDirectory createDirectories(Project project, String target) throws IOException -->Line_15 $$ if (the_root == null) [ CD ]
Line_3 $$ String the_rest = null-->Line_18 $$ if (the_rest != null) [ FD ]
Line_2 $$ private static PsiDirectory createDirectories(Project project, String target) throws IOException -->Line_3 $$ String the_rest = null[ CD ]
Line_11 $$ the_root = file-->Line_40 $$ ret = psi_mgr.findDirectory(the_root)[ FD ]
Line_3 $$ String the_rest = null-->Line_21 $$ String[] dirs = the_rest.split("/")[ FD ]
Line_2 $$ private static PsiDirectory createDirectories(Project project, String target) throws IOException -->Line_6 $$ target = FileUtil.toSystemIndependentName(target)[ CD ]
Line_2 $$ private static PsiDirectory createDirectories(Project project, String target) throws IOException -->Line_6 $$ target = FileUtil.toSystemIndependentName(target)[ FD ]
Line_11 $$ the_root = file-->Line_26 $$ VirtualFile subdir = the_root.findChild(dirs[i])[ FD ]
Line_2 $$ private static PsiDirectory createDirectories(Project project, String target) throws IOException -->Line_7 $$ for (VirtualFile file : ProjectRootManager.getInstance(project).getContentRoots()) [ FD ]
Line_7 $$ for (VirtualFile file : ProjectRootManager.getInstance(project).getContentRoots()) -->Line_8 $$ final String root_path = file.getPath()[ FD ]
Line_4 $$ VirtualFile the_root = null-->Line_11 $$ the_root = file[ FD ]
Line_18 $$ if (the_rest != null) -->Line_22 $$ int i = 0[ CD ]
Line_18 $$ if (the_rest != null) -->Line_40 $$ ret = psi_mgr.findDirectory(the_root)[ CD ]
Line_22 $$ int i = 0-->Line_38 $$ i += 1[ FD ]
Line_25 $$ while (i < dirs.length) -->Line_26 $$ VirtualFile subdir = the_root.findChild(dirs[i])[ CD ]
Line_32 $$ subdir = the_root.createChildDirectory(lfs, dirs[i])-->Line_34 $$ VirtualFile init_vfile = subdir.findChild(PyNames.INIT_DOT_PY)[ FD ]
Line_2 $$ private static PsiDirectory createDirectories(Project project, String target) throws IOException -->Line_18 $$ if (the_rest != null) [ CD ]
Line_27 $$ if (subdir != null) -->Line_32 $$ subdir = the_root.createChildDirectory(lfs, dirs[i])[ CD ]
Line_26 $$ VirtualFile subdir = the_root.findChild(dirs[i])-->Line_36 $$ init_vfile = subdir.createChildData(lfs, PyNames.INIT_DOT_PY)[ FD ]
Line_25 $$ while (i < dirs.length) -->Line_35 $$ if (init_vfile == null)[ CD ]
Line_2 $$ private static PsiDirectory createDirectories(Project project, String target) throws IOException -->Line_20 $$ final PsiManager psi_mgr = PsiManager.getInstance(project)[ FD ]
Line_26 $$ VirtualFile subdir = the_root.findChild(dirs[i])-->Line_34 $$ VirtualFile init_vfile = subdir.findChild(PyNames.INIT_DOT_PY)[ FD ]
Line_4 $$ VirtualFile the_root = null-->Line_37 $$ the_root = subdir[ FD ]
Line_22 $$ int i = 0-->Line_24 $$ i = 1[ FD ]
Line_37 $$ the_root = subdir-->Line_32 $$ subdir = the_root.createChildDirectory(lfs, dirs[i])[ FD ]
Line_2 $$ private static PsiDirectory createDirectories(Project project, String target) throws IOException -->Line_42 $$ return ret[ CD ]
Line_2 $$ private static PsiDirectory createDirectories(Project project, String target) throws IOException -->Line_10 $$ the_rest = target.substring(root_path.length())[ FD ]
Line_7 $$ for (VirtualFile file : ProjectRootManager.getInstance(project).getContentRoots()) -->Line_11 $$ the_root = file[ FD ]
Line_24 $$ i = 1-->Line_25 $$ while (i < dirs.length) [ FD ]
Line_34 $$ VirtualFile init_vfile = subdir.findChild(PyNames.INIT_DOT_PY)-->Line_36 $$ init_vfile = subdir.createChildData(lfs, PyNames.INIT_DOT_PY)[ FD ]
Line_8 $$ final String root_path = file.getPath()-->Line_10 $$ the_rest = target.substring(root_path.length())[ FD ]
Line_32 $$ subdir = the_root.createChildDirectory(lfs, dirs[i])-->Line_37 $$ the_root = subdir[ FD ]
Line_11 $$ the_root = file-->Line_15 $$ if (the_root == null) [ FD ]
Line_18 $$ if (the_rest != null) -->Line_19 $$ final LocalFileSystem lfs = LocalFileSystem.getInstance()[ CD ]
Line_6 $$ target = FileUtil.toSystemIndependentName(target)-->Line_10 $$ the_rest = target.substring(root_path.length())[ FD ]
Line_37 $$ the_root = subdir-->Line_26 $$ VirtualFile subdir = the_root.findChild(dirs[i])[ FD ]
Line_25 $$ while (i < dirs.length) -->Line_27 $$ if (subdir != null) [ CD ]
Line_23 $$ if ("".equals(dirs[0]))-->Line_24 $$ i = 1[ CD ]
Line_4 $$ VirtualFile the_root = null-->Line_15 $$ if (the_root == null) [ FD ]
Line_18 $$ if (the_rest != null) -->Line_25 $$ while (i < dirs.length) [ CD ]
Line_18 $$ if (the_rest != null) -->Line_21 $$ String[] dirs = the_rest.split("/")[ CD ]
Line_3 $$ String the_rest = null-->Line_10 $$ the_rest = target.substring(root_path.length())[ FD ]
