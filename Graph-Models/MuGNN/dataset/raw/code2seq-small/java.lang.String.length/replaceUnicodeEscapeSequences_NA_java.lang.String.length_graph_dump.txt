Line_10 $$ int lastEnd = 0-->Line_13 $$ sb.append(text.substring(lastEnd, matcher.start()))[ FD ]
Line_11 $$ final StringBuilder sb = new StringBuilder(text.length())-->Line_19 $$ return sb.toString()[ FD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_9 $$ matcher.reset()[ CD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_3 $$ if (text == null)[ FD ]
Line_5 $$ final Matcher matcher = UNICODE_CHAR.matcher(text)-->Line_14 $$ final char c = (char) Integer.parseInt(matcher.group().substring(2), 16)[ FD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_13 $$ sb.append(text.substring(lastEnd, matcher.start()))[ FD ]
Line_11 $$ final StringBuilder sb = new StringBuilder(text.length())-->Line_18 $$ sb.append(text.substring(lastEnd, text.length()))[ FD ]
Line_11 $$ final StringBuilder sb = new StringBuilder(text.length())-->Line_13 $$ sb.append(text.substring(lastEnd, matcher.start()))[ FD ]
Line_5 $$ final Matcher matcher = UNICODE_CHAR.matcher(text)-->Line_9 $$ matcher.reset()[ FD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_18 $$ sb.append(text.substring(lastEnd, text.length()))[ FD ]
Line_12 $$ while (matcher.find()) -->Line_15 $$ sb.append(c)[ CD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_11 $$ final StringBuilder sb = new StringBuilder(text.length())[ CD ]
Line_5 $$ final Matcher matcher = UNICODE_CHAR.matcher(text)-->Line_13 $$ sb.append(text.substring(lastEnd, matcher.start()))[ FD ]
Line_5 $$ final Matcher matcher = UNICODE_CHAR.matcher(text)-->Line_12 $$ while (matcher.find()) [ FD ]
Line_11 $$ final StringBuilder sb = new StringBuilder(text.length())-->Line_15 $$ sb.append(c)[ FD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_5 $$ final Matcher matcher = UNICODE_CHAR.matcher(text)[ FD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_12 $$ while (matcher.find()) [ CD ]
Line_14 $$ final char c = (char) Integer.parseInt(matcher.group().substring(2), 16)-->Line_15 $$ sb.append(c)[ FD ]
Line_12 $$ while (matcher.find()) -->Line_14 $$ final char c = (char) Integer.parseInt(matcher.group().substring(2), 16)[ CD ]
Line_12 $$ while (matcher.find()) -->Line_13 $$ sb.append(text.substring(lastEnd, matcher.start()))[ CD ]
Line_10 $$ int lastEnd = 0-->Line_16 $$ lastEnd = matcher.end()[ FD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_5 $$ final Matcher matcher = UNICODE_CHAR.matcher(text)[ CD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_19 $$ return sb.toString()[ CD ]
Line_10 $$ int lastEnd = 0-->Line_18 $$ sb.append(text.substring(lastEnd, text.length()))[ FD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_3 $$ if (text == null)[ CD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_10 $$ int lastEnd = 0[ CD ]
Line_5 $$ final Matcher matcher = UNICODE_CHAR.matcher(text)-->Line_16 $$ lastEnd = matcher.end()[ FD ]
Line_16 $$ lastEnd = matcher.end()-->Line_18 $$ sb.append(text.substring(lastEnd, text.length()))[ FD ]
Line_12 $$ while (matcher.find()) -->Line_16 $$ lastEnd = matcher.end()[ CD ]
Line_3 $$ if (text == null)-->Line_4 $$ return null[ CD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_18 $$ sb.append(text.substring(lastEnd, text.length()))[ CD ]
Line_16 $$ lastEnd = matcher.end()-->Line_13 $$ sb.append(text.substring(lastEnd, matcher.start()))[ FD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_11 $$ final StringBuilder sb = new StringBuilder(text.length())[ FD ]
