Line_65 $$ if (i > pos) -->Line_66 $$ for (int j = pos; j < i; ++j) [ CD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_104 $$ sb.append(";UNTIL=").append(until)[ FD ]
Line_33 $$ for (int i = 0; i < parts.length; ++i) -->Line_44 $$ if (p.equals("LD")) [ CD ]
Line_2 $$ static String rewriteRule(String vcalText) -->Line_8 $$ String nameAndParams = m.group(1), freq = m.group(2).toUpperCase(), interval = m.group(3), modifier = m.group(4).trim().toUpperCase(), count = m.group(5), until = m.group(6)[ CD ]
Line_10 $$ Frequency f-->Line_19 $$ f = Frequency.WEEKLY[ FD ]
Line_102 $$ if (null != until) -->Line_105 $$ if (!until.endsWith("Z") && until.indexOf('T') >= 0) [ CD ]
Line_59 $$ if ('P' == freq.charAt(1)) -->Line_87 $$ join(sb, ",", parts)[ CD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_27 $$ sb.append("FREQ=").append(f.name())[ FD ]
Line_13 $$ f = Frequency.YEARLY-->Line_27 $$ sb.append("FREQ=").append(f.name())[ FD ]
Line_8 $$ String nameAndParams = m.group(1), freq = m.group(2).toUpperCase(), interval = m.group(3), modifier = m.group(4).trim().toUpperCase(), count = m.group(5), until = m.group(6)-->Line_32 $$ String[] parts = WHITESPACE.split(modifier)[ FD ]
Line_50 $$ if ('D' == freq.charAt(1)) -->Line_54 $$ sb.append(";BYMONTH=")[ CD ]
Line_65 $$ if (i > pos) -->Line_80 $$ sb.append(parts[i])[ CD ]
Line_10 $$ Frequency f-->Line_16 $$ f = Frequency.MONTHLY[ FD ]
Line_102 $$ if (null != until) -->Line_103 $$ until = until.toUpperCase()[ CD ]
Line_2 $$ static String rewriteRule(String vcalText) -->Line_3 $$ Matcher m = VCAL_RRULE.matcher(vcalText.trim())[ FD ]
Line_67 $$ if (comma) -->Line_68 $$ sb.append(',')[ CD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_86 $$ sb.append(";BYMONTHDAY=")[ FD ]
Line_59 $$ if ('P' == freq.charAt(1)) -->Line_63 $$ for (int i = 0; i < parts.length; ++i) [ CD ]
Line_105 $$ if (!until.endsWith("Z") && until.indexOf('T') >= 0) -->Line_106 $$ sb.append('Z')[ CD ]
Line_50 $$ if ('D' == freq.charAt(1)) -->Line_52 $$ join(sb, ",", parts)[ CD ]
Line_33 $$ for (int i = 0; i < parts.length; ++i) -->Line_65 $$ if (i > pos) [ FD ]
Line_44 $$ if (p.equals("LD")) -->Line_45 $$ parts[i] = "-1"[ CD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_51 $$ sb.append(";BYYEARDAY=")[ FD ]
Line_2 $$ static String rewriteRule(String vcalText) -->Line_9 $$ sb.append(nameAndParams)[ CD ]
Line_59 $$ if ('P' == freq.charAt(1)) -->Line_61 $$ boolean comma = false[ CD ]
Line_2 $$ static String rewriteRule(String vcalText) -->Line_27 $$ sb.append("FREQ=").append(f.name())[ CD ]
Line_16 $$ f = Frequency.MONTHLY-->Line_27 $$ sb.append("FREQ=").append(f.name())[ FD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_106 $$ sb.append('Z')[ FD ]
Line_10 $$ Frequency f-->Line_13 $$ f = Frequency.YEARLY[ FD ]
Line_59 $$ if ('P' == freq.charAt(1)) -->Line_60 $$ int pos = 0[ CD ]
Line_32 $$ String[] parts = WHITESPACE.split(modifier)-->Line_92 $$ join(sb, ",", parts)[ FD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_55 $$ join(sb, ",", parts)[ FD ]
Line_8 $$ String nameAndParams = m.group(1), freq = m.group(2).toUpperCase(), interval = m.group(3), modifier = m.group(4).trim().toUpperCase(), count = m.group(5), until = m.group(6)-->Line_105 $$ if (!until.endsWith("Z") && until.indexOf('T') >= 0) [ FD ]
Line_10 $$ Frequency f-->Line_22 $$ f = Frequency.DAILY[ FD ]
Line_2 $$ static String rewriteRule(String vcalText) -->Line_109 $$ return sb.toString()[ CD ]
Line_8 $$ String nameAndParams = m.group(1), freq = m.group(2).toUpperCase(), interval = m.group(3), modifier = m.group(4).trim().toUpperCase(), count = m.group(5), until = m.group(6)-->Line_59 $$ if ('P' == freq.charAt(1)) [ FD ]
Line_60 $$ int pos = 0-->Line_82 $$ pos = i + 1[ FD ]
Line_34 $$ String p = parts[i]-->Line_41 $$ parts[i] = lastchar + p.substring(0, p.length() - 1)[ FD ]
Line_8 $$ String nameAndParams = m.group(1), freq = m.group(2).toUpperCase(), interval = m.group(3), modifier = m.group(4).trim().toUpperCase(), count = m.group(5), until = m.group(6)-->Line_11 $$ switch(freq.charAt(0)) [ FD ]
Line_8 $$ String nameAndParams = m.group(1), freq = m.group(2).toUpperCase(), interval = m.group(3), modifier = m.group(4).trim().toUpperCase(), count = m.group(5), until = m.group(6)-->Line_104 $$ sb.append(";UNTIL=").append(until)[ FD ]
Line_97 $$ if (null != count) -->Line_102 $$ if (null != until) [ CD ]
Line_8 $$ String nameAndParams = m.group(1), freq = m.group(2).toUpperCase(), interval = m.group(3), modifier = m.group(4).trim().toUpperCase(), count = m.group(5), until = m.group(6)-->Line_100 $$ sb.append(";COUNT=").append(count)[ FD ]
Line_2 $$ static String rewriteRule(String vcalText) -->Line_4 $$ if (!m.matches()) [ CD ]
Line_66 $$ for (int j = pos; j < i; ++j) -->Line_72 $$ sb.append(parts[j]).append(parts[i])[ CD ]
Line_8 $$ String nameAndParams = m.group(1), freq = m.group(2).toUpperCase(), interval = m.group(3), modifier = m.group(4).trim().toUpperCase(), count = m.group(5), until = m.group(6)-->Line_50 $$ if ('D' == freq.charAt(1)) [ FD ]
Line_2 $$ static String rewriteRule(String vcalText) -->Line_97 $$ if (null != count) [ CD ]
Line_13 $$ f = Frequency.YEARLY-->Line_22 $$ f = Frequency.DAILY[ FD ]
Line_8 $$ String nameAndParams = m.group(1), freq = m.group(2).toUpperCase(), interval = m.group(3), modifier = m.group(4).trim().toUpperCase(), count = m.group(5), until = m.group(6)-->Line_31 $$ if (!"".equals(modifier)) [ FD ]
Line_82 $$ pos = i + 1-->Line_65 $$ if (i > pos) [ FD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_87 $$ join(sb, ",", parts)[ FD ]
Line_102 $$ if (null != until) -->Line_104 $$ sb.append(";UNTIL=").append(until)[ CD ]
Line_8 $$ String nameAndParams = m.group(1), freq = m.group(2).toUpperCase(), interval = m.group(3), modifier = m.group(4).trim().toUpperCase(), count = m.group(5), until = m.group(6)-->Line_103 $$ until = until.toUpperCase()[ FD ]
Line_59 $$ if ('P' == freq.charAt(1)) -->Line_62 $$ sb.append(";BYDAY=")[ CD ]
Line_8 $$ String nameAndParams = m.group(1), freq = m.group(2).toUpperCase(), interval = m.group(3), modifier = m.group(4).trim().toUpperCase(), count = m.group(5), until = m.group(6)-->Line_9 $$ sb.append(nameAndParams)[ FD ]
Line_63 $$ for (int i = 0; i < parts.length; ++i) -->Line_82 $$ pos = i + 1[ FD ]
Line_64 $$ if (Character.isLetter(parts[i].charAt(0))) -->Line_82 $$ pos = i + 1[ CD ]
Line_19 $$ f = Frequency.WEEKLY-->Line_27 $$ sb.append("FREQ=").append(f.name())[ FD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_80 $$ sb.append(parts[i])[ FD ]
Line_34 $$ String p = parts[i]-->Line_35 $$ char lastchar = p.charAt(p.length() - 1)[ FD ]
Line_33 $$ for (int i = 0; i < parts.length; ++i) -->Line_82 $$ pos = i + 1[ FD ]
Line_31 $$ if (!"".equals(modifier)) -->Line_32 $$ String[] parts = WHITESPACE.split(modifier)[ CD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_72 $$ sb.append(parts[j]).append(parts[i])[ FD ]
Line_65 $$ if (i > pos) -->Line_75 $$ if (comma) [ CD ]
Line_50 $$ if ('D' == freq.charAt(1)) -->Line_51 $$ sb.append(";BYYEARDAY=")[ CD ]
Line_97 $$ if (null != count) -->Line_98 $$ if ("0".equals(count)) [ CD ]
Line_10 $$ Frequency f-->Line_27 $$ sb.append("FREQ=").append(f.name())[ FD ]
Line_3 $$ Matcher m = VCAL_RRULE.matcher(vcalText.trim())-->Line_4 $$ if (!m.matches()) [ FD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_52 $$ join(sb, ",", parts)[ FD ]
Line_32 $$ String[] parts = WHITESPACE.split(modifier)-->Line_52 $$ join(sb, ",", parts)[ FD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_54 $$ sb.append(";BYMONTH=")[ FD ]
Line_2 $$ static String rewriteRule(String vcalText) -->Line_31 $$ if (!"".equals(modifier)) [ CD ]
Line_60 $$ int pos = 0-->Line_65 $$ if (i > pos) [ FD ]
Line_8 $$ String nameAndParams = m.group(1), freq = m.group(2).toUpperCase(), interval = m.group(3), modifier = m.group(4).trim().toUpperCase(), count = m.group(5), until = m.group(6)-->Line_28 $$ if (!"".equals(interval) && !"1".equals(interval)) [ FD ]
Line_50 $$ if ('D' == freq.charAt(1)) -->Line_55 $$ join(sb, ",", parts)[ CD ]
Line_61 $$ boolean comma = false-->Line_70 $$ comma = true[ FD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_76 $$ sb.append(',')[ FD ]
Line_8 $$ String nameAndParams = m.group(1), freq = m.group(2).toUpperCase(), interval = m.group(3), modifier = m.group(4).trim().toUpperCase(), count = m.group(5), until = m.group(6)-->Line_98 $$ if ("0".equals(count)) [ FD ]
Line_75 $$ if (comma) -->Line_76 $$ sb.append(',')[ CD ]
Line_8 $$ String nameAndParams = m.group(1), freq = m.group(2).toUpperCase(), interval = m.group(3), modifier = m.group(4).trim().toUpperCase(), count = m.group(5), until = m.group(6)-->Line_29 $$ sb.append(";INTERVAL=").append(interval)[ FD ]
Line_4 $$ if (!m.matches()) -->Line_5 $$ return vcalText[ CD ]
Line_63 $$ for (int i = 0; i < parts.length; ++i) -->Line_66 $$ for (int j = pos; j < i; ++j) [ FD ]
Line_34 $$ String p = parts[i]-->Line_44 $$ if (p.equals("LD")) [ FD ]
Line_2 $$ static String rewriteRule(String vcalText) -->Line_3 $$ Matcher m = VCAL_RRULE.matcher(vcalText.trim())[ CD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_68 $$ sb.append(',')[ FD ]
Line_32 $$ String[] parts = WHITESPACE.split(modifier)-->Line_55 $$ join(sb, ",", parts)[ FD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_9 $$ sb.append(nameAndParams)[ FD ]
Line_13 $$ f = Frequency.YEARLY-->Line_16 $$ f = Frequency.MONTHLY[ FD ]
Line_33 $$ for (int i = 0; i < parts.length; ++i) -->Line_34 $$ String p = parts[i][ CD ]
Line_8 $$ String nameAndParams = m.group(1), freq = m.group(2).toUpperCase(), interval = m.group(3), modifier = m.group(4).trim().toUpperCase(), count = m.group(5), until = m.group(6)-->Line_97 $$ if (null != count) [ FD ]
Line_103 $$ until = until.toUpperCase()-->Line_104 $$ sb.append(";UNTIL=").append(until)[ FD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_29 $$ sb.append(";INTERVAL=").append(interval)[ FD ]
Line_33 $$ for (int i = 0; i < parts.length; ++i) -->Line_35 $$ char lastchar = p.charAt(p.length() - 1)[ CD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_109 $$ return sb.toString()[ FD ]
Line_32 $$ String[] parts = WHITESPACE.split(modifier)-->Line_87 $$ join(sb, ",", parts)[ FD ]
Line_16 $$ f = Frequency.MONTHLY-->Line_19 $$ f = Frequency.WEEKLY[ FD ]
Line_64 $$ if (Character.isLetter(parts[i].charAt(0))) -->Line_65 $$ if (i > pos) [ CD ]
Line_103 $$ until = until.toUpperCase()-->Line_105 $$ if (!until.endsWith("Z") && until.indexOf('T') >= 0) [ FD ]
Line_61 $$ boolean comma = false-->Line_78 $$ comma = true[ FD ]
Line_98 $$ if ("0".equals(count)) -->Line_100 $$ sb.append(";COUNT=").append(count)[ CD ]
Line_2 $$ static String rewriteRule(String vcalText) -->Line_28 $$ if (!"".equals(interval) && !"1".equals(interval)) [ CD ]
Line_70 $$ comma = true-->Line_78 $$ comma = true[ FD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_100 $$ sb.append(";COUNT=").append(count)[ FD ]
Line_8 $$ String nameAndParams = m.group(1), freq = m.group(2).toUpperCase(), interval = m.group(3), modifier = m.group(4).trim().toUpperCase(), count = m.group(5), until = m.group(6)-->Line_102 $$ if (null != until) [ FD ]
Line_67 $$ if (comma) -->Line_70 $$ comma = true[ CD ]
Line_35 $$ char lastchar = p.charAt(p.length() - 1)-->Line_41 $$ parts[i] = lastchar + p.substring(0, p.length() - 1)[ FD ]
Line_66 $$ for (int j = pos; j < i; ++j) -->Line_67 $$ if (comma) [ CD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_62 $$ sb.append(";BYDAY=")[ FD ]
Line_31 $$ if (!"".equals(modifier)) -->Line_33 $$ for (int i = 0; i < parts.length; ++i) [ CD ]
Line_16 $$ f = Frequency.MONTHLY-->Line_22 $$ f = Frequency.DAILY[ FD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_91 $$ sb.append(";BYDAY=")[ FD ]
Line_3 $$ Matcher m = VCAL_RRULE.matcher(vcalText.trim())-->Line_8 $$ String nameAndParams = m.group(1), freq = m.group(2).toUpperCase(), interval = m.group(3), modifier = m.group(4).trim().toUpperCase(), count = m.group(5), until = m.group(6)[ FD ]
Line_19 $$ f = Frequency.WEEKLY-->Line_22 $$ f = Frequency.DAILY[ FD ]
Line_33 $$ for (int i = 0; i < parts.length; ++i) -->Line_66 $$ for (int j = pos; j < i; ++j) [ FD ]
Line_2 $$ static String rewriteRule(String vcalText) -->Line_10 $$ Frequency f[ CD ]
Line_28 $$ if (!"".equals(interval) && !"1".equals(interval)) -->Line_29 $$ sb.append(";INTERVAL=").append(interval)[ CD ]
Line_22 $$ f = Frequency.DAILY-->Line_27 $$ sb.append("FREQ=").append(f.name())[ FD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_92 $$ join(sb, ",", parts)[ FD ]
Line_59 $$ if ('P' == freq.charAt(1)) -->Line_86 $$ sb.append(";BYMONTHDAY=")[ CD ]
Line_33 $$ for (int i = 0; i < parts.length; ++i) -->Line_63 $$ for (int i = 0; i < parts.length; ++i) [ FD ]
Line_2 $$ static String rewriteRule(String vcalText) -->Line_7 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_75 $$ if (comma) -->Line_78 $$ comma = true[ CD ]
Line_63 $$ for (int i = 0; i < parts.length; ++i) -->Line_65 $$ if (i > pos) [ FD ]
Line_34 $$ String p = parts[i]-->Line_38 $$ parts[i] = p.substring(0, p.length() - 1)[ FD ]
Line_13 $$ f = Frequency.YEARLY-->Line_19 $$ f = Frequency.WEEKLY[ FD ]
Line_63 $$ for (int i = 0; i < parts.length; ++i) -->Line_64 $$ if (Character.isLetter(parts[i].charAt(0))) [ CD ]
