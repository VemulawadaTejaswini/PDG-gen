Line_12 $$ if (trimmedLine.startsWith(StringPool.LESS_THAN) && trimmedLine.endsWith(StringPool.GREATER_THAN) && !trimmedLine.startsWith("<%") && !trimmedLine.startsWith("<!")) -->Line_14 $$ if (trimmedLine.startsWith("<![CDATA[") && !trimmedLine.endsWith("]]>")) [ CD ]
Line_8 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_11 $$ if (sortAttributes) [ CD ]
Line_7 $$ boolean sortAttributes = true-->Line_15 $$ sortAttributes = false[ FD ]
Line_2 $$ protected String sortPoshiAttributes(String fileName, String content) throws Exception -->Line_13 $$ line = sortAttributes(fileName, line, lineCount, false)[ FD ]
Line_2 $$ protected String sortPoshiAttributes(String fileName, String content) throws Exception -->Line_28 $$ return content[ CD ]
Line_15 $$ sortAttributes = false-->Line_18 $$ sortAttributes = true[ FD ]
Line_13 $$ line = sortAttributes(fileName, line, lineCount, false)-->Line_20 $$ sb.append(line)[ FD ]
Line_24 $$ content = sb.toString()-->Line_25 $$ if (content.endsWith("\n")) [ FD ]
Line_6 $$ int lineCount = 0-->Line_9 $$ lineCount++[ FD ]
Line_8 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_10 $$ String trimmedLine = StringUtil.trimLeading(line)[ FD ]
Line_8 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_13 $$ line = sortAttributes(fileName, line, lineCount, false)[ FD ]
Line_4 $$ try (UnsyncBufferedReader unsyncBufferedReader = new UnsyncBufferedReader(new UnsyncStringReader(content))) -->Line_8 $$ while ((line = unsyncBufferedReader.readLine()) != null) [ FD ]
Line_5 $$ String line = null-->Line_20 $$ sb.append(line)[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_24 $$ content = sb.toString()[ FD ]
Line_8 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_9 $$ lineCount++[ CD ]
Line_2 $$ protected String sortPoshiAttributes(String fileName, String content) throws Exception -->Line_24 $$ content = sb.toString()[ FD ]
Line_2 $$ protected String sortPoshiAttributes(String fileName, String content) throws Exception -->Line_26 $$ content = content.substring(0, content.length() - 1)[ FD ]
Line_11 $$ if (sortAttributes) -->Line_17 $$ if (trimmedLine.endsWith("]]>")) [ CD ]
Line_8 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_21 $$ sb.append("\n")[ CD ]
Line_2 $$ protected String sortPoshiAttributes(String fileName, String content) throws Exception -->Line_3 $$ StringBundler sb = new StringBundler()[ CD ]
Line_6 $$ int lineCount = 0-->Line_13 $$ line = sortAttributes(fileName, line, lineCount, false)[ FD ]
Line_5 $$ String line = null-->Line_13 $$ line = sortAttributes(fileName, line, lineCount, false)[ FD ]
Line_10 $$ String trimmedLine = StringUtil.trimLeading(line)-->Line_14 $$ if (trimmedLine.startsWith("<![CDATA[") && !trimmedLine.endsWith("]]>")) [ FD ]
Line_10 $$ String trimmedLine = StringUtil.trimLeading(line)-->Line_17 $$ if (trimmedLine.endsWith("]]>")) [ FD ]
Line_13 $$ line = sortAttributes(fileName, line, lineCount, false)-->Line_10 $$ String trimmedLine = StringUtil.trimLeading(line)[ FD ]
Line_25 $$ if (content.endsWith("\n")) -->Line_26 $$ content = content.substring(0, content.length() - 1)[ CD ]
Line_8 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_20 $$ sb.append(line)[ CD ]
Line_2 $$ protected String sortPoshiAttributes(String fileName, String content) throws Exception -->Line_25 $$ if (content.endsWith("\n")) [ FD ]
Line_5 $$ String line = null-->Line_8 $$ while ((line = unsyncBufferedReader.readLine()) != null) [ FD ]
Line_7 $$ boolean sortAttributes = true-->Line_18 $$ sortAttributes = true[ FD ]
Line_17 $$ if (trimmedLine.endsWith("]]>")) -->Line_18 $$ sortAttributes = true[ CD ]
Line_11 $$ if (sortAttributes) -->Line_12 $$ if (trimmedLine.startsWith(StringPool.LESS_THAN) && trimmedLine.endsWith(StringPool.GREATER_THAN) && !trimmedLine.startsWith("<%") && !trimmedLine.startsWith("<!")) [ CD ]
Line_8 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_10 $$ String trimmedLine = StringUtil.trimLeading(line)[ CD ]
Line_12 $$ if (trimmedLine.startsWith(StringPool.LESS_THAN) && trimmedLine.endsWith(StringPool.GREATER_THAN) && !trimmedLine.startsWith("<%") && !trimmedLine.startsWith("<!")) -->Line_13 $$ line = sortAttributes(fileName, line, lineCount, false)[ CD ]
Line_2 $$ protected String sortPoshiAttributes(String fileName, String content) throws Exception -->Line_25 $$ if (content.endsWith("\n")) [ CD ]
Line_5 $$ String line = null-->Line_10 $$ String trimmedLine = StringUtil.trimLeading(line)[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_21 $$ sb.append("\n")[ FD ]
Line_10 $$ String trimmedLine = StringUtil.trimLeading(line)-->Line_12 $$ if (trimmedLine.startsWith(StringPool.LESS_THAN) && trimmedLine.endsWith(StringPool.GREATER_THAN) && !trimmedLine.startsWith("<%") && !trimmedLine.startsWith("<!")) [ FD ]
Line_2 $$ protected String sortPoshiAttributes(String fileName, String content) throws Exception -->Line_24 $$ content = sb.toString()[ CD ]
Line_8 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_20 $$ sb.append(line)[ FD ]
Line_3 $$ StringBundler sb = new StringBundler()-->Line_20 $$ sb.append(line)[ FD ]
Line_24 $$ content = sb.toString()-->Line_26 $$ content = content.substring(0, content.length() - 1)[ FD ]
Line_14 $$ if (trimmedLine.startsWith("<![CDATA[") && !trimmedLine.endsWith("]]>")) -->Line_15 $$ sortAttributes = false[ CD ]
