Line_2 $$ private static int getTrimmedTextLength(ASTNode first, final ASTNode last) -->Line_6 $$ first = first.getTreeNext()[ FD ]
Line_4 $$ while (first != last.getTreeNext()) -->Line_5 $$ buffer.append(first.getText())[ CD ]
Line_6 $$ first = first.getTreeNext()-->Line_4 $$ while (first != last.getTreeNext()) [ FD ]
Line_3 $$ final StringBuilder buffer = new StringBuilder()-->Line_8 $$ return buffer.toString().trim().length()[ FD ]
Line_6 $$ first = first.getTreeNext()-->Line_5 $$ buffer.append(first.getText())[ FD ]
Line_2 $$ private static int getTrimmedTextLength(ASTNode first, final ASTNode last) -->Line_4 $$ while (first != last.getTreeNext()) [ FD ]
Line_2 $$ private static int getTrimmedTextLength(ASTNode first, final ASTNode last) -->Line_8 $$ return buffer.toString().trim().length()[ CD ]
Line_2 $$ private static int getTrimmedTextLength(ASTNode first, final ASTNode last) -->Line_5 $$ buffer.append(first.getText())[ FD ]
Line_2 $$ private static int getTrimmedTextLength(ASTNode first, final ASTNode last) -->Line_3 $$ final StringBuilder buffer = new StringBuilder()[ CD ]
Line_2 $$ private static int getTrimmedTextLength(ASTNode first, final ASTNode last) -->Line_4 $$ while (first != last.getTreeNext()) [ CD ]
Line_4 $$ while (first != last.getTreeNext()) -->Line_6 $$ first = first.getTreeNext()[ CD ]
Line_3 $$ final StringBuilder buffer = new StringBuilder()-->Line_5 $$ buffer.append(first.getText())[ FD ]
