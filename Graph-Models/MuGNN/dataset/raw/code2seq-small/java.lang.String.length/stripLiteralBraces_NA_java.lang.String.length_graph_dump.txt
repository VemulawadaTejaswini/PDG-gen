Line_16 $$ if (PyTokenTypes.CLOSE_BRACES.contains(lastChild.getNode().getElementType())) -->Line_19 $$ contentEndOffset = replacedText.length()[ CD ]
Line_8 $$ final int contentStartOffset-->Line_12 $$ contentStartOffset = 0[ FD ]
Line_2 $$ private static String stripLiteralBraces(@NotNull PsiElement literal) -->Line_14 $$ final PsiElement lastChild = literal.getLastChild()[ FD ]
Line_2 $$ private static String stripLiteralBraces(@NotNull PsiElement literal) -->Line_8 $$ final int contentStartOffset[ CD ]
Line_19 $$ contentEndOffset = replacedText.length()-->Line_21 $$ return literal.getText().substring(contentStartOffset, contentEndOffset)[ FD ]
Line_2 $$ private static String stripLiteralBraces(@NotNull PsiElement literal) -->Line_4 $$ return literal.getText()[ FD ]
Line_6 $$ final PsiElement firstChild = literal.getFirstChild()-->Line_10 $$ contentStartOffset = firstChild.getTextLength()[ FD ]
Line_15 $$ final int contentEndOffset-->Line_17 $$ contentEndOffset = replacedText.length() - lastChild.getTextLength()[ FD ]
Line_10 $$ contentStartOffset = firstChild.getTextLength()-->Line_12 $$ contentStartOffset = 0[ FD ]
Line_12 $$ contentStartOffset = 0-->Line_21 $$ return literal.getText().substring(contentStartOffset, contentEndOffset)[ FD ]
Line_2 $$ private static String stripLiteralBraces(@NotNull PsiElement literal) -->Line_3 $$ if (literal instanceof PyTupleExpression) [ CD ]
Line_9 $$ if (PyTokenTypes.OPEN_BRACES.contains(firstChild.getNode().getElementType())) -->Line_12 $$ contentStartOffset = 0[ CD ]
Line_2 $$ private static String stripLiteralBraces(@NotNull PsiElement literal) -->Line_21 $$ return literal.getText().substring(contentStartOffset, contentEndOffset)[ FD ]
Line_2 $$ private static String stripLiteralBraces(@NotNull PsiElement literal) -->Line_7 $$ final String replacedText = literal.getText()[ CD ]
Line_15 $$ final int contentEndOffset-->Line_21 $$ return literal.getText().substring(contentStartOffset, contentEndOffset)[ FD ]
Line_14 $$ final PsiElement lastChild = literal.getLastChild()-->Line_16 $$ if (PyTokenTypes.CLOSE_BRACES.contains(lastChild.getNode().getElementType())) [ FD ]
Line_2 $$ private static String stripLiteralBraces(@NotNull PsiElement literal) -->Line_14 $$ final PsiElement lastChild = literal.getLastChild()[ CD ]
Line_2 $$ private static String stripLiteralBraces(@NotNull PsiElement literal) -->Line_21 $$ return literal.getText().substring(contentStartOffset, contentEndOffset)[ CD ]
Line_10 $$ contentStartOffset = firstChild.getTextLength()-->Line_21 $$ return literal.getText().substring(contentStartOffset, contentEndOffset)[ FD ]
Line_9 $$ if (PyTokenTypes.OPEN_BRACES.contains(firstChild.getNode().getElementType())) -->Line_10 $$ contentStartOffset = firstChild.getTextLength()[ CD ]
Line_2 $$ private static String stripLiteralBraces(@NotNull PsiElement literal) -->Line_15 $$ final int contentEndOffset[ CD ]
Line_16 $$ if (PyTokenTypes.CLOSE_BRACES.contains(lastChild.getNode().getElementType())) -->Line_17 $$ contentEndOffset = replacedText.length() - lastChild.getTextLength()[ CD ]
Line_2 $$ private static String stripLiteralBraces(@NotNull PsiElement literal) -->Line_3 $$ if (literal instanceof PyTupleExpression) [ FD ]
Line_2 $$ private static String stripLiteralBraces(@NotNull PsiElement literal) -->Line_9 $$ if (PyTokenTypes.OPEN_BRACES.contains(firstChild.getNode().getElementType())) [ CD ]
Line_2 $$ private static String stripLiteralBraces(@NotNull PsiElement literal) -->Line_6 $$ final PsiElement firstChild = literal.getFirstChild()[ FD ]
Line_15 $$ final int contentEndOffset-->Line_19 $$ contentEndOffset = replacedText.length()[ FD ]
Line_6 $$ final PsiElement firstChild = literal.getFirstChild()-->Line_9 $$ if (PyTokenTypes.OPEN_BRACES.contains(firstChild.getNode().getElementType())) [ FD ]
Line_17 $$ contentEndOffset = replacedText.length() - lastChild.getTextLength()-->Line_21 $$ return literal.getText().substring(contentStartOffset, contentEndOffset)[ FD ]
Line_2 $$ private static String stripLiteralBraces(@NotNull PsiElement literal) -->Line_16 $$ if (PyTokenTypes.CLOSE_BRACES.contains(lastChild.getNode().getElementType())) [ CD ]
Line_8 $$ final int contentStartOffset-->Line_21 $$ return literal.getText().substring(contentStartOffset, contentEndOffset)[ FD ]
Line_7 $$ final String replacedText = literal.getText()-->Line_19 $$ contentEndOffset = replacedText.length()[ FD ]
Line_8 $$ final int contentStartOffset-->Line_10 $$ contentStartOffset = firstChild.getTextLength()[ FD ]
Line_2 $$ private static String stripLiteralBraces(@NotNull PsiElement literal) -->Line_6 $$ final PsiElement firstChild = literal.getFirstChild()[ CD ]
Line_7 $$ final String replacedText = literal.getText()-->Line_17 $$ contentEndOffset = replacedText.length() - lastChild.getTextLength()[ FD ]
Line_2 $$ private static String stripLiteralBraces(@NotNull PsiElement literal) -->Line_7 $$ final String replacedText = literal.getText()[ FD ]
Line_3 $$ if (literal instanceof PyTupleExpression) -->Line_4 $$ return literal.getText()[ CD ]
Line_17 $$ contentEndOffset = replacedText.length() - lastChild.getTextLength()-->Line_19 $$ contentEndOffset = replacedText.length()[ FD ]
Line_14 $$ final PsiElement lastChild = literal.getLastChild()-->Line_17 $$ contentEndOffset = replacedText.length() - lastChild.getTextLength()[ FD ]
