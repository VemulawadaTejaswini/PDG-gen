Line_6 $$ if (node != null && node.isDirectory() && node.asDirectory().isSnapshottable()) -->Line_7 $$ return node[ CD ]
Line_2 $$ private INode getINode4DotSnapshot(String src) throws UnresolvedLinkException -->Line_4 $$ final String dirPath = normalizePath(src.substring(0, src.length() - HdfsConstants.DOT_SNAPSHOT_DIR.length()))[ FD ]
Line_2 $$ private INode getINode4DotSnapshot(String src) throws UnresolvedLinkException -->Line_6 $$ if (node != null && node.isDirectory() && node.asDirectory().isSnapshottable()) [ CD ]
Line_5 $$ final INode node = this.getINode(dirPath)-->Line_6 $$ if (node != null && node.isDirectory() && node.asDirectory().isSnapshottable()) [ FD ]
Line_2 $$ private INode getINode4DotSnapshot(String src) throws UnresolvedLinkException -->Line_9 $$ return null[ CD ]
Line_2 $$ private INode getINode4DotSnapshot(String src) throws UnresolvedLinkException -->Line_3 $$ Preconditions.checkArgument(src.endsWith(HdfsConstants.SEPARATOR_DOT_SNAPSHOT_DIR), "%s does not end with %s", src, HdfsConstants.SEPARATOR_DOT_SNAPSHOT_DIR)[ CD ]
Line_2 $$ private INode getINode4DotSnapshot(String src) throws UnresolvedLinkException -->Line_3 $$ Preconditions.checkArgument(src.endsWith(HdfsConstants.SEPARATOR_DOT_SNAPSHOT_DIR), "%s does not end with %s", src, HdfsConstants.SEPARATOR_DOT_SNAPSHOT_DIR)[ FD ]
Line_4 $$ final String dirPath = normalizePath(src.substring(0, src.length() - HdfsConstants.DOT_SNAPSHOT_DIR.length()))-->Line_5 $$ final INode node = this.getINode(dirPath)[ FD ]
Line_2 $$ private INode getINode4DotSnapshot(String src) throws UnresolvedLinkException -->Line_4 $$ final String dirPath = normalizePath(src.substring(0, src.length() - HdfsConstants.DOT_SNAPSHOT_DIR.length()))[ CD ]
Line_2 $$ private INode getINode4DotSnapshot(String src) throws UnresolvedLinkException -->Line_5 $$ final INode node = this.getINode(dirPath)[ CD ]
