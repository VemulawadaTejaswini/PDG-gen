Line_2 $$ public static DirectoryObject getCommonDirectory(AbstractFileObject abstractFileObject1, AbstractFileObject abstractFileObject2) -->Line_9 $$ for (int i = 1; i < length; i++) [ CD ]
Line_11 $$ final char chr2 = parentPath2.charAt(i)-->Line_12 $$ if (chr1 != chr2) [ FD ]
Line_3 $$ final String parentPath1 = getDirectory(abstractFileObject1).getPath()-->Line_5 $$ final int parentPathLength1 = parentPath1.length()[ FD ]
Line_5 $$ final int parentPathLength1 = parentPath1.length()-->Line_19 $$ if (parentPathLength1 == parentPathLength2) [ FD ]
Line_2 $$ public static DirectoryObject getCommonDirectory(AbstractFileObject abstractFileObject1, AbstractFileObject abstractFileObject2) -->Line_3 $$ final String parentPath1 = getDirectory(abstractFileObject1).getPath()[ FD ]
Line_4 $$ final String parentPath2 = getDirectory(abstractFileObject2).getPath()-->Line_6 $$ final int parentPathLength2 = parentPath2.length()[ FD ]
Line_2 $$ public static DirectoryObject getCommonDirectory(AbstractFileObject abstractFileObject1, AbstractFileObject abstractFileObject2) -->Line_8 $$ int lastSlashIndex = 1[ CD ]
Line_9 $$ for (int i = 1; i < length; i++) -->Line_12 $$ if (chr1 != chr2) [ CD ]
Line_22 $$ if (parentPathLength1 > parentPathLength2) -->Line_23 $$ if (parentPath1.charAt(parentPathLength2) == '/') [ CD ]
Line_8 $$ int lastSlashIndex = 1-->Line_26 $$ return DirectoryObject.createInstance(parentPath1.substring(0, lastSlashIndex))[ FD ]
Line_16 $$ lastSlashIndex = i-->Line_13 $$ return DirectoryObject.createInstance(parentPath1.substring(0, lastSlashIndex))[ FD ]
Line_2 $$ public static DirectoryObject getCommonDirectory(AbstractFileObject abstractFileObject1, AbstractFileObject abstractFileObject2) -->Line_4 $$ final String parentPath2 = getDirectory(abstractFileObject2).getPath()[ FD ]
Line_16 $$ lastSlashIndex = i-->Line_31 $$ return DirectoryObject.createInstance(parentPath1.substring(0, lastSlashIndex))[ FD ]
Line_2 $$ public static DirectoryObject getCommonDirectory(AbstractFileObject abstractFileObject1, AbstractFileObject abstractFileObject2) -->Line_19 $$ if (parentPathLength1 == parentPathLength2) [ CD ]
Line_8 $$ int lastSlashIndex = 1-->Line_16 $$ lastSlashIndex = i[ FD ]
Line_22 $$ if (parentPathLength1 > parentPathLength2) -->Line_26 $$ return DirectoryObject.createInstance(parentPath1.substring(0, lastSlashIndex))[ CD ]
Line_9 $$ for (int i = 1; i < length; i++) -->Line_15 $$ if (chr1 == '/') [ CD ]
Line_4 $$ final String parentPath2 = getDirectory(abstractFileObject2).getPath()-->Line_11 $$ final char chr2 = parentPath2.charAt(i)[ FD ]
Line_7 $$ final int length = Math.min(parentPathLength1, parentPathLength2)-->Line_9 $$ for (int i = 1; i < length; i++) [ FD ]
Line_22 $$ if (parentPathLength1 > parentPathLength2) -->Line_31 $$ return DirectoryObject.createInstance(parentPath1.substring(0, lastSlashIndex))[ CD ]
Line_4 $$ final String parentPath2 = getDirectory(abstractFileObject2).getPath()-->Line_28 $$ if (parentPath2.charAt(parentPathLength1) == '/') [ FD ]
Line_28 $$ if (parentPath2.charAt(parentPathLength1) == '/') -->Line_29 $$ return DirectoryObject.createInstance(parentPath1)[ CD ]
Line_9 $$ for (int i = 1; i < length; i++) -->Line_10 $$ final char chr1 = parentPath1.charAt(i)[ FD ]
Line_16 $$ lastSlashIndex = i-->Line_26 $$ return DirectoryObject.createInstance(parentPath1.substring(0, lastSlashIndex))[ FD ]
Line_5 $$ final int parentPathLength1 = parentPath1.length()-->Line_28 $$ if (parentPath2.charAt(parentPathLength1) == '/') [ FD ]
Line_9 $$ for (int i = 1; i < length; i++) -->Line_16 $$ lastSlashIndex = i[ FD ]
Line_5 $$ final int parentPathLength1 = parentPath1.length()-->Line_22 $$ if (parentPathLength1 > parentPathLength2) [ FD ]
Line_23 $$ if (parentPath1.charAt(parentPathLength2) == '/') -->Line_24 $$ return DirectoryObject.createInstance(parentPath2)[ CD ]
Line_2 $$ public static DirectoryObject getCommonDirectory(AbstractFileObject abstractFileObject1, AbstractFileObject abstractFileObject2) -->Line_7 $$ final int length = Math.min(parentPathLength1, parentPathLength2)[ CD ]
Line_15 $$ if (chr1 == '/') -->Line_16 $$ lastSlashIndex = i[ CD ]
Line_4 $$ final String parentPath2 = getDirectory(abstractFileObject2).getPath()-->Line_24 $$ return DirectoryObject.createInstance(parentPath2)[ FD ]
Line_6 $$ final int parentPathLength2 = parentPath2.length()-->Line_7 $$ final int length = Math.min(parentPathLength1, parentPathLength2)[ FD ]
Line_8 $$ int lastSlashIndex = 1-->Line_31 $$ return DirectoryObject.createInstance(parentPath1.substring(0, lastSlashIndex))[ FD ]
Line_19 $$ if (parentPathLength1 == parentPathLength2) -->Line_20 $$ return DirectoryObject.createInstance(parentPath1)[ CD ]
Line_8 $$ int lastSlashIndex = 1-->Line_13 $$ return DirectoryObject.createInstance(parentPath1.substring(0, lastSlashIndex))[ FD ]
Line_9 $$ for (int i = 1; i < length; i++) -->Line_10 $$ final char chr1 = parentPath1.charAt(i)[ CD ]
Line_3 $$ final String parentPath1 = getDirectory(abstractFileObject1).getPath()-->Line_31 $$ return DirectoryObject.createInstance(parentPath1.substring(0, lastSlashIndex))[ FD ]
Line_9 $$ for (int i = 1; i < length; i++) -->Line_11 $$ final char chr2 = parentPath2.charAt(i)[ FD ]
Line_3 $$ final String parentPath1 = getDirectory(abstractFileObject1).getPath()-->Line_20 $$ return DirectoryObject.createInstance(parentPath1)[ FD ]
Line_3 $$ final String parentPath1 = getDirectory(abstractFileObject1).getPath()-->Line_26 $$ return DirectoryObject.createInstance(parentPath1.substring(0, lastSlashIndex))[ FD ]
Line_9 $$ for (int i = 1; i < length; i++) -->Line_11 $$ final char chr2 = parentPath2.charAt(i)[ CD ]
Line_6 $$ final int parentPathLength2 = parentPath2.length()-->Line_22 $$ if (parentPathLength1 > parentPathLength2) [ FD ]
Line_22 $$ if (parentPathLength1 > parentPathLength2) -->Line_28 $$ if (parentPath2.charAt(parentPathLength1) == '/') [ CD ]
Line_10 $$ final char chr1 = parentPath1.charAt(i)-->Line_12 $$ if (chr1 != chr2) [ FD ]
Line_10 $$ final char chr1 = parentPath1.charAt(i)-->Line_15 $$ if (chr1 == '/') [ FD ]
Line_2 $$ public static DirectoryObject getCommonDirectory(AbstractFileObject abstractFileObject1, AbstractFileObject abstractFileObject2) -->Line_3 $$ final String parentPath1 = getDirectory(abstractFileObject1).getPath()[ CD ]
Line_3 $$ final String parentPath1 = getDirectory(abstractFileObject1).getPath()-->Line_10 $$ final char chr1 = parentPath1.charAt(i)[ FD ]
Line_2 $$ public static DirectoryObject getCommonDirectory(AbstractFileObject abstractFileObject1, AbstractFileObject abstractFileObject2) -->Line_4 $$ final String parentPath2 = getDirectory(abstractFileObject2).getPath()[ CD ]
Line_2 $$ public static DirectoryObject getCommonDirectory(AbstractFileObject abstractFileObject1, AbstractFileObject abstractFileObject2) -->Line_5 $$ final int parentPathLength1 = parentPath1.length()[ CD ]
Line_12 $$ if (chr1 != chr2) -->Line_13 $$ return DirectoryObject.createInstance(parentPath1.substring(0, lastSlashIndex))[ CD ]
Line_3 $$ final String parentPath1 = getDirectory(abstractFileObject1).getPath()-->Line_13 $$ return DirectoryObject.createInstance(parentPath1.substring(0, lastSlashIndex))[ FD ]
Line_3 $$ final String parentPath1 = getDirectory(abstractFileObject1).getPath()-->Line_23 $$ if (parentPath1.charAt(parentPathLength2) == '/') [ FD ]
Line_6 $$ final int parentPathLength2 = parentPath2.length()-->Line_19 $$ if (parentPathLength1 == parentPathLength2) [ FD ]
Line_6 $$ final int parentPathLength2 = parentPath2.length()-->Line_23 $$ if (parentPath1.charAt(parentPathLength2) == '/') [ FD ]
Line_2 $$ public static DirectoryObject getCommonDirectory(AbstractFileObject abstractFileObject1, AbstractFileObject abstractFileObject2) -->Line_6 $$ final int parentPathLength2 = parentPath2.length()[ CD ]
Line_2 $$ public static DirectoryObject getCommonDirectory(AbstractFileObject abstractFileObject1, AbstractFileObject abstractFileObject2) -->Line_22 $$ if (parentPathLength1 > parentPathLength2) [ CD ]
Line_5 $$ final int parentPathLength1 = parentPath1.length()-->Line_7 $$ final int length = Math.min(parentPathLength1, parentPathLength2)[ FD ]
Line_3 $$ final String parentPath1 = getDirectory(abstractFileObject1).getPath()-->Line_29 $$ return DirectoryObject.createInstance(parentPath1)[ FD ]
