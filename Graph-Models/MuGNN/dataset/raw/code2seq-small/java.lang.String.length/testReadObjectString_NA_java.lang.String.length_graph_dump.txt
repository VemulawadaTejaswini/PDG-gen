Line_21 $$ for (int i = 0; i < nonAsciiString.length(); i++) -->Line_22 $$ BigEndianCodec.putChar(buffer, 6 + i * 2, nonAsciiString.charAt(i))[ CD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_12 $$ Deserializer deserializer = new Deserializer(byteBuffer)[ CD ]
Line_4 $$ byte[] buffer = new byte[asciiString.length() + 6]-->Line_11 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(buffer)[ FD ]
Line_13 $$ Object object = deserializer.readObject()-->Line_26 $$ object = deserializer.readObject()[ FD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_27 $$ Assert.assertTrue(object instanceof String)[ CD ]
Line_16 $$ String nonAsciiString = "非ASCII Code中文测试"-->Line_17 $$ buffer = new byte[nonAsciiString.length() * 2 + 6][ FD ]
Line_12 $$ Deserializer deserializer = new Deserializer(byteBuffer)-->Line_13 $$ Object object = deserializer.readObject()[ FD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_20 $$ BigEndianCodec.putInt(buffer, 2, nonAsciiString.length())[ CD ]
Line_17 $$ buffer = new byte[nonAsciiString.length() * 2 + 6]-->Line_24 $$ byteBuffer = ByteBuffer.wrap(buffer)[ FD ]
Line_4 $$ byte[] buffer = new byte[asciiString.length() + 6]-->Line_7 $$ BigEndianCodec.putInt(buffer, 2, asciiString.length())[ FD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_28 $$ Assert.assertEquals(nonAsciiString, object)[ CD ]
Line_26 $$ object = deserializer.readObject()-->Line_28 $$ Assert.assertEquals(nonAsciiString, object)[ FD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_15 $$ Assert.assertEquals(asciiString, object)[ CD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_5 $$ buffer[0] = SerializationConstants.TC_STRING[ CD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_7 $$ BigEndianCodec.putInt(buffer, 2, asciiString.length())[ CD ]
Line_4 $$ byte[] buffer = new byte[asciiString.length() + 6]-->Line_24 $$ byteBuffer = ByteBuffer.wrap(buffer)[ FD ]
Line_17 $$ buffer = new byte[nonAsciiString.length() * 2 + 6]-->Line_20 $$ BigEndianCodec.putInt(buffer, 2, nonAsciiString.length())[ FD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_13 $$ Object object = deserializer.readObject()[ CD ]
Line_3 $$ String asciiString = "abcdefghijklmn"-->Line_8 $$ for (int i = 0; i < asciiString.length(); i++) [ FD ]
Line_3 $$ String asciiString = "abcdefghijklmn"-->Line_4 $$ byte[] buffer = new byte[asciiString.length() + 6][ FD ]
Line_3 $$ String asciiString = "abcdefghijklmn"-->Line_7 $$ BigEndianCodec.putInt(buffer, 2, asciiString.length())[ FD ]
Line_16 $$ String nonAsciiString = "非ASCII Code中文测试"-->Line_28 $$ Assert.assertEquals(nonAsciiString, object)[ FD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_21 $$ for (int i = 0; i < nonAsciiString.length(); i++) [ CD ]
Line_21 $$ for (int i = 0; i < nonAsciiString.length(); i++) -->Line_22 $$ BigEndianCodec.putChar(buffer, 6 + i * 2, nonAsciiString.charAt(i))[ FD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_11 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(buffer)[ CD ]
Line_8 $$ for (int i = 0; i < asciiString.length(); i++) -->Line_9 $$ buffer[6 + i] = (byte) asciiString.charAt(i)[ FD ]
Line_13 $$ Object object = deserializer.readObject()-->Line_28 $$ Assert.assertEquals(nonAsciiString, object)[ FD ]
Line_4 $$ byte[] buffer = new byte[asciiString.length() + 6]-->Line_17 $$ buffer = new byte[nonAsciiString.length() * 2 + 6][ FD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_14 $$ Assert.assertTrue(object instanceof String)[ CD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_6 $$ buffer[1] = 1[ CD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_24 $$ byteBuffer = ByteBuffer.wrap(buffer)[ CD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_4 $$ byte[] buffer = new byte[asciiString.length() + 6][ CD ]
Line_13 $$ Object object = deserializer.readObject()-->Line_15 $$ Assert.assertEquals(asciiString, object)[ FD ]
Line_4 $$ byte[] buffer = new byte[asciiString.length() + 6]-->Line_20 $$ BigEndianCodec.putInt(buffer, 2, nonAsciiString.length())[ FD ]
Line_3 $$ String asciiString = "abcdefghijklmn"-->Line_15 $$ Assert.assertEquals(asciiString, object)[ FD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_18 $$ buffer[0] = SerializationConstants.TC_STRING[ CD ]
Line_16 $$ String nonAsciiString = "非ASCII Code中文测试"-->Line_21 $$ for (int i = 0; i < nonAsciiString.length(); i++) [ FD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_16 $$ String nonAsciiString = "非ASCII Code中文测试"[ CD ]
Line_25 $$ deserializer = new Deserializer(byteBuffer)-->Line_26 $$ object = deserializer.readObject()[ FD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_25 $$ deserializer = new Deserializer(byteBuffer)[ CD ]
Line_12 $$ Deserializer deserializer = new Deserializer(byteBuffer)-->Line_25 $$ deserializer = new Deserializer(byteBuffer)[ FD ]
Line_3 $$ String asciiString = "abcdefghijklmn"-->Line_9 $$ buffer[6 + i] = (byte) asciiString.charAt(i)[ FD ]
Line_16 $$ String nonAsciiString = "非ASCII Code中文测试"-->Line_22 $$ BigEndianCodec.putChar(buffer, 6 + i * 2, nonAsciiString.charAt(i))[ FD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_26 $$ object = deserializer.readObject()[ CD ]
Line_11 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(buffer)-->Line_24 $$ byteBuffer = ByteBuffer.wrap(buffer)[ FD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_8 $$ for (int i = 0; i < asciiString.length(); i++) [ CD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_17 $$ buffer = new byte[nonAsciiString.length() * 2 + 6][ CD ]
Line_4 $$ byte[] buffer = new byte[asciiString.length() + 6]-->Line_22 $$ BigEndianCodec.putChar(buffer, 6 + i * 2, nonAsciiString.charAt(i))[ FD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_3 $$ String asciiString = "abcdefghijklmn"[ CD ]
Line_2 $$ public void testReadObjectString() throws ClassNotFoundException -->Line_19 $$ buffer[1] = 0[ CD ]
Line_17 $$ buffer = new byte[nonAsciiString.length() * 2 + 6]-->Line_22 $$ BigEndianCodec.putChar(buffer, 6 + i * 2, nonAsciiString.charAt(i))[ FD ]
Line_8 $$ for (int i = 0; i < asciiString.length(); i++) -->Line_21 $$ for (int i = 0; i < nonAsciiString.length(); i++) [ FD ]
Line_16 $$ String nonAsciiString = "非ASCII Code中文测试"-->Line_20 $$ BigEndianCodec.putInt(buffer, 2, nonAsciiString.length())[ FD ]
Line_8 $$ for (int i = 0; i < asciiString.length(); i++) -->Line_9 $$ buffer[6 + i] = (byte) asciiString.charAt(i)[ CD ]
Line_8 $$ for (int i = 0; i < asciiString.length(); i++) -->Line_22 $$ BigEndianCodec.putChar(buffer, 6 + i * 2, nonAsciiString.charAt(i))[ FD ]
Line_12 $$ Deserializer deserializer = new Deserializer(byteBuffer)-->Line_26 $$ object = deserializer.readObject()[ FD ]
