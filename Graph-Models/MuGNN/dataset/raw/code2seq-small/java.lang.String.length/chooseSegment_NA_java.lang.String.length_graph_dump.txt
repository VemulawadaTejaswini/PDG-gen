Line_2 $$ private static String chooseSegment(String ns) -->Line_9 $$ off = ns.length()[ FD ]
Line_18 $$ off = i-->Line_15 $$ String segment = ns.substring(i + 1, off).toLowerCase()[ FD ]
Line_5 $$ String segment = ns.substring(off + 1).toLowerCase()-->Line_6 $$ if (isValidPrefix(segment))[ FD ]
Line_2 $$ private static String chooseSegment(String ns) -->Line_11 $$ for (; ; ) [ CD ]
Line_3 $$ int off = ns.indexOf('#')-->Line_9 $$ off = ns.length()[ FD ]
Line_3 $$ int off = ns.indexOf('#')-->Line_15 $$ String segment = ns.substring(i + 1, off).toLowerCase()[ FD ]
Line_18 $$ off = i-->Line_21 $$ if (off >= 0) [ FD ]
Line_9 $$ off = ns.length()-->Line_20 $$ off = ns.indexOf(':')[ FD ]
Line_2 $$ private static String chooseSegment(String ns) -->Line_13 $$ if (i < 0 || (i > 0 && ns.charAt(i - 1) == '/'))[ FD ]
Line_4 $$ if (off >= 0) -->Line_6 $$ if (isValidPrefix(segment))[ CD ]
Line_23 $$ if (segmentOk(segment))-->Line_24 $$ return segment[ CD ]
Line_9 $$ off = ns.length()-->Line_18 $$ off = i[ FD ]
Line_12 $$ int i = ns.lastIndexOf('/', off - 1)-->Line_18 $$ off = i[ FD ]
Line_16 $$ if (segmentOk(segment))-->Line_17 $$ return segment[ CD ]
Line_2 $$ private static String chooseSegment(String ns) -->Line_4 $$ if (off >= 0) [ CD ]
Line_2 $$ private static String chooseSegment(String ns) -->Line_20 $$ off = ns.indexOf(':')[ CD ]
Line_18 $$ off = i-->Line_20 $$ off = ns.indexOf(':')[ FD ]
Line_2 $$ private static String chooseSegment(String ns) -->Line_5 $$ String segment = ns.substring(off + 1).toLowerCase()[ FD ]
Line_2 $$ private static String chooseSegment(String ns) -->Line_12 $$ int i = ns.lastIndexOf('/', off - 1)[ FD ]
Line_3 $$ int off = ns.indexOf('#')-->Line_4 $$ if (off >= 0) [ FD ]
Line_5 $$ String segment = ns.substring(off + 1).toLowerCase()-->Line_16 $$ if (segmentOk(segment))[ FD ]
Line_2 $$ private static String chooseSegment(String ns) -->Line_26 $$ return null[ CD ]
Line_3 $$ int off = ns.indexOf('#')-->Line_18 $$ off = i[ FD ]
Line_2 $$ private static String chooseSegment(String ns) -->Line_22 $$ String segment = ns.substring(off + 1).toLowerCase()[ FD ]
Line_2 $$ private static String chooseSegment(String ns) -->Line_3 $$ int off = ns.indexOf('#')[ CD ]
Line_4 $$ if (off >= 0) -->Line_5 $$ String segment = ns.substring(off + 1).toLowerCase()[ CD ]
Line_11 $$ for (; ; ) -->Line_18 $$ off = i[ CD ]
Line_11 $$ for (; ; ) -->Line_12 $$ int i = ns.lastIndexOf('/', off - 1)[ CD ]
Line_2 $$ private static String chooseSegment(String ns) -->Line_21 $$ if (off >= 0) [ CD ]
Line_15 $$ String segment = ns.substring(i + 1, off).toLowerCase()-->Line_23 $$ if (segmentOk(segment))[ FD ]
Line_4 $$ if (off >= 0) -->Line_9 $$ off = ns.length()[ CD ]
Line_9 $$ off = ns.length()-->Line_15 $$ String segment = ns.substring(i + 1, off).toLowerCase()[ FD ]
Line_15 $$ String segment = ns.substring(i + 1, off).toLowerCase()-->Line_16 $$ if (segmentOk(segment))[ FD ]
Line_21 $$ if (off >= 0) -->Line_22 $$ String segment = ns.substring(off + 1).toLowerCase()[ CD ]
Line_21 $$ if (off >= 0) -->Line_23 $$ if (segmentOk(segment))[ CD ]
Line_9 $$ off = ns.length()-->Line_21 $$ if (off >= 0) [ FD ]
Line_5 $$ String segment = ns.substring(off + 1).toLowerCase()-->Line_23 $$ if (segmentOk(segment))[ FD ]
Line_20 $$ off = ns.indexOf(':')-->Line_21 $$ if (off >= 0) [ FD ]
Line_2 $$ private static String chooseSegment(String ns) -->Line_15 $$ String segment = ns.substring(i + 1, off).toLowerCase()[ FD ]
Line_3 $$ int off = ns.indexOf('#')-->Line_20 $$ off = ns.indexOf(':')[ FD ]
Line_6 $$ if (isValidPrefix(segment))-->Line_7 $$ return segment[ CD ]
Line_3 $$ int off = ns.indexOf('#')-->Line_21 $$ if (off >= 0) [ FD ]
Line_2 $$ private static String chooseSegment(String ns) -->Line_3 $$ int off = ns.indexOf('#')[ FD ]
Line_2 $$ private static String chooseSegment(String ns) -->Line_20 $$ off = ns.indexOf(':')[ FD ]
Line_11 $$ for (; ; ) -->Line_15 $$ String segment = ns.substring(i + 1, off).toLowerCase()[ CD ]
Line_11 $$ for (; ; ) -->Line_13 $$ if (i < 0 || (i > 0 && ns.charAt(i - 1) == '/'))[ CD ]
Line_11 $$ for (; ; ) -->Line_16 $$ if (segmentOk(segment))[ CD ]
