Line_44 $$ if (word.length() > 0) -->Line_46 $$ buf.append(StructuralSearchUtil.shieldSpecialChars(word))[ CD ]
Line_49 $$ if (hasLiteralContent) -->Line_54 $$ buf.append("$")[ CD ]
Line_21 $$ if (handlers == null)-->Line_22 $$ handlers = new ArrayList<SubstitutionHandler>()[ CD ]
Line_20 $$ while (matcher.find()) -->Line_23 $$ handler = (SubstitutionHandler) getContext().getPattern().getHandler(matcher.group(1))[ CD ]
Line_20 $$ while (matcher.find()) -->Line_38 $$ if (isSuitablePredicate(predicate, handler)) [ CD ]
Line_20 $$ while (matcher.find()) -->Line_33 $$ if (predicate == null || !predicate.isWholeWords()) [ CD ]
Line_4 $$ String content-->Line_43 $$ word = content.substring(start, content.length())[ FD ]
Line_33 $$ if (predicate == null || !predicate.isWholeWords()) -->Line_34 $$ buf.append("(.*?)")[ CD ]
Line_27 $$ if (word.length() > 0) -->Line_29 $$ hasLiteralContent = true[ CD ]
Line_14 $$ Matcher matcher = substitutionPattern.matcher(content)-->Line_23 $$ handler = (SubstitutionHandler) getContext().getPattern().getHandler(matcher.group(1))[ FD ]
Line_6 $$ content = pattern.substring(1, pattern.length() - 1)-->Line_8 $$ content = pattern[ FD ]
Line_38 $$ if (isSuitablePredicate(predicate, handler)) -->Line_39 $$ processTokenizedName(predicate.getRegExp(), false, kind)[ CD ]
Line_15 $$ List<SubstitutionHandler> handlers = null-->Line_25 $$ handlers.add(handler)[ FD ]
Line_4 $$ String content-->Line_14 $$ Matcher matcher = substitutionPattern.matcher(content)[ FD ]
Line_44 $$ if (word.length() > 0) -->Line_45 $$ hasLiteralContent = true[ CD ]
Line_24 $$ if (handler != null)-->Line_25 $$ handlers.add(handler)[ CD ]
Line_27 $$ if (word.length() > 0) -->Line_28 $$ buf.append(StructuralSearchUtil.shieldSpecialChars(word))[ CD ]
Line_6 $$ content = pattern.substring(1, pattern.length() - 1)-->Line_43 $$ word = content.substring(start, content.length())[ FD ]
Line_6 $$ content = pattern.substring(1, pattern.length() - 1)-->Line_14 $$ Matcher matcher = substitutionPattern.matcher(content)[ FD ]
Line_23 $$ handler = (SubstitutionHandler) getContext().getPattern().getHandler(matcher.group(1))-->Line_24 $$ if (handler != null)[ FD ]
Line_17 $$ String word-->Line_46 $$ buf.append(StructuralSearchUtil.shieldSpecialChars(word))[ FD ]
Line_8 $$ content = pattern-->Line_43 $$ word = content.substring(start, content.length())[ FD ]
Line_29 $$ hasLiteralContent = true-->Line_45 $$ hasLiteralContent = true[ FD ]
Line_33 $$ if (predicate == null || !predicate.isWholeWords()) -->Line_36 $$ buf.append(".*?\\b(").append(predicate.getRegExp()).append(")\\b.*?")[ CD ]
Line_15 $$ List<SubstitutionHandler> handlers = null-->Line_22 $$ handlers = new ArrayList<SubstitutionHandler>()[ FD ]
Line_50 $$ if (kind == OccurenceKind.LITERAL) -->Line_52 $$ buf.append("[\"']")[ CD ]
Line_4 $$ String content-->Line_6 $$ content = pattern.substring(1, pattern.length() - 1)[ FD ]
Line_26 $$ word = content.substring(start, matcher.start())-->Line_27 $$ if (word.length() > 0) [ FD ]
Line_20 $$ while (matcher.find()) -->Line_27 $$ if (word.length() > 0) [ CD ]
Line_56 $$ if (handlers != null) -->Line_57 $$ return hasLiteralContent ? new LiteralWithSubstitutionHandler(buf.toString(), handlers) : handler[ CD ]
Line_27 $$ if (word.length() > 0) -->Line_30 $$ processTokenizedName(word, false, kind)[ CD ]
Line_26 $$ word = content.substring(start, matcher.start())-->Line_44 $$ if (word.length() > 0) [ FD ]
Line_20 $$ while (matcher.find()) -->Line_32 $$ RegExpPredicate predicate = MatchingHandler.getSimpleRegExpPredicate(handler)[ CD ]
Line_43 $$ word = content.substring(start, content.length())-->Line_46 $$ buf.append(StructuralSearchUtil.shieldSpecialChars(word))[ FD ]
Line_18 $$ boolean hasLiteralContent = false-->Line_45 $$ hasLiteralContent = true[ FD ]
Line_23 $$ handler = (SubstitutionHandler) getContext().getPattern().getHandler(matcher.group(1))-->Line_38 $$ if (isSuitablePredicate(predicate, handler)) [ FD ]
Line_20 $$ while (matcher.find()) -->Line_41 $$ start = matcher.end()[ CD ]
Line_50 $$ if (kind == OccurenceKind.LITERAL) -->Line_51 $$ buf.insert(0, "[\"']")[ CD ]
Line_17 $$ String word-->Line_30 $$ processTokenizedName(word, false, kind)[ FD ]
Line_17 $$ String word-->Line_27 $$ if (word.length() > 0) [ FD ]
Line_32 $$ RegExpPredicate predicate = MatchingHandler.getSimpleRegExpPredicate(handler)-->Line_38 $$ if (isSuitablePredicate(predicate, handler)) [ FD ]
Line_26 $$ word = content.substring(start, matcher.start())-->Line_30 $$ processTokenizedName(word, false, kind)[ FD ]
Line_8 $$ content = pattern-->Line_26 $$ word = content.substring(start, matcher.start())[ FD ]
Line_32 $$ RegExpPredicate predicate = MatchingHandler.getSimpleRegExpPredicate(handler)-->Line_33 $$ if (predicate == null || !predicate.isWholeWords()) [ FD ]
Line_44 $$ if (word.length() > 0) -->Line_47 $$ processTokenizedName(word, false, kind)[ CD ]
Line_32 $$ RegExpPredicate predicate = MatchingHandler.getSimpleRegExpPredicate(handler)-->Line_39 $$ processTokenizedName(predicate.getRegExp(), false, kind)[ FD ]
Line_4 $$ String content-->Line_8 $$ content = pattern[ FD ]
Line_49 $$ if (hasLiteralContent) -->Line_50 $$ if (kind == OccurenceKind.LITERAL) [ CD ]
Line_16 $$ int start = 0-->Line_43 $$ word = content.substring(start, content.length())[ FD ]
Line_32 $$ RegExpPredicate predicate = MatchingHandler.getSimpleRegExpPredicate(handler)-->Line_36 $$ buf.append(".*?\\b(").append(predicate.getRegExp()).append(")\\b.*?")[ FD ]
Line_5 $$ if (kind == OccurenceKind.LITERAL) -->Line_6 $$ content = pattern.substring(1, pattern.length() - 1)[ CD ]
Line_17 $$ String word-->Line_47 $$ processTokenizedName(word, false, kind)[ FD ]
Line_15 $$ List<SubstitutionHandler> handlers = null-->Line_21 $$ if (handlers == null)[ FD ]
Line_20 $$ while (matcher.find()) -->Line_21 $$ if (handlers == null)[ CD ]
Line_8 $$ content = pattern-->Line_14 $$ Matcher matcher = substitutionPattern.matcher(content)[ FD ]
Line_26 $$ word = content.substring(start, matcher.start())-->Line_46 $$ buf.append(StructuralSearchUtil.shieldSpecialChars(word))[ FD ]
Line_16 $$ int start = 0-->Line_26 $$ word = content.substring(start, matcher.start())[ FD ]
Line_23 $$ handler = (SubstitutionHandler) getContext().getPattern().getHandler(matcher.group(1))-->Line_32 $$ RegExpPredicate predicate = MatchingHandler.getSimpleRegExpPredicate(handler)[ FD ]
Line_22 $$ handlers = new ArrayList<SubstitutionHandler>()-->Line_56 $$ if (handlers != null) [ FD ]
Line_19 $$ SubstitutionHandler handler = null-->Line_24 $$ if (handler != null)[ FD ]
Line_16 $$ int start = 0-->Line_41 $$ start = matcher.end()[ FD ]
Line_22 $$ handlers = new ArrayList<SubstitutionHandler>()-->Line_25 $$ handlers.add(handler)[ FD ]
Line_20 $$ while (matcher.find()) -->Line_26 $$ word = content.substring(start, matcher.start())[ CD ]
Line_43 $$ word = content.substring(start, content.length())-->Line_47 $$ processTokenizedName(word, false, kind)[ FD ]
Line_17 $$ String word-->Line_28 $$ buf.append(StructuralSearchUtil.shieldSpecialChars(word))[ FD ]
Line_19 $$ SubstitutionHandler handler = null-->Line_23 $$ handler = (SubstitutionHandler) getContext().getPattern().getHandler(matcher.group(1))[ FD ]
Line_19 $$ SubstitutionHandler handler = null-->Line_32 $$ RegExpPredicate predicate = MatchingHandler.getSimpleRegExpPredicate(handler)[ FD ]
Line_26 $$ word = content.substring(start, matcher.start())-->Line_43 $$ word = content.substring(start, content.length())[ FD ]
Line_7 $$ if (kind == OccurenceKind.COMMENT) -->Line_8 $$ content = pattern[ CD ]
Line_22 $$ handlers = new ArrayList<SubstitutionHandler>()-->Line_21 $$ if (handlers == null)[ FD ]
Line_5 $$ if (kind == OccurenceKind.LITERAL) -->Line_7 $$ if (kind == OccurenceKind.COMMENT) [ CD ]
Line_17 $$ String word-->Line_43 $$ word = content.substring(start, content.length())[ FD ]
Line_7 $$ if (kind == OccurenceKind.COMMENT) -->Line_10 $$ return null[ CD ]
Line_19 $$ SubstitutionHandler handler = null-->Line_25 $$ handlers.add(handler)[ FD ]
Line_14 $$ Matcher matcher = substitutionPattern.matcher(content)-->Line_26 $$ word = content.substring(start, matcher.start())[ FD ]
Line_17 $$ String word-->Line_26 $$ word = content.substring(start, matcher.start())[ FD ]
Line_19 $$ SubstitutionHandler handler = null-->Line_38 $$ if (isSuitablePredicate(predicate, handler)) [ FD ]
Line_23 $$ handler = (SubstitutionHandler) getContext().getPattern().getHandler(matcher.group(1))-->Line_25 $$ handlers.add(handler)[ FD ]
Line_14 $$ Matcher matcher = substitutionPattern.matcher(content)-->Line_20 $$ while (matcher.find()) [ FD ]
Line_18 $$ boolean hasLiteralContent = false-->Line_29 $$ hasLiteralContent = true[ FD ]
Line_20 $$ while (matcher.find()) -->Line_24 $$ if (handler != null)[ CD ]
Line_26 $$ word = content.substring(start, matcher.start())-->Line_47 $$ processTokenizedName(word, false, kind)[ FD ]
Line_26 $$ word = content.substring(start, matcher.start())-->Line_28 $$ buf.append(StructuralSearchUtil.shieldSpecialChars(word))[ FD ]
Line_4 $$ String content-->Line_26 $$ word = content.substring(start, matcher.start())[ FD ]
Line_41 $$ start = matcher.end()-->Line_43 $$ word = content.substring(start, content.length())[ FD ]
Line_43 $$ word = content.substring(start, content.length())-->Line_44 $$ if (word.length() > 0) [ FD ]
Line_41 $$ start = matcher.end()-->Line_26 $$ word = content.substring(start, matcher.start())[ FD ]
Line_14 $$ Matcher matcher = substitutionPattern.matcher(content)-->Line_41 $$ start = matcher.end()[ FD ]
Line_6 $$ content = pattern.substring(1, pattern.length() - 1)-->Line_26 $$ word = content.substring(start, matcher.start())[ FD ]
Line_15 $$ List<SubstitutionHandler> handlers = null-->Line_56 $$ if (handlers != null) [ FD ]
Line_17 $$ String word-->Line_44 $$ if (word.length() > 0) [ FD ]
