Line_16 $$ if (isMatch(method.getName(), mappedName)) -->Line_17 $$ matchingMethods.add(method)[ CD ]
Line_35 $$ if (logger.isDebugEnabled()) -->Line_36 $$ logger.debug("Keeping attribute for transactional method [" + method + "]: current name '" + name + "' is not more specific than '" + regMethodName + "'")[ CD ]
Line_15 $$ for (Method method : methods) -->Line_17 $$ matchingMethods.add(method)[ FD ]
Line_26 $$ if (regMethodName == null || (!regMethodName.equals(name) && regMethodName.length() <= name.length())) -->Line_33 $$ addTransactionalMethod(method, attr)[ CD ]
Line_15 $$ for (Method method : methods) -->Line_33 $$ addTransactionalMethod(method, attr)[ FD ]
Line_25 $$ String regMethodName = this.methodNameMap.get(method)-->Line_26 $$ if (regMethodName == null || (!regMethodName.equals(name) && regMethodName.length() <= name.length())) [ FD ]
Line_15 $$ for (Method method : methods) -->Line_16 $$ if (isMatch(method.getName(), mappedName)) [ FD ]
Line_15 $$ for (Method method : methods) -->Line_25 $$ String regMethodName = this.methodNameMap.get(method)[ FD ]
Line_14 $$ List<Method> matchingMethods = new ArrayList<Method>()-->Line_20 $$ if (matchingMethods.isEmpty()) [ FD ]
Line_26 $$ if (regMethodName == null || (!regMethodName.equals(name) && regMethodName.length() <= name.length())) -->Line_32 $$ this.methodNameMap.put(method, name)[ CD ]
Line_14 $$ List<Method> matchingMethods = new ArrayList<Method>()-->Line_17 $$ matchingMethods.add(method)[ FD ]
Line_15 $$ for (Method method : methods) -->Line_32 $$ this.methodNameMap.put(method, name)[ FD ]
Line_12 $$ String name = clazz.getName() + '.' + mappedName-->Line_32 $$ this.methodNameMap.put(method, name)[ FD ]
Line_12 $$ String name = clazz.getName() + '.' + mappedName-->Line_26 $$ if (regMethodName == null || (!regMethodName.equals(name) && regMethodName.length() <= name.length())) [ FD ]
Line_26 $$ if (regMethodName == null || (!regMethodName.equals(name) && regMethodName.length() <= name.length())) -->Line_35 $$ if (logger.isDebugEnabled()) [ CD ]
