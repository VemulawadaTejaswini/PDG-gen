Line_4 $$ if (parent != null) -->Line_9 $$ if (StringUtil.stripQuotesAroundValue(beg).trim().length() == 0 && prefix == null)[ CD ]
Line_4 $$ if (parent != null) -->Line_8 $$ String beg = allText.substring(parentRange.getStartOffset(), rangeMarker.getStartOffset())[ CD ]
Line_2 $$ private static PsiElement createReplacement(final String refText, final Project project, final String prefix, final String suffix, final PsiElement parent, final RangeMarker rangeMarker, int[] refIdx) -->Line_5 $$ final String allText = parent.getContainingFile().getText()[ FD ]
Line_2 $$ private static PsiElement createReplacement(final String refText, final Project project, final String prefix, final String suffix, final PsiElement parent, final RangeMarker rangeMarker, int[] refIdx) -->Line_8 $$ String beg = allText.substring(parentRange.getStartOffset(), rangeMarker.getStartOffset())[ FD ]
Line_2 $$ private static PsiElement createReplacement(final String refText, final Project project, final String prefix, final String suffix, final PsiElement parent, final RangeMarker rangeMarker, int[] refIdx) -->Line_7 $$ LOG.assertTrue(parentRange.getStartOffset() <= rangeMarker.getStartOffset(), parent + "; prefix:" + prefix + "; suffix:" + suffix)[ FD ]
Line_2 $$ private static PsiElement createReplacement(final String refText, final Project project, final String prefix, final String suffix, final PsiElement parent, final RangeMarker rangeMarker, int[] refIdx) -->Line_4 $$ if (parent != null) [ FD ]
Line_5 $$ final String allText = parent.getContainingFile().getText()-->Line_8 $$ String beg = allText.substring(parentRange.getStartOffset(), rangeMarker.getStartOffset())[ FD ]
Line_4 $$ if (parent != null) -->Line_11 $$ LOG.assertTrue(rangeMarker.getEndOffset() <= parentRange.getEndOffset(), parent + "; prefix:" + prefix + "; suffix:" + suffix)[ CD ]
Line_2 $$ private static PsiElement createReplacement(final String refText, final Project project, final String prefix, final String suffix, final PsiElement parent, final RangeMarker rangeMarker, int[] refIdx) -->Line_11 $$ LOG.assertTrue(rangeMarker.getEndOffset() <= parentRange.getEndOffset(), parent + "; prefix:" + prefix + "; suffix:" + suffix)[ FD ]
Line_3 $$ String text = refText-->Line_17 $$ text = start + refText + (suffix != null ? suffix : "") + end[ FD ]
Line_2 $$ private static PsiElement createReplacement(final String refText, final Project project, final String prefix, final String suffix, final PsiElement parent, final RangeMarker rangeMarker, int[] refIdx) -->Line_20 $$ return parent instanceof PsiStatement ? factory.createStatementFromText(text, parent) : parent instanceof PsiCodeBlock ? factory.createCodeBlockFromText(text, parent) : factory.createExpressionFromText(text, parent)[ CD ]
Line_6 $$ final TextRange parentRange = parent.getTextRange()-->Line_7 $$ LOG.assertTrue(parentRange.getStartOffset() <= rangeMarker.getStartOffset(), parent + "; prefix:" + prefix + "; suffix:" + suffix)[ FD ]
Line_2 $$ private static PsiElement createReplacement(final String refText, final Project project, final String prefix, final String suffix, final PsiElement parent, final RangeMarker rangeMarker, int[] refIdx) -->Line_4 $$ if (parent != null) [ CD ]
Line_19 $$ final PsiElementFactory factory = JavaPsiFacade.getInstance(project).getElementFactory()-->Line_20 $$ return parent instanceof PsiStatement ? factory.createStatementFromText(text, parent) : parent instanceof PsiCodeBlock ? factory.createCodeBlockFromText(text, parent) : factory.createExpressionFromText(text, parent)[ FD ]
Line_4 $$ if (parent != null) -->Line_12 $$ String end = allText.substring(rangeMarker.getEndOffset(), parentRange.getEndOffset())[ CD ]
Line_2 $$ private static PsiElement createReplacement(final String refText, final Project project, final String prefix, final String suffix, final PsiElement parent, final RangeMarker rangeMarker, int[] refIdx) -->Line_20 $$ return parent instanceof PsiStatement ? factory.createStatementFromText(text, parent) : parent instanceof PsiCodeBlock ? factory.createCodeBlockFromText(text, parent) : factory.createExpressionFromText(text, parent)[ FD ]
Line_6 $$ final TextRange parentRange = parent.getTextRange()-->Line_11 $$ LOG.assertTrue(rangeMarker.getEndOffset() <= parentRange.getEndOffset(), parent + "; prefix:" + prefix + "; suffix:" + suffix)[ FD ]
Line_2 $$ private static PsiElement createReplacement(final String refText, final Project project, final String prefix, final String suffix, final PsiElement parent, final RangeMarker rangeMarker, int[] refIdx) -->Line_6 $$ final TextRange parentRange = parent.getTextRange()[ FD ]
Line_4 $$ if (parent != null) -->Line_17 $$ text = start + refText + (suffix != null ? suffix : "") + end[ CD ]
Line_14 $$ end = ""-->Line_17 $$ text = start + refText + (suffix != null ? suffix : "") + end[ FD ]
Line_9 $$ if (StringUtil.stripQuotesAroundValue(beg).trim().length() == 0 && prefix == null)-->Line_10 $$ beg = ""[ CD ]
Line_12 $$ String end = allText.substring(rangeMarker.getEndOffset(), parentRange.getEndOffset())-->Line_13 $$ if (StringUtil.stripQuotesAroundValue(end).trim().length() == 0 && suffix == null)[ FD ]
Line_4 $$ if (parent != null) -->Line_5 $$ final String allText = parent.getContainingFile().getText()[ CD ]
Line_3 $$ String text = refText-->Line_20 $$ return parent instanceof PsiStatement ? factory.createStatementFromText(text, parent) : parent instanceof PsiCodeBlock ? factory.createCodeBlockFromText(text, parent) : factory.createExpressionFromText(text, parent)[ FD ]
Line_13 $$ if (StringUtil.stripQuotesAroundValue(end).trim().length() == 0 && suffix == null)-->Line_14 $$ end = ""[ CD ]
Line_4 $$ if (parent != null) -->Line_16 $$ refIdx[0] = start.length()[ CD ]
Line_4 $$ if (parent != null) -->Line_13 $$ if (StringUtil.stripQuotesAroundValue(end).trim().length() == 0 && suffix == null)[ CD ]
Line_5 $$ final String allText = parent.getContainingFile().getText()-->Line_12 $$ String end = allText.substring(rangeMarker.getEndOffset(), parentRange.getEndOffset())[ FD ]
Line_8 $$ String beg = allText.substring(parentRange.getStartOffset(), rangeMarker.getStartOffset())-->Line_9 $$ if (StringUtil.stripQuotesAroundValue(beg).trim().length() == 0 && prefix == null)[ FD ]
Line_4 $$ if (parent != null) -->Line_15 $$ final String start = beg + (prefix != null ? prefix : "")[ CD ]
Line_4 $$ if (parent != null) -->Line_7 $$ LOG.assertTrue(parentRange.getStartOffset() <= rangeMarker.getStartOffset(), parent + "; prefix:" + prefix + "; suffix:" + suffix)[ CD ]
Line_12 $$ String end = allText.substring(rangeMarker.getEndOffset(), parentRange.getEndOffset())-->Line_17 $$ text = start + refText + (suffix != null ? suffix : "") + end[ FD ]
Line_6 $$ final TextRange parentRange = parent.getTextRange()-->Line_12 $$ String end = allText.substring(rangeMarker.getEndOffset(), parentRange.getEndOffset())[ FD ]
Line_17 $$ text = start + refText + (suffix != null ? suffix : "") + end-->Line_20 $$ return parent instanceof PsiStatement ? factory.createStatementFromText(text, parent) : parent instanceof PsiCodeBlock ? factory.createCodeBlockFromText(text, parent) : factory.createExpressionFromText(text, parent)[ FD ]
Line_15 $$ final String start = beg + (prefix != null ? prefix : "")-->Line_16 $$ refIdx[0] = start.length()[ FD ]
Line_8 $$ String beg = allText.substring(parentRange.getStartOffset(), rangeMarker.getStartOffset())-->Line_10 $$ beg = ""[ FD ]
Line_2 $$ private static PsiElement createReplacement(final String refText, final Project project, final String prefix, final String suffix, final PsiElement parent, final RangeMarker rangeMarker, int[] refIdx) -->Line_12 $$ String end = allText.substring(rangeMarker.getEndOffset(), parentRange.getEndOffset())[ FD ]
Line_12 $$ String end = allText.substring(rangeMarker.getEndOffset(), parentRange.getEndOffset())-->Line_14 $$ end = ""[ FD ]
Line_6 $$ final TextRange parentRange = parent.getTextRange()-->Line_8 $$ String beg = allText.substring(parentRange.getStartOffset(), rangeMarker.getStartOffset())[ FD ]
Line_2 $$ private static PsiElement createReplacement(final String refText, final Project project, final String prefix, final String suffix, final PsiElement parent, final RangeMarker rangeMarker, int[] refIdx) -->Line_3 $$ String text = refText[ CD ]
Line_4 $$ if (parent != null) -->Line_6 $$ final TextRange parentRange = parent.getTextRange()[ CD ]
Line_2 $$ private static PsiElement createReplacement(final String refText, final Project project, final String prefix, final String suffix, final PsiElement parent, final RangeMarker rangeMarker, int[] refIdx) -->Line_19 $$ final PsiElementFactory factory = JavaPsiFacade.getInstance(project).getElementFactory()[ FD ]
Line_2 $$ private static PsiElement createReplacement(final String refText, final Project project, final String prefix, final String suffix, final PsiElement parent, final RangeMarker rangeMarker, int[] refIdx) -->Line_19 $$ final PsiElementFactory factory = JavaPsiFacade.getInstance(project).getElementFactory()[ CD ]
