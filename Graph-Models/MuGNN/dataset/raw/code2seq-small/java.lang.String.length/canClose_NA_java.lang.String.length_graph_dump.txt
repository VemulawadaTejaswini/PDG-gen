Line_15 $$ final String newName = inputString + virtualFile.getNameWithoutExtension().substring(baseName.length()) + "." + virtualFile.getExtension()-->Line_20 $$ renameProcessor.addElement(propertiesFile.getContainingFile(), newName)[ FD ]
Line_5 $$ if (!FileModificationService.getInstance().prepareFileForWrite(propertiesFile.getContainingFile()))-->Line_6 $$ return false[ CD ]
Line_8 $$ RenameProcessor renameProcessor = null-->Line_27 $$ renameProcessor.doRun()[ FD ]
Line_17 $$ renameProcessor = new RenameProcessor(myProject, propertiesFile.getContainingFile(), newName, false, false)-->Line_26 $$ renameProcessor.setCommandName(PropertiesBundle.message("rename.resource.bundle.dialog.title"))[ FD ]
Line_17 $$ renameProcessor = new RenameProcessor(myProject, propertiesFile.getContainingFile(), newName, false, false)-->Line_22 $$ if (renameProcessor == null) [ FD ]
Line_9 $$ final String baseName = myResourceBundle.getBaseName()-->Line_15 $$ final String newName = inputString + virtualFile.getNameWithoutExtension().substring(baseName.length()) + "." + virtualFile.getExtension()[ FD ]
Line_2 $$ public boolean canClose(final String inputString) -->Line_9 $$ final String baseName = myResourceBundle.getBaseName()[ CD ]
Line_22 $$ if (renameProcessor == null) -->Line_23 $$ LOG.assertTrue(false)[ CD ]
Line_4 $$ for (PropertiesFile propertiesFile : propertiesFiles) -->Line_5 $$ if (!FileModificationService.getInstance().prepareFileForWrite(propertiesFile.getContainingFile()))[ FD ]
Line_2 $$ public boolean canClose(final String inputString) -->Line_27 $$ renameProcessor.doRun()[ CD ]
Line_4 $$ for (PropertiesFile propertiesFile : propertiesFiles) -->Line_11 $$ final VirtualFile virtualFile = propertiesFile.getVirtualFile()[ FD ]
Line_8 $$ RenameProcessor renameProcessor = null-->Line_16 $$ if (renameProcessor == null) [ FD ]
Line_16 $$ if (renameProcessor == null) -->Line_17 $$ renameProcessor = new RenameProcessor(myProject, propertiesFile.getContainingFile(), newName, false, false)[ CD ]
Line_17 $$ renameProcessor = new RenameProcessor(myProject, propertiesFile.getContainingFile(), newName, false, false)-->Line_27 $$ renameProcessor.doRun()[ FD ]
Line_11 $$ final VirtualFile virtualFile = propertiesFile.getVirtualFile()-->Line_12 $$ if (virtualFile == null) [ FD ]
Line_2 $$ public boolean canClose(final String inputString) -->Line_8 $$ RenameProcessor renameProcessor = null[ CD ]
Line_2 $$ public boolean canClose(final String inputString) -->Line_26 $$ renameProcessor.setCommandName(PropertiesBundle.message("rename.resource.bundle.dialog.title"))[ CD ]
Line_8 $$ RenameProcessor renameProcessor = null-->Line_26 $$ renameProcessor.setCommandName(PropertiesBundle.message("rename.resource.bundle.dialog.title"))[ FD ]
Line_11 $$ final VirtualFile virtualFile = propertiesFile.getVirtualFile()-->Line_15 $$ final String newName = inputString + virtualFile.getNameWithoutExtension().substring(baseName.length()) + "." + virtualFile.getExtension()[ FD ]
Line_8 $$ RenameProcessor renameProcessor = null-->Line_17 $$ renameProcessor = new RenameProcessor(myProject, propertiesFile.getContainingFile(), newName, false, false)[ FD ]
Line_4 $$ for (PropertiesFile propertiesFile : propertiesFiles) -->Line_17 $$ renameProcessor = new RenameProcessor(myProject, propertiesFile.getContainingFile(), newName, false, false)[ FD ]
Line_2 $$ public boolean canClose(final String inputString) -->Line_3 $$ final List<PropertiesFile> propertiesFiles = myResourceBundle.getPropertiesFiles()[ CD ]
Line_22 $$ if (renameProcessor == null) -->Line_24 $$ return true[ CD ]
Line_4 $$ for (PropertiesFile propertiesFile : propertiesFiles) -->Line_20 $$ renameProcessor.addElement(propertiesFile.getContainingFile(), newName)[ FD ]
Line_8 $$ RenameProcessor renameProcessor = null-->Line_22 $$ if (renameProcessor == null) [ FD ]
Line_8 $$ RenameProcessor renameProcessor = null-->Line_20 $$ renameProcessor.addElement(propertiesFile.getContainingFile(), newName)[ FD ]
Line_2 $$ public boolean canClose(final String inputString) -->Line_28 $$ return true[ CD ]
Line_17 $$ renameProcessor = new RenameProcessor(myProject, propertiesFile.getContainingFile(), newName, false, false)-->Line_20 $$ renameProcessor.addElement(propertiesFile.getContainingFile(), newName)[ FD ]
Line_2 $$ public boolean canClose(final String inputString) -->Line_22 $$ if (renameProcessor == null) [ CD ]
