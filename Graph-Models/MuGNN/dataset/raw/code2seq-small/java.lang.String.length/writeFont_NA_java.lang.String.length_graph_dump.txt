Line_32 $$ Array<Glyph> glyphs = new Array<Glyph>(256)-->Line_63 $$ Glyph second = glyphs.get(j)[ FD ]
Line_61 $$ for (int j = 0; j < glyphs.size; j++) -->Line_63 $$ Glyph second = glyphs.get(j)[ CD ]
Line_14 $$ if (xml) -->Line_15 $$ buf.append("<font>\n")[ CD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_78 $$ if (charset != null && charset.length() == 0)[ CD ]
Line_43 $$ int padLeft = 0, padRight = 0, padTop = 0, padX = 0, padY = 0-->Line_46 $$ padLeft = info.padding.left[ FD ]
Line_77 $$ String charset = info.charset-->Line_80 $$ outFntFile.writeString(buf.toString(), false, charset)[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_33 $$ for (int i = 0; i < fontData.glyphs.length; i++) [ CD ]
Line_27 $$ for (int i = 0; i < pageRefs.length; i++) -->Line_33 $$ for (int i = 0; i < fontData.glyphs.length; i++) [ FD ]
Line_64 $$ int kern = first.getKerning((char) second.id)-->Line_65 $$ if (kern != 0) [ FD ]
Line_17 $$ String xmlOpen = xml ? "\t<" : ""-->Line_28 $$ buf.append(xmlTab).append(xmlOpen).append("page id=").append(quote(i)).append(" file=\"").append(pageRefs[i]).append("\"").append(xmlCloseSelf).append("\n")[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_20 $$ String xmlClose = xml ? ">" : ""[ CD ]
Line_13 $$ StringBuilder buf = new StringBuilder()-->Line_23 $$ buf.append(xmlOpen).append("info face=\"").append(info.face == null ? "" : info.face.replaceAll("\"", "'")).append("\" size=").append(quote(info.size)).append(" bold=").append(quote(info.bold ? 1 : 0)).append(" italic=").append(quote(info.italic ? 1 : 0)).append(" charset=\"").append(info.charset == null ? "" : info.charset).append("\" unicode=").append(quote(info.unicode ? 1 : 0)).append(" stretchH=").append(quote(info.stretchH)).append(" smooth=").append(quote(info.smooth ? 1 : 0)).append(" aa=").append(quote(info.aa)).append(" padding=").append(xmlQuote).append(info.padding.up).append(",").append(info.padding.down).append(",").append(info.padding.left).append(",").append(info.padding.right).append(xmlQuote).append(" spacing=").append(xmlQuote).append(info.spacing.horizontal).append(",").append(info.spacing.vertical).append(xmlQuote).append(xmlCloseSelf).append("\n")[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_9 $$ int packed = 0[ CD ]
Line_51 $$ for (int i = 0; i < glyphs.size; i++) -->Line_53 $$ boolean empty = g.width == 0 || g.height == 0[ CD ]
Line_20 $$ String xmlClose = xml ? ">" : ""-->Line_71 $$ buf.append(xmlOpen).append("kernings count=").append(quote(kernCount)).append(xmlClose).append("\n")[ FD ]
Line_13 $$ StringBuilder buf = new StringBuilder()-->Line_24 $$ buf.append(xmlOpen).append("common lineHeight=").append(quote(lineHeight)).append(" base=").append(quote(base)).append(" scaleW=").append(quote(scaleW)).append(" scaleH=").append(quote(scaleH)).append(" pages=").append(quote(pages)).append(" packed=").append(quote(packed)).append(alphaChnlParams).append(xmlCloseSelf).append("\n")[ FD ]
Line_44 $$ if (info != null) -->Line_47 $$ padRight = info.padding.right[ CD ]
Line_43 $$ int padLeft = 0, padRight = 0, padTop = 0, padX = 0, padY = 0-->Line_49 $$ padY = info.padding.up + info.padding.down[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_5 $$ info.face = outFntFile.nameWithoutExtension()[ FD ]
Line_20 $$ String xmlClose = xml ? ">" : ""-->Line_42 $$ buf.append(xmlOpen).append("chars count=").append(quote(glyphs.size)).append(xmlClose).append("\n")[ FD ]
Line_36 $$ for (int j = 0; j < fontData.glyphs[i].length; j++) -->Line_63 $$ Glyph second = glyphs.get(j)[ FD ]
Line_61 $$ for (int j = 0; j < glyphs.size; j++) -->Line_65 $$ if (kern != 0) [ CD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_22 $$ String alphaChnlParams = xml ? " alphaChnl=\"0\" redChnl=\"0\" greenChnl=\"0\" blueChnl=\"0\"" : " alphaChnl=0 redChnl=0 greenChnl=0 blueChnl=0"[ CD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_4 $$ info = new FontInfo()[ FD ]
Line_77 $$ String charset = info.charset-->Line_78 $$ if (charset != null && charset.length() == 0)[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_14 $$ if (xml) [ CD ]
Line_60 $$ for (int i = 0; i < glyphs.size; i++) -->Line_62 $$ Glyph first = glyphs.get(i)[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_17 $$ String xmlOpen = xml ? "\t<" : ""[ CD ]
Line_51 $$ for (int i = 0; i < glyphs.size; i++) -->Line_62 $$ Glyph first = glyphs.get(i)[ FD ]
Line_47 $$ padRight = info.padding.right-->Line_48 $$ padX = padLeft + padRight[ FD ]
Line_30 $$ if (xml)-->Line_31 $$ buf.append("\t</pages>\n")[ CD ]
Line_36 $$ for (int j = 0; j < fontData.glyphs[i].length; j++) -->Line_37 $$ if (fontData.glyphs[i][j] != null) [ CD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_60 $$ for (int i = 0; i < glyphs.size; i++) [ CD ]
Line_18 $$ String xmlCloseSelf = xml ? "/>" : ""-->Line_67 $$ kernBuf.append(xmlTab).append(xmlOpen).append("kerning first=").append(quote(first.id)).append(" second=").append(quote(second.id)).append(" amount=").append(quote(kern, true)).append(xmlCloseSelf).append("\n")[ FD ]
Line_19 $$ String xmlTab = xml ? "\t" : ""-->Line_28 $$ buf.append(xmlTab).append(xmlOpen).append("page id=").append(quote(i)).append(" file=\"").append(pageRefs[i]).append("\"").append(xmlCloseSelf).append("\n")[ FD ]
Line_43 $$ int padLeft = 0, padRight = 0, padTop = 0, padX = 0, padY = 0-->Line_48 $$ padX = padLeft + padRight[ FD ]
Line_51 $$ for (int i = 0; i < glyphs.size; i++) -->Line_60 $$ for (int i = 0; i < glyphs.size; i++) [ FD ]
Line_44 $$ if (info != null) -->Line_48 $$ padX = padLeft + padRight[ CD ]
Line_61 $$ for (int j = 0; j < glyphs.size; j++) -->Line_63 $$ Glyph second = glyphs.get(j)[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_13 $$ StringBuilder buf = new StringBuilder()[ CD ]
Line_33 $$ for (int i = 0; i < fontData.glyphs.length; i++) -->Line_52 $$ Glyph g = glyphs.get(i)[ FD ]
Line_17 $$ String xmlOpen = xml ? "\t<" : ""-->Line_71 $$ buf.append(xmlOpen).append("kernings count=").append(quote(kernCount)).append(xmlClose).append("\n")[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_12 $$ boolean xml = fmt == OutputFormat.XML[ CD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_32 $$ Array<Glyph> glyphs = new Array<Glyph>(256)[ CD ]
Line_62 $$ Glyph first = glyphs.get(i)-->Line_64 $$ int kern = first.getKerning((char) second.id)[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_30 $$ if (xml)[ CD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_7 $$ int lineHeight = (int) fontData.lineHeight[ CD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_51 $$ for (int i = 0; i < glyphs.size; i++) [ CD ]
Line_58 $$ int kernCount = 0-->Line_71 $$ buf.append(xmlOpen).append("kernings count=").append(quote(kernCount)).append(xmlClose).append("\n")[ FD ]
Line_37 $$ if (fontData.glyphs[i][j] != null) -->Line_38 $$ glyphs.add(fontData.glyphs[i][j])[ CD ]
Line_13 $$ StringBuilder buf = new StringBuilder()-->Line_31 $$ buf.append("\t</pages>\n")[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_59 $$ StringBuilder kernBuf = new StringBuilder()[ CD ]
Line_25 $$ if (xml)-->Line_26 $$ buf.append("\t<pages>\n")[ CD ]
Line_32 $$ Array<Glyph> glyphs = new Array<Glyph>(256)-->Line_52 $$ Glyph g = glyphs.get(i)[ FD ]
Line_43 $$ int padLeft = 0, padRight = 0, padTop = 0, padX = 0, padY = 0-->Line_45 $$ padTop = info.padding.up[ FD ]
Line_8 $$ int pages = pageRefs.length-->Line_24 $$ buf.append(xmlOpen).append("common lineHeight=").append(quote(lineHeight)).append(" base=").append(quote(base)).append(" scaleW=").append(quote(scaleW)).append(" scaleH=").append(quote(scaleH)).append(" pages=").append(quote(pages)).append(" packed=").append(quote(packed)).append(alphaChnlParams).append(xmlCloseSelf).append("\n")[ FD ]
Line_27 $$ for (int i = 0; i < pageRefs.length; i++) -->Line_62 $$ Glyph first = glyphs.get(i)[ FD ]
Line_32 $$ Array<Glyph> glyphs = new Array<Glyph>(256)-->Line_38 $$ glyphs.add(fontData.glyphs[i][j])[ FD ]
Line_13 $$ StringBuilder buf = new StringBuilder()-->Line_42 $$ buf.append(xmlOpen).append("chars count=").append(quote(glyphs.size)).append(xmlClose).append("\n")[ FD ]
Line_27 $$ for (int i = 0; i < pageRefs.length; i++) -->Line_51 $$ for (int i = 0; i < glyphs.size; i++) [ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_80 $$ outFntFile.writeString(buf.toString(), false, charset)[ CD ]
Line_56 $$ if (xml)-->Line_57 $$ buf.append("\t</chars>\n")[ CD ]
Line_60 $$ for (int i = 0; i < glyphs.size; i++) -->Line_61 $$ for (int j = 0; j < glyphs.size; j++) [ CD ]
Line_19 $$ String xmlTab = xml ? "\t" : ""-->Line_67 $$ kernBuf.append(xmlTab).append(xmlOpen).append("kerning first=").append(quote(first.id)).append(" second=").append(quote(second.id)).append(" amount=").append(quote(kern, true)).append(xmlCloseSelf).append("\n")[ FD ]
Line_61 $$ for (int j = 0; j < glyphs.size; j++) -->Line_62 $$ Glyph first = glyphs.get(i)[ CD ]
Line_73 $$ if (xml) -->Line_75 $$ buf.append("</font>")[ CD ]
Line_10 $$ int base = (int) ((fontData.capHeight) + (fontData.flipped ? -fontData.ascent : fontData.ascent))-->Line_24 $$ buf.append(xmlOpen).append("common lineHeight=").append(quote(lineHeight)).append(" base=").append(quote(base)).append(" scaleW=").append(quote(scaleW)).append(" scaleH=").append(quote(scaleH)).append(" pages=").append(quote(pages)).append(" packed=").append(quote(packed)).append(alphaChnlParams).append(xmlCloseSelf).append("\n")[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_10 $$ int base = (int) ((fontData.capHeight) + (fontData.flipped ? -fontData.ascent : fontData.ascent))[ CD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_42 $$ buf.append(xmlOpen).append("chars count=").append(quote(glyphs.size)).append(xmlClose).append("\n")[ CD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_71 $$ buf.append(xmlOpen).append("kernings count=").append(quote(kernCount)).append(xmlClose).append("\n")[ CD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_19 $$ String xmlTab = xml ? "\t" : ""[ CD ]
Line_18 $$ String xmlCloseSelf = xml ? "/>" : ""-->Line_28 $$ buf.append(xmlTab).append(xmlOpen).append("page id=").append(quote(i)).append(" file=\"").append(pageRefs[i]).append("\"").append(xmlCloseSelf).append("\n")[ FD ]
Line_65 $$ if (kern != 0) -->Line_66 $$ kernCount++[ CD ]
Line_17 $$ String xmlOpen = xml ? "\t<" : ""-->Line_54 $$ buf.append(xmlTab).append(xmlOpen).append("char id=").append(quote(String.format("%-6s", g.id), true)).append("x=").append(quote(String.format("%-5s", empty ? 0 : g.srcX - padLeft), true)).append("y=").append(quote(String.format("%-5s", empty ? 0 : g.srcY - padRight), true)).append("width=").append(quote(String.format("%-5s", empty ? 0 : g.width + padX), true)).append("height=").append(quote(String.format("%-5s", empty ? 0 : g.height + padY), true)).append("xoffset=").append(quote(String.format("%-5s", g.xoffset - padLeft), true)).append("yoffset=").append(quote(String.format("%-5s", fontData.flipped ? g.yoffset + padTop : -(g.height + (g.yoffset + padTop))), true)).append("xadvance=").append(quote(String.format("%-5s", g.xadvance), true)).append("page=").append(quote(String.format("%-5s", g.page), true)).append("chnl=").append(quote(0, true)).append(xmlCloseSelf).append("\n")[ FD ]
Line_51 $$ for (int i = 0; i < glyphs.size; i++) -->Line_52 $$ Glyph g = glyphs.get(i)[ FD ]
Line_58 $$ int kernCount = 0-->Line_66 $$ kernCount++[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_44 $$ if (info != null) [ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_58 $$ int kernCount = 0[ CD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_27 $$ for (int i = 0; i < pageRefs.length; i++) [ CD ]
Line_79 $$ charset = null-->Line_80 $$ outFntFile.writeString(buf.toString(), false, charset)[ FD ]
Line_51 $$ for (int i = 0; i < glyphs.size; i++) -->Line_52 $$ Glyph g = glyphs.get(i)[ CD ]
Line_73 $$ if (xml) -->Line_74 $$ buf.append("\t</kernings>\n")[ CD ]
Line_13 $$ StringBuilder buf = new StringBuilder()-->Line_15 $$ buf.append("<font>\n")[ FD ]
Line_21 $$ String xmlQuote = xml ? "\"" : ""-->Line_23 $$ buf.append(xmlOpen).append("info face=\"").append(info.face == null ? "" : info.face.replaceAll("\"", "'")).append("\" size=").append(quote(info.size)).append(" bold=").append(quote(info.bold ? 1 : 0)).append(" italic=").append(quote(info.italic ? 1 : 0)).append(" charset=\"").append(info.charset == null ? "" : info.charset).append("\" unicode=").append(quote(info.unicode ? 1 : 0)).append(" stretchH=").append(quote(info.stretchH)).append(" smooth=").append(quote(info.smooth ? 1 : 0)).append(" aa=").append(quote(info.aa)).append(" padding=").append(xmlQuote).append(info.padding.up).append(",").append(info.padding.down).append(",").append(info.padding.left).append(",").append(info.padding.right).append(xmlQuote).append(" spacing=").append(xmlQuote).append(info.spacing.horizontal).append(",").append(info.spacing.vertical).append(xmlQuote).append(xmlCloseSelf).append("\n")[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_24 $$ buf.append(xmlOpen).append("common lineHeight=").append(quote(lineHeight)).append(" base=").append(quote(base)).append(" scaleW=").append(quote(scaleW)).append(" scaleH=").append(quote(scaleH)).append(" pages=").append(quote(pages)).append(" packed=").append(quote(packed)).append(alphaChnlParams).append(xmlCloseSelf).append("\n")[ CD ]
Line_46 $$ padLeft = info.padding.left-->Line_48 $$ padX = padLeft + padRight[ FD ]
Line_64 $$ int kern = first.getKerning((char) second.id)-->Line_67 $$ kernBuf.append(xmlTab).append(xmlOpen).append("kerning first=").append(quote(first.id)).append(" second=").append(quote(second.id)).append(" amount=").append(quote(kern, true)).append(xmlCloseSelf).append("\n")[ FD ]
Line_33 $$ for (int i = 0; i < fontData.glyphs.length; i++) -->Line_51 $$ for (int i = 0; i < glyphs.size; i++) [ FD ]
Line_13 $$ StringBuilder buf = new StringBuilder()-->Line_80 $$ outFntFile.writeString(buf.toString(), false, charset)[ FD ]
Line_3 $$ if (info == null) -->Line_5 $$ info.face = outFntFile.nameWithoutExtension()[ CD ]
Line_7 $$ int lineHeight = (int) fontData.lineHeight-->Line_24 $$ buf.append(xmlOpen).append("common lineHeight=").append(quote(lineHeight)).append(" base=").append(quote(base)).append(" scaleW=").append(quote(scaleW)).append(" scaleH=").append(quote(scaleH)).append(" pages=").append(quote(pages)).append(" packed=").append(quote(packed)).append(alphaChnlParams).append(xmlCloseSelf).append("\n")[ FD ]
Line_61 $$ for (int j = 0; j < glyphs.size; j++) -->Line_64 $$ int kern = first.getKerning((char) second.id)[ CD ]
Line_65 $$ if (kern != 0) -->Line_67 $$ kernBuf.append(xmlTab).append(xmlOpen).append("kerning first=").append(quote(first.id)).append(" second=").append(quote(second.id)).append(" amount=").append(quote(kern, true)).append(xmlCloseSelf).append("\n")[ CD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_21 $$ String xmlQuote = xml ? "\"" : ""[ CD ]
Line_27 $$ for (int i = 0; i < pageRefs.length; i++) -->Line_60 $$ for (int i = 0; i < glyphs.size; i++) [ FD ]
Line_27 $$ for (int i = 0; i < pageRefs.length; i++) -->Line_52 $$ Glyph g = glyphs.get(i)[ FD ]
Line_43 $$ int padLeft = 0, padRight = 0, padTop = 0, padX = 0, padY = 0-->Line_47 $$ padRight = info.padding.right[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_25 $$ if (xml)[ CD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_24 $$ buf.append(xmlOpen).append("common lineHeight=").append(quote(lineHeight)).append(" base=").append(quote(base)).append(" scaleW=").append(quote(scaleW)).append(" scaleH=").append(quote(scaleH)).append(" pages=").append(quote(pages)).append(" packed=").append(quote(packed)).append(alphaChnlParams).append(xmlCloseSelf).append("\n")[ FD ]
Line_33 $$ for (int i = 0; i < fontData.glyphs.length; i++) -->Line_34 $$ if (fontData.glyphs[i] == null)[ CD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_23 $$ buf.append(xmlOpen).append("info face=\"").append(info.face == null ? "" : info.face.replaceAll("\"", "'")).append("\" size=").append(quote(info.size)).append(" bold=").append(quote(info.bold ? 1 : 0)).append(" italic=").append(quote(info.italic ? 1 : 0)).append(" charset=\"").append(info.charset == null ? "" : info.charset).append("\" unicode=").append(quote(info.unicode ? 1 : 0)).append(" stretchH=").append(quote(info.stretchH)).append(" smooth=").append(quote(info.smooth ? 1 : 0)).append(" aa=").append(quote(info.aa)).append(" padding=").append(xmlQuote).append(info.padding.up).append(",").append(info.padding.down).append(",").append(info.padding.left).append(",").append(info.padding.right).append(xmlQuote).append(" spacing=").append(xmlQuote).append(info.spacing.horizontal).append(",").append(info.spacing.vertical).append(xmlQuote).append(xmlCloseSelf).append("\n")[ CD ]
Line_9 $$ int packed = 0-->Line_24 $$ buf.append(xmlOpen).append("common lineHeight=").append(quote(lineHeight)).append(" base=").append(quote(base)).append(" scaleW=").append(quote(scaleW)).append(" scaleH=").append(quote(scaleH)).append(" pages=").append(quote(pages)).append(" packed=").append(quote(packed)).append(alphaChnlParams).append(xmlCloseSelf).append("\n")[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_44 $$ if (info != null) [ CD ]
Line_17 $$ String xmlOpen = xml ? "\t<" : ""-->Line_24 $$ buf.append(xmlOpen).append("common lineHeight=").append(quote(lineHeight)).append(" base=").append(quote(base)).append(" scaleW=").append(quote(scaleW)).append(" scaleH=").append(quote(scaleH)).append(" pages=").append(quote(pages)).append(" packed=").append(quote(packed)).append(alphaChnlParams).append(xmlCloseSelf).append("\n")[ FD ]
Line_13 $$ StringBuilder buf = new StringBuilder()-->Line_75 $$ buf.append("</font>")[ FD ]
Line_13 $$ StringBuilder buf = new StringBuilder()-->Line_72 $$ buf.append(kernBuf)[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_80 $$ outFntFile.writeString(buf.toString(), false, charset)[ FD ]
Line_13 $$ StringBuilder buf = new StringBuilder()-->Line_71 $$ buf.append(xmlOpen).append("kernings count=").append(quote(kernCount)).append(xmlClose).append("\n")[ FD ]
Line_59 $$ StringBuilder kernBuf = new StringBuilder()-->Line_72 $$ buf.append(kernBuf)[ FD ]
Line_44 $$ if (info != null) -->Line_49 $$ padY = info.padding.up + info.padding.down[ CD ]
Line_59 $$ StringBuilder kernBuf = new StringBuilder()-->Line_67 $$ kernBuf.append(xmlTab).append(xmlOpen).append("kerning first=").append(quote(first.id)).append(" second=").append(quote(second.id)).append(" amount=").append(quote(kern, true)).append(xmlCloseSelf).append("\n")[ FD ]
Line_13 $$ StringBuilder buf = new StringBuilder()-->Line_74 $$ buf.append("\t</kernings>\n")[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_11 $$ OutputFormat fmt = BitmapFontWriter.getOutputFormat()[ CD ]
Line_19 $$ String xmlTab = xml ? "\t" : ""-->Line_54 $$ buf.append(xmlTab).append(xmlOpen).append("char id=").append(quote(String.format("%-6s", g.id), true)).append("x=").append(quote(String.format("%-5s", empty ? 0 : g.srcX - padLeft), true)).append("y=").append(quote(String.format("%-5s", empty ? 0 : g.srcY - padRight), true)).append("width=").append(quote(String.format("%-5s", empty ? 0 : g.width + padX), true)).append("height=").append(quote(String.format("%-5s", empty ? 0 : g.height + padY), true)).append("xoffset=").append(quote(String.format("%-5s", g.xoffset - padLeft), true)).append("yoffset=").append(quote(String.format("%-5s", fontData.flipped ? g.yoffset + padTop : -(g.height + (g.yoffset + padTop))), true)).append("xadvance=").append(quote(String.format("%-5s", g.xadvance), true)).append("page=").append(quote(String.format("%-5s", g.page), true)).append("chnl=").append(quote(0, true)).append(xmlCloseSelf).append("\n")[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_73 $$ if (xml) [ CD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_8 $$ int pages = pageRefs.length[ CD ]
Line_51 $$ for (int i = 0; i < glyphs.size; i++) -->Line_54 $$ buf.append(xmlTab).append(xmlOpen).append("char id=").append(quote(String.format("%-6s", g.id), true)).append("x=").append(quote(String.format("%-5s", empty ? 0 : g.srcX - padLeft), true)).append("y=").append(quote(String.format("%-5s", empty ? 0 : g.srcY - padRight), true)).append("width=").append(quote(String.format("%-5s", empty ? 0 : g.width + padX), true)).append("height=").append(quote(String.format("%-5s", empty ? 0 : g.height + padY), true)).append("xoffset=").append(quote(String.format("%-5s", g.xoffset - padLeft), true)).append("yoffset=").append(quote(String.format("%-5s", fontData.flipped ? g.yoffset + padTop : -(g.height + (g.yoffset + padTop))), true)).append("xadvance=").append(quote(String.format("%-5s", g.xadvance), true)).append("page=").append(quote(String.format("%-5s", g.page), true)).append("chnl=").append(quote(0, true)).append(xmlCloseSelf).append("\n")[ CD ]
Line_33 $$ for (int i = 0; i < fontData.glyphs.length; i++) -->Line_36 $$ for (int j = 0; j < fontData.glyphs[i].length; j++) [ CD ]
Line_4 $$ info = new FontInfo()-->Line_44 $$ if (info != null) [ FD ]
Line_36 $$ for (int j = 0; j < fontData.glyphs[i].length; j++) -->Line_61 $$ for (int j = 0; j < glyphs.size; j++) [ FD ]
Line_17 $$ String xmlOpen = xml ? "\t<" : ""-->Line_42 $$ buf.append(xmlOpen).append("chars count=").append(quote(glyphs.size)).append(xmlClose).append("\n")[ FD ]
Line_18 $$ String xmlCloseSelf = xml ? "/>" : ""-->Line_23 $$ buf.append(xmlOpen).append("info face=\"").append(info.face == null ? "" : info.face.replaceAll("\"", "'")).append("\" size=").append(quote(info.size)).append(" bold=").append(quote(info.bold ? 1 : 0)).append(" italic=").append(quote(info.italic ? 1 : 0)).append(" charset=\"").append(info.charset == null ? "" : info.charset).append("\" unicode=").append(quote(info.unicode ? 1 : 0)).append(" stretchH=").append(quote(info.stretchH)).append(" smooth=").append(quote(info.smooth ? 1 : 0)).append(" aa=").append(quote(info.aa)).append(" padding=").append(xmlQuote).append(info.padding.up).append(",").append(info.padding.down).append(",").append(info.padding.left).append(",").append(info.padding.right).append(xmlQuote).append(" spacing=").append(xmlQuote).append(info.spacing.horizontal).append(",").append(info.spacing.vertical).append(xmlQuote).append(xmlCloseSelf).append("\n")[ FD ]
Line_17 $$ String xmlOpen = xml ? "\t<" : ""-->Line_67 $$ kernBuf.append(xmlTab).append(xmlOpen).append("kerning first=").append(quote(first.id)).append(" second=").append(quote(second.id)).append(" amount=").append(quote(kern, true)).append(xmlCloseSelf).append("\n")[ FD ]
Line_44 $$ if (info != null) -->Line_45 $$ padTop = info.padding.up[ CD ]
Line_22 $$ String alphaChnlParams = xml ? " alphaChnl=\"0\" redChnl=\"0\" greenChnl=\"0\" blueChnl=\"0\"" : " alphaChnl=0 redChnl=0 greenChnl=0 blueChnl=0"-->Line_24 $$ buf.append(xmlOpen).append("common lineHeight=").append(quote(lineHeight)).append(" base=").append(quote(base)).append(" scaleW=").append(quote(scaleW)).append(" scaleH=").append(quote(scaleH)).append(" pages=").append(quote(pages)).append(" packed=").append(quote(packed)).append(alphaChnlParams).append(xmlCloseSelf).append("\n")[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_43 $$ int padLeft = 0, padRight = 0, padTop = 0, padX = 0, padY = 0[ CD ]
Line_13 $$ StringBuilder buf = new StringBuilder()-->Line_26 $$ buf.append("\t<pages>\n")[ FD ]
Line_77 $$ String charset = info.charset-->Line_79 $$ charset = null[ FD ]
Line_33 $$ for (int i = 0; i < fontData.glyphs.length; i++) -->Line_62 $$ Glyph first = glyphs.get(i)[ FD ]
Line_27 $$ for (int i = 0; i < pageRefs.length; i++) -->Line_28 $$ buf.append(xmlTab).append(xmlOpen).append("page id=").append(quote(i)).append(" file=\"").append(pageRefs[i]).append("\"").append(xmlCloseSelf).append("\n")[ CD ]
Line_17 $$ String xmlOpen = xml ? "\t<" : ""-->Line_23 $$ buf.append(xmlOpen).append("info face=\"").append(info.face == null ? "" : info.face.replaceAll("\"", "'")).append("\" size=").append(quote(info.size)).append(" bold=").append(quote(info.bold ? 1 : 0)).append(" italic=").append(quote(info.italic ? 1 : 0)).append(" charset=\"").append(info.charset == null ? "" : info.charset).append("\" unicode=").append(quote(info.unicode ? 1 : 0)).append(" stretchH=").append(quote(info.stretchH)).append(" smooth=").append(quote(info.smooth ? 1 : 0)).append(" aa=").append(quote(info.aa)).append(" padding=").append(xmlQuote).append(info.padding.up).append(",").append(info.padding.down).append(",").append(info.padding.left).append(",").append(info.padding.right).append(xmlQuote).append(" spacing=").append(xmlQuote).append(info.spacing.horizontal).append(",").append(info.spacing.vertical).append(xmlQuote).append(xmlCloseSelf).append("\n")[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_77 $$ String charset = info.charset[ CD ]
Line_33 $$ for (int i = 0; i < fontData.glyphs.length; i++) -->Line_60 $$ for (int i = 0; i < glyphs.size; i++) [ FD ]
Line_78 $$ if (charset != null && charset.length() == 0)-->Line_79 $$ charset = null[ CD ]
Line_32 $$ Array<Glyph> glyphs = new Array<Glyph>(256)-->Line_62 $$ Glyph first = glyphs.get(i)[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_3 $$ if (info == null) [ CD ]
Line_18 $$ String xmlCloseSelf = xml ? "/>" : ""-->Line_54 $$ buf.append(xmlTab).append(xmlOpen).append("char id=").append(quote(String.format("%-6s", g.id), true)).append("x=").append(quote(String.format("%-5s", empty ? 0 : g.srcX - padLeft), true)).append("y=").append(quote(String.format("%-5s", empty ? 0 : g.srcY - padRight), true)).append("width=").append(quote(String.format("%-5s", empty ? 0 : g.width + padX), true)).append("height=").append(quote(String.format("%-5s", empty ? 0 : g.height + padY), true)).append("xoffset=").append(quote(String.format("%-5s", g.xoffset - padLeft), true)).append("yoffset=").append(quote(String.format("%-5s", fontData.flipped ? g.yoffset + padTop : -(g.height + (g.yoffset + padTop))), true)).append("xadvance=").append(quote(String.format("%-5s", g.xadvance), true)).append("page=").append(quote(String.format("%-5s", g.page), true)).append("chnl=").append(quote(0, true)).append(xmlCloseSelf).append("\n")[ FD ]
Line_18 $$ String xmlCloseSelf = xml ? "/>" : ""-->Line_24 $$ buf.append(xmlOpen).append("common lineHeight=").append(quote(lineHeight)).append(" base=").append(quote(base)).append(" scaleW=").append(quote(scaleW)).append(" scaleH=").append(quote(scaleH)).append(" pages=").append(quote(pages)).append(" packed=").append(quote(packed)).append(alphaChnlParams).append(xmlCloseSelf).append("\n")[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_72 $$ buf.append(kernBuf)[ CD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_56 $$ if (xml)[ CD ]
Line_3 $$ if (info == null) -->Line_4 $$ info = new FontInfo()[ CD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_3 $$ if (info == null) [ FD ]
Line_13 $$ StringBuilder buf = new StringBuilder()-->Line_28 $$ buf.append(xmlTab).append(xmlOpen).append("page id=").append(quote(i)).append(" file=\"").append(pageRefs[i]).append("\"").append(xmlCloseSelf).append("\n")[ FD ]
Line_27 $$ for (int i = 0; i < pageRefs.length; i++) -->Line_28 $$ buf.append(xmlTab).append(xmlOpen).append("page id=").append(quote(i)).append(" file=\"").append(pageRefs[i]).append("\"").append(xmlCloseSelf).append("\n")[ FD ]
Line_13 $$ StringBuilder buf = new StringBuilder()-->Line_57 $$ buf.append("\t</chars>\n")[ FD ]
Line_13 $$ StringBuilder buf = new StringBuilder()-->Line_54 $$ buf.append(xmlTab).append(xmlOpen).append("char id=").append(quote(String.format("%-6s", g.id), true)).append("x=").append(quote(String.format("%-5s", empty ? 0 : g.srcX - padLeft), true)).append("y=").append(quote(String.format("%-5s", empty ? 0 : g.srcY - padRight), true)).append("width=").append(quote(String.format("%-5s", empty ? 0 : g.width + padX), true)).append("height=").append(quote(String.format("%-5s", empty ? 0 : g.height + padY), true)).append("xoffset=").append(quote(String.format("%-5s", g.xoffset - padLeft), true)).append("yoffset=").append(quote(String.format("%-5s", fontData.flipped ? g.yoffset + padTop : -(g.height + (g.yoffset + padTop))), true)).append("xadvance=").append(quote(String.format("%-5s", g.xadvance), true)).append("page=").append(quote(String.format("%-5s", g.page), true)).append("chnl=").append(quote(0, true)).append(xmlCloseSelf).append("\n")[ FD ]
Line_2 $$ public static void writeFont(BitmapFontData fontData, String[] pageRefs, FileHandle outFntFile, FontInfo info, int scaleW, int scaleH) -->Line_18 $$ String xmlCloseSelf = xml ? "/>" : ""[ CD ]
Line_44 $$ if (info != null) -->Line_46 $$ padLeft = info.padding.left[ CD ]
