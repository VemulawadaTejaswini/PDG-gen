Line_24 $$ TypeDescriptor value = descriptor.getValue()-->Line_25 $$ if (value == null || (value instanceof ComplexTypeDescriptor && ((ComplexTypeDescriptor) value).getDeclaration().isValid()))[ FD ]
Line_29 $$ if (visited == null) -->Line_30 $$ visited = new HashSet<XmlTag>(1)[ CD ]
Line_17 $$ if (visited.contains(rootTag))-->Line_18 $$ return null[ CD ]
Line_14 $$ if (rootTag == null)-->Line_15 $$ return null[ CD ]
Line_21 $$ final Pair<QNameKey, XmlTag> pair = Pair.create(new QNameKey(name, namespace), rootTag)-->Line_33 $$ return doFindIn(tags, name, namespace, pair, rootTag, visited)[ FD ]
Line_16 $$ if (visited != null) -->Line_17 $$ if (visited.contains(rootTag))[ CD ]
Line_8 $$ responsibleDescriptor = (XmlNSDescriptorImpl) nsDescriptor-->Line_12 $$ return responsibleDescriptor.findTypeDescriptor(XmlUtil.findLocalNameByQualifiedName(name))[ FD ]
Line_30 $$ visited = new HashSet<XmlTag>(1)-->Line_33 $$ return doFindIn(tags, name, namespace, pair, rootTag, visited)[ FD ]
Line_7 $$ if (nsDescriptor instanceof XmlNSDescriptorImpl) -->Line_8 $$ responsibleDescriptor = (XmlNSDescriptorImpl) nsDescriptor[ CD ]
Line_4 $$ XmlNSDescriptorImpl responsibleDescriptor = this-->Line_11 $$ if (responsibleDescriptor != this) [ FD ]
Line_16 $$ if (visited != null) -->Line_19 $$ visited.add(rootTag)[ CD ]
Line_5 $$ if (namespace != null && namespace.length() != 0 && !namespace.equals(getDefaultNamespace())) -->Line_6 $$ final XmlNSDescriptor nsDescriptor = rootTag.getNSDescriptor(namespace, true)[ CD ]
Line_11 $$ if (responsibleDescriptor != this) -->Line_12 $$ return responsibleDescriptor.findTypeDescriptor(XmlUtil.findLocalNameByQualifiedName(name))[ CD ]
Line_22 $$ final CachedValue<TypeDescriptor> descriptor = myTypesMap.get(pair)-->Line_23 $$ if (descriptor != null) [ FD ]
Line_6 $$ final XmlNSDescriptor nsDescriptor = rootTag.getNSDescriptor(namespace, true)-->Line_7 $$ if (nsDescriptor instanceof XmlNSDescriptorImpl) [ FD ]
Line_23 $$ if (descriptor != null) -->Line_25 $$ if (value == null || (value instanceof ComplexTypeDescriptor && ((ComplexTypeDescriptor) value).getDeclaration().isValid()))[ CD ]
Line_30 $$ visited = new HashSet<XmlTag>(1)-->Line_31 $$ visited.add(rootTag)[ FD ]
Line_28 $$ XmlTag[] tags = rootTag.getSubTags()-->Line_33 $$ return doFindIn(tags, name, namespace, pair, rootTag, visited)[ FD ]
Line_23 $$ if (descriptor != null) -->Line_24 $$ TypeDescriptor value = descriptor.getValue()[ CD ]
Line_4 $$ XmlNSDescriptorImpl responsibleDescriptor = this-->Line_12 $$ return responsibleDescriptor.findTypeDescriptor(XmlUtil.findLocalNameByQualifiedName(name))[ FD ]
Line_8 $$ responsibleDescriptor = (XmlNSDescriptorImpl) nsDescriptor-->Line_11 $$ if (responsibleDescriptor != this) [ FD ]
Line_29 $$ if (visited == null) -->Line_31 $$ visited.add(rootTag)[ CD ]
Line_4 $$ XmlNSDescriptorImpl responsibleDescriptor = this-->Line_8 $$ responsibleDescriptor = (XmlNSDescriptorImpl) nsDescriptor[ FD ]
Line_21 $$ final Pair<QNameKey, XmlTag> pair = Pair.create(new QNameKey(name, namespace), rootTag)-->Line_22 $$ final CachedValue<TypeDescriptor> descriptor = myTypesMap.get(pair)[ FD ]
Line_22 $$ final CachedValue<TypeDescriptor> descriptor = myTypesMap.get(pair)-->Line_24 $$ TypeDescriptor value = descriptor.getValue()[ FD ]
Line_5 $$ if (namespace != null && namespace.length() != 0 && !namespace.equals(getDefaultNamespace())) -->Line_7 $$ if (nsDescriptor instanceof XmlNSDescriptorImpl) [ CD ]
Line_25 $$ if (value == null || (value instanceof ComplexTypeDescriptor && ((ComplexTypeDescriptor) value).getDeclaration().isValid()))-->Line_26 $$ return value[ CD ]
