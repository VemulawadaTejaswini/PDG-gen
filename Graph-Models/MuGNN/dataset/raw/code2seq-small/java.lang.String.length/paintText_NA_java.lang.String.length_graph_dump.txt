Line_24 $$ TextAttributes attributes = iterationState.getMergedAttributes()-->Line_31 $$ int fontType = attributes.getFontType()[ FD ]
Line_29 $$ Color effectColor = attributes.getEffectColor()-->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_29 $$ Color effectColor = attributes.getEffectColor()-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_43 $$ final VirtualFile file = getVirtualFile()-->Line_48 $$ Collection<LineExtensionInfo> extensions = painter.getLineExtensions(myProject, file, lIterator.getLineNumber())[ FD ]
Line_45 $$ int offset = position.x-->Line_58 $$ offset += EditorUtil.charWidth(ch, Font.ITALIC, this)[ FD ]
Line_91 $$ currentColor = attributes.getForegroundColor()-->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_13 $$ if (startLine >= myDocument.getLineCount() || startLine < 0) [ CD ]
Line_18 $$ LineIterator lIterator = createLineIterator()-->Line_48 $$ Collection<LineExtensionInfo> extensions = painter.getLineExtensions(myProject, file, lIterator.getLineNumber())[ FD ]
Line_78 $$ if (softWrap != null) -->Line_79 $$ position.x = drawStringWithSoftWraps(g, chars, collapsedFolderAt.getStartOffset(), collapsedFolderAt.getStartOffset(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ CD ]
Line_67 $$ start = lEnd-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_91 $$ currentColor = attributes.getForegroundColor()-->Line_82 $$ position.x = drawString(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, PAINT_NO_WHITESPACE)[ FD ]
Line_8 $$ int start = clipStartOffset-->Line_67 $$ start = lEnd[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_33 $$ CharSequence chars = myDocument.getImmutableCharSequence()[ CD ]
Line_91 $$ currentColor = attributes.getForegroundColor()-->Line_92 $$ if (currentColor == null) [ FD ]
Line_34 $$ LineWhitespacePaintingStrategy context = new LineWhitespacePaintingStrategy()-->Line_79 $$ position.x = drawStringWithSoftWraps(g, chars, collapsedFolderAt.getStartOffset(), collapsedFolderAt.getStartOffset(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_18 $$ LineIterator lIterator = createLineIterator()-->Line_20 $$ if (lIterator.atEnd()) [ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_34 $$ LineWhitespacePaintingStrategy context = new LineWhitespacePaintingStrategy()[ CD ]
Line_25 $$ Color currentColor = attributes.getForegroundColor()-->Line_91 $$ currentColor = attributes.getForegroundColor()[ FD ]
Line_25 $$ Color currentColor = attributes.getForegroundColor()-->Line_92 $$ if (currentColor == null) [ FD ]
Line_97 $$ fontType = attributes.getFontType()-->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_39 $$ if (hEnd >= lEnd) -->Line_95 $$ effectColor = attributes.getEffectColor()[ CD ]
Line_24 $$ TextAttributes attributes = iterationState.getMergedAttributes()-->Line_96 $$ effectType = attributes.getEffectType()[ FD ]
Line_48 $$ Collection<LineExtensionInfo> extensions = painter.getLineExtensions(myProject, file, lIterator.getLineNumber())-->Line_49 $$ if (extensions != null && !extensions.isEmpty()) [ FD ]
Line_39 $$ if (hEnd >= lEnd) -->Line_71 $$ if (!lIterator.atEnd()) [ CD ]
Line_47 $$ for (EditorLinePainter painter : EditorLinePainter.EP_NAME.getExtensions()) -->Line_48 $$ Collection<LineExtensionInfo> extensions = painter.getLineExtensions(myProject, file, lIterator.getLineNumber())[ FD ]
Line_91 $$ currentColor = attributes.getForegroundColor()-->Line_93 $$ currentColor = getForegroundColor()[ FD ]
Line_81 $$ int foldingXStart = position.x-->Line_105 $$ BorderEffect.paintFoldedEffect(g, foldingXStart, position.y, foldingXEnd, getLineHeight(), effectColor, effectType)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_112 $$ flushCachedChars(g)[ CD ]
Line_8 $$ int start = clipStartOffset-->Line_19 $$ lIterator.start(start)[ FD ]
Line_25 $$ Color currentColor = attributes.getForegroundColor()-->Line_26 $$ if (currentColor == null) [ FD ]
Line_25 $$ Color currentColor = attributes.getForegroundColor()-->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_18 $$ LineIterator lIterator = createLineIterator()[ CD ]
Line_91 $$ currentColor = attributes.getForegroundColor()-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_29 $$ Color effectColor = attributes.getEffectColor()-->Line_104 $$ int foldingXEnd = drawStringWithSoftWraps(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, PAINT_NO_WHITESPACE)[ FD ]
Line_71 $$ if (!lIterator.atEnd()) -->Line_72 $$ context.update(chars, lIterator)[ CD ]
Line_39 $$ if (hEnd >= lEnd) -->Line_89 $$ iterationState.advance()[ CD ]
Line_24 $$ TextAttributes attributes = iterationState.getMergedAttributes()-->Line_25 $$ Color currentColor = attributes.getForegroundColor()[ FD ]
Line_39 $$ if (hEnd >= lEnd) -->Line_40 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)[ CD ]
Line_40 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)-->Line_77 $$ SoftWrap softWrap = mySoftWrapModel.getSoftWrap(collapsedFolderAt.getStartOffset())[ FD ]
Line_57 $$ for (char ch : additionalText.toCharArray()) -->Line_58 $$ offset += EditorUtil.charWidth(ch, Font.ITALIC, this)[ FD ]
Line_40 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)-->Line_41 $$ if (collapsedFolderAt == null) [ FD ]
Line_95 $$ effectColor = attributes.getEffectColor()-->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_46 $$ String additionalText = ""-->Line_52 $$ additionalText += text[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_53 $$ position.x = drawString(g, text, 0, text.length(), position, clip, info.getEffectColor() == null ? effectColor : info.getEffectColor(), info.getEffectType() == null ? effectType : info.getEffectType(), info.getFontType(), info.getColor() == null ? currentColor : info.getColor(), context)[ FD ]
Line_102 $$ if (collapsedFolderAt != null) -->Line_105 $$ BorderEffect.paintFoldedEffect(g, foldingXStart, position.y, foldingXEnd, getLineHeight(), effectColor, effectType)[ CD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_15 $$ flushCachedChars(g)[ FD ]
Line_109 $$ if (softWrap != null) -->Line_110 $$ mySoftWrapModel.paint(g, SoftWrapDrawingType.BEFORE_SOFT_WRAP_LINE_FEED, position.x, position.y, getLineHeight())[ CD ]
Line_27 $$ currentColor = getForegroundColor()-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_95 $$ effectColor = attributes.getEffectColor()-->Line_79 $$ position.x = drawStringWithSoftWraps(g, chars, collapsedFolderAt.getStartOffset(), collapsedFolderAt.getStartOffset(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_97 $$ fontType = attributes.getFontType()-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_23 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_89 $$ iterationState.advance()[ FD ]
Line_24 $$ TextAttributes attributes = iterationState.getMergedAttributes()-->Line_97 $$ fontType = attributes.getFontType()[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_9 $$ Point position = new Point(0, visibleLine * lineHeight)[ CD ]
Line_36 $$ while (!iterationState.atEnd() && !lIterator.atEnd()) -->Line_39 $$ if (hEnd >= lEnd) [ CD ]
Line_34 $$ LineWhitespacePaintingStrategy context = new LineWhitespacePaintingStrategy()-->Line_35 $$ context.update(chars, lIterator)[ FD ]
Line_30 $$ EffectType effectType = attributes.getEffectType()-->Line_79 $$ position.x = drawStringWithSoftWraps(g, chars, collapsedFolderAt.getStartOffset(), collapsedFolderAt.getStartOffset(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_40 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)-->Line_82 $$ position.x = drawString(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, PAINT_NO_WHITESPACE)[ FD ]
Line_23 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_90 $$ attributes = iterationState.getMergedAttributes()[ FD ]
Line_18 $$ LineIterator lIterator = createLineIterator()-->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_52 $$ additionalText += text-->Line_57 $$ for (char ch : additionalText.toCharArray()) [ FD ]
Line_96 $$ effectType = attributes.getEffectType()-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_93 $$ currentColor = getForegroundColor()-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_104 $$ int foldingXEnd = drawStringWithSoftWraps(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, PAINT_NO_WHITESPACE)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_7 $$ int startLine = clipStartPosition.line[ CD ]
Line_50 $$ for (LineExtensionInfo info : extensions) -->Line_53 $$ position.x = drawString(g, text, 0, text.length(), position, clip, info.getEffectColor() == null ? effectColor : info.getEffectColor(), info.getEffectType() == null ? effectType : info.getEffectType(), info.getFontType(), info.getColor() == null ? currentColor : info.getColor(), context)[ FD ]
Line_40 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)-->Line_102 $$ if (collapsedFolderAt != null) [ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_26 $$ if (currentColor == null) [ CD ]
Line_33 $$ CharSequence chars = myDocument.getImmutableCharSequence()-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_10 $$ if (startLine == 0 && myPrefixText != null) [ CD ]
Line_14 $$ if (position.x > 0)-->Line_15 $$ flushCachedChars(g)[ CD ]
Line_36 $$ while (!iterationState.atEnd() && !lIterator.atEnd()) -->Line_38 $$ int lEnd = lIterator.getEnd()[ CD ]
Line_39 $$ if (hEnd >= lEnd) -->Line_41 $$ if (collapsedFolderAt == null) [ CD ]
Line_39 $$ if (hEnd >= lEnd) -->Line_76 $$ if (collapsedFolderAt != null) [ CD ]
Line_90 $$ attributes = iterationState.getMergedAttributes()-->Line_91 $$ currentColor = attributes.getForegroundColor()[ FD ]
Line_39 $$ if (hEnd >= lEnd) -->Line_96 $$ effectType = attributes.getEffectType()[ CD ]
Line_33 $$ CharSequence chars = myDocument.getImmutableCharSequence()-->Line_35 $$ context.update(chars, lIterator)[ FD ]
Line_76 $$ if (collapsedFolderAt != null) -->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ CD ]
Line_96 $$ effectType = attributes.getEffectType()-->Line_79 $$ position.x = drawStringWithSoftWraps(g, chars, collapsedFolderAt.getStartOffset(), collapsedFolderAt.getStartOffset(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_93 $$ currentColor = getForegroundColor()-->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_41 $$ if (collapsedFolderAt == null) -->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ CD ]
Line_41 $$ if (collapsedFolderAt == null) -->Line_63 $$ if (position.y > clip.y + clip.height) [ CD ]
Line_95 $$ effectColor = attributes.getEffectColor()-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_18 $$ LineIterator lIterator = createLineIterator()-->Line_36 $$ while (!iterationState.atEnd() && !lIterator.atEnd()) [ FD ]
Line_40 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)-->Line_104 $$ int foldingXEnd = drawStringWithSoftWraps(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, PAINT_NO_WHITESPACE)[ FD ]
Line_91 $$ currentColor = attributes.getForegroundColor()-->Line_79 $$ position.x = drawStringWithSoftWraps(g, chars, collapsedFolderAt.getStartOffset(), collapsedFolderAt.getStartOffset(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_9 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_53 $$ position.x = drawString(g, text, 0, text.length(), position, clip, info.getEffectColor() == null ? effectColor : info.getEffectColor(), info.getEffectType() == null ? effectType : info.getEffectType(), info.getFontType(), info.getColor() == null ? currentColor : info.getColor(), context)[ FD ]
Line_98 $$ start = iterationState.getStartOffset()-->Line_40 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)[ FD ]
Line_67 $$ start = lEnd-->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_18 $$ LineIterator lIterator = createLineIterator()-->Line_38 $$ int lEnd = lIterator.getEnd()[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_6 $$ int visibleLine = clip.y / lineHeight[ CD ]
Line_26 $$ if (currentColor == null) -->Line_27 $$ currentColor = getForegroundColor()[ CD ]
Line_98 $$ start = iterationState.getStartOffset()-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_90 $$ attributes = iterationState.getMergedAttributes()-->Line_96 $$ effectType = attributes.getEffectType()[ FD ]
Line_18 $$ LineIterator lIterator = createLineIterator()-->Line_71 $$ if (!lIterator.atEnd()) [ FD ]
Line_95 $$ effectColor = attributes.getEffectColor()-->Line_82 $$ position.x = drawString(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, PAINT_NO_WHITESPACE)[ FD ]
Line_30 $$ EffectType effectType = attributes.getEffectType()-->Line_82 $$ position.x = drawString(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, PAINT_NO_WHITESPACE)[ FD ]
Line_77 $$ SoftWrap softWrap = mySoftWrapModel.getSoftWrap(collapsedFolderAt.getStartOffset())-->Line_78 $$ if (softWrap != null) [ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_23 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())[ CD ]
Line_39 $$ if (hEnd >= lEnd) -->Line_92 $$ if (currentColor == null) [ CD ]
Line_8 $$ int start = clipStartOffset-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_24 $$ TextAttributes attributes = iterationState.getMergedAttributes()-->Line_91 $$ currentColor = attributes.getForegroundColor()[ FD ]
Line_44 $$ if (myProject != null && file != null && !isOneLineMode()) -->Line_45 $$ int offset = position.x[ CD ]
Line_20 $$ if (lIterator.atEnd()) -->Line_21 $$ return[ CD ]
Line_23 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_37 $$ int hEnd = iterationState.getEndOffset()[ FD ]
Line_27 $$ currentColor = getForegroundColor()-->Line_91 $$ currentColor = attributes.getForegroundColor()[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_112 $$ flushCachedChars(g)[ FD ]
Line_108 $$ final SoftWrap softWrap = mySoftWrapModel.getSoftWrap(clipEndOffset)-->Line_109 $$ if (softWrap != null) [ FD ]
Line_27 $$ currentColor = getForegroundColor()-->Line_82 $$ position.x = drawString(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, PAINT_NO_WHITESPACE)[ FD ]
Line_95 $$ effectColor = attributes.getEffectColor()-->Line_105 $$ BorderEffect.paintFoldedEffect(g, foldingXStart, position.y, foldingXEnd, getLineHeight(), effectColor, effectType)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_82 $$ position.x = drawString(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, PAINT_NO_WHITESPACE)[ FD ]
Line_44 $$ if (myProject != null && file != null && !isOneLineMode()) -->Line_46 $$ String additionalText = ""[ CD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_32 $$ g.setColor(currentColor)[ FD ]
Line_10 $$ if (startLine == 0 && myPrefixText != null) -->Line_11 $$ position.x = drawStringWithSoftWraps(g, new CharArrayCharSequence(myPrefixText), 0, myPrefixText.length, position, clip, myPrefixAttributes.getEffectColor(), myPrefixAttributes.getEffectType(), myPrefixAttributes.getFontType(), myPrefixAttributes.getForegroundColor(), -1, PAINT_NO_WHITESPACE)[ CD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_108 $$ final SoftWrap softWrap = mySoftWrapModel.getSoftWrap(clipEndOffset)[ FD ]
Line_39 $$ if (hEnd >= lEnd) -->Line_98 $$ start = iterationState.getStartOffset()[ CD ]
Line_93 $$ currentColor = getForegroundColor()-->Line_82 $$ position.x = drawString(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, PAINT_NO_WHITESPACE)[ FD ]
Line_9 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_79 $$ position.x = drawStringWithSoftWraps(g, chars, collapsedFolderAt.getStartOffset(), collapsedFolderAt.getStartOffset(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_96 $$ effectType = attributes.getEffectType()-->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_31 $$ int fontType = attributes.getFontType()[ CD ]
Line_97 $$ fontType = attributes.getFontType()-->Line_82 $$ position.x = drawString(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, PAINT_NO_WHITESPACE)[ FD ]
Line_5 $$ int lineHeight = getLineHeight()-->Line_66 $$ position.y += lineHeight[ FD ]
Line_27 $$ currentColor = getForegroundColor()-->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_58 $$ offset += EditorUtil.charWidth(ch, Font.ITALIC, this)-->Line_60 $$ myLinePaintersWidth = Math.max(myLinePaintersWidth, offset)[ FD ]
Line_76 $$ if (collapsedFolderAt != null) -->Line_81 $$ int foldingXStart = position.x[ CD ]
Line_13 $$ if (startLine >= myDocument.getLineCount() || startLine < 0) -->Line_16 $$ return[ CD ]
Line_67 $$ start = lEnd-->Line_40 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)[ FD ]
Line_101 $$ FoldRegion collapsedFolderAt = iterationState.getCurrentFold()-->Line_104 $$ int foldingXEnd = drawStringWithSoftWraps(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, PAINT_NO_WHITESPACE)[ FD ]
Line_27 $$ currentColor = getForegroundColor()-->Line_32 $$ g.setColor(currentColor)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_23 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_98 $$ start = iterationState.getStartOffset()[ FD ]
Line_24 $$ TextAttributes attributes = iterationState.getMergedAttributes()-->Line_90 $$ attributes = iterationState.getMergedAttributes()[ FD ]
Line_9 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_11 $$ position.x = drawStringWithSoftWraps(g, new CharArrayCharSequence(myPrefixText), 0, myPrefixText.length, position, clip, myPrefixAttributes.getEffectColor(), myPrefixAttributes.getEffectType(), myPrefixAttributes.getFontType(), myPrefixAttributes.getForegroundColor(), -1, PAINT_NO_WHITESPACE)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_102 $$ if (collapsedFolderAt != null) [ CD ]
Line_77 $$ SoftWrap softWrap = mySoftWrapModel.getSoftWrap(collapsedFolderAt.getStartOffset())-->Line_109 $$ if (softWrap != null) [ FD ]
Line_98 $$ start = iterationState.getStartOffset()-->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_110 $$ mySoftWrapModel.paint(g, SoftWrapDrawingType.BEFORE_SOFT_WRAP_LINE_FEED, position.x, position.y, getLineHeight())[ FD ]
Line_41 $$ if (collapsedFolderAt == null) -->Line_66 $$ position.y += lineHeight[ CD ]
Line_39 $$ if (hEnd >= lEnd) -->Line_90 $$ attributes = iterationState.getMergedAttributes()[ CD ]
Line_27 $$ currentColor = getForegroundColor()-->Line_104 $$ int foldingXEnd = drawStringWithSoftWraps(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, PAINT_NO_WHITESPACE)[ FD ]
Line_27 $$ currentColor = getForegroundColor()-->Line_92 $$ if (currentColor == null) [ FD ]
Line_96 $$ effectType = attributes.getEffectType()-->Line_105 $$ BorderEffect.paintFoldedEffect(g, foldingXStart, position.y, foldingXEnd, getLineHeight(), effectColor, effectType)[ FD ]
Line_36 $$ while (!iterationState.atEnd() && !lIterator.atEnd()) -->Line_37 $$ int hEnd = iterationState.getEndOffset()[ CD ]
Line_41 $$ if (collapsedFolderAt == null) -->Line_67 $$ start = lEnd[ CD ]
Line_40 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)-->Line_76 $$ if (collapsedFolderAt != null) [ FD ]
Line_93 $$ currentColor = getForegroundColor()-->Line_79 $$ position.x = drawStringWithSoftWraps(g, chars, collapsedFolderAt.getStartOffset(), collapsedFolderAt.getStartOffset(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_101 $$ FoldRegion collapsedFolderAt = iterationState.getCurrentFold()-->Line_102 $$ if (collapsedFolderAt != null) [ FD ]
Line_76 $$ if (collapsedFolderAt != null) -->Line_82 $$ position.x = drawString(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, PAINT_NO_WHITESPACE)[ CD ]
Line_8 $$ int start = clipStartOffset-->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_29 $$ Color effectColor = attributes.getEffectColor()-->Line_82 $$ position.x = drawString(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, PAINT_NO_WHITESPACE)[ FD ]
Line_34 $$ LineWhitespacePaintingStrategy context = new LineWhitespacePaintingStrategy()-->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_9 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_90 $$ attributes = iterationState.getMergedAttributes()-->Line_95 $$ effectColor = attributes.getEffectColor()[ FD ]
Line_25 $$ Color currentColor = attributes.getForegroundColor()-->Line_82 $$ position.x = drawString(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, PAINT_NO_WHITESPACE)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_8 $$ int start = clipStartOffset[ CD ]
Line_37 $$ int hEnd = iterationState.getEndOffset()-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_8 $$ int start = clipStartOffset-->Line_40 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)[ FD ]
Line_51 $$ final String text = info.getText()-->Line_52 $$ additionalText += text[ FD ]
Line_27 $$ currentColor = getForegroundColor()-->Line_79 $$ position.x = drawStringWithSoftWraps(g, chars, collapsedFolderAt.getStartOffset(), collapsedFolderAt.getStartOffset(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_18 $$ LineIterator lIterator = createLineIterator()-->Line_35 $$ context.update(chars, lIterator)[ FD ]
Line_9 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_82 $$ position.x = drawString(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, PAINT_NO_WHITESPACE)[ FD ]
Line_38 $$ int lEnd = lIterator.getEnd()-->Line_67 $$ start = lEnd[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_101 $$ FoldRegion collapsedFolderAt = iterationState.getCurrentFold()[ CD ]
Line_41 $$ if (collapsedFolderAt == null) -->Line_44 $$ if (myProject != null && file != null && !isOneLineMode()) [ CD ]
Line_23 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_36 $$ while (!iterationState.atEnd() && !lIterator.atEnd()) [ FD ]
Line_97 $$ fontType = attributes.getFontType()-->Line_104 $$ int foldingXEnd = drawStringWithSoftWraps(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, PAINT_NO_WHITESPACE)[ FD ]
Line_25 $$ Color currentColor = attributes.getForegroundColor()-->Line_79 $$ position.x = drawStringWithSoftWraps(g, chars, collapsedFolderAt.getStartOffset(), collapsedFolderAt.getStartOffset(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_25 $$ Color currentColor = attributes.getForegroundColor()-->Line_93 $$ currentColor = getForegroundColor()[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_105 $$ BorderEffect.paintFoldedEffect(g, foldingXStart, position.y, foldingXEnd, getLineHeight(), effectColor, effectType)[ FD ]
Line_31 $$ int fontType = attributes.getFontType()-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_39 $$ if (hEnd >= lEnd) -->Line_97 $$ fontType = attributes.getFontType()[ CD ]
Line_31 $$ int fontType = attributes.getFontType()-->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_25 $$ Color currentColor = attributes.getForegroundColor()-->Line_32 $$ g.setColor(currentColor)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_35 $$ context.update(chars, lIterator)[ CD ]
Line_29 $$ Color effectColor = attributes.getEffectColor()-->Line_79 $$ position.x = drawStringWithSoftWraps(g, chars, collapsedFolderAt.getStartOffset(), collapsedFolderAt.getStartOffset(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_41 $$ if (collapsedFolderAt == null) -->Line_62 $$ position.x = 0[ CD ]
Line_29 $$ Color effectColor = attributes.getEffectColor()-->Line_95 $$ effectColor = attributes.getEffectColor()[ FD ]
Line_31 $$ int fontType = attributes.getFontType()-->Line_82 $$ position.x = drawString(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, PAINT_NO_WHITESPACE)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_29 $$ Color effectColor = attributes.getEffectColor()[ CD ]
Line_104 $$ int foldingXEnd = drawStringWithSoftWraps(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, PAINT_NO_WHITESPACE)-->Line_105 $$ BorderEffect.paintFoldedEffect(g, foldingXStart, position.y, foldingXEnd, getLineHeight(), effectColor, effectType)[ FD ]
Line_40 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)-->Line_79 $$ position.x = drawStringWithSoftWraps(g, chars, collapsedFolderAt.getStartOffset(), collapsedFolderAt.getStartOffset(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_33 $$ CharSequence chars = myDocument.getImmutableCharSequence()-->Line_79 $$ position.x = drawStringWithSoftWraps(g, chars, collapsedFolderAt.getStartOffset(), collapsedFolderAt.getStartOffset(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_24 $$ TextAttributes attributes = iterationState.getMergedAttributes()-->Line_30 $$ EffectType effectType = attributes.getEffectType()[ FD ]
Line_18 $$ LineIterator lIterator = createLineIterator()-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_38 $$ int lEnd = lIterator.getEnd()-->Line_39 $$ if (hEnd >= lEnd) [ FD ]
Line_29 $$ Color effectColor = attributes.getEffectColor()-->Line_105 $$ BorderEffect.paintFoldedEffect(g, foldingXStart, position.y, foldingXEnd, getLineHeight(), effectColor, effectType)[ FD ]
Line_30 $$ EffectType effectType = attributes.getEffectType()-->Line_105 $$ BorderEffect.paintFoldedEffect(g, foldingXStart, position.y, foldingXEnd, getLineHeight(), effectColor, effectType)[ FD ]
Line_34 $$ LineWhitespacePaintingStrategy context = new LineWhitespacePaintingStrategy()-->Line_53 $$ position.x = drawString(g, text, 0, text.length(), position, clip, info.getEffectColor() == null ? effectColor : info.getEffectColor(), info.getEffectType() == null ? effectType : info.getEffectType(), info.getFontType(), info.getColor() == null ? currentColor : info.getColor(), context)[ FD ]
Line_30 $$ EffectType effectType = attributes.getEffectType()-->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_37 $$ int hEnd = iterationState.getEndOffset()-->Line_39 $$ if (hEnd >= lEnd) [ FD ]
Line_50 $$ for (LineExtensionInfo info : extensions) -->Line_51 $$ final String text = info.getText()[ FD ]
Line_97 $$ fontType = attributes.getFontType()-->Line_79 $$ position.x = drawStringWithSoftWraps(g, chars, collapsedFolderAt.getStartOffset(), collapsedFolderAt.getStartOffset(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_34 $$ LineWhitespacePaintingStrategy context = new LineWhitespacePaintingStrategy()-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_93 $$ currentColor = getForegroundColor()-->Line_92 $$ if (currentColor == null) [ FD ]
Line_23 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_24 $$ TextAttributes attributes = iterationState.getMergedAttributes()[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_30 $$ EffectType effectType = attributes.getEffectType()[ CD ]
Line_18 $$ LineIterator lIterator = createLineIterator()-->Line_72 $$ context.update(chars, lIterator)[ FD ]
Line_24 $$ TextAttributes attributes = iterationState.getMergedAttributes()-->Line_95 $$ effectColor = attributes.getEffectColor()[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_24 $$ TextAttributes attributes = iterationState.getMergedAttributes()[ CD ]
Line_41 $$ if (collapsedFolderAt == null) -->Line_43 $$ final VirtualFile file = getVirtualFile()[ CD ]
Line_9 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_90 $$ attributes = iterationState.getMergedAttributes()-->Line_97 $$ fontType = attributes.getFontType()[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_19 $$ lIterator.start(start)[ CD ]
Line_33 $$ CharSequence chars = myDocument.getImmutableCharSequence()-->Line_42 $$ drawStringWithSoftWraps(g, chars, start, lEnd - lIterator.getSeparatorLength(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_30 $$ EffectType effectType = attributes.getEffectType()-->Line_96 $$ effectType = attributes.getEffectType()[ FD ]
Line_27 $$ currentColor = getForegroundColor()-->Line_93 $$ currentColor = getForegroundColor()[ FD ]
Line_23 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_101 $$ FoldRegion collapsedFolderAt = iterationState.getCurrentFold()[ FD ]
Line_25 $$ Color currentColor = attributes.getForegroundColor()-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_96 $$ effectType = attributes.getEffectType()-->Line_104 $$ int foldingXEnd = drawStringWithSoftWraps(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, PAINT_NO_WHITESPACE)[ FD ]
Line_30 $$ EffectType effectType = attributes.getEffectType()-->Line_104 $$ int foldingXEnd = drawStringWithSoftWraps(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, PAINT_NO_WHITESPACE)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_5 $$ int lineHeight = getLineHeight()[ CD ]
Line_102 $$ if (collapsedFolderAt != null) -->Line_104 $$ int foldingXEnd = drawStringWithSoftWraps(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, PAINT_NO_WHITESPACE)[ CD ]
Line_92 $$ if (currentColor == null) -->Line_93 $$ currentColor = getForegroundColor()[ CD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_32 $$ g.setColor(currentColor)[ CD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_11 $$ position.x = drawStringWithSoftWraps(g, new CharArrayCharSequence(myPrefixText), 0, myPrefixText.length, position, clip, myPrefixAttributes.getEffectColor(), myPrefixAttributes.getEffectType(), myPrefixAttributes.getFontType(), myPrefixAttributes.getForegroundColor(), -1, PAINT_NO_WHITESPACE)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_36 $$ while (!iterationState.atEnd() && !lIterator.atEnd()) [ CD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_79 $$ position.x = drawStringWithSoftWraps(g, chars, collapsedFolderAt.getStartOffset(), collapsedFolderAt.getStartOffset(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_93 $$ currentColor = getForegroundColor()-->Line_104 $$ int foldingXEnd = drawStringWithSoftWraps(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, PAINT_NO_WHITESPACE)[ FD ]
Line_13 $$ if (startLine >= myDocument.getLineCount() || startLine < 0) -->Line_14 $$ if (position.x > 0)[ CD ]
Line_18 $$ LineIterator lIterator = createLineIterator()-->Line_19 $$ lIterator.start(start)[ FD ]
Line_23 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_75 $$ FoldRegion collapsedFolderAt = iterationState.getCurrentFold()[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_20 $$ if (lIterator.atEnd()) [ CD ]
Line_102 $$ if (collapsedFolderAt != null) -->Line_103 $$ int foldingXStart = position.x[ CD ]
Line_31 $$ int fontType = attributes.getFontType()-->Line_104 $$ int foldingXEnd = drawStringWithSoftWraps(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, PAINT_NO_WHITESPACE)[ FD ]
Line_25 $$ Color currentColor = attributes.getForegroundColor()-->Line_104 $$ int foldingXEnd = drawStringWithSoftWraps(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, PAINT_NO_WHITESPACE)[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_108 $$ final SoftWrap softWrap = mySoftWrapModel.getSoftWrap(clipEndOffset)[ CD ]
Line_67 $$ start = lEnd-->Line_98 $$ start = iterationState.getStartOffset()[ FD ]
Line_45 $$ int offset = position.x-->Line_60 $$ myLinePaintersWidth = Math.max(myLinePaintersWidth, offset)[ FD ]
Line_91 $$ currentColor = attributes.getForegroundColor()-->Line_104 $$ int foldingXEnd = drawStringWithSoftWraps(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, PAINT_NO_WHITESPACE)[ FD ]
Line_95 $$ effectColor = attributes.getEffectColor()-->Line_104 $$ int foldingXEnd = drawStringWithSoftWraps(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, PAINT_NO_WHITESPACE)[ FD ]
Line_24 $$ TextAttributes attributes = iterationState.getMergedAttributes()-->Line_29 $$ Color effectColor = attributes.getEffectColor()[ FD ]
Line_33 $$ CharSequence chars = myDocument.getImmutableCharSequence()-->Line_72 $$ context.update(chars, lIterator)[ FD ]
Line_39 $$ if (hEnd >= lEnd) -->Line_75 $$ FoldRegion collapsedFolderAt = iterationState.getCurrentFold()[ CD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_25 $$ Color currentColor = attributes.getForegroundColor()[ CD ]
Line_76 $$ if (collapsedFolderAt != null) -->Line_77 $$ SoftWrap softWrap = mySoftWrapModel.getSoftWrap(collapsedFolderAt.getStartOffset())[ CD ]
Line_30 $$ EffectType effectType = attributes.getEffectType()-->Line_87 $$ position.x = drawStringWithSoftWraps(g, chars, start, Math.min(hEnd, lEnd - lIterator.getSeparatorLength()), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_9 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_104 $$ int foldingXEnd = drawStringWithSoftWraps(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, PAINT_NO_WHITESPACE)[ FD ]
Line_103 $$ int foldingXStart = position.x-->Line_105 $$ BorderEffect.paintFoldedEffect(g, foldingXStart, position.y, foldingXEnd, getLineHeight(), effectColor, effectType)[ FD ]
Line_76 $$ if (collapsedFolderAt != null) -->Line_78 $$ if (softWrap != null) [ CD ]
Line_96 $$ effectType = attributes.getEffectType()-->Line_82 $$ position.x = drawString(g, collapsedFolderAt.getPlaceholderText(), position, clip, effectColor, effectType, fontType, currentColor, PAINT_NO_WHITESPACE)[ FD ]
Line_25 $$ Color currentColor = attributes.getForegroundColor()-->Line_27 $$ currentColor = getForegroundColor()[ FD ]
Line_31 $$ int fontType = attributes.getFontType()-->Line_79 $$ position.x = drawStringWithSoftWraps(g, chars, collapsedFolderAt.getStartOffset(), collapsedFolderAt.getStartOffset(), position, clip, effectColor, effectType, fontType, currentColor, clipStartOffset, context)[ FD ]
Line_31 $$ int fontType = attributes.getFontType()-->Line_97 $$ fontType = attributes.getFontType()[ FD ]
Line_39 $$ if (hEnd >= lEnd) -->Line_91 $$ currentColor = attributes.getForegroundColor()[ CD ]
Line_44 $$ if (myProject != null && file != null && !isOneLineMode()) -->Line_60 $$ myLinePaintersWidth = Math.max(myLinePaintersWidth, offset)[ CD ]
Line_51 $$ final String text = info.getText()-->Line_53 $$ position.x = drawString(g, text, 0, text.length(), position, clip, info.getEffectColor() == null ? effectColor : info.getEffectColor(), info.getEffectType() == null ? effectType : info.getEffectType(), info.getFontType(), info.getColor() == null ? currentColor : info.getColor(), context)[ FD ]
Line_46 $$ String additionalText = ""-->Line_57 $$ for (char ch : additionalText.toCharArray()) [ FD ]
Line_34 $$ LineWhitespacePaintingStrategy context = new LineWhitespacePaintingStrategy()-->Line_72 $$ context.update(chars, lIterator)[ FD ]
Line_8 $$ int start = clipStartOffset-->Line_98 $$ start = iterationState.getStartOffset()[ FD ]
Line_2 $$ private void paintText(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, int clipStartOffset, int clipEndOffset) -->Line_109 $$ if (softWrap != null) [ CD ]
