Line_13 $$ int currFirst = lineFirstChar-->Line_37 $$ while ((currFirst <= lineLastChar) && (Character.isWhitespace(aLine.charAt(currFirst)))) [ FD ]
Line_10 $$ String aLine = myLines[i]-->Line_20 $$ int currLast = calculateLastVisibleChar(aLine, printableWidth, currFirst, lineLastChar)[ FD ]
Line_23 $$ if (!Character.isWhitespace(aLine.charAt(currChar))) -->Line_24 $$ while (currChar >= currFirst) [ CD ]
Line_13 $$ int currFirst = lineFirstChar-->Line_19 $$ while (currFirst <= lineLastChar) [ FD ]
Line_19 $$ while (currFirst <= lineLastChar) -->Line_37 $$ while ((currFirst <= lineLastChar) && (Character.isWhitespace(aLine.charAt(currFirst)))) [ CD ]
Line_12 $$ int lineLastChar = aLine.length() - 1-->Line_19 $$ while (currFirst <= lineLastChar) [ FD ]
Line_13 $$ int currFirst = lineFirstChar-->Line_35 $$ myWraps.add(aLine.substring(currFirst, currLast + 1))[ FD ]
Line_19 $$ while (currFirst <= lineLastChar) -->Line_40 $$ result++[ CD ]
Line_7 $$ int result = 0-->Line_17 $$ result++[ FD ]
Line_36 $$ currFirst = currLast + 1-->Line_30 $$ if (currChar > currFirst) [ FD ]
Line_22 $$ int currChar = currLast + 1-->Line_25 $$ if (Character.isWhitespace(aLine.charAt(currChar))) [ FD ]
Line_4 $$ if (myTooSmall) -->Line_5 $$ return -1[ CD ]
Line_9 $$ for (int i = 0; i < myLines.length; i++) -->Line_14 $$ int printableWidth = width - myTextInsets.left - myTextInsets.right[ CD ]
Line_13 $$ int currFirst = lineFirstChar-->Line_20 $$ int currLast = calculateLastVisibleChar(aLine, printableWidth, currFirst, lineLastChar)[ FD ]
Line_7 $$ int result = 0-->Line_40 $$ result++[ FD ]
Line_10 $$ String aLine = myLines[i]-->Line_37 $$ while ((currFirst <= lineLastChar) && (Character.isWhitespace(aLine.charAt(currFirst)))) [ FD ]
Line_9 $$ for (int i = 0; i < myLines.length; i++) -->Line_13 $$ int currFirst = lineFirstChar[ CD ]
Line_10 $$ String aLine = myLines[i]-->Line_15 $$ if (aLine.length() == 0) [ FD ]
Line_19 $$ while (currFirst <= lineLastChar) -->Line_20 $$ int currLast = calculateLastVisibleChar(aLine, printableWidth, currFirst, lineLastChar)[ CD ]
Line_13 $$ int currFirst = lineFirstChar-->Line_30 $$ if (currChar > currFirst) [ FD ]
Line_2 $$ private int calculateWraps(int width) -->Line_44 $$ return result[ CD ]
Line_31 $$ currLast = currChar-->Line_36 $$ currFirst = currLast + 1[ FD ]
Line_36 $$ currFirst = currLast + 1-->Line_37 $$ while ((currFirst <= lineLastChar) && (Character.isWhitespace(aLine.charAt(currFirst)))) [ FD ]
Line_13 $$ int currFirst = lineFirstChar-->Line_24 $$ while (currChar >= currFirst) [ FD ]
Line_22 $$ int currChar = currLast + 1-->Line_23 $$ if (!Character.isWhitespace(aLine.charAt(currChar))) [ FD ]
Line_12 $$ int lineLastChar = aLine.length() - 1-->Line_20 $$ int currLast = calculateLastVisibleChar(aLine, printableWidth, currFirst, lineLastChar)[ FD ]
Line_15 $$ if (aLine.length() == 0) -->Line_16 $$ myWraps.add(aLine)[ CD ]
Line_21 $$ if (currLast < lineLastChar) -->Line_23 $$ if (!Character.isWhitespace(aLine.charAt(currChar))) [ CD ]
Line_24 $$ while (currChar >= currFirst) -->Line_25 $$ if (Character.isWhitespace(aLine.charAt(currChar))) [ CD ]
Line_10 $$ String aLine = myLines[i]-->Line_23 $$ if (!Character.isWhitespace(aLine.charAt(currChar))) [ FD ]
Line_22 $$ int currChar = currLast + 1-->Line_31 $$ currLast = currChar[ FD ]
Line_10 $$ String aLine = myLines[i]-->Line_25 $$ if (Character.isWhitespace(aLine.charAt(currChar))) [ FD ]
Line_30 $$ if (currChar > currFirst) -->Line_31 $$ currLast = currChar[ CD ]
Line_9 $$ for (int i = 0; i < myLines.length; i++) -->Line_15 $$ if (aLine.length() == 0) [ CD ]
Line_9 $$ for (int i = 0; i < myLines.length; i++) -->Line_11 $$ int lineFirstChar = 0[ CD ]
Line_9 $$ for (int i = 0; i < myLines.length; i++) -->Line_12 $$ int lineLastChar = aLine.length() - 1[ CD ]
Line_9 $$ for (int i = 0; i < myLines.length; i++) -->Line_10 $$ String aLine = myLines[i][ CD ]
Line_14 $$ int printableWidth = width - myTextInsets.left - myTextInsets.right-->Line_20 $$ int currLast = calculateLastVisibleChar(aLine, printableWidth, currFirst, lineLastChar)[ FD ]
Line_22 $$ int currChar = currLast + 1-->Line_28 $$ currChar--[ FD ]
Line_36 $$ currFirst = currLast + 1-->Line_38 $$ currFirst++[ FD ]
Line_22 $$ int currChar = currLast + 1-->Line_30 $$ if (currChar > currFirst) [ FD ]
Line_19 $$ while (currFirst <= lineLastChar) -->Line_36 $$ currFirst = currLast + 1[ CD ]
Line_10 $$ String aLine = myLines[i]-->Line_16 $$ myWraps.add(aLine)[ FD ]
Line_13 $$ int currFirst = lineFirstChar-->Line_36 $$ currFirst = currLast + 1[ FD ]
Line_37 $$ while ((currFirst <= lineLastChar) && (Character.isWhitespace(aLine.charAt(currFirst)))) -->Line_38 $$ currFirst++[ CD ]
Line_20 $$ int currLast = calculateLastVisibleChar(aLine, printableWidth, currFirst, lineLastChar)-->Line_21 $$ if (currLast < lineLastChar) [ FD ]
Line_20 $$ int currLast = calculateLastVisibleChar(aLine, printableWidth, currFirst, lineLastChar)-->Line_31 $$ currLast = currChar[ FD ]
Line_13 $$ int currFirst = lineFirstChar-->Line_38 $$ currFirst++[ FD ]
Line_10 $$ String aLine = myLines[i]-->Line_35 $$ myWraps.add(aLine.substring(currFirst, currLast + 1))[ FD ]
Line_10 $$ String aLine = myLines[i]-->Line_12 $$ int lineLastChar = aLine.length() - 1[ FD ]
Line_36 $$ currFirst = currLast + 1-->Line_19 $$ while (currFirst <= lineLastChar) [ FD ]
Line_15 $$ if (aLine.length() == 0) -->Line_19 $$ while (currFirst <= lineLastChar) [ CD ]
Line_19 $$ while (currFirst <= lineLastChar) -->Line_35 $$ myWraps.add(aLine.substring(currFirst, currLast + 1))[ CD ]
Line_15 $$ if (aLine.length() == 0) -->Line_17 $$ result++[ CD ]
Line_31 $$ currLast = currChar-->Line_21 $$ if (currLast < lineLastChar) [ FD ]
Line_36 $$ currFirst = currLast + 1-->Line_20 $$ int currLast = calculateLastVisibleChar(aLine, printableWidth, currFirst, lineLastChar)[ FD ]
Line_36 $$ currFirst = currLast + 1-->Line_35 $$ myWraps.add(aLine.substring(currFirst, currLast + 1))[ FD ]
Line_2 $$ private int calculateWraps(int width) -->Line_4 $$ if (myTooSmall) [ CD ]
Line_20 $$ int currLast = calculateLastVisibleChar(aLine, printableWidth, currFirst, lineLastChar)-->Line_36 $$ currFirst = currLast + 1[ FD ]
Line_22 $$ int currChar = currLast + 1-->Line_24 $$ while (currChar >= currFirst) [ FD ]
Line_19 $$ while (currFirst <= lineLastChar) -->Line_21 $$ if (currLast < lineLastChar) [ CD ]
Line_23 $$ if (!Character.isWhitespace(aLine.charAt(currChar))) -->Line_30 $$ if (currChar > currFirst) [ CD ]
Line_2 $$ private int calculateWraps(int width) -->Line_7 $$ int result = 0[ CD ]
Line_2 $$ private int calculateWraps(int width) -->Line_9 $$ for (int i = 0; i < myLines.length; i++) [ CD ]
Line_12 $$ int lineLastChar = aLine.length() - 1-->Line_21 $$ if (currLast < lineLastChar) [ FD ]
Line_24 $$ while (currChar >= currFirst) -->Line_28 $$ currChar--[ CD ]
Line_21 $$ if (currLast < lineLastChar) -->Line_22 $$ int currChar = currLast + 1[ CD ]
