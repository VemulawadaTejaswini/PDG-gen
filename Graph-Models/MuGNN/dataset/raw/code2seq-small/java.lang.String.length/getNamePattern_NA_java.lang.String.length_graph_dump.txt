Line_4 $$ int lastSeparatorOccurrence = 0-->Line_13 $$ return pattern.substring(lastSeparatorOccurrence)[ FD ]
Line_2 $$ public static String getNamePattern(ChooseByNameModel model, String pattern) -->Line_7 $$ if (idx == pattern.length() - 1) [ FD ]
Line_5 $$ for (String separator : separators) -->Line_11 $$ lastSeparatorOccurrence = Math.max(lastSeparatorOccurrence, idx == -1 ? idx : idx + separator.length())[ FD ]
Line_2 $$ public static String getNamePattern(ChooseByNameModel model, String pattern) -->Line_13 $$ return pattern.substring(lastSeparatorOccurrence)[ CD ]
Line_4 $$ int lastSeparatorOccurrence = 0-->Line_11 $$ lastSeparatorOccurrence = Math.max(lastSeparatorOccurrence, idx == -1 ? idx : idx + separator.length())[ FD ]
Line_2 $$ public static String getNamePattern(ChooseByNameModel model, String pattern) -->Line_3 $$ final String[] separators = model.getSeparators()[ FD ]
Line_2 $$ public static String getNamePattern(ChooseByNameModel model, String pattern) -->Line_4 $$ int lastSeparatorOccurrence = 0[ CD ]
Line_5 $$ for (String separator : separators) -->Line_6 $$ int idx = pattern.lastIndexOf(separator)[ FD ]
Line_2 $$ public static String getNamePattern(ChooseByNameModel model, String pattern) -->Line_3 $$ final String[] separators = model.getSeparators()[ CD ]
Line_2 $$ public static String getNamePattern(ChooseByNameModel model, String pattern) -->Line_6 $$ int idx = pattern.lastIndexOf(separator)[ FD ]
Line_6 $$ int idx = pattern.lastIndexOf(separator)-->Line_7 $$ if (idx == pattern.length() - 1) [ FD ]
Line_2 $$ public static String getNamePattern(ChooseByNameModel model, String pattern) -->Line_13 $$ return pattern.substring(lastSeparatorOccurrence)[ FD ]
Line_11 $$ lastSeparatorOccurrence = Math.max(lastSeparatorOccurrence, idx == -1 ? idx : idx + separator.length())-->Line_13 $$ return pattern.substring(lastSeparatorOccurrence)[ FD ]
