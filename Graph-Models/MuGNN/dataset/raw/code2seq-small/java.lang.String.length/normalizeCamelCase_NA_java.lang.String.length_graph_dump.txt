Line_21 $$ upperCase = true-->Line_18 $$ if (upperCase && nextUpperCase) [ FD ]
Line_5 $$ for (int i = 0; i < s.length(); i++) -->Line_6 $$ char c = s.charAt(i)[ FD ]
Line_10 $$ if ((i > 0) && Character.isUpperCase(c)) -->Line_18 $$ if (upperCase && nextUpperCase) [ CD ]
Line_10 $$ if ((i > 0) && Character.isUpperCase(c)) -->Line_23 $$ upperCase = false[ CD ]
Line_5 $$ for (int i = 0; i < s.length(); i++) -->Line_19 $$ sb.setCharAt(i, Character.toLowerCase(c))[ FD ]
Line_11 $$ boolean nextUpperCase = true-->Line_15 $$ nextUpperCase = false[ FD ]
Line_15 $$ nextUpperCase = false-->Line_18 $$ if (upperCase && nextUpperCase) [ FD ]
Line_6 $$ char c = s.charAt(i)-->Line_10 $$ if ((i > 0) && Character.isUpperCase(c)) [ FD ]
Line_21 $$ upperCase = true-->Line_23 $$ upperCase = false[ FD ]
Line_12 $$ if (i < (s.length() - 1)) -->Line_13 $$ char nextChar = s.charAt(i + 1)[ CD ]
Line_23 $$ upperCase = false-->Line_18 $$ if (upperCase && nextUpperCase) [ FD ]
Line_2 $$ public static String normalizeCamelCase(String s, boolean normalizeInnerTerms) -->Line_6 $$ char c = s.charAt(i)[ FD ]
Line_2 $$ public static String normalizeCamelCase(String s, boolean normalizeInnerTerms) -->Line_12 $$ if (i < (s.length() - 1)) [ FD ]
Line_4 $$ boolean upperCase = false-->Line_18 $$ if (upperCase && nextUpperCase) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(s)-->Line_8 $$ return sb.toString()[ FD ]
Line_12 $$ if (i < (s.length() - 1)) -->Line_14 $$ if ((nextChar != CharPool.PERIOD) && !Character.isUpperCase(nextChar)) [ CD ]
Line_2 $$ public static String normalizeCamelCase(String s, boolean normalizeInnerTerms) -->Line_4 $$ boolean upperCase = false[ CD ]
Line_2 $$ public static String normalizeCamelCase(String s, boolean normalizeInnerTerms) -->Line_13 $$ char nextChar = s.charAt(i + 1)[ FD ]
Line_11 $$ boolean nextUpperCase = true-->Line_18 $$ if (upperCase && nextUpperCase) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(s)-->Line_26 $$ return sb.toString()[ FD ]
Line_5 $$ for (int i = 0; i < s.length(); i++) -->Line_10 $$ if ((i > 0) && Character.isUpperCase(c)) [ CD ]
Line_7 $$ if (!normalizeInnerTerms && (c == CharPool.PERIOD)) -->Line_8 $$ return sb.toString()[ CD ]
Line_5 $$ for (int i = 0; i < s.length(); i++) -->Line_6 $$ char c = s.charAt(i)[ CD ]
Line_2 $$ public static String normalizeCamelCase(String s, boolean normalizeInnerTerms) -->Line_5 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_10 $$ if ((i > 0) && Character.isUpperCase(c)) -->Line_12 $$ if (i < (s.length() - 1)) [ CD ]
Line_6 $$ char c = s.charAt(i)-->Line_19 $$ sb.setCharAt(i, Character.toLowerCase(c))[ FD ]
Line_4 $$ boolean upperCase = false-->Line_21 $$ upperCase = true[ FD ]
Line_2 $$ public static String normalizeCamelCase(String s, boolean normalizeInnerTerms) -->Line_26 $$ return sb.toString()[ CD ]
Line_14 $$ if ((nextChar != CharPool.PERIOD) && !Character.isUpperCase(nextChar)) -->Line_15 $$ nextUpperCase = false[ CD ]
Line_4 $$ boolean upperCase = false-->Line_23 $$ upperCase = false[ FD ]
Line_10 $$ if ((i > 0) && Character.isUpperCase(c)) -->Line_21 $$ upperCase = true[ CD ]
Line_2 $$ public static String normalizeCamelCase(String s, boolean normalizeInnerTerms) -->Line_7 $$ if (!normalizeInnerTerms && (c == CharPool.PERIOD)) [ FD ]
Line_13 $$ char nextChar = s.charAt(i + 1)-->Line_14 $$ if ((nextChar != CharPool.PERIOD) && !Character.isUpperCase(nextChar)) [ FD ]
Line_18 $$ if (upperCase && nextUpperCase) -->Line_19 $$ sb.setCharAt(i, Character.toLowerCase(c))[ CD ]
Line_10 $$ if ((i > 0) && Character.isUpperCase(c)) -->Line_11 $$ boolean nextUpperCase = true[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(s)-->Line_19 $$ sb.setCharAt(i, Character.toLowerCase(c))[ FD ]
Line_2 $$ public static String normalizeCamelCase(String s, boolean normalizeInnerTerms) -->Line_5 $$ for (int i = 0; i < s.length(); i++) [ CD ]
Line_2 $$ public static String normalizeCamelCase(String s, boolean normalizeInnerTerms) -->Line_3 $$ StringBuilder sb = new StringBuilder(s)[ CD ]
Line_5 $$ for (int i = 0; i < s.length(); i++) -->Line_7 $$ if (!normalizeInnerTerms && (c == CharPool.PERIOD)) [ CD ]
Line_5 $$ for (int i = 0; i < s.length(); i++) -->Line_12 $$ if (i < (s.length() - 1)) [ FD ]
