Line_28 $$ for (DiffChange change : myDiffChanges) -->Line_29 $$ setupHighlighting(change, Side.LEFT)[ FD ]
Line_8 $$ String before = record.getBefore()-->Line_23 $$ change.setFragments(createEverythingChanged(before.length(), after.length(), StringUtil.countNewLines(before) + 1, StringUtil.countNewLines(after) + 1))[ FD ]
Line_20 $$ ComparisonManager manager = ComparisonManager.getInstance()-->Line_21 $$ change.setFragments(manager.squash(manager.compareLinesInner(before, after, ComparisonPolicy.DEFAULT, indicator)))[ FD ]
Line_6 $$ for (DiffChange change : myDiffChanges) -->Line_7 $$ PropertyRecord record = change.getRecord()[ FD ]
Line_2 $$ protected Runnable performRediff(@NotNull ProgressIndicator indicator) -->Line_3 $$ if (!myFirstRediff)[ CD ]
Line_8 $$ String before = record.getBefore()-->Line_11 $$ if (before == null) [ FD ]
Line_9 $$ String after = record.getAfter()-->Line_15 $$ if (after == null) [ FD ]
Line_9 $$ String after = record.getAfter()-->Line_21 $$ change.setFragments(manager.squash(manager.compareLinesInner(before, after, ComparisonPolicy.DEFAULT, indicator)))[ FD ]
Line_6 $$ for (DiffChange change : myDiffChanges) -->Line_16 $$ change.setFragments(createEverythingChanged(before.length(), 0, StringUtil.countNewLines(before) + 1, 0))[ FD ]
Line_11 $$ if (before == null) -->Line_12 $$ change.setFragments(createEverythingChanged(0, after.length(), 0, StringUtil.countNewLines(after) + 1))[ CD ]
Line_8 $$ String before = record.getBefore()-->Line_16 $$ change.setFragments(createEverythingChanged(before.length(), 0, StringUtil.countNewLines(before) + 1, 0))[ FD ]
Line_3 $$ if (!myFirstRediff)-->Line_4 $$ return new EmptyRunnable()[ CD ]
Line_7 $$ PropertyRecord record = change.getRecord()-->Line_9 $$ String after = record.getAfter()[ FD ]
Line_6 $$ for (DiffChange change : myDiffChanges) -->Line_29 $$ setupHighlighting(change, Side.LEFT)[ FD ]
Line_2 $$ protected Runnable performRediff(@NotNull ProgressIndicator indicator) -->Line_26 $$ return new Runnable() [ CD ]
Line_28 $$ for (DiffChange change : myDiffChanges) -->Line_30 $$ setupHighlighting(change, Side.RIGHT)[ FD ]
Line_9 $$ String after = record.getAfter()-->Line_12 $$ change.setFragments(createEverythingChanged(0, after.length(), 0, StringUtil.countNewLines(after) + 1))[ FD ]
Line_6 $$ for (DiffChange change : myDiffChanges) -->Line_30 $$ setupHighlighting(change, Side.RIGHT)[ FD ]
Line_6 $$ for (DiffChange change : myDiffChanges) -->Line_12 $$ change.setFragments(createEverythingChanged(0, after.length(), 0, StringUtil.countNewLines(after) + 1))[ FD ]
Line_6 $$ for (DiffChange change : myDiffChanges) -->Line_21 $$ change.setFragments(manager.squash(manager.compareLinesInner(before, after, ComparisonPolicy.DEFAULT, indicator)))[ FD ]
Line_8 $$ String before = record.getBefore()-->Line_21 $$ change.setFragments(manager.squash(manager.compareLinesInner(before, after, ComparisonPolicy.DEFAULT, indicator)))[ FD ]
Line_9 $$ String after = record.getAfter()-->Line_23 $$ change.setFragments(createEverythingChanged(before.length(), after.length(), StringUtil.countNewLines(before) + 1, StringUtil.countNewLines(after) + 1))[ FD ]
Line_6 $$ for (DiffChange change : myDiffChanges) -->Line_23 $$ change.setFragments(createEverythingChanged(before.length(), after.length(), StringUtil.countNewLines(before) + 1, StringUtil.countNewLines(after) + 1))[ FD ]
Line_15 $$ if (after == null) -->Line_16 $$ change.setFragments(createEverythingChanged(before.length(), 0, StringUtil.countNewLines(before) + 1, 0))[ CD ]
Line_2 $$ protected Runnable performRediff(@NotNull ProgressIndicator indicator) -->Line_21 $$ change.setFragments(manager.squash(manager.compareLinesInner(before, after, ComparisonPolicy.DEFAULT, indicator)))[ FD ]
Line_7 $$ PropertyRecord record = change.getRecord()-->Line_8 $$ String before = record.getBefore()[ FD ]
