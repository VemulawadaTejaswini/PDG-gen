Line_4 $$ int width = getTextOffset()-->Line_10 $$ width += defFontMetrics.stringWidth(myText.substring(endIndex, hRegion.startOffset))[ FD ]
Line_8 $$ int endIndex = 0-->Line_11 $$ endIndex = hRegion.endOffset[ FD ]
Line_2 $$ public HighlightedRegion findRegionByX(int x) -->Line_3 $$ FontMetrics defFontMetrics = getFontMetrics(getFont())[ CD ]
Line_10 $$ width += defFontMetrics.stringWidth(myText.substring(endIndex, hRegion.startOffset))-->Line_17 $$ if (width > x)[ FD ]
Line_4 $$ int width = getTextOffset()-->Line_5 $$ if (width > x)[ FD ]
Line_2 $$ public HighlightedRegion findRegionByX(int x) -->Line_5 $$ if (width > x)[ FD ]
Line_10 $$ width += defFontMetrics.stringWidth(myText.substring(endIndex, hRegion.startOffset))-->Line_12 $$ if (width > x)[ FD ]
Line_14 $$ String text = getRegionText(hRegion)-->Line_16 $$ width += fontMetrics.stringWidth(text)[ FD ]
Line_10 $$ width += defFontMetrics.stringWidth(myText.substring(endIndex, hRegion.startOffset))-->Line_16 $$ width += fontMetrics.stringWidth(text)[ FD ]
Line_4 $$ int width = getTextOffset()-->Line_17 $$ if (width > x)[ FD ]
Line_9 $$ for (HighlightedRegion hRegion : myHighlightedRegions) -->Line_17 $$ if (width > x)[ FD ]
Line_2 $$ public HighlightedRegion findRegionByX(int x) -->Line_12 $$ if (width > x)[ FD ]
Line_7 $$ if (myText.length() != 0 && myHighlightedRegions.size() != 0) -->Line_8 $$ int endIndex = 0[ CD ]
Line_2 $$ public HighlightedRegion findRegionByX(int x) -->Line_17 $$ if (width > x)[ FD ]
Line_17 $$ if (width > x)-->Line_18 $$ return hRegion[ CD ]
Line_2 $$ public HighlightedRegion findRegionByX(int x) -->Line_21 $$ return null[ CD ]
Line_15 $$ FontMetrics fontMetrics = myFontMetrics.get(hRegion.textAttributes.getFontType())-->Line_16 $$ width += fontMetrics.stringWidth(text)[ FD ]
Line_2 $$ public HighlightedRegion findRegionByX(int x) -->Line_5 $$ if (width > x)[ CD ]
Line_9 $$ for (HighlightedRegion hRegion : myHighlightedRegions) -->Line_14 $$ String text = getRegionText(hRegion)[ FD ]
Line_4 $$ int width = getTextOffset()-->Line_12 $$ if (width > x)[ FD ]
Line_5 $$ if (width > x)-->Line_6 $$ return null[ CD ]
Line_3 $$ FontMetrics defFontMetrics = getFontMetrics(getFont())-->Line_10 $$ width += defFontMetrics.stringWidth(myText.substring(endIndex, hRegion.startOffset))[ FD ]
Line_8 $$ int endIndex = 0-->Line_10 $$ width += defFontMetrics.stringWidth(myText.substring(endIndex, hRegion.startOffset))[ FD ]
Line_16 $$ width += fontMetrics.stringWidth(text)-->Line_17 $$ if (width > x)[ FD ]
Line_4 $$ int width = getTextOffset()-->Line_16 $$ width += fontMetrics.stringWidth(text)[ FD ]
Line_2 $$ public HighlightedRegion findRegionByX(int x) -->Line_7 $$ if (myText.length() != 0 && myHighlightedRegions.size() != 0) [ CD ]
Line_2 $$ public HighlightedRegion findRegionByX(int x) -->Line_4 $$ int width = getTextOffset()[ CD ]
Line_12 $$ if (width > x)-->Line_13 $$ return null[ CD ]
