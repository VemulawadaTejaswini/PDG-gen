Line_2 $$ public VcsRevisionNumber parseRevisionNumber(@Nullable String revision, @Nullable FilePath path) throws VcsException -->Line_6 $$ String dateString = revision.substring(0, revision.indexOf("["))[ FD ]
Line_13 $$ VirtualFile root = GitUtil.getGitRoot(path)-->Line_14 $$ return GitRevisionNumber.resolve(myProject, root, revision)[ FD ]
Line_2 $$ public VcsRevisionNumber parseRevisionNumber(@Nullable String revision, @Nullable FilePath path) throws VcsException -->Line_3 $$ if (revision == null || revision.length() == 0)[ FD ]
Line_2 $$ public VcsRevisionNumber parseRevisionNumber(@Nullable String revision, @Nullable FilePath path) throws VcsException -->Line_14 $$ return GitRevisionNumber.resolve(myProject, root, revision)[ FD ]
Line_2 $$ public VcsRevisionNumber parseRevisionNumber(@Nullable String revision, @Nullable FilePath path) throws VcsException -->Line_7 $$ String rev = revision.substring(revision.indexOf("[") + 1, 40)[ FD ]
Line_2 $$ public VcsRevisionNumber parseRevisionNumber(@Nullable String revision, @Nullable FilePath path) throws VcsException -->Line_20 $$ return new GitRevisionNumber(revision)[ CD ]
Line_2 $$ public VcsRevisionNumber parseRevisionNumber(@Nullable String revision, @Nullable FilePath path) throws VcsException -->Line_5 $$ if (revision.length() > 40) [ FD ]
Line_5 $$ if (revision.length() > 40) -->Line_6 $$ String dateString = revision.substring(0, revision.indexOf("["))[ CD ]
Line_2 $$ public VcsRevisionNumber parseRevisionNumber(@Nullable String revision, @Nullable FilePath path) throws VcsException -->Line_11 $$ if (path != null) [ FD ]
Line_5 $$ if (revision.length() > 40) -->Line_7 $$ String rev = revision.substring(revision.indexOf("[") + 1, 40)[ CD ]
Line_5 $$ if (revision.length() > 40) -->Line_8 $$ Date d = new Date(Date.parse(dateString))[ CD ]
Line_6 $$ String dateString = revision.substring(0, revision.indexOf("["))-->Line_8 $$ Date d = new Date(Date.parse(dateString))[ FD ]
Line_2 $$ public VcsRevisionNumber parseRevisionNumber(@Nullable String revision, @Nullable FilePath path) throws VcsException -->Line_5 $$ if (revision.length() > 40) [ CD ]
Line_3 $$ if (revision == null || revision.length() == 0)-->Line_4 $$ return null[ CD ]
Line_5 $$ if (revision.length() > 40) -->Line_9 $$ return new GitRevisionNumber(rev, d)[ CD ]
Line_2 $$ public VcsRevisionNumber parseRevisionNumber(@Nullable String revision, @Nullable FilePath path) throws VcsException -->Line_3 $$ if (revision == null || revision.length() == 0)[ CD ]
Line_2 $$ public VcsRevisionNumber parseRevisionNumber(@Nullable String revision, @Nullable FilePath path) throws VcsException -->Line_13 $$ VirtualFile root = GitUtil.getGitRoot(path)[ FD ]
Line_2 $$ public VcsRevisionNumber parseRevisionNumber(@Nullable String revision, @Nullable FilePath path) throws VcsException -->Line_11 $$ if (path != null) [ CD ]
