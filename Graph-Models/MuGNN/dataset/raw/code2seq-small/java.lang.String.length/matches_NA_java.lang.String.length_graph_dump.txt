Line_10 $$ targetIdx = targetEnd-->Line_17 $$ if (target.substring(targetIdx).startsWith(tokens[tokenIdx])) [ FD ]
Line_8 $$ if ("*".equals(tokens[tokenIdx])) -->Line_9 $$ if (tokenIdx == (tokenEnd - 1)) [ CD ]
Line_2 $$ public boolean matches(final String target) -->Line_5 $$ int tokenIdx = 0[ CD ]
Line_18 $$ targetIdx += tokens[tokenIdx].length()-->Line_17 $$ if (target.substring(targetIdx).startsWith(tokens[tokenIdx])) [ FD ]
Line_2 $$ public boolean matches(final String target) -->Line_3 $$ int targetIdx = 0[ CD ]
Line_8 $$ if ("*".equals(tokens[tokenIdx])) -->Line_17 $$ if (target.substring(targetIdx).startsWith(tokens[tokenIdx])) [ CD ]
Line_18 $$ targetIdx += tokens[tokenIdx].length()-->Line_13 $$ targetIdx = target.indexOf(tokens[tokenIdx + 1], targetIdx)[ FD ]
Line_9 $$ if (tokenIdx == (tokenEnd - 1)) -->Line_14 $$ tokenIdx++[ CD ]
Line_13 $$ targetIdx = target.indexOf(tokens[tokenIdx + 1], targetIdx)-->Line_21 $$ targetIdx = -1[ FD ]
Line_4 $$ int targetEnd = target.length()-->Line_10 $$ targetIdx = targetEnd[ FD ]
Line_3 $$ int targetIdx = 0-->Line_13 $$ targetIdx = target.indexOf(tokens[tokenIdx + 1], targetIdx)[ FD ]
Line_3 $$ int targetIdx = 0-->Line_21 $$ targetIdx = -1[ FD ]
Line_3 $$ int targetIdx = 0-->Line_10 $$ targetIdx = targetEnd[ FD ]
Line_9 $$ if (tokenIdx == (tokenEnd - 1)) -->Line_13 $$ targetIdx = target.indexOf(tokens[tokenIdx + 1], targetIdx)[ CD ]
Line_2 $$ public boolean matches(final String target) -->Line_4 $$ int targetEnd = target.length()[ CD ]
Line_17 $$ if (target.substring(targetIdx).startsWith(tokens[tokenIdx])) -->Line_21 $$ targetIdx = -1[ CD ]
Line_5 $$ int tokenIdx = 0-->Line_14 $$ tokenIdx++[ FD ]
Line_5 $$ int tokenIdx = 0-->Line_11 $$ tokenIdx = tokenEnd[ FD ]
Line_18 $$ targetIdx += tokens[tokenIdx].length()-->Line_21 $$ targetIdx = -1[ FD ]
Line_21 $$ targetIdx = -1-->Line_13 $$ targetIdx = target.indexOf(tokens[tokenIdx + 1], targetIdx)[ FD ]
Line_10 $$ targetIdx = targetEnd-->Line_13 $$ targetIdx = target.indexOf(tokens[tokenIdx + 1], targetIdx)[ FD ]
Line_11 $$ tokenIdx = tokenEnd-->Line_14 $$ tokenIdx++[ FD ]
Line_5 $$ int tokenIdx = 0-->Line_9 $$ if (tokenIdx == (tokenEnd - 1)) [ FD ]
Line_9 $$ if (tokenIdx == (tokenEnd - 1)) -->Line_11 $$ tokenIdx = tokenEnd[ CD ]
Line_7 $$ while (tokenIdx < tokenEnd && targetIdx < targetEnd && targetIdx > -1) -->Line_8 $$ if ("*".equals(tokens[tokenIdx])) [ CD ]
Line_9 $$ if (tokenIdx == (tokenEnd - 1)) -->Line_10 $$ targetIdx = targetEnd[ CD ]
Line_11 $$ tokenIdx = tokenEnd-->Line_19 $$ tokenIdx++[ FD ]
Line_13 $$ targetIdx = target.indexOf(tokens[tokenIdx + 1], targetIdx)-->Line_18 $$ targetIdx += tokens[tokenIdx].length()[ FD ]
Line_21 $$ targetIdx = -1-->Line_17 $$ if (target.substring(targetIdx).startsWith(tokens[tokenIdx])) [ FD ]
Line_3 $$ int targetIdx = 0-->Line_18 $$ targetIdx += tokens[tokenIdx].length()[ FD ]
Line_6 $$ int tokenEnd = tokens.length-->Line_11 $$ tokenIdx = tokenEnd[ FD ]
Line_2 $$ public boolean matches(final String target) -->Line_6 $$ int tokenEnd = tokens.length[ CD ]
Line_3 $$ int targetIdx = 0-->Line_17 $$ if (target.substring(targetIdx).startsWith(tokens[tokenIdx])) [ FD ]
Line_2 $$ public boolean matches(final String target) -->Line_17 $$ if (target.substring(targetIdx).startsWith(tokens[tokenIdx])) [ FD ]
Line_5 $$ int tokenIdx = 0-->Line_19 $$ tokenIdx++[ FD ]
Line_17 $$ if (target.substring(targetIdx).startsWith(tokens[tokenIdx])) -->Line_19 $$ tokenIdx++[ CD ]
Line_11 $$ tokenIdx = tokenEnd-->Line_9 $$ if (tokenIdx == (tokenEnd - 1)) [ FD ]
Line_10 $$ targetIdx = targetEnd-->Line_18 $$ targetIdx += tokens[tokenIdx].length()[ FD ]
Line_2 $$ public boolean matches(final String target) -->Line_7 $$ while (tokenIdx < tokenEnd && targetIdx < targetEnd && targetIdx > -1) [ CD ]
Line_17 $$ if (target.substring(targetIdx).startsWith(tokens[tokenIdx])) -->Line_18 $$ targetIdx += tokens[tokenIdx].length()[ CD ]
Line_2 $$ public boolean matches(final String target) -->Line_13 $$ targetIdx = target.indexOf(tokens[tokenIdx + 1], targetIdx)[ FD ]
Line_2 $$ public boolean matches(final String target) -->Line_26 $$ return (tokenIdx == tokenEnd && targetIdx == targetEnd)[ CD ]
Line_2 $$ public boolean matches(final String target) -->Line_4 $$ int targetEnd = target.length()[ FD ]
Line_13 $$ targetIdx = target.indexOf(tokens[tokenIdx + 1], targetIdx)-->Line_17 $$ if (target.substring(targetIdx).startsWith(tokens[tokenIdx])) [ FD ]
Line_10 $$ targetIdx = targetEnd-->Line_21 $$ targetIdx = -1[ FD ]
