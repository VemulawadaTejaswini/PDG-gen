Line_2 $$ public static String validateDescriptor(String descriptor) -->Line_3 $$ if (descriptor.length() == 0) [ CD ]
Line_2 $$ public static String validateDescriptor(String descriptor) -->Line_8 $$ if (!descriptor.endsWith(";")) [ FD ]
Line_6 $$ if (descriptor.length() > 1) -->Line_7 $$ if (descriptor.startsWith("L")) [ CD ]
Line_2 $$ public static String validateDescriptor(String descriptor) -->Line_7 $$ if (descriptor.startsWith("L")) [ FD ]
Line_7 $$ if (descriptor.startsWith("L")) -->Line_8 $$ if (!descriptor.endsWith(";")) [ CD ]
Line_2 $$ public static String validateDescriptor(String descriptor) -->Line_16 $$ char type = descriptor.charAt(0)[ FD ]
Line_2 $$ public static String validateDescriptor(String descriptor) -->Line_32 $$ return descriptor[ CD ]
Line_2 $$ public static String validateDescriptor(String descriptor) -->Line_11 $$ if (descriptor.startsWith("[")) [ FD ]
Line_2 $$ public static String validateDescriptor(String descriptor) -->Line_9 $$ throw EeLogger.ROOT_LOGGER.invalidDescriptor(descriptor)[ FD ]
Line_7 $$ if (descriptor.startsWith("L")) -->Line_11 $$ if (descriptor.startsWith("[")) [ CD ]
Line_2 $$ public static String validateDescriptor(String descriptor) -->Line_29 $$ throw EeLogger.ROOT_LOGGER.invalidDescriptor(descriptor)[ FD ]
Line_2 $$ public static String validateDescriptor(String descriptor) -->Line_3 $$ if (descriptor.length() == 0) [ FD ]
Line_6 $$ if (descriptor.length() > 1) -->Line_16 $$ char type = descriptor.charAt(0)[ CD ]
Line_2 $$ public static String validateDescriptor(String descriptor) -->Line_6 $$ if (descriptor.length() > 1) [ FD ]
Line_2 $$ public static String validateDescriptor(String descriptor) -->Line_13 $$ throw EeLogger.ROOT_LOGGER.invalidDescriptor(descriptor)[ FD ]
Line_2 $$ public static String validateDescriptor(String descriptor) -->Line_6 $$ if (descriptor.length() > 1) [ CD ]
