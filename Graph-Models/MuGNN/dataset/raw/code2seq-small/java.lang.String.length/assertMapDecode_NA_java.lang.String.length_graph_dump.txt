Line_2 $$ public static void assertMapDecode(String encodedMap, Map<? extends Object, ? extends Object> expectedMap) -->Line_6 $$ assertEquals(map, expectedMap)[ FD ]
Line_3 $$ LazyMap lazyMap = (LazyMap) createLazyObject(getLazySimpleMapObjectInspector(LAZY_STRING_OBJECT_INSPECTOR, getLazyStringObjectInspector(false, (byte) 0), (byte) 2, (byte) 3, new Text("\\N"), false, (byte) 0))-->Line_5 $$ Map<Object, Object> map = lazyMap.getMap()[ FD ]
Line_2 $$ public static void assertMapDecode(String encodedMap, Map<? extends Object, ? extends Object> expectedMap) -->Line_4 $$ lazyMap.init(newByteArrayRef(encodedMap), 0, encodedMap.length())[ CD ]
Line_5 $$ Map<Object, Object> map = lazyMap.getMap()-->Line_6 $$ assertEquals(map, expectedMap)[ FD ]
Line_2 $$ public static void assertMapDecode(String encodedMap, Map<? extends Object, ? extends Object> expectedMap) -->Line_4 $$ lazyMap.init(newByteArrayRef(encodedMap), 0, encodedMap.length())[ FD ]
Line_3 $$ LazyMap lazyMap = (LazyMap) createLazyObject(getLazySimpleMapObjectInspector(LAZY_STRING_OBJECT_INSPECTOR, getLazyStringObjectInspector(false, (byte) 0), (byte) 2, (byte) 3, new Text("\\N"), false, (byte) 0))-->Line_4 $$ lazyMap.init(newByteArrayRef(encodedMap), 0, encodedMap.length())[ FD ]
Line_2 $$ public static void assertMapDecode(String encodedMap, Map<? extends Object, ? extends Object> expectedMap) -->Line_3 $$ LazyMap lazyMap = (LazyMap) createLazyObject(getLazySimpleMapObjectInspector(LAZY_STRING_OBJECT_INSPECTOR, getLazyStringObjectInspector(false, (byte) 0), (byte) 2, (byte) 3, new Text("\\N"), false, (byte) 0))[ CD ]
Line_2 $$ public static void assertMapDecode(String encodedMap, Map<? extends Object, ? extends Object> expectedMap) -->Line_6 $$ assertEquals(map, expectedMap)[ CD ]
Line_2 $$ public static void assertMapDecode(String encodedMap, Map<? extends Object, ? extends Object> expectedMap) -->Line_5 $$ Map<Object, Object> map = lazyMap.getMap()[ CD ]
