Line_12 $$ if ((word.length() > 1) && Character.isUpperCase(word.charAt(0)) && StringUtil.isLowerCase(word.substring(1))) -->Line_13 $$ content = StringUtil.replaceFirst(content, word, StringUtil.toLowerCase(word), matcher.start())[ CD ]
Line_3 $$ Matcher matcher = _commentPattern.matcher(content)-->Line_13 $$ content = StringUtil.replaceFirst(content, word, StringUtil.toLowerCase(word), matcher.start())[ FD ]
Line_7 $$ String previousWord = words[i - 1]-->Line_8 $$ if (previousWord.endsWith(StringPool.PERIOD) || previousWord.equals(StringPool.SLASH)) [ FD ]
Line_2 $$ protected String fixComments(String content) -->Line_13 $$ content = StringUtil.replaceFirst(content, word, StringUtil.toLowerCase(word), matcher.start())[ FD ]
Line_6 $$ for (int i = 1; i < words.length; i++) -->Line_8 $$ if (previousWord.endsWith(StringPool.PERIOD) || previousWord.equals(StringPool.SLASH)) [ CD ]
Line_2 $$ protected String fixComments(String content) -->Line_3 $$ Matcher matcher = _commentPattern.matcher(content)[ CD ]
Line_2 $$ protected String fixComments(String content) -->Line_3 $$ Matcher matcher = _commentPattern.matcher(content)[ FD ]
Line_4 $$ while (matcher.find()) -->Line_6 $$ for (int i = 1; i < words.length; i++) [ CD ]
Line_6 $$ for (int i = 1; i < words.length; i++) -->Line_11 $$ String word = words[i][ CD ]
Line_6 $$ for (int i = 1; i < words.length; i++) -->Line_7 $$ String previousWord = words[i - 1][ CD ]
Line_11 $$ String word = words[i]-->Line_12 $$ if ((word.length() > 1) && Character.isUpperCase(word.charAt(0)) && StringUtil.isLowerCase(word.substring(1))) [ FD ]
Line_4 $$ while (matcher.find()) -->Line_5 $$ String[] words = StringUtil.split(matcher.group(1), CharPool.SPACE)[ CD ]
Line_3 $$ Matcher matcher = _commentPattern.matcher(content)-->Line_4 $$ while (matcher.find()) [ FD ]
Line_2 $$ protected String fixComments(String content) -->Line_4 $$ while (matcher.find()) [ CD ]
Line_6 $$ for (int i = 1; i < words.length; i++) -->Line_12 $$ if ((word.length() > 1) && Character.isUpperCase(word.charAt(0)) && StringUtil.isLowerCase(word.substring(1))) [ CD ]
Line_11 $$ String word = words[i]-->Line_13 $$ content = StringUtil.replaceFirst(content, word, StringUtil.toLowerCase(word), matcher.start())[ FD ]
Line_3 $$ Matcher matcher = _commentPattern.matcher(content)-->Line_5 $$ String[] words = StringUtil.split(matcher.group(1), CharPool.SPACE)[ FD ]
Line_2 $$ protected String fixComments(String content) -->Line_17 $$ return content[ CD ]
