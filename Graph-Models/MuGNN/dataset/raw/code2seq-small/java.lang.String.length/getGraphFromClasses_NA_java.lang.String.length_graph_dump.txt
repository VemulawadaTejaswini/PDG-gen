Line_2 $$ public static Graph getGraphFromClasses(String graphName, List<String> classes) throws Exception -->Line_4 $$ if (classes.size() != 1) [ CD ]
Line_3 $$ Graph ret = null-->Line_19 $$ ret.addSubGraph(factory.generateStateGraph(gname))[ FD ]
Line_12 $$ if (classes.size() == 1) -->Line_13 $$ return factory.generateStateGraph(graphName)[ CD ]
Line_15 $$ String gname = clz.getSimpleName()-->Line_16 $$ if (gname.endsWith("Impl")) [ FD ]
Line_3 $$ Graph ret = null-->Line_5 $$ ret = new Graph(graphName)[ FD ]
Line_9 $$ Field factoryField = clz.getDeclaredField("stateMachineFactory")-->Line_11 $$ StateMachineFactory factory = (StateMachineFactory) factoryField.get(null)[ FD ]
Line_11 $$ StateMachineFactory factory = (StateMachineFactory) factoryField.get(null)-->Line_13 $$ return factory.generateStateGraph(graphName)[ FD ]
Line_9 $$ Field factoryField = clz.getDeclaredField("stateMachineFactory")-->Line_10 $$ factoryField.setAccessible(true)[ FD ]
Line_7 $$ for (String className : classes) -->Line_8 $$ Class clz = Class.forName(className)[ FD ]
Line_2 $$ public static Graph getGraphFromClasses(String graphName, List<String> classes) throws Exception -->Line_21 $$ return ret[ CD ]
Line_2 $$ public static Graph getGraphFromClasses(String graphName, List<String> classes) throws Exception -->Line_4 $$ if (classes.size() != 1) [ FD ]
Line_5 $$ ret = new Graph(graphName)-->Line_19 $$ ret.addSubGraph(factory.generateStateGraph(gname))[ FD ]
Line_2 $$ public static Graph getGraphFromClasses(String graphName, List<String> classes) throws Exception -->Line_13 $$ return factory.generateStateGraph(graphName)[ FD ]
Line_2 $$ public static Graph getGraphFromClasses(String graphName, List<String> classes) throws Exception -->Line_12 $$ if (classes.size() == 1) [ FD ]
Line_8 $$ Class clz = Class.forName(className)-->Line_15 $$ String gname = clz.getSimpleName()[ FD ]
Line_4 $$ if (classes.size() != 1) -->Line_5 $$ ret = new Graph(graphName)[ CD ]
Line_16 $$ if (gname.endsWith("Impl")) -->Line_17 $$ gname = gname.substring(0, gname.length() - 4)[ CD ]
Line_15 $$ String gname = clz.getSimpleName()-->Line_17 $$ gname = gname.substring(0, gname.length() - 4)[ FD ]
Line_15 $$ String gname = clz.getSimpleName()-->Line_19 $$ ret.addSubGraph(factory.generateStateGraph(gname))[ FD ]
Line_8 $$ Class clz = Class.forName(className)-->Line_9 $$ Field factoryField = clz.getDeclaredField("stateMachineFactory")[ FD ]
Line_17 $$ gname = gname.substring(0, gname.length() - 4)-->Line_19 $$ ret.addSubGraph(factory.generateStateGraph(gname))[ FD ]
Line_11 $$ StateMachineFactory factory = (StateMachineFactory) factoryField.get(null)-->Line_19 $$ ret.addSubGraph(factory.generateStateGraph(gname))[ FD ]
Line_2 $$ public static Graph getGraphFromClasses(String graphName, List<String> classes) throws Exception -->Line_3 $$ Graph ret = null[ CD ]
