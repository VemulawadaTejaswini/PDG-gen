Line_4 $$ final String prefix = item instanceof EmptyLookupItem ? "" : myLookup.itemPattern(item)-->Line_5 $$ if (prefix.length() > 0) [ FD ]
Line_6 $$ Iterable<TextRange> ranges = getMatchingFragments(prefix, name)-->Line_9 $$ SpeedSearchUtil.appendColoredFragments(nameComponent, name, ranges, base, highlighted)[ FD ]
Line_2 $$ private void renderItemName(LookupElement item, Color foreground, boolean selected, @SimpleTextAttributes.StyleAttributeConstant int style, String name, final SimpleColoredComponent nameComponent) -->Line_13 $$ nameComponent.append(name, base)[ CD ]
Line_8 $$ SimpleTextAttributes highlighted = new SimpleTextAttributes(style, selected ? SELECTED_PREFIX_FOREGROUND_COLOR : PREFIX_FOREGROUND_COLOR)-->Line_9 $$ SpeedSearchUtil.appendColoredFragments(nameComponent, name, ranges, base, highlighted)[ FD ]
Line_5 $$ if (prefix.length() > 0) -->Line_6 $$ Iterable<TextRange> ranges = getMatchingFragments(prefix, name)[ CD ]
Line_7 $$ if (ranges != null) -->Line_10 $$ return[ CD ]
Line_2 $$ private void renderItemName(LookupElement item, Color foreground, boolean selected, @SimpleTextAttributes.StyleAttributeConstant int style, String name, final SimpleColoredComponent nameComponent) -->Line_4 $$ final String prefix = item instanceof EmptyLookupItem ? "" : myLookup.itemPattern(item)[ FD ]
Line_2 $$ private void renderItemName(LookupElement item, Color foreground, boolean selected, @SimpleTextAttributes.StyleAttributeConstant int style, String name, final SimpleColoredComponent nameComponent) -->Line_9 $$ SpeedSearchUtil.appendColoredFragments(nameComponent, name, ranges, base, highlighted)[ FD ]
Line_2 $$ private void renderItemName(LookupElement item, Color foreground, boolean selected, @SimpleTextAttributes.StyleAttributeConstant int style, String name, final SimpleColoredComponent nameComponent) -->Line_13 $$ nameComponent.append(name, base)[ FD ]
Line_7 $$ if (ranges != null) -->Line_9 $$ SpeedSearchUtil.appendColoredFragments(nameComponent, name, ranges, base, highlighted)[ CD ]
Line_2 $$ private void renderItemName(LookupElement item, Color foreground, boolean selected, @SimpleTextAttributes.StyleAttributeConstant int style, String name, final SimpleColoredComponent nameComponent) -->Line_5 $$ if (prefix.length() > 0) [ CD ]
Line_3 $$ final SimpleTextAttributes base = new SimpleTextAttributes(style, foreground)-->Line_9 $$ SpeedSearchUtil.appendColoredFragments(nameComponent, name, ranges, base, highlighted)[ FD ]
Line_5 $$ if (prefix.length() > 0) -->Line_7 $$ if (ranges != null) [ CD ]
Line_2 $$ private void renderItemName(LookupElement item, Color foreground, boolean selected, @SimpleTextAttributes.StyleAttributeConstant int style, String name, final SimpleColoredComponent nameComponent) -->Line_6 $$ Iterable<TextRange> ranges = getMatchingFragments(prefix, name)[ FD ]
Line_2 $$ private void renderItemName(LookupElement item, Color foreground, boolean selected, @SimpleTextAttributes.StyleAttributeConstant int style, String name, final SimpleColoredComponent nameComponent) -->Line_4 $$ final String prefix = item instanceof EmptyLookupItem ? "" : myLookup.itemPattern(item)[ CD ]
Line_3 $$ final SimpleTextAttributes base = new SimpleTextAttributes(style, foreground)-->Line_13 $$ nameComponent.append(name, base)[ FD ]
Line_4 $$ final String prefix = item instanceof EmptyLookupItem ? "" : myLookup.itemPattern(item)-->Line_6 $$ Iterable<TextRange> ranges = getMatchingFragments(prefix, name)[ FD ]
Line_6 $$ Iterable<TextRange> ranges = getMatchingFragments(prefix, name)-->Line_7 $$ if (ranges != null) [ FD ]
Line_7 $$ if (ranges != null) -->Line_8 $$ SimpleTextAttributes highlighted = new SimpleTextAttributes(style, selected ? SELECTED_PREFIX_FOREGROUND_COLOR : PREFIX_FOREGROUND_COLOR)[ CD ]
Line_2 $$ private void renderItemName(LookupElement item, Color foreground, boolean selected, @SimpleTextAttributes.StyleAttributeConstant int style, String name, final SimpleColoredComponent nameComponent) -->Line_3 $$ final SimpleTextAttributes base = new SimpleTextAttributes(style, foreground)[ CD ]
