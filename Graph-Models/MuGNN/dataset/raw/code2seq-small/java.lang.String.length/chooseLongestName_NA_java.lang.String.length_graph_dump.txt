Line_6 $$ for (int i = 1; i < names.length; i++) -->Line_7 $$ final int length = names[i].length()[ CD ]
Line_2 $$ private static String chooseLongestName(final SuggestedNameInfo suggestedNameInfo) -->Line_4 $$ String longestWord = names[0][ CD ]
Line_9 $$ maxLength = length-->Line_8 $$ if (length > maxLength) [ FD ]
Line_7 $$ final int length = names[i].length()-->Line_8 $$ if (length > maxLength) [ FD ]
Line_2 $$ private static String chooseLongestName(final SuggestedNameInfo suggestedNameInfo) -->Line_6 $$ for (int i = 1; i < names.length; i++) [ CD ]
Line_4 $$ String longestWord = names[0]-->Line_10 $$ longestWord = names[i][ FD ]
Line_8 $$ if (length > maxLength) -->Line_9 $$ maxLength = length[ CD ]
Line_2 $$ private static String chooseLongestName(final SuggestedNameInfo suggestedNameInfo) -->Line_3 $$ final String[] names = suggestedNameInfo.names[ CD ]
Line_7 $$ final int length = names[i].length()-->Line_9 $$ maxLength = length[ FD ]
Line_6 $$ for (int i = 1; i < names.length; i++) -->Line_8 $$ if (length > maxLength) [ CD ]
Line_4 $$ String longestWord = names[0]-->Line_5 $$ int maxLength = longestWord.length()[ FD ]
Line_2 $$ private static String chooseLongestName(final SuggestedNameInfo suggestedNameInfo) -->Line_5 $$ int maxLength = longestWord.length()[ CD ]
Line_5 $$ int maxLength = longestWord.length()-->Line_8 $$ if (length > maxLength) [ FD ]
Line_5 $$ int maxLength = longestWord.length()-->Line_9 $$ maxLength = length[ FD ]
Line_8 $$ if (length > maxLength) -->Line_10 $$ longestWord = names[i][ CD ]
Line_2 $$ private static String chooseLongestName(final SuggestedNameInfo suggestedNameInfo) -->Line_13 $$ return longestWord[ CD ]
