Line_2 $$ public String boundedToken(char boundaryChar, boolean ignoreEol) -->Line_6 $$ if (ch == boundaryChar) [ FD ]
Line_2 $$ public String boundedToken(char boundaryChar, boolean ignoreEol) -->Line_11 $$ if (!ignoreEol && isEol()) [ FD ]
Line_6 $$ if (ch == boundaryChar) -->Line_7 $$ final String rc = myText.substring(start, myPosition)[ CD ]
Line_2 $$ public String boundedToken(char boundaryChar, boolean ignoreEol) -->Line_4 $$ for (; myPosition < myText.length(); myPosition++) [ CD ]
Line_4 $$ for (; myPosition < myText.length(); myPosition++) -->Line_5 $$ final char ch = myText.charAt(myPosition)[ CD ]
Line_2 $$ public String boundedToken(char boundaryChar, boolean ignoreEol) -->Line_3 $$ int start = myPosition[ CD ]
Line_6 $$ if (ch == boundaryChar) -->Line_9 $$ return rc[ CD ]
Line_4 $$ for (; myPosition < myText.length(); myPosition++) -->Line_11 $$ if (!ignoreEol && isEol()) [ CD ]
Line_11 $$ if (!ignoreEol && isEol()) -->Line_12 $$ return myText.substring(start, myPosition)[ CD ]
Line_4 $$ for (; myPosition < myText.length(); myPosition++) -->Line_6 $$ if (ch == boundaryChar) [ CD ]
Line_5 $$ final char ch = myText.charAt(myPosition)-->Line_6 $$ if (ch == boundaryChar) [ FD ]
Line_3 $$ int start = myPosition-->Line_12 $$ return myText.substring(start, myPosition)[ FD ]
Line_3 $$ int start = myPosition-->Line_7 $$ final String rc = myText.substring(start, myPosition)[ FD ]
