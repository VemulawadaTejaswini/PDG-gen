Line_4 $$ for (int i = 0; i < words.length; i++) -->Line_6 $$ final boolean prefixRequiresCapitalization = prefix.length() > 0 && !StringUtil.endsWithChar(prefix, '_')[ CD ]
Line_2 $$ private static String suggestProperlyCasedName(String prefix, String[] words) -->Line_6 $$ final boolean prefixRequiresCapitalization = prefix.length() > 0 && !StringUtil.endsWithChar(prefix, '_')[ FD ]
Line_6 $$ final boolean prefixRequiresCapitalization = prefix.length() > 0 && !StringUtil.endsWithChar(prefix, '_')-->Line_7 $$ if (i > 0 || prefixRequiresCapitalization) [ FD ]
Line_5 $$ String word = words[i]-->Line_10 $$ buffer.append(StringUtil.decapitalize(word))[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder(prefix)-->Line_13 $$ return buffer.toString()[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder(prefix)-->Line_8 $$ buffer.append(StringUtil.capitalize(word))[ FD ]
Line_4 $$ for (int i = 0; i < words.length; i++) -->Line_7 $$ if (i > 0 || prefixRequiresCapitalization) [ CD ]
Line_2 $$ private static String suggestProperlyCasedName(String prefix, String[] words) -->Line_4 $$ for (int i = 0; i < words.length; i++) [ CD ]
Line_5 $$ String word = words[i]-->Line_8 $$ buffer.append(StringUtil.capitalize(word))[ FD ]
Line_7 $$ if (i > 0 || prefixRequiresCapitalization) -->Line_10 $$ buffer.append(StringUtil.decapitalize(word))[ CD ]
Line_7 $$ if (i > 0 || prefixRequiresCapitalization) -->Line_8 $$ buffer.append(StringUtil.capitalize(word))[ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder(prefix)-->Line_10 $$ buffer.append(StringUtil.decapitalize(word))[ FD ]
Line_2 $$ private static String suggestProperlyCasedName(String prefix, String[] words) -->Line_13 $$ return buffer.toString()[ CD ]
Line_4 $$ for (int i = 0; i < words.length; i++) -->Line_5 $$ String word = words[i][ CD ]
Line_2 $$ private static String suggestProperlyCasedName(String prefix, String[] words) -->Line_3 $$ StringBuilder buffer = new StringBuilder(prefix)[ CD ]
