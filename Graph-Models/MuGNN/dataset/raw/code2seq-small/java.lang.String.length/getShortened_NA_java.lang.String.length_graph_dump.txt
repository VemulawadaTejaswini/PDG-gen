Line_25 $$ if (i < words.size() - 1 && word.length() == 1) -->Line_27 $$ words.set(i, word + words.get(i))[ CD ]
Line_7 $$ ArrayList<String> words = new ArrayList<String>()-->Line_38 $$ if (words.size() < 2 || (toCut < aWord.length() - 2 && removedLength == 0)) [ FD ]
Line_31 $$ String toPaste = "..."-->Line_40 $$ toPaste = aWord.substring(0, pos) + "..." + aWord.substring(pos + toCut)[ FD ]
Line_8 $$ StringBuilder builder = new StringBuilder()-->Line_14 $$ builder.delete(0, builder.length())[ FD ]
Line_7 $$ ArrayList<String> words = new ArrayList<String>()-->Line_48 $$ for (int i = 0; i < max(1, words.size()); i++) [ FD ]
Line_23 $$ for (int i = 0; i < words.size(); i++) -->Line_25 $$ if (i < words.size() - 1 && word.length() == 1) [ CD ]
Line_8 $$ StringBuilder builder = new StringBuilder()-->Line_54 $$ return builder.toString().replaceAll("\\.[ FD ]
Line_39 $$ int pos = (aWord.length() - toCut) / 2-->Line_40 $$ toPaste = aWord.substring(0, pos) + "..." + aWord.substring(pos + toCut)[ FD ]
Line_10 $$ char ch = s.charAt(i)-->Line_12 $$ builder.append(ch)[ FD ]
Line_23 $$ for (int i = 0; i < words.size(); i++) -->Line_49 $$ String word = words.isEmpty() ? "" : words.get(i)[ FD ]
Line_23 $$ for (int i = 0; i < words.size(); i++) -->Line_27 $$ words.set(i, word + words.get(i))[ FD ]
Line_10 $$ char ch = s.charAt(i)-->Line_21 $$ builder.append(ch)[ FD ]
Line_9 $$ for (int i = 0; i < length; i++) -->Line_23 $$ for (int i = 0; i < words.size(); i++) [ FD ]
Line_34 $$ index = max(0, (words.size() - 1) / 2)-->Line_36 $$ words.remove(index)[ FD ]
Line_33 $$ while (true) -->Line_35 $$ String aWord = words.get(index)[ CD ]
Line_35 $$ String aWord = words.get(index)-->Line_40 $$ toPaste = aWord.substring(0, pos) + "..." + aWord.substring(pos + toCut)[ FD ]
Line_5 $$ if (isEmpty(s) || length <= maxWidth)-->Line_6 $$ return s[ CD ]
Line_17 $$ if (i > 0 && (ch == '/' || ch == '\\' || ch == '.' || ch == '-' || Character.isUpperCase(ch))) -->Line_19 $$ builder.delete(0, builder.length())[ CD ]
Line_7 $$ ArrayList<String> words = new ArrayList<String>()-->Line_13 $$ words.add(builder.toString())[ FD ]
Line_49 $$ String word = words.isEmpty() ? "" : words.get(i)-->Line_52 $$ builder.append(word)[ FD ]
Line_32 $$ int index-->Line_34 $$ index = max(0, (words.size() - 1) / 2)[ FD ]
Line_9 $$ for (int i = 0; i < length; i++) -->Line_11 $$ if (i == length - 1) [ CD ]
Line_7 $$ ArrayList<String> words = new ArrayList<String>()-->Line_25 $$ if (i < words.size() - 1 && word.length() == 1) [ FD ]
Line_25 $$ if (i < words.size() - 1 && word.length() == 1) -->Line_26 $$ words.remove(i)[ CD ]
Line_35 $$ String aWord = words.get(index)-->Line_39 $$ int pos = (aWord.length() - toCut) / 2[ FD ]
Line_31 $$ String toPaste = "..."-->Line_51 $$ builder.append(toPaste)[ FD ]
Line_32 $$ int index-->Line_36 $$ words.remove(index)[ FD ]
Line_48 $$ for (int i = 0; i < max(1, words.size()); i++) -->Line_50 $$ if (i == index || words.size() == 1)[ CD ]
Line_7 $$ ArrayList<String> words = new ArrayList<String>()-->Line_18 $$ words.add(builder.toString())[ FD ]
Line_38 $$ if (words.size() < 2 || (toCut < aWord.length() - 2 && removedLength == 0)) -->Line_40 $$ toPaste = aWord.substring(0, pos) + "..." + aWord.substring(pos + toCut)[ CD ]
Line_7 $$ ArrayList<String> words = new ArrayList<String>()-->Line_50 $$ if (i == index || words.size() == 1)[ FD ]
Line_50 $$ if (i == index || words.size() == 1)-->Line_51 $$ builder.append(toPaste)[ CD ]
Line_33 $$ while (true) -->Line_37 $$ int toCut = length - removedLength - maxWidth + 3[ CD ]
Line_40 $$ toPaste = aWord.substring(0, pos) + "..." + aWord.substring(pos + toCut)-->Line_51 $$ builder.append(toPaste)[ FD ]
Line_9 $$ for (int i = 0; i < length; i++) -->Line_27 $$ words.set(i, word + words.get(i))[ FD ]
Line_7 $$ ArrayList<String> words = new ArrayList<String>()-->Line_26 $$ words.remove(i)[ FD ]
Line_7 $$ ArrayList<String> words = new ArrayList<String>()-->Line_49 $$ String word = words.isEmpty() ? "" : words.get(i)[ FD ]
Line_23 $$ for (int i = 0; i < words.size(); i++) -->Line_24 $$ String word = words.get(i)[ FD ]
Line_33 $$ while (true) -->Line_36 $$ words.remove(index)[ CD ]
Line_30 $$ int removedLength = 0-->Line_43 $$ removedLength += aWord.length()[ FD ]
Line_35 $$ String aWord = words.get(index)-->Line_38 $$ if (words.size() < 2 || (toCut < aWord.length() - 2 && removedLength == 0)) [ FD ]
Line_9 $$ for (int i = 0; i < length; i++) -->Line_10 $$ char ch = s.charAt(i)[ FD ]
Line_8 $$ StringBuilder builder = new StringBuilder()-->Line_51 $$ builder.append(toPaste)[ FD ]
Line_38 $$ if (words.size() < 2 || (toCut < aWord.length() - 2 && removedLength == 0)) -->Line_39 $$ int pos = (aWord.length() - toCut) / 2[ CD ]
Line_7 $$ ArrayList<String> words = new ArrayList<String>()-->Line_34 $$ index = max(0, (words.size() - 1) / 2)[ FD ]
Line_8 $$ StringBuilder builder = new StringBuilder()-->Line_21 $$ builder.append(ch)[ FD ]
Line_9 $$ for (int i = 0; i < length; i++) -->Line_10 $$ char ch = s.charAt(i)[ CD ]
Line_11 $$ if (i == length - 1) -->Line_12 $$ builder.append(ch)[ CD ]
Line_9 $$ for (int i = 0; i < length; i++) -->Line_11 $$ if (i == length - 1) [ FD ]
Line_24 $$ String word = words.get(i)-->Line_25 $$ if (i < words.size() - 1 && word.length() == 1) [ FD ]
Line_8 $$ StringBuilder builder = new StringBuilder()-->Line_13 $$ words.add(builder.toString())[ FD ]
Line_4 $$ int length = s.length()-->Line_9 $$ for (int i = 0; i < length; i++) [ FD ]
Line_8 $$ StringBuilder builder = new StringBuilder()-->Line_19 $$ builder.delete(0, builder.length())[ FD ]
Line_35 $$ String aWord = words.get(index)-->Line_43 $$ removedLength += aWord.length()[ FD ]
Line_48 $$ for (int i = 0; i < max(1, words.size()); i++) -->Line_52 $$ builder.append(word)[ CD ]
Line_7 $$ ArrayList<String> words = new ArrayList<String>()-->Line_35 $$ String aWord = words.get(index)[ FD ]
Line_23 $$ for (int i = 0; i < words.size(); i++) -->Line_24 $$ String word = words.get(i)[ CD ]
Line_9 $$ for (int i = 0; i < length; i++) -->Line_48 $$ for (int i = 0; i < max(1, words.size()); i++) [ FD ]
Line_7 $$ ArrayList<String> words = new ArrayList<String>()-->Line_24 $$ String word = words.get(i)[ FD ]
Line_23 $$ for (int i = 0; i < words.size(); i++) -->Line_48 $$ for (int i = 0; i < max(1, words.size()); i++) [ FD ]
Line_33 $$ while (true) -->Line_38 $$ if (words.size() < 2 || (toCut < aWord.length() - 2 && removedLength == 0)) [ CD ]
Line_17 $$ if (i > 0 && (ch == '/' || ch == '\\' || ch == '.' || ch == '-' || Character.isUpperCase(ch))) -->Line_18 $$ words.add(builder.toString())[ CD ]
Line_9 $$ for (int i = 0; i < length; i++) -->Line_24 $$ String word = words.get(i)[ FD ]
Line_7 $$ ArrayList<String> words = new ArrayList<String>()-->Line_36 $$ words.remove(index)[ FD ]
Line_7 $$ ArrayList<String> words = new ArrayList<String>()-->Line_23 $$ for (int i = 0; i < words.size(); i++) [ FD ]
Line_7 $$ ArrayList<String> words = new ArrayList<String>()-->Line_27 $$ words.set(i, word + words.get(i))[ FD ]
Line_11 $$ if (i == length - 1) -->Line_14 $$ builder.delete(0, builder.length())[ CD ]
Line_32 $$ int index-->Line_35 $$ String aWord = words.get(index)[ FD ]
Line_34 $$ index = max(0, (words.size() - 1) / 2)-->Line_35 $$ String aWord = words.get(index)[ FD ]
Line_9 $$ for (int i = 0; i < length; i++) -->Line_26 $$ words.remove(i)[ FD ]
Line_23 $$ for (int i = 0; i < words.size(); i++) -->Line_26 $$ words.remove(i)[ FD ]
Line_8 $$ StringBuilder builder = new StringBuilder()-->Line_52 $$ builder.append(word)[ FD ]
Line_9 $$ for (int i = 0; i < length; i++) -->Line_21 $$ builder.append(ch)[ CD ]
Line_48 $$ for (int i = 0; i < max(1, words.size()); i++) -->Line_49 $$ String word = words.isEmpty() ? "" : words.get(i)[ FD ]
Line_11 $$ if (i == length - 1) -->Line_13 $$ words.add(builder.toString())[ CD ]
Line_8 $$ StringBuilder builder = new StringBuilder()-->Line_18 $$ words.add(builder.toString())[ FD ]
Line_48 $$ for (int i = 0; i < max(1, words.size()); i++) -->Line_49 $$ String word = words.isEmpty() ? "" : words.get(i)[ CD ]
Line_33 $$ while (true) -->Line_34 $$ index = max(0, (words.size() - 1) / 2)[ CD ]
Line_24 $$ String word = words.get(i)-->Line_52 $$ builder.append(word)[ FD ]
Line_9 $$ for (int i = 0; i < length; i++) -->Line_17 $$ if (i > 0 && (ch == '/' || ch == '\\' || ch == '.' || ch == '-' || Character.isUpperCase(ch))) [ CD ]
Line_10 $$ char ch = s.charAt(i)-->Line_17 $$ if (i > 0 && (ch == '/' || ch == '\\' || ch == '.' || ch == '-' || Character.isUpperCase(ch))) [ FD ]
Line_33 $$ while (true) -->Line_43 $$ removedLength += aWord.length()[ CD ]
Line_33 $$ while (true) -->Line_44 $$ if (length - removedLength <= maxWidth - 3) [ CD ]
Line_9 $$ for (int i = 0; i < length; i++) -->Line_49 $$ String word = words.isEmpty() ? "" : words.get(i)[ FD ]
Line_8 $$ StringBuilder builder = new StringBuilder()-->Line_12 $$ builder.append(ch)[ FD ]
