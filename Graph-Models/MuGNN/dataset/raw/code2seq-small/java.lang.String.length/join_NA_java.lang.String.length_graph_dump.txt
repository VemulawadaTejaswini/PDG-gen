Line_2 $$ public static String join(@NotNull Iterable<?> items, @NotNull @NonNls String separator) -->Line_7 $$ if (result.length() > 0) [ CD ]
Line_4 $$ for (Object item : items) -->Line_5 $$ result.append(item).append(separator)[ FD ]
Line_7 $$ if (result.length() > 0) -->Line_8 $$ result.setLength(result.length() - separator.length())[ CD ]
Line_2 $$ public static String join(@NotNull Iterable<?> items, @NotNull @NonNls String separator) -->Line_3 $$ StringBuilder result = new StringBuilder()[ CD ]
Line_3 $$ StringBuilder result = new StringBuilder()-->Line_10 $$ return result.toString()[ FD ]
Line_3 $$ StringBuilder result = new StringBuilder()-->Line_5 $$ result.append(item).append(separator)[ FD ]
Line_3 $$ StringBuilder result = new StringBuilder()-->Line_8 $$ result.setLength(result.length() - separator.length())[ FD ]
Line_2 $$ public static String join(@NotNull Iterable<?> items, @NotNull @NonNls String separator) -->Line_10 $$ return result.toString()[ CD ]
Line_2 $$ public static String join(@NotNull Iterable<?> items, @NotNull @NonNls String separator) -->Line_5 $$ result.append(item).append(separator)[ FD ]
Line_3 $$ StringBuilder result = new StringBuilder()-->Line_7 $$ if (result.length() > 0) [ FD ]
Line_2 $$ public static String join(@NotNull Iterable<?> items, @NotNull @NonNls String separator) -->Line_8 $$ result.setLength(result.length() - separator.length())[ FD ]
