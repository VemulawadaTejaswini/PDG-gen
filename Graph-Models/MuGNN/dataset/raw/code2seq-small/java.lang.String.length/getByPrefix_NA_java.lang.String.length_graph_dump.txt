Line_2 $$ public Settings getByPrefix(String prefix) -->Line_6 $$ if (entry.getKey().length() < prefix.length()) [ FD ]
Line_2 $$ public Settings getByPrefix(String prefix) -->Line_9 $$ builder.put(entry.getKey().substring(prefix.length()), entry.getValue())[ FD ]
Line_4 $$ for (Map.Entry<String, String> entry : getAsMap().entrySet()) -->Line_6 $$ if (entry.getKey().length() < prefix.length()) [ FD ]
Line_3 $$ Builder builder = new Builder()-->Line_12 $$ return builder.build()[ FD ]
Line_4 $$ for (Map.Entry<String, String> entry : getAsMap().entrySet()) -->Line_5 $$ if (entry.getKey().startsWith(prefix)) [ FD ]
Line_2 $$ public Settings getByPrefix(String prefix) -->Line_3 $$ Builder builder = new Builder()[ CD ]
Line_4 $$ for (Map.Entry<String, String> entry : getAsMap().entrySet()) -->Line_9 $$ builder.put(entry.getKey().substring(prefix.length()), entry.getValue())[ FD ]
Line_5 $$ if (entry.getKey().startsWith(prefix)) -->Line_6 $$ if (entry.getKey().length() < prefix.length()) [ CD ]
Line_5 $$ if (entry.getKey().startsWith(prefix)) -->Line_9 $$ builder.put(entry.getKey().substring(prefix.length()), entry.getValue())[ CD ]
Line_2 $$ public Settings getByPrefix(String prefix) -->Line_12 $$ return builder.build()[ CD ]
Line_3 $$ Builder builder = new Builder()-->Line_9 $$ builder.put(entry.getKey().substring(prefix.length()), entry.getValue())[ FD ]
Line_2 $$ public Settings getByPrefix(String prefix) -->Line_5 $$ if (entry.getKey().startsWith(prefix)) [ FD ]
