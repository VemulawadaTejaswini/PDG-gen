Line_45 $$ final GrLiteral literal = getLiteral(context)-->Line_46 $$ final Object value = literal == null ? null : literal.getValue()[ FD ]
Line_3 $$ if (!PsiType.CHAR.equals(TypesUtil.unboxPrimitiveTypeWrapper(lType)))-->Line_4 $$ return null[ CD ]
Line_18 $$ rValue = assignmentExpression.getRValue()-->Line_21 $$ rValue = assignmentExpression.getInitializerGroovy()[ FD ]
Line_19 $$ if (context instanceof GrVariable) -->Line_21 $$ rValue = assignmentExpression.getInitializerGroovy()[ CD ]
Line_17 $$ final GrAssignmentExpression assignmentExpression = (GrAssignmentExpression) context-->Line_21 $$ rValue = assignmentExpression.getInitializerGroovy()[ FD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_40 $$ if (currentPosition == ApplicableTo.RETURN_VALUE) [ FD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_16 $$ if (context instanceof GrAssignmentExpression) [ FD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_45 $$ final GrLiteral literal = getLiteral(context)[ CD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_8 $$ if (rType instanceof PsiPrimitiveType || currentPosition != ApplicableTo.EXPLICIT_CAST && TypesUtil.unboxPrimitiveTypeWrapper(rType) instanceof PsiPrimitiveType) [ FD ]
Line_8 $$ if (rType instanceof PsiPrimitiveType || currentPosition != ApplicableTo.EXPLICIT_CAST && TypesUtil.unboxPrimitiveTypeWrapper(rType) instanceof PsiPrimitiveType) -->Line_9 $$ return PsiType.CHAR.equals(lType) ? ConversionResult.OK : ConversionResult.ERROR[ CD ]
Line_15 $$ final GrExpression rValue-->Line_21 $$ rValue = assignmentExpression.getInitializerGroovy()[ FD ]
Line_16 $$ if (context instanceof GrAssignmentExpression) -->Line_18 $$ rValue = assignmentExpression.getRValue()[ CD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_25 $$ if (rValue instanceof GrListOrMap && ((GrListOrMap) rValue).isEmpty()) [ CD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_7 $$ if (TypesUtil.isNumericType(rType)) [ FD ]
Line_46 $$ final Object value = literal == null ? null : literal.getValue()-->Line_47 $$ return value == null ? null : value.toString().length() == 1 ? ConversionResult.OK : ConversionResult.ERROR[ FD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_43 $$ if (!TypesUtil.isClassType(rType, CommonClassNames.JAVA_LANG_STRING))[ FD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_3 $$ if (!PsiType.CHAR.equals(TypesUtil.unboxPrimitiveTypeWrapper(lType)))[ FD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_47 $$ return value == null ? null : value.toString().length() == 1 ? ConversionResult.OK : ConversionResult.ERROR[ CD ]
Line_16 $$ if (context instanceof GrAssignmentExpression) -->Line_17 $$ final GrAssignmentExpression assignmentExpression = (GrAssignmentExpression) context[ CD ]
Line_21 $$ rValue = assignmentExpression.getInitializerGroovy()-->Line_23 $$ rValue = null[ FD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_45 $$ final GrLiteral literal = getLiteral(context)[ FD ]
Line_18 $$ rValue = assignmentExpression.getRValue()-->Line_23 $$ rValue = null[ FD ]
Line_17 $$ final GrAssignmentExpression assignmentExpression = (GrAssignmentExpression) context-->Line_18 $$ rValue = assignmentExpression.getRValue()[ FD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_19 $$ if (context instanceof GrVariable) [ FD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_40 $$ if (currentPosition == ApplicableTo.RETURN_VALUE) [ CD ]
Line_15 $$ final GrExpression rValue-->Line_23 $$ rValue = null[ FD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_15 $$ final GrExpression rValue[ CD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_29 $$ if (PsiType.BOOLEAN.equals(TypesUtil.unboxPrimitiveTypeWrapper(rType))) [ FD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_3 $$ if (!PsiType.CHAR.equals(TypesUtil.unboxPrimitiveTypeWrapper(lType)))[ CD ]
Line_15 $$ final GrExpression rValue-->Line_18 $$ rValue = assignmentExpression.getRValue()[ FD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_9 $$ return PsiType.CHAR.equals(lType) ? ConversionResult.OK : ConversionResult.ERROR[ FD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_46 $$ final Object value = literal == null ? null : literal.getValue()[ CD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_29 $$ if (PsiType.BOOLEAN.equals(TypesUtil.unboxPrimitiveTypeWrapper(rType))) [ CD ]
Line_8 $$ if (rType instanceof PsiPrimitiveType || currentPosition != ApplicableTo.EXPLICIT_CAST && TypesUtil.unboxPrimitiveTypeWrapper(rType) instanceof PsiPrimitiveType) -->Line_11 $$ return ConversionResult.ERROR[ CD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_43 $$ if (!TypesUtil.isClassType(rType, CommonClassNames.JAVA_LANG_STRING))[ CD ]
Line_19 $$ if (context instanceof GrVariable) -->Line_23 $$ rValue = null[ CD ]
Line_7 $$ if (TypesUtil.isNumericType(rType)) -->Line_8 $$ if (rType instanceof PsiPrimitiveType || currentPosition != ApplicableTo.EXPLICIT_CAST && TypesUtil.unboxPrimitiveTypeWrapper(rType) instanceof PsiPrimitiveType) [ CD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_5 $$ if (PsiType.CHAR.equals(TypesUtil.unboxPrimitiveTypeWrapper(rType)))[ FD ]
Line_40 $$ if (currentPosition == ApplicableTo.RETURN_VALUE) -->Line_41 $$ return null[ CD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_5 $$ if (PsiType.CHAR.equals(TypesUtil.unboxPrimitiveTypeWrapper(rType)))[ CD ]
Line_5 $$ if (PsiType.CHAR.equals(TypesUtil.unboxPrimitiveTypeWrapper(rType)))-->Line_6 $$ return ConversionResult.OK[ CD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_7 $$ if (TypesUtil.isNumericType(rType)) [ CD ]
Line_2 $$ public ConversionResult isConvertibleEx(@NotNull PsiType lType, @NotNull PsiType rType, @NotNull GroovyPsiElement context, @NotNull ApplicableTo currentPosition) -->Line_16 $$ if (context instanceof GrAssignmentExpression) [ CD ]
Line_16 $$ if (context instanceof GrAssignmentExpression) -->Line_19 $$ if (context instanceof GrVariable) [ CD ]
Line_43 $$ if (!TypesUtil.isClassType(rType, CommonClassNames.JAVA_LANG_STRING))-->Line_44 $$ return null[ CD ]
Line_25 $$ if (rValue instanceof GrListOrMap && ((GrListOrMap) rValue).isEmpty()) -->Line_26 $$ return ConversionResult.WARNING[ CD ]
