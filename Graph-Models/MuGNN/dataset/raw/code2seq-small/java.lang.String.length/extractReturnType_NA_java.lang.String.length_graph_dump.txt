Line_17 $$ if (pos >= 0) -->Line_18 $$ return firstLine.substring(pos + 2).trim()[ CD ]
Line_10 $$ final List<String> lines = StringUtil.split(docString, "\n")-->Line_12 $$ lines.remove(0)[ FD ]
Line_14 $$ if (lines.size() > 1 && lines.get(1).trim().length() == 0) -->Line_15 $$ String firstLine = lines.get(0)[ CD ]
Line_15 $$ String firstLine = lines.get(0)-->Line_18 $$ return firstLine.substring(pos + 2).trim()[ FD ]
Line_2 $$ private String extractReturnType() -->Line_8 $$ final String docString = getDocStringValue()[ CD ]
Line_4 $$ final StructuredDocString structuredDocString = getStructuredDocString()-->Line_6 $$ return structuredDocString.getReturnType()[ FD ]
Line_11 $$ while (lines.size() > 0 && lines.get(0).trim().length() == 0) -->Line_12 $$ lines.remove(0)[ CD ]
Line_16 $$ int pos = firstLine.lastIndexOf(ARROW)-->Line_17 $$ if (pos >= 0) [ FD ]
Line_2 $$ private String extractReturnType() -->Line_9 $$ if (docString != null && docString.contains(ARROW)) [ CD ]
Line_3 $$ final String ARROW = "->"-->Line_9 $$ if (docString != null && docString.contains(ARROW)) [ FD ]
Line_2 $$ private String extractReturnType() -->Line_3 $$ final String ARROW = "->"[ CD ]
Line_5 $$ if (structuredDocString != null) -->Line_6 $$ return structuredDocString.getReturnType()[ CD ]
Line_2 $$ private String extractReturnType() -->Line_4 $$ final StructuredDocString structuredDocString = getStructuredDocString()[ CD ]
Line_10 $$ final List<String> lines = StringUtil.split(docString, "\n")-->Line_14 $$ if (lines.size() > 1 && lines.get(1).trim().length() == 0) [ FD ]
Line_9 $$ if (docString != null && docString.contains(ARROW)) -->Line_10 $$ final List<String> lines = StringUtil.split(docString, "\n")[ CD ]
Line_14 $$ if (lines.size() > 1 && lines.get(1).trim().length() == 0) -->Line_16 $$ int pos = firstLine.lastIndexOf(ARROW)[ CD ]
Line_3 $$ final String ARROW = "->"-->Line_16 $$ int pos = firstLine.lastIndexOf(ARROW)[ FD ]
Line_2 $$ private String extractReturnType() -->Line_5 $$ if (structuredDocString != null) [ CD ]
Line_15 $$ String firstLine = lines.get(0)-->Line_16 $$ int pos = firstLine.lastIndexOf(ARROW)[ FD ]
Line_8 $$ final String docString = getDocStringValue()-->Line_10 $$ final List<String> lines = StringUtil.split(docString, "\n")[ FD ]
Line_9 $$ if (docString != null && docString.contains(ARROW)) -->Line_14 $$ if (lines.size() > 1 && lines.get(1).trim().length() == 0) [ CD ]
Line_10 $$ final List<String> lines = StringUtil.split(docString, "\n")-->Line_11 $$ while (lines.size() > 0 && lines.get(0).trim().length() == 0) [ FD ]
Line_2 $$ private String extractReturnType() -->Line_22 $$ return null[ CD ]
Line_14 $$ if (lines.size() > 1 && lines.get(1).trim().length() == 0) -->Line_17 $$ if (pos >= 0) [ CD ]
Line_4 $$ final StructuredDocString structuredDocString = getStructuredDocString()-->Line_5 $$ if (structuredDocString != null) [ FD ]
Line_9 $$ if (docString != null && docString.contains(ARROW)) -->Line_11 $$ while (lines.size() > 0 && lines.get(0).trim().length() == 0) [ CD ]
Line_10 $$ final List<String> lines = StringUtil.split(docString, "\n")-->Line_15 $$ String firstLine = lines.get(0)[ FD ]
Line_8 $$ final String docString = getDocStringValue()-->Line_9 $$ if (docString != null && docString.contains(ARROW)) [ FD ]
