Line_13 $$ final String p = entry.getKey()-->Line_14 $$ if (!p.startsWith(prefix)) [ FD ]
Line_2 $$ private static Map<String, Lease> findLeaseWithPrefixPath(String prefix, SortedMap<String, Lease> path2lease) -->Line_7 $$ int srclen = prefix.length()[ FD ]
Line_10 $$ srclen -= 1-->Line_17 $$ if (p.length() == srclen || p.charAt(srclen) == Path.SEPARATOR_CHAR) [ FD ]
Line_2 $$ private static Map<String, Lease> findLeaseWithPrefixPath(String prefix, SortedMap<String, Lease> path2lease) -->Line_14 $$ if (!p.startsWith(prefix)) [ FD ]
Line_7 $$ int srclen = prefix.length()-->Line_17 $$ if (p.length() == srclen || p.charAt(srclen) == Path.SEPARATOR_CHAR) [ FD ]
Line_2 $$ private static Map<String, Lease> findLeaseWithPrefixPath(String prefix, SortedMap<String, Lease> path2lease) -->Line_7 $$ int srclen = prefix.length()[ CD ]
Line_12 $$ for (Map.Entry<String, Lease> entry : path2lease.tailMap(prefix).entrySet()) -->Line_13 $$ final String p = entry.getKey()[ FD ]
Line_2 $$ private static Map<String, Lease> findLeaseWithPrefixPath(String prefix, SortedMap<String, Lease> path2lease) -->Line_6 $$ final Map<String, Lease> entries = new HashMap<String, Lease>()[ CD ]
Line_6 $$ final Map<String, Lease> entries = new HashMap<String, Lease>()-->Line_18 $$ entries.put(entry.getKey(), entry.getValue())[ FD ]
Line_12 $$ for (Map.Entry<String, Lease> entry : path2lease.tailMap(prefix).entrySet()) -->Line_18 $$ entries.put(entry.getKey(), entry.getValue())[ FD ]
Line_7 $$ int srclen = prefix.length()-->Line_10 $$ srclen -= 1[ FD ]
Line_2 $$ private static Map<String, Lease> findLeaseWithPrefixPath(String prefix, SortedMap<String, Lease> path2lease) -->Line_12 $$ for (Map.Entry<String, Lease> entry : path2lease.tailMap(prefix).entrySet()) [ FD ]
Line_13 $$ final String p = entry.getKey()-->Line_17 $$ if (p.length() == srclen || p.charAt(srclen) == Path.SEPARATOR_CHAR) [ FD ]
Line_17 $$ if (p.length() == srclen || p.charAt(srclen) == Path.SEPARATOR_CHAR) -->Line_18 $$ entries.put(entry.getKey(), entry.getValue())[ CD ]
Line_3 $$ if (LOG.isDebugEnabled()) -->Line_4 $$ LOG.debug(LeaseManager.class.getSimpleName() + ".findLease: prefix=" + prefix)[ CD ]
Line_2 $$ private static Map<String, Lease> findLeaseWithPrefixPath(String prefix, SortedMap<String, Lease> path2lease) -->Line_3 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_2 $$ private static Map<String, Lease> findLeaseWithPrefixPath(String prefix, SortedMap<String, Lease> path2lease) -->Line_21 $$ return entries[ CD ]
Line_14 $$ if (!p.startsWith(prefix)) -->Line_15 $$ return entries[ CD ]
