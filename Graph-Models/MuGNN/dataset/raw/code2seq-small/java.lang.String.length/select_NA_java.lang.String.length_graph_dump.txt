Line_8 $$ int endOffset = -1-->Line_26 $$ endOffset = stringOffset + index + 1[ FD ]
Line_12 $$ if (elementType == GroovyTokenTypes.mGSTRING_CONTENT || elementType == GroovyTokenTypes.mREGEX_CONTENT || elementType == GroovyTokenTypes.mDOLLAR_SLASH_REGEX_CONTENT) -->Line_24 $$ index = text.indexOf('\n', cursorOffset - stringOffset)[ CD ]
Line_4 $$ List<TextRange> result = super.select(e, editorText, cursorOffset, editor)-->Line_5 $$ if (e instanceof GrListOrMap)[ FD ]
Line_12 $$ if (elementType == GroovyTokenTypes.mGSTRING_CONTENT || elementType == GroovyTokenTypes.mREGEX_CONTENT || elementType == GroovyTokenTypes.mDOLLAR_SLASH_REGEX_CONTENT) -->Line_25 $$ if (index >= 0) [ CD ]
Line_24 $$ index = text.indexOf('\n', cursorOffset - stringOffset)-->Line_25 $$ if (index >= 0) [ FD ]
Line_12 $$ if (elementType == GroovyTokenTypes.mGSTRING_CONTENT || elementType == GroovyTokenTypes.mREGEX_CONTENT || elementType == GroovyTokenTypes.mDOLLAR_SLASH_REGEX_CONTENT) -->Line_15 $$ while (true) [ CD ]
Line_15 $$ while (true) -->Line_16 $$ cur = text.indexOf('\n', index + 1)[ CD ]
Line_14 $$ int index = -1-->Line_24 $$ index = text.indexOf('\n', cursorOffset - stringOffset)[ FD ]
Line_32 $$ final String content = GrStringUtil.removeQuotes(text)-->Line_33 $$ final int offset = stringOffset + text.indexOf(content)[ FD ]
Line_14 $$ int index = -1-->Line_19 $$ index = cur[ FD ]
Line_12 $$ if (elementType == GroovyTokenTypes.mGSTRING_CONTENT || elementType == GroovyTokenTypes.mREGEX_CONTENT || elementType == GroovyTokenTypes.mDOLLAR_SLASH_REGEX_CONTENT) -->Line_21 $$ if (index >= 0) [ CD ]
Line_9 $$ final String text = e.getText()-->Line_24 $$ index = text.indexOf('\n', cursorOffset - stringOffset)[ FD ]
Line_32 $$ final String content = GrStringUtil.removeQuotes(text)-->Line_34 $$ result.add(new TextRange(offset, offset + content.length()))[ FD ]
Line_14 $$ int index = -1-->Line_21 $$ if (index >= 0) [ FD ]
Line_9 $$ final String text = e.getText()-->Line_33 $$ final int offset = stringOffset + text.indexOf(content)[ FD ]
Line_15 $$ while (true) -->Line_19 $$ index = cur[ CD ]
Line_13 $$ int cur-->Line_19 $$ index = cur[ FD ]
Line_4 $$ List<TextRange> result = super.select(e, editorText, cursorOffset, editor)-->Line_30 $$ result.add(new TextRange(startOffset, endOffset))[ FD ]
Line_19 $$ index = cur-->Line_25 $$ if (index >= 0) [ FD ]
Line_12 $$ if (elementType == GroovyTokenTypes.mGSTRING_CONTENT || elementType == GroovyTokenTypes.mREGEX_CONTENT || elementType == GroovyTokenTypes.mDOLLAR_SLASH_REGEX_CONTENT) -->Line_14 $$ int index = -1[ CD ]
Line_19 $$ index = cur-->Line_21 $$ if (index >= 0) [ FD ]
Line_21 $$ if (index >= 0) -->Line_22 $$ startOffset = stringOffset + index + 1[ CD ]
Line_12 $$ if (elementType == GroovyTokenTypes.mGSTRING_CONTENT || elementType == GroovyTokenTypes.mREGEX_CONTENT || elementType == GroovyTokenTypes.mDOLLAR_SLASH_REGEX_CONTENT) -->Line_13 $$ int cur[ CD ]
Line_19 $$ index = cur-->Line_24 $$ index = text.indexOf('\n', cursorOffset - stringOffset)[ FD ]
Line_16 $$ cur = text.indexOf('\n', index + 1)-->Line_19 $$ index = cur[ FD ]
Line_29 $$ if (startOffset >= 0 && endOffset >= 0) -->Line_30 $$ result.add(new TextRange(startOffset, endOffset))[ CD ]
Line_5 $$ if (e instanceof GrListOrMap)-->Line_6 $$ return result[ CD ]
Line_25 $$ if (index >= 0) -->Line_26 $$ endOffset = stringOffset + index + 1[ CD ]
Line_14 $$ int index = -1-->Line_25 $$ if (index >= 0) [ FD ]
Line_4 $$ List<TextRange> result = super.select(e, editorText, cursorOffset, editor)-->Line_34 $$ result.add(new TextRange(offset, offset + content.length()))[ FD ]
Line_15 $$ while (true) -->Line_17 $$ if (cur < 0 || cur + stringOffset > cursorOffset)[ CD ]
Line_13 $$ int cur-->Line_16 $$ cur = text.indexOf('\n', index + 1)[ FD ]
Line_9 $$ final String text = e.getText()-->Line_16 $$ cur = text.indexOf('\n', index + 1)[ FD ]
Line_9 $$ final String text = e.getText()-->Line_32 $$ final String content = GrStringUtil.removeQuotes(text)[ FD ]
Line_7 $$ int startOffset = -1-->Line_22 $$ startOffset = stringOffset + index + 1[ FD ]
