Line_2 $$ public boolean rename(Path src, Path dst) throws IOException -->Line_4 $$ final String debugPreamble = "Renaming '" + src + "' to '" + dst + "' - "[ CD ]
Line_23 $$ if (dstIsFile) -->Line_29 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_58 $$ if (srcIsFile) -->Line_76 $$ String priorLastKey = null[ CD ]
Line_20 $$ String dstKey = pathToKey(makeAbsolute(dst))-->Line_68 $$ if (dstKey.startsWith(srcKey + "/")) [ FD ]
Line_2 $$ public boolean rename(Path src, Path dst) throws IOException -->Line_3 $$ String srcKey = pathToKey(makeAbsolute(src))[ FD ]
Line_3 $$ String srcKey = pathToKey(makeAbsolute(src))-->Line_27 $$ return srcKey.equals(dstKey)[ FD ]
Line_83 $$ priorLastKey = listing.getPriorLastKey()-->Line_77 $$ do [ FD ]
Line_58 $$ if (srcIsFile) -->Line_59 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_3 $$ String srcKey = pathToKey(makeAbsolute(src))-->Line_81 $$ store.copy(file.getKey(), dstKey + file.getKey().substring(srcKey.length()))[ FD ]
Line_59 $$ if (LOG.isDebugEnabled()) -->Line_60 $$ LOG.debug(debugPreamble + "src is file, so doing copy then delete in S3")[ CD ]
Line_3 $$ String srcKey = pathToKey(makeAbsolute(src))-->Line_5 $$ if (srcKey.length() == 0) [ FD ]
Line_58 $$ if (srcIsFile) -->Line_62 $$ store.copy(srcKey, dstKey)[ CD ]
Line_39 $$ if (getFileStatus(dst.getParent()).isFile()) -->Line_43 $$ return false[ CD ]
Line_76 $$ String priorLastKey = null-->Line_83 $$ priorLastKey = listing.getPriorLastKey()[ FD ]
Line_2 $$ public boolean rename(Path src, Path dst) throws IOException -->Line_99 $$ return true[ CD ]
Line_65 $$ if (LOG.isDebugEnabled()) -->Line_66 $$ LOG.debug(debugPreamble + "src is directory, so copying contents")[ CD ]
Line_32 $$ dstKey = pathToKey(makeAbsolute(new Path(dst, src.getName())))-->Line_68 $$ if (dstKey.startsWith(srcKey + "/")) [ FD ]
Line_24 $$ if (LOG.isDebugEnabled()) -->Line_25 $$ LOG.debug(debugPreamble + "returning without rename as dst is an already existing file")[ CD ]
Line_53 $$ if (LOG.isDebugEnabled()) -->Line_54 $$ LOG.debug(debugPreamble + "renamingToSelf; returning true")[ CD ]
Line_2 $$ public boolean rename(Path src, Path dst) throws IOException -->Line_13 $$ srcIsFile = getFileStatus(src).isFile()[ FD ]
Line_46 $$ if (LOG.isDebugEnabled()) -->Line_47 $$ LOG.debug(debugPreamble + "returning false as dst parent does not exist")[ CD ]
Line_11 $$ boolean srcIsFile-->Line_13 $$ srcIsFile = getFileStatus(src).isFile()[ FD ]
Line_5 $$ if (srcKey.length() == 0) -->Line_6 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_58 $$ if (srcIsFile) -->Line_68 $$ if (dstKey.startsWith(srcKey + "/")) [ CD ]
Line_35 $$ if (LOG.isDebugEnabled()) -->Line_36 $$ LOG.debug(debugPreamble + "using dst as output destination")[ CD ]
Line_75 $$ List<String> keysToDelete = new ArrayList<String>()-->Line_80 $$ keysToDelete.add(file.getKey())[ FD ]
Line_79 $$ for (FileMetadata file : listing.getFiles()) -->Line_81 $$ store.copy(file.getKey(), dstKey + file.getKey().substring(srcKey.length()))[ FD ]
Line_23 $$ if (dstIsFile) -->Line_32 $$ dstKey = pathToKey(makeAbsolute(new Path(dst, src.getName())))[ CD ]
Line_58 $$ if (srcIsFile) -->Line_95 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_69 $$ if (LOG.isDebugEnabled()) -->Line_70 $$ LOG.debug(debugPreamble + "cannot rename a directory to a subdirectory of self")[ CD ]
Line_2 $$ public boolean rename(Path src, Path dst) throws IOException -->Line_11 $$ boolean srcIsFile[ CD ]
Line_3 $$ String srcKey = pathToKey(makeAbsolute(src))-->Line_52 $$ if (srcKey.equals(dstKey)) [ FD ]
Line_77 $$ do -->Line_83 $$ priorLastKey = listing.getPriorLastKey()[ CD ]
Line_88 $$ for (String key : keysToDelete) -->Line_89 $$ store.delete(key)[ FD ]
Line_3 $$ String srcKey = pathToKey(makeAbsolute(src))-->Line_62 $$ store.copy(srcKey, dstKey)[ FD ]
Line_78 $$ PartialListing listing = store.list(srcKey, S3_MAX_LISTING_LENGTH, priorLastKey, true)-->Line_83 $$ priorLastKey = listing.getPriorLastKey()[ FD ]
Line_29 $$ if (LOG.isDebugEnabled()) -->Line_30 $$ LOG.debug(debugPreamble + "using dst as output directory")[ CD ]
Line_52 $$ if (srcKey.equals(dstKey)) -->Line_56 $$ return true[ CD ]
Line_58 $$ if (srcIsFile) -->Line_74 $$ store.storeEmptyFile(dstKey + FOLDER_SUFFIX)[ CD ]
Line_20 $$ String dstKey = pathToKey(makeAbsolute(dst))-->Line_27 $$ return srcKey.equals(dstKey)[ FD ]
Line_2 $$ public boolean rename(Path src, Path dst) throws IOException -->Line_58 $$ if (srcIsFile) [ CD ]
Line_76 $$ String priorLastKey = null-->Line_78 $$ PartialListing listing = store.list(srcKey, S3_MAX_LISTING_LENGTH, priorLastKey, true)[ FD ]
Line_32 $$ dstKey = pathToKey(makeAbsolute(new Path(dst, src.getName())))-->Line_52 $$ if (srcKey.equals(dstKey)) [ FD ]
Line_58 $$ if (srcIsFile) -->Line_77 $$ do [ CD ]
Line_76 $$ String priorLastKey = null-->Line_77 $$ do [ FD ]
Line_85 $$ if (LOG.isDebugEnabled()) -->Line_86 $$ LOG.debug(debugPreamble + "all files in src copied, now removing src files")[ CD ]
Line_79 $$ for (FileMetadata file : listing.getFiles()) -->Line_80 $$ keysToDelete.add(file.getKey())[ FD ]
Line_2 $$ public boolean rename(Path src, Path dst) throws IOException -->Line_22 $$ boolean dstIsFile = getFileStatus(dst).isFile()[ FD ]
Line_95 $$ if (LOG.isDebugEnabled()) -->Line_96 $$ LOG.debug(debugPreamble + "done")[ CD ]
Line_40 $$ if (LOG.isDebugEnabled()) -->Line_41 $$ LOG.debug(debugPreamble + "returning false as dst parent exists and is a file")[ CD ]
Line_68 $$ if (dstKey.startsWith(srcKey + "/")) -->Line_72 $$ return false[ CD ]
Line_20 $$ String dstKey = pathToKey(makeAbsolute(dst))-->Line_32 $$ dstKey = pathToKey(makeAbsolute(new Path(dst, src.getName())))[ FD ]
Line_39 $$ if (getFileStatus(dst.getParent()).isFile()) -->Line_40 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_2 $$ public boolean rename(Path src, Path dst) throws IOException -->Line_3 $$ String srcKey = pathToKey(makeAbsolute(src))[ CD ]
Line_20 $$ String dstKey = pathToKey(makeAbsolute(dst))-->Line_52 $$ if (srcKey.equals(dstKey)) [ FD ]
Line_78 $$ PartialListing listing = store.list(srcKey, S3_MAX_LISTING_LENGTH, priorLastKey, true)-->Line_79 $$ for (FileMetadata file : listing.getFiles()) [ FD ]
Line_77 $$ do -->Line_78 $$ PartialListing listing = store.list(srcKey, S3_MAX_LISTING_LENGTH, priorLastKey, true)[ CD ]
Line_68 $$ if (dstKey.startsWith(srcKey + "/")) -->Line_69 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_5 $$ if (srcKey.length() == 0) -->Line_9 $$ return false[ CD ]
Line_2 $$ public boolean rename(Path src, Path dst) throws IOException -->Line_5 $$ if (srcKey.length() == 0) [ CD ]
Line_23 $$ if (dstIsFile) -->Line_24 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_52 $$ if (srcKey.equals(dstKey)) -->Line_53 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_2 $$ public boolean rename(Path src, Path dst) throws IOException -->Line_20 $$ String dstKey = pathToKey(makeAbsolute(dst))[ CD ]
Line_23 $$ if (dstIsFile) -->Line_27 $$ return srcKey.equals(dstKey)[ CD ]
Line_58 $$ if (srcIsFile) -->Line_65 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_2 $$ public boolean rename(Path src, Path dst) throws IOException -->Line_32 $$ dstKey = pathToKey(makeAbsolute(new Path(dst, src.getName())))[ FD ]
Line_2 $$ public boolean rename(Path src, Path dst) throws IOException -->Line_39 $$ if (getFileStatus(dst.getParent()).isFile()) [ FD ]
Line_6 $$ if (LOG.isDebugEnabled()) -->Line_7 $$ LOG.debug(debugPreamble + "returning false as cannot rename the root of a filesystem")[ CD ]
Line_3 $$ String srcKey = pathToKey(makeAbsolute(src))-->Line_78 $$ PartialListing listing = store.list(srcKey, S3_MAX_LISTING_LENGTH, priorLastKey, true)[ FD ]
Line_58 $$ if (srcIsFile) -->Line_63 $$ store.delete(srcKey)[ CD ]
Line_2 $$ public boolean rename(Path src, Path dst) throws IOException -->Line_20 $$ String dstKey = pathToKey(makeAbsolute(dst))[ FD ]
Line_32 $$ dstKey = pathToKey(makeAbsolute(new Path(dst, src.getName())))-->Line_62 $$ store.copy(srcKey, dstKey)[ FD ]
Line_2 $$ public boolean rename(Path src, Path dst) throws IOException -->Line_52 $$ if (srcKey.equals(dstKey)) [ CD ]
Line_3 $$ String srcKey = pathToKey(makeAbsolute(src))-->Line_63 $$ store.delete(srcKey)[ FD ]
Line_58 $$ if (srcIsFile) -->Line_75 $$ List<String> keysToDelete = new ArrayList<String>()[ CD ]
Line_15 $$ if (LOG.isDebugEnabled()) -->Line_16 $$ LOG.debug(debugPreamble + "returning false as src does not exist")[ CD ]
Line_83 $$ priorLastKey = listing.getPriorLastKey()-->Line_78 $$ PartialListing listing = store.list(srcKey, S3_MAX_LISTING_LENGTH, priorLastKey, true)[ FD ]
Line_58 $$ if (srcIsFile) -->Line_85 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_20 $$ String dstKey = pathToKey(makeAbsolute(dst))-->Line_62 $$ store.copy(srcKey, dstKey)[ FD ]
