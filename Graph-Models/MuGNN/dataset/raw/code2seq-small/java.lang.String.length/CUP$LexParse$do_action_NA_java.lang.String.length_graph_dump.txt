Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_816 $$ RESULT = r[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_804 $$ RESULT = r[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_804 $$ RESULT = r[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_441 $$ RESULT = list[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_484 $$ int closeright = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).right-->Line_490 $$ syntaxError(ErrorMessages.CHARSET_2_SMALL, closeleft, closeright)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_441 $$ RESULT = list[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)-->Line_816 $$ RESULT = r[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_804 $$ RESULT = r[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_455 $$ RESULT = list[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_455 $$ RESULT = list[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_668 $$ RESULT = c[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_668 $$ RESULT = c[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_804 $$ RESULT = r[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_425 $$ RESULT = list[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_804 $$ RESULT = r[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_455 $$ RESULT = list[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_730 $$ int bright = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).right-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_471 $$ RESULT = list[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_455 $$ RESULT = list-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_441 $$ RESULT = list[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_441 $$ RESULT = list[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_817 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("concs", 5, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_696 $$ RESULT = r[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_441 $$ RESULT = list[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_341 $$ Character c = (Character) ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).value-->Line_595 $$ charClasses.makeClass(c.charValue(), true)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_455 $$ RESULT = list[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_413 $$ RESULT = list[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_413 $$ RESULT = list-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_471 $$ RESULT = list[ FD ]
Line_425 $$ RESULT = list-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_425 $$ RESULT = list-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_668 $$ RESULT = c[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_455 $$ RESULT = list[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_768 $$ RESULT = new RegExp1(sym.STAR, r)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_668 $$ RESULT = c-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_425 $$ RESULT = list[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_441 $$ RESULT = list[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_804 $$ RESULT = r[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_668 $$ RESULT = c[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_425 $$ RESULT = list-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_425 $$ RESULT = list-->Line_696 $$ RESULT = r[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_413 $$ RESULT = list-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_425 $$ RESULT = list[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_484 $$ int closeright = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).right-->Line_531 $$ syntaxError(ErrorMessages.CHARSET_2_SMALL, closeleft, closeright)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)[ FD ]
Line_612 $$ Vector any = new Vector()-->Line_613 $$ any.addElement(new Interval('\n', '\n'))[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_471 $$ RESULT = list[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_455 $$ RESULT = list[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_441 $$ RESULT = list[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_668 $$ RESULT = c[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_471 $$ RESULT = list-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)[ FD ]
Line_455 $$ RESULT = list-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_668 $$ RESULT = c[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_668 $$ RESULT = c-->Line_696 $$ RESULT = r[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_380 $$ Vector list = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_440 $$ list.addElement(e.nextElement())[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_441 $$ RESULT = list[ FD ]
Line_425 $$ RESULT = list-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_668 $$ RESULT = c[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_452 $$ Interval elem = (Interval) ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).value-->Line_454 $$ list.addElement(elem)[ FD ]
Line_441 $$ RESULT = list-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_368 $$ String ident = (String) ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).value-->Line_681 $$ if (!macros.markUsed(ident))[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_441 $$ RESULT = list[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_455 $$ RESULT = list[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_816 $$ RESULT = r[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_804 $$ RESULT = r[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_695 $$ RegExp r = (RegExp) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_816 $$ RESULT = r[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_804 $$ RESULT = r[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)[ FD ]
Line_356 $$ Character c2 = (Character) ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).value-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_471 $$ RESULT = list[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_816 $$ RESULT = r[ FD ]
Line_471 $$ RESULT = list-->Line_816 $$ RESULT = r[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_816 $$ RESULT = r[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_484 $$ int closeright = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).right-->Line_570 $$ syntaxError(ErrorMessages.CHARSET_2_SMALL, closeleft, closeright)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_668 $$ RESULT = c[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_696 $$ RESULT = r[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_484 $$ int closeright = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).right-->Line_511 $$ syntaxError(ErrorMessages.CHARSET_2_SMALL, closeleft, closeright)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_441 $$ RESULT = list[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_668 $$ RESULT = c[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_696 $$ RESULT = r[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_471 $$ RESULT = list[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_696 $$ RESULT = r-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_425 $$ RESULT = list[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_804 $$ RESULT = r[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_455 $$ RESULT = list-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_696 $$ RESULT = r-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_471 $$ RESULT = list[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_425 $$ RESULT = list[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_471 $$ RESULT = list[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_413 $$ RESULT = list[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_413 $$ RESULT = list-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_668 $$ RESULT = c-->Line_804 $$ RESULT = r[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_455 $$ RESULT = list[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_668 $$ RESULT = c-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_696 $$ RESULT = r[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_708 $$ int n1left = ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)).left-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_696 $$ RESULT = r[ FD ]
Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_817 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("concs", 5, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_668 $$ RESULT = c-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_816 $$ RESULT = r[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_816 $$ RESULT = r[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_471 $$ RESULT = list[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_471 $$ RESULT = list[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_425 $$ RESULT = list-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)-->Line_816 $$ RESULT = r[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_471 $$ RESULT = list[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_804 $$ RESULT = r[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_471 $$ RESULT = list[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_413 $$ RESULT = list[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_594 $$ if (scanner.caseless) -->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ CD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_668 $$ RESULT = c[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_668 $$ RESULT = c-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_455 $$ RESULT = list-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_413 $$ RESULT = list[ FD ]
Line_484 $$ int closeright = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).right-->Line_550 $$ syntaxError(ErrorMessages.CHARSET_2_SMALL, closeleft, closeright)[ FD ]
Line_425 $$ RESULT = list-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_804 $$ RESULT = r[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_594 $$ if (scanner.caseless) -->Line_598 $$ charClasses.makeClass(c.charValue(), false)[ CD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_804 $$ RESULT = r[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_816 $$ RESULT = r[ FD ]
Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_483 $$ int closeleft = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).left-->Line_550 $$ syntaxError(ErrorMessages.CHARSET_2_SMALL, closeleft, closeright)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_816 $$ RESULT = r[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_696 $$ RESULT = r[ FD ]
Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_804 $$ RESULT = r[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_804 $$ RESULT = r[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_668 $$ RESULT = c[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_425 $$ RESULT = list[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_455 $$ RESULT = list[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_455 $$ RESULT = list-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_816 $$ RESULT = r[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_668 $$ RESULT = c[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_804 $$ RESULT = r[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)-->Line_804 $$ RESULT = r[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_668 $$ RESULT = c[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_804 $$ RESULT = r[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_804 $$ RESULT = r[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)[ FD ]
Line_668 $$ RESULT = c-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_712 $$ int n2right = ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).right-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_455 $$ RESULT = list[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_668 $$ RESULT = c[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_455 $$ RESULT = list[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_668 $$ RESULT = c[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_696 $$ RESULT = r[ FD ]
Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_668 $$ RESULT = c[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_804 $$ RESULT = r[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)[ FD ]
Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_380 $$ Vector list = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_470 $$ list.addElement(elem)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_696 $$ RESULT = r[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_816 $$ RESULT = r[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_425 $$ RESULT = list-->Line_441 $$ RESULT = list[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_413 $$ RESULT = list[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_471 $$ RESULT = list[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_696 $$ RESULT = r[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_471 $$ RESULT = list[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_14 $$ Vector RESULT = null-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_441 $$ RESULT = list[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_696 $$ RESULT = r[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_629 $$ if (scanner.caseless) -->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ CD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_380 $$ Vector list = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_413 $$ RESULT = list[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_668 $$ RESULT = c[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_668 $$ RESULT = c[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_413 $$ RESULT = list-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)[ FD ]
Line_455 $$ RESULT = list-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_804 $$ RESULT = r[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_413 $$ RESULT = list[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_695 $$ RegExp r = (RegExp) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_696 $$ RESULT = r[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_668 $$ RESULT = c[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_816 $$ RESULT = r[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_413 $$ RESULT = list[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_696 $$ RESULT = r[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_768 $$ RESULT = new RegExp1(sym.STAR, r)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_816 $$ RESULT = r[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_696 $$ RESULT = r[ FD ]
Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_816 $$ RESULT = r[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_816 $$ RESULT = r[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_696 $$ RESULT = r[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)[ FD ]
Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_380 $$ Vector list = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_568 $$ charClasses.makeClass(list, Options.jlex && scanner.caseless)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_696 $$ RESULT = r[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_471 $$ RESULT = list[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_413 $$ RESULT = list[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_441 $$ RESULT = list[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_455 $$ RESULT = list-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_425 $$ RESULT = list[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_816 $$ RESULT = r[ FD ]
Line_14 $$ Vector RESULT = null-->Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_816 $$ RESULT = r[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_425 $$ RESULT = list[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_792 $$ RESULT = new RegExp1(sym.BANG, r)-->Line_804 $$ RESULT = r[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_816 $$ RESULT = r[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_439 $$ Vector plist = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).value-->Line_440 $$ for (Enumeration e = plist.elements(); e.hasMoreElements(); ) list.addElement(e.nextElement())[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_816 $$ RESULT = r[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_413 $$ RESULT = list[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_413 $$ RESULT = list[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_768 $$ RESULT = new RegExp1(sym.STAR, r)-->Line_804 $$ RESULT = r[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_441 $$ RESULT = list-->Line_696 $$ RESULT = r[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_816 $$ RESULT = r[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_425 $$ RESULT = list[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_455 $$ RESULT = list[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_471 $$ RESULT = list-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_816 $$ RESULT = r[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_816 $$ RESULT = r[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_696 $$ RESULT = r[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_816 $$ RESULT = r[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_696 $$ RESULT = r-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_668 $$ RESULT = c[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_441 $$ RESULT = list[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_441 $$ RESULT = list[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_413 $$ RESULT = list[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_441 $$ RESULT = list-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_471 $$ RESULT = list-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_455 $$ RESULT = list[ FD ]
Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_696 $$ RESULT = r-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_471 $$ RESULT = list-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_668 $$ RESULT = c-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_668 $$ RESULT = c[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_441 $$ RESULT = list[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_339 $$ int cleft = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).left-->Line_602 $$ syntaxError(ErrorMessages.CS2SMALL_CHAR, cleft, cright)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_696 $$ RESULT = r[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_668 $$ RESULT = c[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_696 $$ RESULT = r[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_366 $$ int identleft = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).left-->Line_384 $$ syntaxError(ErrorMessages.CHARCLASS_MACRO, identleft, identright)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_668 $$ RESULT = c-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_455 $$ RESULT = list[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_696 $$ RESULT = r[ FD ]
Line_441 $$ RESULT = list-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_710 $$ Integer n1 = (Integer) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)).value-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_441 $$ RESULT = list[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_441 $$ RESULT = list[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_816 $$ RESULT = r[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_668 $$ RESULT = c-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_594 $$ if (scanner.caseless) -->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ CD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_816 $$ RESULT = r[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_413 $$ RESULT = list[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_483 $$ int closeleft = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).left-->Line_511 $$ syntaxError(ErrorMessages.CHARSET_2_SMALL, closeleft, closeright)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_413 $$ RESULT = list[ FD ]
Line_14 $$ Vector RESULT = null-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_817 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("concs", 5, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_471 $$ RESULT = list[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_696 $$ RESULT = r[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_629 $$ if (scanner.caseless) -->Line_630 $$ charClasses.makeClass(str, true)[ CD ]
Line_396 $$ RESULT = new Vector()-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_696 $$ RESULT = r[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_668 $$ RESULT = c[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_425 $$ RESULT = list[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_425 $$ RESULT = list[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_668 $$ RESULT = c-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)-->Line_804 $$ RESULT = r[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_441 $$ RESULT = list-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_471 $$ RESULT = list[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_455 $$ RESULT = list[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_425 $$ RESULT = list[ FD ]
Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_696 $$ RESULT = r[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_455 $$ RESULT = list-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_816 $$ RESULT = r[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_817 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("concs", 5, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_804 $$ RESULT = r[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_816 $$ RESULT = r[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_413 $$ RESULT = list[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_483 $$ int closeleft = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).left-->Line_570 $$ syntaxError(ErrorMessages.CHARSET_2_SMALL, closeleft, closeright)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_397 $$ for (int i = 0; i < s.length(); i++) RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))-->Line_412 $$ list.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_366 $$ int identleft = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).left-->Line_369 $$ syntaxError(ErrorMessages.CHARCLASS_MACRO, identleft, identright)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_425 $$ RESULT = list[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_413 $$ RESULT = list[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_425 $$ RESULT = list[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_816 $$ RESULT = r[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_455 $$ RESULT = list-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_455 $$ RESULT = list[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_816 $$ RESULT = r[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_441 $$ RESULT = list[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_816 $$ RESULT = r[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_455 $$ RESULT = list[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_413 $$ RESULT = list[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_696 $$ RESULT = r[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_425 $$ RESULT = list[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_380 $$ Vector list = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_487 $$ list.addElement(new Interval('-', '-'))[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_471 $$ RESULT = list-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_668 $$ RESULT = c[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_816 $$ RESULT = r[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_804 $$ RESULT = r[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_367 $$ int identright = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).right-->Line_384 $$ syntaxError(ErrorMessages.CHARCLASS_MACRO, identleft, identright)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_425 $$ RESULT = list-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_471 $$ RESULT = list[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_817 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("concs", 5, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_696 $$ RESULT = r[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_695 $$ RegExp r = (RegExp) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_816 $$ RESULT = r[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_378 $$ int listleft = ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).left-->Line_654 $$ syntaxError(ErrorMessages.CHARSET_2_SMALL, listleft)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_792 $$ RESULT = new RegExp1(sym.BANG, r)-->Line_816 $$ RESULT = r[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_768 $$ RESULT = new RegExp1(sym.STAR, r)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_804 $$ RESULT = r[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_471 $$ RESULT = list[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_471 $$ RESULT = list[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_14 $$ Vector RESULT = null-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_441 $$ RESULT = list[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_380 $$ Vector list = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_425 $$ RESULT = list[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_696 $$ RESULT = r-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_668 $$ RESULT = c[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_455 $$ RESULT = list[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_668 $$ RESULT = c[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)[ FD ]
Line_804 $$ RESULT = r-->Line_816 $$ RESULT = r[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_425 $$ RESULT = list[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_380 $$ Vector list = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_454 $$ list.addElement(elem)[ FD ]
Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_413 $$ RESULT = list-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_695 $$ RegExp r = (RegExp) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_816 $$ RESULT = r[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_668 $$ RESULT = c[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_413 $$ RESULT = list[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)[ FD ]
Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_483 $$ int closeleft = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).left-->Line_490 $$ syntaxError(ErrorMessages.CHARSET_2_SMALL, closeleft, closeright)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_471 $$ RESULT = list[ FD ]
Line_14 $$ Vector RESULT = null-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_425 $$ RESULT = list[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_380 $$ Vector list = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_508 $$ list.addElement(new Interval('-', '-'))[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_425 $$ RESULT = list[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_425 $$ RESULT = list[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_804 $$ RESULT = r[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_425 $$ RESULT = list-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_441 $$ RESULT = list[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_471 $$ RESULT = list[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_413 $$ RESULT = list[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_413 $$ RESULT = list-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_696 $$ RESULT = r[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_804 $$ RESULT = r[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_668 $$ RESULT = c[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_804 $$ RESULT = r[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_455 $$ RESULT = list-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_471 $$ RESULT = list-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_441 $$ RESULT = list[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_668 $$ RESULT = c[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_668 $$ RESULT = c[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_668 $$ RESULT = c-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_816 $$ RESULT = r[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_441 $$ RESULT = list[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_696 $$ RESULT = r-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_804 $$ RESULT = r[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_696 $$ RESULT = r-->Line_804 $$ RESULT = r[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_816 $$ RESULT = r[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_425 $$ RESULT = list[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_768 $$ RESULT = new RegExp1(sym.STAR, r)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_441 $$ RESULT = list-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_425 $$ RESULT = list[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_668 $$ RESULT = c[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_816 $$ RESULT = r[ FD ]
Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)[ FD ]
Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_668 $$ RESULT = c-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_696 $$ RESULT = r-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_14 $$ Vector RESULT = null-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_668 $$ RESULT = c[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_668 $$ RESULT = c-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_696 $$ RESULT = r[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_804 $$ RESULT = r[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)-->Line_804 $$ RESULT = r[ FD ]
Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)-->Line_816 $$ RESULT = r[ FD ]
Line_425 $$ RESULT = list-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_452 $$ Interval elem = (Interval) ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).value-->Line_470 $$ list.addElement(elem)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_471 $$ RESULT = list[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_696 $$ RESULT = r-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_625 $$ int strleft = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).left-->Line_637 $$ syntaxError(ErrorMessages.CS2SMALL_STRING, strleft, strright)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_816 $$ RESULT = r[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_768 $$ RESULT = new RegExp1(sym.STAR, r)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_455 $$ RESULT = list-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_471 $$ RESULT = list-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_668 $$ RESULT = c[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_804 $$ RESULT = r[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_668 $$ RESULT = c[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_413 $$ RESULT = list[ FD ]
Line_14 $$ Vector RESULT = null-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_441 $$ RESULT = list[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_804 $$ RESULT = r[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_455 $$ RESULT = list-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_817 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("concs", 5, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_425 $$ RESULT = list[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_413 $$ RESULT = list[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_455 $$ RESULT = list[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_425 $$ RESULT = list[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_696 $$ RESULT = r[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_668 $$ RESULT = c[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_696 $$ RESULT = r[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)-->Line_804 $$ RESULT = r[ FD ]
Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)-->Line_804 $$ RESULT = r[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_441 $$ RESULT = list[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_668 $$ RESULT = c[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_804 $$ RESULT = r[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_425 $$ RESULT = list[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_425 $$ RESULT = list[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_455 $$ RESULT = list[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_413 $$ RESULT = list-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_668 $$ RESULT = c-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_425 $$ RESULT = list[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_816 $$ RESULT = r[ FD ]
Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_804 $$ RESULT = r[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_425 $$ RESULT = list[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_413 $$ RESULT = list[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)[ FD ]
Line_413 $$ RESULT = list-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_804 $$ RESULT = r[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_455 $$ RESULT = list[ FD ]
Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_817 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("concs", 5, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)[ FD ]
Line_668 $$ RESULT = c-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)[ FD ]
Line_668 $$ RESULT = c-->Line_816 $$ RESULT = r[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_425 $$ RESULT = list-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_14 $$ Vector RESULT = null-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_455 $$ RESULT = list[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_471 $$ RESULT = list[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_816 $$ RESULT = r[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_627 $$ String str = (String) ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).value-->Line_633 $$ charClasses.makeClass(str, false)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_413 $$ RESULT = list[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_668 $$ RESULT = c[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_441 $$ RESULT = list-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)[ FD ]
Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_816 $$ RESULT = r[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_455 $$ RESULT = list[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_441 $$ RESULT = list[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_441 $$ RESULT = list-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_816 $$ RESULT = r[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_696 $$ RESULT = r[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_804 $$ RESULT = r[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_804 $$ RESULT = r[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_471 $$ RESULT = list[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_804 $$ RESULT = r[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_817 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("concs", 5, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_341 $$ Character c = (Character) ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).value-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_804 $$ RESULT = r[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_816 $$ RESULT = r[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_668 $$ RESULT = c[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_441 $$ RESULT = list[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_696 $$ RESULT = r-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_817 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("concs", 5, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_441 $$ RESULT = list-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_380 $$ Vector list = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_546 $$ list.addElement(new Interval((char) 0, CharClasses.maxChar))[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_413 $$ RESULT = list[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_696 $$ RESULT = r-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_413 $$ RESULT = list-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_367 $$ int identright = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).right-->Line_369 $$ syntaxError(ErrorMessages.CHARCLASS_MACRO, identleft, identright)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_696 $$ RESULT = r-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_668 $$ RESULT = c-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_816 $$ RESULT = r[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_14 $$ Vector RESULT = null-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_455 $$ RESULT = list[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_696 $$ RESULT = r[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_816 $$ RESULT = r[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_441 $$ RESULT = list[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_668 $$ RESULT = c[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_696 $$ RESULT = r[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_441 $$ RESULT = list[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_804 $$ RESULT = r[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_441 $$ RESULT = list[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_668 $$ RESULT = c[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_413 $$ RESULT = list[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_768 $$ RESULT = new RegExp1(sym.STAR, r)-->Line_816 $$ RESULT = r[ FD ]
Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_804 $$ RESULT = r[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_696 $$ RESULT = r-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_425 $$ RESULT = list-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_441 $$ RESULT = list[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_804 $$ RESULT = r[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_629 $$ if (scanner.caseless) -->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ CD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_668 $$ RESULT = c[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_804 $$ RESULT = r[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_483 $$ int closeleft = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).left-->Line_531 $$ syntaxError(ErrorMessages.CHARSET_2_SMALL, closeleft, closeright)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_804 $$ RESULT = r[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_804 $$ RESULT = r[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_696 $$ RESULT = r[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_413 $$ RESULT = list-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_425 $$ RESULT = list[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_471 $$ RESULT = list[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_425 $$ RESULT = list[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_471 $$ RESULT = list-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_668 $$ RESULT = c[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_668 $$ RESULT = c[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_668 $$ RESULT = c[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_804 $$ RESULT = r[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_471 $$ RESULT = list[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_471 $$ RESULT = list[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_696 $$ RESULT = r[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_425 $$ RESULT = list[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_816 $$ RESULT = r[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_471 $$ RESULT = list[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_353 $$ Character c1 = (Character) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)).value-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_696 $$ RESULT = r[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_455 $$ RESULT = list[ FD ]
Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_696 $$ RESULT = r[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_441 $$ RESULT = list[ FD ]
Line_14 $$ Vector RESULT = null-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_471 $$ RESULT = list-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_441 $$ RESULT = list[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_695 $$ RegExp r = (RegExp) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_804 $$ RESULT = r[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_471 $$ RESULT = list[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_668 $$ RESULT = c[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_668 $$ RESULT = c[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_425 $$ RESULT = list-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_629 $$ if (scanner.caseless) -->Line_633 $$ charClasses.makeClass(str, false)[ CD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_471 $$ RESULT = list[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_455 $$ RESULT = list-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_696 $$ RESULT = r[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_413 $$ RESULT = list[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_816 $$ RESULT = r[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_413 $$ RESULT = list[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_817 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("concs", 5, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_413 $$ RESULT = list[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_471 $$ RESULT = list[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_413 $$ RESULT = list-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_441 $$ RESULT = list-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_696 $$ RESULT = r[ FD ]
Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_729 $$ int bleft = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).left-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_413 $$ RESULT = list[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_471 $$ RESULT = list[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_425 $$ RESULT = list[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_413 $$ RESULT = list-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_696 $$ RESULT = r-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)-->Line_816 $$ RESULT = r[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_441 $$ RESULT = list[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_455 $$ RESULT = list[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_696 $$ RESULT = r[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_696 $$ RESULT = r[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_817 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("concs", 5, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_380 $$ Vector list = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_529 $$ charClasses.makeClassNot(list, Options.jlex && scanner.caseless)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_668 $$ RESULT = c-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_380 $$ Vector list = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_455 $$ RESULT = list[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_441 $$ RESULT = list[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_816 $$ RESULT = r[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_441 $$ RESULT = list[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_441 $$ RESULT = list[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_668 $$ RESULT = c[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_455 $$ RESULT = list[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_441 $$ RESULT = list[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_696 $$ RESULT = r[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_696 $$ RESULT = r-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_816 $$ RESULT = r[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_380 $$ Vector list = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_471 $$ RESULT = list[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_804 $$ RESULT = r[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_455 $$ RESULT = list[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)[ FD ]
Line_425 $$ RESULT = list-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)[ FD ]
Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_696 $$ RESULT = r[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)[ FD ]
Line_471 $$ RESULT = list-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_627 $$ String str = (String) ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).value-->Line_630 $$ charClasses.makeClass(str, true)[ FD ]
Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_696 $$ RESULT = r-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_696 $$ RESULT = r[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_471 $$ RESULT = list-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_816 $$ RESULT = r[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_713 $$ Integer n2 = (Integer) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_668 $$ RESULT = c-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_804 $$ RESULT = r[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)[ FD ]
Line_804 $$ RESULT = r-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_471 $$ RESULT = list[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_425 $$ RESULT = list[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_668 $$ RESULT = c[ FD ]
Line_395 $$ String s = (String) ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).value-->Line_397 $$ for (int i = 0; i < s.length(); i++) RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_471 $$ RESULT = list[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_413 $$ RESULT = list[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_816 $$ RESULT = r[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_696 $$ RESULT = r[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_413 $$ RESULT = list[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_696 $$ RESULT = r[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_696 $$ RESULT = r[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_471 $$ RESULT = list[ FD ]
Line_14 $$ Vector RESULT = null-->Line_816 $$ RESULT = r[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_804 $$ RESULT = r[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_804 $$ RESULT = r[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_804 $$ RESULT = r[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_768 $$ RESULT = new RegExp1(sym.STAR, r)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_425 $$ RESULT = list[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_380 $$ Vector list = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_488 $$ charClasses.makeClassNot(list, Options.jlex && scanner.caseless)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_471 $$ RESULT = list[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_804 $$ RESULT = r[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_425 $$ RESULT = list-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_425 $$ RESULT = list[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_413 $$ RESULT = list[ FD ]
Line_441 $$ RESULT = list-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_380 $$ Vector list = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_441 $$ RESULT = list[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_816 $$ RESULT = r[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_668 $$ RESULT = c[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_816 $$ RESULT = r[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_804 $$ RESULT = r[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_455 $$ RESULT = list[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_425 $$ RESULT = list[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_804 $$ RESULT = r[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_413 $$ RESULT = list-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_804 $$ RESULT = r[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_668 $$ RESULT = c[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_626 $$ int strright = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).right-->Line_637 $$ syntaxError(ErrorMessages.CS2SMALL_STRING, strleft, strright)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_425 $$ RESULT = list[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_413 $$ RESULT = list[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_425 $$ RESULT = list[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_816 $$ RESULT = r[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_395 $$ String s = (String) ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).value-->Line_412 $$ for (int i = 0; i < s.length(); i++) list.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)-->Line_816 $$ RESULT = r[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_696 $$ RESULT = r[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_696 $$ RESULT = r[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_804 $$ RESULT = r[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_471 $$ RESULT = list[ FD ]
Line_397 $$ for (int i = 0; i < s.length(); i++) RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))-->Line_412 $$ for (int i = 0; i < s.length(); i++) list.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_696 $$ RESULT = r[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_413 $$ RESULT = list[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_441 $$ RESULT = list-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_425 $$ RESULT = list[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_594 $$ if (scanner.caseless) -->Line_595 $$ charClasses.makeClass(c.charValue(), true)[ CD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_696 $$ RESULT = r[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_668 $$ RESULT = c[ FD ]
Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_804 $$ RESULT = r[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_816 $$ RESULT = r[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_696 $$ RESULT = r-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_634 $$ RESULT = new RegExp1(sym.STRING, str)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_696 $$ RESULT = r[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_668 $$ RESULT = c[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_668 $$ RESULT = c-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_455 $$ RESULT = list[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_668 $$ RESULT = c[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_471 $$ RESULT = list-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_696 $$ RESULT = r[ FD ]
Line_425 $$ RESULT = list-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_471 $$ RESULT = list-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_425 $$ RESULT = list-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_696 $$ RESULT = r[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_413 $$ RESULT = list[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_380 $$ Vector list = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_509 $$ charClasses.makeClass(list, Options.jlex && scanner.caseless)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_792 $$ RESULT = new RegExp1(sym.BANG, r)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_696 $$ RESULT = r[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_471 $$ RESULT = list[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_668 $$ RESULT = c[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_804 $$ RESULT = r[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_680 $$ if (!scanner.macroDefinition) -->Line_681 $$ if (!macros.markUsed(ident))[ CD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_413 $$ RESULT = list[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_413 $$ RESULT = list[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_471 $$ RESULT = list[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_455 $$ RESULT = list[ FD ]
Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_425 $$ RESULT = list[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_455 $$ RESULT = list-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_455 $$ RESULT = list[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_455 $$ RESULT = list[ FD ]
Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_455 $$ RESULT = list[ FD ]
Line_14 $$ Vector RESULT = null-->Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_668 $$ RESULT = c-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_380 $$ Vector list = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_412 $$ list.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_455 $$ RESULT = list[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_455 $$ RESULT = list[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_696 $$ RESULT = r[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_471 $$ RESULT = list[ FD ]
Line_413 $$ RESULT = list-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_455 $$ RESULT = list[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_471 $$ RESULT = list[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_455 $$ RESULT = list[ FD ]
Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_425 $$ RESULT = list[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_816 $$ RESULT = r[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_668 $$ RESULT = c[ FD ]
Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_696 $$ RESULT = r[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)[ FD ]
Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_804 $$ RESULT = r[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_395 $$ String s = (String) ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).value-->Line_412 $$ list.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_792 $$ RESULT = new RegExp1(sym.BANG, r)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_616 $$ RESULT = new RegExp1(sym.CCLASSNOT, any)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_187 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_804 $$ RESULT = r[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_817 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("concs", 5, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_413 $$ RESULT = list[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_816 $$ RESULT = r[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_684 $$ RESULT = new RegExp1(sym.MACROUSE, ident)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_816 $$ RESULT = r[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_792 $$ RESULT = new RegExp1(sym.BANG, r)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_471 $$ RESULT = list-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_471 $$ RESULT = list[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_455 $$ RESULT = list[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)[ FD ]
Line_395 $$ String s = (String) ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).value-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_14 $$ Vector RESULT = null-->Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_696 $$ RESULT = r[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_231 $$ RESULT = makePreClass(sym.UNICODE_OTHER_LETTER)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_425 $$ RESULT = list-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_441 $$ RESULT = list-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_16 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_397 $$ RESULT.addElement(new Interval(s.charAt(i), s.charAt(i)))[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_581 $$ RESULT = new RegExp1(sym.CCLASS, null)-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_79 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_455 $$ RESULT = list[ FD ]
Line_413 $$ RESULT = list-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_534 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_240 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_LETTER)-->Line_441 $$ RESULT = list[ FD ]
Line_340 $$ int cright = ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).right-->Line_602 $$ syntaxError(ErrorMessages.CS2SMALL_CHAR, cleft, cright)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_780 $$ RESULT = new RegExp1(sym.TILDE, r)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_668 $$ RESULT = c[ FD ]
Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_728 $$ Integer n = (Integer) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_370 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_455 $$ RESULT = list[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_396 $$ RESULT = new Vector()-->Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_441 $$ RESULT = list[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_756 $$ RESULT = new RegExp1(sym.PLUS, r)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_160 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_441 $$ RESULT = list[ FD ]
Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_15 $$ RESULT = makePreClass(sym.UNICODE_FINAL_QUOTE_PUNCTUATION)-->Line_413 $$ RESULT = list[ FD ]
Line_441 $$ RESULT = list-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_732 $$ RESULT = makeRepeat(r, n.intValue(), n.intValue(), bleft, bright)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_124 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_341 $$ Character c = (Character) ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).value-->Line_668 $$ RESULT = c[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_241 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_455 $$ RESULT = list[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_303 $$ RESULT = makePreClass(sym.DIGITCLASS)-->Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_321 $$ RESULT = makePreClass(sym.JLETTERDIGITCLASS)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_205 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_582 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_513 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_696 $$ RESULT = r[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_413 $$ RESULT = list-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_60 $$ RESULT = makePreClass(sym.UNICODE_MATH_SYMBOL)-->Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)[ FD ]
Line_43 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_304 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_413 $$ RESULT = list[ FD ]
Line_441 $$ RESULT = list-->Line_471 $$ RESULT = list[ FD ]
Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)-->Line_268 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_159 $$ RESULT = makePreClass(sym.UNICODE_LINE_SEPARATOR)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_714 $$ RESULT = makeRepeat(r, n1.intValue(), n2.intValue(), n1left, n2right)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_249 $$ RESULT = makePreClass(sym.UNICODE_TITLECASE_LETTER)-->Line_330 $$ RESULT = makePreClass(sym.JLETTERCLASS)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_396 $$ RESULT = new Vector()[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)-->Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_634 $$ RESULT = new RegExp1(sym.STRING, str)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_781 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_413 $$ RESULT = list[ FD ]
Line_425 $$ RESULT = list-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_441 $$ RESULT = list-->Line_552 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_286 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)-->Line_668 $$ RESULT = c[ FD ]
Line_14 $$ Vector RESULT = null-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)[ FD ]
Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)-->Line_441 $$ RESULT = list[ FD ]
Line_204 $$ RESULT = makePreClass(sym.UNICODE_COMBINING_SPACING_MARK)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_631 $$ RESULT = new RegExp1(sym.STRING_I, str)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_744 $$ RESULT = new RegExp1(sym.QUESTION, r)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_715 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_51 $$ RESULT = makePreClass(sym.UNICODE_CURRENCY_SYMBOL)-->Line_232 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_42 $$ RESULT = makePreClass(sym.UNICODE_MODIFIER_SYMBOL)-->Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_426 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_259 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_222 $$ RESULT = makePreClass(sym.UNICODE_NON_SPACING_MARK)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_25 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_769 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_195 $$ RESULT = makePreClass(sym.UNICODE_DECIMAL_DIGIT_NUMBER)-->Line_223 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_87 $$ RESULT = makePreClass(sym.UNICODE_END_PUNCTUATION)-->Line_169 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_357 $$ RESULT = new Interval(c1.charValue(), c2.charValue())[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)[ FD ]
Line_14 $$ Vector RESULT = null-->Line_639 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_696 $$ RESULT = r-->Line_816 $$ RESULT = r[ FD ]
Line_52 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_61 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_106 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_596 $$ RESULT = new RegExp1(sym.CHAR_I, c)[ FD ]
Line_213 $$ RESULT = makePreClass(sym.UNICODE_ENCLOSING_MARK)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_398 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_553 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_132 $$ RESULT = makePreClass(sym.UNICODE_FORMAT)-->Line_312 $$ RESULT = makePreClass(sym.LETTERCLASS)[ FD ]
Line_142 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_380 $$ Vector list = (Vector) ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)).value-->Line_548 $$ charClasses.makeClass(list, false)[ FD ]
Line_70 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_133 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_358 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_414 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_33 $$ RESULT = makePreClass(sym.UNICODE_OTHER_SYMBOL)-->Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_295 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_88 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_141 $$ RESULT = makePreClass(sym.UNICODE_CONTROL)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_572 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_599 $$ RESULT = new RegExp1(sym.CHAR, c)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_250 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_196 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)[ FD ]
Line_34 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_294 $$ RESULT = makePreClass(sym.UPPERCLASS)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_285 $$ RESULT = makePreClass(sym.LOWERCLASS)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_341 $$ Character c = (Character) ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()).value-->Line_598 $$ charClasses.makeClass(c.charValue(), false)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_793 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_331 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_514 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 3)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_186 $$ RESULT = makePreClass(sym.UNICODE_LETTER_NUMBER)-->Line_733 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_276 $$ RESULT = makePreClass(sym.UNICODE_UNASSIGNED)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_97 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_745 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_425 $$ RESULT = list[ FD ]
Line_177 $$ RESULT = makePreClass(sym.UNICODE_OTHER_NUMBER)-->Line_471 $$ RESULT = list[ FD ]
Line_656 $$ RESULT = new RegExp1(sym.CCLASS, list)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_342 $$ RESULT = new Interval(c.charValue(), c.charValue())[ FD ]
Line_313 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_472 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_150 $$ RESULT = makePreClass(sym.UNICODE_PARAGRAPH_SEPARATOR)-->Line_804 $$ RESULT = r[ FD ]
Line_24 $$ RESULT = makePreClass(sym.UNICODE_INITIAL_QUOTE_PUNCTUATION)-->Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_267 $$ RESULT = makePreClass(sym.UNICODE_UPPERCASE_LETTER)[ FD ]
Line_492 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_805 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("nregexp", 6, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_533 $$ RESULT = new RegExp1(sym.CCLASSNOT, list)-->Line_669 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_442 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_455 $$ RESULT = list[ FD ]
Line_151 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_757 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_214 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_573 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_178 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_697 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 2)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_105 $$ RESULT = makePreClass(sym.UNICODE_DASH_PUNCTUATION)-->Line_385 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 1)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_456 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontent", 13, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_493 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("charclass", 8, ((java_cup.runtime.Symbol) CUP$LexParse$stack.elementAt(CUP$LexParse$top - 4)), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_69 $$ RESULT = makePreClass(sym.UNICODE_OTHER_PUNCTUATION)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_96 $$ RESULT = makePreClass(sym.UNICODE_START_PUNCTUATION)-->Line_768 $$ RESULT = new RegExp1(sym.STAR, r)[ FD ]
Line_78 $$ RESULT = makePreClass(sym.UNICODE_CONNECTOR_PUNCTUATION)-->Line_114 $$ RESULT = makePreClass(sym.UNICODE_SURROGATE)[ FD ]
Line_168 $$ RESULT = makePreClass(sym.UNICODE_SPACE_SEPARATOR)-->Line_685 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_115 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_322 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_657 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_277 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("preclass", 14, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_604 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_343 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("classcontentelem", 10, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)-->Line_617 $$ CUP$LexParse$result = parser.getSymbolFactory().newSymbol("regexp", 7, ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), ((java_cup.runtime.Symbol) CUP$LexParse$stack.peek()), RESULT)[ FD ]
Line_123 $$ RESULT = makePreClass(sym.UNICODE_PRIVATE_USE)-->Line_258 $$ RESULT = makePreClass(sym.UNICODE_LOWERCASE_LETTER)[ FD ]
