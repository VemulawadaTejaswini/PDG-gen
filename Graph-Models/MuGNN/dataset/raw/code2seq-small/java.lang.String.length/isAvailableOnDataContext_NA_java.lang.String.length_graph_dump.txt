Line_11 $$ XmlTag tag = (XmlTag) parent-->Line_12 $$ String prefix = tag.getNamespacePrefix()[ FD ]
Line_4 $$ final PsiElement element = getElement(dataContext)-->Line_7 $$ PsiElement parent = element.getParent()[ FD ]
Line_13 $$ if (StringUtil.isNotEmpty(prefix)) -->Line_14 $$ Editor editor = getEditor(dataContext)[ CD ]
Line_13 $$ if (StringUtil.isNotEmpty(prefix)) -->Line_16 $$ int offset = editor.getCaretModel().getOffset()[ CD ]
Line_16 $$ int offset = editor.getCaretModel().getOffset()-->Line_17 $$ if (offset <= element.getTextRange().getStartOffset() + prefix.length()) [ FD ]
Line_4 $$ final PsiElement element = getElement(dataContext)-->Line_17 $$ if (offset <= element.getTextRange().getStartOffset() + prefix.length()) [ FD ]
Line_12 $$ String prefix = tag.getNamespacePrefix()-->Line_13 $$ if (StringUtil.isNotEmpty(prefix)) [ FD ]
Line_12 $$ String prefix = tag.getNamespacePrefix()-->Line_17 $$ if (offset <= element.getTextRange().getStartOffset() + prefix.length()) [ FD ]
Line_17 $$ if (offset <= element.getTextRange().getStartOffset() + prefix.length()) -->Line_18 $$ return false[ CD ]
Line_4 $$ final PsiElement element = getElement(dataContext)-->Line_5 $$ if (element == null || PsiElementRenameHandler.isVetoed(element))[ FD ]
Line_14 $$ Editor editor = getEditor(dataContext)-->Line_16 $$ int offset = editor.getCaretModel().getOffset()[ FD ]
Line_5 $$ if (element == null || PsiElementRenameHandler.isVetoed(element))-->Line_6 $$ return false[ CD ]
Line_13 $$ if (StringUtil.isNotEmpty(prefix)) -->Line_17 $$ if (offset <= element.getTextRange().getStartOffset() + prefix.length()) [ CD ]
Line_8 $$ if (!(parent instanceof XmlTag)) -->Line_9 $$ return false[ CD ]
