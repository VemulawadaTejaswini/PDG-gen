Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_10 $$ Assert.assertEquals(className.length() + contextName.length() + 11, byteBuffer.limit())[ FD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_17 $$ Assert.assertEquals(className.length(), byteBuffer.getInt())[ FD ]
Line_8 $$ String contextName = StringPool.NULL-->Line_13 $$ Assert.assertEquals(contextName.length(), byteBuffer.getInt())[ FD ]
Line_2 $$ public void testWriteObjectClassWithNullContextName() throws UnsupportedEncodingException -->Line_10 $$ Assert.assertEquals(className.length() + contextName.length() + 11, byteBuffer.limit())[ CD ]
Line_2 $$ public void testWriteObjectClassWithNullContextName() throws UnsupportedEncodingException -->Line_16 $$ Assert.assertEquals(1, byteBuffer.get())[ CD ]
Line_2 $$ public void testWriteObjectClassWithNullContextName() throws UnsupportedEncodingException -->Line_11 $$ Assert.assertEquals(SerializationConstants.TC_CLASS, byteBuffer.get())[ CD ]
Line_7 $$ String className = clazz.getName()-->Line_17 $$ Assert.assertEquals(className.length(), byteBuffer.getInt())[ FD ]
Line_2 $$ public void testWriteObjectClassWithNullContextName() throws UnsupportedEncodingException -->Line_5 $$ serializer.writeObject(clazz)[ CD ]
Line_4 $$ Class<?> clazz = getClass()-->Line_7 $$ String className = clazz.getName()[ FD ]
Line_2 $$ public void testWriteObjectClassWithNullContextName() throws UnsupportedEncodingException -->Line_9 $$ byte[] contextNameBytes = contextName.getBytes(StringPool.UTF8)[ CD ]
Line_2 $$ public void testWriteObjectClassWithNullContextName() throws UnsupportedEncodingException -->Line_13 $$ Assert.assertEquals(contextName.length(), byteBuffer.getInt())[ CD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_11 $$ Assert.assertEquals(SerializationConstants.TC_CLASS, byteBuffer.get())[ FD ]
Line_2 $$ public void testWriteObjectClassWithNullContextName() throws UnsupportedEncodingException -->Line_17 $$ Assert.assertEquals(className.length(), byteBuffer.getInt())[ CD ]
Line_7 $$ String className = clazz.getName()-->Line_10 $$ Assert.assertEquals(className.length() + contextName.length() + 11, byteBuffer.limit())[ FD ]
Line_2 $$ public void testWriteObjectClassWithNullContextName() throws UnsupportedEncodingException -->Line_12 $$ Assert.assertEquals(1, byteBuffer.get())[ CD ]
Line_3 $$ Serializer serializer = new Serializer()-->Line_5 $$ serializer.writeObject(clazz)[ FD ]
Line_2 $$ public void testWriteObjectClassWithNullContextName() throws UnsupportedEncodingException -->Line_4 $$ Class<?> clazz = getClass()[ CD ]
Line_2 $$ public void testWriteObjectClassWithNullContextName() throws UnsupportedEncodingException -->Line_7 $$ String className = clazz.getName()[ CD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_12 $$ Assert.assertEquals(1, byteBuffer.get())[ FD ]
Line_8 $$ String contextName = StringPool.NULL-->Line_9 $$ byte[] contextNameBytes = contextName.getBytes(StringPool.UTF8)[ FD ]
Line_2 $$ public void testWriteObjectClassWithNullContextName() throws UnsupportedEncodingException -->Line_8 $$ String contextName = StringPool.NULL[ CD ]
Line_4 $$ Class<?> clazz = getClass()-->Line_5 $$ serializer.writeObject(clazz)[ FD ]
Line_3 $$ Serializer serializer = new Serializer()-->Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()[ FD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_13 $$ Assert.assertEquals(contextName.length(), byteBuffer.getInt())[ FD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_16 $$ Assert.assertEquals(1, byteBuffer.get())[ FD ]
Line_7 $$ String className = clazz.getName()-->Line_18 $$ Assert.assertEquals(className, new String(byteBuffer.array(), byteBuffer.position(), byteBuffer.remaining(), StringPool.UTF8))[ FD ]
Line_2 $$ public void testWriteObjectClassWithNullContextName() throws UnsupportedEncodingException -->Line_3 $$ Serializer serializer = new Serializer()[ CD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_15 $$ byteBuffer.position(byteBuffer.position() + contextNameBytes.length)[ FD ]
Line_8 $$ String contextName = StringPool.NULL-->Line_10 $$ Assert.assertEquals(className.length() + contextName.length() + 11, byteBuffer.limit())[ FD ]
Line_8 $$ String contextName = StringPool.NULL-->Line_14 $$ Assert.assertEquals(contextName, new String(byteBuffer.array(), byteBuffer.position(), contextNameBytes.length, StringPool.UTF8))[ FD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_18 $$ Assert.assertEquals(className, new String(byteBuffer.array(), byteBuffer.position(), byteBuffer.remaining(), StringPool.UTF8))[ FD ]
Line_2 $$ public void testWriteObjectClassWithNullContextName() throws UnsupportedEncodingException -->Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()[ CD ]
Line_2 $$ public void testWriteObjectClassWithNullContextName() throws UnsupportedEncodingException -->Line_18 $$ Assert.assertEquals(className, new String(byteBuffer.array(), byteBuffer.position(), byteBuffer.remaining(), StringPool.UTF8))[ CD ]
Line_2 $$ public void testWriteObjectClassWithNullContextName() throws UnsupportedEncodingException -->Line_14 $$ Assert.assertEquals(contextName, new String(byteBuffer.array(), byteBuffer.position(), contextNameBytes.length, StringPool.UTF8))[ CD ]
Line_2 $$ public void testWriteObjectClassWithNullContextName() throws UnsupportedEncodingException -->Line_15 $$ byteBuffer.position(byteBuffer.position() + contextNameBytes.length)[ CD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_14 $$ Assert.assertEquals(contextName, new String(byteBuffer.array(), byteBuffer.position(), contextNameBytes.length, StringPool.UTF8))[ FD ]
