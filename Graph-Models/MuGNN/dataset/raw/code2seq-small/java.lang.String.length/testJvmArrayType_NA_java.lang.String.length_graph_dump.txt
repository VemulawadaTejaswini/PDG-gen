Line_2 $$ public void testJvmArrayType() throws Throwable -->Line_8 $$ assertEquals(PsiType.getJavaLangString(getPsiManager(), GlobalSearchScope.allScope(getProject())).resolve(), reference.resolve())[ CD ]
Line_2 $$ public void testJvmArrayType() throws Throwable -->Line_3 $$ final MyElement element = createElement("<a><jvm-psi-type>[Ljava.lang.String;</jvm-psi-type></a>")[ CD ]
Line_6 $$ final PsiReference reference = tag.getContainingFile().findReferenceAt(valueRange.getEndOffset() - 1)-->Line_9 $$ assertEquals("<jvm-psi-type>[Ljava.lang.".length(), reference.getRangeInElement().getStartOffset())[ FD ]
Line_4 $$ final XmlTag tag = element.getJvmPsiType().getXmlTag()-->Line_6 $$ final PsiReference reference = tag.getContainingFile().findReferenceAt(valueRange.getEndOffset() - 1)[ FD ]
Line_2 $$ public void testJvmArrayType() throws Throwable -->Line_7 $$ assertNotNull(reference)[ CD ]
Line_2 $$ public void testJvmArrayType() throws Throwable -->Line_5 $$ final TextRange valueRange = tag.getValue().getTextRange()[ CD ]
Line_6 $$ final PsiReference reference = tag.getContainingFile().findReferenceAt(valueRange.getEndOffset() - 1)-->Line_8 $$ assertEquals(PsiType.getJavaLangString(getPsiManager(), GlobalSearchScope.allScope(getProject())).resolve(), reference.resolve())[ FD ]
Line_3 $$ final MyElement element = createElement("<a><jvm-psi-type>[Ljava.lang.String;</jvm-psi-type></a>")-->Line_4 $$ final XmlTag tag = element.getJvmPsiType().getXmlTag()[ FD ]
Line_2 $$ public void testJvmArrayType() throws Throwable -->Line_6 $$ final PsiReference reference = tag.getContainingFile().findReferenceAt(valueRange.getEndOffset() - 1)[ CD ]
Line_5 $$ final TextRange valueRange = tag.getValue().getTextRange()-->Line_6 $$ final PsiReference reference = tag.getContainingFile().findReferenceAt(valueRange.getEndOffset() - 1)[ FD ]
Line_2 $$ public void testJvmArrayType() throws Throwable -->Line_10 $$ assertEquals("String".length(), reference.getRangeInElement().getLength())[ CD ]
Line_6 $$ final PsiReference reference = tag.getContainingFile().findReferenceAt(valueRange.getEndOffset() - 1)-->Line_10 $$ assertEquals("String".length(), reference.getRangeInElement().getLength())[ FD ]
Line_6 $$ final PsiReference reference = tag.getContainingFile().findReferenceAt(valueRange.getEndOffset() - 1)-->Line_7 $$ assertNotNull(reference)[ FD ]
Line_2 $$ public void testJvmArrayType() throws Throwable -->Line_4 $$ final XmlTag tag = element.getJvmPsiType().getXmlTag()[ CD ]
Line_2 $$ public void testJvmArrayType() throws Throwable -->Line_9 $$ assertEquals("<jvm-psi-type>[Ljava.lang.".length(), reference.getRangeInElement().getStartOffset())[ CD ]
Line_4 $$ final XmlTag tag = element.getJvmPsiType().getXmlTag()-->Line_5 $$ final TextRange valueRange = tag.getValue().getTextRange()[ FD ]
