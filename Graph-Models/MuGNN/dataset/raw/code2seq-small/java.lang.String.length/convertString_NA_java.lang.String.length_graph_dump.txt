Line_7 $$ if (!isEmptyOrSpaces(groupStr)) -->Line_8 $$ final StringPair group = getPair(groupStr, Character.toString(GROUP_SEPARATOR))[ CD ]
Line_12 $$ if (groupId.length() < GroupDescriptor.MAX_ID_LENGTH) -->Line_13 $$ descriptors.putAll(convertValueString(GroupDescriptor.create(groupId), group.second))[ CD ]
Line_9 $$ if (group != null) -->Line_12 $$ if (groupId.length() < GroupDescriptor.MAX_ID_LENGTH) [ CD ]
Line_8 $$ final StringPair group = getPair(groupStr, Character.toString(GROUP_SEPARATOR))-->Line_9 $$ if (group != null) [ FD ]
Line_6 $$ for (String groupStr : usages.split(Character.toString(GROUPS_SEPARATOR))) -->Line_7 $$ if (!isEmptyOrSpaces(groupStr)) [ FD ]
Line_10 $$ final String groupId = group.first-->Line_12 $$ if (groupId.length() < GroupDescriptor.MAX_ID_LENGTH) [ FD ]
Line_7 $$ if (!isEmptyOrSpaces(groupStr)) -->Line_9 $$ if (group != null) [ CD ]
Line_5 $$ Map<GroupDescriptor, Set<UsageDescriptor>> descriptors = new HashMap<GroupDescriptor, Set<UsageDescriptor>>()-->Line_13 $$ descriptors.putAll(convertValueString(GroupDescriptor.create(groupId), group.second))[ FD ]
Line_6 $$ for (String groupStr : usages.split(Character.toString(GROUPS_SEPARATOR))) -->Line_8 $$ final StringPair group = getPair(groupStr, Character.toString(GROUP_SEPARATOR))[ FD ]
Line_10 $$ final String groupId = group.first-->Line_13 $$ descriptors.putAll(convertValueString(GroupDescriptor.create(groupId), group.second))[ FD ]
Line_9 $$ if (group != null) -->Line_10 $$ final String groupId = group.first[ CD ]
