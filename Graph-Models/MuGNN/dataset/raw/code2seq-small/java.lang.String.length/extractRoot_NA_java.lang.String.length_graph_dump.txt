Line_9 $$ if (URLUtil.FILE_PROTOCOL.equals(protocol)) -->Line_10 $$ String path = resourceURL.getFile()[ CD ]
Line_14 $$ resultPath = path.substring(0, path.length() - resourcePath.length())-->Line_29 $$ resultPath = StringUtil.trimEnd(resultPath, File.separator)[ FD ]
Line_27 $$ resultPath = resultPath.substring(1)-->Line_30 $$ resultPath = URLUtil.unescapePercentSequences(resultPath)[ FD ]
Line_2 $$ private static String extractRoot(URL resourceURL, String resourcePath) -->Line_12 $$ String testResourcePath = resourcePath.replace('\\', '/')[ FD ]
Line_13 $$ if (StringUtil.endsWithIgnoreCase(testPath, testResourcePath)) -->Line_14 $$ resultPath = path.substring(0, path.length() - resourcePath.length())[ CD ]
Line_27 $$ resultPath = resultPath.substring(1)-->Line_29 $$ resultPath = StringUtil.trimEnd(resultPath, File.separator)[ FD ]
Line_7 $$ String resultPath = null-->Line_26 $$ if (SystemInfo.isWindows && resultPath.startsWith("/")) [ FD ]
Line_9 $$ if (URLUtil.FILE_PROTOCOL.equals(protocol)) -->Line_11 $$ String testPath = path.replace('\\', '/')[ CD ]
Line_2 $$ private static String extractRoot(URL resourceURL, String resourcePath) -->Line_8 $$ String protocol = resourceURL.getProtocol()[ FD ]
Line_10 $$ String path = resourceURL.getFile()-->Line_11 $$ String testPath = path.replace('\\', '/')[ FD ]
Line_14 $$ resultPath = path.substring(0, path.length() - resourcePath.length())-->Line_22 $$ if (resultPath == null) [ FD ]
Line_2 $$ private static String extractRoot(URL resourceURL, String resourcePath) -->Line_14 $$ resultPath = path.substring(0, path.length() - resourcePath.length())[ FD ]
Line_3 $$ if (!(StringUtil.startsWithChar(resourcePath, '/') || StringUtil.startsWithChar(resourcePath, '\\'))) -->Line_5 $$ return null[ CD ]
Line_26 $$ if (SystemInfo.isWindows && resultPath.startsWith("/")) -->Line_27 $$ resultPath = resultPath.substring(1)[ CD ]
Line_7 $$ String resultPath = null-->Line_30 $$ resultPath = URLUtil.unescapePercentSequences(resultPath)[ FD ]
Line_7 $$ String resultPath = null-->Line_27 $$ resultPath = resultPath.substring(1)[ FD ]
Line_2 $$ private static String extractRoot(URL resourceURL, String resourcePath) -->Line_26 $$ if (SystemInfo.isWindows && resultPath.startsWith("/")) [ CD ]
Line_14 $$ resultPath = path.substring(0, path.length() - resourcePath.length())-->Line_26 $$ if (SystemInfo.isWindows && resultPath.startsWith("/")) [ FD ]
Line_17 $$ Pair<String, String> paths = URLUtil.splitJarUrl(resourceURL.getFile())-->Line_18 $$ if (paths != null) [ FD ]
Line_7 $$ String resultPath = null-->Line_29 $$ resultPath = StringUtil.trimEnd(resultPath, File.separator)[ FD ]
Line_22 $$ if (resultPath == null) -->Line_23 $$ log("cannot extract: " + resourcePath + " from " + resourceURL)[ CD ]
Line_14 $$ resultPath = path.substring(0, path.length() - resourcePath.length())-->Line_27 $$ resultPath = resultPath.substring(1)[ FD ]
Line_9 $$ if (URLUtil.FILE_PROTOCOL.equals(protocol)) -->Line_13 $$ if (StringUtil.endsWithIgnoreCase(testPath, testResourcePath)) [ CD ]
Line_14 $$ resultPath = path.substring(0, path.length() - resourcePath.length())-->Line_30 $$ resultPath = URLUtil.unescapePercentSequences(resultPath)[ FD ]
Line_9 $$ if (URLUtil.FILE_PROTOCOL.equals(protocol)) -->Line_12 $$ String testResourcePath = resourcePath.replace('\\', '/')[ CD ]
Line_22 $$ if (resultPath == null) -->Line_24 $$ return null[ CD ]
Line_8 $$ String protocol = resourceURL.getProtocol()-->Line_9 $$ if (URLUtil.FILE_PROTOCOL.equals(protocol)) [ FD ]
Line_2 $$ private static String extractRoot(URL resourceURL, String resourcePath) -->Line_8 $$ String protocol = resourceURL.getProtocol()[ CD ]
Line_7 $$ String resultPath = null-->Line_22 $$ if (resultPath == null) [ FD ]
Line_2 $$ private static String extractRoot(URL resourceURL, String resourcePath) -->Line_22 $$ if (resultPath == null) [ CD ]
Line_16 $$ if (URLUtil.JAR_PROTOCOL.equals(protocol)) -->Line_17 $$ Pair<String, String> paths = URLUtil.splitJarUrl(resourceURL.getFile())[ CD ]
Line_2 $$ private static String extractRoot(URL resourceURL, String resourcePath) -->Line_7 $$ String resultPath = null[ CD ]
Line_29 $$ resultPath = StringUtil.trimEnd(resultPath, File.separator)-->Line_30 $$ resultPath = URLUtil.unescapePercentSequences(resultPath)[ FD ]
Line_2 $$ private static String extractRoot(URL resourceURL, String resourcePath) -->Line_29 $$ resultPath = StringUtil.trimEnd(resultPath, File.separator)[ CD ]
Line_19 $$ resultPath = paths.first-->Line_27 $$ resultPath = resultPath.substring(1)[ FD ]
Line_19 $$ resultPath = paths.first-->Line_22 $$ if (resultPath == null) [ FD ]
Line_2 $$ private static String extractRoot(URL resourceURL, String resourcePath) -->Line_9 $$ if (URLUtil.FILE_PROTOCOL.equals(protocol)) [ CD ]
Line_2 $$ private static String extractRoot(URL resourceURL, String resourcePath) -->Line_30 $$ resultPath = URLUtil.unescapePercentSequences(resultPath)[ CD ]
Line_19 $$ resultPath = paths.first-->Line_26 $$ if (SystemInfo.isWindows && resultPath.startsWith("/")) [ FD ]
Line_2 $$ private static String extractRoot(URL resourceURL, String resourcePath) -->Line_17 $$ Pair<String, String> paths = URLUtil.splitJarUrl(resourceURL.getFile())[ FD ]
Line_19 $$ resultPath = paths.first-->Line_29 $$ resultPath = StringUtil.trimEnd(resultPath, File.separator)[ FD ]
Line_14 $$ resultPath = path.substring(0, path.length() - resourcePath.length())-->Line_19 $$ resultPath = paths.first[ FD ]
Line_12 $$ String testResourcePath = resourcePath.replace('\\', '/')-->Line_13 $$ if (StringUtil.endsWithIgnoreCase(testPath, testResourcePath)) [ FD ]
Line_19 $$ resultPath = paths.first-->Line_30 $$ resultPath = URLUtil.unescapePercentSequences(resultPath)[ FD ]
Line_2 $$ private static String extractRoot(URL resourceURL, String resourcePath) -->Line_3 $$ if (!(StringUtil.startsWithChar(resourcePath, '/') || StringUtil.startsWithChar(resourcePath, '\\'))) [ CD ]
Line_8 $$ String protocol = resourceURL.getProtocol()-->Line_16 $$ if (URLUtil.JAR_PROTOCOL.equals(protocol)) [ FD ]
Line_2 $$ private static String extractRoot(URL resourceURL, String resourcePath) -->Line_10 $$ String path = resourceURL.getFile()[ FD ]
Line_7 $$ String resultPath = null-->Line_14 $$ resultPath = path.substring(0, path.length() - resourcePath.length())[ FD ]
Line_2 $$ private static String extractRoot(URL resourceURL, String resourcePath) -->Line_3 $$ if (!(StringUtil.startsWithChar(resourcePath, '/') || StringUtil.startsWithChar(resourcePath, '\\'))) [ FD ]
Line_16 $$ if (URLUtil.JAR_PROTOCOL.equals(protocol)) -->Line_18 $$ if (paths != null) [ CD ]
Line_7 $$ String resultPath = null-->Line_19 $$ resultPath = paths.first[ FD ]
Line_2 $$ private static String extractRoot(URL resourceURL, String resourcePath) -->Line_31 $$ return resultPath[ CD ]
Line_3 $$ if (!(StringUtil.startsWithChar(resourcePath, '/') || StringUtil.startsWithChar(resourcePath, '\\'))) -->Line_4 $$ log("precondition failed: " + resourcePath)[ CD ]
Line_10 $$ String path = resourceURL.getFile()-->Line_14 $$ resultPath = path.substring(0, path.length() - resourcePath.length())[ FD ]
Line_9 $$ if (URLUtil.FILE_PROTOCOL.equals(protocol)) -->Line_16 $$ if (URLUtil.JAR_PROTOCOL.equals(protocol)) [ CD ]
Line_11 $$ String testPath = path.replace('\\', '/')-->Line_13 $$ if (StringUtil.endsWithIgnoreCase(testPath, testResourcePath)) [ FD ]
Line_18 $$ if (paths != null) -->Line_19 $$ resultPath = paths.first[ CD ]
