Line_2 $$ public static int doReplace(Project project, final Document document, final int startOffset, final int endOffset, final String stringToReplace) -->Line_4 $$ CommandProcessor.getInstance().executeCommand(project, new Runnable() [ FD ]
Line_2 $$ public static int doReplace(Project project, final Document document, final int startOffset, final int endOffset, final String stringToReplace) -->Line_3 $$ final String converted = StringUtil.convertLineSeparators(stringToReplace)[ FD ]
Line_2 $$ public static int doReplace(Project project, final Document document, final int startOffset, final int endOffset, final String stringToReplace) -->Line_4 $$ CommandProcessor.getInstance().executeCommand(project, new Runnable() [ CD ]
Line_2 $$ public static int doReplace(Project project, final Document document, final int startOffset, final int endOffset, final String stringToReplace) -->Line_18 $$ return startOffset + converted.length()[ CD ]
Line_2 $$ public static int doReplace(Project project, final Document document, final int startOffset, final int endOffset, final String stringToReplace) -->Line_3 $$ final String converted = StringUtil.convertLineSeparators(stringToReplace)[ CD ]
Line_3 $$ final String converted = StringUtil.convertLineSeparators(stringToReplace)-->Line_18 $$ return startOffset + converted.length()[ FD ]
Line_4 $$ CommandProcessor.getInstance().executeCommand(project, new Runnable() -->Line_8 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() [ CD ]
