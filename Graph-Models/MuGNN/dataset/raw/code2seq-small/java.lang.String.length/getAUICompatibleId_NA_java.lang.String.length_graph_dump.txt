Line_9 $$ for (int i = 0; i < text.length(); i++) -->Line_25 $$ lastReplacementIndex = i + 1[ FD ]
Line_7 $$ StringBundler sb = null-->Line_22 $$ sb.append(StringUtil.toHexString(c))[ FD ]
Line_15 $$ sb = new StringBundler()-->Line_27 $$ if (sb == null) [ FD ]
Line_8 $$ int lastReplacementIndex = 0-->Line_17 $$ if (i > lastReplacementIndex) [ FD ]
Line_15 $$ sb = new StringBundler()-->Line_18 $$ sb.append(text.substring(lastReplacementIndex, i))[ FD ]
Line_8 $$ int lastReplacementIndex = 0-->Line_25 $$ lastReplacementIndex = i + 1[ FD ]
Line_25 $$ lastReplacementIndex = i + 1-->Line_18 $$ sb.append(text.substring(lastReplacementIndex, i))[ FD ]
Line_9 $$ for (int i = 0; i < text.length(); i++) -->Line_17 $$ if (i > lastReplacementIndex) [ CD ]
Line_10 $$ char c = text.charAt(i)-->Line_21 $$ if (c != CharPool.UNDERLINE) [ FD ]
Line_8 $$ int lastReplacementIndex = 0-->Line_31 $$ sb.append(text.substring(lastReplacementIndex))[ FD ]
Line_7 $$ StringBundler sb = null-->Line_33 $$ return sb.toString()[ FD ]
Line_9 $$ for (int i = 0; i < text.length(); i++) -->Line_17 $$ if (i > lastReplacementIndex) [ FD ]
Line_25 $$ lastReplacementIndex = i + 1-->Line_31 $$ sb.append(text.substring(lastReplacementIndex))[ FD ]
Line_9 $$ for (int i = 0; i < text.length(); i++) -->Line_20 $$ sb.append(CharPool.UNDERLINE)[ CD ]
Line_9 $$ for (int i = 0; i < text.length(); i++) -->Line_11 $$ if (((c <= 127) && (Validator.isChar(c) || Validator.isDigit(c))) || ((c > 127) && (c != CharPool.FIGURE_SPACE) && (c != CharPool.NARROW_NO_BREAK_SPACE) && (c != CharPool.NO_BREAK_SPACE))) [ CD ]
Line_7 $$ StringBundler sb = null-->Line_15 $$ sb = new StringBundler()[ FD ]
Line_15 $$ sb = new StringBundler()-->Line_24 $$ sb.append(CharPool.UNDERLINE)[ FD ]
Line_8 $$ int lastReplacementIndex = 0-->Line_30 $$ if (lastReplacementIndex < text.length()) [ FD ]
Line_7 $$ StringBundler sb = null-->Line_20 $$ sb.append(CharPool.UNDERLINE)[ FD ]
Line_9 $$ for (int i = 0; i < text.length(); i++) -->Line_18 $$ sb.append(text.substring(lastReplacementIndex, i))[ FD ]
Line_25 $$ lastReplacementIndex = i + 1-->Line_17 $$ if (i > lastReplacementIndex) [ FD ]
Line_10 $$ char c = text.charAt(i)-->Line_22 $$ sb.append(StringUtil.toHexString(c))[ FD ]
Line_7 $$ StringBundler sb = null-->Line_18 $$ sb.append(text.substring(lastReplacementIndex, i))[ FD ]
Line_21 $$ if (c != CharPool.UNDERLINE) -->Line_22 $$ sb.append(StringUtil.toHexString(c))[ CD ]
Line_15 $$ sb = new StringBundler()-->Line_20 $$ sb.append(CharPool.UNDERLINE)[ FD ]
Line_27 $$ if (sb == null) -->Line_28 $$ return text[ CD ]
Line_15 $$ sb = new StringBundler()-->Line_14 $$ if (sb == null) [ FD ]
Line_17 $$ if (i > lastReplacementIndex) -->Line_18 $$ sb.append(text.substring(lastReplacementIndex, i))[ CD ]
Line_14 $$ if (sb == null) -->Line_15 $$ sb = new StringBundler()[ CD ]
Line_9 $$ for (int i = 0; i < text.length(); i++) -->Line_10 $$ char c = text.charAt(i)[ CD ]
Line_8 $$ int lastReplacementIndex = 0-->Line_18 $$ sb.append(text.substring(lastReplacementIndex, i))[ FD ]
Line_4 $$ if (Validator.isNull(text)) -->Line_5 $$ return text[ CD ]
Line_25 $$ lastReplacementIndex = i + 1-->Line_30 $$ if (lastReplacementIndex < text.length()) [ FD ]
Line_7 $$ StringBundler sb = null-->Line_24 $$ sb.append(CharPool.UNDERLINE)[ FD ]
Line_7 $$ StringBundler sb = null-->Line_27 $$ if (sb == null) [ FD ]
Line_15 $$ sb = new StringBundler()-->Line_33 $$ return sb.toString()[ FD ]
Line_9 $$ for (int i = 0; i < text.length(); i++) -->Line_25 $$ lastReplacementIndex = i + 1[ CD ]
Line_9 $$ for (int i = 0; i < text.length(); i++) -->Line_14 $$ if (sb == null) [ CD ]
Line_15 $$ sb = new StringBundler()-->Line_22 $$ sb.append(StringUtil.toHexString(c))[ FD ]
Line_9 $$ for (int i = 0; i < text.length(); i++) -->Line_21 $$ if (c != CharPool.UNDERLINE) [ CD ]
Line_7 $$ StringBundler sb = null-->Line_31 $$ sb.append(text.substring(lastReplacementIndex))[ FD ]
Line_9 $$ for (int i = 0; i < text.length(); i++) -->Line_24 $$ sb.append(CharPool.UNDERLINE)[ CD ]
Line_9 $$ for (int i = 0; i < text.length(); i++) -->Line_10 $$ char c = text.charAt(i)[ FD ]
Line_15 $$ sb = new StringBundler()-->Line_31 $$ sb.append(text.substring(lastReplacementIndex))[ FD ]
Line_10 $$ char c = text.charAt(i)-->Line_11 $$ if (((c <= 127) && (Validator.isChar(c) || Validator.isDigit(c))) || ((c > 127) && (c != CharPool.FIGURE_SPACE) && (c != CharPool.NARROW_NO_BREAK_SPACE) && (c != CharPool.NO_BREAK_SPACE))) [ FD ]
Line_30 $$ if (lastReplacementIndex < text.length()) -->Line_31 $$ sb.append(text.substring(lastReplacementIndex))[ CD ]
Line_7 $$ StringBundler sb = null-->Line_14 $$ if (sb == null) [ FD ]
