Line_11 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_21 $$ String importClass = line.substring(y + 1, line.length() - 1)[ FD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_33 $$ content = content.replaceFirst("(?m)^[ \t]*((?:package|import) .*;)\\s*^[ \t]*/\\*\\*", "$1\n\n/**")[ CD ]
Line_4 $$ if (Validator.isNull(imports)) -->Line_5 $$ return content[ CD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_8 $$ StringBundler sb = new StringBundler()[ CD ]
Line_11 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_12 $$ int x = line.indexOf("import ")[ CD ]
Line_30 $$ content = StringUtil.replaceFirst(content, imports, newImports)-->Line_32 $$ content = content.replaceFirst("(?m)^[ \t]*(package .*;)\\s*^[ \t]*import", "$1\n\nimport")[ FD ]
Line_8 $$ StringBundler sb = new StringBundler()-->Line_24 $$ sb.append("\n")[ FD ]
Line_22 $$ if (importClass.equals("*") || classes.contains(importClass)) -->Line_23 $$ sb.append(line)[ CD ]
Line_9 $$ UnsyncBufferedReader unsyncBufferedReader = new UnsyncBufferedReader(new UnsyncStringReader(imports))-->Line_11 $$ while ((line = unsyncBufferedReader.readLine()) != null) [ FD ]
Line_22 $$ if (importClass.equals("*") || classes.contains(importClass)) -->Line_24 $$ sb.append("\n")[ CD ]
Line_8 $$ StringBundler sb = new StringBundler()-->Line_28 $$ String newImports = importsFormatter.format(sb.toString())[ FD ]
Line_17 $$ String importPackage = line.substring(x + 7, y)-->Line_18 $$ if (importPackage.equals(packageDir) || importPackage.equals("java.lang")) [ FD ]
Line_10 $$ String line = null-->Line_11 $$ while ((line = unsyncBufferedReader.readLine()) != null) [ FD ]
Line_29 $$ if (!imports.equals(newImports)) -->Line_30 $$ content = StringUtil.replaceFirst(content, imports, newImports)[ CD ]
Line_11 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_16 $$ int y = line.lastIndexOf(CharPool.PERIOD)[ FD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_34 $$ return content[ CD ]
Line_11 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_23 $$ sb.append(line)[ FD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_3 $$ String imports = getImports(content)[ FD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_28 $$ String newImports = importsFormatter.format(sb.toString())[ CD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_3 $$ String imports = getImports(content)[ CD ]
Line_30 $$ content = StringUtil.replaceFirst(content, imports, newImports)-->Line_33 $$ content = content.replaceFirst("(?m)^[ \t]*((?:package|import) .*;)\\s*^[ \t]*/\\*\\*", "$1\n\n/**")[ FD ]
Line_11 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_17 $$ String importPackage = line.substring(x + 7, y)[ FD ]
Line_16 $$ int y = line.lastIndexOf(CharPool.PERIOD)-->Line_17 $$ String importPackage = line.substring(x + 7, y)[ FD ]
Line_11 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_21 $$ String importClass = line.substring(y + 1, line.length() - 1)[ CD ]
Line_10 $$ String line = null-->Line_16 $$ int y = line.lastIndexOf(CharPool.PERIOD)[ FD ]
Line_3 $$ String imports = getImports(content)-->Line_4 $$ if (Validator.isNull(imports)) [ FD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_29 $$ if (!imports.equals(newImports)) [ CD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_27 $$ ImportsFormatter importsFormatter = new JavaImportsFormatter()[ CD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_7 $$ Set<String> classes = ClassUtil.getClasses(new UnsyncStringReader(content), className)[ CD ]
Line_7 $$ Set<String> classes = ClassUtil.getClasses(new UnsyncStringReader(content), className)-->Line_22 $$ if (importClass.equals("*") || classes.contains(importClass)) [ FD ]
Line_8 $$ StringBundler sb = new StringBundler()-->Line_23 $$ sb.append(line)[ FD ]
Line_11 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_17 $$ String importPackage = line.substring(x + 7, y)[ CD ]
Line_11 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_18 $$ if (importPackage.equals(packageDir) || importPackage.equals("java.lang")) [ CD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_9 $$ UnsyncBufferedReader unsyncBufferedReader = new UnsyncBufferedReader(new UnsyncStringReader(imports))[ CD ]
Line_27 $$ ImportsFormatter importsFormatter = new JavaImportsFormatter()-->Line_28 $$ String newImports = importsFormatter.format(sb.toString())[ FD ]
Line_28 $$ String newImports = importsFormatter.format(sb.toString())-->Line_29 $$ if (!imports.equals(newImports)) [ FD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_10 $$ String line = null[ CD ]
Line_12 $$ int x = line.indexOf("import ")-->Line_13 $$ if (x == -1) [ FD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_18 $$ if (importPackage.equals(packageDir) || importPackage.equals("java.lang")) [ FD ]
Line_3 $$ String imports = getImports(content)-->Line_30 $$ content = StringUtil.replaceFirst(content, imports, newImports)[ FD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_11 $$ while ((line = unsyncBufferedReader.readLine()) != null) [ CD ]
Line_11 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_12 $$ int x = line.indexOf("import ")[ FD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_7 $$ Set<String> classes = ClassUtil.getClasses(new UnsyncStringReader(content), className)[ FD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_33 $$ content = content.replaceFirst("(?m)^[ \t]*((?:package|import) .*;)\\s*^[ \t]*/\\*\\*", "$1\n\n/**")[ FD ]
Line_10 $$ String line = null-->Line_17 $$ String importPackage = line.substring(x + 7, y)[ FD ]
Line_32 $$ content = content.replaceFirst("(?m)^[ \t]*(package .*;)\\s*^[ \t]*import", "$1\n\nimport")-->Line_33 $$ content = content.replaceFirst("(?m)^[ \t]*((?:package|import) .*;)\\s*^[ \t]*/\\*\\*", "$1\n\n/**")[ FD ]
Line_11 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_13 $$ if (x == -1) [ CD ]
Line_3 $$ String imports = getImports(content)-->Line_29 $$ if (!imports.equals(newImports)) [ FD ]
Line_10 $$ String line = null-->Line_12 $$ int x = line.indexOf("import ")[ FD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_32 $$ content = content.replaceFirst("(?m)^[ \t]*(package .*;)\\s*^[ \t]*import", "$1\n\nimport")[ FD ]
Line_21 $$ String importClass = line.substring(y + 1, line.length() - 1)-->Line_22 $$ if (importClass.equals("*") || classes.contains(importClass)) [ FD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_4 $$ if (Validator.isNull(imports)) [ CD ]
Line_11 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_16 $$ int y = line.lastIndexOf(CharPool.PERIOD)[ CD ]
Line_11 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_22 $$ if (importClass.equals("*") || classes.contains(importClass)) [ CD ]
Line_10 $$ String line = null-->Line_23 $$ sb.append(line)[ FD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_30 $$ content = StringUtil.replaceFirst(content, imports, newImports)[ FD ]
Line_10 $$ String line = null-->Line_21 $$ String importClass = line.substring(y + 1, line.length() - 1)[ FD ]
Line_28 $$ String newImports = importsFormatter.format(sb.toString())-->Line_30 $$ content = StringUtil.replaceFirst(content, imports, newImports)[ FD ]
Line_2 $$ public static String stripJavaImports(String content, String packageDir, String className) throws IOException -->Line_32 $$ content = content.replaceFirst("(?m)^[ \t]*(package .*;)\\s*^[ \t]*import", "$1\n\nimport")[ CD ]
