Line_2 $$ public boolean checkInput(String inputString) -->Line_4 $$ VirtualFile vFile = myDirectory.getVirtualFile()[ CD ]
Line_5 $$ boolean firstToken = true-->Line_48 $$ firstToken = false[ FD ]
Line_4 $$ VirtualFile vFile = myDirectory.getVirtualFile()-->Line_21 $$ vFile = vFile.getParent()[ FD ]
Line_19 $$ vFile = userHomeDir-->Line_21 $$ vFile = vFile.getParent()[ FD ]
Line_2 $$ public boolean checkInput(String inputString) -->Line_51 $$ return true[ CD ]
Line_20 $$ if ("..".equals(token)) -->Line_21 $$ vFile = vFile.getParent()[ CD ]
Line_20 $$ if ("..".equals(token)) -->Line_22 $$ if (vFile == null) [ CD ]
Line_19 $$ vFile = userHomeDir-->Line_27 $$ final VirtualFile child = vFile.findChild(token)[ FD ]
Line_37 $$ vFile = child-->Line_21 $$ vFile = vFile.getParent()[ FD ]
Line_4 $$ VirtualFile vFile = myDirectory.getVirtualFile()-->Line_27 $$ final VirtualFile child = vFile.findChild(token)[ FD ]
Line_13 $$ if (firstToken && "~".equals(token)) -->Line_15 $$ if (userHomeDir == null) [ CD ]
Line_3 $$ final StringTokenizer tokenizer = new StringTokenizer(inputString, myDelimiters)-->Line_32 $$ if (!tokenizer.hasMoreTokens()) [ FD ]
Line_4 $$ VirtualFile vFile = myDirectory.getVirtualFile()-->Line_22 $$ if (vFile == null) [ FD ]
Line_6 $$ while (tokenizer.hasMoreTokens()) -->Line_7 $$ final String token = tokenizer.nextToken()[ CD ]
Line_29 $$ if (!child.isDirectory()) -->Line_31 $$ return false[ CD ]
Line_40 $$ if (FileTypeManager.getInstance().isFileIgnored(token)) -->Line_42 $$ return true[ CD ]
Line_13 $$ if (firstToken && "~".equals(token)) -->Line_14 $$ final VirtualFile userHomeDir = VfsUtil.getUserHomeDir()[ CD ]
Line_7 $$ final String token = tokenizer.nextToken()-->Line_8 $$ if (!tokenizer.hasMoreTokens() && (token.equals(".") || token.equals(".."))) [ FD ]
Line_3 $$ final StringTokenizer tokenizer = new StringTokenizer(inputString, myDelimiters)-->Line_6 $$ while (tokenizer.hasMoreTokens()) [ FD ]
Line_27 $$ final VirtualFile child = vFile.findChild(token)-->Line_29 $$ if (!child.isDirectory()) [ FD ]
Line_7 $$ final String token = tokenizer.nextToken()-->Line_13 $$ if (firstToken && "~".equals(token)) [ FD ]
Line_37 $$ vFile = child-->Line_12 $$ if (vFile != null) [ FD ]
Line_6 $$ while (tokenizer.hasMoreTokens()) -->Line_44 $$ if (!myIsDirectory && token.length() > 0 && !PsiDirectoryFactory.getInstance(myProject).isValidPackageName(token)) [ CD ]
Line_48 $$ firstToken = false-->Line_13 $$ if (firstToken && "~".equals(token)) [ FD ]
Line_32 $$ if (!tokenizer.hasMoreTokens()) -->Line_34 $$ return false[ CD ]
Line_4 $$ VirtualFile vFile = myDirectory.getVirtualFile()-->Line_37 $$ vFile = child[ FD ]
Line_28 $$ if (child != null) -->Line_29 $$ if (!child.isDirectory()) [ CD ]
Line_21 $$ vFile = vFile.getParent()-->Line_27 $$ final VirtualFile child = vFile.findChild(token)[ FD ]
Line_29 $$ if (!child.isDirectory()) -->Line_32 $$ if (!tokenizer.hasMoreTokens()) [ CD ]
Line_8 $$ if (!tokenizer.hasMoreTokens() && (token.equals(".") || token.equals(".."))) -->Line_10 $$ return false[ CD ]
Line_21 $$ vFile = vFile.getParent()-->Line_12 $$ if (vFile != null) [ FD ]
Line_37 $$ vFile = child-->Line_22 $$ if (vFile == null) [ FD ]
Line_3 $$ final StringTokenizer tokenizer = new StringTokenizer(inputString, myDelimiters)-->Line_8 $$ if (!tokenizer.hasMoreTokens() && (token.equals(".") || token.equals(".."))) [ FD ]
Line_14 $$ final VirtualFile userHomeDir = VfsUtil.getUserHomeDir()-->Line_15 $$ if (userHomeDir == null) [ FD ]
Line_6 $$ while (tokenizer.hasMoreTokens()) -->Line_12 $$ if (vFile != null) [ CD ]
Line_4 $$ VirtualFile vFile = myDirectory.getVirtualFile()-->Line_12 $$ if (vFile != null) [ FD ]
Line_13 $$ if (firstToken && "~".equals(token)) -->Line_20 $$ if ("..".equals(token)) [ CD ]
Line_7 $$ final String token = tokenizer.nextToken()-->Line_20 $$ if ("..".equals(token)) [ FD ]
Line_20 $$ if ("..".equals(token)) -->Line_26 $$ if (!".".equals(token)) [ CD ]
Line_26 $$ if (!".".equals(token)) -->Line_27 $$ final VirtualFile child = vFile.findChild(token)[ CD ]
Line_7 $$ final String token = tokenizer.nextToken()-->Line_27 $$ final VirtualFile child = vFile.findChild(token)[ FD ]
Line_6 $$ while (tokenizer.hasMoreTokens()) -->Line_40 $$ if (FileTypeManager.getInstance().isFileIgnored(token)) [ CD ]
Line_44 $$ if (!myIsDirectory && token.length() > 0 && !PsiDirectoryFactory.getInstance(myProject).isValidPackageName(token)) -->Line_46 $$ return true[ CD ]
Line_27 $$ final VirtualFile child = vFile.findChild(token)-->Line_37 $$ vFile = child[ FD ]
Line_6 $$ while (tokenizer.hasMoreTokens()) -->Line_48 $$ firstToken = false[ CD ]
Line_14 $$ final VirtualFile userHomeDir = VfsUtil.getUserHomeDir()-->Line_19 $$ vFile = userHomeDir[ FD ]
Line_19 $$ vFile = userHomeDir-->Line_12 $$ if (vFile != null) [ FD ]
Line_22 $$ if (vFile == null) -->Line_24 $$ return false[ CD ]
Line_37 $$ vFile = child-->Line_27 $$ final VirtualFile child = vFile.findChild(token)[ FD ]
Line_13 $$ if (firstToken && "~".equals(token)) -->Line_19 $$ vFile = userHomeDir[ CD ]
Line_21 $$ vFile = vFile.getParent()-->Line_22 $$ if (vFile == null) [ FD ]
Line_2 $$ public boolean checkInput(String inputString) -->Line_5 $$ boolean firstToken = true[ CD ]
Line_2 $$ public boolean checkInput(String inputString) -->Line_3 $$ final StringTokenizer tokenizer = new StringTokenizer(inputString, myDelimiters)[ CD ]
Line_26 $$ if (!".".equals(token)) -->Line_28 $$ if (child != null) [ CD ]
Line_27 $$ final VirtualFile child = vFile.findChild(token)-->Line_28 $$ if (child != null) [ FD ]
Line_26 $$ if (!".".equals(token)) -->Line_37 $$ vFile = child[ CD ]
Line_19 $$ vFile = userHomeDir-->Line_22 $$ if (vFile == null) [ FD ]
Line_2 $$ public boolean checkInput(String inputString) -->Line_6 $$ while (tokenizer.hasMoreTokens()) [ CD ]
Line_7 $$ final String token = tokenizer.nextToken()-->Line_26 $$ if (!".".equals(token)) [ FD ]
Line_6 $$ while (tokenizer.hasMoreTokens()) -->Line_8 $$ if (!tokenizer.hasMoreTokens() && (token.equals(".") || token.equals(".."))) [ CD ]
Line_5 $$ boolean firstToken = true-->Line_13 $$ if (firstToken && "~".equals(token)) [ FD ]
Line_4 $$ VirtualFile vFile = myDirectory.getVirtualFile()-->Line_19 $$ vFile = userHomeDir[ FD ]
Line_15 $$ if (userHomeDir == null) -->Line_17 $$ return false[ CD ]
Line_19 $$ vFile = userHomeDir-->Line_37 $$ vFile = child[ FD ]
Line_21 $$ vFile = vFile.getParent()-->Line_37 $$ vFile = child[ FD ]
Line_7 $$ final String token = tokenizer.nextToken()-->Line_40 $$ if (FileTypeManager.getInstance().isFileIgnored(token)) [ FD ]
Line_7 $$ final String token = tokenizer.nextToken()-->Line_44 $$ if (!myIsDirectory && token.length() > 0 && !PsiDirectoryFactory.getInstance(myProject).isValidPackageName(token)) [ FD ]
Line_3 $$ final StringTokenizer tokenizer = new StringTokenizer(inputString, myDelimiters)-->Line_7 $$ final String token = tokenizer.nextToken()[ FD ]
Line_12 $$ if (vFile != null) -->Line_13 $$ if (firstToken && "~".equals(token)) [ CD ]
