Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_86 $$ line = myDocument.getLineNumber(offset)[ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_29 $$ int offset = myDocument.getLineStartOffset(line)[ FD ]
Line_82 $$ for (int i = 0; i < placeholder.length(); i++) -->Line_83 $$ x += charWidthCache.charWidth(placeholder.charAt(i), fontType)[ FD ]
Line_29 $$ int offset = myDocument.getLineStartOffset(line)-->Line_96 $$ offset++[ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_45 $$ for (endLine = line + 1; endLine < maxCalculatedLine; endLine++) [ FD ]
Line_86 $$ line = myDocument.getLineNumber(offset)-->Line_100 $$ if (line == lineCount - 1) [ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_31 $$ myLineWidths.set(line, 0)[ FD ]
Line_36 $$ softWrapsIndex = getSoftWrapModel().getSoftWrapIndex(offset)-->Line_38 $$ softWrapsIndex = -softWrapsIndex - 1[ FD ]
Line_85 $$ offset = collapsed.getEndOffset()-->Line_105 $$ offset++[ FD ]
Line_4 $$ if (!myIsDirty && !(myLinePaintersWidth > myMaxWidth))-->Line_5 $$ return[ CD ]
Line_109 $$ if (lineCount > 0 && lastLineLengthCalculated) -->Line_112 $$ maxCalculatedLine = Math.max(maxCalculatedLine, lineCount - 1)[ CD ]
Line_85 $$ offset = collapsed.getEndOffset()-->Line_63 $$ char c = text.charAt(offset)[ FD ]
Line_62 $$ while (offset < documentLength && line < lineCount) -->Line_79 $$ FoldRegion collapsed = state.getCurrentFold()[ CD ]
Line_83 $$ x += charWidthCache.charWidth(placeholder.charAt(i), fontType)-->Line_104 $$ x += charWidthCache.charWidth(c, fontType)[ FD ]
Line_90 $$ if (c == '\n') -->Line_92 $$ myLineWidths.set(line, width)[ CD ]
Line_86 $$ line = myDocument.getLineNumber(offset)-->Line_92 $$ myLineWidths.set(line, width)[ FD ]
Line_18 $$ boolean lastLineLengthCalculated = false-->Line_26 $$ lastLineLengthCalculated = true[ FD ]
Line_29 $$ int offset = myDocument.getLineStartOffset(line)-->Line_74 $$ if (softWrap.getStart() == offset) [ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_28 $$ x = 0[ CD ]
Line_136 $$ for (int i = startToUse; i < endToUse; i++) -->Line_137 $$ maxWidth = Math.max(maxWidth, myLineWidths.getQuick(i))[ CD ]
Line_29 $$ int offset = myDocument.getLineStartOffset(line)-->Line_30 $$ if (offset >= myDocument.getTextLength()) [ FD ]
Line_43 $$ endLine = lineCount-->Line_51 $$ int endOffset = endLine >= lineCount ? documentLength : myDocument.getLineEndOffset(endLine)[ FD ]
Line_82 $$ for (int i = 0; i < placeholder.length(); i++) -->Line_137 $$ maxWidth = Math.max(maxWidth, myLineWidths.getQuick(i))[ FD ]
Line_28 $$ x = 0-->Line_75 $$ maxPreviousSoftWrappedWidth = Math.max(maxPreviousSoftWrappedWidth, x)[ FD ]
Line_64 $$ if (offset >= state.getEndOffset()) -->Line_66 $$ fontType = state.getMergedAttributes().getFontType()[ CD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_25 $$ if (line == lineCount - 1) [ CD ]
Line_41 $$ int endLine-->Line_46 $$ if (myLineWidths.getQuick(endLine) != -1) [ FD ]
Line_43 $$ endLine = lineCount-->Line_46 $$ if (myLineWidths.getQuick(endLine) != -1) [ FD ]
Line_69 $$ SoftWrap softWrap = softWraps.get(softWrapsIndex)-->Line_74 $$ if (softWrap.getStart() == offset) [ FD ]
Line_20 $$ int softWrapsIndex = -1-->Line_36 $$ softWrapsIndex = getSoftWrapModel().getSoftWrapIndex(offset)[ FD ]
Line_63 $$ char c = text.charAt(offset)-->Line_104 $$ x += charWidthCache.charWidth(c, fontType)[ FD ]
Line_63 $$ char c = text.charAt(offset)-->Line_90 $$ if (c == '\n') [ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_52 $$ for (FoldRegion region = myFoldingModel.getCollapsedRegionAtOffset(endOffset); region != null && endOffset < myDocument.getTextLength(); region = myFoldingModel.getCollapsedRegionAtOffset(endOffset)) [ CD ]
Line_64 $$ if (offset >= state.getEndOffset()) -->Line_65 $$ state.advance()[ CD ]
Line_37 $$ if (softWrapsIndex < 0) -->Line_38 $$ softWrapsIndex = -softWrapsIndex - 1[ CD ]
Line_124 $$ int endToUse = Math.min(lineCount, myLineWidths.size())-->Line_128 $$ endToUse = Math.min(endToUse, EditorUtil.yPositionToLogicalLine(EditorImpl.this, visibleArea.y + visibleArea.height))[ FD ]
Line_76 $$ x = softWrap.getIndentInPixels()-->Line_104 $$ x += charWidthCache.charWidth(c, fontType)[ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_30 $$ if (offset >= myDocument.getTextLength()) [ CD ]
Line_29 $$ int offset = myDocument.getLineStartOffset(line)-->Line_86 $$ line = myDocument.getLineNumber(offset)[ FD ]
Line_38 $$ softWrapsIndex = -softWrapsIndex - 1-->Line_37 $$ if (softWrapsIndex < 0) [ FD ]
Line_52 $$ for (FoldRegion region = myFoldingModel.getCollapsedRegionAtOffset(endOffset); region != null && endOffset < myDocument.getTextLength(); region = myFoldingModel.getCollapsedRegionAtOffset(endOffset)) -->Line_53 $$ final int lineNumber = myDocument.getLineNumber(region.getEndOffset())[ FD ]
Line_9 $$ int lineCount = Math.min(myLineWidths.size(), myDocument.getLineCount())-->Line_124 $$ int endToUse = Math.min(lineCount, myLineWidths.size())[ FD ]
Line_86 $$ line = myDocument.getLineNumber(offset)-->Line_93 $$ maxCalculatedLine = Math.max(maxCalculatedLine, line)[ FD ]
Line_125 $$ if (endToUse > 0 && getSoftWrapModel().isSoftWrappingEnabled()) -->Line_129 $$ if (endToUse <= startToUse) [ CD ]
Line_90 $$ if (c == '\n') -->Line_93 $$ maxCalculatedLine = Math.max(maxCalculatedLine, line)[ CD ]
Line_20 $$ int softWrapsIndex = -1-->Line_73 $$ softWrapsIndex++[ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_41 $$ int endLine[ CD ]
Line_28 $$ x = 0-->Line_76 $$ x = softWrap.getIndentInPixels()[ FD ]
Line_136 $$ for (int i = startToUse; i < endToUse; i++) -->Line_137 $$ maxWidth = Math.max(maxWidth, myLineWidths.getQuick(i))[ FD ]
Line_42 $$ if (maxCalculatedLine < line + 1) -->Line_45 $$ for (endLine = line + 1; endLine < maxCalculatedLine; endLine++) [ CD ]
Line_17 $$ int x = 0-->Line_88 $$ x = EditorUtil.nextTabStop(x, EditorImpl.this)[ FD ]
Line_85 $$ offset = collapsed.getEndOffset()-->Line_89 $$ offset++[ FD ]
Line_41 $$ int endLine-->Line_43 $$ endLine = lineCount[ FD ]
Line_10 $$ if (myMaxWidth != -1 && myDocument.isInBulkUpdate()) -->Line_13 $$ return[ CD ]
Line_29 $$ int offset = myDocument.getLineStartOffset(line)-->Line_89 $$ offset++[ FD ]
Line_28 $$ x = 0-->Line_97 $$ x = 0[ FD ]
Line_125 $$ if (endToUse > 0 && getSoftWrapModel().isSoftWrappingEnabled()) -->Line_127 $$ startToUse = EditorUtil.yPositionToLogicalLine(EditorImpl.this, visibleArea.getLocation())[ CD ]
Line_135 $$ int maxWidth = 0-->Line_137 $$ maxWidth = Math.max(maxWidth, myLineWidths.getQuick(i))[ FD ]
Line_82 $$ for (int i = 0; i < placeholder.length(); i++) -->Line_136 $$ for (int i = startToUse; i < endToUse; i++) [ FD ]
Line_42 $$ if (maxCalculatedLine < line + 1) -->Line_43 $$ endLine = lineCount[ CD ]
Line_87 $$ if (c == '\t') -->Line_88 $$ x = EditorUtil.nextTabStop(x, EditorImpl.this)[ CD ]
Line_29 $$ int offset = myDocument.getLineStartOffset(line)-->Line_70 $$ if (softWrap.getStart() > offset) [ FD ]
Line_76 $$ x = softWrap.getIndentInPixels()-->Line_97 $$ x = 0[ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_93 $$ maxCalculatedLine = Math.max(maxCalculatedLine, line)[ FD ]
Line_41 $$ int endLine-->Line_51 $$ int endOffset = endLine >= lineCount ? documentLength : myDocument.getLineEndOffset(endLine)[ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_61 $$ int maxPreviousSoftWrappedWidth = -1[ CD ]
Line_17 $$ int x = 0-->Line_75 $$ maxPreviousSoftWrappedWidth = Math.max(maxPreviousSoftWrappedWidth, x)[ FD ]
Line_104 $$ x += charWidthCache.charWidth(c, fontType)-->Line_91 $$ int width = Math.max(x, maxPreviousSoftWrappedWidth)[ FD ]
Line_97 $$ x = 0-->Line_91 $$ int width = Math.max(x, maxPreviousSoftWrappedWidth)[ FD ]
Line_28 $$ x = 0-->Line_83 $$ x += charWidthCache.charWidth(placeholder.charAt(i), fontType)[ FD ]
Line_26 $$ lastLineLengthCalculated = true-->Line_109 $$ if (lineCount > 0 && lastLineLengthCalculated) [ FD ]
Line_21 $$ CharWidthCache charWidthCache = new CharWidthCache(EditorImpl.this)-->Line_83 $$ x += charWidthCache.charWidth(placeholder.charAt(i), fontType)[ FD ]
Line_125 $$ if (endToUse > 0 && getSoftWrapModel().isSoftWrappingEnabled()) -->Line_128 $$ endToUse = Math.min(endToUse, EditorUtil.yPositionToLogicalLine(EditorImpl.this, visibleArea.y + visibleArea.height))[ CD ]
Line_38 $$ softWrapsIndex = -softWrapsIndex - 1-->Line_69 $$ SoftWrap softWrap = softWraps.get(softWrapsIndex)[ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_23 $$ if (myLineWidths.getQuick(line) != -1)[ CD ]
Line_69 $$ SoftWrap softWrap = softWraps.get(softWrapsIndex)-->Line_76 $$ x = softWrap.getIndentInPixels()[ FD ]
Line_90 $$ if (c == '\n') -->Line_100 $$ if (line == lineCount - 1) [ CD ]
Line_83 $$ x += charWidthCache.charWidth(placeholder.charAt(i), fontType)-->Line_88 $$ x = EditorUtil.nextTabStop(x, EditorImpl.this)[ FD ]
Line_90 $$ if (c == '\n') -->Line_105 $$ offset++[ CD ]
Line_19 $$ List<? extends SoftWrap> softWraps = getSoftWrapModel().getRegisteredSoftWraps()-->Line_68 $$ while (softWrapsIndex < softWraps.size() && line < lineCount) [ FD ]
Line_76 $$ x = softWrap.getIndentInPixels()-->Line_75 $$ maxPreviousSoftWrappedWidth = Math.max(maxPreviousSoftWrappedWidth, x)[ FD ]
Line_20 $$ int softWrapsIndex = -1-->Line_37 $$ if (softWrapsIndex < 0) [ FD ]
Line_76 $$ x = softWrap.getIndentInPixels()-->Line_88 $$ x = EditorUtil.nextTabStop(x, EditorImpl.this)[ FD ]
Line_124 $$ int endToUse = Math.min(lineCount, myLineWidths.size())-->Line_129 $$ if (endToUse <= startToUse) [ FD ]
Line_80 $$ if (collapsed != null) -->Line_85 $$ offset = collapsed.getEndOffset()[ CD ]
Line_28 $$ x = 0-->Line_104 $$ x += charWidthCache.charWidth(c, fontType)[ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_23 $$ if (myLineWidths.getQuick(line) != -1)[ FD ]
Line_19 $$ List<? extends SoftWrap> softWraps = getSoftWrapModel().getRegisteredSoftWraps()-->Line_69 $$ SoftWrap softWrap = softWraps.get(softWrapsIndex)[ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_92 $$ myLineWidths.set(line, width)[ FD ]
Line_126 $$ Rectangle visibleArea = getScrollingModel().getVisibleArea()-->Line_127 $$ startToUse = EditorUtil.yPositionToLogicalLine(EditorImpl.this, visibleArea.getLocation())[ FD ]
Line_38 $$ softWrapsIndex = -softWrapsIndex - 1-->Line_35 $$ if (softWrapsIndex < 0) [ FD ]
Line_36 $$ softWrapsIndex = getSoftWrapModel().getSoftWrapIndex(offset)-->Line_69 $$ SoftWrap softWrap = softWraps.get(softWrapsIndex)[ FD ]
Line_97 $$ x = 0-->Line_104 $$ x += charWidthCache.charWidth(c, fontType)[ FD ]
Line_87 $$ if (c == '\t') -->Line_90 $$ if (c == '\n') [ CD ]
Line_52 $$ for (FoldRegion region = myFoldingModel.getCollapsedRegionAtOffset(endOffset); region != null && endOffset < myDocument.getTextLength(); region = myFoldingModel.getCollapsedRegionAtOffset(endOffset)) -->Line_53 $$ final int lineNumber = myDocument.getLineNumber(region.getEndOffset())[ CD ]
Line_90 $$ if (c == '\n') -->Line_94 $$ if (line + 1 >= lineCount || myLineWidths.getQuick(line + 1) != -1)[ CD ]
Line_74 $$ if (softWrap.getStart() == offset) -->Line_76 $$ x = softWrap.getIndentInPixels()[ CD ]
Line_97 $$ x = 0-->Line_88 $$ x = EditorUtil.nextTabStop(x, EditorImpl.this)[ FD ]
Line_17 $$ int x = 0-->Line_104 $$ x += charWidthCache.charWidth(c, fontType)[ FD ]
Line_52 $$ for (FoldRegion region = myFoldingModel.getCollapsedRegionAtOffset(endOffset); region != null && endOffset < myDocument.getTextLength(); region = myFoldingModel.getCollapsedRegionAtOffset(endOffset)) -->Line_54 $$ endOffset = myDocument.getLineEndOffset(lineNumber)[ CD ]
Line_128 $$ endToUse = Math.min(endToUse, EditorUtil.yPositionToLogicalLine(EditorImpl.this, visibleArea.y + visibleArea.height))-->Line_129 $$ if (endToUse <= startToUse) [ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_100 $$ if (line == lineCount - 1) [ FD ]
Line_87 $$ if (c == '\t') -->Line_89 $$ offset++[ CD ]
Line_62 $$ while (offset < documentLength && line < lineCount) -->Line_68 $$ while (softWrapsIndex < softWraps.size() && line < lineCount) [ CD ]
Line_69 $$ SoftWrap softWrap = softWraps.get(softWrapsIndex)-->Line_70 $$ if (softWrap.getStart() > offset) [ FD ]
Line_128 $$ endToUse = Math.min(endToUse, EditorUtil.yPositionToLogicalLine(EditorImpl.this, visibleArea.y + visibleArea.height))-->Line_136 $$ for (int i = startToUse; i < endToUse; i++) [ FD ]
Line_36 $$ softWrapsIndex = getSoftWrapModel().getSoftWrapIndex(offset)-->Line_37 $$ if (softWrapsIndex < 0) [ FD ]
Line_7 $$ if (!myIsDirty)-->Line_8 $$ return[ CD ]
Line_38 $$ softWrapsIndex = -softWrapsIndex - 1-->Line_73 $$ softWrapsIndex++[ FD ]
Line_68 $$ while (softWrapsIndex < softWraps.size() && line < lineCount) -->Line_69 $$ SoftWrap softWrap = softWraps.get(softWrapsIndex)[ CD ]
Line_80 $$ if (collapsed != null) -->Line_81 $$ String placeholder = collapsed.getPlaceholderText()[ CD ]
Line_43 $$ endLine = lineCount-->Line_45 $$ for (endLine = line + 1; endLine < maxCalculatedLine; endLine++) [ FD ]
Line_29 $$ int offset = myDocument.getLineStartOffset(line)-->Line_105 $$ offset++[ FD ]
Line_88 $$ x = EditorUtil.nextTabStop(x, EditorImpl.this)-->Line_97 $$ x = 0[ FD ]
Line_29 $$ int offset = myDocument.getLineStartOffset(line)-->Line_36 $$ softWrapsIndex = getSoftWrapModel().getSoftWrapIndex(offset)[ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_25 $$ if (line == lineCount - 1) [ FD ]
Line_25 $$ if (line == lineCount - 1) -->Line_26 $$ lastLineLengthCalculated = true[ CD ]
Line_9 $$ int lineCount = Math.min(myLineWidths.size(), myDocument.getLineCount())-->Line_43 $$ endLine = lineCount[ FD ]
Line_101 $$ lastLineLengthCalculated = true-->Line_109 $$ if (lineCount > 0 && lastLineLengthCalculated) [ FD ]
Line_62 $$ while (offset < documentLength && line < lineCount) -->Line_80 $$ if (collapsed != null) [ CD ]
Line_20 $$ int softWrapsIndex = -1-->Line_69 $$ SoftWrap softWrap = softWraps.get(softWrapsIndex)[ FD ]
Line_76 $$ x = softWrap.getIndentInPixels()-->Line_83 $$ x += charWidthCache.charWidth(placeholder.charAt(i), fontType)[ FD ]
Line_68 $$ while (softWrapsIndex < softWraps.size() && line < lineCount) -->Line_74 $$ if (softWrap.getStart() == offset) [ CD ]
Line_127 $$ startToUse = EditorUtil.yPositionToLogicalLine(EditorImpl.this, visibleArea.getLocation())-->Line_129 $$ if (endToUse <= startToUse) [ FD ]
Line_28 $$ x = 0-->Line_88 $$ x = EditorUtil.nextTabStop(x, EditorImpl.this)[ FD ]
Line_41 $$ int endLine-->Line_45 $$ for (endLine = line + 1; endLine < maxCalculatedLine; endLine++) [ FD ]
Line_17 $$ int x = 0-->Line_97 $$ x = 0[ FD ]
Line_74 $$ if (softWrap.getStart() == offset) -->Line_75 $$ maxPreviousSoftWrappedWidth = Math.max(maxPreviousSoftWrappedWidth, x)[ CD ]
Line_82 $$ for (int i = 0; i < placeholder.length(); i++) -->Line_83 $$ x += charWidthCache.charWidth(placeholder.charAt(i), fontType)[ CD ]
Line_18 $$ boolean lastLineLengthCalculated = false-->Line_101 $$ lastLineLengthCalculated = true[ FD ]
Line_104 $$ x += charWidthCache.charWidth(c, fontType)-->Line_88 $$ x = EditorUtil.nextTabStop(x, EditorImpl.this)[ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_56 $$ if (endOffset > myDocument.getTextLength()) [ CD ]
Line_90 $$ if (c == '\n') -->Line_91 $$ int width = Math.max(x, maxPreviousSoftWrappedWidth)[ CD ]
Line_80 $$ if (collapsed != null) -->Line_82 $$ for (int i = 0; i < placeholder.length(); i++) [ CD ]
Line_15 $$ final CharSequence text = myDocument.getImmutableCharSequence()-->Line_63 $$ char c = text.charAt(offset)[ FD ]
Line_88 $$ x = EditorUtil.nextTabStop(x, EditorImpl.this)-->Line_91 $$ int width = Math.max(x, maxPreviousSoftWrappedWidth)[ FD ]
Line_20 $$ int softWrapsIndex = -1-->Line_38 $$ softWrapsIndex = -softWrapsIndex - 1[ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_32 $$ maxCalculatedLine = Math.max(maxCalculatedLine, line)[ FD ]
Line_90 $$ if (c == '\n') -->Line_97 $$ x = 0[ CD ]
Line_45 $$ for (endLine = line + 1; endLine < maxCalculatedLine; endLine++) -->Line_46 $$ if (myLineWidths.getQuick(endLine) != -1) [ CD ]
Line_85 $$ offset = collapsed.getEndOffset()-->Line_86 $$ line = myDocument.getLineNumber(offset)[ FD ]
Line_85 $$ offset = collapsed.getEndOffset()-->Line_96 $$ offset++[ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_62 $$ while (offset < documentLength && line < lineCount) [ CD ]
Line_68 $$ while (softWrapsIndex < softWraps.size() && line < lineCount) -->Line_70 $$ if (softWrap.getStart() > offset) [ CD ]
Line_76 $$ x = softWrap.getIndentInPixels()-->Line_91 $$ int width = Math.max(x, maxPreviousSoftWrappedWidth)[ FD ]
Line_90 $$ if (c == '\n') -->Line_104 $$ x += charWidthCache.charWidth(c, fontType)[ CD ]
Line_17 $$ int x = 0-->Line_83 $$ x += charWidthCache.charWidth(placeholder.charAt(i), fontType)[ FD ]
Line_124 $$ int endToUse = Math.min(lineCount, myLineWidths.size())-->Line_136 $$ for (int i = startToUse; i < endToUse; i++) [ FD ]
Line_29 $$ int offset = myDocument.getLineStartOffset(line)-->Line_64 $$ if (offset >= state.getEndOffset()) [ FD ]
Line_45 $$ for (endLine = line + 1; endLine < maxCalculatedLine; endLine++) -->Line_46 $$ if (myLineWidths.getQuick(endLine) != -1) [ FD ]
Line_30 $$ if (offset >= myDocument.getTextLength()) -->Line_32 $$ maxCalculatedLine = Math.max(maxCalculatedLine, line)[ CD ]
Line_83 $$ x += charWidthCache.charWidth(placeholder.charAt(i), fontType)-->Line_91 $$ int width = Math.max(x, maxPreviousSoftWrappedWidth)[ FD ]
Line_29 $$ int offset = myDocument.getLineStartOffset(line)-->Line_85 $$ offset = collapsed.getEndOffset()[ FD ]
Line_68 $$ while (softWrapsIndex < softWraps.size() && line < lineCount) -->Line_73 $$ softWrapsIndex++[ CD ]
Line_18 $$ boolean lastLineLengthCalculated = false-->Line_109 $$ if (lineCount > 0 && lastLineLengthCalculated) [ FD ]
Line_88 $$ x = EditorUtil.nextTabStop(x, EditorImpl.this)-->Line_104 $$ x += charWidthCache.charWidth(c, fontType)[ FD ]
Line_100 $$ if (line == lineCount - 1) -->Line_101 $$ lastLineLengthCalculated = true[ CD ]
Line_9 $$ int lineCount = Math.min(myLineWidths.size(), myDocument.getLineCount())-->Line_22 $$ for (int line = 0; line < lineCount; line++) [ FD ]
Line_36 $$ softWrapsIndex = getSoftWrapModel().getSoftWrapIndex(offset)-->Line_73 $$ softWrapsIndex++[ FD ]
Line_17 $$ int x = 0-->Line_91 $$ int width = Math.max(x, maxPreviousSoftWrappedWidth)[ FD ]
Line_28 $$ x = 0-->Line_91 $$ int width = Math.max(x, maxPreviousSoftWrappedWidth)[ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_60 $$ int fontType = state.getMergedAttributes().getFontType()[ CD ]
Line_20 $$ int softWrapsIndex = -1-->Line_35 $$ if (softWrapsIndex < 0) [ FD ]
Line_53 $$ final int lineNumber = myDocument.getLineNumber(region.getEndOffset())-->Line_54 $$ endOffset = myDocument.getLineEndOffset(lineNumber)[ FD ]
Line_26 $$ lastLineLengthCalculated = true-->Line_101 $$ lastLineLengthCalculated = true[ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_42 $$ if (maxCalculatedLine < line + 1) [ CD ]
Line_45 $$ for (endLine = line + 1; endLine < maxCalculatedLine; endLine++) -->Line_51 $$ int endOffset = endLine >= lineCount ? documentLength : myDocument.getLineEndOffset(endLine)[ FD ]
Line_35 $$ if (softWrapsIndex < 0) -->Line_36 $$ softWrapsIndex = getSoftWrapModel().getSoftWrapIndex(offset)[ CD ]
Line_35 $$ if (softWrapsIndex < 0) -->Line_37 $$ if (softWrapsIndex < 0) [ CD ]
Line_21 $$ CharWidthCache charWidthCache = new CharWidthCache(EditorImpl.this)-->Line_104 $$ x += charWidthCache.charWidth(c, fontType)[ FD ]
Line_63 $$ char c = text.charAt(offset)-->Line_87 $$ if (c == '\t') [ FD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_29 $$ int offset = myDocument.getLineStartOffset(line)[ CD ]
Line_22 $$ for (int line = 0; line < lineCount; line++) -->Line_35 $$ if (softWrapsIndex < 0) [ CD ]
Line_80 $$ if (collapsed != null) -->Line_86 $$ line = myDocument.getLineNumber(offset)[ CD ]
Line_85 $$ offset = collapsed.getEndOffset()-->Line_64 $$ if (offset >= state.getEndOffset()) [ FD ]
Line_36 $$ softWrapsIndex = getSoftWrapModel().getSoftWrapIndex(offset)-->Line_35 $$ if (softWrapsIndex < 0) [ FD ]
Line_90 $$ if (c == '\n') -->Line_96 $$ offset++[ CD ]
Line_17 $$ int x = 0-->Line_76 $$ x = softWrap.getIndentInPixels()[ FD ]
Line_80 $$ if (collapsed != null) -->Line_87 $$ if (c == '\t') [ CD ]
Line_62 $$ while (offset < documentLength && line < lineCount) -->Line_63 $$ char c = text.charAt(offset)[ CD ]
Line_62 $$ while (offset < documentLength && line < lineCount) -->Line_64 $$ if (offset >= state.getEndOffset()) [ CD ]
Line_83 $$ x += charWidthCache.charWidth(placeholder.charAt(i), fontType)-->Line_97 $$ x = 0[ FD ]
Line_125 $$ if (endToUse > 0 && getSoftWrapModel().isSoftWrappingEnabled()) -->Line_126 $$ Rectangle visibleArea = getScrollingModel().getVisibleArea()[ CD ]
Line_29 $$ int offset = myDocument.getLineStartOffset(line)-->Line_63 $$ char c = text.charAt(offset)[ FD ]
Line_30 $$ if (offset >= myDocument.getTextLength()) -->Line_31 $$ myLineWidths.set(line, 0)[ CD ]
Line_17 $$ int x = 0-->Line_28 $$ x = 0[ FD ]
