Line_7 $$ if (!n1.isEmpty() && n1.charAt(0) == '0') -->Line_9 $$ if (!n2.isEmpty() && n2.charAt(0) == '0') [ CD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_7 $$ if (!n1.isEmpty() && n1.charAt(0) == '0') [ FD ]
Line_14 $$ if (n1len > n2len) -->Line_15 $$ n2 = StringUtil.repeatSymbol('0', n1len - n2len) + n2[ CD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_12 $$ final int n1len = n1.length()[ CD ]
Line_4 $$ n1 = n1.substring(1)-->Line_12 $$ final int n1len = n1.length()[ FD ]
Line_13 $$ final int n2len = n2.length()-->Line_14 $$ if (n1len > n2len) [ FD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_17 $$ n1 = StringUtil.repeatSymbol('0', n2len - n1len) + n1[ FD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_13 $$ final int n2len = n2.length()[ CD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_3 $$ while (!n1.isEmpty() && !n2.isEmpty() && n1.charAt(0) == '0' && n2.charAt(0) == '0') [ FD ]
Line_5 $$ n2 = n2.substring(1)-->Line_15 $$ n2 = StringUtil.repeatSymbol('0', n1len - n2len) + n2[ FD ]
Line_12 $$ final int n1len = n1.length()-->Line_16 $$ if (n2len > n1len) [ FD ]
Line_3 $$ while (!n1.isEmpty() && !n2.isEmpty() && n1.charAt(0) == '0' && n2.charAt(0) == '0') -->Line_4 $$ n1 = n1.substring(1)[ CD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_19 $$ return n1.compareTo(n2)[ CD ]
Line_4 $$ n1 = n1.substring(1)-->Line_17 $$ n1 = StringUtil.repeatSymbol('0', n2len - n1len) + n1[ FD ]
Line_4 $$ n1 = n1.substring(1)-->Line_7 $$ if (!n1.isEmpty() && n1.charAt(0) == '0') [ FD ]
Line_5 $$ n2 = n2.substring(1)-->Line_19 $$ return n1.compareTo(n2)[ FD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_12 $$ final int n1len = n1.length()[ FD ]
Line_5 $$ n2 = n2.substring(1)-->Line_9 $$ if (!n2.isEmpty() && n2.charAt(0) == '0') [ FD ]
Line_5 $$ n2 = n2.substring(1)-->Line_3 $$ while (!n1.isEmpty() && !n2.isEmpty() && n1.charAt(0) == '0' && n2.charAt(0) == '0') [ FD ]
Line_15 $$ n2 = StringUtil.repeatSymbol('0', n1len - n2len) + n2-->Line_19 $$ return n1.compareTo(n2)[ FD ]
Line_5 $$ n2 = n2.substring(1)-->Line_13 $$ final int n2len = n2.length()[ FD ]
Line_3 $$ while (!n1.isEmpty() && !n2.isEmpty() && n1.charAt(0) == '0' && n2.charAt(0) == '0') -->Line_5 $$ n2 = n2.substring(1)[ CD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_3 $$ while (!n1.isEmpty() && !n2.isEmpty() && n1.charAt(0) == '0' && n2.charAt(0) == '0') [ CD ]
Line_14 $$ if (n1len > n2len) -->Line_16 $$ if (n2len > n1len) [ CD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_4 $$ n1 = n1.substring(1)[ FD ]
Line_4 $$ n1 = n1.substring(1)-->Line_3 $$ while (!n1.isEmpty() && !n2.isEmpty() && n1.charAt(0) == '0' && n2.charAt(0) == '0') [ FD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_14 $$ if (n1len > n2len) [ CD ]
Line_16 $$ if (n2len > n1len) -->Line_17 $$ n1 = StringUtil.repeatSymbol('0', n2len - n1len) + n1[ CD ]
Line_13 $$ final int n2len = n2.length()-->Line_16 $$ if (n2len > n1len) [ FD ]
Line_9 $$ if (!n2.isEmpty() && n2.charAt(0) == '0') -->Line_10 $$ return 1[ CD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_15 $$ n2 = StringUtil.repeatSymbol('0', n1len - n2len) + n2[ FD ]
Line_7 $$ if (!n1.isEmpty() && n1.charAt(0) == '0') -->Line_8 $$ return -1[ CD ]
Line_12 $$ final int n1len = n1.length()-->Line_14 $$ if (n1len > n2len) [ FD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_5 $$ n2 = n2.substring(1)[ FD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_19 $$ return n1.compareTo(n2)[ FD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_9 $$ if (!n2.isEmpty() && n2.charAt(0) == '0') [ FD ]
Line_4 $$ n1 = n1.substring(1)-->Line_19 $$ return n1.compareTo(n2)[ FD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_7 $$ if (!n1.isEmpty() && n1.charAt(0) == '0') [ CD ]
Line_2 $$ private static int compareNumbers(String n1, String n2) -->Line_13 $$ final int n2len = n2.length()[ FD ]
Line_17 $$ n1 = StringUtil.repeatSymbol('0', n2len - n1len) + n1-->Line_19 $$ return n1.compareTo(n2)[ FD ]
