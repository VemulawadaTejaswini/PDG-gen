Line_12 $$ String key = entry.getKey()-->Line_15 $$ key = key.substring("settings.".length())[ FD ]
Line_15 $$ key = key.substring("settings.".length())-->Line_17 $$ updateSettings.put(key, value)[ FD ]
Line_14 $$ if (key.startsWith("settings.")) -->Line_15 $$ key = key.substring("settings.".length())[ CD ]
Line_7 $$ Settings.Builder updateSettings = Settings.settingsBuilder()-->Line_26 $$ updateSettingsRequest.settings(updateSettings)[ FD ]
Line_2 $$ public void handleRequest(final RestRequest request, final RestChannel channel, final Client client) -->Line_6 $$ updateSettingsRequest.indicesOptions(IndicesOptions.fromRequest(request, updateSettingsRequest.indicesOptions()))[ FD ]
Line_2 $$ public void handleRequest(final RestRequest request, final RestChannel channel, final Client client) -->Line_27 $$ client.admin().indices().updateSettings(updateSettingsRequest, new AcknowledgedRestListener(channel))[ FD ]
Line_2 $$ public void handleRequest(final RestRequest request, final RestChannel channel, final Client client) -->Line_4 $$ updateSettingsRequest.timeout(request.paramAsTime("timeout", updateSettingsRequest.timeout()))[ FD ]
Line_11 $$ for (Map.Entry<String, String> entry : buildSettings.getAsMap().entrySet()) -->Line_24 $$ updateSettings.put(entry.getKey(), entry.getValue())[ FD ]
Line_3 $$ UpdateSettingsRequest updateSettingsRequest = updateSettingsRequest(Strings.splitStringByCommaToArray(request.param("index")))-->Line_5 $$ updateSettingsRequest.masterNodeTimeout(request.paramAsTime("master_timeout", updateSettingsRequest.masterNodeTimeout()))[ FD ]
Line_12 $$ String key = entry.getKey()-->Line_17 $$ updateSettings.put(key, value)[ FD ]
Line_2 $$ public void handleRequest(final RestRequest request, final RestChannel channel, final Client client) -->Line_26 $$ updateSettingsRequest.settings(updateSettings)[ CD ]
Line_3 $$ UpdateSettingsRequest updateSettingsRequest = updateSettingsRequest(Strings.splitStringByCommaToArray(request.param("index")))-->Line_6 $$ updateSettingsRequest.indicesOptions(IndicesOptions.fromRequest(request, updateSettingsRequest.indicesOptions()))[ FD ]
Line_2 $$ public void handleRequest(final RestRequest request, final RestChannel channel, final Client client) -->Line_9 $$ if (Strings.hasText(bodySettingsStr)) [ CD ]
Line_7 $$ Settings.Builder updateSettings = Settings.settingsBuilder()-->Line_24 $$ updateSettings.put(entry.getKey(), entry.getValue())[ FD ]
Line_3 $$ UpdateSettingsRequest updateSettingsRequest = updateSettingsRequest(Strings.splitStringByCommaToArray(request.param("index")))-->Line_26 $$ updateSettingsRequest.settings(updateSettings)[ FD ]
Line_9 $$ if (Strings.hasText(bodySettingsStr)) -->Line_10 $$ Settings buildSettings = Settings.settingsBuilder().loadFromSource(bodySettingsStr).build()[ CD ]
Line_2 $$ public void handleRequest(final RestRequest request, final RestChannel channel, final Client client) -->Line_5 $$ updateSettingsRequest.masterNodeTimeout(request.paramAsTime("master_timeout", updateSettingsRequest.masterNodeTimeout()))[ FD ]
Line_11 $$ for (Map.Entry<String, String> entry : buildSettings.getAsMap().entrySet()) -->Line_21 $$ if (VALUES_TO_EXCLUDE.contains(entry.getKey())) [ FD ]
Line_2 $$ public void handleRequest(final RestRequest request, final RestChannel channel, final Client client) -->Line_4 $$ updateSettingsRequest.timeout(request.paramAsTime("timeout", updateSettingsRequest.timeout()))[ CD ]
Line_2 $$ public void handleRequest(final RestRequest request, final RestChannel channel, final Client client) -->Line_27 $$ client.admin().indices().updateSettings(updateSettingsRequest, new AcknowledgedRestListener(channel))[ CD ]
Line_13 $$ String value = entry.getValue()-->Line_17 $$ updateSettings.put(key, value)[ FD ]
Line_2 $$ public void handleRequest(final RestRequest request, final RestChannel channel, final Client client) -->Line_8 $$ String bodySettingsStr = request.content().toUtf8()[ FD ]
Line_8 $$ String bodySettingsStr = request.content().toUtf8()-->Line_10 $$ Settings buildSettings = Settings.settingsBuilder().loadFromSource(bodySettingsStr).build()[ FD ]
Line_2 $$ public void handleRequest(final RestRequest request, final RestChannel channel, final Client client) -->Line_3 $$ UpdateSettingsRequest updateSettingsRequest = updateSettingsRequest(Strings.splitStringByCommaToArray(request.param("index")))[ CD ]
Line_2 $$ public void handleRequest(final RestRequest request, final RestChannel channel, final Client client) -->Line_20 $$ for (Map.Entry<String, String> entry : request.params().entrySet()) [ FD ]
Line_2 $$ public void handleRequest(final RestRequest request, final RestChannel channel, final Client client) -->Line_8 $$ String bodySettingsStr = request.content().toUtf8()[ CD ]
Line_7 $$ Settings.Builder updateSettings = Settings.settingsBuilder()-->Line_17 $$ updateSettings.put(key, value)[ FD ]
Line_3 $$ UpdateSettingsRequest updateSettingsRequest = updateSettingsRequest(Strings.splitStringByCommaToArray(request.param("index")))-->Line_27 $$ client.admin().indices().updateSettings(updateSettingsRequest, new AcknowledgedRestListener(channel))[ FD ]
Line_11 $$ for (Map.Entry<String, String> entry : buildSettings.getAsMap().entrySet()) -->Line_12 $$ String key = entry.getKey()[ FD ]
Line_2 $$ public void handleRequest(final RestRequest request, final RestChannel channel, final Client client) -->Line_7 $$ Settings.Builder updateSettings = Settings.settingsBuilder()[ CD ]
Line_3 $$ UpdateSettingsRequest updateSettingsRequest = updateSettingsRequest(Strings.splitStringByCommaToArray(request.param("index")))-->Line_4 $$ updateSettingsRequest.timeout(request.paramAsTime("timeout", updateSettingsRequest.timeout()))[ FD ]
Line_2 $$ public void handleRequest(final RestRequest request, final RestChannel channel, final Client client) -->Line_6 $$ updateSettingsRequest.indicesOptions(IndicesOptions.fromRequest(request, updateSettingsRequest.indicesOptions()))[ CD ]
Line_11 $$ for (Map.Entry<String, String> entry : buildSettings.getAsMap().entrySet()) -->Line_13 $$ String value = entry.getValue()[ FD ]
Line_12 $$ String key = entry.getKey()-->Line_14 $$ if (key.startsWith("settings.")) [ FD ]
Line_2 $$ public void handleRequest(final RestRequest request, final RestChannel channel, final Client client) -->Line_5 $$ updateSettingsRequest.masterNodeTimeout(request.paramAsTime("master_timeout", updateSettingsRequest.masterNodeTimeout()))[ CD ]
Line_2 $$ public void handleRequest(final RestRequest request, final RestChannel channel, final Client client) -->Line_3 $$ UpdateSettingsRequest updateSettingsRequest = updateSettingsRequest(Strings.splitStringByCommaToArray(request.param("index")))[ FD ]
Line_10 $$ Settings buildSettings = Settings.settingsBuilder().loadFromSource(bodySettingsStr).build()-->Line_11 $$ for (Map.Entry<String, String> entry : buildSettings.getAsMap().entrySet()) [ FD ]
Line_8 $$ String bodySettingsStr = request.content().toUtf8()-->Line_9 $$ if (Strings.hasText(bodySettingsStr)) [ FD ]
