Line_14 $$ h *= m-->Line_28 $$ h ^= h >>> 15[ FD ]
Line_15 $$ h ^= k-->Line_21 $$ h ^= data.charAt((length & ~3) + 1) << 8[ FD ]
Line_19 $$ h ^= data.charAt((length & ~3) + 2) << 16-->Line_26 $$ h ^= h >>> 13[ FD ]
Line_11 $$ k *= m-->Line_13 $$ k *= m[ FD ]
Line_5 $$ final int r = 24-->Line_12 $$ k ^= k >>> r[ FD ]
Line_2 $$ public static int murmur(String data, int seed) -->Line_21 $$ h ^= data.charAt((length & ~3) + 1) << 8[ FD ]
Line_2 $$ public static int murmur(String data, int seed) -->Line_28 $$ h ^= h >>> 15[ CD ]
Line_15 $$ h ^= k-->Line_26 $$ h ^= h >>> 13[ FD ]
Line_2 $$ public static int murmur(String data, int seed) -->Line_27 $$ h *= m[ CD ]
Line_26 $$ h ^= h >>> 13-->Line_27 $$ h *= m[ FD ]
Line_2 $$ public static int murmur(String data, int seed) -->Line_6 $$ int h = seed ^ length[ CD ]
Line_27 $$ h *= m-->Line_28 $$ h ^= h >>> 15[ FD ]
Line_15 $$ h ^= k-->Line_23 $$ h ^= data.charAt(length & ~3)[ FD ]
Line_2 $$ public static int murmur(String data, int seed) -->Line_5 $$ final int r = 24[ CD ]
Line_21 $$ h ^= data.charAt((length & ~3) + 1) << 8-->Line_23 $$ h ^= data.charAt(length & ~3)[ FD ]
Line_23 $$ h ^= data.charAt(length & ~3)-->Line_28 $$ h ^= h >>> 15[ FD ]
Line_19 $$ h ^= data.charAt((length & ~3) + 2) << 16-->Line_23 $$ h ^= data.charAt(length & ~3)[ FD ]
Line_21 $$ h ^= data.charAt((length & ~3) + 1) << 8-->Line_28 $$ h ^= h >>> 15[ FD ]
Line_12 $$ k ^= k >>> r-->Line_13 $$ k *= m[ FD ]
Line_2 $$ public static int murmur(String data, int seed) -->Line_29 $$ return h[ CD ]
Line_8 $$ for (int i = 0; i < length4; i++) -->Line_10 $$ int k = data.charAt(i4) + (data.charAt(i4 + 1) << 8) + (data.charAt(i4 + 2) << 16) + (data.charAt(i4 + 3) << 24)[ CD ]
Line_6 $$ int h = seed ^ length-->Line_23 $$ h ^= data.charAt(length & ~3)[ FD ]
Line_2 $$ public static int murmur(String data, int seed) -->Line_26 $$ h ^= h >>> 13[ CD ]
Line_6 $$ int h = seed ^ length-->Line_26 $$ h ^= h >>> 13[ FD ]
Line_14 $$ h *= m-->Line_24 $$ h *= m[ FD ]
Line_8 $$ for (int i = 0; i < length4; i++) -->Line_13 $$ k *= m[ CD ]
Line_2 $$ public static int murmur(String data, int seed) -->Line_10 $$ int k = data.charAt(i4) + (data.charAt(i4 + 1) << 8) + (data.charAt(i4 + 2) << 16) + (data.charAt(i4 + 3) << 24)[ FD ]
Line_4 $$ final int m = 0x5bd1e995-->Line_11 $$ k *= m[ FD ]
Line_2 $$ public static int murmur(String data, int seed) -->Line_3 $$ final int length = data.length()[ FD ]
Line_6 $$ int h = seed ^ length-->Line_14 $$ h *= m[ FD ]
Line_19 $$ h ^= data.charAt((length & ~3) + 2) << 16-->Line_24 $$ h *= m[ FD ]
Line_6 $$ int h = seed ^ length-->Line_27 $$ h *= m[ FD ]
Line_14 $$ h *= m-->Line_15 $$ h ^= k[ FD ]
Line_23 $$ h ^= data.charAt(length & ~3)-->Line_27 $$ h *= m[ FD ]
Line_8 $$ for (int i = 0; i < length4; i++) -->Line_11 $$ k *= m[ CD ]
Line_14 $$ h *= m-->Line_26 $$ h ^= h >>> 13[ FD ]
Line_14 $$ h *= m-->Line_21 $$ h ^= data.charAt((length & ~3) + 1) << 8[ FD ]
Line_24 $$ h *= m-->Line_27 $$ h *= m[ FD ]
Line_7 $$ int length4 = length >> 2-->Line_8 $$ for (int i = 0; i < length4; i++) [ FD ]
Line_8 $$ for (int i = 0; i < length4; i++) -->Line_12 $$ k ^= k >>> r[ CD ]
Line_14 $$ h *= m-->Line_19 $$ h ^= data.charAt((length & ~3) + 2) << 16[ FD ]
Line_2 $$ public static int murmur(String data, int seed) -->Line_3 $$ final int length = data.length()[ CD ]
Line_24 $$ h *= m-->Line_28 $$ h ^= h >>> 15[ FD ]
Line_15 $$ h ^= k-->Line_27 $$ h *= m[ FD ]
Line_10 $$ int k = data.charAt(i4) + (data.charAt(i4 + 1) << 8) + (data.charAt(i4 + 2) << 16) + (data.charAt(i4 + 3) << 24)-->Line_11 $$ k *= m[ FD ]
Line_6 $$ int h = seed ^ length-->Line_28 $$ h ^= h >>> 15[ FD ]
Line_26 $$ h ^= h >>> 13-->Line_28 $$ h ^= h >>> 15[ FD ]
Line_6 $$ int h = seed ^ length-->Line_15 $$ h ^= k[ FD ]
Line_2 $$ public static int murmur(String data, int seed) -->Line_8 $$ for (int i = 0; i < length4; i++) [ CD ]
Line_14 $$ h *= m-->Line_27 $$ h *= m[ FD ]
Line_2 $$ public static int murmur(String data, int seed) -->Line_23 $$ h ^= data.charAt(length & ~3)[ FD ]
Line_13 $$ k *= m-->Line_12 $$ k ^= k >>> r[ FD ]
Line_11 $$ k *= m-->Line_15 $$ h ^= k[ FD ]
Line_15 $$ h ^= k-->Line_19 $$ h ^= data.charAt((length & ~3) + 2) << 16[ FD ]
Line_10 $$ int k = data.charAt(i4) + (data.charAt(i4 + 1) << 8) + (data.charAt(i4 + 2) << 16) + (data.charAt(i4 + 3) << 24)-->Line_15 $$ h ^= k[ FD ]
Line_21 $$ h ^= data.charAt((length & ~3) + 1) << 8-->Line_26 $$ h ^= h >>> 13[ FD ]
Line_19 $$ h ^= data.charAt((length & ~3) + 2) << 16-->Line_21 $$ h ^= data.charAt((length & ~3) + 1) << 8[ FD ]
Line_6 $$ int h = seed ^ length-->Line_19 $$ h ^= data.charAt((length & ~3) + 2) << 16[ FD ]
Line_23 $$ h ^= data.charAt(length & ~3)-->Line_26 $$ h ^= h >>> 13[ FD ]
Line_13 $$ k *= m-->Line_15 $$ h ^= k[ FD ]
Line_6 $$ int h = seed ^ length-->Line_24 $$ h *= m[ FD ]
Line_2 $$ public static int murmur(String data, int seed) -->Line_7 $$ int length4 = length >> 2[ CD ]
Line_8 $$ for (int i = 0; i < length4; i++) -->Line_9 $$ final int i4 = i << 2[ CD ]
Line_11 $$ k *= m-->Line_12 $$ k ^= k >>> r[ FD ]
Line_2 $$ public static int murmur(String data, int seed) -->Line_19 $$ h ^= data.charAt((length & ~3) + 2) << 16[ FD ]
Line_4 $$ final int m = 0x5bd1e995-->Line_27 $$ h *= m[ FD ]
Line_4 $$ final int m = 0x5bd1e995-->Line_24 $$ h *= m[ FD ]
Line_19 $$ h ^= data.charAt((length & ~3) + 2) << 16-->Line_27 $$ h *= m[ FD ]
Line_23 $$ h ^= data.charAt(length & ~3)-->Line_24 $$ h *= m[ FD ]
Line_9 $$ final int i4 = i << 2-->Line_10 $$ int k = data.charAt(i4) + (data.charAt(i4 + 1) << 8) + (data.charAt(i4 + 2) << 16) + (data.charAt(i4 + 3) << 24)[ FD ]
Line_15 $$ h ^= k-->Line_24 $$ h *= m[ FD ]
Line_21 $$ h ^= data.charAt((length & ~3) + 1) << 8-->Line_27 $$ h *= m[ FD ]
Line_8 $$ for (int i = 0; i < length4; i++) -->Line_15 $$ h ^= k[ CD ]
Line_4 $$ final int m = 0x5bd1e995-->Line_13 $$ k *= m[ FD ]
Line_6 $$ int h = seed ^ length-->Line_21 $$ h ^= data.charAt((length & ~3) + 1) << 8[ FD ]
Line_2 $$ public static int murmur(String data, int seed) -->Line_4 $$ final int m = 0x5bd1e995[ CD ]
Line_8 $$ for (int i = 0; i < length4; i++) -->Line_14 $$ h *= m[ CD ]
Line_19 $$ h ^= data.charAt((length & ~3) + 2) << 16-->Line_28 $$ h ^= h >>> 15[ FD ]
Line_10 $$ int k = data.charAt(i4) + (data.charAt(i4 + 1) << 8) + (data.charAt(i4 + 2) << 16) + (data.charAt(i4 + 3) << 24)-->Line_13 $$ k *= m[ FD ]
Line_14 $$ h *= m-->Line_23 $$ h ^= data.charAt(length & ~3)[ FD ]
Line_24 $$ h *= m-->Line_26 $$ h ^= h >>> 13[ FD ]
Line_10 $$ int k = data.charAt(i4) + (data.charAt(i4 + 1) << 8) + (data.charAt(i4 + 2) << 16) + (data.charAt(i4 + 3) << 24)-->Line_12 $$ k ^= k >>> r[ FD ]
Line_12 $$ k ^= k >>> r-->Line_15 $$ h ^= k[ FD ]
Line_21 $$ h ^= data.charAt((length & ~3) + 1) << 8-->Line_24 $$ h *= m[ FD ]
Line_4 $$ final int m = 0x5bd1e995-->Line_14 $$ h *= m[ FD ]
Line_15 $$ h ^= k-->Line_28 $$ h ^= h >>> 15[ FD ]
