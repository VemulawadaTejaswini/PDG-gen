Line_5 $$ if (s != null) -->Line_25 $$ return list.toArray(new PsiReference[list.size()])[ CD ]
Line_7 $$ final ArrayList<PsiReference> list = new ArrayList<PsiReference>()-->Line_21 $$ createReference(element, s.substring(pos + 1, nextPos), pos + 1 + offset, list)[ FD ]
Line_4 $$ final String s = genericDomValue.getStringValue()-->Line_21 $$ createReference(element, s.substring(pos + 1, nextPos), pos + 1 + offset, list)[ FD ]
Line_9 $$ while (true) -->Line_17 $$ if (nextPos == -1) [ CD ]
Line_5 $$ if (s != null) -->Line_7 $$ final ArrayList<PsiReference> list = new ArrayList<PsiReference>()[ CD ]
Line_5 $$ if (s != null) -->Line_6 $$ final int offset = ElementManipulators.getOffsetInElement(element)[ CD ]
Line_17 $$ if (nextPos == -1) -->Line_22 $$ pos = nextPos[ CD ]
Line_5 $$ if (s != null) -->Line_9 $$ while (true) [ CD ]
Line_17 $$ if (nextPos == -1) -->Line_18 $$ createReference(element, s.substring(pos + 1), pos + 1 + offset, list)[ CD ]
Line_5 $$ if (s != null) -->Line_8 $$ int pos = -1[ CD ]
Line_4 $$ final String s = genericDomValue.getStringValue()-->Line_18 $$ createReference(element, s.substring(pos + 1), pos + 1 + offset, list)[ FD ]
Line_9 $$ while (true) -->Line_10 $$ while (pos + 1 < s.length()) [ CD ]
Line_17 $$ if (nextPos == -1) -->Line_21 $$ createReference(element, s.substring(pos + 1, nextPos), pos + 1 + offset, list)[ CD ]
Line_8 $$ int pos = -1-->Line_14 $$ pos++[ FD ]
Line_4 $$ final String s = genericDomValue.getStringValue()-->Line_16 $$ int nextPos = s.indexOf(',', pos + 1)[ FD ]
Line_4 $$ final String s = genericDomValue.getStringValue()-->Line_10 $$ while (pos + 1 < s.length()) [ FD ]
Line_9 $$ while (true) -->Line_16 $$ int nextPos = s.indexOf(',', pos + 1)[ CD ]
Line_4 $$ final String s = genericDomValue.getStringValue()-->Line_5 $$ if (s != null) [ FD ]
Line_4 $$ final String s = genericDomValue.getStringValue()-->Line_11 $$ if (!Character.isWhitespace(s.charAt(pos + 1))) [ FD ]
Line_7 $$ final ArrayList<PsiReference> list = new ArrayList<PsiReference>()-->Line_25 $$ return list.toArray(new PsiReference[list.size()])[ FD ]
Line_10 $$ while (pos + 1 < s.length()) -->Line_11 $$ if (!Character.isWhitespace(s.charAt(pos + 1))) [ CD ]
Line_7 $$ final ArrayList<PsiReference> list = new ArrayList<PsiReference>()-->Line_18 $$ createReference(element, s.substring(pos + 1), pos + 1 + offset, list)[ FD ]
Line_8 $$ int pos = -1-->Line_22 $$ pos = nextPos[ FD ]
Line_10 $$ while (pos + 1 < s.length()) -->Line_14 $$ pos++[ CD ]
