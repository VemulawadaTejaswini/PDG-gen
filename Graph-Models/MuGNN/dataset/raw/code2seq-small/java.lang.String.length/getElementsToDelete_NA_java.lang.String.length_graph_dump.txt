Line_5 $$ for (int idx = 0; idx < elements.length; idx++) -->Line_6 $$ final PsiElement element = elements[idx][ CD ]
Line_10 $$ if (isHideEmptyMiddlePackages(viewPane.getId()) && directory.getChildren().length == 0 && !directoryHelper.skipDirectory(directory)) -->Line_24 $$ elements[idx] = directory[ CD ]
Line_3 $$ final AbstractProjectViewPane viewPane = getCurrentProjectViewPane()-->Line_4 $$ PsiElement[] elements = viewPane.getSelectedPSIElements()[ FD ]
Line_7 $$ if (element instanceof PsiDirectory) -->Line_8 $$ PsiDirectory directory = (PsiDirectory) element[ CD ]
Line_10 $$ if (isHideEmptyMiddlePackages(viewPane.getId()) && directory.getChildren().length == 0 && !directoryHelper.skipDirectory(directory)) -->Line_11 $$ while (true) [ CD ]
Line_19 $$ directory = parent-->Line_24 $$ elements[idx] = directory[ FD ]
Line_7 $$ if (element instanceof PsiDirectory) -->Line_26 $$ final VirtualFile virtualFile = directory.getVirtualFile()[ CD ]
Line_11 $$ while (true) -->Line_17 $$ PsiElement[] children = parent.getChildren()[ CD ]
Line_8 $$ PsiDirectory directory = (PsiDirectory) element-->Line_24 $$ elements[idx] = directory[ FD ]
Line_7 $$ if (element instanceof PsiDirectory) -->Line_28 $$ if (path.endsWith(JarFileSystem.JAR_SEPARATOR)) [ CD ]
Line_11 $$ while (true) -->Line_13 $$ if (parent == null)[ CD ]
Line_11 $$ while (true) -->Line_15 $$ if (directoryHelper.skipDirectory(parent) || PsiDirectoryFactory.getInstance(myProject).getQualifiedName(parent, false).length() == 0)[ CD ]
Line_30 $$ if (vFile != null) -->Line_31 $$ final PsiFile psiFile = PsiManager.getInstance(myProject).findFile(vFile)[ CD ]
Line_8 $$ PsiDirectory directory = (PsiDirectory) element-->Line_10 $$ if (isHideEmptyMiddlePackages(viewPane.getId()) && directory.getChildren().length == 0 && !directoryHelper.skipDirectory(directory)) [ FD ]
Line_5 $$ for (int idx = 0; idx < elements.length; idx++) -->Line_7 $$ if (element instanceof PsiDirectory) [ CD ]
Line_9 $$ final ProjectViewDirectoryHelper directoryHelper = ProjectViewDirectoryHelper.getInstance(myProject)-->Line_15 $$ if (directoryHelper.skipDirectory(parent) || PsiDirectoryFactory.getInstance(myProject).getQualifiedName(parent, false).length() == 0)[ FD ]
Line_2 $$ private PsiElement[] getElementsToDelete() -->Line_4 $$ PsiElement[] elements = viewPane.getSelectedPSIElements()[ CD ]
Line_11 $$ while (true) -->Line_12 $$ PsiDirectory parent = directory.getParentDirectory()[ CD ]
Line_19 $$ directory = parent-->Line_26 $$ final VirtualFile virtualFile = directory.getVirtualFile()[ FD ]
Line_12 $$ PsiDirectory parent = directory.getParentDirectory()-->Line_19 $$ directory = parent[ FD ]
Line_2 $$ private PsiElement[] getElementsToDelete() -->Line_5 $$ for (int idx = 0; idx < elements.length; idx++) [ CD ]
Line_11 $$ while (true) -->Line_18 $$ if (children.length == 0 || children.length == 1 && children[0] == directory) [ CD ]
Line_7 $$ if (element instanceof PsiDirectory) -->Line_27 $$ final String path = virtualFile.getPath()[ CD ]
Line_28 $$ if (path.endsWith(JarFileSystem.JAR_SEPARATOR)) -->Line_29 $$ final VirtualFile vFile = LocalFileSystem.getInstance().findFileByPath(path.substring(0, path.length() - JarFileSystem.JAR_SEPARATOR.length()))[ CD ]
Line_12 $$ PsiDirectory parent = directory.getParentDirectory()-->Line_13 $$ if (parent == null)[ FD ]
Line_19 $$ directory = parent-->Line_12 $$ PsiDirectory parent = directory.getParentDirectory()[ FD ]
Line_6 $$ final PsiElement element = elements[idx]-->Line_7 $$ if (element instanceof PsiDirectory) [ FD ]
Line_18 $$ if (children.length == 0 || children.length == 1 && children[0] == directory) -->Line_19 $$ directory = parent[ CD ]
Line_7 $$ if (element instanceof PsiDirectory) -->Line_9 $$ final ProjectViewDirectoryHelper directoryHelper = ProjectViewDirectoryHelper.getInstance(myProject)[ CD ]
Line_3 $$ final AbstractProjectViewPane viewPane = getCurrentProjectViewPane()-->Line_10 $$ if (isHideEmptyMiddlePackages(viewPane.getId()) && directory.getChildren().length == 0 && !directoryHelper.skipDirectory(directory)) [ FD ]
Line_9 $$ final ProjectViewDirectoryHelper directoryHelper = ProjectViewDirectoryHelper.getInstance(myProject)-->Line_10 $$ if (isHideEmptyMiddlePackages(viewPane.getId()) && directory.getChildren().length == 0 && !directoryHelper.skipDirectory(directory)) [ FD ]
Line_7 $$ if (element instanceof PsiDirectory) -->Line_10 $$ if (isHideEmptyMiddlePackages(viewPane.getId()) && directory.getChildren().length == 0 && !directoryHelper.skipDirectory(directory)) [ CD ]
Line_2 $$ private PsiElement[] getElementsToDelete() -->Line_39 $$ return elements[ CD ]
Line_12 $$ PsiDirectory parent = directory.getParentDirectory()-->Line_15 $$ if (directoryHelper.skipDirectory(parent) || PsiDirectoryFactory.getInstance(myProject).getQualifiedName(parent, false).length() == 0)[ FD ]
Line_8 $$ PsiDirectory directory = (PsiDirectory) element-->Line_12 $$ PsiDirectory parent = directory.getParentDirectory()[ FD ]
Line_30 $$ if (vFile != null) -->Line_32 $$ if (psiFile != null) [ CD ]
Line_8 $$ PsiDirectory directory = (PsiDirectory) element-->Line_26 $$ final VirtualFile virtualFile = directory.getVirtualFile()[ FD ]
Line_28 $$ if (path.endsWith(JarFileSystem.JAR_SEPARATOR)) -->Line_30 $$ if (vFile != null) [ CD ]
Line_8 $$ PsiDirectory directory = (PsiDirectory) element-->Line_19 $$ directory = parent[ FD ]
Line_12 $$ PsiDirectory parent = directory.getParentDirectory()-->Line_17 $$ PsiElement[] children = parent.getChildren()[ FD ]
Line_2 $$ private PsiElement[] getElementsToDelete() -->Line_3 $$ final AbstractProjectViewPane viewPane = getCurrentProjectViewPane()[ CD ]
