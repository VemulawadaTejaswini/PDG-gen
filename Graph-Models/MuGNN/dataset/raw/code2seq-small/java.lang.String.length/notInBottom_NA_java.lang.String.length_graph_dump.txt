Line_4 $$ for (String topItem : top) -->Line_7 $$ if (!bottom.contains(topItem)) [ FD ]
Line_3 $$ Set<String> notInBottom = null-->Line_8 $$ if (notInBottom == null) [ FD ]
Line_2 $$ private static Set<String> notInBottom(final Set<String> top, final Set<String> bottom) -->Line_14 $$ return notInBottom[ CD ]
Line_2 $$ private static Set<String> notInBottom(final Set<String> top, final Set<String> bottom) -->Line_7 $$ if (!bottom.contains(topItem)) [ FD ]
Line_3 $$ Set<String> notInBottom = null-->Line_9 $$ notInBottom = new HashSet<String>()[ FD ]
Line_3 $$ Set<String> notInBottom = null-->Line_11 $$ notInBottom.add(topItem)[ FD ]
Line_7 $$ if (!bottom.contains(topItem)) -->Line_11 $$ notInBottom.add(topItem)[ CD ]
Line_7 $$ if (!bottom.contains(topItem)) -->Line_8 $$ if (notInBottom == null) [ CD ]
Line_4 $$ for (String topItem : top) -->Line_5 $$ if (topItem.trim().length() == 0)[ FD ]
Line_2 $$ private static Set<String> notInBottom(final Set<String> top, final Set<String> bottom) -->Line_3 $$ Set<String> notInBottom = null[ CD ]
Line_9 $$ notInBottom = new HashSet<String>()-->Line_11 $$ notInBottom.add(topItem)[ FD ]
Line_4 $$ for (String topItem : top) -->Line_11 $$ notInBottom.add(topItem)[ FD ]
Line_8 $$ if (notInBottom == null) -->Line_9 $$ notInBottom = new HashSet<String>()[ CD ]
