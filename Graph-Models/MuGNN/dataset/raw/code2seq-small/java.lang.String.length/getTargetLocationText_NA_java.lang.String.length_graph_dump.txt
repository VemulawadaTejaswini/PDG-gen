Line_4 $$ if (paths.size() == 1) -->Line_6 $$ if (path.length() > 0) [ CD ]
Line_2 $$ protected static String getTargetLocationText(Set<String> paths) -->Line_5 $$ final String path = StringUtil.trimStart(StringUtil.trimEnd(paths.iterator().next(), "/"), "/")[ FD ]
Line_9 $$ target = "Output Root"-->Line_12 $$ target = "Default Locations"[ FD ]
Line_2 $$ protected static String getTargetLocationText(Set<String> paths) -->Line_14 $$ return target[ CD ]
Line_6 $$ if (path.length() > 0) -->Line_7 $$ target = "/" + path[ CD ]
Line_4 $$ if (paths.size() == 1) -->Line_5 $$ final String path = StringUtil.trimStart(StringUtil.trimEnd(paths.iterator().next(), "/"), "/")[ CD ]
Line_3 $$ String target-->Line_7 $$ target = "/" + path[ FD ]
Line_5 $$ final String path = StringUtil.trimStart(StringUtil.trimEnd(paths.iterator().next(), "/"), "/")-->Line_6 $$ if (path.length() > 0) [ FD ]
Line_5 $$ final String path = StringUtil.trimStart(StringUtil.trimEnd(paths.iterator().next(), "/"), "/")-->Line_7 $$ target = "/" + path[ FD ]
Line_2 $$ protected static String getTargetLocationText(Set<String> paths) -->Line_4 $$ if (paths.size() == 1) [ CD ]
Line_2 $$ protected static String getTargetLocationText(Set<String> paths) -->Line_3 $$ String target[ CD ]
Line_4 $$ if (paths.size() == 1) -->Line_12 $$ target = "Default Locations"[ CD ]
Line_2 $$ protected static String getTargetLocationText(Set<String> paths) -->Line_4 $$ if (paths.size() == 1) [ FD ]
Line_3 $$ String target-->Line_12 $$ target = "Default Locations"[ FD ]
Line_7 $$ target = "/" + path-->Line_12 $$ target = "Default Locations"[ FD ]
Line_6 $$ if (path.length() > 0) -->Line_9 $$ target = "Output Root"[ CD ]
Line_7 $$ target = "/" + path-->Line_9 $$ target = "Output Root"[ FD ]
Line_3 $$ String target-->Line_9 $$ target = "Output Root"[ FD ]
