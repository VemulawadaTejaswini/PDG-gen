Line_5 $$ String separator = entry.getValue()-->Line_7 $$ for (int i = 0; i < separator.length(); i++) [ FD ]
Line_6 $$ StringBuilder encoded = new StringBuilder(separator.length())-->Line_12 $$ encodedState.getSeparators().put(entry.getKey(), encoded.toString())[ FD ]
Line_6 $$ StringBuilder encoded = new StringBuilder(separator.length())-->Line_9 $$ encoded.append("\\u")[ FD ]
Line_5 $$ String separator = entry.getValue()-->Line_8 $$ char c = separator.charAt(i)[ FD ]
Line_2 $$ public PropertiesSeparatorManagerState encode() -->Line_14 $$ return encodedState[ CD ]
Line_5 $$ String separator = entry.getValue()-->Line_6 $$ StringBuilder encoded = new StringBuilder(separator.length())[ FD ]
Line_4 $$ for (final Map.Entry<String, String> entry : mySeparators.entrySet()) -->Line_12 $$ encodedState.getSeparators().put(entry.getKey(), encoded.toString())[ FD ]
Line_7 $$ for (int i = 0; i < separator.length(); i++) -->Line_10 $$ encoded.append(String.format("%04x", (int) c))[ CD ]
Line_7 $$ for (int i = 0; i < separator.length(); i++) -->Line_9 $$ encoded.append("\\u")[ CD ]
Line_2 $$ public PropertiesSeparatorManagerState encode() -->Line_3 $$ PropertiesSeparatorManagerState encodedState = new PropertiesSeparatorManagerState()[ CD ]
Line_4 $$ for (final Map.Entry<String, String> entry : mySeparators.entrySet()) -->Line_5 $$ String separator = entry.getValue()[ FD ]
Line_3 $$ PropertiesSeparatorManagerState encodedState = new PropertiesSeparatorManagerState()-->Line_12 $$ encodedState.getSeparators().put(entry.getKey(), encoded.toString())[ FD ]
Line_7 $$ for (int i = 0; i < separator.length(); i++) -->Line_8 $$ char c = separator.charAt(i)[ CD ]
Line_7 $$ for (int i = 0; i < separator.length(); i++) -->Line_8 $$ char c = separator.charAt(i)[ FD ]
Line_6 $$ StringBuilder encoded = new StringBuilder(separator.length())-->Line_10 $$ encoded.append(String.format("%04x", (int) c))[ FD ]
