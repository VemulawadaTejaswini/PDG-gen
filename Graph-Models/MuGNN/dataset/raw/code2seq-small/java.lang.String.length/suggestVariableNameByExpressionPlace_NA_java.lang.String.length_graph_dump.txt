Line_35 $$ String name = parameters[index].getName()-->Line_37 $$ name = variableNameToPropertyName(name, VariableKind.PARAMETER)[ FD ]
Line_44 $$ if (SET_PREFIX.equals(firstWord)) -->Line_46 $$ final String[] setterNames = getSuggestionsByName(propertyName, variableKind, false, correctKeywords)[ CD ]
Line_63 $$ if (resolve instanceof PsiVariable) -->Line_64 $$ name = variableNameToPropertyName(name, getVariableKind((PsiVariable) resolve))[ CD ]
Line_23 $$ method = (PsiMethod) navElement-->Line_40 $$ final String methodName = method.getName()[ FD ]
Line_3 $$ if (expr.getParent() instanceof PsiExpressionList) -->Line_5 $$ PsiElement listParent = list.getParent()[ CD ]
Line_40 $$ final String methodName = method.getName()-->Line_41 $$ String[] words = NameUtil.nameToWords(methodName)[ FD ]
Line_2 $$ private NamesByExprInfo suggestVariableNameByExpressionPlace(@NotNull PsiExpression expr, @NotNull VariableKind variableKind, boolean correctKeywords) -->Line_46 $$ final String[] setterNames = getSuggestionsByName(propertyName, variableKind, false, correctKeywords)[ FD ]
Line_5 $$ PsiElement listParent = list.getParent()-->Line_8 $$ if (listParent instanceof PsiMethodCallExpression) [ FD ]
Line_35 $$ String name = parameters[index].getName()-->Line_38 $$ String[] names = getSuggestionsByName(name, variableKind, false, correctKeywords)[ FD ]
Line_61 $$ if (name != null) -->Line_62 $$ final PsiElement resolve = ((PsiReferenceExpression) leftExpression).resolve()[ CD ]
Line_20 $$ if (method != null) -->Line_34 $$ if (index < parameters.length) [ CD ]
Line_11 $$ subst = resolveResult.getSubstitutor()-->Line_36 $$ if (name != null && TypeConversionUtil.areTypesAssignmentCompatible(subst.substitute(parameters[index].getType()), expr)) [ FD ]
Line_5 $$ PsiElement listParent = list.getParent()-->Line_16 $$ if (listParent instanceof PsiNewExpression) [ FD ]
Line_5 $$ PsiElement listParent = list.getParent()-->Line_13 $$ if (listParent instanceof PsiAnonymousClass) [ FD ]
Line_7 $$ PsiMethod method = null-->Line_23 $$ method = (PsiMethod) navElement[ FD ]
Line_55 $$ if (expr.getParent() instanceof PsiAssignmentExpression && variableKind == VariableKind.PARAMETER) -->Line_56 $$ final PsiAssignmentExpression assignmentExpression = (PsiAssignmentExpression) expr.getParent()[ CD ]
Line_7 $$ PsiMethod method = null-->Line_40 $$ final String methodName = method.getName()[ FD ]
Line_40 $$ final String methodName = method.getName()-->Line_45 $$ final String propertyName = methodName.substring(firstWord.length())[ FD ]
Line_36 $$ if (name != null && TypeConversionUtil.areTypesAssignmentCompatible(subst.substitute(parameters[index].getType()), expr)) -->Line_51 $$ return new NamesByExprInfo(name, names)[ CD ]
Line_2 $$ private NamesByExprInfo suggestVariableNameByExpressionPlace(@NotNull PsiExpression expr, @NotNull VariableKind variableKind, boolean correctKeywords) -->Line_36 $$ if (name != null && TypeConversionUtil.areTypesAssignmentCompatible(subst.substitute(parameters[index].getType()), expr)) [ FD ]
Line_17 $$ method = ((PsiNewExpression) listParent).resolveConstructor()-->Line_40 $$ final String methodName = method.getName()[ FD ]
Line_17 $$ method = ((PsiNewExpression) listParent).resolveConstructor()-->Line_20 $$ if (method != null) [ FD ]
Line_59 $$ if (leftExpression instanceof PsiReferenceExpression && ((PsiReferenceExpression) leftExpression).getQualifier() == null) -->Line_60 $$ String name = leftExpression.getText()[ CD ]
Line_2 $$ private NamesByExprInfo suggestVariableNameByExpressionPlace(@NotNull PsiExpression expr, @NotNull VariableKind variableKind, boolean correctKeywords) -->Line_66 $$ String[] names = getSuggestionsByName(name, variableKind, false, correctKeywords)[ FD ]
Line_57 $$ if (expr == assignmentExpression.getRExpression()) -->Line_58 $$ final PsiExpression leftExpression = assignmentExpression.getLExpression()[ CD ]
Line_20 $$ if (method != null) -->Line_22 $$ if (navElement instanceof PsiMethod) [ CD ]
Line_20 $$ if (method != null) -->Line_27 $$ for (int i = 0; i < expressions.length; i++) [ CD ]
Line_7 $$ PsiMethod method = null-->Line_33 $$ PsiParameter[] parameters = method.getParameterList().getParameters()[ FD ]
Line_9 $$ final JavaResolveResult resolveResult = ((PsiMethodCallExpression) listParent).getMethodExpression().advancedResolve(false)-->Line_10 $$ method = (PsiMethod) resolveResult.getElement()[ FD ]
Line_2 $$ private NamesByExprInfo suggestVariableNameByExpressionPlace(@NotNull PsiExpression expr, @NotNull VariableKind variableKind, boolean correctKeywords) -->Line_55 $$ if (expr.getParent() instanceof PsiAssignmentExpression && variableKind == VariableKind.PARAMETER) [ FD ]
Line_35 $$ String name = parameters[index].getName()-->Line_64 $$ name = variableNameToPropertyName(name, getVariableKind((PsiVariable) resolve))[ FD ]
Line_10 $$ method = (PsiMethod) resolveResult.getElement()-->Line_23 $$ method = (PsiMethod) navElement[ FD ]
Line_16 $$ if (listParent instanceof PsiNewExpression) -->Line_17 $$ method = ((PsiNewExpression) listParent).resolveConstructor()[ CD ]
Line_39 $$ if (expressions.length == 1) -->Line_41 $$ String[] words = NameUtil.nameToWords(methodName)[ CD ]
Line_38 $$ String[] names = getSuggestionsByName(name, variableKind, false, correctKeywords)-->Line_47 $$ names = ArrayUtil.mergeArrays(names, setterNames)[ FD ]
Line_3 $$ if (expr.getParent() instanceof PsiExpressionList) -->Line_7 $$ PsiMethod method = null[ CD ]
Line_7 $$ PsiMethod method = null-->Line_17 $$ method = ((PsiNewExpression) listParent).resolveConstructor()[ FD ]
Line_10 $$ method = (PsiMethod) resolveResult.getElement()-->Line_21 $$ final PsiElement navElement = method.getNavigationElement()[ FD ]
Line_35 $$ String name = parameters[index].getName()-->Line_66 $$ String[] names = getSuggestionsByName(name, variableKind, false, correctKeywords)[ FD ]
Line_13 $$ if (listParent instanceof PsiAnonymousClass) -->Line_14 $$ listParent = listParent.getParent()[ CD ]
Line_3 $$ if (expr.getParent() instanceof PsiExpressionList) -->Line_55 $$ if (expr.getParent() instanceof PsiAssignmentExpression && variableKind == VariableKind.PARAMETER) [ CD ]
Line_10 $$ method = (PsiMethod) resolveResult.getElement()-->Line_33 $$ PsiParameter[] parameters = method.getParameterList().getParameters()[ FD ]
Line_8 $$ if (listParent instanceof PsiMethodCallExpression) -->Line_10 $$ method = (PsiMethod) resolveResult.getElement()[ CD ]
Line_57 $$ if (expr == assignmentExpression.getRExpression()) -->Line_59 $$ if (leftExpression instanceof PsiReferenceExpression && ((PsiReferenceExpression) leftExpression).getQualifier() == null) [ CD ]
Line_44 $$ if (SET_PREFIX.equals(firstWord)) -->Line_45 $$ final String propertyName = methodName.substring(firstWord.length())[ CD ]
Line_37 $$ name = variableNameToPropertyName(name, VariableKind.PARAMETER)-->Line_38 $$ String[] names = getSuggestionsByName(name, variableKind, false, correctKeywords)[ FD ]
Line_44 $$ if (SET_PREFIX.equals(firstWord)) -->Line_47 $$ names = ArrayUtil.mergeArrays(names, setterNames)[ CD ]
Line_14 $$ listParent = listParent.getParent()-->Line_16 $$ if (listParent instanceof PsiNewExpression) [ FD ]
Line_20 $$ if (method != null) -->Line_25 $$ PsiExpression[] expressions = list.getExpressions()[ CD ]
Line_2 $$ private NamesByExprInfo suggestVariableNameByExpressionPlace(@NotNull PsiExpression expr, @NotNull VariableKind variableKind, boolean correctKeywords) -->Line_4 $$ PsiExpressionList list = (PsiExpressionList) expr.getParent()[ FD ]
Line_43 $$ final String firstWord = words[0]-->Line_45 $$ final String propertyName = methodName.substring(firstWord.length())[ FD ]
Line_22 $$ if (navElement instanceof PsiMethod) -->Line_23 $$ method = (PsiMethod) navElement[ CD ]
Line_2 $$ private NamesByExprInfo suggestVariableNameByExpressionPlace(@NotNull PsiExpression expr, @NotNull VariableKind variableKind, boolean correctKeywords) -->Line_3 $$ if (expr.getParent() instanceof PsiExpressionList) [ CD ]
Line_17 $$ method = ((PsiNewExpression) listParent).resolveConstructor()-->Line_21 $$ final PsiElement navElement = method.getNavigationElement()[ FD ]
Line_37 $$ name = variableNameToPropertyName(name, VariableKind.PARAMETER)-->Line_66 $$ String[] names = getSuggestionsByName(name, variableKind, false, correctKeywords)[ FD ]
Line_3 $$ if (expr.getParent() instanceof PsiExpressionList) -->Line_20 $$ if (method != null) [ CD ]
Line_23 $$ method = (PsiMethod) navElement-->Line_33 $$ PsiParameter[] parameters = method.getParameterList().getParameters()[ FD ]
Line_10 $$ method = (PsiMethod) resolveResult.getElement()-->Line_20 $$ if (method != null) [ FD ]
Line_37 $$ name = variableNameToPropertyName(name, VariableKind.PARAMETER)-->Line_61 $$ if (name != null) [ FD ]
Line_4 $$ PsiExpressionList list = (PsiExpressionList) expr.getParent()-->Line_5 $$ PsiElement listParent = list.getParent()[ FD ]
Line_37 $$ name = variableNameToPropertyName(name, VariableKind.PARAMETER)-->Line_64 $$ name = variableNameToPropertyName(name, getVariableKind((PsiVariable) resolve))[ FD ]
Line_3 $$ if (expr.getParent() instanceof PsiExpressionList) -->Line_6 $$ PsiSubstitutor subst = PsiSubstitutor.EMPTY[ CD ]
Line_3 $$ if (expr.getParent() instanceof PsiExpressionList) -->Line_4 $$ PsiExpressionList list = (PsiExpressionList) expr.getParent()[ CD ]
Line_59 $$ if (leftExpression instanceof PsiReferenceExpression && ((PsiReferenceExpression) leftExpression).getQualifier() == null) -->Line_61 $$ if (name != null) [ CD ]
Line_46 $$ final String[] setterNames = getSuggestionsByName(propertyName, variableKind, false, correctKeywords)-->Line_47 $$ names = ArrayUtil.mergeArrays(names, setterNames)[ FD ]
Line_34 $$ if (index < parameters.length) -->Line_36 $$ if (name != null && TypeConversionUtil.areTypesAssignmentCompatible(subst.substitute(parameters[index].getType()), expr)) [ CD ]
Line_9 $$ final JavaResolveResult resolveResult = ((PsiMethodCallExpression) listParent).getMethodExpression().advancedResolve(false)-->Line_11 $$ subst = resolveResult.getSubstitutor()[ FD ]
Line_2 $$ private NamesByExprInfo suggestVariableNameByExpressionPlace(@NotNull PsiExpression expr, @NotNull VariableKind variableKind, boolean correctKeywords) -->Line_38 $$ String[] names = getSuggestionsByName(name, variableKind, false, correctKeywords)[ FD ]
Line_43 $$ final String firstWord = words[0]-->Line_44 $$ if (SET_PREFIX.equals(firstWord)) [ FD ]
Line_21 $$ final PsiElement navElement = method.getNavigationElement()-->Line_22 $$ if (navElement instanceof PsiMethod) [ FD ]
Line_10 $$ method = (PsiMethod) resolveResult.getElement()-->Line_40 $$ final String methodName = method.getName()[ FD ]
Line_26 $$ int index = -1-->Line_29 $$ index = i[ FD ]
Line_42 $$ if (words.length > 0) -->Line_43 $$ final String firstWord = words[0][ CD ]
Line_36 $$ if (name != null && TypeConversionUtil.areTypesAssignmentCompatible(subst.substitute(parameters[index].getType()), expr)) -->Line_38 $$ String[] names = getSuggestionsByName(name, variableKind, false, correctKeywords)[ CD ]
Line_17 $$ method = ((PsiNewExpression) listParent).resolveConstructor()-->Line_23 $$ method = (PsiMethod) navElement[ FD ]
Line_7 $$ PsiMethod method = null-->Line_10 $$ method = (PsiMethod) resolveResult.getElement()[ FD ]
Line_4 $$ PsiExpressionList list = (PsiExpressionList) expr.getParent()-->Line_25 $$ PsiExpression[] expressions = list.getExpressions()[ FD ]
Line_39 $$ if (expressions.length == 1) -->Line_42 $$ if (words.length > 0) [ CD ]
Line_27 $$ for (int i = 0; i < expressions.length; i++) -->Line_29 $$ index = i[ FD ]
Line_6 $$ PsiSubstitutor subst = PsiSubstitutor.EMPTY-->Line_11 $$ subst = resolveResult.getSubstitutor()[ FD ]
Line_45 $$ final String propertyName = methodName.substring(firstWord.length())-->Line_46 $$ final String[] setterNames = getSuggestionsByName(propertyName, variableKind, false, correctKeywords)[ FD ]
Line_55 $$ if (expr.getParent() instanceof PsiAssignmentExpression && variableKind == VariableKind.PARAMETER) -->Line_57 $$ if (expr == assignmentExpression.getRExpression()) [ CD ]
Line_7 $$ PsiMethod method = null-->Line_20 $$ if (method != null) [ FD ]
Line_3 $$ if (expr.getParent() instanceof PsiExpressionList) -->Line_8 $$ if (listParent instanceof PsiMethodCallExpression) [ CD ]
Line_56 $$ final PsiAssignmentExpression assignmentExpression = (PsiAssignmentExpression) expr.getParent()-->Line_57 $$ if (expr == assignmentExpression.getRExpression()) [ FD ]
Line_64 $$ name = variableNameToPropertyName(name, getVariableKind((PsiVariable) resolve))-->Line_66 $$ String[] names = getSuggestionsByName(name, variableKind, false, correctKeywords)[ FD ]
Line_7 $$ PsiMethod method = null-->Line_21 $$ final PsiElement navElement = method.getNavigationElement()[ FD ]
Line_20 $$ if (method != null) -->Line_26 $$ int index = -1[ CD ]
Line_36 $$ if (name != null && TypeConversionUtil.areTypesAssignmentCompatible(subst.substitute(parameters[index].getType()), expr)) -->Line_37 $$ name = variableNameToPropertyName(name, VariableKind.PARAMETER)[ CD ]
Line_62 $$ final PsiElement resolve = ((PsiReferenceExpression) leftExpression).resolve()-->Line_63 $$ if (resolve instanceof PsiVariable) [ FD ]
Line_27 $$ for (int i = 0; i < expressions.length; i++) -->Line_28 $$ if (expressions[i] == expr) [ CD ]
Line_61 $$ if (name != null) -->Line_63 $$ if (resolve instanceof PsiVariable) [ CD ]
Line_8 $$ if (listParent instanceof PsiMethodCallExpression) -->Line_16 $$ if (listParent instanceof PsiNewExpression) [ CD ]
Line_26 $$ int index = -1-->Line_34 $$ if (index < parameters.length) [ FD ]
Line_5 $$ PsiElement listParent = list.getParent()-->Line_14 $$ listParent = listParent.getParent()[ FD ]
Line_17 $$ method = ((PsiNewExpression) listParent).resolveConstructor()-->Line_33 $$ PsiParameter[] parameters = method.getParameterList().getParameters()[ FD ]
Line_2 $$ private NamesByExprInfo suggestVariableNameByExpressionPlace(@NotNull PsiExpression expr, @NotNull VariableKind variableKind, boolean correctKeywords) -->Line_28 $$ if (expressions[i] == expr) [ FD ]
Line_36 $$ if (name != null && TypeConversionUtil.areTypesAssignmentCompatible(subst.substitute(parameters[index].getType()), expr)) -->Line_39 $$ if (expressions.length == 1) [ CD ]
Line_28 $$ if (expressions[i] == expr) -->Line_29 $$ index = i[ CD ]
Line_8 $$ if (listParent instanceof PsiMethodCallExpression) -->Line_13 $$ if (listParent instanceof PsiAnonymousClass) [ CD ]
Line_39 $$ if (expressions.length == 1) -->Line_40 $$ final String methodName = method.getName()[ CD ]
Line_35 $$ String name = parameters[index].getName()-->Line_61 $$ if (name != null) [ FD ]
Line_2 $$ private NamesByExprInfo suggestVariableNameByExpressionPlace(@NotNull PsiExpression expr, @NotNull VariableKind variableKind, boolean correctKeywords) -->Line_57 $$ if (expr == assignmentExpression.getRExpression()) [ FD ]
Line_42 $$ if (words.length > 0) -->Line_44 $$ if (SET_PREFIX.equals(firstWord)) [ CD ]
Line_6 $$ PsiSubstitutor subst = PsiSubstitutor.EMPTY-->Line_36 $$ if (name != null && TypeConversionUtil.areTypesAssignmentCompatible(subst.substitute(parameters[index].getType()), expr)) [ FD ]
Line_20 $$ if (method != null) -->Line_21 $$ final PsiElement navElement = method.getNavigationElement()[ CD ]
Line_34 $$ if (index < parameters.length) -->Line_35 $$ String name = parameters[index].getName()[ CD ]
Line_29 $$ index = i-->Line_34 $$ if (index < parameters.length) [ FD ]
Line_56 $$ final PsiAssignmentExpression assignmentExpression = (PsiAssignmentExpression) expr.getParent()-->Line_58 $$ final PsiExpression leftExpression = assignmentExpression.getLExpression()[ FD ]
Line_20 $$ if (method != null) -->Line_33 $$ PsiParameter[] parameters = method.getParameterList().getParameters()[ CD ]
Line_8 $$ if (listParent instanceof PsiMethodCallExpression) -->Line_11 $$ subst = resolveResult.getSubstitutor()[ CD ]
Line_58 $$ final PsiExpression leftExpression = assignmentExpression.getLExpression()-->Line_60 $$ String name = leftExpression.getText()[ FD ]
Line_2 $$ private NamesByExprInfo suggestVariableNameByExpressionPlace(@NotNull PsiExpression expr, @NotNull VariableKind variableKind, boolean correctKeywords) -->Line_72 $$ return new NamesByExprInfo(null, ArrayUtil.EMPTY_STRING_ARRAY)[ CD ]
Line_2 $$ private NamesByExprInfo suggestVariableNameByExpressionPlace(@NotNull PsiExpression expr, @NotNull VariableKind variableKind, boolean correctKeywords) -->Line_56 $$ final PsiAssignmentExpression assignmentExpression = (PsiAssignmentExpression) expr.getParent()[ FD ]
Line_61 $$ if (name != null) -->Line_67 $$ return new NamesByExprInfo(name, names)[ CD ]
Line_10 $$ method = (PsiMethod) resolveResult.getElement()-->Line_17 $$ method = ((PsiNewExpression) listParent).resolveConstructor()[ FD ]
Line_2 $$ private NamesByExprInfo suggestVariableNameByExpressionPlace(@NotNull PsiExpression expr, @NotNull VariableKind variableKind, boolean correctKeywords) -->Line_3 $$ if (expr.getParent() instanceof PsiExpressionList) [ FD ]
Line_61 $$ if (name != null) -->Line_66 $$ String[] names = getSuggestionsByName(name, variableKind, false, correctKeywords)[ CD ]
Line_8 $$ if (listParent instanceof PsiMethodCallExpression) -->Line_9 $$ final JavaResolveResult resolveResult = ((PsiMethodCallExpression) listParent).getMethodExpression().advancedResolve(false)[ CD ]
