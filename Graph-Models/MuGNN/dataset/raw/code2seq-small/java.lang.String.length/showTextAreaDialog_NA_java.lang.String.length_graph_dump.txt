Line_6 $$ final JTextArea textArea = new JTextArea(10, 50)-->Line_8 $$ textArea.setWrapStyleWord(true)[ FD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_18 $$ if (StringUtil.endsWithChar(rawText, ':')) [ CD ]
Line_17 $$ String rawText = title-->Line_18 $$ if (StringUtil.endsWithChar(rawText, ':')) [ FD ]
Line_13 $$ final DialogBuilder builder = new DialogBuilder(textField)-->Line_16 $$ builder.setPreferredFocusComponent(textArea)[ FD ]
Line_10 $$ List<String> lines = parser.fun(textField.getText())-->Line_11 $$ textArea.setText(StringUtil.join(lines, "\n"))[ FD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_4 $$ ourTestImplementation.show(title)[ CD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_9 $$ textArea.setLineWrap(true)[ CD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_14 $$ builder.setDimensionServiceKey(dimensionServiceKey)[ CD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_24 $$ builder.setOkOperation(new Runnable() [ CD ]
Line_13 $$ final DialogBuilder builder = new DialogBuilder(textField)-->Line_30 $$ builder.show()[ FD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_6 $$ final JTextArea textArea = new JTextArea(10, 50)[ CD ]
Line_2 $$ public static void showTextAreaDialog(final JTextField textField, @Nls(capitalization = Nls.Capitalization.Title) final String title, @NonNls final String dimensionServiceKey, final Function<String, List<String>> parser, final Function<List<String>, String> lineJoiner) -->Line_10 $$ List<String> lines = parser.fun(textField.getText())[ FD ]
Line_2 $$ public static void showTextAreaDialog(final JTextField textField, @Nls(capitalization = Nls.Capitalization.Title) final String title, @NonNls final String dimensionServiceKey, final Function<String, List<String>> parser, final Function<List<String>, String> lineJoiner) -->Line_12 $$ InsertPathAction.copyFromTo(textField, textArea)[ FD ]
Line_17 $$ String rawText = title-->Line_21 $$ builder.setTitle(rawText)[ FD ]
Line_6 $$ final JTextArea textArea = new JTextArea(10, 50)-->Line_11 $$ textArea.setText(StringUtil.join(lines, "\n"))[ FD ]
Line_6 $$ final JTextArea textArea = new JTextArea(10, 50)-->Line_15 $$ builder.setCenterPanel(ScrollPaneFactory.createScrollPane(textArea))[ FD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_7 $$ UIUtil.addUndoRedoActions(textArea)[ CD ]
Line_13 $$ final DialogBuilder builder = new DialogBuilder(textField)-->Line_24 $$ builder.setOkOperation(new Runnable() [ FD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_11 $$ textArea.setText(StringUtil.join(lines, "\n"))[ CD ]
Line_13 $$ final DialogBuilder builder = new DialogBuilder(textField)-->Line_27 $$ builder.getDialogWrapper().close(DialogWrapper.OK_EXIT_CODE)[ FD ]
Line_2 $$ public static void showTextAreaDialog(final JTextField textField, @Nls(capitalization = Nls.Capitalization.Title) final String title, @NonNls final String dimensionServiceKey, final Function<String, List<String>> parser, final Function<List<String>, String> lineJoiner) -->Line_4 $$ ourTestImplementation.show(title)[ FD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_22 $$ builder.addOkAction()[ CD ]
Line_24 $$ builder.setOkOperation(new Runnable() -->Line_27 $$ builder.getDialogWrapper().close(DialogWrapper.OK_EXIT_CODE)[ CD ]
Line_17 $$ String rawText = title-->Line_19 $$ rawText = rawText.substring(0, rawText.length() - 1)[ FD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_30 $$ builder.show()[ CD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_12 $$ InsertPathAction.copyFromTo(textField, textArea)[ CD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_10 $$ List<String> lines = parser.fun(textField.getText())[ CD ]
Line_13 $$ final DialogBuilder builder = new DialogBuilder(textField)-->Line_21 $$ builder.setTitle(rawText)[ FD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_23 $$ builder.addCancelAction()[ CD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_8 $$ textArea.setWrapStyleWord(true)[ CD ]
Line_6 $$ final JTextArea textArea = new JTextArea(10, 50)-->Line_26 $$ textField.setText(lineJoiner.fun(Arrays.asList(StringUtil.splitByLines(textArea.getText()))))[ FD ]
Line_6 $$ final JTextArea textArea = new JTextArea(10, 50)-->Line_9 $$ textArea.setLineWrap(true)[ FD ]
Line_6 $$ final JTextArea textArea = new JTextArea(10, 50)-->Line_7 $$ UIUtil.addUndoRedoActions(textArea)[ FD ]
Line_13 $$ final DialogBuilder builder = new DialogBuilder(textField)-->Line_15 $$ builder.setCenterPanel(ScrollPaneFactory.createScrollPane(textArea))[ FD ]
Line_24 $$ builder.setOkOperation(new Runnable() -->Line_26 $$ textField.setText(lineJoiner.fun(Arrays.asList(StringUtil.splitByLines(textArea.getText()))))[ CD ]
Line_2 $$ public static void showTextAreaDialog(final JTextField textField, @Nls(capitalization = Nls.Capitalization.Title) final String title, @NonNls final String dimensionServiceKey, final Function<String, List<String>> parser, final Function<List<String>, String> lineJoiner) -->Line_26 $$ textField.setText(lineJoiner.fun(Arrays.asList(StringUtil.splitByLines(textArea.getText()))))[ FD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_16 $$ builder.setPreferredFocusComponent(textArea)[ CD ]
Line_6 $$ final JTextArea textArea = new JTextArea(10, 50)-->Line_12 $$ InsertPathAction.copyFromTo(textField, textArea)[ FD ]
Line_13 $$ final DialogBuilder builder = new DialogBuilder(textField)-->Line_22 $$ builder.addOkAction()[ FD ]
Line_19 $$ rawText = rawText.substring(0, rawText.length() - 1)-->Line_21 $$ builder.setTitle(rawText)[ FD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_21 $$ builder.setTitle(rawText)[ CD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_15 $$ builder.setCenterPanel(ScrollPaneFactory.createScrollPane(textArea))[ CD ]
Line_2 $$ public static void showTextAreaDialog(final JTextField textField, @Nls(capitalization = Nls.Capitalization.Title) final String title, @NonNls final String dimensionServiceKey, final Function<String, List<String>> parser, final Function<List<String>, String> lineJoiner) -->Line_3 $$ if (isApplicationInUnitTestOrHeadless()) [ CD ]
Line_2 $$ public static void showTextAreaDialog(final JTextField textField, @Nls(capitalization = Nls.Capitalization.Title) final String title, @NonNls final String dimensionServiceKey, final Function<String, List<String>> parser, final Function<List<String>, String> lineJoiner) -->Line_14 $$ builder.setDimensionServiceKey(dimensionServiceKey)[ FD ]
Line_18 $$ if (StringUtil.endsWithChar(rawText, ':')) -->Line_19 $$ rawText = rawText.substring(0, rawText.length() - 1)[ CD ]
Line_13 $$ final DialogBuilder builder = new DialogBuilder(textField)-->Line_14 $$ builder.setDimensionServiceKey(dimensionServiceKey)[ FD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_13 $$ final DialogBuilder builder = new DialogBuilder(textField)[ CD ]
Line_6 $$ final JTextArea textArea = new JTextArea(10, 50)-->Line_16 $$ builder.setPreferredFocusComponent(textArea)[ FD ]
Line_3 $$ if (isApplicationInUnitTestOrHeadless()) -->Line_17 $$ String rawText = title[ CD ]
Line_13 $$ final DialogBuilder builder = new DialogBuilder(textField)-->Line_23 $$ builder.addCancelAction()[ FD ]
