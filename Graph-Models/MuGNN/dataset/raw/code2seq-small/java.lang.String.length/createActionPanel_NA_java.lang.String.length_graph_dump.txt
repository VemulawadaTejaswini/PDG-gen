Line_10 $$ for (AnAction action : group.getChildren(null)) -->Line_26 $$ action = wrapGroups(action)[ FD ]
Line_27 $$ ActionLink link = new ActionLink(text, icon, action, createUsageTracker(action))-->Line_32 $$ button.add(createArrow(link), BorderLayout.EAST)[ FD ]
Line_8 $$ DefaultActionGroup group = new DefaultActionGroup()-->Line_9 $$ collectAllActions(group, quickStart)[ FD ]
Line_2 $$ private JComponent createActionPanel() -->Line_8 $$ DefaultActionGroup group = new DefaultActionGroup()[ CD ]
Line_17 $$ if (presentation.isVisible()) -->Line_30 $$ button.add(link)[ CD ]
Line_10 $$ for (AnAction action : group.getChildren(null)) -->Line_34 $$ installFocusable(button, action, KeyEvent.VK_UP, KeyEvent.VK_DOWN, true)[ FD ]
Line_26 $$ action = wrapGroups(action)-->Line_34 $$ installFocusable(button, action, KeyEvent.VK_UP, KeyEvent.VK_DOWN, true)[ FD ]
Line_17 $$ if (presentation.isVisible()) -->Line_29 $$ link.setNormalColor(getLinkNormalColor())[ CD ]
Line_27 $$ ActionLink link = new ActionLink(text, icon, action, createUsageTracker(action))-->Line_29 $$ link.setNormalColor(getLinkNormalColor())[ FD ]
Line_2 $$ private JComponent createActionPanel() -->Line_39 $$ panel.actions.add(actions)[ CD ]
Line_2 $$ private JComponent createActionPanel() -->Line_7 $$ ActionGroup quickStart = (ActionGroup) actionManager.getAction(IdeActions.GROUP_WELCOME_SCREEN_QUICKSTART)[ CD ]
Line_16 $$ Presentation presentation = e.getPresentation()-->Line_18 $$ String text = presentation.getText()[ FD ]
Line_10 $$ for (AnAction action : group.getChildren(null)) -->Line_15 $$ action.update(e)[ FD ]
Line_18 $$ String text = presentation.getText()-->Line_20 $$ text = text.substring(0, text.length() - 3)[ FD ]
Line_17 $$ if (presentation.isVisible()) -->Line_28 $$ link.setPaintUnderline(false)[ CD ]
Line_26 $$ action = wrapGroups(action)-->Line_31 $$ if (action instanceof WelcomePopupAction) [ FD ]
Line_17 $$ if (presentation.isVisible()) -->Line_31 $$ if (action instanceof WelcomePopupAction) [ CD ]
Line_11 $$ JPanel button = new JPanel(new BorderLayout())-->Line_35 $$ actions.add(button)[ FD ]
Line_8 $$ DefaultActionGroup group = new DefaultActionGroup()-->Line_10 $$ for (AnAction action : group.getChildren(null)) [ FD ]
Line_3 $$ JPanel actions = new NonOpaquePanel()-->Line_35 $$ actions.add(button)[ FD ]
Line_2 $$ private JComponent createActionPanel() -->Line_40 $$ return panel.root[ CD ]
Line_2 $$ private JComponent createActionPanel() -->Line_9 $$ collectAllActions(group, quickStart)[ CD ]
Line_23 $$ if (icon.getIconHeight() != JBUI.scale(16) || icon.getIconWidth() != JBUI.scale(16)) -->Line_24 $$ icon = JBUI.emptyIcon(16)[ CD ]
Line_16 $$ Presentation presentation = e.getPresentation()-->Line_17 $$ if (presentation.isVisible()) [ FD ]
Line_11 $$ JPanel button = new JPanel(new BorderLayout())-->Line_13 $$ button.setBorder(JBUI.Borders.empty(8, 20))[ FD ]
Line_14 $$ AnActionEvent e = AnActionEvent.createFromAnAction(action, null, ActionPlaces.WELCOME_SCREEN, DataManager.getInstance().getDataContext(this))-->Line_15 $$ action.update(e)[ FD ]
Line_6 $$ ActionManager actionManager = ActionManager.getInstance()-->Line_7 $$ ActionGroup quickStart = (ActionGroup) actionManager.getAction(IdeActions.GROUP_WELCOME_SCREEN_QUICKSTART)[ FD ]
Line_3 $$ JPanel actions = new NonOpaquePanel()-->Line_39 $$ panel.actions.add(actions)[ FD ]
Line_17 $$ if (presentation.isVisible()) -->Line_18 $$ String text = presentation.getText()[ CD ]
Line_2 $$ private JComponent createActionPanel() -->Line_5 $$ actions.setLayout(new BoxLayout(actions, BoxLayout.Y_AXIS))[ CD ]
Line_19 $$ if (text != null && text.endsWith("...")) -->Line_20 $$ text = text.substring(0, text.length() - 3)[ CD ]
Line_17 $$ if (presentation.isVisible()) -->Line_22 $$ Icon icon = presentation.getIcon()[ CD ]
Line_10 $$ for (AnAction action : group.getChildren(null)) -->Line_31 $$ if (action instanceof WelcomePopupAction) [ FD ]
Line_2 $$ private JComponent createActionPanel() -->Line_38 $$ WelcomeScreenActionsPanel panel = new WelcomeScreenActionsPanel()[ CD ]
Line_11 $$ JPanel button = new JPanel(new BorderLayout())-->Line_34 $$ installFocusable(button, action, KeyEvent.VK_UP, KeyEvent.VK_DOWN, true)[ FD ]
Line_22 $$ Icon icon = presentation.getIcon()-->Line_24 $$ icon = JBUI.emptyIcon(16)[ FD ]
Line_3 $$ JPanel actions = new NonOpaquePanel()-->Line_4 $$ actions.setBorder(JBUI.Borders.emptyLeft(10))[ FD ]
Line_17 $$ if (presentation.isVisible()) -->Line_26 $$ action = wrapGroups(action)[ CD ]
Line_14 $$ AnActionEvent e = AnActionEvent.createFromAnAction(action, null, ActionPlaces.WELCOME_SCREEN, DataManager.getInstance().getDataContext(this))-->Line_16 $$ Presentation presentation = e.getPresentation()[ FD ]
Line_26 $$ action = wrapGroups(action)-->Line_27 $$ ActionLink link = new ActionLink(text, icon, action, createUsageTracker(action))[ FD ]
Line_17 $$ if (presentation.isVisible()) -->Line_19 $$ if (text != null && text.endsWith("...")) [ CD ]
Line_18 $$ String text = presentation.getText()-->Line_19 $$ if (text != null && text.endsWith("...")) [ FD ]
Line_11 $$ JPanel button = new JPanel(new BorderLayout())-->Line_30 $$ button.add(link)[ FD ]
Line_2 $$ private JComponent createActionPanel() -->Line_6 $$ ActionManager actionManager = ActionManager.getInstance()[ CD ]
Line_7 $$ ActionGroup quickStart = (ActionGroup) actionManager.getAction(IdeActions.GROUP_WELCOME_SCREEN_QUICKSTART)-->Line_9 $$ collectAllActions(group, quickStart)[ FD ]
Line_2 $$ private JComponent createActionPanel() -->Line_4 $$ actions.setBorder(JBUI.Borders.emptyLeft(10))[ CD ]
Line_10 $$ for (AnAction action : group.getChildren(null)) -->Line_14 $$ AnActionEvent e = AnActionEvent.createFromAnAction(action, null, ActionPlaces.WELCOME_SCREEN, DataManager.getInstance().getDataContext(this))[ FD ]
Line_17 $$ if (presentation.isVisible()) -->Line_35 $$ actions.add(button)[ CD ]
Line_11 $$ JPanel button = new JPanel(new BorderLayout())-->Line_32 $$ button.add(createArrow(link), BorderLayout.EAST)[ FD ]
Line_17 $$ if (presentation.isVisible()) -->Line_34 $$ installFocusable(button, action, KeyEvent.VK_UP, KeyEvent.VK_DOWN, true)[ CD ]
Line_3 $$ JPanel actions = new NonOpaquePanel()-->Line_5 $$ actions.setLayout(new BoxLayout(actions, BoxLayout.Y_AXIS))[ FD ]
Line_17 $$ if (presentation.isVisible()) -->Line_23 $$ if (icon.getIconHeight() != JBUI.scale(16) || icon.getIconWidth() != JBUI.scale(16)) [ CD ]
Line_16 $$ Presentation presentation = e.getPresentation()-->Line_22 $$ Icon icon = presentation.getIcon()[ FD ]
Line_17 $$ if (presentation.isVisible()) -->Line_27 $$ ActionLink link = new ActionLink(text, icon, action, createUsageTracker(action))[ CD ]
Line_27 $$ ActionLink link = new ActionLink(text, icon, action, createUsageTracker(action))-->Line_28 $$ link.setPaintUnderline(false)[ FD ]
Line_31 $$ if (action instanceof WelcomePopupAction) -->Line_32 $$ button.add(createArrow(link), BorderLayout.EAST)[ CD ]
Line_2 $$ private JComponent createActionPanel() -->Line_3 $$ JPanel actions = new NonOpaquePanel()[ CD ]
Line_10 $$ for (AnAction action : group.getChildren(null)) -->Line_27 $$ ActionLink link = new ActionLink(text, icon, action, createUsageTracker(action))[ FD ]
Line_27 $$ ActionLink link = new ActionLink(text, icon, action, createUsageTracker(action))-->Line_30 $$ button.add(link)[ FD ]
Line_22 $$ Icon icon = presentation.getIcon()-->Line_23 $$ if (icon.getIconHeight() != JBUI.scale(16) || icon.getIconWidth() != JBUI.scale(16)) [ FD ]
Line_11 $$ JPanel button = new JPanel(new BorderLayout())-->Line_12 $$ button.setOpaque(false)[ FD ]
