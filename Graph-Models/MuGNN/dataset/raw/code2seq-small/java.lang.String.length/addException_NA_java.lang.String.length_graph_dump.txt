Line_21 $$ base = Util.javaToIDLName(base + "Ex")-->Line_24 $$ TypeCode typeCode = orb.create_exception_tc(ea.getExceptionRepositoryId(), base, members)[ FD ]
Line_17 $$ String base = cls.getName()-->Line_20 $$ base = base.substring(0, base.length() - 9)[ FD ]
Line_20 $$ base = base.substring(0, base.length() - 9)-->Line_26 $$ m.add(base, eDef)[ FD ]
Line_17 $$ String base = cls.getName()-->Line_24 $$ TypeCode typeCode = orb.create_exception_tc(ea.getExceptionRepositoryId(), base, members)[ FD ]
Line_17 $$ String base = cls.getName()-->Line_19 $$ if (base.endsWith("Exception"))[ FD ]
Line_18 $$ base = base.substring(base.lastIndexOf('.') + 1)-->Line_24 $$ TypeCode typeCode = orb.create_exception_tc(ea.getExceptionRepositoryId(), base, members)[ FD ]
Line_6 $$ ExceptionDefImpl eDef-->Line_25 $$ eDef = new ExceptionDefImpl(ea.getExceptionRepositoryId(), base, "1.0", typeCode, vDef, m, impl)[ FD ]
Line_6 $$ ExceptionDefImpl eDef-->Line_10 $$ if (eDef != null)[ FD ]
Line_22 $$ StructMember[] members = new StructMember[1]-->Line_24 $$ TypeCode typeCode = orb.create_exception_tc(ea.getExceptionRepositoryId(), base, members)[ FD ]
Line_18 $$ base = base.substring(base.lastIndexOf('.') + 1)-->Line_19 $$ if (base.endsWith("Exception"))[ FD ]
Line_25 $$ eDef = new ExceptionDefImpl(ea.getExceptionRepositoryId(), base, "1.0", typeCode, vDef, m, impl)-->Line_26 $$ m.add(base, eDef)[ FD ]
Line_6 $$ ExceptionDefImpl eDef-->Line_26 $$ m.add(base, eDef)[ FD ]
Line_18 $$ base = base.substring(base.lastIndexOf('.') + 1)-->Line_20 $$ base = base.substring(0, base.length() - 9)[ FD ]
Line_18 $$ base = base.substring(base.lastIndexOf('.') + 1)-->Line_21 $$ base = Util.javaToIDLName(base + "Ex")[ FD ]
Line_17 $$ String base = cls.getName()-->Line_26 $$ m.add(base, eDef)[ FD ]
Line_20 $$ base = base.substring(0, base.length() - 9)-->Line_21 $$ base = Util.javaToIDLName(base + "Ex")[ FD ]
Line_17 $$ String base = cls.getName()-->Line_21 $$ base = Util.javaToIDLName(base + "Ex")[ FD ]
Line_7 $$ Class cls = ea.getCls()-->Line_17 $$ String base = cls.getName()[ FD ]
Line_20 $$ base = base.substring(0, base.length() - 9)-->Line_24 $$ TypeCode typeCode = orb.create_exception_tc(ea.getExceptionRepositoryId(), base, members)[ FD ]
Line_18 $$ base = base.substring(base.lastIndexOf('.') + 1)-->Line_26 $$ m.add(base, eDef)[ FD ]
Line_19 $$ if (base.endsWith("Exception"))-->Line_20 $$ base = base.substring(0, base.length() - 9)[ CD ]
Line_21 $$ base = Util.javaToIDLName(base + "Ex")-->Line_26 $$ m.add(base, eDef)[ FD ]
Line_17 $$ String base = cls.getName()-->Line_18 $$ base = base.substring(base.lastIndexOf('.') + 1)[ FD ]
