Line_6 $$ final char ch = fileName.charAt(i)-->Line_9 $$ result.append(ch)[ FD ]
Line_4 $$ final String fileName = className + "." + methodName-->Line_6 $$ final char ch = fileName.charAt(i)[ FD ]
Line_3 $$ final StringBuilder result = new StringBuilder()-->Line_9 $$ result.append(ch)[ FD ]
Line_3 $$ final StringBuilder result = new StringBuilder()-->Line_11 $$ result.append("_")[ FD ]
Line_2 $$ protected static String sanitize(String className, String methodName) -->Line_15 $$ return result.toString()[ CD ]
Line_2 $$ protected static String sanitize(String className, String methodName) -->Line_3 $$ final StringBuilder result = new StringBuilder()[ CD ]
Line_5 $$ for (int i = 0; i < fileName.length(); i++) -->Line_7 $$ if (ch > 0 && ch < 255) [ CD ]
Line_3 $$ final StringBuilder result = new StringBuilder()-->Line_15 $$ return result.toString()[ FD ]
Line_7 $$ if (ch > 0 && ch < 255) -->Line_8 $$ if (Character.isLetterOrDigit(ch)) [ CD ]
Line_5 $$ for (int i = 0; i < fileName.length(); i++) -->Line_6 $$ final char ch = fileName.charAt(i)[ CD ]
Line_8 $$ if (Character.isLetterOrDigit(ch)) -->Line_9 $$ result.append(ch)[ CD ]
Line_5 $$ for (int i = 0; i < fileName.length(); i++) -->Line_6 $$ final char ch = fileName.charAt(i)[ FD ]
Line_4 $$ final String fileName = className + "." + methodName-->Line_5 $$ for (int i = 0; i < fileName.length(); i++) [ FD ]
Line_6 $$ final char ch = fileName.charAt(i)-->Line_8 $$ if (Character.isLetterOrDigit(ch)) [ FD ]
Line_2 $$ protected static String sanitize(String className, String methodName) -->Line_5 $$ for (int i = 0; i < fileName.length(); i++) [ CD ]
Line_2 $$ protected static String sanitize(String className, String methodName) -->Line_4 $$ final String fileName = className + "." + methodName[ CD ]
Line_8 $$ if (Character.isLetterOrDigit(ch)) -->Line_11 $$ result.append("_")[ CD ]
