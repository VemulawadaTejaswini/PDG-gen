Line_13 $$ final MethodListDlg dlg = new MethodListDlg(testClass, getFilter(testClass), getField())-->Line_15 $$ final PsiMethod method = dlg.getSelected()[ FD ]
Line_3 $$ final String className = getClassName()-->Line_8 $$ final PsiClass testClass = getModuleSelector().findClass(className)[ FD ]
Line_8 $$ final PsiClass testClass = getModuleSelector().findClass(className)-->Line_13 $$ final MethodListDlg dlg = new MethodListDlg(testClass, getFilter(testClass), getField())[ FD ]
Line_2 $$ protected String showDialog() -->Line_20 $$ return null[ CD ]
Line_2 $$ protected String showDialog() -->Line_13 $$ final MethodListDlg dlg = new MethodListDlg(testClass, getFilter(testClass), getField())[ CD ]
Line_13 $$ final MethodListDlg dlg = new MethodListDlg(testClass, getFilter(testClass), getField())-->Line_14 $$ if (dlg.showAndGet()) [ FD ]
Line_14 $$ if (dlg.showAndGet()) -->Line_15 $$ final PsiMethod method = dlg.getSelected()[ CD ]
Line_2 $$ protected String showDialog() -->Line_14 $$ if (dlg.showAndGet()) [ CD ]
Line_2 $$ protected String showDialog() -->Line_4 $$ if (className.trim().length() == 0) [ CD ]
Line_2 $$ protected String showDialog() -->Line_8 $$ final PsiClass testClass = getModuleSelector().findClass(className)[ CD ]
Line_9 $$ if (testClass == null) -->Line_10 $$ Messages.showMessageDialog(getField(), ExecutionBundle.message("class.does.not.exists.error.message", className), ExecutionBundle.message("cannot.browse.method.dialog.title"), Messages.getInformationIcon())[ CD ]
Line_16 $$ if (method != null) -->Line_17 $$ return method.getName()[ CD ]
Line_3 $$ final String className = getClassName()-->Line_10 $$ Messages.showMessageDialog(getField(), ExecutionBundle.message("class.does.not.exists.error.message", className), ExecutionBundle.message("cannot.browse.method.dialog.title"), Messages.getInformationIcon())[ FD ]
Line_4 $$ if (className.trim().length() == 0) -->Line_5 $$ Messages.showMessageDialog(getField(), ExecutionBundle.message("set.class.name.message"), ExecutionBundle.message("cannot.browse.method.dialog.title"), Messages.getInformationIcon())[ CD ]
Line_14 $$ if (dlg.showAndGet()) -->Line_16 $$ if (method != null) [ CD ]
Line_15 $$ final PsiMethod method = dlg.getSelected()-->Line_17 $$ return method.getName()[ FD ]
Line_2 $$ protected String showDialog() -->Line_3 $$ final String className = getClassName()[ CD ]
Line_4 $$ if (className.trim().length() == 0) -->Line_6 $$ return null[ CD ]
Line_2 $$ protected String showDialog() -->Line_9 $$ if (testClass == null) [ CD ]
Line_8 $$ final PsiClass testClass = getModuleSelector().findClass(className)-->Line_9 $$ if (testClass == null) [ FD ]
Line_3 $$ final String className = getClassName()-->Line_4 $$ if (className.trim().length() == 0) [ FD ]
Line_9 $$ if (testClass == null) -->Line_11 $$ return null[ CD ]
Line_15 $$ final PsiMethod method = dlg.getSelected()-->Line_16 $$ if (method != null) [ FD ]
