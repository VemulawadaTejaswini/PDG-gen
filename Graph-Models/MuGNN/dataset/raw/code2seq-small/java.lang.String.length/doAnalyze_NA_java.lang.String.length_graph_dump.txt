Line_13 $$ pkgName = (idx == -1) ? "" : pkgName.substring(idx + 1)-->Line_10 $$ int idx = pkgName.indexOf('.')[ FD ]
Line_2 $$ protected void doAnalyze() throws RMIIIOPViolationException -->Line_9 $$ while (!"".equals(pkgName)) [ CD ]
Line_9 $$ while (!"".equals(pkgName)) -->Line_10 $$ int idx = pkgName.indexOf('.')[ CD ]
Line_10 $$ int idx = pkgName.indexOf('.')-->Line_11 $$ String n = (idx == -1) ? pkgName : pkgName.substring(0, idx)[ FD ]
Line_15 $$ String base = cls.getName()-->Line_16 $$ base = base.substring(base.lastIndexOf('.') + 1)[ FD ]
Line_2 $$ protected void doAnalyze() throws RMIIIOPViolationException -->Line_4 $$ if (!Exception.class.isAssignableFrom(cls) || RuntimeException.class.isAssignableFrom(cls))[ CD ]
Line_2 $$ protected void doAnalyze() throws RMIIIOPViolationException -->Line_15 $$ String base = cls.getName()[ CD ]
Line_2 $$ protected void doAnalyze() throws RMIIIOPViolationException -->Line_17 $$ if (base.endsWith("Exception"))[ CD ]
Line_16 $$ base = base.substring(base.lastIndexOf('.') + 1)-->Line_17 $$ if (base.endsWith("Exception"))[ FD ]
Line_18 $$ base = base.substring(0, base.length() - 9)-->Line_19 $$ base = Util.javaToIDLName(base + "Ex")[ FD ]
Line_18 $$ base = base.substring(0, base.length() - 9)-->Line_20 $$ b.append(base).append(":1.0")[ FD ]
Line_13 $$ pkgName = (idx == -1) ? "" : pkgName.substring(idx + 1)-->Line_9 $$ while (!"".equals(pkgName)) [ FD ]
Line_2 $$ protected void doAnalyze() throws RMIIIOPViolationException -->Line_3 $$ super.doAnalyze()[ CD ]
Line_15 $$ String base = cls.getName()-->Line_19 $$ base = Util.javaToIDLName(base + "Ex")[ FD ]
Line_13 $$ pkgName = (idx == -1) ? "" : pkgName.substring(idx + 1)-->Line_11 $$ String n = (idx == -1) ? pkgName : pkgName.substring(0, idx)[ FD ]
Line_2 $$ protected void doAnalyze() throws RMIIIOPViolationException -->Line_20 $$ b.append(base).append(":1.0")[ CD ]
Line_17 $$ if (base.endsWith("Exception"))-->Line_18 $$ base = base.substring(0, base.length() - 9)[ CD ]
Line_19 $$ base = Util.javaToIDLName(base + "Ex")-->Line_20 $$ b.append(base).append(":1.0")[ FD ]
Line_11 $$ String n = (idx == -1) ? pkgName : pkgName.substring(0, idx)-->Line_12 $$ b.append(Util.javaToIDLName(n)).append('/')[ FD ]
Line_2 $$ protected void doAnalyze() throws RMIIIOPViolationException -->Line_8 $$ String pkgName = cls.getPackage().getName()[ CD ]
Line_16 $$ base = base.substring(base.lastIndexOf('.') + 1)-->Line_20 $$ b.append(base).append(":1.0")[ FD ]
Line_8 $$ String pkgName = cls.getPackage().getName()-->Line_13 $$ pkgName = (idx == -1) ? "" : pkgName.substring(idx + 1)[ FD ]
Line_8 $$ String pkgName = cls.getPackage().getName()-->Line_11 $$ String n = (idx == -1) ? pkgName : pkgName.substring(0, idx)[ FD ]
Line_2 $$ protected void doAnalyze() throws RMIIIOPViolationException -->Line_19 $$ base = Util.javaToIDLName(base + "Ex")[ CD ]
Line_15 $$ String base = cls.getName()-->Line_17 $$ if (base.endsWith("Exception"))[ FD ]
Line_2 $$ protected void doAnalyze() throws RMIIIOPViolationException -->Line_21 $$ exceptionRepositoryId = b.toString()[ CD ]
Line_8 $$ String pkgName = cls.getPackage().getName()-->Line_10 $$ int idx = pkgName.indexOf('.')[ FD ]
Line_9 $$ while (!"".equals(pkgName)) -->Line_13 $$ pkgName = (idx == -1) ? "" : pkgName.substring(idx + 1)[ CD ]
Line_16 $$ base = base.substring(base.lastIndexOf('.') + 1)-->Line_18 $$ base = base.substring(0, base.length() - 9)[ FD ]
Line_15 $$ String base = cls.getName()-->Line_20 $$ b.append(base).append(":1.0")[ FD ]
Line_9 $$ while (!"".equals(pkgName)) -->Line_11 $$ String n = (idx == -1) ? pkgName : pkgName.substring(0, idx)[ CD ]
Line_2 $$ protected void doAnalyze() throws RMIIIOPViolationException -->Line_16 $$ base = base.substring(base.lastIndexOf('.') + 1)[ CD ]
Line_8 $$ String pkgName = cls.getPackage().getName()-->Line_9 $$ while (!"".equals(pkgName)) [ FD ]
Line_16 $$ base = base.substring(base.lastIndexOf('.') + 1)-->Line_19 $$ base = Util.javaToIDLName(base + "Ex")[ FD ]
Line_9 $$ while (!"".equals(pkgName)) -->Line_12 $$ b.append(Util.javaToIDLName(n)).append('/')[ CD ]
Line_15 $$ String base = cls.getName()-->Line_18 $$ base = base.substring(0, base.length() - 9)[ FD ]
