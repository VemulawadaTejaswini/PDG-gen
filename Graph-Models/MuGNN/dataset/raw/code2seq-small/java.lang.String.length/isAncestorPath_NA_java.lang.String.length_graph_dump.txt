Line_2 $$ private static boolean isAncestorPath(Path xp, Path yp) -->Line_3 $$ final String x = xp.toString()[ FD ]
Line_8 $$ final int len = x.length()-->Line_9 $$ return y.length() == len || y.charAt(len) == Path.SEPARATOR_CHAR[ FD ]
Line_2 $$ private static boolean isAncestorPath(Path xp, Path yp) -->Line_4 $$ final String y = yp.toString()[ FD ]
Line_2 $$ private static boolean isAncestorPath(Path xp, Path yp) -->Line_3 $$ final String x = xp.toString()[ CD ]
Line_4 $$ final String y = yp.toString()-->Line_9 $$ return y.length() == len || y.charAt(len) == Path.SEPARATOR_CHAR[ FD ]
Line_2 $$ private static boolean isAncestorPath(Path xp, Path yp) -->Line_4 $$ final String y = yp.toString()[ CD ]
Line_2 $$ private static boolean isAncestorPath(Path xp, Path yp) -->Line_9 $$ return y.length() == len || y.charAt(len) == Path.SEPARATOR_CHAR[ CD ]
Line_4 $$ final String y = yp.toString()-->Line_5 $$ if (!y.startsWith(x)) [ FD ]
Line_3 $$ final String x = xp.toString()-->Line_5 $$ if (!y.startsWith(x)) [ FD ]
Line_3 $$ final String x = xp.toString()-->Line_8 $$ final int len = x.length()[ FD ]
Line_5 $$ if (!y.startsWith(x)) -->Line_6 $$ return false[ CD ]
Line_2 $$ private static boolean isAncestorPath(Path xp, Path yp) -->Line_8 $$ final int len = x.length()[ CD ]
Line_2 $$ private static boolean isAncestorPath(Path xp, Path yp) -->Line_5 $$ if (!y.startsWith(x)) [ CD ]
