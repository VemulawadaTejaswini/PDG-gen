Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_114 $$ parseSecuritySettings(reader, connectionDefinitionNode)[ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_36 $$ poolName = value[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_66 $$ MCP.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_36 $$ poolName = value-->Line_76 $$ if (poolName == null || poolName.trim().equals("")) [ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_119 $$ parseTimeOut(reader, isXa, connectionDefinitionNode)[ FD ]
Line_5 $$ String poolName = null-->Line_36 $$ poolName = value[ FD ]
Line_91 $$ if (Activation.Tag.forName(reader.getLocalName()) == Activation.Tag.CONNECTION_DEFINITION) -->Line_92 $$ map.put(poolName, connectionDefinitionNode)[ CD ]
Line_36 $$ poolName = value-->Line_79 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)[ FD ]
Line_5 $$ String poolName = null-->Line_76 $$ if (poolName == null || poolName.trim().equals("")) [ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_9 $$ for (int i = 0; i < attributeSize; i++) [ CD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_84 $$ throw ParseUtils.missingRequired(reader, EnumSet.of(ConnectionDefinition.Attribute.JNDI_NAME))[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_130 $$ throw ParseUtils.unexpectedElement(reader)[ FD ]
Line_5 $$ String poolName = null-->Line_109 $$ parseConfigProperties(reader, configMap.get(poolName))[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_107 $$ configMap.put(poolName, new HashMap<String, ModelNode>(0))[ FD ]
Line_9 $$ for (int i = 0; i < attributeSize; i++) -->Line_10 $$ ConnectionDefinition.Attribute attribute = ConnectionDefinition.Attribute.forName(reader.getAttributeLocalName(i))[ CD ]
Line_79 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)-->Line_92 $$ map.put(poolName, connectionDefinitionNode)[ FD ]
Line_6 $$ String jndiName = null-->Line_30 $$ jndiName = value[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_153 $$ parseRecovery(reader, connectionDefinitionNode)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_91 $$ if (Activation.Tag.forName(reader.getLocalName()) == Activation.Tag.CONNECTION_DEFINITION) [ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_163 $$ throw ParseUtils.unexpectedEndElement(reader)[ FD ]
Line_91 $$ if (Activation.Tag.forName(reader.getLocalName()) == Activation.Tag.CONNECTION_DEFINITION) -->Line_95 $$ if (ConnectionDefinition.Tag.forName(reader.getLocalName()) == ConnectionDefinition.Tag.UNKNOWN) [ CD ]
Line_30 $$ jndiName = value-->Line_78 $$ if (jndiName.contains("/")) [ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_15 $$ ENABLED.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_41 $$ USE_JAVA_CONTEXT.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_5 $$ String poolName = null[ CD ]
Line_6 $$ String jndiName = null-->Line_81 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ FD ]
Line_79 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)-->Line_107 $$ configMap.put(poolName, new HashMap<String, ModelNode>(0))[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_11 $$ String value = reader.getAttributeValue(i)[ FD ]
Line_9 $$ for (int i = 0; i < attributeSize; i++) -->Line_11 $$ String value = reader.getAttributeValue(i)[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_31 $$ JNDINAME.parseAndSetParameter(jndiName, connectionDefinitionNode, reader)[ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_66 $$ MCP.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_79 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)-->Line_81 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ FD ]
Line_81 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)-->Line_107 $$ configMap.put(poolName, new HashMap<String, ModelNode>(0))[ FD ]
Line_81 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)-->Line_92 $$ map.put(poolName, connectionDefinitionNode)[ FD ]
Line_30 $$ jndiName = value-->Line_31 $$ JNDINAME.parseAndSetParameter(jndiName, connectionDefinitionNode, reader)[ FD ]
Line_78 $$ if (jndiName.contains("/")) -->Line_81 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ CD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_56 $$ ENLISTMENT.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_142 $$ throw ParseUtils.unexpectedElement(reader)[ FD ]
Line_6 $$ String jndiName = null-->Line_31 $$ JNDINAME.parseAndSetParameter(jndiName, connectionDefinitionNode, reader)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_66 $$ MCP.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_81 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)-->Line_106 $$ if (!configMap.containsKey(poolName)) [ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_124 $$ parseValidation(reader, connectionDefinitionNode)[ FD ]
Line_5 $$ String poolName = null-->Line_81 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ FD ]
Line_7 $$ int attributeSize = reader.getAttributeCount()-->Line_9 $$ for (int i = 0; i < attributeSize; i++) [ FD ]
Line_36 $$ poolName = value-->Line_109 $$ parseConfigProperties(reader, configMap.get(poolName))[ FD ]
Line_79 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)-->Line_109 $$ parseConfigProperties(reader, configMap.get(poolName))[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_51 $$ SHARABLE.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_103 $$ switch(ConnectionDefinition.Tag.forName(reader.getLocalName())) [ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_95 $$ if (ConnectionDefinition.Tag.forName(reader.getLocalName()) == ConnectionDefinition.Tag.UNKNOWN) [ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_70 $$ ENLISTMENT_TRACE.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_36 $$ poolName = value-->Line_81 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ FD ]
Line_6 $$ String jndiName = null-->Line_78 $$ if (jndiName.contains("/")) [ FD ]
Line_136 $$ poolDefined = true-->Line_148 $$ poolDefined = true[ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_46 $$ USE_CCM.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_70 $$ ENLISTMENT_TRACE.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_36 $$ poolName = value-->Line_107 $$ configMap.put(poolName, new HashMap<String, ModelNode>(0))[ FD ]
Line_77 $$ if (jndiName != null && jndiName.trim().length() != 0) -->Line_78 $$ if (jndiName.contains("/")) [ CD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_15 $$ ENABLED.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_70 $$ ENLISTMENT_TRACE.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_79 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)-->Line_106 $$ if (!configMap.containsKey(poolName)) [ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_129 $$ if (!isXa) [ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_76 $$ if (poolName == null || poolName.trim().equals("")) [ CD ]
Line_5 $$ String poolName = null-->Line_79 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)[ FD ]
Line_36 $$ poolName = value-->Line_92 $$ map.put(poolName, connectionDefinitionNode)[ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_30 $$ jndiName = value[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_46 $$ USE_CCM.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_119 $$ parseTimeOut(reader, isXa, connectionDefinitionNode)[ FD ]
Line_9 $$ for (int i = 0; i < attributeSize; i++) -->Line_10 $$ ConnectionDefinition.Attribute attribute = ConnectionDefinition.Attribute.forName(reader.getAttributeLocalName(i))[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_56 $$ ENLISTMENT.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_8 $$ boolean poolDefined = Boolean.FALSE[ CD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_92 $$ map.put(poolName, connectionDefinitionNode)[ FD ]
Line_76 $$ if (poolName == null || poolName.trim().equals("")) -->Line_77 $$ if (jndiName != null && jndiName.trim().length() != 0) [ CD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_157 $$ throw ParseUtils.unexpectedElement(reader)[ FD ]
Line_8 $$ boolean poolDefined = Boolean.FALSE-->Line_148 $$ poolDefined = true[ FD ]
Line_78 $$ if (jndiName.contains("/")) -->Line_79 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)[ CD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_31 $$ JNDINAME.parseAndSetParameter(jndiName, connectionDefinitionNode, reader)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_96 $$ throw ParseUtils.unexpectedEndElement(reader)[ FD ]
Line_5 $$ String poolName = null-->Line_107 $$ configMap.put(poolName, new HashMap<String, ModelNode>(0))[ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_20 $$ CONNECTABLE.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_147 $$ parsePool(reader, connectionDefinitionNode)[ FD ]
Line_6 $$ String jndiName = null-->Line_79 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_4 $$ connectionDefinitionNode.get(OP).set(ADD)[ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_56 $$ ENLISTMENT.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_41 $$ USE_JAVA_CONTEXT.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_81 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)-->Line_109 $$ parseConfigProperties(reader, configMap.get(poolName))[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_109 $$ parseConfigProperties(reader, configMap.get(poolName))[ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_61 $$ CLASS_NAME.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_30 $$ jndiName = value-->Line_77 $$ if (jndiName != null && jndiName.trim().length() != 0) [ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_61 $$ CLASS_NAME.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_135 $$ parseXaPool(reader, connectionDefinitionNode)[ FD ]
Line_8 $$ boolean poolDefined = Boolean.FALSE-->Line_136 $$ poolDefined = true[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_7 $$ int attributeSize = reader.getAttributeCount()[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_73 $$ throw ParseUtils.unexpectedAttribute(reader, i)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_92 $$ map.put(poolName, connectionDefinitionNode)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_114 $$ parseSecuritySettings(reader, connectionDefinitionNode)[ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_51 $$ SHARABLE.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_25 $$ TRACKING.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_4 $$ connectionDefinitionNode.get(OP).set(ADD)[ CD ]
Line_106 $$ if (!configMap.containsKey(poolName)) -->Line_107 $$ configMap.put(poolName, new HashMap<String, ModelNode>(0))[ CD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_6 $$ String jndiName = null[ CD ]
Line_91 $$ if (Activation.Tag.forName(reader.getLocalName()) == Activation.Tag.CONNECTION_DEFINITION) -->Line_93 $$ return[ CD ]
Line_9 $$ for (int i = 0; i < attributeSize; i++) -->Line_73 $$ throw ParseUtils.unexpectedAttribute(reader, i)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_25 $$ TRACKING.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_10 $$ ConnectionDefinition.Attribute attribute = ConnectionDefinition.Attribute.forName(reader.getAttributeLocalName(i))[ FD ]
Line_11 $$ String value = reader.getAttributeValue(i)-->Line_25 $$ TRACKING.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_30 $$ jndiName = value-->Line_79 $$ poolName = jndiName.substring(jndiName.lastIndexOf("/") + 1)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_124 $$ parseValidation(reader, connectionDefinitionNode)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_61 $$ CLASS_NAME.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_51 $$ SHARABLE.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_6 $$ String jndiName = null-->Line_77 $$ if (jndiName != null && jndiName.trim().length() != 0) [ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_153 $$ parseRecovery(reader, connectionDefinitionNode)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()[ CD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_88 $$ switch(reader.nextTag()) [ FD ]
Line_9 $$ for (int i = 0; i < attributeSize; i++) -->Line_11 $$ String value = reader.getAttributeValue(i)[ CD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_87 $$ while (reader.hasNext()) [ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_15 $$ ENABLED.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_41 $$ USE_JAVA_CONTEXT.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_20 $$ CONNECTABLE.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_87 $$ while (reader.hasNext()) [ CD ]
Line_5 $$ String poolName = null-->Line_92 $$ map.put(poolName, connectionDefinitionNode)[ FD ]
Line_30 $$ jndiName = value-->Line_81 $$ poolName = jndiName.substring(jndiName.lastIndexOf(":") + 1)[ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_46 $$ USE_CCM.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_20 $$ CONNECTABLE.parseAndSetParameter(value, connectionDefinitionNode, reader)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_106 $$ if (!configMap.containsKey(poolName)) [ FD ]
Line_36 $$ poolName = value-->Line_106 $$ if (!configMap.containsKey(poolName)) [ FD ]
Line_5 $$ String poolName = null-->Line_106 $$ if (!configMap.containsKey(poolName)) [ FD ]
Line_3 $$ final ModelNode connectionDefinitionNode = new ModelNode()-->Line_135 $$ parseXaPool(reader, connectionDefinitionNode)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_147 $$ parsePool(reader, connectionDefinitionNode)[ FD ]
Line_2 $$ protected void parseConnectionDefinitions_4_0(final XMLExtendedStreamReader reader, final Map<String, ModelNode> map, final Map<String, HashMap<String, ModelNode>> configMap, final boolean isXa) throws XMLStreamException, ParserException, ValidateException -->Line_7 $$ int attributeSize = reader.getAttributeCount()[ CD ]
