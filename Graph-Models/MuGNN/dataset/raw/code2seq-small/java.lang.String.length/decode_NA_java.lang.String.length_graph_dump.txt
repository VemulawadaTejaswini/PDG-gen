Line_36 $$ i += 2-->Line_33 $$ throw new IllegalArgumentException("Invalid encoded sequence \"" + source.substring(i) + "\"")[ FD ]
Line_36 $$ i += 2-->Line_39 $$ throw new IllegalArgumentException("Invalid encoded sequence \"" + source.substring(i) + "\"")[ FD ]
Line_22 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream(length)-->Line_42 $$ bos.write(ch)[ FD ]
Line_25 $$ int ch = source.charAt(i)-->Line_42 $$ bos.write(ch)[ FD ]
Line_24 $$ for (int i = 0; i < length; i++) -->Line_36 $$ i += 2[ FD ]
Line_27 $$ if ((i + 2) < length) -->Line_37 $$ changed = true[ CD ]
Line_23 $$ boolean changed = false-->Line_37 $$ changed = true[ FD ]
Line_24 $$ for (int i = 0; i < length; i++) -->Line_25 $$ int ch = source.charAt(i)[ CD ]
Line_24 $$ for (int i = 0; i < length; i++) -->Line_39 $$ throw new IllegalArgumentException("Invalid encoded sequence \"" + source.substring(i) + "\"")[ FD ]
Line_27 $$ if ((i + 2) < length) -->Line_32 $$ if (u == -1 || l == -1) [ CD ]
Line_24 $$ for (int i = 0; i < length; i++) -->Line_26 $$ if (ch == '%') [ CD ]
Line_27 $$ if ((i + 2) < length) -->Line_29 $$ char hex2 = source.charAt(i + 2)[ CD ]
Line_22 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream(length)-->Line_45 $$ return (changed ? new String(bos.toByteArray(), encoding) : source)[ FD ]
Line_21 $$ int length = source.length()-->Line_24 $$ for (int i = 0; i < length; i++) [ FD ]
Line_25 $$ int ch = source.charAt(i)-->Line_26 $$ if (ch == '%') [ FD ]
Line_36 $$ i += 2-->Line_24 $$ for (int i = 0; i < length; i++) [ FD ]
Line_27 $$ if ((i + 2) < length) -->Line_36 $$ i += 2[ CD ]
Line_26 $$ if (ch == '%') -->Line_42 $$ bos.write(ch)[ CD ]
Line_24 $$ for (int i = 0; i < length; i++) -->Line_25 $$ int ch = source.charAt(i)[ FD ]
Line_22 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream(length)-->Line_35 $$ bos.write((char) ((u << 4) + l))[ FD ]
Line_27 $$ if ((i + 2) < length) -->Line_30 $$ int u = Character.digit(hex1, 16)[ CD ]
Line_24 $$ for (int i = 0; i < length; i++) -->Line_33 $$ throw new IllegalArgumentException("Invalid encoded sequence \"" + source.substring(i) + "\"")[ FD ]
Line_29 $$ char hex2 = source.charAt(i + 2)-->Line_31 $$ int l = Character.digit(hex2, 16)[ FD ]
Line_21 $$ int length = source.length()-->Line_27 $$ if ((i + 2) < length) [ FD ]
Line_27 $$ if ((i + 2) < length) -->Line_31 $$ int l = Character.digit(hex2, 16)[ CD ]
Line_36 $$ i += 2-->Line_25 $$ int ch = source.charAt(i)[ FD ]
Line_27 $$ if ((i + 2) < length) -->Line_28 $$ char hex1 = source.charAt(i + 1)[ CD ]
Line_27 $$ if ((i + 2) < length) -->Line_35 $$ bos.write((char) ((u << 4) + l))[ CD ]
Line_28 $$ char hex1 = source.charAt(i + 1)-->Line_30 $$ int u = Character.digit(hex1, 16)[ FD ]
Line_26 $$ if (ch == '%') -->Line_27 $$ if ((i + 2) < length) [ CD ]
