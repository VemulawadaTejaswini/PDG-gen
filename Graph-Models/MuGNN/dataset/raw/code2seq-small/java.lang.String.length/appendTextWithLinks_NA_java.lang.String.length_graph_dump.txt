Line_7 $$ for (IssueNavigationConfiguration.LinkMatch match : list) -->Line_8 $$ final TextRange textRange = match.getRange()[ FD ]
Line_2 $$ public List<String> appendTextWithLinks(final String text, final SimpleTextAttributes baseStyle, final Consumer<String> consumer) -->Line_19 $$ if (pos < text.length()) [ CD ]
Line_19 $$ if (pos < text.length()) -->Line_22 $$ consumer.consume(piece)[ CD ]
Line_19 $$ if (pos < text.length()) -->Line_20 $$ final String piece = text.substring(pos)[ CD ]
Line_17 $$ pos = textRange.getEndOffset()-->Line_20 $$ final String piece = text.substring(pos)[ FD ]
Line_8 $$ final TextRange textRange = match.getRange()-->Line_9 $$ if (textRange.getStartOffset() > pos) [ FD ]
Line_10 $$ final String piece = text.substring(pos, textRange.getStartOffset())-->Line_15 $$ pieces.add(piece)[ FD ]
Line_2 $$ public List<String> appendTextWithLinks(final String text, final SimpleTextAttributes baseStyle, final Consumer<String> consumer) -->Line_12 $$ consumer.consume(piece)[ FD ]
Line_10 $$ final String piece = text.substring(pos, textRange.getStartOffset())-->Line_11 $$ pieces.add(piece)[ FD ]
Line_2 $$ public List<String> appendTextWithLinks(final String text, final SimpleTextAttributes baseStyle, final Consumer<String> consumer) -->Line_6 $$ final SimpleTextAttributes linkAttributes = getLinkAttributes(baseStyle)[ CD ]
Line_19 $$ if (pos < text.length()) -->Line_21 $$ pieces.add(piece)[ CD ]
Line_6 $$ final SimpleTextAttributes linkAttributes = getLinkAttributes(baseStyle)-->Line_16 $$ append(piece, linkAttributes, match)[ FD ]
Line_5 $$ int pos = 0-->Line_9 $$ if (textRange.getStartOffset() > pos) [ FD ]
Line_2 $$ public List<String> appendTextWithLinks(final String text, final SimpleTextAttributes baseStyle, final Consumer<String> consumer) -->Line_4 $$ final List<IssueNavigationConfiguration.LinkMatch> list = myIssueNavigationConfiguration.findIssueLinks(text)[ CD ]
Line_5 $$ int pos = 0-->Line_10 $$ final String piece = text.substring(pos, textRange.getStartOffset())[ FD ]
Line_8 $$ final TextRange textRange = match.getRange()-->Line_14 $$ final String piece = textRange.substring(text)[ FD ]
Line_7 $$ for (IssueNavigationConfiguration.LinkMatch match : list) -->Line_16 $$ append(piece, linkAttributes, match)[ FD ]
Line_8 $$ final TextRange textRange = match.getRange()-->Line_17 $$ pos = textRange.getEndOffset()[ FD ]
Line_2 $$ public List<String> appendTextWithLinks(final String text, final SimpleTextAttributes baseStyle, final Consumer<String> consumer) -->Line_10 $$ final String piece = text.substring(pos, textRange.getStartOffset())[ FD ]
Line_9 $$ if (textRange.getStartOffset() > pos) -->Line_12 $$ consumer.consume(piece)[ CD ]
Line_9 $$ if (textRange.getStartOffset() > pos) -->Line_10 $$ final String piece = text.substring(pos, textRange.getStartOffset())[ CD ]
Line_2 $$ public List<String> appendTextWithLinks(final String text, final SimpleTextAttributes baseStyle, final Consumer<String> consumer) -->Line_6 $$ final SimpleTextAttributes linkAttributes = getLinkAttributes(baseStyle)[ FD ]
Line_2 $$ public List<String> appendTextWithLinks(final String text, final SimpleTextAttributes baseStyle, final Consumer<String> consumer) -->Line_14 $$ final String piece = textRange.substring(text)[ FD ]
Line_10 $$ final String piece = text.substring(pos, textRange.getStartOffset())-->Line_12 $$ consumer.consume(piece)[ FD ]
Line_3 $$ final List<String> pieces = new ArrayList<String>()-->Line_15 $$ pieces.add(piece)[ FD ]
Line_2 $$ public List<String> appendTextWithLinks(final String text, final SimpleTextAttributes baseStyle, final Consumer<String> consumer) -->Line_24 $$ return pieces[ CD ]
Line_5 $$ int pos = 0-->Line_20 $$ final String piece = text.substring(pos)[ FD ]
Line_2 $$ public List<String> appendTextWithLinks(final String text, final SimpleTextAttributes baseStyle, final Consumer<String> consumer) -->Line_22 $$ consumer.consume(piece)[ FD ]
Line_17 $$ pos = textRange.getEndOffset()-->Line_19 $$ if (pos < text.length()) [ FD ]
Line_3 $$ final List<String> pieces = new ArrayList<String>()-->Line_21 $$ pieces.add(piece)[ FD ]
Line_2 $$ public List<String> appendTextWithLinks(final String text, final SimpleTextAttributes baseStyle, final Consumer<String> consumer) -->Line_5 $$ int pos = 0[ CD ]
Line_10 $$ final String piece = text.substring(pos, textRange.getStartOffset())-->Line_16 $$ append(piece, linkAttributes, match)[ FD ]
Line_2 $$ public List<String> appendTextWithLinks(final String text, final SimpleTextAttributes baseStyle, final Consumer<String> consumer) -->Line_20 $$ final String piece = text.substring(pos)[ FD ]
Line_10 $$ final String piece = text.substring(pos, textRange.getStartOffset())-->Line_21 $$ pieces.add(piece)[ FD ]
Line_2 $$ public List<String> appendTextWithLinks(final String text, final SimpleTextAttributes baseStyle, final Consumer<String> consumer) -->Line_4 $$ final List<IssueNavigationConfiguration.LinkMatch> list = myIssueNavigationConfiguration.findIssueLinks(text)[ FD ]
Line_9 $$ if (textRange.getStartOffset() > pos) -->Line_11 $$ pieces.add(piece)[ CD ]
Line_2 $$ public List<String> appendTextWithLinks(final String text, final SimpleTextAttributes baseStyle, final Consumer<String> consumer) -->Line_3 $$ final List<String> pieces = new ArrayList<String>()[ CD ]
Line_3 $$ final List<String> pieces = new ArrayList<String>()-->Line_11 $$ pieces.add(piece)[ FD ]
Line_5 $$ int pos = 0-->Line_17 $$ pos = textRange.getEndOffset()[ FD ]
Line_5 $$ int pos = 0-->Line_19 $$ if (pos < text.length()) [ FD ]
Line_2 $$ public List<String> appendTextWithLinks(final String text, final SimpleTextAttributes baseStyle, final Consumer<String> consumer) -->Line_19 $$ if (pos < text.length()) [ FD ]
Line_8 $$ final TextRange textRange = match.getRange()-->Line_10 $$ final String piece = text.substring(pos, textRange.getStartOffset())[ FD ]
Line_10 $$ final String piece = text.substring(pos, textRange.getStartOffset())-->Line_22 $$ consumer.consume(piece)[ FD ]
