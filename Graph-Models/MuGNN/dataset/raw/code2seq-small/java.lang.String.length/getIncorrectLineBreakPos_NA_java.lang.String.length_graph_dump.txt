Line_3 $$ for (int x = line.length(); ; ) -->Line_14 $$ String linePart1 = stripQuotes(line.substring(0, x), CharPool.QUOTE)[ FD ]
Line_14 $$ String linePart1 = stripQuotes(line.substring(0, x), CharPool.QUOTE)-->Line_16 $$ int openParenthesesCount = StringUtil.count(linePart1, StringPool.OPEN_PARENTHESIS)[ FD ]
Line_2 $$ protected int getIncorrectLineBreakPos(String line, String previousLine) -->Line_21 $$ if (!line.endsWith(" ||") && !line.endsWith(" &&")) [ FD ]
Line_13 $$ if (Validator.isNotNull(previousLine)) -->Line_15 $$ int closeParenthesesCount = StringUtil.count(linePart1, StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_3 $$ for (int x = line.length(); ; ) -->Line_24 $$ String linePart2 = stripQuotes(line.substring(x), CharPool.QUOTE)[ FD ]
Line_27 $$ if (openParenthesesCount > closeParenthesesCount) -->Line_28 $$ return x + 3[ CD ]
Line_5 $$ int z = line.lastIndexOf(" && ", x - 1)-->Line_6 $$ x = Math.max(y, z)[ FD ]
Line_2 $$ protected int getIncorrectLineBreakPos(String line, String previousLine) -->Line_13 $$ if (Validator.isNotNull(previousLine)) [ FD ]
Line_13 $$ if (Validator.isNotNull(previousLine)) -->Line_14 $$ String linePart1 = stripQuotes(line.substring(0, x), CharPool.QUOTE)[ CD ]
Line_6 $$ x = Math.max(y, z)-->Line_24 $$ String linePart2 = stripQuotes(line.substring(x), CharPool.QUOTE)[ FD ]
Line_3 $$ for (int x = line.length(); ; ) -->Line_13 $$ if (Validator.isNotNull(previousLine)) [ CD ]
Line_24 $$ String linePart2 = stripQuotes(line.substring(x), CharPool.QUOTE)-->Line_26 $$ int openParenthesesCount = StringUtil.count(linePart2, StringPool.OPEN_PARENTHESIS)[ FD ]
Line_16 $$ int openParenthesesCount = StringUtil.count(linePart1, StringPool.OPEN_PARENTHESIS)-->Line_17 $$ if (closeParenthesesCount > openParenthesesCount) [ FD ]
Line_3 $$ for (int x = line.length(); ; ) -->Line_7 $$ if (x == -1) [ CD ]
Line_2 $$ protected int getIncorrectLineBreakPos(String line, String previousLine) -->Line_4 $$ int y = line.lastIndexOf(" || ", x - 1)[ FD ]
Line_14 $$ String linePart1 = stripQuotes(line.substring(0, x), CharPool.QUOTE)-->Line_15 $$ int closeParenthesesCount = StringUtil.count(linePart1, StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_3 $$ for (int x = line.length(); ; ) -->Line_27 $$ if (openParenthesesCount > closeParenthesesCount) [ CD ]
Line_3 $$ for (int x = line.length(); ; ) -->Line_6 $$ x = Math.max(y, z)[ FD ]
Line_15 $$ int closeParenthesesCount = StringUtil.count(linePart1, StringPool.CLOSE_PARENTHESIS)-->Line_17 $$ if (closeParenthesesCount > openParenthesesCount) [ FD ]
Line_6 $$ x = Math.max(y, z)-->Line_7 $$ if (x == -1) [ FD ]
Line_2 $$ protected int getIncorrectLineBreakPos(String line, String previousLine) -->Line_14 $$ String linePart1 = stripQuotes(line.substring(0, x), CharPool.QUOTE)[ FD ]
Line_2 $$ protected int getIncorrectLineBreakPos(String line, String previousLine) -->Line_3 $$ for (int x = line.length(); ; ) [ CD ]
Line_3 $$ for (int x = line.length(); ; ) -->Line_21 $$ if (!line.endsWith(" ||") && !line.endsWith(" &&")) [ CD ]
Line_2 $$ protected int getIncorrectLineBreakPos(String line, String previousLine) -->Line_24 $$ String linePart2 = stripQuotes(line.substring(x), CharPool.QUOTE)[ FD ]
Line_24 $$ String linePart2 = stripQuotes(line.substring(x), CharPool.QUOTE)-->Line_25 $$ int closeParenthesesCount = StringUtil.count(linePart2, StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_3 $$ for (int x = line.length(); ; ) -->Line_10 $$ if (ToolsUtil.isInsideQuotes(line, x)) [ FD ]
Line_3 $$ for (int x = line.length(); ; ) -->Line_5 $$ int z = line.lastIndexOf(" && ", x - 1)[ CD ]
Line_15 $$ int closeParenthesesCount = StringUtil.count(linePart1, StringPool.CLOSE_PARENTHESIS)-->Line_27 $$ if (openParenthesesCount > closeParenthesesCount) [ FD ]
Line_3 $$ for (int x = line.length(); ; ) -->Line_7 $$ if (x == -1) [ FD ]
Line_13 $$ if (Validator.isNotNull(previousLine)) -->Line_17 $$ if (closeParenthesesCount > openParenthesesCount) [ CD ]
Line_6 $$ x = Math.max(y, z)-->Line_14 $$ String linePart1 = stripQuotes(line.substring(0, x), CharPool.QUOTE)[ FD ]
Line_3 $$ for (int x = line.length(); ; ) -->Line_24 $$ String linePart2 = stripQuotes(line.substring(x), CharPool.QUOTE)[ CD ]
Line_4 $$ int y = line.lastIndexOf(" || ", x - 1)-->Line_6 $$ x = Math.max(y, z)[ FD ]
Line_6 $$ x = Math.max(y, z)-->Line_10 $$ if (ToolsUtil.isInsideQuotes(line, x)) [ FD ]
Line_3 $$ for (int x = line.length(); ; ) -->Line_10 $$ if (ToolsUtil.isInsideQuotes(line, x)) [ CD ]
Line_7 $$ if (x == -1) -->Line_8 $$ return x[ CD ]
Line_2 $$ protected int getIncorrectLineBreakPos(String line, String previousLine) -->Line_3 $$ for (int x = line.length(); ; ) [ FD ]
Line_17 $$ if (closeParenthesesCount > openParenthesesCount) -->Line_18 $$ return x + 3[ CD ]
Line_13 $$ if (Validator.isNotNull(previousLine)) -->Line_16 $$ int openParenthesesCount = StringUtil.count(linePart1, StringPool.OPEN_PARENTHESIS)[ CD ]
Line_3 $$ for (int x = line.length(); ; ) -->Line_6 $$ x = Math.max(y, z)[ CD ]
Line_3 $$ for (int x = line.length(); ; ) -->Line_4 $$ int y = line.lastIndexOf(" || ", x - 1)[ CD ]
Line_2 $$ protected int getIncorrectLineBreakPos(String line, String previousLine) -->Line_10 $$ if (ToolsUtil.isInsideQuotes(line, x)) [ FD ]
Line_2 $$ protected int getIncorrectLineBreakPos(String line, String previousLine) -->Line_5 $$ int z = line.lastIndexOf(" && ", x - 1)[ FD ]
Line_16 $$ int openParenthesesCount = StringUtil.count(linePart1, StringPool.OPEN_PARENTHESIS)-->Line_27 $$ if (openParenthesesCount > closeParenthesesCount) [ FD ]
Line_3 $$ for (int x = line.length(); ; ) -->Line_25 $$ int closeParenthesesCount = StringUtil.count(linePart2, StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_3 $$ for (int x = line.length(); ; ) -->Line_26 $$ int openParenthesesCount = StringUtil.count(linePart2, StringPool.OPEN_PARENTHESIS)[ CD ]
