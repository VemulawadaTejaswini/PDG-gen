Line_5 $$ String value = "2000-01-01"-->Line_7 $$ assertThat(i, equalTo(value.length()))[ FD ]
Line_3 $$ MutableDateTime dateTime = new MutableDateTime(3000, 12, 31, 23, 59, 59, 999, DateTimeZone.UTC)-->Line_8 $$ assertThat(dateTime.toString(), equalTo("2000-01-01T23:59:59.999Z"))[ FD ]
Line_2 $$ public void testUpperBound() -->Line_4 $$ DateTimeFormatter formatter = ISODateTimeFormat.dateOptionalTimeParser().withZone(DateTimeZone.UTC)[ CD ]
Line_2 $$ public void testUpperBound() -->Line_5 $$ String value = "2000-01-01"[ CD ]
Line_2 $$ public void testUpperBound() -->Line_6 $$ int i = formatter.parseInto(dateTime, value, 0)[ CD ]
Line_2 $$ public void testUpperBound() -->Line_7 $$ assertThat(i, equalTo(value.length()))[ CD ]
Line_6 $$ int i = formatter.parseInto(dateTime, value, 0)-->Line_7 $$ assertThat(i, equalTo(value.length()))[ FD ]
Line_4 $$ DateTimeFormatter formatter = ISODateTimeFormat.dateOptionalTimeParser().withZone(DateTimeZone.UTC)-->Line_6 $$ int i = formatter.parseInto(dateTime, value, 0)[ FD ]
Line_5 $$ String value = "2000-01-01"-->Line_6 $$ int i = formatter.parseInto(dateTime, value, 0)[ FD ]
Line_2 $$ public void testUpperBound() -->Line_3 $$ MutableDateTime dateTime = new MutableDateTime(3000, 12, 31, 23, 59, 59, 999, DateTimeZone.UTC)[ CD ]
Line_3 $$ MutableDateTime dateTime = new MutableDateTime(3000, 12, 31, 23, 59, 59, 999, DateTimeZone.UTC)-->Line_6 $$ int i = formatter.parseInto(dateTime, value, 0)[ FD ]
Line_2 $$ public void testUpperBound() -->Line_8 $$ assertThat(dateTime.toString(), equalTo("2000-01-01T23:59:59.999Z"))[ CD ]
