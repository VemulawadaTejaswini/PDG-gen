Line_4 $$ final String name = Messages.showInputDialog(project, IdeBundle.message("prompt.input.new.favorites.list.name"), IdeBundle.message("title.add.new.favorites.list"), Messages.getInformationIcon(), getUniqueName(project), new InputValidator() -->Line_6 $$ return inputString != null && inputString.trim().length() > 0[ CD ]
Line_17 $$ if (name == null || name.length() == 0)-->Line_18 $$ return null[ CD ]
Line_9 $$ inputString = inputString.trim()-->Line_14 $$ return inputString.length() > 0[ FD ]
Line_4 $$ final String name = Messages.showInputDialog(project, IdeBundle.message("prompt.input.new.favorites.list.name"), IdeBundle.message("title.add.new.favorites.list"), Messages.getInformationIcon(), getUniqueName(project), new InputValidator() -->Line_9 $$ inputString = inputString.trim()[ CD ]
Line_9 $$ inputString = inputString.trim()-->Line_11 $$ Messages.showErrorDialog(project, IdeBundle.message("error.favorites.list.already.exists", inputString.trim()), IdeBundle.message("title.unable.to.add.favorites.list"))[ FD ]
Line_4 $$ final String name = Messages.showInputDialog(project, IdeBundle.message("prompt.input.new.favorites.list.name"), IdeBundle.message("title.add.new.favorites.list"), Messages.getInformationIcon(), getUniqueName(project), new InputValidator() -->Line_9 $$ inputString = inputString.trim()[ FD ]
Line_2 $$ public static String doAddNewFavoritesList(final Project project) -->Line_19 $$ favoritesManager.createNewList(name)[ CD ]
Line_4 $$ final String name = Messages.showInputDialog(project, IdeBundle.message("prompt.input.new.favorites.list.name"), IdeBundle.message("title.add.new.favorites.list"), Messages.getInformationIcon(), getUniqueName(project), new InputValidator() -->Line_14 $$ return inputString.length() > 0[ CD ]
Line_4 $$ final String name = Messages.showInputDialog(project, IdeBundle.message("prompt.input.new.favorites.list.name"), IdeBundle.message("title.add.new.favorites.list"), Messages.getInformationIcon(), getUniqueName(project), new InputValidator() -->Line_19 $$ favoritesManager.createNewList(name)[ FD ]
Line_10 $$ if (favoritesManager.getAvailableFavoritesListNames().contains(inputString)) -->Line_12 $$ return false[ CD ]
Line_2 $$ public static String doAddNewFavoritesList(final Project project) -->Line_11 $$ Messages.showErrorDialog(project, IdeBundle.message("error.favorites.list.already.exists", inputString.trim()), IdeBundle.message("title.unable.to.add.favorites.list"))[ FD ]
Line_2 $$ public static String doAddNewFavoritesList(final Project project) -->Line_4 $$ final String name = Messages.showInputDialog(project, IdeBundle.message("prompt.input.new.favorites.list.name"), IdeBundle.message("title.add.new.favorites.list"), Messages.getInformationIcon(), getUniqueName(project), new InputValidator() [ CD ]
Line_4 $$ final String name = Messages.showInputDialog(project, IdeBundle.message("prompt.input.new.favorites.list.name"), IdeBundle.message("title.add.new.favorites.list"), Messages.getInformationIcon(), getUniqueName(project), new InputValidator() -->Line_11 $$ Messages.showErrorDialog(project, IdeBundle.message("error.favorites.list.already.exists", inputString.trim()), IdeBundle.message("title.unable.to.add.favorites.list"))[ FD ]
Line_9 $$ inputString = inputString.trim()-->Line_10 $$ if (favoritesManager.getAvailableFavoritesListNames().contains(inputString)) [ FD ]
Line_2 $$ public static String doAddNewFavoritesList(final Project project) -->Line_3 $$ final FavoritesManager favoritesManager = FavoritesManager.getInstance(project)[ FD ]
Line_2 $$ public static String doAddNewFavoritesList(final Project project) -->Line_17 $$ if (name == null || name.length() == 0)[ CD ]
Line_3 $$ final FavoritesManager favoritesManager = FavoritesManager.getInstance(project)-->Line_10 $$ if (favoritesManager.getAvailableFavoritesListNames().contains(inputString)) [ FD ]
Line_3 $$ final FavoritesManager favoritesManager = FavoritesManager.getInstance(project)-->Line_19 $$ favoritesManager.createNewList(name)[ FD ]
Line_4 $$ final String name = Messages.showInputDialog(project, IdeBundle.message("prompt.input.new.favorites.list.name"), IdeBundle.message("title.add.new.favorites.list"), Messages.getInformationIcon(), getUniqueName(project), new InputValidator() -->Line_14 $$ return inputString.length() > 0[ FD ]
Line_2 $$ public static String doAddNewFavoritesList(final Project project) -->Line_4 $$ final String name = Messages.showInputDialog(project, IdeBundle.message("prompt.input.new.favorites.list.name"), IdeBundle.message("title.add.new.favorites.list"), Messages.getInformationIcon(), getUniqueName(project), new InputValidator() [ FD ]
Line_4 $$ final String name = Messages.showInputDialog(project, IdeBundle.message("prompt.input.new.favorites.list.name"), IdeBundle.message("title.add.new.favorites.list"), Messages.getInformationIcon(), getUniqueName(project), new InputValidator() -->Line_10 $$ if (favoritesManager.getAvailableFavoritesListNames().contains(inputString)) [ FD ]
Line_2 $$ public static String doAddNewFavoritesList(final Project project) -->Line_3 $$ final FavoritesManager favoritesManager = FavoritesManager.getInstance(project)[ CD ]
Line_4 $$ final String name = Messages.showInputDialog(project, IdeBundle.message("prompt.input.new.favorites.list.name"), IdeBundle.message("title.add.new.favorites.list"), Messages.getInformationIcon(), getUniqueName(project), new InputValidator() -->Line_17 $$ if (name == null || name.length() == 0)[ FD ]
Line_10 $$ if (favoritesManager.getAvailableFavoritesListNames().contains(inputString)) -->Line_11 $$ Messages.showErrorDialog(project, IdeBundle.message("error.favorites.list.already.exists", inputString.trim()), IdeBundle.message("title.unable.to.add.favorites.list"))[ CD ]
Line_4 $$ final String name = Messages.showInputDialog(project, IdeBundle.message("prompt.input.new.favorites.list.name"), IdeBundle.message("title.add.new.favorites.list"), Messages.getInformationIcon(), getUniqueName(project), new InputValidator() -->Line_6 $$ return inputString != null && inputString.trim().length() > 0[ FD ]
Line_4 $$ final String name = Messages.showInputDialog(project, IdeBundle.message("prompt.input.new.favorites.list.name"), IdeBundle.message("title.add.new.favorites.list"), Messages.getInformationIcon(), getUniqueName(project), new InputValidator() -->Line_10 $$ if (favoritesManager.getAvailableFavoritesListNames().contains(inputString)) [ CD ]
Line_2 $$ public static String doAddNewFavoritesList(final Project project) -->Line_20 $$ return name[ CD ]
