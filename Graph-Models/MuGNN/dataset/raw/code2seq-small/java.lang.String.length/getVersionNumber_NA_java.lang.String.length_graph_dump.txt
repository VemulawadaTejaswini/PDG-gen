Line_3 $$ if (versionString.startsWith(JAVA_VERSION_PREFIX) || versionString.startsWith(OPENJDK_VERSION_PREFIX)) -->Line_10 $$ if (dotIdx > 0) [ CD ]
Line_2 $$ private static String getVersionNumber(@NotNull String versionString) -->Line_7 $$ versionString = versionString.substring(1, versionString.length() - 1)[ FD ]
Line_9 $$ int dotIdx = versionString.indexOf('.')-->Line_12 $$ int major = Integer.parseInt(versionString.substring(0, dotIdx))[ FD ]
Line_2 $$ private static String getVersionNumber(@NotNull String versionString) -->Line_12 $$ int major = Integer.parseInt(versionString.substring(0, dotIdx))[ FD ]
Line_2 $$ private static String getVersionNumber(@NotNull String versionString) -->Line_6 $$ if (versionString.startsWith("\"") && versionString.endsWith("\"")) [ FD ]
Line_3 $$ if (versionString.startsWith(JAVA_VERSION_PREFIX) || versionString.startsWith(OPENJDK_VERSION_PREFIX)) -->Line_6 $$ if (versionString.startsWith("\"") && versionString.endsWith("\"")) [ CD ]
Line_13 $$ int minorDot = versionString.indexOf('.', dotIdx + 1)-->Line_14 $$ if (minorDot > 0) [ FD ]
Line_3 $$ if (versionString.startsWith(JAVA_VERSION_PREFIX) || versionString.startsWith(OPENJDK_VERSION_PREFIX)) -->Line_9 $$ int dotIdx = versionString.indexOf('.')[ CD ]
Line_9 $$ int dotIdx = versionString.indexOf('.')-->Line_10 $$ if (dotIdx > 0) [ FD ]
Line_3 $$ if (versionString.startsWith(JAVA_VERSION_PREFIX) || versionString.startsWith(OPENJDK_VERSION_PREFIX)) -->Line_5 $$ versionString = versionString.substring(openJdk ? OPENJDK_VERSION_PREFIX.length() : JAVA_VERSION_PREFIX.length())[ CD ]
Line_2 $$ private static String getVersionNumber(@NotNull String versionString) -->Line_15 $$ int minor = Integer.parseInt(versionString.substring(dotIdx + 1, minorDot))[ FD ]
Line_2 $$ private static String getVersionNumber(@NotNull String versionString) -->Line_13 $$ int minorDot = versionString.indexOf('.', dotIdx + 1)[ FD ]
Line_14 $$ if (minorDot > 0) -->Line_15 $$ int minor = Integer.parseInt(versionString.substring(dotIdx + 1, minorDot))[ CD ]
Line_3 $$ if (versionString.startsWith(JAVA_VERSION_PREFIX) || versionString.startsWith(OPENJDK_VERSION_PREFIX)) -->Line_4 $$ boolean openJdk = versionString.startsWith(OPENJDK_VERSION_PREFIX)[ CD ]
Line_2 $$ private static String getVersionNumber(@NotNull String versionString) -->Line_9 $$ int dotIdx = versionString.indexOf('.')[ FD ]
Line_2 $$ private static String getVersionNumber(@NotNull String versionString) -->Line_4 $$ boolean openJdk = versionString.startsWith(OPENJDK_VERSION_PREFIX)[ FD ]
Line_2 $$ private static String getVersionNumber(@NotNull String versionString) -->Line_3 $$ if (versionString.startsWith(JAVA_VERSION_PREFIX) || versionString.startsWith(OPENJDK_VERSION_PREFIX)) [ CD ]
Line_6 $$ if (versionString.startsWith("\"") && versionString.endsWith("\"")) -->Line_7 $$ versionString = versionString.substring(1, versionString.length() - 1)[ CD ]
Line_2 $$ private static String getVersionNumber(@NotNull String versionString) -->Line_5 $$ versionString = versionString.substring(openJdk ? OPENJDK_VERSION_PREFIX.length() : JAVA_VERSION_PREFIX.length())[ FD ]
Line_13 $$ int minorDot = versionString.indexOf('.', dotIdx + 1)-->Line_15 $$ int minor = Integer.parseInt(versionString.substring(dotIdx + 1, minorDot))[ FD ]
Line_2 $$ private static String getVersionNumber(@NotNull String versionString) -->Line_3 $$ if (versionString.startsWith(JAVA_VERSION_PREFIX) || versionString.startsWith(OPENJDK_VERSION_PREFIX)) [ FD ]
Line_2 $$ private static String getVersionNumber(@NotNull String versionString) -->Line_22 $$ return versionString[ CD ]
