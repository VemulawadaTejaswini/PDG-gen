Line_4 $$ StringBuilder buf = new StringBuilder(aspectsntx.length())-->Line_15 $$ buf.append(".*")[ FD ]
Line_7 $$ boolean isAfterAsterix = false-->Line_20 $$ isAfterAsterix = true[ FD ]
Line_19 $$ if (!isAfterAsterix) -->Line_23 $$ isAfterAsterix = false[ CD ]
Line_16 $$ isAfterAsterix = false-->Line_23 $$ isAfterAsterix = false[ FD ]
Line_7 $$ boolean isAfterAsterix = false-->Line_19 $$ if (!isAfterAsterix) [ FD ]
Line_25 $$ if (curChar == separator) -->Line_36 $$ buf.append(curChar)[ CD ]
Line_18 $$ if (curChar == '*') -->Line_19 $$ if (!isAfterAsterix) [ CD ]
Line_8 $$ while (cur < aspectsntx.length()) -->Line_9 $$ char curChar = aspectsntx.charAt(cur)[ CD ]
Line_5 $$ int cur = 0-->Line_9 $$ char curChar = aspectsntx.charAt(cur)[ FD ]
Line_25 $$ if (curChar == separator) -->Line_33 $$ if (curChar == '.') [ CD ]
Line_9 $$ char curChar = aspectsntx.charAt(cur)-->Line_25 $$ if (curChar == separator) [ FD ]
Line_18 $$ if (curChar == '*') -->Line_25 $$ if (curChar == separator) [ CD ]
Line_28 $$ isAfterSeparator = false-->Line_10 $$ if (curChar != separator && isAfterSeparator) [ FD ]
Line_16 $$ isAfterAsterix = false-->Line_19 $$ if (!isAfterAsterix) [ FD ]
Line_10 $$ if (curChar != separator && isAfterSeparator) -->Line_11 $$ buf.append("\\" + separator)[ CD ]
Line_4 $$ StringBuilder buf = new StringBuilder(aspectsntx.length())-->Line_27 $$ buf.append("\\" + separator + "(.*\\" + separator + ")?")[ FD ]
Line_12 $$ isAfterSeparator = false-->Line_10 $$ if (curChar != separator && isAfterSeparator) [ FD ]
Line_25 $$ if (curChar == separator) -->Line_26 $$ if (isAfterSeparator) [ CD ]
Line_26 $$ if (isAfterSeparator) -->Line_28 $$ isAfterSeparator = false[ CD ]
Line_5 $$ int cur = 0-->Line_8 $$ while (cur < aspectsntx.length()) [ FD ]
Line_6 $$ boolean isAfterSeparator = false-->Line_30 $$ isAfterSeparator = true[ FD ]
Line_9 $$ char curChar = aspectsntx.charAt(cur)-->Line_33 $$ if (curChar == '.') [ FD ]
Line_12 $$ isAfterSeparator = false-->Line_28 $$ isAfterSeparator = false[ FD ]
Line_23 $$ isAfterAsterix = false-->Line_14 $$ if (curChar != '*' && isAfterAsterix) [ FD ]
Line_19 $$ if (!isAfterAsterix) -->Line_20 $$ isAfterAsterix = true[ CD ]
Line_20 $$ isAfterAsterix = true-->Line_14 $$ if (curChar != '*' && isAfterAsterix) [ FD ]
Line_9 $$ char curChar = aspectsntx.charAt(cur)-->Line_36 $$ buf.append(curChar)[ FD ]
Line_30 $$ isAfterSeparator = true-->Line_10 $$ if (curChar != separator && isAfterSeparator) [ FD ]
Line_16 $$ isAfterAsterix = false-->Line_20 $$ isAfterAsterix = true[ FD ]
Line_4 $$ StringBuilder buf = new StringBuilder(aspectsntx.length())-->Line_36 $$ buf.append(curChar)[ FD ]
Line_10 $$ if (curChar != separator && isAfterSeparator) -->Line_12 $$ isAfterSeparator = false[ CD ]
Line_8 $$ while (cur < aspectsntx.length()) -->Line_38 $$ cur++[ CD ]
Line_4 $$ StringBuilder buf = new StringBuilder(aspectsntx.length())-->Line_43 $$ return buf.toString()[ FD ]
Line_23 $$ isAfterAsterix = false-->Line_19 $$ if (!isAfterAsterix) [ FD ]
Line_20 $$ isAfterAsterix = true-->Line_19 $$ if (!isAfterAsterix) [ FD ]
Line_4 $$ StringBuilder buf = new StringBuilder(aspectsntx.length())-->Line_34 $$ buf.append("\\")[ FD ]
Line_20 $$ isAfterAsterix = true-->Line_23 $$ isAfterAsterix = false[ FD ]
Line_33 $$ if (curChar == '.') -->Line_34 $$ buf.append("\\")[ CD ]
Line_9 $$ char curChar = aspectsntx.charAt(cur)-->Line_18 $$ if (curChar == '*') [ FD ]
Line_26 $$ if (isAfterSeparator) -->Line_30 $$ isAfterSeparator = true[ CD ]
Line_16 $$ isAfterAsterix = false-->Line_14 $$ if (curChar != '*' && isAfterAsterix) [ FD ]
Line_6 $$ boolean isAfterSeparator = false-->Line_28 $$ isAfterSeparator = false[ FD ]
Line_14 $$ if (curChar != '*' && isAfterAsterix) -->Line_16 $$ isAfterAsterix = false[ CD ]
Line_6 $$ boolean isAfterSeparator = false-->Line_12 $$ isAfterSeparator = false[ FD ]
Line_8 $$ while (cur < aspectsntx.length()) -->Line_14 $$ if (curChar != '*' && isAfterAsterix) [ CD ]
Line_7 $$ boolean isAfterAsterix = false-->Line_14 $$ if (curChar != '*' && isAfterAsterix) [ FD ]
Line_26 $$ if (isAfterSeparator) -->Line_27 $$ buf.append("\\" + separator + "(.*\\" + separator + ")?")[ CD ]
Line_19 $$ if (!isAfterAsterix) -->Line_22 $$ buf.append("[^\\" + separator + "]*")[ CD ]
Line_5 $$ int cur = 0-->Line_38 $$ cur++[ FD ]
Line_40 $$ if (isAfterAsterix) -->Line_41 $$ buf.append("[^\\" + separator + "]*")[ CD ]
Line_4 $$ StringBuilder buf = new StringBuilder(aspectsntx.length())-->Line_41 $$ buf.append("[^\\" + separator + "]*")[ FD ]
Line_8 $$ while (cur < aspectsntx.length()) -->Line_10 $$ if (curChar != separator && isAfterSeparator) [ CD ]
Line_28 $$ isAfterSeparator = false-->Line_30 $$ isAfterSeparator = true[ FD ]
Line_8 $$ while (cur < aspectsntx.length()) -->Line_18 $$ if (curChar == '*') [ CD ]
Line_6 $$ boolean isAfterSeparator = false-->Line_10 $$ if (curChar != separator && isAfterSeparator) [ FD ]
Line_4 $$ StringBuilder buf = new StringBuilder(aspectsntx.length())-->Line_11 $$ buf.append("\\" + separator)[ FD ]
Line_7 $$ boolean isAfterAsterix = false-->Line_23 $$ isAfterAsterix = false[ FD ]
Line_7 $$ boolean isAfterAsterix = false-->Line_16 $$ isAfterAsterix = false[ FD ]
Line_12 $$ isAfterSeparator = false-->Line_30 $$ isAfterSeparator = true[ FD ]
Line_14 $$ if (curChar != '*' && isAfterAsterix) -->Line_15 $$ buf.append(".*")[ CD ]
Line_4 $$ StringBuilder buf = new StringBuilder(aspectsntx.length())-->Line_22 $$ buf.append("[^\\" + separator + "]*")[ FD ]
