Line_15 $$ final Document document = getDocument(DomUtil.getFile(rootElement))-->Line_28 $$ commitDocument(document)[ FD ]
Line_8 $$ final XmlTag tag = oldBoy.getXmlTag()-->Line_9 $$ assertNotNull(tag)[ FD ]
Line_3 $$ final MyElement rootElement = createPhysicalElement("<?xml version='1.0' encoding='UTF-8'?>\n" + "<a>\n" + " <boy>\n" + " </boy>\n" + " <girl/>\n" + "</a>")-->Line_22 $$ assertEquals(0, rootElement.getBoys().size())[ FD ]
Line_2 $$ public void testRenameCollectionTag() throws Throwable -->Line_10 $$ final int offset = tag.getTextOffset()[ CD ]
Line_3 $$ final MyElement rootElement = createPhysicalElement("<?xml version='1.0' encoding='UTF-8'?>\n" + "<a>\n" + " <boy>\n" + " </boy>\n" + " <girl/>\n" + "</a>")-->Line_31 $$ assertEquals(0, rootElement.getBoys().size())[ FD ]
Line_2 $$ public void testRenameCollectionTag() throws Throwable -->Line_5 $$ assertEquals(1, rootElement.getBoys().size())[ CD ]
Line_2 $$ public void testRenameCollectionTag() throws Throwable -->Line_7 $$ final MyElement oldBoy = rootElement.getBoys().get(0)[ CD ]
Line_3 $$ final MyElement rootElement = createPhysicalElement("<?xml version='1.0' encoding='UTF-8'?>\n" + "<a>\n" + " <boy>\n" + " </boy>\n" + " <girl/>\n" + "</a>")-->Line_6 $$ assertEquals(1, rootElement.getGirls().size())[ FD ]
Line_3 $$ final MyElement rootElement = createPhysicalElement("<?xml version='1.0' encoding='UTF-8'?>\n" + "<a>\n" + " <boy>\n" + " </boy>\n" + " <girl/>\n" + "</a>")-->Line_26 $$ final Document document = getDocument(DomUtil.getFile(rootElement))[ FD ]
Line_15 $$ final Document document = getDocument(DomUtil.getFile(rootElement))-->Line_18 $$ commitDocument(document)[ FD ]
Line_3 $$ final MyElement rootElement = createPhysicalElement("<?xml version='1.0' encoding='UTF-8'?>\n" + "<a>\n" + " <boy>\n" + " </boy>\n" + " <girl/>\n" + "</a>")-->Line_14 $$ rootElement.getGirls().get(0).undefine()[ FD ]
Line_8 $$ final XmlTag tag = oldBoy.getXmlTag()-->Line_10 $$ final int offset = tag.getTextOffset()[ FD ]
Line_3 $$ final MyElement rootElement = createPhysicalElement("<?xml version='1.0' encoding='UTF-8'?>\n" + "<a>\n" + " <boy>\n" + " </boy>\n" + " <girl/>\n" + "</a>")-->Line_32 $$ assertEquals(1, rootElement.getGirls().size())[ FD ]
Line_3 $$ final MyElement rootElement = createPhysicalElement("<?xml version='1.0' encoding='UTF-8'?>\n" + "<a>\n" + " <boy>\n" + " </boy>\n" + " <girl/>\n" + "</a>")-->Line_23 $$ assertEquals(1, rootElement.getGirls().size())[ FD ]
Line_2 $$ public void testRenameCollectionTag() throws Throwable -->Line_8 $$ final XmlTag tag = oldBoy.getXmlTag()[ CD ]
Line_2 $$ public void testRenameCollectionTag() throws Throwable -->Line_11 $$ final int endoffset = offset + tag.getTextLength()[ CD ]
Line_3 $$ final MyElement rootElement = createPhysicalElement("<?xml version='1.0' encoding='UTF-8'?>\n" + "<a>\n" + " <boy>\n" + " </boy>\n" + " <girl/>\n" + "</a>")-->Line_7 $$ final MyElement oldBoy = rootElement.getBoys().get(0)[ FD ]
Line_2 $$ public void testRenameCollectionTag() throws Throwable -->Line_31 $$ assertEquals(0, rootElement.getBoys().size())[ CD ]
Line_26 $$ final Document document = getDocument(DomUtil.getFile(rootElement))-->Line_28 $$ commitDocument(document)[ FD ]
Line_2 $$ public void testRenameCollectionTag() throws Throwable -->Line_3 $$ final MyElement rootElement = createPhysicalElement("<?xml version='1.0' encoding='UTF-8'?>\n" + "<a>\n" + " <boy>\n" + " </boy>\n" + " <girl/>\n" + "</a>")[ CD ]
Line_2 $$ public void testRenameCollectionTag() throws Throwable -->Line_21 $$ assertFalse(oldBoy.isValid())[ CD ]
Line_2 $$ public void testRenameCollectionTag() throws Throwable -->Line_9 $$ assertNotNull(tag)[ CD ]
Line_12 $$ new WriteCommandAction(getProject()) -->Line_18 $$ commitDocument(document)[ CD ]
Line_12 $$ new WriteCommandAction(getProject()) -->Line_16 $$ PsiDocumentManager.getInstance(getProject()).doPostponedOperationsAndUnblockDocument(document)[ CD ]
Line_24 $$ new WriteCommandAction(getProject()) -->Line_27 $$ document.replaceString(endoffset - "boy".length(), endoffset, "girl")[ CD ]
Line_11 $$ final int endoffset = offset + tag.getTextLength()-->Line_27 $$ document.replaceString(endoffset - "boy".length(), endoffset, "girl")[ FD ]
Line_15 $$ final Document document = getDocument(DomUtil.getFile(rootElement))-->Line_27 $$ document.replaceString(endoffset - "boy".length(), endoffset, "girl")[ FD ]
Line_15 $$ final Document document = getDocument(DomUtil.getFile(rootElement))-->Line_17 $$ document.replaceString(offset + 1, offset + 1 + "boy".length(), "girl")[ FD ]
Line_8 $$ final XmlTag tag = oldBoy.getXmlTag()-->Line_11 $$ final int endoffset = offset + tag.getTextLength()[ FD ]
Line_2 $$ public void testRenameCollectionTag() throws Throwable -->Line_4 $$ myCallRegistry.clear()[ CD ]
Line_3 $$ final MyElement rootElement = createPhysicalElement("<?xml version='1.0' encoding='UTF-8'?>\n" + "<a>\n" + " <boy>\n" + " </boy>\n" + " <girl/>\n" + "</a>")-->Line_5 $$ assertEquals(1, rootElement.getBoys().size())[ FD ]
Line_15 $$ final Document document = getDocument(DomUtil.getFile(rootElement))-->Line_16 $$ PsiDocumentManager.getInstance(getProject()).doPostponedOperationsAndUnblockDocument(document)[ FD ]
Line_2 $$ public void testRenameCollectionTag() throws Throwable -->Line_32 $$ assertEquals(1, rootElement.getGirls().size())[ CD ]
Line_12 $$ new WriteCommandAction(getProject()) -->Line_15 $$ final Document document = getDocument(DomUtil.getFile(rootElement))[ CD ]
Line_2 $$ public void testRenameCollectionTag() throws Throwable -->Line_23 $$ assertEquals(1, rootElement.getGirls().size())[ CD ]
Line_24 $$ new WriteCommandAction(getProject()) -->Line_28 $$ commitDocument(document)[ CD ]
Line_2 $$ public void testRenameCollectionTag() throws Throwable -->Line_6 $$ assertEquals(1, rootElement.getGirls().size())[ CD ]
Line_3 $$ final MyElement rootElement = createPhysicalElement("<?xml version='1.0' encoding='UTF-8'?>\n" + "<a>\n" + " <boy>\n" + " </boy>\n" + " <girl/>\n" + "</a>")-->Line_15 $$ final Document document = getDocument(DomUtil.getFile(rootElement))[ FD ]
Line_26 $$ final Document document = getDocument(DomUtil.getFile(rootElement))-->Line_27 $$ document.replaceString(endoffset - "boy".length(), endoffset, "girl")[ FD ]
Line_12 $$ new WriteCommandAction(getProject()) -->Line_17 $$ document.replaceString(offset + 1, offset + 1 + "boy".length(), "girl")[ CD ]
Line_7 $$ final MyElement oldBoy = rootElement.getBoys().get(0)-->Line_21 $$ assertFalse(oldBoy.isValid())[ FD ]
Line_24 $$ new WriteCommandAction(getProject()) -->Line_26 $$ final Document document = getDocument(DomUtil.getFile(rootElement))[ CD ]
Line_7 $$ final MyElement oldBoy = rootElement.getBoys().get(0)-->Line_8 $$ final XmlTag tag = oldBoy.getXmlTag()[ FD ]
Line_2 $$ public void testRenameCollectionTag() throws Throwable -->Line_22 $$ assertEquals(0, rootElement.getBoys().size())[ CD ]
Line_12 $$ new WriteCommandAction(getProject()) -->Line_14 $$ rootElement.getGirls().get(0).undefine()[ CD ]
Line_2 $$ public void testRenameCollectionTag() throws Throwable -->Line_24 $$ new WriteCommandAction(getProject()) [ CD ]
Line_2 $$ public void testRenameCollectionTag() throws Throwable -->Line_12 $$ new WriteCommandAction(getProject()) [ CD ]
