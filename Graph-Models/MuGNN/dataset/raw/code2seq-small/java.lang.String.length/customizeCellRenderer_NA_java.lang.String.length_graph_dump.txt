Line_2 $$ protected void customizeCellRenderer(JList list, Object value, int index, boolean selected, boolean hasFocus) -->Line_4 $$ if (myUseIdeaEditor) [ CD ]
Line_4 $$ if (myUseIdeaEditor) -->Line_7 $$ int count = String.valueOf(max).length() - indexString.length()[ CD ]
Line_2 $$ protected void customizeCellRenderer(JList list, Object value, int index, boolean selected, boolean hasFocus) -->Line_18 $$ int charWidth = metrics.charWidth('m')[ CD ]
Line_4 $$ if (myUseIdeaEditor) -->Line_5 $$ int max = list.getModel().getSize()[ CD ]
Line_2 $$ protected void customizeCellRenderer(JList list, Object value, int index, boolean selected, boolean hasFocus) -->Line_19 $$ int maxLength = list.getParent().getParent().getWidth() * 3 / charWidth / 2[ CD ]
Line_6 $$ String indexString = String.valueOf(index + 1)-->Line_7 $$ int count = String.valueOf(max).length() - indexString.length()[ FD ]
Line_4 $$ if (myUseIdeaEditor) -->Line_11 $$ append(prefix, SimpleTextAttributes.GRAYED_ATTRIBUTES)[ CD ]
Line_2 $$ protected void customizeCellRenderer(JList list, Object value, int index, boolean selected, boolean hasFocus) -->Line_20 $$ text = StringUtil.first(text, maxLength, true)[ CD ]
Line_13 $$ Color background = selected ? UIUtil.getListSelectionBackground() : UIUtil.getListBackground()-->Line_14 $$ UIUtil.changeBackGround(this, background)[ FD ]
Line_2 $$ protected void customizeCellRenderer(JList list, Object value, int index, boolean selected, boolean hasFocus) -->Line_3 $$ setIcon(myListEntryIcon)[ CD ]
Line_12 $$ if (UIUtil.isUnderGTKLookAndFeel()) -->Line_14 $$ UIUtil.changeBackGround(this, background)[ CD ]
Line_2 $$ protected void customizeCellRenderer(JList list, Object value, int index, boolean selected, boolean hasFocus) -->Line_17 $$ FontMetrics metrics = list.getFontMetrics(list.getFont())[ CD ]
Line_16 $$ String text = ((Item) value).shortText-->Line_21 $$ append(text, SimpleTextAttributes.REGULAR_ATTRIBUTES)[ FD ]
Line_19 $$ int maxLength = list.getParent().getParent().getWidth() * 3 / charWidth / 2-->Line_20 $$ text = StringUtil.first(text, maxLength, true)[ FD ]
Line_4 $$ if (myUseIdeaEditor) -->Line_9 $$ Arrays.fill(spaces, ' ')[ CD ]
Line_8 $$ char[] spaces = new char[count]-->Line_9 $$ Arrays.fill(spaces, ' ')[ FD ]
Line_12 $$ if (UIUtil.isUnderGTKLookAndFeel()) -->Line_13 $$ Color background = selected ? UIUtil.getListSelectionBackground() : UIUtil.getListBackground()[ CD ]
Line_4 $$ if (myUseIdeaEditor) -->Line_6 $$ String indexString = String.valueOf(index + 1)[ CD ]
Line_4 $$ if (myUseIdeaEditor) -->Line_8 $$ char[] spaces = new char[count][ CD ]
Line_5 $$ int max = list.getModel().getSize()-->Line_7 $$ int count = String.valueOf(max).length() - indexString.length()[ FD ]
Line_2 $$ protected void customizeCellRenderer(JList list, Object value, int index, boolean selected, boolean hasFocus) -->Line_19 $$ int maxLength = list.getParent().getParent().getWidth() * 3 / charWidth / 2[ FD ]
Line_20 $$ text = StringUtil.first(text, maxLength, true)-->Line_21 $$ append(text, SimpleTextAttributes.REGULAR_ATTRIBUTES)[ FD ]
Line_2 $$ protected void customizeCellRenderer(JList list, Object value, int index, boolean selected, boolean hasFocus) -->Line_21 $$ append(text, SimpleTextAttributes.REGULAR_ATTRIBUTES)[ CD ]
Line_10 $$ String prefix = indexString + new String(spaces) + "  "-->Line_11 $$ append(prefix, SimpleTextAttributes.GRAYED_ATTRIBUTES)[ FD ]
Line_2 $$ protected void customizeCellRenderer(JList list, Object value, int index, boolean selected, boolean hasFocus) -->Line_16 $$ String text = ((Item) value).shortText[ CD ]
Line_4 $$ if (myUseIdeaEditor) -->Line_10 $$ String prefix = indexString + new String(spaces) + "  "[ CD ]
Line_4 $$ if (myUseIdeaEditor) -->Line_12 $$ if (UIUtil.isUnderGTKLookAndFeel()) [ CD ]
Line_16 $$ String text = ((Item) value).shortText-->Line_20 $$ text = StringUtil.first(text, maxLength, true)[ FD ]
Line_2 $$ protected void customizeCellRenderer(JList list, Object value, int index, boolean selected, boolean hasFocus) -->Line_17 $$ FontMetrics metrics = list.getFontMetrics(list.getFont())[ FD ]
Line_2 $$ protected void customizeCellRenderer(JList list, Object value, int index, boolean selected, boolean hasFocus) -->Line_5 $$ int max = list.getModel().getSize()[ FD ]
Line_17 $$ FontMetrics metrics = list.getFontMetrics(list.getFont())-->Line_18 $$ int charWidth = metrics.charWidth('m')[ FD ]
