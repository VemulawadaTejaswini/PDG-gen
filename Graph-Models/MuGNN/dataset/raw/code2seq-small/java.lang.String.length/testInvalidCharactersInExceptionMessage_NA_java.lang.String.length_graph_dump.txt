Line_25 $$ char[] messageChars = new char[line.length() - exceptionPrefix.length()]-->Line_27 $$ Assert.assertArrayEquals(_messageChars, messageChars)[ FD ]
Line_18 $$ List<LoggingEvent> loggingEvents = _captureAppender.getLoggingEvents()-->Line_20 $$ Assert.assertEquals(12, loggingEvents.size())[ FD ]
Line_3 $$ Exception exception = new Exception(new RuntimeException(new NullPointerException(_message)))-->Line_9 $$ _log.error(null, exception)[ FD ]
Line_3 $$ Exception exception = new Exception(new RuntimeException(new NullPointerException(_message)))-->Line_11 $$ _log.fatal(null, exception)[ FD ]
Line_23 $$ String line = throwableInformation.getThrowableStrRep()[0]-->Line_26 $$ line.getChars(exceptionPrefix.length(), line.length(), messageChars, 0)[ FD ]
Line_4 $$ String exceptionPrefix = "java.lang.Exception: java.lang.RuntimeException: " + "java.lang.NullPointerException: "-->Line_25 $$ char[] messageChars = new char[line.length() - exceptionPrefix.length()][ FD ]
Line_22 $$ ThrowableInformation throwableInformation = loggingEvent.getThrowableInformation()-->Line_23 $$ String line = throwableInformation.getThrowableStrRep()[0][ FD ]
Line_3 $$ Exception exception = new Exception(new RuntimeException(new NullPointerException(_message)))-->Line_8 $$ _log.error(exception)[ FD ]
Line_3 $$ Exception exception = new Exception(new RuntimeException(new NullPointerException(_message)))-->Line_17 $$ _log.warn(null, exception)[ FD ]
Line_18 $$ List<LoggingEvent> loggingEvents = _captureAppender.getLoggingEvents()-->Line_19 $$ Assert.assertNotNull(loggingEvents)[ FD ]
Line_3 $$ Exception exception = new Exception(new RuntimeException(new NullPointerException(_message)))-->Line_14 $$ _log.trace(exception)[ FD ]
Line_3 $$ Exception exception = new Exception(new RuntimeException(new NullPointerException(_message)))-->Line_7 $$ _log.debug(null, exception)[ FD ]
Line_21 $$ for (LoggingEvent loggingEvent : loggingEvents) -->Line_22 $$ ThrowableInformation throwableInformation = loggingEvent.getThrowableInformation()[ FD ]
Line_3 $$ Exception exception = new Exception(new RuntimeException(new NullPointerException(_message)))-->Line_16 $$ _log.warn(exception)[ FD ]
Line_4 $$ String exceptionPrefix = "java.lang.Exception: java.lang.RuntimeException: " + "java.lang.NullPointerException: "-->Line_26 $$ line.getChars(exceptionPrefix.length(), line.length(), messageChars, 0)[ FD ]
Line_23 $$ String line = throwableInformation.getThrowableStrRep()[0]-->Line_24 $$ Assert.assertTrue(line.startsWith(exceptionPrefix))[ FD ]
Line_3 $$ Exception exception = new Exception(new RuntimeException(new NullPointerException(_message)))-->Line_6 $$ _log.debug(exception)[ FD ]
Line_3 $$ Exception exception = new Exception(new RuntimeException(new NullPointerException(_message)))-->Line_15 $$ _log.trace(null, exception)[ FD ]
Line_2 $$ public void testInvalidCharactersInExceptionMessage() -->Line_4 $$ String exceptionPrefix = "java.lang.Exception: java.lang.RuntimeException: " + "java.lang.NullPointerException: "[ CD ]
Line_4 $$ String exceptionPrefix = "java.lang.Exception: java.lang.RuntimeException: " + "java.lang.NullPointerException: "-->Line_24 $$ Assert.assertTrue(line.startsWith(exceptionPrefix))[ FD ]
Line_25 $$ char[] messageChars = new char[line.length() - exceptionPrefix.length()]-->Line_26 $$ line.getChars(exceptionPrefix.length(), line.length(), messageChars, 0)[ FD ]
Line_3 $$ Exception exception = new Exception(new RuntimeException(new NullPointerException(_message)))-->Line_10 $$ _log.fatal(exception)[ FD ]
Line_3 $$ Exception exception = new Exception(new RuntimeException(new NullPointerException(_message)))-->Line_12 $$ _log.info(exception)[ FD ]
Line_2 $$ public void testInvalidCharactersInExceptionMessage() -->Line_3 $$ Exception exception = new Exception(new RuntimeException(new NullPointerException(_message)))[ CD ]
Line_3 $$ Exception exception = new Exception(new RuntimeException(new NullPointerException(_message)))-->Line_13 $$ _log.info(null, exception)[ FD ]
Line_23 $$ String line = throwableInformation.getThrowableStrRep()[0]-->Line_25 $$ char[] messageChars = new char[line.length() - exceptionPrefix.length()][ FD ]
