Line_2 $$ private boolean processRightMarker(String line) -->Line_3 $$ if (!line.endsWith(RIGHT)) [ CD ]
Line_2 $$ private boolean processRightMarker(String line) -->Line_6 $$ if (!myStateStack.isEmpty() && myStateStack.peek() == State.LEFT) [ CD ]
Line_6 $$ if (!myStateStack.isEmpty() && myStateStack.peek() == State.LEFT) -->Line_18 $$ appendToMainOrCurrent(line)[ CD ]
Line_10 $$ final String fragment = line.substring(0, line.length() - LENGTH)-->Line_12 $$ appendToMainOrCurrent(fragment)[ FD ]
Line_2 $$ private boolean processRightMarker(String line) -->Line_10 $$ final String fragment = line.substring(0, line.length() - LENGTH)[ FD ]
Line_11 $$ if (!fragment.isEmpty()) -->Line_12 $$ appendToMainOrCurrent(fragment)[ CD ]
Line_10 $$ final String fragment = line.substring(0, line.length() - LENGTH)-->Line_11 $$ if (!fragment.isEmpty()) [ FD ]
Line_3 $$ if (!line.endsWith(RIGHT)) -->Line_4 $$ return false[ CD ]
Line_2 $$ private boolean processRightMarker(String line) -->Line_3 $$ if (!line.endsWith(RIGHT)) [ FD ]
Line_7 $$ if (myStateStack.size() > 1) -->Line_8 $$ appendToMainOrCurrent(line)[ CD ]
Line_7 $$ if (myStateStack.size() > 1) -->Line_10 $$ final String fragment = line.substring(0, line.length() - LENGTH)[ CD ]
Line_2 $$ private boolean processRightMarker(String line) -->Line_8 $$ appendToMainOrCurrent(line)[ FD ]
Line_6 $$ if (!myStateStack.isEmpty() && myStateStack.peek() == State.LEFT) -->Line_15 $$ myStateStack.pop()[ CD ]
Line_2 $$ private boolean processRightMarker(String line) -->Line_18 $$ appendToMainOrCurrent(line)[ FD ]
Line_2 $$ private boolean processRightMarker(String line) -->Line_20 $$ return true[ CD ]
Line_6 $$ if (!myStateStack.isEmpty() && myStateStack.peek() == State.LEFT) -->Line_16 $$ myStateStack.push(State.RIGHT)[ CD ]
Line_7 $$ if (myStateStack.size() > 1) -->Line_11 $$ if (!fragment.isEmpty()) [ CD ]
Line_6 $$ if (!myStateStack.isEmpty() && myStateStack.peek() == State.LEFT) -->Line_7 $$ if (myStateStack.size() > 1) [ CD ]
