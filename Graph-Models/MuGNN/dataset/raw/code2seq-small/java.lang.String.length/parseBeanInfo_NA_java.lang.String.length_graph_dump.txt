Line_4 $$ if (owner instanceof PsiParameter) -->Line_9 $$ PsiElement nav = scope.getNavigationElement()[ CD ]
Line_12 $$ method = (PsiMethod) nav-->Line_60 $$ PsiDocComment doc = method.getDocComment()[ FD ]
Line_90 $$ if (values.isEmpty())-->Line_91 $$ return null[ CD ]
Line_66 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() -->Line_79 $$ for (String line : StringUtil.splitByLines(data)) [ FD ]
Line_45 $$ method = (PsiMethod) nav-->Line_52 $$ if (PropertyUtil.isSimplePropertyGetter(method)) [ FD ]
Line_45 $$ method = (PsiMethod) nav-->Line_53 $$ List<PsiMethod> setters = PropertyUtil.getSetters(aClass, PropertyUtil.getPropertyNameByGetter(method))[ FD ]
Line_56 $$ method = setters.get(0)-->Line_60 $$ PsiDocComment doc = method.getDocComment()[ FD ]
Line_3 $$ PsiMethod method = null-->Line_47 $$ if (method == null)[ FD ]
Line_3 $$ PsiMethod method = null-->Line_60 $$ PsiDocComment doc = method.getDocComment()[ FD ]
Line_3 $$ PsiMethod method = null-->Line_58 $$ if (!PropertyUtil.isSimplePropertySetter(method))[ FD ]
Line_10 $$ if (!(nav instanceof PsiMethod))-->Line_11 $$ return null[ CD ]
Line_49 $$ PsiClass aClass = method.getContainingClass()-->Line_53 $$ List<PsiMethod> setters = PropertyUtil.getSetters(aClass, PropertyUtil.getPropertyNameByGetter(method))[ FD ]
Line_13 $$ if (method.isConstructor()) -->Line_30 $$ Object val = ((PsiLiteralExpression) initializer).getValue()[ CD ]
Line_12 $$ method = (PsiMethod) nav-->Line_14 $$ PsiAnnotation annotation = AnnotationUtil.findAnnotation(method, "java.beans.ConstructorProperties")[ FD ]
Line_45 $$ method = (PsiMethod) nav-->Line_56 $$ method = setters.get(0)[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_75 $$ int colon = data.indexOf(":")[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_34 $$ if (setter == null)[ CD ]
Line_53 $$ List<PsiMethod> setters = PropertyUtil.getSetters(aClass, PropertyUtil.getPropertyNameByGetter(method))-->Line_54 $$ if (setters.size() != 1)[ FD ]
Line_4 $$ if (owner instanceof PsiParameter) -->Line_5 $$ PsiParameter parameter = (PsiParameter) owner[ CD ]
Line_54 $$ if (setters.size() != 1)-->Line_55 $$ return null[ CD ]
Line_41 $$ if (owner instanceof PsiMethod) -->Line_43 $$ if (!(nav instanceof PsiMethod))[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_90 $$ if (values.isEmpty())[ CD ]
Line_4 $$ if (owner instanceof PsiParameter) -->Line_6 $$ PsiElement scope = parameter.getDeclarationScope()[ CD ]
Line_5 $$ PsiParameter parameter = (PsiParameter) owner-->Line_21 $$ PsiElement parent = parameter.getParent()[ FD ]
Line_39 $$ method = (PsiMethod) navigationElement-->Line_56 $$ method = setters.get(0)[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_64 $$ if (beaninfo == null)[ CD ]
Line_63 $$ PsiDocTag beaninfo = doc.findTagByName("beaninfo")-->Line_66 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() [ FD ]
Line_14 $$ PsiAnnotation annotation = AnnotationUtil.findAnnotation(method, "java.beans.ConstructorProperties")-->Line_17 $$ PsiAnnotationMemberValue value = annotation.findAttributeValue("value")[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_93 $$ return new AllowedValues(array, false)[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_49 $$ PsiClass aClass = method.getContainingClass()[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_66 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() [ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_52 $$ if (PropertyUtil.isSimplePropertyGetter(method)) [ CD ]
Line_50 $$ if (aClass == null)-->Line_51 $$ return null[ CD ]
Line_3 $$ PsiMethod method = null-->Line_56 $$ method = setters.get(0)[ FD ]
Line_15 $$ if (annotation == null)-->Line_16 $$ return null[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_39 $$ method = (PsiMethod) navigationElement[ CD ]
Line_63 $$ PsiDocTag beaninfo = doc.findTagByName("beaninfo")-->Line_64 $$ if (beaninfo == null)[ FD ]
Line_43 $$ if (!(nav instanceof PsiMethod))-->Line_44 $$ return null[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_61 $$ if (doc == null)[ CD ]
Line_37 $$ if (!(navigationElement instanceof PsiMethod))-->Line_38 $$ return null[ CD ]
Line_66 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() -->Line_76 $$ int last = colon == -1 ? data.length() : data.substring(0, colon).lastIndexOf("\n")[ FD ]
Line_12 $$ method = (PsiMethod) nav-->Line_13 $$ if (method.isConstructor()) [ FD ]
Line_12 $$ method = (PsiMethod) nav-->Line_39 $$ method = (PsiMethod) navigationElement[ FD ]
Line_60 $$ PsiDocComment doc = method.getDocComment()-->Line_61 $$ if (doc == null)[ FD ]
Line_3 $$ PsiMethod method = null-->Line_14 $$ PsiAnnotation annotation = AnnotationUtil.findAnnotation(method, "java.beans.ConstructorProperties")[ FD ]
Line_18 $$ if (!(value instanceof PsiArrayInitializerMemberValue))-->Line_19 $$ return null[ CD ]
Line_6 $$ PsiElement scope = parameter.getDeclarationScope()-->Line_9 $$ PsiElement nav = scope.getNavigationElement()[ FD ]
Line_49 $$ PsiClass aClass = method.getContainingClass()-->Line_84 $$ PsiExpression constRef = JavaPsiFacade.getElementFactory(manager.getProject()).createExpressionFromText(ref, aClass)[ FD ]
Line_41 $$ if (owner instanceof PsiMethod) -->Line_42 $$ PsiElement nav = owner.getNavigationElement()[ CD ]
Line_39 $$ method = (PsiMethod) navigationElement-->Line_45 $$ method = (PsiMethod) nav[ FD ]
Line_13 $$ if (method.isConstructor()) -->Line_24 $$ int index = ((PsiParameterList) parent).getParameterIndex(parameter)[ CD ]
Line_12 $$ method = (PsiMethod) nav-->Line_33 $$ PsiMethod setter = PropertyUtil.findPropertySetter(method.getContainingClass(), (String) val, false, false)[ FD ]
Line_66 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() -->Line_74 $$ data = data.substring(enumIndex)[ FD ]
Line_66 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() -->Line_71 $$ int enumIndex = StringUtil.indexOfSubstringEnd(data, "enum:")[ FD ]
Line_4 $$ if (owner instanceof PsiParameter) -->Line_13 $$ if (method.isConstructor()) [ CD ]
Line_3 $$ PsiMethod method = null-->Line_33 $$ PsiMethod setter = PropertyUtil.findPropertySetter(method.getContainingClass(), (String) val, false, false)[ FD ]
Line_39 $$ method = (PsiMethod) navigationElement-->Line_47 $$ if (method == null)[ FD ]
Line_39 $$ method = (PsiMethod) navigationElement-->Line_52 $$ if (PropertyUtil.isSimplePropertyGetter(method)) [ FD ]
Line_52 $$ if (PropertyUtil.isSimplePropertyGetter(method)) -->Line_56 $$ method = setters.get(0)[ CD ]
Line_3 $$ PsiMethod method = null-->Line_53 $$ List<PsiMethod> setters = PropertyUtil.getSetters(aClass, PropertyUtil.getPropertyNameByGetter(method))[ FD ]
Line_13 $$ if (method.isConstructor()) -->Line_20 $$ PsiAnnotationMemberValue[] initializers = ((PsiArrayInitializerMemberValue) value).getInitializers()[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_92 $$ PsiAnnotationMemberValue[] array = values.toArray(new PsiAnnotationMemberValue[values.size()])[ CD ]
Line_61 $$ if (doc == null)-->Line_62 $$ return null[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_58 $$ if (!PropertyUtil.isSimplePropertySetter(method))[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_42 $$ PsiElement nav = owner.getNavigationElement()[ FD ]
Line_4 $$ if (owner instanceof PsiParameter) -->Line_7 $$ if (!(scope instanceof PsiMethod))[ CD ]
Line_4 $$ if (owner instanceof PsiParameter) -->Line_10 $$ if (!(nav instanceof PsiMethod))[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_4 $$ if (owner instanceof PsiParameter) [ FD ]
Line_28 $$ if (!(initializer instanceof PsiLiteralExpression))-->Line_29 $$ return null[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_14 $$ PsiAnnotation annotation = AnnotationUtil.findAnnotation(method, "java.beans.ConstructorProperties")[ CD ]
Line_66 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() -->Line_75 $$ int colon = data.indexOf(":")[ FD ]
Line_39 $$ method = (PsiMethod) navigationElement-->Line_58 $$ if (!PropertyUtil.isSimplePropertySetter(method))[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_60 $$ PsiDocComment doc = method.getDocComment()[ CD ]
Line_3 $$ PsiMethod method = null-->Line_12 $$ method = (PsiMethod) nav[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_3 $$ PsiMethod method = null[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_33 $$ PsiMethod setter = PropertyUtil.findPropertySetter(method.getContainingClass(), (String) val, false, false)[ CD ]
Line_12 $$ method = (PsiMethod) nav-->Line_52 $$ if (PropertyUtil.isSimplePropertyGetter(method)) [ FD ]
Line_3 $$ PsiMethod method = null-->Line_39 $$ method = (PsiMethod) navigationElement[ FD ]
Line_24 $$ int index = ((PsiParameterList) parent).getParameterIndex(parameter)-->Line_25 $$ if (index >= initializers.length)[ FD ]
Line_13 $$ if (method.isConstructor()) -->Line_15 $$ if (annotation == null)[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_22 $$ if (!(parent instanceof PsiParameterList))[ CD ]
Line_12 $$ method = (PsiMethod) nav-->Line_56 $$ method = setters.get(0)[ FD ]
Line_60 $$ PsiDocComment doc = method.getDocComment()-->Line_63 $$ PsiDocTag beaninfo = doc.findTagByName("beaninfo")[ FD ]
Line_45 $$ method = (PsiMethod) nav-->Line_49 $$ PsiClass aClass = method.getContainingClass()[ FD ]
Line_52 $$ if (PropertyUtil.isSimplePropertyGetter(method)) -->Line_53 $$ List<PsiMethod> setters = PropertyUtil.getSetters(aClass, PropertyUtil.getPropertyNameByGetter(method))[ CD ]
Line_5 $$ PsiParameter parameter = (PsiParameter) owner-->Line_6 $$ PsiElement scope = parameter.getDeclarationScope()[ FD ]
Line_47 $$ if (method == null)-->Line_48 $$ return null[ CD ]
Line_39 $$ method = (PsiMethod) navigationElement-->Line_53 $$ List<PsiMethod> setters = PropertyUtil.getSetters(aClass, PropertyUtil.getPropertyNameByGetter(method))[ FD ]
Line_64 $$ if (beaninfo == null)-->Line_65 $$ return null[ CD ]
Line_3 $$ PsiMethod method = null-->Line_52 $$ if (PropertyUtil.isSimplePropertyGetter(method)) [ FD ]
Line_12 $$ method = (PsiMethod) nav-->Line_53 $$ List<PsiMethod> setters = PropertyUtil.getSetters(aClass, PropertyUtil.getPropertyNameByGetter(method))[ FD ]
Line_25 $$ if (index >= initializers.length)-->Line_26 $$ return null[ CD ]
Line_4 $$ if (owner instanceof PsiParameter) -->Line_41 $$ if (owner instanceof PsiMethod) [ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_74 $$ data = data.substring(enumIndex)[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_36 $$ PsiElement navigationElement = setter.getNavigationElement()[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_41 $$ if (owner instanceof PsiMethod) [ FD ]
Line_3 $$ PsiMethod method = null-->Line_49 $$ PsiClass aClass = method.getContainingClass()[ FD ]
Line_49 $$ PsiClass aClass = method.getContainingClass()-->Line_50 $$ if (aClass == null)[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_84 $$ PsiExpression constRef = JavaPsiFacade.getElementFactory(manager.getProject()).createExpressionFromText(ref, aClass)[ FD ]
Line_39 $$ method = (PsiMethod) navigationElement-->Line_49 $$ PsiClass aClass = method.getContainingClass()[ FD ]
Line_31 $$ if (!(val instanceof String))-->Line_32 $$ return null[ CD ]
Line_41 $$ if (owner instanceof PsiMethod) -->Line_45 $$ method = (PsiMethod) nav[ CD ]
Line_12 $$ method = (PsiMethod) nav-->Line_49 $$ PsiClass aClass = method.getContainingClass()[ FD ]
Line_34 $$ if (setter == null)-->Line_35 $$ return null[ CD ]
Line_22 $$ if (!(parent instanceof PsiParameterList))-->Line_23 $$ return null[ CD ]
Line_72 $$ if (enumIndex == -1)-->Line_73 $$ return null[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_18 $$ if (!(value instanceof PsiArrayInitializerMemberValue))[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_47 $$ if (method == null)[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_4 $$ if (owner instanceof PsiParameter) [ CD ]
Line_45 $$ method = (PsiMethod) nav-->Line_58 $$ if (!PropertyUtil.isSimplePropertySetter(method))[ FD ]
Line_33 $$ PsiMethod setter = PropertyUtil.findPropertySetter(method.getContainingClass(), (String) val, false, false)-->Line_36 $$ PsiElement navigationElement = setter.getNavigationElement()[ FD ]
Line_3 $$ PsiMethod method = null-->Line_13 $$ if (method.isConstructor()) [ FD ]
Line_45 $$ method = (PsiMethod) nav-->Line_60 $$ PsiDocComment doc = method.getDocComment()[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_77 $$ data = data.substring(0, last)[ CD ]
Line_4 $$ if (owner instanceof PsiParameter) -->Line_12 $$ method = (PsiMethod) nav[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_71 $$ int enumIndex = StringUtil.indexOfSubstringEnd(data, "enum:")[ CD ]
Line_45 $$ method = (PsiMethod) nav-->Line_47 $$ if (method == null)[ FD ]
Line_12 $$ method = (PsiMethod) nav-->Line_45 $$ method = (PsiMethod) nav[ FD ]
Line_13 $$ if (method.isConstructor()) -->Line_27 $$ PsiAnnotationMemberValue initializer = initializers[index][ CD ]
Line_66 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() -->Line_68 $$ return element.getText()[ CD ]
Line_39 $$ method = (PsiMethod) navigationElement-->Line_60 $$ PsiDocComment doc = method.getDocComment()[ FD ]
Line_12 $$ method = (PsiMethod) nav-->Line_47 $$ if (method == null)[ FD ]
Line_5 $$ PsiParameter parameter = (PsiParameter) owner-->Line_24 $$ int index = ((PsiParameterList) parent).getParameterIndex(parameter)[ FD ]
Line_66 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() -->Line_68 $$ return element.getText()[ FD ]
Line_14 $$ PsiAnnotation annotation = AnnotationUtil.findAnnotation(method, "java.beans.ConstructorProperties")-->Line_15 $$ if (annotation == null)[ FD ]
Line_7 $$ if (!(scope instanceof PsiMethod))-->Line_8 $$ return null[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_17 $$ PsiAnnotationMemberValue value = annotation.findAttributeValue("value")[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_31 $$ if (!(val instanceof String))[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_28 $$ if (!(initializer instanceof PsiLiteralExpression))[ CD ]
Line_53 $$ List<PsiMethod> setters = PropertyUtil.getSetters(aClass, PropertyUtil.getPropertyNameByGetter(method))-->Line_56 $$ method = setters.get(0)[ FD ]
Line_13 $$ if (method.isConstructor()) -->Line_25 $$ if (index >= initializers.length)[ CD ]
Line_13 $$ if (method.isConstructor()) -->Line_37 $$ if (!(navigationElement instanceof PsiMethod))[ CD ]
Line_56 $$ method = setters.get(0)-->Line_58 $$ if (!PropertyUtil.isSimplePropertySetter(method))[ FD ]
Line_33 $$ PsiMethod setter = PropertyUtil.findPropertySetter(method.getContainingClass(), (String) val, false, false)-->Line_34 $$ if (setter == null)[ FD ]
Line_52 $$ if (PropertyUtil.isSimplePropertyGetter(method)) -->Line_54 $$ if (setters.size() != 1)[ CD ]
Line_66 $$ String data = StringUtil.join(beaninfo.getDataElements(), new Function<PsiElement, String>() -->Line_77 $$ data = data.substring(0, last)[ FD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_72 $$ if (enumIndex == -1)[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_50 $$ if (aClass == null)[ CD ]
Line_2 $$ private static AllowedValues parseBeanInfo(@NotNull PsiModifierListOwner owner, @NotNull PsiManager manager) -->Line_63 $$ PsiDocTag beaninfo = doc.findTagByName("beaninfo")[ CD ]
Line_58 $$ if (!PropertyUtil.isSimplePropertySetter(method))-->Line_59 $$ return null[ CD ]
Line_3 $$ PsiMethod method = null-->Line_45 $$ method = (PsiMethod) nav[ FD ]
Line_13 $$ if (method.isConstructor()) -->Line_21 $$ PsiElement parent = parameter.getParent()[ CD ]
Line_12 $$ method = (PsiMethod) nav-->Line_58 $$ if (!PropertyUtil.isSimplePropertySetter(method))[ FD ]
