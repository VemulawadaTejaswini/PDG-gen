Line_2 $$ public synchronized boolean hasVersion(String groupId, String artifactId, final String version) -->Line_7 $$ if (res == null) [ CD ]
Line_2 $$ public synchronized boolean hasVersion(String groupId, String artifactId, final String version) -->Line_12 $$ return set != null && set.contains(version)[ FD ]
Line_2 $$ public synchronized boolean hasVersion(String groupId, String artifactId, final String version) -->Line_10 $$ String groupWithVersion = groupWithArtifactWithVersion.substring(0, groupWithArtifactWithVersion.length() - version.length() - 1)[ FD ]
Line_8 $$ res = doIndexTask(new IndexTask<Boolean>() -->Line_15 $$ myData.hasVersionCache.put(groupWithArtifactWithVersion, res)[ FD ]
Line_2 $$ public synchronized boolean hasVersion(String groupId, String artifactId, final String version) -->Line_17 $$ return res[ CD ]
Line_2 $$ public synchronized boolean hasVersion(String groupId, String artifactId, final String version) -->Line_3 $$ if (isBroken)[ CD ]
Line_6 $$ Boolean res = myData.hasVersionCache.get(groupWithArtifactWithVersion)-->Line_15 $$ myData.hasVersionCache.put(groupWithArtifactWithVersion, res)[ FD ]
Line_6 $$ Boolean res = myData.hasVersionCache.get(groupWithArtifactWithVersion)-->Line_8 $$ res = doIndexTask(new IndexTask<Boolean>() [ FD ]
Line_8 $$ res = doIndexTask(new IndexTask<Boolean>() -->Line_11 $$ Set<String> set = myData.groupWithArtifactToVersionMap.get(groupWithVersion)[ CD ]
Line_7 $$ if (res == null) -->Line_15 $$ myData.hasVersionCache.put(groupWithArtifactWithVersion, res)[ CD ]
Line_11 $$ Set<String> set = myData.groupWithArtifactToVersionMap.get(groupWithVersion)-->Line_12 $$ return set != null && set.contains(version)[ FD ]
Line_5 $$ final String groupWithArtifactWithVersion = groupId + ":" + artifactId + ':' + version-->Line_10 $$ String groupWithVersion = groupWithArtifactWithVersion.substring(0, groupWithArtifactWithVersion.length() - version.length() - 1)[ FD ]
Line_2 $$ public synchronized boolean hasVersion(String groupId, String artifactId, final String version) -->Line_6 $$ Boolean res = myData.hasVersionCache.get(groupWithArtifactWithVersion)[ CD ]
Line_5 $$ final String groupWithArtifactWithVersion = groupId + ":" + artifactId + ':' + version-->Line_15 $$ myData.hasVersionCache.put(groupWithArtifactWithVersion, res)[ FD ]
Line_7 $$ if (res == null) -->Line_8 $$ res = doIndexTask(new IndexTask<Boolean>() [ CD ]
Line_3 $$ if (isBroken)-->Line_4 $$ return false[ CD ]
Line_8 $$ res = doIndexTask(new IndexTask<Boolean>() -->Line_12 $$ return set != null && set.contains(version)[ CD ]
Line_8 $$ res = doIndexTask(new IndexTask<Boolean>() -->Line_10 $$ String groupWithVersion = groupWithArtifactWithVersion.substring(0, groupWithArtifactWithVersion.length() - version.length() - 1)[ CD ]
Line_2 $$ public synchronized boolean hasVersion(String groupId, String artifactId, final String version) -->Line_5 $$ final String groupWithArtifactWithVersion = groupId + ":" + artifactId + ':' + version[ CD ]
Line_10 $$ String groupWithVersion = groupWithArtifactWithVersion.substring(0, groupWithArtifactWithVersion.length() - version.length() - 1)-->Line_11 $$ Set<String> set = myData.groupWithArtifactToVersionMap.get(groupWithVersion)[ FD ]
Line_5 $$ final String groupWithArtifactWithVersion = groupId + ":" + artifactId + ':' + version-->Line_6 $$ Boolean res = myData.hasVersionCache.get(groupWithArtifactWithVersion)[ FD ]
Line_6 $$ Boolean res = myData.hasVersionCache.get(groupWithArtifactWithVersion)-->Line_7 $$ if (res == null) [ FD ]
