Line_2 $$ public boolean requiresTokenization(String keyword) -->Line_5 $$ if (!((keyword.indexOf(CharPool.QUOTE) == 0) && (keyword.lastIndexOf(CharPool.QUOTE) == (keyword.length() - 1)))) [ CD ]
Line_5 $$ if (!((keyword.indexOf(CharPool.QUOTE) == 0) && (keyword.lastIndexOf(CharPool.QUOTE) == (keyword.length() - 1)))) -->Line_6 $$ if (((start > -1) && (end > start)) || ((start == -1) && (end == -1) && (keyword.indexOf(CharPool.SPACE) != -1))) [ CD ]
Line_2 $$ public boolean requiresTokenization(String keyword) -->Line_3 $$ int start = keyword.indexOf(CharPool.QUOTE)[ CD ]
Line_2 $$ public boolean requiresTokenization(String keyword) -->Line_4 $$ int end = keyword.indexOf(CharPool.QUOTE, start + 1)[ FD ]
Line_2 $$ public boolean requiresTokenization(String keyword) -->Line_5 $$ if (!((keyword.indexOf(CharPool.QUOTE) == 0) && (keyword.lastIndexOf(CharPool.QUOTE) == (keyword.length() - 1)))) [ FD ]
Line_2 $$ public boolean requiresTokenization(String keyword) -->Line_10 $$ return false[ CD ]
Line_2 $$ public boolean requiresTokenization(String keyword) -->Line_3 $$ int start = keyword.indexOf(CharPool.QUOTE)[ FD ]
Line_2 $$ public boolean requiresTokenization(String keyword) -->Line_6 $$ if (((start > -1) && (end > start)) || ((start == -1) && (end == -1) && (keyword.indexOf(CharPool.SPACE) != -1))) [ FD ]
Line_2 $$ public boolean requiresTokenization(String keyword) -->Line_4 $$ int end = keyword.indexOf(CharPool.QUOTE, start + 1)[ CD ]
Line_6 $$ if (((start > -1) && (end > start)) || ((start == -1) && (end == -1) && (keyword.indexOf(CharPool.SPACE) != -1))) -->Line_7 $$ return true[ CD ]
