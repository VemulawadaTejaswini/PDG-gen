Line_2 $$ public static String escapeLineBreak(@NotNull String text) -->Line_4 $$ for (int i = 0; i < text.length(); i++) [ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder(text.length())-->Line_8 $$ buffer.append("\\n")[ FD ]
Line_2 $$ public static String escapeLineBreak(@NotNull String text) -->Line_3 $$ StringBuilder buffer = new StringBuilder(text.length())[ FD ]
Line_5 $$ char c = text.charAt(i)-->Line_14 $$ buffer.append(c)[ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder(text.length())-->Line_14 $$ buffer.append(c)[ FD ]
Line_2 $$ public static String escapeLineBreak(@NotNull String text) -->Line_4 $$ for (int i = 0; i < text.length(); i++) [ FD ]
Line_3 $$ StringBuilder buffer = new StringBuilder(text.length())-->Line_11 $$ buffer.append("\\r")[ FD ]
Line_2 $$ public static String escapeLineBreak(@NotNull String text) -->Line_3 $$ StringBuilder buffer = new StringBuilder(text.length())[ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder(text.length())-->Line_17 $$ return buffer.toString()[ FD ]
Line_4 $$ for (int i = 0; i < text.length(); i++) -->Line_5 $$ char c = text.charAt(i)[ CD ]
Line_4 $$ for (int i = 0; i < text.length(); i++) -->Line_5 $$ char c = text.charAt(i)[ FD ]
Line_2 $$ public static String escapeLineBreak(@NotNull String text) -->Line_17 $$ return buffer.toString()[ CD ]
Line_2 $$ public static String escapeLineBreak(@NotNull String text) -->Line_5 $$ char c = text.charAt(i)[ FD ]
