Line_3 $$ final List<String> words = StringUtil.getWordsIn(sequence)-->Line_6 $$ String longest = words.get(0)[ FD ]
Line_4 $$ if (words.isEmpty())-->Line_5 $$ return sequence[ CD ]
Line_7 $$ for (String word : words) -->Line_8 $$ if (word.length() > longest.length())[ FD ]
Line_7 $$ for (String word : words) -->Line_9 $$ longest = word[ FD ]
Line_2 $$ private static String findLongestWord(@NotNull String sequence) -->Line_3 $$ final List<String> words = StringUtil.getWordsIn(sequence)[ FD ]
Line_2 $$ private static String findLongestWord(@NotNull String sequence) -->Line_6 $$ String longest = words.get(0)[ CD ]
Line_2 $$ private static String findLongestWord(@NotNull String sequence) -->Line_11 $$ return longest[ CD ]
Line_3 $$ final List<String> words = StringUtil.getWordsIn(sequence)-->Line_4 $$ if (words.isEmpty())[ FD ]
Line_6 $$ String longest = words.get(0)-->Line_9 $$ longest = word[ FD ]
Line_2 $$ private static String findLongestWord(@NotNull String sequence) -->Line_4 $$ if (words.isEmpty())[ FD ]
Line_6 $$ String longest = words.get(0)-->Line_8 $$ if (word.length() > longest.length())[ FD ]
Line_8 $$ if (word.length() > longest.length())-->Line_9 $$ longest = word[ CD ]
Line_2 $$ private static String findLongestWord(@NotNull String sequence) -->Line_3 $$ final List<String> words = StringUtil.getWordsIn(sequence)[ CD ]
Line_2 $$ private static String findLongestWord(@NotNull String sequence) -->Line_4 $$ if (words.isEmpty())[ CD ]
