Line_2 $$ private static byte[] hexToByteArray(String hex) -->Line_5 $$ if ((hex.length() % 2) != 0)[ CD ]
Line_8 $$ for (int i = 0; i < decoded.length; i++) -->Line_11 $$ decoded[i] = (byte) (hi * 16 + lo)[ CD ]
Line_2 $$ private static byte[] hexToByteArray(String hex) -->Line_7 $$ byte[] decoded = new byte[hex.length() / 2][ CD ]
Line_2 $$ private static byte[] hexToByteArray(String hex) -->Line_3 $$ if (hex == null)[ CD ]
Line_2 $$ private static byte[] hexToByteArray(String hex) -->Line_10 $$ int lo = hexToInt(hex.charAt((i * 2) + 1))[ FD ]
Line_2 $$ private static byte[] hexToByteArray(String hex) -->Line_3 $$ if (hex == null)[ FD ]
Line_2 $$ private static byte[] hexToByteArray(String hex) -->Line_9 $$ int hi = hexToInt(hex.charAt(i * 2))[ FD ]
Line_8 $$ for (int i = 0; i < decoded.length; i++) -->Line_10 $$ int lo = hexToInt(hex.charAt((i * 2) + 1))[ CD ]
Line_2 $$ private static byte[] hexToByteArray(String hex) -->Line_7 $$ byte[] decoded = new byte[hex.length() / 2][ FD ]
Line_2 $$ private static byte[] hexToByteArray(String hex) -->Line_13 $$ return decoded[ CD ]
Line_2 $$ private static byte[] hexToByteArray(String hex) -->Line_8 $$ for (int i = 0; i < decoded.length; i++) [ CD ]
Line_8 $$ for (int i = 0; i < decoded.length; i++) -->Line_9 $$ int hi = hexToInt(hex.charAt(i * 2))[ CD ]
Line_2 $$ private static byte[] hexToByteArray(String hex) -->Line_5 $$ if ((hex.length() % 2) != 0)[ FD ]
