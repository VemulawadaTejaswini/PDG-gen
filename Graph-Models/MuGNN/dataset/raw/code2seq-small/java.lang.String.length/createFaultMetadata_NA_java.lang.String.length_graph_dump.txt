Line_5 $$ Class ex = exceptionTypes[i]-->Line_7 $$ FaultDesc fault = operation.getFaultByClass(ex, false)[ FD ]
Line_7 $$ FaultDesc fault = operation.getFaultByClass(ex, false)-->Line_10 $$ fault = new FaultDesc()[ FD ]
Line_6 $$ if (ex != java.rmi.RemoteException.class && ex != org.apache.axis.AxisFault.class && !ex.getName().startsWith("java.") && !ex.getName().startsWith("javax.")) -->Line_15 $$ QName xmlType = fault.getXmlType()[ CD ]
Line_41 $$ if (fault.getQName() == null) -->Line_42 $$ fault.setQName(new QName(pkgAndClsName))[ CD ]
Line_33 $$ qname = new QName("", "fault")-->Line_32 $$ if (qname == null) [ FD ]
Line_27 $$ if (fault.getParameters() == null) -->Line_31 $$ QName qname = fault.getQName()[ CD ]
Line_32 $$ if (qname == null) -->Line_33 $$ qname = new QName("", "fault")[ CD ]
Line_6 $$ if (ex != java.rmi.RemoteException.class && ex != org.apache.axis.AxisFault.class && !ex.getName().startsWith("java.") && !ex.getName().startsWith("javax.")) -->Line_19 $$ String pkgAndClsName = ex.getName()[ CD ]
Line_44 $$ if (isNew) -->Line_45 $$ operation.addFault(fault)[ CD ]
Line_31 $$ QName qname = fault.getQName()-->Line_33 $$ qname = new QName("", "fault")[ FD ]
Line_15 $$ QName xmlType = fault.getXmlType()-->Line_16 $$ if (xmlType == null) [ FD ]
Line_10 $$ fault = new FaultDesc()-->Line_27 $$ if (fault.getParameters() == null) [ FD ]
Line_10 $$ fault = new FaultDesc()-->Line_45 $$ operation.addFault(fault)[ FD ]
Line_7 $$ FaultDesc fault = operation.getFaultByClass(ex, false)-->Line_23 $$ if (fault.getName() == null) [ FD ]
Line_8 $$ boolean isNew-->Line_13 $$ isNew = false[ FD ]
Line_16 $$ if (xmlType == null) -->Line_17 $$ fault.setXmlType(getTypeMapping().getTypeQName(ex))[ CD ]
Line_7 $$ FaultDesc fault = operation.getFaultByClass(ex, false)-->Line_39 $$ fault.setParameters(exceptionParams)[ FD ]
Line_37 $$ ArrayList exceptionParams = new ArrayList()-->Line_39 $$ fault.setParameters(exceptionParams)[ FD ]
Line_29 $$ xmlType = getTypeMapping().getTypeQName(ex)-->Line_28 $$ if (xmlType == null) [ FD ]
Line_10 $$ fault = new FaultDesc()-->Line_15 $$ QName xmlType = fault.getXmlType()[ FD ]
Line_2 $$ private void createFaultMetadata(Method method, OperationDesc operation) -->Line_3 $$ Class[] exceptionTypes = method.getExceptionTypes()[ CD ]
Line_10 $$ fault = new FaultDesc()-->Line_20 $$ if (fault.getClassName() == null) [ FD ]
Line_15 $$ QName xmlType = fault.getXmlType()-->Line_28 $$ if (xmlType == null) [ FD ]
Line_31 $$ QName qname = fault.getQName()-->Line_32 $$ if (qname == null) [ FD ]
Line_6 $$ if (ex != java.rmi.RemoteException.class && ex != org.apache.axis.AxisFault.class && !ex.getName().startsWith("java.") && !ex.getName().startsWith("javax.")) -->Line_20 $$ if (fault.getClassName() == null) [ CD ]
Line_5 $$ Class ex = exceptionTypes[i]-->Line_17 $$ fault.setXmlType(getTypeMapping().getTypeQName(ex))[ FD ]
Line_19 $$ String pkgAndClsName = ex.getName()-->Line_24 $$ String name = pkgAndClsName.substring(pkgAndClsName.lastIndexOf('.') + 1, pkgAndClsName.length())[ FD ]
Line_7 $$ FaultDesc fault = operation.getFaultByClass(ex, false)-->Line_20 $$ if (fault.getClassName() == null) [ FD ]
Line_9 $$ if (fault == null) -->Line_10 $$ fault = new FaultDesc()[ CD ]
Line_6 $$ if (ex != java.rmi.RemoteException.class && ex != org.apache.axis.AxisFault.class && !ex.getName().startsWith("java.") && !ex.getName().startsWith("javax.")) -->Line_41 $$ if (fault.getQName() == null) [ CD ]
Line_7 $$ FaultDesc fault = operation.getFaultByClass(ex, false)-->Line_45 $$ operation.addFault(fault)[ FD ]
Line_7 $$ FaultDesc fault = operation.getFaultByClass(ex, false)-->Line_15 $$ QName xmlType = fault.getXmlType()[ FD ]
Line_27 $$ if (fault.getParameters() == null) -->Line_28 $$ if (xmlType == null) [ CD ]
Line_6 $$ if (ex != java.rmi.RemoteException.class && ex != org.apache.axis.AxisFault.class && !ex.getName().startsWith("java.") && !ex.getName().startsWith("javax.")) -->Line_16 $$ if (xmlType == null) [ CD ]
Line_10 $$ fault = new FaultDesc()-->Line_39 $$ fault.setParameters(exceptionParams)[ FD ]
Line_23 $$ if (fault.getName() == null) -->Line_24 $$ String name = pkgAndClsName.substring(pkgAndClsName.lastIndexOf('.') + 1, pkgAndClsName.length())[ CD ]
Line_27 $$ if (fault.getParameters() == null) -->Line_37 $$ ArrayList exceptionParams = new ArrayList()[ CD ]
Line_35 $$ ParameterDesc param = new ParameterDesc(qname, ParameterDesc.IN, xmlType)-->Line_36 $$ param.setJavaType(ex)[ FD ]
Line_6 $$ if (ex != java.rmi.RemoteException.class && ex != org.apache.axis.AxisFault.class && !ex.getName().startsWith("java.") && !ex.getName().startsWith("javax.")) -->Line_9 $$ if (fault == null) [ CD ]
Line_15 $$ QName xmlType = fault.getXmlType()-->Line_29 $$ xmlType = getTypeMapping().getTypeQName(ex)[ FD ]
Line_9 $$ if (fault == null) -->Line_11 $$ isNew = true[ CD ]
Line_10 $$ fault = new FaultDesc()-->Line_41 $$ if (fault.getQName() == null) [ FD ]
Line_7 $$ FaultDesc fault = operation.getFaultByClass(ex, false)-->Line_41 $$ if (fault.getQName() == null) [ FD ]
Line_7 $$ FaultDesc fault = operation.getFaultByClass(ex, false)-->Line_25 $$ fault.setName(name)[ FD ]
Line_7 $$ FaultDesc fault = operation.getFaultByClass(ex, false)-->Line_21 $$ fault.setClassName(pkgAndClsName)[ FD ]
Line_27 $$ if (fault.getParameters() == null) -->Line_36 $$ param.setJavaType(ex)[ CD ]
Line_2 $$ private void createFaultMetadata(Method method, OperationDesc operation) -->Line_7 $$ FaultDesc fault = operation.getFaultByClass(ex, false)[ FD ]
Line_7 $$ FaultDesc fault = operation.getFaultByClass(ex, false)-->Line_17 $$ fault.setXmlType(getTypeMapping().getTypeQName(ex))[ FD ]
Line_35 $$ ParameterDesc param = new ParameterDesc(qname, ParameterDesc.IN, xmlType)-->Line_38 $$ exceptionParams.add(param)[ FD ]
Line_6 $$ if (ex != java.rmi.RemoteException.class && ex != org.apache.axis.AxisFault.class && !ex.getName().startsWith("java.") && !ex.getName().startsWith("javax.")) -->Line_27 $$ if (fault.getParameters() == null) [ CD ]
Line_6 $$ if (ex != java.rmi.RemoteException.class && ex != org.apache.axis.AxisFault.class && !ex.getName().startsWith("java.") && !ex.getName().startsWith("javax.")) -->Line_44 $$ if (isNew) [ CD ]
Line_2 $$ private void createFaultMetadata(Method method, OperationDesc operation) -->Line_4 $$ for (int i = 0; i < exceptionTypes.length; i++) [ CD ]
Line_11 $$ isNew = true-->Line_13 $$ isNew = false[ FD ]
Line_5 $$ Class ex = exceptionTypes[i]-->Line_6 $$ if (ex != java.rmi.RemoteException.class && ex != org.apache.axis.AxisFault.class && !ex.getName().startsWith("java.") && !ex.getName().startsWith("javax.")) [ FD ]
Line_8 $$ boolean isNew-->Line_11 $$ isNew = true[ FD ]
Line_23 $$ if (fault.getName() == null) -->Line_25 $$ fault.setName(name)[ CD ]
Line_10 $$ fault = new FaultDesc()-->Line_9 $$ if (fault == null) [ FD ]
Line_4 $$ for (int i = 0; i < exceptionTypes.length; i++) -->Line_6 $$ if (ex != java.rmi.RemoteException.class && ex != org.apache.axis.AxisFault.class && !ex.getName().startsWith("java.") && !ex.getName().startsWith("javax.")) [ CD ]
Line_6 $$ if (ex != java.rmi.RemoteException.class && ex != org.apache.axis.AxisFault.class && !ex.getName().startsWith("java.") && !ex.getName().startsWith("javax.")) -->Line_7 $$ FaultDesc fault = operation.getFaultByClass(ex, false)[ CD ]
Line_2 $$ private void createFaultMetadata(Method method, OperationDesc operation) -->Line_45 $$ operation.addFault(fault)[ FD ]
Line_20 $$ if (fault.getClassName() == null) -->Line_21 $$ fault.setClassName(pkgAndClsName)[ CD ]
Line_7 $$ FaultDesc fault = operation.getFaultByClass(ex, false)-->Line_42 $$ fault.setQName(new QName(pkgAndClsName))[ FD ]
Line_10 $$ fault = new FaultDesc()-->Line_21 $$ fault.setClassName(pkgAndClsName)[ FD ]
Line_5 $$ Class ex = exceptionTypes[i]-->Line_19 $$ String pkgAndClsName = ex.getName()[ FD ]
Line_19 $$ String pkgAndClsName = ex.getName()-->Line_21 $$ fault.setClassName(pkgAndClsName)[ FD ]
Line_7 $$ FaultDesc fault = operation.getFaultByClass(ex, false)-->Line_27 $$ if (fault.getParameters() == null) [ FD ]
Line_37 $$ ArrayList exceptionParams = new ArrayList()-->Line_38 $$ exceptionParams.add(param)[ FD ]
Line_27 $$ if (fault.getParameters() == null) -->Line_32 $$ if (qname == null) [ CD ]
Line_10 $$ fault = new FaultDesc()-->Line_23 $$ if (fault.getName() == null) [ FD ]
Line_2 $$ private void createFaultMetadata(Method method, OperationDesc operation) -->Line_3 $$ Class[] exceptionTypes = method.getExceptionTypes()[ FD ]
Line_7 $$ FaultDesc fault = operation.getFaultByClass(ex, false)-->Line_31 $$ QName qname = fault.getQName()[ FD ]
Line_29 $$ xmlType = getTypeMapping().getTypeQName(ex)-->Line_16 $$ if (xmlType == null) [ FD ]
Line_5 $$ Class ex = exceptionTypes[i]-->Line_29 $$ xmlType = getTypeMapping().getTypeQName(ex)[ FD ]
Line_10 $$ fault = new FaultDesc()-->Line_17 $$ fault.setXmlType(getTypeMapping().getTypeQName(ex))[ FD ]
Line_4 $$ for (int i = 0; i < exceptionTypes.length; i++) -->Line_5 $$ Class ex = exceptionTypes[i][ CD ]
Line_6 $$ if (ex != java.rmi.RemoteException.class && ex != org.apache.axis.AxisFault.class && !ex.getName().startsWith("java.") && !ex.getName().startsWith("javax.")) -->Line_8 $$ boolean isNew[ CD ]
Line_27 $$ if (fault.getParameters() == null) -->Line_35 $$ ParameterDesc param = new ParameterDesc(qname, ParameterDesc.IN, xmlType)[ CD ]
Line_28 $$ if (xmlType == null) -->Line_29 $$ xmlType = getTypeMapping().getTypeQName(ex)[ CD ]
Line_5 $$ Class ex = exceptionTypes[i]-->Line_36 $$ param.setJavaType(ex)[ FD ]
Line_10 $$ fault = new FaultDesc()-->Line_25 $$ fault.setName(name)[ FD ]
Line_27 $$ if (fault.getParameters() == null) -->Line_38 $$ exceptionParams.add(param)[ CD ]
Line_24 $$ String name = pkgAndClsName.substring(pkgAndClsName.lastIndexOf('.') + 1, pkgAndClsName.length())-->Line_25 $$ fault.setName(name)[ FD ]
Line_27 $$ if (fault.getParameters() == null) -->Line_39 $$ fault.setParameters(exceptionParams)[ CD ]
Line_9 $$ if (fault == null) -->Line_13 $$ isNew = false[ CD ]
Line_6 $$ if (ex != java.rmi.RemoteException.class && ex != org.apache.axis.AxisFault.class && !ex.getName().startsWith("java.") && !ex.getName().startsWith("javax.")) -->Line_23 $$ if (fault.getName() == null) [ CD ]
Line_10 $$ fault = new FaultDesc()-->Line_42 $$ fault.setQName(new QName(pkgAndClsName))[ FD ]
Line_7 $$ FaultDesc fault = operation.getFaultByClass(ex, false)-->Line_9 $$ if (fault == null) [ FD ]
Line_10 $$ fault = new FaultDesc()-->Line_31 $$ QName qname = fault.getQName()[ FD ]
