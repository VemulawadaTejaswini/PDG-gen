Line_2 $$ public ExternalResourceName toModulePath(ModuleIdentifier module) -->Line_3 $$ String pattern = getBase().getPath()[ CD ]
Line_3 $$ String pattern = getBase().getPath()-->Line_4 $$ if (!pattern.endsWith(MavenPattern.M2_PATTERN)) [ FD ]
Line_2 $$ public ExternalResourceName toModulePath(ModuleIdentifier module) -->Line_4 $$ if (!pattern.endsWith(MavenPattern.M2_PATTERN)) [ CD ]
Line_2 $$ public ExternalResourceName toModulePath(ModuleIdentifier module) -->Line_8 $$ return getBase().getRoot().resolve(substituteTokens(metaDataPattern, toAttributes(module)))[ FD ]
Line_3 $$ String pattern = getBase().getPath()-->Line_7 $$ String metaDataPattern = pattern.substring(0, pattern.length() - MavenPattern.M2_PER_MODULE_PATTERN.length() - 1)[ FD ]
Line_7 $$ String metaDataPattern = pattern.substring(0, pattern.length() - MavenPattern.M2_PER_MODULE_PATTERN.length() - 1)-->Line_8 $$ return getBase().getRoot().resolve(substituteTokens(metaDataPattern, toAttributes(module)))[ FD ]
Line_2 $$ public ExternalResourceName toModulePath(ModuleIdentifier module) -->Line_7 $$ String metaDataPattern = pattern.substring(0, pattern.length() - MavenPattern.M2_PER_MODULE_PATTERN.length() - 1)[ CD ]
Line_2 $$ public ExternalResourceName toModulePath(ModuleIdentifier module) -->Line_8 $$ return getBase().getRoot().resolve(substituteTokens(metaDataPattern, toAttributes(module)))[ CD ]
