Line_2 $$ public String urlFor(RequestContext requestContext, Object key, Object param) -->Line_7 $$ url += requestContext.getTargetPath()[ FD ]
Line_9 $$ int questionIndex = url.indexOf(CharPool.QUESTION)-->Line_10 $$ if (questionIndex != -1) [ FD ]
Line_3 $$ String url = String.valueOf(requestContext.getBaseUri())-->Line_5 $$ url = url.substring(0, url.length() - 1)[ FD ]
Line_2 $$ public String urlFor(RequestContext requestContext, Object key, Object param) -->Line_8 $$ String query = StringPool.BLANK[ CD ]
Line_3 $$ String url = String.valueOf(requestContext.getBaseUri())-->Line_7 $$ url += requestContext.getTargetPath()[ FD ]
Line_18 $$ if (!keyString.equals(TargetType.COLLECTION)) -->Line_19 $$ return null[ CD ]
Line_5 $$ url = url.substring(0, url.length() - 1)-->Line_22 $$ if (url.endsWith(collectionName)) [ FD ]
Line_21 $$ String collectionName = CharPool.SLASH + (String) param-->Line_26 $$ int collectionIndex = url.indexOf(collectionName)[ FD ]
Line_2 $$ public String urlFor(RequestContext requestContext, Object key, Object param) -->Line_10 $$ if (questionIndex != -1) [ CD ]
Line_7 $$ url += requestContext.getTargetPath()-->Line_26 $$ int collectionIndex = url.indexOf(collectionName)[ FD ]
Line_5 $$ url = url.substring(0, url.length() - 1)-->Line_7 $$ url += requestContext.getTargetPath()[ FD ]
Line_3 $$ String url = String.valueOf(requestContext.getBaseUri())-->Line_9 $$ int questionIndex = url.indexOf(CharPool.QUESTION)[ FD ]
Line_2 $$ public String urlFor(RequestContext requestContext, Object key, Object param) -->Line_14 $$ String keyString = key.toString()[ FD ]
Line_21 $$ String collectionName = CharPool.SLASH + (String) param-->Line_27 $$ collectionIndex += collectionName.length() + 1[ FD ]
Line_2 $$ public String urlFor(RequestContext requestContext, Object key, Object param) -->Line_9 $$ int questionIndex = url.indexOf(CharPool.QUESTION)[ CD ]
Line_10 $$ if (questionIndex != -1) -->Line_11 $$ query = url.substring(questionIndex)[ CD ]
Line_2 $$ public String urlFor(RequestContext requestContext, Object key, Object param) -->Line_3 $$ String url = String.valueOf(requestContext.getBaseUri())[ FD ]
Line_7 $$ url += requestContext.getTargetPath()-->Line_22 $$ if (url.endsWith(collectionName)) [ FD ]
Line_25 $$ if (url.contains(collectionName + CharPool.SLASH)) -->Line_28 $$ url = url.substring(0, collectionIndex)[ CD ]
Line_3 $$ String url = String.valueOf(requestContext.getBaseUri())-->Line_26 $$ int collectionIndex = url.indexOf(collectionName)[ FD ]
Line_25 $$ if (url.contains(collectionName + CharPool.SLASH)) -->Line_29 $$ return url[ CD ]
Line_7 $$ url += requestContext.getTargetPath()-->Line_28 $$ url = url.substring(0, collectionIndex)[ FD ]
Line_9 $$ int questionIndex = url.indexOf(CharPool.QUESTION)-->Line_12 $$ url = url.substring(0, questionIndex)[ FD ]
Line_25 $$ if (url.contains(collectionName + CharPool.SLASH)) -->Line_27 $$ collectionIndex += collectionName.length() + 1[ CD ]
Line_5 $$ url = url.substring(0, url.length() - 1)-->Line_26 $$ int collectionIndex = url.indexOf(collectionName)[ FD ]
Line_2 $$ public String urlFor(RequestContext requestContext, Object key, Object param) -->Line_22 $$ if (url.endsWith(collectionName)) [ CD ]
Line_12 $$ url = url.substring(0, questionIndex)-->Line_22 $$ if (url.endsWith(collectionName)) [ FD ]
Line_12 $$ url = url.substring(0, questionIndex)-->Line_28 $$ url = url.substring(0, collectionIndex)[ FD ]
Line_3 $$ String url = String.valueOf(requestContext.getBaseUri())-->Line_4 $$ if (url.endsWith(StringPool.SLASH)) [ FD ]
Line_2 $$ public String urlFor(RequestContext requestContext, Object key, Object param) -->Line_21 $$ String collectionName = CharPool.SLASH + (String) param[ CD ]
Line_2 $$ public String urlFor(RequestContext requestContext, Object key, Object param) -->Line_7 $$ url += requestContext.getTargetPath()[ CD ]
Line_3 $$ String url = String.valueOf(requestContext.getBaseUri())-->Line_12 $$ url = url.substring(0, questionIndex)[ FD ]
Line_2 $$ public String urlFor(RequestContext requestContext, Object key, Object param) -->Line_14 $$ String keyString = key.toString()[ CD ]
Line_5 $$ url = url.substring(0, url.length() - 1)-->Line_12 $$ url = url.substring(0, questionIndex)[ FD ]
Line_2 $$ public String urlFor(RequestContext requestContext, Object key, Object param) -->Line_18 $$ if (!keyString.equals(TargetType.COLLECTION)) [ CD ]
Line_25 $$ if (url.contains(collectionName + CharPool.SLASH)) -->Line_26 $$ int collectionIndex = url.indexOf(collectionName)[ CD ]
Line_26 $$ int collectionIndex = url.indexOf(collectionName)-->Line_28 $$ url = url.substring(0, collectionIndex)[ FD ]
Line_2 $$ public String urlFor(RequestContext requestContext, Object key, Object param) -->Line_31 $$ return url + collectionName + query[ CD ]
Line_15 $$ if (keyString.equals(TargetType.SERVICE)) -->Line_16 $$ return url + query[ CD ]
Line_22 $$ if (url.endsWith(collectionName)) -->Line_23 $$ return url + query[ CD ]
Line_2 $$ public String urlFor(RequestContext requestContext, Object key, Object param) -->Line_25 $$ if (url.contains(collectionName + CharPool.SLASH)) [ CD ]
Line_3 $$ String url = String.valueOf(requestContext.getBaseUri())-->Line_25 $$ if (url.contains(collectionName + CharPool.SLASH)) [ FD ]
Line_14 $$ String keyString = key.toString()-->Line_15 $$ if (keyString.equals(TargetType.SERVICE)) [ FD ]
Line_2 $$ public String urlFor(RequestContext requestContext, Object key, Object param) -->Line_15 $$ if (keyString.equals(TargetType.SERVICE)) [ CD ]
Line_12 $$ url = url.substring(0, questionIndex)-->Line_26 $$ int collectionIndex = url.indexOf(collectionName)[ FD ]
Line_14 $$ String keyString = key.toString()-->Line_18 $$ if (!keyString.equals(TargetType.COLLECTION)) [ FD ]
Line_5 $$ url = url.substring(0, url.length() - 1)-->Line_11 $$ query = url.substring(questionIndex)[ FD ]
Line_2 $$ public String urlFor(RequestContext requestContext, Object key, Object param) -->Line_3 $$ String url = String.valueOf(requestContext.getBaseUri())[ CD ]
Line_5 $$ url = url.substring(0, url.length() - 1)-->Line_28 $$ url = url.substring(0, collectionIndex)[ FD ]
Line_3 $$ String url = String.valueOf(requestContext.getBaseUri())-->Line_22 $$ if (url.endsWith(collectionName)) [ FD ]
Line_9 $$ int questionIndex = url.indexOf(CharPool.QUESTION)-->Line_11 $$ query = url.substring(questionIndex)[ FD ]
Line_7 $$ url += requestContext.getTargetPath()-->Line_9 $$ int questionIndex = url.indexOf(CharPool.QUESTION)[ FD ]
Line_7 $$ url += requestContext.getTargetPath()-->Line_25 $$ if (url.contains(collectionName + CharPool.SLASH)) [ FD ]
Line_4 $$ if (url.endsWith(StringPool.SLASH)) -->Line_5 $$ url = url.substring(0, url.length() - 1)[ CD ]
Line_2 $$ public String urlFor(RequestContext requestContext, Object key, Object param) -->Line_4 $$ if (url.endsWith(StringPool.SLASH)) [ CD ]
Line_3 $$ String url = String.valueOf(requestContext.getBaseUri())-->Line_11 $$ query = url.substring(questionIndex)[ FD ]
Line_5 $$ url = url.substring(0, url.length() - 1)-->Line_25 $$ if (url.contains(collectionName + CharPool.SLASH)) [ FD ]
Line_8 $$ String query = StringPool.BLANK-->Line_11 $$ query = url.substring(questionIndex)[ FD ]
Line_7 $$ url += requestContext.getTargetPath()-->Line_12 $$ url = url.substring(0, questionIndex)[ FD ]
Line_3 $$ String url = String.valueOf(requestContext.getBaseUri())-->Line_28 $$ url = url.substring(0, collectionIndex)[ FD ]
Line_7 $$ url += requestContext.getTargetPath()-->Line_11 $$ query = url.substring(questionIndex)[ FD ]
Line_26 $$ int collectionIndex = url.indexOf(collectionName)-->Line_27 $$ collectionIndex += collectionName.length() + 1[ FD ]
Line_12 $$ url = url.substring(0, questionIndex)-->Line_25 $$ if (url.contains(collectionName + CharPool.SLASH)) [ FD ]
Line_27 $$ collectionIndex += collectionName.length() + 1-->Line_28 $$ url = url.substring(0, collectionIndex)[ FD ]
Line_10 $$ if (questionIndex != -1) -->Line_12 $$ url = url.substring(0, questionIndex)[ CD ]
Line_21 $$ String collectionName = CharPool.SLASH + (String) param-->Line_22 $$ if (url.endsWith(collectionName)) [ FD ]
Line_5 $$ url = url.substring(0, url.length() - 1)-->Line_9 $$ int questionIndex = url.indexOf(CharPool.QUESTION)[ FD ]
