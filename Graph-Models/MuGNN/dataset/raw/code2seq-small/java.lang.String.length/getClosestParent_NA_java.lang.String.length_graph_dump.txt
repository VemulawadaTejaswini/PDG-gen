Line_2 $$ private LookupFile getClosestParent(final String typed) -->Line_3 $$ if (typed == null)[ CD ]
Line_16 $$ StringBuilder fullPath = new StringBuilder()-->Line_21 $$ fullPath.append(myFinder.getSeparator())[ FD ]
Line_5 $$ LookupFile lastFound = myFinder.find(typed)-->Line_26 $$ lastFound = file[ FD ]
Line_2 $$ private LookupFile getClosestParent(final String typed) -->Line_6 $$ if (lastFound == null)[ CD ]
Line_2 $$ private LookupFile getClosestParent(final String typed) -->Line_5 $$ LookupFile lastFound = myFinder.find(typed)[ CD ]
Line_18 $$ String each = splits[i]-->Line_19 $$ fullPath.append(each)[ FD ]
Line_23 $$ final LookupFile file = myFinder.find(fullPath.toString())-->Line_26 $$ lastFound = file[ FD ]
Line_24 $$ if (file == null || !file.exists())-->Line_25 $$ return lastFound[ CD ]
Line_17 $$ for (int i = 0; i < splits.length; i++) -->Line_19 $$ fullPath.append(each)[ CD ]
Line_11 $$ if (typed.charAt(typed.length() - 1) != File.separatorChar)-->Line_12 $$ return lastFound.getParent()[ CD ]
Line_5 $$ LookupFile lastFound = myFinder.find(typed)-->Line_6 $$ if (lastFound == null)[ FD ]
Line_5 $$ LookupFile lastFound = myFinder.find(typed)-->Line_8 $$ if (typed.isEmpty())[ FD ]
Line_20 $$ if (i < splits.length - 1) -->Line_21 $$ fullPath.append(myFinder.getSeparator())[ CD ]
Line_16 $$ StringBuilder fullPath = new StringBuilder()-->Line_23 $$ final LookupFile file = myFinder.find(fullPath.toString())[ FD ]
Line_2 $$ private LookupFile getClosestParent(final String typed) -->Line_15 $$ final String[] splits = myFinder.normalize(typed).split(myFileSpitRegExp)[ CD ]
Line_2 $$ private LookupFile getClosestParent(final String typed) -->Line_17 $$ for (int i = 0; i < splits.length; i++) [ CD ]
Line_17 $$ for (int i = 0; i < splits.length; i++) -->Line_20 $$ if (i < splits.length - 1) [ CD ]
Line_2 $$ private LookupFile getClosestParent(final String typed) -->Line_8 $$ if (typed.isEmpty())[ FD ]
Line_2 $$ private LookupFile getClosestParent(final String typed) -->Line_10 $$ if (lastFound.exists()) [ CD ]
Line_10 $$ if (lastFound.exists()) -->Line_13 $$ return lastFound[ CD ]
Line_16 $$ StringBuilder fullPath = new StringBuilder()-->Line_19 $$ fullPath.append(each)[ FD ]
Line_8 $$ if (typed.isEmpty())-->Line_9 $$ return lastFound[ CD ]
Line_6 $$ if (lastFound == null)-->Line_7 $$ return null[ CD ]
Line_17 $$ for (int i = 0; i < splits.length; i++) -->Line_18 $$ String each = splits[i][ CD ]
Line_5 $$ LookupFile lastFound = myFinder.find(typed)-->Line_24 $$ if (file == null || !file.exists())[ FD ]
Line_2 $$ private LookupFile getClosestParent(final String typed) -->Line_16 $$ StringBuilder fullPath = new StringBuilder()[ CD ]
Line_3 $$ if (typed == null)-->Line_4 $$ return null[ CD ]
Line_2 $$ private LookupFile getClosestParent(final String typed) -->Line_5 $$ LookupFile lastFound = myFinder.find(typed)[ FD ]
Line_10 $$ if (lastFound.exists()) -->Line_11 $$ if (typed.charAt(typed.length() - 1) != File.separatorChar)[ CD ]
Line_17 $$ for (int i = 0; i < splits.length; i++) -->Line_23 $$ final LookupFile file = myFinder.find(fullPath.toString())[ CD ]
Line_26 $$ lastFound = file-->Line_24 $$ if (file == null || !file.exists())[ FD ]
Line_2 $$ private LookupFile getClosestParent(final String typed) -->Line_11 $$ if (typed.charAt(typed.length() - 1) != File.separatorChar)[ FD ]
Line_17 $$ for (int i = 0; i < splits.length; i++) -->Line_24 $$ if (file == null || !file.exists())[ CD ]
Line_23 $$ final LookupFile file = myFinder.find(fullPath.toString())-->Line_24 $$ if (file == null || !file.exists())[ FD ]
Line_2 $$ private LookupFile getClosestParent(final String typed) -->Line_3 $$ if (typed == null)[ FD ]
Line_17 $$ for (int i = 0; i < splits.length; i++) -->Line_26 $$ lastFound = file[ CD ]
Line_2 $$ private LookupFile getClosestParent(final String typed) -->Line_28 $$ return lastFound[ CD ]
Line_5 $$ LookupFile lastFound = myFinder.find(typed)-->Line_10 $$ if (lastFound.exists()) [ FD ]
Line_2 $$ private LookupFile getClosestParent(final String typed) -->Line_15 $$ final String[] splits = myFinder.normalize(typed).split(myFileSpitRegExp)[ FD ]
Line_17 $$ for (int i = 0; i < splits.length; i++) -->Line_20 $$ if (i < splits.length - 1) [ FD ]
Line_2 $$ private LookupFile getClosestParent(final String typed) -->Line_8 $$ if (typed.isEmpty())[ CD ]
Line_5 $$ LookupFile lastFound = myFinder.find(typed)-->Line_12 $$ return lastFound.getParent()[ FD ]
