Line_4 $$ long base = 1-->Line_13 $$ base *= 1000 * 1000[ FD ]
Line_2 $$ private static long parseHumanLong(String str) -->Line_21 $$ str = str.substring(0, str.length() - 1)[ FD ]
Line_2 $$ private static long parseHumanLong(String str) -->Line_23 $$ return Long.parseLong(str) * base[ CD ]
Line_2 $$ private static long parseHumanLong(String str) -->Line_4 $$ long base = 1[ CD ]
Line_7 $$ base *= 1000 * 1000 * 1000 * 1000-->Line_13 $$ base *= 1000 * 1000[ FD ]
Line_13 $$ base *= 1000 * 1000-->Line_16 $$ base *= 1000[ FD ]
Line_21 $$ str = str.substring(0, str.length() - 1)-->Line_23 $$ return Long.parseLong(str) * base[ FD ]
Line_10 $$ base *= 1000 * 1000 * 1000-->Line_20 $$ if (base != 1) [ FD ]
Line_7 $$ base *= 1000 * 1000 * 1000 * 1000-->Line_10 $$ base *= 1000 * 1000 * 1000[ FD ]
Line_4 $$ long base = 1-->Line_10 $$ base *= 1000 * 1000 * 1000[ FD ]
Line_10 $$ base *= 1000 * 1000 * 1000-->Line_16 $$ base *= 1000[ FD ]
Line_4 $$ long base = 1-->Line_20 $$ if (base != 1) [ FD ]
Line_13 $$ base *= 1000 * 1000-->Line_20 $$ if (base != 1) [ FD ]
Line_2 $$ private static long parseHumanLong(String str) -->Line_23 $$ return Long.parseLong(str) * base[ FD ]
Line_2 $$ private static long parseHumanLong(String str) -->Line_3 $$ char tail = str.charAt(str.length() - 1)[ CD ]
Line_7 $$ base *= 1000 * 1000 * 1000 * 1000-->Line_20 $$ if (base != 1) [ FD ]
Line_7 $$ base *= 1000 * 1000 * 1000 * 1000-->Line_16 $$ base *= 1000[ FD ]
Line_4 $$ long base = 1-->Line_16 $$ base *= 1000[ FD ]
Line_2 $$ private static long parseHumanLong(String str) -->Line_3 $$ char tail = str.charAt(str.length() - 1)[ FD ]
Line_4 $$ long base = 1-->Line_7 $$ base *= 1000 * 1000 * 1000 * 1000[ FD ]
Line_10 $$ base *= 1000 * 1000 * 1000-->Line_13 $$ base *= 1000 * 1000[ FD ]
Line_20 $$ if (base != 1) -->Line_21 $$ str = str.substring(0, str.length() - 1)[ CD ]
Line_2 $$ private static long parseHumanLong(String str) -->Line_20 $$ if (base != 1) [ CD ]
Line_16 $$ base *= 1000-->Line_20 $$ if (base != 1) [ FD ]
